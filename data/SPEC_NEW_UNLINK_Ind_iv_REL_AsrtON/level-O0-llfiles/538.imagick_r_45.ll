; ModuleID = 'magick/composite.c'
source_filename = "magick/composite.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._GeometryInfo = type { double, double, double, double, double }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._ResampleFilter = type opaque
%struct._SegmentInfo = type { double, double, double, double }
%struct._PointInfo = type { double, double }

@.str = private unnamed_addr constant [19 x i8] c"magick/composite.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Composite/Image\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"compose:args\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"InvalidGeometry\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"'%s' '%s'\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"compose:outside-overlay\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"Texture/Image\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @CompositeImage(%struct._Image* %image, i32 %compose, %struct._Image* %composite_image, i64 %x_offset, i64 %y_offset) #0 !dbg !716 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %compose.addr = alloca i32, align 4
  %composite_image.addr = alloca %struct._Image*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !722, metadata !DIExpression()), !dbg !723
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !724, metadata !DIExpression()), !dbg !725
  store %struct._Image* %composite_image, %struct._Image** %composite_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %composite_image.addr, metadata !726, metadata !DIExpression()), !dbg !727
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !728, metadata !DIExpression()), !dbg !729
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !730, metadata !DIExpression()), !dbg !731
  call void @llvm.dbg.declare(metadata i32* %status, metadata !732, metadata !DIExpression()), !dbg !733
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !734
  %1 = load i32, i32* %compose.addr, align 4, !dbg !735
  %2 = load %struct._Image*, %struct._Image** %composite_image.addr, align 8, !dbg !736
  %3 = load i64, i64* %x_offset.addr, align 8, !dbg !737
  %4 = load i64, i64* %y_offset.addr, align 8, !dbg !738
  %call = call i32 @CompositeImageChannel(%struct._Image* %0, i32 134217719, i32 %1, %struct._Image* %2, i64 %3, i64 %4), !dbg !739
  store i32 %call, i32* %status, align 4, !dbg !740
  %5 = load i32, i32* %status, align 4, !dbg !741
  ret i32 %5, !dbg !742
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @CompositeImageChannel(%struct._Image* %image, i32 %channel, i32 %compose, %struct._Image* %composite, i64 %x_offset, i64 %y_offset) #0 !dbg !743 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %compose.addr = alloca i32, align 4
  %composite.addr = alloca %struct._Image*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %composite_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %value = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %composite_image = alloca %struct._Image*, align 8
  %destination_image = alloca %struct._Image*, align 8
  %clip_to_self = alloca i32, align 4
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %amount = alloca float, align 4
  %destination_dissolve = alloca float, align 4
  %midpoint = alloca float, align 4
  %percent_luma = alloca float, align 4
  %percent_chroma = alloca float, align 4
  %source_dissolve = alloca float, align 4
  %threshold = alloca float, align 4
  %flags = alloca i32, align 4
  %y = alloca i64, align 8
  %sync = alloca i32, align 4
  %composite_indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  %composite_view89 = alloca %struct._CacheView*, align 8
  %destination_view = alloca %struct._CacheView*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %angle_range = alloca float, align 4
  %angle_start = alloca float, align 4
  %height = alloca float, align 4
  %width = alloca float, align 4
  %resample_filter = alloca %struct._ResampleFilter*, align 8
  %blur = alloca %struct._SegmentInfo, align 8
  %angle = alloca float, align 4
  %sync164 = alloca i32, align 4
  %p165 = alloca %struct._PixelPacket*, align 8
  %r = alloca %struct._PixelPacket*, align 8
  %destination_indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %angle207 = alloca float, align 4
  %composite_view285 = alloca %struct._CacheView*, align 8
  %destination_view286 = alloca %struct._CacheView*, align 8
  %image_view287 = alloca %struct._CacheView*, align 8
  %pixel288 = alloca %struct._MagickPixelPacket, align 8
  %horizontal_scale = alloca float, align 4
  %vertical_scale = alloca float, align 4
  %center = alloca %struct._PointInfo, align 8
  %offset = alloca %struct._PointInfo, align 8
  %destination_indexes289 = alloca i16*, align 8
  %r290 = alloca %struct._PixelPacket*, align 8
  %sync491 = alloca i32, align 4
  %p492 = alloca %struct._PixelPacket*, align 8
  %x493 = alloca i64, align 8
  %pixels = alloca %struct._PixelPacket*, align 8
  %luma = alloca double, align 8
  %hue = alloca double, align 8
  %chroma = alloca double, align 8
  %sans = alloca double, align 8
  %composite731 = alloca %struct._MagickPixelPacket, align 8
  %destination = alloca %struct._MagickPixelPacket, align 8
  %source = alloca %struct._MagickPixelPacket, align 8
  %composite_indexes732 = alloca i16*, align 8
  %p733 = alloca %struct._PixelPacket*, align 8
  %indexes734 = alloca i16*, align 8
  %x735 = alloca i64, align 8
  %q736 = alloca %struct._PixelPacket*, align 8
  %offset1056 = alloca i64, align 8
  %proceed1295 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !748, metadata !DIExpression()), !dbg !749
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !750, metadata !DIExpression()), !dbg !751
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !752, metadata !DIExpression()), !dbg !753
  store %struct._Image* %composite, %struct._Image** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %composite.addr, metadata !754, metadata !DIExpression()), !dbg !755
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !756, metadata !DIExpression()), !dbg !757
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !758, metadata !DIExpression()), !dbg !759
  call void @llvm.dbg.declare(metadata %struct._CacheView** %composite_view, metadata !760, metadata !DIExpression()), !dbg !764
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !765, metadata !DIExpression()), !dbg !766
  call void @llvm.dbg.declare(metadata i8** %value, metadata !767, metadata !DIExpression()), !dbg !768
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !769, metadata !DIExpression()), !dbg !771
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !772, metadata !DIExpression()), !dbg !781
  call void @llvm.dbg.declare(metadata %struct._Image** %composite_image, metadata !782, metadata !DIExpression()), !dbg !783
  call void @llvm.dbg.declare(metadata %struct._Image** %destination_image, metadata !784, metadata !DIExpression()), !dbg !785
  call void @llvm.dbg.declare(metadata i32* %clip_to_self, metadata !786, metadata !DIExpression()), !dbg !787
  call void @llvm.dbg.declare(metadata i32* %status, metadata !788, metadata !DIExpression()), !dbg !789
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !790, metadata !DIExpression()), !dbg !791
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !792, metadata !DIExpression()), !dbg !806
  call void @llvm.dbg.declare(metadata float* %amount, metadata !807, metadata !DIExpression()), !dbg !808
  call void @llvm.dbg.declare(metadata float* %destination_dissolve, metadata !809, metadata !DIExpression()), !dbg !810
  call void @llvm.dbg.declare(metadata float* %midpoint, metadata !811, metadata !DIExpression()), !dbg !812
  call void @llvm.dbg.declare(metadata float* %percent_luma, metadata !813, metadata !DIExpression()), !dbg !814
  call void @llvm.dbg.declare(metadata float* %percent_chroma, metadata !815, metadata !DIExpression()), !dbg !816
  call void @llvm.dbg.declare(metadata float* %source_dissolve, metadata !817, metadata !DIExpression()), !dbg !818
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !819, metadata !DIExpression()), !dbg !820
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !821, metadata !DIExpression()), !dbg !823
  call void @llvm.dbg.declare(metadata i64* %y, metadata !824, metadata !DIExpression()), !dbg !825
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !826
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !828
  %1 = load i32, i32* %debug, align 8, !dbg !828
  %cmp = icmp ne i32 %1, 0, !dbg !829
  br i1 %cmp, label %if.then, label %if.end, !dbg !830

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !831
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !832
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !831
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1685, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !833
  br label %if.end, !dbg !834

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !835
  %call1 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !837
  %cmp2 = icmp eq i32 %call1, 0, !dbg !838
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !839

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !840
  br label %return, !dbg !840

if.end4:                                          ; preds = %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !841
  %exception5 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 58, !dbg !842
  store %struct._ExceptionInfo* %exception5, %struct._ExceptionInfo** %exception, align 8, !dbg !843
  %5 = load %struct._Image*, %struct._Image** %composite.addr, align 8, !dbg !844
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !845
  %call6 = call %struct._Image* @CloneImage(%struct._Image* %5, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %6), !dbg !846
  store %struct._Image* %call6, %struct._Image** %composite_image, align 8, !dbg !847
  %7 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !848
  %cmp7 = icmp eq %struct._Image* %7, null, !dbg !850
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !851

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !852
  br label %return, !dbg !852

if.end9:                                          ; preds = %if.end4
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !853
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 1, !dbg !855
  %9 = load i32, i32* %colorspace, align 4, !dbg !855
  %call10 = call i32 @IsGrayColorspace(i32 %9), !dbg !856
  %cmp11 = icmp ne i32 %call10, 0, !dbg !857
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !858

if.then12:                                        ; preds = %if.end9
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !859
  %call13 = call i32 @SetImageColorspace(%struct._Image* %10, i32 13), !dbg !860
  br label %if.end14, !dbg !861

if.end14:                                         ; preds = %if.then12, %if.end9
  %11 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !862
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !863
  %colorspace15 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !864
  %13 = load i32, i32* %colorspace15, align 4, !dbg !864
  %call16 = call i32 @SetImageColorspace(%struct._Image* %11, i32 %13), !dbg !865
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !866
  call void @GetMagickPixelPacket(%struct._Image* %14, %struct._MagickPixelPacket* %zero), !dbg !867
  store %struct._Image* null, %struct._Image** %destination_image, align 8, !dbg !868
  store float 5.000000e-01, float* %amount, align 4, !dbg !869
  store float 1.000000e+00, float* %destination_dissolve, align 4, !dbg !870
  store i32 1, i32* %clip_to_self, align 4, !dbg !871
  store float 1.000000e+02, float* %percent_luma, align 4, !dbg !872
  store float 1.000000e+02, float* %percent_chroma, align 4, !dbg !873
  store float 1.000000e+00, float* %source_dissolve, align 4, !dbg !874
  store float 0x3FA99999A0000000, float* %threshold, align 4, !dbg !875
  %15 = load i32, i32* %compose.addr, align 4, !dbg !876
  switch i32 %15, label %sw.default [
    i32 7, label %sw.bb
    i32 48, label %sw.bb
    i32 32, label %sw.bb
    i32 49, label %sw.bb
    i32 39, label %sw.bb
    i32 50, label %sw.bb
    i32 23, label %sw.bb
    i32 21, label %sw.bb
    i32 40, label %sw.bb17
    i32 13, label %sw.bb25
    i32 17, label %sw.bb82
    i32 6, label %sw.bb82
    i32 57, label %sw.bb88
    i32 27, label %sw.bb284
    i32 56, label %sw.bb284
    i32 28, label %sw.bb598
    i32 4, label %sw.bb643
    i32 63, label %sw.bb670
    i32 37, label %sw.bb677
    i32 53, label %sw.bb693
  ], !dbg !877

sw.bb:                                            ; preds = %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14, %if.end14
  store i32 0, i32* %clip_to_self, align 4, !dbg !878
  br label %sw.epilog, !dbg !881

sw.bb17:                                          ; preds = %if.end14
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !882
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !885
  %17 = load i32, i32* %matte, align 8, !dbg !885
  %cmp18 = icmp ne i32 %17, 0, !dbg !886
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !887

if.then19:                                        ; preds = %sw.bb17
  br label %sw.epilog, !dbg !888

if.end20:                                         ; preds = %sw.bb17
  %18 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !889
  %matte21 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 6, !dbg !891
  %19 = load i32, i32* %matte21, align 8, !dbg !891
  %cmp22 = icmp ne i32 %19, 0, !dbg !892
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !893

if.then23:                                        ; preds = %if.end20
  br label %sw.epilog, !dbg !894

if.end24:                                         ; preds = %if.end20
  br label %sw.bb25, !dbg !895

sw.bb25:                                          ; preds = %if.end14, %if.end24
  %20 = load i64, i64* %x_offset.addr, align 8, !dbg !896
  %cmp26 = icmp slt i64 %20, 0, !dbg !899
  br i1 %cmp26, label %if.then28, label %lor.lhs.false, !dbg !900

lor.lhs.false:                                    ; preds = %sw.bb25
  %21 = load i64, i64* %y_offset.addr, align 8, !dbg !901
  %cmp27 = icmp slt i64 %21, 0, !dbg !902
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !903

if.then28:                                        ; preds = %lor.lhs.false, %sw.bb25
  br label %sw.epilog, !dbg !904

if.end29:                                         ; preds = %lor.lhs.false
  %22 = load i64, i64* %x_offset.addr, align 8, !dbg !905
  %23 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !907
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !908
  %24 = load i64, i64* %columns, align 8, !dbg !908
  %add = add nsw i64 %22, %24, !dbg !909
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !910
  %columns30 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 7, !dbg !911
  %26 = load i64, i64* %columns30, align 8, !dbg !911
  %cmp31 = icmp sge i64 %add, %26, !dbg !912
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !913

if.then32:                                        ; preds = %if.end29
  br label %sw.epilog, !dbg !914

if.end33:                                         ; preds = %if.end29
  %27 = load i64, i64* %y_offset.addr, align 8, !dbg !915
  %28 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !917
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 8, !dbg !918
  %29 = load i64, i64* %rows, align 8, !dbg !918
  %add34 = add nsw i64 %27, %29, !dbg !919
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !920
  %rows35 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !921
  %31 = load i64, i64* %rows35, align 8, !dbg !921
  %cmp36 = icmp sge i64 %add34, %31, !dbg !922
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !923

if.then37:                                        ; preds = %if.end33
  br label %sw.epilog, !dbg !924

if.end38:                                         ; preds = %if.end33
  store i32 1, i32* %status, align 4, !dbg !925
  %32 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !926
  %33 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !927
  %call39 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %32, %struct._ExceptionInfo* %33), !dbg !928
  store %struct._CacheView* %call39, %struct._CacheView** %composite_view, align 8, !dbg !929
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !930
  %35 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !931
  %call40 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %34, %struct._ExceptionInfo* %35), !dbg !932
  store %struct._CacheView* %call40, %struct._CacheView** %image_view, align 8, !dbg !933
  store i64 0, i64* %y, align 8, !dbg !934
  br label %for.cond, !dbg !936

for.cond:                                         ; preds = %for.inc, %if.end38
  %36 = load i64, i64* %y, align 8, !dbg !937
  %37 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !939
  %rows41 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 8, !dbg !940
  %38 = load i64, i64* %rows41, align 8, !dbg !940
  %cmp42 = icmp slt i64 %36, %38, !dbg !941
  br i1 %cmp42, label %for.body, label %for.end, !dbg !942

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !943, metadata !DIExpression()), !dbg !945
  call void @llvm.dbg.declare(metadata i16** %composite_indexes, metadata !946, metadata !DIExpression()), !dbg !947
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !948, metadata !DIExpression()), !dbg !949
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !950, metadata !DIExpression()), !dbg !951
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !952, metadata !DIExpression()), !dbg !953
  %39 = load i32, i32* %status, align 4, !dbg !954
  %cmp43 = icmp eq i32 %39, 0, !dbg !956
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !957

if.then44:                                        ; preds = %for.body
  br label %for.inc, !dbg !958

if.end45:                                         ; preds = %for.body
  %40 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !959
  %41 = load i64, i64* %y, align 8, !dbg !960
  %42 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !961
  %columns46 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 7, !dbg !962
  %43 = load i64, i64* %columns46, align 8, !dbg !962
  %44 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !963
  %call47 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %40, i64 0, i64 %41, i64 %43, i64 1, %struct._ExceptionInfo* %44), !dbg !964
  store %struct._PixelPacket* %call47, %struct._PixelPacket** %p, align 8, !dbg !965
  %45 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !966
  %46 = load i64, i64* %x_offset.addr, align 8, !dbg !967
  %47 = load i64, i64* %y, align 8, !dbg !968
  %48 = load i64, i64* %y_offset.addr, align 8, !dbg !969
  %add48 = add nsw i64 %47, %48, !dbg !970
  %49 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !971
  %columns49 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 7, !dbg !972
  %50 = load i64, i64* %columns49, align 8, !dbg !972
  %51 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !973
  %call50 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %45, i64 %46, i64 %add48, i64 %50, i64 1, %struct._ExceptionInfo* %51), !dbg !974
  store %struct._PixelPacket* %call50, %struct._PixelPacket** %q, align 8, !dbg !975
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !976
  %cmp51 = icmp eq %struct._PixelPacket* %52, null, !dbg !978
  br i1 %cmp51, label %if.then54, label %lor.lhs.false52, !dbg !979

lor.lhs.false52:                                  ; preds = %if.end45
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !980
  %cmp53 = icmp eq %struct._PixelPacket* %53, null, !dbg !981
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !982

if.then54:                                        ; preds = %lor.lhs.false52, %if.end45
  store i32 0, i32* %status, align 4, !dbg !983
  br label %for.inc, !dbg !985

if.end55:                                         ; preds = %lor.lhs.false52
  %54 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !986
  %call56 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %54), !dbg !987
  store i16* %call56, i16** %composite_indexes, align 8, !dbg !988
  %55 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !989
  %call57 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %55), !dbg !990
  store i16* %call57, i16** %indexes, align 8, !dbg !991
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !992
  %57 = bitcast %struct._PixelPacket* %56 to i8*, !dbg !992
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !993
  %59 = bitcast %struct._PixelPacket* %58 to i8*, !dbg !993
  %60 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !994
  %columns58 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 7, !dbg !995
  %61 = load i64, i64* %columns58, align 8, !dbg !995
  %mul = mul i64 %61, 8, !dbg !996
  %call59 = call i8* @CopyMagickMemory(i8* %57, i8* %59, i64 %mul), !dbg !997
  %62 = load i16*, i16** %indexes, align 8, !dbg !998
  %cmp60 = icmp ne i16* %62, null, !dbg !1000
  br i1 %cmp60, label %land.lhs.true, label %if.end66, !dbg !1001

land.lhs.true:                                    ; preds = %if.end55
  %63 = load i16*, i16** %composite_indexes, align 8, !dbg !1002
  %cmp61 = icmp ne i16* %63, null, !dbg !1003
  br i1 %cmp61, label %if.then62, label %if.end66, !dbg !1004

if.then62:                                        ; preds = %land.lhs.true
  %64 = load i16*, i16** %indexes, align 8, !dbg !1005
  %65 = bitcast i16* %64 to i8*, !dbg !1005
  %66 = load i16*, i16** %composite_indexes, align 8, !dbg !1006
  %67 = bitcast i16* %66 to i8*, !dbg !1006
  %68 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1007
  %columns63 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 7, !dbg !1008
  %69 = load i64, i64* %columns63, align 8, !dbg !1008
  %mul64 = mul i64 %69, 2, !dbg !1009
  %call65 = call i8* @CopyMagickMemory(i8* %65, i8* %67, i64 %mul64), !dbg !1010
  br label %if.end66, !dbg !1011

if.end66:                                         ; preds = %if.then62, %land.lhs.true, %if.end55
  %70 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1012
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1013
  %call67 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %70, %struct._ExceptionInfo* %71), !dbg !1014
  store i32 %call67, i32* %sync, align 4, !dbg !1015
  %72 = load i32, i32* %sync, align 4, !dbg !1016
  %cmp68 = icmp eq i32 %72, 0, !dbg !1018
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !1019

if.then69:                                        ; preds = %if.end66
  store i32 0, i32* %status, align 4, !dbg !1020
  br label %if.end70, !dbg !1021

if.end70:                                         ; preds = %if.then69, %if.end66
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1022
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 47, !dbg !1024
  %74 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1024
  %cmp71 = icmp ne i32 (i8*, i64, i64, i8*)* %74, null, !dbg !1025
  br i1 %cmp71, label %if.then72, label %if.end78, !dbg !1026

if.then72:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1027, metadata !DIExpression()), !dbg !1029
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1030
  %76 = load i64, i64* %y, align 8, !dbg !1031
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1032
  %rows73 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 8, !dbg !1033
  %78 = load i64, i64* %rows73, align 8, !dbg !1033
  %call74 = call i32 @SetImageProgress(%struct._Image* %75, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 %76, i64 %78), !dbg !1034
  store i32 %call74, i32* %proceed, align 4, !dbg !1035
  %79 = load i32, i32* %proceed, align 4, !dbg !1036
  %cmp75 = icmp eq i32 %79, 0, !dbg !1038
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !1039

if.then76:                                        ; preds = %if.then72
  store i32 0, i32* %status, align 4, !dbg !1040
  br label %if.end77, !dbg !1041

if.end77:                                         ; preds = %if.then76, %if.then72
  br label %if.end78, !dbg !1042

if.end78:                                         ; preds = %if.end77, %if.end70
  br label %for.inc, !dbg !1043

for.inc:                                          ; preds = %if.end78, %if.then54, %if.then44
  %80 = load i64, i64* %y, align 8, !dbg !1044
  %inc = add nsw i64 %80, 1, !dbg !1044
  store i64 %inc, i64* %y, align 8, !dbg !1044
  br label %for.cond, !dbg !1045, !llvm.loop !1046

for.end:                                          ; preds = %for.cond
  %81 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !1048
  %call79 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %81), !dbg !1049
  store %struct._CacheView* %call79, %struct._CacheView** %composite_view, align 8, !dbg !1050
  %82 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1051
  %call80 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %82), !dbg !1052
  store %struct._CacheView* %call80, %struct._CacheView** %image_view, align 8, !dbg !1053
  %83 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1054
  %call81 = call %struct._Image* @DestroyImage(%struct._Image* %83), !dbg !1055
  store %struct._Image* %call81, %struct._Image** %composite_image, align 8, !dbg !1056
  %84 = load i32, i32* %status, align 4, !dbg !1057
  store i32 %84, i32* %retval, align 4, !dbg !1058
  br label %return, !dbg !1058

sw.bb82:                                          ; preds = %if.end14, %if.end14
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1059
  %matte83 = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 6, !dbg !1062
  %86 = load i32, i32* %matte83, align 8, !dbg !1062
  %cmp84 = icmp eq i32 %86, 0, !dbg !1063
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !1064

if.then85:                                        ; preds = %sw.bb82
  %87 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1065
  %call86 = call i32 @SetImageAlphaChannel(%struct._Image* %87, i32 6), !dbg !1066
  br label %if.end87, !dbg !1067

if.end87:                                         ; preds = %if.then85, %sw.bb82
  store i32 0, i32* %clip_to_self, align 4, !dbg !1068
  br label %sw.epilog, !dbg !1069

sw.bb88:                                          ; preds = %if.end14
  call void @llvm.dbg.declare(metadata %struct._CacheView** %composite_view89, metadata !1070, metadata !DIExpression()), !dbg !1072
  call void @llvm.dbg.declare(metadata %struct._CacheView** %destination_view, metadata !1073, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata float* %angle_range, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata float* %angle_start, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata float* %height, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata float* %width, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata %struct._ResampleFilter** %resample_filter, metadata !1085, metadata !DIExpression()), !dbg !1089
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %blur, metadata !1090, metadata !DIExpression()), !dbg !1098
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1099
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1100
  %columns90 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 7, !dbg !1101
  %90 = load i64, i64* %columns90, align 8, !dbg !1101
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1102
  %rows91 = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 8, !dbg !1103
  %92 = load i64, i64* %rows91, align 8, !dbg !1103
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1104
  %call92 = call %struct._Image* @CloneImage(%struct._Image* %88, i64 %90, i64 %92, i32 1, %struct._ExceptionInfo* %93), !dbg !1105
  store %struct._Image* %call92, %struct._Image** %destination_image, align 8, !dbg !1106
  %94 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1107
  %cmp93 = icmp eq %struct._Image* %94, null, !dbg !1109
  br i1 %cmp93, label %if.then94, label %if.end96, !dbg !1110

if.then94:                                        ; preds = %sw.bb88
  %95 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1111
  %call95 = call %struct._Image* @DestroyImage(%struct._Image* %95), !dbg !1113
  store %struct._Image* %call95, %struct._Image** %composite_image, align 8, !dbg !1114
  store i32 0, i32* %retval, align 4, !dbg !1115
  br label %return, !dbg !1115

if.end96:                                         ; preds = %sw.bb88
  call void @SetGeometryInfo(%struct._GeometryInfo* %geometry_info), !dbg !1116
  store i32 0, i32* %flags, align 4, !dbg !1117
  %96 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1118
  %call97 = call i8* @GetImageArtifact(%struct._Image* %96, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1119
  store i8* %call97, i8** %value, align 8, !dbg !1120
  %97 = load i8*, i8** %value, align 8, !dbg !1121
  %cmp98 = icmp ne i8* %97, null, !dbg !1123
  br i1 %cmp98, label %if.then99, label %if.end101, !dbg !1124

if.then99:                                        ; preds = %if.end96
  %98 = load i8*, i8** %value, align 8, !dbg !1125
  %call100 = call i32 @ParseGeometry(i8* %98, %struct._GeometryInfo* %geometry_info), !dbg !1126
  store i32 %call100, i32* %flags, align 4, !dbg !1127
  br label %if.end101, !dbg !1128

if.end101:                                        ; preds = %if.then99, %if.end96
  %99 = load i32, i32* %flags, align 4, !dbg !1129
  %and = and i32 %99, 4, !dbg !1131
  %cmp102 = icmp eq i32 %and, 0, !dbg !1132
  br i1 %cmp102, label %if.then103, label %if.end107, !dbg !1133

if.then103:                                       ; preds = %if.end101
  %100 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1134
  %101 = load i8*, i8** %value, align 8, !dbg !1136
  %call104 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %100, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1857, i32 310, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* %101), !dbg !1137
  %102 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1138
  %call105 = call %struct._Image* @DestroyImage(%struct._Image* %102), !dbg !1139
  store %struct._Image* %call105, %struct._Image** %composite_image, align 8, !dbg !1140
  %103 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1141
  %call106 = call %struct._Image* @DestroyImage(%struct._Image* %103), !dbg !1142
  store %struct._Image* %call106, %struct._Image** %destination_image, align 8, !dbg !1143
  store i32 0, i32* %retval, align 4, !dbg !1144
  br label %return, !dbg !1144

if.end107:                                        ; preds = %if.end101
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !1145
  %104 = load double, double* %rho, align 8, !dbg !1145
  %mul108 = fmul double %104, 2.000000e+00, !dbg !1146
  %conv = fptrunc double %mul108 to float, !dbg !1147
  store float %conv, float* %height, align 4, !dbg !1148
  store float %conv, float* %width, align 4, !dbg !1149
  %105 = load i32, i32* %flags, align 4, !dbg !1150
  %and109 = and i32 %105, 8, !dbg !1152
  %cmp110 = icmp ne i32 %and109, 0, !dbg !1153
  br i1 %cmp110, label %if.then112, label %if.end115, !dbg !1154

if.then112:                                       ; preds = %if.end107
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !1155
  %106 = load double, double* %sigma, align 8, !dbg !1155
  %mul113 = fmul double %106, 2.000000e+00, !dbg !1156
  %conv114 = fptrunc double %mul113 to float, !dbg !1157
  store float %conv114, float* %height, align 4, !dbg !1158
  br label %if.end115, !dbg !1159

if.end115:                                        ; preds = %if.then112, %if.end107
  %107 = load float, float* %width, align 4, !dbg !1160
  %conv116 = fpext float %107 to double, !dbg !1160
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 0, !dbg !1161
  store double %conv116, double* %x1, align 8, !dbg !1162
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 2, !dbg !1163
  store double 0.000000e+00, double* %x2, align 8, !dbg !1164
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 1, !dbg !1165
  store double 0.000000e+00, double* %y1, align 8, !dbg !1166
  %108 = load float, float* %height, align 4, !dbg !1167
  %conv117 = fpext float %108 to double, !dbg !1167
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 3, !dbg !1168
  store double %conv117, double* %y2, align 8, !dbg !1169
  %109 = load i32, i32* %flags, align 4, !dbg !1170
  %and118 = and i32 %109, 1, !dbg !1172
  %cmp119 = icmp ne i32 %and118, 0, !dbg !1173
  br i1 %cmp119, label %if.then121, label %if.end144, !dbg !1174

if.then121:                                       ; preds = %if.end115
  call void @llvm.dbg.declare(metadata float* %angle, metadata !1175, metadata !DIExpression()), !dbg !1177
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !1178
  %110 = load double, double* %xi, align 8, !dbg !1178
  %call122 = call double @DegreesToRadians(double %110), !dbg !1179
  %conv123 = fptrunc double %call122 to float, !dbg !1179
  store float %conv123, float* %angle, align 4, !dbg !1180
  %111 = load float, float* %width, align 4, !dbg !1181
  %conv124 = fpext float %111 to double, !dbg !1181
  %112 = load float, float* %angle, align 4, !dbg !1182
  %conv125 = fpext float %112 to double, !dbg !1182
  %call126 = call double @cos(double %conv125) #5, !dbg !1183
  %mul127 = fmul double %conv124, %call126, !dbg !1184
  %x1128 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 0, !dbg !1185
  store double %mul127, double* %x1128, align 8, !dbg !1186
  %113 = load float, float* %width, align 4, !dbg !1187
  %conv129 = fpext float %113 to double, !dbg !1187
  %114 = load float, float* %angle, align 4, !dbg !1188
  %conv130 = fpext float %114 to double, !dbg !1188
  %call131 = call double @sin(double %conv130) #5, !dbg !1189
  %mul132 = fmul double %conv129, %call131, !dbg !1190
  %x2133 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 2, !dbg !1191
  store double %mul132, double* %x2133, align 8, !dbg !1192
  %115 = load float, float* %height, align 4, !dbg !1193
  %fneg = fneg float %115, !dbg !1194
  %conv134 = fpext float %fneg to double, !dbg !1194
  %116 = load float, float* %angle, align 4, !dbg !1195
  %conv135 = fpext float %116 to double, !dbg !1195
  %call136 = call double @sin(double %conv135) #5, !dbg !1196
  %mul137 = fmul double %conv134, %call136, !dbg !1197
  %y1138 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 1, !dbg !1198
  store double %mul137, double* %y1138, align 8, !dbg !1199
  %117 = load float, float* %height, align 4, !dbg !1200
  %conv139 = fpext float %117 to double, !dbg !1200
  %118 = load float, float* %angle, align 4, !dbg !1201
  %conv140 = fpext float %118 to double, !dbg !1201
  %call141 = call double @cos(double %conv140) #5, !dbg !1202
  %mul142 = fmul double %conv139, %call141, !dbg !1203
  %y2143 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 3, !dbg !1204
  store double %mul142, double* %y2143, align 8, !dbg !1205
  br label %if.end144, !dbg !1206

if.end144:                                        ; preds = %if.then121, %if.end115
  store float 0.000000e+00, float* %angle_start, align 4, !dbg !1207
  store float 0.000000e+00, float* %angle_range, align 4, !dbg !1208
  %119 = load i32, i32* %flags, align 4, !dbg !1209
  %and145 = and i32 %119, 2, !dbg !1211
  %cmp146 = icmp ne i32 %and145, 0, !dbg !1212
  br i1 %cmp146, label %if.then148, label %if.end155, !dbg !1213

if.then148:                                       ; preds = %if.end144
  %xi149 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !1214
  %120 = load double, double* %xi149, align 8, !dbg !1214
  %call150 = call double @DegreesToRadians(double %120), !dbg !1216
  %conv151 = fptrunc double %call150 to float, !dbg !1216
  store float %conv151, float* %angle_start, align 4, !dbg !1217
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !1218
  %121 = load double, double* %psi, align 8, !dbg !1218
  %call152 = call double @DegreesToRadians(double %121), !dbg !1219
  %122 = load float, float* %angle_start, align 4, !dbg !1220
  %conv153 = fpext float %122 to double, !dbg !1220
  %sub = fsub double %call152, %conv153, !dbg !1221
  %conv154 = fptrunc double %sub to float, !dbg !1219
  store float %conv154, float* %angle_range, align 4, !dbg !1222
  br label %if.end155, !dbg !1223

if.end155:                                        ; preds = %if.then148, %if.end144
  %123 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1224
  %124 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1225
  %call156 = call %struct._ResampleFilter* @AcquireResampleFilter(%struct._Image* %123, %struct._ExceptionInfo* %124), !dbg !1226
  store %struct._ResampleFilter* %call156, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1227
  %125 = load %struct._ResampleFilter*, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1228
  call void @SetResampleFilter(%struct._ResampleFilter* %125, i32 8, double 1.000000e+00), !dbg !1229
  %126 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !1230
  %127 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !1230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 56, i1 false), !dbg !1230
  %128 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1231
  %129 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1232
  %call157 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %128, %struct._ExceptionInfo* %129), !dbg !1233
  store %struct._CacheView* %call157, %struct._CacheView** %composite_view89, align 8, !dbg !1234
  %130 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1235
  %131 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1236
  %call158 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %130, %struct._ExceptionInfo* %131), !dbg !1237
  store %struct._CacheView* %call158, %struct._CacheView** %destination_view, align 8, !dbg !1238
  store i64 0, i64* %y, align 8, !dbg !1239
  br label %for.cond159, !dbg !1241

for.cond159:                                      ; preds = %for.inc277, %if.end155
  %132 = load i64, i64* %y, align 8, !dbg !1242
  %133 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1244
  %rows160 = getelementptr inbounds %struct._Image, %struct._Image* %133, i32 0, i32 8, !dbg !1245
  %134 = load i64, i64* %rows160, align 8, !dbg !1245
  %cmp161 = icmp slt i64 %132, %134, !dbg !1246
  br i1 %cmp161, label %for.body163, label %for.end279, !dbg !1247

for.body163:                                      ; preds = %for.cond159
  call void @llvm.dbg.declare(metadata i32* %sync164, metadata !1248, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p165, metadata !1251, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r, metadata !1254, metadata !DIExpression()), !dbg !1256
  call void @llvm.dbg.declare(metadata i16** %destination_indexes, metadata !1257, metadata !DIExpression()), !dbg !1259
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1260, metadata !DIExpression()), !dbg !1261
  %135 = load i64, i64* %y, align 8, !dbg !1262
  %136 = load i64, i64* %y_offset.addr, align 8, !dbg !1264
  %add166 = add nsw i64 %135, %136, !dbg !1265
  %cmp167 = icmp slt i64 %add166, 0, !dbg !1266
  br i1 %cmp167, label %if.then174, label %lor.lhs.false169, !dbg !1267

lor.lhs.false169:                                 ; preds = %for.body163
  %137 = load i64, i64* %y, align 8, !dbg !1268
  %138 = load i64, i64* %y_offset.addr, align 8, !dbg !1269
  %add170 = add nsw i64 %137, %138, !dbg !1270
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1271
  %rows171 = getelementptr inbounds %struct._Image, %struct._Image* %139, i32 0, i32 8, !dbg !1272
  %140 = load i64, i64* %rows171, align 8, !dbg !1272
  %cmp172 = icmp sge i64 %add170, %140, !dbg !1273
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !1274

if.then174:                                       ; preds = %lor.lhs.false169, %for.body163
  br label %for.inc277, !dbg !1275

if.end175:                                        ; preds = %lor.lhs.false169
  %141 = load %struct._CacheView*, %struct._CacheView** %composite_view89, align 8, !dbg !1276
  %142 = load i64, i64* %y, align 8, !dbg !1277
  %143 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1278
  %columns176 = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 7, !dbg !1279
  %144 = load i64, i64* %columns176, align 8, !dbg !1279
  %145 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1280
  %call177 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %141, i64 0, i64 %142, i64 %144, i64 1, %struct._ExceptionInfo* %145), !dbg !1281
  store %struct._PixelPacket* %call177, %struct._PixelPacket** %p165, align 8, !dbg !1282
  %146 = load %struct._CacheView*, %struct._CacheView** %destination_view, align 8, !dbg !1283
  %147 = load i64, i64* %y, align 8, !dbg !1284
  %148 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1285
  %columns178 = getelementptr inbounds %struct._Image, %struct._Image* %148, i32 0, i32 7, !dbg !1286
  %149 = load i64, i64* %columns178, align 8, !dbg !1286
  %150 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1287
  %call179 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %146, i64 0, i64 %147, i64 %149, i64 1, %struct._ExceptionInfo* %150), !dbg !1288
  store %struct._PixelPacket* %call179, %struct._PixelPacket** %r, align 8, !dbg !1289
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1290
  %cmp180 = icmp eq %struct._PixelPacket* %151, null, !dbg !1292
  br i1 %cmp180, label %if.then185, label %lor.lhs.false182, !dbg !1293

lor.lhs.false182:                                 ; preds = %if.end175
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !1294
  %cmp183 = icmp eq %struct._PixelPacket* %152, null, !dbg !1295
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !1296

if.then185:                                       ; preds = %lor.lhs.false182, %if.end175
  br label %for.end279, !dbg !1297

if.end186:                                        ; preds = %lor.lhs.false182
  %153 = load %struct._CacheView*, %struct._CacheView** %destination_view, align 8, !dbg !1298
  %call187 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %153), !dbg !1299
  store i16* %call187, i16** %destination_indexes, align 8, !dbg !1300
  store i64 0, i64* %x, align 8, !dbg !1301
  br label %for.cond188, !dbg !1303

for.cond188:                                      ; preds = %for.inc269, %if.end186
  %154 = load i64, i64* %x, align 8, !dbg !1304
  %155 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1306
  %columns189 = getelementptr inbounds %struct._Image, %struct._Image* %155, i32 0, i32 7, !dbg !1307
  %156 = load i64, i64* %columns189, align 8, !dbg !1307
  %cmp190 = icmp slt i64 %154, %156, !dbg !1308
  br i1 %cmp190, label %for.body192, label %for.end271, !dbg !1309

for.body192:                                      ; preds = %for.cond188
  %157 = load i64, i64* %x_offset.addr, align 8, !dbg !1310
  %158 = load i64, i64* %x, align 8, !dbg !1313
  %add193 = add nsw i64 %157, %158, !dbg !1314
  %cmp194 = icmp slt i64 %add193, 0, !dbg !1315
  br i1 %cmp194, label %if.then201, label %lor.lhs.false196, !dbg !1316

lor.lhs.false196:                                 ; preds = %for.body192
  %159 = load i64, i64* %x_offset.addr, align 8, !dbg !1317
  %160 = load i64, i64* %x, align 8, !dbg !1318
  %add197 = add nsw i64 %159, %160, !dbg !1319
  %161 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1320
  %columns198 = getelementptr inbounds %struct._Image, %struct._Image* %161, i32 0, i32 7, !dbg !1321
  %162 = load i64, i64* %columns198, align 8, !dbg !1321
  %cmp199 = icmp sge i64 %add197, %162, !dbg !1322
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !1323

if.then201:                                       ; preds = %lor.lhs.false196, %for.body192
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1324
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 1, !dbg !1324
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p165, align 8, !dbg !1324
  br label %for.inc269, !dbg !1326

if.end202:                                        ; preds = %lor.lhs.false196
  %164 = load float, float* %angle_range, align 4, !dbg !1327
  %conv203 = fpext float %164 to double, !dbg !1327
  %165 = call double @llvm.fabs.f64(double %conv203), !dbg !1329
  %cmp204 = fcmp ogt double %165, 1.000000e-15, !dbg !1330
  br i1 %cmp204, label %if.then206, label %if.end237, !dbg !1331

if.then206:                                       ; preds = %if.end202
  call void @llvm.dbg.declare(metadata float* %angle207, metadata !1332, metadata !DIExpression()), !dbg !1334
  %166 = load float, float* %angle_start, align 4, !dbg !1335
  %conv208 = fpext float %166 to double, !dbg !1335
  %167 = load float, float* %angle_range, align 4, !dbg !1336
  %conv209 = fpext float %167 to double, !dbg !1336
  %mul210 = fmul double %conv209, 0x3EF0001000100010, !dbg !1337
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1338
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !1338
  %169 = load i16, i16* %blue, align 2, !dbg !1338
  %conv211 = zext i16 %169 to i32, !dbg !1338
  %conv212 = sitofp i32 %conv211 to double, !dbg !1338
  %mul213 = fmul double %mul210, %conv212, !dbg !1339
  %add214 = fadd double %conv208, %mul213, !dbg !1340
  %conv215 = fptrunc double %add214 to float, !dbg !1335
  store float %conv215, float* %angle207, align 4, !dbg !1341
  %170 = load float, float* %width, align 4, !dbg !1342
  %conv216 = fpext float %170 to double, !dbg !1342
  %171 = load float, float* %angle207, align 4, !dbg !1343
  %conv217 = fpext float %171 to double, !dbg !1343
  %call218 = call double @cos(double %conv217) #5, !dbg !1344
  %mul219 = fmul double %conv216, %call218, !dbg !1345
  %x1220 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 0, !dbg !1346
  store double %mul219, double* %x1220, align 8, !dbg !1347
  %172 = load float, float* %width, align 4, !dbg !1348
  %conv221 = fpext float %172 to double, !dbg !1348
  %173 = load float, float* %angle207, align 4, !dbg !1349
  %conv222 = fpext float %173 to double, !dbg !1349
  %call223 = call double @sin(double %conv222) #5, !dbg !1350
  %mul224 = fmul double %conv221, %call223, !dbg !1351
  %x2225 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 2, !dbg !1352
  store double %mul224, double* %x2225, align 8, !dbg !1353
  %174 = load float, float* %height, align 4, !dbg !1354
  %fneg226 = fneg float %174, !dbg !1355
  %conv227 = fpext float %fneg226 to double, !dbg !1355
  %175 = load float, float* %angle207, align 4, !dbg !1356
  %conv228 = fpext float %175 to double, !dbg !1356
  %call229 = call double @sin(double %conv228) #5, !dbg !1357
  %mul230 = fmul double %conv227, %call229, !dbg !1358
  %y1231 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 1, !dbg !1359
  store double %mul230, double* %y1231, align 8, !dbg !1360
  %176 = load float, float* %height, align 4, !dbg !1361
  %conv232 = fpext float %176 to double, !dbg !1361
  %177 = load float, float* %angle207, align 4, !dbg !1362
  %conv233 = fpext float %177 to double, !dbg !1362
  %call234 = call double @cos(double %conv233) #5, !dbg !1363
  %mul235 = fmul double %conv232, %call234, !dbg !1364
  %y2236 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 3, !dbg !1365
  store double %mul235, double* %y2236, align 8, !dbg !1366
  br label %if.end237, !dbg !1367

if.end237:                                        ; preds = %if.then206, %if.end202
  %178 = load %struct._ResampleFilter*, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1368
  %x1238 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 0, !dbg !1369
  %179 = load double, double* %x1238, align 8, !dbg !1369
  %mul239 = fmul double %179, 0x3EF0001000100010, !dbg !1370
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1371
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !1371
  %181 = load i16, i16* %red, align 2, !dbg !1371
  %conv240 = zext i16 %181 to i32, !dbg !1371
  %conv241 = sitofp i32 %conv240 to double, !dbg !1371
  %mul242 = fmul double %mul239, %conv241, !dbg !1372
  %y1243 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 1, !dbg !1373
  %182 = load double, double* %y1243, align 8, !dbg !1373
  %mul244 = fmul double %182, 0x3EF0001000100010, !dbg !1374
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1375
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !1375
  %184 = load i16, i16* %green, align 2, !dbg !1375
  %conv245 = zext i16 %184 to i32, !dbg !1375
  %conv246 = sitofp i32 %conv245 to double, !dbg !1375
  %mul247 = fmul double %mul244, %conv246, !dbg !1376
  %x2248 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 2, !dbg !1377
  %185 = load double, double* %x2248, align 8, !dbg !1377
  %mul249 = fmul double %185, 0x3EF0001000100010, !dbg !1378
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1379
  %red250 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 2, !dbg !1379
  %187 = load i16, i16* %red250, align 2, !dbg !1379
  %conv251 = zext i16 %187 to i32, !dbg !1379
  %conv252 = sitofp i32 %conv251 to double, !dbg !1379
  %mul253 = fmul double %mul249, %conv252, !dbg !1380
  %y2254 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %blur, i32 0, i32 3, !dbg !1381
  %188 = load double, double* %y2254, align 8, !dbg !1381
  %mul255 = fmul double %188, 0x3EF0001000100010, !dbg !1382
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1383
  %green256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 1, !dbg !1383
  %190 = load i16, i16* %green256, align 2, !dbg !1383
  %conv257 = zext i16 %190 to i32, !dbg !1383
  %conv258 = sitofp i32 %conv257 to double, !dbg !1383
  %mul259 = fmul double %mul255, %conv258, !dbg !1384
  call void @ScaleResampleFilter(%struct._ResampleFilter* %178, double %mul242, double %mul247, double %mul253, double %mul259), !dbg !1385
  %191 = load %struct._ResampleFilter*, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1386
  %192 = load i64, i64* %x_offset.addr, align 8, !dbg !1387
  %conv260 = sitofp i64 %192 to double, !dbg !1388
  %193 = load i64, i64* %x, align 8, !dbg !1389
  %conv261 = sitofp i64 %193 to double, !dbg !1389
  %add262 = fadd double %conv260, %conv261, !dbg !1390
  %194 = load i64, i64* %y_offset.addr, align 8, !dbg !1391
  %conv263 = sitofp i64 %194 to double, !dbg !1392
  %195 = load i64, i64* %y, align 8, !dbg !1393
  %conv264 = sitofp i64 %195 to double, !dbg !1393
  %add265 = fadd double %conv263, %conv264, !dbg !1394
  %call266 = call i32 @ResamplePixelColor(%struct._ResampleFilter* %191, double %add262, double %add265, %struct._MagickPixelPacket* %pixel), !dbg !1395
  %196 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1396
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !1397
  %198 = load i16*, i16** %destination_indexes, align 8, !dbg !1398
  %199 = load i64, i64* %x, align 8, !dbg !1399
  %add.ptr = getelementptr inbounds i16, i16* %198, i64 %199, !dbg !1400
  call void @SetPixelPacket(%struct._Image* %196, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %197, i16* %add.ptr), !dbg !1401
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p165, align 8, !dbg !1402
  %incdec.ptr267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 1, !dbg !1402
  store %struct._PixelPacket* %incdec.ptr267, %struct._PixelPacket** %p165, align 8, !dbg !1402
  %201 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !1403
  %incdec.ptr268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %201, i32 1, !dbg !1403
  store %struct._PixelPacket* %incdec.ptr268, %struct._PixelPacket** %r, align 8, !dbg !1403
  br label %for.inc269, !dbg !1404

for.inc269:                                       ; preds = %if.end237, %if.then201
  %202 = load i64, i64* %x, align 8, !dbg !1405
  %inc270 = add nsw i64 %202, 1, !dbg !1405
  store i64 %inc270, i64* %x, align 8, !dbg !1405
  br label %for.cond188, !dbg !1406, !llvm.loop !1407

for.end271:                                       ; preds = %for.cond188
  %203 = load %struct._CacheView*, %struct._CacheView** %destination_view, align 8, !dbg !1409
  %204 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1410
  %call272 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %203, %struct._ExceptionInfo* %204), !dbg !1411
  store i32 %call272, i32* %sync164, align 4, !dbg !1412
  %205 = load i32, i32* %sync164, align 4, !dbg !1413
  %cmp273 = icmp eq i32 %205, 0, !dbg !1415
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !1416

if.then275:                                       ; preds = %for.end271
  br label %for.end279, !dbg !1417

if.end276:                                        ; preds = %for.end271
  br label %for.inc277, !dbg !1418

for.inc277:                                       ; preds = %if.end276, %if.then174
  %206 = load i64, i64* %y, align 8, !dbg !1419
  %inc278 = add nsw i64 %206, 1, !dbg !1419
  store i64 %inc278, i64* %y, align 8, !dbg !1419
  br label %for.cond159, !dbg !1420, !llvm.loop !1421

for.end279:                                       ; preds = %if.then275, %if.then185, %for.cond159
  %207 = load %struct._ResampleFilter*, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1423
  %call280 = call %struct._ResampleFilter* @DestroyResampleFilter(%struct._ResampleFilter* %207), !dbg !1424
  store %struct._ResampleFilter* %call280, %struct._ResampleFilter** %resample_filter, align 8, !dbg !1425
  %208 = load %struct._CacheView*, %struct._CacheView** %composite_view89, align 8, !dbg !1426
  %call281 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %208), !dbg !1427
  store %struct._CacheView* %call281, %struct._CacheView** %composite_view89, align 8, !dbg !1428
  %209 = load %struct._CacheView*, %struct._CacheView** %destination_view, align 8, !dbg !1429
  %call282 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %209), !dbg !1430
  store %struct._CacheView* %call282, %struct._CacheView** %destination_view, align 8, !dbg !1431
  %210 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1432
  %call283 = call %struct._Image* @DestroyImage(%struct._Image* %210), !dbg !1433
  store %struct._Image* %call283, %struct._Image** %composite_image, align 8, !dbg !1434
  %211 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1435
  store %struct._Image* %211, %struct._Image** %composite_image, align 8, !dbg !1436
  br label %sw.epilog, !dbg !1437

sw.bb284:                                         ; preds = %if.end14, %if.end14
  call void @llvm.dbg.declare(metadata %struct._CacheView** %composite_view285, metadata !1438, metadata !DIExpression()), !dbg !1440
  call void @llvm.dbg.declare(metadata %struct._CacheView** %destination_view286, metadata !1441, metadata !DIExpression()), !dbg !1442
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view287, metadata !1443, metadata !DIExpression()), !dbg !1444
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel288, metadata !1445, metadata !DIExpression()), !dbg !1446
  call void @llvm.dbg.declare(metadata float* %horizontal_scale, metadata !1447, metadata !DIExpression()), !dbg !1448
  call void @llvm.dbg.declare(metadata float* %vertical_scale, metadata !1449, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !1451, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %offset, metadata !1459, metadata !DIExpression()), !dbg !1460
  call void @llvm.dbg.declare(metadata i16** %destination_indexes289, metadata !1461, metadata !DIExpression()), !dbg !1462
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r290, metadata !1463, metadata !DIExpression()), !dbg !1464
  %212 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1465
  %213 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1466
  %columns291 = getelementptr inbounds %struct._Image, %struct._Image* %213, i32 0, i32 7, !dbg !1467
  %214 = load i64, i64* %columns291, align 8, !dbg !1467
  %215 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1468
  %rows292 = getelementptr inbounds %struct._Image, %struct._Image* %215, i32 0, i32 8, !dbg !1469
  %216 = load i64, i64* %rows292, align 8, !dbg !1469
  %217 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1470
  %call293 = call %struct._Image* @CloneImage(%struct._Image* %212, i64 %214, i64 %216, i32 1, %struct._ExceptionInfo* %217), !dbg !1471
  store %struct._Image* %call293, %struct._Image** %destination_image, align 8, !dbg !1472
  %218 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1473
  %cmp294 = icmp eq %struct._Image* %218, null, !dbg !1475
  br i1 %cmp294, label %if.then296, label %if.end298, !dbg !1476

if.then296:                                       ; preds = %sw.bb284
  %219 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1477
  %call297 = call %struct._Image* @DestroyImage(%struct._Image* %219), !dbg !1479
  store %struct._Image* %call297, %struct._Image** %composite_image, align 8, !dbg !1480
  store i32 0, i32* %retval, align 4, !dbg !1481
  br label %return, !dbg !1481

if.end298:                                        ; preds = %sw.bb284
  call void @SetGeometryInfo(%struct._GeometryInfo* %geometry_info), !dbg !1482
  store i32 0, i32* %flags, align 4, !dbg !1483
  %220 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1484
  %call299 = call i8* @GetImageArtifact(%struct._Image* %220, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1485
  store i8* %call299, i8** %value, align 8, !dbg !1486
  %221 = load i8*, i8** %value, align 8, !dbg !1487
  %cmp300 = icmp ne i8* %221, null, !dbg !1489
  br i1 %cmp300, label %if.then302, label %if.end304, !dbg !1490

if.then302:                                       ; preds = %if.end298
  %222 = load i8*, i8** %value, align 8, !dbg !1491
  %call303 = call i32 @ParseGeometry(i8* %222, %struct._GeometryInfo* %geometry_info), !dbg !1492
  store i32 %call303, i32* %flags, align 4, !dbg !1493
  br label %if.end304, !dbg !1494

if.end304:                                        ; preds = %if.then302, %if.end298
  %223 = load i32, i32* %flags, align 4, !dbg !1495
  %and305 = and i32 %223, 12, !dbg !1497
  %cmp306 = icmp eq i32 %and305, 0, !dbg !1498
  br i1 %cmp306, label %if.then308, label %if.else341, !dbg !1499

if.then308:                                       ; preds = %if.end304
  %224 = load i32, i32* %flags, align 4, !dbg !1500
  %and309 = and i32 %224, 8192, !dbg !1503
  %cmp310 = icmp eq i32 %and309, 0, !dbg !1504
  br i1 %cmp310, label %if.then312, label %if.else, !dbg !1505

if.then312:                                       ; preds = %if.then308
  %225 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1506
  %columns313 = getelementptr inbounds %struct._Image, %struct._Image* %225, i32 0, i32 7, !dbg !1508
  %226 = load i64, i64* %columns313, align 8, !dbg !1508
  %conv314 = uitofp i64 %226 to double, !dbg !1506
  %sub315 = fsub double %conv314, 1.000000e+00, !dbg !1509
  %conv316 = fptrunc double %sub315 to float, !dbg !1510
  %conv317 = fpext float %conv316 to double, !dbg !1510
  %div = fdiv double %conv317, 2.000000e+00, !dbg !1511
  %conv318 = fptrunc double %div to float, !dbg !1510
  store float %conv318, float* %horizontal_scale, align 4, !dbg !1512
  %227 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1513
  %rows319 = getelementptr inbounds %struct._Image, %struct._Image* %227, i32 0, i32 8, !dbg !1514
  %228 = load i64, i64* %rows319, align 8, !dbg !1514
  %conv320 = uitofp i64 %228 to double, !dbg !1513
  %sub321 = fsub double %conv320, 1.000000e+00, !dbg !1515
  %conv322 = fptrunc double %sub321 to float, !dbg !1516
  %conv323 = fpext float %conv322 to double, !dbg !1516
  %div324 = fdiv double %conv323, 2.000000e+00, !dbg !1517
  %conv325 = fptrunc double %div324 to float, !dbg !1516
  store float %conv325, float* %vertical_scale, align 4, !dbg !1518
  br label %if.end340, !dbg !1519

if.else:                                          ; preds = %if.then308
  %229 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1520
  %columns326 = getelementptr inbounds %struct._Image, %struct._Image* %229, i32 0, i32 7, !dbg !1522
  %230 = load i64, i64* %columns326, align 8, !dbg !1522
  %conv327 = uitofp i64 %230 to double, !dbg !1520
  %sub328 = fsub double %conv327, 1.000000e+00, !dbg !1523
  %conv329 = fptrunc double %sub328 to float, !dbg !1524
  %conv330 = fpext float %conv329 to double, !dbg !1524
  %div331 = fdiv double %conv330, 2.000000e+00, !dbg !1525
  %conv332 = fptrunc double %div331 to float, !dbg !1524
  store float %conv332, float* %horizontal_scale, align 4, !dbg !1526
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1527
  %rows333 = getelementptr inbounds %struct._Image, %struct._Image* %231, i32 0, i32 8, !dbg !1528
  %232 = load i64, i64* %rows333, align 8, !dbg !1528
  %conv334 = uitofp i64 %232 to double, !dbg !1527
  %sub335 = fsub double %conv334, 1.000000e+00, !dbg !1529
  %conv336 = fptrunc double %sub335 to float, !dbg !1530
  %conv337 = fpext float %conv336 to double, !dbg !1530
  %div338 = fdiv double %conv337, 2.000000e+00, !dbg !1531
  %conv339 = fptrunc double %div338 to float, !dbg !1530
  store float %conv339, float* %vertical_scale, align 4, !dbg !1532
  br label %if.end340

if.end340:                                        ; preds = %if.else, %if.then312
  br label %if.end390, !dbg !1533

if.else341:                                       ; preds = %if.end304
  %rho342 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !1534
  %233 = load double, double* %rho342, align 8, !dbg !1534
  %conv343 = fptrunc double %233 to float, !dbg !1536
  store float %conv343, float* %horizontal_scale, align 4, !dbg !1537
  %sigma344 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !1538
  %234 = load double, double* %sigma344, align 8, !dbg !1538
  %conv345 = fptrunc double %234 to float, !dbg !1539
  store float %conv345, float* %vertical_scale, align 4, !dbg !1540
  %235 = load i32, i32* %flags, align 4, !dbg !1541
  %and346 = and i32 %235, 4096, !dbg !1543
  %cmp347 = icmp ne i32 %and346, 0, !dbg !1544
  br i1 %cmp347, label %if.then349, label %if.end384, !dbg !1545

if.then349:                                       ; preds = %if.else341
  %236 = load i32, i32* %flags, align 4, !dbg !1546
  %and350 = and i32 %236, 8192, !dbg !1549
  %cmp351 = icmp eq i32 %and350, 0, !dbg !1550
  br i1 %cmp351, label %if.then353, label %if.else368, !dbg !1551

if.then353:                                       ; preds = %if.then349
  %237 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1552
  %columns354 = getelementptr inbounds %struct._Image, %struct._Image* %237, i32 0, i32 7, !dbg !1554
  %238 = load i64, i64* %columns354, align 8, !dbg !1554
  %conv355 = uitofp i64 %238 to double, !dbg !1552
  %sub356 = fsub double %conv355, 1.000000e+00, !dbg !1555
  %div357 = fdiv double %sub356, 2.000000e+02, !dbg !1556
  %239 = load float, float* %horizontal_scale, align 4, !dbg !1557
  %conv358 = fpext float %239 to double, !dbg !1557
  %mul359 = fmul double %conv358, %div357, !dbg !1557
  %conv360 = fptrunc double %mul359 to float, !dbg !1557
  store float %conv360, float* %horizontal_scale, align 4, !dbg !1557
  %240 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1558
  %rows361 = getelementptr inbounds %struct._Image, %struct._Image* %240, i32 0, i32 8, !dbg !1559
  %241 = load i64, i64* %rows361, align 8, !dbg !1559
  %conv362 = uitofp i64 %241 to double, !dbg !1558
  %sub363 = fsub double %conv362, 1.000000e+00, !dbg !1560
  %div364 = fdiv double %sub363, 2.000000e+02, !dbg !1561
  %242 = load float, float* %vertical_scale, align 4, !dbg !1562
  %conv365 = fpext float %242 to double, !dbg !1562
  %mul366 = fmul double %conv365, %div364, !dbg !1562
  %conv367 = fptrunc double %mul366 to float, !dbg !1562
  store float %conv367, float* %vertical_scale, align 4, !dbg !1562
  br label %if.end383, !dbg !1563

if.else368:                                       ; preds = %if.then349
  %243 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1564
  %columns369 = getelementptr inbounds %struct._Image, %struct._Image* %243, i32 0, i32 7, !dbg !1566
  %244 = load i64, i64* %columns369, align 8, !dbg !1566
  %conv370 = uitofp i64 %244 to double, !dbg !1564
  %sub371 = fsub double %conv370, 1.000000e+00, !dbg !1567
  %div372 = fdiv double %sub371, 2.000000e+02, !dbg !1568
  %245 = load float, float* %horizontal_scale, align 4, !dbg !1569
  %conv373 = fpext float %245 to double, !dbg !1569
  %mul374 = fmul double %conv373, %div372, !dbg !1569
  %conv375 = fptrunc double %mul374 to float, !dbg !1569
  store float %conv375, float* %horizontal_scale, align 4, !dbg !1569
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1570
  %rows376 = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 8, !dbg !1571
  %247 = load i64, i64* %rows376, align 8, !dbg !1571
  %conv377 = uitofp i64 %247 to double, !dbg !1570
  %sub378 = fsub double %conv377, 1.000000e+00, !dbg !1572
  %div379 = fdiv double %sub378, 2.000000e+02, !dbg !1573
  %248 = load float, float* %vertical_scale, align 4, !dbg !1574
  %conv380 = fpext float %248 to double, !dbg !1574
  %mul381 = fmul double %conv380, %div379, !dbg !1574
  %conv382 = fptrunc double %mul381 to float, !dbg !1574
  store float %conv382, float* %vertical_scale, align 4, !dbg !1574
  br label %if.end383

if.end383:                                        ; preds = %if.else368, %if.then353
  br label %if.end384, !dbg !1575

if.end384:                                        ; preds = %if.end383, %if.else341
  %249 = load i32, i32* %flags, align 4, !dbg !1576
  %and385 = and i32 %249, 8, !dbg !1578
  %cmp386 = icmp eq i32 %and385, 0, !dbg !1579
  br i1 %cmp386, label %if.then388, label %if.end389, !dbg !1580

if.then388:                                       ; preds = %if.end384
  %250 = load float, float* %horizontal_scale, align 4, !dbg !1581
  store float %250, float* %vertical_scale, align 4, !dbg !1582
  br label %if.end389, !dbg !1583

if.end389:                                        ; preds = %if.then388, %if.end384
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end340
  %251 = load i64, i64* %x_offset.addr, align 8, !dbg !1584
  %conv391 = sitofp i64 %251 to float, !dbg !1585
  %conv392 = fpext float %conv391 to double, !dbg !1585
  %x393 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1586
  store double %conv392, double* %x393, align 8, !dbg !1587
  %252 = load i64, i64* %y_offset.addr, align 8, !dbg !1588
  %conv394 = sitofp i64 %252 to float, !dbg !1589
  %conv395 = fpext float %conv394 to double, !dbg !1589
  %y396 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1590
  store double %conv395, double* %y396, align 8, !dbg !1591
  %253 = load i32, i32* %compose.addr, align 4, !dbg !1592
  %cmp397 = icmp eq i32 %253, 56, !dbg !1594
  br i1 %cmp397, label %if.then399, label %if.end482, !dbg !1595

if.then399:                                       ; preds = %if.end390
  %254 = load i32, i32* %flags, align 4, !dbg !1596
  %and400 = and i32 %254, 1, !dbg !1599
  %cmp401 = icmp eq i32 %and400, 0, !dbg !1600
  br i1 %cmp401, label %if.then403, label %if.else425, !dbg !1601

if.then403:                                       ; preds = %if.then399
  %255 = load i32, i32* %flags, align 4, !dbg !1602
  %and404 = and i32 %255, 8192, !dbg !1604
  %cmp405 = icmp eq i32 %and404, 0, !dbg !1605
  br i1 %cmp405, label %if.then407, label %if.else417, !dbg !1606

if.then407:                                       ; preds = %if.then403
  %256 = load i64, i64* %x_offset.addr, align 8, !dbg !1607
  %conv408 = sitofp i64 %256 to double, !dbg !1607
  %257 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1608
  %columns409 = getelementptr inbounds %struct._Image, %struct._Image* %257, i32 0, i32 7, !dbg !1609
  %258 = load i64, i64* %columns409, align 8, !dbg !1609
  %sub410 = sub i64 %258, 1, !dbg !1610
  %conv411 = uitofp i64 %sub410 to double, !dbg !1611
  %div412 = fdiv double %conv411, 2.000000e+00, !dbg !1612
  %add413 = fadd double %conv408, %div412, !dbg !1613
  %conv414 = fptrunc double %add413 to float, !dbg !1614
  %conv415 = fpext float %conv414 to double, !dbg !1614
  %x416 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1615
  store double %conv415, double* %x416, align 8, !dbg !1616
  br label %if.end424, !dbg !1617

if.else417:                                       ; preds = %if.then403
  %259 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1618
  %columns418 = getelementptr inbounds %struct._Image, %struct._Image* %259, i32 0, i32 7, !dbg !1619
  %260 = load i64, i64* %columns418, align 8, !dbg !1619
  %conv419 = uitofp i64 %260 to float, !dbg !1620
  %sub420 = fsub float %conv419, 1.000000e+00, !dbg !1621
  %conv421 = fpext float %sub420 to double, !dbg !1622
  %div422 = fdiv double %conv421, 2.000000e+00, !dbg !1623
  %x423 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1624
  store double %div422, double* %x423, align 8, !dbg !1625
  br label %if.end424

if.end424:                                        ; preds = %if.else417, %if.then407
  br label %if.end440, !dbg !1626

if.else425:                                       ; preds = %if.then399
  %261 = load i32, i32* %flags, align 4, !dbg !1627
  %and426 = and i32 %261, 8192, !dbg !1629
  %cmp427 = icmp eq i32 %and426, 0, !dbg !1630
  br i1 %cmp427, label %if.then429, label %if.else436, !dbg !1631

if.then429:                                       ; preds = %if.else425
  %262 = load i64, i64* %x_offset.addr, align 8, !dbg !1632
  %conv430 = sitofp i64 %262 to double, !dbg !1632
  %xi431 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !1633
  %263 = load double, double* %xi431, align 8, !dbg !1633
  %add432 = fadd double %conv430, %263, !dbg !1634
  %conv433 = fptrunc double %add432 to float, !dbg !1635
  %conv434 = fpext float %conv433 to double, !dbg !1635
  %x435 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1636
  store double %conv434, double* %x435, align 8, !dbg !1637
  br label %if.end439, !dbg !1638

if.else436:                                       ; preds = %if.else425
  %xi437 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !1639
  %264 = load double, double* %xi437, align 8, !dbg !1639
  %x438 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1640
  store double %264, double* %x438, align 8, !dbg !1641
  br label %if.end439

if.end439:                                        ; preds = %if.else436, %if.then429
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.end424
  %265 = load i32, i32* %flags, align 4, !dbg !1642
  %and441 = and i32 %265, 2, !dbg !1644
  %cmp442 = icmp eq i32 %and441, 0, !dbg !1645
  br i1 %cmp442, label %if.then444, label %if.else466, !dbg !1646

if.then444:                                       ; preds = %if.end440
  %266 = load i32, i32* %flags, align 4, !dbg !1647
  %and445 = and i32 %266, 8192, !dbg !1649
  %cmp446 = icmp eq i32 %and445, 0, !dbg !1650
  br i1 %cmp446, label %if.then448, label %if.else458, !dbg !1651

if.then448:                                       ; preds = %if.then444
  %267 = load i64, i64* %y_offset.addr, align 8, !dbg !1652
  %conv449 = sitofp i64 %267 to double, !dbg !1652
  %268 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1653
  %rows450 = getelementptr inbounds %struct._Image, %struct._Image* %268, i32 0, i32 8, !dbg !1654
  %269 = load i64, i64* %rows450, align 8, !dbg !1654
  %sub451 = sub i64 %269, 1, !dbg !1655
  %conv452 = uitofp i64 %sub451 to double, !dbg !1656
  %div453 = fdiv double %conv452, 2.000000e+00, !dbg !1657
  %add454 = fadd double %conv449, %div453, !dbg !1658
  %conv455 = fptrunc double %add454 to float, !dbg !1659
  %conv456 = fpext float %conv455 to double, !dbg !1659
  %y457 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1660
  store double %conv456, double* %y457, align 8, !dbg !1661
  br label %if.end465, !dbg !1662

if.else458:                                       ; preds = %if.then444
  %270 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1663
  %rows459 = getelementptr inbounds %struct._Image, %struct._Image* %270, i32 0, i32 8, !dbg !1664
  %271 = load i64, i64* %rows459, align 8, !dbg !1664
  %conv460 = uitofp i64 %271 to float, !dbg !1665
  %sub461 = fsub float %conv460, 1.000000e+00, !dbg !1666
  %conv462 = fpext float %sub461 to double, !dbg !1667
  %div463 = fdiv double %conv462, 2.000000e+00, !dbg !1668
  %y464 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1669
  store double %div463, double* %y464, align 8, !dbg !1670
  br label %if.end465

if.end465:                                        ; preds = %if.else458, %if.then448
  br label %if.end481, !dbg !1671

if.else466:                                       ; preds = %if.end440
  %272 = load i32, i32* %flags, align 4, !dbg !1672
  %and467 = and i32 %272, 8192, !dbg !1674
  %cmp468 = icmp eq i32 %and467, 0, !dbg !1675
  br i1 %cmp468, label %if.then470, label %if.else477, !dbg !1676

if.then470:                                       ; preds = %if.else466
  %273 = load i64, i64* %y_offset.addr, align 8, !dbg !1677
  %conv471 = sitofp i64 %273 to double, !dbg !1677
  %psi472 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !1678
  %274 = load double, double* %psi472, align 8, !dbg !1678
  %add473 = fadd double %conv471, %274, !dbg !1679
  %conv474 = fptrunc double %add473 to float, !dbg !1680
  %conv475 = fpext float %conv474 to double, !dbg !1680
  %y476 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1681
  store double %conv475, double* %y476, align 8, !dbg !1682
  br label %if.end480, !dbg !1683

if.else477:                                       ; preds = %if.else466
  %psi478 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !1684
  %275 = load double, double* %psi478, align 8, !dbg !1684
  %y479 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1685
  store double %275, double* %y479, align 8, !dbg !1686
  br label %if.end480

if.end480:                                        ; preds = %if.else477, %if.then470
  br label %if.end481

if.end481:                                        ; preds = %if.end480, %if.end465
  br label %if.end482, !dbg !1687

if.end482:                                        ; preds = %if.end481, %if.end390
  %276 = bitcast %struct._MagickPixelPacket* %pixel288 to i8*, !dbg !1688
  %277 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !1688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 56, i1 false), !dbg !1688
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1689
  %279 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1690
  %call483 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %278, %struct._ExceptionInfo* %279), !dbg !1691
  store %struct._CacheView* %call483, %struct._CacheView** %image_view287, align 8, !dbg !1692
  %280 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1693
  %281 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1694
  %call484 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %280, %struct._ExceptionInfo* %281), !dbg !1695
  store %struct._CacheView* %call484, %struct._CacheView** %composite_view285, align 8, !dbg !1696
  %282 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1697
  %283 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1698
  %call485 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %282, %struct._ExceptionInfo* %283), !dbg !1699
  store %struct._CacheView* %call485, %struct._CacheView** %destination_view286, align 8, !dbg !1700
  store i64 0, i64* %y, align 8, !dbg !1701
  br label %for.cond486, !dbg !1703

for.cond486:                                      ; preds = %for.inc591, %if.end482
  %284 = load i64, i64* %y, align 8, !dbg !1704
  %285 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1706
  %rows487 = getelementptr inbounds %struct._Image, %struct._Image* %285, i32 0, i32 8, !dbg !1707
  %286 = load i64, i64* %rows487, align 8, !dbg !1707
  %cmp488 = icmp slt i64 %284, %286, !dbg !1708
  br i1 %cmp488, label %for.body490, label %for.end593, !dbg !1709

for.body490:                                      ; preds = %for.cond486
  call void @llvm.dbg.declare(metadata i32* %sync491, metadata !1710, metadata !DIExpression()), !dbg !1712
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p492, metadata !1713, metadata !DIExpression()), !dbg !1714
  call void @llvm.dbg.declare(metadata i64* %x493, metadata !1715, metadata !DIExpression()), !dbg !1716
  %287 = load i64, i64* %y, align 8, !dbg !1717
  %288 = load i64, i64* %y_offset.addr, align 8, !dbg !1719
  %add494 = add nsw i64 %287, %288, !dbg !1720
  %cmp495 = icmp slt i64 %add494, 0, !dbg !1721
  br i1 %cmp495, label %if.then502, label %lor.lhs.false497, !dbg !1722

lor.lhs.false497:                                 ; preds = %for.body490
  %289 = load i64, i64* %y, align 8, !dbg !1723
  %290 = load i64, i64* %y_offset.addr, align 8, !dbg !1724
  %add498 = add nsw i64 %289, %290, !dbg !1725
  %291 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1726
  %rows499 = getelementptr inbounds %struct._Image, %struct._Image* %291, i32 0, i32 8, !dbg !1727
  %292 = load i64, i64* %rows499, align 8, !dbg !1727
  %cmp500 = icmp sge i64 %add498, %292, !dbg !1728
  br i1 %cmp500, label %if.then502, label %if.end503, !dbg !1729

if.then502:                                       ; preds = %lor.lhs.false497, %for.body490
  br label %for.inc591, !dbg !1730

if.end503:                                        ; preds = %lor.lhs.false497
  %293 = load %struct._CacheView*, %struct._CacheView** %composite_view285, align 8, !dbg !1731
  %294 = load i64, i64* %y, align 8, !dbg !1732
  %295 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1733
  %columns504 = getelementptr inbounds %struct._Image, %struct._Image* %295, i32 0, i32 7, !dbg !1734
  %296 = load i64, i64* %columns504, align 8, !dbg !1734
  %297 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1735
  %call505 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %293, i64 0, i64 %294, i64 %296, i64 1, %struct._ExceptionInfo* %297), !dbg !1736
  store %struct._PixelPacket* %call505, %struct._PixelPacket** %p492, align 8, !dbg !1737
  %298 = load %struct._CacheView*, %struct._CacheView** %destination_view286, align 8, !dbg !1738
  %299 = load i64, i64* %y, align 8, !dbg !1739
  %300 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1740
  %columns506 = getelementptr inbounds %struct._Image, %struct._Image* %300, i32 0, i32 7, !dbg !1741
  %301 = load i64, i64* %columns506, align 8, !dbg !1741
  %302 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1742
  %call507 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %298, i64 0, i64 %299, i64 %301, i64 1, %struct._ExceptionInfo* %302), !dbg !1743
  store %struct._PixelPacket* %call507, %struct._PixelPacket** %r290, align 8, !dbg !1744
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1745
  %cmp508 = icmp eq %struct._PixelPacket* %303, null, !dbg !1747
  br i1 %cmp508, label %if.then513, label %lor.lhs.false510, !dbg !1748

lor.lhs.false510:                                 ; preds = %if.end503
  %304 = load %struct._PixelPacket*, %struct._PixelPacket** %r290, align 8, !dbg !1749
  %cmp511 = icmp eq %struct._PixelPacket* %304, null, !dbg !1750
  br i1 %cmp511, label %if.then513, label %if.end514, !dbg !1751

if.then513:                                       ; preds = %lor.lhs.false510, %if.end503
  br label %for.end593, !dbg !1752

if.end514:                                        ; preds = %lor.lhs.false510
  %305 = load %struct._CacheView*, %struct._CacheView** %destination_view286, align 8, !dbg !1753
  %call515 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %305), !dbg !1754
  store i16* %call515, i16** %destination_indexes289, align 8, !dbg !1755
  store i64 0, i64* %x493, align 8, !dbg !1756
  br label %for.cond516, !dbg !1758

for.cond516:                                      ; preds = %for.inc583, %if.end514
  %306 = load i64, i64* %x493, align 8, !dbg !1759
  %307 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1761
  %columns517 = getelementptr inbounds %struct._Image, %struct._Image* %307, i32 0, i32 7, !dbg !1762
  %308 = load i64, i64* %columns517, align 8, !dbg !1762
  %cmp518 = icmp slt i64 %306, %308, !dbg !1763
  br i1 %cmp518, label %for.body520, label %for.end585, !dbg !1764

for.body520:                                      ; preds = %for.cond516
  %309 = load i64, i64* %x_offset.addr, align 8, !dbg !1765
  %310 = load i64, i64* %x493, align 8, !dbg !1768
  %add521 = add nsw i64 %309, %310, !dbg !1769
  %cmp522 = icmp slt i64 %add521, 0, !dbg !1770
  br i1 %cmp522, label %if.then529, label %lor.lhs.false524, !dbg !1771

lor.lhs.false524:                                 ; preds = %for.body520
  %311 = load i64, i64* %x_offset.addr, align 8, !dbg !1772
  %312 = load i64, i64* %x493, align 8, !dbg !1773
  %add525 = add nsw i64 %311, %312, !dbg !1774
  %313 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1775
  %columns526 = getelementptr inbounds %struct._Image, %struct._Image* %313, i32 0, i32 7, !dbg !1776
  %314 = load i64, i64* %columns526, align 8, !dbg !1776
  %cmp527 = icmp sge i64 %add525, %314, !dbg !1777
  br i1 %cmp527, label %if.then529, label %if.end531, !dbg !1778

if.then529:                                       ; preds = %lor.lhs.false524, %for.body520
  %315 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1779
  %incdec.ptr530 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %315, i32 1, !dbg !1779
  store %struct._PixelPacket* %incdec.ptr530, %struct._PixelPacket** %p492, align 8, !dbg !1779
  br label %for.inc583, !dbg !1781

if.end531:                                        ; preds = %lor.lhs.false524
  %316 = load float, float* %horizontal_scale, align 4, !dbg !1782
  %conv532 = fpext float %316 to double, !dbg !1782
  %317 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1783
  %red533 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %317, i32 0, i32 2, !dbg !1783
  %318 = load i16, i16* %red533, align 2, !dbg !1783
  %conv534 = zext i16 %318 to i32, !dbg !1783
  %conv535 = sitofp i32 %conv534 to double, !dbg !1783
  %sub536 = fsub double %conv535, 3.276800e+04, !dbg !1784
  %mul537 = fmul double %conv532, %sub536, !dbg !1785
  %div538 = fdiv double %mul537, 3.276800e+04, !dbg !1786
  %x539 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !1787
  %319 = load double, double* %x539, align 8, !dbg !1787
  %add540 = fadd double %div538, %319, !dbg !1788
  %320 = load i32, i32* %compose.addr, align 4, !dbg !1789
  %cmp541 = icmp eq i32 %320, 27, !dbg !1790
  br i1 %cmp541, label %cond.true, label %cond.false, !dbg !1791

cond.true:                                        ; preds = %if.end531
  %321 = load i64, i64* %x493, align 8, !dbg !1792
  br label %cond.end, !dbg !1791

cond.false:                                       ; preds = %if.end531
  br label %cond.end, !dbg !1791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %321, %cond.true ], [ 0, %cond.false ], !dbg !1791
  %conv543 = sitofp i64 %cond to double, !dbg !1793
  %add544 = fadd double %add540, %conv543, !dbg !1794
  %x545 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !1795
  store double %add544, double* %x545, align 8, !dbg !1796
  %322 = load float, float* %vertical_scale, align 4, !dbg !1797
  %conv546 = fpext float %322 to double, !dbg !1797
  %323 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1798
  %green547 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %323, i32 0, i32 1, !dbg !1798
  %324 = load i16, i16* %green547, align 2, !dbg !1798
  %conv548 = zext i16 %324 to i32, !dbg !1798
  %conv549 = sitofp i32 %conv548 to double, !dbg !1798
  %sub550 = fsub double %conv549, 3.276800e+04, !dbg !1799
  %mul551 = fmul double %conv546, %sub550, !dbg !1800
  %div552 = fdiv double %mul551, 3.276800e+04, !dbg !1801
  %y553 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !1802
  %325 = load double, double* %y553, align 8, !dbg !1802
  %add554 = fadd double %div552, %325, !dbg !1803
  %326 = load i32, i32* %compose.addr, align 4, !dbg !1804
  %cmp555 = icmp eq i32 %326, 27, !dbg !1805
  br i1 %cmp555, label %cond.true557, label %cond.false558, !dbg !1806

cond.true557:                                     ; preds = %cond.end
  %327 = load i64, i64* %y, align 8, !dbg !1807
  br label %cond.end559, !dbg !1806

cond.false558:                                    ; preds = %cond.end
  br label %cond.end559, !dbg !1806

cond.end559:                                      ; preds = %cond.false558, %cond.true557
  %cond560 = phi i64 [ %327, %cond.true557 ], [ 0, %cond.false558 ], !dbg !1806
  %conv561 = sitofp i64 %cond560 to double, !dbg !1808
  %add562 = fadd double %add554, %conv561, !dbg !1809
  %y563 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !1810
  store double %add562, double* %y563, align 8, !dbg !1811
  %328 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1812
  %329 = load %struct._CacheView*, %struct._CacheView** %image_view287, align 8, !dbg !1813
  %x564 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !1814
  %330 = load double, double* %x564, align 8, !dbg !1814
  %y565 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !1815
  %331 = load double, double* %y565, align 8, !dbg !1815
  %332 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1816
  %call566 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %328, %struct._CacheView* %329, i32 0, double %330, double %331, %struct._MagickPixelPacket* %pixel288, %struct._ExceptionInfo* %332), !dbg !1817
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel288, i32 0, i32 8, !dbg !1818
  %333 = load float, float* %opacity, align 4, !dbg !1818
  %conv567 = fpext float %333 to double, !dbg !1819
  %mul568 = fmul double 0x3EF0001000100010, %conv567, !dbg !1820
  %sub569 = fsub double 1.000000e+00, %mul568, !dbg !1821
  %334 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1822
  %opacity570 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %334, i32 0, i32 3, !dbg !1822
  %335 = load i16, i16* %opacity570, align 2, !dbg !1822
  %conv571 = zext i16 %335 to i32, !dbg !1822
  %conv572 = sitofp i32 %conv571 to double, !dbg !1822
  %mul573 = fmul double 0x3EF0001000100010, %conv572, !dbg !1823
  %sub574 = fsub double 1.000000e+00, %mul573, !dbg !1824
  %mul575 = fmul double %sub569, %sub574, !dbg !1825
  %sub576 = fsub double 1.000000e+00, %mul575, !dbg !1826
  %mul577 = fmul double 6.553500e+04, %sub576, !dbg !1827
  %conv578 = fptrunc double %mul577 to float, !dbg !1828
  %opacity579 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel288, i32 0, i32 8, !dbg !1829
  store float %conv578, float* %opacity579, align 4, !dbg !1830
  %336 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1831
  %337 = load %struct._PixelPacket*, %struct._PixelPacket** %r290, align 8, !dbg !1832
  %338 = load i16*, i16** %destination_indexes289, align 8, !dbg !1833
  %339 = load i64, i64* %x493, align 8, !dbg !1834
  %add.ptr580 = getelementptr inbounds i16, i16* %338, i64 %339, !dbg !1835
  call void @SetPixelPacket(%struct._Image* %336, %struct._MagickPixelPacket* %pixel288, %struct._PixelPacket* %337, i16* %add.ptr580), !dbg !1836
  %340 = load %struct._PixelPacket*, %struct._PixelPacket** %p492, align 8, !dbg !1837
  %incdec.ptr581 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %340, i32 1, !dbg !1837
  store %struct._PixelPacket* %incdec.ptr581, %struct._PixelPacket** %p492, align 8, !dbg !1837
  %341 = load %struct._PixelPacket*, %struct._PixelPacket** %r290, align 8, !dbg !1838
  %incdec.ptr582 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %341, i32 1, !dbg !1838
  store %struct._PixelPacket* %incdec.ptr582, %struct._PixelPacket** %r290, align 8, !dbg !1838
  br label %for.inc583, !dbg !1839

for.inc583:                                       ; preds = %cond.end559, %if.then529
  %342 = load i64, i64* %x493, align 8, !dbg !1840
  %inc584 = add nsw i64 %342, 1, !dbg !1840
  store i64 %inc584, i64* %x493, align 8, !dbg !1840
  br label %for.cond516, !dbg !1841, !llvm.loop !1842

for.end585:                                       ; preds = %for.cond516
  %343 = load %struct._CacheView*, %struct._CacheView** %destination_view286, align 8, !dbg !1844
  %344 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1845
  %call586 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %343, %struct._ExceptionInfo* %344), !dbg !1846
  store i32 %call586, i32* %sync491, align 4, !dbg !1847
  %345 = load i32, i32* %sync491, align 4, !dbg !1848
  %cmp587 = icmp eq i32 %345, 0, !dbg !1850
  br i1 %cmp587, label %if.then589, label %if.end590, !dbg !1851

if.then589:                                       ; preds = %for.end585
  br label %for.end593, !dbg !1852

if.end590:                                        ; preds = %for.end585
  br label %for.inc591, !dbg !1853

for.inc591:                                       ; preds = %if.end590, %if.then502
  %346 = load i64, i64* %y, align 8, !dbg !1854
  %inc592 = add nsw i64 %346, 1, !dbg !1854
  store i64 %inc592, i64* %y, align 8, !dbg !1854
  br label %for.cond486, !dbg !1855, !llvm.loop !1856

for.end593:                                       ; preds = %if.then589, %if.then513, %for.cond486
  %347 = load %struct._CacheView*, %struct._CacheView** %destination_view286, align 8, !dbg !1858
  %call594 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %347), !dbg !1859
  store %struct._CacheView* %call594, %struct._CacheView** %destination_view286, align 8, !dbg !1860
  %348 = load %struct._CacheView*, %struct._CacheView** %composite_view285, align 8, !dbg !1861
  %call595 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %348), !dbg !1862
  store %struct._CacheView* %call595, %struct._CacheView** %composite_view285, align 8, !dbg !1863
  %349 = load %struct._CacheView*, %struct._CacheView** %image_view287, align 8, !dbg !1864
  %call596 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %349), !dbg !1865
  store %struct._CacheView* %call596, %struct._CacheView** %image_view287, align 8, !dbg !1866
  %350 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1867
  %call597 = call %struct._Image* @DestroyImage(%struct._Image* %350), !dbg !1868
  store %struct._Image* %call597, %struct._Image** %composite_image, align 8, !dbg !1869
  %351 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !1870
  store %struct._Image* %351, %struct._Image** %composite_image, align 8, !dbg !1871
  br label %sw.epilog, !dbg !1872

sw.bb598:                                         ; preds = %if.end14
  %352 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1873
  %call599 = call i8* @GetImageArtifact(%struct._Image* %352, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1875
  store i8* %call599, i8** %value, align 8, !dbg !1876
  %353 = load i8*, i8** %value, align 8, !dbg !1877
  %cmp600 = icmp ne i8* %353, null, !dbg !1879
  br i1 %cmp600, label %if.then602, label %if.end642, !dbg !1880

if.then602:                                       ; preds = %sw.bb598
  %354 = load i8*, i8** %value, align 8, !dbg !1881
  %call603 = call i32 @ParseGeometry(i8* %354, %struct._GeometryInfo* %geometry_info), !dbg !1883
  store i32 %call603, i32* %flags, align 4, !dbg !1884
  %rho604 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !1885
  %355 = load double, double* %rho604, align 8, !dbg !1885
  %div605 = fdiv double %355, 1.000000e+02, !dbg !1886
  %conv606 = fptrunc double %div605 to float, !dbg !1887
  store float %conv606, float* %source_dissolve, align 4, !dbg !1888
  store float 1.000000e+00, float* %destination_dissolve, align 4, !dbg !1889
  %356 = load float, float* %source_dissolve, align 4, !dbg !1890
  %conv607 = fpext float %356 to double, !dbg !1890
  %sub608 = fsub double %conv607, 1.000000e-15, !dbg !1892
  %cmp609 = fcmp olt double %sub608, 0.000000e+00, !dbg !1893
  br i1 %cmp609, label %if.then611, label %if.end612, !dbg !1894

if.then611:                                       ; preds = %if.then602
  store float 0.000000e+00, float* %source_dissolve, align 4, !dbg !1895
  br label %if.end612, !dbg !1896

if.end612:                                        ; preds = %if.then611, %if.then602
  %357 = load float, float* %source_dissolve, align 4, !dbg !1897
  %conv613 = fpext float %357 to double, !dbg !1897
  %add614 = fadd double %conv613, 1.000000e-15, !dbg !1899
  %cmp615 = fcmp ogt double %add614, 1.000000e+00, !dbg !1900
  br i1 %cmp615, label %if.then617, label %if.end621, !dbg !1901

if.then617:                                       ; preds = %if.end612
  %358 = load float, float* %source_dissolve, align 4, !dbg !1902
  %conv618 = fpext float %358 to double, !dbg !1902
  %sub619 = fsub double 2.000000e+00, %conv618, !dbg !1904
  %conv620 = fptrunc double %sub619 to float, !dbg !1905
  store float %conv620, float* %destination_dissolve, align 4, !dbg !1906
  store float 1.000000e+00, float* %source_dissolve, align 4, !dbg !1907
  br label %if.end621, !dbg !1908

if.end621:                                        ; preds = %if.then617, %if.end612
  %359 = load i32, i32* %flags, align 4, !dbg !1909
  %and622 = and i32 %359, 8, !dbg !1911
  %cmp623 = icmp ne i32 %and622, 0, !dbg !1912
  br i1 %cmp623, label %if.then625, label %if.end629, !dbg !1913

if.then625:                                       ; preds = %if.end621
  %sigma626 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !1914
  %360 = load double, double* %sigma626, align 8, !dbg !1914
  %div627 = fdiv double %360, 1.000000e+02, !dbg !1915
  %conv628 = fptrunc double %div627 to float, !dbg !1916
  store float %conv628, float* %destination_dissolve, align 4, !dbg !1917
  br label %if.end629, !dbg !1918

if.end629:                                        ; preds = %if.then625, %if.end621
  %361 = load float, float* %destination_dissolve, align 4, !dbg !1919
  %conv630 = fpext float %361 to double, !dbg !1919
  %sub631 = fsub double %conv630, 1.000000e-15, !dbg !1921
  %cmp632 = fcmp olt double %sub631, 0.000000e+00, !dbg !1922
  br i1 %cmp632, label %if.then634, label %if.end635, !dbg !1923

if.then634:                                       ; preds = %if.end629
  store float 0.000000e+00, float* %destination_dissolve, align 4, !dbg !1924
  br label %if.end635, !dbg !1925

if.end635:                                        ; preds = %if.then634, %if.end629
  store i32 0, i32* %clip_to_self, align 4, !dbg !1926
  %362 = load float, float* %destination_dissolve, align 4, !dbg !1927
  %conv636 = fpext float %362 to double, !dbg !1927
  %add637 = fadd double %conv636, 1.000000e-15, !dbg !1929
  %cmp638 = fcmp ogt double %add637, 1.000000e+00, !dbg !1930
  br i1 %cmp638, label %if.then640, label %if.end641, !dbg !1931

if.then640:                                       ; preds = %if.end635
  store float 1.000000e+00, float* %destination_dissolve, align 4, !dbg !1932
  store i32 1, i32* %clip_to_self, align 4, !dbg !1934
  br label %if.end641, !dbg !1935

if.end641:                                        ; preds = %if.then640, %if.end635
  br label %if.end642, !dbg !1936

if.end642:                                        ; preds = %if.end641, %sw.bb598
  br label %sw.epilog, !dbg !1937

sw.bb643:                                         ; preds = %if.end14
  %363 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1938
  %call644 = call i8* @GetImageArtifact(%struct._Image* %363, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1940
  store i8* %call644, i8** %value, align 8, !dbg !1941
  %364 = load i8*, i8** %value, align 8, !dbg !1942
  %cmp645 = icmp ne i8* %364, null, !dbg !1944
  br i1 %cmp645, label %if.then647, label %if.end669, !dbg !1945

if.then647:                                       ; preds = %sw.bb643
  %365 = load i8*, i8** %value, align 8, !dbg !1946
  %call648 = call i32 @ParseGeometry(i8* %365, %struct._GeometryInfo* %geometry_info), !dbg !1948
  store i32 %call648, i32* %flags, align 4, !dbg !1949
  %rho649 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !1950
  %366 = load double, double* %rho649, align 8, !dbg !1950
  %div650 = fdiv double %366, 1.000000e+02, !dbg !1951
  %conv651 = fptrunc double %div650 to float, !dbg !1952
  store float %conv651, float* %source_dissolve, align 4, !dbg !1953
  %367 = load float, float* %source_dissolve, align 4, !dbg !1954
  %conv652 = fpext float %367 to double, !dbg !1954
  %sub653 = fsub double 1.000000e+00, %conv652, !dbg !1955
  %conv654 = fptrunc double %sub653 to float, !dbg !1956
  store float %conv654, float* %destination_dissolve, align 4, !dbg !1957
  %368 = load i32, i32* %flags, align 4, !dbg !1958
  %and655 = and i32 %368, 8, !dbg !1960
  %cmp656 = icmp ne i32 %and655, 0, !dbg !1961
  br i1 %cmp656, label %if.then658, label %if.end662, !dbg !1962

if.then658:                                       ; preds = %if.then647
  %sigma659 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !1963
  %369 = load double, double* %sigma659, align 8, !dbg !1963
  %div660 = fdiv double %369, 1.000000e+02, !dbg !1964
  %conv661 = fptrunc double %div660 to float, !dbg !1965
  store float %conv661, float* %destination_dissolve, align 4, !dbg !1966
  br label %if.end662, !dbg !1967

if.end662:                                        ; preds = %if.then658, %if.then647
  store i32 0, i32* %clip_to_self, align 4, !dbg !1968
  %370 = load float, float* %destination_dissolve, align 4, !dbg !1969
  %conv663 = fpext float %370 to double, !dbg !1969
  %add664 = fadd double %conv663, 1.000000e-15, !dbg !1971
  %cmp665 = fcmp ogt double %add664, 1.000000e+00, !dbg !1972
  br i1 %cmp665, label %if.then667, label %if.end668, !dbg !1973

if.then667:                                       ; preds = %if.end662
  store i32 1, i32* %clip_to_self, align 4, !dbg !1974
  br label %if.end668, !dbg !1975

if.end668:                                        ; preds = %if.then667, %if.end662
  br label %if.end669, !dbg !1976

if.end669:                                        ; preds = %if.end668, %sw.bb643
  br label %sw.epilog, !dbg !1977

sw.bb670:                                         ; preds = %if.end14
  call void @SetGeometryInfo(%struct._GeometryInfo* %geometry_info), !dbg !1978
  %371 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1980
  %call671 = call i8* @GetImageArtifact(%struct._Image* %371, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1981
  store i8* %call671, i8** %value, align 8, !dbg !1982
  %372 = load i8*, i8** %value, align 8, !dbg !1983
  %cmp672 = icmp ne i8* %372, null, !dbg !1985
  br i1 %cmp672, label %if.then674, label %if.end676, !dbg !1986

if.then674:                                       ; preds = %sw.bb670
  %373 = load i8*, i8** %value, align 8, !dbg !1987
  %call675 = call i32 @ParseGeometry(i8* %373, %struct._GeometryInfo* %geometry_info), !dbg !1988
  br label %if.end676, !dbg !1989

if.end676:                                        ; preds = %if.then674, %sw.bb670
  br label %sw.epilog, !dbg !1990

sw.bb677:                                         ; preds = %if.end14
  %374 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !1991
  %call678 = call i8* @GetImageArtifact(%struct._Image* %374, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !1993
  store i8* %call678, i8** %value, align 8, !dbg !1994
  %375 = load i8*, i8** %value, align 8, !dbg !1995
  %cmp679 = icmp ne i8* %375, null, !dbg !1997
  br i1 %cmp679, label %if.then681, label %if.end692, !dbg !1998

if.then681:                                       ; preds = %sw.bb677
  %376 = load i8*, i8** %value, align 8, !dbg !1999
  %call682 = call i32 @ParseGeometry(i8* %376, %struct._GeometryInfo* %geometry_info), !dbg !2001
  store i32 %call682, i32* %flags, align 4, !dbg !2002
  %rho683 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2003
  %377 = load double, double* %rho683, align 8, !dbg !2003
  %conv684 = fptrunc double %377 to float, !dbg !2004
  store float %conv684, float* %percent_luma, align 4, !dbg !2005
  %378 = load i32, i32* %flags, align 4, !dbg !2006
  %and685 = and i32 %378, 8, !dbg !2008
  %cmp686 = icmp ne i32 %and685, 0, !dbg !2009
  br i1 %cmp686, label %if.then688, label %if.end691, !dbg !2010

if.then688:                                       ; preds = %if.then681
  %sigma689 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !2011
  %379 = load double, double* %sigma689, align 8, !dbg !2011
  %conv690 = fptrunc double %379 to float, !dbg !2012
  store float %conv690, float* %percent_chroma, align 4, !dbg !2013
  br label %if.end691, !dbg !2014

if.end691:                                        ; preds = %if.then688, %if.then681
  br label %if.end692, !dbg !2015

if.end692:                                        ; preds = %if.end691, %sw.bb677
  br label %sw.epilog, !dbg !2016

sw.bb693:                                         ; preds = %if.end14
  %380 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2017
  %call694 = call i8* @GetImageArtifact(%struct._Image* %380, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !2019
  store i8* %call694, i8** %value, align 8, !dbg !2020
  %381 = load i8*, i8** %value, align 8, !dbg !2021
  %cmp695 = icmp ne i8* %381, null, !dbg !2023
  br i1 %cmp695, label %if.then697, label %if.end708, !dbg !2024

if.then697:                                       ; preds = %sw.bb693
  %382 = load i8*, i8** %value, align 8, !dbg !2025
  %call698 = call i32 @ParseGeometry(i8* %382, %struct._GeometryInfo* %geometry_info), !dbg !2027
  store i32 %call698, i32* %flags, align 4, !dbg !2028
  %rho699 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2029
  %383 = load double, double* %rho699, align 8, !dbg !2029
  %conv700 = fptrunc double %383 to float, !dbg !2030
  store float %conv700, float* %amount, align 4, !dbg !2031
  %sigma701 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !2032
  %384 = load double, double* %sigma701, align 8, !dbg !2032
  %conv702 = fptrunc double %384 to float, !dbg !2033
  store float %conv702, float* %threshold, align 4, !dbg !2034
  %385 = load i32, i32* %flags, align 4, !dbg !2035
  %and703 = and i32 %385, 8, !dbg !2037
  %cmp704 = icmp eq i32 %and703, 0, !dbg !2038
  br i1 %cmp704, label %if.then706, label %if.end707, !dbg !2039

if.then706:                                       ; preds = %if.then697
  store float 0x3FA99999A0000000, float* %threshold, align 4, !dbg !2040
  br label %if.end707, !dbg !2041

if.end707:                                        ; preds = %if.then706, %if.then697
  br label %if.end708, !dbg !2042

if.end708:                                        ; preds = %if.end707, %sw.bb693
  %386 = load float, float* %threshold, align 4, !dbg !2043
  %mul709 = fmul float %386, 6.553500e+04, !dbg !2043
  store float %mul709, float* %threshold, align 4, !dbg !2043
  br label %sw.epilog, !dbg !2044

sw.default:                                       ; preds = %if.end14
  br label %sw.epilog, !dbg !2045

sw.epilog:                                        ; preds = %sw.default, %if.end708, %if.end692, %if.end676, %if.end669, %if.end642, %for.end593, %for.end279, %if.end87, %if.then37, %if.then32, %if.then28, %if.then23, %if.then19, %sw.bb
  %387 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2046
  %call710 = call i8* @GetImageArtifact(%struct._Image* %387, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)), !dbg !2047
  store i8* %call710, i8** %value, align 8, !dbg !2048
  %388 = load i8*, i8** %value, align 8, !dbg !2049
  %cmp711 = icmp ne i8* %388, null, !dbg !2051
  br i1 %cmp711, label %if.then713, label %if.end718, !dbg !2052

if.then713:                                       ; preds = %sw.epilog
  %389 = load i8*, i8** %value, align 8, !dbg !2053
  %call714 = call i32 @IsMagickTrue(i8* %389), !dbg !2054
  %cmp715 = icmp eq i32 %call714, 0, !dbg !2055
  %390 = zext i1 %cmp715 to i64, !dbg !2054
  %cond717 = select i1 %cmp715, i32 1, i32 0, !dbg !2054
  store i32 %cond717, i32* %clip_to_self, align 4, !dbg !2056
  br label %if.end718, !dbg !2057

if.end718:                                        ; preds = %if.then713, %sw.epilog
  %391 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2058
  %392 = load i32, i32* %channel.addr, align 4, !dbg !2059
  %393 = load i32, i32* %compose.addr, align 4, !dbg !2060
  %394 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2061
  %395 = load i64, i64* %x_offset.addr, align 8, !dbg !2062
  %396 = load i64, i64* %y_offset.addr, align 8, !dbg !2063
  %397 = load float, float* %destination_dissolve, align 4, !dbg !2064
  %398 = load float, float* %source_dissolve, align 4, !dbg !2065
  %399 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2066
  %call719 = call i32 @AccelerateCompositeImage(%struct._Image* %391, i32 %392, i32 %393, %struct._Image* %394, i64 %395, i64 %396, float %397, float %398, %struct._ExceptionInfo* %399), !dbg !2067
  store i32 %call719, i32* %status, align 4, !dbg !2068
  %400 = load i32, i32* %status, align 4, !dbg !2069
  %cmp720 = icmp eq i32 %400, 1, !dbg !2071
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !2072

if.then722:                                       ; preds = %if.end718
  %401 = load i32, i32* %status, align 4, !dbg !2073
  store i32 %401, i32* %retval, align 4, !dbg !2074
  br label %return, !dbg !2074

if.end723:                                        ; preds = %if.end718
  store i32 1, i32* %status, align 4, !dbg !2075
  store i64 0, i64* %progress, align 8, !dbg !2076
  store float 3.276800e+04, float* %midpoint, align 4, !dbg !2077
  %402 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2078
  call void @GetMagickPixelPacket(%struct._Image* %402, %struct._MagickPixelPacket* %zero), !dbg !2079
  %403 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2080
  %404 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2081
  %call724 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %403, %struct._ExceptionInfo* %404), !dbg !2082
  store %struct._CacheView* %call724, %struct._CacheView** %composite_view, align 8, !dbg !2083
  %405 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2084
  %406 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2085
  %call725 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %405, %struct._ExceptionInfo* %406), !dbg !2086
  store %struct._CacheView* %call725, %struct._CacheView** %image_view, align 8, !dbg !2087
  store i64 0, i64* %y, align 8, !dbg !2088
  br label %for.cond726, !dbg !2090

for.cond726:                                      ; preds = %for.inc1304, %if.end723
  %407 = load i64, i64* %y, align 8, !dbg !2091
  %408 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2093
  %rows727 = getelementptr inbounds %struct._Image, %struct._Image* %408, i32 0, i32 8, !dbg !2094
  %409 = load i64, i64* %rows727, align 8, !dbg !2094
  %cmp728 = icmp slt i64 %407, %409, !dbg !2095
  br i1 %cmp728, label %for.body730, label %for.end1306, !dbg !2096

for.body730:                                      ; preds = %for.cond726
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixels, metadata !2097, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.declare(metadata double* %luma, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.declare(metadata double* %hue, metadata !2102, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.declare(metadata double* %chroma, metadata !2104, metadata !DIExpression()), !dbg !2105
  call void @llvm.dbg.declare(metadata double* %sans, metadata !2106, metadata !DIExpression()), !dbg !2107
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %composite731, metadata !2108, metadata !DIExpression()), !dbg !2109
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %destination, metadata !2110, metadata !DIExpression()), !dbg !2111
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %source, metadata !2112, metadata !DIExpression()), !dbg !2113
  call void @llvm.dbg.declare(metadata i16** %composite_indexes732, metadata !2114, metadata !DIExpression()), !dbg !2116
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p733, metadata !2117, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.declare(metadata i16** %indexes734, metadata !2119, metadata !DIExpression()), !dbg !2120
  call void @llvm.dbg.declare(metadata i64* %x735, metadata !2121, metadata !DIExpression()), !dbg !2122
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q736, metadata !2123, metadata !DIExpression()), !dbg !2124
  %410 = load i32, i32* %status, align 4, !dbg !2125
  %cmp737 = icmp eq i32 %410, 0, !dbg !2127
  br i1 %cmp737, label %if.then739, label %if.end740, !dbg !2128

if.then739:                                       ; preds = %for.body730
  br label %for.inc1304, !dbg !2129

if.end740:                                        ; preds = %for.body730
  %411 = load i32, i32* %clip_to_self, align 4, !dbg !2130
  %cmp741 = icmp ne i32 %411, 0, !dbg !2132
  br i1 %cmp741, label %if.then743, label %if.end754, !dbg !2133

if.then743:                                       ; preds = %if.end740
  %412 = load i64, i64* %y, align 8, !dbg !2134
  %413 = load i64, i64* %y_offset.addr, align 8, !dbg !2137
  %cmp744 = icmp slt i64 %412, %413, !dbg !2138
  br i1 %cmp744, label %if.then746, label %if.end747, !dbg !2139

if.then746:                                       ; preds = %if.then743
  br label %for.inc1304, !dbg !2140

if.end747:                                        ; preds = %if.then743
  %414 = load i64, i64* %y, align 8, !dbg !2141
  %415 = load i64, i64* %y_offset.addr, align 8, !dbg !2143
  %sub748 = sub nsw i64 %414, %415, !dbg !2144
  %416 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2145
  %rows749 = getelementptr inbounds %struct._Image, %struct._Image* %416, i32 0, i32 8, !dbg !2146
  %417 = load i64, i64* %rows749, align 8, !dbg !2146
  %cmp750 = icmp sge i64 %sub748, %417, !dbg !2147
  br i1 %cmp750, label %if.then752, label %if.end753, !dbg !2148

if.then752:                                       ; preds = %if.end747
  br label %for.inc1304, !dbg !2149

if.end753:                                        ; preds = %if.end747
  br label %if.end754, !dbg !2150

if.end754:                                        ; preds = %if.end753, %if.end740
  store %struct._PixelPacket* null, %struct._PixelPacket** %pixels, align 8, !dbg !2151
  store %struct._PixelPacket* null, %struct._PixelPacket** %p733, align 8, !dbg !2152
  %418 = load i64, i64* %y, align 8, !dbg !2153
  %419 = load i64, i64* %y_offset.addr, align 8, !dbg !2155
  %cmp755 = icmp sge i64 %418, %419, !dbg !2156
  br i1 %cmp755, label %land.lhs.true757, label %if.end775, !dbg !2157

land.lhs.true757:                                 ; preds = %if.end754
  %420 = load i64, i64* %y, align 8, !dbg !2158
  %421 = load i64, i64* %y_offset.addr, align 8, !dbg !2159
  %sub758 = sub nsw i64 %420, %421, !dbg !2160
  %422 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2161
  %rows759 = getelementptr inbounds %struct._Image, %struct._Image* %422, i32 0, i32 8, !dbg !2162
  %423 = load i64, i64* %rows759, align 8, !dbg !2162
  %cmp760 = icmp slt i64 %sub758, %423, !dbg !2163
  br i1 %cmp760, label %if.then762, label %if.end775, !dbg !2164

if.then762:                                       ; preds = %land.lhs.true757
  %424 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !2165
  %425 = load i64, i64* %y, align 8, !dbg !2167
  %426 = load i64, i64* %y_offset.addr, align 8, !dbg !2168
  %sub763 = sub nsw i64 %425, %426, !dbg !2169
  %427 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2170
  %columns764 = getelementptr inbounds %struct._Image, %struct._Image* %427, i32 0, i32 7, !dbg !2171
  %428 = load i64, i64* %columns764, align 8, !dbg !2171
  %429 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2172
  %call765 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %424, i64 0, i64 %sub763, i64 %428, i64 1, %struct._ExceptionInfo* %429), !dbg !2173
  store %struct._PixelPacket* %call765, %struct._PixelPacket** %p733, align 8, !dbg !2174
  %430 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2175
  %cmp766 = icmp eq %struct._PixelPacket* %430, null, !dbg !2177
  br i1 %cmp766, label %if.then768, label %if.end769, !dbg !2178

if.then768:                                       ; preds = %if.then762
  store i32 0, i32* %status, align 4, !dbg !2179
  br label %for.inc1304, !dbg !2181

if.end769:                                        ; preds = %if.then762
  %431 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2182
  store %struct._PixelPacket* %431, %struct._PixelPacket** %pixels, align 8, !dbg !2183
  %432 = load i64, i64* %x_offset.addr, align 8, !dbg !2184
  %cmp770 = icmp slt i64 %432, 0, !dbg !2186
  br i1 %cmp770, label %if.then772, label %if.end774, !dbg !2187

if.then772:                                       ; preds = %if.end769
  %433 = load i64, i64* %x_offset.addr, align 8, !dbg !2188
  %434 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2189
  %idx.neg = sub i64 0, %433, !dbg !2189
  %add.ptr773 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %434, i64 %idx.neg, !dbg !2189
  store %struct._PixelPacket* %add.ptr773, %struct._PixelPacket** %p733, align 8, !dbg !2189
  br label %if.end774, !dbg !2190

if.end774:                                        ; preds = %if.then772, %if.end769
  br label %if.end775, !dbg !2191

if.end775:                                        ; preds = %if.end774, %land.lhs.true757, %if.end754
  %435 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2192
  %436 = load i64, i64* %y, align 8, !dbg !2193
  %437 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2194
  %columns776 = getelementptr inbounds %struct._Image, %struct._Image* %437, i32 0, i32 7, !dbg !2195
  %438 = load i64, i64* %columns776, align 8, !dbg !2195
  %439 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2196
  %call777 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %435, i64 0, i64 %436, i64 %438, i64 1, %struct._ExceptionInfo* %439), !dbg !2197
  store %struct._PixelPacket* %call777, %struct._PixelPacket** %q736, align 8, !dbg !2198
  %440 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2199
  %cmp778 = icmp eq %struct._PixelPacket* %440, null, !dbg !2201
  br i1 %cmp778, label %if.then780, label %if.end781, !dbg !2202

if.then780:                                       ; preds = %if.end775
  store i32 0, i32* %status, align 4, !dbg !2203
  br label %for.inc1304, !dbg !2205

if.end781:                                        ; preds = %if.end775
  %441 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2206
  %call782 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %441), !dbg !2207
  store i16* %call782, i16** %indexes734, align 8, !dbg !2208
  %442 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !2209
  %call783 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %442), !dbg !2210
  store i16* %call783, i16** %composite_indexes732, align 8, !dbg !2211
  %443 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2212
  call void @GetMagickPixelPacket(%struct._Image* %443, %struct._MagickPixelPacket* %source), !dbg !2213
  %444 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2214
  call void @GetMagickPixelPacket(%struct._Image* %444, %struct._MagickPixelPacket* %destination), !dbg !2215
  store double 0.000000e+00, double* %hue, align 8, !dbg !2216
  store double 0.000000e+00, double* %chroma, align 8, !dbg !2217
  store double 0.000000e+00, double* %luma, align 8, !dbg !2218
  store i64 0, i64* %x735, align 8, !dbg !2219
  br label %for.cond784, !dbg !2221

for.cond784:                                      ; preds = %for.inc1283, %if.end781
  %445 = load i64, i64* %x735, align 8, !dbg !2222
  %446 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2224
  %columns785 = getelementptr inbounds %struct._Image, %struct._Image* %446, i32 0, i32 7, !dbg !2225
  %447 = load i64, i64* %columns785, align 8, !dbg !2225
  %cmp786 = icmp slt i64 %445, %447, !dbg !2226
  br i1 %cmp786, label %for.body788, label %for.end1285, !dbg !2227

for.body788:                                      ; preds = %for.cond784
  %448 = load i32, i32* %clip_to_self, align 4, !dbg !2228
  %cmp789 = icmp ne i32 %448, 0, !dbg !2231
  br i1 %cmp789, label %if.then791, label %if.end803, !dbg !2232

if.then791:                                       ; preds = %for.body788
  %449 = load i64, i64* %x735, align 8, !dbg !2233
  %450 = load i64, i64* %x_offset.addr, align 8, !dbg !2236
  %cmp792 = icmp slt i64 %449, %450, !dbg !2237
  br i1 %cmp792, label %if.then794, label %if.end796, !dbg !2238

if.then794:                                       ; preds = %if.then791
  %451 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2239
  %incdec.ptr795 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %451, i32 1, !dbg !2239
  store %struct._PixelPacket* %incdec.ptr795, %struct._PixelPacket** %q736, align 8, !dbg !2239
  br label %for.inc1283, !dbg !2241

if.end796:                                        ; preds = %if.then791
  %452 = load i64, i64* %x735, align 8, !dbg !2242
  %453 = load i64, i64* %x_offset.addr, align 8, !dbg !2244
  %sub797 = sub nsw i64 %452, %453, !dbg !2245
  %454 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2246
  %columns798 = getelementptr inbounds %struct._Image, %struct._Image* %454, i32 0, i32 7, !dbg !2247
  %455 = load i64, i64* %columns798, align 8, !dbg !2247
  %cmp799 = icmp sge i64 %sub797, %455, !dbg !2248
  br i1 %cmp799, label %if.then801, label %if.end802, !dbg !2249

if.then801:                                       ; preds = %if.end796
  br label %for.end1285, !dbg !2250

if.end802:                                        ; preds = %if.end796
  br label %if.end803, !dbg !2251

if.end803:                                        ; preds = %if.end802, %for.body788
  %456 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2252
  %red804 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %456, i32 0, i32 2, !dbg !2252
  %457 = load i16, i16* %red804, align 2, !dbg !2252
  %conv805 = uitofp i16 %457 to float, !dbg !2253
  %red806 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2254
  store float %conv805, float* %red806, align 8, !dbg !2255
  %458 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2256
  %green807 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %458, i32 0, i32 1, !dbg !2256
  %459 = load i16, i16* %green807, align 2, !dbg !2256
  %conv808 = uitofp i16 %459 to float, !dbg !2257
  %green809 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2258
  store float %conv808, float* %green809, align 4, !dbg !2259
  %460 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2260
  %blue810 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %460, i32 0, i32 0, !dbg !2260
  %461 = load i16, i16* %blue810, align 2, !dbg !2260
  %conv811 = uitofp i16 %461 to float, !dbg !2261
  %blue812 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2262
  store float %conv811, float* %blue812, align 8, !dbg !2263
  %462 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2264
  %matte813 = getelementptr inbounds %struct._Image, %struct._Image* %462, i32 0, i32 6, !dbg !2266
  %463 = load i32, i32* %matte813, align 8, !dbg !2266
  %cmp814 = icmp ne i32 %463, 0, !dbg !2267
  br i1 %cmp814, label %if.then816, label %if.end820, !dbg !2268

if.then816:                                       ; preds = %if.end803
  %464 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2269
  %opacity817 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %464, i32 0, i32 3, !dbg !2269
  %465 = load i16, i16* %opacity817, align 2, !dbg !2269
  %conv818 = uitofp i16 %465 to float, !dbg !2270
  %opacity819 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2271
  store float %conv818, float* %opacity819, align 4, !dbg !2272
  br label %if.end820, !dbg !2273

if.end820:                                        ; preds = %if.then816, %if.end803
  %466 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2274
  %colorspace821 = getelementptr inbounds %struct._Image, %struct._Image* %466, i32 0, i32 1, !dbg !2276
  %467 = load i32, i32* %colorspace821, align 4, !dbg !2276
  %cmp822 = icmp eq i32 %467, 12, !dbg !2277
  br i1 %cmp822, label %if.then824, label %if.end835, !dbg !2278

if.then824:                                       ; preds = %if.end820
  %468 = load i16*, i16** %indexes734, align 8, !dbg !2279
  %469 = load i64, i64* %x735, align 8, !dbg !2279
  %add.ptr825 = getelementptr inbounds i16, i16* %468, i64 %469, !dbg !2279
  %cmp826 = icmp eq i16* %add.ptr825, null, !dbg !2279
  br i1 %cmp826, label %cond.true828, label %cond.false829, !dbg !2279

cond.true828:                                     ; preds = %if.then824
  br label %cond.end832, !dbg !2279

cond.false829:                                    ; preds = %if.then824
  %470 = load i16*, i16** %indexes734, align 8, !dbg !2279
  %471 = load i64, i64* %x735, align 8, !dbg !2279
  %add.ptr830 = getelementptr inbounds i16, i16* %470, i64 %471, !dbg !2279
  %472 = load i16, i16* %add.ptr830, align 2, !dbg !2279
  %conv831 = zext i16 %472 to i32, !dbg !2279
  br label %cond.end832, !dbg !2279

cond.end832:                                      ; preds = %cond.false829, %cond.true828
  %cond833 = phi i32 [ 0, %cond.true828 ], [ %conv831, %cond.false829 ], !dbg !2279
  %conv834 = sitofp i32 %cond833 to float, !dbg !2280
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 9, !dbg !2281
  store float %conv834, float* %index, align 8, !dbg !2282
  br label %if.end835, !dbg !2283

if.end835:                                        ; preds = %cond.end832, %if.end820
  %473 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2284
  %colorspace836 = getelementptr inbounds %struct._Image, %struct._Image* %473, i32 0, i32 1, !dbg !2286
  %474 = load i32, i32* %colorspace836, align 4, !dbg !2286
  %cmp837 = icmp eq i32 %474, 12, !dbg !2287
  br i1 %cmp837, label %if.then839, label %if.end852, !dbg !2288

if.then839:                                       ; preds = %if.end835
  %red840 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2289
  %475 = load float, float* %red840, align 8, !dbg !2289
  %sub841 = fsub float 6.553500e+04, %475, !dbg !2291
  %red842 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2292
  store float %sub841, float* %red842, align 8, !dbg !2293
  %green843 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2294
  %476 = load float, float* %green843, align 4, !dbg !2294
  %sub844 = fsub float 6.553500e+04, %476, !dbg !2295
  %green845 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2296
  store float %sub844, float* %green845, align 4, !dbg !2297
  %blue846 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2298
  %477 = load float, float* %blue846, align 8, !dbg !2298
  %sub847 = fsub float 6.553500e+04, %477, !dbg !2299
  %blue848 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2300
  store float %sub847, float* %blue848, align 8, !dbg !2301
  %index849 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 9, !dbg !2302
  %478 = load float, float* %index849, align 8, !dbg !2302
  %sub850 = fsub float 6.553500e+04, %478, !dbg !2303
  %index851 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 9, !dbg !2304
  store float %sub850, float* %index851, align 8, !dbg !2305
  br label %if.end852, !dbg !2306

if.end852:                                        ; preds = %if.then839, %if.end835
  %479 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2307
  %480 = bitcast %struct._MagickPixelPacket* %destination to i8*, !dbg !2307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %479, i8* align 8 %480, i64 56, i1 false), !dbg !2307
  %481 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !2308
  %cmp853 = icmp eq %struct._PixelPacket* %481, null, !dbg !2310
  br i1 %cmp853, label %if.then863, label %lor.lhs.false855, !dbg !2311

lor.lhs.false855:                                 ; preds = %if.end852
  %482 = load i64, i64* %x735, align 8, !dbg !2312
  %483 = load i64, i64* %x_offset.addr, align 8, !dbg !2313
  %cmp856 = icmp slt i64 %482, %483, !dbg !2314
  br i1 %cmp856, label %if.then863, label %lor.lhs.false858, !dbg !2315

lor.lhs.false858:                                 ; preds = %lor.lhs.false855
  %484 = load i64, i64* %x735, align 8, !dbg !2316
  %485 = load i64, i64* %x_offset.addr, align 8, !dbg !2317
  %sub859 = sub nsw i64 %484, %485, !dbg !2318
  %486 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2319
  %columns860 = getelementptr inbounds %struct._Image, %struct._Image* %486, i32 0, i32 7, !dbg !2320
  %487 = load i64, i64* %columns860, align 8, !dbg !2320
  %cmp861 = icmp sge i64 %sub859, %487, !dbg !2321
  br i1 %cmp861, label %if.then863, label %if.end926, !dbg !2322

if.then863:                                       ; preds = %lor.lhs.false858, %lor.lhs.false855, %if.end852
  %488 = load i32, i32* %compose.addr, align 4, !dbg !2323
  switch i32 %488, label %sw.default873 [
    i32 28, label %sw.bb864
    i32 4, label %sw.bb864
    i32 7, label %sw.bb870
    i32 48, label %sw.bb870
    i32 32, label %sw.bb871
    i32 49, label %sw.bb871
    i32 39, label %sw.bb871
    i32 50, label %sw.bb871
    i32 23, label %sw.bb871
    i32 21, label %sw.bb871
    i32 17, label %sw.bb871
    i32 6, label %sw.bb871
  ], !dbg !2325

sw.bb864:                                         ; preds = %if.then863, %if.then863
  %489 = load float, float* %destination_dissolve, align 4, !dbg !2326
  %opacity865 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2329
  %490 = load float, float* %opacity865, align 4, !dbg !2329
  %sub866 = fsub float 6.553500e+04, %490, !dbg !2330
  %mul867 = fmul float %489, %sub866, !dbg !2331
  %sub868 = fsub float 6.553500e+04, %mul867, !dbg !2332
  %opacity869 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2333
  store float %sub868, float* %opacity869, align 4, !dbg !2334
  br label %sw.epilog877, !dbg !2335

sw.bb870:                                         ; preds = %if.then863, %if.then863
  call void @CompositeClear(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2336
  br label %sw.epilog877, !dbg !2338

sw.bb871:                                         ; preds = %if.then863, %if.then863, %if.then863, %if.then863, %if.then863, %if.then863, %if.then863, %if.then863
  %opacity872 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2339
  store float 6.553500e+04, float* %opacity872, align 4, !dbg !2341
  br label %sw.epilog877, !dbg !2342

sw.default873:                                    ; preds = %if.then863
  %491 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2343
  %492 = load i64, i64* %x735, align 8, !dbg !2345
  %493 = load i64, i64* %x_offset.addr, align 8, !dbg !2346
  %sub874 = sub nsw i64 %492, %493, !dbg !2347
  %494 = load i64, i64* %y, align 8, !dbg !2348
  %495 = load i64, i64* %y_offset.addr, align 8, !dbg !2349
  %sub875 = sub nsw i64 %494, %495, !dbg !2350
  %496 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2351
  %call876 = call i32 @GetOneVirtualMagickPixel(%struct._Image* %491, i64 %sub874, i64 %sub875, %struct._MagickPixelPacket* %composite731, %struct._ExceptionInfo* %496), !dbg !2352
  br label %sw.epilog877, !dbg !2353

sw.epilog877:                                     ; preds = %sw.default873, %sw.bb871, %sw.bb870, %sw.bb864
  %497 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2354
  %colorspace878 = getelementptr inbounds %struct._Image, %struct._Image* %497, i32 0, i32 1, !dbg !2356
  %498 = load i32, i32* %colorspace878, align 4, !dbg !2356
  %cmp879 = icmp eq i32 %498, 12, !dbg !2357
  br i1 %cmp879, label %if.then881, label %if.end894, !dbg !2358

if.then881:                                       ; preds = %sw.epilog877
  %red882 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2359
  %499 = load float, float* %red882, align 8, !dbg !2359
  %sub883 = fsub float 6.553500e+04, %499, !dbg !2361
  %red884 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2362
  store float %sub883, float* %red884, align 8, !dbg !2363
  %green885 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2364
  %500 = load float, float* %green885, align 4, !dbg !2364
  %sub886 = fsub float 6.553500e+04, %500, !dbg !2365
  %green887 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2366
  store float %sub886, float* %green887, align 4, !dbg !2367
  %blue888 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2368
  %501 = load float, float* %blue888, align 8, !dbg !2368
  %sub889 = fsub float 6.553500e+04, %501, !dbg !2369
  %blue890 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2370
  store float %sub889, float* %blue890, align 8, !dbg !2371
  %index891 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2372
  %502 = load float, float* %index891, align 8, !dbg !2372
  %sub892 = fsub float 6.553500e+04, %502, !dbg !2373
  %index893 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2374
  store float %sub892, float* %index893, align 8, !dbg !2375
  br label %if.end894, !dbg !2376

if.end894:                                        ; preds = %if.then881, %sw.epilog877
  %red895 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2377
  %503 = load float, float* %red895, align 8, !dbg !2377
  %call896 = call zeroext i16 @ClampToQuantum(float %503), !dbg !2377
  %504 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2377
  %red897 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %504, i32 0, i32 2, !dbg !2377
  store i16 %call896, i16* %red897, align 2, !dbg !2377
  %green898 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2378
  %505 = load float, float* %green898, align 4, !dbg !2378
  %call899 = call zeroext i16 @ClampToQuantum(float %505), !dbg !2378
  %506 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2378
  %green900 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %506, i32 0, i32 1, !dbg !2378
  store i16 %call899, i16* %green900, align 2, !dbg !2378
  %blue901 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2379
  %507 = load float, float* %blue901, align 8, !dbg !2379
  %call902 = call zeroext i16 @ClampToQuantum(float %507), !dbg !2379
  %508 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2379
  %blue903 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %508, i32 0, i32 0, !dbg !2379
  store i16 %call902, i16* %blue903, align 2, !dbg !2379
  %509 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2380
  %matte904 = getelementptr inbounds %struct._Image, %struct._Image* %509, i32 0, i32 6, !dbg !2382
  %510 = load i32, i32* %matte904, align 8, !dbg !2382
  %cmp905 = icmp ne i32 %510, 0, !dbg !2383
  br i1 %cmp905, label %if.then907, label %if.end911, !dbg !2384

if.then907:                                       ; preds = %if.end894
  %opacity908 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2385
  %511 = load float, float* %opacity908, align 4, !dbg !2385
  %call909 = call zeroext i16 @ClampToQuantum(float %511), !dbg !2385
  %512 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2385
  %opacity910 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %512, i32 0, i32 3, !dbg !2385
  store i16 %call909, i16* %opacity910, align 2, !dbg !2385
  br label %if.end911, !dbg !2385

if.end911:                                        ; preds = %if.then907, %if.end894
  %513 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2386
  %colorspace912 = getelementptr inbounds %struct._Image, %struct._Image* %513, i32 0, i32 1, !dbg !2388
  %514 = load i32, i32* %colorspace912, align 4, !dbg !2388
  %cmp913 = icmp eq i32 %514, 12, !dbg !2389
  br i1 %cmp913, label %if.then915, label %if.end924, !dbg !2390

if.then915:                                       ; preds = %if.end911
  %515 = load i16*, i16** %indexes734, align 8, !dbg !2391
  %516 = load i64, i64* %x735, align 8, !dbg !2391
  %add.ptr916 = getelementptr inbounds i16, i16* %515, i64 %516, !dbg !2391
  %cmp917 = icmp ne i16* %add.ptr916, null, !dbg !2391
  br i1 %cmp917, label %if.then919, label %if.end923, !dbg !2394

if.then919:                                       ; preds = %if.then915
  %index920 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2391
  %517 = load float, float* %index920, align 8, !dbg !2391
  %call921 = call zeroext i16 @ClampToQuantum(float %517), !dbg !2391
  %518 = load i16*, i16** %indexes734, align 8, !dbg !2391
  %519 = load i64, i64* %x735, align 8, !dbg !2391
  %add.ptr922 = getelementptr inbounds i16, i16* %518, i64 %519, !dbg !2391
  store i16 %call921, i16* %add.ptr922, align 2, !dbg !2391
  br label %if.end923, !dbg !2391

if.end923:                                        ; preds = %if.then919, %if.then915
  br label %if.end924, !dbg !2394

if.end924:                                        ; preds = %if.end923, %if.end911
  %520 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2395
  %incdec.ptr925 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %520, i32 1, !dbg !2395
  store %struct._PixelPacket* %incdec.ptr925, %struct._PixelPacket** %q736, align 8, !dbg !2395
  br label %for.inc1283, !dbg !2396

if.end926:                                        ; preds = %lor.lhs.false858
  %521 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2397
  %red927 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %521, i32 0, i32 2, !dbg !2397
  %522 = load i16, i16* %red927, align 2, !dbg !2397
  %conv928 = uitofp i16 %522 to float, !dbg !2398
  %red929 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2399
  store float %conv928, float* %red929, align 8, !dbg !2400
  %523 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2401
  %green930 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %523, i32 0, i32 1, !dbg !2401
  %524 = load i16, i16* %green930, align 2, !dbg !2401
  %conv931 = uitofp i16 %524 to float, !dbg !2402
  %green932 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2403
  store float %conv931, float* %green932, align 4, !dbg !2404
  %525 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2405
  %blue933 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %525, i32 0, i32 0, !dbg !2405
  %526 = load i16, i16* %blue933, align 2, !dbg !2405
  %conv934 = uitofp i16 %526 to float, !dbg !2406
  %blue935 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2407
  store float %conv934, float* %blue935, align 8, !dbg !2408
  %527 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2409
  %matte936 = getelementptr inbounds %struct._Image, %struct._Image* %527, i32 0, i32 6, !dbg !2411
  %528 = load i32, i32* %matte936, align 8, !dbg !2411
  %cmp937 = icmp ne i32 %528, 0, !dbg !2412
  br i1 %cmp937, label %if.then939, label %if.end943, !dbg !2413

if.then939:                                       ; preds = %if.end926
  %529 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2414
  %opacity940 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %529, i32 0, i32 3, !dbg !2414
  %530 = load i16, i16* %opacity940, align 2, !dbg !2414
  %conv941 = uitofp i16 %530 to float, !dbg !2415
  %opacity942 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2416
  store float %conv941, float* %opacity942, align 4, !dbg !2417
  br label %if.end943, !dbg !2418

if.end943:                                        ; preds = %if.then939, %if.end926
  %531 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2419
  %colorspace944 = getelementptr inbounds %struct._Image, %struct._Image* %531, i32 0, i32 1, !dbg !2421
  %532 = load i32, i32* %colorspace944, align 4, !dbg !2421
  %cmp945 = icmp eq i32 %532, 12, !dbg !2422
  br i1 %cmp945, label %if.then947, label %if.end963, !dbg !2423

if.then947:                                       ; preds = %if.end943
  %533 = load i16*, i16** %composite_indexes732, align 8, !dbg !2424
  %534 = load i64, i64* %x735, align 8, !dbg !2424
  %add.ptr948 = getelementptr inbounds i16, i16* %533, i64 %534, !dbg !2424
  %535 = load i64, i64* %x_offset.addr, align 8, !dbg !2424
  %idx.neg949 = sub i64 0, %535, !dbg !2424
  %add.ptr950 = getelementptr inbounds i16, i16* %add.ptr948, i64 %idx.neg949, !dbg !2424
  %cmp951 = icmp eq i16* %add.ptr950, null, !dbg !2424
  br i1 %cmp951, label %cond.true953, label %cond.false954, !dbg !2424

cond.true953:                                     ; preds = %if.then947
  br label %cond.end959, !dbg !2424

cond.false954:                                    ; preds = %if.then947
  %536 = load i16*, i16** %composite_indexes732, align 8, !dbg !2424
  %537 = load i64, i64* %x735, align 8, !dbg !2424
  %add.ptr955 = getelementptr inbounds i16, i16* %536, i64 %537, !dbg !2424
  %538 = load i64, i64* %x_offset.addr, align 8, !dbg !2424
  %idx.neg956 = sub i64 0, %538, !dbg !2424
  %add.ptr957 = getelementptr inbounds i16, i16* %add.ptr955, i64 %idx.neg956, !dbg !2424
  %539 = load i16, i16* %add.ptr957, align 2, !dbg !2424
  %conv958 = zext i16 %539 to i32, !dbg !2424
  br label %cond.end959, !dbg !2424

cond.end959:                                      ; preds = %cond.false954, %cond.true953
  %cond960 = phi i32 [ 0, %cond.true953 ], [ %conv958, %cond.false954 ], !dbg !2424
  %conv961 = sitofp i32 %cond960 to float, !dbg !2425
  %index962 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 9, !dbg !2426
  store float %conv961, float* %index962, align 8, !dbg !2427
  br label %if.end963, !dbg !2428

if.end963:                                        ; preds = %cond.end959, %if.end943
  %540 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2429
  %colorspace964 = getelementptr inbounds %struct._Image, %struct._Image* %540, i32 0, i32 1, !dbg !2431
  %541 = load i32, i32* %colorspace964, align 4, !dbg !2431
  %cmp965 = icmp eq i32 %541, 12, !dbg !2432
  br i1 %cmp965, label %if.then967, label %if.end980, !dbg !2433

if.then967:                                       ; preds = %if.end963
  %red968 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2434
  %542 = load float, float* %red968, align 8, !dbg !2434
  %sub969 = fsub float 6.553500e+04, %542, !dbg !2436
  %red970 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2437
  store float %sub969, float* %red970, align 8, !dbg !2438
  %green971 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2439
  %543 = load float, float* %green971, align 4, !dbg !2439
  %sub972 = fsub float 6.553500e+04, %543, !dbg !2440
  %green973 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2441
  store float %sub972, float* %green973, align 4, !dbg !2442
  %blue974 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2443
  %544 = load float, float* %blue974, align 8, !dbg !2443
  %sub975 = fsub float 6.553500e+04, %544, !dbg !2444
  %blue976 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2445
  store float %sub975, float* %blue976, align 8, !dbg !2446
  %index977 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 9, !dbg !2447
  %545 = load float, float* %index977, align 8, !dbg !2447
  %sub978 = fsub float 6.553500e+04, %545, !dbg !2448
  %index979 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 9, !dbg !2449
  store float %sub978, float* %index979, align 8, !dbg !2450
  br label %if.end980, !dbg !2451

if.end980:                                        ; preds = %if.then967, %if.end963
  %546 = load i32, i32* %compose.addr, align 4, !dbg !2452
  switch i32 %546, label %sw.default1231 [
    i32 7, label %sw.bb981
    i32 48, label %sw.bb982
    i32 13, label %sw.bb982
    i32 43, label %sw.bb982
    i32 1, label %sw.bb983
    i32 22, label %sw.bb983
    i32 40, label %sw.bb984
    i32 51, label %sw.bb984
    i32 25, label %sw.bb987
    i32 49, label %sw.bb990
    i32 32, label %sw.bb990
    i32 23, label %sw.bb991
    i32 39, label %sw.bb992
    i32 50, label %sw.bb992
    i32 24, label %sw.bb993
    i32 3, label %sw.bb994
    i32 47, label %sw.bb994
    i32 21, label %sw.bb995
    i32 54, label %sw.bb996
    i32 42, label %sw.bb997
    i32 36, label %sw.bb998
    i32 65, label %sw.bb999
    i32 2, label %sw.bb1000
    i32 52, label %sw.bb1001
    i32 26, label %sw.bb1002
    i32 29, label %sw.bb1003
    i32 38, label %sw.bb1004
    i32 45, label %sw.bb1005
    i32 55, label %sw.bb1006
    i32 64, label %sw.bb1007
    i32 20, label %sw.bb1008
    i32 33, label %sw.bb1009
    i32 66, label %sw.bb1010
    i32 67, label %sw.bb1011
    i32 63, label %sw.bb1012
    i32 9, label %sw.bb1013
    i32 8, label %sw.bb1014
    i32 61, label %sw.bb1015
    i32 62, label %sw.bb1016
    i32 30, label %sw.bb1017
    i32 41, label %sw.bb1018
    i32 46, label %sw.bb1019
    i32 34, label %sw.bb1020
    i32 58, label %sw.bb1021
    i32 59, label %sw.bb1022
    i32 60, label %sw.bb1023
    i32 6, label %sw.bb1024
    i32 5, label %sw.bb1038
    i32 28, label %sw.bb1044
    i32 4, label %sw.bb1053
    i32 53, label %sw.bb1054
    i32 37, label %sw.bb1055
    i32 31, label %sw.bb1087
    i32 44, label %sw.bb1115
    i32 35, label %sw.bb1143
    i32 10, label %sw.bb1171
    i32 18, label %sw.bb1199
    i32 14, label %sw.bb1199
    i32 15, label %sw.bb1202
    i32 16, label %sw.bb1202
    i32 12, label %sw.bb1205
    i32 19, label %sw.bb1205
    i32 17, label %sw.bb1208
    i32 11, label %sw.bb1221
    i32 57, label %sw.bb1230
    i32 27, label %sw.bb1230
    i32 56, label %sw.bb1230
  ], !dbg !2453

sw.bb981:                                         ; preds = %if.end980
  call void @CompositeClear(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2454
  br label %sw.epilog1232, !dbg !2457

sw.bb982:                                         ; preds = %if.end980, %if.end980, %if.end980
  %547 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2458
  %548 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %547, i8* align 8 %548, i64 56, i1 false), !dbg !2458
  br label %sw.epilog1232, !dbg !2460

sw.bb983:                                         ; preds = %if.end980, %if.end980
  br label %sw.epilog1232, !dbg !2461

sw.bb984:                                         ; preds = %if.end980, %if.end980
  %opacity985 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2462
  %549 = load float, float* %opacity985, align 4, !dbg !2462
  %opacity986 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2464
  %550 = load float, float* %opacity986, align 4, !dbg !2464
  call void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %source, float %549, %struct._MagickPixelPacket* %destination, float %550, %struct._MagickPixelPacket* %composite731), !dbg !2465
  br label %sw.epilog1232, !dbg !2466

sw.bb987:                                         ; preds = %if.end980
  %opacity988 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2467
  %551 = load float, float* %opacity988, align 4, !dbg !2467
  %opacity989 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2469
  %552 = load float, float* %opacity989, align 4, !dbg !2469
  call void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %destination, float %551, %struct._MagickPixelPacket* %source, float %552, %struct._MagickPixelPacket* %composite731), !dbg !2470
  br label %sw.epilog1232, !dbg !2471

sw.bb990:                                         ; preds = %if.end980, %if.end980
  call void @CompositeIn(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2472
  br label %sw.epilog1232, !dbg !2474

sw.bb991:                                         ; preds = %if.end980
  call void @CompositeIn(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %composite731), !dbg !2475
  br label %sw.epilog1232, !dbg !2477

sw.bb992:                                         ; preds = %if.end980, %if.end980
  call void @CompositeOut(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2478
  br label %sw.epilog1232, !dbg !2480

sw.bb993:                                         ; preds = %if.end980
  call void @CompositeOut(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %composite731), !dbg !2481
  br label %sw.epilog1232, !dbg !2483

sw.bb994:                                         ; preds = %if.end980, %if.end980
  call void @CompositeAtop(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2484
  br label %sw.epilog1232, !dbg !2486

sw.bb995:                                         ; preds = %if.end980
  call void @CompositeAtop(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %composite731), !dbg !2487
  br label %sw.epilog1232, !dbg !2489

sw.bb996:                                         ; preds = %if.end980
  call void @CompositeXor(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2490
  br label %sw.epilog1232, !dbg !2492

sw.bb997:                                         ; preds = %if.end980
  %553 = load i32, i32* %channel.addr, align 4, !dbg !2493
  call void @CompositePlus(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %553, %struct._MagickPixelPacket* %composite731), !dbg !2495
  br label %sw.epilog1232, !dbg !2496

sw.bb998:                                         ; preds = %if.end980
  %554 = load i32, i32* %channel.addr, align 4, !dbg !2497
  call void @CompositeMinus(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %554, %struct._MagickPixelPacket* %composite731), !dbg !2499
  br label %sw.epilog1232, !dbg !2500

sw.bb999:                                         ; preds = %if.end980
  %555 = load i32, i32* %channel.addr, align 4, !dbg !2501
  call void @CompositeMinus(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, i32 %555, %struct._MagickPixelPacket* %composite731), !dbg !2503
  br label %sw.epilog1232, !dbg !2504

sw.bb1000:                                        ; preds = %if.end980
  %556 = load i32, i32* %channel.addr, align 4, !dbg !2505
  call void @CompositeModulusAdd(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %556, %struct._MagickPixelPacket* %composite731), !dbg !2507
  br label %sw.epilog1232, !dbg !2508

sw.bb1001:                                        ; preds = %if.end980
  %557 = load i32, i32* %channel.addr, align 4, !dbg !2509
  call void @CompositeModulusSubtract(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %557, %struct._MagickPixelPacket* %composite731), !dbg !2511
  br label %sw.epilog1232, !dbg !2512

sw.bb1002:                                        ; preds = %if.end980
  %558 = load i32, i32* %channel.addr, align 4, !dbg !2513
  call void @CompositeDifference(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %558, %struct._MagickPixelPacket* %composite731), !dbg !2515
  br label %sw.epilog1232, !dbg !2516

sw.bb1003:                                        ; preds = %if.end980
  %559 = load i32, i32* %channel.addr, align 4, !dbg !2517
  call void @CompositeExclusion(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %559, %struct._MagickPixelPacket* %composite731), !dbg !2519
  br label %sw.epilog1232, !dbg !2520

sw.bb1004:                                        ; preds = %if.end980
  %560 = load i32, i32* %channel.addr, align 4, !dbg !2521
  call void @CompositeMultiply(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %560, %struct._MagickPixelPacket* %composite731), !dbg !2523
  br label %sw.epilog1232, !dbg !2524

sw.bb1005:                                        ; preds = %if.end980
  %561 = load i32, i32* %channel.addr, align 4, !dbg !2525
  call void @CompositeScreen(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %561, %struct._MagickPixelPacket* %composite731), !dbg !2527
  br label %sw.epilog1232, !dbg !2528

sw.bb1006:                                        ; preds = %if.end980
  %562 = load i32, i32* %channel.addr, align 4, !dbg !2529
  call void @CompositeDivide(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %562, %struct._MagickPixelPacket* %composite731), !dbg !2531
  br label %sw.epilog1232, !dbg !2532

sw.bb1007:                                        ; preds = %if.end980
  %563 = load i32, i32* %channel.addr, align 4, !dbg !2533
  call void @CompositeDivide(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, i32 %563, %struct._MagickPixelPacket* %composite731), !dbg !2535
  br label %sw.epilog1232, !dbg !2536

sw.bb1008:                                        ; preds = %if.end980
  %564 = load i32, i32* %channel.addr, align 4, !dbg !2537
  call void @CompositeDarken(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %564, %struct._MagickPixelPacket* %composite731), !dbg !2539
  br label %sw.epilog1232, !dbg !2540

sw.bb1009:                                        ; preds = %if.end980
  %565 = load i32, i32* %channel.addr, align 4, !dbg !2541
  call void @CompositeLighten(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %565, %struct._MagickPixelPacket* %composite731), !dbg !2543
  br label %sw.epilog1232, !dbg !2544

sw.bb1010:                                        ; preds = %if.end980
  %566 = load i32, i32* %channel.addr, align 4, !dbg !2545
  call void @CompositeDarkenIntensity(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %566, %struct._MagickPixelPacket* %composite731), !dbg !2547
  br label %sw.epilog1232, !dbg !2548

sw.bb1011:                                        ; preds = %if.end980
  %567 = load i32, i32* %channel.addr, align 4, !dbg !2549
  call void @CompositeLightenIntensity(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %567, %struct._MagickPixelPacket* %composite731), !dbg !2551
  br label %sw.epilog1232, !dbg !2552

sw.bb1012:                                        ; preds = %if.end980
  %568 = load i32, i32* %channel.addr, align 4, !dbg !2553
  call void @CompositeMathematics(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, i32 %568, %struct._GeometryInfo* %geometry_info, %struct._MagickPixelPacket* %composite731), !dbg !2555
  br label %sw.epilog1232, !dbg !2556

sw.bb1013:                                        ; preds = %if.end980
  call void @CompositeColorDodge(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2557
  br label %sw.epilog1232, !dbg !2559

sw.bb1014:                                        ; preds = %if.end980
  call void @CompositeColorBurn(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2560
  br label %sw.epilog1232, !dbg !2562

sw.bb1015:                                        ; preds = %if.end980
  call void @CompositeLinearDodge(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2563
  br label %sw.epilog1232, !dbg !2565

sw.bb1016:                                        ; preds = %if.end980
  call void @CompositeLinearBurn(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2566
  br label %sw.epilog1232, !dbg !2568

sw.bb1017:                                        ; preds = %if.end980
  call void @CompositeHardLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2569
  br label %sw.epilog1232, !dbg !2571

sw.bb1018:                                        ; preds = %if.end980
  call void @CompositeHardLight(%struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %composite731), !dbg !2572
  br label %sw.epilog1232, !dbg !2574

sw.bb1019:                                        ; preds = %if.end980
  call void @CompositeSoftLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2575
  br label %sw.epilog1232, !dbg !2577

sw.bb1020:                                        ; preds = %if.end980
  call void @CompositeLinearLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2578
  br label %sw.epilog1232, !dbg !2580

sw.bb1021:                                        ; preds = %if.end980
  call void @CompositePegtopLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2581
  br label %sw.epilog1232, !dbg !2583

sw.bb1022:                                        ; preds = %if.end980
  call void @CompositeVividLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2584
  br label %sw.epilog1232, !dbg !2586

sw.bb1023:                                        ; preds = %if.end980
  call void @CompositePinLight(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2587
  br label %sw.epilog1232, !dbg !2589

sw.bb1024:                                        ; preds = %if.end980
  %opacity1025 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2590
  %569 = load float, float* %opacity1025, align 4, !dbg !2590
  %conv1026 = fpext float %569 to double, !dbg !2593
  %cmp1027 = fcmp ogt double %conv1026, 3.276750e+04, !dbg !2594
  br i1 %cmp1027, label %if.then1033, label %lor.lhs.false1029, !dbg !2595

lor.lhs.false1029:                                ; preds = %sw.bb1024
  %call1030 = call i32 @IsMagickColorSimilar(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination), !dbg !2596
  %cmp1031 = icmp ne i32 %call1030, 0, !dbg !2597
  br i1 %cmp1031, label %if.then1033, label %if.else1035, !dbg !2598

if.then1033:                                      ; preds = %lor.lhs.false1029, %sw.bb1024
  %opacity1034 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2599
  store float 6.553500e+04, float* %opacity1034, align 4, !dbg !2600
  br label %if.end1037, !dbg !2601

if.else1035:                                      ; preds = %lor.lhs.false1029
  %opacity1036 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2602
  store float 0.000000e+00, float* %opacity1036, align 4, !dbg !2603
  br label %if.end1037

if.end1037:                                       ; preds = %if.else1035, %if.then1033
  br label %sw.epilog1232, !dbg !2604

sw.bb1038:                                        ; preds = %if.end980
  %opacity1039 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2605
  %570 = load float, float* %opacity1039, align 4, !dbg !2605
  %cmp1040 = fcmp oeq float %570, 6.553500e+04, !dbg !2608
  br i1 %cmp1040, label %if.then1042, label %if.end1043, !dbg !2609

if.then1042:                                      ; preds = %sw.bb1038
  br label %sw.epilog1232, !dbg !2610

if.end1043:                                       ; preds = %sw.bb1038
  call void @CompositeBumpmap(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, %struct._MagickPixelPacket* %composite731), !dbg !2611
  br label %sw.epilog1232, !dbg !2612

sw.bb1044:                                        ; preds = %if.end980
  %571 = load float, float* %source_dissolve, align 4, !dbg !2613
  %opacity1045 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2615
  %572 = load float, float* %opacity1045, align 4, !dbg !2615
  %sub1046 = fsub float 6.553500e+04, %572, !dbg !2616
  %mul1047 = fmul float %571, %sub1046, !dbg !2617
  %sub1048 = fsub float 6.553500e+04, %mul1047, !dbg !2618
  %573 = load float, float* %destination_dissolve, align 4, !dbg !2619
  %opacity1049 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2620
  %574 = load float, float* %opacity1049, align 4, !dbg !2620
  %sub1050 = fsub float 6.553500e+04, %574, !dbg !2621
  %mul1051 = fmul float %573, %sub1050, !dbg !2622
  %sub1052 = fsub float 6.553500e+04, %mul1051, !dbg !2623
  call void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %source, float %sub1048, %struct._MagickPixelPacket* %destination, float %sub1052, %struct._MagickPixelPacket* %composite731), !dbg !2624
  br label %sw.epilog1232, !dbg !2625

sw.bb1053:                                        ; preds = %if.end980
  %575 = load float, float* %source_dissolve, align 4, !dbg !2626
  %576 = load float, float* %destination_dissolve, align 4, !dbg !2628
  call void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %source, float %575, %struct._MagickPixelPacket* %destination, float %576, %struct._MagickPixelPacket* %composite731), !dbg !2629
  br label %sw.epilog1232, !dbg !2630

sw.bb1054:                                        ; preds = %if.end980
  %577 = load float, float* %threshold, align 4, !dbg !2631
  %578 = load float, float* %amount, align 4, !dbg !2633
  call void @CompositeThreshold(%struct._MagickPixelPacket* %source, %struct._MagickPixelPacket* %destination, float %577, float %578, %struct._MagickPixelPacket* %composite731), !dbg !2634
  br label %sw.epilog1232, !dbg !2635

sw.bb1055:                                        ; preds = %if.end980
  call void @llvm.dbg.declare(metadata i64* %offset1056, metadata !2636, metadata !DIExpression()), !dbg !2638
  %opacity1057 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2639
  %579 = load float, float* %opacity1057, align 4, !dbg !2639
  %cmp1058 = fcmp oeq float %579, 6.553500e+04, !dbg !2641
  br i1 %cmp1058, label %if.then1060, label %if.end1061, !dbg !2642

if.then1060:                                      ; preds = %sw.bb1055
  br label %sw.epilog1232, !dbg !2643

if.end1061:                                       ; preds = %sw.bb1055
  %call1062 = call zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %source), !dbg !2644
  %conv1063 = zext i16 %call1062 to i32, !dbg !2644
  %conv1064 = sitofp i32 %conv1063 to float, !dbg !2644
  %580 = load float, float* %midpoint, align 4, !dbg !2645
  %sub1065 = fsub float %conv1064, %580, !dbg !2646
  %conv1066 = fptosi float %sub1065 to i64, !dbg !2647
  store i64 %conv1066, i64* %offset1056, align 8, !dbg !2648
  %581 = load i64, i64* %offset1056, align 8, !dbg !2649
  %cmp1067 = icmp eq i64 %581, 0, !dbg !2651
  br i1 %cmp1067, label %if.then1069, label %if.end1070, !dbg !2652

if.then1069:                                      ; preds = %if.end1061
  br label %sw.epilog1232, !dbg !2653

if.end1070:                                       ; preds = %if.end1061
  %red1071 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2654
  %582 = load float, float* %red1071, align 8, !dbg !2654
  %green1072 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2655
  %583 = load float, float* %green1072, align 4, !dbg !2655
  %blue1073 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2656
  %584 = load float, float* %blue1073, align 8, !dbg !2656
  call void @CompositeHCL(float %582, float %583, float %584, double* %hue, double* %chroma, double* %luma), !dbg !2657
  %585 = load float, float* %percent_luma, align 4, !dbg !2658
  %conv1074 = fpext float %585 to double, !dbg !2658
  %mul1075 = fmul double 1.000000e-02, %conv1074, !dbg !2659
  %586 = load i64, i64* %offset1056, align 8, !dbg !2660
  %conv1076 = sitofp i64 %586 to double, !dbg !2660
  %mul1077 = fmul double %mul1075, %conv1076, !dbg !2661
  %587 = load float, float* %midpoint, align 4, !dbg !2662
  %conv1078 = fpext float %587 to double, !dbg !2662
  %div1079 = fdiv double %mul1077, %conv1078, !dbg !2663
  %588 = load double, double* %luma, align 8, !dbg !2664
  %add1080 = fadd double %588, %div1079, !dbg !2664
  store double %add1080, double* %luma, align 8, !dbg !2664
  %589 = load float, float* %percent_chroma, align 4, !dbg !2665
  %conv1081 = fpext float %589 to double, !dbg !2665
  %mul1082 = fmul double 1.000000e-02, %conv1081, !dbg !2666
  %590 = load double, double* %chroma, align 8, !dbg !2667
  %mul1083 = fmul double %590, %mul1082, !dbg !2667
  store double %mul1083, double* %chroma, align 8, !dbg !2667
  %591 = load double, double* %hue, align 8, !dbg !2668
  %592 = load double, double* %chroma, align 8, !dbg !2669
  %593 = load double, double* %luma, align 8, !dbg !2670
  %red1084 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2671
  %green1085 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2672
  %blue1086 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2673
  call void @HCLComposite(double %591, double %592, double %593, float* %red1084, float* %green1085, float* %blue1086), !dbg !2674
  br label %sw.epilog1232, !dbg !2675

sw.bb1087:                                        ; preds = %if.end980
  %opacity1088 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2676
  %594 = load float, float* %opacity1088, align 4, !dbg !2676
  %cmp1089 = fcmp oeq float %594, 6.553500e+04, !dbg !2679
  br i1 %cmp1089, label %if.then1091, label %if.end1092, !dbg !2680

if.then1091:                                      ; preds = %sw.bb1087
  br label %sw.epilog1232, !dbg !2681

if.end1092:                                       ; preds = %sw.bb1087
  %opacity1093 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2682
  %595 = load float, float* %opacity1093, align 4, !dbg !2682
  %cmp1094 = fcmp oeq float %595, 6.553500e+04, !dbg !2684
  br i1 %cmp1094, label %if.then1096, label %if.end1097, !dbg !2685

if.then1096:                                      ; preds = %if.end1092
  %596 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2686
  %597 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %596, i8* align 8 %597, i64 56, i1 false), !dbg !2686
  br label %sw.epilog1232, !dbg !2688

if.end1097:                                       ; preds = %if.end1092
  %red1098 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2689
  %598 = load float, float* %red1098, align 8, !dbg !2689
  %green1099 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2690
  %599 = load float, float* %green1099, align 4, !dbg !2690
  %blue1100 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2691
  %600 = load float, float* %blue1100, align 8, !dbg !2691
  call void @CompositeHCL(float %598, float %599, float %600, double* %hue, double* %chroma, double* %luma), !dbg !2692
  %red1101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2693
  %601 = load float, float* %red1101, align 8, !dbg !2693
  %green1102 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2694
  %602 = load float, float* %green1102, align 4, !dbg !2694
  %blue1103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2695
  %603 = load float, float* %blue1103, align 8, !dbg !2695
  call void @CompositeHCL(float %601, float %602, float %603, double* %hue, double* %sans, double* %sans), !dbg !2696
  %604 = load double, double* %hue, align 8, !dbg !2697
  %605 = load double, double* %chroma, align 8, !dbg !2698
  %606 = load double, double* %luma, align 8, !dbg !2699
  %red1104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2700
  %green1105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2701
  %blue1106 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2702
  call void @HCLComposite(double %604, double %605, double %606, float* %red1104, float* %green1105, float* %blue1106), !dbg !2703
  %opacity1107 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2704
  %607 = load float, float* %opacity1107, align 4, !dbg !2704
  %opacity1108 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2706
  %608 = load float, float* %opacity1108, align 4, !dbg !2706
  %cmp1109 = fcmp olt float %607, %608, !dbg !2707
  br i1 %cmp1109, label %if.then1111, label %if.end1114, !dbg !2708

if.then1111:                                      ; preds = %if.end1097
  %opacity1112 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2709
  %609 = load float, float* %opacity1112, align 4, !dbg !2709
  %opacity1113 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2710
  store float %609, float* %opacity1113, align 4, !dbg !2711
  br label %if.end1114, !dbg !2712

if.end1114:                                       ; preds = %if.then1111, %if.end1097
  br label %sw.epilog1232, !dbg !2713

sw.bb1115:                                        ; preds = %if.end980
  %opacity1116 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2714
  %610 = load float, float* %opacity1116, align 4, !dbg !2714
  %cmp1117 = fcmp oeq float %610, 6.553500e+04, !dbg !2717
  br i1 %cmp1117, label %if.then1119, label %if.end1120, !dbg !2718

if.then1119:                                      ; preds = %sw.bb1115
  br label %sw.epilog1232, !dbg !2719

if.end1120:                                       ; preds = %sw.bb1115
  %opacity1121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2720
  %611 = load float, float* %opacity1121, align 4, !dbg !2720
  %cmp1122 = fcmp oeq float %611, 6.553500e+04, !dbg !2722
  br i1 %cmp1122, label %if.then1124, label %if.end1125, !dbg !2723

if.then1124:                                      ; preds = %if.end1120
  %612 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2724
  %613 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %612, i8* align 8 %613, i64 56, i1 false), !dbg !2724
  br label %sw.epilog1232, !dbg !2726

if.end1125:                                       ; preds = %if.end1120
  %red1126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2727
  %614 = load float, float* %red1126, align 8, !dbg !2727
  %green1127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2728
  %615 = load float, float* %green1127, align 4, !dbg !2728
  %blue1128 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2729
  %616 = load float, float* %blue1128, align 8, !dbg !2729
  call void @CompositeHCL(float %614, float %615, float %616, double* %hue, double* %chroma, double* %luma), !dbg !2730
  %red1129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2731
  %617 = load float, float* %red1129, align 8, !dbg !2731
  %green1130 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2732
  %618 = load float, float* %green1130, align 4, !dbg !2732
  %blue1131 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2733
  %619 = load float, float* %blue1131, align 8, !dbg !2733
  call void @CompositeHCL(float %617, float %618, float %619, double* %sans, double* %chroma, double* %sans), !dbg !2734
  %620 = load double, double* %hue, align 8, !dbg !2735
  %621 = load double, double* %chroma, align 8, !dbg !2736
  %622 = load double, double* %luma, align 8, !dbg !2737
  %red1132 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2738
  %green1133 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2739
  %blue1134 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2740
  call void @HCLComposite(double %620, double %621, double %622, float* %red1132, float* %green1133, float* %blue1134), !dbg !2741
  %opacity1135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2742
  %623 = load float, float* %opacity1135, align 4, !dbg !2742
  %opacity1136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2744
  %624 = load float, float* %opacity1136, align 4, !dbg !2744
  %cmp1137 = fcmp olt float %623, %624, !dbg !2745
  br i1 %cmp1137, label %if.then1139, label %if.end1142, !dbg !2746

if.then1139:                                      ; preds = %if.end1125
  %opacity1140 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2747
  %625 = load float, float* %opacity1140, align 4, !dbg !2747
  %opacity1141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2748
  store float %625, float* %opacity1141, align 4, !dbg !2749
  br label %if.end1142, !dbg !2750

if.end1142:                                       ; preds = %if.then1139, %if.end1125
  br label %sw.epilog1232, !dbg !2751

sw.bb1143:                                        ; preds = %if.end980
  %opacity1144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2752
  %626 = load float, float* %opacity1144, align 4, !dbg !2752
  %cmp1145 = fcmp oeq float %626, 6.553500e+04, !dbg !2755
  br i1 %cmp1145, label %if.then1147, label %if.end1148, !dbg !2756

if.then1147:                                      ; preds = %sw.bb1143
  br label %sw.epilog1232, !dbg !2757

if.end1148:                                       ; preds = %sw.bb1143
  %opacity1149 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2758
  %627 = load float, float* %opacity1149, align 4, !dbg !2758
  %cmp1150 = fcmp oeq float %627, 6.553500e+04, !dbg !2760
  br i1 %cmp1150, label %if.then1152, label %if.end1153, !dbg !2761

if.then1152:                                      ; preds = %if.end1148
  %628 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2762
  %629 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %628, i8* align 8 %629, i64 56, i1 false), !dbg !2762
  br label %sw.epilog1232, !dbg !2764

if.end1153:                                       ; preds = %if.end1148
  %red1154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2765
  %630 = load float, float* %red1154, align 8, !dbg !2765
  %green1155 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2766
  %631 = load float, float* %green1155, align 4, !dbg !2766
  %blue1156 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2767
  %632 = load float, float* %blue1156, align 8, !dbg !2767
  call void @CompositeHCL(float %630, float %631, float %632, double* %hue, double* %chroma, double* %luma), !dbg !2768
  %red1157 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2769
  %633 = load float, float* %red1157, align 8, !dbg !2769
  %green1158 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2770
  %634 = load float, float* %green1158, align 4, !dbg !2770
  %blue1159 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2771
  %635 = load float, float* %blue1159, align 8, !dbg !2771
  call void @CompositeHCL(float %633, float %634, float %635, double* %sans, double* %sans, double* %luma), !dbg !2772
  %636 = load double, double* %hue, align 8, !dbg !2773
  %637 = load double, double* %chroma, align 8, !dbg !2774
  %638 = load double, double* %luma, align 8, !dbg !2775
  %red1160 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2776
  %green1161 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2777
  %blue1162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2778
  call void @HCLComposite(double %636, double %637, double %638, float* %red1160, float* %green1161, float* %blue1162), !dbg !2779
  %opacity1163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2780
  %639 = load float, float* %opacity1163, align 4, !dbg !2780
  %opacity1164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2782
  %640 = load float, float* %opacity1164, align 4, !dbg !2782
  %cmp1165 = fcmp olt float %639, %640, !dbg !2783
  br i1 %cmp1165, label %if.then1167, label %if.end1170, !dbg !2784

if.then1167:                                      ; preds = %if.end1153
  %opacity1168 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2785
  %641 = load float, float* %opacity1168, align 4, !dbg !2785
  %opacity1169 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2786
  store float %641, float* %opacity1169, align 4, !dbg !2787
  br label %if.end1170, !dbg !2788

if.end1170:                                       ; preds = %if.then1167, %if.end1153
  br label %sw.epilog1232, !dbg !2789

sw.bb1171:                                        ; preds = %if.end980
  %opacity1172 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2790
  %642 = load float, float* %opacity1172, align 4, !dbg !2790
  %cmp1173 = fcmp oeq float %642, 6.553500e+04, !dbg !2793
  br i1 %cmp1173, label %if.then1175, label %if.end1176, !dbg !2794

if.then1175:                                      ; preds = %sw.bb1171
  br label %sw.epilog1232, !dbg !2795

if.end1176:                                       ; preds = %sw.bb1171
  %opacity1177 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2796
  %643 = load float, float* %opacity1177, align 4, !dbg !2796
  %cmp1178 = fcmp oeq float %643, 6.553500e+04, !dbg !2798
  br i1 %cmp1178, label %if.then1180, label %if.end1181, !dbg !2799

if.then1180:                                      ; preds = %if.end1176
  %644 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2800
  %645 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2800
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %644, i8* align 8 %645, i64 56, i1 false), !dbg !2800
  br label %sw.epilog1232, !dbg !2802

if.end1181:                                       ; preds = %if.end1176
  %red1182 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 5, !dbg !2803
  %646 = load float, float* %red1182, align 8, !dbg !2803
  %green1183 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 6, !dbg !2804
  %647 = load float, float* %green1183, align 4, !dbg !2804
  %blue1184 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 7, !dbg !2805
  %648 = load float, float* %blue1184, align 8, !dbg !2805
  call void @CompositeHCL(float %646, float %647, float %648, double* %sans, double* %sans, double* %luma), !dbg !2806
  %red1185 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2807
  %649 = load float, float* %red1185, align 8, !dbg !2807
  %green1186 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2808
  %650 = load float, float* %green1186, align 4, !dbg !2808
  %blue1187 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2809
  %651 = load float, float* %blue1187, align 8, !dbg !2809
  call void @CompositeHCL(float %649, float %650, float %651, double* %hue, double* %chroma, double* %sans), !dbg !2810
  %652 = load double, double* %hue, align 8, !dbg !2811
  %653 = load double, double* %chroma, align 8, !dbg !2812
  %654 = load double, double* %luma, align 8, !dbg !2813
  %red1188 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2814
  %green1189 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2815
  %blue1190 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2816
  call void @HCLComposite(double %652, double %653, double %654, float* %red1188, float* %green1189, float* %blue1190), !dbg !2817
  %opacity1191 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2818
  %655 = load float, float* %opacity1191, align 4, !dbg !2818
  %opacity1192 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %destination, i32 0, i32 8, !dbg !2820
  %656 = load float, float* %opacity1192, align 4, !dbg !2820
  %cmp1193 = fcmp olt float %655, %656, !dbg !2821
  br i1 %cmp1193, label %if.then1195, label %if.end1198, !dbg !2822

if.then1195:                                      ; preds = %if.end1181
  %opacity1196 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2823
  %657 = load float, float* %opacity1196, align 4, !dbg !2823
  %opacity1197 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2824
  store float %657, float* %opacity1197, align 4, !dbg !2825
  br label %if.end1198, !dbg !2826

if.end1198:                                       ; preds = %if.then1195, %if.end1181
  br label %sw.epilog1232, !dbg !2827

sw.bb1199:                                        ; preds = %if.end980, %if.end980
  %red1200 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 5, !dbg !2828
  %658 = load float, float* %red1200, align 8, !dbg !2828
  %red1201 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2830
  store float %658, float* %red1201, align 8, !dbg !2831
  br label %sw.epilog1232, !dbg !2832

sw.bb1202:                                        ; preds = %if.end980, %if.end980
  %green1203 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 6, !dbg !2833
  %659 = load float, float* %green1203, align 4, !dbg !2833
  %green1204 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2835
  store float %659, float* %green1204, align 4, !dbg !2836
  br label %sw.epilog1232, !dbg !2837

sw.bb1205:                                        ; preds = %if.end980, %if.end980
  %blue1206 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 7, !dbg !2838
  %660 = load float, float* %blue1206, align 8, !dbg !2838
  %blue1207 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2840
  store float %660, float* %blue1207, align 8, !dbg !2841
  br label %sw.epilog1232, !dbg !2842

sw.bb1208:                                        ; preds = %if.end980
  %matte1209 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 2, !dbg !2843
  %661 = load i32, i32* %matte1209, align 8, !dbg !2843
  %cmp1210 = icmp eq i32 %661, 0, !dbg !2846
  br i1 %cmp1210, label %if.then1212, label %if.end1218, !dbg !2847

if.then1212:                                      ; preds = %sw.bb1208
  %call1213 = call zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %source), !dbg !2848
  %conv1214 = zext i16 %call1213 to i32, !dbg !2848
  %sub1215 = sub nsw i32 65535, %conv1214, !dbg !2850
  %conv1216 = sitofp i32 %sub1215 to float, !dbg !2851
  %opacity1217 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2852
  store float %conv1216, float* %opacity1217, align 4, !dbg !2853
  br label %sw.epilog1232, !dbg !2854

if.end1218:                                       ; preds = %sw.bb1208
  %opacity1219 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 8, !dbg !2855
  %662 = load float, float* %opacity1219, align 4, !dbg !2855
  %opacity1220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2856
  store float %662, float* %opacity1220, align 4, !dbg !2857
  br label %sw.epilog1232, !dbg !2858

sw.bb1221:                                        ; preds = %if.end980
  %colorspace1222 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 1, !dbg !2859
  %663 = load i32, i32* %colorspace1222, align 4, !dbg !2859
  %cmp1223 = icmp ne i32 %663, 12, !dbg !2862
  br i1 %cmp1223, label %if.then1225, label %if.end1226, !dbg !2863

if.then1225:                                      ; preds = %sw.bb1221
  call void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %source), !dbg !2864
  br label %if.end1226, !dbg !2864

if.end1226:                                       ; preds = %if.then1225, %sw.bb1221
  %index1227 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %source, i32 0, i32 9, !dbg !2865
  %664 = load float, float* %index1227, align 8, !dbg !2865
  %sub1228 = fsub float 6.553500e+04, %664, !dbg !2866
  %index1229 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2867
  store float %sub1228, float* %index1229, align 8, !dbg !2868
  br label %sw.epilog1232, !dbg !2869

sw.bb1230:                                        ; preds = %if.end980, %if.end980, %if.end980
  %665 = bitcast %struct._MagickPixelPacket* %composite731 to i8*, !dbg !2870
  %666 = bitcast %struct._MagickPixelPacket* %source to i8*, !dbg !2870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %665, i8* align 8 %666, i64 56, i1 false), !dbg !2870
  br label %sw.epilog1232, !dbg !2872

sw.default1231:                                   ; preds = %if.end980
  br label %sw.epilog1232, !dbg !2873

sw.epilog1232:                                    ; preds = %sw.default1231, %sw.bb1230, %if.end1226, %if.end1218, %if.then1212, %sw.bb1205, %sw.bb1202, %sw.bb1199, %if.end1198, %if.then1180, %if.then1175, %if.end1170, %if.then1152, %if.then1147, %if.end1142, %if.then1124, %if.then1119, %if.end1114, %if.then1096, %if.then1091, %if.end1070, %if.then1069, %if.then1060, %sw.bb1054, %sw.bb1053, %sw.bb1044, %if.end1043, %if.then1042, %if.end1037, %sw.bb1023, %sw.bb1022, %sw.bb1021, %sw.bb1020, %sw.bb1019, %sw.bb1018, %sw.bb1017, %sw.bb1016, %sw.bb1015, %sw.bb1014, %sw.bb1013, %sw.bb1012, %sw.bb1011, %sw.bb1010, %sw.bb1009, %sw.bb1008, %sw.bb1007, %sw.bb1006, %sw.bb1005, %sw.bb1004, %sw.bb1003, %sw.bb1002, %sw.bb1001, %sw.bb1000, %sw.bb999, %sw.bb998, %sw.bb997, %sw.bb996, %sw.bb995, %sw.bb994, %sw.bb993, %sw.bb992, %sw.bb991, %sw.bb990, %sw.bb987, %sw.bb984, %sw.bb983, %sw.bb982, %sw.bb981
  %667 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2874
  %colorspace1233 = getelementptr inbounds %struct._Image, %struct._Image* %667, i32 0, i32 1, !dbg !2876
  %668 = load i32, i32* %colorspace1233, align 4, !dbg !2876
  %cmp1234 = icmp eq i32 %668, 12, !dbg !2877
  br i1 %cmp1234, label %if.then1236, label %if.end1249, !dbg !2878

if.then1236:                                      ; preds = %sw.epilog1232
  %red1237 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2879
  %669 = load float, float* %red1237, align 8, !dbg !2879
  %sub1238 = fsub float 6.553500e+04, %669, !dbg !2881
  %red1239 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2882
  store float %sub1238, float* %red1239, align 8, !dbg !2883
  %green1240 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2884
  %670 = load float, float* %green1240, align 4, !dbg !2884
  %sub1241 = fsub float 6.553500e+04, %670, !dbg !2885
  %green1242 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2886
  store float %sub1241, float* %green1242, align 4, !dbg !2887
  %blue1243 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2888
  %671 = load float, float* %blue1243, align 8, !dbg !2888
  %sub1244 = fsub float 6.553500e+04, %671, !dbg !2889
  %blue1245 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2890
  store float %sub1244, float* %blue1245, align 8, !dbg !2891
  %index1246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2892
  %672 = load float, float* %index1246, align 8, !dbg !2892
  %sub1247 = fsub float 6.553500e+04, %672, !dbg !2893
  %index1248 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2894
  store float %sub1247, float* %index1248, align 8, !dbg !2895
  br label %if.end1249, !dbg !2896

if.end1249:                                       ; preds = %if.then1236, %sw.epilog1232
  %red1250 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 5, !dbg !2897
  %673 = load float, float* %red1250, align 8, !dbg !2897
  %call1251 = call zeroext i16 @ClampToQuantum(float %673), !dbg !2897
  %674 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2897
  %red1252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %674, i32 0, i32 2, !dbg !2897
  store i16 %call1251, i16* %red1252, align 2, !dbg !2897
  %green1253 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 6, !dbg !2898
  %675 = load float, float* %green1253, align 4, !dbg !2898
  %call1254 = call zeroext i16 @ClampToQuantum(float %675), !dbg !2898
  %676 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2898
  %green1255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %676, i32 0, i32 1, !dbg !2898
  store i16 %call1254, i16* %green1255, align 2, !dbg !2898
  %blue1256 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 7, !dbg !2899
  %677 = load float, float* %blue1256, align 8, !dbg !2899
  %call1257 = call zeroext i16 @ClampToQuantum(float %677), !dbg !2899
  %678 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2899
  %blue1258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %678, i32 0, i32 0, !dbg !2899
  store i16 %call1257, i16* %blue1258, align 2, !dbg !2899
  %opacity1259 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 8, !dbg !2900
  %679 = load float, float* %opacity1259, align 4, !dbg !2900
  %call1260 = call zeroext i16 @ClampToQuantum(float %679), !dbg !2900
  %680 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2900
  %opacity1261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %680, i32 0, i32 3, !dbg !2900
  store i16 %call1260, i16* %opacity1261, align 2, !dbg !2900
  %681 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2901
  %colorspace1262 = getelementptr inbounds %struct._Image, %struct._Image* %681, i32 0, i32 1, !dbg !2903
  %682 = load i32, i32* %colorspace1262, align 4, !dbg !2903
  %cmp1263 = icmp eq i32 %682, 12, !dbg !2904
  br i1 %cmp1263, label %if.then1265, label %if.end1274, !dbg !2905

if.then1265:                                      ; preds = %if.end1249
  %683 = load i16*, i16** %indexes734, align 8, !dbg !2906
  %684 = load i64, i64* %x735, align 8, !dbg !2906
  %add.ptr1266 = getelementptr inbounds i16, i16* %683, i64 %684, !dbg !2906
  %cmp1267 = icmp ne i16* %add.ptr1266, null, !dbg !2906
  br i1 %cmp1267, label %if.then1269, label %if.end1273, !dbg !2909

if.then1269:                                      ; preds = %if.then1265
  %index1270 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite731, i32 0, i32 9, !dbg !2906
  %685 = load float, float* %index1270, align 8, !dbg !2906
  %call1271 = call zeroext i16 @ClampToQuantum(float %685), !dbg !2906
  %686 = load i16*, i16** %indexes734, align 8, !dbg !2906
  %687 = load i64, i64* %x735, align 8, !dbg !2906
  %add.ptr1272 = getelementptr inbounds i16, i16* %686, i64 %687, !dbg !2906
  store i16 %call1271, i16* %add.ptr1272, align 2, !dbg !2906
  br label %if.end1273, !dbg !2906

if.end1273:                                       ; preds = %if.then1269, %if.then1265
  br label %if.end1274, !dbg !2909

if.end1274:                                       ; preds = %if.end1273, %if.end1249
  %688 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2910
  %incdec.ptr1275 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %688, i32 1, !dbg !2910
  store %struct._PixelPacket* %incdec.ptr1275, %struct._PixelPacket** %p733, align 8, !dbg !2910
  %689 = load %struct._PixelPacket*, %struct._PixelPacket** %p733, align 8, !dbg !2911
  %690 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !2913
  %691 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2914
  %columns1276 = getelementptr inbounds %struct._Image, %struct._Image* %691, i32 0, i32 7, !dbg !2915
  %692 = load i64, i64* %columns1276, align 8, !dbg !2915
  %add.ptr1277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %690, i64 %692, !dbg !2916
  %cmp1278 = icmp uge %struct._PixelPacket* %689, %add.ptr1277, !dbg !2917
  br i1 %cmp1278, label %if.then1280, label %if.end1281, !dbg !2918

if.then1280:                                      ; preds = %if.end1274
  %693 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !2919
  store %struct._PixelPacket* %693, %struct._PixelPacket** %p733, align 8, !dbg !2920
  br label %if.end1281, !dbg !2921

if.end1281:                                       ; preds = %if.then1280, %if.end1274
  %694 = load %struct._PixelPacket*, %struct._PixelPacket** %q736, align 8, !dbg !2922
  %incdec.ptr1282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %694, i32 1, !dbg !2922
  store %struct._PixelPacket* %incdec.ptr1282, %struct._PixelPacket** %q736, align 8, !dbg !2922
  br label %for.inc1283, !dbg !2923

for.inc1283:                                      ; preds = %if.end1281, %if.end924, %if.then794
  %695 = load i64, i64* %x735, align 8, !dbg !2924
  %inc1284 = add nsw i64 %695, 1, !dbg !2924
  store i64 %inc1284, i64* %x735, align 8, !dbg !2924
  br label %for.cond784, !dbg !2925, !llvm.loop !2926

for.end1285:                                      ; preds = %if.then801, %for.cond784
  %696 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2928
  %697 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2930
  %call1286 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %696, %struct._ExceptionInfo* %697), !dbg !2931
  %cmp1287 = icmp eq i32 %call1286, 0, !dbg !2932
  br i1 %cmp1287, label %if.then1289, label %if.end1290, !dbg !2933

if.then1289:                                      ; preds = %for.end1285
  store i32 0, i32* %status, align 4, !dbg !2934
  br label %if.end1290, !dbg !2935

if.end1290:                                       ; preds = %if.then1289, %for.end1285
  %698 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2936
  %progress_monitor1291 = getelementptr inbounds %struct._Image, %struct._Image* %698, i32 0, i32 47, !dbg !2938
  %699 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor1291, align 8, !dbg !2938
  %cmp1292 = icmp ne i32 (i8*, i64, i64, i8*)* %699, null, !dbg !2939
  br i1 %cmp1292, label %if.then1294, label %if.end1303, !dbg !2940

if.then1294:                                      ; preds = %if.end1290
  call void @llvm.dbg.declare(metadata i32* %proceed1295, metadata !2941, metadata !DIExpression()), !dbg !2943
  %700 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2944
  %701 = load i64, i64* %progress, align 8, !dbg !2945
  %inc1296 = add nsw i64 %701, 1, !dbg !2945
  store i64 %inc1296, i64* %progress, align 8, !dbg !2945
  %702 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2946
  %rows1297 = getelementptr inbounds %struct._Image, %struct._Image* %702, i32 0, i32 8, !dbg !2947
  %703 = load i64, i64* %rows1297, align 8, !dbg !2947
  %call1298 = call i32 @SetImageProgress(%struct._Image* %700, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 %701, i64 %703), !dbg !2948
  store i32 %call1298, i32* %proceed1295, align 4, !dbg !2949
  %704 = load i32, i32* %proceed1295, align 4, !dbg !2950
  %cmp1299 = icmp eq i32 %704, 0, !dbg !2952
  br i1 %cmp1299, label %if.then1301, label %if.end1302, !dbg !2953

if.then1301:                                      ; preds = %if.then1294
  store i32 0, i32* %status, align 4, !dbg !2954
  br label %if.end1302, !dbg !2955

if.end1302:                                       ; preds = %if.then1301, %if.then1294
  br label %if.end1303, !dbg !2956

if.end1303:                                       ; preds = %if.end1302, %if.end1290
  br label %for.inc1304, !dbg !2957

for.inc1304:                                      ; preds = %if.end1303, %if.then780, %if.then768, %if.then752, %if.then746, %if.then739
  %705 = load i64, i64* %y, align 8, !dbg !2958
  %inc1305 = add nsw i64 %705, 1, !dbg !2958
  store i64 %inc1305, i64* %y, align 8, !dbg !2958
  br label %for.cond726, !dbg !2959, !llvm.loop !2960

for.end1306:                                      ; preds = %for.cond726
  %706 = load %struct._CacheView*, %struct._CacheView** %composite_view, align 8, !dbg !2962
  %call1307 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %706), !dbg !2963
  store %struct._CacheView* %call1307, %struct._CacheView** %composite_view, align 8, !dbg !2964
  %707 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2965
  %call1308 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %707), !dbg !2966
  store %struct._CacheView* %call1308, %struct._CacheView** %image_view, align 8, !dbg !2967
  %708 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !2968
  %cmp1309 = icmp ne %struct._Image* %708, null, !dbg !2970
  br i1 %cmp1309, label %if.then1311, label %if.else1313, !dbg !2971

if.then1311:                                      ; preds = %for.end1306
  %709 = load %struct._Image*, %struct._Image** %destination_image, align 8, !dbg !2972
  %call1312 = call %struct._Image* @DestroyImage(%struct._Image* %709), !dbg !2973
  store %struct._Image* %call1312, %struct._Image** %destination_image, align 8, !dbg !2974
  br label %if.end1315, !dbg !2975

if.else1313:                                      ; preds = %for.end1306
  %710 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !2976
  %call1314 = call %struct._Image* @DestroyImage(%struct._Image* %710), !dbg !2977
  store %struct._Image* %call1314, %struct._Image** %composite_image, align 8, !dbg !2978
  br label %if.end1315

if.end1315:                                       ; preds = %if.else1313, %if.then1311
  %711 = load i32, i32* %status, align 4, !dbg !2979
  store i32 %711, i32* %retval, align 4, !dbg !2980
  br label %return, !dbg !2980

return:                                           ; preds = %if.end1315, %if.then722, %if.then296, %if.then103, %if.then94, %for.end, %if.then8, %if.then3
  %712 = load i32, i32* %retval, align 4, !dbg !2981
  ret i32 %712, !dbg !2981
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !2982 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !2989
  %cmp = icmp eq i32 %0, 2, !dbg !2991
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2992

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !2993
  %cmp1 = icmp eq i32 %1, 17, !dbg !2994
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2995

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !2996
  %cmp3 = icmp eq i32 %2, 19, !dbg !2997
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2998

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !2999
  br label %return, !dbg !2999

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !3000
  br label %return, !dbg !3000

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3001
  ret i32 %3, !dbg !3001
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

declare dso_local i8* @CopyMagickMemory(i8*, i8*, i64) #2

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !3002 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3006, metadata !DIExpression()), !dbg !3007
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !3008, metadata !DIExpression()), !dbg !3009
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !3010, metadata !DIExpression()), !dbg !3011
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !3014, metadata !DIExpression()), !dbg !3015
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3016
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !3018
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3018
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !3019
  br i1 %cmp, label %if.then, label %if.end, !dbg !3020

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !3021
  br label %return, !dbg !3021

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !3022
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !3023
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3024
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !3025
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3024
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !3026
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3027
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !3028
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !3028
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !3029
  %6 = load i64, i64* %offset.addr, align 8, !dbg !3030
  %7 = load i64, i64* %extent.addr, align 8, !dbg !3031
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3032
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !3033
  %9 = load i8*, i8** %client_data, align 8, !dbg !3033
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !3027
  store i32 %call4, i32* %retval, align 4, !dbg !3034
  br label %return, !dbg !3034

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3035
  ret i32 %10, !dbg !3035
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

declare dso_local void @SetGeometryInfo(%struct._GeometryInfo*) #2

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #2

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #2

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal double @DegreesToRadians(double %degrees) #0 !dbg !3036 {
entry:
  %degrees.addr = alloca double, align 8
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !3041, metadata !DIExpression()), !dbg !3042
  %0 = load double, double* %degrees.addr, align 8, !dbg !3043
  %mul = fmul double 0x400921FB54442D18, %0, !dbg !3044
  %div = fdiv double %mul, 1.800000e+02, !dbg !3045
  ret double %div, !dbg !3046
}

; Function Attrs: nounwind
declare dso_local double @cos(double) #3

; Function Attrs: nounwind
declare dso_local double @sin(double) #3

declare dso_local %struct._ResampleFilter* @AcquireResampleFilter(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local void @SetResampleFilter(%struct._ResampleFilter*, i32, double) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

declare dso_local void @ScaleResampleFilter(%struct._ResampleFilter*, double, double, double, double) #2

declare dso_local i32 @ResamplePixelColor(%struct._ResampleFilter*, double, double, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !3047 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3053, metadata !DIExpression()), !dbg !3054
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !3055, metadata !DIExpression()), !dbg !3056
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !3057, metadata !DIExpression()), !dbg !3058
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !3059, metadata !DIExpression()), !dbg !3060
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3061
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !3061
  %1 = load float, float* %red, align 8, !dbg !3061
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !3061
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3061
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !3061
  store i16 %call, i16* %red1, align 2, !dbg !3061
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3062
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !3062
  %4 = load float, float* %green, align 4, !dbg !3062
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !3062
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3062
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !3062
  store i16 %call2, i16* %green3, align 2, !dbg !3062
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3063
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !3063
  %7 = load float, float* %blue, align 8, !dbg !3063
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !3063
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3063
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !3063
  store i16 %call4, i16* %blue5, align 2, !dbg !3063
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3064
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !3064
  %10 = load float, float* %opacity, align 4, !dbg !3064
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !3064
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3064
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !3064
  store i16 %call6, i16* %opacity7, align 2, !dbg !3064
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3065
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !3067
  %13 = load i32, i32* %colorspace, align 4, !dbg !3067
  %cmp = icmp eq i32 %13, 12, !dbg !3068
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3069

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3070
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !3071
  %15 = load i32, i32* %storage_class, align 8, !dbg !3071
  %cmp8 = icmp eq i32 %15, 2, !dbg !3072
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !3073

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !3074
  %cmp9 = icmp ne i16* %16, null, !dbg !3074
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !3077

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3074
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !3074
  %18 = load float, float* %index11, align 8, !dbg !3074
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !3074
  %19 = load i16*, i16** %index.addr, align 8, !dbg !3074
  store i16 %call12, i16* %19, align 2, !dbg !3074
  br label %if.end, !dbg !3074

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !3077

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !3078
}

declare dso_local %struct._ResampleFilter* @DestroyResampleFilter(%struct._ResampleFilter*) #2

declare dso_local i32 @InterpolateMagickPixelPacket(%struct._Image*, %struct._CacheView*, i32, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

declare dso_local i32 @IsMagickTrue(i8*) #2

declare dso_local i32 @AccelerateCompositeImage(%struct._Image*, i32, i32, %struct._Image*, i64, i64, float, float, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeClear(%struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !3079 {
entry:
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3083, metadata !DIExpression()), !dbg !3084
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3085, metadata !DIExpression()), !dbg !3086
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3087
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3088
  store float 6.553500e+04, float* %opacity, align 4, !dbg !3089
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3090
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 5, !dbg !3091
  store float 0.000000e+00, float* %red, align 8, !dbg !3092
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3093
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 6, !dbg !3094
  store float 0.000000e+00, float* %green, align 4, !dbg !3095
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3096
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 7, !dbg !3097
  store float 0.000000e+00, float* %blue, align 8, !dbg !3098
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3099
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 1, !dbg !3101
  %5 = load i32, i32* %colorspace, align 4, !dbg !3101
  %cmp = icmp eq i32 %5, 12, !dbg !3102
  br i1 %cmp, label %if.then, label %if.end, !dbg !3103

if.then:                                          ; preds = %entry
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3104
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 9, !dbg !3105
  store float 0.000000e+00, float* %index, align 8, !dbg !3106
  br label %if.end, !dbg !3104

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3107
}

declare dso_local i32 @GetOneVirtualMagickPixel(%struct._Image*, i64, i64, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !3108 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !3112, metadata !DIExpression()), !dbg !3113
  %0 = load float, float* %value.addr, align 4, !dbg !3114
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !3116
  br i1 %cmp, label %if.then, label %if.end, !dbg !3117

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !3118
  br label %return, !dbg !3118

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !3119
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !3121
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3122

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !3123
  br label %return, !dbg !3123

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !3124
  %add = fadd float %2, 5.000000e-01, !dbg !3125
  %conv = fptoui float %add to i16, !dbg !3126
  store i16 %conv, i16* %retval, align 2, !dbg !3127
  br label %return, !dbg !3127

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !3128
  ret i16 %3, !dbg !3128
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !3129 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3133, metadata !DIExpression()), !dbg !3134
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !3135, metadata !DIExpression()), !dbg !3136
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3137, metadata !DIExpression()), !dbg !3138
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !3139, metadata !DIExpression()), !dbg !3140
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3143, metadata !DIExpression()), !dbg !3144
  %0 = load float, float* %alpha.addr, align 4, !dbg !3145
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !3147
  br i1 %cmp, label %if.then, label %if.end, !dbg !3148

if.then:                                          ; preds = %entry
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3149
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3151
  %3 = bitcast %struct._MagickPixelPacket* %1 to i8*, !dbg !3152
  %4 = bitcast %struct._MagickPixelPacket* %2 to i8*, !dbg !3152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false), !dbg !3152
  br label %if.end37, !dbg !3153

if.end:                                           ; preds = %entry
  %5 = load float, float* %alpha.addr, align 4, !dbg !3154
  %conv = fpext float %5 to double, !dbg !3154
  %mul = fmul double 0x3DF0002000300040, %conv, !dbg !3155
  %6 = load float, float* %beta.addr, align 4, !dbg !3156
  %conv1 = fpext float %6 to double, !dbg !3156
  %mul2 = fmul double %mul, %conv1, !dbg !3157
  %sub = fsub double 1.000000e+00, %mul2, !dbg !3158
  store double %sub, double* %gamma, align 8, !dbg !3159
  %7 = load double, double* %gamma, align 8, !dbg !3160
  %cmp3 = fcmp olt double %7, 0.000000e+00, !dbg !3162
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !3163

if.then5:                                         ; preds = %if.end
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3164
  br label %if.end6, !dbg !3165

if.end6:                                          ; preds = %if.then5, %if.end
  %8 = load double, double* %gamma, align 8, !dbg !3166
  %sub7 = fsub double 1.000000e+00, %8, !dbg !3167
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !3168
  %conv9 = fptrunc double %mul8 to float, !dbg !3169
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3170
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !3171
  store float %conv9, float* %opacity, align 4, !dbg !3172
  %10 = load double, double* %gamma, align 8, !dbg !3173
  %call = call double @PerceptibleReciprocal(double %10), !dbg !3174
  store double %call, double* %gamma, align 8, !dbg !3175
  %11 = load double, double* %gamma, align 8, !dbg !3176
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3177
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !3178
  %13 = load float, float* %red, align 8, !dbg !3178
  %14 = load float, float* %alpha.addr, align 4, !dbg !3179
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3180
  %red10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !3181
  %16 = load float, float* %red10, align 8, !dbg !3181
  %17 = load float, float* %beta.addr, align 4, !dbg !3182
  %call11 = call float @MagickOver_(float %13, float %14, float %16, float %17), !dbg !3183
  %conv12 = fpext float %call11 to double, !dbg !3183
  %mul13 = fmul double %11, %conv12, !dbg !3184
  %conv14 = fptrunc double %mul13 to float, !dbg !3176
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3185
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !3186
  store float %conv14, float* %red15, align 8, !dbg !3187
  %19 = load double, double* %gamma, align 8, !dbg !3188
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3189
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !3190
  %21 = load float, float* %green, align 4, !dbg !3190
  %22 = load float, float* %alpha.addr, align 4, !dbg !3191
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3192
  %green16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !3193
  %24 = load float, float* %green16, align 4, !dbg !3193
  %25 = load float, float* %beta.addr, align 4, !dbg !3194
  %call17 = call float @MagickOver_(float %21, float %22, float %24, float %25), !dbg !3195
  %conv18 = fpext float %call17 to double, !dbg !3195
  %mul19 = fmul double %19, %conv18, !dbg !3196
  %conv20 = fptrunc double %mul19 to float, !dbg !3188
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3197
  %green21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 6, !dbg !3198
  store float %conv20, float* %green21, align 4, !dbg !3199
  %27 = load double, double* %gamma, align 8, !dbg !3200
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3201
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !3202
  %29 = load float, float* %blue, align 8, !dbg !3202
  %30 = load float, float* %alpha.addr, align 4, !dbg !3203
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3204
  %blue22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 7, !dbg !3205
  %32 = load float, float* %blue22, align 8, !dbg !3205
  %33 = load float, float* %beta.addr, align 4, !dbg !3206
  %call23 = call float @MagickOver_(float %29, float %30, float %32, float %33), !dbg !3207
  %conv24 = fpext float %call23 to double, !dbg !3207
  %mul25 = fmul double %27, %conv24, !dbg !3208
  %conv26 = fptrunc double %mul25 to float, !dbg !3200
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3209
  %blue27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !3210
  store float %conv26, float* %blue27, align 8, !dbg !3211
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3212
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 1, !dbg !3214
  %36 = load i32, i32* %colorspace, align 4, !dbg !3214
  %cmp28 = icmp eq i32 %36, 12, !dbg !3215
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !3216

if.then30:                                        ; preds = %if.end6
  %37 = load double, double* %gamma, align 8, !dbg !3217
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3218
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !3219
  %39 = load float, float* %index, align 8, !dbg !3219
  %40 = load float, float* %alpha.addr, align 4, !dbg !3220
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3221
  %index31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 9, !dbg !3222
  %42 = load float, float* %index31, align 8, !dbg !3222
  %43 = load float, float* %beta.addr, align 4, !dbg !3223
  %call32 = call float @MagickOver_(float %39, float %40, float %42, float %43), !dbg !3224
  %conv33 = fpext float %call32 to double, !dbg !3224
  %mul34 = fmul double %37, %conv33, !dbg !3225
  %conv35 = fptrunc double %mul34 to float, !dbg !3217
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3226
  %index36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 9, !dbg !3227
  store float %conv35, float* %index36, align 8, !dbg !3228
  br label %if.end37, !dbg !3226

if.end37:                                         ; preds = %if.then, %if.then30, %if.end6
  ret void, !dbg !3229
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeIn(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !3230 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Sa = alloca float, align 4
  %Da = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3233, metadata !DIExpression()), !dbg !3234
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3235, metadata !DIExpression()), !dbg !3236
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3237, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3239, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3241, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.declare(metadata float* %Da, metadata !3243, metadata !DIExpression()), !dbg !3244
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3245
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3246
  %1 = load float, float* %opacity, align 4, !dbg !3246
  %conv = fpext float %1 to double, !dbg !3245
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3247
  %sub = fsub double 1.000000e+00, %mul, !dbg !3248
  %conv1 = fptrunc double %sub to float, !dbg !3249
  store float %conv1, float* %Sa, align 4, !dbg !3250
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3251
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3252
  %3 = load float, float* %opacity2, align 4, !dbg !3252
  %conv3 = fpext float %3 to double, !dbg !3251
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !3253
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !3254
  %conv6 = fptrunc double %sub5 to float, !dbg !3255
  store float %conv6, float* %Da, align 4, !dbg !3256
  %4 = load float, float* %Sa, align 4, !dbg !3257
  %5 = load float, float* %Da, align 4, !dbg !3258
  %mul7 = fmul float %4, %5, !dbg !3259
  %conv8 = fpext float %mul7 to double, !dbg !3257
  store double %conv8, double* %gamma, align 8, !dbg !3260
  %6 = load double, double* %gamma, align 8, !dbg !3261
  %cmp = fcmp olt double %6, 0.000000e+00, !dbg !3263
  br i1 %cmp, label %if.then, label %if.end, !dbg !3264

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3265
  br label %if.end, !dbg !3266

if.end:                                           ; preds = %if.then, %entry
  %7 = load double, double* %gamma, align 8, !dbg !3267
  %sub10 = fsub double 1.000000e+00, %7, !dbg !3268
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !3269
  %conv12 = fptrunc double %mul11 to float, !dbg !3270
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3271
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 8, !dbg !3272
  store float %conv12, float* %opacity13, align 4, !dbg !3273
  %9 = load double, double* %gamma, align 8, !dbg !3274
  %call = call double @PerceptibleReciprocal(double %9), !dbg !3275
  store double %call, double* %gamma, align 8, !dbg !3276
  %10 = load double, double* %gamma, align 8, !dbg !3277
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3278
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 5, !dbg !3279
  %12 = load float, float* %red, align 8, !dbg !3279
  %13 = load float, float* %Sa, align 4, !dbg !3280
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3281
  %red14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !3282
  %15 = load float, float* %red14, align 8, !dbg !3282
  %16 = load float, float* %Da, align 4, !dbg !3283
  %call15 = call float @In(float %12, float %13, float %15, float %16), !dbg !3284
  %conv16 = fpext float %call15 to double, !dbg !3284
  %mul17 = fmul double %10, %conv16, !dbg !3285
  %conv18 = fptrunc double %mul17 to float, !dbg !3277
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3286
  %red19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !3287
  store float %conv18, float* %red19, align 8, !dbg !3288
  %18 = load double, double* %gamma, align 8, !dbg !3289
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3290
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 6, !dbg !3291
  %20 = load float, float* %green, align 4, !dbg !3291
  %21 = load float, float* %Sa, align 4, !dbg !3292
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3293
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !3294
  %23 = load float, float* %green20, align 4, !dbg !3294
  %24 = load float, float* %Da, align 4, !dbg !3295
  %call21 = call float @In(float %20, float %21, float %23, float %24), !dbg !3296
  %conv22 = fpext float %call21 to double, !dbg !3296
  %mul23 = fmul double %18, %conv22, !dbg !3297
  %conv24 = fptrunc double %mul23 to float, !dbg !3289
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3298
  %green25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !3299
  store float %conv24, float* %green25, align 4, !dbg !3300
  %26 = load double, double* %gamma, align 8, !dbg !3301
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3302
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 7, !dbg !3303
  %28 = load float, float* %blue, align 8, !dbg !3303
  %29 = load float, float* %Sa, align 4, !dbg !3304
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3305
  %blue26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !3306
  %31 = load float, float* %blue26, align 8, !dbg !3306
  %32 = load float, float* %Da, align 4, !dbg !3307
  %call27 = call float @In(float %28, float %29, float %31, float %32), !dbg !3308
  %conv28 = fpext float %call27 to double, !dbg !3308
  %mul29 = fmul double %26, %conv28, !dbg !3309
  %conv30 = fptrunc double %mul29 to float, !dbg !3301
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3310
  %blue31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 7, !dbg !3311
  store float %conv30, float* %blue31, align 8, !dbg !3312
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3313
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 1, !dbg !3315
  %35 = load i32, i32* %colorspace, align 4, !dbg !3315
  %cmp32 = icmp eq i32 %35, 12, !dbg !3316
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !3317

if.then34:                                        ; preds = %if.end
  %36 = load double, double* %gamma, align 8, !dbg !3318
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3319
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 9, !dbg !3320
  %38 = load float, float* %index, align 8, !dbg !3320
  %39 = load float, float* %Sa, align 4, !dbg !3321
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3322
  %index35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !3323
  %41 = load float, float* %index35, align 8, !dbg !3323
  %42 = load float, float* %Da, align 4, !dbg !3324
  %call36 = call float @In(float %38, float %39, float %41, float %42), !dbg !3325
  %conv37 = fpext float %call36 to double, !dbg !3325
  %mul38 = fmul double %36, %conv37, !dbg !3326
  %conv39 = fptrunc double %mul38 to float, !dbg !3318
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3327
  %index40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 9, !dbg !3328
  store float %conv39, float* %index40, align 8, !dbg !3329
  br label %if.end41, !dbg !3327

if.end41:                                         ; preds = %if.then34, %if.end
  ret void, !dbg !3330
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeOut(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !3331 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3332, metadata !DIExpression()), !dbg !3333
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3334, metadata !DIExpression()), !dbg !3335
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3336, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3338, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.declare(metadata float* %Da, metadata !3340, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3342, metadata !DIExpression()), !dbg !3343
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3344
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3345
  %1 = load float, float* %opacity, align 4, !dbg !3345
  %conv = fpext float %1 to double, !dbg !3344
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3346
  %sub = fsub double 1.000000e+00, %mul, !dbg !3347
  %conv1 = fptrunc double %sub to float, !dbg !3348
  store float %conv1, float* %Sa, align 4, !dbg !3349
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3350
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3351
  %3 = load float, float* %opacity2, align 4, !dbg !3351
  %conv3 = fpext float %3 to double, !dbg !3350
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !3352
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !3353
  %conv6 = fptrunc double %sub5 to float, !dbg !3354
  store float %conv6, float* %Da, align 4, !dbg !3355
  %4 = load float, float* %Sa, align 4, !dbg !3356
  %conv7 = fpext float %4 to double, !dbg !3356
  %5 = load float, float* %Da, align 4, !dbg !3357
  %conv8 = fpext float %5 to double, !dbg !3357
  %sub9 = fsub double 1.000000e+00, %conv8, !dbg !3358
  %mul10 = fmul double %conv7, %sub9, !dbg !3359
  store double %mul10, double* %gamma, align 8, !dbg !3360
  %6 = load double, double* %gamma, align 8, !dbg !3361
  %cmp = fcmp olt double %6, 0.000000e+00, !dbg !3363
  br i1 %cmp, label %if.then, label %if.end, !dbg !3364

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3365
  br label %if.end, !dbg !3366

if.end:                                           ; preds = %if.then, %entry
  %7 = load double, double* %gamma, align 8, !dbg !3367
  %sub12 = fsub double 1.000000e+00, %7, !dbg !3368
  %mul13 = fmul double 6.553500e+04, %sub12, !dbg !3369
  %conv14 = fptrunc double %mul13 to float, !dbg !3370
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3371
  %opacity15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 8, !dbg !3372
  store float %conv14, float* %opacity15, align 4, !dbg !3373
  %9 = load double, double* %gamma, align 8, !dbg !3374
  %call = call double @PerceptibleReciprocal(double %9), !dbg !3375
  store double %call, double* %gamma, align 8, !dbg !3376
  %10 = load double, double* %gamma, align 8, !dbg !3377
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3378
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 5, !dbg !3379
  %12 = load float, float* %red, align 8, !dbg !3379
  %13 = load float, float* %Sa, align 4, !dbg !3380
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3381
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !3382
  %15 = load float, float* %red16, align 8, !dbg !3382
  %16 = load float, float* %Da, align 4, !dbg !3383
  %call17 = call float @Out(float %12, float %13, float %15, float %16), !dbg !3384
  %conv18 = fpext float %call17 to double, !dbg !3384
  %mul19 = fmul double %10, %conv18, !dbg !3385
  %conv20 = fptrunc double %mul19 to float, !dbg !3377
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3386
  %red21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !3387
  store float %conv20, float* %red21, align 8, !dbg !3388
  %18 = load double, double* %gamma, align 8, !dbg !3389
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3390
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 6, !dbg !3391
  %20 = load float, float* %green, align 4, !dbg !3391
  %21 = load float, float* %Sa, align 4, !dbg !3392
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3393
  %green22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !3394
  %23 = load float, float* %green22, align 4, !dbg !3394
  %24 = load float, float* %Da, align 4, !dbg !3395
  %call23 = call float @Out(float %20, float %21, float %23, float %24), !dbg !3396
  %conv24 = fpext float %call23 to double, !dbg !3396
  %mul25 = fmul double %18, %conv24, !dbg !3397
  %conv26 = fptrunc double %mul25 to float, !dbg !3389
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3398
  %green27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !3399
  store float %conv26, float* %green27, align 4, !dbg !3400
  %26 = load double, double* %gamma, align 8, !dbg !3401
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3402
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 7, !dbg !3403
  %28 = load float, float* %blue, align 8, !dbg !3403
  %29 = load float, float* %Sa, align 4, !dbg !3404
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3405
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !3406
  %31 = load float, float* %blue28, align 8, !dbg !3406
  %32 = load float, float* %Da, align 4, !dbg !3407
  %call29 = call float @Out(float %28, float %29, float %31, float %32), !dbg !3408
  %conv30 = fpext float %call29 to double, !dbg !3408
  %mul31 = fmul double %26, %conv30, !dbg !3409
  %conv32 = fptrunc double %mul31 to float, !dbg !3401
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3410
  %blue33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 7, !dbg !3411
  store float %conv32, float* %blue33, align 8, !dbg !3412
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3413
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 1, !dbg !3415
  %35 = load i32, i32* %colorspace, align 4, !dbg !3415
  %cmp34 = icmp eq i32 %35, 12, !dbg !3416
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !3417

if.then36:                                        ; preds = %if.end
  %36 = load double, double* %gamma, align 8, !dbg !3418
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3419
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 9, !dbg !3420
  %38 = load float, float* %index, align 8, !dbg !3420
  %39 = load float, float* %Sa, align 4, !dbg !3421
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3422
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !3423
  %41 = load float, float* %index37, align 8, !dbg !3423
  %42 = load float, float* %Da, align 4, !dbg !3424
  %call38 = call float @Out(float %38, float %39, float %41, float %42), !dbg !3425
  %conv39 = fpext float %call38 to double, !dbg !3425
  %mul40 = fmul double %36, %conv39, !dbg !3426
  %conv41 = fptrunc double %mul40 to float, !dbg !3418
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3427
  %index42 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 9, !dbg !3428
  store float %conv41, float* %index42, align 8, !dbg !3429
  br label %if.end43, !dbg !3427

if.end43:                                         ; preds = %if.then36, %if.end
  ret void, !dbg !3430
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeAtop(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !3431 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3438, metadata !DIExpression()), !dbg !3439
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3440
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3441
  %1 = load float, float* %opacity, align 4, !dbg !3441
  %conv = fpext float %1 to double, !dbg !3440
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3442
  %sub = fsub double 1.000000e+00, %mul, !dbg !3443
  %conv1 = fptrunc double %sub to float, !dbg !3444
  store float %conv1, float* %Sa, align 4, !dbg !3445
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3446
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3447
  %3 = load float, float* %opacity2, align 4, !dbg !3447
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3448
  %opacity3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 8, !dbg !3449
  store float %3, float* %opacity3, align 4, !dbg !3450
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3451
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 5, !dbg !3452
  %6 = load float, float* %red, align 8, !dbg !3452
  %7 = load float, float* %Sa, align 4, !dbg !3453
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3454
  %red4 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 5, !dbg !3455
  %9 = load float, float* %red4, align 8, !dbg !3455
  %call = call float @Atop(float %6, float %7, float %9, float 1.000000e+00), !dbg !3456
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3457
  %red5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 5, !dbg !3458
  store float %call, float* %red5, align 8, !dbg !3459
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3460
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 6, !dbg !3461
  %12 = load float, float* %green, align 4, !dbg !3461
  %13 = load float, float* %Sa, align 4, !dbg !3462
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3463
  %green6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 6, !dbg !3464
  %15 = load float, float* %green6, align 4, !dbg !3464
  %call7 = call float @Atop(float %12, float %13, float %15, float 1.000000e+00), !dbg !3465
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3466
  %green8 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 6, !dbg !3467
  store float %call7, float* %green8, align 4, !dbg !3468
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3469
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 7, !dbg !3470
  %18 = load float, float* %blue, align 8, !dbg !3470
  %19 = load float, float* %Sa, align 4, !dbg !3471
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3472
  %blue9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 7, !dbg !3473
  %21 = load float, float* %blue9, align 8, !dbg !3473
  %call10 = call float @Atop(float %18, float %19, float %21, float 1.000000e+00), !dbg !3474
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3475
  %blue11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 7, !dbg !3476
  store float %call10, float* %blue11, align 8, !dbg !3477
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3478
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 1, !dbg !3480
  %24 = load i32, i32* %colorspace, align 4, !dbg !3480
  %cmp = icmp eq i32 %24, 12, !dbg !3481
  br i1 %cmp, label %if.then, label %if.end, !dbg !3482

if.then:                                          ; preds = %entry
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3483
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 9, !dbg !3484
  %26 = load float, float* %index, align 8, !dbg !3484
  %27 = load float, float* %Sa, align 4, !dbg !3485
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3486
  %index13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 9, !dbg !3487
  %29 = load float, float* %index13, align 8, !dbg !3487
  %call14 = call float @Atop(float %26, float %27, float %29, float 1.000000e+00), !dbg !3488
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3489
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 9, !dbg !3490
  store float %call14, float* %index15, align 8, !dbg !3491
  br label %if.end, !dbg !3489

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3492
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeXor(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !3493 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3494, metadata !DIExpression()), !dbg !3495
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3496, metadata !DIExpression()), !dbg !3497
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3498, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.declare(metadata float* %Da, metadata !3500, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !3502, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3504, metadata !DIExpression()), !dbg !3505
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3506
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3507
  %1 = load float, float* %opacity, align 4, !dbg !3507
  %conv = fpext float %1 to double, !dbg !3506
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3508
  %sub = fsub double 1.000000e+00, %mul, !dbg !3509
  %conv1 = fptrunc double %sub to float, !dbg !3510
  store float %conv1, float* %Sa, align 4, !dbg !3511
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3512
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3513
  %3 = load float, float* %opacity2, align 4, !dbg !3513
  %conv3 = fpext float %3 to double, !dbg !3512
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !3514
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !3515
  %conv6 = fptrunc double %sub5 to float, !dbg !3516
  store float %conv6, float* %Da, align 4, !dbg !3517
  %4 = load float, float* %Sa, align 4, !dbg !3518
  %5 = load float, float* %Da, align 4, !dbg !3519
  %add = fadd float %4, %5, !dbg !3520
  %6 = load float, float* %Sa, align 4, !dbg !3521
  %mul7 = fmul float 2.000000e+00, %6, !dbg !3522
  %7 = load float, float* %Da, align 4, !dbg !3523
  %mul8 = fmul float %mul7, %7, !dbg !3524
  %sub9 = fsub float %add, %mul8, !dbg !3525
  store float %sub9, float* %gamma, align 4, !dbg !3526
  %8 = load float, float* %gamma, align 4, !dbg !3527
  %conv10 = fpext float %8 to double, !dbg !3527
  %cmp = fcmp olt double %conv10, 0.000000e+00, !dbg !3529
  br i1 %cmp, label %if.then, label %if.end, !dbg !3530

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %gamma, align 4, !dbg !3531
  br label %if.end, !dbg !3532

if.end:                                           ; preds = %if.then, %entry
  %9 = load float, float* %gamma, align 4, !dbg !3533
  %conv12 = fpext float %9 to double, !dbg !3533
  %sub13 = fsub double 1.000000e+00, %conv12, !dbg !3534
  %mul14 = fmul double 6.553500e+04, %sub13, !dbg !3535
  %conv15 = fptrunc double %mul14 to float, !dbg !3536
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3537
  %opacity16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !3538
  store float %conv15, float* %opacity16, align 4, !dbg !3539
  %11 = load float, float* %gamma, align 4, !dbg !3540
  %conv17 = fpext float %11 to double, !dbg !3540
  %call = call double @PerceptibleReciprocal(double %conv17), !dbg !3541
  %conv18 = fptrunc double %call to float, !dbg !3541
  store float %conv18, float* %gamma, align 4, !dbg !3542
  %12 = load float, float* %gamma, align 4, !dbg !3543
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3544
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 5, !dbg !3545
  %14 = load float, float* %red, align 8, !dbg !3545
  %15 = load float, float* %Sa, align 4, !dbg !3546
  %mul19 = fmul float %14, %15, !dbg !3547
  %16 = load float, float* %Sa, align 4, !dbg !3548
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3549
  %red20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !3550
  %18 = load float, float* %red20, align 8, !dbg !3550
  %19 = load float, float* %Da, align 4, !dbg !3551
  %mul21 = fmul float %18, %19, !dbg !3552
  %20 = load float, float* %Da, align 4, !dbg !3553
  %call22 = call float @Xor(float %mul19, float %16, float %mul21, float %20), !dbg !3554
  %mul23 = fmul float %12, %call22, !dbg !3555
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3556
  %red24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 5, !dbg !3557
  store float %mul23, float* %red24, align 8, !dbg !3558
  %22 = load float, float* %gamma, align 4, !dbg !3559
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3560
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !3561
  %24 = load float, float* %green, align 4, !dbg !3561
  %25 = load float, float* %Sa, align 4, !dbg !3562
  %mul25 = fmul float %24, %25, !dbg !3563
  %26 = load float, float* %Sa, align 4, !dbg !3564
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3565
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 6, !dbg !3566
  %28 = load float, float* %green26, align 4, !dbg !3566
  %29 = load float, float* %Da, align 4, !dbg !3567
  %mul27 = fmul float %28, %29, !dbg !3568
  %30 = load float, float* %Da, align 4, !dbg !3569
  %call28 = call float @Xor(float %mul25, float %26, float %mul27, float %30), !dbg !3570
  %mul29 = fmul float %22, %call28, !dbg !3571
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3572
  %green30 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 6, !dbg !3573
  store float %mul29, float* %green30, align 4, !dbg !3574
  %32 = load float, float* %gamma, align 4, !dbg !3575
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3576
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 7, !dbg !3577
  %34 = load float, float* %blue, align 8, !dbg !3577
  %35 = load float, float* %Sa, align 4, !dbg !3578
  %mul31 = fmul float %34, %35, !dbg !3579
  %36 = load float, float* %Sa, align 4, !dbg !3580
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3581
  %blue32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 7, !dbg !3582
  %38 = load float, float* %blue32, align 8, !dbg !3582
  %39 = load float, float* %Da, align 4, !dbg !3583
  %mul33 = fmul float %38, %39, !dbg !3584
  %40 = load float, float* %Da, align 4, !dbg !3585
  %call34 = call float @Xor(float %mul31, float %36, float %mul33, float %40), !dbg !3586
  %mul35 = fmul float %32, %call34, !dbg !3587
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3588
  %blue36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 7, !dbg !3589
  store float %mul35, float* %blue36, align 8, !dbg !3590
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3591
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 1, !dbg !3593
  %43 = load i32, i32* %colorspace, align 4, !dbg !3593
  %cmp37 = icmp eq i32 %43, 12, !dbg !3594
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !3595

if.then39:                                        ; preds = %if.end
  %44 = load float, float* %gamma, align 4, !dbg !3596
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3597
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 9, !dbg !3598
  %46 = load float, float* %index, align 8, !dbg !3598
  %47 = load float, float* %Sa, align 4, !dbg !3599
  %mul40 = fmul float %46, %47, !dbg !3600
  %48 = load float, float* %Sa, align 4, !dbg !3601
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3602
  %index41 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 9, !dbg !3603
  %50 = load float, float* %index41, align 8, !dbg !3603
  %51 = load float, float* %Da, align 4, !dbg !3604
  %mul42 = fmul float %50, %51, !dbg !3605
  %52 = load float, float* %Da, align 4, !dbg !3606
  %call43 = call float @Xor(float %mul40, float %48, float %mul42, float %52), !dbg !3607
  %mul44 = fmul float %44, %call43, !dbg !3608
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3609
  %index45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 9, !dbg !3610
  store float %mul44, float* %index45, align 8, !dbg !3611
  br label %if.end46, !dbg !3609

if.end46:                                         ; preds = %if.then39, %if.end
  ret void, !dbg !3612
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositePlus(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !3613 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3620, metadata !DIExpression()), !dbg !3621
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  %0 = load i32, i32* %channel.addr, align 4, !dbg !3624
  %and = and i32 %0, 256, !dbg !3626
  %cmp = icmp ne i32 %and, 0, !dbg !3627
  br i1 %cmp, label %if.then, label %if.else, !dbg !3628

if.then:                                          ; preds = %entry
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3629
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3631
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3632
  %3 = load float, float* %opacity, align 4, !dbg !3632
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3633
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3634
  %opacity1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !3635
  %6 = load float, float* %opacity1, align 4, !dbg !3635
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3636
  call void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %1, float %3, %struct._MagickPixelPacket* %4, float %6, %struct._MagickPixelPacket* %7), !dbg !3637
  br label %if.end37, !dbg !3638

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %channel.addr, align 4, !dbg !3639
  %and2 = and i32 %8, 8, !dbg !3642
  %cmp3 = icmp ne i32 %and2, 0, !dbg !3643
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3644

if.then4:                                         ; preds = %if.else
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3645
  %opacity5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !3646
  %10 = load float, float* %opacity5, align 4, !dbg !3646
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3647
  %opacity6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !3648
  %12 = load float, float* %opacity6, align 4, !dbg !3648
  %add = fadd float %10, %12, !dbg !3649
  %sub = fsub float %add, 6.553500e+04, !dbg !3650
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3651
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 8, !dbg !3652
  store float %sub, float* %opacity7, align 4, !dbg !3653
  br label %if.end, !dbg !3651

if.end:                                           ; preds = %if.then4, %if.else
  %14 = load i32, i32* %channel.addr, align 4, !dbg !3654
  %and8 = and i32 %14, 1, !dbg !3656
  %cmp9 = icmp ne i32 %and8, 0, !dbg !3657
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3658

if.then10:                                        ; preds = %if.end
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3659
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !3660
  %16 = load float, float* %red, align 8, !dbg !3660
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3661
  %red11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !3662
  %18 = load float, float* %red11, align 8, !dbg !3662
  %add12 = fadd float %16, %18, !dbg !3663
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3664
  %red13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !3665
  store float %add12, float* %red13, align 8, !dbg !3666
  br label %if.end14, !dbg !3664

if.end14:                                         ; preds = %if.then10, %if.end
  %20 = load i32, i32* %channel.addr, align 4, !dbg !3667
  %and15 = and i32 %20, 2, !dbg !3669
  %cmp16 = icmp ne i32 %and15, 0, !dbg !3670
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !3671

if.then17:                                        ; preds = %if.end14
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3672
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 6, !dbg !3673
  %22 = load float, float* %green, align 4, !dbg !3673
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3674
  %green18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !3675
  %24 = load float, float* %green18, align 4, !dbg !3675
  %add19 = fadd float %22, %24, !dbg !3676
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3677
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !3678
  store float %add19, float* %green20, align 4, !dbg !3679
  br label %if.end21, !dbg !3677

if.end21:                                         ; preds = %if.then17, %if.end14
  %26 = load i32, i32* %channel.addr, align 4, !dbg !3680
  %and22 = and i32 %26, 4, !dbg !3682
  %cmp23 = icmp ne i32 %and22, 0, !dbg !3683
  br i1 %cmp23, label %if.then24, label %if.end28, !dbg !3684

if.then24:                                        ; preds = %if.end21
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3685
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 7, !dbg !3686
  %28 = load float, float* %blue, align 8, !dbg !3686
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3687
  %blue25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 7, !dbg !3688
  %30 = load float, float* %blue25, align 8, !dbg !3688
  %add26 = fadd float %28, %30, !dbg !3689
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3690
  %blue27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 7, !dbg !3691
  store float %add26, float* %blue27, align 8, !dbg !3692
  br label %if.end28, !dbg !3690

if.end28:                                         ; preds = %if.then24, %if.end21
  %32 = load i32, i32* %channel.addr, align 4, !dbg !3693
  %and29 = and i32 %32, 32, !dbg !3695
  %cmp30 = icmp ne i32 %and29, 0, !dbg !3696
  br i1 %cmp30, label %land.lhs.true, label %if.end36, !dbg !3697

land.lhs.true:                                    ; preds = %if.end28
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3698
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 1, !dbg !3699
  %34 = load i32, i32* %colorspace, align 4, !dbg !3699
  %cmp31 = icmp eq i32 %34, 12, !dbg !3700
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !3701

if.then32:                                        ; preds = %land.lhs.true
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3702
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !3703
  %36 = load float, float* %index, align 8, !dbg !3703
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3704
  %index33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 9, !dbg !3705
  %38 = load float, float* %index33, align 8, !dbg !3705
  %add34 = fadd float %36, %38, !dbg !3706
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3707
  %index35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 9, !dbg !3708
  store float %add34, float* %index35, align 8, !dbg !3709
  br label %if.end36, !dbg !3707

if.end36:                                         ; preds = %if.then32, %land.lhs.true, %if.end28
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then
  ret void, !dbg !3710
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeMinus(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !3711 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3712, metadata !DIExpression()), !dbg !3713
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3714, metadata !DIExpression()), !dbg !3715
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3716, metadata !DIExpression()), !dbg !3717
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3720, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.declare(metadata float* %Da, metadata !3722, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3724, metadata !DIExpression()), !dbg !3725
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3726
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !3727
  %1 = load float, float* %opacity, align 4, !dbg !3727
  %conv = fpext float %1 to double, !dbg !3726
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3728
  %sub = fsub double 1.000000e+00, %mul, !dbg !3729
  %conv1 = fptrunc double %sub to float, !dbg !3730
  store float %conv1, float* %Sa, align 4, !dbg !3731
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3732
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !3733
  %3 = load float, float* %opacity2, align 4, !dbg !3733
  %conv3 = fpext float %3 to double, !dbg !3732
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !3734
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !3735
  %conv6 = fptrunc double %sub5 to float, !dbg !3736
  store float %conv6, float* %Da, align 4, !dbg !3737
  %4 = load i32, i32* %channel.addr, align 4, !dbg !3738
  %and = and i32 %4, 256, !dbg !3740
  %cmp = icmp ne i32 %and, 0, !dbg !3741
  br i1 %cmp, label %if.then, label %if.else, !dbg !3742

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !3743
  %6 = load float, float* %Da, align 4, !dbg !3745
  %add = fadd float %5, %6, !dbg !3746
  %7 = load float, float* %Sa, align 4, !dbg !3747
  %8 = load float, float* %Da, align 4, !dbg !3748
  %mul8 = fmul float %7, %8, !dbg !3749
  %sub9 = fsub float %add, %mul8, !dbg !3750
  %call = call float @RoundToUnity(float %sub9), !dbg !3751
  %conv10 = fpext float %call to double, !dbg !3751
  store double %conv10, double* %gamma, align 8, !dbg !3752
  %9 = load double, double* %gamma, align 8, !dbg !3753
  %sub11 = fsub double 1.000000e+00, %9, !dbg !3754
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !3755
  %conv13 = fptrunc double %mul12 to float, !dbg !3756
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3757
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !3758
  store float %conv13, float* %opacity14, align 4, !dbg !3759
  %11 = load double, double* %gamma, align 8, !dbg !3760
  %call15 = call double @PerceptibleReciprocal(double %11), !dbg !3761
  store double %call15, double* %gamma, align 8, !dbg !3762
  %12 = load double, double* %gamma, align 8, !dbg !3763
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3764
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 5, !dbg !3765
  %14 = load float, float* %red, align 8, !dbg !3765
  %15 = load float, float* %Sa, align 4, !dbg !3766
  %mul16 = fmul float %14, %15, !dbg !3767
  %16 = load float, float* %Sa, align 4, !dbg !3768
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3769
  %red17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !3770
  %18 = load float, float* %red17, align 8, !dbg !3770
  %19 = load float, float* %Da, align 4, !dbg !3771
  %mul18 = fmul float %18, %19, !dbg !3772
  %20 = load float, float* %Da, align 4, !dbg !3773
  %call19 = call float @Minus(float %mul16, float %16, float %mul18, float %20), !dbg !3774
  %conv20 = fpext float %call19 to double, !dbg !3774
  %mul21 = fmul double %12, %conv20, !dbg !3775
  %conv22 = fptrunc double %mul21 to float, !dbg !3763
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3776
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 5, !dbg !3777
  store float %conv22, float* %red23, align 8, !dbg !3778
  %22 = load double, double* %gamma, align 8, !dbg !3779
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3780
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !3781
  %24 = load float, float* %green, align 4, !dbg !3781
  %25 = load float, float* %Sa, align 4, !dbg !3782
  %mul24 = fmul float %24, %25, !dbg !3783
  %26 = load float, float* %Sa, align 4, !dbg !3784
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3785
  %green25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 6, !dbg !3786
  %28 = load float, float* %green25, align 4, !dbg !3786
  %29 = load float, float* %Da, align 4, !dbg !3787
  %mul26 = fmul float %28, %29, !dbg !3788
  %30 = load float, float* %Da, align 4, !dbg !3789
  %call27 = call float @Minus(float %mul24, float %26, float %mul26, float %30), !dbg !3790
  %conv28 = fpext float %call27 to double, !dbg !3790
  %mul29 = fmul double %22, %conv28, !dbg !3791
  %conv30 = fptrunc double %mul29 to float, !dbg !3779
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3792
  %green31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 6, !dbg !3793
  store float %conv30, float* %green31, align 4, !dbg !3794
  %32 = load double, double* %gamma, align 8, !dbg !3795
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3796
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 7, !dbg !3797
  %34 = load float, float* %blue, align 8, !dbg !3797
  %35 = load float, float* %Sa, align 4, !dbg !3798
  %mul32 = fmul float %34, %35, !dbg !3799
  %36 = load float, float* %Sa, align 4, !dbg !3800
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3801
  %blue33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 7, !dbg !3802
  %38 = load float, float* %blue33, align 8, !dbg !3802
  %39 = load float, float* %Da, align 4, !dbg !3803
  %mul34 = fmul float %38, %39, !dbg !3804
  %40 = load float, float* %Da, align 4, !dbg !3805
  %call35 = call float @Minus(float %mul32, float %36, float %mul34, float %40), !dbg !3806
  %conv36 = fpext float %call35 to double, !dbg !3806
  %mul37 = fmul double %32, %conv36, !dbg !3807
  %conv38 = fptrunc double %mul37 to float, !dbg !3795
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3808
  %blue39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 7, !dbg !3809
  store float %conv38, float* %blue39, align 8, !dbg !3810
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3811
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 1, !dbg !3813
  %43 = load i32, i32* %colorspace, align 4, !dbg !3813
  %cmp40 = icmp eq i32 %43, 12, !dbg !3814
  br i1 %cmp40, label %if.then42, label %if.end, !dbg !3815

if.then42:                                        ; preds = %if.then
  %44 = load double, double* %gamma, align 8, !dbg !3816
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3817
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 9, !dbg !3818
  %46 = load float, float* %index, align 8, !dbg !3818
  %47 = load float, float* %Sa, align 4, !dbg !3819
  %mul43 = fmul float %46, %47, !dbg !3820
  %48 = load float, float* %Sa, align 4, !dbg !3821
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3822
  %index44 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 9, !dbg !3823
  %50 = load float, float* %index44, align 8, !dbg !3823
  %51 = load float, float* %Da, align 4, !dbg !3824
  %mul45 = fmul float %50, %51, !dbg !3825
  %52 = load float, float* %Da, align 4, !dbg !3826
  %call46 = call float @Minus(float %mul43, float %48, float %mul45, float %52), !dbg !3827
  %conv47 = fpext float %call46 to double, !dbg !3827
  %mul48 = fmul double %44, %conv47, !dbg !3828
  %conv49 = fptrunc double %mul48 to float, !dbg !3816
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3829
  %index50 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 9, !dbg !3830
  store float %conv49, float* %index50, align 8, !dbg !3831
  br label %if.end, !dbg !3829

if.end:                                           ; preds = %if.then42, %if.then
  br label %if.end101, !dbg !3832

if.else:                                          ; preds = %entry
  %54 = load i32, i32* %channel.addr, align 4, !dbg !3833
  %and51 = and i32 %54, 8, !dbg !3836
  %cmp52 = icmp ne i32 %and51, 0, !dbg !3837
  br i1 %cmp52, label %if.then54, label %if.end61, !dbg !3838

if.then54:                                        ; preds = %if.else
  %55 = load float, float* %Sa, align 4, !dbg !3839
  %56 = load float, float* %Da, align 4, !dbg !3840
  %sub55 = fsub float %55, %56, !dbg !3841
  %conv56 = fpext float %sub55 to double, !dbg !3842
  %sub57 = fsub double 1.000000e+00, %conv56, !dbg !3843
  %mul58 = fmul double 6.553500e+04, %sub57, !dbg !3844
  %conv59 = fptrunc double %mul58 to float, !dbg !3845
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3846
  %opacity60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 8, !dbg !3847
  store float %conv59, float* %opacity60, align 4, !dbg !3848
  br label %if.end61, !dbg !3846

if.end61:                                         ; preds = %if.then54, %if.else
  %58 = load i32, i32* %channel.addr, align 4, !dbg !3849
  %and62 = and i32 %58, 1, !dbg !3851
  %cmp63 = icmp ne i32 %and62, 0, !dbg !3852
  br i1 %cmp63, label %if.then65, label %if.end70, !dbg !3853

if.then65:                                        ; preds = %if.end61
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3854
  %red66 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 5, !dbg !3855
  %60 = load float, float* %red66, align 8, !dbg !3855
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3856
  %red67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 5, !dbg !3857
  %62 = load float, float* %red67, align 8, !dbg !3857
  %sub68 = fsub float %60, %62, !dbg !3858
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3859
  %red69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 5, !dbg !3860
  store float %sub68, float* %red69, align 8, !dbg !3861
  br label %if.end70, !dbg !3859

if.end70:                                         ; preds = %if.then65, %if.end61
  %64 = load i32, i32* %channel.addr, align 4, !dbg !3862
  %and71 = and i32 %64, 2, !dbg !3864
  %cmp72 = icmp ne i32 %and71, 0, !dbg !3865
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !3866

if.then74:                                        ; preds = %if.end70
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3867
  %green75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 6, !dbg !3868
  %66 = load float, float* %green75, align 4, !dbg !3868
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3869
  %green76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !3870
  %68 = load float, float* %green76, align 4, !dbg !3870
  %sub77 = fsub float %66, %68, !dbg !3871
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3872
  %green78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 6, !dbg !3873
  store float %sub77, float* %green78, align 4, !dbg !3874
  br label %if.end79, !dbg !3872

if.end79:                                         ; preds = %if.then74, %if.end70
  %70 = load i32, i32* %channel.addr, align 4, !dbg !3875
  %and80 = and i32 %70, 4, !dbg !3877
  %cmp81 = icmp ne i32 %and80, 0, !dbg !3878
  br i1 %cmp81, label %if.then83, label %if.end88, !dbg !3879

if.then83:                                        ; preds = %if.end79
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3880
  %blue84 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 7, !dbg !3881
  %72 = load float, float* %blue84, align 8, !dbg !3881
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3882
  %blue85 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !3883
  %74 = load float, float* %blue85, align 8, !dbg !3883
  %sub86 = fsub float %72, %74, !dbg !3884
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3885
  %blue87 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 7, !dbg !3886
  store float %sub86, float* %blue87, align 8, !dbg !3887
  br label %if.end88, !dbg !3885

if.end88:                                         ; preds = %if.then83, %if.end79
  %76 = load i32, i32* %channel.addr, align 4, !dbg !3888
  %and89 = and i32 %76, 32, !dbg !3890
  %cmp90 = icmp ne i32 %and89, 0, !dbg !3891
  br i1 %cmp90, label %land.lhs.true, label %if.end100, !dbg !3892

land.lhs.true:                                    ; preds = %if.end88
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3893
  %colorspace92 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 1, !dbg !3894
  %78 = load i32, i32* %colorspace92, align 4, !dbg !3894
  %cmp93 = icmp eq i32 %78, 12, !dbg !3895
  br i1 %cmp93, label %if.then95, label %if.end100, !dbg !3896

if.then95:                                        ; preds = %land.lhs.true
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3897
  %index96 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 9, !dbg !3898
  %80 = load float, float* %index96, align 8, !dbg !3898
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3899
  %index97 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i32 0, i32 9, !dbg !3900
  %82 = load float, float* %index97, align 8, !dbg !3900
  %sub98 = fsub float %80, %82, !dbg !3901
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3902
  %index99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i32 0, i32 9, !dbg !3903
  store float %sub98, float* %index99, align 8, !dbg !3904
  br label %if.end100, !dbg !3902

if.end100:                                        ; preds = %if.then95, %land.lhs.true, %if.end88
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end
  ret void, !dbg !3905
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeModulusAdd(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !3906 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Sa = alloca float, align 4
  %Da = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3907, metadata !DIExpression()), !dbg !3908
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3909, metadata !DIExpression()), !dbg !3910
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3911, metadata !DIExpression()), !dbg !3912
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3913, metadata !DIExpression()), !dbg !3914
  %0 = load i32, i32* %channel.addr, align 4, !dbg !3915
  %and = and i32 %0, 256, !dbg !3917
  %cmp = icmp ne i32 %and, 0, !dbg !3918
  br i1 %cmp, label %if.then, label %if.else, !dbg !3919

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata float* %Da, metadata !3925, metadata !DIExpression()), !dbg !3926
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3927
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !3928
  %2 = load float, float* %opacity, align 4, !dbg !3928
  %conv = fpext float %2 to double, !dbg !3927
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !3929
  %sub = fsub double 1.000000e+00, %mul, !dbg !3930
  %conv1 = fptrunc double %sub to float, !dbg !3931
  store float %conv1, float* %Sa, align 4, !dbg !3932
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3933
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !3934
  %4 = load float, float* %opacity2, align 4, !dbg !3934
  %conv3 = fpext float %4 to double, !dbg !3933
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !3935
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !3936
  %conv6 = fptrunc double %sub5 to float, !dbg !3937
  store float %conv6, float* %Da, align 4, !dbg !3938
  %5 = load float, float* %Sa, align 4, !dbg !3939
  %6 = load float, float* %Da, align 4, !dbg !3940
  %add = fadd float %5, %6, !dbg !3941
  %7 = load float, float* %Sa, align 4, !dbg !3942
  %8 = load float, float* %Da, align 4, !dbg !3943
  %mul7 = fmul float %7, %8, !dbg !3944
  %sub8 = fsub float %add, %mul7, !dbg !3945
  %call = call float @RoundToUnity(float %sub8), !dbg !3946
  %conv9 = fpext float %call to double, !dbg !3946
  store double %conv9, double* %gamma, align 8, !dbg !3947
  %9 = load double, double* %gamma, align 8, !dbg !3948
  %sub10 = fsub double 1.000000e+00, %9, !dbg !3949
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !3950
  %conv12 = fptrunc double %mul11 to float, !dbg !3951
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3952
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !3953
  store float %conv12, float* %opacity13, align 4, !dbg !3954
  %11 = load double, double* %gamma, align 8, !dbg !3955
  %call14 = call double @PerceptibleReciprocal(double %11), !dbg !3956
  store double %call14, double* %gamma, align 8, !dbg !3957
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3958
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !3959
  %13 = load float, float* %red, align 8, !dbg !3959
  %14 = load float, float* %Sa, align 4, !dbg !3960
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3961
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !3962
  %16 = load float, float* %red15, align 8, !dbg !3962
  %17 = load float, float* %Da, align 4, !dbg !3963
  %call16 = call float @ModulusAdd(float %13, float %14, float %16, float %17), !dbg !3964
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3965
  %red17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !3966
  store float %call16, float* %red17, align 8, !dbg !3967
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3968
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 6, !dbg !3969
  %20 = load float, float* %green, align 4, !dbg !3969
  %21 = load float, float* %Sa, align 4, !dbg !3970
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3971
  %green18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !3972
  %23 = load float, float* %green18, align 4, !dbg !3972
  %24 = load float, float* %Da, align 4, !dbg !3973
  %call19 = call float @ModulusAdd(float %20, float %21, float %23, float %24), !dbg !3974
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3975
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !3976
  store float %call19, float* %green20, align 4, !dbg !3977
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3978
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 7, !dbg !3979
  %27 = load float, float* %blue, align 8, !dbg !3979
  %28 = load float, float* %Sa, align 4, !dbg !3980
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3981
  %blue21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 7, !dbg !3982
  %30 = load float, float* %blue21, align 8, !dbg !3982
  %31 = load float, float* %Da, align 4, !dbg !3983
  %call22 = call float @ModulusAdd(float %27, float %28, float %30, float %31), !dbg !3984
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3985
  %blue23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 7, !dbg !3986
  store float %call22, float* %blue23, align 8, !dbg !3987
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3988
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 1, !dbg !3990
  %34 = load i32, i32* %colorspace, align 4, !dbg !3990
  %cmp24 = icmp eq i32 %34, 12, !dbg !3991
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !3992

if.then26:                                        ; preds = %if.then
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3993
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !3994
  %36 = load float, float* %index, align 8, !dbg !3994
  %37 = load float, float* %Sa, align 4, !dbg !3995
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3996
  %index27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !3997
  %39 = load float, float* %index27, align 8, !dbg !3997
  %40 = load float, float* %Da, align 4, !dbg !3998
  %call28 = call float @ModulusAdd(float %36, float %37, float %39, float %40), !dbg !3999
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4000
  %index29 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 9, !dbg !4001
  store float %call28, float* %index29, align 8, !dbg !4002
  br label %if.end, !dbg !4000

if.end:                                           ; preds = %if.then26, %if.then
  br label %if.end81, !dbg !4003

if.else:                                          ; preds = %entry
  %42 = load i32, i32* %channel.addr, align 4, !dbg !4004
  %and30 = and i32 %42, 8, !dbg !4007
  %cmp31 = icmp ne i32 %and30, 0, !dbg !4008
  br i1 %cmp31, label %if.then33, label %if.end41, !dbg !4009

if.then33:                                        ; preds = %if.else
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4010
  %opacity34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 8, !dbg !4011
  %44 = load float, float* %opacity34, align 4, !dbg !4011
  %sub35 = fsub float 6.553500e+04, %44, !dbg !4012
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4013
  %opacity36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 8, !dbg !4014
  %46 = load float, float* %opacity36, align 4, !dbg !4014
  %sub37 = fsub float 6.553500e+04, %46, !dbg !4015
  %call38 = call float @ModulusAdd(float %sub35, float 1.000000e+00, float %sub37, float 1.000000e+00), !dbg !4016
  %sub39 = fsub float 6.553500e+04, %call38, !dbg !4017
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4018
  %opacity40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 8, !dbg !4019
  store float %sub39, float* %opacity40, align 4, !dbg !4020
  br label %if.end41, !dbg !4018

if.end41:                                         ; preds = %if.then33, %if.else
  %48 = load i32, i32* %channel.addr, align 4, !dbg !4021
  %and42 = and i32 %48, 1, !dbg !4023
  %cmp43 = icmp ne i32 %and42, 0, !dbg !4024
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !4025

if.then45:                                        ; preds = %if.end41
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4026
  %red46 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 5, !dbg !4027
  %50 = load float, float* %red46, align 8, !dbg !4027
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4028
  %red47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 5, !dbg !4029
  %52 = load float, float* %red47, align 8, !dbg !4029
  %call48 = call float @ModulusAdd(float %50, float 1.000000e+00, float %52, float 1.000000e+00), !dbg !4030
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4031
  %red49 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 5, !dbg !4032
  store float %call48, float* %red49, align 8, !dbg !4033
  br label %if.end50, !dbg !4031

if.end50:                                         ; preds = %if.then45, %if.end41
  %54 = load i32, i32* %channel.addr, align 4, !dbg !4034
  %and51 = and i32 %54, 2, !dbg !4036
  %cmp52 = icmp ne i32 %and51, 0, !dbg !4037
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !4038

if.then54:                                        ; preds = %if.end50
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4039
  %green55 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 6, !dbg !4040
  %56 = load float, float* %green55, align 4, !dbg !4040
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4041
  %green56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 6, !dbg !4042
  %58 = load float, float* %green56, align 4, !dbg !4042
  %call57 = call float @ModulusAdd(float %56, float 1.000000e+00, float %58, float 1.000000e+00), !dbg !4043
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4044
  %green58 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 6, !dbg !4045
  store float %call57, float* %green58, align 4, !dbg !4046
  br label %if.end59, !dbg !4044

if.end59:                                         ; preds = %if.then54, %if.end50
  %60 = load i32, i32* %channel.addr, align 4, !dbg !4047
  %and60 = and i32 %60, 4, !dbg !4049
  %cmp61 = icmp ne i32 %and60, 0, !dbg !4050
  br i1 %cmp61, label %if.then63, label %if.end68, !dbg !4051

if.then63:                                        ; preds = %if.end59
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4052
  %blue64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 7, !dbg !4053
  %62 = load float, float* %blue64, align 8, !dbg !4053
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4054
  %blue65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 7, !dbg !4055
  %64 = load float, float* %blue65, align 8, !dbg !4055
  %call66 = call float @ModulusAdd(float %62, float 1.000000e+00, float %64, float 1.000000e+00), !dbg !4056
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4057
  %blue67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 7, !dbg !4058
  store float %call66, float* %blue67, align 8, !dbg !4059
  br label %if.end68, !dbg !4057

if.end68:                                         ; preds = %if.then63, %if.end59
  %66 = load i32, i32* %channel.addr, align 4, !dbg !4060
  %and69 = and i32 %66, 32, !dbg !4062
  %cmp70 = icmp ne i32 %and69, 0, !dbg !4063
  br i1 %cmp70, label %land.lhs.true, label %if.end80, !dbg !4064

land.lhs.true:                                    ; preds = %if.end68
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4065
  %colorspace72 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 1, !dbg !4066
  %68 = load i32, i32* %colorspace72, align 4, !dbg !4066
  %cmp73 = icmp eq i32 %68, 12, !dbg !4067
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !4068

if.then75:                                        ; preds = %land.lhs.true
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4069
  %index76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 9, !dbg !4070
  %70 = load float, float* %index76, align 8, !dbg !4070
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4071
  %index77 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 9, !dbg !4072
  %72 = load float, float* %index77, align 8, !dbg !4072
  %call78 = call float @ModulusAdd(float %70, float 1.000000e+00, float %72, float 1.000000e+00), !dbg !4073
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4074
  %index79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 9, !dbg !4075
  store float %call78, float* %index79, align 8, !dbg !4076
  br label %if.end80, !dbg !4074

if.end80:                                         ; preds = %if.then75, %land.lhs.true, %if.end68
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end
  ret void, !dbg !4077
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeModulusSubtract(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !4078 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4083, metadata !DIExpression()), !dbg !4084
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !4085, metadata !DIExpression()), !dbg !4086
  %0 = load i32, i32* %channel.addr, align 4, !dbg !4087
  %and = and i32 %0, 256, !dbg !4089
  %cmp = icmp ne i32 %and, 0, !dbg !4090
  br i1 %cmp, label %if.then, label %if.else, !dbg !4091

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4092, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata float* %Da, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !4097, metadata !DIExpression()), !dbg !4098
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4099
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !4100
  %2 = load float, float* %opacity, align 4, !dbg !4100
  %conv = fpext float %2 to double, !dbg !4099
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !4101
  %sub = fsub double 1.000000e+00, %mul, !dbg !4102
  %conv1 = fptrunc double %sub to float, !dbg !4103
  store float %conv1, float* %Sa, align 4, !dbg !4104
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4105
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !4106
  %4 = load float, float* %opacity2, align 4, !dbg !4106
  %conv3 = fpext float %4 to double, !dbg !4105
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !4107
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !4108
  %conv6 = fptrunc double %sub5 to float, !dbg !4109
  store float %conv6, float* %Da, align 4, !dbg !4110
  %5 = load float, float* %Sa, align 4, !dbg !4111
  %6 = load float, float* %Da, align 4, !dbg !4112
  %add = fadd float %5, %6, !dbg !4113
  %7 = load float, float* %Sa, align 4, !dbg !4114
  %8 = load float, float* %Da, align 4, !dbg !4115
  %mul7 = fmul float %7, %8, !dbg !4116
  %sub8 = fsub float %add, %mul7, !dbg !4117
  %call = call float @RoundToUnity(float %sub8), !dbg !4118
  %conv9 = fpext float %call to double, !dbg !4118
  store double %conv9, double* %gamma, align 8, !dbg !4119
  %9 = load double, double* %gamma, align 8, !dbg !4120
  %sub10 = fsub double 1.000000e+00, %9, !dbg !4121
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !4122
  %conv12 = fptrunc double %mul11 to float, !dbg !4123
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4124
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !4125
  store float %conv12, float* %opacity13, align 4, !dbg !4126
  %11 = load double, double* %gamma, align 8, !dbg !4127
  %call14 = call double @PerceptibleReciprocal(double %11), !dbg !4128
  store double %call14, double* %gamma, align 8, !dbg !4129
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4130
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !4131
  %13 = load float, float* %red, align 8, !dbg !4131
  %14 = load float, float* %Sa, align 4, !dbg !4132
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4133
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !4134
  %16 = load float, float* %red15, align 8, !dbg !4134
  %17 = load float, float* %Da, align 4, !dbg !4135
  %call16 = call float @ModulusSubtract(float %13, float %14, float %16, float %17), !dbg !4136
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4137
  %red17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !4138
  store float %call16, float* %red17, align 8, !dbg !4139
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4140
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 6, !dbg !4141
  %20 = load float, float* %green, align 4, !dbg !4141
  %21 = load float, float* %Sa, align 4, !dbg !4142
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4143
  %green18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !4144
  %23 = load float, float* %green18, align 4, !dbg !4144
  %24 = load float, float* %Da, align 4, !dbg !4145
  %call19 = call float @ModulusSubtract(float %20, float %21, float %23, float %24), !dbg !4146
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4147
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !4148
  store float %call19, float* %green20, align 4, !dbg !4149
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4150
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 7, !dbg !4151
  %27 = load float, float* %blue, align 8, !dbg !4151
  %28 = load float, float* %Sa, align 4, !dbg !4152
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4153
  %blue21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 7, !dbg !4154
  %30 = load float, float* %blue21, align 8, !dbg !4154
  %31 = load float, float* %Da, align 4, !dbg !4155
  %call22 = call float @ModulusSubtract(float %27, float %28, float %30, float %31), !dbg !4156
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4157
  %blue23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 7, !dbg !4158
  store float %call22, float* %blue23, align 8, !dbg !4159
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4160
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 1, !dbg !4162
  %34 = load i32, i32* %colorspace, align 4, !dbg !4162
  %cmp24 = icmp eq i32 %34, 12, !dbg !4163
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !4164

if.then26:                                        ; preds = %if.then
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4165
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !4166
  %36 = load float, float* %index, align 8, !dbg !4166
  %37 = load float, float* %Sa, align 4, !dbg !4167
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4168
  %index27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !4169
  %39 = load float, float* %index27, align 8, !dbg !4169
  %40 = load float, float* %Da, align 4, !dbg !4170
  %call28 = call float @ModulusSubtract(float %36, float %37, float %39, float %40), !dbg !4171
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4172
  %index29 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 9, !dbg !4173
  store float %call28, float* %index29, align 8, !dbg !4174
  br label %if.end, !dbg !4172

if.end:                                           ; preds = %if.then26, %if.then
  br label %if.end81, !dbg !4175

if.else:                                          ; preds = %entry
  %42 = load i32, i32* %channel.addr, align 4, !dbg !4176
  %and30 = and i32 %42, 8, !dbg !4179
  %cmp31 = icmp ne i32 %and30, 0, !dbg !4180
  br i1 %cmp31, label %if.then33, label %if.end41, !dbg !4181

if.then33:                                        ; preds = %if.else
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4182
  %opacity34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 8, !dbg !4183
  %44 = load float, float* %opacity34, align 4, !dbg !4183
  %sub35 = fsub float 6.553500e+04, %44, !dbg !4184
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4185
  %opacity36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 8, !dbg !4186
  %46 = load float, float* %opacity36, align 4, !dbg !4186
  %sub37 = fsub float 6.553500e+04, %46, !dbg !4187
  %call38 = call float @ModulusSubtract(float %sub35, float 1.000000e+00, float %sub37, float 1.000000e+00), !dbg !4188
  %sub39 = fsub float 6.553500e+04, %call38, !dbg !4189
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4190
  %opacity40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 8, !dbg !4191
  store float %sub39, float* %opacity40, align 4, !dbg !4192
  br label %if.end41, !dbg !4190

if.end41:                                         ; preds = %if.then33, %if.else
  %48 = load i32, i32* %channel.addr, align 4, !dbg !4193
  %and42 = and i32 %48, 1, !dbg !4195
  %cmp43 = icmp ne i32 %and42, 0, !dbg !4196
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !4197

if.then45:                                        ; preds = %if.end41
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4198
  %red46 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 5, !dbg !4199
  %50 = load float, float* %red46, align 8, !dbg !4199
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4200
  %red47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 5, !dbg !4201
  %52 = load float, float* %red47, align 8, !dbg !4201
  %call48 = call float @ModulusSubtract(float %50, float 1.000000e+00, float %52, float 1.000000e+00), !dbg !4202
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4203
  %red49 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 5, !dbg !4204
  store float %call48, float* %red49, align 8, !dbg !4205
  br label %if.end50, !dbg !4203

if.end50:                                         ; preds = %if.then45, %if.end41
  %54 = load i32, i32* %channel.addr, align 4, !dbg !4206
  %and51 = and i32 %54, 2, !dbg !4208
  %cmp52 = icmp ne i32 %and51, 0, !dbg !4209
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !4210

if.then54:                                        ; preds = %if.end50
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4211
  %green55 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 6, !dbg !4212
  %56 = load float, float* %green55, align 4, !dbg !4212
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4213
  %green56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 6, !dbg !4214
  %58 = load float, float* %green56, align 4, !dbg !4214
  %call57 = call float @ModulusSubtract(float %56, float 1.000000e+00, float %58, float 1.000000e+00), !dbg !4215
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4216
  %green58 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 6, !dbg !4217
  store float %call57, float* %green58, align 4, !dbg !4218
  br label %if.end59, !dbg !4216

if.end59:                                         ; preds = %if.then54, %if.end50
  %60 = load i32, i32* %channel.addr, align 4, !dbg !4219
  %and60 = and i32 %60, 4, !dbg !4221
  %cmp61 = icmp ne i32 %and60, 0, !dbg !4222
  br i1 %cmp61, label %if.then63, label %if.end68, !dbg !4223

if.then63:                                        ; preds = %if.end59
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4224
  %blue64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 7, !dbg !4225
  %62 = load float, float* %blue64, align 8, !dbg !4225
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4226
  %blue65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 7, !dbg !4227
  %64 = load float, float* %blue65, align 8, !dbg !4227
  %call66 = call float @ModulusSubtract(float %62, float 1.000000e+00, float %64, float 1.000000e+00), !dbg !4228
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4229
  %blue67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 7, !dbg !4230
  store float %call66, float* %blue67, align 8, !dbg !4231
  br label %if.end68, !dbg !4229

if.end68:                                         ; preds = %if.then63, %if.end59
  %66 = load i32, i32* %channel.addr, align 4, !dbg !4232
  %and69 = and i32 %66, 32, !dbg !4234
  %cmp70 = icmp ne i32 %and69, 0, !dbg !4235
  br i1 %cmp70, label %land.lhs.true, label %if.end80, !dbg !4236

land.lhs.true:                                    ; preds = %if.end68
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4237
  %colorspace72 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 1, !dbg !4238
  %68 = load i32, i32* %colorspace72, align 4, !dbg !4238
  %cmp73 = icmp eq i32 %68, 12, !dbg !4239
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !4240

if.then75:                                        ; preds = %land.lhs.true
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4241
  %index76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 9, !dbg !4242
  %70 = load float, float* %index76, align 8, !dbg !4242
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4243
  %index77 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 9, !dbg !4244
  %72 = load float, float* %index77, align 8, !dbg !4244
  %call78 = call float @ModulusSubtract(float %70, float 1.000000e+00, float %72, float 1.000000e+00), !dbg !4245
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4246
  %index79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 9, !dbg !4247
  store float %call78, float* %index79, align 8, !dbg !4248
  br label %if.end80, !dbg !4246

if.end80:                                         ; preds = %if.then75, %land.lhs.true, %if.end68
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end
  ret void, !dbg !4249
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeDifference(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !4250 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !4251, metadata !DIExpression()), !dbg !4252
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4255, metadata !DIExpression()), !dbg !4256
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !4257, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4259, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata float* %Da, metadata !4261, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !4263, metadata !DIExpression()), !dbg !4264
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4265
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !4266
  %1 = load float, float* %opacity, align 4, !dbg !4266
  %conv = fpext float %1 to double, !dbg !4265
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !4267
  %sub = fsub double 1.000000e+00, %mul, !dbg !4268
  %conv1 = fptrunc double %sub to float, !dbg !4269
  store float %conv1, float* %Sa, align 4, !dbg !4270
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4271
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !4272
  %3 = load float, float* %opacity2, align 4, !dbg !4272
  %conv3 = fpext float %3 to double, !dbg !4271
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !4273
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !4274
  %conv6 = fptrunc double %sub5 to float, !dbg !4275
  store float %conv6, float* %Da, align 4, !dbg !4276
  %4 = load i32, i32* %channel.addr, align 4, !dbg !4277
  %and = and i32 %4, 256, !dbg !4279
  %cmp = icmp ne i32 %and, 0, !dbg !4280
  br i1 %cmp, label %if.then, label %if.else, !dbg !4281

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !4282
  %6 = load float, float* %Da, align 4, !dbg !4284
  %add = fadd float %5, %6, !dbg !4285
  %7 = load float, float* %Sa, align 4, !dbg !4286
  %8 = load float, float* %Da, align 4, !dbg !4287
  %mul8 = fmul float %7, %8, !dbg !4288
  %sub9 = fsub float %add, %mul8, !dbg !4289
  %call = call float @RoundToUnity(float %sub9), !dbg !4290
  %conv10 = fpext float %call to double, !dbg !4290
  store double %conv10, double* %gamma, align 8, !dbg !4291
  %9 = load double, double* %gamma, align 8, !dbg !4292
  %sub11 = fsub double 1.000000e+00, %9, !dbg !4293
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !4294
  %conv13 = fptrunc double %mul12 to float, !dbg !4295
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4296
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !4297
  store float %conv13, float* %opacity14, align 4, !dbg !4298
  %11 = load double, double* %gamma, align 8, !dbg !4299
  %call15 = call double @PerceptibleReciprocal(double %11), !dbg !4300
  store double %call15, double* %gamma, align 8, !dbg !4301
  %12 = load double, double* %gamma, align 8, !dbg !4302
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4303
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 5, !dbg !4304
  %14 = load float, float* %red, align 8, !dbg !4304
  %15 = load float, float* %Sa, align 4, !dbg !4305
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4306
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 5, !dbg !4307
  %17 = load float, float* %red16, align 8, !dbg !4307
  %18 = load float, float* %Da, align 4, !dbg !4308
  %call17 = call float @Difference(float %14, float %15, float %17, float %18), !dbg !4309
  %conv18 = fpext float %call17 to double, !dbg !4309
  %mul19 = fmul double %12, %conv18, !dbg !4310
  %conv20 = fptrunc double %mul19 to float, !dbg !4302
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4311
  %red21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !4312
  store float %conv20, float* %red21, align 8, !dbg !4313
  %20 = load double, double* %gamma, align 8, !dbg !4314
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4315
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 6, !dbg !4316
  %22 = load float, float* %green, align 4, !dbg !4316
  %23 = load float, float* %Sa, align 4, !dbg !4317
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4318
  %green22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !4319
  %25 = load float, float* %green22, align 4, !dbg !4319
  %26 = load float, float* %Da, align 4, !dbg !4320
  %call23 = call float @Difference(float %22, float %23, float %25, float %26), !dbg !4321
  %conv24 = fpext float %call23 to double, !dbg !4321
  %mul25 = fmul double %20, %conv24, !dbg !4322
  %conv26 = fptrunc double %mul25 to float, !dbg !4314
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4323
  %green27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 6, !dbg !4324
  store float %conv26, float* %green27, align 4, !dbg !4325
  %28 = load double, double* %gamma, align 8, !dbg !4326
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4327
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 7, !dbg !4328
  %30 = load float, float* %blue, align 8, !dbg !4328
  %31 = load float, float* %Sa, align 4, !dbg !4329
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4330
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 7, !dbg !4331
  %33 = load float, float* %blue28, align 8, !dbg !4331
  %34 = load float, float* %Da, align 4, !dbg !4332
  %call29 = call float @Difference(float %30, float %31, float %33, float %34), !dbg !4333
  %conv30 = fpext float %call29 to double, !dbg !4333
  %mul31 = fmul double %28, %conv30, !dbg !4334
  %conv32 = fptrunc double %mul31 to float, !dbg !4326
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4335
  %blue33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !4336
  store float %conv32, float* %blue33, align 8, !dbg !4337
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4338
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 1, !dbg !4340
  %37 = load i32, i32* %colorspace, align 4, !dbg !4340
  %cmp34 = icmp eq i32 %37, 12, !dbg !4341
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !4342

if.then36:                                        ; preds = %if.then
  %38 = load double, double* %gamma, align 8, !dbg !4343
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4344
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 9, !dbg !4345
  %40 = load float, float* %index, align 8, !dbg !4345
  %41 = load float, float* %Sa, align 4, !dbg !4346
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4347
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 9, !dbg !4348
  %43 = load float, float* %index37, align 8, !dbg !4348
  %44 = load float, float* %Da, align 4, !dbg !4349
  %call38 = call float @Difference(float %40, float %41, float %43, float %44), !dbg !4350
  %conv39 = fpext float %call38 to double, !dbg !4350
  %mul40 = fmul double %38, %conv39, !dbg !4351
  %conv41 = fptrunc double %mul40 to float, !dbg !4343
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4352
  %index42 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 9, !dbg !4353
  store float %conv41, float* %index42, align 8, !dbg !4354
  br label %if.end, !dbg !4352

if.end:                                           ; preds = %if.then36, %if.then
  br label %if.end102, !dbg !4355

if.else:                                          ; preds = %entry
  %46 = load i32, i32* %channel.addr, align 4, !dbg !4356
  %and43 = and i32 %46, 8, !dbg !4359
  %cmp44 = icmp ne i32 %and43, 0, !dbg !4360
  br i1 %cmp44, label %if.then46, label %if.end54, !dbg !4361

if.then46:                                        ; preds = %if.else
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4362
  %opacity47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 8, !dbg !4363
  %48 = load float, float* %opacity47, align 4, !dbg !4363
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4364
  %opacity48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 8, !dbg !4365
  %50 = load float, float* %opacity48, align 4, !dbg !4365
  %sub49 = fsub float %48, %50, !dbg !4366
  %conv50 = fpext float %sub49 to double, !dbg !4362
  %51 = call double @llvm.fabs.f64(double %conv50), !dbg !4367
  %sub51 = fsub double 6.553500e+04, %51, !dbg !4368
  %conv52 = fptrunc double %sub51 to float, !dbg !4369
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4370
  %opacity53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 8, !dbg !4371
  store float %conv52, float* %opacity53, align 4, !dbg !4372
  br label %if.end54, !dbg !4370

if.end54:                                         ; preds = %if.then46, %if.else
  %53 = load i32, i32* %channel.addr, align 4, !dbg !4373
  %and55 = and i32 %53, 1, !dbg !4375
  %cmp56 = icmp ne i32 %and55, 0, !dbg !4376
  br i1 %cmp56, label %if.then58, label %if.end65, !dbg !4377

if.then58:                                        ; preds = %if.end54
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4378
  %red59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 5, !dbg !4379
  %55 = load float, float* %red59, align 8, !dbg !4379
  %56 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4380
  %red60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %56, i32 0, i32 5, !dbg !4381
  %57 = load float, float* %red60, align 8, !dbg !4381
  %sub61 = fsub float %55, %57, !dbg !4382
  %conv62 = fpext float %sub61 to double, !dbg !4378
  %58 = call double @llvm.fabs.f64(double %conv62), !dbg !4383
  %conv63 = fptrunc double %58 to float, !dbg !4383
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4384
  %red64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 5, !dbg !4385
  store float %conv63, float* %red64, align 8, !dbg !4386
  br label %if.end65, !dbg !4384

if.end65:                                         ; preds = %if.then58, %if.end54
  %60 = load i32, i32* %channel.addr, align 4, !dbg !4387
  %and66 = and i32 %60, 2, !dbg !4389
  %cmp67 = icmp ne i32 %and66, 0, !dbg !4390
  br i1 %cmp67, label %if.then69, label %if.end76, !dbg !4391

if.then69:                                        ; preds = %if.end65
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4392
  %green70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 6, !dbg !4393
  %62 = load float, float* %green70, align 4, !dbg !4393
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4394
  %green71 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 6, !dbg !4395
  %64 = load float, float* %green71, align 4, !dbg !4395
  %sub72 = fsub float %62, %64, !dbg !4396
  %conv73 = fpext float %sub72 to double, !dbg !4392
  %65 = call double @llvm.fabs.f64(double %conv73), !dbg !4397
  %conv74 = fptrunc double %65 to float, !dbg !4397
  %66 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4398
  %green75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %66, i32 0, i32 6, !dbg !4399
  store float %conv74, float* %green75, align 4, !dbg !4400
  br label %if.end76, !dbg !4398

if.end76:                                         ; preds = %if.then69, %if.end65
  %67 = load i32, i32* %channel.addr, align 4, !dbg !4401
  %and77 = and i32 %67, 4, !dbg !4403
  %cmp78 = icmp ne i32 %and77, 0, !dbg !4404
  br i1 %cmp78, label %if.then80, label %if.end87, !dbg !4405

if.then80:                                        ; preds = %if.end76
  %68 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4406
  %blue81 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %68, i32 0, i32 7, !dbg !4407
  %69 = load float, float* %blue81, align 8, !dbg !4407
  %70 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4408
  %blue82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %70, i32 0, i32 7, !dbg !4409
  %71 = load float, float* %blue82, align 8, !dbg !4409
  %sub83 = fsub float %69, %71, !dbg !4410
  %conv84 = fpext float %sub83 to double, !dbg !4406
  %72 = call double @llvm.fabs.f64(double %conv84), !dbg !4411
  %conv85 = fptrunc double %72 to float, !dbg !4411
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4412
  %blue86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !4413
  store float %conv85, float* %blue86, align 8, !dbg !4414
  br label %if.end87, !dbg !4412

if.end87:                                         ; preds = %if.then80, %if.end76
  %74 = load i32, i32* %channel.addr, align 4, !dbg !4415
  %and88 = and i32 %74, 32, !dbg !4417
  %cmp89 = icmp ne i32 %and88, 0, !dbg !4418
  br i1 %cmp89, label %land.lhs.true, label %if.end101, !dbg !4419

land.lhs.true:                                    ; preds = %if.end87
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4420
  %colorspace91 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 1, !dbg !4421
  %76 = load i32, i32* %colorspace91, align 4, !dbg !4421
  %cmp92 = icmp eq i32 %76, 12, !dbg !4422
  br i1 %cmp92, label %if.then94, label %if.end101, !dbg !4423

if.then94:                                        ; preds = %land.lhs.true
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4424
  %index95 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 9, !dbg !4425
  %78 = load float, float* %index95, align 8, !dbg !4425
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4426
  %index96 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 9, !dbg !4427
  %80 = load float, float* %index96, align 8, !dbg !4427
  %sub97 = fsub float %78, %80, !dbg !4428
  %conv98 = fpext float %sub97 to double, !dbg !4424
  %81 = call double @llvm.fabs.f64(double %conv98), !dbg !4429
  %conv99 = fptrunc double %81 to float, !dbg !4429
  %82 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4430
  %index100 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %82, i32 0, i32 9, !dbg !4431
  store float %conv99, float* %index100, align 8, !dbg !4432
  br label %if.end101, !dbg !4430

if.end101:                                        ; preds = %if.then94, %land.lhs.true, %if.end87
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end
  ret void, !dbg !4433
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeExclusion(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !4434 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  %Da = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !4435, metadata !DIExpression()), !dbg !4436
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4439, metadata !DIExpression()), !dbg !4440
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !4441, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !4443, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !4445, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.declare(metadata float* %Da, metadata !4447, metadata !DIExpression()), !dbg !4448
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4449
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !4450
  %1 = load float, float* %opacity, align 4, !dbg !4450
  %conv = fpext float %1 to double, !dbg !4449
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !4451
  %sub = fsub double 1.000000e+00, %mul, !dbg !4452
  %conv1 = fptrunc double %sub to float, !dbg !4453
  store float %conv1, float* %Sa, align 4, !dbg !4454
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4455
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !4456
  %3 = load float, float* %opacity2, align 4, !dbg !4456
  %conv3 = fpext float %3 to double, !dbg !4455
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !4457
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !4458
  %conv6 = fptrunc double %sub5 to float, !dbg !4459
  store float %conv6, float* %Da, align 4, !dbg !4460
  %4 = load i32, i32* %channel.addr, align 4, !dbg !4461
  %and = and i32 %4, 256, !dbg !4463
  %cmp = icmp ne i32 %and, 0, !dbg !4464
  br i1 %cmp, label %if.then, label %if.else, !dbg !4465

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !4466
  %6 = load float, float* %Da, align 4, !dbg !4468
  %add = fadd float %5, %6, !dbg !4469
  %7 = load float, float* %Sa, align 4, !dbg !4470
  %8 = load float, float* %Da, align 4, !dbg !4471
  %mul8 = fmul float %7, %8, !dbg !4472
  %sub9 = fsub float %add, %mul8, !dbg !4473
  %call = call float @RoundToUnity(float %sub9), !dbg !4474
  store float %call, float* %gamma, align 4, !dbg !4475
  %9 = load float, float* %gamma, align 4, !dbg !4476
  %conv10 = fpext float %9 to double, !dbg !4476
  %sub11 = fsub double 1.000000e+00, %conv10, !dbg !4477
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !4478
  %conv13 = fptrunc double %mul12 to float, !dbg !4479
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4480
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !4481
  store float %conv13, float* %opacity14, align 4, !dbg !4482
  %11 = load float, float* %gamma, align 4, !dbg !4483
  %conv15 = fpext float %11 to double, !dbg !4483
  %12 = call double @llvm.fabs.f64(double %conv15), !dbg !4484
  %cmp16 = fcmp olt double %12, 1.000000e-15, !dbg !4485
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !4484

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4484

cond.false:                                       ; preds = %if.then
  %13 = load float, float* %gamma, align 4, !dbg !4486
  %conv18 = fpext float %13 to double, !dbg !4486
  br label %cond.end, !dbg !4484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv18, %cond.false ], !dbg !4484
  %div = fdiv double 6.553500e+04, %cond, !dbg !4487
  %conv19 = fptrunc double %div to float, !dbg !4488
  store float %conv19, float* %gamma, align 4, !dbg !4489
  %14 = load float, float* %gamma, align 4, !dbg !4490
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4491
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !4492
  %16 = load float, float* %red, align 8, !dbg !4492
  %conv20 = fpext float %16 to double, !dbg !4491
  %mul21 = fmul double 0x3EF0001000100010, %conv20, !dbg !4493
  %17 = load float, float* %Sa, align 4, !dbg !4494
  %conv22 = fpext float %17 to double, !dbg !4494
  %mul23 = fmul double %mul21, %conv22, !dbg !4495
  %conv24 = fptrunc double %mul23 to float, !dbg !4496
  %18 = load float, float* %Sa, align 4, !dbg !4497
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4498
  %red25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !4499
  %20 = load float, float* %red25, align 8, !dbg !4499
  %conv26 = fpext float %20 to double, !dbg !4498
  %mul27 = fmul double 0x3EF0001000100010, %conv26, !dbg !4500
  %21 = load float, float* %Da, align 4, !dbg !4501
  %conv28 = fpext float %21 to double, !dbg !4501
  %mul29 = fmul double %mul27, %conv28, !dbg !4502
  %conv30 = fptrunc double %mul29 to float, !dbg !4503
  %22 = load float, float* %Da, align 4, !dbg !4504
  %call31 = call float @Exclusion(float %conv24, float %18, float %conv30, float %22), !dbg !4505
  %mul32 = fmul float %14, %call31, !dbg !4506
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4507
  %red33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 5, !dbg !4508
  store float %mul32, float* %red33, align 8, !dbg !4509
  %24 = load float, float* %gamma, align 4, !dbg !4510
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4511
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !4512
  %26 = load float, float* %green, align 4, !dbg !4512
  %conv34 = fpext float %26 to double, !dbg !4511
  %mul35 = fmul double 0x3EF0001000100010, %conv34, !dbg !4513
  %27 = load float, float* %Sa, align 4, !dbg !4514
  %conv36 = fpext float %27 to double, !dbg !4514
  %mul37 = fmul double %mul35, %conv36, !dbg !4515
  %conv38 = fptrunc double %mul37 to float, !dbg !4516
  %28 = load float, float* %Sa, align 4, !dbg !4517
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4518
  %green39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 6, !dbg !4519
  %30 = load float, float* %green39, align 4, !dbg !4519
  %conv40 = fpext float %30 to double, !dbg !4518
  %mul41 = fmul double 0x3EF0001000100010, %conv40, !dbg !4520
  %31 = load float, float* %Da, align 4, !dbg !4521
  %conv42 = fpext float %31 to double, !dbg !4521
  %mul43 = fmul double %mul41, %conv42, !dbg !4522
  %conv44 = fptrunc double %mul43 to float, !dbg !4523
  %32 = load float, float* %Da, align 4, !dbg !4524
  %call45 = call float @Exclusion(float %conv38, float %28, float %conv44, float %32), !dbg !4525
  %mul46 = fmul float %24, %call45, !dbg !4526
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4527
  %green47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 6, !dbg !4528
  store float %mul46, float* %green47, align 4, !dbg !4529
  %34 = load float, float* %gamma, align 4, !dbg !4530
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4531
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !4532
  %36 = load float, float* %blue, align 8, !dbg !4532
  %conv48 = fpext float %36 to double, !dbg !4531
  %mul49 = fmul double 0x3EF0001000100010, %conv48, !dbg !4533
  %37 = load float, float* %Sa, align 4, !dbg !4534
  %conv50 = fpext float %37 to double, !dbg !4534
  %mul51 = fmul double %mul49, %conv50, !dbg !4535
  %conv52 = fptrunc double %mul51 to float, !dbg !4536
  %38 = load float, float* %Sa, align 4, !dbg !4537
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4538
  %blue53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 7, !dbg !4539
  %40 = load float, float* %blue53, align 8, !dbg !4539
  %conv54 = fpext float %40 to double, !dbg !4538
  %mul55 = fmul double 0x3EF0001000100010, %conv54, !dbg !4540
  %41 = load float, float* %Da, align 4, !dbg !4541
  %conv56 = fpext float %41 to double, !dbg !4541
  %mul57 = fmul double %mul55, %conv56, !dbg !4542
  %conv58 = fptrunc double %mul57 to float, !dbg !4543
  %42 = load float, float* %Da, align 4, !dbg !4544
  %call59 = call float @Exclusion(float %conv52, float %38, float %conv58, float %42), !dbg !4545
  %mul60 = fmul float %34, %call59, !dbg !4546
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4547
  %blue61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 7, !dbg !4548
  store float %mul60, float* %blue61, align 8, !dbg !4549
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4550
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 1, !dbg !4552
  %45 = load i32, i32* %colorspace, align 4, !dbg !4552
  %cmp62 = icmp eq i32 %45, 12, !dbg !4553
  br i1 %cmp62, label %if.then64, label %if.end, !dbg !4554

if.then64:                                        ; preds = %cond.end
  %46 = load float, float* %gamma, align 4, !dbg !4555
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4556
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 9, !dbg !4557
  %48 = load float, float* %index, align 8, !dbg !4557
  %conv65 = fpext float %48 to double, !dbg !4556
  %mul66 = fmul double 0x3EF0001000100010, %conv65, !dbg !4558
  %49 = load float, float* %Sa, align 4, !dbg !4559
  %conv67 = fpext float %49 to double, !dbg !4559
  %mul68 = fmul double %mul66, %conv67, !dbg !4560
  %conv69 = fptrunc double %mul68 to float, !dbg !4561
  %50 = load float, float* %Sa, align 4, !dbg !4562
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4563
  %index70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 9, !dbg !4564
  %52 = load float, float* %index70, align 8, !dbg !4564
  %conv71 = fpext float %52 to double, !dbg !4563
  %mul72 = fmul double 0x3EF0001000100010, %conv71, !dbg !4565
  %53 = load float, float* %Da, align 4, !dbg !4566
  %conv73 = fpext float %53 to double, !dbg !4566
  %mul74 = fmul double %mul72, %conv73, !dbg !4567
  %conv75 = fptrunc double %mul74 to float, !dbg !4568
  %54 = load float, float* %Da, align 4, !dbg !4569
  %call76 = call float @Exclusion(float %conv69, float %50, float %conv75, float %54), !dbg !4570
  %mul77 = fmul float %46, %call76, !dbg !4571
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4572
  %index78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 9, !dbg !4573
  store float %mul77, float* %index78, align 8, !dbg !4574
  br label %if.end, !dbg !4572

if.end:                                           ; preds = %if.then64, %cond.end
  br label %if.end157, !dbg !4575

if.else:                                          ; preds = %entry
  %56 = load i32, i32* %channel.addr, align 4, !dbg !4576
  %and79 = and i32 %56, 8, !dbg !4579
  %cmp80 = icmp ne i32 %and79, 0, !dbg !4580
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !4581

if.then82:                                        ; preds = %if.else
  %57 = load float, float* %Sa, align 4, !dbg !4582
  %58 = load float, float* %Da, align 4, !dbg !4583
  %call83 = call float @Exclusion(float %57, float 1.000000e+00, float %58, float 1.000000e+00), !dbg !4584
  %conv84 = fpext float %call83 to double, !dbg !4584
  %sub85 = fsub double 1.000000e+00, %conv84, !dbg !4585
  %mul86 = fmul double 6.553500e+04, %sub85, !dbg !4586
  %conv87 = fptrunc double %mul86 to float, !dbg !4587
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4588
  %opacity88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 8, !dbg !4589
  store float %conv87, float* %opacity88, align 4, !dbg !4590
  br label %if.end89, !dbg !4588

if.end89:                                         ; preds = %if.then82, %if.else
  %60 = load i32, i32* %channel.addr, align 4, !dbg !4591
  %and90 = and i32 %60, 1, !dbg !4593
  %cmp91 = icmp ne i32 %and90, 0, !dbg !4594
  br i1 %cmp91, label %if.then93, label %if.end105, !dbg !4595

if.then93:                                        ; preds = %if.end89
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4596
  %red94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 5, !dbg !4597
  %62 = load float, float* %red94, align 8, !dbg !4597
  %conv95 = fpext float %62 to double, !dbg !4596
  %mul96 = fmul double 0x3EF0001000100010, %conv95, !dbg !4598
  %conv97 = fptrunc double %mul96 to float, !dbg !4599
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4600
  %red98 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 5, !dbg !4601
  %64 = load float, float* %red98, align 8, !dbg !4601
  %conv99 = fpext float %64 to double, !dbg !4600
  %mul100 = fmul double 0x3EF0001000100010, %conv99, !dbg !4602
  %conv101 = fptrunc double %mul100 to float, !dbg !4603
  %call102 = call float @Exclusion(float %conv97, float 1.000000e+00, float %conv101, float 1.000000e+00), !dbg !4604
  %mul103 = fmul float 6.553500e+04, %call102, !dbg !4605
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4606
  %red104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 5, !dbg !4607
  store float %mul103, float* %red104, align 8, !dbg !4608
  br label %if.end105, !dbg !4606

if.end105:                                        ; preds = %if.then93, %if.end89
  %66 = load i32, i32* %channel.addr, align 4, !dbg !4609
  %and106 = and i32 %66, 2, !dbg !4611
  %cmp107 = icmp ne i32 %and106, 0, !dbg !4612
  br i1 %cmp107, label %if.then109, label %if.end121, !dbg !4613

if.then109:                                       ; preds = %if.end105
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4614
  %green110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !4615
  %68 = load float, float* %green110, align 4, !dbg !4615
  %conv111 = fpext float %68 to double, !dbg !4614
  %mul112 = fmul double 0x3EF0001000100010, %conv111, !dbg !4616
  %conv113 = fptrunc double %mul112 to float, !dbg !4617
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4618
  %green114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 6, !dbg !4619
  %70 = load float, float* %green114, align 4, !dbg !4619
  %conv115 = fpext float %70 to double, !dbg !4618
  %mul116 = fmul double 0x3EF0001000100010, %conv115, !dbg !4620
  %conv117 = fptrunc double %mul116 to float, !dbg !4621
  %call118 = call float @Exclusion(float %conv113, float 1.000000e+00, float %conv117, float 1.000000e+00), !dbg !4622
  %mul119 = fmul float 6.553500e+04, %call118, !dbg !4623
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4624
  %green120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 6, !dbg !4625
  store float %mul119, float* %green120, align 4, !dbg !4626
  br label %if.end121, !dbg !4624

if.end121:                                        ; preds = %if.then109, %if.end105
  %72 = load i32, i32* %channel.addr, align 4, !dbg !4627
  %and122 = and i32 %72, 4, !dbg !4629
  %cmp123 = icmp ne i32 %and122, 0, !dbg !4630
  br i1 %cmp123, label %if.then125, label %if.end137, !dbg !4631

if.then125:                                       ; preds = %if.end121
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4632
  %blue126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !4633
  %74 = load float, float* %blue126, align 8, !dbg !4633
  %conv127 = fpext float %74 to double, !dbg !4632
  %mul128 = fmul double 0x3EF0001000100010, %conv127, !dbg !4634
  %conv129 = fptrunc double %mul128 to float, !dbg !4635
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4636
  %blue130 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 7, !dbg !4637
  %76 = load float, float* %blue130, align 8, !dbg !4637
  %conv131 = fpext float %76 to double, !dbg !4636
  %mul132 = fmul double 0x3EF0001000100010, %conv131, !dbg !4638
  %conv133 = fptrunc double %mul132 to float, !dbg !4639
  %call134 = call float @Exclusion(float %conv129, float 1.000000e+00, float %conv133, float 1.000000e+00), !dbg !4640
  %mul135 = fmul float 6.553500e+04, %call134, !dbg !4641
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4642
  %blue136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 7, !dbg !4643
  store float %mul135, float* %blue136, align 8, !dbg !4644
  br label %if.end137, !dbg !4642

if.end137:                                        ; preds = %if.then125, %if.end121
  %78 = load i32, i32* %channel.addr, align 4, !dbg !4645
  %and138 = and i32 %78, 32, !dbg !4647
  %cmp139 = icmp ne i32 %and138, 0, !dbg !4648
  br i1 %cmp139, label %land.lhs.true, label %if.end156, !dbg !4649

land.lhs.true:                                    ; preds = %if.end137
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4650
  %colorspace141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 1, !dbg !4651
  %80 = load i32, i32* %colorspace141, align 4, !dbg !4651
  %cmp142 = icmp eq i32 %80, 12, !dbg !4652
  br i1 %cmp142, label %if.then144, label %if.end156, !dbg !4653

if.then144:                                       ; preds = %land.lhs.true
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4654
  %index145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i32 0, i32 9, !dbg !4655
  %82 = load float, float* %index145, align 8, !dbg !4655
  %conv146 = fpext float %82 to double, !dbg !4654
  %mul147 = fmul double 0x3EF0001000100010, %conv146, !dbg !4656
  %conv148 = fptrunc double %mul147 to float, !dbg !4657
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4658
  %index149 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i32 0, i32 9, !dbg !4659
  %84 = load float, float* %index149, align 8, !dbg !4659
  %conv150 = fpext float %84 to double, !dbg !4658
  %mul151 = fmul double 0x3EF0001000100010, %conv150, !dbg !4660
  %conv152 = fptrunc double %mul151 to float, !dbg !4661
  %call153 = call float @Exclusion(float %conv148, float 1.000000e+00, float %conv152, float 1.000000e+00), !dbg !4662
  %mul154 = fmul float 6.553500e+04, %call153, !dbg !4663
  %85 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4664
  %index155 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %85, i32 0, i32 9, !dbg !4665
  store float %mul154, float* %index155, align 8, !dbg !4666
  br label %if.end156, !dbg !4664

if.end156:                                        ; preds = %if.then144, %land.lhs.true, %if.end137
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end
  ret void, !dbg !4667
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeMultiply(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !4668 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !4669, metadata !DIExpression()), !dbg !4670
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.declare(metadata float* %Da, metadata !4677, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !4679, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !4681, metadata !DIExpression()), !dbg !4682
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4683
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !4684
  %1 = load float, float* %opacity, align 4, !dbg !4684
  %conv = fpext float %1 to double, !dbg !4683
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !4685
  %sub = fsub double 1.000000e+00, %mul, !dbg !4686
  %conv1 = fptrunc double %sub to float, !dbg !4687
  store float %conv1, float* %Sa, align 4, !dbg !4688
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4689
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !4690
  %3 = load float, float* %opacity2, align 4, !dbg !4690
  %conv3 = fpext float %3 to double, !dbg !4689
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !4691
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !4692
  %conv6 = fptrunc double %sub5 to float, !dbg !4693
  store float %conv6, float* %Da, align 4, !dbg !4694
  %4 = load i32, i32* %channel.addr, align 4, !dbg !4695
  %and = and i32 %4, 256, !dbg !4697
  %cmp = icmp ne i32 %and, 0, !dbg !4698
  br i1 %cmp, label %if.then, label %if.else, !dbg !4699

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !4700
  %6 = load float, float* %Da, align 4, !dbg !4702
  %add = fadd float %5, %6, !dbg !4703
  %7 = load float, float* %Sa, align 4, !dbg !4704
  %8 = load float, float* %Da, align 4, !dbg !4705
  %mul8 = fmul float %7, %8, !dbg !4706
  %sub9 = fsub float %add, %mul8, !dbg !4707
  %call = call float @RoundToUnity(float %sub9), !dbg !4708
  store float %call, float* %gamma, align 4, !dbg !4709
  %9 = load float, float* %gamma, align 4, !dbg !4710
  %conv10 = fpext float %9 to double, !dbg !4710
  %sub11 = fsub double 1.000000e+00, %conv10, !dbg !4711
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !4712
  %conv13 = fptrunc double %mul12 to float, !dbg !4713
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4714
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !4715
  store float %conv13, float* %opacity14, align 4, !dbg !4716
  %11 = load float, float* %gamma, align 4, !dbg !4717
  %conv15 = fpext float %11 to double, !dbg !4717
  %12 = call double @llvm.fabs.f64(double %conv15), !dbg !4718
  %cmp16 = fcmp olt double %12, 1.000000e-15, !dbg !4719
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !4718

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4718

cond.false:                                       ; preds = %if.then
  %13 = load float, float* %gamma, align 4, !dbg !4720
  %conv18 = fpext float %13 to double, !dbg !4720
  br label %cond.end, !dbg !4718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv18, %cond.false ], !dbg !4718
  %div = fdiv double 6.553500e+04, %cond, !dbg !4721
  %conv19 = fptrunc double %div to float, !dbg !4722
  store float %conv19, float* %gamma, align 4, !dbg !4723
  %14 = load float, float* %gamma, align 4, !dbg !4724
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4725
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !4726
  %16 = load float, float* %red, align 8, !dbg !4726
  %conv20 = fpext float %16 to double, !dbg !4725
  %mul21 = fmul double 0x3EF0001000100010, %conv20, !dbg !4727
  %17 = load float, float* %Sa, align 4, !dbg !4728
  %conv22 = fpext float %17 to double, !dbg !4728
  %mul23 = fmul double %mul21, %conv22, !dbg !4729
  %conv24 = fptrunc double %mul23 to float, !dbg !4730
  %18 = load float, float* %Sa, align 4, !dbg !4731
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4732
  %red25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !4733
  %20 = load float, float* %red25, align 8, !dbg !4733
  %conv26 = fpext float %20 to double, !dbg !4732
  %mul27 = fmul double 0x3EF0001000100010, %conv26, !dbg !4734
  %21 = load float, float* %Da, align 4, !dbg !4735
  %conv28 = fpext float %21 to double, !dbg !4735
  %mul29 = fmul double %mul27, %conv28, !dbg !4736
  %conv30 = fptrunc double %mul29 to float, !dbg !4737
  %22 = load float, float* %Da, align 4, !dbg !4738
  %call31 = call float @Multiply(float %conv24, float %18, float %conv30, float %22), !dbg !4739
  %mul32 = fmul float %14, %call31, !dbg !4740
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4741
  %red33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 5, !dbg !4742
  store float %mul32, float* %red33, align 8, !dbg !4743
  %24 = load float, float* %gamma, align 4, !dbg !4744
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4745
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !4746
  %26 = load float, float* %green, align 4, !dbg !4746
  %conv34 = fpext float %26 to double, !dbg !4745
  %mul35 = fmul double 0x3EF0001000100010, %conv34, !dbg !4747
  %27 = load float, float* %Sa, align 4, !dbg !4748
  %conv36 = fpext float %27 to double, !dbg !4748
  %mul37 = fmul double %mul35, %conv36, !dbg !4749
  %conv38 = fptrunc double %mul37 to float, !dbg !4750
  %28 = load float, float* %Sa, align 4, !dbg !4751
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4752
  %green39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 6, !dbg !4753
  %30 = load float, float* %green39, align 4, !dbg !4753
  %conv40 = fpext float %30 to double, !dbg !4752
  %mul41 = fmul double 0x3EF0001000100010, %conv40, !dbg !4754
  %31 = load float, float* %Da, align 4, !dbg !4755
  %conv42 = fpext float %31 to double, !dbg !4755
  %mul43 = fmul double %mul41, %conv42, !dbg !4756
  %conv44 = fptrunc double %mul43 to float, !dbg !4757
  %32 = load float, float* %Da, align 4, !dbg !4758
  %call45 = call float @Multiply(float %conv38, float %28, float %conv44, float %32), !dbg !4759
  %mul46 = fmul float %24, %call45, !dbg !4760
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4761
  %green47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 6, !dbg !4762
  store float %mul46, float* %green47, align 4, !dbg !4763
  %34 = load float, float* %gamma, align 4, !dbg !4764
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4765
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !4766
  %36 = load float, float* %blue, align 8, !dbg !4766
  %conv48 = fpext float %36 to double, !dbg !4765
  %mul49 = fmul double 0x3EF0001000100010, %conv48, !dbg !4767
  %37 = load float, float* %Sa, align 4, !dbg !4768
  %conv50 = fpext float %37 to double, !dbg !4768
  %mul51 = fmul double %mul49, %conv50, !dbg !4769
  %conv52 = fptrunc double %mul51 to float, !dbg !4770
  %38 = load float, float* %Sa, align 4, !dbg !4771
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4772
  %blue53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 7, !dbg !4773
  %40 = load float, float* %blue53, align 8, !dbg !4773
  %conv54 = fpext float %40 to double, !dbg !4772
  %mul55 = fmul double 0x3EF0001000100010, %conv54, !dbg !4774
  %41 = load float, float* %Da, align 4, !dbg !4775
  %conv56 = fpext float %41 to double, !dbg !4775
  %mul57 = fmul double %mul55, %conv56, !dbg !4776
  %conv58 = fptrunc double %mul57 to float, !dbg !4777
  %42 = load float, float* %Da, align 4, !dbg !4778
  %call59 = call float @Multiply(float %conv52, float %38, float %conv58, float %42), !dbg !4779
  %mul60 = fmul float %34, %call59, !dbg !4780
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4781
  %blue61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 7, !dbg !4782
  store float %mul60, float* %blue61, align 8, !dbg !4783
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4784
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 1, !dbg !4786
  %45 = load i32, i32* %colorspace, align 4, !dbg !4786
  %cmp62 = icmp eq i32 %45, 12, !dbg !4787
  br i1 %cmp62, label %if.then64, label %if.end, !dbg !4788

if.then64:                                        ; preds = %cond.end
  %46 = load float, float* %gamma, align 4, !dbg !4789
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4790
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 9, !dbg !4791
  %48 = load float, float* %index, align 8, !dbg !4791
  %conv65 = fpext float %48 to double, !dbg !4790
  %mul66 = fmul double 0x3EF0001000100010, %conv65, !dbg !4792
  %49 = load float, float* %Sa, align 4, !dbg !4793
  %conv67 = fpext float %49 to double, !dbg !4793
  %mul68 = fmul double %mul66, %conv67, !dbg !4794
  %conv69 = fptrunc double %mul68 to float, !dbg !4795
  %50 = load float, float* %Sa, align 4, !dbg !4796
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4797
  %index70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 9, !dbg !4798
  %52 = load float, float* %index70, align 8, !dbg !4798
  %conv71 = fpext float %52 to double, !dbg !4797
  %mul72 = fmul double 0x3EF0001000100010, %conv71, !dbg !4799
  %53 = load float, float* %Da, align 4, !dbg !4800
  %conv73 = fpext float %53 to double, !dbg !4800
  %mul74 = fmul double %mul72, %conv73, !dbg !4801
  %conv75 = fptrunc double %mul74 to float, !dbg !4802
  %54 = load float, float* %Da, align 4, !dbg !4803
  %call76 = call float @Multiply(float %conv69, float %50, float %conv75, float %54), !dbg !4804
  %mul77 = fmul float %46, %call76, !dbg !4805
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4806
  %index78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 9, !dbg !4807
  store float %mul77, float* %index78, align 8, !dbg !4808
  br label %if.end, !dbg !4806

if.end:                                           ; preds = %if.then64, %cond.end
  br label %if.end145, !dbg !4809

if.else:                                          ; preds = %entry
  %56 = load i32, i32* %channel.addr, align 4, !dbg !4810
  %and79 = and i32 %56, 8, !dbg !4813
  %cmp80 = icmp ne i32 %and79, 0, !dbg !4814
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !4815

if.then82:                                        ; preds = %if.else
  %57 = load float, float* %Sa, align 4, !dbg !4816
  %58 = load float, float* %Da, align 4, !dbg !4817
  %mul83 = fmul float %57, %58, !dbg !4818
  %conv84 = fpext float %mul83 to double, !dbg !4816
  %sub85 = fsub double 1.000000e+00, %conv84, !dbg !4819
  %mul86 = fmul double 6.553500e+04, %sub85, !dbg !4820
  %conv87 = fptrunc double %mul86 to float, !dbg !4821
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4822
  %opacity88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 8, !dbg !4823
  store float %conv87, float* %opacity88, align 4, !dbg !4824
  br label %if.end89, !dbg !4822

if.end89:                                         ; preds = %if.then82, %if.else
  %60 = load i32, i32* %channel.addr, align 4, !dbg !4825
  %and90 = and i32 %60, 1, !dbg !4827
  %cmp91 = icmp ne i32 %and90, 0, !dbg !4828
  br i1 %cmp91, label %if.then93, label %if.end102, !dbg !4829

if.then93:                                        ; preds = %if.end89
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4830
  %red94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 5, !dbg !4831
  %62 = load float, float* %red94, align 8, !dbg !4831
  %conv95 = fpext float %62 to double, !dbg !4830
  %mul96 = fmul double 0x3EF0001000100010, %conv95, !dbg !4832
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4833
  %red97 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 5, !dbg !4834
  %64 = load float, float* %red97, align 8, !dbg !4834
  %conv98 = fpext float %64 to double, !dbg !4833
  %mul99 = fmul double %mul96, %conv98, !dbg !4835
  %conv100 = fptrunc double %mul99 to float, !dbg !4836
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4837
  %red101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 5, !dbg !4838
  store float %conv100, float* %red101, align 8, !dbg !4839
  br label %if.end102, !dbg !4837

if.end102:                                        ; preds = %if.then93, %if.end89
  %66 = load i32, i32* %channel.addr, align 4, !dbg !4840
  %and103 = and i32 %66, 2, !dbg !4842
  %cmp104 = icmp ne i32 %and103, 0, !dbg !4843
  br i1 %cmp104, label %if.then106, label %if.end115, !dbg !4844

if.then106:                                       ; preds = %if.end102
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4845
  %green107 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !4846
  %68 = load float, float* %green107, align 4, !dbg !4846
  %conv108 = fpext float %68 to double, !dbg !4845
  %mul109 = fmul double 0x3EF0001000100010, %conv108, !dbg !4847
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4848
  %green110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 6, !dbg !4849
  %70 = load float, float* %green110, align 4, !dbg !4849
  %conv111 = fpext float %70 to double, !dbg !4848
  %mul112 = fmul double %mul109, %conv111, !dbg !4850
  %conv113 = fptrunc double %mul112 to float, !dbg !4851
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4852
  %green114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 6, !dbg !4853
  store float %conv113, float* %green114, align 4, !dbg !4854
  br label %if.end115, !dbg !4852

if.end115:                                        ; preds = %if.then106, %if.end102
  %72 = load i32, i32* %channel.addr, align 4, !dbg !4855
  %and116 = and i32 %72, 4, !dbg !4857
  %cmp117 = icmp ne i32 %and116, 0, !dbg !4858
  br i1 %cmp117, label %if.then119, label %if.end128, !dbg !4859

if.then119:                                       ; preds = %if.end115
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4860
  %blue120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !4861
  %74 = load float, float* %blue120, align 8, !dbg !4861
  %conv121 = fpext float %74 to double, !dbg !4860
  %mul122 = fmul double 0x3EF0001000100010, %conv121, !dbg !4862
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4863
  %blue123 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 7, !dbg !4864
  %76 = load float, float* %blue123, align 8, !dbg !4864
  %conv124 = fpext float %76 to double, !dbg !4863
  %mul125 = fmul double %mul122, %conv124, !dbg !4865
  %conv126 = fptrunc double %mul125 to float, !dbg !4866
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4867
  %blue127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 7, !dbg !4868
  store float %conv126, float* %blue127, align 8, !dbg !4869
  br label %if.end128, !dbg !4867

if.end128:                                        ; preds = %if.then119, %if.end115
  %78 = load i32, i32* %channel.addr, align 4, !dbg !4870
  %and129 = and i32 %78, 32, !dbg !4872
  %cmp130 = icmp ne i32 %and129, 0, !dbg !4873
  br i1 %cmp130, label %land.lhs.true, label %if.end144, !dbg !4874

land.lhs.true:                                    ; preds = %if.end128
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4875
  %colorspace132 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 1, !dbg !4876
  %80 = load i32, i32* %colorspace132, align 4, !dbg !4876
  %cmp133 = icmp eq i32 %80, 12, !dbg !4877
  br i1 %cmp133, label %if.then135, label %if.end144, !dbg !4878

if.then135:                                       ; preds = %land.lhs.true
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4879
  %index136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i32 0, i32 9, !dbg !4880
  %82 = load float, float* %index136, align 8, !dbg !4880
  %conv137 = fpext float %82 to double, !dbg !4879
  %mul138 = fmul double 0x3EF0001000100010, %conv137, !dbg !4881
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4882
  %index139 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i32 0, i32 9, !dbg !4883
  %84 = load float, float* %index139, align 8, !dbg !4883
  %conv140 = fpext float %84 to double, !dbg !4882
  %mul141 = fmul double %mul138, %conv140, !dbg !4884
  %conv142 = fptrunc double %mul141 to float, !dbg !4885
  %85 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4886
  %index143 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %85, i32 0, i32 9, !dbg !4887
  store float %conv142, float* %index143, align 8, !dbg !4888
  br label %if.end144, !dbg !4886

if.end144:                                        ; preds = %if.then135, %land.lhs.true, %if.end128
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end
  ret void, !dbg !4889
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeScreen(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !4890 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !4893, metadata !DIExpression()), !dbg !4894
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata float* %Da, metadata !4901, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !4903, metadata !DIExpression()), !dbg !4904
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4905
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !4906
  %1 = load float, float* %opacity, align 4, !dbg !4906
  %conv = fpext float %1 to double, !dbg !4905
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !4907
  %sub = fsub double 1.000000e+00, %mul, !dbg !4908
  %conv1 = fptrunc double %sub to float, !dbg !4909
  store float %conv1, float* %Sa, align 4, !dbg !4910
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4911
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !4912
  %3 = load float, float* %opacity2, align 4, !dbg !4912
  %conv3 = fpext float %3 to double, !dbg !4911
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !4913
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !4914
  %conv6 = fptrunc double %sub5 to float, !dbg !4915
  store float %conv6, float* %Da, align 4, !dbg !4916
  %4 = load i32, i32* %channel.addr, align 4, !dbg !4917
  %and = and i32 %4, 256, !dbg !4919
  %cmp = icmp ne i32 %and, 0, !dbg !4920
  br i1 %cmp, label %if.then, label %if.else, !dbg !4921

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !4922
  %6 = load float, float* %Da, align 4, !dbg !4924
  %add = fadd float %5, %6, !dbg !4925
  %7 = load float, float* %Sa, align 4, !dbg !4926
  %8 = load float, float* %Da, align 4, !dbg !4927
  %mul8 = fmul float %7, %8, !dbg !4928
  %sub9 = fsub float %add, %mul8, !dbg !4929
  %call = call float @RoundToUnity(float %sub9), !dbg !4930
  %conv10 = fpext float %call to double, !dbg !4930
  store double %conv10, double* %gamma, align 8, !dbg !4931
  %9 = load double, double* %gamma, align 8, !dbg !4932
  %sub11 = fsub double 1.000000e+00, %9, !dbg !4933
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !4934
  %conv13 = fptrunc double %mul12 to float, !dbg !4935
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4936
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !4937
  store float %conv13, float* %opacity14, align 4, !dbg !4938
  %11 = load float, float* %Sa, align 4, !dbg !4939
  %mul15 = fmul float %11, 0x3EF0001000000000, !dbg !4939
  store float %mul15, float* %Sa, align 4, !dbg !4939
  %12 = load float, float* %Da, align 4, !dbg !4940
  %mul16 = fmul float %12, 0x3EF0001000000000, !dbg !4940
  store float %mul16, float* %Da, align 4, !dbg !4940
  %13 = load double, double* %gamma, align 8, !dbg !4941
  %14 = call double @llvm.fabs.f64(double %13), !dbg !4942
  %cmp17 = fcmp olt double %14, 1.000000e-15, !dbg !4943
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !4942

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4942

cond.false:                                       ; preds = %if.then
  %15 = load double, double* %gamma, align 8, !dbg !4944
  br label %cond.end, !dbg !4942

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %15, %cond.false ], !dbg !4942
  %div = fdiv double 6.553500e+04, %cond, !dbg !4945
  store double %div, double* %gamma, align 8, !dbg !4946
  %16 = load double, double* %gamma, align 8, !dbg !4947
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4948
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 5, !dbg !4949
  %18 = load float, float* %red, align 8, !dbg !4949
  %19 = load float, float* %Sa, align 4, !dbg !4950
  %mul19 = fmul float %18, %19, !dbg !4951
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4952
  %red20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 5, !dbg !4953
  %21 = load float, float* %red20, align 8, !dbg !4953
  %22 = load float, float* %Da, align 4, !dbg !4954
  %mul21 = fmul float %21, %22, !dbg !4955
  %call22 = call float @Screen(float %mul19, float %mul21), !dbg !4956
  %conv23 = fpext float %call22 to double, !dbg !4956
  %mul24 = fmul double %16, %conv23, !dbg !4957
  %conv25 = fptrunc double %mul24 to float, !dbg !4947
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4958
  %red26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 5, !dbg !4959
  store float %conv25, float* %red26, align 8, !dbg !4960
  %24 = load double, double* %gamma, align 8, !dbg !4961
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4962
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !4963
  %26 = load float, float* %green, align 4, !dbg !4963
  %27 = load float, float* %Sa, align 4, !dbg !4964
  %mul27 = fmul float %26, %27, !dbg !4965
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4966
  %green28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !4967
  %29 = load float, float* %green28, align 4, !dbg !4967
  %30 = load float, float* %Da, align 4, !dbg !4968
  %mul29 = fmul float %29, %30, !dbg !4969
  %call30 = call float @Screen(float %mul27, float %mul29), !dbg !4970
  %conv31 = fpext float %call30 to double, !dbg !4970
  %mul32 = fmul double %24, %conv31, !dbg !4971
  %conv33 = fptrunc double %mul32 to float, !dbg !4961
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4972
  %green34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 6, !dbg !4973
  store float %conv33, float* %green34, align 4, !dbg !4974
  %32 = load double, double* %gamma, align 8, !dbg !4975
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4976
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 7, !dbg !4977
  %34 = load float, float* %blue, align 8, !dbg !4977
  %35 = load float, float* %Sa, align 4, !dbg !4978
  %mul35 = fmul float %34, %35, !dbg !4979
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4980
  %blue36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 7, !dbg !4981
  %37 = load float, float* %blue36, align 8, !dbg !4981
  %38 = load float, float* %Da, align 4, !dbg !4982
  %mul37 = fmul float %37, %38, !dbg !4983
  %call38 = call float @Screen(float %mul35, float %mul37), !dbg !4984
  %conv39 = fpext float %call38 to double, !dbg !4984
  %mul40 = fmul double %32, %conv39, !dbg !4985
  %conv41 = fptrunc double %mul40 to float, !dbg !4975
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !4986
  %blue42 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 7, !dbg !4987
  store float %conv41, float* %blue42, align 8, !dbg !4988
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4989
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 1, !dbg !4991
  %41 = load i32, i32* %colorspace, align 4, !dbg !4991
  %cmp43 = icmp eq i32 %41, 12, !dbg !4992
  br i1 %cmp43, label %if.then45, label %if.end, !dbg !4993

if.then45:                                        ; preds = %cond.end
  %42 = load double, double* %gamma, align 8, !dbg !4994
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !4995
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 9, !dbg !4996
  %44 = load float, float* %index, align 8, !dbg !4996
  %45 = load float, float* %Sa, align 4, !dbg !4997
  %mul46 = fmul float %44, %45, !dbg !4998
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !4999
  %index47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !5000
  %47 = load float, float* %index47, align 8, !dbg !5000
  %48 = load float, float* %Da, align 4, !dbg !5001
  %mul48 = fmul float %47, %48, !dbg !5002
  %call49 = call float @Screen(float %mul46, float %mul48), !dbg !5003
  %conv50 = fpext float %call49 to double, !dbg !5003
  %mul51 = fmul double %42, %conv50, !dbg !5004
  %conv52 = fptrunc double %mul51 to float, !dbg !4994
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5005
  %index53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 9, !dbg !5006
  store float %conv52, float* %index53, align 8, !dbg !5007
  br label %if.end, !dbg !5005

if.end:                                           ; preds = %if.then45, %cond.end
  br label %if.end132, !dbg !5008

if.else:                                          ; preds = %entry
  %50 = load i32, i32* %channel.addr, align 4, !dbg !5009
  %and54 = and i32 %50, 8, !dbg !5012
  %cmp55 = icmp ne i32 %and54, 0, !dbg !5013
  br i1 %cmp55, label %if.then57, label %if.end64, !dbg !5014

if.then57:                                        ; preds = %if.else
  %51 = load float, float* %Sa, align 4, !dbg !5015
  %52 = load float, float* %Da, align 4, !dbg !5016
  %call58 = call float @Screen(float %51, float %52), !dbg !5017
  %conv59 = fpext float %call58 to double, !dbg !5017
  %sub60 = fsub double 1.000000e+00, %conv59, !dbg !5018
  %mul61 = fmul double 6.553500e+04, %sub60, !dbg !5019
  %conv62 = fptrunc double %mul61 to float, !dbg !5020
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5021
  %opacity63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 8, !dbg !5022
  store float %conv62, float* %opacity63, align 4, !dbg !5023
  br label %if.end64, !dbg !5021

if.end64:                                         ; preds = %if.then57, %if.else
  %54 = load i32, i32* %channel.addr, align 4, !dbg !5024
  %and65 = and i32 %54, 1, !dbg !5026
  %cmp66 = icmp ne i32 %and65, 0, !dbg !5027
  br i1 %cmp66, label %if.then68, label %if.end80, !dbg !5028

if.then68:                                        ; preds = %if.end64
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5029
  %red69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 5, !dbg !5030
  %56 = load float, float* %red69, align 8, !dbg !5030
  %conv70 = fpext float %56 to double, !dbg !5029
  %mul71 = fmul double 0x3EF0001000100010, %conv70, !dbg !5031
  %conv72 = fptrunc double %mul71 to float, !dbg !5032
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5033
  %red73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 5, !dbg !5034
  %58 = load float, float* %red73, align 8, !dbg !5034
  %conv74 = fpext float %58 to double, !dbg !5033
  %mul75 = fmul double 0x3EF0001000100010, %conv74, !dbg !5035
  %conv76 = fptrunc double %mul75 to float, !dbg !5036
  %call77 = call float @Screen(float %conv72, float %conv76), !dbg !5037
  %mul78 = fmul float 6.553500e+04, %call77, !dbg !5038
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5039
  %red79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 5, !dbg !5040
  store float %mul78, float* %red79, align 8, !dbg !5041
  br label %if.end80, !dbg !5039

if.end80:                                         ; preds = %if.then68, %if.end64
  %60 = load i32, i32* %channel.addr, align 4, !dbg !5042
  %and81 = and i32 %60, 2, !dbg !5044
  %cmp82 = icmp ne i32 %and81, 0, !dbg !5045
  br i1 %cmp82, label %if.then84, label %if.end96, !dbg !5046

if.then84:                                        ; preds = %if.end80
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5047
  %green85 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 6, !dbg !5048
  %62 = load float, float* %green85, align 4, !dbg !5048
  %conv86 = fpext float %62 to double, !dbg !5047
  %mul87 = fmul double 0x3EF0001000100010, %conv86, !dbg !5049
  %conv88 = fptrunc double %mul87 to float, !dbg !5050
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5051
  %green89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 6, !dbg !5052
  %64 = load float, float* %green89, align 4, !dbg !5052
  %conv90 = fpext float %64 to double, !dbg !5051
  %mul91 = fmul double 0x3EF0001000100010, %conv90, !dbg !5053
  %conv92 = fptrunc double %mul91 to float, !dbg !5054
  %call93 = call float @Screen(float %conv88, float %conv92), !dbg !5055
  %mul94 = fmul float 6.553500e+04, %call93, !dbg !5056
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5057
  %green95 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 6, !dbg !5058
  store float %mul94, float* %green95, align 4, !dbg !5059
  br label %if.end96, !dbg !5057

if.end96:                                         ; preds = %if.then84, %if.end80
  %66 = load i32, i32* %channel.addr, align 4, !dbg !5060
  %and97 = and i32 %66, 4, !dbg !5062
  %cmp98 = icmp ne i32 %and97, 0, !dbg !5063
  br i1 %cmp98, label %if.then100, label %if.end112, !dbg !5064

if.then100:                                       ; preds = %if.end96
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5065
  %blue101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 7, !dbg !5066
  %68 = load float, float* %blue101, align 8, !dbg !5066
  %conv102 = fpext float %68 to double, !dbg !5065
  %mul103 = fmul double 0x3EF0001000100010, %conv102, !dbg !5067
  %conv104 = fptrunc double %mul103 to float, !dbg !5068
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5069
  %blue105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 7, !dbg !5070
  %70 = load float, float* %blue105, align 8, !dbg !5070
  %conv106 = fpext float %70 to double, !dbg !5069
  %mul107 = fmul double 0x3EF0001000100010, %conv106, !dbg !5071
  %conv108 = fptrunc double %mul107 to float, !dbg !5072
  %call109 = call float @Screen(float %conv104, float %conv108), !dbg !5073
  %mul110 = fmul float 6.553500e+04, %call109, !dbg !5074
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5075
  %blue111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 7, !dbg !5076
  store float %mul110, float* %blue111, align 8, !dbg !5077
  br label %if.end112, !dbg !5075

if.end112:                                        ; preds = %if.then100, %if.end96
  %72 = load i32, i32* %channel.addr, align 4, !dbg !5078
  %and113 = and i32 %72, 32, !dbg !5080
  %cmp114 = icmp ne i32 %and113, 0, !dbg !5081
  br i1 %cmp114, label %land.lhs.true, label %if.end131, !dbg !5082

land.lhs.true:                                    ; preds = %if.end112
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5083
  %colorspace116 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 1, !dbg !5084
  %74 = load i32, i32* %colorspace116, align 4, !dbg !5084
  %cmp117 = icmp eq i32 %74, 12, !dbg !5085
  br i1 %cmp117, label %if.then119, label %if.end131, !dbg !5086

if.then119:                                       ; preds = %land.lhs.true
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5087
  %index120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 9, !dbg !5088
  %76 = load float, float* %index120, align 8, !dbg !5088
  %conv121 = fpext float %76 to double, !dbg !5087
  %mul122 = fmul double 0x3EF0001000100010, %conv121, !dbg !5089
  %conv123 = fptrunc double %mul122 to float, !dbg !5090
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5091
  %index124 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 9, !dbg !5092
  %78 = load float, float* %index124, align 8, !dbg !5092
  %conv125 = fpext float %78 to double, !dbg !5091
  %mul126 = fmul double 0x3EF0001000100010, %conv125, !dbg !5093
  %conv127 = fptrunc double %mul126 to float, !dbg !5094
  %call128 = call float @Screen(float %conv123, float %conv127), !dbg !5095
  %mul129 = fmul float 6.553500e+04, %call128, !dbg !5096
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5097
  %index130 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 9, !dbg !5098
  store float %mul129, float* %index130, align 8, !dbg !5099
  br label %if.end131, !dbg !5097

if.end131:                                        ; preds = %if.then119, %land.lhs.true, %if.end112
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end
  ret void, !dbg !5100
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeDivide(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !5101 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata float* %Da, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !5114, metadata !DIExpression()), !dbg !5115
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5116
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !5117
  %1 = load float, float* %opacity, align 4, !dbg !5117
  %conv = fpext float %1 to double, !dbg !5116
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5118
  %sub = fsub double 1.000000e+00, %mul, !dbg !5119
  %conv1 = fptrunc double %sub to float, !dbg !5120
  store float %conv1, float* %Sa, align 4, !dbg !5121
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5122
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !5123
  %3 = load float, float* %opacity2, align 4, !dbg !5123
  %conv3 = fpext float %3 to double, !dbg !5122
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !5124
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !5125
  %conv6 = fptrunc double %sub5 to float, !dbg !5126
  store float %conv6, float* %Da, align 4, !dbg !5127
  %4 = load i32, i32* %channel.addr, align 4, !dbg !5128
  %and = and i32 %4, 256, !dbg !5130
  %cmp = icmp ne i32 %and, 0, !dbg !5131
  br i1 %cmp, label %if.then, label %if.else, !dbg !5132

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !5133
  %6 = load float, float* %Da, align 4, !dbg !5135
  %add = fadd float %5, %6, !dbg !5136
  %7 = load float, float* %Sa, align 4, !dbg !5137
  %8 = load float, float* %Da, align 4, !dbg !5138
  %mul8 = fmul float %7, %8, !dbg !5139
  %sub9 = fsub float %add, %mul8, !dbg !5140
  %call = call float @RoundToUnity(float %sub9), !dbg !5141
  store float %call, float* %gamma, align 4, !dbg !5142
  %9 = load float, float* %gamma, align 4, !dbg !5143
  %conv10 = fpext float %9 to double, !dbg !5143
  %sub11 = fsub double 1.000000e+00, %conv10, !dbg !5144
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !5145
  %conv13 = fptrunc double %mul12 to float, !dbg !5146
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5147
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !5148
  store float %conv13, float* %opacity14, align 4, !dbg !5149
  %11 = load float, float* %gamma, align 4, !dbg !5150
  %conv15 = fpext float %11 to double, !dbg !5150
  %12 = call double @llvm.fabs.f64(double %conv15), !dbg !5151
  %cmp16 = fcmp olt double %12, 1.000000e-15, !dbg !5152
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5151

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5151

cond.false:                                       ; preds = %if.then
  %13 = load float, float* %gamma, align 4, !dbg !5153
  %conv18 = fpext float %13 to double, !dbg !5153
  br label %cond.end, !dbg !5151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv18, %cond.false ], !dbg !5151
  %div = fdiv double 6.553500e+04, %cond, !dbg !5154
  %conv19 = fptrunc double %div to float, !dbg !5155
  store float %conv19, float* %gamma, align 4, !dbg !5156
  %14 = load float, float* %gamma, align 4, !dbg !5157
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5158
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !5159
  %16 = load float, float* %red, align 8, !dbg !5159
  %conv20 = fpext float %16 to double, !dbg !5158
  %mul21 = fmul double 0x3EF0001000100010, %conv20, !dbg !5160
  %17 = load float, float* %Sa, align 4, !dbg !5161
  %conv22 = fpext float %17 to double, !dbg !5161
  %mul23 = fmul double %mul21, %conv22, !dbg !5162
  %conv24 = fptrunc double %mul23 to float, !dbg !5163
  %18 = load float, float* %Sa, align 4, !dbg !5164
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5165
  %red25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !5166
  %20 = load float, float* %red25, align 8, !dbg !5166
  %conv26 = fpext float %20 to double, !dbg !5165
  %mul27 = fmul double 0x3EF0001000100010, %conv26, !dbg !5167
  %21 = load float, float* %Da, align 4, !dbg !5168
  %conv28 = fpext float %21 to double, !dbg !5168
  %mul29 = fmul double %mul27, %conv28, !dbg !5169
  %conv30 = fptrunc double %mul29 to float, !dbg !5170
  %22 = load float, float* %Da, align 4, !dbg !5171
  %call31 = call float @Divide(float %conv24, float %18, float %conv30, float %22), !dbg !5172
  %mul32 = fmul float %14, %call31, !dbg !5173
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5174
  %red33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 5, !dbg !5175
  store float %mul32, float* %red33, align 8, !dbg !5176
  %24 = load float, float* %gamma, align 4, !dbg !5177
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5178
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !5179
  %26 = load float, float* %green, align 4, !dbg !5179
  %conv34 = fpext float %26 to double, !dbg !5178
  %mul35 = fmul double 0x3EF0001000100010, %conv34, !dbg !5180
  %27 = load float, float* %Sa, align 4, !dbg !5181
  %conv36 = fpext float %27 to double, !dbg !5181
  %mul37 = fmul double %mul35, %conv36, !dbg !5182
  %conv38 = fptrunc double %mul37 to float, !dbg !5183
  %28 = load float, float* %Sa, align 4, !dbg !5184
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5185
  %green39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 6, !dbg !5186
  %30 = load float, float* %green39, align 4, !dbg !5186
  %conv40 = fpext float %30 to double, !dbg !5185
  %mul41 = fmul double 0x3EF0001000100010, %conv40, !dbg !5187
  %31 = load float, float* %Da, align 4, !dbg !5188
  %conv42 = fpext float %31 to double, !dbg !5188
  %mul43 = fmul double %mul41, %conv42, !dbg !5189
  %conv44 = fptrunc double %mul43 to float, !dbg !5190
  %32 = load float, float* %Da, align 4, !dbg !5191
  %call45 = call float @Divide(float %conv38, float %28, float %conv44, float %32), !dbg !5192
  %mul46 = fmul float %24, %call45, !dbg !5193
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5194
  %green47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 6, !dbg !5195
  store float %mul46, float* %green47, align 4, !dbg !5196
  %34 = load float, float* %gamma, align 4, !dbg !5197
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5198
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !5199
  %36 = load float, float* %blue, align 8, !dbg !5199
  %conv48 = fpext float %36 to double, !dbg !5198
  %mul49 = fmul double 0x3EF0001000100010, %conv48, !dbg !5200
  %37 = load float, float* %Sa, align 4, !dbg !5201
  %conv50 = fpext float %37 to double, !dbg !5201
  %mul51 = fmul double %mul49, %conv50, !dbg !5202
  %conv52 = fptrunc double %mul51 to float, !dbg !5203
  %38 = load float, float* %Sa, align 4, !dbg !5204
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5205
  %blue53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 7, !dbg !5206
  %40 = load float, float* %blue53, align 8, !dbg !5206
  %conv54 = fpext float %40 to double, !dbg !5205
  %mul55 = fmul double 0x3EF0001000100010, %conv54, !dbg !5207
  %41 = load float, float* %Da, align 4, !dbg !5208
  %conv56 = fpext float %41 to double, !dbg !5208
  %mul57 = fmul double %mul55, %conv56, !dbg !5209
  %conv58 = fptrunc double %mul57 to float, !dbg !5210
  %42 = load float, float* %Da, align 4, !dbg !5211
  %call59 = call float @Divide(float %conv52, float %38, float %conv58, float %42), !dbg !5212
  %mul60 = fmul float %34, %call59, !dbg !5213
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5214
  %blue61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 7, !dbg !5215
  store float %mul60, float* %blue61, align 8, !dbg !5216
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5217
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 1, !dbg !5219
  %45 = load i32, i32* %colorspace, align 4, !dbg !5219
  %cmp62 = icmp eq i32 %45, 12, !dbg !5220
  br i1 %cmp62, label %if.then64, label %if.end, !dbg !5221

if.then64:                                        ; preds = %cond.end
  %46 = load float, float* %gamma, align 4, !dbg !5222
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5223
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 9, !dbg !5224
  %48 = load float, float* %index, align 8, !dbg !5224
  %conv65 = fpext float %48 to double, !dbg !5223
  %mul66 = fmul double 0x3EF0001000100010, %conv65, !dbg !5225
  %49 = load float, float* %Sa, align 4, !dbg !5226
  %conv67 = fpext float %49 to double, !dbg !5226
  %mul68 = fmul double %mul66, %conv67, !dbg !5227
  %conv69 = fptrunc double %mul68 to float, !dbg !5228
  %50 = load float, float* %Sa, align 4, !dbg !5229
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5230
  %index70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 9, !dbg !5231
  %52 = load float, float* %index70, align 8, !dbg !5231
  %conv71 = fpext float %52 to double, !dbg !5230
  %mul72 = fmul double 0x3EF0001000100010, %conv71, !dbg !5232
  %53 = load float, float* %Da, align 4, !dbg !5233
  %conv73 = fpext float %53 to double, !dbg !5233
  %mul74 = fmul double %mul72, %conv73, !dbg !5234
  %conv75 = fptrunc double %mul74 to float, !dbg !5235
  %54 = load float, float* %Da, align 4, !dbg !5236
  %call76 = call float @Divide(float %conv69, float %50, float %conv75, float %54), !dbg !5237
  %mul77 = fmul float %46, %call76, !dbg !5238
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5239
  %index78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 9, !dbg !5240
  store float %mul77, float* %index78, align 8, !dbg !5241
  br label %if.end, !dbg !5239

if.end:                                           ; preds = %if.then64, %cond.end
  br label %if.end157, !dbg !5242

if.else:                                          ; preds = %entry
  %56 = load i32, i32* %channel.addr, align 4, !dbg !5243
  %and79 = and i32 %56, 8, !dbg !5246
  %cmp80 = icmp ne i32 %and79, 0, !dbg !5247
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !5248

if.then82:                                        ; preds = %if.else
  %57 = load float, float* %Sa, align 4, !dbg !5249
  %58 = load float, float* %Da, align 4, !dbg !5250
  %call83 = call float @Divide(float %57, float 1.000000e+00, float %58, float 1.000000e+00), !dbg !5251
  %conv84 = fpext float %call83 to double, !dbg !5251
  %sub85 = fsub double 1.000000e+00, %conv84, !dbg !5252
  %mul86 = fmul double 6.553500e+04, %sub85, !dbg !5253
  %conv87 = fptrunc double %mul86 to float, !dbg !5254
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5255
  %opacity88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 8, !dbg !5256
  store float %conv87, float* %opacity88, align 4, !dbg !5257
  br label %if.end89, !dbg !5255

if.end89:                                         ; preds = %if.then82, %if.else
  %60 = load i32, i32* %channel.addr, align 4, !dbg !5258
  %and90 = and i32 %60, 1, !dbg !5260
  %cmp91 = icmp ne i32 %and90, 0, !dbg !5261
  br i1 %cmp91, label %if.then93, label %if.end105, !dbg !5262

if.then93:                                        ; preds = %if.end89
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5263
  %red94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 5, !dbg !5264
  %62 = load float, float* %red94, align 8, !dbg !5264
  %conv95 = fpext float %62 to double, !dbg !5263
  %mul96 = fmul double 0x3EF0001000100010, %conv95, !dbg !5265
  %conv97 = fptrunc double %mul96 to float, !dbg !5266
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5267
  %red98 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 5, !dbg !5268
  %64 = load float, float* %red98, align 8, !dbg !5268
  %conv99 = fpext float %64 to double, !dbg !5267
  %mul100 = fmul double 0x3EF0001000100010, %conv99, !dbg !5269
  %conv101 = fptrunc double %mul100 to float, !dbg !5270
  %call102 = call float @Divide(float %conv97, float 1.000000e+00, float %conv101, float 1.000000e+00), !dbg !5271
  %mul103 = fmul float 6.553500e+04, %call102, !dbg !5272
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5273
  %red104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 5, !dbg !5274
  store float %mul103, float* %red104, align 8, !dbg !5275
  br label %if.end105, !dbg !5273

if.end105:                                        ; preds = %if.then93, %if.end89
  %66 = load i32, i32* %channel.addr, align 4, !dbg !5276
  %and106 = and i32 %66, 2, !dbg !5278
  %cmp107 = icmp ne i32 %and106, 0, !dbg !5279
  br i1 %cmp107, label %if.then109, label %if.end121, !dbg !5280

if.then109:                                       ; preds = %if.end105
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5281
  %green110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !5282
  %68 = load float, float* %green110, align 4, !dbg !5282
  %conv111 = fpext float %68 to double, !dbg !5281
  %mul112 = fmul double 0x3EF0001000100010, %conv111, !dbg !5283
  %conv113 = fptrunc double %mul112 to float, !dbg !5284
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5285
  %green114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 6, !dbg !5286
  %70 = load float, float* %green114, align 4, !dbg !5286
  %conv115 = fpext float %70 to double, !dbg !5285
  %mul116 = fmul double 0x3EF0001000100010, %conv115, !dbg !5287
  %conv117 = fptrunc double %mul116 to float, !dbg !5288
  %call118 = call float @Divide(float %conv113, float 1.000000e+00, float %conv117, float 1.000000e+00), !dbg !5289
  %mul119 = fmul float 6.553500e+04, %call118, !dbg !5290
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5291
  %green120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 6, !dbg !5292
  store float %mul119, float* %green120, align 4, !dbg !5293
  br label %if.end121, !dbg !5291

if.end121:                                        ; preds = %if.then109, %if.end105
  %72 = load i32, i32* %channel.addr, align 4, !dbg !5294
  %and122 = and i32 %72, 4, !dbg !5296
  %cmp123 = icmp ne i32 %and122, 0, !dbg !5297
  br i1 %cmp123, label %if.then125, label %if.end137, !dbg !5298

if.then125:                                       ; preds = %if.end121
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5299
  %blue126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !5300
  %74 = load float, float* %blue126, align 8, !dbg !5300
  %conv127 = fpext float %74 to double, !dbg !5299
  %mul128 = fmul double 0x3EF0001000100010, %conv127, !dbg !5301
  %conv129 = fptrunc double %mul128 to float, !dbg !5302
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5303
  %blue130 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 7, !dbg !5304
  %76 = load float, float* %blue130, align 8, !dbg !5304
  %conv131 = fpext float %76 to double, !dbg !5303
  %mul132 = fmul double 0x3EF0001000100010, %conv131, !dbg !5305
  %conv133 = fptrunc double %mul132 to float, !dbg !5306
  %call134 = call float @Divide(float %conv129, float 1.000000e+00, float %conv133, float 1.000000e+00), !dbg !5307
  %mul135 = fmul float 6.553500e+04, %call134, !dbg !5308
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5309
  %blue136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 7, !dbg !5310
  store float %mul135, float* %blue136, align 8, !dbg !5311
  br label %if.end137, !dbg !5309

if.end137:                                        ; preds = %if.then125, %if.end121
  %78 = load i32, i32* %channel.addr, align 4, !dbg !5312
  %and138 = and i32 %78, 32, !dbg !5314
  %cmp139 = icmp ne i32 %and138, 0, !dbg !5315
  br i1 %cmp139, label %land.lhs.true, label %if.end156, !dbg !5316

land.lhs.true:                                    ; preds = %if.end137
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5317
  %colorspace141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 1, !dbg !5318
  %80 = load i32, i32* %colorspace141, align 4, !dbg !5318
  %cmp142 = icmp eq i32 %80, 12, !dbg !5319
  br i1 %cmp142, label %if.then144, label %if.end156, !dbg !5320

if.then144:                                       ; preds = %land.lhs.true
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5321
  %index145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i32 0, i32 9, !dbg !5322
  %82 = load float, float* %index145, align 8, !dbg !5322
  %conv146 = fpext float %82 to double, !dbg !5321
  %mul147 = fmul double 0x3EF0001000100010, %conv146, !dbg !5323
  %conv148 = fptrunc double %mul147 to float, !dbg !5324
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5325
  %index149 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i32 0, i32 9, !dbg !5326
  %84 = load float, float* %index149, align 8, !dbg !5326
  %conv150 = fpext float %84 to double, !dbg !5325
  %mul151 = fmul double 0x3EF0001000100010, %conv150, !dbg !5327
  %conv152 = fptrunc double %mul151 to float, !dbg !5328
  %call153 = call float @Divide(float %conv148, float 1.000000e+00, float %conv152, float 1.000000e+00), !dbg !5329
  %mul154 = fmul float 6.553500e+04, %call153, !dbg !5330
  %85 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5331
  %index155 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %85, i32 0, i32 9, !dbg !5332
  store float %mul154, float* %index155, align 8, !dbg !5333
  br label %if.end156, !dbg !5331

if.end156:                                        ; preds = %if.then144, %land.lhs.true, %if.end137
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end
  ret void, !dbg !5334
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeDarken(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !5335 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5340, metadata !DIExpression()), !dbg !5341
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5342, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !5344, metadata !DIExpression()), !dbg !5345
  %0 = load i32, i32* %channel.addr, align 4, !dbg !5346
  %and = and i32 %0, 256, !dbg !5348
  %cmp = icmp ne i32 %and, 0, !dbg !5349
  br i1 %cmp, label %if.then, label %if.else, !dbg !5350

if.then:                                          ; preds = %entry
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5351
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !5353
  %2 = load float, float* %opacity, align 4, !dbg !5353
  %conv = fpext float %2 to double, !dbg !5351
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5354
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5355
  %opacity1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !5356
  %4 = load float, float* %opacity1, align 4, !dbg !5356
  %conv2 = fpext float %4 to double, !dbg !5355
  %mul3 = fmul double %mul, %conv2, !dbg !5357
  %conv4 = fptrunc double %mul3 to float, !dbg !5358
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5359
  %opacity5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !5360
  store float %conv4, float* %opacity5, align 4, !dbg !5361
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5362
  %opacity6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 8, !dbg !5363
  %7 = load float, float* %opacity6, align 4, !dbg !5363
  %conv7 = fpext float %7 to double, !dbg !5362
  %mul8 = fmul double 0x3EF0001000100010, %conv7, !dbg !5364
  %sub = fsub double 1.000000e+00, %mul8, !dbg !5365
  store double %sub, double* %gamma, align 8, !dbg !5366
  %8 = load double, double* %gamma, align 8, !dbg !5367
  %cmp9 = fcmp olt double %8, 0.000000e+00, !dbg !5369
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5370

if.then11:                                        ; preds = %if.then
  store double 0.000000e+00, double* %gamma, align 8, !dbg !5371
  br label %if.end, !dbg !5372

if.end:                                           ; preds = %if.then11, %if.then
  %9 = load double, double* %gamma, align 8, !dbg !5373
  %call = call double @PerceptibleReciprocal(double %9), !dbg !5374
  store double %call, double* %gamma, align 8, !dbg !5375
  %10 = load double, double* %gamma, align 8, !dbg !5376
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5377
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 5, !dbg !5378
  %12 = load float, float* %red, align 8, !dbg !5378
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5379
  %opacity12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 8, !dbg !5380
  %14 = load float, float* %opacity12, align 4, !dbg !5380
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5381
  %red13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !5382
  %16 = load float, float* %red13, align 8, !dbg !5382
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5383
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 8, !dbg !5384
  %18 = load float, float* %opacity14, align 4, !dbg !5384
  %call15 = call float @Darken(float %12, float %14, float %16, float %18), !dbg !5385
  %conv16 = fpext float %call15 to double, !dbg !5385
  %mul17 = fmul double %10, %conv16, !dbg !5386
  %conv18 = fptrunc double %mul17 to float, !dbg !5376
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5387
  %red19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !5388
  store float %conv18, float* %red19, align 8, !dbg !5389
  %20 = load double, double* %gamma, align 8, !dbg !5390
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5391
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 6, !dbg !5392
  %22 = load float, float* %green, align 4, !dbg !5392
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5393
  %opacity20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 8, !dbg !5394
  %24 = load float, float* %opacity20, align 4, !dbg !5394
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5395
  %green21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 6, !dbg !5396
  %26 = load float, float* %green21, align 4, !dbg !5396
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5397
  %opacity22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 8, !dbg !5398
  %28 = load float, float* %opacity22, align 4, !dbg !5398
  %call23 = call float @Darken(float %22, float %24, float %26, float %28), !dbg !5399
  %conv24 = fpext float %call23 to double, !dbg !5399
  %mul25 = fmul double %20, %conv24, !dbg !5400
  %conv26 = fptrunc double %mul25 to float, !dbg !5390
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5401
  %green27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 6, !dbg !5402
  store float %conv26, float* %green27, align 4, !dbg !5403
  %30 = load double, double* %gamma, align 8, !dbg !5404
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5405
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 7, !dbg !5406
  %32 = load float, float* %blue, align 8, !dbg !5406
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5407
  %opacity28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 8, !dbg !5408
  %34 = load float, float* %opacity28, align 4, !dbg !5408
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5409
  %blue29 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !5410
  %36 = load float, float* %blue29, align 8, !dbg !5410
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5411
  %opacity30 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 8, !dbg !5412
  %38 = load float, float* %opacity30, align 4, !dbg !5412
  %call31 = call float @Darken(float %32, float %34, float %36, float %38), !dbg !5413
  %conv32 = fpext float %call31 to double, !dbg !5413
  %mul33 = fmul double %30, %conv32, !dbg !5414
  %conv34 = fptrunc double %mul33 to float, !dbg !5404
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5415
  %blue35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 7, !dbg !5416
  store float %conv34, float* %blue35, align 8, !dbg !5417
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5418
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 1, !dbg !5420
  %41 = load i32, i32* %colorspace, align 4, !dbg !5420
  %cmp36 = icmp eq i32 %41, 12, !dbg !5421
  br i1 %cmp36, label %if.then38, label %if.end47, !dbg !5422

if.then38:                                        ; preds = %if.end
  %42 = load double, double* %gamma, align 8, !dbg !5423
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5424
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 9, !dbg !5425
  %44 = load float, float* %index, align 8, !dbg !5425
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5426
  %opacity39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 8, !dbg !5427
  %46 = load float, float* %opacity39, align 4, !dbg !5427
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5428
  %index40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 9, !dbg !5429
  %48 = load float, float* %index40, align 8, !dbg !5429
  %49 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5430
  %opacity41 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %49, i32 0, i32 8, !dbg !5431
  %50 = load float, float* %opacity41, align 4, !dbg !5431
  %call42 = call float @Darken(float %44, float %46, float %48, float %50), !dbg !5432
  %conv43 = fpext float %call42 to double, !dbg !5432
  %mul44 = fmul double %42, %conv43, !dbg !5433
  %conv45 = fptrunc double %mul44 to float, !dbg !5423
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5434
  %index46 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i32 0, i32 9, !dbg !5435
  store float %conv45, float* %index46, align 8, !dbg !5436
  br label %if.end47, !dbg !5434

if.end47:                                         ; preds = %if.then38, %if.end
  br label %if.end111, !dbg !5437

if.else:                                          ; preds = %entry
  %52 = load i32, i32* %channel.addr, align 4, !dbg !5438
  %and48 = and i32 %52, 8, !dbg !5441
  %cmp49 = icmp ne i32 %and48, 0, !dbg !5442
  br i1 %cmp49, label %if.then51, label %if.end59, !dbg !5443

if.then51:                                        ; preds = %if.else
  %53 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5444
  %opacity52 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %53, i32 0, i32 8, !dbg !5445
  %54 = load float, float* %opacity52, align 4, !dbg !5445
  %conv53 = fpext float %54 to double, !dbg !5444
  %55 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5446
  %opacity54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %55, i32 0, i32 8, !dbg !5447
  %56 = load float, float* %opacity54, align 4, !dbg !5447
  %conv55 = fpext float %56 to double, !dbg !5446
  %call56 = call double @MagickMax(double %conv53, double %conv55), !dbg !5448
  %conv57 = fptrunc double %call56 to float, !dbg !5448
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5449
  %opacity58 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 8, !dbg !5450
  store float %conv57, float* %opacity58, align 4, !dbg !5451
  br label %if.end59, !dbg !5449

if.end59:                                         ; preds = %if.then51, %if.else
  %58 = load i32, i32* %channel.addr, align 4, !dbg !5452
  %and60 = and i32 %58, 1, !dbg !5454
  %cmp61 = icmp ne i32 %and60, 0, !dbg !5455
  br i1 %cmp61, label %if.then63, label %if.end71, !dbg !5456

if.then63:                                        ; preds = %if.end59
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5457
  %red64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 5, !dbg !5458
  %60 = load float, float* %red64, align 8, !dbg !5458
  %conv65 = fpext float %60 to double, !dbg !5457
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5459
  %red66 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 5, !dbg !5460
  %62 = load float, float* %red66, align 8, !dbg !5460
  %conv67 = fpext float %62 to double, !dbg !5459
  %call68 = call double @MagickMin(double %conv65, double %conv67), !dbg !5461
  %conv69 = fptrunc double %call68 to float, !dbg !5461
  %63 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5462
  %red70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %63, i32 0, i32 5, !dbg !5463
  store float %conv69, float* %red70, align 8, !dbg !5464
  br label %if.end71, !dbg !5462

if.end71:                                         ; preds = %if.then63, %if.end59
  %64 = load i32, i32* %channel.addr, align 4, !dbg !5465
  %and72 = and i32 %64, 2, !dbg !5467
  %cmp73 = icmp ne i32 %and72, 0, !dbg !5468
  br i1 %cmp73, label %if.then75, label %if.end83, !dbg !5469

if.then75:                                        ; preds = %if.end71
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5470
  %green76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i32 0, i32 6, !dbg !5471
  %66 = load float, float* %green76, align 4, !dbg !5471
  %conv77 = fpext float %66 to double, !dbg !5470
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5472
  %green78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !5473
  %68 = load float, float* %green78, align 4, !dbg !5473
  %conv79 = fpext float %68 to double, !dbg !5472
  %call80 = call double @MagickMin(double %conv77, double %conv79), !dbg !5474
  %conv81 = fptrunc double %call80 to float, !dbg !5474
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5475
  %green82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i32 0, i32 6, !dbg !5476
  store float %conv81, float* %green82, align 4, !dbg !5477
  br label %if.end83, !dbg !5475

if.end83:                                         ; preds = %if.then75, %if.end71
  %70 = load i32, i32* %channel.addr, align 4, !dbg !5478
  %and84 = and i32 %70, 4, !dbg !5480
  %cmp85 = icmp ne i32 %and84, 0, !dbg !5481
  br i1 %cmp85, label %if.then87, label %if.end95, !dbg !5482

if.then87:                                        ; preds = %if.end83
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5483
  %blue88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 7, !dbg !5484
  %72 = load float, float* %blue88, align 8, !dbg !5484
  %conv89 = fpext float %72 to double, !dbg !5483
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5485
  %blue90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 7, !dbg !5486
  %74 = load float, float* %blue90, align 8, !dbg !5486
  %conv91 = fpext float %74 to double, !dbg !5485
  %call92 = call double @MagickMin(double %conv89, double %conv91), !dbg !5487
  %conv93 = fptrunc double %call92 to float, !dbg !5487
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5488
  %blue94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 7, !dbg !5489
  store float %conv93, float* %blue94, align 8, !dbg !5490
  br label %if.end95, !dbg !5488

if.end95:                                         ; preds = %if.then87, %if.end83
  %76 = load i32, i32* %channel.addr, align 4, !dbg !5491
  %and96 = and i32 %76, 32, !dbg !5493
  %cmp97 = icmp ne i32 %and96, 0, !dbg !5494
  br i1 %cmp97, label %land.lhs.true, label %if.end110, !dbg !5495

land.lhs.true:                                    ; preds = %if.end95
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5496
  %colorspace99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 1, !dbg !5497
  %78 = load i32, i32* %colorspace99, align 4, !dbg !5497
  %cmp100 = icmp eq i32 %78, 12, !dbg !5498
  br i1 %cmp100, label %if.then102, label %if.end110, !dbg !5499

if.then102:                                       ; preds = %land.lhs.true
  %79 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5500
  %index103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %79, i32 0, i32 9, !dbg !5501
  %80 = load float, float* %index103, align 8, !dbg !5501
  %conv104 = fpext float %80 to double, !dbg !5500
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5502
  %index105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i32 0, i32 9, !dbg !5503
  %82 = load float, float* %index105, align 8, !dbg !5503
  %conv106 = fpext float %82 to double, !dbg !5502
  %call107 = call double @MagickMin(double %conv104, double %conv106), !dbg !5504
  %conv108 = fptrunc double %call107 to float, !dbg !5504
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5505
  %index109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i32 0, i32 9, !dbg !5506
  store float %conv108, float* %index109, align 8, !dbg !5507
  br label %if.end110, !dbg !5505

if.end110:                                        ; preds = %if.then102, %land.lhs.true, %if.end95
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end47
  ret void, !dbg !5508
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeLighten(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !5509 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !5518, metadata !DIExpression()), !dbg !5519
  %0 = load i32, i32* %channel.addr, align 4, !dbg !5520
  %and = and i32 %0, 256, !dbg !5522
  %cmp = icmp ne i32 %and, 0, !dbg !5523
  br i1 %cmp, label %if.then, label %if.else, !dbg !5524

if.then:                                          ; preds = %entry
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5525
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !5527
  %2 = load float, float* %opacity, align 4, !dbg !5527
  %conv = fpext float %2 to double, !dbg !5525
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5528
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5529
  %opacity1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !5530
  %4 = load float, float* %opacity1, align 4, !dbg !5530
  %conv2 = fpext float %4 to double, !dbg !5529
  %mul3 = fmul double %mul, %conv2, !dbg !5531
  %conv4 = fptrunc double %mul3 to float, !dbg !5532
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5533
  %opacity5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !5534
  store float %conv4, float* %opacity5, align 4, !dbg !5535
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5536
  %opacity6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 8, !dbg !5537
  %7 = load float, float* %opacity6, align 4, !dbg !5537
  %conv7 = fpext float %7 to double, !dbg !5536
  %mul8 = fmul double 0x3EF0001000100010, %conv7, !dbg !5538
  %sub = fsub double 1.000000e+00, %mul8, !dbg !5539
  store double %sub, double* %gamma, align 8, !dbg !5540
  %8 = load double, double* %gamma, align 8, !dbg !5541
  %call = call double @PerceptibleReciprocal(double %8), !dbg !5542
  store double %call, double* %gamma, align 8, !dbg !5543
  %9 = load double, double* %gamma, align 8, !dbg !5544
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5545
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 5, !dbg !5546
  %11 = load float, float* %red, align 8, !dbg !5546
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5547
  %opacity9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 8, !dbg !5548
  %13 = load float, float* %opacity9, align 4, !dbg !5548
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5549
  %red10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !5550
  %15 = load float, float* %red10, align 8, !dbg !5550
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5551
  %opacity11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 8, !dbg !5552
  %17 = load float, float* %opacity11, align 4, !dbg !5552
  %call12 = call float @Lighten(float %11, float %13, float %15, float %17), !dbg !5553
  %conv13 = fpext float %call12 to double, !dbg !5553
  %mul14 = fmul double %9, %conv13, !dbg !5554
  %conv15 = fptrunc double %mul14 to float, !dbg !5544
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5555
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !5556
  store float %conv15, float* %red16, align 8, !dbg !5557
  %19 = load double, double* %gamma, align 8, !dbg !5558
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5559
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !5560
  %21 = load float, float* %green, align 4, !dbg !5560
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5561
  %opacity17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 8, !dbg !5562
  %23 = load float, float* %opacity17, align 4, !dbg !5562
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5563
  %green18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !5564
  %25 = load float, float* %green18, align 4, !dbg !5564
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5565
  %opacity19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 8, !dbg !5566
  %27 = load float, float* %opacity19, align 4, !dbg !5566
  %call20 = call float @Lighten(float %21, float %23, float %25, float %27), !dbg !5567
  %conv21 = fpext float %call20 to double, !dbg !5567
  %mul22 = fmul double %19, %conv21, !dbg !5568
  %conv23 = fptrunc double %mul22 to float, !dbg !5558
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5569
  %green24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !5570
  store float %conv23, float* %green24, align 4, !dbg !5571
  %29 = load double, double* %gamma, align 8, !dbg !5572
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5573
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !5574
  %31 = load float, float* %blue, align 8, !dbg !5574
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5575
  %opacity25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 8, !dbg !5576
  %33 = load float, float* %opacity25, align 4, !dbg !5576
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5577
  %blue26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !5578
  %35 = load float, float* %blue26, align 8, !dbg !5578
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5579
  %opacity27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 8, !dbg !5580
  %37 = load float, float* %opacity27, align 4, !dbg !5580
  %call28 = call float @Lighten(float %31, float %33, float %35, float %37), !dbg !5581
  %conv29 = fpext float %call28 to double, !dbg !5581
  %mul30 = fmul double %29, %conv29, !dbg !5582
  %conv31 = fptrunc double %mul30 to float, !dbg !5572
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5583
  %blue32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !5584
  store float %conv31, float* %blue32, align 8, !dbg !5585
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5586
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 1, !dbg !5588
  %40 = load i32, i32* %colorspace, align 4, !dbg !5588
  %cmp33 = icmp eq i32 %40, 12, !dbg !5589
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !5590

if.then35:                                        ; preds = %if.then
  %41 = load double, double* %gamma, align 8, !dbg !5591
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5592
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 9, !dbg !5593
  %43 = load float, float* %index, align 8, !dbg !5593
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5594
  %opacity36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 8, !dbg !5595
  %45 = load float, float* %opacity36, align 4, !dbg !5595
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5596
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !5597
  %47 = load float, float* %index37, align 8, !dbg !5597
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5598
  %opacity38 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 8, !dbg !5599
  %49 = load float, float* %opacity38, align 4, !dbg !5599
  %call39 = call float @Lighten(float %43, float %45, float %47, float %49), !dbg !5600
  %conv40 = fpext float %call39 to double, !dbg !5600
  %mul41 = fmul double %41, %conv40, !dbg !5601
  %conv42 = fptrunc double %mul41 to float, !dbg !5591
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5602
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !5603
  store float %conv42, float* %index43, align 8, !dbg !5604
  br label %if.end, !dbg !5602

if.end:                                           ; preds = %if.then35, %if.then
  br label %if.end107, !dbg !5605

if.else:                                          ; preds = %entry
  %51 = load i32, i32* %channel.addr, align 4, !dbg !5606
  %and44 = and i32 %51, 8, !dbg !5609
  %cmp45 = icmp ne i32 %and44, 0, !dbg !5610
  br i1 %cmp45, label %if.then47, label %if.end55, !dbg !5611

if.then47:                                        ; preds = %if.else
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5612
  %opacity48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 8, !dbg !5613
  %53 = load float, float* %opacity48, align 4, !dbg !5613
  %conv49 = fpext float %53 to double, !dbg !5612
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5614
  %opacity50 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 8, !dbg !5615
  %55 = load float, float* %opacity50, align 4, !dbg !5615
  %conv51 = fpext float %55 to double, !dbg !5614
  %call52 = call double @MagickMin(double %conv49, double %conv51), !dbg !5616
  %conv53 = fptrunc double %call52 to float, !dbg !5616
  %56 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5617
  %opacity54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %56, i32 0, i32 8, !dbg !5618
  store float %conv53, float* %opacity54, align 4, !dbg !5619
  br label %if.end55, !dbg !5617

if.end55:                                         ; preds = %if.then47, %if.else
  %57 = load i32, i32* %channel.addr, align 4, !dbg !5620
  %and56 = and i32 %57, 1, !dbg !5622
  %cmp57 = icmp ne i32 %and56, 0, !dbg !5623
  br i1 %cmp57, label %if.then59, label %if.end67, !dbg !5624

if.then59:                                        ; preds = %if.end55
  %58 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5625
  %red60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %58, i32 0, i32 5, !dbg !5626
  %59 = load float, float* %red60, align 8, !dbg !5626
  %conv61 = fpext float %59 to double, !dbg !5625
  %60 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5627
  %red62 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %60, i32 0, i32 5, !dbg !5628
  %61 = load float, float* %red62, align 8, !dbg !5628
  %conv63 = fpext float %61 to double, !dbg !5627
  %call64 = call double @MagickMax(double %conv61, double %conv63), !dbg !5629
  %conv65 = fptrunc double %call64 to float, !dbg !5629
  %62 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5630
  %red66 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %62, i32 0, i32 5, !dbg !5631
  store float %conv65, float* %red66, align 8, !dbg !5632
  br label %if.end67, !dbg !5630

if.end67:                                         ; preds = %if.then59, %if.end55
  %63 = load i32, i32* %channel.addr, align 4, !dbg !5633
  %and68 = and i32 %63, 2, !dbg !5635
  %cmp69 = icmp ne i32 %and68, 0, !dbg !5636
  br i1 %cmp69, label %if.then71, label %if.end79, !dbg !5637

if.then71:                                        ; preds = %if.end67
  %64 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5638
  %green72 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %64, i32 0, i32 6, !dbg !5639
  %65 = load float, float* %green72, align 4, !dbg !5639
  %conv73 = fpext float %65 to double, !dbg !5638
  %66 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5640
  %green74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %66, i32 0, i32 6, !dbg !5641
  %67 = load float, float* %green74, align 4, !dbg !5641
  %conv75 = fpext float %67 to double, !dbg !5640
  %call76 = call double @MagickMax(double %conv73, double %conv75), !dbg !5642
  %conv77 = fptrunc double %call76 to float, !dbg !5642
  %68 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5643
  %green78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %68, i32 0, i32 6, !dbg !5644
  store float %conv77, float* %green78, align 4, !dbg !5645
  br label %if.end79, !dbg !5643

if.end79:                                         ; preds = %if.then71, %if.end67
  %69 = load i32, i32* %channel.addr, align 4, !dbg !5646
  %and80 = and i32 %69, 4, !dbg !5648
  %cmp81 = icmp ne i32 %and80, 0, !dbg !5649
  br i1 %cmp81, label %if.then83, label %if.end91, !dbg !5650

if.then83:                                        ; preds = %if.end79
  %70 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5651
  %blue84 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %70, i32 0, i32 7, !dbg !5652
  %71 = load float, float* %blue84, align 8, !dbg !5652
  %conv85 = fpext float %71 to double, !dbg !5651
  %72 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5653
  %blue86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %72, i32 0, i32 7, !dbg !5654
  %73 = load float, float* %blue86, align 8, !dbg !5654
  %conv87 = fpext float %73 to double, !dbg !5653
  %call88 = call double @MagickMax(double %conv85, double %conv87), !dbg !5655
  %conv89 = fptrunc double %call88 to float, !dbg !5655
  %74 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5656
  %blue90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %74, i32 0, i32 7, !dbg !5657
  store float %conv89, float* %blue90, align 8, !dbg !5658
  br label %if.end91, !dbg !5656

if.end91:                                         ; preds = %if.then83, %if.end79
  %75 = load i32, i32* %channel.addr, align 4, !dbg !5659
  %and92 = and i32 %75, 32, !dbg !5661
  %cmp93 = icmp ne i32 %and92, 0, !dbg !5662
  br i1 %cmp93, label %land.lhs.true, label %if.end106, !dbg !5663

land.lhs.true:                                    ; preds = %if.end91
  %76 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5664
  %colorspace95 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %76, i32 0, i32 1, !dbg !5665
  %77 = load i32, i32* %colorspace95, align 4, !dbg !5665
  %cmp96 = icmp eq i32 %77, 12, !dbg !5666
  br i1 %cmp96, label %if.then98, label %if.end106, !dbg !5667

if.then98:                                        ; preds = %land.lhs.true
  %78 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5668
  %index99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %78, i32 0, i32 9, !dbg !5669
  %79 = load float, float* %index99, align 8, !dbg !5669
  %conv100 = fpext float %79 to double, !dbg !5668
  %80 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5670
  %index101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %80, i32 0, i32 9, !dbg !5671
  %81 = load float, float* %index101, align 8, !dbg !5671
  %conv102 = fpext float %81 to double, !dbg !5670
  %call103 = call double @MagickMax(double %conv100, double %conv102), !dbg !5672
  %conv104 = fptrunc double %call103 to float, !dbg !5672
  %82 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5673
  %index105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %82, i32 0, i32 9, !dbg !5674
  store float %conv104, float* %index105, align 8, !dbg !5675
  br label %if.end106, !dbg !5673

if.end106:                                        ; preds = %if.then98, %land.lhs.true, %if.end91
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end
  ret void, !dbg !5676
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeDarkenIntensity(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !5677 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  %from_p = alloca i32, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5682, metadata !DIExpression()), !dbg !5683
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5684, metadata !DIExpression()), !dbg !5685
  %0 = load i32, i32* %channel.addr, align 4, !dbg !5686
  %and = and i32 %0, 256, !dbg !5688
  %cmp = icmp ne i32 %and, 0, !dbg !5689
  br i1 %cmp, label %if.then, label %if.else, !dbg !5690

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %Da, metadata !5691, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !5694, metadata !DIExpression()), !dbg !5695
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5696
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !5697
  %2 = load float, float* %opacity, align 4, !dbg !5697
  %conv = fpext float %2 to double, !dbg !5696
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5698
  %sub = fsub double 1.000000e+00, %mul, !dbg !5699
  %conv1 = fptrunc double %sub to float, !dbg !5700
  store float %conv1, float* %Sa, align 4, !dbg !5701
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5702
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !5703
  %4 = load float, float* %opacity2, align 4, !dbg !5703
  %conv3 = fpext float %4 to double, !dbg !5702
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !5704
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !5705
  %conv6 = fptrunc double %sub5 to float, !dbg !5706
  store float %conv6, float* %Da, align 4, !dbg !5707
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5708
  %6 = load float, float* %Sa, align 4, !dbg !5709
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5710
  %call = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %7), !dbg !5711
  %mul7 = fmul float %6, %call, !dbg !5712
  %8 = load float, float* %Da, align 4, !dbg !5713
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5714
  %call8 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %9), !dbg !5715
  %mul9 = fmul float %8, %call8, !dbg !5716
  %cmp10 = fcmp olt float %mul7, %mul9, !dbg !5717
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !5718

cond.true:                                        ; preds = %if.then
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5719
  %11 = bitcast %struct._MagickPixelPacket* %5 to i8*, !dbg !5720
  %12 = bitcast %struct._MagickPixelPacket* %10 to i8*, !dbg !5720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 56, i1 false), !dbg !5720
  br label %cond.end, !dbg !5718

cond.false:                                       ; preds = %if.then
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5721
  %14 = bitcast %struct._MagickPixelPacket* %5 to i8*, !dbg !5722
  %15 = bitcast %struct._MagickPixelPacket* %13 to i8*, !dbg !5722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 56, i1 false), !dbg !5722
  br label %cond.end, !dbg !5718

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %if.end76, !dbg !5723

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %from_p, metadata !5724, metadata !DIExpression()), !dbg !5726
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5727
  %call12 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %16), !dbg !5728
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5729
  %call13 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %17), !dbg !5730
  %cmp14 = fcmp olt float %call12, %call13, !dbg !5731
  %conv15 = zext i1 %cmp14 to i32, !dbg !5731
  store i32 %conv15, i32* %from_p, align 4, !dbg !5726
  %18 = load i32, i32* %channel.addr, align 4, !dbg !5732
  %and16 = and i32 %18, 8, !dbg !5734
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5735
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !5736

if.then19:                                        ; preds = %if.else
  %19 = load i32, i32* %from_p, align 4, !dbg !5737
  %tobool = icmp ne i32 %19, 0, !dbg !5737
  br i1 %tobool, label %cond.true20, label %cond.false22, !dbg !5737

cond.true20:                                      ; preds = %if.then19
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5738
  %opacity21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 8, !dbg !5739
  %21 = load float, float* %opacity21, align 4, !dbg !5739
  br label %cond.end24, !dbg !5737

cond.false22:                                     ; preds = %if.then19
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5740
  %opacity23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 8, !dbg !5741
  %23 = load float, float* %opacity23, align 4, !dbg !5741
  br label %cond.end24, !dbg !5737

cond.end24:                                       ; preds = %cond.false22, %cond.true20
  %cond = phi float [ %21, %cond.true20 ], [ %23, %cond.false22 ], !dbg !5737
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5742
  %opacity25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 8, !dbg !5743
  store float %cond, float* %opacity25, align 4, !dbg !5744
  br label %if.end, !dbg !5742

if.end:                                           ; preds = %cond.end24, %if.else
  %25 = load i32, i32* %channel.addr, align 4, !dbg !5745
  %and26 = and i32 %25, 1, !dbg !5747
  %cmp27 = icmp ne i32 %and26, 0, !dbg !5748
  br i1 %cmp27, label %if.then29, label %if.end37, !dbg !5749

if.then29:                                        ; preds = %if.end
  %26 = load i32, i32* %from_p, align 4, !dbg !5750
  %tobool30 = icmp ne i32 %26, 0, !dbg !5750
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5750

cond.true31:                                      ; preds = %if.then29
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5751
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 5, !dbg !5752
  %28 = load float, float* %red, align 8, !dbg !5752
  br label %cond.end34, !dbg !5750

cond.false32:                                     ; preds = %if.then29
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5753
  %red33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 5, !dbg !5754
  %30 = load float, float* %red33, align 8, !dbg !5754
  br label %cond.end34, !dbg !5750

cond.end34:                                       ; preds = %cond.false32, %cond.true31
  %cond35 = phi float [ %28, %cond.true31 ], [ %30, %cond.false32 ], !dbg !5750
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5755
  %red36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 5, !dbg !5756
  store float %cond35, float* %red36, align 8, !dbg !5757
  br label %if.end37, !dbg !5755

if.end37:                                         ; preds = %cond.end34, %if.end
  %32 = load i32, i32* %channel.addr, align 4, !dbg !5758
  %and38 = and i32 %32, 2, !dbg !5760
  %cmp39 = icmp ne i32 %and38, 0, !dbg !5761
  br i1 %cmp39, label %if.then41, label %if.end49, !dbg !5762

if.then41:                                        ; preds = %if.end37
  %33 = load i32, i32* %from_p, align 4, !dbg !5763
  %tobool42 = icmp ne i32 %33, 0, !dbg !5763
  br i1 %tobool42, label %cond.true43, label %cond.false44, !dbg !5763

cond.true43:                                      ; preds = %if.then41
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5764
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 6, !dbg !5765
  %35 = load float, float* %green, align 4, !dbg !5765
  br label %cond.end46, !dbg !5763

cond.false44:                                     ; preds = %if.then41
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5766
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 6, !dbg !5767
  %37 = load float, float* %green45, align 4, !dbg !5767
  br label %cond.end46, !dbg !5763

cond.end46:                                       ; preds = %cond.false44, %cond.true43
  %cond47 = phi float [ %35, %cond.true43 ], [ %37, %cond.false44 ], !dbg !5763
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5768
  %green48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 6, !dbg !5769
  store float %cond47, float* %green48, align 4, !dbg !5770
  br label %if.end49, !dbg !5768

if.end49:                                         ; preds = %cond.end46, %if.end37
  %39 = load i32, i32* %channel.addr, align 4, !dbg !5771
  %and50 = and i32 %39, 4, !dbg !5773
  %cmp51 = icmp ne i32 %and50, 0, !dbg !5774
  br i1 %cmp51, label %if.then53, label %if.end61, !dbg !5775

if.then53:                                        ; preds = %if.end49
  %40 = load i32, i32* %from_p, align 4, !dbg !5776
  %tobool54 = icmp ne i32 %40, 0, !dbg !5776
  br i1 %tobool54, label %cond.true55, label %cond.false56, !dbg !5776

cond.true55:                                      ; preds = %if.then53
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5777
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 7, !dbg !5778
  %42 = load float, float* %blue, align 8, !dbg !5778
  br label %cond.end58, !dbg !5776

cond.false56:                                     ; preds = %if.then53
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5779
  %blue57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 7, !dbg !5780
  %44 = load float, float* %blue57, align 8, !dbg !5780
  br label %cond.end58, !dbg !5776

cond.end58:                                       ; preds = %cond.false56, %cond.true55
  %cond59 = phi float [ %42, %cond.true55 ], [ %44, %cond.false56 ], !dbg !5776
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5781
  %blue60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 7, !dbg !5782
  store float %cond59, float* %blue60, align 8, !dbg !5783
  br label %if.end61, !dbg !5781

if.end61:                                         ; preds = %cond.end58, %if.end49
  %46 = load i32, i32* %channel.addr, align 4, !dbg !5784
  %and62 = and i32 %46, 32, !dbg !5786
  %cmp63 = icmp ne i32 %and62, 0, !dbg !5787
  br i1 %cmp63, label %land.lhs.true, label %if.end75, !dbg !5788

land.lhs.true:                                    ; preds = %if.end61
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5789
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 1, !dbg !5790
  %48 = load i32, i32* %colorspace, align 4, !dbg !5790
  %cmp65 = icmp eq i32 %48, 12, !dbg !5791
  br i1 %cmp65, label %if.then67, label %if.end75, !dbg !5792

if.then67:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* %from_p, align 4, !dbg !5793
  %tobool68 = icmp ne i32 %49, 0, !dbg !5793
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !5793

cond.true69:                                      ; preds = %if.then67
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5794
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !5795
  %51 = load float, float* %index, align 8, !dbg !5795
  br label %cond.end72, !dbg !5793

cond.false70:                                     ; preds = %if.then67
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5796
  %index71 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 9, !dbg !5797
  %53 = load float, float* %index71, align 8, !dbg !5797
  br label %cond.end72, !dbg !5793

cond.end72:                                       ; preds = %cond.false70, %cond.true69
  %cond73 = phi float [ %51, %cond.true69 ], [ %53, %cond.false70 ], !dbg !5793
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5798
  %index74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !5799
  store float %cond73, float* %index74, align 8, !dbg !5800
  br label %if.end75, !dbg !5798

if.end75:                                         ; preds = %cond.end72, %land.lhs.true, %if.end61
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %cond.end
  ret void, !dbg !5801
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeLightenIntensity(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._MagickPixelPacket* %composite) #0 !dbg !5802 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  %from_p = alloca i32, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5803, metadata !DIExpression()), !dbg !5804
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5805, metadata !DIExpression()), !dbg !5806
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5807, metadata !DIExpression()), !dbg !5808
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  %0 = load i32, i32* %channel.addr, align 4, !dbg !5811
  %and = and i32 %0, 256, !dbg !5813
  %cmp = icmp ne i32 %and, 0, !dbg !5814
  br i1 %cmp, label %if.then, label %if.else, !dbg !5815

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %Da, metadata !5816, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !5819, metadata !DIExpression()), !dbg !5820
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5821
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 8, !dbg !5822
  %2 = load float, float* %opacity, align 4, !dbg !5822
  %conv = fpext float %2 to double, !dbg !5821
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5823
  %sub = fsub double 1.000000e+00, %mul, !dbg !5824
  %conv1 = fptrunc double %sub to float, !dbg !5825
  store float %conv1, float* %Sa, align 4, !dbg !5826
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5827
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 8, !dbg !5828
  %4 = load float, float* %opacity2, align 4, !dbg !5828
  %conv3 = fpext float %4 to double, !dbg !5827
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !5829
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !5830
  %conv6 = fptrunc double %sub5 to float, !dbg !5831
  store float %conv6, float* %Da, align 4, !dbg !5832
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5833
  %6 = load float, float* %Sa, align 4, !dbg !5834
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5835
  %call = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %7), !dbg !5836
  %mul7 = fmul float %6, %call, !dbg !5837
  %8 = load float, float* %Da, align 4, !dbg !5838
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5839
  %call8 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %9), !dbg !5840
  %mul9 = fmul float %8, %call8, !dbg !5841
  %cmp10 = fcmp ogt float %mul7, %mul9, !dbg !5842
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !5843

cond.true:                                        ; preds = %if.then
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5844
  %11 = bitcast %struct._MagickPixelPacket* %5 to i8*, !dbg !5845
  %12 = bitcast %struct._MagickPixelPacket* %10 to i8*, !dbg !5845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 56, i1 false), !dbg !5845
  br label %cond.end, !dbg !5843

cond.false:                                       ; preds = %if.then
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5846
  %14 = bitcast %struct._MagickPixelPacket* %5 to i8*, !dbg !5847
  %15 = bitcast %struct._MagickPixelPacket* %13 to i8*, !dbg !5847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 56, i1 false), !dbg !5847
  br label %cond.end, !dbg !5843

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %if.end76, !dbg !5848

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %from_p, metadata !5849, metadata !DIExpression()), !dbg !5851
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5852
  %call12 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %16), !dbg !5853
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5854
  %call13 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %17), !dbg !5855
  %cmp14 = fcmp ogt float %call12, %call13, !dbg !5856
  %conv15 = zext i1 %cmp14 to i32, !dbg !5856
  store i32 %conv15, i32* %from_p, align 4, !dbg !5851
  %18 = load i32, i32* %channel.addr, align 4, !dbg !5857
  %and16 = and i32 %18, 8, !dbg !5859
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5860
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !5861

if.then19:                                        ; preds = %if.else
  %19 = load i32, i32* %from_p, align 4, !dbg !5862
  %tobool = icmp ne i32 %19, 0, !dbg !5862
  br i1 %tobool, label %cond.true20, label %cond.false22, !dbg !5862

cond.true20:                                      ; preds = %if.then19
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5863
  %opacity21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 8, !dbg !5864
  %21 = load float, float* %opacity21, align 4, !dbg !5864
  br label %cond.end24, !dbg !5862

cond.false22:                                     ; preds = %if.then19
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5865
  %opacity23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 8, !dbg !5866
  %23 = load float, float* %opacity23, align 4, !dbg !5866
  br label %cond.end24, !dbg !5862

cond.end24:                                       ; preds = %cond.false22, %cond.true20
  %cond = phi float [ %21, %cond.true20 ], [ %23, %cond.false22 ], !dbg !5862
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5867
  %opacity25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 8, !dbg !5868
  store float %cond, float* %opacity25, align 4, !dbg !5869
  br label %if.end, !dbg !5867

if.end:                                           ; preds = %cond.end24, %if.else
  %25 = load i32, i32* %channel.addr, align 4, !dbg !5870
  %and26 = and i32 %25, 1, !dbg !5872
  %cmp27 = icmp ne i32 %and26, 0, !dbg !5873
  br i1 %cmp27, label %if.then29, label %if.end37, !dbg !5874

if.then29:                                        ; preds = %if.end
  %26 = load i32, i32* %from_p, align 4, !dbg !5875
  %tobool30 = icmp ne i32 %26, 0, !dbg !5875
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5875

cond.true31:                                      ; preds = %if.then29
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5876
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 5, !dbg !5877
  %28 = load float, float* %red, align 8, !dbg !5877
  br label %cond.end34, !dbg !5875

cond.false32:                                     ; preds = %if.then29
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5878
  %red33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 5, !dbg !5879
  %30 = load float, float* %red33, align 8, !dbg !5879
  br label %cond.end34, !dbg !5875

cond.end34:                                       ; preds = %cond.false32, %cond.true31
  %cond35 = phi float [ %28, %cond.true31 ], [ %30, %cond.false32 ], !dbg !5875
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5880
  %red36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 5, !dbg !5881
  store float %cond35, float* %red36, align 8, !dbg !5882
  br label %if.end37, !dbg !5880

if.end37:                                         ; preds = %cond.end34, %if.end
  %32 = load i32, i32* %channel.addr, align 4, !dbg !5883
  %and38 = and i32 %32, 2, !dbg !5885
  %cmp39 = icmp ne i32 %and38, 0, !dbg !5886
  br i1 %cmp39, label %if.then41, label %if.end49, !dbg !5887

if.then41:                                        ; preds = %if.end37
  %33 = load i32, i32* %from_p, align 4, !dbg !5888
  %tobool42 = icmp ne i32 %33, 0, !dbg !5888
  br i1 %tobool42, label %cond.true43, label %cond.false44, !dbg !5888

cond.true43:                                      ; preds = %if.then41
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5889
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 6, !dbg !5890
  %35 = load float, float* %green, align 4, !dbg !5890
  br label %cond.end46, !dbg !5888

cond.false44:                                     ; preds = %if.then41
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5891
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 6, !dbg !5892
  %37 = load float, float* %green45, align 4, !dbg !5892
  br label %cond.end46, !dbg !5888

cond.end46:                                       ; preds = %cond.false44, %cond.true43
  %cond47 = phi float [ %35, %cond.true43 ], [ %37, %cond.false44 ], !dbg !5888
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5893
  %green48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 6, !dbg !5894
  store float %cond47, float* %green48, align 4, !dbg !5895
  br label %if.end49, !dbg !5893

if.end49:                                         ; preds = %cond.end46, %if.end37
  %39 = load i32, i32* %channel.addr, align 4, !dbg !5896
  %and50 = and i32 %39, 4, !dbg !5898
  %cmp51 = icmp ne i32 %and50, 0, !dbg !5899
  br i1 %cmp51, label %if.then53, label %if.end61, !dbg !5900

if.then53:                                        ; preds = %if.end49
  %40 = load i32, i32* %from_p, align 4, !dbg !5901
  %tobool54 = icmp ne i32 %40, 0, !dbg !5901
  br i1 %tobool54, label %cond.true55, label %cond.false56, !dbg !5901

cond.true55:                                      ; preds = %if.then53
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5902
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 7, !dbg !5903
  %42 = load float, float* %blue, align 8, !dbg !5903
  br label %cond.end58, !dbg !5901

cond.false56:                                     ; preds = %if.then53
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5904
  %blue57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 7, !dbg !5905
  %44 = load float, float* %blue57, align 8, !dbg !5905
  br label %cond.end58, !dbg !5901

cond.end58:                                       ; preds = %cond.false56, %cond.true55
  %cond59 = phi float [ %42, %cond.true55 ], [ %44, %cond.false56 ], !dbg !5901
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5906
  %blue60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 7, !dbg !5907
  store float %cond59, float* %blue60, align 8, !dbg !5908
  br label %if.end61, !dbg !5906

if.end61:                                         ; preds = %cond.end58, %if.end49
  %46 = load i32, i32* %channel.addr, align 4, !dbg !5909
  %and62 = and i32 %46, 32, !dbg !5911
  %cmp63 = icmp ne i32 %and62, 0, !dbg !5912
  br i1 %cmp63, label %land.lhs.true, label %if.end75, !dbg !5913

land.lhs.true:                                    ; preds = %if.end61
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5914
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 1, !dbg !5915
  %48 = load i32, i32* %colorspace, align 4, !dbg !5915
  %cmp65 = icmp eq i32 %48, 12, !dbg !5916
  br i1 %cmp65, label %if.then67, label %if.end75, !dbg !5917

if.then67:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* %from_p, align 4, !dbg !5918
  %tobool68 = icmp ne i32 %49, 0, !dbg !5918
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !5918

cond.true69:                                      ; preds = %if.then67
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5919
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !5920
  %51 = load float, float* %index, align 8, !dbg !5920
  br label %cond.end72, !dbg !5918

cond.false70:                                     ; preds = %if.then67
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5921
  %index71 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 9, !dbg !5922
  %53 = load float, float* %index71, align 8, !dbg !5922
  br label %cond.end72, !dbg !5918

cond.end72:                                       ; preds = %cond.false70, %cond.true69
  %cond73 = phi float [ %51, %cond.true69 ], [ %53, %cond.false70 ], !dbg !5918
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5923
  %index74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !5924
  store float %cond73, float* %index74, align 8, !dbg !5925
  br label %if.end75, !dbg !5923

if.end75:                                         ; preds = %cond.end72, %land.lhs.true, %if.end61
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %cond.end
  ret void, !dbg !5926
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeMathematics(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, i32 %channel, %struct._GeometryInfo* %args, %struct._MagickPixelPacket* %composite) #0 !dbg !5927 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %channel.addr = alloca i32, align 4
  %args.addr = alloca %struct._GeometryInfo*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  store %struct._GeometryInfo* %args, %struct._GeometryInfo** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo** %args.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata float* %Da, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !5946, metadata !DIExpression()), !dbg !5947
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5948
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !5949
  %1 = load float, float* %opacity, align 4, !dbg !5949
  %conv = fpext float %1 to double, !dbg !5948
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5950
  %sub = fsub double 1.000000e+00, %mul, !dbg !5951
  %conv1 = fptrunc double %sub to float, !dbg !5952
  store float %conv1, float* %Sa, align 4, !dbg !5953
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5954
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !5955
  %3 = load float, float* %opacity2, align 4, !dbg !5955
  %conv3 = fpext float %3 to double, !dbg !5954
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !5956
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !5957
  %conv6 = fptrunc double %sub5 to float, !dbg !5958
  store float %conv6, float* %Da, align 4, !dbg !5959
  %4 = load i32, i32* %channel.addr, align 4, !dbg !5960
  %and = and i32 %4, 256, !dbg !5962
  %cmp = icmp ne i32 %and, 0, !dbg !5963
  br i1 %cmp, label %if.then, label %if.else, !dbg !5964

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sa, align 4, !dbg !5965
  %6 = load float, float* %Da, align 4, !dbg !5967
  %add = fadd float %5, %6, !dbg !5968
  %7 = load float, float* %Sa, align 4, !dbg !5969
  %8 = load float, float* %Da, align 4, !dbg !5970
  %mul8 = fmul float %7, %8, !dbg !5971
  %sub9 = fsub float %add, %mul8, !dbg !5972
  %call = call float @RoundToUnity(float %sub9), !dbg !5973
  %conv10 = fpext float %call to double, !dbg !5973
  store double %conv10, double* %gamma, align 8, !dbg !5974
  %9 = load double, double* %gamma, align 8, !dbg !5975
  %sub11 = fsub double 1.000000e+00, %9, !dbg !5976
  %mul12 = fmul double 6.553500e+04, %sub11, !dbg !5977
  %conv13 = fptrunc double %mul12 to float, !dbg !5978
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !5979
  %opacity14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 8, !dbg !5980
  store float %conv13, float* %opacity14, align 4, !dbg !5981
  %11 = load double, double* %gamma, align 8, !dbg !5982
  %12 = call double @llvm.fabs.f64(double %11), !dbg !5983
  %cmp15 = fcmp olt double %12, 1.000000e-15, !dbg !5984
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !5983

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5983

cond.false:                                       ; preds = %if.then
  %13 = load double, double* %gamma, align 8, !dbg !5985
  br label %cond.end, !dbg !5983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %13, %cond.false ], !dbg !5983
  %div = fdiv double 6.553500e+04, %cond, !dbg !5986
  store double %div, double* %gamma, align 8, !dbg !5987
  %14 = load double, double* %gamma, align 8, !dbg !5988
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !5989
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !5990
  %16 = load float, float* %red, align 8, !dbg !5990
  %conv17 = fpext float %16 to double, !dbg !5989
  %mul18 = fmul double 0x3EF0001000100010, %conv17, !dbg !5991
  %17 = load float, float* %Sa, align 4, !dbg !5992
  %conv19 = fpext float %17 to double, !dbg !5992
  %mul20 = fmul double %mul18, %conv19, !dbg !5993
  %conv21 = fptrunc double %mul20 to float, !dbg !5994
  %18 = load float, float* %Sa, align 4, !dbg !5995
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !5996
  %red22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 5, !dbg !5997
  %20 = load float, float* %red22, align 8, !dbg !5997
  %conv23 = fpext float %20 to double, !dbg !5996
  %mul24 = fmul double 0x3EF0001000100010, %conv23, !dbg !5998
  %21 = load float, float* %Da, align 4, !dbg !5999
  %conv25 = fpext float %21 to double, !dbg !5999
  %mul26 = fmul double %mul24, %conv25, !dbg !6000
  %conv27 = fptrunc double %mul26 to float, !dbg !6001
  %22 = load float, float* %Da, align 4, !dbg !6002
  %23 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6003
  %call28 = call float @Mathematics(float %conv21, float %18, float %conv27, float %22, %struct._GeometryInfo* %23), !dbg !6004
  %conv29 = fpext float %call28 to double, !dbg !6004
  %mul30 = fmul double %14, %conv29, !dbg !6005
  %conv31 = fptrunc double %mul30 to float, !dbg !5988
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6006
  %red32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 5, !dbg !6007
  store float %conv31, float* %red32, align 8, !dbg !6008
  %25 = load double, double* %gamma, align 8, !dbg !6009
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6010
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 6, !dbg !6011
  %27 = load float, float* %green, align 4, !dbg !6011
  %conv33 = fpext float %27 to double, !dbg !6010
  %mul34 = fmul double 0x3EF0001000100010, %conv33, !dbg !6012
  %28 = load float, float* %Sa, align 4, !dbg !6013
  %conv35 = fpext float %28 to double, !dbg !6013
  %mul36 = fmul double %mul34, %conv35, !dbg !6014
  %conv37 = fptrunc double %mul36 to float, !dbg !6015
  %29 = load float, float* %Sa, align 4, !dbg !6016
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6017
  %green38 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 6, !dbg !6018
  %31 = load float, float* %green38, align 4, !dbg !6018
  %conv39 = fpext float %31 to double, !dbg !6017
  %mul40 = fmul double 0x3EF0001000100010, %conv39, !dbg !6019
  %32 = load float, float* %Da, align 4, !dbg !6020
  %conv41 = fpext float %32 to double, !dbg !6020
  %mul42 = fmul double %mul40, %conv41, !dbg !6021
  %conv43 = fptrunc double %mul42 to float, !dbg !6022
  %33 = load float, float* %Da, align 4, !dbg !6023
  %34 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6024
  %call44 = call float @Mathematics(float %conv37, float %29, float %conv43, float %33, %struct._GeometryInfo* %34), !dbg !6025
  %conv45 = fpext float %call44 to double, !dbg !6025
  %mul46 = fmul double %25, %conv45, !dbg !6026
  %conv47 = fptrunc double %mul46 to float, !dbg !6009
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6027
  %green48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 6, !dbg !6028
  store float %conv47, float* %green48, align 4, !dbg !6029
  %36 = load double, double* %gamma, align 8, !dbg !6030
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6031
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 7, !dbg !6032
  %38 = load float, float* %blue, align 8, !dbg !6032
  %conv49 = fpext float %38 to double, !dbg !6031
  %mul50 = fmul double 0x3EF0001000100010, %conv49, !dbg !6033
  %39 = load float, float* %Sa, align 4, !dbg !6034
  %conv51 = fpext float %39 to double, !dbg !6034
  %mul52 = fmul double %mul50, %conv51, !dbg !6035
  %conv53 = fptrunc double %mul52 to float, !dbg !6036
  %40 = load float, float* %Sa, align 4, !dbg !6037
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6038
  %blue54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 7, !dbg !6039
  %42 = load float, float* %blue54, align 8, !dbg !6039
  %conv55 = fpext float %42 to double, !dbg !6038
  %mul56 = fmul double 0x3EF0001000100010, %conv55, !dbg !6040
  %43 = load float, float* %Da, align 4, !dbg !6041
  %conv57 = fpext float %43 to double, !dbg !6041
  %mul58 = fmul double %mul56, %conv57, !dbg !6042
  %conv59 = fptrunc double %mul58 to float, !dbg !6043
  %44 = load float, float* %Da, align 4, !dbg !6044
  %45 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6045
  %call60 = call float @Mathematics(float %conv53, float %40, float %conv59, float %44, %struct._GeometryInfo* %45), !dbg !6046
  %conv61 = fpext float %call60 to double, !dbg !6046
  %mul62 = fmul double %36, %conv61, !dbg !6047
  %conv63 = fptrunc double %mul62 to float, !dbg !6030
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6048
  %blue64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 7, !dbg !6049
  store float %conv63, float* %blue64, align 8, !dbg !6050
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6051
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 1, !dbg !6053
  %48 = load i32, i32* %colorspace, align 4, !dbg !6053
  %cmp65 = icmp eq i32 %48, 12, !dbg !6054
  br i1 %cmp65, label %if.then67, label %if.end, !dbg !6055

if.then67:                                        ; preds = %cond.end
  %49 = load double, double* %gamma, align 8, !dbg !6056
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6057
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6058
  %51 = load float, float* %index, align 8, !dbg !6058
  %conv68 = fpext float %51 to double, !dbg !6057
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6059
  %52 = load float, float* %Sa, align 4, !dbg !6060
  %conv70 = fpext float %52 to double, !dbg !6060
  %mul71 = fmul double %mul69, %conv70, !dbg !6061
  %conv72 = fptrunc double %mul71 to float, !dbg !6062
  %53 = load float, float* %Sa, align 4, !dbg !6063
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6064
  %index73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6065
  %55 = load float, float* %index73, align 8, !dbg !6065
  %conv74 = fpext float %55 to double, !dbg !6064
  %mul75 = fmul double 0x3EF0001000100010, %conv74, !dbg !6066
  %56 = load float, float* %Da, align 4, !dbg !6067
  %conv76 = fpext float %56 to double, !dbg !6067
  %mul77 = fmul double %mul75, %conv76, !dbg !6068
  %conv78 = fptrunc double %mul77 to float, !dbg !6069
  %57 = load float, float* %Da, align 4, !dbg !6070
  %58 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6071
  %call79 = call float @Mathematics(float %conv72, float %53, float %conv78, float %57, %struct._GeometryInfo* %58), !dbg !6072
  %conv80 = fpext float %call79 to double, !dbg !6072
  %mul81 = fmul double %49, %conv80, !dbg !6073
  %conv82 = fptrunc double %mul81 to float, !dbg !6056
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6074
  %index83 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 9, !dbg !6075
  store float %conv82, float* %index83, align 8, !dbg !6076
  br label %if.end, !dbg !6074

if.end:                                           ; preds = %if.then67, %cond.end
  br label %if.end162, !dbg !6077

if.else:                                          ; preds = %entry
  %60 = load i32, i32* %channel.addr, align 4, !dbg !6078
  %and84 = and i32 %60, 8, !dbg !6081
  %cmp85 = icmp ne i32 %and84, 0, !dbg !6082
  br i1 %cmp85, label %if.then87, label %if.end94, !dbg !6083

if.then87:                                        ; preds = %if.else
  %61 = load float, float* %Sa, align 4, !dbg !6084
  %62 = load float, float* %Da, align 4, !dbg !6085
  %63 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6086
  %call88 = call float @Mathematics(float %61, float 1.000000e+00, float %62, float 1.000000e+00, %struct._GeometryInfo* %63), !dbg !6087
  %conv89 = fpext float %call88 to double, !dbg !6087
  %sub90 = fsub double 1.000000e+00, %conv89, !dbg !6088
  %mul91 = fmul double 6.553500e+04, %sub90, !dbg !6089
  %conv92 = fptrunc double %mul91 to float, !dbg !6090
  %64 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6091
  %opacity93 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %64, i32 0, i32 8, !dbg !6092
  store float %conv92, float* %opacity93, align 4, !dbg !6093
  br label %if.end94, !dbg !6091

if.end94:                                         ; preds = %if.then87, %if.else
  %65 = load i32, i32* %channel.addr, align 4, !dbg !6094
  %and95 = and i32 %65, 1, !dbg !6096
  %cmp96 = icmp ne i32 %and95, 0, !dbg !6097
  br i1 %cmp96, label %if.then98, label %if.end110, !dbg !6098

if.then98:                                        ; preds = %if.end94
  %66 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6099
  %red99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %66, i32 0, i32 5, !dbg !6100
  %67 = load float, float* %red99, align 8, !dbg !6100
  %conv100 = fpext float %67 to double, !dbg !6099
  %mul101 = fmul double 0x3EF0001000100010, %conv100, !dbg !6101
  %conv102 = fptrunc double %mul101 to float, !dbg !6102
  %68 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6103
  %red103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %68, i32 0, i32 5, !dbg !6104
  %69 = load float, float* %red103, align 8, !dbg !6104
  %conv104 = fpext float %69 to double, !dbg !6103
  %mul105 = fmul double 0x3EF0001000100010, %conv104, !dbg !6105
  %conv106 = fptrunc double %mul105 to float, !dbg !6106
  %70 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6107
  %call107 = call float @Mathematics(float %conv102, float 1.000000e+00, float %conv106, float 1.000000e+00, %struct._GeometryInfo* %70), !dbg !6108
  %mul108 = fmul float 6.553500e+04, %call107, !dbg !6109
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6110
  %red109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i32 0, i32 5, !dbg !6111
  store float %mul108, float* %red109, align 8, !dbg !6112
  br label %if.end110, !dbg !6110

if.end110:                                        ; preds = %if.then98, %if.end94
  %72 = load i32, i32* %channel.addr, align 4, !dbg !6113
  %and111 = and i32 %72, 2, !dbg !6115
  %cmp112 = icmp ne i32 %and111, 0, !dbg !6116
  br i1 %cmp112, label %if.then114, label %if.end126, !dbg !6117

if.then114:                                       ; preds = %if.end110
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6118
  %green115 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 6, !dbg !6119
  %74 = load float, float* %green115, align 4, !dbg !6119
  %conv116 = fpext float %74 to double, !dbg !6118
  %mul117 = fmul double 0x3EF0001000100010, %conv116, !dbg !6120
  %conv118 = fptrunc double %mul117 to float, !dbg !6121
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6122
  %green119 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 6, !dbg !6123
  %76 = load float, float* %green119, align 4, !dbg !6123
  %conv120 = fpext float %76 to double, !dbg !6122
  %mul121 = fmul double 0x3EF0001000100010, %conv120, !dbg !6124
  %conv122 = fptrunc double %mul121 to float, !dbg !6125
  %77 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6126
  %call123 = call float @Mathematics(float %conv118, float 1.000000e+00, float %conv122, float 1.000000e+00, %struct._GeometryInfo* %77), !dbg !6127
  %mul124 = fmul float 6.553500e+04, %call123, !dbg !6128
  %78 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6129
  %green125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %78, i32 0, i32 6, !dbg !6130
  store float %mul124, float* %green125, align 4, !dbg !6131
  br label %if.end126, !dbg !6129

if.end126:                                        ; preds = %if.then114, %if.end110
  %79 = load i32, i32* %channel.addr, align 4, !dbg !6132
  %and127 = and i32 %79, 4, !dbg !6134
  %cmp128 = icmp ne i32 %and127, 0, !dbg !6135
  br i1 %cmp128, label %if.then130, label %if.end142, !dbg !6136

if.then130:                                       ; preds = %if.end126
  %80 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6137
  %blue131 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %80, i32 0, i32 7, !dbg !6138
  %81 = load float, float* %blue131, align 8, !dbg !6138
  %conv132 = fpext float %81 to double, !dbg !6137
  %mul133 = fmul double 0x3EF0001000100010, %conv132, !dbg !6139
  %conv134 = fptrunc double %mul133 to float, !dbg !6140
  %82 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6141
  %blue135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %82, i32 0, i32 7, !dbg !6142
  %83 = load float, float* %blue135, align 8, !dbg !6142
  %conv136 = fpext float %83 to double, !dbg !6141
  %mul137 = fmul double 0x3EF0001000100010, %conv136, !dbg !6143
  %conv138 = fptrunc double %mul137 to float, !dbg !6144
  %84 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6145
  %call139 = call float @Mathematics(float %conv134, float 1.000000e+00, float %conv138, float 1.000000e+00, %struct._GeometryInfo* %84), !dbg !6146
  %mul140 = fmul float 6.553500e+04, %call139, !dbg !6147
  %85 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6148
  %blue141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %85, i32 0, i32 7, !dbg !6149
  store float %mul140, float* %blue141, align 8, !dbg !6150
  br label %if.end142, !dbg !6148

if.end142:                                        ; preds = %if.then130, %if.end126
  %86 = load i32, i32* %channel.addr, align 4, !dbg !6151
  %and143 = and i32 %86, 32, !dbg !6153
  %cmp144 = icmp ne i32 %and143, 0, !dbg !6154
  br i1 %cmp144, label %land.lhs.true, label %if.end161, !dbg !6155

land.lhs.true:                                    ; preds = %if.end142
  %87 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6156
  %colorspace146 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %87, i32 0, i32 1, !dbg !6157
  %88 = load i32, i32* %colorspace146, align 4, !dbg !6157
  %cmp147 = icmp eq i32 %88, 12, !dbg !6158
  br i1 %cmp147, label %if.then149, label %if.end161, !dbg !6159

if.then149:                                       ; preds = %land.lhs.true
  %89 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6160
  %index150 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %89, i32 0, i32 9, !dbg !6161
  %90 = load float, float* %index150, align 8, !dbg !6161
  %conv151 = fpext float %90 to double, !dbg !6160
  %mul152 = fmul double 0x3EF0001000100010, %conv151, !dbg !6162
  %conv153 = fptrunc double %mul152 to float, !dbg !6163
  %91 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6164
  %index154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %91, i32 0, i32 9, !dbg !6165
  %92 = load float, float* %index154, align 8, !dbg !6165
  %conv155 = fpext float %92 to double, !dbg !6164
  %mul156 = fmul double 0x3EF0001000100010, %conv155, !dbg !6166
  %conv157 = fptrunc double %mul156 to float, !dbg !6167
  %93 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !6168
  %call158 = call float @Mathematics(float %conv153, float 1.000000e+00, float %conv157, float 1.000000e+00, %struct._GeometryInfo* %93), !dbg !6169
  %mul159 = fmul float 6.553500e+04, %call158, !dbg !6170
  %94 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6171
  %index160 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %94, i32 0, i32 9, !dbg !6172
  store float %mul159, float* %index160, align 8, !dbg !6173
  br label %if.end161, !dbg !6171

if.end161:                                        ; preds = %if.then149, %land.lhs.true, %if.end142
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end
  ret void, !dbg !6174
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeColorDodge(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6175 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6182, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6184, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6188
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6189
  %1 = load float, float* %opacity, align 4, !dbg !6189
  %conv = fpext float %1 to double, !dbg !6188
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6190
  %sub = fsub double 1.000000e+00, %mul, !dbg !6191
  %conv1 = fptrunc double %sub to float, !dbg !6192
  store float %conv1, float* %Sa, align 4, !dbg !6193
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6194
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6195
  %3 = load float, float* %opacity2, align 4, !dbg !6195
  %conv3 = fpext float %3 to double, !dbg !6194
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6196
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6197
  %conv6 = fptrunc double %sub5 to float, !dbg !6198
  store float %conv6, float* %Da, align 4, !dbg !6199
  %4 = load float, float* %Sa, align 4, !dbg !6200
  %5 = load float, float* %Da, align 4, !dbg !6201
  %add = fadd float %4, %5, !dbg !6202
  %6 = load float, float* %Sa, align 4, !dbg !6203
  %7 = load float, float* %Da, align 4, !dbg !6204
  %mul7 = fmul float %6, %7, !dbg !6205
  %sub8 = fsub float %add, %mul7, !dbg !6206
  %call = call float @RoundToUnity(float %sub8), !dbg !6207
  store float %call, float* %gamma, align 4, !dbg !6208
  %8 = load float, float* %gamma, align 4, !dbg !6209
  %conv9 = fpext float %8 to double, !dbg !6209
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6210
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6211
  %conv12 = fptrunc double %mul11 to float, !dbg !6212
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6213
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6214
  store float %conv12, float* %opacity13, align 4, !dbg !6215
  %10 = load float, float* %gamma, align 4, !dbg !6216
  %conv14 = fpext float %10 to double, !dbg !6216
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6217
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6218
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6217

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6217

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6219
  %conv16 = fpext float %12 to double, !dbg !6219
  br label %cond.end, !dbg !6217

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6217
  %div = fdiv double 6.553500e+04, %cond, !dbg !6220
  %conv17 = fptrunc double %div to float, !dbg !6221
  store float %conv17, float* %gamma, align 4, !dbg !6222
  %13 = load float, float* %gamma, align 4, !dbg !6223
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6224
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !6225
  %15 = load float, float* %red, align 8, !dbg !6225
  %conv18 = fpext float %15 to double, !dbg !6224
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !6226
  %16 = load float, float* %Sa, align 4, !dbg !6227
  %conv20 = fpext float %16 to double, !dbg !6227
  %mul21 = fmul double %mul19, %conv20, !dbg !6228
  %conv22 = fptrunc double %mul21 to float, !dbg !6229
  %17 = load float, float* %Sa, align 4, !dbg !6230
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6231
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6232
  %19 = load float, float* %red23, align 8, !dbg !6232
  %conv24 = fpext float %19 to double, !dbg !6231
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6233
  %20 = load float, float* %Da, align 4, !dbg !6234
  %conv26 = fpext float %20 to double, !dbg !6234
  %mul27 = fmul double %mul25, %conv26, !dbg !6235
  %conv28 = fptrunc double %mul27 to float, !dbg !6236
  %21 = load float, float* %Da, align 4, !dbg !6237
  %call29 = call float @ColorDodge(float %conv22, float %17, float %conv28, float %21), !dbg !6238
  %mul30 = fmul float %13, %call29, !dbg !6239
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6240
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !6241
  store float %mul30, float* %red31, align 8, !dbg !6242
  %23 = load float, float* %gamma, align 4, !dbg !6243
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6244
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !6245
  %25 = load float, float* %green, align 4, !dbg !6245
  %conv32 = fpext float %25 to double, !dbg !6244
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !6246
  %26 = load float, float* %Sa, align 4, !dbg !6247
  %conv34 = fpext float %26 to double, !dbg !6247
  %mul35 = fmul double %mul33, %conv34, !dbg !6248
  %conv36 = fptrunc double %mul35 to float, !dbg !6249
  %27 = load float, float* %Sa, align 4, !dbg !6250
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6251
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !6252
  %29 = load float, float* %green37, align 4, !dbg !6252
  %conv38 = fpext float %29 to double, !dbg !6251
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !6253
  %30 = load float, float* %Da, align 4, !dbg !6254
  %conv40 = fpext float %30 to double, !dbg !6254
  %mul41 = fmul double %mul39, %conv40, !dbg !6255
  %conv42 = fptrunc double %mul41 to float, !dbg !6256
  %31 = load float, float* %Da, align 4, !dbg !6257
  %call43 = call float @ColorDodge(float %conv36, float %27, float %conv42, float %31), !dbg !6258
  %mul44 = fmul float %23, %call43, !dbg !6259
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6260
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !6261
  store float %mul44, float* %green45, align 4, !dbg !6262
  %33 = load float, float* %gamma, align 4, !dbg !6263
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6264
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6265
  %35 = load float, float* %blue, align 8, !dbg !6265
  %conv46 = fpext float %35 to double, !dbg !6264
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !6266
  %36 = load float, float* %Sa, align 4, !dbg !6267
  %conv48 = fpext float %36 to double, !dbg !6267
  %mul49 = fmul double %mul47, %conv48, !dbg !6268
  %conv50 = fptrunc double %mul49 to float, !dbg !6269
  %37 = load float, float* %Sa, align 4, !dbg !6270
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6271
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !6272
  %39 = load float, float* %blue51, align 8, !dbg !6272
  %conv52 = fpext float %39 to double, !dbg !6271
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !6273
  %40 = load float, float* %Da, align 4, !dbg !6274
  %conv54 = fpext float %40 to double, !dbg !6274
  %mul55 = fmul double %mul53, %conv54, !dbg !6275
  %conv56 = fptrunc double %mul55 to float, !dbg !6276
  %41 = load float, float* %Da, align 4, !dbg !6277
  %call57 = call float @ColorDodge(float %conv50, float %37, float %conv56, float %41), !dbg !6278
  %mul58 = fmul float %33, %call57, !dbg !6279
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6280
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !6281
  store float %mul58, float* %blue59, align 8, !dbg !6282
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6283
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !6285
  %44 = load i32, i32* %colorspace, align 4, !dbg !6285
  %cmp60 = icmp eq i32 %44, 12, !dbg !6286
  br i1 %cmp60, label %if.then, label %if.end, !dbg !6287

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !6288
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6289
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !6290
  %47 = load float, float* %index, align 8, !dbg !6290
  %conv62 = fpext float %47 to double, !dbg !6289
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !6291
  %48 = load float, float* %Sa, align 4, !dbg !6292
  %conv64 = fpext float %48 to double, !dbg !6292
  %mul65 = fmul double %mul63, %conv64, !dbg !6293
  %conv66 = fptrunc double %mul65 to float, !dbg !6294
  %49 = load float, float* %Sa, align 4, !dbg !6295
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6296
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6297
  %51 = load float, float* %index67, align 8, !dbg !6297
  %conv68 = fpext float %51 to double, !dbg !6296
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6298
  %52 = load float, float* %Da, align 4, !dbg !6299
  %conv70 = fpext float %52 to double, !dbg !6299
  %mul71 = fmul double %mul69, %conv70, !dbg !6300
  %conv72 = fptrunc double %mul71 to float, !dbg !6301
  %53 = load float, float* %Da, align 4, !dbg !6302
  %call73 = call float @ColorDodge(float %conv66, float %49, float %conv72, float %53), !dbg !6303
  %mul74 = fmul float %45, %call73, !dbg !6304
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6305
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6306
  store float %mul74, float* %index75, align 8, !dbg !6307
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6308
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeColorBurn(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6309 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6316, metadata !DIExpression()), !dbg !6317
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6318, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6320, metadata !DIExpression()), !dbg !6321
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6322
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6323
  %1 = load float, float* %opacity, align 4, !dbg !6323
  %conv = fpext float %1 to double, !dbg !6322
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6324
  %sub = fsub double 1.000000e+00, %mul, !dbg !6325
  %conv1 = fptrunc double %sub to float, !dbg !6326
  store float %conv1, float* %Sa, align 4, !dbg !6327
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6328
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6329
  %3 = load float, float* %opacity2, align 4, !dbg !6329
  %conv3 = fpext float %3 to double, !dbg !6328
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6330
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6331
  %conv6 = fptrunc double %sub5 to float, !dbg !6332
  store float %conv6, float* %Da, align 4, !dbg !6333
  %4 = load float, float* %Sa, align 4, !dbg !6334
  %5 = load float, float* %Da, align 4, !dbg !6335
  %add = fadd float %4, %5, !dbg !6336
  %6 = load float, float* %Sa, align 4, !dbg !6337
  %7 = load float, float* %Da, align 4, !dbg !6338
  %mul7 = fmul float %6, %7, !dbg !6339
  %sub8 = fsub float %add, %mul7, !dbg !6340
  %call = call float @RoundToUnity(float %sub8), !dbg !6341
  store float %call, float* %gamma, align 4, !dbg !6342
  %8 = load float, float* %gamma, align 4, !dbg !6343
  %conv9 = fpext float %8 to double, !dbg !6343
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6344
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6345
  %conv12 = fptrunc double %mul11 to float, !dbg !6346
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6347
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6348
  store float %conv12, float* %opacity13, align 4, !dbg !6349
  %10 = load float, float* %gamma, align 4, !dbg !6350
  %conv14 = fpext float %10 to double, !dbg !6350
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6351
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6352
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6351

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6351

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6353
  %conv16 = fpext float %12 to double, !dbg !6353
  br label %cond.end, !dbg !6351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6351
  %div = fdiv double 6.553500e+04, %cond, !dbg !6354
  %conv17 = fptrunc double %div to float, !dbg !6355
  store float %conv17, float* %gamma, align 4, !dbg !6356
  %13 = load float, float* %gamma, align 4, !dbg !6357
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6358
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !6359
  %15 = load float, float* %red, align 8, !dbg !6359
  %conv18 = fpext float %15 to double, !dbg !6358
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !6360
  %16 = load float, float* %Sa, align 4, !dbg !6361
  %conv20 = fpext float %16 to double, !dbg !6361
  %mul21 = fmul double %mul19, %conv20, !dbg !6362
  %conv22 = fptrunc double %mul21 to float, !dbg !6363
  %17 = load float, float* %Sa, align 4, !dbg !6364
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6365
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6366
  %19 = load float, float* %red23, align 8, !dbg !6366
  %conv24 = fpext float %19 to double, !dbg !6365
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6367
  %20 = load float, float* %Da, align 4, !dbg !6368
  %conv26 = fpext float %20 to double, !dbg !6368
  %mul27 = fmul double %mul25, %conv26, !dbg !6369
  %conv28 = fptrunc double %mul27 to float, !dbg !6370
  %21 = load float, float* %Da, align 4, !dbg !6371
  %call29 = call float @ColorBurn(float %conv22, float %17, float %conv28, float %21), !dbg !6372
  %mul30 = fmul float %13, %call29, !dbg !6373
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6374
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !6375
  store float %mul30, float* %red31, align 8, !dbg !6376
  %23 = load float, float* %gamma, align 4, !dbg !6377
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6378
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !6379
  %25 = load float, float* %green, align 4, !dbg !6379
  %conv32 = fpext float %25 to double, !dbg !6378
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !6380
  %26 = load float, float* %Sa, align 4, !dbg !6381
  %conv34 = fpext float %26 to double, !dbg !6381
  %mul35 = fmul double %mul33, %conv34, !dbg !6382
  %conv36 = fptrunc double %mul35 to float, !dbg !6383
  %27 = load float, float* %Sa, align 4, !dbg !6384
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6385
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !6386
  %29 = load float, float* %green37, align 4, !dbg !6386
  %conv38 = fpext float %29 to double, !dbg !6385
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !6387
  %30 = load float, float* %Da, align 4, !dbg !6388
  %conv40 = fpext float %30 to double, !dbg !6388
  %mul41 = fmul double %mul39, %conv40, !dbg !6389
  %conv42 = fptrunc double %mul41 to float, !dbg !6390
  %31 = load float, float* %Da, align 4, !dbg !6391
  %call43 = call float @ColorBurn(float %conv36, float %27, float %conv42, float %31), !dbg !6392
  %mul44 = fmul float %23, %call43, !dbg !6393
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6394
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !6395
  store float %mul44, float* %green45, align 4, !dbg !6396
  %33 = load float, float* %gamma, align 4, !dbg !6397
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6398
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6399
  %35 = load float, float* %blue, align 8, !dbg !6399
  %conv46 = fpext float %35 to double, !dbg !6398
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !6400
  %36 = load float, float* %Sa, align 4, !dbg !6401
  %conv48 = fpext float %36 to double, !dbg !6401
  %mul49 = fmul double %mul47, %conv48, !dbg !6402
  %conv50 = fptrunc double %mul49 to float, !dbg !6403
  %37 = load float, float* %Sa, align 4, !dbg !6404
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6405
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !6406
  %39 = load float, float* %blue51, align 8, !dbg !6406
  %conv52 = fpext float %39 to double, !dbg !6405
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !6407
  %40 = load float, float* %Da, align 4, !dbg !6408
  %conv54 = fpext float %40 to double, !dbg !6408
  %mul55 = fmul double %mul53, %conv54, !dbg !6409
  %conv56 = fptrunc double %mul55 to float, !dbg !6410
  %41 = load float, float* %Da, align 4, !dbg !6411
  %call57 = call float @ColorBurn(float %conv50, float %37, float %conv56, float %41), !dbg !6412
  %mul58 = fmul float %33, %call57, !dbg !6413
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6414
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !6415
  store float %mul58, float* %blue59, align 8, !dbg !6416
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6417
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !6419
  %44 = load i32, i32* %colorspace, align 4, !dbg !6419
  %cmp60 = icmp eq i32 %44, 12, !dbg !6420
  br i1 %cmp60, label %if.then, label %if.end, !dbg !6421

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !6422
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6423
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !6424
  %47 = load float, float* %index, align 8, !dbg !6424
  %conv62 = fpext float %47 to double, !dbg !6423
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !6425
  %48 = load float, float* %Sa, align 4, !dbg !6426
  %conv64 = fpext float %48 to double, !dbg !6426
  %mul65 = fmul double %mul63, %conv64, !dbg !6427
  %conv66 = fptrunc double %mul65 to float, !dbg !6428
  %49 = load float, float* %Sa, align 4, !dbg !6429
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6430
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6431
  %51 = load float, float* %index67, align 8, !dbg !6431
  %conv68 = fpext float %51 to double, !dbg !6430
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6432
  %52 = load float, float* %Da, align 4, !dbg !6433
  %conv70 = fpext float %52 to double, !dbg !6433
  %mul71 = fmul double %mul69, %conv70, !dbg !6434
  %conv72 = fptrunc double %mul71 to float, !dbg !6435
  %53 = load float, float* %Da, align 4, !dbg !6436
  %call73 = call float @ColorBurn(float %conv66, float %49, float %conv72, float %53), !dbg !6437
  %mul74 = fmul float %45, %call73, !dbg !6438
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6439
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6440
  store float %mul74, float* %index75, align 8, !dbg !6441
  br label %if.end, !dbg !6439

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6442
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeLinearDodge(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6443 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6452, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6454, metadata !DIExpression()), !dbg !6455
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6456
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6457
  %1 = load float, float* %opacity, align 4, !dbg !6457
  %conv = fpext float %1 to double, !dbg !6456
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6458
  %sub = fsub double 1.000000e+00, %mul, !dbg !6459
  %conv1 = fptrunc double %sub to float, !dbg !6460
  store float %conv1, float* %Sa, align 4, !dbg !6461
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6462
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6463
  %3 = load float, float* %opacity2, align 4, !dbg !6463
  %conv3 = fpext float %3 to double, !dbg !6462
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6464
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6465
  %conv6 = fptrunc double %sub5 to float, !dbg !6466
  store float %conv6, float* %Da, align 4, !dbg !6467
  %4 = load float, float* %Sa, align 4, !dbg !6468
  %5 = load float, float* %Da, align 4, !dbg !6469
  %add = fadd float %4, %5, !dbg !6470
  %6 = load float, float* %Sa, align 4, !dbg !6471
  %7 = load float, float* %Da, align 4, !dbg !6472
  %mul7 = fmul float %6, %7, !dbg !6473
  %sub8 = fsub float %add, %mul7, !dbg !6474
  %call = call float @RoundToUnity(float %sub8), !dbg !6475
  %conv9 = fpext float %call to double, !dbg !6475
  store double %conv9, double* %gamma, align 8, !dbg !6476
  %8 = load double, double* %gamma, align 8, !dbg !6477
  %sub10 = fsub double 1.000000e+00, %8, !dbg !6478
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6479
  %conv12 = fptrunc double %mul11 to float, !dbg !6480
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6481
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6482
  store float %conv12, float* %opacity13, align 4, !dbg !6483
  %10 = load double, double* %gamma, align 8, !dbg !6484
  %call14 = call double @PerceptibleReciprocal(double %10), !dbg !6485
  store double %call14, double* %gamma, align 8, !dbg !6486
  %11 = load double, double* %gamma, align 8, !dbg !6487
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6488
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !6489
  %13 = load float, float* %red, align 8, !dbg !6489
  %14 = load float, float* %Sa, align 4, !dbg !6490
  %mul15 = fmul float %13, %14, !dbg !6491
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6492
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !6493
  %16 = load float, float* %red16, align 8, !dbg !6493
  %17 = load float, float* %Da, align 4, !dbg !6494
  %mul17 = fmul float %16, %17, !dbg !6495
  %add18 = fadd float %mul15, %mul17, !dbg !6496
  %conv19 = fpext float %add18 to double, !dbg !6497
  %mul20 = fmul double %11, %conv19, !dbg !6498
  %conv21 = fptrunc double %mul20 to float, !dbg !6487
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6499
  %red22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6500
  store float %conv21, float* %red22, align 8, !dbg !6501
  %19 = load double, double* %gamma, align 8, !dbg !6502
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6503
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !6504
  %21 = load float, float* %green, align 4, !dbg !6504
  %22 = load float, float* %Sa, align 4, !dbg !6505
  %mul23 = fmul float %21, %22, !dbg !6506
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6507
  %green24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !6508
  %24 = load float, float* %green24, align 4, !dbg !6508
  %25 = load float, float* %Da, align 4, !dbg !6509
  %mul25 = fmul float %24, %25, !dbg !6510
  %add26 = fadd float %mul23, %mul25, !dbg !6511
  %conv27 = fpext float %add26 to double, !dbg !6512
  %mul28 = fmul double %19, %conv27, !dbg !6513
  %conv29 = fptrunc double %mul28 to float, !dbg !6502
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6514
  %green30 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 6, !dbg !6515
  store float %conv29, float* %green30, align 4, !dbg !6516
  %27 = load double, double* %gamma, align 8, !dbg !6517
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6518
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !6519
  %29 = load float, float* %blue, align 8, !dbg !6519
  %30 = load float, float* %Sa, align 4, !dbg !6520
  %mul31 = fmul float %29, %30, !dbg !6521
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6522
  %blue32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 7, !dbg !6523
  %32 = load float, float* %blue32, align 8, !dbg !6523
  %33 = load float, float* %Da, align 4, !dbg !6524
  %mul33 = fmul float %32, %33, !dbg !6525
  %add34 = fadd float %mul31, %mul33, !dbg !6526
  %conv35 = fpext float %add34 to double, !dbg !6527
  %mul36 = fmul double %27, %conv35, !dbg !6528
  %conv37 = fptrunc double %mul36 to float, !dbg !6517
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6529
  %blue38 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6530
  store float %conv37, float* %blue38, align 8, !dbg !6531
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6532
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 1, !dbg !6534
  %36 = load i32, i32* %colorspace, align 4, !dbg !6534
  %cmp = icmp eq i32 %36, 12, !dbg !6535
  br i1 %cmp, label %if.then, label %if.end, !dbg !6536

if.then:                                          ; preds = %entry
  %37 = load double, double* %gamma, align 8, !dbg !6537
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6538
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !6539
  %39 = load float, float* %index, align 8, !dbg !6539
  %40 = load float, float* %Sa, align 4, !dbg !6540
  %mul40 = fmul float %39, %40, !dbg !6541
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6542
  %index41 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 9, !dbg !6543
  %42 = load float, float* %index41, align 8, !dbg !6543
  %43 = load float, float* %Da, align 4, !dbg !6544
  %mul42 = fmul float %42, %43, !dbg !6545
  %add43 = fadd float %mul40, %mul42, !dbg !6546
  %conv44 = fpext float %add43 to double, !dbg !6547
  %mul45 = fmul double %37, %conv44, !dbg !6548
  %conv46 = fptrunc double %mul45 to float, !dbg !6537
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6549
  %index47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 9, !dbg !6550
  store float %conv46, float* %index47, align 8, !dbg !6551
  br label %if.end, !dbg !6549

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6552
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeLinearBurn(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6553 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6556, metadata !DIExpression()), !dbg !6557
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6566
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6567
  %1 = load float, float* %opacity, align 4, !dbg !6567
  %conv = fpext float %1 to double, !dbg !6566
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6568
  %sub = fsub double 1.000000e+00, %mul, !dbg !6569
  %conv1 = fptrunc double %sub to float, !dbg !6570
  store float %conv1, float* %Sa, align 4, !dbg !6571
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6572
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6573
  %3 = load float, float* %opacity2, align 4, !dbg !6573
  %conv3 = fpext float %3 to double, !dbg !6572
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6574
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6575
  %conv6 = fptrunc double %sub5 to float, !dbg !6576
  store float %conv6, float* %Da, align 4, !dbg !6577
  %4 = load float, float* %Sa, align 4, !dbg !6578
  %5 = load float, float* %Da, align 4, !dbg !6579
  %add = fadd float %4, %5, !dbg !6580
  %6 = load float, float* %Sa, align 4, !dbg !6581
  %7 = load float, float* %Da, align 4, !dbg !6582
  %mul7 = fmul float %6, %7, !dbg !6583
  %sub8 = fsub float %add, %mul7, !dbg !6584
  %call = call float @RoundToUnity(float %sub8), !dbg !6585
  store float %call, float* %gamma, align 4, !dbg !6586
  %8 = load float, float* %gamma, align 4, !dbg !6587
  %conv9 = fpext float %8 to double, !dbg !6587
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6588
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6589
  %conv12 = fptrunc double %mul11 to float, !dbg !6590
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6591
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6592
  store float %conv12, float* %opacity13, align 4, !dbg !6593
  %10 = load float, float* %gamma, align 4, !dbg !6594
  %conv14 = fpext float %10 to double, !dbg !6594
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6595
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6596
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6595

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6595

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6597
  %conv16 = fpext float %12 to double, !dbg !6597
  br label %cond.end, !dbg !6595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6595
  %div = fdiv double 6.553500e+04, %cond, !dbg !6598
  %conv17 = fptrunc double %div to float, !dbg !6599
  store float %conv17, float* %gamma, align 4, !dbg !6600
  %13 = load float, float* %gamma, align 4, !dbg !6601
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6602
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !6603
  %15 = load float, float* %red, align 8, !dbg !6603
  %conv18 = fpext float %15 to double, !dbg !6602
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !6604
  %16 = load float, float* %Sa, align 4, !dbg !6605
  %conv20 = fpext float %16 to double, !dbg !6605
  %mul21 = fmul double %mul19, %conv20, !dbg !6606
  %conv22 = fptrunc double %mul21 to float, !dbg !6607
  %17 = load float, float* %Sa, align 4, !dbg !6608
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6609
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6610
  %19 = load float, float* %red23, align 8, !dbg !6610
  %conv24 = fpext float %19 to double, !dbg !6609
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6611
  %20 = load float, float* %Da, align 4, !dbg !6612
  %conv26 = fpext float %20 to double, !dbg !6612
  %mul27 = fmul double %mul25, %conv26, !dbg !6613
  %conv28 = fptrunc double %mul27 to float, !dbg !6614
  %21 = load float, float* %Da, align 4, !dbg !6615
  %call29 = call float @LinearBurn(float %conv22, float %17, float %conv28, float %21), !dbg !6616
  %mul30 = fmul float %13, %call29, !dbg !6617
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6618
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !6619
  store float %mul30, float* %red31, align 8, !dbg !6620
  %23 = load float, float* %gamma, align 4, !dbg !6621
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6622
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !6623
  %25 = load float, float* %green, align 4, !dbg !6623
  %conv32 = fpext float %25 to double, !dbg !6622
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !6624
  %26 = load float, float* %Sa, align 4, !dbg !6625
  %conv34 = fpext float %26 to double, !dbg !6625
  %mul35 = fmul double %mul33, %conv34, !dbg !6626
  %conv36 = fptrunc double %mul35 to float, !dbg !6627
  %27 = load float, float* %Sa, align 4, !dbg !6628
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6629
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !6630
  %29 = load float, float* %green37, align 4, !dbg !6630
  %conv38 = fpext float %29 to double, !dbg !6629
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !6631
  %30 = load float, float* %Da, align 4, !dbg !6632
  %conv40 = fpext float %30 to double, !dbg !6632
  %mul41 = fmul double %mul39, %conv40, !dbg !6633
  %conv42 = fptrunc double %mul41 to float, !dbg !6634
  %31 = load float, float* %Da, align 4, !dbg !6635
  %call43 = call float @LinearBurn(float %conv36, float %27, float %conv42, float %31), !dbg !6636
  %mul44 = fmul float %23, %call43, !dbg !6637
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6638
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !6639
  store float %mul44, float* %green45, align 4, !dbg !6640
  %33 = load float, float* %gamma, align 4, !dbg !6641
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6642
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6643
  %35 = load float, float* %blue, align 8, !dbg !6643
  %conv46 = fpext float %35 to double, !dbg !6642
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !6644
  %36 = load float, float* %Sa, align 4, !dbg !6645
  %conv48 = fpext float %36 to double, !dbg !6645
  %mul49 = fmul double %mul47, %conv48, !dbg !6646
  %conv50 = fptrunc double %mul49 to float, !dbg !6647
  %37 = load float, float* %Sa, align 4, !dbg !6648
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6649
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !6650
  %39 = load float, float* %blue51, align 8, !dbg !6650
  %conv52 = fpext float %39 to double, !dbg !6649
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !6651
  %40 = load float, float* %Da, align 4, !dbg !6652
  %conv54 = fpext float %40 to double, !dbg !6652
  %mul55 = fmul double %mul53, %conv54, !dbg !6653
  %conv56 = fptrunc double %mul55 to float, !dbg !6654
  %41 = load float, float* %Da, align 4, !dbg !6655
  %call57 = call float @LinearBurn(float %conv50, float %37, float %conv56, float %41), !dbg !6656
  %mul58 = fmul float %33, %call57, !dbg !6657
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6658
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !6659
  store float %mul58, float* %blue59, align 8, !dbg !6660
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6661
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !6663
  %44 = load i32, i32* %colorspace, align 4, !dbg !6663
  %cmp60 = icmp eq i32 %44, 12, !dbg !6664
  br i1 %cmp60, label %if.then, label %if.end, !dbg !6665

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !6666
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6667
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !6668
  %47 = load float, float* %index, align 8, !dbg !6668
  %conv62 = fpext float %47 to double, !dbg !6667
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !6669
  %48 = load float, float* %Sa, align 4, !dbg !6670
  %conv64 = fpext float %48 to double, !dbg !6670
  %mul65 = fmul double %mul63, %conv64, !dbg !6671
  %conv66 = fptrunc double %mul65 to float, !dbg !6672
  %49 = load float, float* %Sa, align 4, !dbg !6673
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6674
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6675
  %51 = load float, float* %index67, align 8, !dbg !6675
  %conv68 = fpext float %51 to double, !dbg !6674
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6676
  %52 = load float, float* %Da, align 4, !dbg !6677
  %conv70 = fpext float %52 to double, !dbg !6677
  %mul71 = fmul double %mul69, %conv70, !dbg !6678
  %conv72 = fptrunc double %mul71 to float, !dbg !6679
  %53 = load float, float* %Da, align 4, !dbg !6680
  %call73 = call float @LinearBurn(float %conv66, float %49, float %conv72, float %53), !dbg !6681
  %mul74 = fmul float %45, %call73, !dbg !6682
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6683
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6684
  store float %mul74, float* %index75, align 8, !dbg !6685
  br label %if.end, !dbg !6683

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6686
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeHardLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6687 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6694, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6698, metadata !DIExpression()), !dbg !6699
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6700
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6701
  %1 = load float, float* %opacity, align 4, !dbg !6701
  %conv = fpext float %1 to double, !dbg !6700
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6702
  %sub = fsub double 1.000000e+00, %mul, !dbg !6703
  %conv1 = fptrunc double %sub to float, !dbg !6704
  store float %conv1, float* %Sa, align 4, !dbg !6705
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6706
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6707
  %3 = load float, float* %opacity2, align 4, !dbg !6707
  %conv3 = fpext float %3 to double, !dbg !6706
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6708
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6709
  %conv6 = fptrunc double %sub5 to float, !dbg !6710
  store float %conv6, float* %Da, align 4, !dbg !6711
  %4 = load float, float* %Sa, align 4, !dbg !6712
  %5 = load float, float* %Da, align 4, !dbg !6713
  %add = fadd float %4, %5, !dbg !6714
  %6 = load float, float* %Sa, align 4, !dbg !6715
  %7 = load float, float* %Da, align 4, !dbg !6716
  %mul7 = fmul float %6, %7, !dbg !6717
  %sub8 = fsub float %add, %mul7, !dbg !6718
  %call = call float @RoundToUnity(float %sub8), !dbg !6719
  store float %call, float* %gamma, align 4, !dbg !6720
  %8 = load float, float* %gamma, align 4, !dbg !6721
  %conv9 = fpext float %8 to double, !dbg !6721
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6722
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6723
  %conv12 = fptrunc double %mul11 to float, !dbg !6724
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6725
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6726
  store float %conv12, float* %opacity13, align 4, !dbg !6727
  %10 = load float, float* %gamma, align 4, !dbg !6728
  %conv14 = fpext float %10 to double, !dbg !6728
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6729
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6730
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6729

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6729

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6731
  %conv16 = fpext float %12 to double, !dbg !6731
  br label %cond.end, !dbg !6729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6729
  %div = fdiv double 6.553500e+04, %cond, !dbg !6732
  %conv17 = fptrunc double %div to float, !dbg !6733
  store float %conv17, float* %gamma, align 4, !dbg !6734
  %13 = load float, float* %gamma, align 4, !dbg !6735
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6736
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !6737
  %15 = load float, float* %red, align 8, !dbg !6737
  %conv18 = fpext float %15 to double, !dbg !6736
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !6738
  %16 = load float, float* %Sa, align 4, !dbg !6739
  %conv20 = fpext float %16 to double, !dbg !6739
  %mul21 = fmul double %mul19, %conv20, !dbg !6740
  %conv22 = fptrunc double %mul21 to float, !dbg !6741
  %17 = load float, float* %Sa, align 4, !dbg !6742
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6743
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6744
  %19 = load float, float* %red23, align 8, !dbg !6744
  %conv24 = fpext float %19 to double, !dbg !6743
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6745
  %20 = load float, float* %Da, align 4, !dbg !6746
  %conv26 = fpext float %20 to double, !dbg !6746
  %mul27 = fmul double %mul25, %conv26, !dbg !6747
  %conv28 = fptrunc double %mul27 to float, !dbg !6748
  %21 = load float, float* %Da, align 4, !dbg !6749
  %call29 = call float @HardLight(float %conv22, float %17, float %conv28, float %21), !dbg !6750
  %mul30 = fmul float %13, %call29, !dbg !6751
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6752
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !6753
  store float %mul30, float* %red31, align 8, !dbg !6754
  %23 = load float, float* %gamma, align 4, !dbg !6755
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6756
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !6757
  %25 = load float, float* %green, align 4, !dbg !6757
  %conv32 = fpext float %25 to double, !dbg !6756
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !6758
  %26 = load float, float* %Sa, align 4, !dbg !6759
  %conv34 = fpext float %26 to double, !dbg !6759
  %mul35 = fmul double %mul33, %conv34, !dbg !6760
  %conv36 = fptrunc double %mul35 to float, !dbg !6761
  %27 = load float, float* %Sa, align 4, !dbg !6762
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6763
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !6764
  %29 = load float, float* %green37, align 4, !dbg !6764
  %conv38 = fpext float %29 to double, !dbg !6763
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !6765
  %30 = load float, float* %Da, align 4, !dbg !6766
  %conv40 = fpext float %30 to double, !dbg !6766
  %mul41 = fmul double %mul39, %conv40, !dbg !6767
  %conv42 = fptrunc double %mul41 to float, !dbg !6768
  %31 = load float, float* %Da, align 4, !dbg !6769
  %call43 = call float @HardLight(float %conv36, float %27, float %conv42, float %31), !dbg !6770
  %mul44 = fmul float %23, %call43, !dbg !6771
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6772
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !6773
  store float %mul44, float* %green45, align 4, !dbg !6774
  %33 = load float, float* %gamma, align 4, !dbg !6775
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6776
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6777
  %35 = load float, float* %blue, align 8, !dbg !6777
  %conv46 = fpext float %35 to double, !dbg !6776
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !6778
  %36 = load float, float* %Sa, align 4, !dbg !6779
  %conv48 = fpext float %36 to double, !dbg !6779
  %mul49 = fmul double %mul47, %conv48, !dbg !6780
  %conv50 = fptrunc double %mul49 to float, !dbg !6781
  %37 = load float, float* %Sa, align 4, !dbg !6782
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6783
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !6784
  %39 = load float, float* %blue51, align 8, !dbg !6784
  %conv52 = fpext float %39 to double, !dbg !6783
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !6785
  %40 = load float, float* %Da, align 4, !dbg !6786
  %conv54 = fpext float %40 to double, !dbg !6786
  %mul55 = fmul double %mul53, %conv54, !dbg !6787
  %conv56 = fptrunc double %mul55 to float, !dbg !6788
  %41 = load float, float* %Da, align 4, !dbg !6789
  %call57 = call float @HardLight(float %conv50, float %37, float %conv56, float %41), !dbg !6790
  %mul58 = fmul float %33, %call57, !dbg !6791
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6792
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !6793
  store float %mul58, float* %blue59, align 8, !dbg !6794
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6795
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !6797
  %44 = load i32, i32* %colorspace, align 4, !dbg !6797
  %cmp60 = icmp eq i32 %44, 12, !dbg !6798
  br i1 %cmp60, label %if.then, label %if.end, !dbg !6799

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !6800
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6801
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !6802
  %47 = load float, float* %index, align 8, !dbg !6802
  %conv62 = fpext float %47 to double, !dbg !6801
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !6803
  %48 = load float, float* %Sa, align 4, !dbg !6804
  %conv64 = fpext float %48 to double, !dbg !6804
  %mul65 = fmul double %mul63, %conv64, !dbg !6805
  %conv66 = fptrunc double %mul65 to float, !dbg !6806
  %49 = load float, float* %Sa, align 4, !dbg !6807
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6808
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6809
  %51 = load float, float* %index67, align 8, !dbg !6809
  %conv68 = fpext float %51 to double, !dbg !6808
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6810
  %52 = load float, float* %Da, align 4, !dbg !6811
  %conv70 = fpext float %52 to double, !dbg !6811
  %mul71 = fmul double %mul69, %conv70, !dbg !6812
  %conv72 = fptrunc double %mul71 to float, !dbg !6813
  %53 = load float, float* %Da, align 4, !dbg !6814
  %call73 = call float @HardLight(float %conv66, float %49, float %conv72, float %53), !dbg !6815
  %mul74 = fmul float %45, %call73, !dbg !6816
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6817
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6818
  store float %mul74, float* %index75, align 8, !dbg !6819
  br label %if.end, !dbg !6817

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6820
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeSoftLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6821 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6826, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6830, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6832, metadata !DIExpression()), !dbg !6833
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6834
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6835
  %1 = load float, float* %opacity, align 4, !dbg !6835
  %conv = fpext float %1 to double, !dbg !6834
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6836
  %sub = fsub double 1.000000e+00, %mul, !dbg !6837
  %conv1 = fptrunc double %sub to float, !dbg !6838
  store float %conv1, float* %Sa, align 4, !dbg !6839
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6840
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6841
  %3 = load float, float* %opacity2, align 4, !dbg !6841
  %conv3 = fpext float %3 to double, !dbg !6840
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6842
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6843
  %conv6 = fptrunc double %sub5 to float, !dbg !6844
  store float %conv6, float* %Da, align 4, !dbg !6845
  %4 = load float, float* %Sa, align 4, !dbg !6846
  %5 = load float, float* %Da, align 4, !dbg !6847
  %add = fadd float %4, %5, !dbg !6848
  %6 = load float, float* %Sa, align 4, !dbg !6849
  %7 = load float, float* %Da, align 4, !dbg !6850
  %mul7 = fmul float %6, %7, !dbg !6851
  %sub8 = fsub float %add, %mul7, !dbg !6852
  %call = call float @RoundToUnity(float %sub8), !dbg !6853
  store float %call, float* %gamma, align 4, !dbg !6854
  %8 = load float, float* %gamma, align 4, !dbg !6855
  %conv9 = fpext float %8 to double, !dbg !6855
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6856
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6857
  %conv12 = fptrunc double %mul11 to float, !dbg !6858
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6859
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6860
  store float %conv12, float* %opacity13, align 4, !dbg !6861
  %10 = load float, float* %gamma, align 4, !dbg !6862
  %conv14 = fpext float %10 to double, !dbg !6862
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6863
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6864
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6863

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6863

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6865
  %conv16 = fpext float %12 to double, !dbg !6865
  br label %cond.end, !dbg !6863

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6863
  %div = fdiv double 6.553500e+04, %cond, !dbg !6866
  %conv17 = fptrunc double %div to float, !dbg !6867
  store float %conv17, float* %gamma, align 4, !dbg !6868
  %13 = load float, float* %gamma, align 4, !dbg !6869
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6870
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !6871
  %15 = load float, float* %red, align 8, !dbg !6871
  %conv18 = fpext float %15 to double, !dbg !6870
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !6872
  %16 = load float, float* %Sa, align 4, !dbg !6873
  %conv20 = fpext float %16 to double, !dbg !6873
  %mul21 = fmul double %mul19, %conv20, !dbg !6874
  %conv22 = fptrunc double %mul21 to float, !dbg !6875
  %17 = load float, float* %Sa, align 4, !dbg !6876
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6877
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !6878
  %19 = load float, float* %red23, align 8, !dbg !6878
  %conv24 = fpext float %19 to double, !dbg !6877
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6879
  %20 = load float, float* %Da, align 4, !dbg !6880
  %conv26 = fpext float %20 to double, !dbg !6880
  %mul27 = fmul double %mul25, %conv26, !dbg !6881
  %conv28 = fptrunc double %mul27 to float, !dbg !6882
  %21 = load float, float* %Da, align 4, !dbg !6883
  %call29 = call float @SoftLight(float %conv22, float %17, float %conv28, float %21), !dbg !6884
  %mul30 = fmul float %13, %call29, !dbg !6885
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6886
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !6887
  store float %mul30, float* %red31, align 8, !dbg !6888
  %23 = load float, float* %gamma, align 4, !dbg !6889
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6890
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !6891
  %25 = load float, float* %green, align 4, !dbg !6891
  %conv32 = fpext float %25 to double, !dbg !6890
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !6892
  %26 = load float, float* %Sa, align 4, !dbg !6893
  %conv34 = fpext float %26 to double, !dbg !6893
  %mul35 = fmul double %mul33, %conv34, !dbg !6894
  %conv36 = fptrunc double %mul35 to float, !dbg !6895
  %27 = load float, float* %Sa, align 4, !dbg !6896
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6897
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !6898
  %29 = load float, float* %green37, align 4, !dbg !6898
  %conv38 = fpext float %29 to double, !dbg !6897
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !6899
  %30 = load float, float* %Da, align 4, !dbg !6900
  %conv40 = fpext float %30 to double, !dbg !6900
  %mul41 = fmul double %mul39, %conv40, !dbg !6901
  %conv42 = fptrunc double %mul41 to float, !dbg !6902
  %31 = load float, float* %Da, align 4, !dbg !6903
  %call43 = call float @SoftLight(float %conv36, float %27, float %conv42, float %31), !dbg !6904
  %mul44 = fmul float %23, %call43, !dbg !6905
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6906
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !6907
  store float %mul44, float* %green45, align 4, !dbg !6908
  %33 = load float, float* %gamma, align 4, !dbg !6909
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6910
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !6911
  %35 = load float, float* %blue, align 8, !dbg !6911
  %conv46 = fpext float %35 to double, !dbg !6910
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !6912
  %36 = load float, float* %Sa, align 4, !dbg !6913
  %conv48 = fpext float %36 to double, !dbg !6913
  %mul49 = fmul double %mul47, %conv48, !dbg !6914
  %conv50 = fptrunc double %mul49 to float, !dbg !6915
  %37 = load float, float* %Sa, align 4, !dbg !6916
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6917
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !6918
  %39 = load float, float* %blue51, align 8, !dbg !6918
  %conv52 = fpext float %39 to double, !dbg !6917
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !6919
  %40 = load float, float* %Da, align 4, !dbg !6920
  %conv54 = fpext float %40 to double, !dbg !6920
  %mul55 = fmul double %mul53, %conv54, !dbg !6921
  %conv56 = fptrunc double %mul55 to float, !dbg !6922
  %41 = load float, float* %Da, align 4, !dbg !6923
  %call57 = call float @SoftLight(float %conv50, float %37, float %conv56, float %41), !dbg !6924
  %mul58 = fmul float %33, %call57, !dbg !6925
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6926
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !6927
  store float %mul58, float* %blue59, align 8, !dbg !6928
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6929
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !6931
  %44 = load i32, i32* %colorspace, align 4, !dbg !6931
  %cmp60 = icmp eq i32 %44, 12, !dbg !6932
  br i1 %cmp60, label %if.then, label %if.end, !dbg !6933

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !6934
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6935
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !6936
  %47 = load float, float* %index, align 8, !dbg !6936
  %conv62 = fpext float %47 to double, !dbg !6935
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !6937
  %48 = load float, float* %Sa, align 4, !dbg !6938
  %conv64 = fpext float %48 to double, !dbg !6938
  %mul65 = fmul double %mul63, %conv64, !dbg !6939
  %conv66 = fptrunc double %mul65 to float, !dbg !6940
  %49 = load float, float* %Sa, align 4, !dbg !6941
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6942
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !6943
  %51 = load float, float* %index67, align 8, !dbg !6943
  %conv68 = fpext float %51 to double, !dbg !6942
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !6944
  %52 = load float, float* %Da, align 4, !dbg !6945
  %conv70 = fpext float %52 to double, !dbg !6945
  %mul71 = fmul double %mul69, %conv70, !dbg !6946
  %conv72 = fptrunc double %mul71 to float, !dbg !6947
  %53 = load float, float* %Da, align 4, !dbg !6948
  %call73 = call float @SoftLight(float %conv66, float %49, float %conv72, float %53), !dbg !6949
  %mul74 = fmul float %45, %call73, !dbg !6950
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6951
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !6952
  store float %mul74, float* %index75, align 8, !dbg !6953
  br label %if.end, !dbg !6951

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6954
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeLinearLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !6955 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata float* %Da, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6964, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !6966, metadata !DIExpression()), !dbg !6967
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6968
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !6969
  %1 = load float, float* %opacity, align 4, !dbg !6969
  %conv = fpext float %1 to double, !dbg !6968
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !6970
  %sub = fsub double 1.000000e+00, %mul, !dbg !6971
  %conv1 = fptrunc double %sub to float, !dbg !6972
  store float %conv1, float* %Sa, align 4, !dbg !6973
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6974
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !6975
  %3 = load float, float* %opacity2, align 4, !dbg !6975
  %conv3 = fpext float %3 to double, !dbg !6974
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !6976
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !6977
  %conv6 = fptrunc double %sub5 to float, !dbg !6978
  store float %conv6, float* %Da, align 4, !dbg !6979
  %4 = load float, float* %Sa, align 4, !dbg !6980
  %5 = load float, float* %Da, align 4, !dbg !6981
  %add = fadd float %4, %5, !dbg !6982
  %6 = load float, float* %Sa, align 4, !dbg !6983
  %7 = load float, float* %Da, align 4, !dbg !6984
  %mul7 = fmul float %6, %7, !dbg !6985
  %sub8 = fsub float %add, %mul7, !dbg !6986
  %call = call float @RoundToUnity(float %sub8), !dbg !6987
  store float %call, float* %gamma, align 4, !dbg !6988
  %8 = load float, float* %gamma, align 4, !dbg !6989
  %conv9 = fpext float %8 to double, !dbg !6989
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !6990
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6991
  %conv12 = fptrunc double %mul11 to float, !dbg !6992
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6993
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6994
  store float %conv12, float* %opacity13, align 4, !dbg !6995
  %10 = load float, float* %gamma, align 4, !dbg !6996
  %conv14 = fpext float %10 to double, !dbg !6996
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !6997
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !6998
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6997

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6997

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !6999
  %conv16 = fpext float %12 to double, !dbg !6999
  br label %cond.end, !dbg !6997

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !6997
  %div = fdiv double 6.553500e+04, %cond, !dbg !7000
  %conv17 = fptrunc double %div to float, !dbg !7001
  store float %conv17, float* %gamma, align 4, !dbg !7002
  %13 = load float, float* %gamma, align 4, !dbg !7003
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7004
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !7005
  %15 = load float, float* %red, align 8, !dbg !7005
  %conv18 = fpext float %15 to double, !dbg !7004
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !7006
  %16 = load float, float* %Sa, align 4, !dbg !7007
  %conv20 = fpext float %16 to double, !dbg !7007
  %mul21 = fmul double %mul19, %conv20, !dbg !7008
  %conv22 = fptrunc double %mul21 to float, !dbg !7009
  %17 = load float, float* %Sa, align 4, !dbg !7010
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7011
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !7012
  %19 = load float, float* %red23, align 8, !dbg !7012
  %conv24 = fpext float %19 to double, !dbg !7011
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !7013
  %20 = load float, float* %Da, align 4, !dbg !7014
  %conv26 = fpext float %20 to double, !dbg !7014
  %mul27 = fmul double %mul25, %conv26, !dbg !7015
  %conv28 = fptrunc double %mul27 to float, !dbg !7016
  %21 = load float, float* %Da, align 4, !dbg !7017
  %call29 = call float @LinearLight(float %conv22, float %17, float %conv28, float %21), !dbg !7018
  %mul30 = fmul float %13, %call29, !dbg !7019
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7020
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !7021
  store float %mul30, float* %red31, align 8, !dbg !7022
  %23 = load float, float* %gamma, align 4, !dbg !7023
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7024
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !7025
  %25 = load float, float* %green, align 4, !dbg !7025
  %conv32 = fpext float %25 to double, !dbg !7024
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !7026
  %26 = load float, float* %Sa, align 4, !dbg !7027
  %conv34 = fpext float %26 to double, !dbg !7027
  %mul35 = fmul double %mul33, %conv34, !dbg !7028
  %conv36 = fptrunc double %mul35 to float, !dbg !7029
  %27 = load float, float* %Sa, align 4, !dbg !7030
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7031
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !7032
  %29 = load float, float* %green37, align 4, !dbg !7032
  %conv38 = fpext float %29 to double, !dbg !7031
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !7033
  %30 = load float, float* %Da, align 4, !dbg !7034
  %conv40 = fpext float %30 to double, !dbg !7034
  %mul41 = fmul double %mul39, %conv40, !dbg !7035
  %conv42 = fptrunc double %mul41 to float, !dbg !7036
  %31 = load float, float* %Da, align 4, !dbg !7037
  %call43 = call float @LinearLight(float %conv36, float %27, float %conv42, float %31), !dbg !7038
  %mul44 = fmul float %23, %call43, !dbg !7039
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7040
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !7041
  store float %mul44, float* %green45, align 4, !dbg !7042
  %33 = load float, float* %gamma, align 4, !dbg !7043
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7044
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !7045
  %35 = load float, float* %blue, align 8, !dbg !7045
  %conv46 = fpext float %35 to double, !dbg !7044
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !7046
  %36 = load float, float* %Sa, align 4, !dbg !7047
  %conv48 = fpext float %36 to double, !dbg !7047
  %mul49 = fmul double %mul47, %conv48, !dbg !7048
  %conv50 = fptrunc double %mul49 to float, !dbg !7049
  %37 = load float, float* %Sa, align 4, !dbg !7050
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7051
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !7052
  %39 = load float, float* %blue51, align 8, !dbg !7052
  %conv52 = fpext float %39 to double, !dbg !7051
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !7053
  %40 = load float, float* %Da, align 4, !dbg !7054
  %conv54 = fpext float %40 to double, !dbg !7054
  %mul55 = fmul double %mul53, %conv54, !dbg !7055
  %conv56 = fptrunc double %mul55 to float, !dbg !7056
  %41 = load float, float* %Da, align 4, !dbg !7057
  %call57 = call float @LinearLight(float %conv50, float %37, float %conv56, float %41), !dbg !7058
  %mul58 = fmul float %33, %call57, !dbg !7059
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7060
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !7061
  store float %mul58, float* %blue59, align 8, !dbg !7062
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7063
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !7065
  %44 = load i32, i32* %colorspace, align 4, !dbg !7065
  %cmp60 = icmp eq i32 %44, 12, !dbg !7066
  br i1 %cmp60, label %if.then, label %if.end, !dbg !7067

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !7068
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7069
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !7070
  %47 = load float, float* %index, align 8, !dbg !7070
  %conv62 = fpext float %47 to double, !dbg !7069
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !7071
  %48 = load float, float* %Sa, align 4, !dbg !7072
  %conv64 = fpext float %48 to double, !dbg !7072
  %mul65 = fmul double %mul63, %conv64, !dbg !7073
  %conv66 = fptrunc double %mul65 to float, !dbg !7074
  %49 = load float, float* %Sa, align 4, !dbg !7075
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7076
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !7077
  %51 = load float, float* %index67, align 8, !dbg !7077
  %conv68 = fpext float %51 to double, !dbg !7076
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !7078
  %52 = load float, float* %Da, align 4, !dbg !7079
  %conv70 = fpext float %52 to double, !dbg !7079
  %mul71 = fmul double %mul69, %conv70, !dbg !7080
  %conv72 = fptrunc double %mul71 to float, !dbg !7081
  %53 = load float, float* %Da, align 4, !dbg !7082
  %call73 = call float @LinearLight(float %conv66, float %49, float %conv72, float %53), !dbg !7083
  %mul74 = fmul float %45, %call73, !dbg !7084
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7085
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !7086
  store float %mul74, float* %index75, align 8, !dbg !7087
  br label %if.end, !dbg !7085

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositePegtopLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !7089 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata float* %Da, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !7100, metadata !DIExpression()), !dbg !7101
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7102
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !7103
  %1 = load float, float* %opacity, align 4, !dbg !7103
  %conv = fpext float %1 to double, !dbg !7102
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !7104
  %sub = fsub double 1.000000e+00, %mul, !dbg !7105
  %conv1 = fptrunc double %sub to float, !dbg !7106
  store float %conv1, float* %Sa, align 4, !dbg !7107
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7108
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !7109
  %3 = load float, float* %opacity2, align 4, !dbg !7109
  %conv3 = fpext float %3 to double, !dbg !7108
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !7110
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !7111
  %conv6 = fptrunc double %sub5 to float, !dbg !7112
  store float %conv6, float* %Da, align 4, !dbg !7113
  %4 = load float, float* %Sa, align 4, !dbg !7114
  %5 = load float, float* %Da, align 4, !dbg !7115
  %add = fadd float %4, %5, !dbg !7116
  %6 = load float, float* %Sa, align 4, !dbg !7117
  %7 = load float, float* %Da, align 4, !dbg !7118
  %mul7 = fmul float %6, %7, !dbg !7119
  %sub8 = fsub float %add, %mul7, !dbg !7120
  %call = call float @RoundToUnity(float %sub8), !dbg !7121
  store float %call, float* %gamma, align 4, !dbg !7122
  %8 = load float, float* %gamma, align 4, !dbg !7123
  %conv9 = fpext float %8 to double, !dbg !7123
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !7124
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !7125
  %conv12 = fptrunc double %mul11 to float, !dbg !7126
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7127
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !7128
  store float %conv12, float* %opacity13, align 4, !dbg !7129
  %10 = load float, float* %gamma, align 4, !dbg !7130
  %conv14 = fpext float %10 to double, !dbg !7130
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !7131
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !7132
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7131

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7131

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !7133
  %conv16 = fpext float %12 to double, !dbg !7133
  br label %cond.end, !dbg !7131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !7131
  %div = fdiv double 6.553500e+04, %cond, !dbg !7134
  %conv17 = fptrunc double %div to float, !dbg !7135
  store float %conv17, float* %gamma, align 4, !dbg !7136
  %13 = load float, float* %gamma, align 4, !dbg !7137
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7138
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !7139
  %15 = load float, float* %red, align 8, !dbg !7139
  %conv18 = fpext float %15 to double, !dbg !7138
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !7140
  %16 = load float, float* %Sa, align 4, !dbg !7141
  %conv20 = fpext float %16 to double, !dbg !7141
  %mul21 = fmul double %mul19, %conv20, !dbg !7142
  %conv22 = fptrunc double %mul21 to float, !dbg !7143
  %17 = load float, float* %Sa, align 4, !dbg !7144
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7145
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !7146
  %19 = load float, float* %red23, align 8, !dbg !7146
  %conv24 = fpext float %19 to double, !dbg !7145
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !7147
  %20 = load float, float* %Da, align 4, !dbg !7148
  %conv26 = fpext float %20 to double, !dbg !7148
  %mul27 = fmul double %mul25, %conv26, !dbg !7149
  %conv28 = fptrunc double %mul27 to float, !dbg !7150
  %21 = load float, float* %Da, align 4, !dbg !7151
  %call29 = call float @PegtopLight(float %conv22, float %17, float %conv28, float %21), !dbg !7152
  %mul30 = fmul float %13, %call29, !dbg !7153
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7154
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !7155
  store float %mul30, float* %red31, align 8, !dbg !7156
  %23 = load float, float* %gamma, align 4, !dbg !7157
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7158
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !7159
  %25 = load float, float* %green, align 4, !dbg !7159
  %conv32 = fpext float %25 to double, !dbg !7158
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !7160
  %26 = load float, float* %Sa, align 4, !dbg !7161
  %conv34 = fpext float %26 to double, !dbg !7161
  %mul35 = fmul double %mul33, %conv34, !dbg !7162
  %conv36 = fptrunc double %mul35 to float, !dbg !7163
  %27 = load float, float* %Sa, align 4, !dbg !7164
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7165
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !7166
  %29 = load float, float* %green37, align 4, !dbg !7166
  %conv38 = fpext float %29 to double, !dbg !7165
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !7167
  %30 = load float, float* %Da, align 4, !dbg !7168
  %conv40 = fpext float %30 to double, !dbg !7168
  %mul41 = fmul double %mul39, %conv40, !dbg !7169
  %conv42 = fptrunc double %mul41 to float, !dbg !7170
  %31 = load float, float* %Da, align 4, !dbg !7171
  %call43 = call float @PegtopLight(float %conv36, float %27, float %conv42, float %31), !dbg !7172
  %mul44 = fmul float %23, %call43, !dbg !7173
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7174
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !7175
  store float %mul44, float* %green45, align 4, !dbg !7176
  %33 = load float, float* %gamma, align 4, !dbg !7177
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7178
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !7179
  %35 = load float, float* %blue, align 8, !dbg !7179
  %conv46 = fpext float %35 to double, !dbg !7178
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !7180
  %36 = load float, float* %Sa, align 4, !dbg !7181
  %conv48 = fpext float %36 to double, !dbg !7181
  %mul49 = fmul double %mul47, %conv48, !dbg !7182
  %conv50 = fptrunc double %mul49 to float, !dbg !7183
  %37 = load float, float* %Sa, align 4, !dbg !7184
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7185
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !7186
  %39 = load float, float* %blue51, align 8, !dbg !7186
  %conv52 = fpext float %39 to double, !dbg !7185
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !7187
  %40 = load float, float* %Da, align 4, !dbg !7188
  %conv54 = fpext float %40 to double, !dbg !7188
  %mul55 = fmul double %mul53, %conv54, !dbg !7189
  %conv56 = fptrunc double %mul55 to float, !dbg !7190
  %41 = load float, float* %Da, align 4, !dbg !7191
  %call57 = call float @PegtopLight(float %conv50, float %37, float %conv56, float %41), !dbg !7192
  %mul58 = fmul float %33, %call57, !dbg !7193
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7194
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !7195
  store float %mul58, float* %blue59, align 8, !dbg !7196
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7197
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !7199
  %44 = load i32, i32* %colorspace, align 4, !dbg !7199
  %cmp60 = icmp eq i32 %44, 12, !dbg !7200
  br i1 %cmp60, label %if.then, label %if.end, !dbg !7201

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !7202
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7203
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !7204
  %47 = load float, float* %index, align 8, !dbg !7204
  %conv62 = fpext float %47 to double, !dbg !7203
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !7205
  %48 = load float, float* %Sa, align 4, !dbg !7206
  %conv64 = fpext float %48 to double, !dbg !7206
  %mul65 = fmul double %mul63, %conv64, !dbg !7207
  %conv66 = fptrunc double %mul65 to float, !dbg !7208
  %49 = load float, float* %Sa, align 4, !dbg !7209
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7210
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !7211
  %51 = load float, float* %index67, align 8, !dbg !7211
  %conv68 = fpext float %51 to double, !dbg !7210
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !7212
  %52 = load float, float* %Da, align 4, !dbg !7213
  %conv70 = fpext float %52 to double, !dbg !7213
  %mul71 = fmul double %mul69, %conv70, !dbg !7214
  %conv72 = fptrunc double %mul71 to float, !dbg !7215
  %53 = load float, float* %Da, align 4, !dbg !7216
  %call73 = call float @PegtopLight(float %conv66, float %49, float %conv72, float %53), !dbg !7217
  %mul74 = fmul float %45, %call73, !dbg !7218
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7219
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !7220
  store float %mul74, float* %index75, align 8, !dbg !7221
  br label %if.end, !dbg !7219

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !7222
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeVividLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !7223 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata float* %Da, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !7232, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !7234, metadata !DIExpression()), !dbg !7235
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7236
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !7237
  %1 = load float, float* %opacity, align 4, !dbg !7237
  %conv = fpext float %1 to double, !dbg !7236
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !7238
  %sub = fsub double 1.000000e+00, %mul, !dbg !7239
  %conv1 = fptrunc double %sub to float, !dbg !7240
  store float %conv1, float* %Sa, align 4, !dbg !7241
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7242
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !7243
  %3 = load float, float* %opacity2, align 4, !dbg !7243
  %conv3 = fpext float %3 to double, !dbg !7242
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !7244
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !7245
  %conv6 = fptrunc double %sub5 to float, !dbg !7246
  store float %conv6, float* %Da, align 4, !dbg !7247
  %4 = load float, float* %Sa, align 4, !dbg !7248
  %5 = load float, float* %Da, align 4, !dbg !7249
  %add = fadd float %4, %5, !dbg !7250
  %6 = load float, float* %Sa, align 4, !dbg !7251
  %7 = load float, float* %Da, align 4, !dbg !7252
  %mul7 = fmul float %6, %7, !dbg !7253
  %sub8 = fsub float %add, %mul7, !dbg !7254
  %call = call float @RoundToUnity(float %sub8), !dbg !7255
  store float %call, float* %gamma, align 4, !dbg !7256
  %8 = load float, float* %gamma, align 4, !dbg !7257
  %conv9 = fpext float %8 to double, !dbg !7257
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !7258
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !7259
  %conv12 = fptrunc double %mul11 to float, !dbg !7260
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7261
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !7262
  store float %conv12, float* %opacity13, align 4, !dbg !7263
  %10 = load float, float* %gamma, align 4, !dbg !7264
  %conv14 = fpext float %10 to double, !dbg !7264
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !7265
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !7266
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7265

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7265

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !7267
  %conv16 = fpext float %12 to double, !dbg !7267
  br label %cond.end, !dbg !7265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !7265
  %div = fdiv double 6.553500e+04, %cond, !dbg !7268
  %conv17 = fptrunc double %div to float, !dbg !7269
  store float %conv17, float* %gamma, align 4, !dbg !7270
  %13 = load float, float* %gamma, align 4, !dbg !7271
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7272
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !7273
  %15 = load float, float* %red, align 8, !dbg !7273
  %conv18 = fpext float %15 to double, !dbg !7272
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !7274
  %16 = load float, float* %Sa, align 4, !dbg !7275
  %conv20 = fpext float %16 to double, !dbg !7275
  %mul21 = fmul double %mul19, %conv20, !dbg !7276
  %conv22 = fptrunc double %mul21 to float, !dbg !7277
  %17 = load float, float* %Sa, align 4, !dbg !7278
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7279
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !7280
  %19 = load float, float* %red23, align 8, !dbg !7280
  %conv24 = fpext float %19 to double, !dbg !7279
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !7281
  %20 = load float, float* %Da, align 4, !dbg !7282
  %conv26 = fpext float %20 to double, !dbg !7282
  %mul27 = fmul double %mul25, %conv26, !dbg !7283
  %conv28 = fptrunc double %mul27 to float, !dbg !7284
  %21 = load float, float* %Da, align 4, !dbg !7285
  %call29 = call float @VividLight(float %conv22, float %17, float %conv28, float %21), !dbg !7286
  %mul30 = fmul float %13, %call29, !dbg !7287
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7288
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !7289
  store float %mul30, float* %red31, align 8, !dbg !7290
  %23 = load float, float* %gamma, align 4, !dbg !7291
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7292
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !7293
  %25 = load float, float* %green, align 4, !dbg !7293
  %conv32 = fpext float %25 to double, !dbg !7292
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !7294
  %26 = load float, float* %Sa, align 4, !dbg !7295
  %conv34 = fpext float %26 to double, !dbg !7295
  %mul35 = fmul double %mul33, %conv34, !dbg !7296
  %conv36 = fptrunc double %mul35 to float, !dbg !7297
  %27 = load float, float* %Sa, align 4, !dbg !7298
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7299
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !7300
  %29 = load float, float* %green37, align 4, !dbg !7300
  %conv38 = fpext float %29 to double, !dbg !7299
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !7301
  %30 = load float, float* %Da, align 4, !dbg !7302
  %conv40 = fpext float %30 to double, !dbg !7302
  %mul41 = fmul double %mul39, %conv40, !dbg !7303
  %conv42 = fptrunc double %mul41 to float, !dbg !7304
  %31 = load float, float* %Da, align 4, !dbg !7305
  %call43 = call float @VividLight(float %conv36, float %27, float %conv42, float %31), !dbg !7306
  %mul44 = fmul float %23, %call43, !dbg !7307
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7308
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !7309
  store float %mul44, float* %green45, align 4, !dbg !7310
  %33 = load float, float* %gamma, align 4, !dbg !7311
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7312
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !7313
  %35 = load float, float* %blue, align 8, !dbg !7313
  %conv46 = fpext float %35 to double, !dbg !7312
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !7314
  %36 = load float, float* %Sa, align 4, !dbg !7315
  %conv48 = fpext float %36 to double, !dbg !7315
  %mul49 = fmul double %mul47, %conv48, !dbg !7316
  %conv50 = fptrunc double %mul49 to float, !dbg !7317
  %37 = load float, float* %Sa, align 4, !dbg !7318
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7319
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !7320
  %39 = load float, float* %blue51, align 8, !dbg !7320
  %conv52 = fpext float %39 to double, !dbg !7319
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !7321
  %40 = load float, float* %Da, align 4, !dbg !7322
  %conv54 = fpext float %40 to double, !dbg !7322
  %mul55 = fmul double %mul53, %conv54, !dbg !7323
  %conv56 = fptrunc double %mul55 to float, !dbg !7324
  %41 = load float, float* %Da, align 4, !dbg !7325
  %call57 = call float @VividLight(float %conv50, float %37, float %conv56, float %41), !dbg !7326
  %mul58 = fmul float %33, %call57, !dbg !7327
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7328
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !7329
  store float %mul58, float* %blue59, align 8, !dbg !7330
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7331
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !7333
  %44 = load i32, i32* %colorspace, align 4, !dbg !7333
  %cmp60 = icmp eq i32 %44, 12, !dbg !7334
  br i1 %cmp60, label %if.then, label %if.end, !dbg !7335

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !7336
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7337
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !7338
  %47 = load float, float* %index, align 8, !dbg !7338
  %conv62 = fpext float %47 to double, !dbg !7337
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !7339
  %48 = load float, float* %Sa, align 4, !dbg !7340
  %conv64 = fpext float %48 to double, !dbg !7340
  %mul65 = fmul double %mul63, %conv64, !dbg !7341
  %conv66 = fptrunc double %mul65 to float, !dbg !7342
  %49 = load float, float* %Sa, align 4, !dbg !7343
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7344
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !7345
  %51 = load float, float* %index67, align 8, !dbg !7345
  %conv68 = fpext float %51 to double, !dbg !7344
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !7346
  %52 = load float, float* %Da, align 4, !dbg !7347
  %conv70 = fpext float %52 to double, !dbg !7347
  %mul71 = fmul double %mul69, %conv70, !dbg !7348
  %conv72 = fptrunc double %mul71 to float, !dbg !7349
  %53 = load float, float* %Da, align 4, !dbg !7350
  %call73 = call float @VividLight(float %conv66, float %49, float %conv72, float %53), !dbg !7351
  %mul74 = fmul float %45, %call73, !dbg !7352
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7353
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !7354
  store float %mul74, float* %index75, align 8, !dbg !7355
  br label %if.end, !dbg !7353

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !7356
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositePinLight(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !7357 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %Da = alloca float, align 4
  %gamma = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7358, metadata !DIExpression()), !dbg !7359
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata float* %Da, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !7368, metadata !DIExpression()), !dbg !7369
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7370
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 8, !dbg !7371
  %1 = load float, float* %opacity, align 4, !dbg !7371
  %conv = fpext float %1 to double, !dbg !7370
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !7372
  %sub = fsub double 1.000000e+00, %mul, !dbg !7373
  %conv1 = fptrunc double %sub to float, !dbg !7374
  store float %conv1, float* %Sa, align 4, !dbg !7375
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7376
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !7377
  %3 = load float, float* %opacity2, align 4, !dbg !7377
  %conv3 = fpext float %3 to double, !dbg !7376
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !7378
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !7379
  %conv6 = fptrunc double %sub5 to float, !dbg !7380
  store float %conv6, float* %Da, align 4, !dbg !7381
  %4 = load float, float* %Sa, align 4, !dbg !7382
  %5 = load float, float* %Da, align 4, !dbg !7383
  %add = fadd float %4, %5, !dbg !7384
  %6 = load float, float* %Sa, align 4, !dbg !7385
  %7 = load float, float* %Da, align 4, !dbg !7386
  %mul7 = fmul float %6, %7, !dbg !7387
  %sub8 = fsub float %add, %mul7, !dbg !7388
  %call = call float @RoundToUnity(float %sub8), !dbg !7389
  store float %call, float* %gamma, align 4, !dbg !7390
  %8 = load float, float* %gamma, align 4, !dbg !7391
  %conv9 = fpext float %8 to double, !dbg !7391
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !7392
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !7393
  %conv12 = fptrunc double %mul11 to float, !dbg !7394
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7395
  %opacity13 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !7396
  store float %conv12, float* %opacity13, align 4, !dbg !7397
  %10 = load float, float* %gamma, align 4, !dbg !7398
  %conv14 = fpext float %10 to double, !dbg !7398
  %11 = call double @llvm.fabs.f64(double %conv14), !dbg !7399
  %cmp = fcmp olt double %11, 1.000000e-15, !dbg !7400
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7399

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7399

cond.false:                                       ; preds = %entry
  %12 = load float, float* %gamma, align 4, !dbg !7401
  %conv16 = fpext float %12 to double, !dbg !7401
  br label %cond.end, !dbg !7399

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e-15, %cond.true ], [ %conv16, %cond.false ], !dbg !7399
  %div = fdiv double 6.553500e+04, %cond, !dbg !7402
  %conv17 = fptrunc double %div to float, !dbg !7403
  store float %conv17, float* %gamma, align 4, !dbg !7404
  %13 = load float, float* %gamma, align 4, !dbg !7405
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7406
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !7407
  %15 = load float, float* %red, align 8, !dbg !7407
  %conv18 = fpext float %15 to double, !dbg !7406
  %mul19 = fmul double 0x3EF0001000100010, %conv18, !dbg !7408
  %16 = load float, float* %Sa, align 4, !dbg !7409
  %conv20 = fpext float %16 to double, !dbg !7409
  %mul21 = fmul double %mul19, %conv20, !dbg !7410
  %conv22 = fptrunc double %mul21 to float, !dbg !7411
  %17 = load float, float* %Sa, align 4, !dbg !7412
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7413
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !7414
  %19 = load float, float* %red23, align 8, !dbg !7414
  %conv24 = fpext float %19 to double, !dbg !7413
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !7415
  %20 = load float, float* %Da, align 4, !dbg !7416
  %conv26 = fpext float %20 to double, !dbg !7416
  %mul27 = fmul double %mul25, %conv26, !dbg !7417
  %conv28 = fptrunc double %mul27 to float, !dbg !7418
  %21 = load float, float* %Da, align 4, !dbg !7419
  %call29 = call float @PinLight(float %conv22, float %17, float %conv28, float %21), !dbg !7420
  %mul30 = fmul float %13, %call29, !dbg !7421
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7422
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 5, !dbg !7423
  store float %mul30, float* %red31, align 8, !dbg !7424
  %23 = load float, float* %gamma, align 4, !dbg !7425
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7426
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 6, !dbg !7427
  %25 = load float, float* %green, align 4, !dbg !7427
  %conv32 = fpext float %25 to double, !dbg !7426
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !7428
  %26 = load float, float* %Sa, align 4, !dbg !7429
  %conv34 = fpext float %26 to double, !dbg !7429
  %mul35 = fmul double %mul33, %conv34, !dbg !7430
  %conv36 = fptrunc double %mul35 to float, !dbg !7431
  %27 = load float, float* %Sa, align 4, !dbg !7432
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7433
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !7434
  %29 = load float, float* %green37, align 4, !dbg !7434
  %conv38 = fpext float %29 to double, !dbg !7433
  %mul39 = fmul double 0x3EF0001000100010, %conv38, !dbg !7435
  %30 = load float, float* %Da, align 4, !dbg !7436
  %conv40 = fpext float %30 to double, !dbg !7436
  %mul41 = fmul double %mul39, %conv40, !dbg !7437
  %conv42 = fptrunc double %mul41 to float, !dbg !7438
  %31 = load float, float* %Da, align 4, !dbg !7439
  %call43 = call float @PinLight(float %conv36, float %27, float %conv42, float %31), !dbg !7440
  %mul44 = fmul float %23, %call43, !dbg !7441
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7442
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 6, !dbg !7443
  store float %mul44, float* %green45, align 4, !dbg !7444
  %33 = load float, float* %gamma, align 4, !dbg !7445
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7446
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !7447
  %35 = load float, float* %blue, align 8, !dbg !7447
  %conv46 = fpext float %35 to double, !dbg !7446
  %mul47 = fmul double 0x3EF0001000100010, %conv46, !dbg !7448
  %36 = load float, float* %Sa, align 4, !dbg !7449
  %conv48 = fpext float %36 to double, !dbg !7449
  %mul49 = fmul double %mul47, %conv48, !dbg !7450
  %conv50 = fptrunc double %mul49 to float, !dbg !7451
  %37 = load float, float* %Sa, align 4, !dbg !7452
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7453
  %blue51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !7454
  %39 = load float, float* %blue51, align 8, !dbg !7454
  %conv52 = fpext float %39 to double, !dbg !7453
  %mul53 = fmul double 0x3EF0001000100010, %conv52, !dbg !7455
  %40 = load float, float* %Da, align 4, !dbg !7456
  %conv54 = fpext float %40 to double, !dbg !7456
  %mul55 = fmul double %mul53, %conv54, !dbg !7457
  %conv56 = fptrunc double %mul55 to float, !dbg !7458
  %41 = load float, float* %Da, align 4, !dbg !7459
  %call57 = call float @PinLight(float %conv50, float %37, float %conv56, float %41), !dbg !7460
  %mul58 = fmul float %33, %call57, !dbg !7461
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7462
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !7463
  store float %mul58, float* %blue59, align 8, !dbg !7464
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7465
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i32 0, i32 1, !dbg !7467
  %44 = load i32, i32* %colorspace, align 4, !dbg !7467
  %cmp60 = icmp eq i32 %44, 12, !dbg !7468
  br i1 %cmp60, label %if.then, label %if.end, !dbg !7469

if.then:                                          ; preds = %cond.end
  %45 = load float, float* %gamma, align 4, !dbg !7470
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7471
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !7472
  %47 = load float, float* %index, align 8, !dbg !7472
  %conv62 = fpext float %47 to double, !dbg !7471
  %mul63 = fmul double 0x3EF0001000100010, %conv62, !dbg !7473
  %48 = load float, float* %Sa, align 4, !dbg !7474
  %conv64 = fpext float %48 to double, !dbg !7474
  %mul65 = fmul double %mul63, %conv64, !dbg !7475
  %conv66 = fptrunc double %mul65 to float, !dbg !7476
  %49 = load float, float* %Sa, align 4, !dbg !7477
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7478
  %index67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !7479
  %51 = load float, float* %index67, align 8, !dbg !7479
  %conv68 = fpext float %51 to double, !dbg !7478
  %mul69 = fmul double 0x3EF0001000100010, %conv68, !dbg !7480
  %52 = load float, float* %Da, align 4, !dbg !7481
  %conv70 = fpext float %52 to double, !dbg !7481
  %mul71 = fmul double %mul69, %conv70, !dbg !7482
  %conv72 = fptrunc double %mul71 to float, !dbg !7483
  %53 = load float, float* %Da, align 4, !dbg !7484
  %call73 = call float @PinLight(float %conv66, float %49, float %conv72, float %53), !dbg !7485
  %mul74 = fmul float %45, %call73, !dbg !7486
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7487
  %index75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 9, !dbg !7488
  store float %mul74, float* %index75, align 8, !dbg !7489
  br label %if.end, !dbg !7487

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !7490
}

declare dso_local i32 @IsMagickColorSimilar(%struct._MagickPixelPacket*, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeBumpmap(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket* %composite) #0 !dbg !7491 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %intensity = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7494, metadata !DIExpression()), !dbg !7495
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !7498, metadata !DIExpression()), !dbg !7499
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7500
  %call = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %0), !dbg !7501
  store float %call, float* %intensity, align 4, !dbg !7502
  %1 = load float, float* %intensity, align 4, !dbg !7503
  %conv = fpext float %1 to double, !dbg !7503
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !7504
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7505
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !7506
  %3 = load float, float* %red, align 8, !dbg !7506
  %conv1 = fpext float %3 to double, !dbg !7505
  %mul2 = fmul double %mul, %conv1, !dbg !7507
  %conv3 = fptrunc double %mul2 to float, !dbg !7508
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7509
  %red4 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !7510
  store float %conv3, float* %red4, align 8, !dbg !7511
  %5 = load float, float* %intensity, align 4, !dbg !7512
  %conv5 = fpext float %5 to double, !dbg !7512
  %mul6 = fmul double 0x3EF0001000100010, %conv5, !dbg !7513
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7514
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !7515
  %7 = load float, float* %green, align 4, !dbg !7515
  %conv7 = fpext float %7 to double, !dbg !7514
  %mul8 = fmul double %mul6, %conv7, !dbg !7516
  %conv9 = fptrunc double %mul8 to float, !dbg !7517
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7518
  %green10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 6, !dbg !7519
  store float %conv9, float* %green10, align 4, !dbg !7520
  %9 = load float, float* %intensity, align 4, !dbg !7521
  %conv11 = fpext float %9 to double, !dbg !7521
  %mul12 = fmul double 0x3EF0001000100010, %conv11, !dbg !7522
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7523
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 7, !dbg !7524
  %11 = load float, float* %blue, align 8, !dbg !7524
  %conv13 = fpext float %11 to double, !dbg !7523
  %mul14 = fmul double %mul12, %conv13, !dbg !7525
  %conv15 = fptrunc double %mul14 to float, !dbg !7526
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7527
  %blue16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 7, !dbg !7528
  store float %conv15, float* %blue16, align 8, !dbg !7529
  %13 = load float, float* %intensity, align 4, !dbg !7530
  %mul17 = fmul float 0x3EF0001000000000, %13, !dbg !7531
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7532
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 8, !dbg !7533
  %15 = load float, float* %opacity, align 4, !dbg !7533
  %mul18 = fmul float %mul17, %15, !dbg !7534
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7535
  %opacity19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 8, !dbg !7536
  store float %mul18, float* %opacity19, align 4, !dbg !7537
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7538
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 1, !dbg !7540
  %18 = load i32, i32* %colorspace, align 4, !dbg !7540
  %cmp = icmp eq i32 %18, 12, !dbg !7541
  br i1 %cmp, label %if.then, label %if.end, !dbg !7542

if.then:                                          ; preds = %entry
  %19 = load float, float* %intensity, align 4, !dbg !7543
  %conv21 = fpext float %19 to double, !dbg !7543
  %mul22 = fmul double 0x3EF0001000100010, %conv21, !dbg !7544
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7545
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 9, !dbg !7546
  %21 = load float, float* %index, align 8, !dbg !7546
  %conv23 = fpext float %21 to double, !dbg !7545
  %mul24 = fmul double %mul22, %conv23, !dbg !7547
  %conv25 = fptrunc double %mul24 to float, !dbg !7548
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7549
  %index26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 9, !dbg !7550
  store float %conv25, float* %index26, align 8, !dbg !7551
  br label %if.end, !dbg !7549

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !7553 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7564
  %1 = load float, float* %alpha.addr, align 4, !dbg !7565
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7566
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !7567
  %3 = load float, float* %opacity, align 4, !dbg !7567
  %sub = fsub float 6.553500e+04, %3, !dbg !7568
  %mul = fmul float %1, %sub, !dbg !7569
  %sub1 = fsub float 6.553500e+04, %mul, !dbg !7570
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7571
  %5 = load float, float* %beta.addr, align 4, !dbg !7572
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7573
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 8, !dbg !7574
  %7 = load float, float* %opacity2, align 4, !dbg !7574
  %sub3 = fsub float 6.553500e+04, %7, !dbg !7575
  %mul4 = fmul float %5, %sub3, !dbg !7576
  %sub5 = fsub float 6.553500e+04, %mul4, !dbg !7577
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7578
  call void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %0, float %sub1, %struct._MagickPixelPacket* %4, float %sub5, %struct._MagickPixelPacket* %8), !dbg !7579
  ret void, !dbg !7580
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeThreshold(%struct._MagickPixelPacket* %p, %struct._MagickPixelPacket* %q, float %threshold, float %amount, %struct._MagickPixelPacket* %composite) #0 !dbg !7581 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %threshold.addr = alloca float, align 4
  %amount.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  store float %amount, float* %amount.addr, align 4
  call void @llvm.dbg.declare(metadata float* %amount.addr, metadata !7590, metadata !DIExpression()), !dbg !7591
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7594
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !7595
  %1 = load float, float* %red, align 8, !dbg !7595
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7596
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !7597
  %3 = load float, float* %red1, align 8, !dbg !7597
  %4 = load float, float* %threshold.addr, align 4, !dbg !7598
  %5 = load float, float* %amount.addr, align 4, !dbg !7599
  %call = call float @Threshold(float %1, float %3, float %4, float %5), !dbg !7600
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7601
  %red2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 5, !dbg !7602
  store float %call, float* %red2, align 8, !dbg !7603
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7604
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %7, i32 0, i32 6, !dbg !7605
  %8 = load float, float* %green, align 4, !dbg !7605
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7606
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 6, !dbg !7607
  %10 = load float, float* %green3, align 4, !dbg !7607
  %11 = load float, float* %threshold.addr, align 4, !dbg !7608
  %12 = load float, float* %amount.addr, align 4, !dbg !7609
  %call4 = call float @Threshold(float %8, float %10, float %11, float %12), !dbg !7610
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7611
  %green5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 6, !dbg !7612
  store float %call4, float* %green5, align 4, !dbg !7613
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7614
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 7, !dbg !7615
  %15 = load float, float* %blue, align 8, !dbg !7615
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7616
  %blue6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 7, !dbg !7617
  %17 = load float, float* %blue6, align 8, !dbg !7617
  %18 = load float, float* %threshold.addr, align 4, !dbg !7618
  %19 = load float, float* %amount.addr, align 4, !dbg !7619
  %call7 = call float @Threshold(float %15, float %17, float %18, float %19), !dbg !7620
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7621
  %blue8 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 7, !dbg !7622
  store float %call7, float* %blue8, align 8, !dbg !7623
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7624
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %21, i32 0, i32 8, !dbg !7625
  %22 = load float, float* %opacity, align 4, !dbg !7625
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7626
  %opacity9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 8, !dbg !7627
  %24 = load float, float* %opacity9, align 4, !dbg !7627
  %25 = load float, float* %threshold.addr, align 4, !dbg !7628
  %26 = load float, float* %amount.addr, align 4, !dbg !7629
  %call10 = call float @Threshold(float %22, float %24, float %25, float %26), !dbg !7630
  %sub = fsub float 6.553500e+04, %call10, !dbg !7631
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7632
  %opacity11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 8, !dbg !7633
  store float %sub, float* %opacity11, align 4, !dbg !7634
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7635
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 1, !dbg !7637
  %29 = load i32, i32* %colorspace, align 4, !dbg !7637
  %cmp = icmp eq i32 %29, 12, !dbg !7638
  br i1 %cmp, label %if.then, label %if.end, !dbg !7639

if.then:                                          ; preds = %entry
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !7640
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 9, !dbg !7641
  %31 = load float, float* %index, align 8, !dbg !7641
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !7642
  %index12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 9, !dbg !7643
  %33 = load float, float* %index12, align 8, !dbg !7643
  %34 = load float, float* %threshold.addr, align 4, !dbg !7644
  %35 = load float, float* %amount.addr, align 4, !dbg !7645
  %call13 = call float @Threshold(float %31, float %33, float %34, float %35), !dbg !7646
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !7647
  %index14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 9, !dbg !7648
  store float %call13, float* %index14, align 8, !dbg !7649
  br label %if.end, !dbg !7647

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7650
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %pixel) #0 !dbg !7651 {
entry:
  %retval = alloca i16, align 2
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7657
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !7659
  %1 = load i32, i32* %colorspace, align 4, !dbg !7659
  %cmp = icmp eq i32 %1, 2, !dbg !7660
  br i1 %cmp, label %if.then, label %if.end, !dbg !7661

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7662
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !7663
  %3 = load float, float* %red, align 8, !dbg !7663
  %call = call zeroext i16 @ClampToQuantum(float %3), !dbg !7664
  store i16 %call, i16* %retval, align 2, !dbg !7665
  br label %return, !dbg !7665

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7666
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !7667
  %5 = load float, float* %red1, align 8, !dbg !7667
  %conv = fpext float %5 to double, !dbg !7666
  %mul = fmul double 2.126560e-01, %conv, !dbg !7668
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7669
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !7670
  %7 = load float, float* %green, align 4, !dbg !7670
  %conv2 = fpext float %7 to double, !dbg !7669
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !7671
  %add = fadd double %mul, %mul3, !dbg !7672
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7673
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !7674
  %9 = load float, float* %blue, align 8, !dbg !7674
  %conv4 = fpext float %9 to double, !dbg !7673
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !7675
  %add6 = fadd double %add, %mul5, !dbg !7676
  %conv7 = fptrunc double %add6 to float, !dbg !7677
  %call8 = call zeroext i16 @ClampToQuantum(float %conv7), !dbg !7678
  store i16 %call8, i16* %retval, align 2, !dbg !7679
  br label %return, !dbg !7679

return:                                           ; preds = %if.end, %if.then
  %10 = load i16, i16* %retval, align 2, !dbg !7680
  ret i16 %10, !dbg !7680
}

; Function Attrs: noinline nounwind uwtable
define internal void @CompositeHCL(float %red, float %green, float %blue, double* %hue, double* %chroma, double* %luma) #0 !dbg !7681 {
entry:
  %red.addr = alloca float, align 4
  %green.addr = alloca float, align 4
  %blue.addr = alloca float, align 4
  %hue.addr = alloca double*, align 8
  %chroma.addr = alloca double*, align 8
  %luma.addr = alloca double*, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %g = alloca double, align 8
  %h = alloca double, align 8
  %max = alloca double, align 8
  %r = alloca double, align 8
  store float %red, float* %red.addr, align 4
  call void @llvm.dbg.declare(metadata float* %red.addr, metadata !7685, metadata !DIExpression()), !dbg !7686
  store float %green, float* %green.addr, align 4
  call void @llvm.dbg.declare(metadata float* %green.addr, metadata !7687, metadata !DIExpression()), !dbg !7688
  store float %blue, float* %blue.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blue.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  store double* %hue, double** %hue.addr, align 8
  call void @llvm.dbg.declare(metadata double** %hue.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  store double* %chroma, double** %chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double** %chroma.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  store double* %luma, double** %luma.addr, align 8
  call void @llvm.dbg.declare(metadata double** %luma.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata double* %b, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.declare(metadata double* %c, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata double* %g, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata double* %h, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.declare(metadata double* %max, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.declare(metadata double* %r, metadata !7707, metadata !DIExpression()), !dbg !7708
  %0 = load float, float* %red.addr, align 4, !dbg !7709
  %conv = fpext float %0 to double, !dbg !7710
  store double %conv, double* %r, align 8, !dbg !7711
  %1 = load float, float* %green.addr, align 4, !dbg !7712
  %conv1 = fpext float %1 to double, !dbg !7713
  store double %conv1, double* %g, align 8, !dbg !7714
  %2 = load float, float* %blue.addr, align 4, !dbg !7715
  %conv2 = fpext float %2 to double, !dbg !7716
  store double %conv2, double* %b, align 8, !dbg !7717
  %3 = load double, double* %r, align 8, !dbg !7718
  %4 = load double, double* %g, align 8, !dbg !7719
  %5 = load double, double* %b, align 8, !dbg !7720
  %call = call double @MagickMax(double %4, double %5), !dbg !7721
  %call3 = call double @MagickMax(double %3, double %call), !dbg !7722
  store double %call3, double* %max, align 8, !dbg !7723
  %6 = load double, double* %max, align 8, !dbg !7724
  %7 = load double, double* %r, align 8, !dbg !7725
  %8 = load double, double* %g, align 8, !dbg !7726
  %9 = load double, double* %b, align 8, !dbg !7727
  %call4 = call double @MagickMin(double %8, double %9), !dbg !7728
  %call5 = call double @MagickMin(double %7, double %call4), !dbg !7729
  %sub = fsub double %6, %call5, !dbg !7730
  store double %sub, double* %c, align 8, !dbg !7731
  store double 0.000000e+00, double* %h, align 8, !dbg !7732
  %10 = load double, double* %c, align 8, !dbg !7733
  %cmp = fcmp oeq double %10, 0.000000e+00, !dbg !7735
  br i1 %cmp, label %if.then, label %if.else, !dbg !7736

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %h, align 8, !dbg !7737
  br label %if.end31, !dbg !7738

if.else:                                          ; preds = %entry
  %11 = load float, float* %red.addr, align 4, !dbg !7739
  %12 = load double, double* %max, align 8, !dbg !7741
  %conv7 = fptrunc double %12 to float, !dbg !7742
  %cmp8 = fcmp oeq float %11, %conv7, !dbg !7743
  br i1 %cmp8, label %if.then10, label %if.else13, !dbg !7744

if.then10:                                        ; preds = %if.else
  %13 = load double, double* %g, align 8, !dbg !7745
  %14 = load double, double* %b, align 8, !dbg !7746
  %sub11 = fsub double %13, %14, !dbg !7747
  %15 = load double, double* %c, align 8, !dbg !7748
  %div = fdiv double %sub11, %15, !dbg !7749
  %add = fadd double %div, 6.000000e+00, !dbg !7750
  %call12 = call double @fmod(double %add, double 6.000000e+00) #5, !dbg !7751
  store double %call12, double* %h, align 8, !dbg !7752
  br label %if.end30, !dbg !7753

if.else13:                                        ; preds = %if.else
  %16 = load float, float* %green.addr, align 4, !dbg !7754
  %17 = load double, double* %max, align 8, !dbg !7756
  %conv14 = fptrunc double %17 to float, !dbg !7757
  %cmp15 = fcmp oeq float %16, %conv14, !dbg !7758
  br i1 %cmp15, label %if.then17, label %if.else21, !dbg !7759

if.then17:                                        ; preds = %if.else13
  %18 = load double, double* %b, align 8, !dbg !7760
  %19 = load double, double* %r, align 8, !dbg !7761
  %sub18 = fsub double %18, %19, !dbg !7762
  %20 = load double, double* %c, align 8, !dbg !7763
  %div19 = fdiv double %sub18, %20, !dbg !7764
  %add20 = fadd double %div19, 2.000000e+00, !dbg !7765
  store double %add20, double* %h, align 8, !dbg !7766
  br label %if.end29, !dbg !7767

if.else21:                                        ; preds = %if.else13
  %21 = load float, float* %blue.addr, align 4, !dbg !7768
  %22 = load double, double* %max, align 8, !dbg !7770
  %conv22 = fptrunc double %22 to float, !dbg !7771
  %cmp23 = fcmp oeq float %21, %conv22, !dbg !7772
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !7773

if.then25:                                        ; preds = %if.else21
  %23 = load double, double* %r, align 8, !dbg !7774
  %24 = load double, double* %g, align 8, !dbg !7775
  %sub26 = fsub double %23, %24, !dbg !7776
  %25 = load double, double* %c, align 8, !dbg !7777
  %div27 = fdiv double %sub26, %25, !dbg !7778
  %add28 = fadd double %div27, 4.000000e+00, !dbg !7779
  store double %add28, double* %h, align 8, !dbg !7780
  br label %if.end, !dbg !7781

if.end:                                           ; preds = %if.then25, %if.else21
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then17
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then10
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %26 = load double, double* %h, align 8, !dbg !7782
  %div32 = fdiv double %26, 6.000000e+00, !dbg !7783
  %27 = load double*, double** %hue.addr, align 8, !dbg !7784
  store double %div32, double* %27, align 8, !dbg !7785
  %28 = load double, double* %c, align 8, !dbg !7786
  %mul = fmul double 0x3EF0001000100010, %28, !dbg !7787
  %29 = load double*, double** %chroma.addr, align 8, !dbg !7788
  store double %mul, double* %29, align 8, !dbg !7789
  %30 = load double, double* %r, align 8, !dbg !7790
  %mul33 = fmul double 2.988390e-01, %30, !dbg !7791
  %31 = load double, double* %g, align 8, !dbg !7792
  %mul34 = fmul double 5.868110e-01, %31, !dbg !7793
  %add35 = fadd double %mul33, %mul34, !dbg !7794
  %32 = load double, double* %b, align 8, !dbg !7795
  %mul36 = fmul double 1.143500e-01, %32, !dbg !7796
  %add37 = fadd double %add35, %mul36, !dbg !7797
  %mul38 = fmul double 0x3EF0001000100010, %add37, !dbg !7798
  %33 = load double*, double** %luma.addr, align 8, !dbg !7799
  store double %mul38, double* %33, align 8, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: noinline nounwind uwtable
define internal void @HCLComposite(double %hue, double %chroma, double %luma, float* %red, float* %green, float* %blue) #0 !dbg !7802 {
entry:
  %hue.addr = alloca double, align 8
  %chroma.addr = alloca double, align 8
  %luma.addr = alloca double, align 8
  %red.addr = alloca float*, align 8
  %green.addr = alloca float*, align 8
  %blue.addr = alloca float*, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %g = alloca double, align 8
  %h = alloca double, align 8
  %m = alloca double, align 8
  %r = alloca double, align 8
  %x = alloca double, align 8
  store double %hue, double* %hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %hue.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  store double %chroma, double* %chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %chroma.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store double %luma, double* %luma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %luma.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  store float* %red, float** %red.addr, align 8
  call void @llvm.dbg.declare(metadata float** %red.addr, metadata !7812, metadata !DIExpression()), !dbg !7813
  store float* %green, float** %green.addr, align 8
  call void @llvm.dbg.declare(metadata float** %green.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store float* %blue, float** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata float** %blue.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.declare(metadata double* %b, metadata !7818, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.declare(metadata double* %c, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.declare(metadata double* %g, metadata !7822, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.declare(metadata double* %h, metadata !7824, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.declare(metadata double* %m, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata double* %r, metadata !7828, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.declare(metadata double* %x, metadata !7830, metadata !DIExpression()), !dbg !7831
  %0 = load double, double* %hue.addr, align 8, !dbg !7832
  %mul = fmul double 6.000000e+00, %0, !dbg !7833
  store double %mul, double* %h, align 8, !dbg !7834
  %1 = load double, double* %chroma.addr, align 8, !dbg !7835
  store double %1, double* %c, align 8, !dbg !7836
  %2 = load double, double* %c, align 8, !dbg !7837
  %3 = load double, double* %h, align 8, !dbg !7838
  %call = call double @fmod(double %3, double 2.000000e+00) #5, !dbg !7839
  %sub = fsub double %call, 1.000000e+00, !dbg !7840
  %4 = call double @llvm.fabs.f64(double %sub), !dbg !7841
  %sub1 = fsub double 1.000000e+00, %4, !dbg !7842
  %mul2 = fmul double %2, %sub1, !dbg !7843
  store double %mul2, double* %x, align 8, !dbg !7844
  store double 0.000000e+00, double* %r, align 8, !dbg !7845
  store double 0.000000e+00, double* %g, align 8, !dbg !7846
  store double 0.000000e+00, double* %b, align 8, !dbg !7847
  %5 = load double, double* %h, align 8, !dbg !7848
  %cmp = fcmp ole double 0.000000e+00, %5, !dbg !7850
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7851

land.lhs.true:                                    ; preds = %entry
  %6 = load double, double* %h, align 8, !dbg !7852
  %cmp3 = fcmp olt double %6, 1.000000e+00, !dbg !7853
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7854

if.then:                                          ; preds = %land.lhs.true
  %7 = load double, double* %c, align 8, !dbg !7855
  store double %7, double* %r, align 8, !dbg !7857
  %8 = load double, double* %x, align 8, !dbg !7858
  store double %8, double* %g, align 8, !dbg !7859
  br label %if.end32, !dbg !7860

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load double, double* %h, align 8, !dbg !7861
  %cmp4 = fcmp ole double 1.000000e+00, %9, !dbg !7863
  br i1 %cmp4, label %land.lhs.true5, label %if.else8, !dbg !7864

land.lhs.true5:                                   ; preds = %if.else
  %10 = load double, double* %h, align 8, !dbg !7865
  %cmp6 = fcmp olt double %10, 2.000000e+00, !dbg !7866
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !7867

if.then7:                                         ; preds = %land.lhs.true5
  %11 = load double, double* %x, align 8, !dbg !7868
  store double %11, double* %r, align 8, !dbg !7870
  %12 = load double, double* %c, align 8, !dbg !7871
  store double %12, double* %g, align 8, !dbg !7872
  br label %if.end31, !dbg !7873

if.else8:                                         ; preds = %land.lhs.true5, %if.else
  %13 = load double, double* %h, align 8, !dbg !7874
  %cmp9 = fcmp ole double 2.000000e+00, %13, !dbg !7876
  br i1 %cmp9, label %land.lhs.true10, label %if.else13, !dbg !7877

land.lhs.true10:                                  ; preds = %if.else8
  %14 = load double, double* %h, align 8, !dbg !7878
  %cmp11 = fcmp olt double %14, 3.000000e+00, !dbg !7879
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !7880

if.then12:                                        ; preds = %land.lhs.true10
  %15 = load double, double* %c, align 8, !dbg !7881
  store double %15, double* %g, align 8, !dbg !7883
  %16 = load double, double* %x, align 8, !dbg !7884
  store double %16, double* %b, align 8, !dbg !7885
  br label %if.end30, !dbg !7886

if.else13:                                        ; preds = %land.lhs.true10, %if.else8
  %17 = load double, double* %h, align 8, !dbg !7887
  %cmp14 = fcmp ole double 3.000000e+00, %17, !dbg !7889
  br i1 %cmp14, label %land.lhs.true15, label %if.else18, !dbg !7890

land.lhs.true15:                                  ; preds = %if.else13
  %18 = load double, double* %h, align 8, !dbg !7891
  %cmp16 = fcmp olt double %18, 4.000000e+00, !dbg !7892
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !7893

if.then17:                                        ; preds = %land.lhs.true15
  %19 = load double, double* %x, align 8, !dbg !7894
  store double %19, double* %g, align 8, !dbg !7896
  %20 = load double, double* %c, align 8, !dbg !7897
  store double %20, double* %b, align 8, !dbg !7898
  br label %if.end29, !dbg !7899

if.else18:                                        ; preds = %land.lhs.true15, %if.else13
  %21 = load double, double* %h, align 8, !dbg !7900
  %cmp19 = fcmp ole double 4.000000e+00, %21, !dbg !7902
  br i1 %cmp19, label %land.lhs.true20, label %if.else23, !dbg !7903

land.lhs.true20:                                  ; preds = %if.else18
  %22 = load double, double* %h, align 8, !dbg !7904
  %cmp21 = fcmp olt double %22, 5.000000e+00, !dbg !7905
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !7906

if.then22:                                        ; preds = %land.lhs.true20
  %23 = load double, double* %x, align 8, !dbg !7907
  store double %23, double* %r, align 8, !dbg !7909
  %24 = load double, double* %c, align 8, !dbg !7910
  store double %24, double* %b, align 8, !dbg !7911
  br label %if.end28, !dbg !7912

if.else23:                                        ; preds = %land.lhs.true20, %if.else18
  %25 = load double, double* %h, align 8, !dbg !7913
  %cmp24 = fcmp ole double 5.000000e+00, %25, !dbg !7915
  br i1 %cmp24, label %land.lhs.true25, label %if.end, !dbg !7916

land.lhs.true25:                                  ; preds = %if.else23
  %26 = load double, double* %h, align 8, !dbg !7917
  %cmp26 = fcmp olt double %26, 6.000000e+00, !dbg !7918
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !7919

if.then27:                                        ; preds = %land.lhs.true25
  %27 = load double, double* %c, align 8, !dbg !7920
  store double %27, double* %r, align 8, !dbg !7922
  %28 = load double, double* %x, align 8, !dbg !7923
  store double %28, double* %b, align 8, !dbg !7924
  br label %if.end, !dbg !7925

if.end:                                           ; preds = %if.then27, %land.lhs.true25, %if.else23
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then22
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then17
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then12
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then7
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then
  %29 = load double, double* %luma.addr, align 8, !dbg !7926
  %30 = load double, double* %r, align 8, !dbg !7927
  %mul33 = fmul double 2.988390e-01, %30, !dbg !7928
  %31 = load double, double* %g, align 8, !dbg !7929
  %mul34 = fmul double 5.868110e-01, %31, !dbg !7930
  %add = fadd double %mul33, %mul34, !dbg !7931
  %32 = load double, double* %b, align 8, !dbg !7932
  %mul35 = fmul double 1.143500e-01, %32, !dbg !7933
  %add36 = fadd double %add, %mul35, !dbg !7934
  %sub37 = fsub double %29, %add36, !dbg !7935
  store double %sub37, double* %m, align 8, !dbg !7936
  %33 = load double, double* %r, align 8, !dbg !7937
  %34 = load double, double* %m, align 8, !dbg !7938
  %add38 = fadd double %33, %34, !dbg !7939
  %mul39 = fmul double 6.553500e+04, %add38, !dbg !7940
  %conv = fptrunc double %mul39 to float, !dbg !7941
  %35 = load float*, float** %red.addr, align 8, !dbg !7942
  store float %conv, float* %35, align 4, !dbg !7943
  %36 = load double, double* %g, align 8, !dbg !7944
  %37 = load double, double* %m, align 8, !dbg !7945
  %add40 = fadd double %36, %37, !dbg !7946
  %mul41 = fmul double 6.553500e+04, %add40, !dbg !7947
  %conv42 = fptrunc double %mul41 to float, !dbg !7948
  %38 = load float*, float** %green.addr, align 8, !dbg !7949
  store float %conv42, float* %38, align 4, !dbg !7950
  %39 = load double, double* %b, align 8, !dbg !7951
  %40 = load double, double* %m, align 8, !dbg !7952
  %add43 = fadd double %39, %40, !dbg !7953
  %mul44 = fmul double 6.553500e+04, %add43, !dbg !7954
  %conv45 = fptrunc double %mul44 to float, !dbg !7955
  %41 = load float*, float** %blue.addr, align 8, !dbg !7956
  store float %conv45, float* %41, align 4, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %pixel) #0 !dbg !7959 {
entry:
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %black = alloca float, align 4
  %blue = alloca float, align 4
  %cyan = alloca float, align 4
  %green = alloca float, align 4
  %magenta = alloca float, align 4
  %red = alloca float, align 4
  %yellow = alloca float, align 4
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata float* %black, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata float* %blue, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata float* %cyan, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.declare(metadata float* %green, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata float* %magenta, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata float* %red, metadata !7974, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata float* %yellow, metadata !7976, metadata !DIExpression()), !dbg !7977
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7978
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !7980
  %1 = load i32, i32* %colorspace, align 4, !dbg !7980
  %cmp = icmp ne i32 %1, 13, !dbg !7981
  br i1 %cmp, label %if.then, label %if.else, !dbg !7982

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7983
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !7985
  %3 = load float, float* %red1, align 8, !dbg !7985
  %conv = fpext float %3 to double, !dbg !7983
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !7986
  %conv2 = fptrunc double %mul to float, !dbg !7987
  store float %conv2, float* %red, align 4, !dbg !7988
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7989
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 6, !dbg !7990
  %5 = load float, float* %green3, align 4, !dbg !7990
  %conv4 = fpext float %5 to double, !dbg !7989
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !7991
  %conv6 = fptrunc double %mul5 to float, !dbg !7992
  store float %conv6, float* %green, align 4, !dbg !7993
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !7994
  %blue7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !7995
  %7 = load float, float* %blue7, align 8, !dbg !7995
  %conv8 = fpext float %7 to double, !dbg !7994
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !7996
  %conv10 = fptrunc double %mul9 to float, !dbg !7997
  store float %conv10, float* %blue, align 4, !dbg !7998
  br label %if.end, !dbg !7999

if.else:                                          ; preds = %entry
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8000
  %red11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 5, !dbg !8002
  %9 = load float, float* %red11, align 8, !dbg !8002
  %call = call float @DecodePixelGamma(float %9), !dbg !8003
  store float %call, float* %red, align 4, !dbg !8004
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8005
  %green12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 6, !dbg !8006
  %11 = load float, float* %green12, align 4, !dbg !8006
  %call13 = call float @DecodePixelGamma(float %11), !dbg !8007
  store float %call13, float* %green, align 4, !dbg !8008
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8009
  %blue14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 7, !dbg !8010
  %13 = load float, float* %blue14, align 8, !dbg !8010
  %call15 = call float @DecodePixelGamma(float %13), !dbg !8011
  store float %call15, float* %blue, align 4, !dbg !8012
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load float, float* %red, align 4, !dbg !8013
  %conv16 = fpext float %14 to double, !dbg !8013
  %15 = call double @llvm.fabs.f64(double %conv16), !dbg !8015
  %cmp17 = fcmp olt double %15, 1.000000e-15, !dbg !8016
  br i1 %cmp17, label %land.lhs.true, label %if.end27, !dbg !8017

land.lhs.true:                                    ; preds = %if.end
  %16 = load float, float* %green, align 4, !dbg !8018
  %conv19 = fpext float %16 to double, !dbg !8018
  %17 = call double @llvm.fabs.f64(double %conv19), !dbg !8019
  %cmp20 = fcmp olt double %17, 1.000000e-15, !dbg !8020
  br i1 %cmp20, label %land.lhs.true22, label %if.end27, !dbg !8021

land.lhs.true22:                                  ; preds = %land.lhs.true
  %18 = load float, float* %blue, align 4, !dbg !8022
  %conv23 = fpext float %18 to double, !dbg !8022
  %19 = call double @llvm.fabs.f64(double %conv23), !dbg !8023
  %cmp24 = fcmp olt double %19, 1.000000e-15, !dbg !8024
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !8025

if.then26:                                        ; preds = %land.lhs.true22
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8026
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 9, !dbg !8028
  store float 6.553500e+04, float* %index, align 8, !dbg !8029
  br label %return, !dbg !8030

if.end27:                                         ; preds = %land.lhs.true22, %land.lhs.true, %if.end
  %21 = load float, float* %red, align 4, !dbg !8031
  %conv28 = fpext float %21 to double, !dbg !8031
  %sub = fsub double 1.000000e+00, %conv28, !dbg !8032
  %conv29 = fptrunc double %sub to float, !dbg !8033
  store float %conv29, float* %cyan, align 4, !dbg !8034
  %22 = load float, float* %green, align 4, !dbg !8035
  %conv30 = fpext float %22 to double, !dbg !8035
  %sub31 = fsub double 1.000000e+00, %conv30, !dbg !8036
  %conv32 = fptrunc double %sub31 to float, !dbg !8037
  store float %conv32, float* %magenta, align 4, !dbg !8038
  %23 = load float, float* %blue, align 4, !dbg !8039
  %conv33 = fpext float %23 to double, !dbg !8039
  %sub34 = fsub double 1.000000e+00, %conv33, !dbg !8040
  %conv35 = fptrunc double %sub34 to float, !dbg !8041
  store float %conv35, float* %yellow, align 4, !dbg !8042
  %24 = load float, float* %cyan, align 4, !dbg !8043
  store float %24, float* %black, align 4, !dbg !8044
  %25 = load float, float* %magenta, align 4, !dbg !8045
  %26 = load float, float* %black, align 4, !dbg !8047
  %cmp36 = fcmp olt float %25, %26, !dbg !8048
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !8049

if.then38:                                        ; preds = %if.end27
  %27 = load float, float* %magenta, align 4, !dbg !8050
  store float %27, float* %black, align 4, !dbg !8051
  br label %if.end39, !dbg !8052

if.end39:                                         ; preds = %if.then38, %if.end27
  %28 = load float, float* %yellow, align 4, !dbg !8053
  %29 = load float, float* %black, align 4, !dbg !8055
  %cmp40 = fcmp olt float %28, %29, !dbg !8056
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !8057

if.then42:                                        ; preds = %if.end39
  %30 = load float, float* %yellow, align 4, !dbg !8058
  store float %30, float* %black, align 4, !dbg !8059
  br label %if.end43, !dbg !8060

if.end43:                                         ; preds = %if.then42, %if.end39
  %31 = load float, float* %cyan, align 4, !dbg !8061
  %32 = load float, float* %black, align 4, !dbg !8062
  %sub44 = fsub float %31, %32, !dbg !8063
  %conv45 = fpext float %sub44 to double, !dbg !8064
  %33 = load float, float* %black, align 4, !dbg !8065
  %conv46 = fpext float %33 to double, !dbg !8065
  %sub47 = fsub double 1.000000e+00, %conv46, !dbg !8066
  %div = fdiv double %conv45, %sub47, !dbg !8067
  %conv48 = fptrunc double %div to float, !dbg !8068
  store float %conv48, float* %cyan, align 4, !dbg !8069
  %34 = load float, float* %magenta, align 4, !dbg !8070
  %35 = load float, float* %black, align 4, !dbg !8071
  %sub49 = fsub float %34, %35, !dbg !8072
  %conv50 = fpext float %sub49 to double, !dbg !8073
  %36 = load float, float* %black, align 4, !dbg !8074
  %conv51 = fpext float %36 to double, !dbg !8074
  %sub52 = fsub double 1.000000e+00, %conv51, !dbg !8075
  %div53 = fdiv double %conv50, %sub52, !dbg !8076
  %conv54 = fptrunc double %div53 to float, !dbg !8077
  store float %conv54, float* %magenta, align 4, !dbg !8078
  %37 = load float, float* %yellow, align 4, !dbg !8079
  %38 = load float, float* %black, align 4, !dbg !8080
  %sub55 = fsub float %37, %38, !dbg !8081
  %conv56 = fpext float %sub55 to double, !dbg !8082
  %39 = load float, float* %black, align 4, !dbg !8083
  %conv57 = fpext float %39 to double, !dbg !8083
  %sub58 = fsub double 1.000000e+00, %conv57, !dbg !8084
  %div59 = fdiv double %conv56, %sub58, !dbg !8085
  %conv60 = fptrunc double %div59 to float, !dbg !8086
  store float %conv60, float* %yellow, align 4, !dbg !8087
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8088
  %colorspace61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 1, !dbg !8089
  store i32 12, i32* %colorspace61, align 4, !dbg !8090
  %41 = load float, float* %cyan, align 4, !dbg !8091
  %mul62 = fmul float 6.553500e+04, %41, !dbg !8092
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8093
  %red63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 5, !dbg !8094
  store float %mul62, float* %red63, align 8, !dbg !8095
  %43 = load float, float* %magenta, align 4, !dbg !8096
  %mul64 = fmul float 6.553500e+04, %43, !dbg !8097
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8098
  %green65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 6, !dbg !8099
  store float %mul64, float* %green65, align 4, !dbg !8100
  %45 = load float, float* %yellow, align 4, !dbg !8101
  %mul66 = fmul float 6.553500e+04, %45, !dbg !8102
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8103
  %blue67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 7, !dbg !8104
  store float %mul66, float* %blue67, align 8, !dbg !8105
  %47 = load float, float* %black, align 4, !dbg !8106
  %mul68 = fmul float 6.553500e+04, %47, !dbg !8107
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8108
  %index69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 9, !dbg !8109
  store float %mul68, float* %index69, align 8, !dbg !8110
  br label %return, !dbg !8111

return:                                           ; preds = %if.end43, %if.then26
  ret void, !dbg !8111
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @TextureImage(%struct._Image* %image, %struct._Image* %texture) #0 !dbg !8112 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %texture.addr = alloca %struct._Image*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %texture_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %texture_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %y = alloca i64, align 8
  %x = alloca i64, align 8
  %thread_status = alloca i32, align 4
  %proceed = alloca i32, align 4
  %sync = alloca i32, align 4
  %texture_indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %indexes = alloca i16*, align 8
  %x64 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %width = alloca i64, align 8
  %proceed118 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  store %struct._Image* %texture, %struct._Image** %texture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %texture.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata %struct._CacheView** %texture_view, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata %struct._Image** %texture_image, metadata !8125, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8129, metadata !DIExpression()), !dbg !8130
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8131
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8133
  %1 = load i32, i32* %debug, align 8, !dbg !8133
  %cmp = icmp ne i32 %1, 0, !dbg !8134
  br i1 %cmp, label %if.then, label %if.end, !dbg !8135

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2939, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)), !dbg !8136
  br label %if.end, !dbg !8137

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %texture.addr, align 8, !dbg !8138
  %cmp1 = icmp eq %struct._Image* %2, null, !dbg !8140
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8141

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8142
  br label %return, !dbg !8142

if.end3:                                          ; preds = %if.end
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8143
  %call4 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !8145
  %cmp5 = icmp eq i32 %call4, 0, !dbg !8146
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8147

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8148
  br label %return, !dbg !8148

if.end7:                                          ; preds = %if.end3
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8149
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 58, !dbg !8150
  store %struct._ExceptionInfo* %exception8, %struct._ExceptionInfo** %exception, align 8, !dbg !8151
  %5 = load %struct._Image*, %struct._Image** %texture.addr, align 8, !dbg !8152
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8153
  %call9 = call %struct._Image* @CloneImage(%struct._Image* %5, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %6), !dbg !8154
  store %struct._Image* %call9, %struct._Image** %texture_image, align 8, !dbg !8155
  %7 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8156
  %cmp10 = icmp eq %struct._Image* %7, null, !dbg !8158
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8159

if.then11:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !8160
  br label %return, !dbg !8160

if.end12:                                         ; preds = %if.end7
  %8 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8161
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8162
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 1, !dbg !8163
  %10 = load i32, i32* %colorspace, align 4, !dbg !8163
  %call13 = call i32 @TransformImageColorspace(%struct._Image* %8, i32 %10), !dbg !8164
  %11 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8165
  %call14 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %11, i32 7), !dbg !8166
  store i32 1, i32* %status, align 4, !dbg !8167
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8168
  %compose = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 36, !dbg !8170
  %13 = load i32, i32* %compose, align 8, !dbg !8170
  %cmp15 = icmp ne i32 %13, 13, !dbg !8171
  br i1 %cmp15, label %land.lhs.true, label %if.end57, !dbg !8172

land.lhs.true:                                    ; preds = %if.end12
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8173
  %compose16 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 36, !dbg !8174
  %15 = load i32, i32* %compose16, align 8, !dbg !8174
  %cmp17 = icmp ne i32 %15, 40, !dbg !8175
  br i1 %cmp17, label %if.then22, label %lor.lhs.false, !dbg !8176

lor.lhs.false:                                    ; preds = %land.lhs.true
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8177
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !8178
  %17 = load i32, i32* %matte, align 8, !dbg !8178
  %cmp18 = icmp ne i32 %17, 0, !dbg !8179
  br i1 %cmp18, label %if.then22, label %lor.lhs.false19, !dbg !8180

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %18 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8181
  %matte20 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 6, !dbg !8182
  %19 = load i32, i32* %matte20, align 8, !dbg !8182
  %cmp21 = icmp ne i32 %19, 0, !dbg !8183
  br i1 %cmp21, label %if.then22, label %if.end57, !dbg !8184

if.then22:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %land.lhs.true
  store i64 0, i64* %y, align 8, !dbg !8185
  br label %for.cond, !dbg !8188

for.cond:                                         ; preds = %for.inc49, %if.then22
  %20 = load i64, i64* %y, align 8, !dbg !8189
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8191
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 8, !dbg !8192
  %22 = load i64, i64* %rows, align 8, !dbg !8192
  %cmp23 = icmp slt i64 %20, %22, !dbg !8193
  br i1 %cmp23, label %for.body, label %for.end52, !dbg !8194

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8195, metadata !DIExpression()), !dbg !8197
  %23 = load i32, i32* %status, align 4, !dbg !8198
  %cmp24 = icmp eq i32 %23, 0, !dbg !8200
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !8201

if.then25:                                        ; preds = %for.body
  br label %for.inc49, !dbg !8202

if.end26:                                         ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !8203
  br label %for.cond27, !dbg !8205

for.cond27:                                       ; preds = %for.inc, %if.end26
  %24 = load i64, i64* %x, align 8, !dbg !8206
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8208
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 7, !dbg !8209
  %26 = load i64, i64* %columns, align 8, !dbg !8209
  %cmp28 = icmp slt i64 %24, %26, !dbg !8210
  br i1 %cmp28, label %for.body29, label %for.end, !dbg !8211

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata i32* %thread_status, metadata !8212, metadata !DIExpression()), !dbg !8214
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8215
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8216
  %compose30 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 36, !dbg !8217
  %29 = load i32, i32* %compose30, align 8, !dbg !8217
  %30 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8218
  %31 = load i64, i64* %x, align 8, !dbg !8219
  %32 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8220
  %tile_offset = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 74, !dbg !8221
  %x31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset, i32 0, i32 2, !dbg !8222
  %33 = load i64, i64* %x31, align 8, !dbg !8222
  %add = add nsw i64 %31, %33, !dbg !8223
  %34 = load i64, i64* %y, align 8, !dbg !8224
  %35 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8225
  %tile_offset32 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 74, !dbg !8226
  %y33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset32, i32 0, i32 3, !dbg !8227
  %36 = load i64, i64* %y33, align 8, !dbg !8227
  %add34 = add nsw i64 %34, %36, !dbg !8228
  %call35 = call i32 @CompositeImage(%struct._Image* %27, i32 %29, %struct._Image* %30, i64 %add, i64 %add34), !dbg !8229
  store i32 %call35, i32* %thread_status, align 4, !dbg !8230
  %37 = load i32, i32* %thread_status, align 4, !dbg !8231
  %cmp36 = icmp eq i32 %37, 0, !dbg !8233
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !8234

if.then37:                                        ; preds = %for.body29
  %38 = load i32, i32* %thread_status, align 4, !dbg !8235
  store i32 %38, i32* %status, align 4, !dbg !8237
  br label %for.end, !dbg !8238

if.end38:                                         ; preds = %for.body29
  br label %for.inc, !dbg !8239

for.inc:                                          ; preds = %if.end38
  %39 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8240
  %columns39 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 7, !dbg !8241
  %40 = load i64, i64* %columns39, align 8, !dbg !8241
  %41 = load i64, i64* %x, align 8, !dbg !8242
  %add40 = add nsw i64 %41, %40, !dbg !8242
  store i64 %add40, i64* %x, align 8, !dbg !8242
  br label %for.cond27, !dbg !8243, !llvm.loop !8244

for.end:                                          ; preds = %if.then37, %for.cond27
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8246
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 47, !dbg !8248
  %43 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8248
  %cmp41 = icmp ne i32 (i8*, i64, i64, i8*)* %43, null, !dbg !8249
  br i1 %cmp41, label %if.then42, label %if.end48, !dbg !8250

if.then42:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8251, metadata !DIExpression()), !dbg !8253
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8254
  %45 = load i64, i64* %y, align 8, !dbg !8255
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8256
  %rows43 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 8, !dbg !8257
  %47 = load i64, i64* %rows43, align 8, !dbg !8257
  %call44 = call i32 @SetImageProgress(%struct._Image* %44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 %45, i64 %47), !dbg !8258
  store i32 %call44, i32* %proceed, align 4, !dbg !8259
  %48 = load i32, i32* %proceed, align 4, !dbg !8260
  %cmp45 = icmp eq i32 %48, 0, !dbg !8262
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !8263

if.then46:                                        ; preds = %if.then42
  store i32 0, i32* %status, align 4, !dbg !8264
  br label %if.end47, !dbg !8265

if.end47:                                         ; preds = %if.then46, %if.then42
  br label %if.end48, !dbg !8266

if.end48:                                         ; preds = %if.end47, %for.end
  br label %for.inc49, !dbg !8267

for.inc49:                                        ; preds = %if.end48, %if.then25
  %49 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8268
  %rows50 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 8, !dbg !8269
  %50 = load i64, i64* %rows50, align 8, !dbg !8269
  %51 = load i64, i64* %y, align 8, !dbg !8270
  %add51 = add nsw i64 %51, %50, !dbg !8270
  store i64 %add51, i64* %y, align 8, !dbg !8270
  br label %for.cond, !dbg !8271, !llvm.loop !8272

for.end52:                                        ; preds = %for.cond
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8274
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8275
  %rows53 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 8, !dbg !8276
  %54 = load i64, i64* %rows53, align 8, !dbg !8276
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8277
  %rows54 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 8, !dbg !8278
  %56 = load i64, i64* %rows54, align 8, !dbg !8278
  %call55 = call i32 @SetImageProgress(%struct._Image* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 %54, i64 %56), !dbg !8279
  %57 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8280
  %call56 = call %struct._Image* @DestroyImage(%struct._Image* %57), !dbg !8281
  store %struct._Image* %call56, %struct._Image** %texture_image, align 8, !dbg !8282
  %58 = load i32, i32* %status, align 4, !dbg !8283
  store i32 %58, i32* %retval, align 4, !dbg !8284
  br label %return, !dbg !8284

if.end57:                                         ; preds = %lor.lhs.false19, %if.end12
  store i32 1, i32* %status, align 4, !dbg !8285
  %59 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8286
  %60 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8287
  %call58 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %59, %struct._ExceptionInfo* %60), !dbg !8288
  store %struct._CacheView* %call58, %struct._CacheView** %texture_view, align 8, !dbg !8289
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8290
  %62 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8291
  %call59 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %61, %struct._ExceptionInfo* %62), !dbg !8292
  store %struct._CacheView* %call59, %struct._CacheView** %image_view, align 8, !dbg !8293
  store i64 0, i64* %y, align 8, !dbg !8294
  br label %for.cond60, !dbg !8296

for.cond60:                                       ; preds = %for.inc125, %if.end57
  %63 = load i64, i64* %y, align 8, !dbg !8297
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8299
  %rows61 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 8, !dbg !8300
  %65 = load i64, i64* %rows61, align 8, !dbg !8300
  %cmp62 = icmp slt i64 %63, %65, !dbg !8301
  br i1 %cmp62, label %for.body63, label %for.end126, !dbg !8302

for.body63:                                       ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata i16** %texture_indexes, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !8308, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8310, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata i64* %x64, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8314, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.declare(metadata i64* %width, metadata !8316, metadata !DIExpression()), !dbg !8317
  %66 = load i32, i32* %status, align 4, !dbg !8318
  %cmp65 = icmp eq i32 %66, 0, !dbg !8320
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !8321

if.then66:                                        ; preds = %for.body63
  br label %for.inc125, !dbg !8322

if.end67:                                         ; preds = %for.body63
  %67 = load %struct._CacheView*, %struct._CacheView** %texture_view, align 8, !dbg !8323
  %68 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8324
  %tile_offset68 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 74, !dbg !8325
  %x69 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset68, i32 0, i32 2, !dbg !8326
  %69 = load i64, i64* %x69, align 8, !dbg !8326
  %70 = load i64, i64* %y, align 8, !dbg !8327
  %71 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8328
  %tile_offset70 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 74, !dbg !8329
  %y71 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset70, i32 0, i32 3, !dbg !8330
  %72 = load i64, i64* %y71, align 8, !dbg !8330
  %add72 = add nsw i64 %70, %72, !dbg !8331
  %73 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8332
  %rows73 = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 8, !dbg !8333
  %74 = load i64, i64* %rows73, align 8, !dbg !8333
  %rem = urem i64 %add72, %74, !dbg !8334
  %75 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8335
  %columns74 = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 7, !dbg !8336
  %76 = load i64, i64* %columns74, align 8, !dbg !8336
  %77 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8337
  %call75 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %67, i64 %69, i64 %rem, i64 %76, i64 1, %struct._ExceptionInfo* %77), !dbg !8338
  store %struct._PixelPacket* %call75, %struct._PixelPacket** %p, align 8, !dbg !8339
  %78 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8340
  %79 = load i64, i64* %y, align 8, !dbg !8341
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8342
  %columns76 = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 7, !dbg !8343
  %81 = load i64, i64* %columns76, align 8, !dbg !8343
  %82 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8344
  %call77 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %78, i64 0, i64 %79, i64 %81, i64 1, %struct._ExceptionInfo* %82), !dbg !8345
  store %struct._PixelPacket* %call77, %struct._PixelPacket** %q, align 8, !dbg !8346
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8347
  %cmp78 = icmp eq %struct._PixelPacket* %83, null, !dbg !8349
  br i1 %cmp78, label %if.then81, label %lor.lhs.false79, !dbg !8350

lor.lhs.false79:                                  ; preds = %if.end67
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8351
  %cmp80 = icmp eq %struct._PixelPacket* %84, null, !dbg !8352
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !8353

if.then81:                                        ; preds = %lor.lhs.false79, %if.end67
  store i32 0, i32* %status, align 4, !dbg !8354
  br label %for.inc125, !dbg !8356

if.end82:                                         ; preds = %lor.lhs.false79
  %85 = load %struct._CacheView*, %struct._CacheView** %texture_view, align 8, !dbg !8357
  %call83 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %85), !dbg !8358
  store i16* %call83, i16** %texture_indexes, align 8, !dbg !8359
  %86 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8360
  %call84 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %86), !dbg !8361
  store i16* %call84, i16** %indexes, align 8, !dbg !8362
  store i64 0, i64* %x64, align 8, !dbg !8363
  br label %for.cond85, !dbg !8365

for.cond85:                                       ; preds = %for.inc107, %if.end82
  %87 = load i64, i64* %x64, align 8, !dbg !8366
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8368
  %columns86 = getelementptr inbounds %struct._Image, %struct._Image* %88, i32 0, i32 7, !dbg !8369
  %89 = load i64, i64* %columns86, align 8, !dbg !8369
  %cmp87 = icmp slt i64 %87, %89, !dbg !8370
  br i1 %cmp87, label %for.body88, label %for.end110, !dbg !8371

for.body88:                                       ; preds = %for.cond85
  %90 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8372
  %columns89 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 7, !dbg !8374
  %91 = load i64, i64* %columns89, align 8, !dbg !8374
  store i64 %91, i64* %width, align 8, !dbg !8375
  %92 = load i64, i64* %x64, align 8, !dbg !8376
  %93 = load i64, i64* %width, align 8, !dbg !8378
  %add90 = add nsw i64 %92, %93, !dbg !8379
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8380
  %columns91 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 7, !dbg !8381
  %95 = load i64, i64* %columns91, align 8, !dbg !8381
  %cmp92 = icmp sgt i64 %add90, %95, !dbg !8382
  br i1 %cmp92, label %if.then93, label %if.end95, !dbg !8383

if.then93:                                        ; preds = %for.body88
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8384
  %columns94 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 7, !dbg !8385
  %97 = load i64, i64* %columns94, align 8, !dbg !8385
  %98 = load i64, i64* %x64, align 8, !dbg !8386
  %sub = sub i64 %97, %98, !dbg !8387
  store i64 %sub, i64* %width, align 8, !dbg !8388
  br label %if.end95, !dbg !8389

if.end95:                                         ; preds = %if.then93, %for.body88
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8390
  %100 = bitcast %struct._PixelPacket* %99 to i8*, !dbg !8390
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8391
  %102 = bitcast %struct._PixelPacket* %101 to i8*, !dbg !8391
  %103 = load i64, i64* %width, align 8, !dbg !8392
  %mul = mul i64 %103, 8, !dbg !8393
  %call96 = call i8* @CopyMagickMemory(i8* %100, i8* %102, i64 %mul), !dbg !8394
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8395
  %colorspace97 = getelementptr inbounds %struct._Image, %struct._Image* %104, i32 0, i32 1, !dbg !8397
  %105 = load i32, i32* %colorspace97, align 4, !dbg !8397
  %cmp98 = icmp eq i32 %105, 12, !dbg !8398
  br i1 %cmp98, label %land.lhs.true99, label %if.end105, !dbg !8399

land.lhs.true99:                                  ; preds = %if.end95
  %106 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8400
  %colorspace100 = getelementptr inbounds %struct._Image, %struct._Image* %106, i32 0, i32 1, !dbg !8401
  %107 = load i32, i32* %colorspace100, align 4, !dbg !8401
  %cmp101 = icmp eq i32 %107, 12, !dbg !8402
  br i1 %cmp101, label %if.then102, label %if.end105, !dbg !8403

if.then102:                                       ; preds = %land.lhs.true99
  %108 = load i16*, i16** %indexes, align 8, !dbg !8404
  %109 = bitcast i16* %108 to i8*, !dbg !8404
  %110 = load i16*, i16** %texture_indexes, align 8, !dbg !8406
  %111 = bitcast i16* %110 to i8*, !dbg !8406
  %112 = load i64, i64* %width, align 8, !dbg !8407
  %mul103 = mul i64 %112, 2, !dbg !8408
  %call104 = call i8* @CopyMagickMemory(i8* %109, i8* %111, i64 %mul103), !dbg !8409
  %113 = load i64, i64* %width, align 8, !dbg !8410
  %114 = load i16*, i16** %indexes, align 8, !dbg !8411
  %add.ptr = getelementptr inbounds i16, i16* %114, i64 %113, !dbg !8411
  store i16* %add.ptr, i16** %indexes, align 8, !dbg !8411
  br label %if.end105, !dbg !8412

if.end105:                                        ; preds = %if.then102, %land.lhs.true99, %if.end95
  %115 = load i64, i64* %width, align 8, !dbg !8413
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8414
  %add.ptr106 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i64 %115, !dbg !8414
  store %struct._PixelPacket* %add.ptr106, %struct._PixelPacket** %q, align 8, !dbg !8414
  br label %for.inc107, !dbg !8415

for.inc107:                                       ; preds = %if.end105
  %117 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8416
  %columns108 = getelementptr inbounds %struct._Image, %struct._Image* %117, i32 0, i32 7, !dbg !8417
  %118 = load i64, i64* %columns108, align 8, !dbg !8417
  %119 = load i64, i64* %x64, align 8, !dbg !8418
  %add109 = add nsw i64 %119, %118, !dbg !8418
  store i64 %add109, i64* %x64, align 8, !dbg !8418
  br label %for.cond85, !dbg !8419, !llvm.loop !8420

for.end110:                                       ; preds = %for.cond85
  %120 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8422
  %121 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8423
  %call111 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %120, %struct._ExceptionInfo* %121), !dbg !8424
  store i32 %call111, i32* %sync, align 4, !dbg !8425
  %122 = load i32, i32* %sync, align 4, !dbg !8426
  %cmp112 = icmp eq i32 %122, 0, !dbg !8428
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !8429

if.then113:                                       ; preds = %for.end110
  store i32 0, i32* %status, align 4, !dbg !8430
  br label %if.end114, !dbg !8431

if.end114:                                        ; preds = %if.then113, %for.end110
  %123 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8432
  %progress_monitor115 = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 47, !dbg !8434
  %124 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor115, align 8, !dbg !8434
  %cmp116 = icmp ne i32 (i8*, i64, i64, i8*)* %124, null, !dbg !8435
  br i1 %cmp116, label %if.then117, label %if.end124, !dbg !8436

if.then117:                                       ; preds = %if.end114
  call void @llvm.dbg.declare(metadata i32* %proceed118, metadata !8437, metadata !DIExpression()), !dbg !8439
  %125 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8440
  %126 = load i64, i64* %y, align 8, !dbg !8441
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8442
  %rows119 = getelementptr inbounds %struct._Image, %struct._Image* %127, i32 0, i32 8, !dbg !8443
  %128 = load i64, i64* %rows119, align 8, !dbg !8443
  %call120 = call i32 @SetImageProgress(%struct._Image* %125, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 %126, i64 %128), !dbg !8444
  store i32 %call120, i32* %proceed118, align 4, !dbg !8445
  %129 = load i32, i32* %proceed118, align 4, !dbg !8446
  %cmp121 = icmp eq i32 %129, 0, !dbg !8448
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !8449

if.then122:                                       ; preds = %if.then117
  store i32 0, i32* %status, align 4, !dbg !8450
  br label %if.end123, !dbg !8451

if.end123:                                        ; preds = %if.then122, %if.then117
  br label %if.end124, !dbg !8452

if.end124:                                        ; preds = %if.end123, %if.end114
  br label %for.inc125, !dbg !8453

for.inc125:                                       ; preds = %if.end124, %if.then81, %if.then66
  %130 = load i64, i64* %y, align 8, !dbg !8454
  %inc = add nsw i64 %130, 1, !dbg !8454
  store i64 %inc, i64* %y, align 8, !dbg !8454
  br label %for.cond60, !dbg !8455, !llvm.loop !8456

for.end126:                                       ; preds = %for.cond60
  %131 = load %struct._CacheView*, %struct._CacheView** %texture_view, align 8, !dbg !8458
  %call127 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %131), !dbg !8459
  store %struct._CacheView* %call127, %struct._CacheView** %texture_view, align 8, !dbg !8460
  %132 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8461
  %call128 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %132), !dbg !8462
  store %struct._CacheView* %call128, %struct._CacheView** %image_view, align 8, !dbg !8463
  %133 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !8464
  %call129 = call %struct._Image* @DestroyImage(%struct._Image* %133), !dbg !8465
  store %struct._Image* %call129, %struct._Image** %texture_image, align 8, !dbg !8466
  %134 = load i32, i32* %status, align 4, !dbg !8467
  store i32 %134, i32* %retval, align 4, !dbg !8468
  br label %return, !dbg !8468

return:                                           ; preds = %for.end126, %for.end52, %if.then11, %if.then6, %if.then2
  %135 = load i32, i32* %retval, align 4, !dbg !8469
  ret i32 %135, !dbg !8469
}

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #2

declare dso_local i32 @SetImageVirtualPixelMethod(%struct._Image*, i32) #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !8470 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata double* %sign, metadata !8473, metadata !DIExpression()), !dbg !8474
  %0 = load double, double* %x.addr, align 8, !dbg !8475
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !8476
  %1 = zext i1 %cmp to i64, !dbg !8475
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !8475
  store double %cond, double* %sign, align 8, !dbg !8477
  %2 = load double, double* %sign, align 8, !dbg !8478
  %3 = load double, double* %x.addr, align 8, !dbg !8480
  %mul = fmul double %2, %3, !dbg !8481
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !8482
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8483

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !8484
  %div = fdiv double 1.000000e+00, %4, !dbg !8485
  store double %div, double* %retval, align 8, !dbg !8486
  br label %return, !dbg !8486

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !8487
  %div2 = fdiv double %5, 1.000000e-15, !dbg !8488
  store double %div2, double* %retval, align 8, !dbg !8489
  br label %return, !dbg !8489

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !8490
  ret double %6, !dbg !8490
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickOver_(float %p, float %alpha, float %q, float %beta) #0 !dbg !8491 {
entry:
  %p.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %beta.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8498, metadata !DIExpression()), !dbg !8499
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  %0 = load float, float* %alpha.addr, align 4, !dbg !8502
  %conv = fpext float %0 to double, !dbg !8502
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !8503
  %sub = fsub double 1.000000e+00, %mul, !dbg !8504
  %1 = load float, float* %p.addr, align 4, !dbg !8505
  %conv1 = fpext float %1 to double, !dbg !8505
  %mul2 = fmul double %sub, %conv1, !dbg !8506
  %2 = load float, float* %beta.addr, align 4, !dbg !8507
  %conv3 = fpext float %2 to double, !dbg !8507
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !8508
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !8509
  %3 = load float, float* %q.addr, align 4, !dbg !8510
  %conv6 = fpext float %3 to double, !dbg !8510
  %mul7 = fmul double %sub5, %conv6, !dbg !8511
  %mul8 = fmul double %mul7, 0x3EF0001000100010, !dbg !8512
  %4 = load float, float* %alpha.addr, align 4, !dbg !8513
  %conv9 = fpext float %4 to double, !dbg !8513
  %mul10 = fmul double %mul8, %conv9, !dbg !8514
  %add = fadd double %mul2, %mul10, !dbg !8515
  %conv11 = fptrunc double %add to float, !dbg !8516
  ret float %conv11, !dbg !8517
}

; Function Attrs: noinline nounwind uwtable
define internal float @In(float %p, float %Sa, float %q, float %Da) #0 !dbg !8518 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  %0 = load float, float* %Sa.addr, align 4, !dbg !8527
  %1 = load float, float* %p.addr, align 4, !dbg !8528
  %mul = fmul float %0, %1, !dbg !8529
  %2 = load float, float* %Da.addr, align 4, !dbg !8530
  %mul1 = fmul float %mul, %2, !dbg !8531
  ret float %mul1, !dbg !8532
}

; Function Attrs: noinline nounwind uwtable
define internal float @Out(float %p, float %Sa, float %q, float %Da) #0 !dbg !8533 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8534, metadata !DIExpression()), !dbg !8535
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8538, metadata !DIExpression()), !dbg !8539
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  %0 = load float, float* %Sa.addr, align 4, !dbg !8542
  %1 = load float, float* %p.addr, align 4, !dbg !8543
  %mul = fmul float %0, %1, !dbg !8544
  %conv = fpext float %mul to double, !dbg !8542
  %2 = load float, float* %Da.addr, align 4, !dbg !8545
  %conv1 = fpext float %2 to double, !dbg !8545
  %sub = fsub double 1.000000e+00, %conv1, !dbg !8546
  %mul2 = fmul double %conv, %sub, !dbg !8547
  %conv3 = fptrunc double %mul2 to float, !dbg !8548
  ret float %conv3, !dbg !8549
}

; Function Attrs: noinline nounwind uwtable
define internal float @Atop(float %p, float %Sa, float %q, float %Da) #0 !dbg !8550 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8557, metadata !DIExpression()), !dbg !8558
  %0 = load float, float* %p.addr, align 4, !dbg !8559
  %1 = load float, float* %Sa.addr, align 4, !dbg !8560
  %mul = fmul float %0, %1, !dbg !8561
  %conv = fpext float %mul to double, !dbg !8559
  %2 = load float, float* %q.addr, align 4, !dbg !8562
  %conv1 = fpext float %2 to double, !dbg !8562
  %3 = load float, float* %Sa.addr, align 4, !dbg !8563
  %conv2 = fpext float %3 to double, !dbg !8563
  %sub = fsub double 1.000000e+00, %conv2, !dbg !8564
  %mul3 = fmul double %conv1, %sub, !dbg !8565
  %add = fadd double %conv, %mul3, !dbg !8566
  %conv4 = fptrunc double %add to float, !dbg !8567
  ret float %conv4, !dbg !8568
}

; Function Attrs: noinline nounwind uwtable
define internal float @Xor(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !8569 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  %0 = load float, float* %Sca.addr, align 4, !dbg !8578
  %conv = fpext float %0 to double, !dbg !8578
  %1 = load float, float* %Da.addr, align 4, !dbg !8579
  %conv1 = fpext float %1 to double, !dbg !8579
  %sub = fsub double 1.000000e+00, %conv1, !dbg !8580
  %mul = fmul double %conv, %sub, !dbg !8581
  %2 = load float, float* %Dca.addr, align 4, !dbg !8582
  %conv2 = fpext float %2 to double, !dbg !8582
  %3 = load float, float* %Sa.addr, align 4, !dbg !8583
  %conv3 = fpext float %3 to double, !dbg !8583
  %sub4 = fsub double 1.000000e+00, %conv3, !dbg !8584
  %mul5 = fmul double %conv2, %sub4, !dbg !8585
  %add = fadd double %mul, %mul5, !dbg !8586
  %conv6 = fptrunc double %add to float, !dbg !8587
  ret float %conv6, !dbg !8588
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !8589 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.declare(metadata float* %Da, metadata !8602, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !8604, metadata !DIExpression()), !dbg !8605
  %0 = load float, float* %alpha.addr, align 4, !dbg !8606
  %conv = fpext float %0 to double, !dbg !8606
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !8607
  %sub = fsub double 1.000000e+00, %mul, !dbg !8608
  %conv1 = fptrunc double %sub to float, !dbg !8609
  store float %conv1, float* %Sa, align 4, !dbg !8610
  %1 = load float, float* %beta.addr, align 4, !dbg !8611
  %conv2 = fpext float %1 to double, !dbg !8611
  %mul3 = fmul double 0x3EF0001000100010, %conv2, !dbg !8612
  %sub4 = fsub double 1.000000e+00, %mul3, !dbg !8613
  %conv5 = fptrunc double %sub4 to float, !dbg !8614
  store float %conv5, float* %Da, align 4, !dbg !8615
  %2 = load float, float* %Sa, align 4, !dbg !8616
  %3 = load float, float* %Da, align 4, !dbg !8617
  %add = fadd float %2, %3, !dbg !8618
  %call = call float @RoundToUnity(float %add), !dbg !8619
  %conv6 = fpext float %call to double, !dbg !8619
  store double %conv6, double* %gamma, align 8, !dbg !8620
  %4 = load double, double* %gamma, align 8, !dbg !8621
  %sub7 = fsub double 1.000000e+00, %4, !dbg !8622
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !8623
  %conv9 = fptrunc double %mul8 to float, !dbg !8624
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8625
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !8626
  store float %conv9, float* %opacity, align 4, !dbg !8627
  %6 = load double, double* %gamma, align 8, !dbg !8628
  %call10 = call double @PerceptibleReciprocal(double %6), !dbg !8629
  store double %call10, double* %gamma, align 8, !dbg !8630
  %7 = load double, double* %gamma, align 8, !dbg !8631
  %8 = load float, float* %Sa, align 4, !dbg !8632
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8633
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 5, !dbg !8634
  %10 = load float, float* %red, align 8, !dbg !8634
  %mul11 = fmul float %8, %10, !dbg !8635
  %11 = load float, float* %Da, align 4, !dbg !8636
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8637
  %red12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !8638
  %13 = load float, float* %red12, align 8, !dbg !8638
  %mul13 = fmul float %11, %13, !dbg !8639
  %add14 = fadd float %mul11, %mul13, !dbg !8640
  %conv15 = fpext float %add14 to double, !dbg !8641
  %mul16 = fmul double %7, %conv15, !dbg !8642
  %conv17 = fptrunc double %mul16 to float, !dbg !8631
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8643
  %red18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !8644
  store float %conv17, float* %red18, align 8, !dbg !8645
  %15 = load double, double* %gamma, align 8, !dbg !8646
  %16 = load float, float* %Sa, align 4, !dbg !8647
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8648
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 6, !dbg !8649
  %18 = load float, float* %green, align 4, !dbg !8649
  %mul19 = fmul float %16, %18, !dbg !8650
  %19 = load float, float* %Da, align 4, !dbg !8651
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8652
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !8653
  %21 = load float, float* %green20, align 4, !dbg !8653
  %mul21 = fmul float %19, %21, !dbg !8654
  %add22 = fadd float %mul19, %mul21, !dbg !8655
  %conv23 = fpext float %add22 to double, !dbg !8656
  %mul24 = fmul double %15, %conv23, !dbg !8657
  %conv25 = fptrunc double %mul24 to float, !dbg !8646
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8658
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !8659
  store float %conv25, float* %green26, align 4, !dbg !8660
  %23 = load double, double* %gamma, align 8, !dbg !8661
  %24 = load float, float* %Sa, align 4, !dbg !8662
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8663
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 7, !dbg !8664
  %26 = load float, float* %blue, align 8, !dbg !8664
  %mul27 = fmul float %24, %26, !dbg !8665
  %27 = load float, float* %Da, align 4, !dbg !8666
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8667
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !8668
  %29 = load float, float* %blue28, align 8, !dbg !8668
  %mul29 = fmul float %27, %29, !dbg !8669
  %add30 = fadd float %mul27, %mul29, !dbg !8670
  %conv31 = fpext float %add30 to double, !dbg !8671
  %mul32 = fmul double %23, %conv31, !dbg !8672
  %conv33 = fptrunc double %mul32 to float, !dbg !8661
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8673
  %blue34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !8674
  store float %conv33, float* %blue34, align 8, !dbg !8675
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8676
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 1, !dbg !8678
  %32 = load i32, i32* %colorspace, align 4, !dbg !8678
  %cmp = icmp eq i32 %32, 12, !dbg !8679
  br i1 %cmp, label %if.then, label %if.end, !dbg !8680

if.then:                                          ; preds = %entry
  %33 = load double, double* %gamma, align 8, !dbg !8681
  %34 = load float, float* %Sa, align 4, !dbg !8682
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !8683
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !8684
  %36 = load float, float* %index, align 8, !dbg !8684
  %mul36 = fmul float %34, %36, !dbg !8685
  %37 = load float, float* %Da, align 4, !dbg !8686
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !8687
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !8688
  %39 = load float, float* %index37, align 8, !dbg !8688
  %mul38 = fmul float %37, %39, !dbg !8689
  %add39 = fadd float %mul36, %mul38, !dbg !8690
  %conv40 = fpext float %add39 to double, !dbg !8691
  %mul41 = fmul double %33, %conv40, !dbg !8692
  %conv42 = fptrunc double %mul41 to float, !dbg !8681
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !8693
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !8694
  store float %conv42, float* %index43, align 8, !dbg !8695
  br label %if.end, !dbg !8693

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8696
}

; Function Attrs: noinline nounwind uwtable
define internal float @RoundToUnity(float %value) #0 !dbg !8697 {
entry:
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  %0 = load float, float* %value.addr, align 4, !dbg !8702
  %conv = fpext float %0 to double, !dbg !8702
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !8703
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8702

cond.true:                                        ; preds = %entry
  br label %cond.end8, !dbg !8702

cond.false:                                       ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !8704
  %conv2 = fpext float %1 to double, !dbg !8704
  %cmp3 = fcmp ogt double %conv2, 1.000000e+00, !dbg !8705
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !8706

cond.true5:                                       ; preds = %cond.false
  br label %cond.end, !dbg !8706

cond.false6:                                      ; preds = %cond.false
  %2 = load float, float* %value.addr, align 4, !dbg !8707
  %conv7 = fpext float %2 to double, !dbg !8707
  br label %cond.end, !dbg !8706

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond = phi double [ 1.000000e+00, %cond.true5 ], [ %conv7, %cond.false6 ], !dbg !8706
  br label %cond.end8, !dbg !8702

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi double [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !8702
  %conv10 = fptrunc double %cond9 to float, !dbg !8708
  ret float %conv10, !dbg !8709
}

; Function Attrs: noinline nounwind uwtable
define internal float @Minus(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !8710 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load float, float* %Sca.addr, align 4, !dbg !8719
  %1 = load float, float* %Dca.addr, align 4, !dbg !8720
  %add = fadd float %0, %1, !dbg !8721
  %2 = load float, float* %Dca.addr, align 4, !dbg !8722
  %mul = fmul float 2.000000e+00, %2, !dbg !8723
  %3 = load float, float* %Sa.addr, align 4, !dbg !8724
  %mul1 = fmul float %mul, %3, !dbg !8725
  %sub = fsub float %add, %mul1, !dbg !8726
  ret float %sub, !dbg !8727
}

; Function Attrs: noinline nounwind uwtable
define internal float @ModulusAdd(float %p, float %Sa, float %q, float %Da) #0 !dbg !8728 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  %pixel = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8733, metadata !DIExpression()), !dbg !8734
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8735, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.declare(metadata float* %pixel, metadata !8737, metadata !DIExpression()), !dbg !8738
  %0 = load float, float* %p.addr, align 4, !dbg !8739
  %1 = load float, float* %q.addr, align 4, !dbg !8740
  %add = fadd float %0, %1, !dbg !8741
  store float %add, float* %pixel, align 4, !dbg !8742
  %2 = load float, float* %pixel, align 4, !dbg !8743
  %cmp = fcmp ogt float %2, 6.553500e+04, !dbg !8745
  br i1 %cmp, label %if.then, label %if.end, !dbg !8746

if.then:                                          ; preds = %entry
  %3 = load float, float* %pixel, align 4, !dbg !8747
  %sub = fsub float %3, 6.553500e+04, !dbg !8747
  store float %sub, float* %pixel, align 4, !dbg !8747
  br label %if.end, !dbg !8748

if.end:                                           ; preds = %if.then, %entry
  %4 = load float, float* %pixel, align 4, !dbg !8749
  %5 = load float, float* %Sa.addr, align 4, !dbg !8750
  %mul = fmul float %4, %5, !dbg !8751
  %6 = load float, float* %Da.addr, align 4, !dbg !8752
  %mul1 = fmul float %mul, %6, !dbg !8753
  %conv = fpext float %mul1 to double, !dbg !8749
  %7 = load float, float* %p.addr, align 4, !dbg !8754
  %8 = load float, float* %Sa.addr, align 4, !dbg !8755
  %mul2 = fmul float %7, %8, !dbg !8756
  %conv3 = fpext float %mul2 to double, !dbg !8754
  %9 = load float, float* %Da.addr, align 4, !dbg !8757
  %conv4 = fpext float %9 to double, !dbg !8757
  %sub5 = fsub double 1.000000e+00, %conv4, !dbg !8758
  %mul6 = fmul double %conv3, %sub5, !dbg !8759
  %add7 = fadd double %conv, %mul6, !dbg !8760
  %10 = load float, float* %q.addr, align 4, !dbg !8761
  %11 = load float, float* %Da.addr, align 4, !dbg !8762
  %mul8 = fmul float %10, %11, !dbg !8763
  %conv9 = fpext float %mul8 to double, !dbg !8761
  %12 = load float, float* %Sa.addr, align 4, !dbg !8764
  %conv10 = fpext float %12 to double, !dbg !8764
  %sub11 = fsub double 1.000000e+00, %conv10, !dbg !8765
  %mul12 = fmul double %conv9, %sub11, !dbg !8766
  %add13 = fadd double %add7, %mul12, !dbg !8767
  %conv14 = fptrunc double %add13 to float, !dbg !8768
  ret float %conv14, !dbg !8769
}

; Function Attrs: noinline nounwind uwtable
define internal float @ModulusSubtract(float %p, float %Sa, float %q, float %Da) #0 !dbg !8770 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  %pixel = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8771, metadata !DIExpression()), !dbg !8772
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8775, metadata !DIExpression()), !dbg !8776
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.declare(metadata float* %pixel, metadata !8779, metadata !DIExpression()), !dbg !8780
  %0 = load float, float* %p.addr, align 4, !dbg !8781
  %1 = load float, float* %q.addr, align 4, !dbg !8782
  %sub = fsub float %0, %1, !dbg !8783
  store float %sub, float* %pixel, align 4, !dbg !8784
  %2 = load float, float* %pixel, align 4, !dbg !8785
  %conv = fpext float %2 to double, !dbg !8785
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !8787
  br i1 %cmp, label %if.then, label %if.end, !dbg !8788

if.then:                                          ; preds = %entry
  %3 = load float, float* %pixel, align 4, !dbg !8789
  %add = fadd float %3, 6.553500e+04, !dbg !8789
  store float %add, float* %pixel, align 4, !dbg !8789
  br label %if.end, !dbg !8790

if.end:                                           ; preds = %if.then, %entry
  %4 = load float, float* %pixel, align 4, !dbg !8791
  %5 = load float, float* %Sa.addr, align 4, !dbg !8792
  %mul = fmul float %4, %5, !dbg !8793
  %6 = load float, float* %Da.addr, align 4, !dbg !8794
  %mul2 = fmul float %mul, %6, !dbg !8795
  %conv3 = fpext float %mul2 to double, !dbg !8791
  %7 = load float, float* %p.addr, align 4, !dbg !8796
  %8 = load float, float* %Sa.addr, align 4, !dbg !8797
  %mul4 = fmul float %7, %8, !dbg !8798
  %conv5 = fpext float %mul4 to double, !dbg !8796
  %9 = load float, float* %Da.addr, align 4, !dbg !8799
  %conv6 = fpext float %9 to double, !dbg !8799
  %sub7 = fsub double 1.000000e+00, %conv6, !dbg !8800
  %mul8 = fmul double %conv5, %sub7, !dbg !8801
  %add9 = fadd double %conv3, %mul8, !dbg !8802
  %10 = load float, float* %q.addr, align 4, !dbg !8803
  %11 = load float, float* %Da.addr, align 4, !dbg !8804
  %mul10 = fmul float %10, %11, !dbg !8805
  %conv11 = fpext float %mul10 to double, !dbg !8803
  %12 = load float, float* %Sa.addr, align 4, !dbg !8806
  %conv12 = fpext float %12 to double, !dbg !8806
  %sub13 = fsub double 1.000000e+00, %conv12, !dbg !8807
  %mul14 = fmul double %conv11, %sub13, !dbg !8808
  %add15 = fadd double %add9, %mul14, !dbg !8809
  %conv16 = fptrunc double %add15 to float, !dbg !8810
  ret float %conv16, !dbg !8811
}

; Function Attrs: noinline nounwind uwtable
define internal float @Difference(float %p, float %Sa, float %q, float %Da) #0 !dbg !8812 {
entry:
  %p.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8815, metadata !DIExpression()), !dbg !8816
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  %0 = load float, float* %Sa.addr, align 4, !dbg !8821
  %1 = load float, float* %p.addr, align 4, !dbg !8822
  %mul = fmul float %0, %1, !dbg !8823
  %2 = load float, float* %Da.addr, align 4, !dbg !8824
  %3 = load float, float* %q.addr, align 4, !dbg !8825
  %mul1 = fmul float %2, %3, !dbg !8826
  %add = fadd float %mul, %mul1, !dbg !8827
  %conv = fpext float %add to double, !dbg !8821
  %4 = load float, float* %Sa.addr, align 4, !dbg !8828
  %5 = load float, float* %Da.addr, align 4, !dbg !8829
  %mul2 = fmul float %4, %5, !dbg !8830
  %conv3 = fpext float %mul2 to double, !dbg !8828
  %mul4 = fmul double %conv3, 2.000000e+00, !dbg !8831
  %6 = load float, float* %p.addr, align 4, !dbg !8832
  %conv5 = fpext float %6 to double, !dbg !8832
  %7 = load float, float* %q.addr, align 4, !dbg !8833
  %conv6 = fpext float %7 to double, !dbg !8833
  %call = call double @MagickMin(double %conv5, double %conv6), !dbg !8834
  %mul7 = fmul double %mul4, %call, !dbg !8835
  %sub = fsub double %conv, %mul7, !dbg !8836
  %conv8 = fptrunc double %sub to float, !dbg !8837
  ret float %conv8, !dbg !8838
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !8839 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8842, metadata !DIExpression()), !dbg !8843
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  %0 = load double, double* %x.addr, align 8, !dbg !8846
  %1 = load double, double* %y.addr, align 8, !dbg !8848
  %cmp = fcmp olt double %0, %1, !dbg !8849
  br i1 %cmp, label %if.then, label %if.end, !dbg !8850

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !8851
  store double %2, double* %retval, align 8, !dbg !8852
  br label %return, !dbg !8852

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !8853
  store double %3, double* %retval, align 8, !dbg !8854
  br label %return, !dbg !8854

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !8855
  ret double %4, !dbg !8855
}

; Function Attrs: noinline nounwind uwtable
define internal float @Exclusion(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !8856 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  %0 = load float, float* %Sca.addr, align 4, !dbg !8865
  %1 = load float, float* %Da.addr, align 4, !dbg !8866
  %mul = fmul float %0, %1, !dbg !8867
  %2 = load float, float* %Dca.addr, align 4, !dbg !8868
  %3 = load float, float* %Sa.addr, align 4, !dbg !8869
  %mul1 = fmul float %2, %3, !dbg !8870
  %add = fadd float %mul, %mul1, !dbg !8871
  %conv = fpext float %add to double, !dbg !8865
  %4 = load float, float* %Sca.addr, align 4, !dbg !8872
  %conv2 = fpext float %4 to double, !dbg !8872
  %mul3 = fmul double 2.000000e+00, %conv2, !dbg !8873
  %5 = load float, float* %Dca.addr, align 4, !dbg !8874
  %conv4 = fpext float %5 to double, !dbg !8874
  %mul5 = fmul double %mul3, %conv4, !dbg !8875
  %sub = fsub double %conv, %mul5, !dbg !8876
  %6 = load float, float* %Sca.addr, align 4, !dbg !8877
  %conv6 = fpext float %6 to double, !dbg !8877
  %7 = load float, float* %Da.addr, align 4, !dbg !8878
  %conv7 = fpext float %7 to double, !dbg !8878
  %sub8 = fsub double 1.000000e+00, %conv7, !dbg !8879
  %mul9 = fmul double %conv6, %sub8, !dbg !8880
  %add10 = fadd double %sub, %mul9, !dbg !8881
  %8 = load float, float* %Dca.addr, align 4, !dbg !8882
  %conv11 = fpext float %8 to double, !dbg !8882
  %9 = load float, float* %Sa.addr, align 4, !dbg !8883
  %conv12 = fpext float %9 to double, !dbg !8883
  %sub13 = fsub double 1.000000e+00, %conv12, !dbg !8884
  %mul14 = fmul double %conv11, %sub13, !dbg !8885
  %add15 = fadd double %add10, %mul14, !dbg !8886
  %conv16 = fptrunc double %add15 to float, !dbg !8887
  ret float %conv16, !dbg !8888
}

; Function Attrs: noinline nounwind uwtable
define internal float @Multiply(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !8889 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8892, metadata !DIExpression()), !dbg !8893
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load float, float* %Sca.addr, align 4, !dbg !8898
  %1 = load float, float* %Dca.addr, align 4, !dbg !8899
  %mul = fmul float %0, %1, !dbg !8900
  %conv = fpext float %mul to double, !dbg !8898
  %2 = load float, float* %Sca.addr, align 4, !dbg !8901
  %conv1 = fpext float %2 to double, !dbg !8901
  %3 = load float, float* %Da.addr, align 4, !dbg !8902
  %conv2 = fpext float %3 to double, !dbg !8902
  %sub = fsub double 1.000000e+00, %conv2, !dbg !8903
  %mul3 = fmul double %conv1, %sub, !dbg !8904
  %add = fadd double %conv, %mul3, !dbg !8905
  %4 = load float, float* %Dca.addr, align 4, !dbg !8906
  %conv4 = fpext float %4 to double, !dbg !8906
  %5 = load float, float* %Sa.addr, align 4, !dbg !8907
  %conv5 = fpext float %5 to double, !dbg !8907
  %sub6 = fsub double 1.000000e+00, %conv5, !dbg !8908
  %mul7 = fmul double %conv4, %sub6, !dbg !8909
  %add8 = fadd double %add, %mul7, !dbg !8910
  %conv9 = fptrunc double %add8 to float, !dbg !8911
  ret float %conv9, !dbg !8912
}

; Function Attrs: noinline nounwind uwtable
define internal float @Screen(float %Sca, float %Dca) #0 !dbg !8913 {
entry:
  %Sca.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8918, metadata !DIExpression()), !dbg !8919
  %0 = load float, float* %Sca.addr, align 4, !dbg !8920
  %1 = load float, float* %Dca.addr, align 4, !dbg !8921
  %add = fadd float %0, %1, !dbg !8922
  %2 = load float, float* %Sca.addr, align 4, !dbg !8923
  %3 = load float, float* %Dca.addr, align 4, !dbg !8924
  %mul = fmul float %2, %3, !dbg !8925
  %sub = fsub float %add, %mul, !dbg !8926
  ret float %sub, !dbg !8927
}

; Function Attrs: noinline nounwind uwtable
define internal float @Divide(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !8928 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !8935, metadata !DIExpression()), !dbg !8936
  %0 = load float, float* %Sca.addr, align 4, !dbg !8937
  %conv = fpext float %0 to double, !dbg !8937
  %1 = call double @llvm.fabs.f64(double %conv), !dbg !8939
  %cmp = fcmp olt double %1, 1.000000e-15, !dbg !8940
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8941

land.lhs.true:                                    ; preds = %entry
  %2 = load float, float* %Dca.addr, align 4, !dbg !8942
  %conv2 = fpext float %2 to double, !dbg !8942
  %3 = call double @llvm.fabs.f64(double %conv2), !dbg !8943
  %cmp3 = fcmp olt double %3, 1.000000e-15, !dbg !8944
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8945

if.then:                                          ; preds = %land.lhs.true
  %4 = load float, float* %Sca.addr, align 4, !dbg !8946
  %conv5 = fpext float %4 to double, !dbg !8946
  %5 = load float, float* %Da.addr, align 4, !dbg !8947
  %conv6 = fpext float %5 to double, !dbg !8947
  %sub = fsub double 1.000000e+00, %conv6, !dbg !8948
  %mul = fmul double %conv5, %sub, !dbg !8949
  %6 = load float, float* %Dca.addr, align 4, !dbg !8950
  %conv7 = fpext float %6 to double, !dbg !8950
  %7 = load float, float* %Sa.addr, align 4, !dbg !8951
  %conv8 = fpext float %7 to double, !dbg !8951
  %sub9 = fsub double 1.000000e+00, %conv8, !dbg !8952
  %mul10 = fmul double %conv7, %sub9, !dbg !8953
  %add = fadd double %mul, %mul10, !dbg !8954
  %conv11 = fptrunc double %add to float, !dbg !8955
  store float %conv11, float* %retval, align 4, !dbg !8956
  br label %return, !dbg !8956

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load float, float* %Dca.addr, align 4, !dbg !8957
  %conv12 = fpext float %8 to double, !dbg !8957
  %9 = call double @llvm.fabs.f64(double %conv12), !dbg !8959
  %cmp13 = fcmp olt double %9, 1.000000e-15, !dbg !8960
  br i1 %cmp13, label %if.then15, label %if.end29, !dbg !8961

if.then15:                                        ; preds = %if.end
  %10 = load float, float* %Sa.addr, align 4, !dbg !8962
  %11 = load float, float* %Da.addr, align 4, !dbg !8963
  %mul16 = fmul float %10, %11, !dbg !8964
  %conv17 = fpext float %mul16 to double, !dbg !8962
  %12 = load float, float* %Sca.addr, align 4, !dbg !8965
  %conv18 = fpext float %12 to double, !dbg !8965
  %13 = load float, float* %Da.addr, align 4, !dbg !8966
  %conv19 = fpext float %13 to double, !dbg !8966
  %sub20 = fsub double 1.000000e+00, %conv19, !dbg !8967
  %mul21 = fmul double %conv18, %sub20, !dbg !8968
  %add22 = fadd double %conv17, %mul21, !dbg !8969
  %14 = load float, float* %Dca.addr, align 4, !dbg !8970
  %conv23 = fpext float %14 to double, !dbg !8970
  %15 = load float, float* %Sa.addr, align 4, !dbg !8971
  %conv24 = fpext float %15 to double, !dbg !8971
  %sub25 = fsub double 1.000000e+00, %conv24, !dbg !8972
  %mul26 = fmul double %conv23, %sub25, !dbg !8973
  %add27 = fadd double %add22, %mul26, !dbg !8974
  %conv28 = fptrunc double %add27 to float, !dbg !8975
  store float %conv28, float* %retval, align 4, !dbg !8976
  br label %return, !dbg !8976

if.end29:                                         ; preds = %if.end
  %16 = load float, float* %Sca.addr, align 4, !dbg !8977
  %17 = load float, float* %Da.addr, align 4, !dbg !8978
  %mul30 = fmul float %16, %17, !dbg !8979
  %18 = load float, float* %Da.addr, align 4, !dbg !8980
  %mul31 = fmul float %mul30, %18, !dbg !8981
  %19 = load float, float* %Dca.addr, align 4, !dbg !8982
  %div = fdiv float %mul31, %19, !dbg !8983
  %conv32 = fpext float %div to double, !dbg !8977
  %20 = load float, float* %Sca.addr, align 4, !dbg !8984
  %conv33 = fpext float %20 to double, !dbg !8984
  %21 = load float, float* %Da.addr, align 4, !dbg !8985
  %conv34 = fpext float %21 to double, !dbg !8985
  %sub35 = fsub double 1.000000e+00, %conv34, !dbg !8986
  %mul36 = fmul double %conv33, %sub35, !dbg !8987
  %add37 = fadd double %conv32, %mul36, !dbg !8988
  %22 = load float, float* %Dca.addr, align 4, !dbg !8989
  %conv38 = fpext float %22 to double, !dbg !8989
  %23 = load float, float* %Sa.addr, align 4, !dbg !8990
  %conv39 = fpext float %23 to double, !dbg !8990
  %sub40 = fsub double 1.000000e+00, %conv39, !dbg !8991
  %mul41 = fmul double %conv38, %sub40, !dbg !8992
  %add42 = fadd double %add37, %mul41, !dbg !8993
  %conv43 = fptrunc double %add42 to float, !dbg !8994
  store float %conv43, float* %retval, align 4, !dbg !8995
  br label %return, !dbg !8995

return:                                           ; preds = %if.end29, %if.then15, %if.then
  %24 = load float, float* %retval, align 4, !dbg !8996
  ret float %24, !dbg !8996
}

; Function Attrs: noinline nounwind uwtable
define internal float @Darken(float %p, float %alpha, float %q, float %beta) #0 !dbg !8997 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %beta.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !8998, metadata !DIExpression()), !dbg !8999
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load float, float* %p.addr, align 4, !dbg !9006
  %1 = load float, float* %q.addr, align 4, !dbg !9008
  %cmp = fcmp olt float %0, %1, !dbg !9009
  br i1 %cmp, label %if.then, label %if.end, !dbg !9010

if.then:                                          ; preds = %entry
  %2 = load float, float* %p.addr, align 4, !dbg !9011
  %3 = load float, float* %alpha.addr, align 4, !dbg !9012
  %4 = load float, float* %q.addr, align 4, !dbg !9013
  %5 = load float, float* %beta.addr, align 4, !dbg !9014
  %call = call float @MagickOver_(float %2, float %3, float %4, float %5), !dbg !9015
  store float %call, float* %retval, align 4, !dbg !9016
  br label %return, !dbg !9016

if.end:                                           ; preds = %entry
  %6 = load float, float* %q.addr, align 4, !dbg !9017
  %7 = load float, float* %beta.addr, align 4, !dbg !9018
  %8 = load float, float* %p.addr, align 4, !dbg !9019
  %9 = load float, float* %alpha.addr, align 4, !dbg !9020
  %call1 = call float @MagickOver_(float %6, float %7, float %8, float %9), !dbg !9021
  store float %call1, float* %retval, align 4, !dbg !9022
  br label %return, !dbg !9022

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !9023
  ret float %10, !dbg !9023
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !9024 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  %0 = load double, double* %x.addr, align 8, !dbg !9029
  %1 = load double, double* %y.addr, align 8, !dbg !9031
  %cmp = fcmp ogt double %0, %1, !dbg !9032
  br i1 %cmp, label %if.then, label %if.end, !dbg !9033

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !9034
  store double %2, double* %retval, align 8, !dbg !9035
  br label %return, !dbg !9035

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !9036
  store double %3, double* %retval, align 8, !dbg !9037
  br label %return, !dbg !9037

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !9038
  ret double %4, !dbg !9038
}

; Function Attrs: noinline nounwind uwtable
define internal float @Lighten(float %p, float %alpha, float %q, float %beta) #0 !dbg !9039 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %beta.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  %0 = load float, float* %p.addr, align 4, !dbg !9048
  %1 = load float, float* %q.addr, align 4, !dbg !9050
  %cmp = fcmp ogt float %0, %1, !dbg !9051
  br i1 %cmp, label %if.then, label %if.end, !dbg !9052

if.then:                                          ; preds = %entry
  %2 = load float, float* %p.addr, align 4, !dbg !9053
  %3 = load float, float* %alpha.addr, align 4, !dbg !9054
  %4 = load float, float* %q.addr, align 4, !dbg !9055
  %5 = load float, float* %beta.addr, align 4, !dbg !9056
  %call = call float @MagickOver_(float %2, float %3, float %4, float %5), !dbg !9057
  store float %call, float* %retval, align 4, !dbg !9058
  br label %return, !dbg !9058

if.end:                                           ; preds = %entry
  %6 = load float, float* %q.addr, align 4, !dbg !9059
  %7 = load float, float* %beta.addr, align 4, !dbg !9060
  %8 = load float, float* %p.addr, align 4, !dbg !9061
  %9 = load float, float* %alpha.addr, align 4, !dbg !9062
  %call1 = call float @MagickOver_(float %6, float %7, float %8, float %9), !dbg !9063
  store float %call1, float* %retval, align 4, !dbg !9064
  br label %return, !dbg !9064

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !9065
  ret float %10, !dbg !9065
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickPixelIntensity(%struct._MagickPixelPacket* %pixel) #0 !dbg !9066 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !9069, metadata !DIExpression()), !dbg !9070
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9071
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !9073
  %1 = load i32, i32* %colorspace, align 4, !dbg !9073
  %cmp = icmp eq i32 %1, 2, !dbg !9074
  br i1 %cmp, label %if.then, label %if.end, !dbg !9075

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9076
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !9077
  %3 = load float, float* %red, align 8, !dbg !9077
  store float %3, float* %retval, align 4, !dbg !9078
  br label %return, !dbg !9078

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9079
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !9080
  %5 = load float, float* %red1, align 8, !dbg !9080
  %conv = fpext float %5 to double, !dbg !9079
  %mul = fmul double 2.126560e-01, %conv, !dbg !9081
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9082
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !9083
  %7 = load float, float* %green, align 4, !dbg !9083
  %conv2 = fpext float %7 to double, !dbg !9082
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !9084
  %add = fadd double %mul, %mul3, !dbg !9085
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9086
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !9087
  %9 = load float, float* %blue, align 8, !dbg !9087
  %conv4 = fpext float %9 to double, !dbg !9086
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !9088
  %add6 = fadd double %add, %mul5, !dbg !9089
  %conv7 = fptrunc double %add6 to float, !dbg !9090
  store float %conv7, float* %retval, align 4, !dbg !9091
  br label %return, !dbg !9091

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !9092
  ret float %10, !dbg !9092
}

; Function Attrs: noinline nounwind uwtable
define internal float @Mathematics(float %Sca, float %Sa, float %Dca, float %Da, %struct._GeometryInfo* %geometry_info) #0 !dbg !9093 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  %geometry_info.addr = alloca %struct._GeometryInfo*, align 8
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store %struct._GeometryInfo* %geometry_info, %struct._GeometryInfo** %geometry_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo** %geometry_info.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  %0 = load %struct._GeometryInfo*, %struct._GeometryInfo** %geometry_info.addr, align 8, !dbg !9106
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %0, i32 0, i32 0, !dbg !9107
  %1 = load double, double* %rho, align 8, !dbg !9107
  %2 = load float, float* %Sca.addr, align 4, !dbg !9108
  %conv = fpext float %2 to double, !dbg !9108
  %mul = fmul double %1, %conv, !dbg !9109
  %3 = load float, float* %Dca.addr, align 4, !dbg !9110
  %conv1 = fpext float %3 to double, !dbg !9110
  %mul2 = fmul double %mul, %conv1, !dbg !9111
  %4 = load %struct._GeometryInfo*, %struct._GeometryInfo** %geometry_info.addr, align 8, !dbg !9112
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %4, i32 0, i32 1, !dbg !9113
  %5 = load double, double* %sigma, align 8, !dbg !9113
  %6 = load float, float* %Sca.addr, align 4, !dbg !9114
  %conv3 = fpext float %6 to double, !dbg !9114
  %mul4 = fmul double %5, %conv3, !dbg !9115
  %7 = load float, float* %Da.addr, align 4, !dbg !9116
  %conv5 = fpext float %7 to double, !dbg !9116
  %mul6 = fmul double %mul4, %conv5, !dbg !9117
  %add = fadd double %mul2, %mul6, !dbg !9118
  %8 = load %struct._GeometryInfo*, %struct._GeometryInfo** %geometry_info.addr, align 8, !dbg !9119
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %8, i32 0, i32 2, !dbg !9120
  %9 = load double, double* %xi, align 8, !dbg !9120
  %10 = load float, float* %Dca.addr, align 4, !dbg !9121
  %conv7 = fpext float %10 to double, !dbg !9121
  %mul8 = fmul double %9, %conv7, !dbg !9122
  %11 = load float, float* %Sa.addr, align 4, !dbg !9123
  %conv9 = fpext float %11 to double, !dbg !9123
  %mul10 = fmul double %mul8, %conv9, !dbg !9124
  %add11 = fadd double %add, %mul10, !dbg !9125
  %12 = load %struct._GeometryInfo*, %struct._GeometryInfo** %geometry_info.addr, align 8, !dbg !9126
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %12, i32 0, i32 3, !dbg !9127
  %13 = load double, double* %psi, align 8, !dbg !9127
  %14 = load float, float* %Sa.addr, align 4, !dbg !9128
  %conv12 = fpext float %14 to double, !dbg !9128
  %mul13 = fmul double %13, %conv12, !dbg !9129
  %15 = load float, float* %Da.addr, align 4, !dbg !9130
  %conv14 = fpext float %15 to double, !dbg !9130
  %mul15 = fmul double %mul13, %conv14, !dbg !9131
  %add16 = fadd double %add11, %mul15, !dbg !9132
  %16 = load float, float* %Sca.addr, align 4, !dbg !9133
  %conv17 = fpext float %16 to double, !dbg !9133
  %17 = load float, float* %Da.addr, align 4, !dbg !9134
  %conv18 = fpext float %17 to double, !dbg !9134
  %sub = fsub double 1.000000e+00, %conv18, !dbg !9135
  %mul19 = fmul double %conv17, %sub, !dbg !9136
  %add20 = fadd double %add16, %mul19, !dbg !9137
  %18 = load float, float* %Dca.addr, align 4, !dbg !9138
  %conv21 = fpext float %18 to double, !dbg !9138
  %19 = load float, float* %Sa.addr, align 4, !dbg !9139
  %conv22 = fpext float %19 to double, !dbg !9139
  %sub23 = fsub double 1.000000e+00, %conv22, !dbg !9140
  %mul24 = fmul double %conv21, %sub23, !dbg !9141
  %add25 = fadd double %add20, %mul24, !dbg !9142
  %conv26 = fptrunc double %add25 to float, !dbg !9143
  ret float %conv26, !dbg !9144
}

; Function Attrs: noinline nounwind uwtable
define internal float @ColorDodge(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9145 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9146, metadata !DIExpression()), !dbg !9147
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9148, metadata !DIExpression()), !dbg !9149
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load float, float* %Sca.addr, align 4, !dbg !9154
  %1 = load float, float* %Da.addr, align 4, !dbg !9156
  %mul = fmul float %0, %1, !dbg !9157
  %2 = load float, float* %Dca.addr, align 4, !dbg !9158
  %3 = load float, float* %Sa.addr, align 4, !dbg !9159
  %mul1 = fmul float %2, %3, !dbg !9160
  %add = fadd float %mul, %mul1, !dbg !9161
  %4 = load float, float* %Sa.addr, align 4, !dbg !9162
  %5 = load float, float* %Da.addr, align 4, !dbg !9163
  %mul2 = fmul float %4, %5, !dbg !9164
  %cmp = fcmp oge float %add, %mul2, !dbg !9165
  br i1 %cmp, label %if.then, label %if.end, !dbg !9166

if.then:                                          ; preds = %entry
  %6 = load float, float* %Sa.addr, align 4, !dbg !9167
  %7 = load float, float* %Da.addr, align 4, !dbg !9168
  %mul3 = fmul float %6, %7, !dbg !9169
  %conv = fpext float %mul3 to double, !dbg !9167
  %8 = load float, float* %Sca.addr, align 4, !dbg !9170
  %conv4 = fpext float %8 to double, !dbg !9170
  %9 = load float, float* %Da.addr, align 4, !dbg !9171
  %conv5 = fpext float %9 to double, !dbg !9171
  %sub = fsub double 1.000000e+00, %conv5, !dbg !9172
  %mul6 = fmul double %conv4, %sub, !dbg !9173
  %add7 = fadd double %conv, %mul6, !dbg !9174
  %10 = load float, float* %Dca.addr, align 4, !dbg !9175
  %conv8 = fpext float %10 to double, !dbg !9175
  %11 = load float, float* %Sa.addr, align 4, !dbg !9176
  %conv9 = fpext float %11 to double, !dbg !9176
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !9177
  %mul11 = fmul double %conv8, %sub10, !dbg !9178
  %add12 = fadd double %add7, %mul11, !dbg !9179
  %conv13 = fptrunc double %add12 to float, !dbg !9180
  store float %conv13, float* %retval, align 4, !dbg !9181
  br label %return, !dbg !9181

if.end:                                           ; preds = %entry
  %12 = load float, float* %Dca.addr, align 4, !dbg !9182
  %13 = load float, float* %Sa.addr, align 4, !dbg !9183
  %mul14 = fmul float %12, %13, !dbg !9184
  %14 = load float, float* %Sa.addr, align 4, !dbg !9185
  %mul15 = fmul float %mul14, %14, !dbg !9186
  %15 = load float, float* %Sa.addr, align 4, !dbg !9187
  %16 = load float, float* %Sca.addr, align 4, !dbg !9188
  %sub16 = fsub float %15, %16, !dbg !9189
  %div = fdiv float %mul15, %sub16, !dbg !9190
  %conv17 = fpext float %div to double, !dbg !9182
  %17 = load float, float* %Sca.addr, align 4, !dbg !9191
  %conv18 = fpext float %17 to double, !dbg !9191
  %18 = load float, float* %Da.addr, align 4, !dbg !9192
  %conv19 = fpext float %18 to double, !dbg !9192
  %sub20 = fsub double 1.000000e+00, %conv19, !dbg !9193
  %mul21 = fmul double %conv18, %sub20, !dbg !9194
  %add22 = fadd double %conv17, %mul21, !dbg !9195
  %19 = load float, float* %Dca.addr, align 4, !dbg !9196
  %conv23 = fpext float %19 to double, !dbg !9196
  %20 = load float, float* %Sa.addr, align 4, !dbg !9197
  %conv24 = fpext float %20 to double, !dbg !9197
  %sub25 = fsub double 1.000000e+00, %conv24, !dbg !9198
  %mul26 = fmul double %conv23, %sub25, !dbg !9199
  %add27 = fadd double %add22, %mul26, !dbg !9200
  %conv28 = fptrunc double %add27 to float, !dbg !9201
  store float %conv28, float* %retval, align 4, !dbg !9202
  br label %return, !dbg !9202

return:                                           ; preds = %if.end, %if.then
  %21 = load float, float* %retval, align 4, !dbg !9203
  ret float %21, !dbg !9203
}

; Function Attrs: noinline nounwind uwtable
define internal float @ColorBurn(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9204 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9205, metadata !DIExpression()), !dbg !9206
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  %0 = load float, float* %Sca.addr, align 4, !dbg !9213
  %conv = fpext float %0 to double, !dbg !9213
  %1 = call double @llvm.fabs.f64(double %conv), !dbg !9215
  %cmp = fcmp olt double %1, 1.000000e-15, !dbg !9216
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9217

land.lhs.true:                                    ; preds = %entry
  %2 = load float, float* %Dca.addr, align 4, !dbg !9218
  %3 = load float, float* %Da.addr, align 4, !dbg !9219
  %sub = fsub float %2, %3, !dbg !9220
  %conv2 = fpext float %sub to double, !dbg !9218
  %4 = call double @llvm.fabs.f64(double %conv2), !dbg !9221
  %cmp3 = fcmp olt double %4, 1.000000e-15, !dbg !9222
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9223

if.then:                                          ; preds = %land.lhs.true
  %5 = load float, float* %Sa.addr, align 4, !dbg !9224
  %6 = load float, float* %Da.addr, align 4, !dbg !9225
  %mul = fmul float %5, %6, !dbg !9226
  %conv5 = fpext float %mul to double, !dbg !9224
  %7 = load float, float* %Dca.addr, align 4, !dbg !9227
  %conv6 = fpext float %7 to double, !dbg !9227
  %8 = load float, float* %Sa.addr, align 4, !dbg !9228
  %conv7 = fpext float %8 to double, !dbg !9228
  %sub8 = fsub double 1.000000e+00, %conv7, !dbg !9229
  %mul9 = fmul double %conv6, %sub8, !dbg !9230
  %add = fadd double %conv5, %mul9, !dbg !9231
  %conv10 = fptrunc double %add to float, !dbg !9232
  store float %conv10, float* %retval, align 4, !dbg !9233
  br label %return, !dbg !9233

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load float, float* %Sca.addr, align 4, !dbg !9234
  %conv11 = fpext float %9 to double, !dbg !9234
  %cmp12 = fcmp olt double %conv11, 1.000000e-15, !dbg !9236
  br i1 %cmp12, label %if.then14, label %if.end20, !dbg !9237

if.then14:                                        ; preds = %if.end
  %10 = load float, float* %Dca.addr, align 4, !dbg !9238
  %conv15 = fpext float %10 to double, !dbg !9238
  %11 = load float, float* %Sa.addr, align 4, !dbg !9239
  %conv16 = fpext float %11 to double, !dbg !9239
  %sub17 = fsub double 1.000000e+00, %conv16, !dbg !9240
  %mul18 = fmul double %conv15, %sub17, !dbg !9241
  %conv19 = fptrunc double %mul18 to float, !dbg !9242
  store float %conv19, float* %retval, align 4, !dbg !9243
  br label %return, !dbg !9243

if.end20:                                         ; preds = %if.end
  %12 = load float, float* %Sa.addr, align 4, !dbg !9244
  %13 = load float, float* %Da.addr, align 4, !dbg !9245
  %mul21 = fmul float %12, %13, !dbg !9246
  %conv22 = fpext float %mul21 to double, !dbg !9244
  %14 = load float, float* %Sa.addr, align 4, !dbg !9247
  %conv23 = fpext float %14 to double, !dbg !9247
  %15 = load float, float* %Da.addr, align 4, !dbg !9248
  %conv24 = fpext float %15 to double, !dbg !9248
  %16 = load float, float* %Da.addr, align 4, !dbg !9249
  %17 = load float, float* %Dca.addr, align 4, !dbg !9250
  %sub25 = fsub float %16, %17, !dbg !9251
  %18 = load float, float* %Sa.addr, align 4, !dbg !9252
  %mul26 = fmul float %sub25, %18, !dbg !9253
  %19 = load float, float* %Sca.addr, align 4, !dbg !9254
  %div = fdiv float %mul26, %19, !dbg !9255
  %conv27 = fpext float %div to double, !dbg !9256
  %call = call double @MagickMin(double %conv24, double %conv27), !dbg !9257
  %mul28 = fmul double %conv23, %call, !dbg !9258
  %sub29 = fsub double %conv22, %mul28, !dbg !9259
  %20 = load float, float* %Sca.addr, align 4, !dbg !9260
  %conv30 = fpext float %20 to double, !dbg !9260
  %21 = load float, float* %Da.addr, align 4, !dbg !9261
  %conv31 = fpext float %21 to double, !dbg !9261
  %sub32 = fsub double 1.000000e+00, %conv31, !dbg !9262
  %mul33 = fmul double %conv30, %sub32, !dbg !9263
  %add34 = fadd double %sub29, %mul33, !dbg !9264
  %22 = load float, float* %Dca.addr, align 4, !dbg !9265
  %conv35 = fpext float %22 to double, !dbg !9265
  %23 = load float, float* %Sa.addr, align 4, !dbg !9266
  %conv36 = fpext float %23 to double, !dbg !9266
  %sub37 = fsub double 1.000000e+00, %conv36, !dbg !9267
  %mul38 = fmul double %conv35, %sub37, !dbg !9268
  %add39 = fadd double %add34, %mul38, !dbg !9269
  %conv40 = fptrunc double %add39 to float, !dbg !9270
  store float %conv40, float* %retval, align 4, !dbg !9271
  br label %return, !dbg !9271

return:                                           ; preds = %if.end20, %if.then14, %if.then
  %24 = load float, float* %retval, align 4, !dbg !9272
  ret float %24, !dbg !9272
}

; Function Attrs: noinline nounwind uwtable
define internal float @LinearBurn(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9273 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9276, metadata !DIExpression()), !dbg !9277
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  %0 = load float, float* %Sca.addr, align 4, !dbg !9282
  %1 = load float, float* %Dca.addr, align 4, !dbg !9283
  %add = fadd float %0, %1, !dbg !9284
  %2 = load float, float* %Sa.addr, align 4, !dbg !9285
  %3 = load float, float* %Da.addr, align 4, !dbg !9286
  %mul = fmul float %2, %3, !dbg !9287
  %sub = fsub float %add, %mul, !dbg !9288
  ret float %sub, !dbg !9289
}

; Function Attrs: noinline nounwind uwtable
define internal float @HardLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9290 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9291, metadata !DIExpression()), !dbg !9292
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  %0 = load float, float* %Sca.addr, align 4, !dbg !9299
  %conv = fpext float %0 to double, !dbg !9299
  %mul = fmul double 2.000000e+00, %conv, !dbg !9301
  %1 = load float, float* %Sa.addr, align 4, !dbg !9302
  %conv1 = fpext float %1 to double, !dbg !9302
  %cmp = fcmp olt double %mul, %conv1, !dbg !9303
  br i1 %cmp, label %if.then, label %if.end, !dbg !9304

if.then:                                          ; preds = %entry
  %2 = load float, float* %Sca.addr, align 4, !dbg !9305
  %conv3 = fpext float %2 to double, !dbg !9305
  %mul4 = fmul double 2.000000e+00, %conv3, !dbg !9306
  %3 = load float, float* %Dca.addr, align 4, !dbg !9307
  %conv5 = fpext float %3 to double, !dbg !9307
  %mul6 = fmul double %mul4, %conv5, !dbg !9308
  %4 = load float, float* %Sca.addr, align 4, !dbg !9309
  %conv7 = fpext float %4 to double, !dbg !9309
  %5 = load float, float* %Da.addr, align 4, !dbg !9310
  %conv8 = fpext float %5 to double, !dbg !9310
  %sub = fsub double 1.000000e+00, %conv8, !dbg !9311
  %mul9 = fmul double %conv7, %sub, !dbg !9312
  %add = fadd double %mul6, %mul9, !dbg !9313
  %6 = load float, float* %Dca.addr, align 4, !dbg !9314
  %conv10 = fpext float %6 to double, !dbg !9314
  %7 = load float, float* %Sa.addr, align 4, !dbg !9315
  %conv11 = fpext float %7 to double, !dbg !9315
  %sub12 = fsub double 1.000000e+00, %conv11, !dbg !9316
  %mul13 = fmul double %conv10, %sub12, !dbg !9317
  %add14 = fadd double %add, %mul13, !dbg !9318
  %conv15 = fptrunc double %add14 to float, !dbg !9319
  store float %conv15, float* %retval, align 4, !dbg !9320
  br label %return, !dbg !9320

if.end:                                           ; preds = %entry
  %8 = load float, float* %Sa.addr, align 4, !dbg !9321
  %9 = load float, float* %Da.addr, align 4, !dbg !9322
  %mul16 = fmul float %8, %9, !dbg !9323
  %conv17 = fpext float %mul16 to double, !dbg !9321
  %10 = load float, float* %Da.addr, align 4, !dbg !9324
  %11 = load float, float* %Dca.addr, align 4, !dbg !9325
  %sub18 = fsub float %10, %11, !dbg !9326
  %conv19 = fpext float %sub18 to double, !dbg !9327
  %mul20 = fmul double 2.000000e+00, %conv19, !dbg !9328
  %12 = load float, float* %Sa.addr, align 4, !dbg !9329
  %13 = load float, float* %Sca.addr, align 4, !dbg !9330
  %sub21 = fsub float %12, %13, !dbg !9331
  %conv22 = fpext float %sub21 to double, !dbg !9332
  %mul23 = fmul double %mul20, %conv22, !dbg !9333
  %sub24 = fsub double %conv17, %mul23, !dbg !9334
  %14 = load float, float* %Sca.addr, align 4, !dbg !9335
  %conv25 = fpext float %14 to double, !dbg !9335
  %15 = load float, float* %Da.addr, align 4, !dbg !9336
  %conv26 = fpext float %15 to double, !dbg !9336
  %sub27 = fsub double 1.000000e+00, %conv26, !dbg !9337
  %mul28 = fmul double %conv25, %sub27, !dbg !9338
  %add29 = fadd double %sub24, %mul28, !dbg !9339
  %16 = load float, float* %Dca.addr, align 4, !dbg !9340
  %conv30 = fpext float %16 to double, !dbg !9340
  %17 = load float, float* %Sa.addr, align 4, !dbg !9341
  %conv31 = fpext float %17 to double, !dbg !9341
  %sub32 = fsub double 1.000000e+00, %conv31, !dbg !9342
  %mul33 = fmul double %conv30, %sub32, !dbg !9343
  %add34 = fadd double %add29, %mul33, !dbg !9344
  %conv35 = fptrunc double %add34 to float, !dbg !9345
  store float %conv35, float* %retval, align 4, !dbg !9346
  br label %return, !dbg !9346

return:                                           ; preds = %if.end, %if.then
  %18 = load float, float* %retval, align 4, !dbg !9347
  ret float %18, !dbg !9347
}

; Function Attrs: noinline nounwind uwtable
define internal float @SoftLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9348 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  %alpha = alloca float, align 4
  %beta = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9349, metadata !DIExpression()), !dbg !9350
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.declare(metadata float* %beta, metadata !9359, metadata !DIExpression()), !dbg !9360
  %0 = load float, float* %Dca.addr, align 4, !dbg !9361
  %1 = load float, float* %Da.addr, align 4, !dbg !9362
  %div = fdiv float %0, %1, !dbg !9363
  store float %div, float* %alpha, align 4, !dbg !9364
  %2 = load float, float* %Sca.addr, align 4, !dbg !9365
  %conv = fpext float %2 to double, !dbg !9365
  %mul = fmul double 2.000000e+00, %conv, !dbg !9367
  %3 = load float, float* %Sa.addr, align 4, !dbg !9368
  %conv1 = fpext float %3 to double, !dbg !9368
  %cmp = fcmp olt double %mul, %conv1, !dbg !9369
  br i1 %cmp, label %if.then, label %if.end, !dbg !9370

if.then:                                          ; preds = %entry
  %4 = load float, float* %Dca.addr, align 4, !dbg !9371
  %conv3 = fpext float %4 to double, !dbg !9371
  %5 = load float, float* %Sa.addr, align 4, !dbg !9372
  %conv4 = fpext float %5 to double, !dbg !9372
  %6 = load float, float* %Sca.addr, align 4, !dbg !9373
  %conv5 = fpext float %6 to double, !dbg !9373
  %mul6 = fmul double 2.000000e+00, %conv5, !dbg !9374
  %7 = load float, float* %Sa.addr, align 4, !dbg !9375
  %conv7 = fpext float %7 to double, !dbg !9375
  %sub = fsub double %mul6, %conv7, !dbg !9376
  %8 = load float, float* %alpha, align 4, !dbg !9377
  %conv8 = fpext float %8 to double, !dbg !9377
  %sub9 = fsub double 1.000000e+00, %conv8, !dbg !9378
  %mul10 = fmul double %sub, %sub9, !dbg !9379
  %add = fadd double %conv4, %mul10, !dbg !9380
  %mul11 = fmul double %conv3, %add, !dbg !9381
  %9 = load float, float* %Sca.addr, align 4, !dbg !9382
  %conv12 = fpext float %9 to double, !dbg !9382
  %10 = load float, float* %Da.addr, align 4, !dbg !9383
  %conv13 = fpext float %10 to double, !dbg !9383
  %sub14 = fsub double 1.000000e+00, %conv13, !dbg !9384
  %mul15 = fmul double %conv12, %sub14, !dbg !9385
  %add16 = fadd double %mul11, %mul15, !dbg !9386
  %11 = load float, float* %Dca.addr, align 4, !dbg !9387
  %conv17 = fpext float %11 to double, !dbg !9387
  %12 = load float, float* %Sa.addr, align 4, !dbg !9388
  %conv18 = fpext float %12 to double, !dbg !9388
  %sub19 = fsub double 1.000000e+00, %conv18, !dbg !9389
  %mul20 = fmul double %conv17, %sub19, !dbg !9390
  %add21 = fadd double %add16, %mul20, !dbg !9391
  %conv22 = fptrunc double %add21 to float, !dbg !9392
  store float %conv22, float* %retval, align 4, !dbg !9393
  br label %return, !dbg !9393

if.end:                                           ; preds = %entry
  %13 = load float, float* %Sca.addr, align 4, !dbg !9394
  %conv23 = fpext float %13 to double, !dbg !9394
  %mul24 = fmul double 2.000000e+00, %conv23, !dbg !9396
  %14 = load float, float* %Sa.addr, align 4, !dbg !9397
  %conv25 = fpext float %14 to double, !dbg !9397
  %cmp26 = fcmp ogt double %mul24, %conv25, !dbg !9398
  br i1 %cmp26, label %land.lhs.true, label %if.end67, !dbg !9399

land.lhs.true:                                    ; preds = %if.end
  %15 = load float, float* %Dca.addr, align 4, !dbg !9400
  %conv28 = fpext float %15 to double, !dbg !9400
  %mul29 = fmul double 4.000000e+00, %conv28, !dbg !9401
  %16 = load float, float* %Da.addr, align 4, !dbg !9402
  %conv30 = fpext float %16 to double, !dbg !9402
  %cmp31 = fcmp ole double %mul29, %conv30, !dbg !9403
  br i1 %cmp31, label %if.then33, label %if.end67, !dbg !9404

if.then33:                                        ; preds = %land.lhs.true
  %17 = load float, float* %Dca.addr, align 4, !dbg !9405
  %18 = load float, float* %Sa.addr, align 4, !dbg !9407
  %mul34 = fmul float %17, %18, !dbg !9408
  %conv35 = fpext float %mul34 to double, !dbg !9405
  %19 = load float, float* %Da.addr, align 4, !dbg !9409
  %conv36 = fpext float %19 to double, !dbg !9409
  %20 = load float, float* %Sca.addr, align 4, !dbg !9410
  %conv37 = fpext float %20 to double, !dbg !9410
  %mul38 = fmul double 2.000000e+00, %conv37, !dbg !9411
  %21 = load float, float* %Sa.addr, align 4, !dbg !9412
  %conv39 = fpext float %21 to double, !dbg !9412
  %sub40 = fsub double %mul38, %conv39, !dbg !9413
  %mul41 = fmul double %conv36, %sub40, !dbg !9414
  %22 = load float, float* %alpha, align 4, !dbg !9415
  %conv42 = fpext float %22 to double, !dbg !9415
  %mul43 = fmul double 4.000000e+00, %conv42, !dbg !9416
  %23 = load float, float* %alpha, align 4, !dbg !9417
  %conv44 = fpext float %23 to double, !dbg !9417
  %mul45 = fmul double 4.000000e+00, %conv44, !dbg !9418
  %add46 = fadd double %mul45, 1.000000e+00, !dbg !9419
  %mul47 = fmul double %mul43, %add46, !dbg !9420
  %24 = load float, float* %alpha, align 4, !dbg !9421
  %conv48 = fpext float %24 to double, !dbg !9421
  %sub49 = fsub double %conv48, 1.000000e+00, !dbg !9422
  %mul50 = fmul double %mul47, %sub49, !dbg !9423
  %25 = load float, float* %alpha, align 4, !dbg !9424
  %conv51 = fpext float %25 to double, !dbg !9424
  %mul52 = fmul double 7.000000e+00, %conv51, !dbg !9425
  %add53 = fadd double %mul50, %mul52, !dbg !9426
  %mul54 = fmul double %mul41, %add53, !dbg !9427
  %add55 = fadd double %conv35, %mul54, !dbg !9428
  %26 = load float, float* %Sca.addr, align 4, !dbg !9429
  %conv56 = fpext float %26 to double, !dbg !9429
  %27 = load float, float* %Da.addr, align 4, !dbg !9430
  %conv57 = fpext float %27 to double, !dbg !9430
  %sub58 = fsub double 1.000000e+00, %conv57, !dbg !9431
  %mul59 = fmul double %conv56, %sub58, !dbg !9432
  %add60 = fadd double %add55, %mul59, !dbg !9433
  %28 = load float, float* %Dca.addr, align 4, !dbg !9434
  %conv61 = fpext float %28 to double, !dbg !9434
  %29 = load float, float* %Sa.addr, align 4, !dbg !9435
  %conv62 = fpext float %29 to double, !dbg !9435
  %sub63 = fsub double 1.000000e+00, %conv62, !dbg !9436
  %mul64 = fmul double %conv61, %sub63, !dbg !9437
  %add65 = fadd double %add60, %mul64, !dbg !9438
  %conv66 = fptrunc double %add65 to float, !dbg !9405
  store float %conv66, float* %beta, align 4, !dbg !9439
  %30 = load float, float* %beta, align 4, !dbg !9440
  store float %30, float* %retval, align 4, !dbg !9441
  br label %return, !dbg !9441

if.end67:                                         ; preds = %land.lhs.true, %if.end
  %31 = load float, float* %Dca.addr, align 4, !dbg !9442
  %32 = load float, float* %Sa.addr, align 4, !dbg !9443
  %mul68 = fmul float %31, %32, !dbg !9444
  %conv69 = fpext float %mul68 to double, !dbg !9442
  %33 = load float, float* %Da.addr, align 4, !dbg !9445
  %conv70 = fpext float %33 to double, !dbg !9445
  %34 = load float, float* %Sca.addr, align 4, !dbg !9446
  %conv71 = fpext float %34 to double, !dbg !9446
  %mul72 = fmul double 2.000000e+00, %conv71, !dbg !9447
  %35 = load float, float* %Sa.addr, align 4, !dbg !9448
  %conv73 = fpext float %35 to double, !dbg !9448
  %sub74 = fsub double %mul72, %conv73, !dbg !9449
  %mul75 = fmul double %conv70, %sub74, !dbg !9450
  %36 = load float, float* %alpha, align 4, !dbg !9451
  %conv76 = fpext float %36 to double, !dbg !9451
  %call = call double @pow(double %conv76, double 5.000000e-01) #5, !dbg !9452
  %37 = load float, float* %alpha, align 4, !dbg !9453
  %conv77 = fpext float %37 to double, !dbg !9453
  %sub78 = fsub double %call, %conv77, !dbg !9454
  %mul79 = fmul double %mul75, %sub78, !dbg !9455
  %add80 = fadd double %conv69, %mul79, !dbg !9456
  %38 = load float, float* %Sca.addr, align 4, !dbg !9457
  %conv81 = fpext float %38 to double, !dbg !9457
  %39 = load float, float* %Da.addr, align 4, !dbg !9458
  %conv82 = fpext float %39 to double, !dbg !9458
  %sub83 = fsub double 1.000000e+00, %conv82, !dbg !9459
  %mul84 = fmul double %conv81, %sub83, !dbg !9460
  %add85 = fadd double %add80, %mul84, !dbg !9461
  %40 = load float, float* %Dca.addr, align 4, !dbg !9462
  %conv86 = fpext float %40 to double, !dbg !9462
  %41 = load float, float* %Sa.addr, align 4, !dbg !9463
  %conv87 = fpext float %41 to double, !dbg !9463
  %sub88 = fsub double 1.000000e+00, %conv87, !dbg !9464
  %mul89 = fmul double %conv86, %sub88, !dbg !9465
  %add90 = fadd double %add85, %mul89, !dbg !9466
  %conv91 = fptrunc double %add90 to float, !dbg !9442
  store float %conv91, float* %beta, align 4, !dbg !9467
  %42 = load float, float* %beta, align 4, !dbg !9468
  store float %42, float* %retval, align 4, !dbg !9469
  br label %return, !dbg !9469

return:                                           ; preds = %if.end67, %if.then33, %if.then
  %43 = load float, float* %retval, align 4, !dbg !9470
  ret float %43, !dbg !9470
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #3

; Function Attrs: noinline nounwind uwtable
define internal float @LinearLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9471 {
entry:
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9478, metadata !DIExpression()), !dbg !9479
  %0 = load float, float* %Sca.addr, align 4, !dbg !9480
  %1 = load float, float* %Sa.addr, align 4, !dbg !9481
  %sub = fsub float %0, %1, !dbg !9482
  %2 = load float, float* %Da.addr, align 4, !dbg !9483
  %mul = fmul float %sub, %2, !dbg !9484
  %3 = load float, float* %Sca.addr, align 4, !dbg !9485
  %add = fadd float %mul, %3, !dbg !9486
  %4 = load float, float* %Dca.addr, align 4, !dbg !9487
  %add1 = fadd float %add, %4, !dbg !9488
  ret float %add1, !dbg !9489
}

; Function Attrs: noinline nounwind uwtable
define internal float @PegtopLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9490 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  %0 = load float, float* %Da.addr, align 4, !dbg !9499
  %conv = fpext float %0 to double, !dbg !9499
  %1 = call double @llvm.fabs.f64(double %conv), !dbg !9501
  %cmp = fcmp olt double %1, 1.000000e-15, !dbg !9502
  br i1 %cmp, label %if.then, label %if.end, !dbg !9503

if.then:                                          ; preds = %entry
  %2 = load float, float* %Sca.addr, align 4, !dbg !9504
  store float %2, float* %retval, align 4, !dbg !9505
  br label %return, !dbg !9505

if.end:                                           ; preds = %entry
  %3 = load float, float* %Dca.addr, align 4, !dbg !9506
  %4 = load float, float* %Dca.addr, align 4, !dbg !9507
  %mul = fmul float %3, %4, !dbg !9508
  %conv2 = fpext float %mul to double, !dbg !9506
  %5 = load float, float* %Sa.addr, align 4, !dbg !9509
  %conv3 = fpext float %5 to double, !dbg !9509
  %6 = load float, float* %Sca.addr, align 4, !dbg !9510
  %conv4 = fpext float %6 to double, !dbg !9510
  %mul5 = fmul double 2.000000e+00, %conv4, !dbg !9511
  %sub = fsub double %conv3, %mul5, !dbg !9512
  %mul6 = fmul double %conv2, %sub, !dbg !9513
  %7 = load float, float* %Da.addr, align 4, !dbg !9514
  %conv7 = fpext float %7 to double, !dbg !9514
  %div = fdiv double %mul6, %conv7, !dbg !9515
  %8 = load float, float* %Sca.addr, align 4, !dbg !9516
  %conv8 = fpext float %8 to double, !dbg !9516
  %9 = load float, float* %Dca.addr, align 4, !dbg !9517
  %conv9 = fpext float %9 to double, !dbg !9517
  %mul10 = fmul double 2.000000e+00, %conv9, !dbg !9518
  %add = fadd double %mul10, 1.000000e+00, !dbg !9519
  %10 = load float, float* %Da.addr, align 4, !dbg !9520
  %conv11 = fpext float %10 to double, !dbg !9520
  %sub12 = fsub double %add, %conv11, !dbg !9521
  %mul13 = fmul double %conv8, %sub12, !dbg !9522
  %add14 = fadd double %div, %mul13, !dbg !9523
  %11 = load float, float* %Dca.addr, align 4, !dbg !9524
  %conv15 = fpext float %11 to double, !dbg !9524
  %12 = load float, float* %Sa.addr, align 4, !dbg !9525
  %conv16 = fpext float %12 to double, !dbg !9525
  %sub17 = fsub double 1.000000e+00, %conv16, !dbg !9526
  %mul18 = fmul double %conv15, %sub17, !dbg !9527
  %add19 = fadd double %add14, %mul18, !dbg !9528
  %conv20 = fptrunc double %add19 to float, !dbg !9529
  store float %conv20, float* %retval, align 4, !dbg !9530
  br label %return, !dbg !9530

return:                                           ; preds = %if.end, %if.then
  %13 = load float, float* %retval, align 4, !dbg !9531
  ret float %13, !dbg !9531
}

; Function Attrs: noinline nounwind uwtable
define internal float @VividLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9532 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9533, metadata !DIExpression()), !dbg !9534
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9535, metadata !DIExpression()), !dbg !9536
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9537, metadata !DIExpression()), !dbg !9538
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9539, metadata !DIExpression()), !dbg !9540
  %0 = load float, float* %Sa.addr, align 4, !dbg !9541
  %conv = fpext float %0 to double, !dbg !9541
  %1 = call double @llvm.fabs.f64(double %conv), !dbg !9543
  %cmp = fcmp olt double %1, 1.000000e-15, !dbg !9544
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9545

lor.lhs.false:                                    ; preds = %entry
  %2 = load float, float* %Sca.addr, align 4, !dbg !9546
  %3 = load float, float* %Sa.addr, align 4, !dbg !9547
  %sub = fsub float %2, %3, !dbg !9548
  %conv2 = fpext float %sub to double, !dbg !9546
  %4 = call double @llvm.fabs.f64(double %conv2), !dbg !9549
  %cmp3 = fcmp olt double %4, 1.000000e-15, !dbg !9550
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9551

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load float, float* %Sa.addr, align 4, !dbg !9552
  %6 = load float, float* %Da.addr, align 4, !dbg !9553
  %mul = fmul float %5, %6, !dbg !9554
  %conv5 = fpext float %mul to double, !dbg !9552
  %7 = load float, float* %Sca.addr, align 4, !dbg !9555
  %conv6 = fpext float %7 to double, !dbg !9555
  %8 = load float, float* %Da.addr, align 4, !dbg !9556
  %conv7 = fpext float %8 to double, !dbg !9556
  %sub8 = fsub double 1.000000e+00, %conv7, !dbg !9557
  %mul9 = fmul double %conv6, %sub8, !dbg !9558
  %add = fadd double %conv5, %mul9, !dbg !9559
  %9 = load float, float* %Dca.addr, align 4, !dbg !9560
  %conv10 = fpext float %9 to double, !dbg !9560
  %10 = load float, float* %Sa.addr, align 4, !dbg !9561
  %conv11 = fpext float %10 to double, !dbg !9561
  %sub12 = fsub double 1.000000e+00, %conv11, !dbg !9562
  %mul13 = fmul double %conv10, %sub12, !dbg !9563
  %add14 = fadd double %add, %mul13, !dbg !9564
  %conv15 = fptrunc double %add14 to float, !dbg !9565
  store float %conv15, float* %retval, align 4, !dbg !9566
  br label %return, !dbg !9566

if.end:                                           ; preds = %lor.lhs.false
  %11 = load float, float* %Sca.addr, align 4, !dbg !9567
  %mul16 = fmul float 2.000000e+00, %11, !dbg !9569
  %12 = load float, float* %Sa.addr, align 4, !dbg !9570
  %cmp17 = fcmp ole float %mul16, %12, !dbg !9571
  br i1 %cmp17, label %if.then19, label %if.end40, !dbg !9572

if.then19:                                        ; preds = %if.end
  %13 = load float, float* %Sa.addr, align 4, !dbg !9573
  %conv20 = fpext float %13 to double, !dbg !9573
  %14 = load float, float* %Da.addr, align 4, !dbg !9574
  %conv21 = fpext float %14 to double, !dbg !9574
  %15 = load float, float* %Sa.addr, align 4, !dbg !9575
  %16 = load float, float* %Dca.addr, align 4, !dbg !9576
  %17 = load float, float* %Da.addr, align 4, !dbg !9577
  %sub22 = fsub float %16, %17, !dbg !9578
  %mul23 = fmul float %15, %sub22, !dbg !9579
  %conv24 = fpext float %mul23 to double, !dbg !9575
  %18 = load float, float* %Sca.addr, align 4, !dbg !9580
  %conv25 = fpext float %18 to double, !dbg !9580
  %mul26 = fmul double 2.000000e+00, %conv25, !dbg !9581
  %div = fdiv double %conv24, %mul26, !dbg !9582
  %add27 = fadd double %conv21, %div, !dbg !9583
  %mul28 = fmul double %conv20, %add27, !dbg !9584
  %19 = load float, float* %Sca.addr, align 4, !dbg !9585
  %conv29 = fpext float %19 to double, !dbg !9585
  %20 = load float, float* %Da.addr, align 4, !dbg !9586
  %conv30 = fpext float %20 to double, !dbg !9586
  %sub31 = fsub double 1.000000e+00, %conv30, !dbg !9587
  %mul32 = fmul double %conv29, %sub31, !dbg !9588
  %add33 = fadd double %mul28, %mul32, !dbg !9589
  %21 = load float, float* %Dca.addr, align 4, !dbg !9590
  %conv34 = fpext float %21 to double, !dbg !9590
  %22 = load float, float* %Sa.addr, align 4, !dbg !9591
  %conv35 = fpext float %22 to double, !dbg !9591
  %sub36 = fsub double 1.000000e+00, %conv35, !dbg !9592
  %mul37 = fmul double %conv34, %sub36, !dbg !9593
  %add38 = fadd double %add33, %mul37, !dbg !9594
  %conv39 = fptrunc double %add38 to float, !dbg !9595
  store float %conv39, float* %retval, align 4, !dbg !9596
  br label %return, !dbg !9596

if.end40:                                         ; preds = %if.end
  %23 = load float, float* %Dca.addr, align 4, !dbg !9597
  %24 = load float, float* %Sa.addr, align 4, !dbg !9598
  %mul41 = fmul float %23, %24, !dbg !9599
  %25 = load float, float* %Sa.addr, align 4, !dbg !9600
  %mul42 = fmul float %mul41, %25, !dbg !9601
  %conv43 = fpext float %mul42 to double, !dbg !9597
  %26 = load float, float* %Sa.addr, align 4, !dbg !9602
  %27 = load float, float* %Sca.addr, align 4, !dbg !9603
  %sub44 = fsub float %26, %27, !dbg !9604
  %conv45 = fpext float %sub44 to double, !dbg !9605
  %mul46 = fmul double 2.000000e+00, %conv45, !dbg !9606
  %div47 = fdiv double %conv43, %mul46, !dbg !9607
  %28 = load float, float* %Sca.addr, align 4, !dbg !9608
  %conv48 = fpext float %28 to double, !dbg !9608
  %29 = load float, float* %Da.addr, align 4, !dbg !9609
  %conv49 = fpext float %29 to double, !dbg !9609
  %sub50 = fsub double 1.000000e+00, %conv49, !dbg !9610
  %mul51 = fmul double %conv48, %sub50, !dbg !9611
  %add52 = fadd double %div47, %mul51, !dbg !9612
  %30 = load float, float* %Dca.addr, align 4, !dbg !9613
  %conv53 = fpext float %30 to double, !dbg !9613
  %31 = load float, float* %Sa.addr, align 4, !dbg !9614
  %conv54 = fpext float %31 to double, !dbg !9614
  %sub55 = fsub double 1.000000e+00, %conv54, !dbg !9615
  %mul56 = fmul double %conv53, %sub55, !dbg !9616
  %add57 = fadd double %add52, %mul56, !dbg !9617
  %conv58 = fptrunc double %add57 to float, !dbg !9618
  store float %conv58, float* %retval, align 4, !dbg !9619
  br label %return, !dbg !9619

return:                                           ; preds = %if.end40, %if.then19, %if.then
  %32 = load float, float* %retval, align 4, !dbg !9620
  ret float %32, !dbg !9620
}

; Function Attrs: noinline nounwind uwtable
define internal float @PinLight(float %Sca, float %Sa, float %Dca, float %Da) #0 !dbg !9621 {
entry:
  %retval = alloca float, align 4
  %Sca.addr = alloca float, align 4
  %Sa.addr = alloca float, align 4
  %Dca.addr = alloca float, align 4
  %Da.addr = alloca float, align 4
  store float %Sca, float* %Sca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sca.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  store float %Sa, float* %Sa.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Sa.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  store float %Dca, float* %Dca.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Dca.addr, metadata !9626, metadata !DIExpression()), !dbg !9627
  store float %Da, float* %Da.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Da.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  %0 = load float, float* %Dca.addr, align 4, !dbg !9630
  %1 = load float, float* %Sa.addr, align 4, !dbg !9632
  %mul = fmul float %0, %1, !dbg !9633
  %2 = load float, float* %Da.addr, align 4, !dbg !9634
  %3 = load float, float* %Sca.addr, align 4, !dbg !9635
  %mul1 = fmul float 2.000000e+00, %3, !dbg !9636
  %4 = load float, float* %Sa.addr, align 4, !dbg !9637
  %sub = fsub float %mul1, %4, !dbg !9638
  %mul2 = fmul float %2, %sub, !dbg !9639
  %cmp = fcmp olt float %mul, %mul2, !dbg !9640
  br i1 %cmp, label %if.then, label %if.end, !dbg !9641

if.then:                                          ; preds = %entry
  %5 = load float, float* %Sca.addr, align 4, !dbg !9642
  %conv = fpext float %5 to double, !dbg !9642
  %6 = load float, float* %Da.addr, align 4, !dbg !9643
  %conv3 = fpext float %6 to double, !dbg !9643
  %add = fadd double %conv3, 1.000000e+00, !dbg !9644
  %mul4 = fmul double %conv, %add, !dbg !9645
  %7 = load float, float* %Sa.addr, align 4, !dbg !9646
  %8 = load float, float* %Da.addr, align 4, !dbg !9647
  %mul5 = fmul float %7, %8, !dbg !9648
  %conv6 = fpext float %mul5 to double, !dbg !9646
  %sub7 = fsub double %mul4, %conv6, !dbg !9649
  %9 = load float, float* %Dca.addr, align 4, !dbg !9650
  %conv8 = fpext float %9 to double, !dbg !9650
  %10 = load float, float* %Sa.addr, align 4, !dbg !9651
  %conv9 = fpext float %10 to double, !dbg !9651
  %sub10 = fsub double 1.000000e+00, %conv9, !dbg !9652
  %mul11 = fmul double %conv8, %sub10, !dbg !9653
  %add12 = fadd double %sub7, %mul11, !dbg !9654
  %conv13 = fptrunc double %add12 to float, !dbg !9655
  store float %conv13, float* %retval, align 4, !dbg !9656
  br label %return, !dbg !9656

if.end:                                           ; preds = %entry
  %11 = load float, float* %Dca.addr, align 4, !dbg !9657
  %12 = load float, float* %Sa.addr, align 4, !dbg !9659
  %mul14 = fmul float %11, %12, !dbg !9660
  %13 = load float, float* %Sca.addr, align 4, !dbg !9661
  %mul15 = fmul float 2.000000e+00, %13, !dbg !9662
  %14 = load float, float* %Da.addr, align 4, !dbg !9663
  %mul16 = fmul float %mul15, %14, !dbg !9664
  %cmp17 = fcmp ogt float %mul14, %mul16, !dbg !9665
  br i1 %cmp17, label %if.then19, label %if.end29, !dbg !9666

if.then19:                                        ; preds = %if.end
  %15 = load float, float* %Sca.addr, align 4, !dbg !9667
  %16 = load float, float* %Da.addr, align 4, !dbg !9668
  %mul20 = fmul float %15, %16, !dbg !9669
  %17 = load float, float* %Sca.addr, align 4, !dbg !9670
  %add21 = fadd float %mul20, %17, !dbg !9671
  %conv22 = fpext float %add21 to double, !dbg !9667
  %18 = load float, float* %Dca.addr, align 4, !dbg !9672
  %conv23 = fpext float %18 to double, !dbg !9672
  %19 = load float, float* %Sa.addr, align 4, !dbg !9673
  %conv24 = fpext float %19 to double, !dbg !9673
  %sub25 = fsub double 1.000000e+00, %conv24, !dbg !9674
  %mul26 = fmul double %conv23, %sub25, !dbg !9675
  %add27 = fadd double %conv22, %mul26, !dbg !9676
  %conv28 = fptrunc double %add27 to float, !dbg !9677
  store float %conv28, float* %retval, align 4, !dbg !9678
  br label %return, !dbg !9678

if.end29:                                         ; preds = %if.end
  %20 = load float, float* %Sca.addr, align 4, !dbg !9679
  %conv30 = fpext float %20 to double, !dbg !9679
  %21 = load float, float* %Da.addr, align 4, !dbg !9680
  %conv31 = fpext float %21 to double, !dbg !9680
  %sub32 = fsub double 1.000000e+00, %conv31, !dbg !9681
  %mul33 = fmul double %conv30, %sub32, !dbg !9682
  %22 = load float, float* %Dca.addr, align 4, !dbg !9683
  %conv34 = fpext float %22 to double, !dbg !9683
  %add35 = fadd double %mul33, %conv34, !dbg !9684
  %conv36 = fptrunc double %add35 to float, !dbg !9685
  store float %conv36, float* %retval, align 4, !dbg !9686
  br label %return, !dbg !9686

return:                                           ; preds = %if.end29, %if.then19, %if.then
  %23 = load float, float* %retval, align 4, !dbg !9687
  ret float %23, !dbg !9687
}

; Function Attrs: noinline nounwind uwtable
define internal float @Threshold(float %p, float %q, float %threshold, float %amount) #0 !dbg !9688 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %threshold.addr = alloca float, align 4
  %amount.addr = alloca float, align 4
  %delta = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !9691, metadata !DIExpression()), !dbg !9692
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !9693, metadata !DIExpression()), !dbg !9694
  store float %amount, float* %amount.addr, align 4
  call void @llvm.dbg.declare(metadata float* %amount.addr, metadata !9695, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.declare(metadata float* %delta, metadata !9697, metadata !DIExpression()), !dbg !9698
  %0 = load float, float* %p.addr, align 4, !dbg !9699
  %1 = load float, float* %q.addr, align 4, !dbg !9700
  %sub = fsub float %0, %1, !dbg !9701
  store float %sub, float* %delta, align 4, !dbg !9702
  %2 = load float, float* %delta, align 4, !dbg !9703
  %conv = fpext float %2 to double, !dbg !9703
  %mul = fmul double 2.000000e+00, %conv, !dbg !9705
  %3 = call double @llvm.fabs.f64(double %mul), !dbg !9706
  %conv1 = fptrunc double %3 to float, !dbg !9707
  %4 = load float, float* %threshold.addr, align 4, !dbg !9708
  %cmp = fcmp olt float %conv1, %4, !dbg !9709
  br i1 %cmp, label %if.then, label %if.end, !dbg !9710

if.then:                                          ; preds = %entry
  %5 = load float, float* %q.addr, align 4, !dbg !9711
  store float %5, float* %retval, align 4, !dbg !9712
  br label %return, !dbg !9712

if.end:                                           ; preds = %entry
  %6 = load float, float* %q.addr, align 4, !dbg !9713
  %7 = load float, float* %delta, align 4, !dbg !9714
  %8 = load float, float* %amount.addr, align 4, !dbg !9715
  %mul3 = fmul float %7, %8, !dbg !9716
  %add = fadd float %6, %mul3, !dbg !9717
  store float %add, float* %retval, align 4, !dbg !9718
  br label %return, !dbg !9718

return:                                           ; preds = %if.end, %if.then
  %9 = load float, float* %retval, align 4, !dbg !9719
  ret float %9, !dbg !9719
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #3

declare dso_local float @DecodePixelGamma(float) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!712, !713, !714}
!llvm.ident = !{!715}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !479, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/composite.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !9, !14, !51, !76, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !390, !415, !430, !458}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8}
!7 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !10)
!10 = !{!11, !12, !13}
!11 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 25, baseType: !5, size: 32, elements: !16)
!15 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50}
!17 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!36 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!37 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!38 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!39 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!40 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!41 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!42 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!43 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!44 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!45 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!46 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!47 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!48 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!49 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!50 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !52, line: 25, baseType: !5, size: 32, elements: !53)
!52 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!53 = !{!54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!54 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!60 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!61 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!62 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!64 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!65 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!66 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!67 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!68 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!69 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!70 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!71 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!72 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!73 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!74 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!75 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 75, baseType: !5, size: 32, elements: !78)
!77 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!78 = !{!79, !80, !81, !82, !83, !84, !85, !86, !87}
!79 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!85 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!86 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!87 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!370 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!376 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!377 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!378 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!379 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!380 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!381 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!382 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!383 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!384 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!385 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!386 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!387 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!388 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!389 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !391, line: 34, baseType: !5, size: 32, elements: !392)
!391 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414}
!393 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!399 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!400 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!401 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!402 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!403 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!404 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!405 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!406 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!407 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!408 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!409 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!410 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!411 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!412 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!413 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!414 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!415 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 30, baseType: !5, size: 32, elements: !416)
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!417 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!418 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!419 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!420 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!421 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!422 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!423 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!424 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!425 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!426 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!427 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!428 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!429 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 25, baseType: !5, size: 32, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457}
!432 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!433 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!434 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!436 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!437 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!438 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!439 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!440 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!441 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!442 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!443 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!444 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!446 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!447 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!448 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!449 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!450 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!451 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!452 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!453 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!454 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!455 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!456 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!457 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!458 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !459, line: 27, baseType: !5, size: 32, elements: !460)
!459 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478}
!461 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!462 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!463 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!464 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!465 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!466 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!467 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!468 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!469 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!470 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!471 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!472 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!473 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!474 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!475 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!476 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!477 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!478 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!479 = !{!480, !481, !537, !703, !546, !704, !505, !706, !708, !610, !618, !541, !519, !510, !710, !615, !707}
!480 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !483)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !77, line: 150, size: 105920, elements: !485)
!485 = !{!486, !488, !490, !492, !495, !497, !499, !500, !501, !502, !503, !504, !515, !516, !517, !518, !520, !534, !536, !538, !540, !543, !544, !545, !551, !552, !553, !561, !562, !563, !564, !565, !566, !568, !570, !572, !574, !576, !578, !580, !581, !582, !583, !584, !585, !586, !594, !609, !623, !624, !625, !626, !630, !634, !638, !639, !640, !641, !642, !660, !661, !663, !664, !674, !675, !677, !678, !679, !680, !681, !682, !684, !685, !686, !687, !688, !689, !690, !692, !693, !694, !695, !696, !700, !702}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !484, file: !77, line: 153, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !9)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !484, file: !77, line: 156, baseType: !489, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !15, line: 61, baseType: !14)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !484, file: !77, line: 159, baseType: !491, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !52, line: 49, baseType: !51)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !484, file: !77, line: 162, baseType: !493, size: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !494, line: 46, baseType: !480)
!494 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!495 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !484, file: !77, line: 165, baseType: !496, size: 32, offset: 192)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !77, line: 86, baseType: !76)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !484, file: !77, line: 168, baseType: !498, size: 32, offset: 224)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !3)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !484, file: !77, line: 169, baseType: !498, size: 32, offset: 256)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !484, file: !77, line: 172, baseType: !493, size: 64, offset: 320)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !484, file: !77, line: 173, baseType: !493, size: 64, offset: 384)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !484, file: !77, line: 174, baseType: !493, size: 64, offset: 448)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !484, file: !77, line: 175, baseType: !493, size: 64, offset: 512)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !484, file: !77, line: 178, baseType: !505, size: 64, offset: 576)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !508)
!508 = !{!509, !512, !513, !514}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !507, file: !326, line: 143, baseType: !510, size: 16)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !511)
!511 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !507, file: !326, line: 144, baseType: !510, size: 16, offset: 16)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !507, file: !326, line: 145, baseType: !510, size: 16, offset: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !507, file: !326, line: 146, baseType: !510, size: 16, offset: 48)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !484, file: !77, line: 179, baseType: !506, size: 64, offset: 640)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !484, file: !77, line: 180, baseType: !506, size: 64, offset: 704)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !484, file: !77, line: 181, baseType: !506, size: 64, offset: 768)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !484, file: !77, line: 184, baseType: !519, size: 64, offset: 832)
!519 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !484, file: !77, line: 187, baseType: !521, size: 768, offset: 896)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !77, line: 128, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !77, line: 121, size: 768, elements: !523)
!523 = !{!524, !531, !532, !533}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !522, file: !77, line: 124, baseType: !525, size: 192)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !77, line: 101, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !77, line: 95, size: 192, elements: !527)
!527 = !{!528, !529, !530}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !526, file: !77, line: 98, baseType: !519, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !526, file: !77, line: 99, baseType: !519, size: 64, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !526, file: !77, line: 100, baseType: !519, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !522, file: !77, line: 125, baseType: !525, size: 192, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !522, file: !77, line: 126, baseType: !525, size: 192, offset: 384)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !522, file: !77, line: 127, baseType: !525, size: 192, offset: 576)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !484, file: !77, line: 190, baseType: !535, size: 32, offset: 1664)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !484, file: !77, line: 193, baseType: !537, size: 64, offset: 1728)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !484, file: !77, line: 196, baseType: !539, size: 32, offset: 1792)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !77, line: 93, baseType: !96)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !484, file: !77, line: 199, baseType: !541, size: 64, offset: 1856)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !484, file: !77, line: 200, baseType: !541, size: 64, offset: 1920)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !484, file: !77, line: 201, baseType: !541, size: 64, offset: 1984)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !484, file: !77, line: 204, baseType: !546, size: 64, offset: 2048)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !547, line: 77, baseType: !548)
!547 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !549, line: 193, baseType: !550)
!549 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!550 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !484, file: !77, line: 207, baseType: !519, size: 64, offset: 2112)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !484, file: !77, line: 208, baseType: !519, size: 64, offset: 2176)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !484, file: !77, line: 211, baseType: !554, size: 256, offset: 2240)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !556)
!556 = !{!557, !558, !559, !560}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !555, file: !153, line: 124, baseType: !493, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !555, file: !153, line: 125, baseType: !493, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !555, file: !153, line: 128, baseType: !546, size: 64, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !555, file: !153, line: 129, baseType: !546, size: 64, offset: 192)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !484, file: !77, line: 212, baseType: !554, size: 256, offset: 2496)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !484, file: !77, line: 213, baseType: !554, size: 256, offset: 2752)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !484, file: !77, line: 216, baseType: !519, size: 64, offset: 3008)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !484, file: !77, line: 217, baseType: !519, size: 64, offset: 3072)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !484, file: !77, line: 218, baseType: !519, size: 64, offset: 3136)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !484, file: !77, line: 221, baseType: !567, size: 32, offset: 3200)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !484, file: !77, line: 224, baseType: !569, size: 32, offset: 3232)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !77, line: 73, baseType: !136)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !484, file: !77, line: 227, baseType: !571, size: 32, offset: 3264)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !484, file: !77, line: 230, baseType: !573, size: 32, offset: 3296)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !484, file: !77, line: 233, baseType: !575, size: 32, offset: 3328)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !484, file: !77, line: 236, baseType: !577, size: 32, offset: 3360)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !484, file: !77, line: 239, baseType: !579, size: 64, offset: 3392)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !484, file: !77, line: 242, baseType: !493, size: 64, offset: 3456)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !484, file: !77, line: 243, baseType: !493, size: 64, offset: 3520)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !484, file: !77, line: 246, baseType: !546, size: 64, offset: 3584)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !484, file: !77, line: 249, baseType: !493, size: 64, offset: 3648)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !484, file: !77, line: 250, baseType: !493, size: 64, offset: 3712)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !484, file: !77, line: 253, baseType: !546, size: 64, offset: 3776)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !484, file: !77, line: 256, baseType: !587, size: 192, offset: 3840)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !588, line: 68, baseType: !589)
!588 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !588, line: 62, size: 192, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !589, file: !588, line: 65, baseType: !519, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !589, file: !588, line: 66, baseType: !519, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !589, file: !588, line: 67, baseType: !519, size: 64, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !484, file: !77, line: 259, baseType: !595, size: 512, offset: 4032)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !597)
!597 = !{!598, !605, !606, !608}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !596, file: !247, line: 43, baseType: !599, size: 192)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !600)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !601)
!601 = !{!602, !603, !604}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !600, file: !247, line: 35, baseType: !519, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !600, file: !247, line: 36, baseType: !519, size: 64, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !600, file: !247, line: 37, baseType: !519, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !596, file: !247, line: 44, baseType: !599, size: 192, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !596, file: !247, line: 47, baseType: !607, size: 32, offset: 384)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !596, file: !247, line: 50, baseType: !493, size: 64, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !484, file: !77, line: 262, baseType: !610, size: 64, offset: 4544)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !611, line: 26, baseType: !612)
!611 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!498, !615, !617, !620, !537}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !618)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !619)
!619 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !622)
!622 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !484, file: !77, line: 265, baseType: !537, size: 64, offset: 4608)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !484, file: !77, line: 266, baseType: !537, size: 64, offset: 4672)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !484, file: !77, line: 267, baseType: !537, size: 64, offset: 4736)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !484, file: !77, line: 270, baseType: !627, size: 64, offset: 4800)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !52, line: 52, baseType: !629)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !52, line: 51, flags: DIFlagFwdDecl)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !484, file: !77, line: 273, baseType: !631, size: 64, offset: 4864)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !633)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !484, file: !77, line: 276, baseType: !635, size: 32768, offset: 4928)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 32768, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 4096)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !484, file: !77, line: 277, baseType: !635, size: 32768, offset: 37696)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !484, file: !77, line: 278, baseType: !635, size: 32768, offset: 70464)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !484, file: !77, line: 281, baseType: !493, size: 64, offset: 103232)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !484, file: !77, line: 282, baseType: !493, size: 64, offset: 103296)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !484, file: !77, line: 285, baseType: !643, size: 448, offset: 103360)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !645)
!645 = !{!646, !648, !650, !651, !652, !653, !654, !659}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !644, file: !253, line: 105, baseType: !647, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !644, file: !253, line: 108, baseType: !649, size: 32, offset: 32)
!649 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !644, file: !253, line: 111, baseType: !541, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !644, file: !253, line: 112, baseType: !541, size: 64, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !644, file: !253, line: 115, baseType: !537, size: 64, offset: 192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !644, file: !253, line: 118, baseType: !498, size: 32, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !644, file: !253, line: 121, baseType: !655, size: 64, offset: 320)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !657, line: 26, baseType: !658)
!657 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !657, line: 25, flags: DIFlagFwdDecl)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !644, file: !253, line: 124, baseType: !493, size: 64, offset: 384)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !484, file: !77, line: 288, baseType: !498, size: 32, offset: 103808)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !484, file: !77, line: 291, baseType: !662, size: 64, offset: 103872)
!662 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !546)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !484, file: !77, line: 294, baseType: !655, size: 64, offset: 103936)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !484, file: !77, line: 297, baseType: !665, size: 256, offset: 104000)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !667)
!667 = !{!668, !669, !670, !673}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !666, file: !89, line: 30, baseType: !541, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !666, file: !89, line: 33, baseType: !493, size: 64, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !666, file: !89, line: 36, baseType: !671, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !666, file: !89, line: 39, baseType: !493, size: 64, offset: 192)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !484, file: !77, line: 298, baseType: !665, size: 256, offset: 104256)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !484, file: !77, line: 299, baseType: !676, size: 64, offset: 104512)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !484, file: !77, line: 302, baseType: !493, size: 64, offset: 104576)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !484, file: !77, line: 305, baseType: !493, size: 64, offset: 104640)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !484, file: !77, line: 308, baseType: !579, size: 64, offset: 104704)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !484, file: !77, line: 309, baseType: !579, size: 64, offset: 104768)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !484, file: !77, line: 310, baseType: !579, size: 64, offset: 104832)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !484, file: !77, line: 313, baseType: !683, size: 32, offset: 104896)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !484, file: !77, line: 316, baseType: !498, size: 32, offset: 104928)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !484, file: !77, line: 319, baseType: !506, size: 64, offset: 104960)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !484, file: !77, line: 322, baseType: !579, size: 64, offset: 105024)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !484, file: !77, line: 325, baseType: !554, size: 256, offset: 105088)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !484, file: !77, line: 328, baseType: !537, size: 64, offset: 105344)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !484, file: !77, line: 329, baseType: !537, size: 64, offset: 105408)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !484, file: !77, line: 332, baseType: !691, size: 32, offset: 105472)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !77, line: 61, baseType: !342)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !484, file: !77, line: 335, baseType: !498, size: 32, offset: 105504)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !484, file: !77, line: 338, baseType: !621, size: 64, offset: 105536)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !484, file: !77, line: 341, baseType: !498, size: 32, offset: 105600)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !484, file: !77, line: 344, baseType: !493, size: 64, offset: 105664)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !484, file: !77, line: 347, baseType: !697, size: 64, offset: 105728)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !698, line: 7, baseType: !699)
!698 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !549, line: 160, baseType: !550)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !484, file: !77, line: 350, baseType: !701, size: 32, offset: 105792)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !484, file: !77, line: 353, baseType: !493, size: 64, offset: 105856)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !510)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !711)
!711 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!712 = !{i32 7, !"Dwarf Version", i32 4}
!713 = !{i32 2, !"Debug Info Version", i32 3}
!714 = !{i32 1, !"wchar_size", i32 4}
!715 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!716 = distinct !DISubprogram(name: "CompositeImage", scope: !1, file: !1, line: 1619, type: !717, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !721)
!717 = !DISubroutineType(types: !718)
!718 = !{!498, !703, !719, !481, !720, !720}
!719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !546)
!721 = !{}
!722 = !DILocalVariable(name: "image", arg: 1, scope: !716, file: !1, line: 1619, type: !703)
!723 = !DILocation(line: 1619, column: 54, scope: !716)
!724 = !DILocalVariable(name: "compose", arg: 2, scope: !716, file: !1, line: 1620, type: !719)
!725 = !DILocation(line: 1620, column: 27, scope: !716)
!726 = !DILocalVariable(name: "composite_image", arg: 3, scope: !716, file: !1, line: 1620, type: !481)
!727 = !DILocation(line: 1620, column: 48, scope: !716)
!728 = !DILocalVariable(name: "x_offset", arg: 4, scope: !716, file: !1, line: 1621, type: !720)
!729 = !DILocation(line: 1621, column: 17, scope: !716)
!730 = !DILocalVariable(name: "y_offset", arg: 5, scope: !716, file: !1, line: 1621, type: !720)
!731 = !DILocation(line: 1621, column: 40, scope: !716)
!732 = !DILocalVariable(name: "status", scope: !716, file: !1, line: 1624, type: !498)
!733 = !DILocation(line: 1624, column: 5, scope: !716)
!734 = !DILocation(line: 1626, column: 32, scope: !716)
!735 = !DILocation(line: 1626, column: 54, scope: !716)
!736 = !DILocation(line: 1626, column: 62, scope: !716)
!737 = !DILocation(line: 1627, column: 5, scope: !716)
!738 = !DILocation(line: 1627, column: 14, scope: !716)
!739 = !DILocation(line: 1626, column: 10, scope: !716)
!740 = !DILocation(line: 1626, column: 9, scope: !716)
!741 = !DILocation(line: 1628, column: 10, scope: !716)
!742 = !DILocation(line: 1628, column: 3, scope: !716)
!743 = distinct !DISubprogram(name: "CompositeImageChannel", scope: !1, file: !1, line: 1631, type: !744, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !721)
!744 = !DISubroutineType(types: !745)
!745 = !{!498, !703, !746, !719, !481, !720, !720}
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !368)
!748 = !DILocalVariable(name: "image", arg: 1, scope: !743, file: !1, line: 1631, type: !703)
!749 = !DILocation(line: 1631, column: 61, scope: !743)
!750 = !DILocalVariable(name: "channel", arg: 2, scope: !743, file: !1, line: 1632, type: !746)
!751 = !DILocation(line: 1632, column: 21, scope: !743)
!752 = !DILocalVariable(name: "compose", arg: 3, scope: !743, file: !1, line: 1632, type: !719)
!753 = !DILocation(line: 1632, column: 53, scope: !743)
!754 = !DILocalVariable(name: "composite", arg: 4, scope: !743, file: !1, line: 1633, type: !481)
!755 = !DILocation(line: 1633, column: 16, scope: !743)
!756 = !DILocalVariable(name: "x_offset", arg: 5, scope: !743, file: !1, line: 1633, type: !720)
!757 = !DILocation(line: 1633, column: 40, scope: !743)
!758 = !DILocalVariable(name: "y_offset", arg: 6, scope: !743, file: !1, line: 1633, type: !720)
!759 = !DILocation(line: 1633, column: 63, scope: !743)
!760 = !DILocalVariable(name: "composite_view", scope: !743, file: !1, line: 1638, type: !761)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !459, line: 50, baseType: !763)
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!764 = !DILocation(line: 1638, column: 6, scope: !743)
!765 = !DILocalVariable(name: "image_view", scope: !743, file: !1, line: 1639, type: !761)
!766 = !DILocation(line: 1639, column: 6, scope: !743)
!767 = !DILocalVariable(name: "value", scope: !743, file: !1, line: 1642, type: !615)
!768 = !DILocation(line: 1642, column: 6, scope: !743)
!769 = !DILocalVariable(name: "exception", scope: !743, file: !1, line: 1645, type: !770)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!771 = !DILocation(line: 1645, column: 6, scope: !743)
!772 = !DILocalVariable(name: "geometry_info", scope: !743, file: !1, line: 1648, type: !773)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !153, line: 112, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !153, line: 104, size: 320, elements: !775)
!775 = !{!776, !777, !778, !779, !780}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !774, file: !153, line: 107, baseType: !519, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !774, file: !153, line: 108, baseType: !519, size: 64, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !774, file: !153, line: 109, baseType: !519, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !774, file: !153, line: 110, baseType: !519, size: 64, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !774, file: !153, line: 111, baseType: !519, size: 64, offset: 256)
!781 = !DILocation(line: 1648, column: 5, scope: !743)
!782 = !DILocalVariable(name: "composite_image", scope: !743, file: !1, line: 1651, type: !703)
!783 = !DILocation(line: 1651, column: 6, scope: !743)
!784 = !DILocalVariable(name: "destination_image", scope: !743, file: !1, line: 1652, type: !703)
!785 = !DILocation(line: 1652, column: 6, scope: !743)
!786 = !DILocalVariable(name: "clip_to_self", scope: !743, file: !1, line: 1655, type: !498)
!787 = !DILocation(line: 1655, column: 5, scope: !743)
!788 = !DILocalVariable(name: "status", scope: !743, file: !1, line: 1656, type: !498)
!789 = !DILocation(line: 1656, column: 5, scope: !743)
!790 = !DILocalVariable(name: "progress", scope: !743, file: !1, line: 1659, type: !618)
!791 = !DILocation(line: 1659, column: 5, scope: !743)
!792 = !DILocalVariable(name: "zero", scope: !743, file: !1, line: 1662, type: !793)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !795)
!795 = !{!796, !797, !798, !799, !800, !801, !802, !803, !804, !805}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !794, file: !326, line: 107, baseType: !487, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !794, file: !326, line: 110, baseType: !489, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !794, file: !326, line: 113, baseType: !498, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !794, file: !326, line: 116, baseType: !519, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !794, file: !326, line: 119, baseType: !493, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !794, file: !326, line: 122, baseType: !710, size: 32, offset: 256)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !794, file: !326, line: 123, baseType: !710, size: 32, offset: 288)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !794, file: !326, line: 124, baseType: !710, size: 32, offset: 320)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !794, file: !326, line: 125, baseType: !710, size: 32, offset: 352)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !794, file: !326, line: 126, baseType: !710, size: 32, offset: 384)
!806 = !DILocation(line: 1662, column: 5, scope: !743)
!807 = !DILocalVariable(name: "amount", scope: !743, file: !1, line: 1665, type: !710)
!808 = !DILocation(line: 1665, column: 5, scope: !743)
!809 = !DILocalVariable(name: "destination_dissolve", scope: !743, file: !1, line: 1666, type: !710)
!810 = !DILocation(line: 1666, column: 5, scope: !743)
!811 = !DILocalVariable(name: "midpoint", scope: !743, file: !1, line: 1667, type: !710)
!812 = !DILocation(line: 1667, column: 5, scope: !743)
!813 = !DILocalVariable(name: "percent_luma", scope: !743, file: !1, line: 1668, type: !710)
!814 = !DILocation(line: 1668, column: 5, scope: !743)
!815 = !DILocalVariable(name: "percent_chroma", scope: !743, file: !1, line: 1669, type: !710)
!816 = !DILocation(line: 1669, column: 5, scope: !743)
!817 = !DILocalVariable(name: "source_dissolve", scope: !743, file: !1, line: 1670, type: !710)
!818 = !DILocation(line: 1670, column: 5, scope: !743)
!819 = !DILocalVariable(name: "threshold", scope: !743, file: !1, line: 1671, type: !710)
!820 = !DILocation(line: 1671, column: 5, scope: !743)
!821 = !DILocalVariable(name: "flags", scope: !743, file: !1, line: 1674, type: !822)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!823 = !DILocation(line: 1674, column: 5, scope: !743)
!824 = !DILocalVariable(name: "y", scope: !743, file: !1, line: 1677, type: !546)
!825 = !DILocation(line: 1677, column: 5, scope: !743)
!826 = !DILocation(line: 1684, column: 7, scope: !827)
!827 = distinct !DILexicalBlock(scope: !743, file: !1, line: 1684, column: 7)
!828 = !DILocation(line: 1684, column: 14, scope: !827)
!829 = !DILocation(line: 1684, column: 20, scope: !827)
!830 = !DILocation(line: 1684, column: 7, scope: !743)
!831 = !DILocation(line: 1685, column: 61, scope: !827)
!832 = !DILocation(line: 1685, column: 68, scope: !827)
!833 = !DILocation(line: 1685, column: 12, scope: !827)
!834 = !DILocation(line: 1685, column: 5, scope: !827)
!835 = !DILocation(line: 1688, column: 28, scope: !836)
!836 = distinct !DILexicalBlock(scope: !743, file: !1, line: 1688, column: 7)
!837 = !DILocation(line: 1688, column: 7, scope: !836)
!838 = !DILocation(line: 1688, column: 47, scope: !836)
!839 = !DILocation(line: 1688, column: 7, scope: !743)
!840 = !DILocation(line: 1689, column: 5, scope: !836)
!841 = !DILocation(line: 1690, column: 15, scope: !743)
!842 = !DILocation(line: 1690, column: 22, scope: !743)
!843 = !DILocation(line: 1690, column: 12, scope: !743)
!844 = !DILocation(line: 1691, column: 30, scope: !743)
!845 = !DILocation(line: 1691, column: 55, scope: !743)
!846 = !DILocation(line: 1691, column: 19, scope: !743)
!847 = !DILocation(line: 1691, column: 18, scope: !743)
!848 = !DILocation(line: 1692, column: 7, scope: !849)
!849 = distinct !DILexicalBlock(scope: !743, file: !1, line: 1692, column: 7)
!850 = !DILocation(line: 1692, column: 23, scope: !849)
!851 = !DILocation(line: 1692, column: 7, scope: !743)
!852 = !DILocation(line: 1693, column: 5, scope: !849)
!853 = !DILocation(line: 1694, column: 24, scope: !854)
!854 = distinct !DILexicalBlock(scope: !743, file: !1, line: 1694, column: 7)
!855 = !DILocation(line: 1694, column: 31, scope: !854)
!856 = !DILocation(line: 1694, column: 7, scope: !854)
!857 = !DILocation(line: 1694, column: 43, scope: !854)
!858 = !DILocation(line: 1694, column: 7, scope: !743)
!859 = !DILocation(line: 1695, column: 31, scope: !854)
!860 = !DILocation(line: 1695, column: 12, scope: !854)
!861 = !DILocation(line: 1695, column: 5, scope: !854)
!862 = !DILocation(line: 1696, column: 29, scope: !743)
!863 = !DILocation(line: 1696, column: 45, scope: !743)
!864 = !DILocation(line: 1696, column: 52, scope: !743)
!865 = !DILocation(line: 1696, column: 10, scope: !743)
!866 = !DILocation(line: 1697, column: 24, scope: !743)
!867 = !DILocation(line: 1697, column: 3, scope: !743)
!868 = !DILocation(line: 1698, column: 20, scope: !743)
!869 = !DILocation(line: 1699, column: 9, scope: !743)
!870 = !DILocation(line: 1700, column: 23, scope: !743)
!871 = !DILocation(line: 1701, column: 15, scope: !743)
!872 = !DILocation(line: 1702, column: 15, scope: !743)
!873 = !DILocation(line: 1703, column: 17, scope: !743)
!874 = !DILocation(line: 1704, column: 18, scope: !743)
!875 = !DILocation(line: 1705, column: 12, scope: !743)
!876 = !DILocation(line: 1706, column: 11, scope: !743)
!877 = !DILocation(line: 1706, column: 3, scope: !743)
!878 = !DILocation(line: 1720, column: 19, scope: !879)
!879 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1716, column: 5)
!880 = distinct !DILexicalBlock(scope: !743, file: !1, line: 1707, column: 3)
!881 = !DILocation(line: 1721, column: 7, scope: !879)
!882 = !DILocation(line: 1725, column: 11, scope: !883)
!883 = distinct !DILexicalBlock(scope: !884, file: !1, line: 1725, column: 11)
!884 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1724, column: 5)
!885 = !DILocation(line: 1725, column: 18, scope: !883)
!886 = !DILocation(line: 1725, column: 24, scope: !883)
!887 = !DILocation(line: 1725, column: 11, scope: !884)
!888 = !DILocation(line: 1726, column: 9, scope: !883)
!889 = !DILocation(line: 1727, column: 11, scope: !890)
!890 = distinct !DILexicalBlock(scope: !884, file: !1, line: 1727, column: 11)
!891 = !DILocation(line: 1727, column: 28, scope: !890)
!892 = !DILocation(line: 1727, column: 34, scope: !890)
!893 = !DILocation(line: 1727, column: 11, scope: !884)
!894 = !DILocation(line: 1728, column: 9, scope: !890)
!895 = !DILocation(line: 1729, column: 5, scope: !884)
!896 = !DILocation(line: 1732, column: 12, scope: !897)
!897 = distinct !DILexicalBlock(scope: !898, file: !1, line: 1732, column: 11)
!898 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1731, column: 5)
!899 = !DILocation(line: 1732, column: 21, scope: !897)
!900 = !DILocation(line: 1732, column: 26, scope: !897)
!901 = !DILocation(line: 1732, column: 30, scope: !897)
!902 = !DILocation(line: 1732, column: 39, scope: !897)
!903 = !DILocation(line: 1732, column: 11, scope: !898)
!904 = !DILocation(line: 1733, column: 9, scope: !897)
!905 = !DILocation(line: 1734, column: 12, scope: !906)
!906 = distinct !DILexicalBlock(scope: !898, file: !1, line: 1734, column: 11)
!907 = !DILocation(line: 1734, column: 31, scope: !906)
!908 = !DILocation(line: 1734, column: 48, scope: !906)
!909 = !DILocation(line: 1734, column: 20, scope: !906)
!910 = !DILocation(line: 1734, column: 70, scope: !906)
!911 = !DILocation(line: 1734, column: 77, scope: !906)
!912 = !DILocation(line: 1734, column: 57, scope: !906)
!913 = !DILocation(line: 1734, column: 11, scope: !898)
!914 = !DILocation(line: 1735, column: 9, scope: !906)
!915 = !DILocation(line: 1736, column: 12, scope: !916)
!916 = distinct !DILexicalBlock(scope: !898, file: !1, line: 1736, column: 11)
!917 = !DILocation(line: 1736, column: 31, scope: !916)
!918 = !DILocation(line: 1736, column: 48, scope: !916)
!919 = !DILocation(line: 1736, column: 20, scope: !916)
!920 = !DILocation(line: 1736, column: 67, scope: !916)
!921 = !DILocation(line: 1736, column: 74, scope: !916)
!922 = !DILocation(line: 1736, column: 54, scope: !916)
!923 = !DILocation(line: 1736, column: 11, scope: !898)
!924 = !DILocation(line: 1737, column: 9, scope: !916)
!925 = !DILocation(line: 1738, column: 13, scope: !898)
!926 = !DILocation(line: 1739, column: 46, scope: !898)
!927 = !DILocation(line: 1739, column: 62, scope: !898)
!928 = !DILocation(line: 1739, column: 22, scope: !898)
!929 = !DILocation(line: 1739, column: 21, scope: !898)
!930 = !DILocation(line: 1740, column: 44, scope: !898)
!931 = !DILocation(line: 1740, column: 50, scope: !898)
!932 = !DILocation(line: 1740, column: 18, scope: !898)
!933 = !DILocation(line: 1740, column: 17, scope: !898)
!934 = !DILocation(line: 1745, column: 13, scope: !935)
!935 = distinct !DILexicalBlock(scope: !898, file: !1, line: 1745, column: 7)
!936 = !DILocation(line: 1745, column: 12, scope: !935)
!937 = !DILocation(line: 1745, column: 17, scope: !938)
!938 = distinct !DILexicalBlock(scope: !935, file: !1, line: 1745, column: 7)
!939 = !DILocation(line: 1745, column: 31, scope: !938)
!940 = !DILocation(line: 1745, column: 48, scope: !938)
!941 = !DILocation(line: 1745, column: 19, scope: !938)
!942 = !DILocation(line: 1745, column: 7, scope: !935)
!943 = !DILocalVariable(name: "sync", scope: !944, file: !1, line: 1748, type: !498)
!944 = distinct !DILexicalBlock(scope: !938, file: !1, line: 1746, column: 7)
!945 = !DILocation(line: 1748, column: 11, scope: !944)
!946 = !DILocalVariable(name: "composite_indexes", scope: !944, file: !1, line: 1751, type: !708)
!947 = !DILocation(line: 1751, column: 12, scope: !944)
!948 = !DILocalVariable(name: "p", scope: !944, file: !1, line: 1754, type: !704)
!949 = !DILocation(line: 1754, column: 12, scope: !944)
!950 = !DILocalVariable(name: "indexes", scope: !944, file: !1, line: 1757, type: !706)
!951 = !DILocation(line: 1757, column: 12, scope: !944)
!952 = !DILocalVariable(name: "q", scope: !944, file: !1, line: 1760, type: !505)
!953 = !DILocation(line: 1760, column: 12, scope: !944)
!954 = !DILocation(line: 1762, column: 13, scope: !955)
!955 = distinct !DILexicalBlock(scope: !944, file: !1, line: 1762, column: 13)
!956 = !DILocation(line: 1762, column: 20, scope: !955)
!957 = !DILocation(line: 1762, column: 13, scope: !944)
!958 = !DILocation(line: 1763, column: 11, scope: !955)
!959 = !DILocation(line: 1764, column: 37, scope: !944)
!960 = !DILocation(line: 1764, column: 54, scope: !944)
!961 = !DILocation(line: 1764, column: 56, scope: !944)
!962 = !DILocation(line: 1764, column: 73, scope: !944)
!963 = !DILocation(line: 1765, column: 13, scope: !944)
!964 = !DILocation(line: 1764, column: 11, scope: !944)
!965 = !DILocation(line: 1764, column: 10, scope: !944)
!966 = !DILocation(line: 1766, column: 39, scope: !944)
!967 = !DILocation(line: 1766, column: 50, scope: !944)
!968 = !DILocation(line: 1766, column: 59, scope: !944)
!969 = !DILocation(line: 1766, column: 61, scope: !944)
!970 = !DILocation(line: 1766, column: 60, scope: !944)
!971 = !DILocation(line: 1767, column: 11, scope: !944)
!972 = !DILocation(line: 1767, column: 28, scope: !944)
!973 = !DILocation(line: 1767, column: 38, scope: !944)
!974 = !DILocation(line: 1766, column: 11, scope: !944)
!975 = !DILocation(line: 1766, column: 10, scope: !944)
!976 = !DILocation(line: 1768, column: 14, scope: !977)
!977 = distinct !DILexicalBlock(scope: !944, file: !1, line: 1768, column: 13)
!978 = !DILocation(line: 1768, column: 16, scope: !977)
!979 = !DILocation(line: 1768, column: 47, scope: !977)
!980 = !DILocation(line: 1768, column: 51, scope: !977)
!981 = !DILocation(line: 1768, column: 53, scope: !977)
!982 = !DILocation(line: 1768, column: 13, scope: !944)
!983 = !DILocation(line: 1770, column: 19, scope: !984)
!984 = distinct !DILexicalBlock(scope: !977, file: !1, line: 1769, column: 11)
!985 = !DILocation(line: 1771, column: 13, scope: !984)
!986 = !DILocation(line: 1773, column: 57, scope: !944)
!987 = !DILocation(line: 1773, column: 27, scope: !944)
!988 = !DILocation(line: 1773, column: 26, scope: !944)
!989 = !DILocation(line: 1774, column: 49, scope: !944)
!990 = !DILocation(line: 1774, column: 17, scope: !944)
!991 = !DILocation(line: 1774, column: 16, scope: !944)
!992 = !DILocation(line: 1775, column: 33, scope: !944)
!993 = !DILocation(line: 1775, column: 35, scope: !944)
!994 = !DILocation(line: 1775, column: 37, scope: !944)
!995 = !DILocation(line: 1775, column: 54, scope: !944)
!996 = !DILocation(line: 1775, column: 61, scope: !944)
!997 = !DILocation(line: 1775, column: 16, scope: !944)
!998 = !DILocation(line: 1776, column: 14, scope: !999)
!999 = distinct !DILexicalBlock(scope: !944, file: !1, line: 1776, column: 13)
!1000 = !DILocation(line: 1776, column: 22, scope: !999)
!1001 = !DILocation(line: 1776, column: 47, scope: !999)
!1002 = !DILocation(line: 1777, column: 14, scope: !999)
!1003 = !DILocation(line: 1777, column: 32, scope: !999)
!1004 = !DILocation(line: 1776, column: 13, scope: !944)
!1005 = !DILocation(line: 1778, column: 35, scope: !999)
!1006 = !DILocation(line: 1778, column: 43, scope: !999)
!1007 = !DILocation(line: 1779, column: 13, scope: !999)
!1008 = !DILocation(line: 1779, column: 30, scope: !999)
!1009 = !DILocation(line: 1779, column: 37, scope: !999)
!1010 = !DILocation(line: 1778, column: 18, scope: !999)
!1011 = !DILocation(line: 1778, column: 11, scope: !999)
!1012 = !DILocation(line: 1780, column: 43, scope: !944)
!1013 = !DILocation(line: 1780, column: 54, scope: !944)
!1014 = !DILocation(line: 1780, column: 14, scope: !944)
!1015 = !DILocation(line: 1780, column: 13, scope: !944)
!1016 = !DILocation(line: 1781, column: 13, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !944, file: !1, line: 1781, column: 13)
!1018 = !DILocation(line: 1781, column: 18, scope: !1017)
!1019 = !DILocation(line: 1781, column: 13, scope: !944)
!1020 = !DILocation(line: 1782, column: 17, scope: !1017)
!1021 = !DILocation(line: 1782, column: 11, scope: !1017)
!1022 = !DILocation(line: 1783, column: 13, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !944, file: !1, line: 1783, column: 13)
!1024 = !DILocation(line: 1783, column: 20, scope: !1023)
!1025 = !DILocation(line: 1783, column: 37, scope: !1023)
!1026 = !DILocation(line: 1783, column: 13, scope: !944)
!1027 = !DILocalVariable(name: "proceed", scope: !1028, file: !1, line: 1786, type: !498)
!1028 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 1784, column: 11)
!1029 = !DILocation(line: 1786, column: 15, scope: !1028)
!1030 = !DILocation(line: 1791, column: 38, scope: !1028)
!1031 = !DILocation(line: 1792, column: 34, scope: !1028)
!1032 = !DILocation(line: 1792, column: 36, scope: !1028)
!1033 = !DILocation(line: 1792, column: 43, scope: !1028)
!1034 = !DILocation(line: 1791, column: 21, scope: !1028)
!1035 = !DILocation(line: 1791, column: 20, scope: !1028)
!1036 = !DILocation(line: 1793, column: 17, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1028, file: !1, line: 1793, column: 17)
!1038 = !DILocation(line: 1793, column: 25, scope: !1037)
!1039 = !DILocation(line: 1793, column: 17, scope: !1028)
!1040 = !DILocation(line: 1794, column: 21, scope: !1037)
!1041 = !DILocation(line: 1794, column: 15, scope: !1037)
!1042 = !DILocation(line: 1795, column: 11, scope: !1028)
!1043 = !DILocation(line: 1796, column: 7, scope: !944)
!1044 = !DILocation(line: 1745, column: 55, scope: !938)
!1045 = !DILocation(line: 1745, column: 7, scope: !938)
!1046 = distinct !{!1046, !942, !1047}
!1047 = !DILocation(line: 1796, column: 7, scope: !935)
!1048 = !DILocation(line: 1797, column: 39, scope: !898)
!1049 = !DILocation(line: 1797, column: 22, scope: !898)
!1050 = !DILocation(line: 1797, column: 21, scope: !898)
!1051 = !DILocation(line: 1798, column: 35, scope: !898)
!1052 = !DILocation(line: 1798, column: 18, scope: !898)
!1053 = !DILocation(line: 1798, column: 17, scope: !898)
!1054 = !DILocation(line: 1799, column: 36, scope: !898)
!1055 = !DILocation(line: 1799, column: 23, scope: !898)
!1056 = !DILocation(line: 1799, column: 22, scope: !898)
!1057 = !DILocation(line: 1800, column: 14, scope: !898)
!1058 = !DILocation(line: 1800, column: 7, scope: !898)
!1059 = !DILocation(line: 1809, column: 11, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !1061, file: !1, line: 1809, column: 11)
!1061 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1804, column: 5)
!1062 = !DILocation(line: 1809, column: 18, scope: !1060)
!1063 = !DILocation(line: 1809, column: 24, scope: !1060)
!1064 = !DILocation(line: 1809, column: 11, scope: !1061)
!1065 = !DILocation(line: 1810, column: 37, scope: !1060)
!1066 = !DILocation(line: 1810, column: 16, scope: !1060)
!1067 = !DILocation(line: 1810, column: 9, scope: !1060)
!1068 = !DILocation(line: 1811, column: 19, scope: !1061)
!1069 = !DILocation(line: 1812, column: 7, scope: !1061)
!1070 = !DILocalVariable(name: "composite_view", scope: !1071, file: !1, line: 1817, type: !761)
!1071 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1815, column: 5)
!1072 = !DILocation(line: 1817, column: 10, scope: !1071)
!1073 = !DILocalVariable(name: "destination_view", scope: !1071, file: !1, line: 1818, type: !761)
!1074 = !DILocation(line: 1818, column: 10, scope: !1071)
!1075 = !DILocalVariable(name: "pixel", scope: !1071, file: !1, line: 1821, type: !793)
!1076 = !DILocation(line: 1821, column: 9, scope: !1071)
!1077 = !DILocalVariable(name: "angle_range", scope: !1071, file: !1, line: 1824, type: !710)
!1078 = !DILocation(line: 1824, column: 9, scope: !1071)
!1079 = !DILocalVariable(name: "angle_start", scope: !1071, file: !1, line: 1825, type: !710)
!1080 = !DILocation(line: 1825, column: 9, scope: !1071)
!1081 = !DILocalVariable(name: "height", scope: !1071, file: !1, line: 1826, type: !710)
!1082 = !DILocation(line: 1826, column: 9, scope: !1071)
!1083 = !DILocalVariable(name: "width", scope: !1071, file: !1, line: 1827, type: !710)
!1084 = !DILocation(line: 1827, column: 9, scope: !1071)
!1085 = !DILocalVariable(name: "resample_filter", scope: !1071, file: !1, line: 1830, type: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResampleFilter", file: !102, line: 76, baseType: !1088)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ResampleFilter", file: !102, line: 75, flags: DIFlagFwdDecl)
!1089 = !DILocation(line: 1830, column: 10, scope: !1071)
!1090 = !DILocalVariable(name: "blur", scope: !1071, file: !1, line: 1833, type: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !77, line: 110, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !77, line: 103, size: 256, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !1092, file: !77, line: 106, baseType: !519, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !1092, file: !77, line: 107, baseType: !519, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !1092, file: !77, line: 108, baseType: !519, size: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !1092, file: !77, line: 109, baseType: !519, size: 64, offset: 192)
!1098 = !DILocation(line: 1833, column: 9, scope: !1071)
!1099 = !DILocation(line: 1841, column: 36, scope: !1071)
!1100 = !DILocation(line: 1841, column: 42, scope: !1071)
!1101 = !DILocation(line: 1841, column: 49, scope: !1071)
!1102 = !DILocation(line: 1841, column: 57, scope: !1071)
!1103 = !DILocation(line: 1841, column: 64, scope: !1071)
!1104 = !DILocation(line: 1842, column: 9, scope: !1071)
!1105 = !DILocation(line: 1841, column: 25, scope: !1071)
!1106 = !DILocation(line: 1841, column: 24, scope: !1071)
!1107 = !DILocation(line: 1843, column: 11, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1843, column: 11)
!1109 = !DILocation(line: 1843, column: 29, scope: !1108)
!1110 = !DILocation(line: 1843, column: 11, scope: !1071)
!1111 = !DILocation(line: 1845, column: 40, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1108, file: !1, line: 1844, column: 9)
!1113 = !DILocation(line: 1845, column: 27, scope: !1112)
!1114 = !DILocation(line: 1845, column: 26, scope: !1112)
!1115 = !DILocation(line: 1846, column: 11, scope: !1112)
!1116 = !DILocation(line: 1851, column: 7, scope: !1071)
!1117 = !DILocation(line: 1852, column: 12, scope: !1071)
!1118 = !DILocation(line: 1853, column: 30, scope: !1071)
!1119 = !DILocation(line: 1853, column: 13, scope: !1071)
!1120 = !DILocation(line: 1853, column: 12, scope: !1071)
!1121 = !DILocation(line: 1854, column: 11, scope: !1122)
!1122 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1854, column: 11)
!1123 = !DILocation(line: 1854, column: 17, scope: !1122)
!1124 = !DILocation(line: 1854, column: 11, scope: !1071)
!1125 = !DILocation(line: 1855, column: 29, scope: !1122)
!1126 = !DILocation(line: 1855, column: 15, scope: !1122)
!1127 = !DILocation(line: 1855, column: 14, scope: !1122)
!1128 = !DILocation(line: 1855, column: 9, scope: !1122)
!1129 = !DILocation(line: 1856, column: 12, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1856, column: 11)
!1131 = !DILocation(line: 1856, column: 18, scope: !1130)
!1132 = !DILocation(line: 1856, column: 32, scope: !1130)
!1133 = !DILocation(line: 1856, column: 11, scope: !1071)
!1134 = !DILocation(line: 1857, column: 39, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1130, file: !1, line: 1856, column: 39)
!1136 = !DILocation(line: 1859, column: 31, scope: !1135)
!1137 = !DILocation(line: 1857, column: 18, scope: !1135)
!1138 = !DILocation(line: 1860, column: 40, scope: !1135)
!1139 = !DILocation(line: 1860, column: 27, scope: !1135)
!1140 = !DILocation(line: 1860, column: 26, scope: !1135)
!1141 = !DILocation(line: 1861, column: 42, scope: !1135)
!1142 = !DILocation(line: 1861, column: 29, scope: !1135)
!1143 = !DILocation(line: 1861, column: 28, scope: !1135)
!1144 = !DILocation(line: 1862, column: 11, scope: !1135)
!1145 = !DILocation(line: 1869, column: 34, scope: !1071)
!1146 = !DILocation(line: 1869, column: 37, scope: !1071)
!1147 = !DILocation(line: 1869, column: 20, scope: !1071)
!1148 = !DILocation(line: 1869, column: 19, scope: !1071)
!1149 = !DILocation(line: 1869, column: 12, scope: !1071)
!1150 = !DILocation(line: 1870, column: 12, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1870, column: 11)
!1152 = !DILocation(line: 1870, column: 18, scope: !1151)
!1153 = !DILocation(line: 1870, column: 33, scope: !1151)
!1154 = !DILocation(line: 1870, column: 11, scope: !1071)
!1155 = !DILocation(line: 1871, column: 30, scope: !1151)
!1156 = !DILocation(line: 1871, column: 35, scope: !1151)
!1157 = !DILocation(line: 1871, column: 16, scope: !1151)
!1158 = !DILocation(line: 1871, column: 15, scope: !1151)
!1159 = !DILocation(line: 1871, column: 9, scope: !1151)
!1160 = !DILocation(line: 1874, column: 15, scope: !1071)
!1161 = !DILocation(line: 1874, column: 12, scope: !1071)
!1162 = !DILocation(line: 1874, column: 14, scope: !1071)
!1163 = !DILocation(line: 1875, column: 12, scope: !1071)
!1164 = !DILocation(line: 1875, column: 14, scope: !1071)
!1165 = !DILocation(line: 1876, column: 12, scope: !1071)
!1166 = !DILocation(line: 1876, column: 14, scope: !1071)
!1167 = !DILocation(line: 1877, column: 15, scope: !1071)
!1168 = !DILocation(line: 1877, column: 12, scope: !1071)
!1169 = !DILocation(line: 1877, column: 14, scope: !1071)
!1170 = !DILocation(line: 1879, column: 12, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1879, column: 11)
!1172 = !DILocation(line: 1879, column: 18, scope: !1171)
!1173 = !DILocation(line: 1879, column: 28, scope: !1171)
!1174 = !DILocation(line: 1879, column: 11, scope: !1071)
!1175 = !DILocalVariable(name: "angle", scope: !1176, file: !1, line: 1882, type: !710)
!1176 = distinct !DILexicalBlock(scope: !1171, file: !1, line: 1880, column: 9)
!1177 = !DILocation(line: 1882, column: 13, scope: !1176)
!1178 = !DILocation(line: 1884, column: 48, scope: !1176)
!1179 = !DILocation(line: 1884, column: 17, scope: !1176)
!1180 = !DILocation(line: 1884, column: 16, scope: !1176)
!1181 = !DILocation(line: 1885, column: 19, scope: !1176)
!1182 = !DILocation(line: 1885, column: 29, scope: !1176)
!1183 = !DILocation(line: 1885, column: 25, scope: !1176)
!1184 = !DILocation(line: 1885, column: 24, scope: !1176)
!1185 = !DILocation(line: 1885, column: 16, scope: !1176)
!1186 = !DILocation(line: 1885, column: 18, scope: !1176)
!1187 = !DILocation(line: 1886, column: 19, scope: !1176)
!1188 = !DILocation(line: 1886, column: 29, scope: !1176)
!1189 = !DILocation(line: 1886, column: 25, scope: !1176)
!1190 = !DILocation(line: 1886, column: 24, scope: !1176)
!1191 = !DILocation(line: 1886, column: 16, scope: !1176)
!1192 = !DILocation(line: 1886, column: 18, scope: !1176)
!1193 = !DILocation(line: 1887, column: 21, scope: !1176)
!1194 = !DILocation(line: 1887, column: 20, scope: !1176)
!1195 = !DILocation(line: 1887, column: 32, scope: !1176)
!1196 = !DILocation(line: 1887, column: 28, scope: !1176)
!1197 = !DILocation(line: 1887, column: 27, scope: !1176)
!1198 = !DILocation(line: 1887, column: 16, scope: !1176)
!1199 = !DILocation(line: 1887, column: 18, scope: !1176)
!1200 = !DILocation(line: 1888, column: 19, scope: !1176)
!1201 = !DILocation(line: 1888, column: 30, scope: !1176)
!1202 = !DILocation(line: 1888, column: 26, scope: !1176)
!1203 = !DILocation(line: 1888, column: 25, scope: !1176)
!1204 = !DILocation(line: 1888, column: 16, scope: !1176)
!1205 = !DILocation(line: 1888, column: 18, scope: !1176)
!1206 = !DILocation(line: 1889, column: 9, scope: !1176)
!1207 = !DILocation(line: 1891, column: 18, scope: !1071)
!1208 = !DILocation(line: 1892, column: 18, scope: !1071)
!1209 = !DILocation(line: 1893, column: 12, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1893, column: 11)
!1211 = !DILocation(line: 1893, column: 18, scope: !1210)
!1212 = !DILocation(line: 1893, column: 28, scope: !1210)
!1213 = !DILocation(line: 1893, column: 11, scope: !1071)
!1214 = !DILocation(line: 1895, column: 54, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1210, file: !1, line: 1894, column: 9)
!1216 = !DILocation(line: 1895, column: 23, scope: !1215)
!1217 = !DILocation(line: 1895, column: 22, scope: !1215)
!1218 = !DILocation(line: 1896, column: 54, scope: !1215)
!1219 = !DILocation(line: 1896, column: 23, scope: !1215)
!1220 = !DILocation(line: 1896, column: 59, scope: !1215)
!1221 = !DILocation(line: 1896, column: 58, scope: !1215)
!1222 = !DILocation(line: 1896, column: 22, scope: !1215)
!1223 = !DILocation(line: 1897, column: 9, scope: !1215)
!1224 = !DILocation(line: 1909, column: 45, scope: !1071)
!1225 = !DILocation(line: 1909, column: 51, scope: !1071)
!1226 = !DILocation(line: 1909, column: 23, scope: !1071)
!1227 = !DILocation(line: 1909, column: 22, scope: !1071)
!1228 = !DILocation(line: 1910, column: 25, scope: !1071)
!1229 = !DILocation(line: 1910, column: 7, scope: !1071)
!1230 = !DILocation(line: 1913, column: 13, scope: !1071)
!1231 = !DILocation(line: 1914, column: 46, scope: !1071)
!1232 = !DILocation(line: 1914, column: 62, scope: !1071)
!1233 = !DILocation(line: 1914, column: 22, scope: !1071)
!1234 = !DILocation(line: 1914, column: 21, scope: !1071)
!1235 = !DILocation(line: 1915, column: 50, scope: !1071)
!1236 = !DILocation(line: 1915, column: 68, scope: !1071)
!1237 = !DILocation(line: 1915, column: 24, scope: !1071)
!1238 = !DILocation(line: 1915, column: 23, scope: !1071)
!1239 = !DILocation(line: 1916, column: 13, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 1916, column: 7)
!1241 = !DILocation(line: 1916, column: 12, scope: !1240)
!1242 = !DILocation(line: 1916, column: 17, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 1916, column: 7)
!1244 = !DILocation(line: 1916, column: 31, scope: !1243)
!1245 = !DILocation(line: 1916, column: 48, scope: !1243)
!1246 = !DILocation(line: 1916, column: 19, scope: !1243)
!1247 = !DILocation(line: 1916, column: 7, scope: !1240)
!1248 = !DILocalVariable(name: "sync", scope: !1249, file: !1, line: 1919, type: !498)
!1249 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 1917, column: 7)
!1250 = !DILocation(line: 1919, column: 11, scope: !1249)
!1251 = !DILocalVariable(name: "p", scope: !1249, file: !1, line: 1922, type: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !704)
!1253 = !DILocation(line: 1922, column: 21, scope: !1249)
!1254 = !DILocalVariable(name: "r", scope: !1249, file: !1, line: 1925, type: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !505)
!1256 = !DILocation(line: 1925, column: 21, scope: !1249)
!1257 = !DILocalVariable(name: "destination_indexes", scope: !1249, file: !1, line: 1928, type: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !706)
!1259 = !DILocation(line: 1928, column: 21, scope: !1249)
!1260 = !DILocalVariable(name: "x", scope: !1249, file: !1, line: 1931, type: !546)
!1261 = !DILocation(line: 1931, column: 11, scope: !1249)
!1262 = !DILocation(line: 1933, column: 15, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1249, file: !1, line: 1933, column: 13)
!1264 = !DILocation(line: 1933, column: 17, scope: !1263)
!1265 = !DILocation(line: 1933, column: 16, scope: !1263)
!1266 = !DILocation(line: 1933, column: 27, scope: !1263)
!1267 = !DILocation(line: 1933, column: 32, scope: !1263)
!1268 = !DILocation(line: 1933, column: 37, scope: !1263)
!1269 = !DILocation(line: 1933, column: 39, scope: !1263)
!1270 = !DILocation(line: 1933, column: 38, scope: !1263)
!1271 = !DILocation(line: 1933, column: 62, scope: !1263)
!1272 = !DILocation(line: 1933, column: 69, scope: !1263)
!1273 = !DILocation(line: 1933, column: 49, scope: !1263)
!1274 = !DILocation(line: 1933, column: 13, scope: !1249)
!1275 = !DILocation(line: 1934, column: 11, scope: !1263)
!1276 = !DILocation(line: 1935, column: 37, scope: !1249)
!1277 = !DILocation(line: 1935, column: 54, scope: !1249)
!1278 = !DILocation(line: 1935, column: 56, scope: !1249)
!1279 = !DILocation(line: 1935, column: 73, scope: !1249)
!1280 = !DILocation(line: 1936, column: 13, scope: !1249)
!1281 = !DILocation(line: 1935, column: 11, scope: !1249)
!1282 = !DILocation(line: 1935, column: 10, scope: !1249)
!1283 = !DILocation(line: 1937, column: 41, scope: !1249)
!1284 = !DILocation(line: 1937, column: 60, scope: !1249)
!1285 = !DILocation(line: 1938, column: 11, scope: !1249)
!1286 = !DILocation(line: 1938, column: 30, scope: !1249)
!1287 = !DILocation(line: 1938, column: 40, scope: !1249)
!1288 = !DILocation(line: 1937, column: 11, scope: !1249)
!1289 = !DILocation(line: 1937, column: 10, scope: !1249)
!1290 = !DILocation(line: 1939, column: 14, scope: !1291)
!1291 = distinct !DILexicalBlock(scope: !1249, file: !1, line: 1939, column: 13)
!1292 = !DILocation(line: 1939, column: 16, scope: !1291)
!1293 = !DILocation(line: 1939, column: 47, scope: !1291)
!1294 = !DILocation(line: 1939, column: 51, scope: !1291)
!1295 = !DILocation(line: 1939, column: 53, scope: !1291)
!1296 = !DILocation(line: 1939, column: 13, scope: !1249)
!1297 = !DILocation(line: 1940, column: 11, scope: !1291)
!1298 = !DILocation(line: 1941, column: 61, scope: !1249)
!1299 = !DILocation(line: 1941, column: 29, scope: !1249)
!1300 = !DILocation(line: 1941, column: 28, scope: !1249)
!1301 = !DILocation(line: 1942, column: 15, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1249, file: !1, line: 1942, column: 9)
!1303 = !DILocation(line: 1942, column: 14, scope: !1302)
!1304 = !DILocation(line: 1942, column: 19, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1302, file: !1, line: 1942, column: 9)
!1306 = !DILocation(line: 1942, column: 33, scope: !1305)
!1307 = !DILocation(line: 1942, column: 50, scope: !1305)
!1308 = !DILocation(line: 1942, column: 21, scope: !1305)
!1309 = !DILocation(line: 1942, column: 9, scope: !1302)
!1310 = !DILocation(line: 1944, column: 17, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1312, file: !1, line: 1944, column: 15)
!1312 = distinct !DILexicalBlock(scope: !1305, file: !1, line: 1943, column: 9)
!1313 = !DILocation(line: 1944, column: 26, scope: !1311)
!1314 = !DILocation(line: 1944, column: 25, scope: !1311)
!1315 = !DILocation(line: 1944, column: 29, scope: !1311)
!1316 = !DILocation(line: 1944, column: 34, scope: !1311)
!1317 = !DILocation(line: 1944, column: 39, scope: !1311)
!1318 = !DILocation(line: 1944, column: 48, scope: !1311)
!1319 = !DILocation(line: 1944, column: 47, scope: !1311)
!1320 = !DILocation(line: 1944, column: 64, scope: !1311)
!1321 = !DILocation(line: 1944, column: 71, scope: !1311)
!1322 = !DILocation(line: 1944, column: 51, scope: !1311)
!1323 = !DILocation(line: 1944, column: 15, scope: !1312)
!1324 = !DILocation(line: 1946, column: 16, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1311, file: !1, line: 1945, column: 13)
!1326 = !DILocation(line: 1947, column: 15, scope: !1325)
!1327 = !DILocation(line: 1949, column: 20, scope: !1328)
!1328 = distinct !DILexicalBlock(scope: !1312, file: !1, line: 1949, column: 15)
!1329 = !DILocation(line: 1949, column: 15, scope: !1328)
!1330 = !DILocation(line: 1949, column: 33, scope: !1328)
!1331 = !DILocation(line: 1949, column: 15, scope: !1312)
!1332 = !DILocalVariable(name: "angle", scope: !1333, file: !1, line: 1952, type: !710)
!1333 = distinct !DILexicalBlock(scope: !1328, file: !1, line: 1950, column: 13)
!1334 = !DILocation(line: 1952, column: 17, scope: !1333)
!1335 = !DILocation(line: 1954, column: 21, scope: !1333)
!1336 = !DILocation(line: 1954, column: 33, scope: !1333)
!1337 = !DILocation(line: 1954, column: 44, scope: !1333)
!1338 = !DILocation(line: 1955, column: 17, scope: !1333)
!1339 = !DILocation(line: 1954, column: 57, scope: !1333)
!1340 = !DILocation(line: 1954, column: 32, scope: !1333)
!1341 = !DILocation(line: 1954, column: 20, scope: !1333)
!1342 = !DILocation(line: 1956, column: 23, scope: !1333)
!1343 = !DILocation(line: 1956, column: 33, scope: !1333)
!1344 = !DILocation(line: 1956, column: 29, scope: !1333)
!1345 = !DILocation(line: 1956, column: 28, scope: !1333)
!1346 = !DILocation(line: 1956, column: 20, scope: !1333)
!1347 = !DILocation(line: 1956, column: 22, scope: !1333)
!1348 = !DILocation(line: 1957, column: 23, scope: !1333)
!1349 = !DILocation(line: 1957, column: 33, scope: !1333)
!1350 = !DILocation(line: 1957, column: 29, scope: !1333)
!1351 = !DILocation(line: 1957, column: 28, scope: !1333)
!1352 = !DILocation(line: 1957, column: 20, scope: !1333)
!1353 = !DILocation(line: 1957, column: 22, scope: !1333)
!1354 = !DILocation(line: 1958, column: 25, scope: !1333)
!1355 = !DILocation(line: 1958, column: 24, scope: !1333)
!1356 = !DILocation(line: 1958, column: 36, scope: !1333)
!1357 = !DILocation(line: 1958, column: 32, scope: !1333)
!1358 = !DILocation(line: 1958, column: 31, scope: !1333)
!1359 = !DILocation(line: 1958, column: 20, scope: !1333)
!1360 = !DILocation(line: 1958, column: 22, scope: !1333)
!1361 = !DILocation(line: 1959, column: 23, scope: !1333)
!1362 = !DILocation(line: 1959, column: 34, scope: !1333)
!1363 = !DILocation(line: 1959, column: 30, scope: !1333)
!1364 = !DILocation(line: 1959, column: 29, scope: !1333)
!1365 = !DILocation(line: 1959, column: 20, scope: !1333)
!1366 = !DILocation(line: 1959, column: 22, scope: !1333)
!1367 = !DILocation(line: 1960, column: 13, scope: !1333)
!1368 = !DILocation(line: 1969, column: 31, scope: !1312)
!1369 = !DILocation(line: 1970, column: 20, scope: !1312)
!1370 = !DILocation(line: 1970, column: 22, scope: !1312)
!1371 = !DILocation(line: 1970, column: 36, scope: !1312)
!1372 = !DILocation(line: 1970, column: 35, scope: !1312)
!1373 = !DILocation(line: 1971, column: 20, scope: !1312)
!1374 = !DILocation(line: 1971, column: 22, scope: !1312)
!1375 = !DILocation(line: 1971, column: 36, scope: !1312)
!1376 = !DILocation(line: 1971, column: 35, scope: !1312)
!1377 = !DILocation(line: 1972, column: 20, scope: !1312)
!1378 = !DILocation(line: 1972, column: 22, scope: !1312)
!1379 = !DILocation(line: 1972, column: 36, scope: !1312)
!1380 = !DILocation(line: 1972, column: 35, scope: !1312)
!1381 = !DILocation(line: 1973, column: 20, scope: !1312)
!1382 = !DILocation(line: 1973, column: 22, scope: !1312)
!1383 = !DILocation(line: 1973, column: 36, scope: !1312)
!1384 = !DILocation(line: 1973, column: 35, scope: !1312)
!1385 = !DILocation(line: 1969, column: 11, scope: !1312)
!1386 = !DILocation(line: 1975, column: 37, scope: !1312)
!1387 = !DILocation(line: 1975, column: 62, scope: !1312)
!1388 = !DILocation(line: 1975, column: 53, scope: !1312)
!1389 = !DILocation(line: 1975, column: 71, scope: !1312)
!1390 = !DILocation(line: 1975, column: 70, scope: !1312)
!1391 = !DILocation(line: 1976, column: 22, scope: !1312)
!1392 = !DILocation(line: 1976, column: 13, scope: !1312)
!1393 = !DILocation(line: 1976, column: 31, scope: !1312)
!1394 = !DILocation(line: 1976, column: 30, scope: !1312)
!1395 = !DILocation(line: 1975, column: 18, scope: !1312)
!1396 = !DILocation(line: 1977, column: 26, scope: !1312)
!1397 = !DILocation(line: 1977, column: 51, scope: !1312)
!1398 = !DILocation(line: 1977, column: 53, scope: !1312)
!1399 = !DILocation(line: 1977, column: 73, scope: !1312)
!1400 = !DILocation(line: 1977, column: 72, scope: !1312)
!1401 = !DILocation(line: 1977, column: 11, scope: !1312)
!1402 = !DILocation(line: 1978, column: 12, scope: !1312)
!1403 = !DILocation(line: 1979, column: 12, scope: !1312)
!1404 = !DILocation(line: 1980, column: 9, scope: !1312)
!1405 = !DILocation(line: 1942, column: 60, scope: !1305)
!1406 = !DILocation(line: 1942, column: 9, scope: !1305)
!1407 = distinct !{!1407, !1309, !1408}
!1408 = !DILocation(line: 1980, column: 9, scope: !1302)
!1409 = !DILocation(line: 1981, column: 43, scope: !1249)
!1410 = !DILocation(line: 1981, column: 60, scope: !1249)
!1411 = !DILocation(line: 1981, column: 14, scope: !1249)
!1412 = !DILocation(line: 1981, column: 13, scope: !1249)
!1413 = !DILocation(line: 1982, column: 13, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1249, file: !1, line: 1982, column: 13)
!1415 = !DILocation(line: 1982, column: 18, scope: !1414)
!1416 = !DILocation(line: 1982, column: 13, scope: !1249)
!1417 = !DILocation(line: 1983, column: 11, scope: !1414)
!1418 = !DILocation(line: 1984, column: 7, scope: !1249)
!1419 = !DILocation(line: 1916, column: 55, scope: !1243)
!1420 = !DILocation(line: 1916, column: 7, scope: !1243)
!1421 = distinct !{!1421, !1247, !1422}
!1422 = !DILocation(line: 1984, column: 7, scope: !1240)
!1423 = !DILocation(line: 1985, column: 45, scope: !1071)
!1424 = !DILocation(line: 1985, column: 23, scope: !1071)
!1425 = !DILocation(line: 1985, column: 22, scope: !1071)
!1426 = !DILocation(line: 1986, column: 39, scope: !1071)
!1427 = !DILocation(line: 1986, column: 22, scope: !1071)
!1428 = !DILocation(line: 1986, column: 21, scope: !1071)
!1429 = !DILocation(line: 1987, column: 41, scope: !1071)
!1430 = !DILocation(line: 1987, column: 24, scope: !1071)
!1431 = !DILocation(line: 1987, column: 23, scope: !1071)
!1432 = !DILocation(line: 1988, column: 36, scope: !1071)
!1433 = !DILocation(line: 1988, column: 23, scope: !1071)
!1434 = !DILocation(line: 1988, column: 22, scope: !1071)
!1435 = !DILocation(line: 1989, column: 23, scope: !1071)
!1436 = !DILocation(line: 1989, column: 22, scope: !1071)
!1437 = !DILocation(line: 1990, column: 7, scope: !1071)
!1438 = !DILocalVariable(name: "composite_view", scope: !1439, file: !1, line: 1996, type: !761)
!1439 = distinct !DILexicalBlock(scope: !880, file: !1, line: 1994, column: 5)
!1440 = !DILocation(line: 1996, column: 10, scope: !1439)
!1441 = !DILocalVariable(name: "destination_view", scope: !1439, file: !1, line: 1997, type: !761)
!1442 = !DILocation(line: 1997, column: 10, scope: !1439)
!1443 = !DILocalVariable(name: "image_view", scope: !1439, file: !1, line: 1998, type: !761)
!1444 = !DILocation(line: 1998, column: 10, scope: !1439)
!1445 = !DILocalVariable(name: "pixel", scope: !1439, file: !1, line: 2001, type: !793)
!1446 = !DILocation(line: 2001, column: 9, scope: !1439)
!1447 = !DILocalVariable(name: "horizontal_scale", scope: !1439, file: !1, line: 2004, type: !710)
!1448 = !DILocation(line: 2004, column: 9, scope: !1439)
!1449 = !DILocalVariable(name: "vertical_scale", scope: !1439, file: !1, line: 2005, type: !710)
!1450 = !DILocation(line: 2005, column: 9, scope: !1439)
!1451 = !DILocalVariable(name: "center", scope: !1439, file: !1, line: 2008, type: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !1453, line: 142, baseType: !1454)
!1453 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !1453, line: 137, size: 128, elements: !1455)
!1455 = !{!1456, !1457}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1454, file: !1453, line: 140, baseType: !519, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1454, file: !1453, line: 141, baseType: !519, size: 64, offset: 64)
!1458 = !DILocation(line: 2008, column: 9, scope: !1439)
!1459 = !DILocalVariable(name: "offset", scope: !1439, file: !1, line: 2009, type: !1452)
!1460 = !DILocation(line: 2009, column: 9, scope: !1439)
!1461 = !DILocalVariable(name: "destination_indexes", scope: !1439, file: !1, line: 2012, type: !1258)
!1462 = !DILocation(line: 2012, column: 19, scope: !1439)
!1463 = !DILocalVariable(name: "r", scope: !1439, file: !1, line: 2015, type: !1255)
!1464 = !DILocation(line: 2015, column: 19, scope: !1439)
!1465 = !DILocation(line: 2022, column: 36, scope: !1439)
!1466 = !DILocation(line: 2022, column: 42, scope: !1439)
!1467 = !DILocation(line: 2022, column: 49, scope: !1439)
!1468 = !DILocation(line: 2022, column: 57, scope: !1439)
!1469 = !DILocation(line: 2022, column: 64, scope: !1439)
!1470 = !DILocation(line: 2023, column: 9, scope: !1439)
!1471 = !DILocation(line: 2022, column: 25, scope: !1439)
!1472 = !DILocation(line: 2022, column: 24, scope: !1439)
!1473 = !DILocation(line: 2024, column: 11, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 2024, column: 11)
!1475 = !DILocation(line: 2024, column: 29, scope: !1474)
!1476 = !DILocation(line: 2024, column: 11, scope: !1439)
!1477 = !DILocation(line: 2026, column: 40, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1474, file: !1, line: 2025, column: 9)
!1479 = !DILocation(line: 2026, column: 27, scope: !1478)
!1480 = !DILocation(line: 2026, column: 26, scope: !1478)
!1481 = !DILocation(line: 2027, column: 11, scope: !1478)
!1482 = !DILocation(line: 2029, column: 7, scope: !1439)
!1483 = !DILocation(line: 2030, column: 12, scope: !1439)
!1484 = !DILocation(line: 2031, column: 30, scope: !1439)
!1485 = !DILocation(line: 2031, column: 13, scope: !1439)
!1486 = !DILocation(line: 2031, column: 12, scope: !1439)
!1487 = !DILocation(line: 2032, column: 11, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 2032, column: 11)
!1489 = !DILocation(line: 2032, column: 17, scope: !1488)
!1490 = !DILocation(line: 2032, column: 11, scope: !1439)
!1491 = !DILocation(line: 2033, column: 29, scope: !1488)
!1492 = !DILocation(line: 2033, column: 15, scope: !1488)
!1493 = !DILocation(line: 2033, column: 14, scope: !1488)
!1494 = !DILocation(line: 2033, column: 9, scope: !1488)
!1495 = !DILocation(line: 2034, column: 12, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 2034, column: 11)
!1497 = !DILocation(line: 2034, column: 18, scope: !1496)
!1498 = !DILocation(line: 2034, column: 46, scope: !1496)
!1499 = !DILocation(line: 2034, column: 11, scope: !1439)
!1500 = !DILocation(line: 2036, column: 16, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !1, line: 2036, column: 15)
!1502 = distinct !DILexicalBlock(scope: !1496, file: !1, line: 2035, column: 9)
!1503 = !DILocation(line: 2036, column: 22, scope: !1501)
!1504 = !DILocation(line: 2036, column: 37, scope: !1501)
!1505 = !DILocation(line: 2036, column: 15, scope: !1502)
!1506 = !DILocation(line: 2038, column: 50, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 2037, column: 13)
!1508 = !DILocation(line: 2038, column: 67, scope: !1507)
!1509 = !DILocation(line: 2038, column: 74, scope: !1507)
!1510 = !DILocation(line: 2038, column: 32, scope: !1507)
!1511 = !DILocation(line: 2038, column: 79, scope: !1507)
!1512 = !DILocation(line: 2038, column: 31, scope: !1507)
!1513 = !DILocation(line: 2040, column: 48, scope: !1507)
!1514 = !DILocation(line: 2040, column: 65, scope: !1507)
!1515 = !DILocation(line: 2040, column: 69, scope: !1507)
!1516 = !DILocation(line: 2040, column: 30, scope: !1507)
!1517 = !DILocation(line: 2040, column: 74, scope: !1507)
!1518 = !DILocation(line: 2040, column: 29, scope: !1507)
!1519 = !DILocation(line: 2041, column: 13, scope: !1507)
!1520 = !DILocation(line: 2044, column: 50, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 2043, column: 13)
!1522 = !DILocation(line: 2044, column: 57, scope: !1521)
!1523 = !DILocation(line: 2044, column: 64, scope: !1521)
!1524 = !DILocation(line: 2044, column: 32, scope: !1521)
!1525 = !DILocation(line: 2044, column: 69, scope: !1521)
!1526 = !DILocation(line: 2044, column: 31, scope: !1521)
!1527 = !DILocation(line: 2045, column: 48, scope: !1521)
!1528 = !DILocation(line: 2045, column: 55, scope: !1521)
!1529 = !DILocation(line: 2045, column: 59, scope: !1521)
!1530 = !DILocation(line: 2045, column: 30, scope: !1521)
!1531 = !DILocation(line: 2045, column: 64, scope: !1521)
!1532 = !DILocation(line: 2045, column: 29, scope: !1521)
!1533 = !DILocation(line: 2047, column: 9, scope: !1502)
!1534 = !DILocation(line: 2050, column: 42, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1496, file: !1, line: 2049, column: 9)
!1536 = !DILocation(line: 2050, column: 28, scope: !1535)
!1537 = !DILocation(line: 2050, column: 27, scope: !1535)
!1538 = !DILocation(line: 2051, column: 40, scope: !1535)
!1539 = !DILocation(line: 2051, column: 26, scope: !1535)
!1540 = !DILocation(line: 2051, column: 25, scope: !1535)
!1541 = !DILocation(line: 2052, column: 16, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 2052, column: 15)
!1543 = !DILocation(line: 2052, column: 22, scope: !1542)
!1544 = !DILocation(line: 2052, column: 38, scope: !1542)
!1545 = !DILocation(line: 2052, column: 15, scope: !1535)
!1546 = !DILocation(line: 2054, column: 20, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1548, file: !1, line: 2054, column: 19)
!1548 = distinct !DILexicalBlock(scope: !1542, file: !1, line: 2053, column: 13)
!1549 = !DILocation(line: 2054, column: 26, scope: !1547)
!1550 = !DILocation(line: 2054, column: 41, scope: !1547)
!1551 = !DILocation(line: 2054, column: 19, scope: !1548)
!1552 = !DILocation(line: 2056, column: 38, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 2055, column: 17)
!1554 = !DILocation(line: 2056, column: 55, scope: !1553)
!1555 = !DILocation(line: 2056, column: 62, scope: !1553)
!1556 = !DILocation(line: 2056, column: 67, scope: !1553)
!1557 = !DILocation(line: 2056, column: 35, scope: !1553)
!1558 = !DILocation(line: 2057, column: 36, scope: !1553)
!1559 = !DILocation(line: 2057, column: 53, scope: !1553)
!1560 = !DILocation(line: 2057, column: 57, scope: !1553)
!1561 = !DILocation(line: 2057, column: 62, scope: !1553)
!1562 = !DILocation(line: 2057, column: 33, scope: !1553)
!1563 = !DILocation(line: 2058, column: 17, scope: !1553)
!1564 = !DILocation(line: 2061, column: 38, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 2060, column: 17)
!1566 = !DILocation(line: 2061, column: 45, scope: !1565)
!1567 = !DILocation(line: 2061, column: 52, scope: !1565)
!1568 = !DILocation(line: 2061, column: 57, scope: !1565)
!1569 = !DILocation(line: 2061, column: 35, scope: !1565)
!1570 = !DILocation(line: 2062, column: 36, scope: !1565)
!1571 = !DILocation(line: 2062, column: 43, scope: !1565)
!1572 = !DILocation(line: 2062, column: 47, scope: !1565)
!1573 = !DILocation(line: 2062, column: 52, scope: !1565)
!1574 = !DILocation(line: 2062, column: 33, scope: !1565)
!1575 = !DILocation(line: 2064, column: 13, scope: !1548)
!1576 = !DILocation(line: 2065, column: 16, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 2065, column: 15)
!1578 = !DILocation(line: 2065, column: 22, scope: !1577)
!1579 = !DILocation(line: 2065, column: 37, scope: !1577)
!1580 = !DILocation(line: 2065, column: 15, scope: !1535)
!1581 = !DILocation(line: 2066, column: 28, scope: !1577)
!1582 = !DILocation(line: 2066, column: 27, scope: !1577)
!1583 = !DILocation(line: 2066, column: 13, scope: !1577)
!1584 = !DILocation(line: 2076, column: 33, scope: !1439)
!1585 = !DILocation(line: 2076, column: 16, scope: !1439)
!1586 = !DILocation(line: 2076, column: 14, scope: !1439)
!1587 = !DILocation(line: 2076, column: 15, scope: !1439)
!1588 = !DILocation(line: 2077, column: 33, scope: !1439)
!1589 = !DILocation(line: 2077, column: 16, scope: !1439)
!1590 = !DILocation(line: 2077, column: 14, scope: !1439)
!1591 = !DILocation(line: 2077, column: 15, scope: !1439)
!1592 = !DILocation(line: 2078, column: 11, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 2078, column: 11)
!1594 = !DILocation(line: 2078, column: 19, scope: !1593)
!1595 = !DILocation(line: 2078, column: 11, scope: !1439)
!1596 = !DILocation(line: 2080, column: 16, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !1, line: 2080, column: 15)
!1598 = distinct !DILexicalBlock(scope: !1593, file: !1, line: 2079, column: 9)
!1599 = !DILocation(line: 2080, column: 22, scope: !1597)
!1600 = !DILocation(line: 2080, column: 32, scope: !1597)
!1601 = !DILocation(line: 2080, column: 15, scope: !1598)
!1602 = !DILocation(line: 2081, column: 18, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1597, file: !1, line: 2081, column: 17)
!1604 = !DILocation(line: 2081, column: 24, scope: !1603)
!1605 = !DILocation(line: 2081, column: 39, scope: !1603)
!1606 = !DILocation(line: 2081, column: 17, scope: !1597)
!1607 = !DILocation(line: 2082, column: 42, scope: !1603)
!1608 = !DILocation(line: 2082, column: 52, scope: !1603)
!1609 = !DILocation(line: 2082, column: 69, scope: !1603)
!1610 = !DILocation(line: 2082, column: 76, scope: !1603)
!1611 = !DILocation(line: 2082, column: 51, scope: !1603)
!1612 = !DILocation(line: 2082, column: 79, scope: !1603)
!1613 = !DILocation(line: 2082, column: 50, scope: !1603)
!1614 = !DILocation(line: 2082, column: 24, scope: !1603)
!1615 = !DILocation(line: 2082, column: 22, scope: !1603)
!1616 = !DILocation(line: 2082, column: 23, scope: !1603)
!1617 = !DILocation(line: 2082, column: 15, scope: !1603)
!1618 = !DILocation(line: 2085, column: 42, scope: !1603)
!1619 = !DILocation(line: 2085, column: 49, scope: !1603)
!1620 = !DILocation(line: 2085, column: 25, scope: !1603)
!1621 = !DILocation(line: 2085, column: 56, scope: !1603)
!1622 = !DILocation(line: 2085, column: 24, scope: !1603)
!1623 = !DILocation(line: 2085, column: 59, scope: !1603)
!1624 = !DILocation(line: 2085, column: 22, scope: !1603)
!1625 = !DILocation(line: 2085, column: 23, scope: !1603)
!1626 = !DILocation(line: 2081, column: 42, scope: !1603)
!1627 = !DILocation(line: 2087, column: 18, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1597, file: !1, line: 2087, column: 17)
!1629 = !DILocation(line: 2087, column: 24, scope: !1628)
!1630 = !DILocation(line: 2087, column: 39, scope: !1628)
!1631 = !DILocation(line: 2087, column: 17, scope: !1597)
!1632 = !DILocation(line: 2088, column: 42, scope: !1628)
!1633 = !DILocation(line: 2088, column: 65, scope: !1628)
!1634 = !DILocation(line: 2088, column: 50, scope: !1628)
!1635 = !DILocation(line: 2088, column: 24, scope: !1628)
!1636 = !DILocation(line: 2088, column: 22, scope: !1628)
!1637 = !DILocation(line: 2088, column: 23, scope: !1628)
!1638 = !DILocation(line: 2088, column: 15, scope: !1628)
!1639 = !DILocation(line: 2090, column: 38, scope: !1628)
!1640 = !DILocation(line: 2090, column: 22, scope: !1628)
!1641 = !DILocation(line: 2090, column: 23, scope: !1628)
!1642 = !DILocation(line: 2091, column: 16, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1598, file: !1, line: 2091, column: 15)
!1644 = !DILocation(line: 2091, column: 22, scope: !1643)
!1645 = !DILocation(line: 2091, column: 32, scope: !1643)
!1646 = !DILocation(line: 2091, column: 15, scope: !1598)
!1647 = !DILocation(line: 2092, column: 18, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 2092, column: 17)
!1649 = !DILocation(line: 2092, column: 24, scope: !1648)
!1650 = !DILocation(line: 2092, column: 39, scope: !1648)
!1651 = !DILocation(line: 2092, column: 17, scope: !1643)
!1652 = !DILocation(line: 2093, column: 42, scope: !1648)
!1653 = !DILocation(line: 2093, column: 52, scope: !1648)
!1654 = !DILocation(line: 2093, column: 69, scope: !1648)
!1655 = !DILocation(line: 2093, column: 73, scope: !1648)
!1656 = !DILocation(line: 2093, column: 51, scope: !1648)
!1657 = !DILocation(line: 2093, column: 76, scope: !1648)
!1658 = !DILocation(line: 2093, column: 50, scope: !1648)
!1659 = !DILocation(line: 2093, column: 24, scope: !1648)
!1660 = !DILocation(line: 2093, column: 22, scope: !1648)
!1661 = !DILocation(line: 2093, column: 23, scope: !1648)
!1662 = !DILocation(line: 2093, column: 15, scope: !1648)
!1663 = !DILocation(line: 2095, column: 42, scope: !1648)
!1664 = !DILocation(line: 2095, column: 49, scope: !1648)
!1665 = !DILocation(line: 2095, column: 25, scope: !1648)
!1666 = !DILocation(line: 2095, column: 53, scope: !1648)
!1667 = !DILocation(line: 2095, column: 24, scope: !1648)
!1668 = !DILocation(line: 2095, column: 56, scope: !1648)
!1669 = !DILocation(line: 2095, column: 22, scope: !1648)
!1670 = !DILocation(line: 2095, column: 23, scope: !1648)
!1671 = !DILocation(line: 2092, column: 42, scope: !1648)
!1672 = !DILocation(line: 2097, column: 18, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 2097, column: 17)
!1674 = !DILocation(line: 2097, column: 24, scope: !1673)
!1675 = !DILocation(line: 2097, column: 39, scope: !1673)
!1676 = !DILocation(line: 2097, column: 17, scope: !1643)
!1677 = !DILocation(line: 2098, column: 42, scope: !1673)
!1678 = !DILocation(line: 2098, column: 65, scope: !1673)
!1679 = !DILocation(line: 2098, column: 50, scope: !1673)
!1680 = !DILocation(line: 2098, column: 24, scope: !1673)
!1681 = !DILocation(line: 2098, column: 22, scope: !1673)
!1682 = !DILocation(line: 2098, column: 23, scope: !1673)
!1683 = !DILocation(line: 2098, column: 15, scope: !1673)
!1684 = !DILocation(line: 2100, column: 38, scope: !1673)
!1685 = !DILocation(line: 2100, column: 22, scope: !1673)
!1686 = !DILocation(line: 2100, column: 23, scope: !1673)
!1687 = !DILocation(line: 2101, column: 9, scope: !1598)
!1688 = !DILocation(line: 2106, column: 13, scope: !1439)
!1689 = !DILocation(line: 2107, column: 42, scope: !1439)
!1690 = !DILocation(line: 2107, column: 48, scope: !1439)
!1691 = !DILocation(line: 2107, column: 18, scope: !1439)
!1692 = !DILocation(line: 2107, column: 17, scope: !1439)
!1693 = !DILocation(line: 2108, column: 46, scope: !1439)
!1694 = !DILocation(line: 2108, column: 62, scope: !1439)
!1695 = !DILocation(line: 2108, column: 22, scope: !1439)
!1696 = !DILocation(line: 2108, column: 21, scope: !1439)
!1697 = !DILocation(line: 2109, column: 50, scope: !1439)
!1698 = !DILocation(line: 2109, column: 68, scope: !1439)
!1699 = !DILocation(line: 2109, column: 24, scope: !1439)
!1700 = !DILocation(line: 2109, column: 23, scope: !1439)
!1701 = !DILocation(line: 2110, column: 13, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 2110, column: 7)
!1703 = !DILocation(line: 2110, column: 12, scope: !1702)
!1704 = !DILocation(line: 2110, column: 17, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1702, file: !1, line: 2110, column: 7)
!1706 = !DILocation(line: 2110, column: 31, scope: !1705)
!1707 = !DILocation(line: 2110, column: 48, scope: !1705)
!1708 = !DILocation(line: 2110, column: 19, scope: !1705)
!1709 = !DILocation(line: 2110, column: 7, scope: !1702)
!1710 = !DILocalVariable(name: "sync", scope: !1711, file: !1, line: 2113, type: !498)
!1711 = distinct !DILexicalBlock(scope: !1705, file: !1, line: 2111, column: 7)
!1712 = !DILocation(line: 2113, column: 11, scope: !1711)
!1713 = !DILocalVariable(name: "p", scope: !1711, file: !1, line: 2116, type: !1252)
!1714 = !DILocation(line: 2116, column: 21, scope: !1711)
!1715 = !DILocalVariable(name: "x", scope: !1711, file: !1, line: 2119, type: !546)
!1716 = !DILocation(line: 2119, column: 11, scope: !1711)
!1717 = !DILocation(line: 2121, column: 15, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 2121, column: 13)
!1719 = !DILocation(line: 2121, column: 17, scope: !1718)
!1720 = !DILocation(line: 2121, column: 16, scope: !1718)
!1721 = !DILocation(line: 2121, column: 27, scope: !1718)
!1722 = !DILocation(line: 2121, column: 32, scope: !1718)
!1723 = !DILocation(line: 2121, column: 37, scope: !1718)
!1724 = !DILocation(line: 2121, column: 39, scope: !1718)
!1725 = !DILocation(line: 2121, column: 38, scope: !1718)
!1726 = !DILocation(line: 2121, column: 62, scope: !1718)
!1727 = !DILocation(line: 2121, column: 69, scope: !1718)
!1728 = !DILocation(line: 2121, column: 49, scope: !1718)
!1729 = !DILocation(line: 2121, column: 13, scope: !1711)
!1730 = !DILocation(line: 2122, column: 11, scope: !1718)
!1731 = !DILocation(line: 2123, column: 37, scope: !1711)
!1732 = !DILocation(line: 2123, column: 54, scope: !1711)
!1733 = !DILocation(line: 2123, column: 56, scope: !1711)
!1734 = !DILocation(line: 2123, column: 73, scope: !1711)
!1735 = !DILocation(line: 2124, column: 13, scope: !1711)
!1736 = !DILocation(line: 2123, column: 11, scope: !1711)
!1737 = !DILocation(line: 2123, column: 10, scope: !1711)
!1738 = !DILocation(line: 2125, column: 41, scope: !1711)
!1739 = !DILocation(line: 2125, column: 60, scope: !1711)
!1740 = !DILocation(line: 2126, column: 11, scope: !1711)
!1741 = !DILocation(line: 2126, column: 30, scope: !1711)
!1742 = !DILocation(line: 2126, column: 40, scope: !1711)
!1743 = !DILocation(line: 2125, column: 11, scope: !1711)
!1744 = !DILocation(line: 2125, column: 10, scope: !1711)
!1745 = !DILocation(line: 2127, column: 14, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 2127, column: 13)
!1747 = !DILocation(line: 2127, column: 16, scope: !1746)
!1748 = !DILocation(line: 2127, column: 47, scope: !1746)
!1749 = !DILocation(line: 2127, column: 51, scope: !1746)
!1750 = !DILocation(line: 2127, column: 53, scope: !1746)
!1751 = !DILocation(line: 2127, column: 13, scope: !1711)
!1752 = !DILocation(line: 2128, column: 11, scope: !1746)
!1753 = !DILocation(line: 2129, column: 61, scope: !1711)
!1754 = !DILocation(line: 2129, column: 29, scope: !1711)
!1755 = !DILocation(line: 2129, column: 28, scope: !1711)
!1756 = !DILocation(line: 2130, column: 15, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 2130, column: 9)
!1758 = !DILocation(line: 2130, column: 14, scope: !1757)
!1759 = !DILocation(line: 2130, column: 19, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 2130, column: 9)
!1761 = !DILocation(line: 2130, column: 33, scope: !1760)
!1762 = !DILocation(line: 2130, column: 50, scope: !1760)
!1763 = !DILocation(line: 2130, column: 21, scope: !1760)
!1764 = !DILocation(line: 2130, column: 9, scope: !1757)
!1765 = !DILocation(line: 2132, column: 17, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !1, line: 2132, column: 15)
!1767 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 2131, column: 9)
!1768 = !DILocation(line: 2132, column: 26, scope: !1766)
!1769 = !DILocation(line: 2132, column: 25, scope: !1766)
!1770 = !DILocation(line: 2132, column: 29, scope: !1766)
!1771 = !DILocation(line: 2132, column: 34, scope: !1766)
!1772 = !DILocation(line: 2132, column: 39, scope: !1766)
!1773 = !DILocation(line: 2132, column: 48, scope: !1766)
!1774 = !DILocation(line: 2132, column: 47, scope: !1766)
!1775 = !DILocation(line: 2132, column: 64, scope: !1766)
!1776 = !DILocation(line: 2132, column: 71, scope: !1766)
!1777 = !DILocation(line: 2132, column: 51, scope: !1766)
!1778 = !DILocation(line: 2132, column: 15, scope: !1767)
!1779 = !DILocation(line: 2134, column: 16, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1766, file: !1, line: 2133, column: 13)
!1781 = !DILocation(line: 2135, column: 15, scope: !1780)
!1782 = !DILocation(line: 2140, column: 31, scope: !1767)
!1783 = !DILocation(line: 2140, column: 49, scope: !1767)
!1784 = !DILocation(line: 2140, column: 63, scope: !1767)
!1785 = !DILocation(line: 2140, column: 47, scope: !1767)
!1786 = !DILocation(line: 2141, column: 56, scope: !1767)
!1787 = !DILocation(line: 2142, column: 43, scope: !1767)
!1788 = !DILocation(line: 2142, column: 35, scope: !1767)
!1789 = !DILocation(line: 2142, column: 47, scope: !1767)
!1790 = !DILocation(line: 2142, column: 55, scope: !1767)
!1791 = !DILocation(line: 2142, column: 46, scope: !1767)
!1792 = !DILocation(line: 2143, column: 13, scope: !1767)
!1793 = !DILocation(line: 2142, column: 45, scope: !1767)
!1794 = !DILocation(line: 2142, column: 44, scope: !1767)
!1795 = !DILocation(line: 2140, column: 18, scope: !1767)
!1796 = !DILocation(line: 2140, column: 19, scope: !1767)
!1797 = !DILocation(line: 2144, column: 31, scope: !1767)
!1798 = !DILocation(line: 2144, column: 47, scope: !1767)
!1799 = !DILocation(line: 2144, column: 63, scope: !1767)
!1800 = !DILocation(line: 2144, column: 45, scope: !1767)
!1801 = !DILocation(line: 2145, column: 56, scope: !1767)
!1802 = !DILocation(line: 2146, column: 43, scope: !1767)
!1803 = !DILocation(line: 2146, column: 35, scope: !1767)
!1804 = !DILocation(line: 2146, column: 47, scope: !1767)
!1805 = !DILocation(line: 2146, column: 55, scope: !1767)
!1806 = !DILocation(line: 2146, column: 46, scope: !1767)
!1807 = !DILocation(line: 2147, column: 13, scope: !1767)
!1808 = !DILocation(line: 2146, column: 45, scope: !1767)
!1809 = !DILocation(line: 2146, column: 44, scope: !1767)
!1810 = !DILocation(line: 2144, column: 18, scope: !1767)
!1811 = !DILocation(line: 2144, column: 19, scope: !1767)
!1812 = !DILocation(line: 2148, column: 47, scope: !1767)
!1813 = !DILocation(line: 2148, column: 53, scope: !1767)
!1814 = !DILocation(line: 2149, column: 55, scope: !1767)
!1815 = !DILocation(line: 2149, column: 73, scope: !1767)
!1816 = !DILocation(line: 2150, column: 20, scope: !1767)
!1817 = !DILocation(line: 2148, column: 18, scope: !1767)
!1818 = !DILocation(line: 2155, column: 19, scope: !1767)
!1819 = !DILocation(line: 2155, column: 13, scope: !1767)
!1820 = !DILocation(line: 2154, column: 77, scope: !1767)
!1821 = !DILocation(line: 2154, column: 64, scope: !1767)
!1822 = !DILocation(line: 2155, column: 46, scope: !1767)
!1823 = !DILocation(line: 2155, column: 45, scope: !1767)
!1824 = !DILocation(line: 2155, column: 32, scope: !1767)
!1825 = !DILocation(line: 2155, column: 27, scope: !1767)
!1826 = !DILocation(line: 2154, column: 59, scope: !1767)
!1827 = !DILocation(line: 2154, column: 54, scope: !1767)
!1828 = !DILocation(line: 2154, column: 25, scope: !1767)
!1829 = !DILocation(line: 2154, column: 17, scope: !1767)
!1830 = !DILocation(line: 2154, column: 24, scope: !1767)
!1831 = !DILocation(line: 2156, column: 26, scope: !1767)
!1832 = !DILocation(line: 2156, column: 51, scope: !1767)
!1833 = !DILocation(line: 2156, column: 53, scope: !1767)
!1834 = !DILocation(line: 2156, column: 73, scope: !1767)
!1835 = !DILocation(line: 2156, column: 72, scope: !1767)
!1836 = !DILocation(line: 2156, column: 11, scope: !1767)
!1837 = !DILocation(line: 2157, column: 12, scope: !1767)
!1838 = !DILocation(line: 2158, column: 12, scope: !1767)
!1839 = !DILocation(line: 2159, column: 9, scope: !1767)
!1840 = !DILocation(line: 2130, column: 60, scope: !1760)
!1841 = !DILocation(line: 2130, column: 9, scope: !1760)
!1842 = distinct !{!1842, !1764, !1843}
!1843 = !DILocation(line: 2159, column: 9, scope: !1757)
!1844 = !DILocation(line: 2160, column: 43, scope: !1711)
!1845 = !DILocation(line: 2160, column: 60, scope: !1711)
!1846 = !DILocation(line: 2160, column: 14, scope: !1711)
!1847 = !DILocation(line: 2160, column: 13, scope: !1711)
!1848 = !DILocation(line: 2161, column: 13, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 2161, column: 13)
!1850 = !DILocation(line: 2161, column: 18, scope: !1849)
!1851 = !DILocation(line: 2161, column: 13, scope: !1711)
!1852 = !DILocation(line: 2162, column: 11, scope: !1849)
!1853 = !DILocation(line: 2163, column: 7, scope: !1711)
!1854 = !DILocation(line: 2110, column: 55, scope: !1705)
!1855 = !DILocation(line: 2110, column: 7, scope: !1705)
!1856 = distinct !{!1856, !1709, !1857}
!1857 = !DILocation(line: 2163, column: 7, scope: !1702)
!1858 = !DILocation(line: 2164, column: 41, scope: !1439)
!1859 = !DILocation(line: 2164, column: 24, scope: !1439)
!1860 = !DILocation(line: 2164, column: 23, scope: !1439)
!1861 = !DILocation(line: 2165, column: 39, scope: !1439)
!1862 = !DILocation(line: 2165, column: 22, scope: !1439)
!1863 = !DILocation(line: 2165, column: 21, scope: !1439)
!1864 = !DILocation(line: 2166, column: 35, scope: !1439)
!1865 = !DILocation(line: 2166, column: 18, scope: !1439)
!1866 = !DILocation(line: 2166, column: 17, scope: !1439)
!1867 = !DILocation(line: 2167, column: 36, scope: !1439)
!1868 = !DILocation(line: 2167, column: 23, scope: !1439)
!1869 = !DILocation(line: 2167, column: 22, scope: !1439)
!1870 = !DILocation(line: 2168, column: 23, scope: !1439)
!1871 = !DILocation(line: 2168, column: 22, scope: !1439)
!1872 = !DILocation(line: 2169, column: 7, scope: !1439)
!1873 = !DILocation(line: 2176, column: 30, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2172, column: 5)
!1875 = !DILocation(line: 2176, column: 13, scope: !1874)
!1876 = !DILocation(line: 2176, column: 12, scope: !1874)
!1877 = !DILocation(line: 2177, column: 11, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1874, file: !1, line: 2177, column: 11)
!1879 = !DILocation(line: 2177, column: 17, scope: !1878)
!1880 = !DILocation(line: 2177, column: 11, scope: !1874)
!1881 = !DILocation(line: 2179, column: 31, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1878, file: !1, line: 2178, column: 9)
!1883 = !DILocation(line: 2179, column: 17, scope: !1882)
!1884 = !DILocation(line: 2179, column: 16, scope: !1882)
!1885 = !DILocation(line: 2180, column: 41, scope: !1882)
!1886 = !DILocation(line: 2180, column: 44, scope: !1882)
!1887 = !DILocation(line: 2180, column: 27, scope: !1882)
!1888 = !DILocation(line: 2180, column: 26, scope: !1882)
!1889 = !DILocation(line: 2181, column: 31, scope: !1882)
!1890 = !DILocation(line: 2182, column: 16, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2182, column: 15)
!1892 = !DILocation(line: 2182, column: 31, scope: !1891)
!1893 = !DILocation(line: 2182, column: 47, scope: !1891)
!1894 = !DILocation(line: 2182, column: 15, scope: !1882)
!1895 = !DILocation(line: 2183, column: 28, scope: !1891)
!1896 = !DILocation(line: 2183, column: 13, scope: !1891)
!1897 = !DILocation(line: 2184, column: 16, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2184, column: 15)
!1899 = !DILocation(line: 2184, column: 31, scope: !1898)
!1900 = !DILocation(line: 2184, column: 47, scope: !1898)
!1901 = !DILocation(line: 2184, column: 15, scope: !1882)
!1902 = !DILocation(line: 2186, column: 40, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 2185, column: 13)
!1904 = !DILocation(line: 2186, column: 39, scope: !1903)
!1905 = !DILocation(line: 2186, column: 36, scope: !1903)
!1906 = !DILocation(line: 2186, column: 35, scope: !1903)
!1907 = !DILocation(line: 2187, column: 30, scope: !1903)
!1908 = !DILocation(line: 2188, column: 13, scope: !1903)
!1909 = !DILocation(line: 2189, column: 16, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2189, column: 15)
!1911 = !DILocation(line: 2189, column: 22, scope: !1910)
!1912 = !DILocation(line: 2189, column: 36, scope: !1910)
!1913 = !DILocation(line: 2189, column: 15, scope: !1882)
!1914 = !DILocation(line: 2190, column: 48, scope: !1910)
!1915 = !DILocation(line: 2190, column: 53, scope: !1910)
!1916 = !DILocation(line: 2190, column: 34, scope: !1910)
!1917 = !DILocation(line: 2190, column: 33, scope: !1910)
!1918 = !DILocation(line: 2190, column: 13, scope: !1910)
!1919 = !DILocation(line: 2191, column: 16, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2191, column: 15)
!1921 = !DILocation(line: 2191, column: 36, scope: !1920)
!1922 = !DILocation(line: 2191, column: 52, scope: !1920)
!1923 = !DILocation(line: 2191, column: 15, scope: !1882)
!1924 = !DILocation(line: 2192, column: 33, scope: !1920)
!1925 = !DILocation(line: 2192, column: 13, scope: !1920)
!1926 = !DILocation(line: 2193, column: 23, scope: !1882)
!1927 = !DILocation(line: 2194, column: 16, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 2194, column: 15)
!1929 = !DILocation(line: 2194, column: 36, scope: !1928)
!1930 = !DILocation(line: 2194, column: 52, scope: !1928)
!1931 = !DILocation(line: 2194, column: 15, scope: !1882)
!1932 = !DILocation(line: 2196, column: 35, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1928, file: !1, line: 2195, column: 13)
!1934 = !DILocation(line: 2197, column: 27, scope: !1933)
!1935 = !DILocation(line: 2198, column: 13, scope: !1933)
!1936 = !DILocation(line: 2199, column: 9, scope: !1882)
!1937 = !DILocation(line: 2200, column: 7, scope: !1874)
!1938 = !DILocation(line: 2204, column: 30, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2203, column: 5)
!1940 = !DILocation(line: 2204, column: 13, scope: !1939)
!1941 = !DILocation(line: 2204, column: 12, scope: !1939)
!1942 = !DILocation(line: 2205, column: 11, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1939, file: !1, line: 2205, column: 11)
!1944 = !DILocation(line: 2205, column: 17, scope: !1943)
!1945 = !DILocation(line: 2205, column: 11, scope: !1939)
!1946 = !DILocation(line: 2207, column: 31, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1943, file: !1, line: 2206, column: 9)
!1948 = !DILocation(line: 2207, column: 17, scope: !1947)
!1949 = !DILocation(line: 2207, column: 16, scope: !1947)
!1950 = !DILocation(line: 2208, column: 41, scope: !1947)
!1951 = !DILocation(line: 2208, column: 44, scope: !1947)
!1952 = !DILocation(line: 2208, column: 27, scope: !1947)
!1953 = !DILocation(line: 2208, column: 26, scope: !1947)
!1954 = !DILocation(line: 2209, column: 36, scope: !1947)
!1955 = !DILocation(line: 2209, column: 35, scope: !1947)
!1956 = !DILocation(line: 2209, column: 32, scope: !1947)
!1957 = !DILocation(line: 2209, column: 31, scope: !1947)
!1958 = !DILocation(line: 2210, column: 16, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1947, file: !1, line: 2210, column: 15)
!1960 = !DILocation(line: 2210, column: 22, scope: !1959)
!1961 = !DILocation(line: 2210, column: 36, scope: !1959)
!1962 = !DILocation(line: 2210, column: 15, scope: !1947)
!1963 = !DILocation(line: 2211, column: 48, scope: !1959)
!1964 = !DILocation(line: 2211, column: 53, scope: !1959)
!1965 = !DILocation(line: 2211, column: 34, scope: !1959)
!1966 = !DILocation(line: 2211, column: 33, scope: !1959)
!1967 = !DILocation(line: 2211, column: 13, scope: !1959)
!1968 = !DILocation(line: 2212, column: 23, scope: !1947)
!1969 = !DILocation(line: 2213, column: 16, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1947, file: !1, line: 2213, column: 15)
!1971 = !DILocation(line: 2213, column: 36, scope: !1970)
!1972 = !DILocation(line: 2213, column: 52, scope: !1970)
!1973 = !DILocation(line: 2213, column: 15, scope: !1947)
!1974 = !DILocation(line: 2214, column: 25, scope: !1970)
!1975 = !DILocation(line: 2214, column: 13, scope: !1970)
!1976 = !DILocation(line: 2215, column: 9, scope: !1947)
!1977 = !DILocation(line: 2216, column: 7, scope: !1939)
!1978 = !DILocation(line: 2228, column: 7, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2219, column: 5)
!1980 = !DILocation(line: 2229, column: 30, scope: !1979)
!1981 = !DILocation(line: 2229, column: 13, scope: !1979)
!1982 = !DILocation(line: 2229, column: 12, scope: !1979)
!1983 = !DILocation(line: 2230, column: 11, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1979, file: !1, line: 2230, column: 11)
!1985 = !DILocation(line: 2230, column: 17, scope: !1984)
!1986 = !DILocation(line: 2230, column: 11, scope: !1979)
!1987 = !DILocation(line: 2231, column: 30, scope: !1984)
!1988 = !DILocation(line: 2231, column: 16, scope: !1984)
!1989 = !DILocation(line: 2231, column: 9, scope: !1984)
!1990 = !DILocation(line: 2232, column: 7, scope: !1979)
!1991 = !DILocation(line: 2239, column: 30, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2235, column: 5)
!1993 = !DILocation(line: 2239, column: 13, scope: !1992)
!1994 = !DILocation(line: 2239, column: 12, scope: !1992)
!1995 = !DILocation(line: 2240, column: 11, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 2240, column: 11)
!1997 = !DILocation(line: 2240, column: 17, scope: !1996)
!1998 = !DILocation(line: 2240, column: 11, scope: !1992)
!1999 = !DILocation(line: 2242, column: 31, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1996, file: !1, line: 2241, column: 9)
!2001 = !DILocation(line: 2242, column: 17, scope: !2000)
!2002 = !DILocation(line: 2242, column: 16, scope: !2000)
!2003 = !DILocation(line: 2243, column: 38, scope: !2000)
!2004 = !DILocation(line: 2243, column: 24, scope: !2000)
!2005 = !DILocation(line: 2243, column: 23, scope: !2000)
!2006 = !DILocation(line: 2244, column: 16, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2000, file: !1, line: 2244, column: 15)
!2008 = !DILocation(line: 2244, column: 22, scope: !2007)
!2009 = !DILocation(line: 2244, column: 36, scope: !2007)
!2010 = !DILocation(line: 2244, column: 15, scope: !2000)
!2011 = !DILocation(line: 2245, column: 42, scope: !2007)
!2012 = !DILocation(line: 2245, column: 28, scope: !2007)
!2013 = !DILocation(line: 2245, column: 27, scope: !2007)
!2014 = !DILocation(line: 2245, column: 13, scope: !2007)
!2015 = !DILocation(line: 2246, column: 9, scope: !2000)
!2016 = !DILocation(line: 2247, column: 7, scope: !1992)
!2017 = !DILocation(line: 2255, column: 30, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !880, file: !1, line: 2250, column: 5)
!2019 = !DILocation(line: 2255, column: 13, scope: !2018)
!2020 = !DILocation(line: 2255, column: 12, scope: !2018)
!2021 = !DILocation(line: 2256, column: 11, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2018, file: !1, line: 2256, column: 11)
!2023 = !DILocation(line: 2256, column: 17, scope: !2022)
!2024 = !DILocation(line: 2256, column: 11, scope: !2018)
!2025 = !DILocation(line: 2258, column: 31, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !2022, file: !1, line: 2257, column: 9)
!2027 = !DILocation(line: 2258, column: 17, scope: !2026)
!2028 = !DILocation(line: 2258, column: 16, scope: !2026)
!2029 = !DILocation(line: 2259, column: 32, scope: !2026)
!2030 = !DILocation(line: 2259, column: 18, scope: !2026)
!2031 = !DILocation(line: 2259, column: 17, scope: !2026)
!2032 = !DILocation(line: 2260, column: 35, scope: !2026)
!2033 = !DILocation(line: 2260, column: 21, scope: !2026)
!2034 = !DILocation(line: 2260, column: 20, scope: !2026)
!2035 = !DILocation(line: 2261, column: 16, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2026, file: !1, line: 2261, column: 15)
!2037 = !DILocation(line: 2261, column: 22, scope: !2036)
!2038 = !DILocation(line: 2261, column: 36, scope: !2036)
!2039 = !DILocation(line: 2261, column: 15, scope: !2026)
!2040 = !DILocation(line: 2262, column: 22, scope: !2036)
!2041 = !DILocation(line: 2262, column: 13, scope: !2036)
!2042 = !DILocation(line: 2263, column: 9, scope: !2026)
!2043 = !DILocation(line: 2264, column: 16, scope: !2018)
!2044 = !DILocation(line: 2265, column: 7, scope: !2018)
!2045 = !DILocation(line: 2268, column: 7, scope: !880)
!2046 = !DILocation(line: 2270, column: 26, scope: !743)
!2047 = !DILocation(line: 2270, column: 9, scope: !743)
!2048 = !DILocation(line: 2270, column: 8, scope: !743)
!2049 = !DILocation(line: 2271, column: 7, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !743, file: !1, line: 2271, column: 7)
!2051 = !DILocation(line: 2271, column: 13, scope: !2050)
!2052 = !DILocation(line: 2271, column: 7, scope: !743)
!2053 = !DILocation(line: 2272, column: 31, scope: !2050)
!2054 = !DILocation(line: 2272, column: 18, scope: !2050)
!2055 = !DILocation(line: 2272, column: 38, scope: !2050)
!2056 = !DILocation(line: 2272, column: 17, scope: !2050)
!2057 = !DILocation(line: 2272, column: 5, scope: !2050)
!2058 = !DILocation(line: 2277, column: 35, scope: !743)
!2059 = !DILocation(line: 2277, column: 41, scope: !743)
!2060 = !DILocation(line: 2277, column: 49, scope: !743)
!2061 = !DILocation(line: 2277, column: 57, scope: !743)
!2062 = !DILocation(line: 2278, column: 5, scope: !743)
!2063 = !DILocation(line: 2278, column: 14, scope: !743)
!2064 = !DILocation(line: 2278, column: 23, scope: !743)
!2065 = !DILocation(line: 2278, column: 44, scope: !743)
!2066 = !DILocation(line: 2278, column: 60, scope: !743)
!2067 = !DILocation(line: 2277, column: 10, scope: !743)
!2068 = !DILocation(line: 2277, column: 9, scope: !743)
!2069 = !DILocation(line: 2279, column: 7, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !743, file: !1, line: 2279, column: 7)
!2071 = !DILocation(line: 2279, column: 13, scope: !2070)
!2072 = !DILocation(line: 2279, column: 7, scope: !743)
!2073 = !DILocation(line: 2280, column: 12, scope: !2070)
!2074 = !DILocation(line: 2280, column: 5, scope: !2070)
!2075 = !DILocation(line: 2282, column: 9, scope: !743)
!2076 = !DILocation(line: 2283, column: 11, scope: !743)
!2077 = !DILocation(line: 2284, column: 11, scope: !743)
!2078 = !DILocation(line: 2285, column: 24, scope: !743)
!2079 = !DILocation(line: 2285, column: 3, scope: !743)
!2080 = !DILocation(line: 2286, column: 42, scope: !743)
!2081 = !DILocation(line: 2286, column: 58, scope: !743)
!2082 = !DILocation(line: 2286, column: 18, scope: !743)
!2083 = !DILocation(line: 2286, column: 17, scope: !743)
!2084 = !DILocation(line: 2287, column: 40, scope: !743)
!2085 = !DILocation(line: 2287, column: 46, scope: !743)
!2086 = !DILocation(line: 2287, column: 14, scope: !743)
!2087 = !DILocation(line: 2287, column: 13, scope: !743)
!2088 = !DILocation(line: 2292, column: 9, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !743, file: !1, line: 2292, column: 3)
!2090 = !DILocation(line: 2292, column: 8, scope: !2089)
!2091 = !DILocation(line: 2292, column: 13, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2089, file: !1, line: 2292, column: 3)
!2093 = !DILocation(line: 2292, column: 27, scope: !2092)
!2094 = !DILocation(line: 2292, column: 34, scope: !2092)
!2095 = !DILocation(line: 2292, column: 15, scope: !2092)
!2096 = !DILocation(line: 2292, column: 3, scope: !2089)
!2097 = !DILocalVariable(name: "pixels", scope: !2098, file: !1, line: 2295, type: !704)
!2098 = distinct !DILexicalBlock(scope: !2092, file: !1, line: 2293, column: 3)
!2099 = !DILocation(line: 2295, column: 8, scope: !2098)
!2100 = !DILocalVariable(name: "luma", scope: !2098, file: !1, line: 2298, type: !519)
!2101 = !DILocation(line: 2298, column: 7, scope: !2098)
!2102 = !DILocalVariable(name: "hue", scope: !2098, file: !1, line: 2299, type: !519)
!2103 = !DILocation(line: 2299, column: 7, scope: !2098)
!2104 = !DILocalVariable(name: "chroma", scope: !2098, file: !1, line: 2300, type: !519)
!2105 = !DILocation(line: 2300, column: 7, scope: !2098)
!2106 = !DILocalVariable(name: "sans", scope: !2098, file: !1, line: 2301, type: !519)
!2107 = !DILocation(line: 2301, column: 7, scope: !2098)
!2108 = !DILocalVariable(name: "composite", scope: !2098, file: !1, line: 2304, type: !793)
!2109 = !DILocation(line: 2304, column: 7, scope: !2098)
!2110 = !DILocalVariable(name: "destination", scope: !2098, file: !1, line: 2305, type: !793)
!2111 = !DILocation(line: 2305, column: 7, scope: !2098)
!2112 = !DILocalVariable(name: "source", scope: !2098, file: !1, line: 2306, type: !793)
!2113 = !DILocation(line: 2306, column: 7, scope: !2098)
!2114 = !DILocalVariable(name: "composite_indexes", scope: !2098, file: !1, line: 2309, type: !2115)
!2115 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !708)
!2116 = !DILocation(line: 2309, column: 17, scope: !2098)
!2117 = !DILocalVariable(name: "p", scope: !2098, file: !1, line: 2312, type: !1252)
!2118 = !DILocation(line: 2312, column: 17, scope: !2098)
!2119 = !DILocalVariable(name: "indexes", scope: !2098, file: !1, line: 2315, type: !1258)
!2120 = !DILocation(line: 2315, column: 17, scope: !2098)
!2121 = !DILocalVariable(name: "x", scope: !2098, file: !1, line: 2318, type: !546)
!2122 = !DILocation(line: 2318, column: 7, scope: !2098)
!2123 = !DILocalVariable(name: "q", scope: !2098, file: !1, line: 2321, type: !1255)
!2124 = !DILocation(line: 2321, column: 17, scope: !2098)
!2125 = !DILocation(line: 2323, column: 9, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2323, column: 9)
!2127 = !DILocation(line: 2323, column: 16, scope: !2126)
!2128 = !DILocation(line: 2323, column: 9, scope: !2098)
!2129 = !DILocation(line: 2324, column: 7, scope: !2126)
!2130 = !DILocation(line: 2325, column: 9, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2325, column: 9)
!2132 = !DILocation(line: 2325, column: 22, scope: !2131)
!2133 = !DILocation(line: 2325, column: 9, scope: !2098)
!2134 = !DILocation(line: 2327, column: 13, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 2327, column: 13)
!2136 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 2326, column: 7)
!2137 = !DILocation(line: 2327, column: 17, scope: !2135)
!2138 = !DILocation(line: 2327, column: 15, scope: !2135)
!2139 = !DILocation(line: 2327, column: 13, scope: !2136)
!2140 = !DILocation(line: 2328, column: 11, scope: !2135)
!2141 = !DILocation(line: 2329, column: 14, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 2329, column: 13)
!2143 = !DILocation(line: 2329, column: 16, scope: !2142)
!2144 = !DILocation(line: 2329, column: 15, scope: !2142)
!2145 = !DILocation(line: 2329, column: 39, scope: !2142)
!2146 = !DILocation(line: 2329, column: 56, scope: !2142)
!2147 = !DILocation(line: 2329, column: 26, scope: !2142)
!2148 = !DILocation(line: 2329, column: 13, scope: !2136)
!2149 = !DILocation(line: 2330, column: 11, scope: !2142)
!2150 = !DILocation(line: 2331, column: 7, scope: !2136)
!2151 = !DILocation(line: 2335, column: 11, scope: !2098)
!2152 = !DILocation(line: 2336, column: 6, scope: !2098)
!2153 = !DILocation(line: 2337, column: 10, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2337, column: 9)
!2155 = !DILocation(line: 2337, column: 15, scope: !2154)
!2156 = !DILocation(line: 2337, column: 12, scope: !2154)
!2157 = !DILocation(line: 2337, column: 25, scope: !2154)
!2158 = !DILocation(line: 2337, column: 30, scope: !2154)
!2159 = !DILocation(line: 2337, column: 32, scope: !2154)
!2160 = !DILocation(line: 2337, column: 31, scope: !2154)
!2161 = !DILocation(line: 2337, column: 54, scope: !2154)
!2162 = !DILocation(line: 2337, column: 71, scope: !2154)
!2163 = !DILocation(line: 2337, column: 42, scope: !2154)
!2164 = !DILocation(line: 2337, column: 9, scope: !2098)
!2165 = !DILocation(line: 2339, column: 37, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 2338, column: 7)
!2167 = !DILocation(line: 2339, column: 54, scope: !2166)
!2168 = !DILocation(line: 2339, column: 56, scope: !2166)
!2169 = !DILocation(line: 2339, column: 55, scope: !2166)
!2170 = !DILocation(line: 2340, column: 11, scope: !2166)
!2171 = !DILocation(line: 2340, column: 28, scope: !2166)
!2172 = !DILocation(line: 2340, column: 38, scope: !2166)
!2173 = !DILocation(line: 2339, column: 11, scope: !2166)
!2174 = !DILocation(line: 2339, column: 10, scope: !2166)
!2175 = !DILocation(line: 2341, column: 13, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2166, file: !1, line: 2341, column: 13)
!2177 = !DILocation(line: 2341, column: 15, scope: !2176)
!2178 = !DILocation(line: 2341, column: 13, scope: !2166)
!2179 = !DILocation(line: 2343, column: 19, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 2342, column: 11)
!2181 = !DILocation(line: 2344, column: 13, scope: !2180)
!2182 = !DILocation(line: 2346, column: 16, scope: !2166)
!2183 = !DILocation(line: 2346, column: 15, scope: !2166)
!2184 = !DILocation(line: 2347, column: 13, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2166, file: !1, line: 2347, column: 13)
!2186 = !DILocation(line: 2347, column: 22, scope: !2185)
!2187 = !DILocation(line: 2347, column: 13, scope: !2166)
!2188 = !DILocation(line: 2348, column: 14, scope: !2185)
!2189 = !DILocation(line: 2348, column: 12, scope: !2185)
!2190 = !DILocation(line: 2348, column: 11, scope: !2185)
!2191 = !DILocation(line: 2349, column: 7, scope: !2166)
!2192 = !DILocation(line: 2350, column: 35, scope: !2098)
!2193 = !DILocation(line: 2350, column: 48, scope: !2098)
!2194 = !DILocation(line: 2350, column: 50, scope: !2098)
!2195 = !DILocation(line: 2350, column: 57, scope: !2098)
!2196 = !DILocation(line: 2350, column: 67, scope: !2098)
!2197 = !DILocation(line: 2350, column: 7, scope: !2098)
!2198 = !DILocation(line: 2350, column: 6, scope: !2098)
!2199 = !DILocation(line: 2351, column: 9, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2351, column: 9)
!2201 = !DILocation(line: 2351, column: 11, scope: !2200)
!2202 = !DILocation(line: 2351, column: 9, scope: !2098)
!2203 = !DILocation(line: 2353, column: 15, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2200, file: !1, line: 2352, column: 7)
!2205 = !DILocation(line: 2354, column: 9, scope: !2204)
!2206 = !DILocation(line: 2356, column: 45, scope: !2098)
!2207 = !DILocation(line: 2356, column: 13, scope: !2098)
!2208 = !DILocation(line: 2356, column: 12, scope: !2098)
!2209 = !DILocation(line: 2357, column: 53, scope: !2098)
!2210 = !DILocation(line: 2357, column: 23, scope: !2098)
!2211 = !DILocation(line: 2357, column: 22, scope: !2098)
!2212 = !DILocation(line: 2358, column: 26, scope: !2098)
!2213 = !DILocation(line: 2358, column: 5, scope: !2098)
!2214 = !DILocation(line: 2359, column: 26, scope: !2098)
!2215 = !DILocation(line: 2359, column: 5, scope: !2098)
!2216 = !DILocation(line: 2360, column: 8, scope: !2098)
!2217 = !DILocation(line: 2361, column: 11, scope: !2098)
!2218 = !DILocation(line: 2362, column: 9, scope: !2098)
!2219 = !DILocation(line: 2363, column: 11, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2363, column: 5)
!2221 = !DILocation(line: 2363, column: 10, scope: !2220)
!2222 = !DILocation(line: 2363, column: 15, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2220, file: !1, line: 2363, column: 5)
!2224 = !DILocation(line: 2363, column: 29, scope: !2223)
!2225 = !DILocation(line: 2363, column: 36, scope: !2223)
!2226 = !DILocation(line: 2363, column: 17, scope: !2223)
!2227 = !DILocation(line: 2363, column: 5, scope: !2220)
!2228 = !DILocation(line: 2365, column: 11, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2365, column: 11)
!2230 = distinct !DILexicalBlock(scope: !2223, file: !1, line: 2364, column: 5)
!2231 = !DILocation(line: 2365, column: 24, scope: !2229)
!2232 = !DILocation(line: 2365, column: 11, scope: !2230)
!2233 = !DILocation(line: 2367, column: 15, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 2367, column: 15)
!2235 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 2366, column: 9)
!2236 = !DILocation(line: 2367, column: 19, scope: !2234)
!2237 = !DILocation(line: 2367, column: 17, scope: !2234)
!2238 = !DILocation(line: 2367, column: 15, scope: !2235)
!2239 = !DILocation(line: 2369, column: 16, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 2368, column: 13)
!2241 = !DILocation(line: 2370, column: 15, scope: !2240)
!2242 = !DILocation(line: 2372, column: 16, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 2372, column: 15)
!2244 = !DILocation(line: 2372, column: 18, scope: !2243)
!2245 = !DILocation(line: 2372, column: 17, scope: !2243)
!2246 = !DILocation(line: 2372, column: 41, scope: !2243)
!2247 = !DILocation(line: 2372, column: 58, scope: !2243)
!2248 = !DILocation(line: 2372, column: 28, scope: !2243)
!2249 = !DILocation(line: 2372, column: 15, scope: !2235)
!2250 = !DILocation(line: 2373, column: 13, scope: !2243)
!2251 = !DILocation(line: 2374, column: 9, scope: !2235)
!2252 = !DILocation(line: 2375, column: 40, scope: !2230)
!2253 = !DILocation(line: 2375, column: 23, scope: !2230)
!2254 = !DILocation(line: 2375, column: 19, scope: !2230)
!2255 = !DILocation(line: 2375, column: 22, scope: !2230)
!2256 = !DILocation(line: 2376, column: 42, scope: !2230)
!2257 = !DILocation(line: 2376, column: 25, scope: !2230)
!2258 = !DILocation(line: 2376, column: 19, scope: !2230)
!2259 = !DILocation(line: 2376, column: 24, scope: !2230)
!2260 = !DILocation(line: 2377, column: 41, scope: !2230)
!2261 = !DILocation(line: 2377, column: 24, scope: !2230)
!2262 = !DILocation(line: 2377, column: 19, scope: !2230)
!2263 = !DILocation(line: 2377, column: 23, scope: !2230)
!2264 = !DILocation(line: 2378, column: 11, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2378, column: 11)
!2266 = !DILocation(line: 2378, column: 18, scope: !2265)
!2267 = !DILocation(line: 2378, column: 24, scope: !2265)
!2268 = !DILocation(line: 2378, column: 11, scope: !2230)
!2269 = !DILocation(line: 2379, column: 46, scope: !2265)
!2270 = !DILocation(line: 2379, column: 29, scope: !2265)
!2271 = !DILocation(line: 2379, column: 21, scope: !2265)
!2272 = !DILocation(line: 2379, column: 28, scope: !2265)
!2273 = !DILocation(line: 2379, column: 9, scope: !2265)
!2274 = !DILocation(line: 2380, column: 11, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2380, column: 11)
!2276 = !DILocation(line: 2380, column: 18, scope: !2275)
!2277 = !DILocation(line: 2380, column: 29, scope: !2275)
!2278 = !DILocation(line: 2380, column: 11, scope: !2230)
!2279 = !DILocation(line: 2381, column: 44, scope: !2275)
!2280 = !DILocation(line: 2381, column: 27, scope: !2275)
!2281 = !DILocation(line: 2381, column: 21, scope: !2275)
!2282 = !DILocation(line: 2381, column: 26, scope: !2275)
!2283 = !DILocation(line: 2381, column: 9, scope: !2275)
!2284 = !DILocation(line: 2382, column: 11, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2382, column: 11)
!2286 = !DILocation(line: 2382, column: 18, scope: !2285)
!2287 = !DILocation(line: 2382, column: 29, scope: !2285)
!2288 = !DILocation(line: 2382, column: 11, scope: !2230)
!2289 = !DILocation(line: 2384, column: 69, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2285, file: !1, line: 2383, column: 9)
!2291 = !DILocation(line: 2384, column: 56, scope: !2290)
!2292 = !DILocation(line: 2384, column: 23, scope: !2290)
!2293 = !DILocation(line: 2384, column: 26, scope: !2290)
!2294 = !DILocation(line: 2385, column: 71, scope: !2290)
!2295 = !DILocation(line: 2385, column: 58, scope: !2290)
!2296 = !DILocation(line: 2385, column: 23, scope: !2290)
!2297 = !DILocation(line: 2385, column: 28, scope: !2290)
!2298 = !DILocation(line: 2386, column: 70, scope: !2290)
!2299 = !DILocation(line: 2386, column: 57, scope: !2290)
!2300 = !DILocation(line: 2386, column: 23, scope: !2290)
!2301 = !DILocation(line: 2386, column: 27, scope: !2290)
!2302 = !DILocation(line: 2387, column: 71, scope: !2290)
!2303 = !DILocation(line: 2387, column: 58, scope: !2290)
!2304 = !DILocation(line: 2387, column: 23, scope: !2290)
!2305 = !DILocation(line: 2387, column: 28, scope: !2290)
!2306 = !DILocation(line: 2388, column: 9, scope: !2290)
!2307 = !DILocation(line: 2392, column: 17, scope: !2230)
!2308 = !DILocation(line: 2393, column: 12, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2393, column: 11)
!2310 = !DILocation(line: 2393, column: 19, scope: !2309)
!2311 = !DILocation(line: 2393, column: 44, scope: !2309)
!2312 = !DILocation(line: 2393, column: 48, scope: !2309)
!2313 = !DILocation(line: 2393, column: 52, scope: !2309)
!2314 = !DILocation(line: 2393, column: 50, scope: !2309)
!2315 = !DILocation(line: 2393, column: 62, scope: !2309)
!2316 = !DILocation(line: 2394, column: 13, scope: !2309)
!2317 = !DILocation(line: 2394, column: 15, scope: !2309)
!2318 = !DILocation(line: 2394, column: 14, scope: !2309)
!2319 = !DILocation(line: 2394, column: 38, scope: !2309)
!2320 = !DILocation(line: 2394, column: 55, scope: !2309)
!2321 = !DILocation(line: 2394, column: 25, scope: !2309)
!2322 = !DILocation(line: 2393, column: 11, scope: !2230)
!2323 = !DILocation(line: 2396, column: 19, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 2395, column: 9)
!2325 = !DILocation(line: 2396, column: 11, scope: !2324)
!2326 = !DILocation(line: 2402, column: 17, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 2400, column: 13)
!2328 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 2397, column: 11)
!2329 = !DILocation(line: 2402, column: 62, scope: !2327)
!2330 = !DILocation(line: 2402, column: 51, scope: !2327)
!2331 = !DILocation(line: 2402, column: 37, scope: !2327)
!2332 = !DILocation(line: 2401, column: 63, scope: !2327)
!2333 = !DILocation(line: 2401, column: 25, scope: !2327)
!2334 = !DILocation(line: 2401, column: 32, scope: !2327)
!2335 = !DILocation(line: 2403, column: 15, scope: !2327)
!2336 = !DILocation(line: 2408, column: 15, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 2407, column: 13)
!2338 = !DILocation(line: 2409, column: 15, scope: !2337)
!2339 = !DILocation(line: 2420, column: 25, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 2419, column: 13)
!2341 = !DILocation(line: 2420, column: 32, scope: !2340)
!2342 = !DILocation(line: 2421, column: 15, scope: !2340)
!2343 = !DILocation(line: 2425, column: 47, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 2424, column: 13)
!2345 = !DILocation(line: 2425, column: 63, scope: !2344)
!2346 = !DILocation(line: 2425, column: 65, scope: !2344)
!2347 = !DILocation(line: 2425, column: 64, scope: !2344)
!2348 = !DILocation(line: 2426, column: 17, scope: !2344)
!2349 = !DILocation(line: 2426, column: 19, scope: !2344)
!2350 = !DILocation(line: 2426, column: 18, scope: !2344)
!2351 = !DILocation(line: 2426, column: 39, scope: !2344)
!2352 = !DILocation(line: 2425, column: 22, scope: !2344)
!2353 = !DILocation(line: 2427, column: 15, scope: !2344)
!2354 = !DILocation(line: 2430, column: 15, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 2430, column: 15)
!2356 = !DILocation(line: 2430, column: 22, scope: !2355)
!2357 = !DILocation(line: 2430, column: 33, scope: !2355)
!2358 = !DILocation(line: 2430, column: 15, scope: !2324)
!2359 = !DILocation(line: 2432, column: 69, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !1, line: 2431, column: 13)
!2361 = !DILocation(line: 2432, column: 58, scope: !2360)
!2362 = !DILocation(line: 2432, column: 25, scope: !2360)
!2363 = !DILocation(line: 2432, column: 28, scope: !2360)
!2364 = !DILocation(line: 2433, column: 71, scope: !2360)
!2365 = !DILocation(line: 2433, column: 60, scope: !2360)
!2366 = !DILocation(line: 2433, column: 25, scope: !2360)
!2367 = !DILocation(line: 2433, column: 30, scope: !2360)
!2368 = !DILocation(line: 2434, column: 70, scope: !2360)
!2369 = !DILocation(line: 2434, column: 59, scope: !2360)
!2370 = !DILocation(line: 2434, column: 25, scope: !2360)
!2371 = !DILocation(line: 2434, column: 29, scope: !2360)
!2372 = !DILocation(line: 2435, column: 71, scope: !2360)
!2373 = !DILocation(line: 2435, column: 60, scope: !2360)
!2374 = !DILocation(line: 2435, column: 25, scope: !2360)
!2375 = !DILocation(line: 2435, column: 30, scope: !2360)
!2376 = !DILocation(line: 2436, column: 13, scope: !2360)
!2377 = !DILocation(line: 2437, column: 11, scope: !2324)
!2378 = !DILocation(line: 2438, column: 11, scope: !2324)
!2379 = !DILocation(line: 2439, column: 11, scope: !2324)
!2380 = !DILocation(line: 2440, column: 15, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 2440, column: 15)
!2382 = !DILocation(line: 2440, column: 22, scope: !2381)
!2383 = !DILocation(line: 2440, column: 28, scope: !2381)
!2384 = !DILocation(line: 2440, column: 15, scope: !2324)
!2385 = !DILocation(line: 2441, column: 13, scope: !2381)
!2386 = !DILocation(line: 2442, column: 15, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 2442, column: 15)
!2388 = !DILocation(line: 2442, column: 22, scope: !2387)
!2389 = !DILocation(line: 2442, column: 33, scope: !2387)
!2390 = !DILocation(line: 2442, column: 15, scope: !2324)
!2391 = !DILocation(line: 2443, column: 13, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 2443, column: 13)
!2393 = distinct !DILexicalBlock(scope: !2387, file: !1, line: 2443, column: 13)
!2394 = !DILocation(line: 2443, column: 13, scope: !2393)
!2395 = !DILocation(line: 2444, column: 12, scope: !2324)
!2396 = !DILocation(line: 2445, column: 11, scope: !2324)
!2397 = !DILocation(line: 2450, column: 35, scope: !2230)
!2398 = !DILocation(line: 2450, column: 18, scope: !2230)
!2399 = !DILocation(line: 2450, column: 14, scope: !2230)
!2400 = !DILocation(line: 2450, column: 17, scope: !2230)
!2401 = !DILocation(line: 2451, column: 37, scope: !2230)
!2402 = !DILocation(line: 2451, column: 20, scope: !2230)
!2403 = !DILocation(line: 2451, column: 14, scope: !2230)
!2404 = !DILocation(line: 2451, column: 19, scope: !2230)
!2405 = !DILocation(line: 2452, column: 36, scope: !2230)
!2406 = !DILocation(line: 2452, column: 19, scope: !2230)
!2407 = !DILocation(line: 2452, column: 14, scope: !2230)
!2408 = !DILocation(line: 2452, column: 18, scope: !2230)
!2409 = !DILocation(line: 2453, column: 11, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2453, column: 11)
!2411 = !DILocation(line: 2453, column: 28, scope: !2410)
!2412 = !DILocation(line: 2453, column: 34, scope: !2410)
!2413 = !DILocation(line: 2453, column: 11, scope: !2230)
!2414 = !DILocation(line: 2454, column: 41, scope: !2410)
!2415 = !DILocation(line: 2454, column: 24, scope: !2410)
!2416 = !DILocation(line: 2454, column: 16, scope: !2410)
!2417 = !DILocation(line: 2454, column: 23, scope: !2410)
!2418 = !DILocation(line: 2454, column: 9, scope: !2410)
!2419 = !DILocation(line: 2455, column: 11, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2455, column: 11)
!2421 = !DILocation(line: 2455, column: 28, scope: !2420)
!2422 = !DILocation(line: 2455, column: 39, scope: !2420)
!2423 = !DILocation(line: 2455, column: 11, scope: !2230)
!2424 = !DILocation(line: 2456, column: 39, scope: !2420)
!2425 = !DILocation(line: 2456, column: 22, scope: !2420)
!2426 = !DILocation(line: 2456, column: 16, scope: !2420)
!2427 = !DILocation(line: 2456, column: 21, scope: !2420)
!2428 = !DILocation(line: 2456, column: 9, scope: !2420)
!2429 = !DILocation(line: 2458, column: 11, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2458, column: 11)
!2431 = !DILocation(line: 2458, column: 28, scope: !2430)
!2432 = !DILocation(line: 2458, column: 39, scope: !2430)
!2433 = !DILocation(line: 2458, column: 11, scope: !2230)
!2434 = !DILocation(line: 2460, column: 59, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 2459, column: 9)
!2436 = !DILocation(line: 2460, column: 51, scope: !2435)
!2437 = !DILocation(line: 2460, column: 18, scope: !2435)
!2438 = !DILocation(line: 2460, column: 21, scope: !2435)
!2439 = !DILocation(line: 2461, column: 61, scope: !2435)
!2440 = !DILocation(line: 2461, column: 53, scope: !2435)
!2441 = !DILocation(line: 2461, column: 18, scope: !2435)
!2442 = !DILocation(line: 2461, column: 23, scope: !2435)
!2443 = !DILocation(line: 2462, column: 60, scope: !2435)
!2444 = !DILocation(line: 2462, column: 52, scope: !2435)
!2445 = !DILocation(line: 2462, column: 18, scope: !2435)
!2446 = !DILocation(line: 2462, column: 22, scope: !2435)
!2447 = !DILocation(line: 2463, column: 61, scope: !2435)
!2448 = !DILocation(line: 2463, column: 53, scope: !2435)
!2449 = !DILocation(line: 2463, column: 18, scope: !2435)
!2450 = !DILocation(line: 2463, column: 23, scope: !2435)
!2451 = !DILocation(line: 2464, column: 9, scope: !2435)
!2452 = !DILocation(line: 2465, column: 15, scope: !2230)
!2453 = !DILocation(line: 2465, column: 7, scope: !2230)
!2454 = !DILocation(line: 2470, column: 11, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2469, column: 9)
!2456 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2466, column: 7)
!2457 = !DILocation(line: 2471, column: 11, scope: !2455)
!2458 = !DILocation(line: 2477, column: 21, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2476, column: 9)
!2460 = !DILocation(line: 2478, column: 11, scope: !2459)
!2461 = !DILocation(line: 2482, column: 11, scope: !2456)
!2462 = !DILocation(line: 2486, column: 51, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2485, column: 9)
!2464 = !DILocation(line: 2487, column: 25, scope: !2463)
!2465 = !DILocation(line: 2486, column: 11, scope: !2463)
!2466 = !DILocation(line: 2488, column: 11, scope: !2463)
!2467 = !DILocation(line: 2492, column: 61, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2491, column: 9)
!2469 = !DILocation(line: 2493, column: 20, scope: !2468)
!2470 = !DILocation(line: 2492, column: 11, scope: !2468)
!2471 = !DILocation(line: 2494, column: 11, scope: !2468)
!2472 = !DILocation(line: 2499, column: 11, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2498, column: 9)
!2474 = !DILocation(line: 2500, column: 11, scope: !2473)
!2475 = !DILocation(line: 2504, column: 11, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2503, column: 9)
!2477 = !DILocation(line: 2505, column: 11, scope: !2476)
!2478 = !DILocation(line: 2510, column: 11, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2509, column: 9)
!2480 = !DILocation(line: 2511, column: 11, scope: !2479)
!2481 = !DILocation(line: 2515, column: 11, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2514, column: 9)
!2483 = !DILocation(line: 2516, column: 11, scope: !2482)
!2484 = !DILocation(line: 2521, column: 11, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2520, column: 9)
!2486 = !DILocation(line: 2522, column: 11, scope: !2485)
!2487 = !DILocation(line: 2526, column: 11, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2525, column: 9)
!2489 = !DILocation(line: 2527, column: 11, scope: !2488)
!2490 = !DILocation(line: 2531, column: 11, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2530, column: 9)
!2492 = !DILocation(line: 2532, column: 11, scope: !2491)
!2493 = !DILocation(line: 2537, column: 46, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2536, column: 9)
!2495 = !DILocation(line: 2537, column: 11, scope: !2494)
!2496 = !DILocation(line: 2538, column: 11, scope: !2494)
!2497 = !DILocation(line: 2542, column: 47, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2541, column: 9)
!2499 = !DILocation(line: 2542, column: 11, scope: !2498)
!2500 = !DILocation(line: 2543, column: 11, scope: !2498)
!2501 = !DILocation(line: 2547, column: 47, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2546, column: 9)
!2503 = !DILocation(line: 2547, column: 11, scope: !2502)
!2504 = !DILocation(line: 2548, column: 11, scope: !2502)
!2505 = !DILocation(line: 2552, column: 52, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2551, column: 9)
!2507 = !DILocation(line: 2552, column: 11, scope: !2506)
!2508 = !DILocation(line: 2553, column: 11, scope: !2506)
!2509 = !DILocation(line: 2557, column: 57, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2556, column: 9)
!2511 = !DILocation(line: 2557, column: 11, scope: !2510)
!2512 = !DILocation(line: 2558, column: 11, scope: !2510)
!2513 = !DILocation(line: 2562, column: 52, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2561, column: 9)
!2515 = !DILocation(line: 2562, column: 11, scope: !2514)
!2516 = !DILocation(line: 2563, column: 11, scope: !2514)
!2517 = !DILocation(line: 2567, column: 51, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2566, column: 9)
!2519 = !DILocation(line: 2567, column: 11, scope: !2518)
!2520 = !DILocation(line: 2568, column: 11, scope: !2518)
!2521 = !DILocation(line: 2572, column: 50, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2571, column: 9)
!2523 = !DILocation(line: 2572, column: 11, scope: !2522)
!2524 = !DILocation(line: 2573, column: 11, scope: !2522)
!2525 = !DILocation(line: 2577, column: 48, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2576, column: 9)
!2527 = !DILocation(line: 2577, column: 11, scope: !2526)
!2528 = !DILocation(line: 2578, column: 11, scope: !2526)
!2529 = !DILocation(line: 2582, column: 48, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2581, column: 9)
!2531 = !DILocation(line: 2582, column: 11, scope: !2530)
!2532 = !DILocation(line: 2583, column: 11, scope: !2530)
!2533 = !DILocation(line: 2587, column: 48, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2586, column: 9)
!2535 = !DILocation(line: 2587, column: 11, scope: !2534)
!2536 = !DILocation(line: 2588, column: 11, scope: !2534)
!2537 = !DILocation(line: 2592, column: 48, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2591, column: 9)
!2539 = !DILocation(line: 2592, column: 11, scope: !2538)
!2540 = !DILocation(line: 2593, column: 11, scope: !2538)
!2541 = !DILocation(line: 2597, column: 49, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2596, column: 9)
!2543 = !DILocation(line: 2597, column: 11, scope: !2542)
!2544 = !DILocation(line: 2598, column: 11, scope: !2542)
!2545 = !DILocation(line: 2602, column: 57, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2601, column: 9)
!2547 = !DILocation(line: 2602, column: 11, scope: !2546)
!2548 = !DILocation(line: 2603, column: 11, scope: !2546)
!2549 = !DILocation(line: 2607, column: 58, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2606, column: 9)
!2551 = !DILocation(line: 2607, column: 11, scope: !2550)
!2552 = !DILocation(line: 2608, column: 11, scope: !2550)
!2553 = !DILocation(line: 2612, column: 53, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2611, column: 9)
!2555 = !DILocation(line: 2612, column: 11, scope: !2554)
!2556 = !DILocation(line: 2614, column: 11, scope: !2554)
!2557 = !DILocation(line: 2619, column: 11, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2618, column: 9)
!2559 = !DILocation(line: 2620, column: 11, scope: !2558)
!2560 = !DILocation(line: 2624, column: 11, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2623, column: 9)
!2562 = !DILocation(line: 2625, column: 11, scope: !2561)
!2563 = !DILocation(line: 2629, column: 11, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2628, column: 9)
!2565 = !DILocation(line: 2630, column: 11, scope: !2564)
!2566 = !DILocation(line: 2634, column: 11, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2633, column: 9)
!2568 = !DILocation(line: 2635, column: 11, scope: !2567)
!2569 = !DILocation(line: 2639, column: 11, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2638, column: 9)
!2571 = !DILocation(line: 2640, column: 11, scope: !2570)
!2572 = !DILocation(line: 2645, column: 11, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2643, column: 9)
!2574 = !DILocation(line: 2646, column: 11, scope: !2573)
!2575 = !DILocation(line: 2650, column: 11, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2649, column: 9)
!2577 = !DILocation(line: 2651, column: 11, scope: !2576)
!2578 = !DILocation(line: 2655, column: 11, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2654, column: 9)
!2580 = !DILocation(line: 2656, column: 11, scope: !2579)
!2581 = !DILocation(line: 2660, column: 11, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2659, column: 9)
!2583 = !DILocation(line: 2661, column: 11, scope: !2582)
!2584 = !DILocation(line: 2665, column: 11, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2664, column: 9)
!2586 = !DILocation(line: 2666, column: 11, scope: !2585)
!2587 = !DILocation(line: 2670, column: 11, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2669, column: 9)
!2589 = !DILocation(line: 2671, column: 11, scope: !2588)
!2590 = !DILocation(line: 2676, column: 26, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !1, line: 2676, column: 15)
!2592 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2675, column: 9)
!2593 = !DILocation(line: 2676, column: 16, scope: !2591)
!2594 = !DILocation(line: 2676, column: 34, scope: !2591)
!2595 = !DILocation(line: 2676, column: 73, scope: !2591)
!2596 = !DILocation(line: 2677, column: 16, scope: !2591)
!2597 = !DILocation(line: 2677, column: 59, scope: !2591)
!2598 = !DILocation(line: 2676, column: 15, scope: !2592)
!2599 = !DILocation(line: 2678, column: 23, scope: !2591)
!2600 = !DILocation(line: 2678, column: 30, scope: !2591)
!2601 = !DILocation(line: 2678, column: 13, scope: !2591)
!2602 = !DILocation(line: 2680, column: 23, scope: !2591)
!2603 = !DILocation(line: 2680, column: 30, scope: !2591)
!2604 = !DILocation(line: 2681, column: 11, scope: !2592)
!2605 = !DILocation(line: 2685, column: 22, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2607, file: !1, line: 2685, column: 15)
!2607 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2684, column: 9)
!2608 = !DILocation(line: 2685, column: 30, scope: !2606)
!2609 = !DILocation(line: 2685, column: 15, scope: !2607)
!2610 = !DILocation(line: 2686, column: 13, scope: !2606)
!2611 = !DILocation(line: 2687, column: 11, scope: !2607)
!2612 = !DILocation(line: 2688, column: 11, scope: !2607)
!2613 = !DILocation(line: 2693, column: 13, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2691, column: 9)
!2615 = !DILocation(line: 2693, column: 50, scope: !2614)
!2616 = !DILocation(line: 2693, column: 42, scope: !2614)
!2617 = !DILocation(line: 2693, column: 28, scope: !2614)
!2618 = !DILocation(line: 2692, column: 74, scope: !2614)
!2619 = !DILocation(line: 2694, column: 44, scope: !2614)
!2620 = !DILocation(line: 2695, column: 25, scope: !2614)
!2621 = !DILocation(line: 2694, column: 78, scope: !2614)
!2622 = !DILocation(line: 2694, column: 64, scope: !2614)
!2623 = !DILocation(line: 2694, column: 43, scope: !2614)
!2624 = !DILocation(line: 2692, column: 11, scope: !2614)
!2625 = !DILocation(line: 2696, column: 11, scope: !2614)
!2626 = !DILocation(line: 2700, column: 45, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2699, column: 9)
!2628 = !DILocation(line: 2701, column: 13, scope: !2627)
!2629 = !DILocation(line: 2700, column: 11, scope: !2627)
!2630 = !DILocation(line: 2702, column: 11, scope: !2627)
!2631 = !DILocation(line: 2706, column: 51, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2705, column: 9)
!2633 = !DILocation(line: 2706, column: 61, scope: !2632)
!2634 = !DILocation(line: 2706, column: 11, scope: !2632)
!2635 = !DILocation(line: 2707, column: 11, scope: !2632)
!2636 = !DILocalVariable(name: "offset", scope: !2637, file: !1, line: 2712, type: !546)
!2637 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2710, column: 9)
!2638 = !DILocation(line: 2712, column: 13, scope: !2637)
!2639 = !DILocation(line: 2714, column: 22, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2637, file: !1, line: 2714, column: 15)
!2641 = !DILocation(line: 2714, column: 30, scope: !2640)
!2642 = !DILocation(line: 2714, column: 15, scope: !2637)
!2643 = !DILocation(line: 2715, column: 13, scope: !2640)
!2644 = !DILocation(line: 2716, column: 29, scope: !2637)
!2645 = !DILocation(line: 2716, column: 68, scope: !2637)
!2646 = !DILocation(line: 2716, column: 67, scope: !2637)
!2647 = !DILocation(line: 2716, column: 18, scope: !2637)
!2648 = !DILocation(line: 2716, column: 17, scope: !2637)
!2649 = !DILocation(line: 2717, column: 15, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2637, file: !1, line: 2717, column: 15)
!2651 = !DILocation(line: 2717, column: 22, scope: !2650)
!2652 = !DILocation(line: 2717, column: 15, scope: !2637)
!2653 = !DILocation(line: 2718, column: 13, scope: !2650)
!2654 = !DILocation(line: 2719, column: 36, scope: !2637)
!2655 = !DILocation(line: 2719, column: 52, scope: !2637)
!2656 = !DILocation(line: 2719, column: 70, scope: !2637)
!2657 = !DILocation(line: 2719, column: 11, scope: !2637)
!2658 = !DILocation(line: 2721, column: 23, scope: !2637)
!2659 = !DILocation(line: 2721, column: 22, scope: !2637)
!2660 = !DILocation(line: 2721, column: 36, scope: !2637)
!2661 = !DILocation(line: 2721, column: 35, scope: !2637)
!2662 = !DILocation(line: 2721, column: 44, scope: !2637)
!2663 = !DILocation(line: 2721, column: 43, scope: !2637)
!2664 = !DILocation(line: 2721, column: 15, scope: !2637)
!2665 = !DILocation(line: 2722, column: 24, scope: !2637)
!2666 = !DILocation(line: 2722, column: 23, scope: !2637)
!2667 = !DILocation(line: 2722, column: 17, scope: !2637)
!2668 = !DILocation(line: 2723, column: 24, scope: !2637)
!2669 = !DILocation(line: 2723, column: 28, scope: !2637)
!2670 = !DILocation(line: 2723, column: 35, scope: !2637)
!2671 = !DILocation(line: 2723, column: 51, scope: !2637)
!2672 = !DILocation(line: 2724, column: 24, scope: !2637)
!2673 = !DILocation(line: 2724, column: 41, scope: !2637)
!2674 = !DILocation(line: 2723, column: 11, scope: !2637)
!2675 = !DILocation(line: 2725, column: 11, scope: !2637)
!2676 = !DILocation(line: 2729, column: 22, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 2729, column: 15)
!2678 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2728, column: 9)
!2679 = !DILocation(line: 2729, column: 30, scope: !2677)
!2680 = !DILocation(line: 2729, column: 15, scope: !2678)
!2681 = !DILocation(line: 2730, column: 13, scope: !2677)
!2682 = !DILocation(line: 2731, column: 27, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 2731, column: 15)
!2684 = !DILocation(line: 2731, column: 35, scope: !2683)
!2685 = !DILocation(line: 2731, column: 15, scope: !2678)
!2686 = !DILocation(line: 2733, column: 25, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 2732, column: 13)
!2688 = !DILocation(line: 2734, column: 15, scope: !2687)
!2689 = !DILocation(line: 2736, column: 36, scope: !2678)
!2690 = !DILocation(line: 2736, column: 52, scope: !2678)
!2691 = !DILocation(line: 2736, column: 70, scope: !2678)
!2692 = !DILocation(line: 2736, column: 11, scope: !2678)
!2693 = !DILocation(line: 2738, column: 31, scope: !2678)
!2694 = !DILocation(line: 2738, column: 42, scope: !2678)
!2695 = !DILocation(line: 2738, column: 55, scope: !2678)
!2696 = !DILocation(line: 2738, column: 11, scope: !2678)
!2697 = !DILocation(line: 2739, column: 24, scope: !2678)
!2698 = !DILocation(line: 2739, column: 28, scope: !2678)
!2699 = !DILocation(line: 2739, column: 35, scope: !2678)
!2700 = !DILocation(line: 2739, column: 51, scope: !2678)
!2701 = !DILocation(line: 2740, column: 24, scope: !2678)
!2702 = !DILocation(line: 2740, column: 41, scope: !2678)
!2703 = !DILocation(line: 2739, column: 11, scope: !2678)
!2704 = !DILocation(line: 2741, column: 22, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 2741, column: 15)
!2706 = !DILocation(line: 2741, column: 44, scope: !2705)
!2707 = !DILocation(line: 2741, column: 30, scope: !2705)
!2708 = !DILocation(line: 2741, column: 15, scope: !2678)
!2709 = !DILocation(line: 2742, column: 38, scope: !2705)
!2710 = !DILocation(line: 2742, column: 23, scope: !2705)
!2711 = !DILocation(line: 2742, column: 30, scope: !2705)
!2712 = !DILocation(line: 2742, column: 13, scope: !2705)
!2713 = !DILocation(line: 2743, column: 11, scope: !2678)
!2714 = !DILocation(line: 2747, column: 22, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 2747, column: 15)
!2716 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2746, column: 9)
!2717 = !DILocation(line: 2747, column: 30, scope: !2715)
!2718 = !DILocation(line: 2747, column: 15, scope: !2716)
!2719 = !DILocation(line: 2748, column: 13, scope: !2715)
!2720 = !DILocation(line: 2749, column: 27, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 2749, column: 15)
!2722 = !DILocation(line: 2749, column: 35, scope: !2721)
!2723 = !DILocation(line: 2749, column: 15, scope: !2716)
!2724 = !DILocation(line: 2751, column: 25, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 2750, column: 13)
!2726 = !DILocation(line: 2752, column: 15, scope: !2725)
!2727 = !DILocation(line: 2754, column: 36, scope: !2716)
!2728 = !DILocation(line: 2754, column: 52, scope: !2716)
!2729 = !DILocation(line: 2754, column: 70, scope: !2716)
!2730 = !DILocation(line: 2754, column: 11, scope: !2716)
!2731 = !DILocation(line: 2756, column: 31, scope: !2716)
!2732 = !DILocation(line: 2756, column: 42, scope: !2716)
!2733 = !DILocation(line: 2756, column: 55, scope: !2716)
!2734 = !DILocation(line: 2756, column: 11, scope: !2716)
!2735 = !DILocation(line: 2758, column: 24, scope: !2716)
!2736 = !DILocation(line: 2758, column: 28, scope: !2716)
!2737 = !DILocation(line: 2758, column: 35, scope: !2716)
!2738 = !DILocation(line: 2758, column: 51, scope: !2716)
!2739 = !DILocation(line: 2759, column: 24, scope: !2716)
!2740 = !DILocation(line: 2759, column: 41, scope: !2716)
!2741 = !DILocation(line: 2758, column: 11, scope: !2716)
!2742 = !DILocation(line: 2760, column: 22, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 2760, column: 15)
!2744 = !DILocation(line: 2760, column: 44, scope: !2743)
!2745 = !DILocation(line: 2760, column: 30, scope: !2743)
!2746 = !DILocation(line: 2760, column: 15, scope: !2716)
!2747 = !DILocation(line: 2761, column: 38, scope: !2743)
!2748 = !DILocation(line: 2761, column: 23, scope: !2743)
!2749 = !DILocation(line: 2761, column: 30, scope: !2743)
!2750 = !DILocation(line: 2761, column: 13, scope: !2743)
!2751 = !DILocation(line: 2762, column: 11, scope: !2716)
!2752 = !DILocation(line: 2766, column: 22, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2754, file: !1, line: 2766, column: 15)
!2754 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2765, column: 9)
!2755 = !DILocation(line: 2766, column: 30, scope: !2753)
!2756 = !DILocation(line: 2766, column: 15, scope: !2754)
!2757 = !DILocation(line: 2767, column: 13, scope: !2753)
!2758 = !DILocation(line: 2768, column: 27, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2754, file: !1, line: 2768, column: 15)
!2760 = !DILocation(line: 2768, column: 35, scope: !2759)
!2761 = !DILocation(line: 2768, column: 15, scope: !2754)
!2762 = !DILocation(line: 2770, column: 25, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2759, file: !1, line: 2769, column: 13)
!2764 = !DILocation(line: 2771, column: 15, scope: !2763)
!2765 = !DILocation(line: 2773, column: 36, scope: !2754)
!2766 = !DILocation(line: 2773, column: 52, scope: !2754)
!2767 = !DILocation(line: 2773, column: 70, scope: !2754)
!2768 = !DILocation(line: 2773, column: 11, scope: !2754)
!2769 = !DILocation(line: 2775, column: 31, scope: !2754)
!2770 = !DILocation(line: 2775, column: 42, scope: !2754)
!2771 = !DILocation(line: 2775, column: 55, scope: !2754)
!2772 = !DILocation(line: 2775, column: 11, scope: !2754)
!2773 = !DILocation(line: 2777, column: 24, scope: !2754)
!2774 = !DILocation(line: 2777, column: 28, scope: !2754)
!2775 = !DILocation(line: 2777, column: 35, scope: !2754)
!2776 = !DILocation(line: 2777, column: 51, scope: !2754)
!2777 = !DILocation(line: 2778, column: 24, scope: !2754)
!2778 = !DILocation(line: 2778, column: 41, scope: !2754)
!2779 = !DILocation(line: 2777, column: 11, scope: !2754)
!2780 = !DILocation(line: 2779, column: 22, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2754, file: !1, line: 2779, column: 15)
!2782 = !DILocation(line: 2779, column: 44, scope: !2781)
!2783 = !DILocation(line: 2779, column: 30, scope: !2781)
!2784 = !DILocation(line: 2779, column: 15, scope: !2754)
!2785 = !DILocation(line: 2780, column: 38, scope: !2781)
!2786 = !DILocation(line: 2780, column: 23, scope: !2781)
!2787 = !DILocation(line: 2780, column: 30, scope: !2781)
!2788 = !DILocation(line: 2780, column: 13, scope: !2781)
!2789 = !DILocation(line: 2781, column: 11, scope: !2754)
!2790 = !DILocation(line: 2785, column: 22, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !1, line: 2785, column: 15)
!2792 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2784, column: 9)
!2793 = !DILocation(line: 2785, column: 30, scope: !2791)
!2794 = !DILocation(line: 2785, column: 15, scope: !2792)
!2795 = !DILocation(line: 2786, column: 13, scope: !2791)
!2796 = !DILocation(line: 2787, column: 27, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2792, file: !1, line: 2787, column: 15)
!2798 = !DILocation(line: 2787, column: 35, scope: !2797)
!2799 = !DILocation(line: 2787, column: 15, scope: !2792)
!2800 = !DILocation(line: 2789, column: 25, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 2788, column: 13)
!2802 = !DILocation(line: 2790, column: 15, scope: !2801)
!2803 = !DILocation(line: 2792, column: 36, scope: !2792)
!2804 = !DILocation(line: 2792, column: 52, scope: !2792)
!2805 = !DILocation(line: 2792, column: 70, scope: !2792)
!2806 = !DILocation(line: 2792, column: 11, scope: !2792)
!2807 = !DILocation(line: 2794, column: 31, scope: !2792)
!2808 = !DILocation(line: 2794, column: 42, scope: !2792)
!2809 = !DILocation(line: 2794, column: 55, scope: !2792)
!2810 = !DILocation(line: 2794, column: 11, scope: !2792)
!2811 = !DILocation(line: 2796, column: 24, scope: !2792)
!2812 = !DILocation(line: 2796, column: 28, scope: !2792)
!2813 = !DILocation(line: 2796, column: 35, scope: !2792)
!2814 = !DILocation(line: 2796, column: 51, scope: !2792)
!2815 = !DILocation(line: 2797, column: 24, scope: !2792)
!2816 = !DILocation(line: 2797, column: 41, scope: !2792)
!2817 = !DILocation(line: 2796, column: 11, scope: !2792)
!2818 = !DILocation(line: 2798, column: 22, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2792, file: !1, line: 2798, column: 15)
!2820 = !DILocation(line: 2798, column: 44, scope: !2819)
!2821 = !DILocation(line: 2798, column: 30, scope: !2819)
!2822 = !DILocation(line: 2798, column: 15, scope: !2792)
!2823 = !DILocation(line: 2799, column: 38, scope: !2819)
!2824 = !DILocation(line: 2799, column: 23, scope: !2819)
!2825 = !DILocation(line: 2799, column: 30, scope: !2819)
!2826 = !DILocation(line: 2799, column: 13, scope: !2819)
!2827 = !DILocation(line: 2800, column: 11, scope: !2792)
!2828 = !DILocation(line: 2805, column: 32, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2804, column: 9)
!2830 = !DILocation(line: 2805, column: 21, scope: !2829)
!2831 = !DILocation(line: 2805, column: 24, scope: !2829)
!2832 = !DILocation(line: 2806, column: 11, scope: !2829)
!2833 = !DILocation(line: 2811, column: 34, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2810, column: 9)
!2835 = !DILocation(line: 2811, column: 21, scope: !2834)
!2836 = !DILocation(line: 2811, column: 26, scope: !2834)
!2837 = !DILocation(line: 2812, column: 11, scope: !2834)
!2838 = !DILocation(line: 2817, column: 33, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2816, column: 9)
!2840 = !DILocation(line: 2817, column: 21, scope: !2839)
!2841 = !DILocation(line: 2817, column: 25, scope: !2839)
!2842 = !DILocation(line: 2818, column: 11, scope: !2839)
!2843 = !DILocation(line: 2822, column: 22, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !1, line: 2822, column: 15)
!2845 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2821, column: 9)
!2846 = !DILocation(line: 2822, column: 28, scope: !2844)
!2847 = !DILocation(line: 2822, column: 15, scope: !2845)
!2848 = !DILocation(line: 2825, column: 17, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2844, file: !1, line: 2823, column: 13)
!2850 = !DILocation(line: 2824, column: 63, scope: !2849)
!2851 = !DILocation(line: 2824, column: 33, scope: !2849)
!2852 = !DILocation(line: 2824, column: 25, scope: !2849)
!2853 = !DILocation(line: 2824, column: 32, scope: !2849)
!2854 = !DILocation(line: 2826, column: 15, scope: !2849)
!2855 = !DILocation(line: 2828, column: 36, scope: !2845)
!2856 = !DILocation(line: 2828, column: 21, scope: !2845)
!2857 = !DILocation(line: 2828, column: 28, scope: !2845)
!2858 = !DILocation(line: 2829, column: 11, scope: !2845)
!2859 = !DILocation(line: 2833, column: 22, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 2833, column: 15)
!2861 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2832, column: 9)
!2862 = !DILocation(line: 2833, column: 33, scope: !2860)
!2863 = !DILocation(line: 2833, column: 15, scope: !2861)
!2864 = !DILocation(line: 2834, column: 13, scope: !2860)
!2865 = !DILocation(line: 2835, column: 47, scope: !2861)
!2866 = !DILocation(line: 2835, column: 39, scope: !2861)
!2867 = !DILocation(line: 2835, column: 21, scope: !2861)
!2868 = !DILocation(line: 2835, column: 26, scope: !2861)
!2869 = !DILocation(line: 2836, column: 11, scope: !2861)
!2870 = !DILocation(line: 2843, column: 21, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 2842, column: 9)
!2872 = !DILocation(line: 2844, column: 11, scope: !2871)
!2873 = !DILocation(line: 2847, column: 11, scope: !2456)
!2874 = !DILocation(line: 2849, column: 11, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2849, column: 11)
!2876 = !DILocation(line: 2849, column: 18, scope: !2875)
!2877 = !DILocation(line: 2849, column: 29, scope: !2875)
!2878 = !DILocation(line: 2849, column: 11, scope: !2230)
!2879 = !DILocation(line: 2851, column: 65, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2875, file: !1, line: 2850, column: 9)
!2881 = !DILocation(line: 2851, column: 54, scope: !2880)
!2882 = !DILocation(line: 2851, column: 21, scope: !2880)
!2883 = !DILocation(line: 2851, column: 24, scope: !2880)
!2884 = !DILocation(line: 2852, column: 67, scope: !2880)
!2885 = !DILocation(line: 2852, column: 56, scope: !2880)
!2886 = !DILocation(line: 2852, column: 21, scope: !2880)
!2887 = !DILocation(line: 2852, column: 26, scope: !2880)
!2888 = !DILocation(line: 2853, column: 66, scope: !2880)
!2889 = !DILocation(line: 2853, column: 55, scope: !2880)
!2890 = !DILocation(line: 2853, column: 21, scope: !2880)
!2891 = !DILocation(line: 2853, column: 25, scope: !2880)
!2892 = !DILocation(line: 2854, column: 67, scope: !2880)
!2893 = !DILocation(line: 2854, column: 56, scope: !2880)
!2894 = !DILocation(line: 2854, column: 21, scope: !2880)
!2895 = !DILocation(line: 2854, column: 26, scope: !2880)
!2896 = !DILocation(line: 2855, column: 9, scope: !2880)
!2897 = !DILocation(line: 2856, column: 7, scope: !2230)
!2898 = !DILocation(line: 2857, column: 7, scope: !2230)
!2899 = !DILocation(line: 2858, column: 7, scope: !2230)
!2900 = !DILocation(line: 2859, column: 7, scope: !2230)
!2901 = !DILocation(line: 2860, column: 11, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2860, column: 11)
!2903 = !DILocation(line: 2860, column: 18, scope: !2902)
!2904 = !DILocation(line: 2860, column: 29, scope: !2902)
!2905 = !DILocation(line: 2860, column: 11, scope: !2230)
!2906 = !DILocation(line: 2861, column: 9, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !1, line: 2861, column: 9)
!2908 = distinct !DILexicalBlock(scope: !2902, file: !1, line: 2861, column: 9)
!2909 = !DILocation(line: 2861, column: 9, scope: !2908)
!2910 = !DILocation(line: 2862, column: 8, scope: !2230)
!2911 = !DILocation(line: 2863, column: 11, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2230, file: !1, line: 2863, column: 11)
!2913 = !DILocation(line: 2863, column: 17, scope: !2912)
!2914 = !DILocation(line: 2863, column: 24, scope: !2912)
!2915 = !DILocation(line: 2863, column: 41, scope: !2912)
!2916 = !DILocation(line: 2863, column: 23, scope: !2912)
!2917 = !DILocation(line: 2863, column: 13, scope: !2912)
!2918 = !DILocation(line: 2863, column: 11, scope: !2230)
!2919 = !DILocation(line: 2864, column: 11, scope: !2912)
!2920 = !DILocation(line: 2864, column: 10, scope: !2912)
!2921 = !DILocation(line: 2864, column: 9, scope: !2912)
!2922 = !DILocation(line: 2865, column: 8, scope: !2230)
!2923 = !DILocation(line: 2866, column: 5, scope: !2230)
!2924 = !DILocation(line: 2363, column: 46, scope: !2223)
!2925 = !DILocation(line: 2363, column: 5, scope: !2223)
!2926 = distinct !{!2926, !2227, !2927}
!2927 = !DILocation(line: 2866, column: 5, scope: !2220)
!2928 = !DILocation(line: 2867, column: 38, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2867, column: 9)
!2930 = !DILocation(line: 2867, column: 49, scope: !2929)
!2931 = !DILocation(line: 2867, column: 9, scope: !2929)
!2932 = !DILocation(line: 2867, column: 60, scope: !2929)
!2933 = !DILocation(line: 2867, column: 9, scope: !2098)
!2934 = !DILocation(line: 2868, column: 13, scope: !2929)
!2935 = !DILocation(line: 2868, column: 7, scope: !2929)
!2936 = !DILocation(line: 2869, column: 9, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 2869, column: 9)
!2938 = !DILocation(line: 2869, column: 16, scope: !2937)
!2939 = !DILocation(line: 2869, column: 33, scope: !2937)
!2940 = !DILocation(line: 2869, column: 9, scope: !2098)
!2941 = !DILocalVariable(name: "proceed", scope: !2942, file: !1, line: 2872, type: !498)
!2942 = distinct !DILexicalBlock(scope: !2937, file: !1, line: 2870, column: 7)
!2943 = !DILocation(line: 2872, column: 11, scope: !2942)
!2944 = !DILocation(line: 2877, column: 34, scope: !2942)
!2945 = !DILocation(line: 2877, column: 66, scope: !2942)
!2946 = !DILocation(line: 2878, column: 11, scope: !2942)
!2947 = !DILocation(line: 2878, column: 18, scope: !2942)
!2948 = !DILocation(line: 2877, column: 17, scope: !2942)
!2949 = !DILocation(line: 2877, column: 16, scope: !2942)
!2950 = !DILocation(line: 2879, column: 13, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2942, file: !1, line: 2879, column: 13)
!2952 = !DILocation(line: 2879, column: 21, scope: !2951)
!2953 = !DILocation(line: 2879, column: 13, scope: !2942)
!2954 = !DILocation(line: 2880, column: 17, scope: !2951)
!2955 = !DILocation(line: 2880, column: 11, scope: !2951)
!2956 = !DILocation(line: 2881, column: 7, scope: !2942)
!2957 = !DILocation(line: 2882, column: 3, scope: !2098)
!2958 = !DILocation(line: 2292, column: 41, scope: !2092)
!2959 = !DILocation(line: 2292, column: 3, scope: !2092)
!2960 = distinct !{!2960, !2096, !2961}
!2961 = !DILocation(line: 2882, column: 3, scope: !2089)
!2962 = !DILocation(line: 2883, column: 35, scope: !743)
!2963 = !DILocation(line: 2883, column: 18, scope: !743)
!2964 = !DILocation(line: 2883, column: 17, scope: !743)
!2965 = !DILocation(line: 2884, column: 31, scope: !743)
!2966 = !DILocation(line: 2884, column: 14, scope: !743)
!2967 = !DILocation(line: 2884, column: 13, scope: !743)
!2968 = !DILocation(line: 2885, column: 7, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !743, file: !1, line: 2885, column: 7)
!2970 = !DILocation(line: 2885, column: 25, scope: !2969)
!2971 = !DILocation(line: 2885, column: 7, scope: !743)
!2972 = !DILocation(line: 2886, column: 36, scope: !2969)
!2973 = !DILocation(line: 2886, column: 23, scope: !2969)
!2974 = !DILocation(line: 2886, column: 22, scope: !2969)
!2975 = !DILocation(line: 2886, column: 5, scope: !2969)
!2976 = !DILocation(line: 2888, column: 34, scope: !2969)
!2977 = !DILocation(line: 2888, column: 21, scope: !2969)
!2978 = !DILocation(line: 2888, column: 20, scope: !2969)
!2979 = !DILocation(line: 2889, column: 10, scope: !743)
!2980 = !DILocation(line: 2889, column: 3, scope: !743)
!2981 = !DILocation(line: 2890, column: 1, scope: !743)
!2982 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !2983, file: !2983, line: 85, type: !2984, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!2983 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2984 = !DISubroutineType(types: !2985)
!2985 = !{!498, !2986}
!2986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!2987 = !DILocalVariable(name: "colorspace", arg: 1, scope: !2982, file: !2983, line: 86, type: !2986)
!2988 = !DILocation(line: 86, column: 24, scope: !2982)
!2989 = !DILocation(line: 88, column: 8, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2982, file: !2983, line: 88, column: 7)
!2991 = !DILocation(line: 88, column: 19, scope: !2990)
!2992 = !DILocation(line: 88, column: 38, scope: !2990)
!2993 = !DILocation(line: 88, column: 42, scope: !2990)
!2994 = !DILocation(line: 88, column: 53, scope: !2990)
!2995 = !DILocation(line: 88, column: 78, scope: !2990)
!2996 = !DILocation(line: 89, column: 8, scope: !2990)
!2997 = !DILocation(line: 89, column: 19, scope: !2990)
!2998 = !DILocation(line: 88, column: 7, scope: !2982)
!2999 = !DILocation(line: 90, column: 5, scope: !2990)
!3000 = !DILocation(line: 91, column: 3, scope: !2982)
!3001 = !DILocation(line: 92, column: 1, scope: !2982)
!3002 = distinct !DISubprogram(name: "SetImageProgress", scope: !3003, file: !3003, line: 27, type: !3004, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3003 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!498, !481, !615, !617, !620}
!3006 = !DILocalVariable(name: "image", arg: 1, scope: !3002, file: !3003, line: 27, type: !481)
!3007 = !DILocation(line: 27, column: 63, scope: !3002)
!3008 = !DILocalVariable(name: "tag", arg: 2, scope: !3002, file: !3003, line: 28, type: !615)
!3009 = !DILocation(line: 28, column: 15, scope: !3002)
!3010 = !DILocalVariable(name: "offset", arg: 3, scope: !3002, file: !3003, line: 28, type: !617)
!3011 = !DILocation(line: 28, column: 42, scope: !3002)
!3012 = !DILocalVariable(name: "extent", arg: 4, scope: !3002, file: !3003, line: 28, type: !620)
!3013 = !DILocation(line: 28, column: 70, scope: !3002)
!3014 = !DILocalVariable(name: "message", scope: !3002, file: !3003, line: 31, type: !635)
!3015 = !DILocation(line: 31, column: 5, scope: !3002)
!3016 = !DILocation(line: 33, column: 7, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3002, file: !3003, line: 33, column: 7)
!3018 = !DILocation(line: 33, column: 14, scope: !3017)
!3019 = !DILocation(line: 33, column: 31, scope: !3017)
!3020 = !DILocation(line: 33, column: 7, scope: !3002)
!3021 = !DILocation(line: 34, column: 5, scope: !3017)
!3022 = !DILocation(line: 35, column: 29, scope: !3002)
!3023 = !DILocation(line: 35, column: 59, scope: !3002)
!3024 = !DILocation(line: 35, column: 63, scope: !3002)
!3025 = !DILocation(line: 35, column: 70, scope: !3002)
!3026 = !DILocation(line: 35, column: 10, scope: !3002)
!3027 = !DILocation(line: 36, column: 10, scope: !3002)
!3028 = !DILocation(line: 36, column: 17, scope: !3002)
!3029 = !DILocation(line: 36, column: 34, scope: !3002)
!3030 = !DILocation(line: 36, column: 42, scope: !3002)
!3031 = !DILocation(line: 36, column: 49, scope: !3002)
!3032 = !DILocation(line: 36, column: 56, scope: !3002)
!3033 = !DILocation(line: 36, column: 63, scope: !3002)
!3034 = !DILocation(line: 36, column: 3, scope: !3002)
!3035 = !DILocation(line: 37, column: 1, scope: !3002)
!3036 = distinct !DISubprogram(name: "DegreesToRadians", scope: !3037, file: !3037, line: 54, type: !3038, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3037 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!519, !3040}
!3040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!3041 = !DILocalVariable(name: "degrees", arg: 1, scope: !3036, file: !3037, line: 54, type: !3040)
!3042 = !DILocation(line: 54, column: 52, scope: !3036)
!3043 = !DILocation(line: 56, column: 29, scope: !3036)
!3044 = !DILocation(line: 56, column: 28, scope: !3036)
!3045 = !DILocation(line: 56, column: 36, scope: !3036)
!3046 = !DILocation(line: 56, column: 3, scope: !3036)
!3047 = distinct !DISubprogram(name: "SetPixelPacket", scope: !3048, file: !3048, line: 117, type: !3049, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3048 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !481, !3051, !505, !706}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!3053 = !DILocalVariable(name: "image", arg: 1, scope: !3047, file: !3048, line: 117, type: !481)
!3054 = !DILocation(line: 117, column: 48, scope: !3047)
!3055 = !DILocalVariable(name: "pixel", arg: 2, scope: !3047, file: !3048, line: 118, type: !3051)
!3056 = !DILocation(line: 118, column: 28, scope: !3047)
!3057 = !DILocalVariable(name: "color", arg: 3, scope: !3047, file: !3048, line: 118, type: !505)
!3058 = !DILocation(line: 118, column: 47, scope: !3047)
!3059 = !DILocalVariable(name: "index", arg: 4, scope: !3047, file: !3048, line: 118, type: !706)
!3060 = !DILocation(line: 118, column: 66, scope: !3047)
!3061 = !DILocation(line: 120, column: 3, scope: !3047)
!3062 = !DILocation(line: 121, column: 3, scope: !3047)
!3063 = !DILocation(line: 122, column: 3, scope: !3047)
!3064 = !DILocation(line: 123, column: 3, scope: !3047)
!3065 = !DILocation(line: 124, column: 8, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3047, file: !3048, line: 124, column: 7)
!3067 = !DILocation(line: 124, column: 15, scope: !3066)
!3068 = !DILocation(line: 124, column: 26, scope: !3066)
!3069 = !DILocation(line: 124, column: 45, scope: !3066)
!3070 = !DILocation(line: 125, column: 8, scope: !3066)
!3071 = !DILocation(line: 125, column: 15, scope: !3066)
!3072 = !DILocation(line: 125, column: 29, scope: !3066)
!3073 = !DILocation(line: 124, column: 7, scope: !3047)
!3074 = !DILocation(line: 126, column: 5, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3048, line: 126, column: 5)
!3076 = distinct !DILexicalBlock(scope: !3066, file: !3048, line: 126, column: 5)
!3077 = !DILocation(line: 126, column: 5, scope: !3076)
!3078 = !DILocation(line: 127, column: 1, scope: !3047)
!3079 = distinct !DISubprogram(name: "CompositeClear", scope: !1, file: !1, line: 249, type: !3080, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{null, !3051, !3082}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!3083 = !DILocalVariable(name: "q", arg: 1, scope: !3079, file: !1, line: 249, type: !3051)
!3084 = !DILocation(line: 249, column: 60, scope: !3079)
!3085 = !DILocalVariable(name: "composite", arg: 2, scope: !3079, file: !1, line: 250, type: !3082)
!3086 = !DILocation(line: 250, column: 22, scope: !3079)
!3087 = !DILocation(line: 252, column: 3, scope: !3079)
!3088 = !DILocation(line: 252, column: 14, scope: !3079)
!3089 = !DILocation(line: 252, column: 21, scope: !3079)
!3090 = !DILocation(line: 253, column: 3, scope: !3079)
!3091 = !DILocation(line: 253, column: 14, scope: !3079)
!3092 = !DILocation(line: 253, column: 17, scope: !3079)
!3093 = !DILocation(line: 254, column: 3, scope: !3079)
!3094 = !DILocation(line: 254, column: 14, scope: !3079)
!3095 = !DILocation(line: 254, column: 19, scope: !3079)
!3096 = !DILocation(line: 255, column: 3, scope: !3079)
!3097 = !DILocation(line: 255, column: 14, scope: !3079)
!3098 = !DILocation(line: 255, column: 18, scope: !3079)
!3099 = !DILocation(line: 256, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 256, column: 7)
!3101 = !DILocation(line: 256, column: 10, scope: !3100)
!3102 = !DILocation(line: 256, column: 21, scope: !3100)
!3103 = !DILocation(line: 256, column: 7, scope: !3079)
!3104 = !DILocation(line: 257, column: 5, scope: !3100)
!3105 = !DILocation(line: 257, column: 16, scope: !3100)
!3106 = !DILocation(line: 257, column: 21, scope: !3100)
!3107 = !DILocation(line: 258, column: 1, scope: !3079)
!3108 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !3109, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!510, !3111}
!3111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!3112 = !DILocalVariable(name: "value", arg: 1, scope: !3108, file: !147, line: 87, type: !3111)
!3113 = !DILocation(line: 87, column: 59, scope: !3108)
!3114 = !DILocation(line: 92, column: 7, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3108, file: !147, line: 92, column: 7)
!3116 = !DILocation(line: 92, column: 13, scope: !3115)
!3117 = !DILocation(line: 92, column: 7, scope: !3108)
!3118 = !DILocation(line: 93, column: 5, scope: !3115)
!3119 = !DILocation(line: 94, column: 7, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3108, file: !147, line: 94, column: 7)
!3121 = !DILocation(line: 94, column: 13, scope: !3120)
!3122 = !DILocation(line: 94, column: 7, scope: !3108)
!3123 = !DILocation(line: 95, column: 5, scope: !3120)
!3124 = !DILocation(line: 96, column: 21, scope: !3108)
!3125 = !DILocation(line: 96, column: 26, scope: !3108)
!3126 = !DILocation(line: 96, column: 10, scope: !3108)
!3127 = !DILocation(line: 96, column: 3, scope: !3108)
!3128 = !DILocation(line: 98, column: 1, scope: !3108)
!3129 = distinct !DISubprogram(name: "MagickPixelCompositeOver", scope: !3130, file: !3130, line: 86, type: !3131, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3130 = !DIFile(filename: "./magick/composite-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3131 = !DISubroutineType(types: !3132)
!3132 = !{null, !3051, !3111, !3051, !3111, !3082}
!3133 = !DILocalVariable(name: "p", arg: 1, scope: !3129, file: !3130, line: 86, type: !3051)
!3134 = !DILocation(line: 86, column: 70, scope: !3129)
!3135 = !DILocalVariable(name: "alpha", arg: 2, scope: !3129, file: !3130, line: 87, type: !3111)
!3136 = !DILocation(line: 87, column: 24, scope: !3129)
!3137 = !DILocalVariable(name: "q", arg: 3, scope: !3129, file: !3130, line: 87, type: !3051)
!3138 = !DILocation(line: 87, column: 55, scope: !3129)
!3139 = !DILocalVariable(name: "beta", arg: 4, scope: !3129, file: !3130, line: 88, type: !3111)
!3140 = !DILocation(line: 88, column: 24, scope: !3129)
!3141 = !DILocalVariable(name: "composite", arg: 5, scope: !3129, file: !3130, line: 88, type: !3082)
!3142 = !DILocation(line: 88, column: 48, scope: !3129)
!3143 = !DILocalVariable(name: "gamma", scope: !3129, file: !3130, line: 91, type: !519)
!3144 = !DILocation(line: 91, column: 5, scope: !3129)
!3145 = !DILocation(line: 96, column: 7, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3129, file: !3130, line: 96, column: 7)
!3147 = !DILocation(line: 96, column: 13, scope: !3146)
!3148 = !DILocation(line: 96, column: 7, scope: !3129)
!3149 = !DILocation(line: 98, column: 8, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3146, file: !3130, line: 97, column: 5)
!3151 = !DILocation(line: 98, column: 20, scope: !3150)
!3152 = !DILocation(line: 98, column: 19, scope: !3150)
!3153 = !DILocation(line: 99, column: 7, scope: !3150)
!3154 = !DILocation(line: 101, column: 39, scope: !3129)
!3155 = !DILocation(line: 101, column: 38, scope: !3129)
!3156 = !DILocation(line: 101, column: 45, scope: !3129)
!3157 = !DILocation(line: 101, column: 44, scope: !3129)
!3158 = !DILocation(line: 101, column: 12, scope: !3129)
!3159 = !DILocation(line: 101, column: 8, scope: !3129)
!3160 = !DILocation(line: 103, column: 7, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3129, file: !3130, line: 103, column: 7)
!3162 = !DILocation(line: 103, column: 13, scope: !3161)
!3163 = !DILocation(line: 103, column: 7, scope: !3129)
!3164 = !DILocation(line: 103, column: 26, scope: !3161)
!3165 = !DILocation(line: 103, column: 20, scope: !3161)
!3166 = !DILocation(line: 105, column: 57, scope: !3129)
!3167 = !DILocation(line: 105, column: 56, scope: !3129)
!3168 = !DILocation(line: 105, column: 51, scope: !3129)
!3169 = !DILocation(line: 105, column: 22, scope: !3129)
!3170 = !DILocation(line: 105, column: 3, scope: !3129)
!3171 = !DILocation(line: 105, column: 14, scope: !3129)
!3172 = !DILocation(line: 105, column: 21, scope: !3129)
!3173 = !DILocation(line: 106, column: 31, scope: !3129)
!3174 = !DILocation(line: 106, column: 9, scope: !3129)
!3175 = !DILocation(line: 106, column: 8, scope: !3129)
!3176 = !DILocation(line: 107, column: 18, scope: !3129)
!3177 = !DILocation(line: 107, column: 36, scope: !3129)
!3178 = !DILocation(line: 107, column: 39, scope: !3129)
!3179 = !DILocation(line: 107, column: 43, scope: !3129)
!3180 = !DILocation(line: 107, column: 49, scope: !3129)
!3181 = !DILocation(line: 107, column: 52, scope: !3129)
!3182 = !DILocation(line: 107, column: 56, scope: !3129)
!3183 = !DILocation(line: 107, column: 24, scope: !3129)
!3184 = !DILocation(line: 107, column: 23, scope: !3129)
!3185 = !DILocation(line: 107, column: 3, scope: !3129)
!3186 = !DILocation(line: 107, column: 14, scope: !3129)
!3187 = !DILocation(line: 107, column: 17, scope: !3129)
!3188 = !DILocation(line: 108, column: 20, scope: !3129)
!3189 = !DILocation(line: 108, column: 38, scope: !3129)
!3190 = !DILocation(line: 108, column: 41, scope: !3129)
!3191 = !DILocation(line: 108, column: 47, scope: !3129)
!3192 = !DILocation(line: 108, column: 53, scope: !3129)
!3193 = !DILocation(line: 108, column: 56, scope: !3129)
!3194 = !DILocation(line: 108, column: 62, scope: !3129)
!3195 = !DILocation(line: 108, column: 26, scope: !3129)
!3196 = !DILocation(line: 108, column: 25, scope: !3129)
!3197 = !DILocation(line: 108, column: 3, scope: !3129)
!3198 = !DILocation(line: 108, column: 14, scope: !3129)
!3199 = !DILocation(line: 108, column: 19, scope: !3129)
!3200 = !DILocation(line: 109, column: 19, scope: !3129)
!3201 = !DILocation(line: 109, column: 37, scope: !3129)
!3202 = !DILocation(line: 109, column: 40, scope: !3129)
!3203 = !DILocation(line: 109, column: 45, scope: !3129)
!3204 = !DILocation(line: 109, column: 51, scope: !3129)
!3205 = !DILocation(line: 109, column: 54, scope: !3129)
!3206 = !DILocation(line: 109, column: 59, scope: !3129)
!3207 = !DILocation(line: 109, column: 25, scope: !3129)
!3208 = !DILocation(line: 109, column: 24, scope: !3129)
!3209 = !DILocation(line: 109, column: 3, scope: !3129)
!3210 = !DILocation(line: 109, column: 14, scope: !3129)
!3211 = !DILocation(line: 109, column: 18, scope: !3129)
!3212 = !DILocation(line: 110, column: 7, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3129, file: !3130, line: 110, column: 7)
!3214 = !DILocation(line: 110, column: 10, scope: !3213)
!3215 = !DILocation(line: 110, column: 21, scope: !3213)
!3216 = !DILocation(line: 110, column: 7, scope: !3129)
!3217 = !DILocation(line: 111, column: 22, scope: !3213)
!3218 = !DILocation(line: 111, column: 40, scope: !3213)
!3219 = !DILocation(line: 111, column: 43, scope: !3213)
!3220 = !DILocation(line: 111, column: 49, scope: !3213)
!3221 = !DILocation(line: 111, column: 55, scope: !3213)
!3222 = !DILocation(line: 111, column: 58, scope: !3213)
!3223 = !DILocation(line: 111, column: 64, scope: !3213)
!3224 = !DILocation(line: 111, column: 28, scope: !3213)
!3225 = !DILocation(line: 111, column: 27, scope: !3213)
!3226 = !DILocation(line: 111, column: 5, scope: !3213)
!3227 = !DILocation(line: 111, column: 16, scope: !3213)
!3228 = !DILocation(line: 111, column: 21, scope: !3213)
!3229 = !DILocation(line: 112, column: 1, scope: !3129)
!3230 = distinct !DISubprogram(name: "CompositeIn", scope: !1, file: !1, line: 766, type: !3231, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !3051, !3051, !3082}
!3233 = !DILocalVariable(name: "p", arg: 1, scope: !3230, file: !1, line: 766, type: !3051)
!3234 = !DILocation(line: 766, column: 57, scope: !3230)
!3235 = !DILocalVariable(name: "q", arg: 2, scope: !3230, file: !1, line: 767, type: !3051)
!3236 = !DILocation(line: 767, column: 28, scope: !3230)
!3237 = !DILocalVariable(name: "composite", arg: 3, scope: !3230, file: !1, line: 767, type: !3082)
!3238 = !DILocation(line: 767, column: 49, scope: !3230)
!3239 = !DILocalVariable(name: "gamma", scope: !3230, file: !1, line: 770, type: !519)
!3240 = !DILocation(line: 770, column: 5, scope: !3230)
!3241 = !DILocalVariable(name: "Sa", scope: !3230, file: !1, line: 773, type: !710)
!3242 = !DILocation(line: 773, column: 5, scope: !3230)
!3243 = !DILocalVariable(name: "Da", scope: !3230, file: !1, line: 774, type: !710)
!3244 = !DILocation(line: 774, column: 5, scope: !3230)
!3245 = !DILocation(line: 776, column: 23, scope: !3230)
!3246 = !DILocation(line: 776, column: 26, scope: !3230)
!3247 = !DILocation(line: 776, column: 22, scope: !3230)
!3248 = !DILocation(line: 776, column: 9, scope: !3230)
!3249 = !DILocation(line: 776, column: 6, scope: !3230)
!3250 = !DILocation(line: 776, column: 5, scope: !3230)
!3251 = !DILocation(line: 777, column: 23, scope: !3230)
!3252 = !DILocation(line: 777, column: 26, scope: !3230)
!3253 = !DILocation(line: 777, column: 22, scope: !3230)
!3254 = !DILocation(line: 777, column: 9, scope: !3230)
!3255 = !DILocation(line: 777, column: 6, scope: !3230)
!3256 = !DILocation(line: 777, column: 5, scope: !3230)
!3257 = !DILocation(line: 778, column: 9, scope: !3230)
!3258 = !DILocation(line: 778, column: 12, scope: !3230)
!3259 = !DILocation(line: 778, column: 11, scope: !3230)
!3260 = !DILocation(line: 778, column: 8, scope: !3230)
!3261 = !DILocation(line: 780, column: 7, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3230, file: !1, line: 780, column: 7)
!3263 = !DILocation(line: 780, column: 13, scope: !3262)
!3264 = !DILocation(line: 780, column: 7, scope: !3230)
!3265 = !DILocation(line: 780, column: 26, scope: !3262)
!3266 = !DILocation(line: 780, column: 20, scope: !3262)
!3267 = !DILocation(line: 782, column: 57, scope: !3230)
!3268 = !DILocation(line: 782, column: 56, scope: !3230)
!3269 = !DILocation(line: 782, column: 51, scope: !3230)
!3270 = !DILocation(line: 782, column: 22, scope: !3230)
!3271 = !DILocation(line: 782, column: 3, scope: !3230)
!3272 = !DILocation(line: 782, column: 14, scope: !3230)
!3273 = !DILocation(line: 782, column: 21, scope: !3230)
!3274 = !DILocation(line: 783, column: 31, scope: !3230)
!3275 = !DILocation(line: 783, column: 9, scope: !3230)
!3276 = !DILocation(line: 783, column: 8, scope: !3230)
!3277 = !DILocation(line: 784, column: 18, scope: !3230)
!3278 = !DILocation(line: 784, column: 27, scope: !3230)
!3279 = !DILocation(line: 784, column: 30, scope: !3230)
!3280 = !DILocation(line: 784, column: 34, scope: !3230)
!3281 = !DILocation(line: 784, column: 37, scope: !3230)
!3282 = !DILocation(line: 784, column: 40, scope: !3230)
!3283 = !DILocation(line: 784, column: 44, scope: !3230)
!3284 = !DILocation(line: 784, column: 24, scope: !3230)
!3285 = !DILocation(line: 784, column: 23, scope: !3230)
!3286 = !DILocation(line: 784, column: 3, scope: !3230)
!3287 = !DILocation(line: 784, column: 14, scope: !3230)
!3288 = !DILocation(line: 784, column: 17, scope: !3230)
!3289 = !DILocation(line: 785, column: 20, scope: !3230)
!3290 = !DILocation(line: 785, column: 29, scope: !3230)
!3291 = !DILocation(line: 785, column: 32, scope: !3230)
!3292 = !DILocation(line: 785, column: 38, scope: !3230)
!3293 = !DILocation(line: 785, column: 41, scope: !3230)
!3294 = !DILocation(line: 785, column: 44, scope: !3230)
!3295 = !DILocation(line: 785, column: 50, scope: !3230)
!3296 = !DILocation(line: 785, column: 26, scope: !3230)
!3297 = !DILocation(line: 785, column: 25, scope: !3230)
!3298 = !DILocation(line: 785, column: 3, scope: !3230)
!3299 = !DILocation(line: 785, column: 14, scope: !3230)
!3300 = !DILocation(line: 785, column: 19, scope: !3230)
!3301 = !DILocation(line: 786, column: 19, scope: !3230)
!3302 = !DILocation(line: 786, column: 28, scope: !3230)
!3303 = !DILocation(line: 786, column: 31, scope: !3230)
!3304 = !DILocation(line: 786, column: 36, scope: !3230)
!3305 = !DILocation(line: 786, column: 39, scope: !3230)
!3306 = !DILocation(line: 786, column: 42, scope: !3230)
!3307 = !DILocation(line: 786, column: 47, scope: !3230)
!3308 = !DILocation(line: 786, column: 25, scope: !3230)
!3309 = !DILocation(line: 786, column: 24, scope: !3230)
!3310 = !DILocation(line: 786, column: 3, scope: !3230)
!3311 = !DILocation(line: 786, column: 14, scope: !3230)
!3312 = !DILocation(line: 786, column: 18, scope: !3230)
!3313 = !DILocation(line: 787, column: 7, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3230, file: !1, line: 787, column: 7)
!3315 = !DILocation(line: 787, column: 10, scope: !3314)
!3316 = !DILocation(line: 787, column: 21, scope: !3314)
!3317 = !DILocation(line: 787, column: 7, scope: !3230)
!3318 = !DILocation(line: 788, column: 22, scope: !3314)
!3319 = !DILocation(line: 788, column: 31, scope: !3314)
!3320 = !DILocation(line: 788, column: 34, scope: !3314)
!3321 = !DILocation(line: 788, column: 40, scope: !3314)
!3322 = !DILocation(line: 788, column: 43, scope: !3314)
!3323 = !DILocation(line: 788, column: 46, scope: !3314)
!3324 = !DILocation(line: 788, column: 52, scope: !3314)
!3325 = !DILocation(line: 788, column: 28, scope: !3314)
!3326 = !DILocation(line: 788, column: 27, scope: !3314)
!3327 = !DILocation(line: 788, column: 5, scope: !3314)
!3328 = !DILocation(line: 788, column: 16, scope: !3314)
!3329 = !DILocation(line: 788, column: 21, scope: !3314)
!3330 = !DILocation(line: 789, column: 1, scope: !3230)
!3331 = distinct !DISubprogram(name: "CompositeOut", scope: !1, file: !1, line: 1299, type: !3231, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3332 = !DILocalVariable(name: "p", arg: 1, scope: !3331, file: !1, line: 1299, type: !3051)
!3333 = !DILocation(line: 1299, column: 58, scope: !3331)
!3334 = !DILocalVariable(name: "q", arg: 2, scope: !3331, file: !1, line: 1300, type: !3051)
!3335 = !DILocation(line: 1300, column: 28, scope: !3331)
!3336 = !DILocalVariable(name: "composite", arg: 3, scope: !3331, file: !1, line: 1300, type: !3082)
!3337 = !DILocation(line: 1300, column: 49, scope: !3331)
!3338 = !DILocalVariable(name: "gamma", scope: !3331, file: !1, line: 1303, type: !519)
!3339 = !DILocation(line: 1303, column: 5, scope: !3331)
!3340 = !DILocalVariable(name: "Da", scope: !3331, file: !1, line: 1306, type: !710)
!3341 = !DILocation(line: 1306, column: 5, scope: !3331)
!3342 = !DILocalVariable(name: "Sa", scope: !3331, file: !1, line: 1307, type: !710)
!3343 = !DILocation(line: 1307, column: 5, scope: !3331)
!3344 = !DILocation(line: 1309, column: 23, scope: !3331)
!3345 = !DILocation(line: 1309, column: 26, scope: !3331)
!3346 = !DILocation(line: 1309, column: 22, scope: !3331)
!3347 = !DILocation(line: 1309, column: 9, scope: !3331)
!3348 = !DILocation(line: 1309, column: 6, scope: !3331)
!3349 = !DILocation(line: 1309, column: 5, scope: !3331)
!3350 = !DILocation(line: 1310, column: 23, scope: !3331)
!3351 = !DILocation(line: 1310, column: 26, scope: !3331)
!3352 = !DILocation(line: 1310, column: 22, scope: !3331)
!3353 = !DILocation(line: 1310, column: 9, scope: !3331)
!3354 = !DILocation(line: 1310, column: 6, scope: !3331)
!3355 = !DILocation(line: 1310, column: 5, scope: !3331)
!3356 = !DILocation(line: 1311, column: 9, scope: !3331)
!3357 = !DILocation(line: 1311, column: 17, scope: !3331)
!3358 = !DILocation(line: 1311, column: 16, scope: !3331)
!3359 = !DILocation(line: 1311, column: 11, scope: !3331)
!3360 = !DILocation(line: 1311, column: 8, scope: !3331)
!3361 = !DILocation(line: 1313, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1313, column: 7)
!3363 = !DILocation(line: 1313, column: 13, scope: !3362)
!3364 = !DILocation(line: 1313, column: 7, scope: !3331)
!3365 = !DILocation(line: 1313, column: 26, scope: !3362)
!3366 = !DILocation(line: 1313, column: 20, scope: !3362)
!3367 = !DILocation(line: 1315, column: 57, scope: !3331)
!3368 = !DILocation(line: 1315, column: 56, scope: !3331)
!3369 = !DILocation(line: 1315, column: 51, scope: !3331)
!3370 = !DILocation(line: 1315, column: 22, scope: !3331)
!3371 = !DILocation(line: 1315, column: 3, scope: !3331)
!3372 = !DILocation(line: 1315, column: 14, scope: !3331)
!3373 = !DILocation(line: 1315, column: 21, scope: !3331)
!3374 = !DILocation(line: 1316, column: 31, scope: !3331)
!3375 = !DILocation(line: 1316, column: 9, scope: !3331)
!3376 = !DILocation(line: 1316, column: 8, scope: !3331)
!3377 = !DILocation(line: 1317, column: 18, scope: !3331)
!3378 = !DILocation(line: 1317, column: 28, scope: !3331)
!3379 = !DILocation(line: 1317, column: 31, scope: !3331)
!3380 = !DILocation(line: 1317, column: 35, scope: !3331)
!3381 = !DILocation(line: 1317, column: 38, scope: !3331)
!3382 = !DILocation(line: 1317, column: 41, scope: !3331)
!3383 = !DILocation(line: 1317, column: 45, scope: !3331)
!3384 = !DILocation(line: 1317, column: 24, scope: !3331)
!3385 = !DILocation(line: 1317, column: 23, scope: !3331)
!3386 = !DILocation(line: 1317, column: 3, scope: !3331)
!3387 = !DILocation(line: 1317, column: 14, scope: !3331)
!3388 = !DILocation(line: 1317, column: 17, scope: !3331)
!3389 = !DILocation(line: 1318, column: 20, scope: !3331)
!3390 = !DILocation(line: 1318, column: 30, scope: !3331)
!3391 = !DILocation(line: 1318, column: 33, scope: !3331)
!3392 = !DILocation(line: 1318, column: 39, scope: !3331)
!3393 = !DILocation(line: 1318, column: 42, scope: !3331)
!3394 = !DILocation(line: 1318, column: 45, scope: !3331)
!3395 = !DILocation(line: 1318, column: 51, scope: !3331)
!3396 = !DILocation(line: 1318, column: 26, scope: !3331)
!3397 = !DILocation(line: 1318, column: 25, scope: !3331)
!3398 = !DILocation(line: 1318, column: 3, scope: !3331)
!3399 = !DILocation(line: 1318, column: 14, scope: !3331)
!3400 = !DILocation(line: 1318, column: 19, scope: !3331)
!3401 = !DILocation(line: 1319, column: 19, scope: !3331)
!3402 = !DILocation(line: 1319, column: 29, scope: !3331)
!3403 = !DILocation(line: 1319, column: 32, scope: !3331)
!3404 = !DILocation(line: 1319, column: 37, scope: !3331)
!3405 = !DILocation(line: 1319, column: 40, scope: !3331)
!3406 = !DILocation(line: 1319, column: 43, scope: !3331)
!3407 = !DILocation(line: 1319, column: 48, scope: !3331)
!3408 = !DILocation(line: 1319, column: 25, scope: !3331)
!3409 = !DILocation(line: 1319, column: 24, scope: !3331)
!3410 = !DILocation(line: 1319, column: 3, scope: !3331)
!3411 = !DILocation(line: 1319, column: 14, scope: !3331)
!3412 = !DILocation(line: 1319, column: 18, scope: !3331)
!3413 = !DILocation(line: 1320, column: 7, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1320, column: 7)
!3415 = !DILocation(line: 1320, column: 10, scope: !3414)
!3416 = !DILocation(line: 1320, column: 21, scope: !3414)
!3417 = !DILocation(line: 1320, column: 7, scope: !3331)
!3418 = !DILocation(line: 1321, column: 22, scope: !3414)
!3419 = !DILocation(line: 1321, column: 32, scope: !3414)
!3420 = !DILocation(line: 1321, column: 35, scope: !3414)
!3421 = !DILocation(line: 1321, column: 41, scope: !3414)
!3422 = !DILocation(line: 1321, column: 44, scope: !3414)
!3423 = !DILocation(line: 1321, column: 47, scope: !3414)
!3424 = !DILocation(line: 1321, column: 53, scope: !3414)
!3425 = !DILocation(line: 1321, column: 28, scope: !3414)
!3426 = !DILocation(line: 1321, column: 27, scope: !3414)
!3427 = !DILocation(line: 1321, column: 5, scope: !3414)
!3428 = !DILocation(line: 1321, column: 16, scope: !3414)
!3429 = !DILocation(line: 1321, column: 21, scope: !3414)
!3430 = !DILocation(line: 1322, column: 1, scope: !3331)
!3431 = distinct !DISubprogram(name: "CompositeAtop", scope: !1, file: !1, line: 214, type: !3231, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3432 = !DILocalVariable(name: "p", arg: 1, scope: !3431, file: !1, line: 214, type: !3051)
!3433 = !DILocation(line: 214, column: 59, scope: !3431)
!3434 = !DILocalVariable(name: "q", arg: 2, scope: !3431, file: !1, line: 215, type: !3051)
!3435 = !DILocation(line: 215, column: 28, scope: !3431)
!3436 = !DILocalVariable(name: "composite", arg: 3, scope: !3431, file: !1, line: 215, type: !3082)
!3437 = !DILocation(line: 215, column: 49, scope: !3431)
!3438 = !DILocalVariable(name: "Sa", scope: !3431, file: !1, line: 218, type: !710)
!3439 = !DILocation(line: 218, column: 5, scope: !3431)
!3440 = !DILocation(line: 220, column: 23, scope: !3431)
!3441 = !DILocation(line: 220, column: 26, scope: !3431)
!3442 = !DILocation(line: 220, column: 22, scope: !3431)
!3443 = !DILocation(line: 220, column: 9, scope: !3431)
!3444 = !DILocation(line: 220, column: 6, scope: !3431)
!3445 = !DILocation(line: 220, column: 5, scope: !3431)
!3446 = !DILocation(line: 221, column: 22, scope: !3431)
!3447 = !DILocation(line: 221, column: 25, scope: !3431)
!3448 = !DILocation(line: 221, column: 3, scope: !3431)
!3449 = !DILocation(line: 221, column: 14, scope: !3431)
!3450 = !DILocation(line: 221, column: 21, scope: !3431)
!3451 = !DILocation(line: 222, column: 23, scope: !3431)
!3452 = !DILocation(line: 222, column: 26, scope: !3431)
!3453 = !DILocation(line: 222, column: 30, scope: !3431)
!3454 = !DILocation(line: 222, column: 33, scope: !3431)
!3455 = !DILocation(line: 222, column: 36, scope: !3431)
!3456 = !DILocation(line: 222, column: 18, scope: !3431)
!3457 = !DILocation(line: 222, column: 3, scope: !3431)
!3458 = !DILocation(line: 222, column: 14, scope: !3431)
!3459 = !DILocation(line: 222, column: 17, scope: !3431)
!3460 = !DILocation(line: 223, column: 25, scope: !3431)
!3461 = !DILocation(line: 223, column: 28, scope: !3431)
!3462 = !DILocation(line: 223, column: 34, scope: !3431)
!3463 = !DILocation(line: 223, column: 37, scope: !3431)
!3464 = !DILocation(line: 223, column: 40, scope: !3431)
!3465 = !DILocation(line: 223, column: 20, scope: !3431)
!3466 = !DILocation(line: 223, column: 3, scope: !3431)
!3467 = !DILocation(line: 223, column: 14, scope: !3431)
!3468 = !DILocation(line: 223, column: 19, scope: !3431)
!3469 = !DILocation(line: 224, column: 24, scope: !3431)
!3470 = !DILocation(line: 224, column: 27, scope: !3431)
!3471 = !DILocation(line: 224, column: 32, scope: !3431)
!3472 = !DILocation(line: 224, column: 35, scope: !3431)
!3473 = !DILocation(line: 224, column: 38, scope: !3431)
!3474 = !DILocation(line: 224, column: 19, scope: !3431)
!3475 = !DILocation(line: 224, column: 3, scope: !3431)
!3476 = !DILocation(line: 224, column: 14, scope: !3431)
!3477 = !DILocation(line: 224, column: 18, scope: !3431)
!3478 = !DILocation(line: 225, column: 7, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3431, file: !1, line: 225, column: 7)
!3480 = !DILocation(line: 225, column: 10, scope: !3479)
!3481 = !DILocation(line: 225, column: 21, scope: !3479)
!3482 = !DILocation(line: 225, column: 7, scope: !3431)
!3483 = !DILocation(line: 226, column: 27, scope: !3479)
!3484 = !DILocation(line: 226, column: 30, scope: !3479)
!3485 = !DILocation(line: 226, column: 36, scope: !3479)
!3486 = !DILocation(line: 226, column: 39, scope: !3479)
!3487 = !DILocation(line: 226, column: 42, scope: !3479)
!3488 = !DILocation(line: 226, column: 22, scope: !3479)
!3489 = !DILocation(line: 226, column: 5, scope: !3479)
!3490 = !DILocation(line: 226, column: 16, scope: !3479)
!3491 = !DILocation(line: 226, column: 21, scope: !3479)
!3492 = !DILocation(line: 227, column: 1, scope: !3431)
!3493 = distinct !DISubprogram(name: "CompositeXor", scope: !1, file: !1, line: 1596, type: !3231, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3494 = !DILocalVariable(name: "p", arg: 1, scope: !3493, file: !1, line: 1596, type: !3051)
!3495 = !DILocation(line: 1596, column: 58, scope: !3493)
!3496 = !DILocalVariable(name: "q", arg: 2, scope: !3493, file: !1, line: 1597, type: !3051)
!3497 = !DILocation(line: 1597, column: 28, scope: !3493)
!3498 = !DILocalVariable(name: "composite", arg: 3, scope: !3493, file: !1, line: 1597, type: !3082)
!3499 = !DILocation(line: 1597, column: 49, scope: !3493)
!3500 = !DILocalVariable(name: "Da", scope: !3493, file: !1, line: 1600, type: !710)
!3501 = !DILocation(line: 1600, column: 5, scope: !3493)
!3502 = !DILocalVariable(name: "gamma", scope: !3493, file: !1, line: 1601, type: !710)
!3503 = !DILocation(line: 1601, column: 5, scope: !3493)
!3504 = !DILocalVariable(name: "Sa", scope: !3493, file: !1, line: 1602, type: !710)
!3505 = !DILocation(line: 1602, column: 5, scope: !3493)
!3506 = !DILocation(line: 1604, column: 23, scope: !3493)
!3507 = !DILocation(line: 1604, column: 26, scope: !3493)
!3508 = !DILocation(line: 1604, column: 22, scope: !3493)
!3509 = !DILocation(line: 1604, column: 9, scope: !3493)
!3510 = !DILocation(line: 1604, column: 6, scope: !3493)
!3511 = !DILocation(line: 1604, column: 5, scope: !3493)
!3512 = !DILocation(line: 1605, column: 23, scope: !3493)
!3513 = !DILocation(line: 1605, column: 26, scope: !3493)
!3514 = !DILocation(line: 1605, column: 22, scope: !3493)
!3515 = !DILocation(line: 1605, column: 9, scope: !3493)
!3516 = !DILocation(line: 1605, column: 6, scope: !3493)
!3517 = !DILocation(line: 1605, column: 5, scope: !3493)
!3518 = !DILocation(line: 1606, column: 9, scope: !3493)
!3519 = !DILocation(line: 1606, column: 12, scope: !3493)
!3520 = !DILocation(line: 1606, column: 11, scope: !3493)
!3521 = !DILocation(line: 1606, column: 17, scope: !3493)
!3522 = !DILocation(line: 1606, column: 16, scope: !3493)
!3523 = !DILocation(line: 1606, column: 20, scope: !3493)
!3524 = !DILocation(line: 1606, column: 19, scope: !3493)
!3525 = !DILocation(line: 1606, column: 14, scope: !3493)
!3526 = !DILocation(line: 1606, column: 8, scope: !3493)
!3527 = !DILocation(line: 1608, column: 7, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3493, file: !1, line: 1608, column: 7)
!3529 = !DILocation(line: 1608, column: 13, scope: !3528)
!3530 = !DILocation(line: 1608, column: 7, scope: !3493)
!3531 = !DILocation(line: 1608, column: 26, scope: !3528)
!3532 = !DILocation(line: 1608, column: 20, scope: !3528)
!3533 = !DILocation(line: 1610, column: 57, scope: !3493)
!3534 = !DILocation(line: 1610, column: 56, scope: !3493)
!3535 = !DILocation(line: 1610, column: 51, scope: !3493)
!3536 = !DILocation(line: 1610, column: 22, scope: !3493)
!3537 = !DILocation(line: 1610, column: 3, scope: !3493)
!3538 = !DILocation(line: 1610, column: 14, scope: !3493)
!3539 = !DILocation(line: 1610, column: 21, scope: !3493)
!3540 = !DILocation(line: 1611, column: 31, scope: !3493)
!3541 = !DILocation(line: 1611, column: 9, scope: !3493)
!3542 = !DILocation(line: 1611, column: 8, scope: !3493)
!3543 = !DILocation(line: 1612, column: 18, scope: !3493)
!3544 = !DILocation(line: 1612, column: 28, scope: !3493)
!3545 = !DILocation(line: 1612, column: 31, scope: !3493)
!3546 = !DILocation(line: 1612, column: 35, scope: !3493)
!3547 = !DILocation(line: 1612, column: 34, scope: !3493)
!3548 = !DILocation(line: 1612, column: 38, scope: !3493)
!3549 = !DILocation(line: 1612, column: 41, scope: !3493)
!3550 = !DILocation(line: 1612, column: 44, scope: !3493)
!3551 = !DILocation(line: 1612, column: 48, scope: !3493)
!3552 = !DILocation(line: 1612, column: 47, scope: !3493)
!3553 = !DILocation(line: 1612, column: 51, scope: !3493)
!3554 = !DILocation(line: 1612, column: 24, scope: !3493)
!3555 = !DILocation(line: 1612, column: 23, scope: !3493)
!3556 = !DILocation(line: 1612, column: 3, scope: !3493)
!3557 = !DILocation(line: 1612, column: 14, scope: !3493)
!3558 = !DILocation(line: 1612, column: 17, scope: !3493)
!3559 = !DILocation(line: 1613, column: 20, scope: !3493)
!3560 = !DILocation(line: 1613, column: 30, scope: !3493)
!3561 = !DILocation(line: 1613, column: 33, scope: !3493)
!3562 = !DILocation(line: 1613, column: 39, scope: !3493)
!3563 = !DILocation(line: 1613, column: 38, scope: !3493)
!3564 = !DILocation(line: 1613, column: 42, scope: !3493)
!3565 = !DILocation(line: 1613, column: 45, scope: !3493)
!3566 = !DILocation(line: 1613, column: 48, scope: !3493)
!3567 = !DILocation(line: 1613, column: 54, scope: !3493)
!3568 = !DILocation(line: 1613, column: 53, scope: !3493)
!3569 = !DILocation(line: 1613, column: 57, scope: !3493)
!3570 = !DILocation(line: 1613, column: 26, scope: !3493)
!3571 = !DILocation(line: 1613, column: 25, scope: !3493)
!3572 = !DILocation(line: 1613, column: 3, scope: !3493)
!3573 = !DILocation(line: 1613, column: 14, scope: !3493)
!3574 = !DILocation(line: 1613, column: 19, scope: !3493)
!3575 = !DILocation(line: 1614, column: 19, scope: !3493)
!3576 = !DILocation(line: 1614, column: 29, scope: !3493)
!3577 = !DILocation(line: 1614, column: 32, scope: !3493)
!3578 = !DILocation(line: 1614, column: 37, scope: !3493)
!3579 = !DILocation(line: 1614, column: 36, scope: !3493)
!3580 = !DILocation(line: 1614, column: 40, scope: !3493)
!3581 = !DILocation(line: 1614, column: 43, scope: !3493)
!3582 = !DILocation(line: 1614, column: 46, scope: !3493)
!3583 = !DILocation(line: 1614, column: 51, scope: !3493)
!3584 = !DILocation(line: 1614, column: 50, scope: !3493)
!3585 = !DILocation(line: 1614, column: 54, scope: !3493)
!3586 = !DILocation(line: 1614, column: 25, scope: !3493)
!3587 = !DILocation(line: 1614, column: 24, scope: !3493)
!3588 = !DILocation(line: 1614, column: 3, scope: !3493)
!3589 = !DILocation(line: 1614, column: 14, scope: !3493)
!3590 = !DILocation(line: 1614, column: 18, scope: !3493)
!3591 = !DILocation(line: 1615, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3493, file: !1, line: 1615, column: 7)
!3593 = !DILocation(line: 1615, column: 10, scope: !3592)
!3594 = !DILocation(line: 1615, column: 21, scope: !3592)
!3595 = !DILocation(line: 1615, column: 7, scope: !3493)
!3596 = !DILocation(line: 1616, column: 22, scope: !3592)
!3597 = !DILocation(line: 1616, column: 32, scope: !3592)
!3598 = !DILocation(line: 1616, column: 35, scope: !3592)
!3599 = !DILocation(line: 1616, column: 41, scope: !3592)
!3600 = !DILocation(line: 1616, column: 40, scope: !3592)
!3601 = !DILocation(line: 1616, column: 44, scope: !3592)
!3602 = !DILocation(line: 1616, column: 47, scope: !3592)
!3603 = !DILocation(line: 1616, column: 50, scope: !3592)
!3604 = !DILocation(line: 1616, column: 56, scope: !3592)
!3605 = !DILocation(line: 1616, column: 55, scope: !3592)
!3606 = !DILocation(line: 1616, column: 59, scope: !3592)
!3607 = !DILocation(line: 1616, column: 28, scope: !3592)
!3608 = !DILocation(line: 1616, column: 27, scope: !3592)
!3609 = !DILocation(line: 1616, column: 5, scope: !3592)
!3610 = !DILocation(line: 1616, column: 16, scope: !3592)
!3611 = !DILocation(line: 1616, column: 21, scope: !3592)
!3612 = !DILocation(line: 1617, column: 1, scope: !3493)
!3613 = distinct !DISubprogram(name: "CompositePlus", scope: !1, file: !1, line: 1057, type: !3614, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{null, !3051, !3051, !746, !3082}
!3616 = !DILocalVariable(name: "p", arg: 1, scope: !3613, file: !1, line: 1057, type: !3051)
!3617 = !DILocation(line: 1057, column: 59, scope: !3613)
!3618 = !DILocalVariable(name: "q", arg: 2, scope: !3613, file: !1, line: 1058, type: !3051)
!3619 = !DILocation(line: 1058, column: 28, scope: !3613)
!3620 = !DILocalVariable(name: "channel", arg: 3, scope: !3613, file: !1, line: 1058, type: !746)
!3621 = !DILocation(line: 1058, column: 48, scope: !3613)
!3622 = !DILocalVariable(name: "composite", arg: 4, scope: !3613, file: !1, line: 1059, type: !3082)
!3623 = !DILocation(line: 1059, column: 22, scope: !3613)
!3624 = !DILocation(line: 1061, column: 9, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3613, file: !1, line: 1061, column: 8)
!3626 = !DILocation(line: 1061, column: 17, scope: !3625)
!3627 = !DILocation(line: 1061, column: 33, scope: !3625)
!3628 = !DILocation(line: 1061, column: 8, scope: !3613)
!3629 = !DILocation(line: 1077, column: 30, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3625, file: !1, line: 1061, column: 40)
!3631 = !DILocation(line: 1077, column: 32, scope: !3630)
!3632 = !DILocation(line: 1077, column: 35, scope: !3630)
!3633 = !DILocation(line: 1077, column: 43, scope: !3630)
!3634 = !DILocation(line: 1077, column: 45, scope: !3630)
!3635 = !DILocation(line: 1077, column: 48, scope: !3630)
!3636 = !DILocation(line: 1077, column: 56, scope: !3630)
!3637 = !DILocation(line: 1077, column: 5, scope: !3630)
!3638 = !DILocation(line: 1078, column: 3, scope: !3630)
!3639 = !DILocation(line: 1080, column: 11, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 1080, column: 10)
!3641 = distinct !DILexicalBlock(scope: !3625, file: !1, line: 1079, column: 8)
!3642 = !DILocation(line: 1080, column: 19, scope: !3640)
!3643 = !DILocation(line: 1080, column: 35, scope: !3640)
!3644 = !DILocation(line: 1080, column: 10, scope: !3641)
!3645 = !DILocation(line: 1081, column: 26, scope: !3640)
!3646 = !DILocation(line: 1081, column: 29, scope: !3640)
!3647 = !DILocation(line: 1081, column: 37, scope: !3640)
!3648 = !DILocation(line: 1081, column: 40, scope: !3640)
!3649 = !DILocation(line: 1081, column: 36, scope: !3640)
!3650 = !DILocation(line: 1081, column: 47, scope: !3640)
!3651 = !DILocation(line: 1081, column: 7, scope: !3640)
!3652 = !DILocation(line: 1081, column: 18, scope: !3640)
!3653 = !DILocation(line: 1081, column: 25, scope: !3640)
!3654 = !DILocation(line: 1082, column: 11, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 1082, column: 10)
!3656 = !DILocation(line: 1082, column: 19, scope: !3655)
!3657 = !DILocation(line: 1082, column: 33, scope: !3655)
!3658 = !DILocation(line: 1082, column: 10, scope: !3641)
!3659 = !DILocation(line: 1083, column: 22, scope: !3655)
!3660 = !DILocation(line: 1083, column: 25, scope: !3655)
!3661 = !DILocation(line: 1083, column: 29, scope: !3655)
!3662 = !DILocation(line: 1083, column: 32, scope: !3655)
!3663 = !DILocation(line: 1083, column: 28, scope: !3655)
!3664 = !DILocation(line: 1083, column: 7, scope: !3655)
!3665 = !DILocation(line: 1083, column: 18, scope: !3655)
!3666 = !DILocation(line: 1083, column: 21, scope: !3655)
!3667 = !DILocation(line: 1084, column: 11, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 1084, column: 10)
!3669 = !DILocation(line: 1084, column: 19, scope: !3668)
!3670 = !DILocation(line: 1084, column: 35, scope: !3668)
!3671 = !DILocation(line: 1084, column: 10, scope: !3641)
!3672 = !DILocation(line: 1085, column: 24, scope: !3668)
!3673 = !DILocation(line: 1085, column: 27, scope: !3668)
!3674 = !DILocation(line: 1085, column: 33, scope: !3668)
!3675 = !DILocation(line: 1085, column: 36, scope: !3668)
!3676 = !DILocation(line: 1085, column: 32, scope: !3668)
!3677 = !DILocation(line: 1085, column: 7, scope: !3668)
!3678 = !DILocation(line: 1085, column: 18, scope: !3668)
!3679 = !DILocation(line: 1085, column: 23, scope: !3668)
!3680 = !DILocation(line: 1086, column: 11, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 1086, column: 10)
!3682 = !DILocation(line: 1086, column: 19, scope: !3681)
!3683 = !DILocation(line: 1086, column: 34, scope: !3681)
!3684 = !DILocation(line: 1086, column: 10, scope: !3641)
!3685 = !DILocation(line: 1087, column: 23, scope: !3681)
!3686 = !DILocation(line: 1087, column: 26, scope: !3681)
!3687 = !DILocation(line: 1087, column: 31, scope: !3681)
!3688 = !DILocation(line: 1087, column: 34, scope: !3681)
!3689 = !DILocation(line: 1087, column: 30, scope: !3681)
!3690 = !DILocation(line: 1087, column: 7, scope: !3681)
!3691 = !DILocation(line: 1087, column: 18, scope: !3681)
!3692 = !DILocation(line: 1087, column: 22, scope: !3681)
!3693 = !DILocation(line: 1088, column: 11, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 1088, column: 10)
!3695 = !DILocation(line: 1088, column: 19, scope: !3694)
!3696 = !DILocation(line: 1088, column: 35, scope: !3694)
!3697 = !DILocation(line: 1088, column: 40, scope: !3694)
!3698 = !DILocation(line: 1088, column: 43, scope: !3694)
!3699 = !DILocation(line: 1088, column: 46, scope: !3694)
!3700 = !DILocation(line: 1088, column: 57, scope: !3694)
!3701 = !DILocation(line: 1088, column: 10, scope: !3641)
!3702 = !DILocation(line: 1089, column: 24, scope: !3694)
!3703 = !DILocation(line: 1089, column: 27, scope: !3694)
!3704 = !DILocation(line: 1089, column: 33, scope: !3694)
!3705 = !DILocation(line: 1089, column: 36, scope: !3694)
!3706 = !DILocation(line: 1089, column: 32, scope: !3694)
!3707 = !DILocation(line: 1089, column: 7, scope: !3694)
!3708 = !DILocation(line: 1089, column: 18, scope: !3694)
!3709 = !DILocation(line: 1089, column: 23, scope: !3694)
!3710 = !DILocation(line: 1091, column: 1, scope: !3613)
!3711 = distinct !DISubprogram(name: "CompositeMinus", scope: !1, file: !1, line: 1108, type: !3614, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3712 = !DILocalVariable(name: "p", arg: 1, scope: !3711, file: !1, line: 1108, type: !3051)
!3713 = !DILocation(line: 1108, column: 60, scope: !3711)
!3714 = !DILocalVariable(name: "q", arg: 2, scope: !3711, file: !1, line: 1109, type: !3051)
!3715 = !DILocation(line: 1109, column: 28, scope: !3711)
!3716 = !DILocalVariable(name: "channel", arg: 3, scope: !3711, file: !1, line: 1109, type: !746)
!3717 = !DILocation(line: 1109, column: 48, scope: !3711)
!3718 = !DILocalVariable(name: "composite", arg: 4, scope: !3711, file: !1, line: 1110, type: !3082)
!3719 = !DILocation(line: 1110, column: 22, scope: !3711)
!3720 = !DILocalVariable(name: "gamma", scope: !3711, file: !1, line: 1113, type: !519)
!3721 = !DILocation(line: 1113, column: 5, scope: !3711)
!3722 = !DILocalVariable(name: "Da", scope: !3711, file: !1, line: 1116, type: !710)
!3723 = !DILocation(line: 1116, column: 5, scope: !3711)
!3724 = !DILocalVariable(name: "Sa", scope: !3711, file: !1, line: 1117, type: !710)
!3725 = !DILocation(line: 1117, column: 5, scope: !3711)
!3726 = !DILocation(line: 1119, column: 23, scope: !3711)
!3727 = !DILocation(line: 1119, column: 26, scope: !3711)
!3728 = !DILocation(line: 1119, column: 22, scope: !3711)
!3729 = !DILocation(line: 1119, column: 9, scope: !3711)
!3730 = !DILocation(line: 1119, column: 6, scope: !3711)
!3731 = !DILocation(line: 1119, column: 5, scope: !3711)
!3732 = !DILocation(line: 1120, column: 23, scope: !3711)
!3733 = !DILocation(line: 1120, column: 26, scope: !3711)
!3734 = !DILocation(line: 1120, column: 22, scope: !3711)
!3735 = !DILocation(line: 1120, column: 9, scope: !3711)
!3736 = !DILocation(line: 1120, column: 6, scope: !3711)
!3737 = !DILocation(line: 1120, column: 5, scope: !3711)
!3738 = !DILocation(line: 1121, column: 9, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3711, file: !1, line: 1121, column: 8)
!3740 = !DILocation(line: 1121, column: 17, scope: !3739)
!3741 = !DILocation(line: 1121, column: 33, scope: !3739)
!3742 = !DILocation(line: 1121, column: 8, scope: !3711)
!3743 = !DILocation(line: 1122, column: 24, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !1, line: 1121, column: 40)
!3745 = !DILocation(line: 1122, column: 27, scope: !3744)
!3746 = !DILocation(line: 1122, column: 26, scope: !3744)
!3747 = !DILocation(line: 1122, column: 30, scope: !3744)
!3748 = !DILocation(line: 1122, column: 33, scope: !3744)
!3749 = !DILocation(line: 1122, column: 32, scope: !3744)
!3750 = !DILocation(line: 1122, column: 29, scope: !3744)
!3751 = !DILocation(line: 1122, column: 11, scope: !3744)
!3752 = !DILocation(line: 1122, column: 10, scope: !3744)
!3753 = !DILocation(line: 1123, column: 59, scope: !3744)
!3754 = !DILocation(line: 1123, column: 58, scope: !3744)
!3755 = !DILocation(line: 1123, column: 53, scope: !3744)
!3756 = !DILocation(line: 1123, column: 24, scope: !3744)
!3757 = !DILocation(line: 1123, column: 5, scope: !3744)
!3758 = !DILocation(line: 1123, column: 16, scope: !3744)
!3759 = !DILocation(line: 1123, column: 23, scope: !3744)
!3760 = !DILocation(line: 1124, column: 33, scope: !3744)
!3761 = !DILocation(line: 1124, column: 11, scope: !3744)
!3762 = !DILocation(line: 1124, column: 10, scope: !3744)
!3763 = !DILocation(line: 1125, column: 20, scope: !3744)
!3764 = !DILocation(line: 1125, column: 32, scope: !3744)
!3765 = !DILocation(line: 1125, column: 35, scope: !3744)
!3766 = !DILocation(line: 1125, column: 39, scope: !3744)
!3767 = !DILocation(line: 1125, column: 38, scope: !3744)
!3768 = !DILocation(line: 1125, column: 42, scope: !3744)
!3769 = !DILocation(line: 1125, column: 45, scope: !3744)
!3770 = !DILocation(line: 1125, column: 48, scope: !3744)
!3771 = !DILocation(line: 1125, column: 52, scope: !3744)
!3772 = !DILocation(line: 1125, column: 51, scope: !3744)
!3773 = !DILocation(line: 1125, column: 55, scope: !3744)
!3774 = !DILocation(line: 1125, column: 26, scope: !3744)
!3775 = !DILocation(line: 1125, column: 25, scope: !3744)
!3776 = !DILocation(line: 1125, column: 5, scope: !3744)
!3777 = !DILocation(line: 1125, column: 16, scope: !3744)
!3778 = !DILocation(line: 1125, column: 19, scope: !3744)
!3779 = !DILocation(line: 1126, column: 22, scope: !3744)
!3780 = !DILocation(line: 1126, column: 34, scope: !3744)
!3781 = !DILocation(line: 1126, column: 37, scope: !3744)
!3782 = !DILocation(line: 1126, column: 43, scope: !3744)
!3783 = !DILocation(line: 1126, column: 42, scope: !3744)
!3784 = !DILocation(line: 1126, column: 46, scope: !3744)
!3785 = !DILocation(line: 1126, column: 49, scope: !3744)
!3786 = !DILocation(line: 1126, column: 52, scope: !3744)
!3787 = !DILocation(line: 1126, column: 58, scope: !3744)
!3788 = !DILocation(line: 1126, column: 57, scope: !3744)
!3789 = !DILocation(line: 1126, column: 61, scope: !3744)
!3790 = !DILocation(line: 1126, column: 28, scope: !3744)
!3791 = !DILocation(line: 1126, column: 27, scope: !3744)
!3792 = !DILocation(line: 1126, column: 5, scope: !3744)
!3793 = !DILocation(line: 1126, column: 16, scope: !3744)
!3794 = !DILocation(line: 1126, column: 21, scope: !3744)
!3795 = !DILocation(line: 1127, column: 21, scope: !3744)
!3796 = !DILocation(line: 1127, column: 33, scope: !3744)
!3797 = !DILocation(line: 1127, column: 36, scope: !3744)
!3798 = !DILocation(line: 1127, column: 41, scope: !3744)
!3799 = !DILocation(line: 1127, column: 40, scope: !3744)
!3800 = !DILocation(line: 1127, column: 44, scope: !3744)
!3801 = !DILocation(line: 1127, column: 47, scope: !3744)
!3802 = !DILocation(line: 1127, column: 50, scope: !3744)
!3803 = !DILocation(line: 1127, column: 55, scope: !3744)
!3804 = !DILocation(line: 1127, column: 54, scope: !3744)
!3805 = !DILocation(line: 1127, column: 58, scope: !3744)
!3806 = !DILocation(line: 1127, column: 27, scope: !3744)
!3807 = !DILocation(line: 1127, column: 26, scope: !3744)
!3808 = !DILocation(line: 1127, column: 5, scope: !3744)
!3809 = !DILocation(line: 1127, column: 16, scope: !3744)
!3810 = !DILocation(line: 1127, column: 20, scope: !3744)
!3811 = !DILocation(line: 1128, column: 9, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3744, file: !1, line: 1128, column: 9)
!3813 = !DILocation(line: 1128, column: 12, scope: !3812)
!3814 = !DILocation(line: 1128, column: 23, scope: !3812)
!3815 = !DILocation(line: 1128, column: 9, scope: !3744)
!3816 = !DILocation(line: 1129, column: 24, scope: !3812)
!3817 = !DILocation(line: 1129, column: 36, scope: !3812)
!3818 = !DILocation(line: 1129, column: 39, scope: !3812)
!3819 = !DILocation(line: 1129, column: 45, scope: !3812)
!3820 = !DILocation(line: 1129, column: 44, scope: !3812)
!3821 = !DILocation(line: 1129, column: 48, scope: !3812)
!3822 = !DILocation(line: 1129, column: 51, scope: !3812)
!3823 = !DILocation(line: 1129, column: 54, scope: !3812)
!3824 = !DILocation(line: 1129, column: 60, scope: !3812)
!3825 = !DILocation(line: 1129, column: 59, scope: !3812)
!3826 = !DILocation(line: 1129, column: 63, scope: !3812)
!3827 = !DILocation(line: 1129, column: 30, scope: !3812)
!3828 = !DILocation(line: 1129, column: 29, scope: !3812)
!3829 = !DILocation(line: 1129, column: 7, scope: !3812)
!3830 = !DILocation(line: 1129, column: 18, scope: !3812)
!3831 = !DILocation(line: 1129, column: 23, scope: !3812)
!3832 = !DILocation(line: 1130, column: 3, scope: !3744)
!3833 = !DILocation(line: 1132, column: 11, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !1, line: 1132, column: 10)
!3835 = distinct !DILexicalBlock(scope: !3739, file: !1, line: 1131, column: 8)
!3836 = !DILocation(line: 1132, column: 19, scope: !3834)
!3837 = !DILocation(line: 1132, column: 35, scope: !3834)
!3838 = !DILocation(line: 1132, column: 10, scope: !3835)
!3839 = !DILocation(line: 1133, column: 45, scope: !3834)
!3840 = !DILocation(line: 1133, column: 48, scope: !3834)
!3841 = !DILocation(line: 1133, column: 47, scope: !3834)
!3842 = !DILocation(line: 1133, column: 44, scope: !3834)
!3843 = !DILocation(line: 1133, column: 43, scope: !3834)
!3844 = !DILocation(line: 1133, column: 38, scope: !3834)
!3845 = !DILocation(line: 1133, column: 26, scope: !3834)
!3846 = !DILocation(line: 1133, column: 7, scope: !3834)
!3847 = !DILocation(line: 1133, column: 18, scope: !3834)
!3848 = !DILocation(line: 1133, column: 25, scope: !3834)
!3849 = !DILocation(line: 1134, column: 11, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3835, file: !1, line: 1134, column: 10)
!3851 = !DILocation(line: 1134, column: 19, scope: !3850)
!3852 = !DILocation(line: 1134, column: 33, scope: !3850)
!3853 = !DILocation(line: 1134, column: 10, scope: !3835)
!3854 = !DILocation(line: 1135, column: 22, scope: !3850)
!3855 = !DILocation(line: 1135, column: 25, scope: !3850)
!3856 = !DILocation(line: 1135, column: 29, scope: !3850)
!3857 = !DILocation(line: 1135, column: 32, scope: !3850)
!3858 = !DILocation(line: 1135, column: 28, scope: !3850)
!3859 = !DILocation(line: 1135, column: 7, scope: !3850)
!3860 = !DILocation(line: 1135, column: 18, scope: !3850)
!3861 = !DILocation(line: 1135, column: 21, scope: !3850)
!3862 = !DILocation(line: 1136, column: 11, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3835, file: !1, line: 1136, column: 10)
!3864 = !DILocation(line: 1136, column: 19, scope: !3863)
!3865 = !DILocation(line: 1136, column: 35, scope: !3863)
!3866 = !DILocation(line: 1136, column: 10, scope: !3835)
!3867 = !DILocation(line: 1137, column: 24, scope: !3863)
!3868 = !DILocation(line: 1137, column: 27, scope: !3863)
!3869 = !DILocation(line: 1137, column: 33, scope: !3863)
!3870 = !DILocation(line: 1137, column: 36, scope: !3863)
!3871 = !DILocation(line: 1137, column: 32, scope: !3863)
!3872 = !DILocation(line: 1137, column: 7, scope: !3863)
!3873 = !DILocation(line: 1137, column: 18, scope: !3863)
!3874 = !DILocation(line: 1137, column: 23, scope: !3863)
!3875 = !DILocation(line: 1138, column: 11, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3835, file: !1, line: 1138, column: 10)
!3877 = !DILocation(line: 1138, column: 19, scope: !3876)
!3878 = !DILocation(line: 1138, column: 34, scope: !3876)
!3879 = !DILocation(line: 1138, column: 10, scope: !3835)
!3880 = !DILocation(line: 1139, column: 23, scope: !3876)
!3881 = !DILocation(line: 1139, column: 26, scope: !3876)
!3882 = !DILocation(line: 1139, column: 31, scope: !3876)
!3883 = !DILocation(line: 1139, column: 34, scope: !3876)
!3884 = !DILocation(line: 1139, column: 30, scope: !3876)
!3885 = !DILocation(line: 1139, column: 7, scope: !3876)
!3886 = !DILocation(line: 1139, column: 18, scope: !3876)
!3887 = !DILocation(line: 1139, column: 22, scope: !3876)
!3888 = !DILocation(line: 1140, column: 11, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3835, file: !1, line: 1140, column: 10)
!3890 = !DILocation(line: 1140, column: 19, scope: !3889)
!3891 = !DILocation(line: 1140, column: 35, scope: !3889)
!3892 = !DILocation(line: 1140, column: 40, scope: !3889)
!3893 = !DILocation(line: 1140, column: 43, scope: !3889)
!3894 = !DILocation(line: 1140, column: 46, scope: !3889)
!3895 = !DILocation(line: 1140, column: 57, scope: !3889)
!3896 = !DILocation(line: 1140, column: 10, scope: !3835)
!3897 = !DILocation(line: 1141, column: 24, scope: !3889)
!3898 = !DILocation(line: 1141, column: 27, scope: !3889)
!3899 = !DILocation(line: 1141, column: 33, scope: !3889)
!3900 = !DILocation(line: 1141, column: 36, scope: !3889)
!3901 = !DILocation(line: 1141, column: 32, scope: !3889)
!3902 = !DILocation(line: 1141, column: 7, scope: !3889)
!3903 = !DILocation(line: 1141, column: 18, scope: !3889)
!3904 = !DILocation(line: 1141, column: 23, scope: !3889)
!3905 = !DILocation(line: 1143, column: 1, scope: !3711)
!3906 = distinct !DISubprogram(name: "CompositeModulusAdd", scope: !1, file: !1, line: 1157, type: !3614, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!3907 = !DILocalVariable(name: "p", arg: 1, scope: !3906, file: !1, line: 1157, type: !3051)
!3908 = !DILocation(line: 1157, column: 65, scope: !3906)
!3909 = !DILocalVariable(name: "q", arg: 2, scope: !3906, file: !1, line: 1158, type: !3051)
!3910 = !DILocation(line: 1158, column: 28, scope: !3906)
!3911 = !DILocalVariable(name: "channel", arg: 3, scope: !3906, file: !1, line: 1158, type: !746)
!3912 = !DILocation(line: 1158, column: 48, scope: !3906)
!3913 = !DILocalVariable(name: "composite", arg: 4, scope: !3906, file: !1, line: 1159, type: !3082)
!3914 = !DILocation(line: 1159, column: 22, scope: !3906)
!3915 = !DILocation(line: 1161, column: 9, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 1161, column: 8)
!3917 = !DILocation(line: 1161, column: 17, scope: !3916)
!3918 = !DILocation(line: 1161, column: 33, scope: !3916)
!3919 = !DILocation(line: 1161, column: 8, scope: !3906)
!3920 = !DILocalVariable(name: "gamma", scope: !3921, file: !1, line: 1163, type: !519)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !1, line: 1161, column: 40)
!3922 = !DILocation(line: 1163, column: 7, scope: !3921)
!3923 = !DILocalVariable(name: "Sa", scope: !3921, file: !1, line: 1166, type: !710)
!3924 = !DILocation(line: 1166, column: 7, scope: !3921)
!3925 = !DILocalVariable(name: "Da", scope: !3921, file: !1, line: 1167, type: !710)
!3926 = !DILocation(line: 1167, column: 7, scope: !3921)
!3927 = !DILocation(line: 1169, column: 25, scope: !3921)
!3928 = !DILocation(line: 1169, column: 28, scope: !3921)
!3929 = !DILocation(line: 1169, column: 24, scope: !3921)
!3930 = !DILocation(line: 1169, column: 11, scope: !3921)
!3931 = !DILocation(line: 1169, column: 8, scope: !3921)
!3932 = !DILocation(line: 1169, column: 7, scope: !3921)
!3933 = !DILocation(line: 1170, column: 25, scope: !3921)
!3934 = !DILocation(line: 1170, column: 28, scope: !3921)
!3935 = !DILocation(line: 1170, column: 24, scope: !3921)
!3936 = !DILocation(line: 1170, column: 11, scope: !3921)
!3937 = !DILocation(line: 1170, column: 8, scope: !3921)
!3938 = !DILocation(line: 1170, column: 7, scope: !3921)
!3939 = !DILocation(line: 1171, column: 24, scope: !3921)
!3940 = !DILocation(line: 1171, column: 27, scope: !3921)
!3941 = !DILocation(line: 1171, column: 26, scope: !3921)
!3942 = !DILocation(line: 1171, column: 30, scope: !3921)
!3943 = !DILocation(line: 1171, column: 33, scope: !3921)
!3944 = !DILocation(line: 1171, column: 32, scope: !3921)
!3945 = !DILocation(line: 1171, column: 29, scope: !3921)
!3946 = !DILocation(line: 1171, column: 11, scope: !3921)
!3947 = !DILocation(line: 1171, column: 10, scope: !3921)
!3948 = !DILocation(line: 1172, column: 59, scope: !3921)
!3949 = !DILocation(line: 1172, column: 58, scope: !3921)
!3950 = !DILocation(line: 1172, column: 53, scope: !3921)
!3951 = !DILocation(line: 1172, column: 24, scope: !3921)
!3952 = !DILocation(line: 1172, column: 5, scope: !3921)
!3953 = !DILocation(line: 1172, column: 16, scope: !3921)
!3954 = !DILocation(line: 1172, column: 23, scope: !3921)
!3955 = !DILocation(line: 1173, column: 33, scope: !3921)
!3956 = !DILocation(line: 1173, column: 11, scope: !3921)
!3957 = !DILocation(line: 1173, column: 10, scope: !3921)
!3958 = !DILocation(line: 1174, column: 31, scope: !3921)
!3959 = !DILocation(line: 1174, column: 34, scope: !3921)
!3960 = !DILocation(line: 1174, column: 38, scope: !3921)
!3961 = !DILocation(line: 1174, column: 41, scope: !3921)
!3962 = !DILocation(line: 1174, column: 44, scope: !3921)
!3963 = !DILocation(line: 1174, column: 48, scope: !3921)
!3964 = !DILocation(line: 1174, column: 20, scope: !3921)
!3965 = !DILocation(line: 1174, column: 5, scope: !3921)
!3966 = !DILocation(line: 1174, column: 16, scope: !3921)
!3967 = !DILocation(line: 1174, column: 19, scope: !3921)
!3968 = !DILocation(line: 1175, column: 33, scope: !3921)
!3969 = !DILocation(line: 1175, column: 36, scope: !3921)
!3970 = !DILocation(line: 1175, column: 42, scope: !3921)
!3971 = !DILocation(line: 1175, column: 45, scope: !3921)
!3972 = !DILocation(line: 1175, column: 48, scope: !3921)
!3973 = !DILocation(line: 1175, column: 54, scope: !3921)
!3974 = !DILocation(line: 1175, column: 22, scope: !3921)
!3975 = !DILocation(line: 1175, column: 5, scope: !3921)
!3976 = !DILocation(line: 1175, column: 16, scope: !3921)
!3977 = !DILocation(line: 1175, column: 21, scope: !3921)
!3978 = !DILocation(line: 1176, column: 32, scope: !3921)
!3979 = !DILocation(line: 1176, column: 35, scope: !3921)
!3980 = !DILocation(line: 1176, column: 40, scope: !3921)
!3981 = !DILocation(line: 1176, column: 43, scope: !3921)
!3982 = !DILocation(line: 1176, column: 46, scope: !3921)
!3983 = !DILocation(line: 1176, column: 51, scope: !3921)
!3984 = !DILocation(line: 1176, column: 21, scope: !3921)
!3985 = !DILocation(line: 1176, column: 5, scope: !3921)
!3986 = !DILocation(line: 1176, column: 16, scope: !3921)
!3987 = !DILocation(line: 1176, column: 20, scope: !3921)
!3988 = !DILocation(line: 1177, column: 9, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3921, file: !1, line: 1177, column: 9)
!3990 = !DILocation(line: 1177, column: 12, scope: !3989)
!3991 = !DILocation(line: 1177, column: 23, scope: !3989)
!3992 = !DILocation(line: 1177, column: 9, scope: !3921)
!3993 = !DILocation(line: 1178, column: 35, scope: !3989)
!3994 = !DILocation(line: 1178, column: 38, scope: !3989)
!3995 = !DILocation(line: 1178, column: 44, scope: !3989)
!3996 = !DILocation(line: 1178, column: 47, scope: !3989)
!3997 = !DILocation(line: 1178, column: 50, scope: !3989)
!3998 = !DILocation(line: 1178, column: 56, scope: !3989)
!3999 = !DILocation(line: 1178, column: 24, scope: !3989)
!4000 = !DILocation(line: 1178, column: 7, scope: !3989)
!4001 = !DILocation(line: 1178, column: 18, scope: !3989)
!4002 = !DILocation(line: 1178, column: 23, scope: !3989)
!4003 = !DILocation(line: 1179, column: 3, scope: !3921)
!4004 = !DILocation(line: 1181, column: 11, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1181, column: 10)
!4006 = distinct !DILexicalBlock(scope: !3916, file: !1, line: 1180, column: 8)
!4007 = !DILocation(line: 1181, column: 19, scope: !4005)
!4008 = !DILocation(line: 1181, column: 35, scope: !4005)
!4009 = !DILocation(line: 1181, column: 10, scope: !4006)
!4010 = !DILocation(line: 1182, column: 63, scope: !4005)
!4011 = !DILocation(line: 1182, column: 66, scope: !4005)
!4012 = !DILocation(line: 1182, column: 62, scope: !4005)
!4013 = !DILocation(line: 1183, column: 29, scope: !4005)
!4014 = !DILocation(line: 1183, column: 32, scope: !4005)
!4015 = !DILocation(line: 1183, column: 28, scope: !4005)
!4016 = !DILocation(line: 1182, column: 39, scope: !4005)
!4017 = !DILocation(line: 1182, column: 38, scope: !4005)
!4018 = !DILocation(line: 1182, column: 7, scope: !4005)
!4019 = !DILocation(line: 1182, column: 18, scope: !4005)
!4020 = !DILocation(line: 1182, column: 25, scope: !4005)
!4021 = !DILocation(line: 1184, column: 11, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1184, column: 10)
!4023 = !DILocation(line: 1184, column: 19, scope: !4022)
!4024 = !DILocation(line: 1184, column: 33, scope: !4022)
!4025 = !DILocation(line: 1184, column: 10, scope: !4006)
!4026 = !DILocation(line: 1185, column: 33, scope: !4022)
!4027 = !DILocation(line: 1185, column: 36, scope: !4022)
!4028 = !DILocation(line: 1185, column: 44, scope: !4022)
!4029 = !DILocation(line: 1185, column: 47, scope: !4022)
!4030 = !DILocation(line: 1185, column: 22, scope: !4022)
!4031 = !DILocation(line: 1185, column: 7, scope: !4022)
!4032 = !DILocation(line: 1185, column: 18, scope: !4022)
!4033 = !DILocation(line: 1185, column: 21, scope: !4022)
!4034 = !DILocation(line: 1186, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1186, column: 10)
!4036 = !DILocation(line: 1186, column: 19, scope: !4035)
!4037 = !DILocation(line: 1186, column: 35, scope: !4035)
!4038 = !DILocation(line: 1186, column: 10, scope: !4006)
!4039 = !DILocation(line: 1187, column: 35, scope: !4035)
!4040 = !DILocation(line: 1187, column: 38, scope: !4035)
!4041 = !DILocation(line: 1187, column: 48, scope: !4035)
!4042 = !DILocation(line: 1187, column: 51, scope: !4035)
!4043 = !DILocation(line: 1187, column: 24, scope: !4035)
!4044 = !DILocation(line: 1187, column: 7, scope: !4035)
!4045 = !DILocation(line: 1187, column: 18, scope: !4035)
!4046 = !DILocation(line: 1187, column: 23, scope: !4035)
!4047 = !DILocation(line: 1188, column: 11, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1188, column: 10)
!4049 = !DILocation(line: 1188, column: 19, scope: !4048)
!4050 = !DILocation(line: 1188, column: 34, scope: !4048)
!4051 = !DILocation(line: 1188, column: 10, scope: !4006)
!4052 = !DILocation(line: 1189, column: 34, scope: !4048)
!4053 = !DILocation(line: 1189, column: 37, scope: !4048)
!4054 = !DILocation(line: 1189, column: 46, scope: !4048)
!4055 = !DILocation(line: 1189, column: 49, scope: !4048)
!4056 = !DILocation(line: 1189, column: 23, scope: !4048)
!4057 = !DILocation(line: 1189, column: 7, scope: !4048)
!4058 = !DILocation(line: 1189, column: 18, scope: !4048)
!4059 = !DILocation(line: 1189, column: 22, scope: !4048)
!4060 = !DILocation(line: 1190, column: 11, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1190, column: 10)
!4062 = !DILocation(line: 1190, column: 19, scope: !4061)
!4063 = !DILocation(line: 1190, column: 35, scope: !4061)
!4064 = !DILocation(line: 1190, column: 40, scope: !4061)
!4065 = !DILocation(line: 1190, column: 43, scope: !4061)
!4066 = !DILocation(line: 1190, column: 46, scope: !4061)
!4067 = !DILocation(line: 1190, column: 57, scope: !4061)
!4068 = !DILocation(line: 1190, column: 10, scope: !4006)
!4069 = !DILocation(line: 1191, column: 35, scope: !4061)
!4070 = !DILocation(line: 1191, column: 38, scope: !4061)
!4071 = !DILocation(line: 1191, column: 48, scope: !4061)
!4072 = !DILocation(line: 1191, column: 51, scope: !4061)
!4073 = !DILocation(line: 1191, column: 24, scope: !4061)
!4074 = !DILocation(line: 1191, column: 7, scope: !4061)
!4075 = !DILocation(line: 1191, column: 18, scope: !4061)
!4076 = !DILocation(line: 1191, column: 23, scope: !4061)
!4077 = !DILocation(line: 1193, column: 1, scope: !3906)
!4078 = distinct !DISubprogram(name: "CompositeModulusSubtract", scope: !1, file: !1, line: 1207, type: !3614, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!4079 = !DILocalVariable(name: "p", arg: 1, scope: !4078, file: !1, line: 1207, type: !3051)
!4080 = !DILocation(line: 1207, column: 70, scope: !4078)
!4081 = !DILocalVariable(name: "q", arg: 2, scope: !4078, file: !1, line: 1208, type: !3051)
!4082 = !DILocation(line: 1208, column: 28, scope: !4078)
!4083 = !DILocalVariable(name: "channel", arg: 3, scope: !4078, file: !1, line: 1208, type: !746)
!4084 = !DILocation(line: 1208, column: 48, scope: !4078)
!4085 = !DILocalVariable(name: "composite", arg: 4, scope: !4078, file: !1, line: 1209, type: !3082)
!4086 = !DILocation(line: 1209, column: 22, scope: !4078)
!4087 = !DILocation(line: 1211, column: 9, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4078, file: !1, line: 1211, column: 8)
!4089 = !DILocation(line: 1211, column: 17, scope: !4088)
!4090 = !DILocation(line: 1211, column: 33, scope: !4088)
!4091 = !DILocation(line: 1211, column: 8, scope: !4078)
!4092 = !DILocalVariable(name: "gamma", scope: !4093, file: !1, line: 1213, type: !519)
!4093 = distinct !DILexicalBlock(scope: !4088, file: !1, line: 1211, column: 40)
!4094 = !DILocation(line: 1213, column: 7, scope: !4093)
!4095 = !DILocalVariable(name: "Da", scope: !4093, file: !1, line: 1216, type: !710)
!4096 = !DILocation(line: 1216, column: 7, scope: !4093)
!4097 = !DILocalVariable(name: "Sa", scope: !4093, file: !1, line: 1217, type: !710)
!4098 = !DILocation(line: 1217, column: 7, scope: !4093)
!4099 = !DILocation(line: 1219, column: 25, scope: !4093)
!4100 = !DILocation(line: 1219, column: 28, scope: !4093)
!4101 = !DILocation(line: 1219, column: 24, scope: !4093)
!4102 = !DILocation(line: 1219, column: 11, scope: !4093)
!4103 = !DILocation(line: 1219, column: 8, scope: !4093)
!4104 = !DILocation(line: 1219, column: 7, scope: !4093)
!4105 = !DILocation(line: 1220, column: 25, scope: !4093)
!4106 = !DILocation(line: 1220, column: 28, scope: !4093)
!4107 = !DILocation(line: 1220, column: 24, scope: !4093)
!4108 = !DILocation(line: 1220, column: 11, scope: !4093)
!4109 = !DILocation(line: 1220, column: 8, scope: !4093)
!4110 = !DILocation(line: 1220, column: 7, scope: !4093)
!4111 = !DILocation(line: 1221, column: 26, scope: !4093)
!4112 = !DILocation(line: 1221, column: 29, scope: !4093)
!4113 = !DILocation(line: 1221, column: 28, scope: !4093)
!4114 = !DILocation(line: 1221, column: 32, scope: !4093)
!4115 = !DILocation(line: 1221, column: 35, scope: !4093)
!4116 = !DILocation(line: 1221, column: 34, scope: !4093)
!4117 = !DILocation(line: 1221, column: 31, scope: !4093)
!4118 = !DILocation(line: 1221, column: 13, scope: !4093)
!4119 = !DILocation(line: 1221, column: 11, scope: !4093)
!4120 = !DILocation(line: 1222, column: 59, scope: !4093)
!4121 = !DILocation(line: 1222, column: 58, scope: !4093)
!4122 = !DILocation(line: 1222, column: 53, scope: !4093)
!4123 = !DILocation(line: 1222, column: 24, scope: !4093)
!4124 = !DILocation(line: 1222, column: 5, scope: !4093)
!4125 = !DILocation(line: 1222, column: 16, scope: !4093)
!4126 = !DILocation(line: 1222, column: 23, scope: !4093)
!4127 = !DILocation(line: 1223, column: 33, scope: !4093)
!4128 = !DILocation(line: 1223, column: 11, scope: !4093)
!4129 = !DILocation(line: 1223, column: 10, scope: !4093)
!4130 = !DILocation(line: 1224, column: 36, scope: !4093)
!4131 = !DILocation(line: 1224, column: 39, scope: !4093)
!4132 = !DILocation(line: 1224, column: 43, scope: !4093)
!4133 = !DILocation(line: 1224, column: 46, scope: !4093)
!4134 = !DILocation(line: 1224, column: 49, scope: !4093)
!4135 = !DILocation(line: 1224, column: 53, scope: !4093)
!4136 = !DILocation(line: 1224, column: 20, scope: !4093)
!4137 = !DILocation(line: 1224, column: 5, scope: !4093)
!4138 = !DILocation(line: 1224, column: 16, scope: !4093)
!4139 = !DILocation(line: 1224, column: 19, scope: !4093)
!4140 = !DILocation(line: 1225, column: 38, scope: !4093)
!4141 = !DILocation(line: 1225, column: 41, scope: !4093)
!4142 = !DILocation(line: 1225, column: 47, scope: !4093)
!4143 = !DILocation(line: 1225, column: 50, scope: !4093)
!4144 = !DILocation(line: 1225, column: 53, scope: !4093)
!4145 = !DILocation(line: 1225, column: 59, scope: !4093)
!4146 = !DILocation(line: 1225, column: 22, scope: !4093)
!4147 = !DILocation(line: 1225, column: 5, scope: !4093)
!4148 = !DILocation(line: 1225, column: 16, scope: !4093)
!4149 = !DILocation(line: 1225, column: 21, scope: !4093)
!4150 = !DILocation(line: 1226, column: 37, scope: !4093)
!4151 = !DILocation(line: 1226, column: 40, scope: !4093)
!4152 = !DILocation(line: 1226, column: 45, scope: !4093)
!4153 = !DILocation(line: 1226, column: 48, scope: !4093)
!4154 = !DILocation(line: 1226, column: 51, scope: !4093)
!4155 = !DILocation(line: 1226, column: 56, scope: !4093)
!4156 = !DILocation(line: 1226, column: 21, scope: !4093)
!4157 = !DILocation(line: 1226, column: 5, scope: !4093)
!4158 = !DILocation(line: 1226, column: 16, scope: !4093)
!4159 = !DILocation(line: 1226, column: 20, scope: !4093)
!4160 = !DILocation(line: 1227, column: 9, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 1227, column: 9)
!4162 = !DILocation(line: 1227, column: 12, scope: !4161)
!4163 = !DILocation(line: 1227, column: 23, scope: !4161)
!4164 = !DILocation(line: 1227, column: 9, scope: !4093)
!4165 = !DILocation(line: 1228, column: 40, scope: !4161)
!4166 = !DILocation(line: 1228, column: 43, scope: !4161)
!4167 = !DILocation(line: 1228, column: 49, scope: !4161)
!4168 = !DILocation(line: 1228, column: 52, scope: !4161)
!4169 = !DILocation(line: 1228, column: 55, scope: !4161)
!4170 = !DILocation(line: 1228, column: 61, scope: !4161)
!4171 = !DILocation(line: 1228, column: 24, scope: !4161)
!4172 = !DILocation(line: 1228, column: 7, scope: !4161)
!4173 = !DILocation(line: 1228, column: 18, scope: !4161)
!4174 = !DILocation(line: 1228, column: 23, scope: !4161)
!4175 = !DILocation(line: 1229, column: 3, scope: !4093)
!4176 = !DILocation(line: 1231, column: 11, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1231, column: 10)
!4178 = distinct !DILexicalBlock(scope: !4088, file: !1, line: 1230, column: 8)
!4179 = !DILocation(line: 1231, column: 19, scope: !4177)
!4180 = !DILocation(line: 1231, column: 35, scope: !4177)
!4181 = !DILocation(line: 1231, column: 10, scope: !4178)
!4182 = !DILocation(line: 1232, column: 68, scope: !4177)
!4183 = !DILocation(line: 1232, column: 71, scope: !4177)
!4184 = !DILocation(line: 1232, column: 67, scope: !4177)
!4185 = !DILocation(line: 1233, column: 29, scope: !4177)
!4186 = !DILocation(line: 1233, column: 32, scope: !4177)
!4187 = !DILocation(line: 1233, column: 28, scope: !4177)
!4188 = !DILocation(line: 1232, column: 39, scope: !4177)
!4189 = !DILocation(line: 1232, column: 38, scope: !4177)
!4190 = !DILocation(line: 1232, column: 7, scope: !4177)
!4191 = !DILocation(line: 1232, column: 18, scope: !4177)
!4192 = !DILocation(line: 1232, column: 25, scope: !4177)
!4193 = !DILocation(line: 1234, column: 11, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1234, column: 10)
!4195 = !DILocation(line: 1234, column: 19, scope: !4194)
!4196 = !DILocation(line: 1234, column: 33, scope: !4194)
!4197 = !DILocation(line: 1234, column: 10, scope: !4178)
!4198 = !DILocation(line: 1235, column: 38, scope: !4194)
!4199 = !DILocation(line: 1235, column: 41, scope: !4194)
!4200 = !DILocation(line: 1235, column: 49, scope: !4194)
!4201 = !DILocation(line: 1235, column: 52, scope: !4194)
!4202 = !DILocation(line: 1235, column: 22, scope: !4194)
!4203 = !DILocation(line: 1235, column: 7, scope: !4194)
!4204 = !DILocation(line: 1235, column: 18, scope: !4194)
!4205 = !DILocation(line: 1235, column: 21, scope: !4194)
!4206 = !DILocation(line: 1236, column: 11, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1236, column: 10)
!4208 = !DILocation(line: 1236, column: 19, scope: !4207)
!4209 = !DILocation(line: 1236, column: 35, scope: !4207)
!4210 = !DILocation(line: 1236, column: 10, scope: !4178)
!4211 = !DILocation(line: 1237, column: 40, scope: !4207)
!4212 = !DILocation(line: 1237, column: 43, scope: !4207)
!4213 = !DILocation(line: 1237, column: 53, scope: !4207)
!4214 = !DILocation(line: 1237, column: 56, scope: !4207)
!4215 = !DILocation(line: 1237, column: 24, scope: !4207)
!4216 = !DILocation(line: 1237, column: 7, scope: !4207)
!4217 = !DILocation(line: 1237, column: 18, scope: !4207)
!4218 = !DILocation(line: 1237, column: 23, scope: !4207)
!4219 = !DILocation(line: 1238, column: 11, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1238, column: 10)
!4221 = !DILocation(line: 1238, column: 19, scope: !4220)
!4222 = !DILocation(line: 1238, column: 34, scope: !4220)
!4223 = !DILocation(line: 1238, column: 10, scope: !4178)
!4224 = !DILocation(line: 1239, column: 39, scope: !4220)
!4225 = !DILocation(line: 1239, column: 42, scope: !4220)
!4226 = !DILocation(line: 1239, column: 51, scope: !4220)
!4227 = !DILocation(line: 1239, column: 54, scope: !4220)
!4228 = !DILocation(line: 1239, column: 23, scope: !4220)
!4229 = !DILocation(line: 1239, column: 7, scope: !4220)
!4230 = !DILocation(line: 1239, column: 18, scope: !4220)
!4231 = !DILocation(line: 1239, column: 22, scope: !4220)
!4232 = !DILocation(line: 1240, column: 11, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1240, column: 10)
!4234 = !DILocation(line: 1240, column: 19, scope: !4233)
!4235 = !DILocation(line: 1240, column: 35, scope: !4233)
!4236 = !DILocation(line: 1240, column: 40, scope: !4233)
!4237 = !DILocation(line: 1240, column: 43, scope: !4233)
!4238 = !DILocation(line: 1240, column: 46, scope: !4233)
!4239 = !DILocation(line: 1240, column: 57, scope: !4233)
!4240 = !DILocation(line: 1240, column: 10, scope: !4178)
!4241 = !DILocation(line: 1241, column: 40, scope: !4233)
!4242 = !DILocation(line: 1241, column: 43, scope: !4233)
!4243 = !DILocation(line: 1241, column: 53, scope: !4233)
!4244 = !DILocation(line: 1241, column: 56, scope: !4233)
!4245 = !DILocation(line: 1241, column: 24, scope: !4233)
!4246 = !DILocation(line: 1241, column: 7, scope: !4233)
!4247 = !DILocation(line: 1241, column: 18, scope: !4233)
!4248 = !DILocation(line: 1241, column: 23, scope: !4233)
!4249 = !DILocation(line: 1243, column: 1, scope: !4078)
!4250 = distinct !DISubprogram(name: "CompositeDifference", scope: !1, file: !1, line: 456, type: !3614, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!4251 = !DILocalVariable(name: "p", arg: 1, scope: !4250, file: !1, line: 456, type: !3051)
!4252 = !DILocation(line: 456, column: 65, scope: !4250)
!4253 = !DILocalVariable(name: "q", arg: 2, scope: !4250, file: !1, line: 457, type: !3051)
!4254 = !DILocation(line: 457, column: 28, scope: !4250)
!4255 = !DILocalVariable(name: "channel", arg: 3, scope: !4250, file: !1, line: 457, type: !746)
!4256 = !DILocation(line: 457, column: 48, scope: !4250)
!4257 = !DILocalVariable(name: "composite", arg: 4, scope: !4250, file: !1, line: 458, type: !3082)
!4258 = !DILocation(line: 458, column: 22, scope: !4250)
!4259 = !DILocalVariable(name: "gamma", scope: !4250, file: !1, line: 461, type: !519)
!4260 = !DILocation(line: 461, column: 5, scope: !4250)
!4261 = !DILocalVariable(name: "Da", scope: !4250, file: !1, line: 464, type: !710)
!4262 = !DILocation(line: 464, column: 5, scope: !4250)
!4263 = !DILocalVariable(name: "Sa", scope: !4250, file: !1, line: 465, type: !710)
!4264 = !DILocation(line: 465, column: 5, scope: !4250)
!4265 = !DILocation(line: 467, column: 23, scope: !4250)
!4266 = !DILocation(line: 467, column: 26, scope: !4250)
!4267 = !DILocation(line: 467, column: 22, scope: !4250)
!4268 = !DILocation(line: 467, column: 9, scope: !4250)
!4269 = !DILocation(line: 467, column: 6, scope: !4250)
!4270 = !DILocation(line: 467, column: 5, scope: !4250)
!4271 = !DILocation(line: 468, column: 23, scope: !4250)
!4272 = !DILocation(line: 468, column: 26, scope: !4250)
!4273 = !DILocation(line: 468, column: 22, scope: !4250)
!4274 = !DILocation(line: 468, column: 9, scope: !4250)
!4275 = !DILocation(line: 468, column: 6, scope: !4250)
!4276 = !DILocation(line: 468, column: 5, scope: !4250)
!4277 = !DILocation(line: 469, column: 9, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4250, file: !1, line: 469, column: 8)
!4279 = !DILocation(line: 469, column: 17, scope: !4278)
!4280 = !DILocation(line: 469, column: 33, scope: !4278)
!4281 = !DILocation(line: 469, column: 8, scope: !4250)
!4282 = !DILocation(line: 470, column: 24, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4278, file: !1, line: 469, column: 40)
!4284 = !DILocation(line: 470, column: 27, scope: !4283)
!4285 = !DILocation(line: 470, column: 26, scope: !4283)
!4286 = !DILocation(line: 470, column: 30, scope: !4283)
!4287 = !DILocation(line: 470, column: 33, scope: !4283)
!4288 = !DILocation(line: 470, column: 32, scope: !4283)
!4289 = !DILocation(line: 470, column: 29, scope: !4283)
!4290 = !DILocation(line: 470, column: 11, scope: !4283)
!4291 = !DILocation(line: 470, column: 10, scope: !4283)
!4292 = !DILocation(line: 471, column: 59, scope: !4283)
!4293 = !DILocation(line: 471, column: 58, scope: !4283)
!4294 = !DILocation(line: 471, column: 53, scope: !4283)
!4295 = !DILocation(line: 471, column: 24, scope: !4283)
!4296 = !DILocation(line: 471, column: 5, scope: !4283)
!4297 = !DILocation(line: 471, column: 16, scope: !4283)
!4298 = !DILocation(line: 471, column: 23, scope: !4283)
!4299 = !DILocation(line: 472, column: 33, scope: !4283)
!4300 = !DILocation(line: 472, column: 11, scope: !4283)
!4301 = !DILocation(line: 472, column: 10, scope: !4283)
!4302 = !DILocation(line: 474, column: 20, scope: !4283)
!4303 = !DILocation(line: 474, column: 37, scope: !4283)
!4304 = !DILocation(line: 474, column: 40, scope: !4283)
!4305 = !DILocation(line: 474, column: 44, scope: !4283)
!4306 = !DILocation(line: 474, column: 47, scope: !4283)
!4307 = !DILocation(line: 474, column: 50, scope: !4283)
!4308 = !DILocation(line: 474, column: 54, scope: !4283)
!4309 = !DILocation(line: 474, column: 26, scope: !4283)
!4310 = !DILocation(line: 474, column: 25, scope: !4283)
!4311 = !DILocation(line: 474, column: 5, scope: !4283)
!4312 = !DILocation(line: 474, column: 16, scope: !4283)
!4313 = !DILocation(line: 474, column: 19, scope: !4283)
!4314 = !DILocation(line: 475, column: 22, scope: !4283)
!4315 = !DILocation(line: 475, column: 39, scope: !4283)
!4316 = !DILocation(line: 475, column: 42, scope: !4283)
!4317 = !DILocation(line: 475, column: 48, scope: !4283)
!4318 = !DILocation(line: 475, column: 51, scope: !4283)
!4319 = !DILocation(line: 475, column: 54, scope: !4283)
!4320 = !DILocation(line: 475, column: 60, scope: !4283)
!4321 = !DILocation(line: 475, column: 28, scope: !4283)
!4322 = !DILocation(line: 475, column: 27, scope: !4283)
!4323 = !DILocation(line: 475, column: 5, scope: !4283)
!4324 = !DILocation(line: 475, column: 16, scope: !4283)
!4325 = !DILocation(line: 475, column: 21, scope: !4283)
!4326 = !DILocation(line: 476, column: 21, scope: !4283)
!4327 = !DILocation(line: 476, column: 38, scope: !4283)
!4328 = !DILocation(line: 476, column: 41, scope: !4283)
!4329 = !DILocation(line: 476, column: 46, scope: !4283)
!4330 = !DILocation(line: 476, column: 49, scope: !4283)
!4331 = !DILocation(line: 476, column: 52, scope: !4283)
!4332 = !DILocation(line: 476, column: 57, scope: !4283)
!4333 = !DILocation(line: 476, column: 27, scope: !4283)
!4334 = !DILocation(line: 476, column: 26, scope: !4283)
!4335 = !DILocation(line: 476, column: 5, scope: !4283)
!4336 = !DILocation(line: 476, column: 16, scope: !4283)
!4337 = !DILocation(line: 476, column: 20, scope: !4283)
!4338 = !DILocation(line: 477, column: 9, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4283, file: !1, line: 477, column: 9)
!4340 = !DILocation(line: 477, column: 12, scope: !4339)
!4341 = !DILocation(line: 477, column: 23, scope: !4339)
!4342 = !DILocation(line: 477, column: 9, scope: !4283)
!4343 = !DILocation(line: 478, column: 24, scope: !4339)
!4344 = !DILocation(line: 478, column: 41, scope: !4339)
!4345 = !DILocation(line: 478, column: 44, scope: !4339)
!4346 = !DILocation(line: 478, column: 50, scope: !4339)
!4347 = !DILocation(line: 478, column: 53, scope: !4339)
!4348 = !DILocation(line: 478, column: 56, scope: !4339)
!4349 = !DILocation(line: 478, column: 62, scope: !4339)
!4350 = !DILocation(line: 478, column: 30, scope: !4339)
!4351 = !DILocation(line: 478, column: 29, scope: !4339)
!4352 = !DILocation(line: 478, column: 7, scope: !4339)
!4353 = !DILocation(line: 478, column: 18, scope: !4339)
!4354 = !DILocation(line: 478, column: 23, scope: !4339)
!4355 = !DILocation(line: 479, column: 3, scope: !4283)
!4356 = !DILocation(line: 481, column: 11, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 481, column: 10)
!4358 = distinct !DILexicalBlock(scope: !4278, file: !1, line: 480, column: 8)
!4359 = !DILocation(line: 481, column: 19, scope: !4357)
!4360 = !DILocation(line: 481, column: 35, scope: !4357)
!4361 = !DILocation(line: 481, column: 10, scope: !4358)
!4362 = !DILocation(line: 482, column: 44, scope: !4357)
!4363 = !DILocation(line: 482, column: 47, scope: !4357)
!4364 = !DILocation(line: 482, column: 57, scope: !4357)
!4365 = !DILocation(line: 482, column: 60, scope: !4357)
!4366 = !DILocation(line: 482, column: 55, scope: !4357)
!4367 = !DILocation(line: 482, column: 39, scope: !4357)
!4368 = !DILocation(line: 482, column: 38, scope: !4357)
!4369 = !DILocation(line: 482, column: 26, scope: !4357)
!4370 = !DILocation(line: 482, column: 7, scope: !4357)
!4371 = !DILocation(line: 482, column: 18, scope: !4357)
!4372 = !DILocation(line: 482, column: 25, scope: !4357)
!4373 = !DILocation(line: 483, column: 11, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 483, column: 10)
!4375 = !DILocation(line: 483, column: 19, scope: !4374)
!4376 = !DILocation(line: 483, column: 33, scope: !4374)
!4377 = !DILocation(line: 483, column: 10, scope: !4358)
!4378 = !DILocation(line: 484, column: 27, scope: !4374)
!4379 = !DILocation(line: 484, column: 30, scope: !4374)
!4380 = !DILocation(line: 484, column: 36, scope: !4374)
!4381 = !DILocation(line: 484, column: 39, scope: !4374)
!4382 = !DILocation(line: 484, column: 34, scope: !4374)
!4383 = !DILocation(line: 484, column: 22, scope: !4374)
!4384 = !DILocation(line: 484, column: 7, scope: !4374)
!4385 = !DILocation(line: 484, column: 18, scope: !4374)
!4386 = !DILocation(line: 484, column: 21, scope: !4374)
!4387 = !DILocation(line: 485, column: 11, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 485, column: 10)
!4389 = !DILocation(line: 485, column: 19, scope: !4388)
!4390 = !DILocation(line: 485, column: 35, scope: !4388)
!4391 = !DILocation(line: 485, column: 10, scope: !4358)
!4392 = !DILocation(line: 486, column: 29, scope: !4388)
!4393 = !DILocation(line: 486, column: 32, scope: !4388)
!4394 = !DILocation(line: 486, column: 40, scope: !4388)
!4395 = !DILocation(line: 486, column: 43, scope: !4388)
!4396 = !DILocation(line: 486, column: 38, scope: !4388)
!4397 = !DILocation(line: 486, column: 24, scope: !4388)
!4398 = !DILocation(line: 486, column: 7, scope: !4388)
!4399 = !DILocation(line: 486, column: 18, scope: !4388)
!4400 = !DILocation(line: 486, column: 23, scope: !4388)
!4401 = !DILocation(line: 487, column: 11, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 487, column: 10)
!4403 = !DILocation(line: 487, column: 19, scope: !4402)
!4404 = !DILocation(line: 487, column: 34, scope: !4402)
!4405 = !DILocation(line: 487, column: 10, scope: !4358)
!4406 = !DILocation(line: 488, column: 28, scope: !4402)
!4407 = !DILocation(line: 488, column: 31, scope: !4402)
!4408 = !DILocation(line: 488, column: 38, scope: !4402)
!4409 = !DILocation(line: 488, column: 41, scope: !4402)
!4410 = !DILocation(line: 488, column: 36, scope: !4402)
!4411 = !DILocation(line: 488, column: 23, scope: !4402)
!4412 = !DILocation(line: 488, column: 7, scope: !4402)
!4413 = !DILocation(line: 488, column: 18, scope: !4402)
!4414 = !DILocation(line: 488, column: 22, scope: !4402)
!4415 = !DILocation(line: 489, column: 11, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 489, column: 10)
!4417 = !DILocation(line: 489, column: 19, scope: !4416)
!4418 = !DILocation(line: 489, column: 35, scope: !4416)
!4419 = !DILocation(line: 489, column: 40, scope: !4416)
!4420 = !DILocation(line: 489, column: 43, scope: !4416)
!4421 = !DILocation(line: 489, column: 46, scope: !4416)
!4422 = !DILocation(line: 489, column: 57, scope: !4416)
!4423 = !DILocation(line: 489, column: 10, scope: !4358)
!4424 = !DILocation(line: 490, column: 29, scope: !4416)
!4425 = !DILocation(line: 490, column: 32, scope: !4416)
!4426 = !DILocation(line: 490, column: 40, scope: !4416)
!4427 = !DILocation(line: 490, column: 43, scope: !4416)
!4428 = !DILocation(line: 490, column: 38, scope: !4416)
!4429 = !DILocation(line: 490, column: 24, scope: !4416)
!4430 = !DILocation(line: 490, column: 7, scope: !4416)
!4431 = !DILocation(line: 490, column: 18, scope: !4416)
!4432 = !DILocation(line: 490, column: 23, scope: !4416)
!4433 = !DILocation(line: 492, column: 1, scope: !4250)
!4434 = distinct !DISubprogram(name: "CompositeExclusion", scope: !1, file: !1, line: 563, type: !3614, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!4435 = !DILocalVariable(name: "p", arg: 1, scope: !4434, file: !1, line: 563, type: !3051)
!4436 = !DILocation(line: 563, column: 64, scope: !4434)
!4437 = !DILocalVariable(name: "q", arg: 2, scope: !4434, file: !1, line: 564, type: !3051)
!4438 = !DILocation(line: 564, column: 28, scope: !4434)
!4439 = !DILocalVariable(name: "channel", arg: 3, scope: !4434, file: !1, line: 564, type: !746)
!4440 = !DILocation(line: 564, column: 48, scope: !4434)
!4441 = !DILocalVariable(name: "composite", arg: 4, scope: !4434, file: !1, line: 565, type: !3082)
!4442 = !DILocation(line: 565, column: 22, scope: !4434)
!4443 = !DILocalVariable(name: "gamma", scope: !4434, file: !1, line: 568, type: !710)
!4444 = !DILocation(line: 568, column: 5, scope: !4434)
!4445 = !DILocalVariable(name: "Sa", scope: !4434, file: !1, line: 569, type: !710)
!4446 = !DILocation(line: 569, column: 5, scope: !4434)
!4447 = !DILocalVariable(name: "Da", scope: !4434, file: !1, line: 570, type: !710)
!4448 = !DILocation(line: 570, column: 5, scope: !4434)
!4449 = !DILocation(line: 572, column: 23, scope: !4434)
!4450 = !DILocation(line: 572, column: 26, scope: !4434)
!4451 = !DILocation(line: 572, column: 22, scope: !4434)
!4452 = !DILocation(line: 572, column: 9, scope: !4434)
!4453 = !DILocation(line: 572, column: 6, scope: !4434)
!4454 = !DILocation(line: 572, column: 5, scope: !4434)
!4455 = !DILocation(line: 573, column: 23, scope: !4434)
!4456 = !DILocation(line: 573, column: 26, scope: !4434)
!4457 = !DILocation(line: 573, column: 22, scope: !4434)
!4458 = !DILocation(line: 573, column: 9, scope: !4434)
!4459 = !DILocation(line: 573, column: 6, scope: !4434)
!4460 = !DILocation(line: 573, column: 5, scope: !4434)
!4461 = !DILocation(line: 574, column: 9, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 574, column: 8)
!4463 = !DILocation(line: 574, column: 17, scope: !4462)
!4464 = !DILocation(line: 574, column: 33, scope: !4462)
!4465 = !DILocation(line: 574, column: 8, scope: !4434)
!4466 = !DILocation(line: 575, column: 24, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4462, file: !1, line: 574, column: 40)
!4468 = !DILocation(line: 575, column: 27, scope: !4467)
!4469 = !DILocation(line: 575, column: 26, scope: !4467)
!4470 = !DILocation(line: 575, column: 30, scope: !4467)
!4471 = !DILocation(line: 575, column: 33, scope: !4467)
!4472 = !DILocation(line: 575, column: 32, scope: !4467)
!4473 = !DILocation(line: 575, column: 29, scope: !4467)
!4474 = !DILocation(line: 575, column: 11, scope: !4467)
!4475 = !DILocation(line: 575, column: 10, scope: !4467)
!4476 = !DILocation(line: 576, column: 59, scope: !4467)
!4477 = !DILocation(line: 576, column: 58, scope: !4467)
!4478 = !DILocation(line: 576, column: 53, scope: !4467)
!4479 = !DILocation(line: 576, column: 24, scope: !4467)
!4480 = !DILocation(line: 576, column: 5, scope: !4467)
!4481 = !DILocation(line: 576, column: 16, scope: !4467)
!4482 = !DILocation(line: 576, column: 23, scope: !4467)
!4483 = !DILocation(line: 577, column: 30, scope: !4467)
!4484 = !DILocation(line: 577, column: 25, scope: !4467)
!4485 = !DILocation(line: 577, column: 37, scope: !4467)
!4486 = !DILocation(line: 577, column: 71, scope: !4467)
!4487 = !DILocation(line: 577, column: 23, scope: !4467)
!4488 = !DILocation(line: 577, column: 11, scope: !4467)
!4489 = !DILocation(line: 577, column: 10, scope: !4467)
!4490 = !DILocation(line: 578, column: 20, scope: !4467)
!4491 = !DILocation(line: 578, column: 49, scope: !4467)
!4492 = !DILocation(line: 578, column: 52, scope: !4467)
!4493 = !DILocation(line: 578, column: 48, scope: !4467)
!4494 = !DILocation(line: 578, column: 56, scope: !4467)
!4495 = !DILocation(line: 578, column: 55, scope: !4467)
!4496 = !DILocation(line: 578, column: 36, scope: !4467)
!4497 = !DILocation(line: 578, column: 59, scope: !4467)
!4498 = !DILocation(line: 579, column: 7, scope: !4467)
!4499 = !DILocation(line: 579, column: 10, scope: !4467)
!4500 = !DILocation(line: 578, column: 74, scope: !4467)
!4501 = !DILocation(line: 579, column: 14, scope: !4467)
!4502 = !DILocation(line: 579, column: 13, scope: !4467)
!4503 = !DILocation(line: 578, column: 62, scope: !4467)
!4504 = !DILocation(line: 579, column: 17, scope: !4467)
!4505 = !DILocation(line: 578, column: 26, scope: !4467)
!4506 = !DILocation(line: 578, column: 25, scope: !4467)
!4507 = !DILocation(line: 578, column: 5, scope: !4467)
!4508 = !DILocation(line: 578, column: 16, scope: !4467)
!4509 = !DILocation(line: 578, column: 19, scope: !4467)
!4510 = !DILocation(line: 580, column: 22, scope: !4467)
!4511 = !DILocation(line: 580, column: 51, scope: !4467)
!4512 = !DILocation(line: 580, column: 54, scope: !4467)
!4513 = !DILocation(line: 580, column: 50, scope: !4467)
!4514 = !DILocation(line: 580, column: 60, scope: !4467)
!4515 = !DILocation(line: 580, column: 59, scope: !4467)
!4516 = !DILocation(line: 580, column: 38, scope: !4467)
!4517 = !DILocation(line: 580, column: 63, scope: !4467)
!4518 = !DILocation(line: 581, column: 7, scope: !4467)
!4519 = !DILocation(line: 581, column: 10, scope: !4467)
!4520 = !DILocation(line: 580, column: 78, scope: !4467)
!4521 = !DILocation(line: 581, column: 16, scope: !4467)
!4522 = !DILocation(line: 581, column: 15, scope: !4467)
!4523 = !DILocation(line: 580, column: 66, scope: !4467)
!4524 = !DILocation(line: 581, column: 19, scope: !4467)
!4525 = !DILocation(line: 580, column: 28, scope: !4467)
!4526 = !DILocation(line: 580, column: 27, scope: !4467)
!4527 = !DILocation(line: 580, column: 5, scope: !4467)
!4528 = !DILocation(line: 580, column: 16, scope: !4467)
!4529 = !DILocation(line: 580, column: 21, scope: !4467)
!4530 = !DILocation(line: 582, column: 21, scope: !4467)
!4531 = !DILocation(line: 582, column: 50, scope: !4467)
!4532 = !DILocation(line: 582, column: 53, scope: !4467)
!4533 = !DILocation(line: 582, column: 49, scope: !4467)
!4534 = !DILocation(line: 582, column: 58, scope: !4467)
!4535 = !DILocation(line: 582, column: 57, scope: !4467)
!4536 = !DILocation(line: 582, column: 37, scope: !4467)
!4537 = !DILocation(line: 582, column: 61, scope: !4467)
!4538 = !DILocation(line: 583, column: 7, scope: !4467)
!4539 = !DILocation(line: 583, column: 10, scope: !4467)
!4540 = !DILocation(line: 582, column: 76, scope: !4467)
!4541 = !DILocation(line: 583, column: 15, scope: !4467)
!4542 = !DILocation(line: 583, column: 14, scope: !4467)
!4543 = !DILocation(line: 582, column: 64, scope: !4467)
!4544 = !DILocation(line: 583, column: 18, scope: !4467)
!4545 = !DILocation(line: 582, column: 27, scope: !4467)
!4546 = !DILocation(line: 582, column: 26, scope: !4467)
!4547 = !DILocation(line: 582, column: 5, scope: !4467)
!4548 = !DILocation(line: 582, column: 16, scope: !4467)
!4549 = !DILocation(line: 582, column: 20, scope: !4467)
!4550 = !DILocation(line: 584, column: 9, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4467, file: !1, line: 584, column: 9)
!4552 = !DILocation(line: 584, column: 12, scope: !4551)
!4553 = !DILocation(line: 584, column: 23, scope: !4551)
!4554 = !DILocation(line: 584, column: 9, scope: !4467)
!4555 = !DILocation(line: 585, column: 24, scope: !4551)
!4556 = !DILocation(line: 585, column: 53, scope: !4551)
!4557 = !DILocation(line: 585, column: 56, scope: !4551)
!4558 = !DILocation(line: 585, column: 52, scope: !4551)
!4559 = !DILocation(line: 585, column: 62, scope: !4551)
!4560 = !DILocation(line: 585, column: 61, scope: !4551)
!4561 = !DILocation(line: 585, column: 40, scope: !4551)
!4562 = !DILocation(line: 585, column: 65, scope: !4551)
!4563 = !DILocation(line: 586, column: 9, scope: !4551)
!4564 = !DILocation(line: 586, column: 12, scope: !4551)
!4565 = !DILocation(line: 585, column: 80, scope: !4551)
!4566 = !DILocation(line: 586, column: 18, scope: !4551)
!4567 = !DILocation(line: 586, column: 17, scope: !4551)
!4568 = !DILocation(line: 585, column: 68, scope: !4551)
!4569 = !DILocation(line: 586, column: 21, scope: !4551)
!4570 = !DILocation(line: 585, column: 30, scope: !4551)
!4571 = !DILocation(line: 585, column: 29, scope: !4551)
!4572 = !DILocation(line: 585, column: 7, scope: !4551)
!4573 = !DILocation(line: 585, column: 18, scope: !4551)
!4574 = !DILocation(line: 585, column: 23, scope: !4551)
!4575 = !DILocation(line: 587, column: 3, scope: !4467)
!4576 = !DILocation(line: 589, column: 11, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 589, column: 10)
!4578 = distinct !DILexicalBlock(scope: !4462, file: !1, line: 588, column: 8)
!4579 = !DILocation(line: 589, column: 19, scope: !4577)
!4580 = !DILocation(line: 589, column: 35, scope: !4577)
!4581 = !DILocation(line: 589, column: 10, scope: !4578)
!4582 = !DILocation(line: 590, column: 54, scope: !4577)
!4583 = !DILocation(line: 590, column: 61, scope: !4577)
!4584 = !DILocation(line: 590, column: 44, scope: !4577)
!4585 = !DILocation(line: 590, column: 43, scope: !4577)
!4586 = !DILocation(line: 590, column: 38, scope: !4577)
!4587 = !DILocation(line: 590, column: 26, scope: !4577)
!4588 = !DILocation(line: 590, column: 7, scope: !4577)
!4589 = !DILocation(line: 590, column: 18, scope: !4577)
!4590 = !DILocation(line: 590, column: 25, scope: !4577)
!4591 = !DILocation(line: 591, column: 11, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 591, column: 10)
!4593 = !DILocation(line: 591, column: 19, scope: !4592)
!4594 = !DILocation(line: 591, column: 33, scope: !4592)
!4595 = !DILocation(line: 591, column: 10, scope: !4578)
!4596 = !DILocation(line: 593, column: 34, scope: !4592)
!4597 = !DILocation(line: 593, column: 37, scope: !4592)
!4598 = !DILocation(line: 593, column: 33, scope: !4592)
!4599 = !DILocation(line: 593, column: 21, scope: !4592)
!4600 = !DILocation(line: 593, column: 58, scope: !4592)
!4601 = !DILocation(line: 593, column: 61, scope: !4592)
!4602 = !DILocation(line: 593, column: 57, scope: !4592)
!4603 = !DILocation(line: 593, column: 45, scope: !4592)
!4604 = !DILocation(line: 593, column: 11, scope: !4592)
!4605 = !DILocation(line: 592, column: 34, scope: !4592)
!4606 = !DILocation(line: 592, column: 7, scope: !4592)
!4607 = !DILocation(line: 592, column: 18, scope: !4592)
!4608 = !DILocation(line: 592, column: 21, scope: !4592)
!4609 = !DILocation(line: 594, column: 11, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 594, column: 10)
!4611 = !DILocation(line: 594, column: 19, scope: !4610)
!4612 = !DILocation(line: 594, column: 35, scope: !4610)
!4613 = !DILocation(line: 594, column: 10, scope: !4578)
!4614 = !DILocation(line: 596, column: 34, scope: !4610)
!4615 = !DILocation(line: 596, column: 37, scope: !4610)
!4616 = !DILocation(line: 596, column: 33, scope: !4610)
!4617 = !DILocation(line: 596, column: 21, scope: !4610)
!4618 = !DILocation(line: 596, column: 60, scope: !4610)
!4619 = !DILocation(line: 596, column: 63, scope: !4610)
!4620 = !DILocation(line: 596, column: 59, scope: !4610)
!4621 = !DILocation(line: 596, column: 47, scope: !4610)
!4622 = !DILocation(line: 596, column: 11, scope: !4610)
!4623 = !DILocation(line: 595, column: 36, scope: !4610)
!4624 = !DILocation(line: 595, column: 7, scope: !4610)
!4625 = !DILocation(line: 595, column: 18, scope: !4610)
!4626 = !DILocation(line: 595, column: 23, scope: !4610)
!4627 = !DILocation(line: 597, column: 11, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 597, column: 10)
!4629 = !DILocation(line: 597, column: 19, scope: !4628)
!4630 = !DILocation(line: 597, column: 34, scope: !4628)
!4631 = !DILocation(line: 597, column: 10, scope: !4578)
!4632 = !DILocation(line: 599, column: 34, scope: !4628)
!4633 = !DILocation(line: 599, column: 37, scope: !4628)
!4634 = !DILocation(line: 599, column: 33, scope: !4628)
!4635 = !DILocation(line: 599, column: 21, scope: !4628)
!4636 = !DILocation(line: 599, column: 59, scope: !4628)
!4637 = !DILocation(line: 599, column: 62, scope: !4628)
!4638 = !DILocation(line: 599, column: 58, scope: !4628)
!4639 = !DILocation(line: 599, column: 46, scope: !4628)
!4640 = !DILocation(line: 599, column: 11, scope: !4628)
!4641 = !DILocation(line: 598, column: 35, scope: !4628)
!4642 = !DILocation(line: 598, column: 7, scope: !4628)
!4643 = !DILocation(line: 598, column: 18, scope: !4628)
!4644 = !DILocation(line: 598, column: 22, scope: !4628)
!4645 = !DILocation(line: 600, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 600, column: 10)
!4647 = !DILocation(line: 600, column: 19, scope: !4646)
!4648 = !DILocation(line: 600, column: 35, scope: !4646)
!4649 = !DILocation(line: 600, column: 40, scope: !4646)
!4650 = !DILocation(line: 600, column: 43, scope: !4646)
!4651 = !DILocation(line: 600, column: 46, scope: !4646)
!4652 = !DILocation(line: 600, column: 57, scope: !4646)
!4653 = !DILocation(line: 600, column: 10, scope: !4578)
!4654 = !DILocation(line: 602, column: 34, scope: !4646)
!4655 = !DILocation(line: 602, column: 37, scope: !4646)
!4656 = !DILocation(line: 602, column: 33, scope: !4646)
!4657 = !DILocation(line: 602, column: 21, scope: !4646)
!4658 = !DILocation(line: 602, column: 60, scope: !4646)
!4659 = !DILocation(line: 602, column: 63, scope: !4646)
!4660 = !DILocation(line: 602, column: 59, scope: !4646)
!4661 = !DILocation(line: 602, column: 47, scope: !4646)
!4662 = !DILocation(line: 602, column: 11, scope: !4646)
!4663 = !DILocation(line: 601, column: 36, scope: !4646)
!4664 = !DILocation(line: 601, column: 7, scope: !4646)
!4665 = !DILocation(line: 601, column: 18, scope: !4646)
!4666 = !DILocation(line: 601, column: 23, scope: !4646)
!4667 = !DILocation(line: 604, column: 1, scope: !4434)
!4668 = distinct !DISubprogram(name: "CompositeMultiply", scope: !1, file: !1, line: 1251, type: !3614, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!4669 = !DILocalVariable(name: "p", arg: 1, scope: !4668, file: !1, line: 1251, type: !3051)
!4670 = !DILocation(line: 1251, column: 63, scope: !4668)
!4671 = !DILocalVariable(name: "q", arg: 2, scope: !4668, file: !1, line: 1252, type: !3051)
!4672 = !DILocation(line: 1252, column: 28, scope: !4668)
!4673 = !DILocalVariable(name: "channel", arg: 3, scope: !4668, file: !1, line: 1252, type: !746)
!4674 = !DILocation(line: 1252, column: 48, scope: !4668)
!4675 = !DILocalVariable(name: "composite", arg: 4, scope: !4668, file: !1, line: 1253, type: !3082)
!4676 = !DILocation(line: 1253, column: 22, scope: !4668)
!4677 = !DILocalVariable(name: "Da", scope: !4668, file: !1, line: 1256, type: !710)
!4678 = !DILocation(line: 1256, column: 5, scope: !4668)
!4679 = !DILocalVariable(name: "gamma", scope: !4668, file: !1, line: 1257, type: !710)
!4680 = !DILocation(line: 1257, column: 5, scope: !4668)
!4681 = !DILocalVariable(name: "Sa", scope: !4668, file: !1, line: 1258, type: !710)
!4682 = !DILocation(line: 1258, column: 5, scope: !4668)
!4683 = !DILocation(line: 1260, column: 23, scope: !4668)
!4684 = !DILocation(line: 1260, column: 26, scope: !4668)
!4685 = !DILocation(line: 1260, column: 22, scope: !4668)
!4686 = !DILocation(line: 1260, column: 9, scope: !4668)
!4687 = !DILocation(line: 1260, column: 6, scope: !4668)
!4688 = !DILocation(line: 1260, column: 5, scope: !4668)
!4689 = !DILocation(line: 1261, column: 23, scope: !4668)
!4690 = !DILocation(line: 1261, column: 26, scope: !4668)
!4691 = !DILocation(line: 1261, column: 22, scope: !4668)
!4692 = !DILocation(line: 1261, column: 9, scope: !4668)
!4693 = !DILocation(line: 1261, column: 6, scope: !4668)
!4694 = !DILocation(line: 1261, column: 5, scope: !4668)
!4695 = !DILocation(line: 1262, column: 9, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1262, column: 8)
!4697 = !DILocation(line: 1262, column: 17, scope: !4696)
!4698 = !DILocation(line: 1262, column: 33, scope: !4696)
!4699 = !DILocation(line: 1262, column: 8, scope: !4668)
!4700 = !DILocation(line: 1263, column: 24, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 1262, column: 40)
!4702 = !DILocation(line: 1263, column: 27, scope: !4701)
!4703 = !DILocation(line: 1263, column: 26, scope: !4701)
!4704 = !DILocation(line: 1263, column: 30, scope: !4701)
!4705 = !DILocation(line: 1263, column: 33, scope: !4701)
!4706 = !DILocation(line: 1263, column: 32, scope: !4701)
!4707 = !DILocation(line: 1263, column: 29, scope: !4701)
!4708 = !DILocation(line: 1263, column: 11, scope: !4701)
!4709 = !DILocation(line: 1263, column: 10, scope: !4701)
!4710 = !DILocation(line: 1264, column: 59, scope: !4701)
!4711 = !DILocation(line: 1264, column: 58, scope: !4701)
!4712 = !DILocation(line: 1264, column: 53, scope: !4701)
!4713 = !DILocation(line: 1264, column: 24, scope: !4701)
!4714 = !DILocation(line: 1264, column: 5, scope: !4701)
!4715 = !DILocation(line: 1264, column: 16, scope: !4701)
!4716 = !DILocation(line: 1264, column: 23, scope: !4701)
!4717 = !DILocation(line: 1265, column: 30, scope: !4701)
!4718 = !DILocation(line: 1265, column: 25, scope: !4701)
!4719 = !DILocation(line: 1265, column: 37, scope: !4701)
!4720 = !DILocation(line: 1265, column: 71, scope: !4701)
!4721 = !DILocation(line: 1265, column: 23, scope: !4701)
!4722 = !DILocation(line: 1265, column: 11, scope: !4701)
!4723 = !DILocation(line: 1265, column: 10, scope: !4701)
!4724 = !DILocation(line: 1266, column: 20, scope: !4701)
!4725 = !DILocation(line: 1266, column: 48, scope: !4701)
!4726 = !DILocation(line: 1266, column: 51, scope: !4701)
!4727 = !DILocation(line: 1266, column: 47, scope: !4701)
!4728 = !DILocation(line: 1266, column: 55, scope: !4701)
!4729 = !DILocation(line: 1266, column: 54, scope: !4701)
!4730 = !DILocation(line: 1266, column: 35, scope: !4701)
!4731 = !DILocation(line: 1266, column: 58, scope: !4701)
!4732 = !DILocation(line: 1267, column: 7, scope: !4701)
!4733 = !DILocation(line: 1267, column: 10, scope: !4701)
!4734 = !DILocation(line: 1266, column: 73, scope: !4701)
!4735 = !DILocation(line: 1267, column: 14, scope: !4701)
!4736 = !DILocation(line: 1267, column: 13, scope: !4701)
!4737 = !DILocation(line: 1266, column: 61, scope: !4701)
!4738 = !DILocation(line: 1267, column: 17, scope: !4701)
!4739 = !DILocation(line: 1266, column: 26, scope: !4701)
!4740 = !DILocation(line: 1266, column: 25, scope: !4701)
!4741 = !DILocation(line: 1266, column: 5, scope: !4701)
!4742 = !DILocation(line: 1266, column: 16, scope: !4701)
!4743 = !DILocation(line: 1266, column: 19, scope: !4701)
!4744 = !DILocation(line: 1268, column: 22, scope: !4701)
!4745 = !DILocation(line: 1268, column: 50, scope: !4701)
!4746 = !DILocation(line: 1268, column: 53, scope: !4701)
!4747 = !DILocation(line: 1268, column: 49, scope: !4701)
!4748 = !DILocation(line: 1268, column: 59, scope: !4701)
!4749 = !DILocation(line: 1268, column: 58, scope: !4701)
!4750 = !DILocation(line: 1268, column: 37, scope: !4701)
!4751 = !DILocation(line: 1268, column: 62, scope: !4701)
!4752 = !DILocation(line: 1269, column: 7, scope: !4701)
!4753 = !DILocation(line: 1269, column: 10, scope: !4701)
!4754 = !DILocation(line: 1268, column: 77, scope: !4701)
!4755 = !DILocation(line: 1269, column: 16, scope: !4701)
!4756 = !DILocation(line: 1269, column: 15, scope: !4701)
!4757 = !DILocation(line: 1268, column: 65, scope: !4701)
!4758 = !DILocation(line: 1269, column: 19, scope: !4701)
!4759 = !DILocation(line: 1268, column: 28, scope: !4701)
!4760 = !DILocation(line: 1268, column: 27, scope: !4701)
!4761 = !DILocation(line: 1268, column: 5, scope: !4701)
!4762 = !DILocation(line: 1268, column: 16, scope: !4701)
!4763 = !DILocation(line: 1268, column: 21, scope: !4701)
!4764 = !DILocation(line: 1270, column: 21, scope: !4701)
!4765 = !DILocation(line: 1270, column: 49, scope: !4701)
!4766 = !DILocation(line: 1270, column: 52, scope: !4701)
!4767 = !DILocation(line: 1270, column: 48, scope: !4701)
!4768 = !DILocation(line: 1270, column: 57, scope: !4701)
!4769 = !DILocation(line: 1270, column: 56, scope: !4701)
!4770 = !DILocation(line: 1270, column: 36, scope: !4701)
!4771 = !DILocation(line: 1270, column: 60, scope: !4701)
!4772 = !DILocation(line: 1271, column: 7, scope: !4701)
!4773 = !DILocation(line: 1271, column: 10, scope: !4701)
!4774 = !DILocation(line: 1270, column: 75, scope: !4701)
!4775 = !DILocation(line: 1271, column: 15, scope: !4701)
!4776 = !DILocation(line: 1271, column: 14, scope: !4701)
!4777 = !DILocation(line: 1270, column: 63, scope: !4701)
!4778 = !DILocation(line: 1271, column: 18, scope: !4701)
!4779 = !DILocation(line: 1270, column: 27, scope: !4701)
!4780 = !DILocation(line: 1270, column: 26, scope: !4701)
!4781 = !DILocation(line: 1270, column: 5, scope: !4701)
!4782 = !DILocation(line: 1270, column: 16, scope: !4701)
!4783 = !DILocation(line: 1270, column: 20, scope: !4701)
!4784 = !DILocation(line: 1272, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4701, file: !1, line: 1272, column: 9)
!4786 = !DILocation(line: 1272, column: 12, scope: !4785)
!4787 = !DILocation(line: 1272, column: 23, scope: !4785)
!4788 = !DILocation(line: 1272, column: 9, scope: !4701)
!4789 = !DILocation(line: 1273, column: 24, scope: !4785)
!4790 = !DILocation(line: 1273, column: 52, scope: !4785)
!4791 = !DILocation(line: 1273, column: 55, scope: !4785)
!4792 = !DILocation(line: 1273, column: 51, scope: !4785)
!4793 = !DILocation(line: 1273, column: 61, scope: !4785)
!4794 = !DILocation(line: 1273, column: 60, scope: !4785)
!4795 = !DILocation(line: 1273, column: 39, scope: !4785)
!4796 = !DILocation(line: 1273, column: 64, scope: !4785)
!4797 = !DILocation(line: 1274, column: 9, scope: !4785)
!4798 = !DILocation(line: 1274, column: 12, scope: !4785)
!4799 = !DILocation(line: 1273, column: 79, scope: !4785)
!4800 = !DILocation(line: 1274, column: 18, scope: !4785)
!4801 = !DILocation(line: 1274, column: 17, scope: !4785)
!4802 = !DILocation(line: 1273, column: 67, scope: !4785)
!4803 = !DILocation(line: 1274, column: 21, scope: !4785)
!4804 = !DILocation(line: 1273, column: 30, scope: !4785)
!4805 = !DILocation(line: 1273, column: 29, scope: !4785)
!4806 = !DILocation(line: 1273, column: 7, scope: !4785)
!4807 = !DILocation(line: 1273, column: 18, scope: !4785)
!4808 = !DILocation(line: 1273, column: 23, scope: !4785)
!4809 = !DILocation(line: 1275, column: 3, scope: !4701)
!4810 = !DILocation(line: 1277, column: 11, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1277, column: 10)
!4812 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 1276, column: 8)
!4813 = !DILocation(line: 1277, column: 19, scope: !4811)
!4814 = !DILocation(line: 1277, column: 35, scope: !4811)
!4815 = !DILocation(line: 1277, column: 10, scope: !4812)
!4816 = !DILocation(line: 1278, column: 44, scope: !4811)
!4817 = !DILocation(line: 1278, column: 47, scope: !4811)
!4818 = !DILocation(line: 1278, column: 46, scope: !4811)
!4819 = !DILocation(line: 1278, column: 43, scope: !4811)
!4820 = !DILocation(line: 1278, column: 38, scope: !4811)
!4821 = !DILocation(line: 1278, column: 26, scope: !4811)
!4822 = !DILocation(line: 1278, column: 7, scope: !4811)
!4823 = !DILocation(line: 1278, column: 18, scope: !4811)
!4824 = !DILocation(line: 1278, column: 25, scope: !4811)
!4825 = !DILocation(line: 1279, column: 11, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1279, column: 10)
!4827 = !DILocation(line: 1279, column: 19, scope: !4826)
!4828 = !DILocation(line: 1279, column: 33, scope: !4826)
!4829 = !DILocation(line: 1279, column: 10, scope: !4812)
!4830 = !DILocation(line: 1280, column: 35, scope: !4826)
!4831 = !DILocation(line: 1280, column: 38, scope: !4826)
!4832 = !DILocation(line: 1280, column: 34, scope: !4826)
!4833 = !DILocation(line: 1280, column: 42, scope: !4826)
!4834 = !DILocation(line: 1280, column: 45, scope: !4826)
!4835 = !DILocation(line: 1280, column: 41, scope: !4826)
!4836 = !DILocation(line: 1280, column: 22, scope: !4826)
!4837 = !DILocation(line: 1280, column: 7, scope: !4826)
!4838 = !DILocation(line: 1280, column: 18, scope: !4826)
!4839 = !DILocation(line: 1280, column: 21, scope: !4826)
!4840 = !DILocation(line: 1281, column: 11, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1281, column: 10)
!4842 = !DILocation(line: 1281, column: 19, scope: !4841)
!4843 = !DILocation(line: 1281, column: 35, scope: !4841)
!4844 = !DILocation(line: 1281, column: 10, scope: !4812)
!4845 = !DILocation(line: 1282, column: 37, scope: !4841)
!4846 = !DILocation(line: 1282, column: 40, scope: !4841)
!4847 = !DILocation(line: 1282, column: 36, scope: !4841)
!4848 = !DILocation(line: 1282, column: 46, scope: !4841)
!4849 = !DILocation(line: 1282, column: 49, scope: !4841)
!4850 = !DILocation(line: 1282, column: 45, scope: !4841)
!4851 = !DILocation(line: 1282, column: 24, scope: !4841)
!4852 = !DILocation(line: 1282, column: 7, scope: !4841)
!4853 = !DILocation(line: 1282, column: 18, scope: !4841)
!4854 = !DILocation(line: 1282, column: 23, scope: !4841)
!4855 = !DILocation(line: 1283, column: 11, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1283, column: 10)
!4857 = !DILocation(line: 1283, column: 19, scope: !4856)
!4858 = !DILocation(line: 1283, column: 34, scope: !4856)
!4859 = !DILocation(line: 1283, column: 10, scope: !4812)
!4860 = !DILocation(line: 1284, column: 36, scope: !4856)
!4861 = !DILocation(line: 1284, column: 39, scope: !4856)
!4862 = !DILocation(line: 1284, column: 35, scope: !4856)
!4863 = !DILocation(line: 1284, column: 44, scope: !4856)
!4864 = !DILocation(line: 1284, column: 47, scope: !4856)
!4865 = !DILocation(line: 1284, column: 43, scope: !4856)
!4866 = !DILocation(line: 1284, column: 23, scope: !4856)
!4867 = !DILocation(line: 1284, column: 7, scope: !4856)
!4868 = !DILocation(line: 1284, column: 18, scope: !4856)
!4869 = !DILocation(line: 1284, column: 22, scope: !4856)
!4870 = !DILocation(line: 1285, column: 11, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1285, column: 10)
!4872 = !DILocation(line: 1285, column: 19, scope: !4871)
!4873 = !DILocation(line: 1285, column: 35, scope: !4871)
!4874 = !DILocation(line: 1285, column: 40, scope: !4871)
!4875 = !DILocation(line: 1285, column: 43, scope: !4871)
!4876 = !DILocation(line: 1285, column: 46, scope: !4871)
!4877 = !DILocation(line: 1285, column: 57, scope: !4871)
!4878 = !DILocation(line: 1285, column: 10, scope: !4812)
!4879 = !DILocation(line: 1286, column: 37, scope: !4871)
!4880 = !DILocation(line: 1286, column: 40, scope: !4871)
!4881 = !DILocation(line: 1286, column: 36, scope: !4871)
!4882 = !DILocation(line: 1286, column: 46, scope: !4871)
!4883 = !DILocation(line: 1286, column: 49, scope: !4871)
!4884 = !DILocation(line: 1286, column: 45, scope: !4871)
!4885 = !DILocation(line: 1286, column: 24, scope: !4871)
!4886 = !DILocation(line: 1286, column: 7, scope: !4871)
!4887 = !DILocation(line: 1286, column: 18, scope: !4871)
!4888 = !DILocation(line: 1286, column: 23, scope: !4871)
!4889 = !DILocation(line: 1288, column: 1, scope: !4668)
!4890 = distinct !DISubprogram(name: "CompositeScreen", scope: !1, file: !1, line: 1413, type: !3614, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!4891 = !DILocalVariable(name: "p", arg: 1, scope: !4890, file: !1, line: 1413, type: !3051)
!4892 = !DILocation(line: 1413, column: 61, scope: !4890)
!4893 = !DILocalVariable(name: "q", arg: 2, scope: !4890, file: !1, line: 1414, type: !3051)
!4894 = !DILocation(line: 1414, column: 28, scope: !4890)
!4895 = !DILocalVariable(name: "channel", arg: 3, scope: !4890, file: !1, line: 1414, type: !746)
!4896 = !DILocation(line: 1414, column: 48, scope: !4890)
!4897 = !DILocalVariable(name: "composite", arg: 4, scope: !4890, file: !1, line: 1415, type: !3082)
!4898 = !DILocation(line: 1415, column: 22, scope: !4890)
!4899 = !DILocalVariable(name: "gamma", scope: !4890, file: !1, line: 1418, type: !519)
!4900 = !DILocation(line: 1418, column: 5, scope: !4890)
!4901 = !DILocalVariable(name: "Da", scope: !4890, file: !1, line: 1421, type: !710)
!4902 = !DILocation(line: 1421, column: 5, scope: !4890)
!4903 = !DILocalVariable(name: "Sa", scope: !4890, file: !1, line: 1422, type: !710)
!4904 = !DILocation(line: 1422, column: 5, scope: !4890)
!4905 = !DILocation(line: 1424, column: 23, scope: !4890)
!4906 = !DILocation(line: 1424, column: 26, scope: !4890)
!4907 = !DILocation(line: 1424, column: 22, scope: !4890)
!4908 = !DILocation(line: 1424, column: 9, scope: !4890)
!4909 = !DILocation(line: 1424, column: 6, scope: !4890)
!4910 = !DILocation(line: 1424, column: 5, scope: !4890)
!4911 = !DILocation(line: 1425, column: 23, scope: !4890)
!4912 = !DILocation(line: 1425, column: 26, scope: !4890)
!4913 = !DILocation(line: 1425, column: 22, scope: !4890)
!4914 = !DILocation(line: 1425, column: 9, scope: !4890)
!4915 = !DILocation(line: 1425, column: 6, scope: !4890)
!4916 = !DILocation(line: 1425, column: 5, scope: !4890)
!4917 = !DILocation(line: 1426, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4890, file: !1, line: 1426, column: 8)
!4919 = !DILocation(line: 1426, column: 17, scope: !4918)
!4920 = !DILocation(line: 1426, column: 33, scope: !4918)
!4921 = !DILocation(line: 1426, column: 8, scope: !4890)
!4922 = !DILocation(line: 1427, column: 24, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 1426, column: 40)
!4924 = !DILocation(line: 1427, column: 27, scope: !4923)
!4925 = !DILocation(line: 1427, column: 26, scope: !4923)
!4926 = !DILocation(line: 1427, column: 30, scope: !4923)
!4927 = !DILocation(line: 1427, column: 33, scope: !4923)
!4928 = !DILocation(line: 1427, column: 32, scope: !4923)
!4929 = !DILocation(line: 1427, column: 29, scope: !4923)
!4930 = !DILocation(line: 1427, column: 11, scope: !4923)
!4931 = !DILocation(line: 1427, column: 10, scope: !4923)
!4932 = !DILocation(line: 1428, column: 59, scope: !4923)
!4933 = !DILocation(line: 1428, column: 58, scope: !4923)
!4934 = !DILocation(line: 1428, column: 53, scope: !4923)
!4935 = !DILocation(line: 1428, column: 24, scope: !4923)
!4936 = !DILocation(line: 1428, column: 5, scope: !4923)
!4937 = !DILocation(line: 1428, column: 16, scope: !4923)
!4938 = !DILocation(line: 1428, column: 23, scope: !4923)
!4939 = !DILocation(line: 1429, column: 7, scope: !4923)
!4940 = !DILocation(line: 1430, column: 7, scope: !4923)
!4941 = !DILocation(line: 1431, column: 30, scope: !4923)
!4942 = !DILocation(line: 1431, column: 25, scope: !4923)
!4943 = !DILocation(line: 1431, column: 37, scope: !4923)
!4944 = !DILocation(line: 1431, column: 71, scope: !4923)
!4945 = !DILocation(line: 1431, column: 23, scope: !4923)
!4946 = !DILocation(line: 1431, column: 10, scope: !4923)
!4947 = !DILocation(line: 1432, column: 20, scope: !4923)
!4948 = !DILocation(line: 1432, column: 33, scope: !4923)
!4949 = !DILocation(line: 1432, column: 36, scope: !4923)
!4950 = !DILocation(line: 1432, column: 40, scope: !4923)
!4951 = !DILocation(line: 1432, column: 39, scope: !4923)
!4952 = !DILocation(line: 1432, column: 43, scope: !4923)
!4953 = !DILocation(line: 1432, column: 46, scope: !4923)
!4954 = !DILocation(line: 1432, column: 50, scope: !4923)
!4955 = !DILocation(line: 1432, column: 49, scope: !4923)
!4956 = !DILocation(line: 1432, column: 26, scope: !4923)
!4957 = !DILocation(line: 1432, column: 25, scope: !4923)
!4958 = !DILocation(line: 1432, column: 5, scope: !4923)
!4959 = !DILocation(line: 1432, column: 16, scope: !4923)
!4960 = !DILocation(line: 1432, column: 19, scope: !4923)
!4961 = !DILocation(line: 1433, column: 22, scope: !4923)
!4962 = !DILocation(line: 1433, column: 35, scope: !4923)
!4963 = !DILocation(line: 1433, column: 38, scope: !4923)
!4964 = !DILocation(line: 1433, column: 44, scope: !4923)
!4965 = !DILocation(line: 1433, column: 43, scope: !4923)
!4966 = !DILocation(line: 1433, column: 47, scope: !4923)
!4967 = !DILocation(line: 1433, column: 50, scope: !4923)
!4968 = !DILocation(line: 1433, column: 56, scope: !4923)
!4969 = !DILocation(line: 1433, column: 55, scope: !4923)
!4970 = !DILocation(line: 1433, column: 28, scope: !4923)
!4971 = !DILocation(line: 1433, column: 27, scope: !4923)
!4972 = !DILocation(line: 1433, column: 5, scope: !4923)
!4973 = !DILocation(line: 1433, column: 16, scope: !4923)
!4974 = !DILocation(line: 1433, column: 21, scope: !4923)
!4975 = !DILocation(line: 1434, column: 21, scope: !4923)
!4976 = !DILocation(line: 1434, column: 34, scope: !4923)
!4977 = !DILocation(line: 1434, column: 37, scope: !4923)
!4978 = !DILocation(line: 1434, column: 42, scope: !4923)
!4979 = !DILocation(line: 1434, column: 41, scope: !4923)
!4980 = !DILocation(line: 1434, column: 45, scope: !4923)
!4981 = !DILocation(line: 1434, column: 48, scope: !4923)
!4982 = !DILocation(line: 1434, column: 53, scope: !4923)
!4983 = !DILocation(line: 1434, column: 52, scope: !4923)
!4984 = !DILocation(line: 1434, column: 27, scope: !4923)
!4985 = !DILocation(line: 1434, column: 26, scope: !4923)
!4986 = !DILocation(line: 1434, column: 5, scope: !4923)
!4987 = !DILocation(line: 1434, column: 16, scope: !4923)
!4988 = !DILocation(line: 1434, column: 20, scope: !4923)
!4989 = !DILocation(line: 1435, column: 9, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 1435, column: 9)
!4991 = !DILocation(line: 1435, column: 12, scope: !4990)
!4992 = !DILocation(line: 1435, column: 23, scope: !4990)
!4993 = !DILocation(line: 1435, column: 9, scope: !4923)
!4994 = !DILocation(line: 1436, column: 24, scope: !4990)
!4995 = !DILocation(line: 1436, column: 37, scope: !4990)
!4996 = !DILocation(line: 1436, column: 40, scope: !4990)
!4997 = !DILocation(line: 1436, column: 46, scope: !4990)
!4998 = !DILocation(line: 1436, column: 45, scope: !4990)
!4999 = !DILocation(line: 1436, column: 49, scope: !4990)
!5000 = !DILocation(line: 1436, column: 52, scope: !4990)
!5001 = !DILocation(line: 1436, column: 58, scope: !4990)
!5002 = !DILocation(line: 1436, column: 57, scope: !4990)
!5003 = !DILocation(line: 1436, column: 30, scope: !4990)
!5004 = !DILocation(line: 1436, column: 29, scope: !4990)
!5005 = !DILocation(line: 1436, column: 7, scope: !4990)
!5006 = !DILocation(line: 1436, column: 18, scope: !4990)
!5007 = !DILocation(line: 1436, column: 23, scope: !4990)
!5008 = !DILocation(line: 1437, column: 5, scope: !4923)
!5009 = !DILocation(line: 1439, column: 11, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 1439, column: 10)
!5011 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 1438, column: 8)
!5012 = !DILocation(line: 1439, column: 19, scope: !5010)
!5013 = !DILocation(line: 1439, column: 35, scope: !5010)
!5014 = !DILocation(line: 1439, column: 10, scope: !5011)
!5015 = !DILocation(line: 1440, column: 51, scope: !5010)
!5016 = !DILocation(line: 1440, column: 54, scope: !5010)
!5017 = !DILocation(line: 1440, column: 44, scope: !5010)
!5018 = !DILocation(line: 1440, column: 43, scope: !5010)
!5019 = !DILocation(line: 1440, column: 38, scope: !5010)
!5020 = !DILocation(line: 1440, column: 26, scope: !5010)
!5021 = !DILocation(line: 1440, column: 7, scope: !5010)
!5022 = !DILocation(line: 1440, column: 18, scope: !5010)
!5023 = !DILocation(line: 1440, column: 25, scope: !5010)
!5024 = !DILocation(line: 1441, column: 11, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 1441, column: 10)
!5026 = !DILocation(line: 1441, column: 19, scope: !5025)
!5027 = !DILocation(line: 1441, column: 33, scope: !5025)
!5028 = !DILocation(line: 1441, column: 10, scope: !5011)
!5029 = !DILocation(line: 1442, column: 55, scope: !5025)
!5030 = !DILocation(line: 1442, column: 58, scope: !5025)
!5031 = !DILocation(line: 1442, column: 54, scope: !5025)
!5032 = !DILocation(line: 1442, column: 42, scope: !5025)
!5033 = !DILocation(line: 1443, column: 25, scope: !5025)
!5034 = !DILocation(line: 1443, column: 28, scope: !5025)
!5035 = !DILocation(line: 1443, column: 24, scope: !5025)
!5036 = !DILocation(line: 1443, column: 12, scope: !5025)
!5037 = !DILocation(line: 1442, column: 35, scope: !5025)
!5038 = !DILocation(line: 1442, column: 34, scope: !5025)
!5039 = !DILocation(line: 1442, column: 7, scope: !5025)
!5040 = !DILocation(line: 1442, column: 18, scope: !5025)
!5041 = !DILocation(line: 1442, column: 21, scope: !5025)
!5042 = !DILocation(line: 1444, column: 11, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 1444, column: 10)
!5044 = !DILocation(line: 1444, column: 19, scope: !5043)
!5045 = !DILocation(line: 1444, column: 35, scope: !5043)
!5046 = !DILocation(line: 1444, column: 10, scope: !5011)
!5047 = !DILocation(line: 1445, column: 57, scope: !5043)
!5048 = !DILocation(line: 1445, column: 60, scope: !5043)
!5049 = !DILocation(line: 1445, column: 56, scope: !5043)
!5050 = !DILocation(line: 1445, column: 44, scope: !5043)
!5051 = !DILocation(line: 1446, column: 25, scope: !5043)
!5052 = !DILocation(line: 1446, column: 28, scope: !5043)
!5053 = !DILocation(line: 1446, column: 24, scope: !5043)
!5054 = !DILocation(line: 1446, column: 12, scope: !5043)
!5055 = !DILocation(line: 1445, column: 37, scope: !5043)
!5056 = !DILocation(line: 1445, column: 36, scope: !5043)
!5057 = !DILocation(line: 1445, column: 7, scope: !5043)
!5058 = !DILocation(line: 1445, column: 18, scope: !5043)
!5059 = !DILocation(line: 1445, column: 23, scope: !5043)
!5060 = !DILocation(line: 1447, column: 11, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 1447, column: 10)
!5062 = !DILocation(line: 1447, column: 19, scope: !5061)
!5063 = !DILocation(line: 1447, column: 34, scope: !5061)
!5064 = !DILocation(line: 1447, column: 10, scope: !5011)
!5065 = !DILocation(line: 1448, column: 56, scope: !5061)
!5066 = !DILocation(line: 1448, column: 59, scope: !5061)
!5067 = !DILocation(line: 1448, column: 55, scope: !5061)
!5068 = !DILocation(line: 1448, column: 43, scope: !5061)
!5069 = !DILocation(line: 1449, column: 25, scope: !5061)
!5070 = !DILocation(line: 1449, column: 28, scope: !5061)
!5071 = !DILocation(line: 1449, column: 24, scope: !5061)
!5072 = !DILocation(line: 1449, column: 12, scope: !5061)
!5073 = !DILocation(line: 1448, column: 36, scope: !5061)
!5074 = !DILocation(line: 1448, column: 35, scope: !5061)
!5075 = !DILocation(line: 1448, column: 7, scope: !5061)
!5076 = !DILocation(line: 1448, column: 18, scope: !5061)
!5077 = !DILocation(line: 1448, column: 22, scope: !5061)
!5078 = !DILocation(line: 1450, column: 11, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 1450, column: 10)
!5080 = !DILocation(line: 1450, column: 19, scope: !5079)
!5081 = !DILocation(line: 1450, column: 35, scope: !5079)
!5082 = !DILocation(line: 1450, column: 40, scope: !5079)
!5083 = !DILocation(line: 1450, column: 43, scope: !5079)
!5084 = !DILocation(line: 1450, column: 46, scope: !5079)
!5085 = !DILocation(line: 1450, column: 57, scope: !5079)
!5086 = !DILocation(line: 1450, column: 10, scope: !5011)
!5087 = !DILocation(line: 1451, column: 57, scope: !5079)
!5088 = !DILocation(line: 1451, column: 60, scope: !5079)
!5089 = !DILocation(line: 1451, column: 56, scope: !5079)
!5090 = !DILocation(line: 1451, column: 44, scope: !5079)
!5091 = !DILocation(line: 1452, column: 25, scope: !5079)
!5092 = !DILocation(line: 1452, column: 28, scope: !5079)
!5093 = !DILocation(line: 1452, column: 24, scope: !5079)
!5094 = !DILocation(line: 1452, column: 12, scope: !5079)
!5095 = !DILocation(line: 1451, column: 37, scope: !5079)
!5096 = !DILocation(line: 1451, column: 36, scope: !5079)
!5097 = !DILocation(line: 1451, column: 7, scope: !5079)
!5098 = !DILocation(line: 1451, column: 18, scope: !5079)
!5099 = !DILocation(line: 1451, column: 23, scope: !5079)
!5100 = !DILocation(line: 1454, column: 1, scope: !4890)
!5101 = distinct !DISubprogram(name: "CompositeDivide", scope: !1, file: !1, line: 514, type: !3614, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5102 = !DILocalVariable(name: "p", arg: 1, scope: !5101, file: !1, line: 514, type: !3051)
!5103 = !DILocation(line: 514, column: 61, scope: !5101)
!5104 = !DILocalVariable(name: "q", arg: 2, scope: !5101, file: !1, line: 515, type: !3051)
!5105 = !DILocation(line: 515, column: 28, scope: !5101)
!5106 = !DILocalVariable(name: "channel", arg: 3, scope: !5101, file: !1, line: 515, type: !746)
!5107 = !DILocation(line: 515, column: 48, scope: !5101)
!5108 = !DILocalVariable(name: "composite", arg: 4, scope: !5101, file: !1, line: 516, type: !3082)
!5109 = !DILocation(line: 516, column: 22, scope: !5101)
!5110 = !DILocalVariable(name: "Da", scope: !5101, file: !1, line: 519, type: !710)
!5111 = !DILocation(line: 519, column: 5, scope: !5101)
!5112 = !DILocalVariable(name: "gamma", scope: !5101, file: !1, line: 520, type: !710)
!5113 = !DILocation(line: 520, column: 5, scope: !5101)
!5114 = !DILocalVariable(name: "Sa", scope: !5101, file: !1, line: 521, type: !710)
!5115 = !DILocation(line: 521, column: 5, scope: !5101)
!5116 = !DILocation(line: 523, column: 23, scope: !5101)
!5117 = !DILocation(line: 523, column: 26, scope: !5101)
!5118 = !DILocation(line: 523, column: 22, scope: !5101)
!5119 = !DILocation(line: 523, column: 9, scope: !5101)
!5120 = !DILocation(line: 523, column: 6, scope: !5101)
!5121 = !DILocation(line: 523, column: 5, scope: !5101)
!5122 = !DILocation(line: 524, column: 23, scope: !5101)
!5123 = !DILocation(line: 524, column: 26, scope: !5101)
!5124 = !DILocation(line: 524, column: 22, scope: !5101)
!5125 = !DILocation(line: 524, column: 9, scope: !5101)
!5126 = !DILocation(line: 524, column: 6, scope: !5101)
!5127 = !DILocation(line: 524, column: 5, scope: !5101)
!5128 = !DILocation(line: 525, column: 9, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5101, file: !1, line: 525, column: 8)
!5130 = !DILocation(line: 525, column: 17, scope: !5129)
!5131 = !DILocation(line: 525, column: 33, scope: !5129)
!5132 = !DILocation(line: 525, column: 8, scope: !5101)
!5133 = !DILocation(line: 526, column: 24, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5129, file: !1, line: 525, column: 40)
!5135 = !DILocation(line: 526, column: 27, scope: !5134)
!5136 = !DILocation(line: 526, column: 26, scope: !5134)
!5137 = !DILocation(line: 526, column: 30, scope: !5134)
!5138 = !DILocation(line: 526, column: 33, scope: !5134)
!5139 = !DILocation(line: 526, column: 32, scope: !5134)
!5140 = !DILocation(line: 526, column: 29, scope: !5134)
!5141 = !DILocation(line: 526, column: 11, scope: !5134)
!5142 = !DILocation(line: 526, column: 10, scope: !5134)
!5143 = !DILocation(line: 527, column: 59, scope: !5134)
!5144 = !DILocation(line: 527, column: 58, scope: !5134)
!5145 = !DILocation(line: 527, column: 53, scope: !5134)
!5146 = !DILocation(line: 527, column: 24, scope: !5134)
!5147 = !DILocation(line: 527, column: 5, scope: !5134)
!5148 = !DILocation(line: 527, column: 16, scope: !5134)
!5149 = !DILocation(line: 527, column: 23, scope: !5134)
!5150 = !DILocation(line: 528, column: 30, scope: !5134)
!5151 = !DILocation(line: 528, column: 25, scope: !5134)
!5152 = !DILocation(line: 528, column: 37, scope: !5134)
!5153 = !DILocation(line: 528, column: 71, scope: !5134)
!5154 = !DILocation(line: 528, column: 23, scope: !5134)
!5155 = !DILocation(line: 528, column: 11, scope: !5134)
!5156 = !DILocation(line: 528, column: 10, scope: !5134)
!5157 = !DILocation(line: 529, column: 20, scope: !5134)
!5158 = !DILocation(line: 529, column: 46, scope: !5134)
!5159 = !DILocation(line: 529, column: 49, scope: !5134)
!5160 = !DILocation(line: 529, column: 45, scope: !5134)
!5161 = !DILocation(line: 529, column: 53, scope: !5134)
!5162 = !DILocation(line: 529, column: 52, scope: !5134)
!5163 = !DILocation(line: 529, column: 33, scope: !5134)
!5164 = !DILocation(line: 529, column: 56, scope: !5134)
!5165 = !DILocation(line: 530, column: 7, scope: !5134)
!5166 = !DILocation(line: 530, column: 10, scope: !5134)
!5167 = !DILocation(line: 529, column: 71, scope: !5134)
!5168 = !DILocation(line: 530, column: 14, scope: !5134)
!5169 = !DILocation(line: 530, column: 13, scope: !5134)
!5170 = !DILocation(line: 529, column: 59, scope: !5134)
!5171 = !DILocation(line: 530, column: 17, scope: !5134)
!5172 = !DILocation(line: 529, column: 26, scope: !5134)
!5173 = !DILocation(line: 529, column: 25, scope: !5134)
!5174 = !DILocation(line: 529, column: 5, scope: !5134)
!5175 = !DILocation(line: 529, column: 16, scope: !5134)
!5176 = !DILocation(line: 529, column: 19, scope: !5134)
!5177 = !DILocation(line: 531, column: 22, scope: !5134)
!5178 = !DILocation(line: 531, column: 48, scope: !5134)
!5179 = !DILocation(line: 531, column: 51, scope: !5134)
!5180 = !DILocation(line: 531, column: 47, scope: !5134)
!5181 = !DILocation(line: 531, column: 57, scope: !5134)
!5182 = !DILocation(line: 531, column: 56, scope: !5134)
!5183 = !DILocation(line: 531, column: 35, scope: !5134)
!5184 = !DILocation(line: 531, column: 60, scope: !5134)
!5185 = !DILocation(line: 532, column: 7, scope: !5134)
!5186 = !DILocation(line: 532, column: 10, scope: !5134)
!5187 = !DILocation(line: 531, column: 75, scope: !5134)
!5188 = !DILocation(line: 532, column: 16, scope: !5134)
!5189 = !DILocation(line: 532, column: 15, scope: !5134)
!5190 = !DILocation(line: 531, column: 63, scope: !5134)
!5191 = !DILocation(line: 532, column: 19, scope: !5134)
!5192 = !DILocation(line: 531, column: 28, scope: !5134)
!5193 = !DILocation(line: 531, column: 27, scope: !5134)
!5194 = !DILocation(line: 531, column: 5, scope: !5134)
!5195 = !DILocation(line: 531, column: 16, scope: !5134)
!5196 = !DILocation(line: 531, column: 21, scope: !5134)
!5197 = !DILocation(line: 533, column: 21, scope: !5134)
!5198 = !DILocation(line: 533, column: 47, scope: !5134)
!5199 = !DILocation(line: 533, column: 50, scope: !5134)
!5200 = !DILocation(line: 533, column: 46, scope: !5134)
!5201 = !DILocation(line: 533, column: 55, scope: !5134)
!5202 = !DILocation(line: 533, column: 54, scope: !5134)
!5203 = !DILocation(line: 533, column: 34, scope: !5134)
!5204 = !DILocation(line: 533, column: 58, scope: !5134)
!5205 = !DILocation(line: 534, column: 7, scope: !5134)
!5206 = !DILocation(line: 534, column: 10, scope: !5134)
!5207 = !DILocation(line: 533, column: 73, scope: !5134)
!5208 = !DILocation(line: 534, column: 15, scope: !5134)
!5209 = !DILocation(line: 534, column: 14, scope: !5134)
!5210 = !DILocation(line: 533, column: 61, scope: !5134)
!5211 = !DILocation(line: 534, column: 18, scope: !5134)
!5212 = !DILocation(line: 533, column: 27, scope: !5134)
!5213 = !DILocation(line: 533, column: 26, scope: !5134)
!5214 = !DILocation(line: 533, column: 5, scope: !5134)
!5215 = !DILocation(line: 533, column: 16, scope: !5134)
!5216 = !DILocation(line: 533, column: 20, scope: !5134)
!5217 = !DILocation(line: 535, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5134, file: !1, line: 535, column: 9)
!5219 = !DILocation(line: 535, column: 12, scope: !5218)
!5220 = !DILocation(line: 535, column: 23, scope: !5218)
!5221 = !DILocation(line: 535, column: 9, scope: !5134)
!5222 = !DILocation(line: 536, column: 24, scope: !5218)
!5223 = !DILocation(line: 536, column: 50, scope: !5218)
!5224 = !DILocation(line: 536, column: 53, scope: !5218)
!5225 = !DILocation(line: 536, column: 49, scope: !5218)
!5226 = !DILocation(line: 536, column: 59, scope: !5218)
!5227 = !DILocation(line: 536, column: 58, scope: !5218)
!5228 = !DILocation(line: 536, column: 37, scope: !5218)
!5229 = !DILocation(line: 536, column: 62, scope: !5218)
!5230 = !DILocation(line: 537, column: 9, scope: !5218)
!5231 = !DILocation(line: 537, column: 12, scope: !5218)
!5232 = !DILocation(line: 536, column: 77, scope: !5218)
!5233 = !DILocation(line: 537, column: 18, scope: !5218)
!5234 = !DILocation(line: 537, column: 17, scope: !5218)
!5235 = !DILocation(line: 536, column: 65, scope: !5218)
!5236 = !DILocation(line: 537, column: 21, scope: !5218)
!5237 = !DILocation(line: 536, column: 30, scope: !5218)
!5238 = !DILocation(line: 536, column: 29, scope: !5218)
!5239 = !DILocation(line: 536, column: 7, scope: !5218)
!5240 = !DILocation(line: 536, column: 18, scope: !5218)
!5241 = !DILocation(line: 536, column: 23, scope: !5218)
!5242 = !DILocation(line: 538, column: 3, scope: !5134)
!5243 = !DILocation(line: 540, column: 11, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 540, column: 10)
!5245 = distinct !DILexicalBlock(scope: !5129, file: !1, line: 539, column: 8)
!5246 = !DILocation(line: 540, column: 19, scope: !5244)
!5247 = !DILocation(line: 540, column: 35, scope: !5244)
!5248 = !DILocation(line: 540, column: 10, scope: !5245)
!5249 = !DILocation(line: 541, column: 51, scope: !5244)
!5250 = !DILocation(line: 541, column: 58, scope: !5244)
!5251 = !DILocation(line: 541, column: 44, scope: !5244)
!5252 = !DILocation(line: 541, column: 43, scope: !5244)
!5253 = !DILocation(line: 541, column: 38, scope: !5244)
!5254 = !DILocation(line: 541, column: 26, scope: !5244)
!5255 = !DILocation(line: 541, column: 7, scope: !5244)
!5256 = !DILocation(line: 541, column: 18, scope: !5244)
!5257 = !DILocation(line: 541, column: 25, scope: !5244)
!5258 = !DILocation(line: 542, column: 11, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 542, column: 10)
!5260 = !DILocation(line: 542, column: 19, scope: !5259)
!5261 = !DILocation(line: 542, column: 33, scope: !5259)
!5262 = !DILocation(line: 542, column: 10, scope: !5245)
!5263 = !DILocation(line: 544, column: 31, scope: !5259)
!5264 = !DILocation(line: 544, column: 34, scope: !5259)
!5265 = !DILocation(line: 544, column: 30, scope: !5259)
!5266 = !DILocation(line: 544, column: 18, scope: !5259)
!5267 = !DILocation(line: 544, column: 55, scope: !5259)
!5268 = !DILocation(line: 544, column: 58, scope: !5259)
!5269 = !DILocation(line: 544, column: 54, scope: !5259)
!5270 = !DILocation(line: 544, column: 42, scope: !5259)
!5271 = !DILocation(line: 544, column: 11, scope: !5259)
!5272 = !DILocation(line: 543, column: 34, scope: !5259)
!5273 = !DILocation(line: 543, column: 7, scope: !5259)
!5274 = !DILocation(line: 543, column: 18, scope: !5259)
!5275 = !DILocation(line: 543, column: 21, scope: !5259)
!5276 = !DILocation(line: 545, column: 11, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 545, column: 10)
!5278 = !DILocation(line: 545, column: 19, scope: !5277)
!5279 = !DILocation(line: 545, column: 35, scope: !5277)
!5280 = !DILocation(line: 545, column: 10, scope: !5245)
!5281 = !DILocation(line: 547, column: 31, scope: !5277)
!5282 = !DILocation(line: 547, column: 34, scope: !5277)
!5283 = !DILocation(line: 547, column: 30, scope: !5277)
!5284 = !DILocation(line: 547, column: 18, scope: !5277)
!5285 = !DILocation(line: 547, column: 57, scope: !5277)
!5286 = !DILocation(line: 547, column: 60, scope: !5277)
!5287 = !DILocation(line: 547, column: 56, scope: !5277)
!5288 = !DILocation(line: 547, column: 44, scope: !5277)
!5289 = !DILocation(line: 547, column: 11, scope: !5277)
!5290 = !DILocation(line: 546, column: 36, scope: !5277)
!5291 = !DILocation(line: 546, column: 7, scope: !5277)
!5292 = !DILocation(line: 546, column: 18, scope: !5277)
!5293 = !DILocation(line: 546, column: 23, scope: !5277)
!5294 = !DILocation(line: 548, column: 11, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 548, column: 10)
!5296 = !DILocation(line: 548, column: 19, scope: !5295)
!5297 = !DILocation(line: 548, column: 34, scope: !5295)
!5298 = !DILocation(line: 548, column: 10, scope: !5245)
!5299 = !DILocation(line: 550, column: 31, scope: !5295)
!5300 = !DILocation(line: 550, column: 34, scope: !5295)
!5301 = !DILocation(line: 550, column: 30, scope: !5295)
!5302 = !DILocation(line: 550, column: 18, scope: !5295)
!5303 = !DILocation(line: 550, column: 56, scope: !5295)
!5304 = !DILocation(line: 550, column: 59, scope: !5295)
!5305 = !DILocation(line: 550, column: 55, scope: !5295)
!5306 = !DILocation(line: 550, column: 43, scope: !5295)
!5307 = !DILocation(line: 550, column: 11, scope: !5295)
!5308 = !DILocation(line: 549, column: 35, scope: !5295)
!5309 = !DILocation(line: 549, column: 7, scope: !5295)
!5310 = !DILocation(line: 549, column: 18, scope: !5295)
!5311 = !DILocation(line: 549, column: 22, scope: !5295)
!5312 = !DILocation(line: 551, column: 11, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 551, column: 10)
!5314 = !DILocation(line: 551, column: 19, scope: !5313)
!5315 = !DILocation(line: 551, column: 35, scope: !5313)
!5316 = !DILocation(line: 551, column: 40, scope: !5313)
!5317 = !DILocation(line: 551, column: 43, scope: !5313)
!5318 = !DILocation(line: 551, column: 46, scope: !5313)
!5319 = !DILocation(line: 551, column: 57, scope: !5313)
!5320 = !DILocation(line: 551, column: 10, scope: !5245)
!5321 = !DILocation(line: 553, column: 31, scope: !5313)
!5322 = !DILocation(line: 553, column: 34, scope: !5313)
!5323 = !DILocation(line: 553, column: 30, scope: !5313)
!5324 = !DILocation(line: 553, column: 18, scope: !5313)
!5325 = !DILocation(line: 553, column: 57, scope: !5313)
!5326 = !DILocation(line: 553, column: 60, scope: !5313)
!5327 = !DILocation(line: 553, column: 56, scope: !5313)
!5328 = !DILocation(line: 553, column: 44, scope: !5313)
!5329 = !DILocation(line: 553, column: 11, scope: !5313)
!5330 = !DILocation(line: 552, column: 36, scope: !5313)
!5331 = !DILocation(line: 552, column: 7, scope: !5313)
!5332 = !DILocation(line: 552, column: 18, scope: !5313)
!5333 = !DILocation(line: 552, column: 23, scope: !5313)
!5334 = !DILocation(line: 555, column: 1, scope: !5101)
!5335 = distinct !DISubprogram(name: "CompositeDarken", scope: !1, file: !1, line: 376, type: !3614, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5336 = !DILocalVariable(name: "p", arg: 1, scope: !5335, file: !1, line: 376, type: !3051)
!5337 = !DILocation(line: 376, column: 61, scope: !5335)
!5338 = !DILocalVariable(name: "q", arg: 2, scope: !5335, file: !1, line: 377, type: !3051)
!5339 = !DILocation(line: 377, column: 28, scope: !5335)
!5340 = !DILocalVariable(name: "channel", arg: 3, scope: !5335, file: !1, line: 377, type: !746)
!5341 = !DILocation(line: 377, column: 48, scope: !5335)
!5342 = !DILocalVariable(name: "composite", arg: 4, scope: !5335, file: !1, line: 378, type: !3082)
!5343 = !DILocation(line: 378, column: 22, scope: !5335)
!5344 = !DILocalVariable(name: "gamma", scope: !5335, file: !1, line: 386, type: !519)
!5345 = !DILocation(line: 386, column: 5, scope: !5335)
!5346 = !DILocation(line: 388, column: 9, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 388, column: 8)
!5348 = !DILocation(line: 388, column: 17, scope: !5347)
!5349 = !DILocation(line: 388, column: 33, scope: !5347)
!5350 = !DILocation(line: 388, column: 8, scope: !5335)
!5351 = !DILocation(line: 389, column: 37, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5347, file: !1, line: 388, column: 40)
!5353 = !DILocation(line: 389, column: 40, scope: !5352)
!5354 = !DILocation(line: 389, column: 36, scope: !5352)
!5355 = !DILocation(line: 389, column: 48, scope: !5352)
!5356 = !DILocation(line: 389, column: 51, scope: !5352)
!5357 = !DILocation(line: 389, column: 47, scope: !5352)
!5358 = !DILocation(line: 389, column: 24, scope: !5352)
!5359 = !DILocation(line: 389, column: 5, scope: !5352)
!5360 = !DILocation(line: 389, column: 16, scope: !5352)
!5361 = !DILocation(line: 389, column: 23, scope: !5352)
!5362 = !DILocation(line: 390, column: 28, scope: !5352)
!5363 = !DILocation(line: 390, column: 39, scope: !5352)
!5364 = !DILocation(line: 390, column: 27, scope: !5352)
!5365 = !DILocation(line: 390, column: 14, scope: !5352)
!5366 = !DILocation(line: 390, column: 10, scope: !5352)
!5367 = !DILocation(line: 392, column: 7, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5352, file: !1, line: 392, column: 7)
!5369 = !DILocation(line: 392, column: 13, scope: !5368)
!5370 = !DILocation(line: 392, column: 7, scope: !5352)
!5371 = !DILocation(line: 392, column: 26, scope: !5368)
!5372 = !DILocation(line: 392, column: 20, scope: !5368)
!5373 = !DILocation(line: 394, column: 33, scope: !5352)
!5374 = !DILocation(line: 394, column: 11, scope: !5352)
!5375 = !DILocation(line: 394, column: 10, scope: !5352)
!5376 = !DILocation(line: 395, column: 20, scope: !5352)
!5377 = !DILocation(line: 395, column: 33, scope: !5352)
!5378 = !DILocation(line: 395, column: 36, scope: !5352)
!5379 = !DILocation(line: 395, column: 40, scope: !5352)
!5380 = !DILocation(line: 395, column: 43, scope: !5352)
!5381 = !DILocation(line: 395, column: 51, scope: !5352)
!5382 = !DILocation(line: 395, column: 54, scope: !5352)
!5383 = !DILocation(line: 395, column: 58, scope: !5352)
!5384 = !DILocation(line: 395, column: 61, scope: !5352)
!5385 = !DILocation(line: 395, column: 26, scope: !5352)
!5386 = !DILocation(line: 395, column: 25, scope: !5352)
!5387 = !DILocation(line: 395, column: 5, scope: !5352)
!5388 = !DILocation(line: 395, column: 16, scope: !5352)
!5389 = !DILocation(line: 395, column: 19, scope: !5352)
!5390 = !DILocation(line: 396, column: 22, scope: !5352)
!5391 = !DILocation(line: 396, column: 35, scope: !5352)
!5392 = !DILocation(line: 396, column: 38, scope: !5352)
!5393 = !DILocation(line: 396, column: 44, scope: !5352)
!5394 = !DILocation(line: 396, column: 47, scope: !5352)
!5395 = !DILocation(line: 396, column: 55, scope: !5352)
!5396 = !DILocation(line: 396, column: 58, scope: !5352)
!5397 = !DILocation(line: 396, column: 64, scope: !5352)
!5398 = !DILocation(line: 396, column: 67, scope: !5352)
!5399 = !DILocation(line: 396, column: 28, scope: !5352)
!5400 = !DILocation(line: 396, column: 27, scope: !5352)
!5401 = !DILocation(line: 396, column: 5, scope: !5352)
!5402 = !DILocation(line: 396, column: 16, scope: !5352)
!5403 = !DILocation(line: 396, column: 21, scope: !5352)
!5404 = !DILocation(line: 397, column: 21, scope: !5352)
!5405 = !DILocation(line: 397, column: 34, scope: !5352)
!5406 = !DILocation(line: 397, column: 37, scope: !5352)
!5407 = !DILocation(line: 397, column: 42, scope: !5352)
!5408 = !DILocation(line: 397, column: 45, scope: !5352)
!5409 = !DILocation(line: 397, column: 53, scope: !5352)
!5410 = !DILocation(line: 397, column: 56, scope: !5352)
!5411 = !DILocation(line: 397, column: 61, scope: !5352)
!5412 = !DILocation(line: 397, column: 64, scope: !5352)
!5413 = !DILocation(line: 397, column: 27, scope: !5352)
!5414 = !DILocation(line: 397, column: 26, scope: !5352)
!5415 = !DILocation(line: 397, column: 5, scope: !5352)
!5416 = !DILocation(line: 397, column: 16, scope: !5352)
!5417 = !DILocation(line: 397, column: 20, scope: !5352)
!5418 = !DILocation(line: 398, column: 9, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5352, file: !1, line: 398, column: 9)
!5420 = !DILocation(line: 398, column: 12, scope: !5419)
!5421 = !DILocation(line: 398, column: 23, scope: !5419)
!5422 = !DILocation(line: 398, column: 9, scope: !5352)
!5423 = !DILocation(line: 399, column: 24, scope: !5419)
!5424 = !DILocation(line: 399, column: 37, scope: !5419)
!5425 = !DILocation(line: 399, column: 40, scope: !5419)
!5426 = !DILocation(line: 399, column: 46, scope: !5419)
!5427 = !DILocation(line: 399, column: 49, scope: !5419)
!5428 = !DILocation(line: 399, column: 57, scope: !5419)
!5429 = !DILocation(line: 399, column: 60, scope: !5419)
!5430 = !DILocation(line: 399, column: 66, scope: !5419)
!5431 = !DILocation(line: 399, column: 69, scope: !5419)
!5432 = !DILocation(line: 399, column: 30, scope: !5419)
!5433 = !DILocation(line: 399, column: 29, scope: !5419)
!5434 = !DILocation(line: 399, column: 7, scope: !5419)
!5435 = !DILocation(line: 399, column: 18, scope: !5419)
!5436 = !DILocation(line: 399, column: 23, scope: !5419)
!5437 = !DILocation(line: 400, column: 3, scope: !5352)
!5438 = !DILocation(line: 402, column: 11, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 402, column: 10)
!5440 = distinct !DILexicalBlock(scope: !5347, file: !1, line: 401, column: 8)
!5441 = !DILocation(line: 402, column: 19, scope: !5439)
!5442 = !DILocation(line: 402, column: 35, scope: !5439)
!5443 = !DILocation(line: 402, column: 10, scope: !5440)
!5444 = !DILocation(line: 403, column: 36, scope: !5439)
!5445 = !DILocation(line: 403, column: 39, scope: !5439)
!5446 = !DILocation(line: 403, column: 47, scope: !5439)
!5447 = !DILocation(line: 403, column: 50, scope: !5439)
!5448 = !DILocation(line: 403, column: 26, scope: !5439)
!5449 = !DILocation(line: 403, column: 7, scope: !5439)
!5450 = !DILocation(line: 403, column: 18, scope: !5439)
!5451 = !DILocation(line: 403, column: 25, scope: !5439)
!5452 = !DILocation(line: 404, column: 11, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 404, column: 10)
!5454 = !DILocation(line: 404, column: 19, scope: !5453)
!5455 = !DILocation(line: 404, column: 33, scope: !5453)
!5456 = !DILocation(line: 404, column: 10, scope: !5440)
!5457 = !DILocation(line: 405, column: 32, scope: !5453)
!5458 = !DILocation(line: 405, column: 35, scope: !5453)
!5459 = !DILocation(line: 405, column: 39, scope: !5453)
!5460 = !DILocation(line: 405, column: 42, scope: !5453)
!5461 = !DILocation(line: 405, column: 22, scope: !5453)
!5462 = !DILocation(line: 405, column: 7, scope: !5453)
!5463 = !DILocation(line: 405, column: 18, scope: !5453)
!5464 = !DILocation(line: 405, column: 21, scope: !5453)
!5465 = !DILocation(line: 406, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 406, column: 10)
!5467 = !DILocation(line: 406, column: 19, scope: !5466)
!5468 = !DILocation(line: 406, column: 35, scope: !5466)
!5469 = !DILocation(line: 406, column: 10, scope: !5440)
!5470 = !DILocation(line: 407, column: 34, scope: !5466)
!5471 = !DILocation(line: 407, column: 37, scope: !5466)
!5472 = !DILocation(line: 407, column: 43, scope: !5466)
!5473 = !DILocation(line: 407, column: 46, scope: !5466)
!5474 = !DILocation(line: 407, column: 24, scope: !5466)
!5475 = !DILocation(line: 407, column: 7, scope: !5466)
!5476 = !DILocation(line: 407, column: 18, scope: !5466)
!5477 = !DILocation(line: 407, column: 23, scope: !5466)
!5478 = !DILocation(line: 408, column: 11, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 408, column: 10)
!5480 = !DILocation(line: 408, column: 19, scope: !5479)
!5481 = !DILocation(line: 408, column: 34, scope: !5479)
!5482 = !DILocation(line: 408, column: 10, scope: !5440)
!5483 = !DILocation(line: 409, column: 33, scope: !5479)
!5484 = !DILocation(line: 409, column: 36, scope: !5479)
!5485 = !DILocation(line: 409, column: 41, scope: !5479)
!5486 = !DILocation(line: 409, column: 44, scope: !5479)
!5487 = !DILocation(line: 409, column: 23, scope: !5479)
!5488 = !DILocation(line: 409, column: 7, scope: !5479)
!5489 = !DILocation(line: 409, column: 18, scope: !5479)
!5490 = !DILocation(line: 409, column: 22, scope: !5479)
!5491 = !DILocation(line: 410, column: 11, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 410, column: 10)
!5493 = !DILocation(line: 410, column: 19, scope: !5492)
!5494 = !DILocation(line: 410, column: 35, scope: !5492)
!5495 = !DILocation(line: 410, column: 40, scope: !5492)
!5496 = !DILocation(line: 410, column: 43, scope: !5492)
!5497 = !DILocation(line: 410, column: 46, scope: !5492)
!5498 = !DILocation(line: 410, column: 57, scope: !5492)
!5499 = !DILocation(line: 410, column: 10, scope: !5440)
!5500 = !DILocation(line: 411, column: 34, scope: !5492)
!5501 = !DILocation(line: 411, column: 37, scope: !5492)
!5502 = !DILocation(line: 411, column: 43, scope: !5492)
!5503 = !DILocation(line: 411, column: 46, scope: !5492)
!5504 = !DILocation(line: 411, column: 24, scope: !5492)
!5505 = !DILocation(line: 411, column: 7, scope: !5492)
!5506 = !DILocation(line: 411, column: 18, scope: !5492)
!5507 = !DILocation(line: 411, column: 23, scope: !5492)
!5508 = !DILocation(line: 413, column: 1, scope: !5335)
!5509 = distinct !DISubprogram(name: "CompositeLighten", scope: !1, file: !1, line: 799, type: !3614, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5510 = !DILocalVariable(name: "p", arg: 1, scope: !5509, file: !1, line: 799, type: !3051)
!5511 = !DILocation(line: 799, column: 62, scope: !5509)
!5512 = !DILocalVariable(name: "q", arg: 2, scope: !5509, file: !1, line: 800, type: !3051)
!5513 = !DILocation(line: 800, column: 28, scope: !5509)
!5514 = !DILocalVariable(name: "channel", arg: 3, scope: !5509, file: !1, line: 800, type: !746)
!5515 = !DILocation(line: 800, column: 48, scope: !5509)
!5516 = !DILocalVariable(name: "composite", arg: 4, scope: !5509, file: !1, line: 801, type: !3082)
!5517 = !DILocation(line: 801, column: 22, scope: !5509)
!5518 = !DILocalVariable(name: "gamma", scope: !5509, file: !1, line: 809, type: !519)
!5519 = !DILocation(line: 809, column: 5, scope: !5509)
!5520 = !DILocation(line: 811, column: 9, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5509, file: !1, line: 811, column: 8)
!5522 = !DILocation(line: 811, column: 17, scope: !5521)
!5523 = !DILocation(line: 811, column: 33, scope: !5521)
!5524 = !DILocation(line: 811, column: 8, scope: !5509)
!5525 = !DILocation(line: 812, column: 37, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 811, column: 40)
!5527 = !DILocation(line: 812, column: 40, scope: !5526)
!5528 = !DILocation(line: 812, column: 36, scope: !5526)
!5529 = !DILocation(line: 812, column: 48, scope: !5526)
!5530 = !DILocation(line: 812, column: 51, scope: !5526)
!5531 = !DILocation(line: 812, column: 47, scope: !5526)
!5532 = !DILocation(line: 812, column: 24, scope: !5526)
!5533 = !DILocation(line: 812, column: 5, scope: !5526)
!5534 = !DILocation(line: 812, column: 16, scope: !5526)
!5535 = !DILocation(line: 812, column: 23, scope: !5526)
!5536 = !DILocation(line: 813, column: 28, scope: !5526)
!5537 = !DILocation(line: 813, column: 39, scope: !5526)
!5538 = !DILocation(line: 813, column: 27, scope: !5526)
!5539 = !DILocation(line: 813, column: 14, scope: !5526)
!5540 = !DILocation(line: 813, column: 10, scope: !5526)
!5541 = !DILocation(line: 814, column: 33, scope: !5526)
!5542 = !DILocation(line: 814, column: 11, scope: !5526)
!5543 = !DILocation(line: 814, column: 10, scope: !5526)
!5544 = !DILocation(line: 815, column: 20, scope: !5526)
!5545 = !DILocation(line: 815, column: 34, scope: !5526)
!5546 = !DILocation(line: 815, column: 37, scope: !5526)
!5547 = !DILocation(line: 815, column: 41, scope: !5526)
!5548 = !DILocation(line: 815, column: 44, scope: !5526)
!5549 = !DILocation(line: 815, column: 52, scope: !5526)
!5550 = !DILocation(line: 815, column: 55, scope: !5526)
!5551 = !DILocation(line: 815, column: 59, scope: !5526)
!5552 = !DILocation(line: 815, column: 62, scope: !5526)
!5553 = !DILocation(line: 815, column: 26, scope: !5526)
!5554 = !DILocation(line: 815, column: 25, scope: !5526)
!5555 = !DILocation(line: 815, column: 5, scope: !5526)
!5556 = !DILocation(line: 815, column: 16, scope: !5526)
!5557 = !DILocation(line: 815, column: 19, scope: !5526)
!5558 = !DILocation(line: 816, column: 22, scope: !5526)
!5559 = !DILocation(line: 816, column: 36, scope: !5526)
!5560 = !DILocation(line: 816, column: 39, scope: !5526)
!5561 = !DILocation(line: 816, column: 45, scope: !5526)
!5562 = !DILocation(line: 816, column: 48, scope: !5526)
!5563 = !DILocation(line: 816, column: 56, scope: !5526)
!5564 = !DILocation(line: 816, column: 59, scope: !5526)
!5565 = !DILocation(line: 816, column: 65, scope: !5526)
!5566 = !DILocation(line: 816, column: 68, scope: !5526)
!5567 = !DILocation(line: 816, column: 28, scope: !5526)
!5568 = !DILocation(line: 816, column: 27, scope: !5526)
!5569 = !DILocation(line: 816, column: 5, scope: !5526)
!5570 = !DILocation(line: 816, column: 16, scope: !5526)
!5571 = !DILocation(line: 816, column: 21, scope: !5526)
!5572 = !DILocation(line: 817, column: 21, scope: !5526)
!5573 = !DILocation(line: 817, column: 35, scope: !5526)
!5574 = !DILocation(line: 817, column: 38, scope: !5526)
!5575 = !DILocation(line: 817, column: 43, scope: !5526)
!5576 = !DILocation(line: 817, column: 46, scope: !5526)
!5577 = !DILocation(line: 817, column: 54, scope: !5526)
!5578 = !DILocation(line: 817, column: 57, scope: !5526)
!5579 = !DILocation(line: 817, column: 62, scope: !5526)
!5580 = !DILocation(line: 817, column: 65, scope: !5526)
!5581 = !DILocation(line: 817, column: 27, scope: !5526)
!5582 = !DILocation(line: 817, column: 26, scope: !5526)
!5583 = !DILocation(line: 817, column: 5, scope: !5526)
!5584 = !DILocation(line: 817, column: 16, scope: !5526)
!5585 = !DILocation(line: 817, column: 20, scope: !5526)
!5586 = !DILocation(line: 818, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5526, file: !1, line: 818, column: 9)
!5588 = !DILocation(line: 818, column: 12, scope: !5587)
!5589 = !DILocation(line: 818, column: 23, scope: !5587)
!5590 = !DILocation(line: 818, column: 9, scope: !5526)
!5591 = !DILocation(line: 819, column: 24, scope: !5587)
!5592 = !DILocation(line: 819, column: 38, scope: !5587)
!5593 = !DILocation(line: 819, column: 41, scope: !5587)
!5594 = !DILocation(line: 819, column: 47, scope: !5587)
!5595 = !DILocation(line: 819, column: 50, scope: !5587)
!5596 = !DILocation(line: 819, column: 58, scope: !5587)
!5597 = !DILocation(line: 819, column: 61, scope: !5587)
!5598 = !DILocation(line: 819, column: 67, scope: !5587)
!5599 = !DILocation(line: 819, column: 70, scope: !5587)
!5600 = !DILocation(line: 819, column: 30, scope: !5587)
!5601 = !DILocation(line: 819, column: 29, scope: !5587)
!5602 = !DILocation(line: 819, column: 7, scope: !5587)
!5603 = !DILocation(line: 819, column: 18, scope: !5587)
!5604 = !DILocation(line: 819, column: 23, scope: !5587)
!5605 = !DILocation(line: 820, column: 3, scope: !5526)
!5606 = !DILocation(line: 822, column: 11, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !1, line: 822, column: 10)
!5608 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 821, column: 8)
!5609 = !DILocation(line: 822, column: 19, scope: !5607)
!5610 = !DILocation(line: 822, column: 35, scope: !5607)
!5611 = !DILocation(line: 822, column: 10, scope: !5608)
!5612 = !DILocation(line: 823, column: 36, scope: !5607)
!5613 = !DILocation(line: 823, column: 39, scope: !5607)
!5614 = !DILocation(line: 823, column: 47, scope: !5607)
!5615 = !DILocation(line: 823, column: 50, scope: !5607)
!5616 = !DILocation(line: 823, column: 26, scope: !5607)
!5617 = !DILocation(line: 823, column: 7, scope: !5607)
!5618 = !DILocation(line: 823, column: 18, scope: !5607)
!5619 = !DILocation(line: 823, column: 25, scope: !5607)
!5620 = !DILocation(line: 824, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5608, file: !1, line: 824, column: 10)
!5622 = !DILocation(line: 824, column: 19, scope: !5621)
!5623 = !DILocation(line: 824, column: 33, scope: !5621)
!5624 = !DILocation(line: 824, column: 10, scope: !5608)
!5625 = !DILocation(line: 825, column: 32, scope: !5621)
!5626 = !DILocation(line: 825, column: 35, scope: !5621)
!5627 = !DILocation(line: 825, column: 39, scope: !5621)
!5628 = !DILocation(line: 825, column: 42, scope: !5621)
!5629 = !DILocation(line: 825, column: 22, scope: !5621)
!5630 = !DILocation(line: 825, column: 7, scope: !5621)
!5631 = !DILocation(line: 825, column: 18, scope: !5621)
!5632 = !DILocation(line: 825, column: 21, scope: !5621)
!5633 = !DILocation(line: 826, column: 11, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5608, file: !1, line: 826, column: 10)
!5635 = !DILocation(line: 826, column: 19, scope: !5634)
!5636 = !DILocation(line: 826, column: 35, scope: !5634)
!5637 = !DILocation(line: 826, column: 10, scope: !5608)
!5638 = !DILocation(line: 827, column: 34, scope: !5634)
!5639 = !DILocation(line: 827, column: 37, scope: !5634)
!5640 = !DILocation(line: 827, column: 43, scope: !5634)
!5641 = !DILocation(line: 827, column: 46, scope: !5634)
!5642 = !DILocation(line: 827, column: 24, scope: !5634)
!5643 = !DILocation(line: 827, column: 7, scope: !5634)
!5644 = !DILocation(line: 827, column: 18, scope: !5634)
!5645 = !DILocation(line: 827, column: 23, scope: !5634)
!5646 = !DILocation(line: 828, column: 11, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5608, file: !1, line: 828, column: 10)
!5648 = !DILocation(line: 828, column: 19, scope: !5647)
!5649 = !DILocation(line: 828, column: 34, scope: !5647)
!5650 = !DILocation(line: 828, column: 10, scope: !5608)
!5651 = !DILocation(line: 829, column: 33, scope: !5647)
!5652 = !DILocation(line: 829, column: 36, scope: !5647)
!5653 = !DILocation(line: 829, column: 41, scope: !5647)
!5654 = !DILocation(line: 829, column: 44, scope: !5647)
!5655 = !DILocation(line: 829, column: 23, scope: !5647)
!5656 = !DILocation(line: 829, column: 7, scope: !5647)
!5657 = !DILocation(line: 829, column: 18, scope: !5647)
!5658 = !DILocation(line: 829, column: 22, scope: !5647)
!5659 = !DILocation(line: 830, column: 11, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5608, file: !1, line: 830, column: 10)
!5661 = !DILocation(line: 830, column: 19, scope: !5660)
!5662 = !DILocation(line: 830, column: 35, scope: !5660)
!5663 = !DILocation(line: 830, column: 40, scope: !5660)
!5664 = !DILocation(line: 830, column: 43, scope: !5660)
!5665 = !DILocation(line: 830, column: 46, scope: !5660)
!5666 = !DILocation(line: 830, column: 57, scope: !5660)
!5667 = !DILocation(line: 830, column: 10, scope: !5608)
!5668 = !DILocation(line: 831, column: 34, scope: !5660)
!5669 = !DILocation(line: 831, column: 37, scope: !5660)
!5670 = !DILocation(line: 831, column: 43, scope: !5660)
!5671 = !DILocation(line: 831, column: 46, scope: !5660)
!5672 = !DILocation(line: 831, column: 24, scope: !5660)
!5673 = !DILocation(line: 831, column: 7, scope: !5660)
!5674 = !DILocation(line: 831, column: 18, scope: !5660)
!5675 = !DILocation(line: 831, column: 23, scope: !5660)
!5676 = !DILocation(line: 833, column: 1, scope: !5509)
!5677 = distinct !DISubprogram(name: "CompositeDarkenIntensity", scope: !1, file: !1, line: 415, type: !3614, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5678 = !DILocalVariable(name: "p", arg: 1, scope: !5677, file: !1, line: 415, type: !3051)
!5679 = !DILocation(line: 415, column: 70, scope: !5677)
!5680 = !DILocalVariable(name: "q", arg: 2, scope: !5677, file: !1, line: 416, type: !3051)
!5681 = !DILocation(line: 416, column: 28, scope: !5677)
!5682 = !DILocalVariable(name: "channel", arg: 3, scope: !5677, file: !1, line: 416, type: !746)
!5683 = !DILocation(line: 416, column: 48, scope: !5677)
!5684 = !DILocalVariable(name: "composite", arg: 4, scope: !5677, file: !1, line: 417, type: !3082)
!5685 = !DILocation(line: 417, column: 22, scope: !5677)
!5686 = !DILocation(line: 424, column: 9, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5677, file: !1, line: 424, column: 8)
!5688 = !DILocation(line: 424, column: 17, scope: !5687)
!5689 = !DILocation(line: 424, column: 33, scope: !5687)
!5690 = !DILocation(line: 424, column: 8, scope: !5677)
!5691 = !DILocalVariable(name: "Da", scope: !5692, file: !1, line: 426, type: !710)
!5692 = distinct !DILexicalBlock(scope: !5687, file: !1, line: 424, column: 40)
!5693 = !DILocation(line: 426, column: 7, scope: !5692)
!5694 = !DILocalVariable(name: "Sa", scope: !5692, file: !1, line: 427, type: !710)
!5695 = !DILocation(line: 427, column: 7, scope: !5692)
!5696 = !DILocation(line: 429, column: 25, scope: !5692)
!5697 = !DILocation(line: 429, column: 28, scope: !5692)
!5698 = !DILocation(line: 429, column: 24, scope: !5692)
!5699 = !DILocation(line: 429, column: 11, scope: !5692)
!5700 = !DILocation(line: 429, column: 8, scope: !5692)
!5701 = !DILocation(line: 429, column: 7, scope: !5692)
!5702 = !DILocation(line: 430, column: 25, scope: !5692)
!5703 = !DILocation(line: 430, column: 28, scope: !5692)
!5704 = !DILocation(line: 430, column: 24, scope: !5692)
!5705 = !DILocation(line: 430, column: 11, scope: !5692)
!5706 = !DILocation(line: 430, column: 8, scope: !5692)
!5707 = !DILocation(line: 430, column: 7, scope: !5692)
!5708 = !DILocation(line: 431, column: 6, scope: !5692)
!5709 = !DILocation(line: 431, column: 19, scope: !5692)
!5710 = !DILocation(line: 431, column: 43, scope: !5692)
!5711 = !DILocation(line: 431, column: 22, scope: !5692)
!5712 = !DILocation(line: 431, column: 21, scope: !5692)
!5713 = !DILocation(line: 431, column: 48, scope: !5692)
!5714 = !DILocation(line: 431, column: 72, scope: !5692)
!5715 = !DILocation(line: 431, column: 51, scope: !5692)
!5716 = !DILocation(line: 431, column: 50, scope: !5692)
!5717 = !DILocation(line: 431, column: 46, scope: !5692)
!5718 = !DILocation(line: 431, column: 18, scope: !5692)
!5719 = !DILocation(line: 432, column: 18, scope: !5692)
!5720 = !DILocation(line: 432, column: 17, scope: !5692)
!5721 = !DILocation(line: 432, column: 23, scope: !5692)
!5722 = !DILocation(line: 432, column: 22, scope: !5692)
!5723 = !DILocation(line: 433, column: 3, scope: !5692)
!5724 = !DILocalVariable(name: "from_p", scope: !5725, file: !1, line: 435, type: !649)
!5725 = distinct !DILexicalBlock(scope: !5687, file: !1, line: 434, column: 8)
!5726 = !DILocation(line: 435, column: 9, scope: !5725)
!5727 = !DILocation(line: 435, column: 40, scope: !5725)
!5728 = !DILocation(line: 435, column: 19, scope: !5725)
!5729 = !DILocation(line: 435, column: 66, scope: !5725)
!5730 = !DILocation(line: 435, column: 45, scope: !5725)
!5731 = !DILocation(line: 435, column: 43, scope: !5725)
!5732 = !DILocation(line: 436, column: 11, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 436, column: 10)
!5734 = !DILocation(line: 436, column: 19, scope: !5733)
!5735 = !DILocation(line: 436, column: 35, scope: !5733)
!5736 = !DILocation(line: 436, column: 10, scope: !5725)
!5737 = !DILocation(line: 437, column: 28, scope: !5733)
!5738 = !DILocation(line: 437, column: 37, scope: !5733)
!5739 = !DILocation(line: 437, column: 40, scope: !5733)
!5740 = !DILocation(line: 437, column: 50, scope: !5733)
!5741 = !DILocation(line: 437, column: 53, scope: !5733)
!5742 = !DILocation(line: 437, column: 7, scope: !5733)
!5743 = !DILocation(line: 437, column: 18, scope: !5733)
!5744 = !DILocation(line: 437, column: 26, scope: !5733)
!5745 = !DILocation(line: 438, column: 11, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 438, column: 10)
!5747 = !DILocation(line: 438, column: 19, scope: !5746)
!5748 = !DILocation(line: 438, column: 33, scope: !5746)
!5749 = !DILocation(line: 438, column: 10, scope: !5725)
!5750 = !DILocation(line: 439, column: 24, scope: !5746)
!5751 = !DILocation(line: 439, column: 33, scope: !5746)
!5752 = !DILocation(line: 439, column: 36, scope: !5746)
!5753 = !DILocation(line: 439, column: 42, scope: !5746)
!5754 = !DILocation(line: 439, column: 45, scope: !5746)
!5755 = !DILocation(line: 439, column: 7, scope: !5746)
!5756 = !DILocation(line: 439, column: 18, scope: !5746)
!5757 = !DILocation(line: 439, column: 22, scope: !5746)
!5758 = !DILocation(line: 440, column: 11, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 440, column: 10)
!5760 = !DILocation(line: 440, column: 19, scope: !5759)
!5761 = !DILocation(line: 440, column: 35, scope: !5759)
!5762 = !DILocation(line: 440, column: 10, scope: !5725)
!5763 = !DILocation(line: 441, column: 26, scope: !5759)
!5764 = !DILocation(line: 441, column: 35, scope: !5759)
!5765 = !DILocation(line: 441, column: 38, scope: !5759)
!5766 = !DILocation(line: 441, column: 46, scope: !5759)
!5767 = !DILocation(line: 441, column: 49, scope: !5759)
!5768 = !DILocation(line: 441, column: 7, scope: !5759)
!5769 = !DILocation(line: 441, column: 18, scope: !5759)
!5770 = !DILocation(line: 441, column: 24, scope: !5759)
!5771 = !DILocation(line: 442, column: 11, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 442, column: 10)
!5773 = !DILocation(line: 442, column: 19, scope: !5772)
!5774 = !DILocation(line: 442, column: 34, scope: !5772)
!5775 = !DILocation(line: 442, column: 10, scope: !5725)
!5776 = !DILocation(line: 443, column: 25, scope: !5772)
!5777 = !DILocation(line: 443, column: 34, scope: !5772)
!5778 = !DILocation(line: 443, column: 37, scope: !5772)
!5779 = !DILocation(line: 443, column: 44, scope: !5772)
!5780 = !DILocation(line: 443, column: 47, scope: !5772)
!5781 = !DILocation(line: 443, column: 7, scope: !5772)
!5782 = !DILocation(line: 443, column: 18, scope: !5772)
!5783 = !DILocation(line: 443, column: 23, scope: !5772)
!5784 = !DILocation(line: 444, column: 11, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 444, column: 10)
!5786 = !DILocation(line: 444, column: 19, scope: !5785)
!5787 = !DILocation(line: 444, column: 35, scope: !5785)
!5788 = !DILocation(line: 444, column: 40, scope: !5785)
!5789 = !DILocation(line: 444, column: 43, scope: !5785)
!5790 = !DILocation(line: 444, column: 46, scope: !5785)
!5791 = !DILocation(line: 444, column: 57, scope: !5785)
!5792 = !DILocation(line: 444, column: 10, scope: !5725)
!5793 = !DILocation(line: 445, column: 26, scope: !5785)
!5794 = !DILocation(line: 445, column: 35, scope: !5785)
!5795 = !DILocation(line: 445, column: 38, scope: !5785)
!5796 = !DILocation(line: 445, column: 46, scope: !5785)
!5797 = !DILocation(line: 445, column: 49, scope: !5785)
!5798 = !DILocation(line: 445, column: 7, scope: !5785)
!5799 = !DILocation(line: 445, column: 18, scope: !5785)
!5800 = !DILocation(line: 445, column: 24, scope: !5785)
!5801 = !DILocation(line: 447, column: 1, scope: !5677)
!5802 = distinct !DISubprogram(name: "CompositeLightenIntensity", scope: !1, file: !1, line: 835, type: !3614, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5803 = !DILocalVariable(name: "p", arg: 1, scope: !5802, file: !1, line: 835, type: !3051)
!5804 = !DILocation(line: 835, column: 71, scope: !5802)
!5805 = !DILocalVariable(name: "q", arg: 2, scope: !5802, file: !1, line: 836, type: !3051)
!5806 = !DILocation(line: 836, column: 28, scope: !5802)
!5807 = !DILocalVariable(name: "channel", arg: 3, scope: !5802, file: !1, line: 836, type: !746)
!5808 = !DILocation(line: 836, column: 48, scope: !5802)
!5809 = !DILocalVariable(name: "composite", arg: 4, scope: !5802, file: !1, line: 837, type: !3082)
!5810 = !DILocation(line: 837, column: 22, scope: !5802)
!5811 = !DILocation(line: 844, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !1, line: 844, column: 8)
!5813 = !DILocation(line: 844, column: 17, scope: !5812)
!5814 = !DILocation(line: 844, column: 33, scope: !5812)
!5815 = !DILocation(line: 844, column: 8, scope: !5802)
!5816 = !DILocalVariable(name: "Da", scope: !5817, file: !1, line: 846, type: !710)
!5817 = distinct !DILexicalBlock(scope: !5812, file: !1, line: 844, column: 40)
!5818 = !DILocation(line: 846, column: 7, scope: !5817)
!5819 = !DILocalVariable(name: "Sa", scope: !5817, file: !1, line: 847, type: !710)
!5820 = !DILocation(line: 847, column: 7, scope: !5817)
!5821 = !DILocation(line: 849, column: 25, scope: !5817)
!5822 = !DILocation(line: 849, column: 28, scope: !5817)
!5823 = !DILocation(line: 849, column: 24, scope: !5817)
!5824 = !DILocation(line: 849, column: 11, scope: !5817)
!5825 = !DILocation(line: 849, column: 8, scope: !5817)
!5826 = !DILocation(line: 849, column: 7, scope: !5817)
!5827 = !DILocation(line: 850, column: 25, scope: !5817)
!5828 = !DILocation(line: 850, column: 28, scope: !5817)
!5829 = !DILocation(line: 850, column: 24, scope: !5817)
!5830 = !DILocation(line: 850, column: 11, scope: !5817)
!5831 = !DILocation(line: 850, column: 8, scope: !5817)
!5832 = !DILocation(line: 850, column: 7, scope: !5817)
!5833 = !DILocation(line: 851, column: 6, scope: !5817)
!5834 = !DILocation(line: 851, column: 19, scope: !5817)
!5835 = !DILocation(line: 851, column: 43, scope: !5817)
!5836 = !DILocation(line: 851, column: 22, scope: !5817)
!5837 = !DILocation(line: 851, column: 21, scope: !5817)
!5838 = !DILocation(line: 851, column: 48, scope: !5817)
!5839 = !DILocation(line: 851, column: 72, scope: !5817)
!5840 = !DILocation(line: 851, column: 51, scope: !5817)
!5841 = !DILocation(line: 851, column: 50, scope: !5817)
!5842 = !DILocation(line: 851, column: 46, scope: !5817)
!5843 = !DILocation(line: 851, column: 18, scope: !5817)
!5844 = !DILocation(line: 852, column: 19, scope: !5817)
!5845 = !DILocation(line: 852, column: 18, scope: !5817)
!5846 = !DILocation(line: 852, column: 24, scope: !5817)
!5847 = !DILocation(line: 852, column: 23, scope: !5817)
!5848 = !DILocation(line: 853, column: 3, scope: !5817)
!5849 = !DILocalVariable(name: "from_p", scope: !5850, file: !1, line: 855, type: !649)
!5850 = distinct !DILexicalBlock(scope: !5812, file: !1, line: 854, column: 8)
!5851 = !DILocation(line: 855, column: 9, scope: !5850)
!5852 = !DILocation(line: 855, column: 40, scope: !5850)
!5853 = !DILocation(line: 855, column: 19, scope: !5850)
!5854 = !DILocation(line: 855, column: 66, scope: !5850)
!5855 = !DILocation(line: 855, column: 45, scope: !5850)
!5856 = !DILocation(line: 855, column: 43, scope: !5850)
!5857 = !DILocation(line: 856, column: 11, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5850, file: !1, line: 856, column: 10)
!5859 = !DILocation(line: 856, column: 19, scope: !5858)
!5860 = !DILocation(line: 856, column: 35, scope: !5858)
!5861 = !DILocation(line: 856, column: 10, scope: !5850)
!5862 = !DILocation(line: 857, column: 28, scope: !5858)
!5863 = !DILocation(line: 857, column: 37, scope: !5858)
!5864 = !DILocation(line: 857, column: 40, scope: !5858)
!5865 = !DILocation(line: 857, column: 50, scope: !5858)
!5866 = !DILocation(line: 857, column: 53, scope: !5858)
!5867 = !DILocation(line: 857, column: 7, scope: !5858)
!5868 = !DILocation(line: 857, column: 18, scope: !5858)
!5869 = !DILocation(line: 857, column: 26, scope: !5858)
!5870 = !DILocation(line: 858, column: 11, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5850, file: !1, line: 858, column: 10)
!5872 = !DILocation(line: 858, column: 19, scope: !5871)
!5873 = !DILocation(line: 858, column: 33, scope: !5871)
!5874 = !DILocation(line: 858, column: 10, scope: !5850)
!5875 = !DILocation(line: 859, column: 24, scope: !5871)
!5876 = !DILocation(line: 859, column: 33, scope: !5871)
!5877 = !DILocation(line: 859, column: 36, scope: !5871)
!5878 = !DILocation(line: 859, column: 42, scope: !5871)
!5879 = !DILocation(line: 859, column: 45, scope: !5871)
!5880 = !DILocation(line: 859, column: 7, scope: !5871)
!5881 = !DILocation(line: 859, column: 18, scope: !5871)
!5882 = !DILocation(line: 859, column: 22, scope: !5871)
!5883 = !DILocation(line: 860, column: 11, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5850, file: !1, line: 860, column: 10)
!5885 = !DILocation(line: 860, column: 19, scope: !5884)
!5886 = !DILocation(line: 860, column: 35, scope: !5884)
!5887 = !DILocation(line: 860, column: 10, scope: !5850)
!5888 = !DILocation(line: 861, column: 26, scope: !5884)
!5889 = !DILocation(line: 861, column: 35, scope: !5884)
!5890 = !DILocation(line: 861, column: 38, scope: !5884)
!5891 = !DILocation(line: 861, column: 46, scope: !5884)
!5892 = !DILocation(line: 861, column: 49, scope: !5884)
!5893 = !DILocation(line: 861, column: 7, scope: !5884)
!5894 = !DILocation(line: 861, column: 18, scope: !5884)
!5895 = !DILocation(line: 861, column: 24, scope: !5884)
!5896 = !DILocation(line: 862, column: 11, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5850, file: !1, line: 862, column: 10)
!5898 = !DILocation(line: 862, column: 19, scope: !5897)
!5899 = !DILocation(line: 862, column: 34, scope: !5897)
!5900 = !DILocation(line: 862, column: 10, scope: !5850)
!5901 = !DILocation(line: 863, column: 25, scope: !5897)
!5902 = !DILocation(line: 863, column: 34, scope: !5897)
!5903 = !DILocation(line: 863, column: 37, scope: !5897)
!5904 = !DILocation(line: 863, column: 44, scope: !5897)
!5905 = !DILocation(line: 863, column: 47, scope: !5897)
!5906 = !DILocation(line: 863, column: 7, scope: !5897)
!5907 = !DILocation(line: 863, column: 18, scope: !5897)
!5908 = !DILocation(line: 863, column: 23, scope: !5897)
!5909 = !DILocation(line: 864, column: 11, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5850, file: !1, line: 864, column: 10)
!5911 = !DILocation(line: 864, column: 19, scope: !5910)
!5912 = !DILocation(line: 864, column: 35, scope: !5910)
!5913 = !DILocation(line: 864, column: 40, scope: !5910)
!5914 = !DILocation(line: 864, column: 43, scope: !5910)
!5915 = !DILocation(line: 864, column: 46, scope: !5910)
!5916 = !DILocation(line: 864, column: 57, scope: !5910)
!5917 = !DILocation(line: 864, column: 10, scope: !5850)
!5918 = !DILocation(line: 865, column: 26, scope: !5910)
!5919 = !DILocation(line: 865, column: 35, scope: !5910)
!5920 = !DILocation(line: 865, column: 38, scope: !5910)
!5921 = !DILocation(line: 865, column: 46, scope: !5910)
!5922 = !DILocation(line: 865, column: 49, scope: !5910)
!5923 = !DILocation(line: 865, column: 7, scope: !5910)
!5924 = !DILocation(line: 865, column: 18, scope: !5910)
!5925 = !DILocation(line: 865, column: 24, scope: !5910)
!5926 = !DILocation(line: 867, column: 1, scope: !5802)
!5927 = distinct !DISubprogram(name: "CompositeMathematics", scope: !1, file: !1, line: 1011, type: !5928, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{null, !3051, !3051, !746, !5930, !3082}
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5931, size: 64)
!5931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!5932 = !DILocalVariable(name: "p", arg: 1, scope: !5927, file: !1, line: 1011, type: !3051)
!5933 = !DILocation(line: 1011, column: 66, scope: !5927)
!5934 = !DILocalVariable(name: "q", arg: 2, scope: !5927, file: !1, line: 1012, type: !3051)
!5935 = !DILocation(line: 1012, column: 28, scope: !5927)
!5936 = !DILocalVariable(name: "channel", arg: 3, scope: !5927, file: !1, line: 1012, type: !746)
!5937 = !DILocation(line: 1012, column: 48, scope: !5927)
!5938 = !DILocalVariable(name: "args", arg: 4, scope: !5927, file: !1, line: 1013, type: !5930)
!5939 = !DILocation(line: 1013, column: 4, scope: !5927)
!5940 = !DILocalVariable(name: "composite", arg: 5, scope: !5927, file: !1, line: 1013, type: !3082)
!5941 = !DILocation(line: 1013, column: 29, scope: !5927)
!5942 = !DILocalVariable(name: "gamma", scope: !5927, file: !1, line: 1016, type: !519)
!5943 = !DILocation(line: 1016, column: 5, scope: !5927)
!5944 = !DILocalVariable(name: "Da", scope: !5927, file: !1, line: 1019, type: !710)
!5945 = !DILocation(line: 1019, column: 5, scope: !5927)
!5946 = !DILocalVariable(name: "Sa", scope: !5927, file: !1, line: 1020, type: !710)
!5947 = !DILocation(line: 1020, column: 5, scope: !5927)
!5948 = !DILocation(line: 1022, column: 23, scope: !5927)
!5949 = !DILocation(line: 1022, column: 26, scope: !5927)
!5950 = !DILocation(line: 1022, column: 22, scope: !5927)
!5951 = !DILocation(line: 1022, column: 9, scope: !5927)
!5952 = !DILocation(line: 1022, column: 6, scope: !5927)
!5953 = !DILocation(line: 1022, column: 5, scope: !5927)
!5954 = !DILocation(line: 1023, column: 23, scope: !5927)
!5955 = !DILocation(line: 1023, column: 26, scope: !5927)
!5956 = !DILocation(line: 1023, column: 22, scope: !5927)
!5957 = !DILocation(line: 1023, column: 9, scope: !5927)
!5958 = !DILocation(line: 1023, column: 6, scope: !5927)
!5959 = !DILocation(line: 1023, column: 5, scope: !5927)
!5960 = !DILocation(line: 1024, column: 9, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5927, file: !1, line: 1024, column: 8)
!5962 = !DILocation(line: 1024, column: 17, scope: !5961)
!5963 = !DILocation(line: 1024, column: 33, scope: !5961)
!5964 = !DILocation(line: 1024, column: 8, scope: !5927)
!5965 = !DILocation(line: 1025, column: 24, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 1024, column: 40)
!5967 = !DILocation(line: 1025, column: 27, scope: !5966)
!5968 = !DILocation(line: 1025, column: 26, scope: !5966)
!5969 = !DILocation(line: 1025, column: 30, scope: !5966)
!5970 = !DILocation(line: 1025, column: 33, scope: !5966)
!5971 = !DILocation(line: 1025, column: 32, scope: !5966)
!5972 = !DILocation(line: 1025, column: 29, scope: !5966)
!5973 = !DILocation(line: 1025, column: 11, scope: !5966)
!5974 = !DILocation(line: 1025, column: 10, scope: !5966)
!5975 = !DILocation(line: 1026, column: 59, scope: !5966)
!5976 = !DILocation(line: 1026, column: 58, scope: !5966)
!5977 = !DILocation(line: 1026, column: 53, scope: !5966)
!5978 = !DILocation(line: 1026, column: 24, scope: !5966)
!5979 = !DILocation(line: 1026, column: 5, scope: !5966)
!5980 = !DILocation(line: 1026, column: 16, scope: !5966)
!5981 = !DILocation(line: 1026, column: 23, scope: !5966)
!5982 = !DILocation(line: 1027, column: 30, scope: !5966)
!5983 = !DILocation(line: 1027, column: 25, scope: !5966)
!5984 = !DILocation(line: 1027, column: 37, scope: !5966)
!5985 = !DILocation(line: 1027, column: 71, scope: !5966)
!5986 = !DILocation(line: 1027, column: 23, scope: !5966)
!5987 = !DILocation(line: 1027, column: 10, scope: !5966)
!5988 = !DILocation(line: 1028, column: 20, scope: !5966)
!5989 = !DILocation(line: 1028, column: 51, scope: !5966)
!5990 = !DILocation(line: 1028, column: 54, scope: !5966)
!5991 = !DILocation(line: 1028, column: 50, scope: !5966)
!5992 = !DILocation(line: 1028, column: 58, scope: !5966)
!5993 = !DILocation(line: 1028, column: 57, scope: !5966)
!5994 = !DILocation(line: 1028, column: 38, scope: !5966)
!5995 = !DILocation(line: 1028, column: 61, scope: !5966)
!5996 = !DILocation(line: 1029, column: 7, scope: !5966)
!5997 = !DILocation(line: 1029, column: 10, scope: !5966)
!5998 = !DILocation(line: 1028, column: 76, scope: !5966)
!5999 = !DILocation(line: 1029, column: 14, scope: !5966)
!6000 = !DILocation(line: 1029, column: 13, scope: !5966)
!6001 = !DILocation(line: 1028, column: 64, scope: !5966)
!6002 = !DILocation(line: 1029, column: 17, scope: !5966)
!6003 = !DILocation(line: 1029, column: 20, scope: !5966)
!6004 = !DILocation(line: 1028, column: 26, scope: !5966)
!6005 = !DILocation(line: 1028, column: 25, scope: !5966)
!6006 = !DILocation(line: 1028, column: 5, scope: !5966)
!6007 = !DILocation(line: 1028, column: 16, scope: !5966)
!6008 = !DILocation(line: 1028, column: 19, scope: !5966)
!6009 = !DILocation(line: 1030, column: 22, scope: !5966)
!6010 = !DILocation(line: 1030, column: 53, scope: !5966)
!6011 = !DILocation(line: 1030, column: 56, scope: !5966)
!6012 = !DILocation(line: 1030, column: 52, scope: !5966)
!6013 = !DILocation(line: 1030, column: 62, scope: !5966)
!6014 = !DILocation(line: 1030, column: 61, scope: !5966)
!6015 = !DILocation(line: 1030, column: 40, scope: !5966)
!6016 = !DILocation(line: 1030, column: 65, scope: !5966)
!6017 = !DILocation(line: 1031, column: 7, scope: !5966)
!6018 = !DILocation(line: 1031, column: 10, scope: !5966)
!6019 = !DILocation(line: 1030, column: 80, scope: !5966)
!6020 = !DILocation(line: 1031, column: 16, scope: !5966)
!6021 = !DILocation(line: 1031, column: 15, scope: !5966)
!6022 = !DILocation(line: 1030, column: 68, scope: !5966)
!6023 = !DILocation(line: 1031, column: 19, scope: !5966)
!6024 = !DILocation(line: 1031, column: 22, scope: !5966)
!6025 = !DILocation(line: 1030, column: 28, scope: !5966)
!6026 = !DILocation(line: 1030, column: 27, scope: !5966)
!6027 = !DILocation(line: 1030, column: 5, scope: !5966)
!6028 = !DILocation(line: 1030, column: 16, scope: !5966)
!6029 = !DILocation(line: 1030, column: 21, scope: !5966)
!6030 = !DILocation(line: 1032, column: 21, scope: !5966)
!6031 = !DILocation(line: 1032, column: 52, scope: !5966)
!6032 = !DILocation(line: 1032, column: 55, scope: !5966)
!6033 = !DILocation(line: 1032, column: 51, scope: !5966)
!6034 = !DILocation(line: 1032, column: 60, scope: !5966)
!6035 = !DILocation(line: 1032, column: 59, scope: !5966)
!6036 = !DILocation(line: 1032, column: 39, scope: !5966)
!6037 = !DILocation(line: 1032, column: 63, scope: !5966)
!6038 = !DILocation(line: 1033, column: 7, scope: !5966)
!6039 = !DILocation(line: 1033, column: 10, scope: !5966)
!6040 = !DILocation(line: 1032, column: 78, scope: !5966)
!6041 = !DILocation(line: 1033, column: 15, scope: !5966)
!6042 = !DILocation(line: 1033, column: 14, scope: !5966)
!6043 = !DILocation(line: 1032, column: 66, scope: !5966)
!6044 = !DILocation(line: 1033, column: 18, scope: !5966)
!6045 = !DILocation(line: 1033, column: 21, scope: !5966)
!6046 = !DILocation(line: 1032, column: 27, scope: !5966)
!6047 = !DILocation(line: 1032, column: 26, scope: !5966)
!6048 = !DILocation(line: 1032, column: 5, scope: !5966)
!6049 = !DILocation(line: 1032, column: 16, scope: !5966)
!6050 = !DILocation(line: 1032, column: 20, scope: !5966)
!6051 = !DILocation(line: 1034, column: 9, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !5966, file: !1, line: 1034, column: 9)
!6053 = !DILocation(line: 1034, column: 12, scope: !6052)
!6054 = !DILocation(line: 1034, column: 23, scope: !6052)
!6055 = !DILocation(line: 1034, column: 9, scope: !5966)
!6056 = !DILocation(line: 1035, column: 24, scope: !6052)
!6057 = !DILocation(line: 1035, column: 55, scope: !6052)
!6058 = !DILocation(line: 1035, column: 58, scope: !6052)
!6059 = !DILocation(line: 1035, column: 54, scope: !6052)
!6060 = !DILocation(line: 1035, column: 64, scope: !6052)
!6061 = !DILocation(line: 1035, column: 63, scope: !6052)
!6062 = !DILocation(line: 1035, column: 42, scope: !6052)
!6063 = !DILocation(line: 1035, column: 67, scope: !6052)
!6064 = !DILocation(line: 1036, column: 9, scope: !6052)
!6065 = !DILocation(line: 1036, column: 12, scope: !6052)
!6066 = !DILocation(line: 1035, column: 82, scope: !6052)
!6067 = !DILocation(line: 1036, column: 18, scope: !6052)
!6068 = !DILocation(line: 1036, column: 17, scope: !6052)
!6069 = !DILocation(line: 1035, column: 70, scope: !6052)
!6070 = !DILocation(line: 1036, column: 21, scope: !6052)
!6071 = !DILocation(line: 1036, column: 24, scope: !6052)
!6072 = !DILocation(line: 1035, column: 30, scope: !6052)
!6073 = !DILocation(line: 1035, column: 29, scope: !6052)
!6074 = !DILocation(line: 1035, column: 7, scope: !6052)
!6075 = !DILocation(line: 1035, column: 18, scope: !6052)
!6076 = !DILocation(line: 1035, column: 23, scope: !6052)
!6077 = !DILocation(line: 1037, column: 3, scope: !5966)
!6078 = !DILocation(line: 1039, column: 11, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1039, column: 10)
!6080 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 1038, column: 8)
!6081 = !DILocation(line: 1039, column: 19, scope: !6079)
!6082 = !DILocation(line: 1039, column: 35, scope: !6079)
!6083 = !DILocation(line: 1039, column: 10, scope: !6080)
!6084 = !DILocation(line: 1040, column: 56, scope: !6079)
!6085 = !DILocation(line: 1040, column: 63, scope: !6079)
!6086 = !DILocation(line: 1040, column: 70, scope: !6079)
!6087 = !DILocation(line: 1040, column: 44, scope: !6079)
!6088 = !DILocation(line: 1040, column: 43, scope: !6079)
!6089 = !DILocation(line: 1040, column: 38, scope: !6079)
!6090 = !DILocation(line: 1040, column: 26, scope: !6079)
!6091 = !DILocation(line: 1040, column: 7, scope: !6079)
!6092 = !DILocation(line: 1040, column: 18, scope: !6079)
!6093 = !DILocation(line: 1040, column: 25, scope: !6079)
!6094 = !DILocation(line: 1041, column: 11, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1041, column: 10)
!6096 = !DILocation(line: 1041, column: 19, scope: !6095)
!6097 = !DILocation(line: 1041, column: 33, scope: !6095)
!6098 = !DILocation(line: 1041, column: 10, scope: !6080)
!6099 = !DILocation(line: 1043, column: 36, scope: !6095)
!6100 = !DILocation(line: 1043, column: 39, scope: !6095)
!6101 = !DILocation(line: 1043, column: 35, scope: !6095)
!6102 = !DILocation(line: 1043, column: 23, scope: !6095)
!6103 = !DILocation(line: 1043, column: 60, scope: !6095)
!6104 = !DILocation(line: 1043, column: 63, scope: !6095)
!6105 = !DILocation(line: 1043, column: 59, scope: !6095)
!6106 = !DILocation(line: 1043, column: 47, scope: !6095)
!6107 = !DILocation(line: 1043, column: 71, scope: !6095)
!6108 = !DILocation(line: 1043, column: 11, scope: !6095)
!6109 = !DILocation(line: 1042, column: 34, scope: !6095)
!6110 = !DILocation(line: 1042, column: 7, scope: !6095)
!6111 = !DILocation(line: 1042, column: 18, scope: !6095)
!6112 = !DILocation(line: 1042, column: 21, scope: !6095)
!6113 = !DILocation(line: 1044, column: 11, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1044, column: 10)
!6115 = !DILocation(line: 1044, column: 19, scope: !6114)
!6116 = !DILocation(line: 1044, column: 35, scope: !6114)
!6117 = !DILocation(line: 1044, column: 10, scope: !6080)
!6118 = !DILocation(line: 1046, column: 36, scope: !6114)
!6119 = !DILocation(line: 1046, column: 39, scope: !6114)
!6120 = !DILocation(line: 1046, column: 35, scope: !6114)
!6121 = !DILocation(line: 1046, column: 23, scope: !6114)
!6122 = !DILocation(line: 1046, column: 62, scope: !6114)
!6123 = !DILocation(line: 1046, column: 65, scope: !6114)
!6124 = !DILocation(line: 1046, column: 61, scope: !6114)
!6125 = !DILocation(line: 1046, column: 49, scope: !6114)
!6126 = !DILocation(line: 1046, column: 75, scope: !6114)
!6127 = !DILocation(line: 1046, column: 11, scope: !6114)
!6128 = !DILocation(line: 1045, column: 36, scope: !6114)
!6129 = !DILocation(line: 1045, column: 7, scope: !6114)
!6130 = !DILocation(line: 1045, column: 18, scope: !6114)
!6131 = !DILocation(line: 1045, column: 23, scope: !6114)
!6132 = !DILocation(line: 1047, column: 11, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1047, column: 10)
!6134 = !DILocation(line: 1047, column: 19, scope: !6133)
!6135 = !DILocation(line: 1047, column: 34, scope: !6133)
!6136 = !DILocation(line: 1047, column: 10, scope: !6080)
!6137 = !DILocation(line: 1049, column: 36, scope: !6133)
!6138 = !DILocation(line: 1049, column: 39, scope: !6133)
!6139 = !DILocation(line: 1049, column: 35, scope: !6133)
!6140 = !DILocation(line: 1049, column: 23, scope: !6133)
!6141 = !DILocation(line: 1049, column: 61, scope: !6133)
!6142 = !DILocation(line: 1049, column: 64, scope: !6133)
!6143 = !DILocation(line: 1049, column: 60, scope: !6133)
!6144 = !DILocation(line: 1049, column: 48, scope: !6133)
!6145 = !DILocation(line: 1049, column: 73, scope: !6133)
!6146 = !DILocation(line: 1049, column: 11, scope: !6133)
!6147 = !DILocation(line: 1048, column: 35, scope: !6133)
!6148 = !DILocation(line: 1048, column: 7, scope: !6133)
!6149 = !DILocation(line: 1048, column: 18, scope: !6133)
!6150 = !DILocation(line: 1048, column: 22, scope: !6133)
!6151 = !DILocation(line: 1050, column: 11, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1050, column: 10)
!6153 = !DILocation(line: 1050, column: 19, scope: !6152)
!6154 = !DILocation(line: 1050, column: 35, scope: !6152)
!6155 = !DILocation(line: 1050, column: 40, scope: !6152)
!6156 = !DILocation(line: 1050, column: 43, scope: !6152)
!6157 = !DILocation(line: 1050, column: 46, scope: !6152)
!6158 = !DILocation(line: 1050, column: 57, scope: !6152)
!6159 = !DILocation(line: 1050, column: 10, scope: !6080)
!6160 = !DILocation(line: 1052, column: 36, scope: !6152)
!6161 = !DILocation(line: 1052, column: 39, scope: !6152)
!6162 = !DILocation(line: 1052, column: 35, scope: !6152)
!6163 = !DILocation(line: 1052, column: 23, scope: !6152)
!6164 = !DILocation(line: 1052, column: 62, scope: !6152)
!6165 = !DILocation(line: 1052, column: 65, scope: !6152)
!6166 = !DILocation(line: 1052, column: 61, scope: !6152)
!6167 = !DILocation(line: 1052, column: 49, scope: !6152)
!6168 = !DILocation(line: 1052, column: 75, scope: !6152)
!6169 = !DILocation(line: 1052, column: 11, scope: !6152)
!6170 = !DILocation(line: 1051, column: 36, scope: !6152)
!6171 = !DILocation(line: 1051, column: 7, scope: !6152)
!6172 = !DILocation(line: 1051, column: 18, scope: !6152)
!6173 = !DILocation(line: 1051, column: 23, scope: !6152)
!6174 = !DILocation(line: 1055, column: 1, scope: !5927)
!6175 = distinct !DISubprogram(name: "CompositeColorDodge", scope: !1, file: !1, line: 344, type: !3231, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6176 = !DILocalVariable(name: "p", arg: 1, scope: !6175, file: !1, line: 344, type: !3051)
!6177 = !DILocation(line: 344, column: 65, scope: !6175)
!6178 = !DILocalVariable(name: "q", arg: 2, scope: !6175, file: !1, line: 345, type: !3051)
!6179 = !DILocation(line: 345, column: 28, scope: !6175)
!6180 = !DILocalVariable(name: "composite", arg: 3, scope: !6175, file: !1, line: 345, type: !3082)
!6181 = !DILocation(line: 345, column: 49, scope: !6175)
!6182 = !DILocalVariable(name: "Da", scope: !6175, file: !1, line: 348, type: !710)
!6183 = !DILocation(line: 348, column: 5, scope: !6175)
!6184 = !DILocalVariable(name: "gamma", scope: !6175, file: !1, line: 349, type: !710)
!6185 = !DILocation(line: 349, column: 5, scope: !6175)
!6186 = !DILocalVariable(name: "Sa", scope: !6175, file: !1, line: 350, type: !710)
!6187 = !DILocation(line: 350, column: 5, scope: !6175)
!6188 = !DILocation(line: 352, column: 23, scope: !6175)
!6189 = !DILocation(line: 352, column: 26, scope: !6175)
!6190 = !DILocation(line: 352, column: 22, scope: !6175)
!6191 = !DILocation(line: 352, column: 9, scope: !6175)
!6192 = !DILocation(line: 352, column: 6, scope: !6175)
!6193 = !DILocation(line: 352, column: 5, scope: !6175)
!6194 = !DILocation(line: 353, column: 23, scope: !6175)
!6195 = !DILocation(line: 353, column: 26, scope: !6175)
!6196 = !DILocation(line: 353, column: 22, scope: !6175)
!6197 = !DILocation(line: 353, column: 9, scope: !6175)
!6198 = !DILocation(line: 353, column: 6, scope: !6175)
!6199 = !DILocation(line: 353, column: 5, scope: !6175)
!6200 = !DILocation(line: 354, column: 22, scope: !6175)
!6201 = !DILocation(line: 354, column: 25, scope: !6175)
!6202 = !DILocation(line: 354, column: 24, scope: !6175)
!6203 = !DILocation(line: 354, column: 28, scope: !6175)
!6204 = !DILocation(line: 354, column: 31, scope: !6175)
!6205 = !DILocation(line: 354, column: 30, scope: !6175)
!6206 = !DILocation(line: 354, column: 27, scope: !6175)
!6207 = !DILocation(line: 354, column: 9, scope: !6175)
!6208 = !DILocation(line: 354, column: 8, scope: !6175)
!6209 = !DILocation(line: 355, column: 57, scope: !6175)
!6210 = !DILocation(line: 355, column: 56, scope: !6175)
!6211 = !DILocation(line: 355, column: 51, scope: !6175)
!6212 = !DILocation(line: 355, column: 22, scope: !6175)
!6213 = !DILocation(line: 355, column: 3, scope: !6175)
!6214 = !DILocation(line: 355, column: 14, scope: !6175)
!6215 = !DILocation(line: 355, column: 21, scope: !6175)
!6216 = !DILocation(line: 356, column: 28, scope: !6175)
!6217 = !DILocation(line: 356, column: 23, scope: !6175)
!6218 = !DILocation(line: 356, column: 35, scope: !6175)
!6219 = !DILocation(line: 356, column: 69, scope: !6175)
!6220 = !DILocation(line: 356, column: 21, scope: !6175)
!6221 = !DILocation(line: 356, column: 9, scope: !6175)
!6222 = !DILocation(line: 356, column: 8, scope: !6175)
!6223 = !DILocation(line: 357, column: 18, scope: !6175)
!6224 = !DILocation(line: 357, column: 48, scope: !6175)
!6225 = !DILocation(line: 357, column: 51, scope: !6175)
!6226 = !DILocation(line: 357, column: 47, scope: !6175)
!6227 = !DILocation(line: 357, column: 55, scope: !6175)
!6228 = !DILocation(line: 357, column: 54, scope: !6175)
!6229 = !DILocation(line: 357, column: 35, scope: !6175)
!6230 = !DILocation(line: 357, column: 58, scope: !6175)
!6231 = !DILocation(line: 358, column: 5, scope: !6175)
!6232 = !DILocation(line: 358, column: 8, scope: !6175)
!6233 = !DILocation(line: 357, column: 73, scope: !6175)
!6234 = !DILocation(line: 358, column: 12, scope: !6175)
!6235 = !DILocation(line: 358, column: 11, scope: !6175)
!6236 = !DILocation(line: 357, column: 61, scope: !6175)
!6237 = !DILocation(line: 358, column: 15, scope: !6175)
!6238 = !DILocation(line: 357, column: 24, scope: !6175)
!6239 = !DILocation(line: 357, column: 23, scope: !6175)
!6240 = !DILocation(line: 357, column: 3, scope: !6175)
!6241 = !DILocation(line: 357, column: 14, scope: !6175)
!6242 = !DILocation(line: 357, column: 17, scope: !6175)
!6243 = !DILocation(line: 359, column: 20, scope: !6175)
!6244 = !DILocation(line: 359, column: 50, scope: !6175)
!6245 = !DILocation(line: 359, column: 53, scope: !6175)
!6246 = !DILocation(line: 359, column: 49, scope: !6175)
!6247 = !DILocation(line: 359, column: 59, scope: !6175)
!6248 = !DILocation(line: 359, column: 58, scope: !6175)
!6249 = !DILocation(line: 359, column: 37, scope: !6175)
!6250 = !DILocation(line: 359, column: 62, scope: !6175)
!6251 = !DILocation(line: 360, column: 5, scope: !6175)
!6252 = !DILocation(line: 360, column: 8, scope: !6175)
!6253 = !DILocation(line: 359, column: 77, scope: !6175)
!6254 = !DILocation(line: 360, column: 14, scope: !6175)
!6255 = !DILocation(line: 360, column: 13, scope: !6175)
!6256 = !DILocation(line: 359, column: 65, scope: !6175)
!6257 = !DILocation(line: 360, column: 17, scope: !6175)
!6258 = !DILocation(line: 359, column: 26, scope: !6175)
!6259 = !DILocation(line: 359, column: 25, scope: !6175)
!6260 = !DILocation(line: 359, column: 3, scope: !6175)
!6261 = !DILocation(line: 359, column: 14, scope: !6175)
!6262 = !DILocation(line: 359, column: 19, scope: !6175)
!6263 = !DILocation(line: 361, column: 19, scope: !6175)
!6264 = !DILocation(line: 361, column: 49, scope: !6175)
!6265 = !DILocation(line: 361, column: 52, scope: !6175)
!6266 = !DILocation(line: 361, column: 48, scope: !6175)
!6267 = !DILocation(line: 361, column: 57, scope: !6175)
!6268 = !DILocation(line: 361, column: 56, scope: !6175)
!6269 = !DILocation(line: 361, column: 36, scope: !6175)
!6270 = !DILocation(line: 361, column: 60, scope: !6175)
!6271 = !DILocation(line: 362, column: 5, scope: !6175)
!6272 = !DILocation(line: 362, column: 8, scope: !6175)
!6273 = !DILocation(line: 361, column: 75, scope: !6175)
!6274 = !DILocation(line: 362, column: 13, scope: !6175)
!6275 = !DILocation(line: 362, column: 12, scope: !6175)
!6276 = !DILocation(line: 361, column: 63, scope: !6175)
!6277 = !DILocation(line: 362, column: 16, scope: !6175)
!6278 = !DILocation(line: 361, column: 25, scope: !6175)
!6279 = !DILocation(line: 361, column: 24, scope: !6175)
!6280 = !DILocation(line: 361, column: 3, scope: !6175)
!6281 = !DILocation(line: 361, column: 14, scope: !6175)
!6282 = !DILocation(line: 361, column: 18, scope: !6175)
!6283 = !DILocation(line: 363, column: 7, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6175, file: !1, line: 363, column: 7)
!6285 = !DILocation(line: 363, column: 10, scope: !6284)
!6286 = !DILocation(line: 363, column: 21, scope: !6284)
!6287 = !DILocation(line: 363, column: 7, scope: !6175)
!6288 = !DILocation(line: 364, column: 22, scope: !6284)
!6289 = !DILocation(line: 364, column: 52, scope: !6284)
!6290 = !DILocation(line: 364, column: 55, scope: !6284)
!6291 = !DILocation(line: 364, column: 51, scope: !6284)
!6292 = !DILocation(line: 364, column: 61, scope: !6284)
!6293 = !DILocation(line: 364, column: 60, scope: !6284)
!6294 = !DILocation(line: 364, column: 39, scope: !6284)
!6295 = !DILocation(line: 364, column: 64, scope: !6284)
!6296 = !DILocation(line: 365, column: 7, scope: !6284)
!6297 = !DILocation(line: 365, column: 10, scope: !6284)
!6298 = !DILocation(line: 364, column: 79, scope: !6284)
!6299 = !DILocation(line: 365, column: 16, scope: !6284)
!6300 = !DILocation(line: 365, column: 15, scope: !6284)
!6301 = !DILocation(line: 364, column: 67, scope: !6284)
!6302 = !DILocation(line: 365, column: 19, scope: !6284)
!6303 = !DILocation(line: 364, column: 28, scope: !6284)
!6304 = !DILocation(line: 364, column: 27, scope: !6284)
!6305 = !DILocation(line: 364, column: 5, scope: !6284)
!6306 = !DILocation(line: 364, column: 16, scope: !6284)
!6307 = !DILocation(line: 364, column: 21, scope: !6284)
!6308 = !DILocation(line: 366, column: 1, scope: !6175)
!6309 = distinct !DISubprogram(name: "CompositeColorBurn", scope: !1, file: !1, line: 282, type: !3231, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6310 = !DILocalVariable(name: "p", arg: 1, scope: !6309, file: !1, line: 282, type: !3051)
!6311 = !DILocation(line: 282, column: 64, scope: !6309)
!6312 = !DILocalVariable(name: "q", arg: 2, scope: !6309, file: !1, line: 283, type: !3051)
!6313 = !DILocation(line: 283, column: 28, scope: !6309)
!6314 = !DILocalVariable(name: "composite", arg: 3, scope: !6309, file: !1, line: 283, type: !3082)
!6315 = !DILocation(line: 283, column: 49, scope: !6309)
!6316 = !DILocalVariable(name: "Da", scope: !6309, file: !1, line: 286, type: !710)
!6317 = !DILocation(line: 286, column: 5, scope: !6309)
!6318 = !DILocalVariable(name: "gamma", scope: !6309, file: !1, line: 287, type: !710)
!6319 = !DILocation(line: 287, column: 5, scope: !6309)
!6320 = !DILocalVariable(name: "Sa", scope: !6309, file: !1, line: 288, type: !710)
!6321 = !DILocation(line: 288, column: 5, scope: !6309)
!6322 = !DILocation(line: 290, column: 23, scope: !6309)
!6323 = !DILocation(line: 290, column: 26, scope: !6309)
!6324 = !DILocation(line: 290, column: 22, scope: !6309)
!6325 = !DILocation(line: 290, column: 9, scope: !6309)
!6326 = !DILocation(line: 290, column: 6, scope: !6309)
!6327 = !DILocation(line: 290, column: 5, scope: !6309)
!6328 = !DILocation(line: 291, column: 23, scope: !6309)
!6329 = !DILocation(line: 291, column: 26, scope: !6309)
!6330 = !DILocation(line: 291, column: 22, scope: !6309)
!6331 = !DILocation(line: 291, column: 9, scope: !6309)
!6332 = !DILocation(line: 291, column: 6, scope: !6309)
!6333 = !DILocation(line: 291, column: 5, scope: !6309)
!6334 = !DILocation(line: 292, column: 22, scope: !6309)
!6335 = !DILocation(line: 292, column: 25, scope: !6309)
!6336 = !DILocation(line: 292, column: 24, scope: !6309)
!6337 = !DILocation(line: 292, column: 28, scope: !6309)
!6338 = !DILocation(line: 292, column: 31, scope: !6309)
!6339 = !DILocation(line: 292, column: 30, scope: !6309)
!6340 = !DILocation(line: 292, column: 27, scope: !6309)
!6341 = !DILocation(line: 292, column: 9, scope: !6309)
!6342 = !DILocation(line: 292, column: 8, scope: !6309)
!6343 = !DILocation(line: 293, column: 57, scope: !6309)
!6344 = !DILocation(line: 293, column: 56, scope: !6309)
!6345 = !DILocation(line: 293, column: 51, scope: !6309)
!6346 = !DILocation(line: 293, column: 22, scope: !6309)
!6347 = !DILocation(line: 293, column: 3, scope: !6309)
!6348 = !DILocation(line: 293, column: 14, scope: !6309)
!6349 = !DILocation(line: 293, column: 21, scope: !6309)
!6350 = !DILocation(line: 294, column: 28, scope: !6309)
!6351 = !DILocation(line: 294, column: 23, scope: !6309)
!6352 = !DILocation(line: 294, column: 35, scope: !6309)
!6353 = !DILocation(line: 294, column: 69, scope: !6309)
!6354 = !DILocation(line: 294, column: 21, scope: !6309)
!6355 = !DILocation(line: 294, column: 9, scope: !6309)
!6356 = !DILocation(line: 294, column: 8, scope: !6309)
!6357 = !DILocation(line: 295, column: 18, scope: !6309)
!6358 = !DILocation(line: 295, column: 47, scope: !6309)
!6359 = !DILocation(line: 295, column: 50, scope: !6309)
!6360 = !DILocation(line: 295, column: 46, scope: !6309)
!6361 = !DILocation(line: 295, column: 54, scope: !6309)
!6362 = !DILocation(line: 295, column: 53, scope: !6309)
!6363 = !DILocation(line: 295, column: 34, scope: !6309)
!6364 = !DILocation(line: 295, column: 57, scope: !6309)
!6365 = !DILocation(line: 296, column: 5, scope: !6309)
!6366 = !DILocation(line: 296, column: 8, scope: !6309)
!6367 = !DILocation(line: 295, column: 72, scope: !6309)
!6368 = !DILocation(line: 296, column: 12, scope: !6309)
!6369 = !DILocation(line: 296, column: 11, scope: !6309)
!6370 = !DILocation(line: 295, column: 60, scope: !6309)
!6371 = !DILocation(line: 296, column: 15, scope: !6309)
!6372 = !DILocation(line: 295, column: 24, scope: !6309)
!6373 = !DILocation(line: 295, column: 23, scope: !6309)
!6374 = !DILocation(line: 295, column: 3, scope: !6309)
!6375 = !DILocation(line: 295, column: 14, scope: !6309)
!6376 = !DILocation(line: 295, column: 17, scope: !6309)
!6377 = !DILocation(line: 297, column: 20, scope: !6309)
!6378 = !DILocation(line: 297, column: 49, scope: !6309)
!6379 = !DILocation(line: 297, column: 52, scope: !6309)
!6380 = !DILocation(line: 297, column: 48, scope: !6309)
!6381 = !DILocation(line: 297, column: 58, scope: !6309)
!6382 = !DILocation(line: 297, column: 57, scope: !6309)
!6383 = !DILocation(line: 297, column: 36, scope: !6309)
!6384 = !DILocation(line: 297, column: 61, scope: !6309)
!6385 = !DILocation(line: 298, column: 5, scope: !6309)
!6386 = !DILocation(line: 298, column: 8, scope: !6309)
!6387 = !DILocation(line: 297, column: 76, scope: !6309)
!6388 = !DILocation(line: 298, column: 14, scope: !6309)
!6389 = !DILocation(line: 298, column: 13, scope: !6309)
!6390 = !DILocation(line: 297, column: 64, scope: !6309)
!6391 = !DILocation(line: 298, column: 17, scope: !6309)
!6392 = !DILocation(line: 297, column: 26, scope: !6309)
!6393 = !DILocation(line: 297, column: 25, scope: !6309)
!6394 = !DILocation(line: 297, column: 3, scope: !6309)
!6395 = !DILocation(line: 297, column: 14, scope: !6309)
!6396 = !DILocation(line: 297, column: 19, scope: !6309)
!6397 = !DILocation(line: 299, column: 19, scope: !6309)
!6398 = !DILocation(line: 299, column: 48, scope: !6309)
!6399 = !DILocation(line: 299, column: 51, scope: !6309)
!6400 = !DILocation(line: 299, column: 47, scope: !6309)
!6401 = !DILocation(line: 299, column: 56, scope: !6309)
!6402 = !DILocation(line: 299, column: 55, scope: !6309)
!6403 = !DILocation(line: 299, column: 35, scope: !6309)
!6404 = !DILocation(line: 299, column: 59, scope: !6309)
!6405 = !DILocation(line: 300, column: 5, scope: !6309)
!6406 = !DILocation(line: 300, column: 8, scope: !6309)
!6407 = !DILocation(line: 299, column: 74, scope: !6309)
!6408 = !DILocation(line: 300, column: 13, scope: !6309)
!6409 = !DILocation(line: 300, column: 12, scope: !6309)
!6410 = !DILocation(line: 299, column: 62, scope: !6309)
!6411 = !DILocation(line: 300, column: 16, scope: !6309)
!6412 = !DILocation(line: 299, column: 25, scope: !6309)
!6413 = !DILocation(line: 299, column: 24, scope: !6309)
!6414 = !DILocation(line: 299, column: 3, scope: !6309)
!6415 = !DILocation(line: 299, column: 14, scope: !6309)
!6416 = !DILocation(line: 299, column: 18, scope: !6309)
!6417 = !DILocation(line: 301, column: 7, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6309, file: !1, line: 301, column: 7)
!6419 = !DILocation(line: 301, column: 10, scope: !6418)
!6420 = !DILocation(line: 301, column: 21, scope: !6418)
!6421 = !DILocation(line: 301, column: 7, scope: !6309)
!6422 = !DILocation(line: 302, column: 22, scope: !6418)
!6423 = !DILocation(line: 302, column: 51, scope: !6418)
!6424 = !DILocation(line: 302, column: 54, scope: !6418)
!6425 = !DILocation(line: 302, column: 50, scope: !6418)
!6426 = !DILocation(line: 302, column: 60, scope: !6418)
!6427 = !DILocation(line: 302, column: 59, scope: !6418)
!6428 = !DILocation(line: 302, column: 38, scope: !6418)
!6429 = !DILocation(line: 302, column: 63, scope: !6418)
!6430 = !DILocation(line: 303, column: 7, scope: !6418)
!6431 = !DILocation(line: 303, column: 10, scope: !6418)
!6432 = !DILocation(line: 302, column: 78, scope: !6418)
!6433 = !DILocation(line: 303, column: 16, scope: !6418)
!6434 = !DILocation(line: 303, column: 15, scope: !6418)
!6435 = !DILocation(line: 302, column: 66, scope: !6418)
!6436 = !DILocation(line: 303, column: 19, scope: !6418)
!6437 = !DILocation(line: 302, column: 28, scope: !6418)
!6438 = !DILocation(line: 302, column: 27, scope: !6418)
!6439 = !DILocation(line: 302, column: 5, scope: !6418)
!6440 = !DILocation(line: 302, column: 16, scope: !6418)
!6441 = !DILocation(line: 302, column: 21, scope: !6418)
!6442 = !DILocation(line: 304, column: 1, scope: !6309)
!6443 = distinct !DISubprogram(name: "CompositeLinearDodge", scope: !1, file: !1, line: 882, type: !3231, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6444 = !DILocalVariable(name: "p", arg: 1, scope: !6443, file: !1, line: 882, type: !3051)
!6445 = !DILocation(line: 882, column: 66, scope: !6443)
!6446 = !DILocalVariable(name: "q", arg: 2, scope: !6443, file: !1, line: 883, type: !3051)
!6447 = !DILocation(line: 883, column: 28, scope: !6443)
!6448 = !DILocalVariable(name: "composite", arg: 3, scope: !6443, file: !1, line: 883, type: !3082)
!6449 = !DILocation(line: 883, column: 49, scope: !6443)
!6450 = !DILocalVariable(name: "gamma", scope: !6443, file: !1, line: 886, type: !519)
!6451 = !DILocation(line: 886, column: 5, scope: !6443)
!6452 = !DILocalVariable(name: "Da", scope: !6443, file: !1, line: 889, type: !710)
!6453 = !DILocation(line: 889, column: 5, scope: !6443)
!6454 = !DILocalVariable(name: "Sa", scope: !6443, file: !1, line: 890, type: !710)
!6455 = !DILocation(line: 890, column: 5, scope: !6443)
!6456 = !DILocation(line: 892, column: 23, scope: !6443)
!6457 = !DILocation(line: 892, column: 26, scope: !6443)
!6458 = !DILocation(line: 892, column: 22, scope: !6443)
!6459 = !DILocation(line: 892, column: 9, scope: !6443)
!6460 = !DILocation(line: 892, column: 6, scope: !6443)
!6461 = !DILocation(line: 892, column: 5, scope: !6443)
!6462 = !DILocation(line: 893, column: 23, scope: !6443)
!6463 = !DILocation(line: 893, column: 26, scope: !6443)
!6464 = !DILocation(line: 893, column: 22, scope: !6443)
!6465 = !DILocation(line: 893, column: 9, scope: !6443)
!6466 = !DILocation(line: 893, column: 6, scope: !6443)
!6467 = !DILocation(line: 893, column: 5, scope: !6443)
!6468 = !DILocation(line: 894, column: 22, scope: !6443)
!6469 = !DILocation(line: 894, column: 25, scope: !6443)
!6470 = !DILocation(line: 894, column: 24, scope: !6443)
!6471 = !DILocation(line: 894, column: 28, scope: !6443)
!6472 = !DILocation(line: 894, column: 31, scope: !6443)
!6473 = !DILocation(line: 894, column: 30, scope: !6443)
!6474 = !DILocation(line: 894, column: 27, scope: !6443)
!6475 = !DILocation(line: 894, column: 9, scope: !6443)
!6476 = !DILocation(line: 894, column: 8, scope: !6443)
!6477 = !DILocation(line: 895, column: 57, scope: !6443)
!6478 = !DILocation(line: 895, column: 56, scope: !6443)
!6479 = !DILocation(line: 895, column: 51, scope: !6443)
!6480 = !DILocation(line: 895, column: 22, scope: !6443)
!6481 = !DILocation(line: 895, column: 3, scope: !6443)
!6482 = !DILocation(line: 895, column: 14, scope: !6443)
!6483 = !DILocation(line: 895, column: 21, scope: !6443)
!6484 = !DILocation(line: 896, column: 31, scope: !6443)
!6485 = !DILocation(line: 896, column: 9, scope: !6443)
!6486 = !DILocation(line: 896, column: 8, scope: !6443)
!6487 = !DILocation(line: 897, column: 18, scope: !6443)
!6488 = !DILocation(line: 897, column: 25, scope: !6443)
!6489 = !DILocation(line: 897, column: 28, scope: !6443)
!6490 = !DILocation(line: 897, column: 32, scope: !6443)
!6491 = !DILocation(line: 897, column: 31, scope: !6443)
!6492 = !DILocation(line: 897, column: 35, scope: !6443)
!6493 = !DILocation(line: 897, column: 38, scope: !6443)
!6494 = !DILocation(line: 897, column: 42, scope: !6443)
!6495 = !DILocation(line: 897, column: 41, scope: !6443)
!6496 = !DILocation(line: 897, column: 34, scope: !6443)
!6497 = !DILocation(line: 897, column: 24, scope: !6443)
!6498 = !DILocation(line: 897, column: 23, scope: !6443)
!6499 = !DILocation(line: 897, column: 3, scope: !6443)
!6500 = !DILocation(line: 897, column: 14, scope: !6443)
!6501 = !DILocation(line: 897, column: 17, scope: !6443)
!6502 = !DILocation(line: 898, column: 20, scope: !6443)
!6503 = !DILocation(line: 898, column: 27, scope: !6443)
!6504 = !DILocation(line: 898, column: 30, scope: !6443)
!6505 = !DILocation(line: 898, column: 36, scope: !6443)
!6506 = !DILocation(line: 898, column: 35, scope: !6443)
!6507 = !DILocation(line: 898, column: 39, scope: !6443)
!6508 = !DILocation(line: 898, column: 42, scope: !6443)
!6509 = !DILocation(line: 898, column: 48, scope: !6443)
!6510 = !DILocation(line: 898, column: 47, scope: !6443)
!6511 = !DILocation(line: 898, column: 38, scope: !6443)
!6512 = !DILocation(line: 898, column: 26, scope: !6443)
!6513 = !DILocation(line: 898, column: 25, scope: !6443)
!6514 = !DILocation(line: 898, column: 3, scope: !6443)
!6515 = !DILocation(line: 898, column: 14, scope: !6443)
!6516 = !DILocation(line: 898, column: 19, scope: !6443)
!6517 = !DILocation(line: 899, column: 19, scope: !6443)
!6518 = !DILocation(line: 899, column: 26, scope: !6443)
!6519 = !DILocation(line: 899, column: 29, scope: !6443)
!6520 = !DILocation(line: 899, column: 34, scope: !6443)
!6521 = !DILocation(line: 899, column: 33, scope: !6443)
!6522 = !DILocation(line: 899, column: 37, scope: !6443)
!6523 = !DILocation(line: 899, column: 40, scope: !6443)
!6524 = !DILocation(line: 899, column: 45, scope: !6443)
!6525 = !DILocation(line: 899, column: 44, scope: !6443)
!6526 = !DILocation(line: 899, column: 36, scope: !6443)
!6527 = !DILocation(line: 899, column: 25, scope: !6443)
!6528 = !DILocation(line: 899, column: 24, scope: !6443)
!6529 = !DILocation(line: 899, column: 3, scope: !6443)
!6530 = !DILocation(line: 899, column: 14, scope: !6443)
!6531 = !DILocation(line: 899, column: 18, scope: !6443)
!6532 = !DILocation(line: 900, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6443, file: !1, line: 900, column: 7)
!6534 = !DILocation(line: 900, column: 10, scope: !6533)
!6535 = !DILocation(line: 900, column: 21, scope: !6533)
!6536 = !DILocation(line: 900, column: 7, scope: !6443)
!6537 = !DILocation(line: 901, column: 22, scope: !6533)
!6538 = !DILocation(line: 901, column: 29, scope: !6533)
!6539 = !DILocation(line: 901, column: 32, scope: !6533)
!6540 = !DILocation(line: 901, column: 38, scope: !6533)
!6541 = !DILocation(line: 901, column: 37, scope: !6533)
!6542 = !DILocation(line: 901, column: 41, scope: !6533)
!6543 = !DILocation(line: 901, column: 44, scope: !6533)
!6544 = !DILocation(line: 901, column: 50, scope: !6533)
!6545 = !DILocation(line: 901, column: 49, scope: !6533)
!6546 = !DILocation(line: 901, column: 40, scope: !6533)
!6547 = !DILocation(line: 901, column: 28, scope: !6533)
!6548 = !DILocation(line: 901, column: 27, scope: !6533)
!6549 = !DILocation(line: 901, column: 5, scope: !6533)
!6550 = !DILocation(line: 901, column: 16, scope: !6533)
!6551 = !DILocation(line: 901, column: 21, scope: !6533)
!6552 = !DILocation(line: 902, column: 1, scope: !6443)
!6553 = distinct !DISubprogram(name: "CompositeLinearBurn", scope: !1, file: !1, line: 917, type: !3231, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6554 = !DILocalVariable(name: "p", arg: 1, scope: !6553, file: !1, line: 917, type: !3051)
!6555 = !DILocation(line: 917, column: 65, scope: !6553)
!6556 = !DILocalVariable(name: "q", arg: 2, scope: !6553, file: !1, line: 918, type: !3051)
!6557 = !DILocation(line: 918, column: 28, scope: !6553)
!6558 = !DILocalVariable(name: "composite", arg: 3, scope: !6553, file: !1, line: 918, type: !3082)
!6559 = !DILocation(line: 918, column: 49, scope: !6553)
!6560 = !DILocalVariable(name: "Da", scope: !6553, file: !1, line: 921, type: !710)
!6561 = !DILocation(line: 921, column: 5, scope: !6553)
!6562 = !DILocalVariable(name: "gamma", scope: !6553, file: !1, line: 922, type: !710)
!6563 = !DILocation(line: 922, column: 5, scope: !6553)
!6564 = !DILocalVariable(name: "Sa", scope: !6553, file: !1, line: 923, type: !710)
!6565 = !DILocation(line: 923, column: 5, scope: !6553)
!6566 = !DILocation(line: 925, column: 23, scope: !6553)
!6567 = !DILocation(line: 925, column: 26, scope: !6553)
!6568 = !DILocation(line: 925, column: 22, scope: !6553)
!6569 = !DILocation(line: 925, column: 9, scope: !6553)
!6570 = !DILocation(line: 925, column: 6, scope: !6553)
!6571 = !DILocation(line: 925, column: 5, scope: !6553)
!6572 = !DILocation(line: 926, column: 23, scope: !6553)
!6573 = !DILocation(line: 926, column: 26, scope: !6553)
!6574 = !DILocation(line: 926, column: 22, scope: !6553)
!6575 = !DILocation(line: 926, column: 9, scope: !6553)
!6576 = !DILocation(line: 926, column: 6, scope: !6553)
!6577 = !DILocation(line: 926, column: 5, scope: !6553)
!6578 = !DILocation(line: 927, column: 22, scope: !6553)
!6579 = !DILocation(line: 927, column: 25, scope: !6553)
!6580 = !DILocation(line: 927, column: 24, scope: !6553)
!6581 = !DILocation(line: 927, column: 28, scope: !6553)
!6582 = !DILocation(line: 927, column: 31, scope: !6553)
!6583 = !DILocation(line: 927, column: 30, scope: !6553)
!6584 = !DILocation(line: 927, column: 27, scope: !6553)
!6585 = !DILocation(line: 927, column: 9, scope: !6553)
!6586 = !DILocation(line: 927, column: 8, scope: !6553)
!6587 = !DILocation(line: 928, column: 57, scope: !6553)
!6588 = !DILocation(line: 928, column: 56, scope: !6553)
!6589 = !DILocation(line: 928, column: 51, scope: !6553)
!6590 = !DILocation(line: 928, column: 22, scope: !6553)
!6591 = !DILocation(line: 928, column: 3, scope: !6553)
!6592 = !DILocation(line: 928, column: 14, scope: !6553)
!6593 = !DILocation(line: 928, column: 21, scope: !6553)
!6594 = !DILocation(line: 929, column: 28, scope: !6553)
!6595 = !DILocation(line: 929, column: 23, scope: !6553)
!6596 = !DILocation(line: 929, column: 35, scope: !6553)
!6597 = !DILocation(line: 929, column: 69, scope: !6553)
!6598 = !DILocation(line: 929, column: 21, scope: !6553)
!6599 = !DILocation(line: 929, column: 9, scope: !6553)
!6600 = !DILocation(line: 929, column: 8, scope: !6553)
!6601 = !DILocation(line: 930, column: 18, scope: !6553)
!6602 = !DILocation(line: 930, column: 48, scope: !6553)
!6603 = !DILocation(line: 930, column: 51, scope: !6553)
!6604 = !DILocation(line: 930, column: 47, scope: !6553)
!6605 = !DILocation(line: 930, column: 55, scope: !6553)
!6606 = !DILocation(line: 930, column: 54, scope: !6553)
!6607 = !DILocation(line: 930, column: 35, scope: !6553)
!6608 = !DILocation(line: 930, column: 58, scope: !6553)
!6609 = !DILocation(line: 931, column: 5, scope: !6553)
!6610 = !DILocation(line: 931, column: 8, scope: !6553)
!6611 = !DILocation(line: 930, column: 73, scope: !6553)
!6612 = !DILocation(line: 931, column: 12, scope: !6553)
!6613 = !DILocation(line: 931, column: 11, scope: !6553)
!6614 = !DILocation(line: 930, column: 61, scope: !6553)
!6615 = !DILocation(line: 931, column: 15, scope: !6553)
!6616 = !DILocation(line: 930, column: 24, scope: !6553)
!6617 = !DILocation(line: 930, column: 23, scope: !6553)
!6618 = !DILocation(line: 930, column: 3, scope: !6553)
!6619 = !DILocation(line: 930, column: 14, scope: !6553)
!6620 = !DILocation(line: 930, column: 17, scope: !6553)
!6621 = !DILocation(line: 932, column: 20, scope: !6553)
!6622 = !DILocation(line: 932, column: 50, scope: !6553)
!6623 = !DILocation(line: 932, column: 53, scope: !6553)
!6624 = !DILocation(line: 932, column: 49, scope: !6553)
!6625 = !DILocation(line: 932, column: 59, scope: !6553)
!6626 = !DILocation(line: 932, column: 58, scope: !6553)
!6627 = !DILocation(line: 932, column: 37, scope: !6553)
!6628 = !DILocation(line: 932, column: 62, scope: !6553)
!6629 = !DILocation(line: 933, column: 5, scope: !6553)
!6630 = !DILocation(line: 933, column: 8, scope: !6553)
!6631 = !DILocation(line: 932, column: 77, scope: !6553)
!6632 = !DILocation(line: 933, column: 14, scope: !6553)
!6633 = !DILocation(line: 933, column: 13, scope: !6553)
!6634 = !DILocation(line: 932, column: 65, scope: !6553)
!6635 = !DILocation(line: 933, column: 17, scope: !6553)
!6636 = !DILocation(line: 932, column: 26, scope: !6553)
!6637 = !DILocation(line: 932, column: 25, scope: !6553)
!6638 = !DILocation(line: 932, column: 3, scope: !6553)
!6639 = !DILocation(line: 932, column: 14, scope: !6553)
!6640 = !DILocation(line: 932, column: 19, scope: !6553)
!6641 = !DILocation(line: 934, column: 19, scope: !6553)
!6642 = !DILocation(line: 934, column: 49, scope: !6553)
!6643 = !DILocation(line: 934, column: 52, scope: !6553)
!6644 = !DILocation(line: 934, column: 48, scope: !6553)
!6645 = !DILocation(line: 934, column: 57, scope: !6553)
!6646 = !DILocation(line: 934, column: 56, scope: !6553)
!6647 = !DILocation(line: 934, column: 36, scope: !6553)
!6648 = !DILocation(line: 934, column: 60, scope: !6553)
!6649 = !DILocation(line: 935, column: 5, scope: !6553)
!6650 = !DILocation(line: 935, column: 8, scope: !6553)
!6651 = !DILocation(line: 934, column: 75, scope: !6553)
!6652 = !DILocation(line: 935, column: 13, scope: !6553)
!6653 = !DILocation(line: 935, column: 12, scope: !6553)
!6654 = !DILocation(line: 934, column: 63, scope: !6553)
!6655 = !DILocation(line: 935, column: 16, scope: !6553)
!6656 = !DILocation(line: 934, column: 25, scope: !6553)
!6657 = !DILocation(line: 934, column: 24, scope: !6553)
!6658 = !DILocation(line: 934, column: 3, scope: !6553)
!6659 = !DILocation(line: 934, column: 14, scope: !6553)
!6660 = !DILocation(line: 934, column: 18, scope: !6553)
!6661 = !DILocation(line: 936, column: 7, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6553, file: !1, line: 936, column: 7)
!6663 = !DILocation(line: 936, column: 10, scope: !6662)
!6664 = !DILocation(line: 936, column: 21, scope: !6662)
!6665 = !DILocation(line: 936, column: 7, scope: !6553)
!6666 = !DILocation(line: 937, column: 22, scope: !6662)
!6667 = !DILocation(line: 937, column: 52, scope: !6662)
!6668 = !DILocation(line: 937, column: 55, scope: !6662)
!6669 = !DILocation(line: 937, column: 51, scope: !6662)
!6670 = !DILocation(line: 937, column: 61, scope: !6662)
!6671 = !DILocation(line: 937, column: 60, scope: !6662)
!6672 = !DILocation(line: 937, column: 39, scope: !6662)
!6673 = !DILocation(line: 937, column: 64, scope: !6662)
!6674 = !DILocation(line: 938, column: 7, scope: !6662)
!6675 = !DILocation(line: 938, column: 10, scope: !6662)
!6676 = !DILocation(line: 937, column: 79, scope: !6662)
!6677 = !DILocation(line: 938, column: 16, scope: !6662)
!6678 = !DILocation(line: 938, column: 15, scope: !6662)
!6679 = !DILocation(line: 937, column: 67, scope: !6662)
!6680 = !DILocation(line: 938, column: 19, scope: !6662)
!6681 = !DILocation(line: 937, column: 28, scope: !6662)
!6682 = !DILocation(line: 937, column: 27, scope: !6662)
!6683 = !DILocation(line: 937, column: 5, scope: !6662)
!6684 = !DILocation(line: 937, column: 16, scope: !6662)
!6685 = !DILocation(line: 937, column: 21, scope: !6662)
!6686 = !DILocation(line: 939, column: 1, scope: !6553)
!6687 = distinct !DISubprogram(name: "CompositeHardLight", scope: !1, file: !1, line: 614, type: !3231, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6688 = !DILocalVariable(name: "p", arg: 1, scope: !6687, file: !1, line: 614, type: !3051)
!6689 = !DILocation(line: 614, column: 64, scope: !6687)
!6690 = !DILocalVariable(name: "q", arg: 2, scope: !6687, file: !1, line: 615, type: !3051)
!6691 = !DILocation(line: 615, column: 28, scope: !6687)
!6692 = !DILocalVariable(name: "composite", arg: 3, scope: !6687, file: !1, line: 615, type: !3082)
!6693 = !DILocation(line: 615, column: 49, scope: !6687)
!6694 = !DILocalVariable(name: "Da", scope: !6687, file: !1, line: 618, type: !710)
!6695 = !DILocation(line: 618, column: 5, scope: !6687)
!6696 = !DILocalVariable(name: "gamma", scope: !6687, file: !1, line: 619, type: !710)
!6697 = !DILocation(line: 619, column: 5, scope: !6687)
!6698 = !DILocalVariable(name: "Sa", scope: !6687, file: !1, line: 620, type: !710)
!6699 = !DILocation(line: 620, column: 5, scope: !6687)
!6700 = !DILocation(line: 622, column: 23, scope: !6687)
!6701 = !DILocation(line: 622, column: 26, scope: !6687)
!6702 = !DILocation(line: 622, column: 22, scope: !6687)
!6703 = !DILocation(line: 622, column: 9, scope: !6687)
!6704 = !DILocation(line: 622, column: 6, scope: !6687)
!6705 = !DILocation(line: 622, column: 5, scope: !6687)
!6706 = !DILocation(line: 623, column: 23, scope: !6687)
!6707 = !DILocation(line: 623, column: 26, scope: !6687)
!6708 = !DILocation(line: 623, column: 22, scope: !6687)
!6709 = !DILocation(line: 623, column: 9, scope: !6687)
!6710 = !DILocation(line: 623, column: 6, scope: !6687)
!6711 = !DILocation(line: 623, column: 5, scope: !6687)
!6712 = !DILocation(line: 624, column: 22, scope: !6687)
!6713 = !DILocation(line: 624, column: 25, scope: !6687)
!6714 = !DILocation(line: 624, column: 24, scope: !6687)
!6715 = !DILocation(line: 624, column: 28, scope: !6687)
!6716 = !DILocation(line: 624, column: 31, scope: !6687)
!6717 = !DILocation(line: 624, column: 30, scope: !6687)
!6718 = !DILocation(line: 624, column: 27, scope: !6687)
!6719 = !DILocation(line: 624, column: 9, scope: !6687)
!6720 = !DILocation(line: 624, column: 8, scope: !6687)
!6721 = !DILocation(line: 625, column: 57, scope: !6687)
!6722 = !DILocation(line: 625, column: 56, scope: !6687)
!6723 = !DILocation(line: 625, column: 51, scope: !6687)
!6724 = !DILocation(line: 625, column: 22, scope: !6687)
!6725 = !DILocation(line: 625, column: 3, scope: !6687)
!6726 = !DILocation(line: 625, column: 14, scope: !6687)
!6727 = !DILocation(line: 625, column: 21, scope: !6687)
!6728 = !DILocation(line: 626, column: 28, scope: !6687)
!6729 = !DILocation(line: 626, column: 23, scope: !6687)
!6730 = !DILocation(line: 626, column: 35, scope: !6687)
!6731 = !DILocation(line: 626, column: 69, scope: !6687)
!6732 = !DILocation(line: 626, column: 21, scope: !6687)
!6733 = !DILocation(line: 626, column: 9, scope: !6687)
!6734 = !DILocation(line: 626, column: 8, scope: !6687)
!6735 = !DILocation(line: 627, column: 18, scope: !6687)
!6736 = !DILocation(line: 627, column: 47, scope: !6687)
!6737 = !DILocation(line: 627, column: 50, scope: !6687)
!6738 = !DILocation(line: 627, column: 46, scope: !6687)
!6739 = !DILocation(line: 627, column: 54, scope: !6687)
!6740 = !DILocation(line: 627, column: 53, scope: !6687)
!6741 = !DILocation(line: 627, column: 34, scope: !6687)
!6742 = !DILocation(line: 627, column: 57, scope: !6687)
!6743 = !DILocation(line: 628, column: 5, scope: !6687)
!6744 = !DILocation(line: 628, column: 8, scope: !6687)
!6745 = !DILocation(line: 627, column: 72, scope: !6687)
!6746 = !DILocation(line: 628, column: 12, scope: !6687)
!6747 = !DILocation(line: 628, column: 11, scope: !6687)
!6748 = !DILocation(line: 627, column: 60, scope: !6687)
!6749 = !DILocation(line: 628, column: 15, scope: !6687)
!6750 = !DILocation(line: 627, column: 24, scope: !6687)
!6751 = !DILocation(line: 627, column: 23, scope: !6687)
!6752 = !DILocation(line: 627, column: 3, scope: !6687)
!6753 = !DILocation(line: 627, column: 14, scope: !6687)
!6754 = !DILocation(line: 627, column: 17, scope: !6687)
!6755 = !DILocation(line: 629, column: 20, scope: !6687)
!6756 = !DILocation(line: 629, column: 49, scope: !6687)
!6757 = !DILocation(line: 629, column: 52, scope: !6687)
!6758 = !DILocation(line: 629, column: 48, scope: !6687)
!6759 = !DILocation(line: 629, column: 58, scope: !6687)
!6760 = !DILocation(line: 629, column: 57, scope: !6687)
!6761 = !DILocation(line: 629, column: 36, scope: !6687)
!6762 = !DILocation(line: 629, column: 61, scope: !6687)
!6763 = !DILocation(line: 630, column: 5, scope: !6687)
!6764 = !DILocation(line: 630, column: 8, scope: !6687)
!6765 = !DILocation(line: 629, column: 76, scope: !6687)
!6766 = !DILocation(line: 630, column: 14, scope: !6687)
!6767 = !DILocation(line: 630, column: 13, scope: !6687)
!6768 = !DILocation(line: 629, column: 64, scope: !6687)
!6769 = !DILocation(line: 630, column: 17, scope: !6687)
!6770 = !DILocation(line: 629, column: 26, scope: !6687)
!6771 = !DILocation(line: 629, column: 25, scope: !6687)
!6772 = !DILocation(line: 629, column: 3, scope: !6687)
!6773 = !DILocation(line: 629, column: 14, scope: !6687)
!6774 = !DILocation(line: 629, column: 19, scope: !6687)
!6775 = !DILocation(line: 631, column: 19, scope: !6687)
!6776 = !DILocation(line: 631, column: 48, scope: !6687)
!6777 = !DILocation(line: 631, column: 51, scope: !6687)
!6778 = !DILocation(line: 631, column: 47, scope: !6687)
!6779 = !DILocation(line: 631, column: 56, scope: !6687)
!6780 = !DILocation(line: 631, column: 55, scope: !6687)
!6781 = !DILocation(line: 631, column: 35, scope: !6687)
!6782 = !DILocation(line: 631, column: 59, scope: !6687)
!6783 = !DILocation(line: 632, column: 5, scope: !6687)
!6784 = !DILocation(line: 632, column: 8, scope: !6687)
!6785 = !DILocation(line: 631, column: 74, scope: !6687)
!6786 = !DILocation(line: 632, column: 13, scope: !6687)
!6787 = !DILocation(line: 632, column: 12, scope: !6687)
!6788 = !DILocation(line: 631, column: 62, scope: !6687)
!6789 = !DILocation(line: 632, column: 16, scope: !6687)
!6790 = !DILocation(line: 631, column: 25, scope: !6687)
!6791 = !DILocation(line: 631, column: 24, scope: !6687)
!6792 = !DILocation(line: 631, column: 3, scope: !6687)
!6793 = !DILocation(line: 631, column: 14, scope: !6687)
!6794 = !DILocation(line: 631, column: 18, scope: !6687)
!6795 = !DILocation(line: 633, column: 7, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6687, file: !1, line: 633, column: 7)
!6797 = !DILocation(line: 633, column: 10, scope: !6796)
!6798 = !DILocation(line: 633, column: 21, scope: !6796)
!6799 = !DILocation(line: 633, column: 7, scope: !6687)
!6800 = !DILocation(line: 634, column: 22, scope: !6796)
!6801 = !DILocation(line: 634, column: 51, scope: !6796)
!6802 = !DILocation(line: 634, column: 54, scope: !6796)
!6803 = !DILocation(line: 634, column: 50, scope: !6796)
!6804 = !DILocation(line: 634, column: 60, scope: !6796)
!6805 = !DILocation(line: 634, column: 59, scope: !6796)
!6806 = !DILocation(line: 634, column: 38, scope: !6796)
!6807 = !DILocation(line: 634, column: 63, scope: !6796)
!6808 = !DILocation(line: 635, column: 7, scope: !6796)
!6809 = !DILocation(line: 635, column: 10, scope: !6796)
!6810 = !DILocation(line: 634, column: 78, scope: !6796)
!6811 = !DILocation(line: 635, column: 16, scope: !6796)
!6812 = !DILocation(line: 635, column: 15, scope: !6796)
!6813 = !DILocation(line: 634, column: 66, scope: !6796)
!6814 = !DILocation(line: 635, column: 19, scope: !6796)
!6815 = !DILocation(line: 634, column: 28, scope: !6796)
!6816 = !DILocation(line: 634, column: 27, scope: !6796)
!6817 = !DILocation(line: 634, column: 5, scope: !6796)
!6818 = !DILocation(line: 634, column: 16, scope: !6796)
!6819 = !DILocation(line: 634, column: 21, scope: !6796)
!6820 = !DILocation(line: 636, column: 1, scope: !6687)
!6821 = distinct !DISubprogram(name: "CompositeSoftLight", scope: !1, file: !1, line: 1493, type: !3231, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6822 = !DILocalVariable(name: "p", arg: 1, scope: !6821, file: !1, line: 1493, type: !3051)
!6823 = !DILocation(line: 1493, column: 64, scope: !6821)
!6824 = !DILocalVariable(name: "q", arg: 2, scope: !6821, file: !1, line: 1494, type: !3051)
!6825 = !DILocation(line: 1494, column: 28, scope: !6821)
!6826 = !DILocalVariable(name: "composite", arg: 3, scope: !6821, file: !1, line: 1494, type: !3082)
!6827 = !DILocation(line: 1494, column: 49, scope: !6821)
!6828 = !DILocalVariable(name: "Da", scope: !6821, file: !1, line: 1497, type: !710)
!6829 = !DILocation(line: 1497, column: 5, scope: !6821)
!6830 = !DILocalVariable(name: "gamma", scope: !6821, file: !1, line: 1498, type: !710)
!6831 = !DILocation(line: 1498, column: 5, scope: !6821)
!6832 = !DILocalVariable(name: "Sa", scope: !6821, file: !1, line: 1499, type: !710)
!6833 = !DILocation(line: 1499, column: 5, scope: !6821)
!6834 = !DILocation(line: 1501, column: 23, scope: !6821)
!6835 = !DILocation(line: 1501, column: 26, scope: !6821)
!6836 = !DILocation(line: 1501, column: 22, scope: !6821)
!6837 = !DILocation(line: 1501, column: 9, scope: !6821)
!6838 = !DILocation(line: 1501, column: 6, scope: !6821)
!6839 = !DILocation(line: 1501, column: 5, scope: !6821)
!6840 = !DILocation(line: 1502, column: 23, scope: !6821)
!6841 = !DILocation(line: 1502, column: 26, scope: !6821)
!6842 = !DILocation(line: 1502, column: 22, scope: !6821)
!6843 = !DILocation(line: 1502, column: 9, scope: !6821)
!6844 = !DILocation(line: 1502, column: 6, scope: !6821)
!6845 = !DILocation(line: 1502, column: 5, scope: !6821)
!6846 = !DILocation(line: 1503, column: 22, scope: !6821)
!6847 = !DILocation(line: 1503, column: 25, scope: !6821)
!6848 = !DILocation(line: 1503, column: 24, scope: !6821)
!6849 = !DILocation(line: 1503, column: 28, scope: !6821)
!6850 = !DILocation(line: 1503, column: 31, scope: !6821)
!6851 = !DILocation(line: 1503, column: 30, scope: !6821)
!6852 = !DILocation(line: 1503, column: 27, scope: !6821)
!6853 = !DILocation(line: 1503, column: 9, scope: !6821)
!6854 = !DILocation(line: 1503, column: 8, scope: !6821)
!6855 = !DILocation(line: 1504, column: 57, scope: !6821)
!6856 = !DILocation(line: 1504, column: 56, scope: !6821)
!6857 = !DILocation(line: 1504, column: 51, scope: !6821)
!6858 = !DILocation(line: 1504, column: 22, scope: !6821)
!6859 = !DILocation(line: 1504, column: 3, scope: !6821)
!6860 = !DILocation(line: 1504, column: 14, scope: !6821)
!6861 = !DILocation(line: 1504, column: 21, scope: !6821)
!6862 = !DILocation(line: 1505, column: 28, scope: !6821)
!6863 = !DILocation(line: 1505, column: 23, scope: !6821)
!6864 = !DILocation(line: 1505, column: 35, scope: !6821)
!6865 = !DILocation(line: 1505, column: 69, scope: !6821)
!6866 = !DILocation(line: 1505, column: 21, scope: !6821)
!6867 = !DILocation(line: 1505, column: 9, scope: !6821)
!6868 = !DILocation(line: 1505, column: 8, scope: !6821)
!6869 = !DILocation(line: 1506, column: 18, scope: !6821)
!6870 = !DILocation(line: 1506, column: 47, scope: !6821)
!6871 = !DILocation(line: 1506, column: 50, scope: !6821)
!6872 = !DILocation(line: 1506, column: 46, scope: !6821)
!6873 = !DILocation(line: 1506, column: 54, scope: !6821)
!6874 = !DILocation(line: 1506, column: 53, scope: !6821)
!6875 = !DILocation(line: 1506, column: 34, scope: !6821)
!6876 = !DILocation(line: 1506, column: 57, scope: !6821)
!6877 = !DILocation(line: 1507, column: 5, scope: !6821)
!6878 = !DILocation(line: 1507, column: 8, scope: !6821)
!6879 = !DILocation(line: 1506, column: 72, scope: !6821)
!6880 = !DILocation(line: 1507, column: 12, scope: !6821)
!6881 = !DILocation(line: 1507, column: 11, scope: !6821)
!6882 = !DILocation(line: 1506, column: 60, scope: !6821)
!6883 = !DILocation(line: 1507, column: 15, scope: !6821)
!6884 = !DILocation(line: 1506, column: 24, scope: !6821)
!6885 = !DILocation(line: 1506, column: 23, scope: !6821)
!6886 = !DILocation(line: 1506, column: 3, scope: !6821)
!6887 = !DILocation(line: 1506, column: 14, scope: !6821)
!6888 = !DILocation(line: 1506, column: 17, scope: !6821)
!6889 = !DILocation(line: 1508, column: 20, scope: !6821)
!6890 = !DILocation(line: 1508, column: 49, scope: !6821)
!6891 = !DILocation(line: 1508, column: 52, scope: !6821)
!6892 = !DILocation(line: 1508, column: 48, scope: !6821)
!6893 = !DILocation(line: 1508, column: 58, scope: !6821)
!6894 = !DILocation(line: 1508, column: 57, scope: !6821)
!6895 = !DILocation(line: 1508, column: 36, scope: !6821)
!6896 = !DILocation(line: 1508, column: 61, scope: !6821)
!6897 = !DILocation(line: 1509, column: 5, scope: !6821)
!6898 = !DILocation(line: 1509, column: 8, scope: !6821)
!6899 = !DILocation(line: 1508, column: 76, scope: !6821)
!6900 = !DILocation(line: 1509, column: 14, scope: !6821)
!6901 = !DILocation(line: 1509, column: 13, scope: !6821)
!6902 = !DILocation(line: 1508, column: 64, scope: !6821)
!6903 = !DILocation(line: 1509, column: 17, scope: !6821)
!6904 = !DILocation(line: 1508, column: 26, scope: !6821)
!6905 = !DILocation(line: 1508, column: 25, scope: !6821)
!6906 = !DILocation(line: 1508, column: 3, scope: !6821)
!6907 = !DILocation(line: 1508, column: 14, scope: !6821)
!6908 = !DILocation(line: 1508, column: 19, scope: !6821)
!6909 = !DILocation(line: 1510, column: 19, scope: !6821)
!6910 = !DILocation(line: 1510, column: 48, scope: !6821)
!6911 = !DILocation(line: 1510, column: 51, scope: !6821)
!6912 = !DILocation(line: 1510, column: 47, scope: !6821)
!6913 = !DILocation(line: 1510, column: 56, scope: !6821)
!6914 = !DILocation(line: 1510, column: 55, scope: !6821)
!6915 = !DILocation(line: 1510, column: 35, scope: !6821)
!6916 = !DILocation(line: 1510, column: 59, scope: !6821)
!6917 = !DILocation(line: 1511, column: 5, scope: !6821)
!6918 = !DILocation(line: 1511, column: 8, scope: !6821)
!6919 = !DILocation(line: 1510, column: 74, scope: !6821)
!6920 = !DILocation(line: 1511, column: 13, scope: !6821)
!6921 = !DILocation(line: 1511, column: 12, scope: !6821)
!6922 = !DILocation(line: 1510, column: 62, scope: !6821)
!6923 = !DILocation(line: 1511, column: 16, scope: !6821)
!6924 = !DILocation(line: 1510, column: 25, scope: !6821)
!6925 = !DILocation(line: 1510, column: 24, scope: !6821)
!6926 = !DILocation(line: 1510, column: 3, scope: !6821)
!6927 = !DILocation(line: 1510, column: 14, scope: !6821)
!6928 = !DILocation(line: 1510, column: 18, scope: !6821)
!6929 = !DILocation(line: 1512, column: 7, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6821, file: !1, line: 1512, column: 7)
!6931 = !DILocation(line: 1512, column: 10, scope: !6930)
!6932 = !DILocation(line: 1512, column: 21, scope: !6930)
!6933 = !DILocation(line: 1512, column: 7, scope: !6821)
!6934 = !DILocation(line: 1513, column: 22, scope: !6930)
!6935 = !DILocation(line: 1513, column: 51, scope: !6930)
!6936 = !DILocation(line: 1513, column: 54, scope: !6930)
!6937 = !DILocation(line: 1513, column: 50, scope: !6930)
!6938 = !DILocation(line: 1513, column: 60, scope: !6930)
!6939 = !DILocation(line: 1513, column: 59, scope: !6930)
!6940 = !DILocation(line: 1513, column: 38, scope: !6930)
!6941 = !DILocation(line: 1513, column: 63, scope: !6930)
!6942 = !DILocation(line: 1514, column: 7, scope: !6930)
!6943 = !DILocation(line: 1514, column: 10, scope: !6930)
!6944 = !DILocation(line: 1513, column: 78, scope: !6930)
!6945 = !DILocation(line: 1514, column: 16, scope: !6930)
!6946 = !DILocation(line: 1514, column: 15, scope: !6930)
!6947 = !DILocation(line: 1513, column: 66, scope: !6930)
!6948 = !DILocation(line: 1514, column: 19, scope: !6930)
!6949 = !DILocation(line: 1513, column: 28, scope: !6930)
!6950 = !DILocation(line: 1513, column: 27, scope: !6930)
!6951 = !DILocation(line: 1513, column: 5, scope: !6930)
!6952 = !DILocation(line: 1513, column: 16, scope: !6930)
!6953 = !DILocation(line: 1513, column: 21, scope: !6930)
!6954 = !DILocation(line: 1515, column: 1, scope: !6821)
!6955 = distinct !DISubprogram(name: "CompositeLinearLight", scope: !1, file: !1, line: 960, type: !3231, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!6956 = !DILocalVariable(name: "p", arg: 1, scope: !6955, file: !1, line: 960, type: !3051)
!6957 = !DILocation(line: 960, column: 66, scope: !6955)
!6958 = !DILocalVariable(name: "q", arg: 2, scope: !6955, file: !1, line: 961, type: !3051)
!6959 = !DILocation(line: 961, column: 28, scope: !6955)
!6960 = !DILocalVariable(name: "composite", arg: 3, scope: !6955, file: !1, line: 961, type: !3082)
!6961 = !DILocation(line: 961, column: 49, scope: !6955)
!6962 = !DILocalVariable(name: "Da", scope: !6955, file: !1, line: 964, type: !710)
!6963 = !DILocation(line: 964, column: 5, scope: !6955)
!6964 = !DILocalVariable(name: "gamma", scope: !6955, file: !1, line: 965, type: !710)
!6965 = !DILocation(line: 965, column: 5, scope: !6955)
!6966 = !DILocalVariable(name: "Sa", scope: !6955, file: !1, line: 966, type: !710)
!6967 = !DILocation(line: 966, column: 5, scope: !6955)
!6968 = !DILocation(line: 968, column: 23, scope: !6955)
!6969 = !DILocation(line: 968, column: 26, scope: !6955)
!6970 = !DILocation(line: 968, column: 22, scope: !6955)
!6971 = !DILocation(line: 968, column: 9, scope: !6955)
!6972 = !DILocation(line: 968, column: 6, scope: !6955)
!6973 = !DILocation(line: 968, column: 5, scope: !6955)
!6974 = !DILocation(line: 969, column: 23, scope: !6955)
!6975 = !DILocation(line: 969, column: 26, scope: !6955)
!6976 = !DILocation(line: 969, column: 22, scope: !6955)
!6977 = !DILocation(line: 969, column: 9, scope: !6955)
!6978 = !DILocation(line: 969, column: 6, scope: !6955)
!6979 = !DILocation(line: 969, column: 5, scope: !6955)
!6980 = !DILocation(line: 970, column: 22, scope: !6955)
!6981 = !DILocation(line: 970, column: 25, scope: !6955)
!6982 = !DILocation(line: 970, column: 24, scope: !6955)
!6983 = !DILocation(line: 970, column: 28, scope: !6955)
!6984 = !DILocation(line: 970, column: 31, scope: !6955)
!6985 = !DILocation(line: 970, column: 30, scope: !6955)
!6986 = !DILocation(line: 970, column: 27, scope: !6955)
!6987 = !DILocation(line: 970, column: 9, scope: !6955)
!6988 = !DILocation(line: 970, column: 8, scope: !6955)
!6989 = !DILocation(line: 971, column: 57, scope: !6955)
!6990 = !DILocation(line: 971, column: 56, scope: !6955)
!6991 = !DILocation(line: 971, column: 51, scope: !6955)
!6992 = !DILocation(line: 971, column: 22, scope: !6955)
!6993 = !DILocation(line: 971, column: 3, scope: !6955)
!6994 = !DILocation(line: 971, column: 14, scope: !6955)
!6995 = !DILocation(line: 971, column: 21, scope: !6955)
!6996 = !DILocation(line: 972, column: 28, scope: !6955)
!6997 = !DILocation(line: 972, column: 23, scope: !6955)
!6998 = !DILocation(line: 972, column: 35, scope: !6955)
!6999 = !DILocation(line: 972, column: 69, scope: !6955)
!7000 = !DILocation(line: 972, column: 21, scope: !6955)
!7001 = !DILocation(line: 972, column: 9, scope: !6955)
!7002 = !DILocation(line: 972, column: 8, scope: !6955)
!7003 = !DILocation(line: 973, column: 18, scope: !6955)
!7004 = !DILocation(line: 973, column: 49, scope: !6955)
!7005 = !DILocation(line: 973, column: 52, scope: !6955)
!7006 = !DILocation(line: 973, column: 48, scope: !6955)
!7007 = !DILocation(line: 973, column: 56, scope: !6955)
!7008 = !DILocation(line: 973, column: 55, scope: !6955)
!7009 = !DILocation(line: 973, column: 36, scope: !6955)
!7010 = !DILocation(line: 973, column: 59, scope: !6955)
!7011 = !DILocation(line: 974, column: 5, scope: !6955)
!7012 = !DILocation(line: 974, column: 8, scope: !6955)
!7013 = !DILocation(line: 973, column: 74, scope: !6955)
!7014 = !DILocation(line: 974, column: 12, scope: !6955)
!7015 = !DILocation(line: 974, column: 11, scope: !6955)
!7016 = !DILocation(line: 973, column: 62, scope: !6955)
!7017 = !DILocation(line: 974, column: 15, scope: !6955)
!7018 = !DILocation(line: 973, column: 24, scope: !6955)
!7019 = !DILocation(line: 973, column: 23, scope: !6955)
!7020 = !DILocation(line: 973, column: 3, scope: !6955)
!7021 = !DILocation(line: 973, column: 14, scope: !6955)
!7022 = !DILocation(line: 973, column: 17, scope: !6955)
!7023 = !DILocation(line: 975, column: 20, scope: !6955)
!7024 = !DILocation(line: 975, column: 51, scope: !6955)
!7025 = !DILocation(line: 975, column: 54, scope: !6955)
!7026 = !DILocation(line: 975, column: 50, scope: !6955)
!7027 = !DILocation(line: 975, column: 60, scope: !6955)
!7028 = !DILocation(line: 975, column: 59, scope: !6955)
!7029 = !DILocation(line: 975, column: 38, scope: !6955)
!7030 = !DILocation(line: 975, column: 63, scope: !6955)
!7031 = !DILocation(line: 976, column: 5, scope: !6955)
!7032 = !DILocation(line: 976, column: 8, scope: !6955)
!7033 = !DILocation(line: 975, column: 78, scope: !6955)
!7034 = !DILocation(line: 976, column: 14, scope: !6955)
!7035 = !DILocation(line: 976, column: 13, scope: !6955)
!7036 = !DILocation(line: 975, column: 66, scope: !6955)
!7037 = !DILocation(line: 976, column: 17, scope: !6955)
!7038 = !DILocation(line: 975, column: 26, scope: !6955)
!7039 = !DILocation(line: 975, column: 25, scope: !6955)
!7040 = !DILocation(line: 975, column: 3, scope: !6955)
!7041 = !DILocation(line: 975, column: 14, scope: !6955)
!7042 = !DILocation(line: 975, column: 19, scope: !6955)
!7043 = !DILocation(line: 977, column: 19, scope: !6955)
!7044 = !DILocation(line: 977, column: 50, scope: !6955)
!7045 = !DILocation(line: 977, column: 53, scope: !6955)
!7046 = !DILocation(line: 977, column: 49, scope: !6955)
!7047 = !DILocation(line: 977, column: 58, scope: !6955)
!7048 = !DILocation(line: 977, column: 57, scope: !6955)
!7049 = !DILocation(line: 977, column: 37, scope: !6955)
!7050 = !DILocation(line: 977, column: 61, scope: !6955)
!7051 = !DILocation(line: 978, column: 5, scope: !6955)
!7052 = !DILocation(line: 978, column: 8, scope: !6955)
!7053 = !DILocation(line: 977, column: 76, scope: !6955)
!7054 = !DILocation(line: 978, column: 13, scope: !6955)
!7055 = !DILocation(line: 978, column: 12, scope: !6955)
!7056 = !DILocation(line: 977, column: 64, scope: !6955)
!7057 = !DILocation(line: 978, column: 16, scope: !6955)
!7058 = !DILocation(line: 977, column: 25, scope: !6955)
!7059 = !DILocation(line: 977, column: 24, scope: !6955)
!7060 = !DILocation(line: 977, column: 3, scope: !6955)
!7061 = !DILocation(line: 977, column: 14, scope: !6955)
!7062 = !DILocation(line: 977, column: 18, scope: !6955)
!7063 = !DILocation(line: 979, column: 7, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6955, file: !1, line: 979, column: 7)
!7065 = !DILocation(line: 979, column: 10, scope: !7064)
!7066 = !DILocation(line: 979, column: 21, scope: !7064)
!7067 = !DILocation(line: 979, column: 7, scope: !6955)
!7068 = !DILocation(line: 980, column: 22, scope: !7064)
!7069 = !DILocation(line: 980, column: 53, scope: !7064)
!7070 = !DILocation(line: 980, column: 56, scope: !7064)
!7071 = !DILocation(line: 980, column: 52, scope: !7064)
!7072 = !DILocation(line: 980, column: 62, scope: !7064)
!7073 = !DILocation(line: 980, column: 61, scope: !7064)
!7074 = !DILocation(line: 980, column: 40, scope: !7064)
!7075 = !DILocation(line: 980, column: 65, scope: !7064)
!7076 = !DILocation(line: 981, column: 7, scope: !7064)
!7077 = !DILocation(line: 981, column: 10, scope: !7064)
!7078 = !DILocation(line: 980, column: 80, scope: !7064)
!7079 = !DILocation(line: 981, column: 16, scope: !7064)
!7080 = !DILocation(line: 981, column: 15, scope: !7064)
!7081 = !DILocation(line: 980, column: 68, scope: !7064)
!7082 = !DILocation(line: 981, column: 19, scope: !7064)
!7083 = !DILocation(line: 980, column: 28, scope: !7064)
!7084 = !DILocation(line: 980, column: 27, scope: !7064)
!7085 = !DILocation(line: 980, column: 5, scope: !7064)
!7086 = !DILocation(line: 980, column: 16, scope: !7064)
!7087 = !DILocation(line: 980, column: 21, scope: !7064)
!7088 = !DILocation(line: 982, column: 1, scope: !6955)
!7089 = distinct !DISubprogram(name: "CompositePegtopLight", scope: !1, file: !1, line: 1340, type: !3231, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7090 = !DILocalVariable(name: "p", arg: 1, scope: !7089, file: !1, line: 1340, type: !3051)
!7091 = !DILocation(line: 1340, column: 66, scope: !7089)
!7092 = !DILocalVariable(name: "q", arg: 2, scope: !7089, file: !1, line: 1341, type: !3051)
!7093 = !DILocation(line: 1341, column: 28, scope: !7089)
!7094 = !DILocalVariable(name: "composite", arg: 3, scope: !7089, file: !1, line: 1341, type: !3082)
!7095 = !DILocation(line: 1341, column: 49, scope: !7089)
!7096 = !DILocalVariable(name: "Da", scope: !7089, file: !1, line: 1344, type: !710)
!7097 = !DILocation(line: 1344, column: 5, scope: !7089)
!7098 = !DILocalVariable(name: "gamma", scope: !7089, file: !1, line: 1345, type: !710)
!7099 = !DILocation(line: 1345, column: 5, scope: !7089)
!7100 = !DILocalVariable(name: "Sa", scope: !7089, file: !1, line: 1346, type: !710)
!7101 = !DILocation(line: 1346, column: 5, scope: !7089)
!7102 = !DILocation(line: 1348, column: 23, scope: !7089)
!7103 = !DILocation(line: 1348, column: 26, scope: !7089)
!7104 = !DILocation(line: 1348, column: 22, scope: !7089)
!7105 = !DILocation(line: 1348, column: 9, scope: !7089)
!7106 = !DILocation(line: 1348, column: 6, scope: !7089)
!7107 = !DILocation(line: 1348, column: 5, scope: !7089)
!7108 = !DILocation(line: 1349, column: 23, scope: !7089)
!7109 = !DILocation(line: 1349, column: 26, scope: !7089)
!7110 = !DILocation(line: 1349, column: 22, scope: !7089)
!7111 = !DILocation(line: 1349, column: 9, scope: !7089)
!7112 = !DILocation(line: 1349, column: 6, scope: !7089)
!7113 = !DILocation(line: 1349, column: 5, scope: !7089)
!7114 = !DILocation(line: 1350, column: 22, scope: !7089)
!7115 = !DILocation(line: 1350, column: 25, scope: !7089)
!7116 = !DILocation(line: 1350, column: 24, scope: !7089)
!7117 = !DILocation(line: 1350, column: 28, scope: !7089)
!7118 = !DILocation(line: 1350, column: 31, scope: !7089)
!7119 = !DILocation(line: 1350, column: 30, scope: !7089)
!7120 = !DILocation(line: 1350, column: 27, scope: !7089)
!7121 = !DILocation(line: 1350, column: 9, scope: !7089)
!7122 = !DILocation(line: 1350, column: 8, scope: !7089)
!7123 = !DILocation(line: 1351, column: 57, scope: !7089)
!7124 = !DILocation(line: 1351, column: 56, scope: !7089)
!7125 = !DILocation(line: 1351, column: 51, scope: !7089)
!7126 = !DILocation(line: 1351, column: 22, scope: !7089)
!7127 = !DILocation(line: 1351, column: 3, scope: !7089)
!7128 = !DILocation(line: 1351, column: 14, scope: !7089)
!7129 = !DILocation(line: 1351, column: 21, scope: !7089)
!7130 = !DILocation(line: 1352, column: 28, scope: !7089)
!7131 = !DILocation(line: 1352, column: 23, scope: !7089)
!7132 = !DILocation(line: 1352, column: 35, scope: !7089)
!7133 = !DILocation(line: 1352, column: 69, scope: !7089)
!7134 = !DILocation(line: 1352, column: 21, scope: !7089)
!7135 = !DILocation(line: 1352, column: 9, scope: !7089)
!7136 = !DILocation(line: 1352, column: 8, scope: !7089)
!7137 = !DILocation(line: 1353, column: 18, scope: !7089)
!7138 = !DILocation(line: 1353, column: 49, scope: !7089)
!7139 = !DILocation(line: 1353, column: 52, scope: !7089)
!7140 = !DILocation(line: 1353, column: 48, scope: !7089)
!7141 = !DILocation(line: 1353, column: 56, scope: !7089)
!7142 = !DILocation(line: 1353, column: 55, scope: !7089)
!7143 = !DILocation(line: 1353, column: 36, scope: !7089)
!7144 = !DILocation(line: 1353, column: 59, scope: !7089)
!7145 = !DILocation(line: 1354, column: 5, scope: !7089)
!7146 = !DILocation(line: 1354, column: 8, scope: !7089)
!7147 = !DILocation(line: 1353, column: 74, scope: !7089)
!7148 = !DILocation(line: 1354, column: 12, scope: !7089)
!7149 = !DILocation(line: 1354, column: 11, scope: !7089)
!7150 = !DILocation(line: 1353, column: 62, scope: !7089)
!7151 = !DILocation(line: 1354, column: 15, scope: !7089)
!7152 = !DILocation(line: 1353, column: 24, scope: !7089)
!7153 = !DILocation(line: 1353, column: 23, scope: !7089)
!7154 = !DILocation(line: 1353, column: 3, scope: !7089)
!7155 = !DILocation(line: 1353, column: 14, scope: !7089)
!7156 = !DILocation(line: 1353, column: 17, scope: !7089)
!7157 = !DILocation(line: 1355, column: 20, scope: !7089)
!7158 = !DILocation(line: 1355, column: 51, scope: !7089)
!7159 = !DILocation(line: 1355, column: 54, scope: !7089)
!7160 = !DILocation(line: 1355, column: 50, scope: !7089)
!7161 = !DILocation(line: 1355, column: 60, scope: !7089)
!7162 = !DILocation(line: 1355, column: 59, scope: !7089)
!7163 = !DILocation(line: 1355, column: 38, scope: !7089)
!7164 = !DILocation(line: 1355, column: 63, scope: !7089)
!7165 = !DILocation(line: 1356, column: 5, scope: !7089)
!7166 = !DILocation(line: 1356, column: 8, scope: !7089)
!7167 = !DILocation(line: 1355, column: 78, scope: !7089)
!7168 = !DILocation(line: 1356, column: 14, scope: !7089)
!7169 = !DILocation(line: 1356, column: 13, scope: !7089)
!7170 = !DILocation(line: 1355, column: 66, scope: !7089)
!7171 = !DILocation(line: 1356, column: 17, scope: !7089)
!7172 = !DILocation(line: 1355, column: 26, scope: !7089)
!7173 = !DILocation(line: 1355, column: 25, scope: !7089)
!7174 = !DILocation(line: 1355, column: 3, scope: !7089)
!7175 = !DILocation(line: 1355, column: 14, scope: !7089)
!7176 = !DILocation(line: 1355, column: 19, scope: !7089)
!7177 = !DILocation(line: 1357, column: 19, scope: !7089)
!7178 = !DILocation(line: 1357, column: 50, scope: !7089)
!7179 = !DILocation(line: 1357, column: 53, scope: !7089)
!7180 = !DILocation(line: 1357, column: 49, scope: !7089)
!7181 = !DILocation(line: 1357, column: 58, scope: !7089)
!7182 = !DILocation(line: 1357, column: 57, scope: !7089)
!7183 = !DILocation(line: 1357, column: 37, scope: !7089)
!7184 = !DILocation(line: 1357, column: 61, scope: !7089)
!7185 = !DILocation(line: 1358, column: 5, scope: !7089)
!7186 = !DILocation(line: 1358, column: 8, scope: !7089)
!7187 = !DILocation(line: 1357, column: 76, scope: !7089)
!7188 = !DILocation(line: 1358, column: 13, scope: !7089)
!7189 = !DILocation(line: 1358, column: 12, scope: !7089)
!7190 = !DILocation(line: 1357, column: 64, scope: !7089)
!7191 = !DILocation(line: 1358, column: 16, scope: !7089)
!7192 = !DILocation(line: 1357, column: 25, scope: !7089)
!7193 = !DILocation(line: 1357, column: 24, scope: !7089)
!7194 = !DILocation(line: 1357, column: 3, scope: !7089)
!7195 = !DILocation(line: 1357, column: 14, scope: !7089)
!7196 = !DILocation(line: 1357, column: 18, scope: !7089)
!7197 = !DILocation(line: 1359, column: 7, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7089, file: !1, line: 1359, column: 7)
!7199 = !DILocation(line: 1359, column: 10, scope: !7198)
!7200 = !DILocation(line: 1359, column: 21, scope: !7198)
!7201 = !DILocation(line: 1359, column: 7, scope: !7089)
!7202 = !DILocation(line: 1360, column: 22, scope: !7198)
!7203 = !DILocation(line: 1360, column: 53, scope: !7198)
!7204 = !DILocation(line: 1360, column: 56, scope: !7198)
!7205 = !DILocation(line: 1360, column: 52, scope: !7198)
!7206 = !DILocation(line: 1360, column: 62, scope: !7198)
!7207 = !DILocation(line: 1360, column: 61, scope: !7198)
!7208 = !DILocation(line: 1360, column: 40, scope: !7198)
!7209 = !DILocation(line: 1360, column: 65, scope: !7198)
!7210 = !DILocation(line: 1361, column: 7, scope: !7198)
!7211 = !DILocation(line: 1361, column: 10, scope: !7198)
!7212 = !DILocation(line: 1360, column: 80, scope: !7198)
!7213 = !DILocation(line: 1361, column: 16, scope: !7198)
!7214 = !DILocation(line: 1361, column: 15, scope: !7198)
!7215 = !DILocation(line: 1360, column: 68, scope: !7198)
!7216 = !DILocation(line: 1361, column: 19, scope: !7198)
!7217 = !DILocation(line: 1360, column: 28, scope: !7198)
!7218 = !DILocation(line: 1360, column: 27, scope: !7198)
!7219 = !DILocation(line: 1360, column: 5, scope: !7198)
!7220 = !DILocation(line: 1360, column: 16, scope: !7198)
!7221 = !DILocation(line: 1360, column: 21, scope: !7198)
!7222 = !DILocation(line: 1362, column: 1, scope: !7089)
!7223 = distinct !DISubprogram(name: "CompositeVividLight", scope: !1, file: !1, line: 1566, type: !3231, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7224 = !DILocalVariable(name: "p", arg: 1, scope: !7223, file: !1, line: 1566, type: !3051)
!7225 = !DILocation(line: 1566, column: 65, scope: !7223)
!7226 = !DILocalVariable(name: "q", arg: 2, scope: !7223, file: !1, line: 1567, type: !3051)
!7227 = !DILocation(line: 1567, column: 28, scope: !7223)
!7228 = !DILocalVariable(name: "composite", arg: 3, scope: !7223, file: !1, line: 1567, type: !3082)
!7229 = !DILocation(line: 1567, column: 49, scope: !7223)
!7230 = !DILocalVariable(name: "Da", scope: !7223, file: !1, line: 1570, type: !710)
!7231 = !DILocation(line: 1570, column: 5, scope: !7223)
!7232 = !DILocalVariable(name: "gamma", scope: !7223, file: !1, line: 1571, type: !710)
!7233 = !DILocation(line: 1571, column: 5, scope: !7223)
!7234 = !DILocalVariable(name: "Sa", scope: !7223, file: !1, line: 1572, type: !710)
!7235 = !DILocation(line: 1572, column: 5, scope: !7223)
!7236 = !DILocation(line: 1574, column: 23, scope: !7223)
!7237 = !DILocation(line: 1574, column: 26, scope: !7223)
!7238 = !DILocation(line: 1574, column: 22, scope: !7223)
!7239 = !DILocation(line: 1574, column: 9, scope: !7223)
!7240 = !DILocation(line: 1574, column: 6, scope: !7223)
!7241 = !DILocation(line: 1574, column: 5, scope: !7223)
!7242 = !DILocation(line: 1575, column: 23, scope: !7223)
!7243 = !DILocation(line: 1575, column: 26, scope: !7223)
!7244 = !DILocation(line: 1575, column: 22, scope: !7223)
!7245 = !DILocation(line: 1575, column: 9, scope: !7223)
!7246 = !DILocation(line: 1575, column: 6, scope: !7223)
!7247 = !DILocation(line: 1575, column: 5, scope: !7223)
!7248 = !DILocation(line: 1576, column: 22, scope: !7223)
!7249 = !DILocation(line: 1576, column: 25, scope: !7223)
!7250 = !DILocation(line: 1576, column: 24, scope: !7223)
!7251 = !DILocation(line: 1576, column: 28, scope: !7223)
!7252 = !DILocation(line: 1576, column: 31, scope: !7223)
!7253 = !DILocation(line: 1576, column: 30, scope: !7223)
!7254 = !DILocation(line: 1576, column: 27, scope: !7223)
!7255 = !DILocation(line: 1576, column: 9, scope: !7223)
!7256 = !DILocation(line: 1576, column: 8, scope: !7223)
!7257 = !DILocation(line: 1577, column: 57, scope: !7223)
!7258 = !DILocation(line: 1577, column: 56, scope: !7223)
!7259 = !DILocation(line: 1577, column: 51, scope: !7223)
!7260 = !DILocation(line: 1577, column: 22, scope: !7223)
!7261 = !DILocation(line: 1577, column: 3, scope: !7223)
!7262 = !DILocation(line: 1577, column: 14, scope: !7223)
!7263 = !DILocation(line: 1577, column: 21, scope: !7223)
!7264 = !DILocation(line: 1578, column: 28, scope: !7223)
!7265 = !DILocation(line: 1578, column: 23, scope: !7223)
!7266 = !DILocation(line: 1578, column: 35, scope: !7223)
!7267 = !DILocation(line: 1578, column: 69, scope: !7223)
!7268 = !DILocation(line: 1578, column: 21, scope: !7223)
!7269 = !DILocation(line: 1578, column: 9, scope: !7223)
!7270 = !DILocation(line: 1578, column: 8, scope: !7223)
!7271 = !DILocation(line: 1579, column: 18, scope: !7223)
!7272 = !DILocation(line: 1579, column: 48, scope: !7223)
!7273 = !DILocation(line: 1579, column: 51, scope: !7223)
!7274 = !DILocation(line: 1579, column: 47, scope: !7223)
!7275 = !DILocation(line: 1579, column: 55, scope: !7223)
!7276 = !DILocation(line: 1579, column: 54, scope: !7223)
!7277 = !DILocation(line: 1579, column: 35, scope: !7223)
!7278 = !DILocation(line: 1579, column: 58, scope: !7223)
!7279 = !DILocation(line: 1580, column: 5, scope: !7223)
!7280 = !DILocation(line: 1580, column: 8, scope: !7223)
!7281 = !DILocation(line: 1579, column: 73, scope: !7223)
!7282 = !DILocation(line: 1580, column: 12, scope: !7223)
!7283 = !DILocation(line: 1580, column: 11, scope: !7223)
!7284 = !DILocation(line: 1579, column: 61, scope: !7223)
!7285 = !DILocation(line: 1580, column: 15, scope: !7223)
!7286 = !DILocation(line: 1579, column: 24, scope: !7223)
!7287 = !DILocation(line: 1579, column: 23, scope: !7223)
!7288 = !DILocation(line: 1579, column: 3, scope: !7223)
!7289 = !DILocation(line: 1579, column: 14, scope: !7223)
!7290 = !DILocation(line: 1579, column: 17, scope: !7223)
!7291 = !DILocation(line: 1581, column: 20, scope: !7223)
!7292 = !DILocation(line: 1581, column: 50, scope: !7223)
!7293 = !DILocation(line: 1581, column: 53, scope: !7223)
!7294 = !DILocation(line: 1581, column: 49, scope: !7223)
!7295 = !DILocation(line: 1581, column: 59, scope: !7223)
!7296 = !DILocation(line: 1581, column: 58, scope: !7223)
!7297 = !DILocation(line: 1581, column: 37, scope: !7223)
!7298 = !DILocation(line: 1581, column: 62, scope: !7223)
!7299 = !DILocation(line: 1582, column: 5, scope: !7223)
!7300 = !DILocation(line: 1582, column: 8, scope: !7223)
!7301 = !DILocation(line: 1581, column: 77, scope: !7223)
!7302 = !DILocation(line: 1582, column: 14, scope: !7223)
!7303 = !DILocation(line: 1582, column: 13, scope: !7223)
!7304 = !DILocation(line: 1581, column: 65, scope: !7223)
!7305 = !DILocation(line: 1582, column: 17, scope: !7223)
!7306 = !DILocation(line: 1581, column: 26, scope: !7223)
!7307 = !DILocation(line: 1581, column: 25, scope: !7223)
!7308 = !DILocation(line: 1581, column: 3, scope: !7223)
!7309 = !DILocation(line: 1581, column: 14, scope: !7223)
!7310 = !DILocation(line: 1581, column: 19, scope: !7223)
!7311 = !DILocation(line: 1583, column: 19, scope: !7223)
!7312 = !DILocation(line: 1583, column: 49, scope: !7223)
!7313 = !DILocation(line: 1583, column: 52, scope: !7223)
!7314 = !DILocation(line: 1583, column: 48, scope: !7223)
!7315 = !DILocation(line: 1583, column: 57, scope: !7223)
!7316 = !DILocation(line: 1583, column: 56, scope: !7223)
!7317 = !DILocation(line: 1583, column: 36, scope: !7223)
!7318 = !DILocation(line: 1583, column: 60, scope: !7223)
!7319 = !DILocation(line: 1584, column: 5, scope: !7223)
!7320 = !DILocation(line: 1584, column: 8, scope: !7223)
!7321 = !DILocation(line: 1583, column: 75, scope: !7223)
!7322 = !DILocation(line: 1584, column: 13, scope: !7223)
!7323 = !DILocation(line: 1584, column: 12, scope: !7223)
!7324 = !DILocation(line: 1583, column: 63, scope: !7223)
!7325 = !DILocation(line: 1584, column: 16, scope: !7223)
!7326 = !DILocation(line: 1583, column: 25, scope: !7223)
!7327 = !DILocation(line: 1583, column: 24, scope: !7223)
!7328 = !DILocation(line: 1583, column: 3, scope: !7223)
!7329 = !DILocation(line: 1583, column: 14, scope: !7223)
!7330 = !DILocation(line: 1583, column: 18, scope: !7223)
!7331 = !DILocation(line: 1585, column: 7, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 1585, column: 7)
!7333 = !DILocation(line: 1585, column: 10, scope: !7332)
!7334 = !DILocation(line: 1585, column: 21, scope: !7332)
!7335 = !DILocation(line: 1585, column: 7, scope: !7223)
!7336 = !DILocation(line: 1586, column: 22, scope: !7332)
!7337 = !DILocation(line: 1586, column: 52, scope: !7332)
!7338 = !DILocation(line: 1586, column: 55, scope: !7332)
!7339 = !DILocation(line: 1586, column: 51, scope: !7332)
!7340 = !DILocation(line: 1586, column: 61, scope: !7332)
!7341 = !DILocation(line: 1586, column: 60, scope: !7332)
!7342 = !DILocation(line: 1586, column: 39, scope: !7332)
!7343 = !DILocation(line: 1586, column: 64, scope: !7332)
!7344 = !DILocation(line: 1587, column: 7, scope: !7332)
!7345 = !DILocation(line: 1587, column: 10, scope: !7332)
!7346 = !DILocation(line: 1586, column: 79, scope: !7332)
!7347 = !DILocation(line: 1587, column: 16, scope: !7332)
!7348 = !DILocation(line: 1587, column: 15, scope: !7332)
!7349 = !DILocation(line: 1586, column: 67, scope: !7332)
!7350 = !DILocation(line: 1587, column: 19, scope: !7332)
!7351 = !DILocation(line: 1586, column: 28, scope: !7332)
!7352 = !DILocation(line: 1586, column: 27, scope: !7332)
!7353 = !DILocation(line: 1586, column: 5, scope: !7332)
!7354 = !DILocation(line: 1586, column: 16, scope: !7332)
!7355 = !DILocation(line: 1586, column: 21, scope: !7332)
!7356 = !DILocation(line: 1588, column: 1, scope: !7223)
!7357 = distinct !DISubprogram(name: "CompositePinLight", scope: !1, file: !1, line: 1380, type: !3231, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7358 = !DILocalVariable(name: "p", arg: 1, scope: !7357, file: !1, line: 1380, type: !3051)
!7359 = !DILocation(line: 1380, column: 63, scope: !7357)
!7360 = !DILocalVariable(name: "q", arg: 2, scope: !7357, file: !1, line: 1381, type: !3051)
!7361 = !DILocation(line: 1381, column: 28, scope: !7357)
!7362 = !DILocalVariable(name: "composite", arg: 3, scope: !7357, file: !1, line: 1381, type: !3082)
!7363 = !DILocation(line: 1381, column: 49, scope: !7357)
!7364 = !DILocalVariable(name: "Da", scope: !7357, file: !1, line: 1384, type: !710)
!7365 = !DILocation(line: 1384, column: 5, scope: !7357)
!7366 = !DILocalVariable(name: "gamma", scope: !7357, file: !1, line: 1385, type: !710)
!7367 = !DILocation(line: 1385, column: 5, scope: !7357)
!7368 = !DILocalVariable(name: "Sa", scope: !7357, file: !1, line: 1386, type: !710)
!7369 = !DILocation(line: 1386, column: 5, scope: !7357)
!7370 = !DILocation(line: 1388, column: 23, scope: !7357)
!7371 = !DILocation(line: 1388, column: 26, scope: !7357)
!7372 = !DILocation(line: 1388, column: 22, scope: !7357)
!7373 = !DILocation(line: 1388, column: 9, scope: !7357)
!7374 = !DILocation(line: 1388, column: 6, scope: !7357)
!7375 = !DILocation(line: 1388, column: 5, scope: !7357)
!7376 = !DILocation(line: 1389, column: 23, scope: !7357)
!7377 = !DILocation(line: 1389, column: 26, scope: !7357)
!7378 = !DILocation(line: 1389, column: 22, scope: !7357)
!7379 = !DILocation(line: 1389, column: 9, scope: !7357)
!7380 = !DILocation(line: 1389, column: 6, scope: !7357)
!7381 = !DILocation(line: 1389, column: 5, scope: !7357)
!7382 = !DILocation(line: 1390, column: 22, scope: !7357)
!7383 = !DILocation(line: 1390, column: 25, scope: !7357)
!7384 = !DILocation(line: 1390, column: 24, scope: !7357)
!7385 = !DILocation(line: 1390, column: 28, scope: !7357)
!7386 = !DILocation(line: 1390, column: 31, scope: !7357)
!7387 = !DILocation(line: 1390, column: 30, scope: !7357)
!7388 = !DILocation(line: 1390, column: 27, scope: !7357)
!7389 = !DILocation(line: 1390, column: 9, scope: !7357)
!7390 = !DILocation(line: 1390, column: 8, scope: !7357)
!7391 = !DILocation(line: 1391, column: 57, scope: !7357)
!7392 = !DILocation(line: 1391, column: 56, scope: !7357)
!7393 = !DILocation(line: 1391, column: 51, scope: !7357)
!7394 = !DILocation(line: 1391, column: 22, scope: !7357)
!7395 = !DILocation(line: 1391, column: 3, scope: !7357)
!7396 = !DILocation(line: 1391, column: 14, scope: !7357)
!7397 = !DILocation(line: 1391, column: 21, scope: !7357)
!7398 = !DILocation(line: 1392, column: 28, scope: !7357)
!7399 = !DILocation(line: 1392, column: 23, scope: !7357)
!7400 = !DILocation(line: 1392, column: 35, scope: !7357)
!7401 = !DILocation(line: 1392, column: 69, scope: !7357)
!7402 = !DILocation(line: 1392, column: 21, scope: !7357)
!7403 = !DILocation(line: 1392, column: 9, scope: !7357)
!7404 = !DILocation(line: 1392, column: 8, scope: !7357)
!7405 = !DILocation(line: 1393, column: 18, scope: !7357)
!7406 = !DILocation(line: 1393, column: 46, scope: !7357)
!7407 = !DILocation(line: 1393, column: 49, scope: !7357)
!7408 = !DILocation(line: 1393, column: 45, scope: !7357)
!7409 = !DILocation(line: 1393, column: 53, scope: !7357)
!7410 = !DILocation(line: 1393, column: 52, scope: !7357)
!7411 = !DILocation(line: 1393, column: 33, scope: !7357)
!7412 = !DILocation(line: 1393, column: 56, scope: !7357)
!7413 = !DILocation(line: 1394, column: 5, scope: !7357)
!7414 = !DILocation(line: 1394, column: 8, scope: !7357)
!7415 = !DILocation(line: 1393, column: 71, scope: !7357)
!7416 = !DILocation(line: 1394, column: 12, scope: !7357)
!7417 = !DILocation(line: 1394, column: 11, scope: !7357)
!7418 = !DILocation(line: 1393, column: 59, scope: !7357)
!7419 = !DILocation(line: 1394, column: 15, scope: !7357)
!7420 = !DILocation(line: 1393, column: 24, scope: !7357)
!7421 = !DILocation(line: 1393, column: 23, scope: !7357)
!7422 = !DILocation(line: 1393, column: 3, scope: !7357)
!7423 = !DILocation(line: 1393, column: 14, scope: !7357)
!7424 = !DILocation(line: 1393, column: 17, scope: !7357)
!7425 = !DILocation(line: 1395, column: 20, scope: !7357)
!7426 = !DILocation(line: 1395, column: 48, scope: !7357)
!7427 = !DILocation(line: 1395, column: 51, scope: !7357)
!7428 = !DILocation(line: 1395, column: 47, scope: !7357)
!7429 = !DILocation(line: 1395, column: 57, scope: !7357)
!7430 = !DILocation(line: 1395, column: 56, scope: !7357)
!7431 = !DILocation(line: 1395, column: 35, scope: !7357)
!7432 = !DILocation(line: 1395, column: 60, scope: !7357)
!7433 = !DILocation(line: 1396, column: 5, scope: !7357)
!7434 = !DILocation(line: 1396, column: 8, scope: !7357)
!7435 = !DILocation(line: 1395, column: 75, scope: !7357)
!7436 = !DILocation(line: 1396, column: 14, scope: !7357)
!7437 = !DILocation(line: 1396, column: 13, scope: !7357)
!7438 = !DILocation(line: 1395, column: 63, scope: !7357)
!7439 = !DILocation(line: 1396, column: 17, scope: !7357)
!7440 = !DILocation(line: 1395, column: 26, scope: !7357)
!7441 = !DILocation(line: 1395, column: 25, scope: !7357)
!7442 = !DILocation(line: 1395, column: 3, scope: !7357)
!7443 = !DILocation(line: 1395, column: 14, scope: !7357)
!7444 = !DILocation(line: 1395, column: 19, scope: !7357)
!7445 = !DILocation(line: 1397, column: 19, scope: !7357)
!7446 = !DILocation(line: 1397, column: 47, scope: !7357)
!7447 = !DILocation(line: 1397, column: 50, scope: !7357)
!7448 = !DILocation(line: 1397, column: 46, scope: !7357)
!7449 = !DILocation(line: 1397, column: 55, scope: !7357)
!7450 = !DILocation(line: 1397, column: 54, scope: !7357)
!7451 = !DILocation(line: 1397, column: 34, scope: !7357)
!7452 = !DILocation(line: 1397, column: 58, scope: !7357)
!7453 = !DILocation(line: 1398, column: 5, scope: !7357)
!7454 = !DILocation(line: 1398, column: 8, scope: !7357)
!7455 = !DILocation(line: 1397, column: 73, scope: !7357)
!7456 = !DILocation(line: 1398, column: 13, scope: !7357)
!7457 = !DILocation(line: 1398, column: 12, scope: !7357)
!7458 = !DILocation(line: 1397, column: 61, scope: !7357)
!7459 = !DILocation(line: 1398, column: 16, scope: !7357)
!7460 = !DILocation(line: 1397, column: 25, scope: !7357)
!7461 = !DILocation(line: 1397, column: 24, scope: !7357)
!7462 = !DILocation(line: 1397, column: 3, scope: !7357)
!7463 = !DILocation(line: 1397, column: 14, scope: !7357)
!7464 = !DILocation(line: 1397, column: 18, scope: !7357)
!7465 = !DILocation(line: 1399, column: 7, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 1399, column: 7)
!7467 = !DILocation(line: 1399, column: 10, scope: !7466)
!7468 = !DILocation(line: 1399, column: 21, scope: !7466)
!7469 = !DILocation(line: 1399, column: 7, scope: !7357)
!7470 = !DILocation(line: 1400, column: 22, scope: !7466)
!7471 = !DILocation(line: 1400, column: 50, scope: !7466)
!7472 = !DILocation(line: 1400, column: 53, scope: !7466)
!7473 = !DILocation(line: 1400, column: 49, scope: !7466)
!7474 = !DILocation(line: 1400, column: 59, scope: !7466)
!7475 = !DILocation(line: 1400, column: 58, scope: !7466)
!7476 = !DILocation(line: 1400, column: 37, scope: !7466)
!7477 = !DILocation(line: 1400, column: 62, scope: !7466)
!7478 = !DILocation(line: 1401, column: 7, scope: !7466)
!7479 = !DILocation(line: 1401, column: 10, scope: !7466)
!7480 = !DILocation(line: 1400, column: 77, scope: !7466)
!7481 = !DILocation(line: 1401, column: 16, scope: !7466)
!7482 = !DILocation(line: 1401, column: 15, scope: !7466)
!7483 = !DILocation(line: 1400, column: 65, scope: !7466)
!7484 = !DILocation(line: 1401, column: 19, scope: !7466)
!7485 = !DILocation(line: 1400, column: 28, scope: !7466)
!7486 = !DILocation(line: 1400, column: 27, scope: !7466)
!7487 = !DILocation(line: 1400, column: 5, scope: !7466)
!7488 = !DILocation(line: 1400, column: 16, scope: !7466)
!7489 = !DILocation(line: 1400, column: 21, scope: !7466)
!7490 = !DILocation(line: 1402, column: 1, scope: !7357)
!7491 = distinct !DISubprogram(name: "CompositeBumpmap", scope: !1, file: !1, line: 233, type: !3231, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7492 = !DILocalVariable(name: "p", arg: 1, scope: !7491, file: !1, line: 233, type: !3051)
!7493 = !DILocation(line: 233, column: 62, scope: !7491)
!7494 = !DILocalVariable(name: "q", arg: 2, scope: !7491, file: !1, line: 234, type: !3051)
!7495 = !DILocation(line: 234, column: 28, scope: !7491)
!7496 = !DILocalVariable(name: "composite", arg: 3, scope: !7491, file: !1, line: 234, type: !3082)
!7497 = !DILocation(line: 234, column: 49, scope: !7491)
!7498 = !DILocalVariable(name: "intensity", scope: !7491, file: !1, line: 237, type: !710)
!7499 = !DILocation(line: 237, column: 5, scope: !7491)
!7500 = !DILocation(line: 239, column: 34, scope: !7491)
!7501 = !DILocation(line: 239, column: 13, scope: !7491)
!7502 = !DILocation(line: 239, column: 12, scope: !7491)
!7503 = !DILocation(line: 240, column: 31, scope: !7491)
!7504 = !DILocation(line: 240, column: 30, scope: !7491)
!7505 = !DILocation(line: 240, column: 41, scope: !7491)
!7506 = !DILocation(line: 240, column: 44, scope: !7491)
!7507 = !DILocation(line: 240, column: 40, scope: !7491)
!7508 = !DILocation(line: 240, column: 18, scope: !7491)
!7509 = !DILocation(line: 240, column: 3, scope: !7491)
!7510 = !DILocation(line: 240, column: 14, scope: !7491)
!7511 = !DILocation(line: 240, column: 17, scope: !7491)
!7512 = !DILocation(line: 241, column: 33, scope: !7491)
!7513 = !DILocation(line: 241, column: 32, scope: !7491)
!7514 = !DILocation(line: 241, column: 43, scope: !7491)
!7515 = !DILocation(line: 241, column: 46, scope: !7491)
!7516 = !DILocation(line: 241, column: 42, scope: !7491)
!7517 = !DILocation(line: 241, column: 20, scope: !7491)
!7518 = !DILocation(line: 241, column: 3, scope: !7491)
!7519 = !DILocation(line: 241, column: 14, scope: !7491)
!7520 = !DILocation(line: 241, column: 19, scope: !7491)
!7521 = !DILocation(line: 242, column: 32, scope: !7491)
!7522 = !DILocation(line: 242, column: 31, scope: !7491)
!7523 = !DILocation(line: 242, column: 42, scope: !7491)
!7524 = !DILocation(line: 242, column: 45, scope: !7491)
!7525 = !DILocation(line: 242, column: 41, scope: !7491)
!7526 = !DILocation(line: 242, column: 19, scope: !7491)
!7527 = !DILocation(line: 242, column: 3, scope: !7491)
!7528 = !DILocation(line: 242, column: 14, scope: !7491)
!7529 = !DILocation(line: 242, column: 18, scope: !7491)
!7530 = !DILocation(line: 243, column: 52, scope: !7491)
!7531 = !DILocation(line: 243, column: 51, scope: !7491)
!7532 = !DILocation(line: 244, column: 5, scope: !7491)
!7533 = !DILocation(line: 244, column: 8, scope: !7491)
!7534 = !DILocation(line: 243, column: 61, scope: !7491)
!7535 = !DILocation(line: 243, column: 3, scope: !7491)
!7536 = !DILocation(line: 243, column: 14, scope: !7491)
!7537 = !DILocation(line: 243, column: 21, scope: !7491)
!7538 = !DILocation(line: 245, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7491, file: !1, line: 245, column: 7)
!7540 = !DILocation(line: 245, column: 10, scope: !7539)
!7541 = !DILocation(line: 245, column: 21, scope: !7539)
!7542 = !DILocation(line: 245, column: 7, scope: !7491)
!7543 = !DILocation(line: 246, column: 35, scope: !7539)
!7544 = !DILocation(line: 246, column: 34, scope: !7539)
!7545 = !DILocation(line: 246, column: 45, scope: !7539)
!7546 = !DILocation(line: 246, column: 48, scope: !7539)
!7547 = !DILocation(line: 246, column: 44, scope: !7539)
!7548 = !DILocation(line: 246, column: 22, scope: !7539)
!7549 = !DILocation(line: 246, column: 5, scope: !7539)
!7550 = !DILocation(line: 246, column: 16, scope: !7539)
!7551 = !DILocation(line: 246, column: 21, scope: !7539)
!7552 = !DILocation(line: 247, column: 1, scope: !7491)
!7553 = distinct !DISubprogram(name: "MagickPixelCompositeBlend", scope: !3130, file: !3130, line: 143, type: !3131, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7554 = !DILocalVariable(name: "p", arg: 1, scope: !7553, file: !3130, line: 143, type: !3051)
!7555 = !DILocation(line: 143, column: 71, scope: !7553)
!7556 = !DILocalVariable(name: "alpha", arg: 2, scope: !7553, file: !3130, line: 144, type: !3111)
!7557 = !DILocation(line: 144, column: 24, scope: !7553)
!7558 = !DILocalVariable(name: "q", arg: 3, scope: !7553, file: !3130, line: 144, type: !3051)
!7559 = !DILocation(line: 144, column: 55, scope: !7553)
!7560 = !DILocalVariable(name: "beta", arg: 4, scope: !7553, file: !3130, line: 145, type: !3111)
!7561 = !DILocation(line: 145, column: 24, scope: !7553)
!7562 = !DILocalVariable(name: "composite", arg: 5, scope: !7553, file: !3130, line: 145, type: !3082)
!7563 = !DILocation(line: 145, column: 48, scope: !7553)
!7564 = !DILocation(line: 147, column: 28, scope: !7553)
!7565 = !DILocation(line: 147, column: 61, scope: !7553)
!7566 = !DILocation(line: 148, column: 19, scope: !7553)
!7567 = !DILocation(line: 148, column: 22, scope: !7553)
!7568 = !DILocation(line: 148, column: 18, scope: !7553)
!7569 = !DILocation(line: 147, column: 66, scope: !7553)
!7570 = !DILocation(line: 147, column: 60, scope: !7553)
!7571 = !DILocation(line: 148, column: 32, scope: !7553)
!7572 = !DILocation(line: 148, column: 65, scope: !7553)
!7573 = !DILocation(line: 149, column: 19, scope: !7553)
!7574 = !DILocation(line: 149, column: 22, scope: !7553)
!7575 = !DILocation(line: 149, column: 18, scope: !7553)
!7576 = !DILocation(line: 148, column: 69, scope: !7553)
!7577 = !DILocation(line: 148, column: 64, scope: !7553)
!7578 = !DILocation(line: 149, column: 32, scope: !7553)
!7579 = !DILocation(line: 147, column: 3, scope: !7553)
!7580 = !DILocation(line: 150, column: 1, scope: !7553)
!7581 = distinct !DISubprogram(name: "CompositeThreshold", scope: !1, file: !1, line: 1536, type: !7582, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !3051, !3051, !3111, !3111, !3082}
!7584 = !DILocalVariable(name: "p", arg: 1, scope: !7581, file: !1, line: 1536, type: !3051)
!7585 = !DILocation(line: 1536, column: 64, scope: !7581)
!7586 = !DILocalVariable(name: "q", arg: 2, scope: !7581, file: !1, line: 1537, type: !3051)
!7587 = !DILocation(line: 1537, column: 28, scope: !7581)
!7588 = !DILocalVariable(name: "threshold", arg: 3, scope: !7581, file: !1, line: 1537, type: !3111)
!7589 = !DILocation(line: 1537, column: 51, scope: !7581)
!7590 = !DILocalVariable(name: "amount", arg: 4, scope: !7581, file: !1, line: 1538, type: !3111)
!7591 = !DILocation(line: 1538, column: 24, scope: !7581)
!7592 = !DILocalVariable(name: "composite", arg: 5, scope: !7581, file: !1, line: 1538, type: !3082)
!7593 = !DILocation(line: 1538, column: 50, scope: !7581)
!7594 = !DILocation(line: 1540, column: 28, scope: !7581)
!7595 = !DILocation(line: 1540, column: 31, scope: !7581)
!7596 = !DILocation(line: 1540, column: 35, scope: !7581)
!7597 = !DILocation(line: 1540, column: 38, scope: !7581)
!7598 = !DILocation(line: 1540, column: 42, scope: !7581)
!7599 = !DILocation(line: 1540, column: 52, scope: !7581)
!7600 = !DILocation(line: 1540, column: 18, scope: !7581)
!7601 = !DILocation(line: 1540, column: 3, scope: !7581)
!7602 = !DILocation(line: 1540, column: 14, scope: !7581)
!7603 = !DILocation(line: 1540, column: 17, scope: !7581)
!7604 = !DILocation(line: 1541, column: 30, scope: !7581)
!7605 = !DILocation(line: 1541, column: 33, scope: !7581)
!7606 = !DILocation(line: 1541, column: 39, scope: !7581)
!7607 = !DILocation(line: 1541, column: 42, scope: !7581)
!7608 = !DILocation(line: 1541, column: 48, scope: !7581)
!7609 = !DILocation(line: 1541, column: 58, scope: !7581)
!7610 = !DILocation(line: 1541, column: 20, scope: !7581)
!7611 = !DILocation(line: 1541, column: 3, scope: !7581)
!7612 = !DILocation(line: 1541, column: 14, scope: !7581)
!7613 = !DILocation(line: 1541, column: 19, scope: !7581)
!7614 = !DILocation(line: 1542, column: 29, scope: !7581)
!7615 = !DILocation(line: 1542, column: 32, scope: !7581)
!7616 = !DILocation(line: 1542, column: 37, scope: !7581)
!7617 = !DILocation(line: 1542, column: 40, scope: !7581)
!7618 = !DILocation(line: 1542, column: 45, scope: !7581)
!7619 = !DILocation(line: 1542, column: 55, scope: !7581)
!7620 = !DILocation(line: 1542, column: 19, scope: !7581)
!7621 = !DILocation(line: 1542, column: 3, scope: !7581)
!7622 = !DILocation(line: 1542, column: 14, scope: !7581)
!7623 = !DILocation(line: 1542, column: 18, scope: !7581)
!7624 = !DILocation(line: 1543, column: 45, scope: !7581)
!7625 = !DILocation(line: 1543, column: 48, scope: !7581)
!7626 = !DILocation(line: 1543, column: 56, scope: !7581)
!7627 = !DILocation(line: 1543, column: 59, scope: !7581)
!7628 = !DILocation(line: 1544, column: 8, scope: !7581)
!7629 = !DILocation(line: 1544, column: 18, scope: !7581)
!7630 = !DILocation(line: 1543, column: 35, scope: !7581)
!7631 = !DILocation(line: 1543, column: 34, scope: !7581)
!7632 = !DILocation(line: 1543, column: 3, scope: !7581)
!7633 = !DILocation(line: 1543, column: 14, scope: !7581)
!7634 = !DILocation(line: 1543, column: 21, scope: !7581)
!7635 = !DILocation(line: 1545, column: 7, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 1545, column: 7)
!7637 = !DILocation(line: 1545, column: 10, scope: !7636)
!7638 = !DILocation(line: 1545, column: 21, scope: !7636)
!7639 = !DILocation(line: 1545, column: 7, scope: !7581)
!7640 = !DILocation(line: 1546, column: 32, scope: !7636)
!7641 = !DILocation(line: 1546, column: 35, scope: !7636)
!7642 = !DILocation(line: 1546, column: 41, scope: !7636)
!7643 = !DILocation(line: 1546, column: 44, scope: !7636)
!7644 = !DILocation(line: 1546, column: 50, scope: !7636)
!7645 = !DILocation(line: 1546, column: 60, scope: !7636)
!7646 = !DILocation(line: 1546, column: 22, scope: !7636)
!7647 = !DILocation(line: 1546, column: 5, scope: !7636)
!7648 = !DILocation(line: 1546, column: 16, scope: !7636)
!7649 = !DILocation(line: 1546, column: 21, scope: !7636)
!7650 = !DILocation(line: 1547, column: 1, scope: !7581)
!7651 = distinct !DISubprogram(name: "MagickPixelIntensityToQuantum", scope: !7652, file: !7652, line: 95, type: !7653, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7652 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7653 = !DISubroutineType(types: !7654)
!7654 = !{!510, !3051}
!7655 = !DILocalVariable(name: "pixel", arg: 1, scope: !7651, file: !7652, line: 96, type: !3051)
!7656 = !DILocation(line: 96, column: 28, scope: !7651)
!7657 = !DILocation(line: 98, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7651, file: !7652, line: 98, column: 7)
!7659 = !DILocation(line: 98, column: 14, scope: !7658)
!7660 = !DILocation(line: 98, column: 25, scope: !7658)
!7661 = !DILocation(line: 98, column: 7, scope: !7651)
!7662 = !DILocation(line: 99, column: 27, scope: !7658)
!7663 = !DILocation(line: 99, column: 34, scope: !7658)
!7664 = !DILocation(line: 99, column: 12, scope: !7658)
!7665 = !DILocation(line: 99, column: 5, scope: !7658)
!7666 = !DILocation(line: 100, column: 34, scope: !7651)
!7667 = !DILocation(line: 100, column: 41, scope: !7651)
!7668 = !DILocation(line: 100, column: 33, scope: !7651)
!7669 = !DILocation(line: 100, column: 54, scope: !7651)
!7670 = !DILocation(line: 100, column: 61, scope: !7651)
!7671 = !DILocation(line: 100, column: 53, scope: !7651)
!7672 = !DILocation(line: 100, column: 44, scope: !7651)
!7673 = !DILocation(line: 101, column: 14, scope: !7651)
!7674 = !DILocation(line: 101, column: 21, scope: !7651)
!7675 = !DILocation(line: 101, column: 13, scope: !7651)
!7676 = !DILocation(line: 100, column: 66, scope: !7651)
!7677 = !DILocation(line: 100, column: 25, scope: !7651)
!7678 = !DILocation(line: 100, column: 10, scope: !7651)
!7679 = !DILocation(line: 100, column: 3, scope: !7651)
!7680 = !DILocation(line: 102, column: 1, scope: !7651)
!7681 = distinct !DISubprogram(name: "CompositeHCL", scope: !1, file: !1, line: 719, type: !7682, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !3111, !3111, !3111, !7684, !7684, !7684}
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!7685 = !DILocalVariable(name: "red", arg: 1, scope: !7681, file: !1, line: 719, type: !3111)
!7686 = !DILocation(line: 719, column: 47, scope: !7681)
!7687 = !DILocalVariable(name: "green", arg: 2, scope: !7681, file: !1, line: 719, type: !3111)
!7688 = !DILocation(line: 719, column: 72, scope: !7681)
!7689 = !DILocalVariable(name: "blue", arg: 3, scope: !7681, file: !1, line: 720, type: !3111)
!7690 = !DILocation(line: 720, column: 24, scope: !7681)
!7691 = !DILocalVariable(name: "hue", arg: 4, scope: !7681, file: !1, line: 720, type: !7684)
!7692 = !DILocation(line: 720, column: 37, scope: !7681)
!7693 = !DILocalVariable(name: "chroma", arg: 5, scope: !7681, file: !1, line: 720, type: !7684)
!7694 = !DILocation(line: 720, column: 49, scope: !7681)
!7695 = !DILocalVariable(name: "luma", arg: 6, scope: !7681, file: !1, line: 720, type: !7684)
!7696 = !DILocation(line: 720, column: 64, scope: !7681)
!7697 = !DILocalVariable(name: "b", scope: !7681, file: !1, line: 723, type: !519)
!7698 = !DILocation(line: 723, column: 5, scope: !7681)
!7699 = !DILocalVariable(name: "c", scope: !7681, file: !1, line: 724, type: !519)
!7700 = !DILocation(line: 724, column: 5, scope: !7681)
!7701 = !DILocalVariable(name: "g", scope: !7681, file: !1, line: 725, type: !519)
!7702 = !DILocation(line: 725, column: 5, scope: !7681)
!7703 = !DILocalVariable(name: "h", scope: !7681, file: !1, line: 726, type: !519)
!7704 = !DILocation(line: 726, column: 5, scope: !7681)
!7705 = !DILocalVariable(name: "max", scope: !7681, file: !1, line: 727, type: !519)
!7706 = !DILocation(line: 727, column: 5, scope: !7681)
!7707 = !DILocalVariable(name: "r", scope: !7681, file: !1, line: 728, type: !519)
!7708 = !DILocation(line: 728, column: 5, scope: !7681)
!7709 = !DILocation(line: 736, column: 14, scope: !7681)
!7710 = !DILocation(line: 736, column: 5, scope: !7681)
!7711 = !DILocation(line: 736, column: 4, scope: !7681)
!7712 = !DILocation(line: 737, column: 14, scope: !7681)
!7713 = !DILocation(line: 737, column: 5, scope: !7681)
!7714 = !DILocation(line: 737, column: 4, scope: !7681)
!7715 = !DILocation(line: 738, column: 14, scope: !7681)
!7716 = !DILocation(line: 738, column: 5, scope: !7681)
!7717 = !DILocation(line: 738, column: 4, scope: !7681)
!7718 = !DILocation(line: 739, column: 17, scope: !7681)
!7719 = !DILocation(line: 739, column: 29, scope: !7681)
!7720 = !DILocation(line: 739, column: 31, scope: !7681)
!7721 = !DILocation(line: 739, column: 19, scope: !7681)
!7722 = !DILocation(line: 739, column: 7, scope: !7681)
!7723 = !DILocation(line: 739, column: 6, scope: !7681)
!7724 = !DILocation(line: 740, column: 5, scope: !7681)
!7725 = !DILocation(line: 740, column: 28, scope: !7681)
!7726 = !DILocation(line: 740, column: 40, scope: !7681)
!7727 = !DILocation(line: 740, column: 42, scope: !7681)
!7728 = !DILocation(line: 740, column: 30, scope: !7681)
!7729 = !DILocation(line: 740, column: 18, scope: !7681)
!7730 = !DILocation(line: 740, column: 8, scope: !7681)
!7731 = !DILocation(line: 740, column: 4, scope: !7681)
!7732 = !DILocation(line: 741, column: 4, scope: !7681)
!7733 = !DILocation(line: 742, column: 7, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7681, file: !1, line: 742, column: 7)
!7735 = !DILocation(line: 742, column: 9, scope: !7734)
!7736 = !DILocation(line: 742, column: 7, scope: !7681)
!7737 = !DILocation(line: 743, column: 6, scope: !7734)
!7738 = !DILocation(line: 743, column: 5, scope: !7734)
!7739 = !DILocation(line: 745, column: 9, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7734, file: !1, line: 745, column: 9)
!7741 = !DILocation(line: 745, column: 33, scope: !7740)
!7742 = !DILocation(line: 745, column: 16, scope: !7740)
!7743 = !DILocation(line: 745, column: 13, scope: !7740)
!7744 = !DILocation(line: 745, column: 9, scope: !7734)
!7745 = !DILocation(line: 746, column: 15, scope: !7740)
!7746 = !DILocation(line: 746, column: 17, scope: !7740)
!7747 = !DILocation(line: 746, column: 16, scope: !7740)
!7748 = !DILocation(line: 746, column: 20, scope: !7740)
!7749 = !DILocation(line: 746, column: 19, scope: !7740)
!7750 = !DILocation(line: 746, column: 21, scope: !7740)
!7751 = !DILocation(line: 746, column: 9, scope: !7740)
!7752 = !DILocation(line: 746, column: 8, scope: !7740)
!7753 = !DILocation(line: 746, column: 7, scope: !7740)
!7754 = !DILocation(line: 748, column: 11, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7740, file: !1, line: 748, column: 11)
!7756 = !DILocation(line: 748, column: 37, scope: !7755)
!7757 = !DILocation(line: 748, column: 20, scope: !7755)
!7758 = !DILocation(line: 748, column: 17, scope: !7755)
!7759 = !DILocation(line: 748, column: 11, scope: !7740)
!7760 = !DILocation(line: 749, column: 13, scope: !7755)
!7761 = !DILocation(line: 749, column: 15, scope: !7755)
!7762 = !DILocation(line: 749, column: 14, scope: !7755)
!7763 = !DILocation(line: 749, column: 18, scope: !7755)
!7764 = !DILocation(line: 749, column: 17, scope: !7755)
!7765 = !DILocation(line: 749, column: 20, scope: !7755)
!7766 = !DILocation(line: 749, column: 10, scope: !7755)
!7767 = !DILocation(line: 749, column: 9, scope: !7755)
!7768 = !DILocation(line: 751, column: 13, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7755, file: !1, line: 751, column: 13)
!7770 = !DILocation(line: 751, column: 38, scope: !7769)
!7771 = !DILocation(line: 751, column: 21, scope: !7769)
!7772 = !DILocation(line: 751, column: 18, scope: !7769)
!7773 = !DILocation(line: 751, column: 13, scope: !7755)
!7774 = !DILocation(line: 752, column: 15, scope: !7769)
!7775 = !DILocation(line: 752, column: 17, scope: !7769)
!7776 = !DILocation(line: 752, column: 16, scope: !7769)
!7777 = !DILocation(line: 752, column: 20, scope: !7769)
!7778 = !DILocation(line: 752, column: 19, scope: !7769)
!7779 = !DILocation(line: 752, column: 22, scope: !7769)
!7780 = !DILocation(line: 752, column: 12, scope: !7769)
!7781 = !DILocation(line: 752, column: 11, scope: !7769)
!7782 = !DILocation(line: 753, column: 9, scope: !7681)
!7783 = !DILocation(line: 753, column: 10, scope: !7681)
!7784 = !DILocation(line: 753, column: 4, scope: !7681)
!7785 = !DILocation(line: 753, column: 7, scope: !7681)
!7786 = !DILocation(line: 754, column: 24, scope: !7681)
!7787 = !DILocation(line: 754, column: 23, scope: !7681)
!7788 = !DILocation(line: 754, column: 4, scope: !7681)
!7789 = !DILocation(line: 754, column: 10, scope: !7681)
!7790 = !DILocation(line: 755, column: 32, scope: !7681)
!7791 = !DILocation(line: 755, column: 31, scope: !7681)
!7792 = !DILocation(line: 755, column: 43, scope: !7681)
!7793 = !DILocation(line: 755, column: 42, scope: !7681)
!7794 = !DILocation(line: 755, column: 33, scope: !7681)
!7795 = !DILocation(line: 755, column: 54, scope: !7681)
!7796 = !DILocation(line: 755, column: 53, scope: !7681)
!7797 = !DILocation(line: 755, column: 44, scope: !7681)
!7798 = !DILocation(line: 755, column: 21, scope: !7681)
!7799 = !DILocation(line: 755, column: 4, scope: !7681)
!7800 = !DILocation(line: 755, column: 8, scope: !7681)
!7801 = !DILocation(line: 756, column: 1, scope: !7681)
!7802 = distinct !DISubprogram(name: "HCLComposite", scope: !1, file: !1, line: 654, type: !7803, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7803 = !DISubroutineType(types: !7804)
!7804 = !{null, !3040, !3040, !3040, !7805, !7805, !7805}
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!7806 = !DILocalVariable(name: "hue", arg: 1, scope: !7802, file: !1, line: 654, type: !3040)
!7807 = !DILocation(line: 654, column: 39, scope: !7802)
!7808 = !DILocalVariable(name: "chroma", arg: 2, scope: !7802, file: !1, line: 654, type: !3040)
!7809 = !DILocation(line: 654, column: 56, scope: !7802)
!7810 = !DILocalVariable(name: "luma", arg: 3, scope: !7802, file: !1, line: 654, type: !3040)
!7811 = !DILocation(line: 654, column: 76, scope: !7802)
!7812 = !DILocalVariable(name: "red", arg: 4, scope: !7802, file: !1, line: 655, type: !7805)
!7813 = !DILocation(line: 655, column: 19, scope: !7802)
!7814 = !DILocalVariable(name: "green", arg: 5, scope: !7802, file: !1, line: 655, type: !7805)
!7815 = !DILocation(line: 655, column: 39, scope: !7802)
!7816 = !DILocalVariable(name: "blue", arg: 6, scope: !7802, file: !1, line: 655, type: !7805)
!7817 = !DILocation(line: 655, column: 61, scope: !7802)
!7818 = !DILocalVariable(name: "b", scope: !7802, file: !1, line: 658, type: !519)
!7819 = !DILocation(line: 658, column: 5, scope: !7802)
!7820 = !DILocalVariable(name: "c", scope: !7802, file: !1, line: 659, type: !519)
!7821 = !DILocation(line: 659, column: 5, scope: !7802)
!7822 = !DILocalVariable(name: "g", scope: !7802, file: !1, line: 660, type: !519)
!7823 = !DILocation(line: 660, column: 5, scope: !7802)
!7824 = !DILocalVariable(name: "h", scope: !7802, file: !1, line: 661, type: !519)
!7825 = !DILocation(line: 661, column: 5, scope: !7802)
!7826 = !DILocalVariable(name: "m", scope: !7802, file: !1, line: 662, type: !519)
!7827 = !DILocation(line: 662, column: 5, scope: !7802)
!7828 = !DILocalVariable(name: "r", scope: !7802, file: !1, line: 663, type: !519)
!7829 = !DILocation(line: 663, column: 5, scope: !7802)
!7830 = !DILocalVariable(name: "x", scope: !7802, file: !1, line: 664, type: !519)
!7831 = !DILocation(line: 664, column: 5, scope: !7802)
!7832 = !DILocation(line: 672, column: 9, scope: !7802)
!7833 = !DILocation(line: 672, column: 8, scope: !7802)
!7834 = !DILocation(line: 672, column: 4, scope: !7802)
!7835 = !DILocation(line: 673, column: 5, scope: !7802)
!7836 = !DILocation(line: 673, column: 4, scope: !7802)
!7837 = !DILocation(line: 674, column: 5, scope: !7802)
!7838 = !DILocation(line: 674, column: 22, scope: !7802)
!7839 = !DILocation(line: 674, column: 17, scope: !7802)
!7840 = !DILocation(line: 674, column: 28, scope: !7802)
!7841 = !DILocation(line: 674, column: 12, scope: !7802)
!7842 = !DILocation(line: 674, column: 11, scope: !7802)
!7843 = !DILocation(line: 674, column: 6, scope: !7802)
!7844 = !DILocation(line: 674, column: 4, scope: !7802)
!7845 = !DILocation(line: 675, column: 4, scope: !7802)
!7846 = !DILocation(line: 676, column: 4, scope: !7802)
!7847 = !DILocation(line: 677, column: 4, scope: !7802)
!7848 = !DILocation(line: 678, column: 15, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 678, column: 7)
!7850 = !DILocation(line: 678, column: 12, scope: !7849)
!7851 = !DILocation(line: 678, column: 18, scope: !7849)
!7852 = !DILocation(line: 678, column: 22, scope: !7849)
!7853 = !DILocation(line: 678, column: 24, scope: !7849)
!7854 = !DILocation(line: 678, column: 7, scope: !7802)
!7855 = !DILocation(line: 680, column: 9, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7849, file: !1, line: 679, column: 5)
!7857 = !DILocation(line: 680, column: 8, scope: !7856)
!7858 = !DILocation(line: 681, column: 9, scope: !7856)
!7859 = !DILocation(line: 681, column: 8, scope: !7856)
!7860 = !DILocation(line: 682, column: 5, scope: !7856)
!7861 = !DILocation(line: 684, column: 17, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7849, file: !1, line: 684, column: 9)
!7863 = !DILocation(line: 684, column: 14, scope: !7862)
!7864 = !DILocation(line: 684, column: 20, scope: !7862)
!7865 = !DILocation(line: 684, column: 24, scope: !7862)
!7866 = !DILocation(line: 684, column: 26, scope: !7862)
!7867 = !DILocation(line: 684, column: 9, scope: !7849)
!7868 = !DILocation(line: 686, column: 11, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7862, file: !1, line: 685, column: 7)
!7870 = !DILocation(line: 686, column: 10, scope: !7869)
!7871 = !DILocation(line: 687, column: 11, scope: !7869)
!7872 = !DILocation(line: 687, column: 10, scope: !7869)
!7873 = !DILocation(line: 688, column: 7, scope: !7869)
!7874 = !DILocation(line: 690, column: 19, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7862, file: !1, line: 690, column: 11)
!7876 = !DILocation(line: 690, column: 16, scope: !7875)
!7877 = !DILocation(line: 690, column: 22, scope: !7875)
!7878 = !DILocation(line: 690, column: 26, scope: !7875)
!7879 = !DILocation(line: 690, column: 28, scope: !7875)
!7880 = !DILocation(line: 690, column: 11, scope: !7862)
!7881 = !DILocation(line: 692, column: 13, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7875, file: !1, line: 691, column: 9)
!7883 = !DILocation(line: 692, column: 12, scope: !7882)
!7884 = !DILocation(line: 693, column: 13, scope: !7882)
!7885 = !DILocation(line: 693, column: 12, scope: !7882)
!7886 = !DILocation(line: 694, column: 9, scope: !7882)
!7887 = !DILocation(line: 696, column: 21, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7875, file: !1, line: 696, column: 13)
!7889 = !DILocation(line: 696, column: 18, scope: !7888)
!7890 = !DILocation(line: 696, column: 24, scope: !7888)
!7891 = !DILocation(line: 696, column: 28, scope: !7888)
!7892 = !DILocation(line: 696, column: 30, scope: !7888)
!7893 = !DILocation(line: 696, column: 13, scope: !7875)
!7894 = !DILocation(line: 698, column: 15, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7888, file: !1, line: 697, column: 11)
!7896 = !DILocation(line: 698, column: 14, scope: !7895)
!7897 = !DILocation(line: 699, column: 15, scope: !7895)
!7898 = !DILocation(line: 699, column: 14, scope: !7895)
!7899 = !DILocation(line: 700, column: 11, scope: !7895)
!7900 = !DILocation(line: 702, column: 23, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7888, file: !1, line: 702, column: 15)
!7902 = !DILocation(line: 702, column: 20, scope: !7901)
!7903 = !DILocation(line: 702, column: 26, scope: !7901)
!7904 = !DILocation(line: 702, column: 30, scope: !7901)
!7905 = !DILocation(line: 702, column: 32, scope: !7901)
!7906 = !DILocation(line: 702, column: 15, scope: !7888)
!7907 = !DILocation(line: 704, column: 17, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 703, column: 13)
!7909 = !DILocation(line: 704, column: 16, scope: !7908)
!7910 = !DILocation(line: 705, column: 17, scope: !7908)
!7911 = !DILocation(line: 705, column: 16, scope: !7908)
!7912 = !DILocation(line: 706, column: 13, scope: !7908)
!7913 = !DILocation(line: 708, column: 25, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 708, column: 17)
!7915 = !DILocation(line: 708, column: 22, scope: !7914)
!7916 = !DILocation(line: 708, column: 28, scope: !7914)
!7917 = !DILocation(line: 708, column: 32, scope: !7914)
!7918 = !DILocation(line: 708, column: 34, scope: !7914)
!7919 = !DILocation(line: 708, column: 17, scope: !7901)
!7920 = !DILocation(line: 710, column: 19, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7914, file: !1, line: 709, column: 15)
!7922 = !DILocation(line: 710, column: 18, scope: !7921)
!7923 = !DILocation(line: 711, column: 19, scope: !7921)
!7924 = !DILocation(line: 711, column: 18, scope: !7921)
!7925 = !DILocation(line: 712, column: 15, scope: !7921)
!7926 = !DILocation(line: 713, column: 5, scope: !7802)
!7927 = !DILocation(line: 713, column: 20, scope: !7802)
!7928 = !DILocation(line: 713, column: 19, scope: !7802)
!7929 = !DILocation(line: 713, column: 31, scope: !7802)
!7930 = !DILocation(line: 713, column: 30, scope: !7802)
!7931 = !DILocation(line: 713, column: 21, scope: !7802)
!7932 = !DILocation(line: 713, column: 42, scope: !7802)
!7933 = !DILocation(line: 713, column: 41, scope: !7802)
!7934 = !DILocation(line: 713, column: 32, scope: !7802)
!7935 = !DILocation(line: 713, column: 9, scope: !7802)
!7936 = !DILocation(line: 713, column: 4, scope: !7802)
!7937 = !DILocation(line: 714, column: 22, scope: !7802)
!7938 = !DILocation(line: 714, column: 24, scope: !7802)
!7939 = !DILocation(line: 714, column: 23, scope: !7802)
!7940 = !DILocation(line: 714, column: 20, scope: !7802)
!7941 = !DILocation(line: 714, column: 8, scope: !7802)
!7942 = !DILocation(line: 714, column: 4, scope: !7802)
!7943 = !DILocation(line: 714, column: 7, scope: !7802)
!7944 = !DILocation(line: 715, column: 24, scope: !7802)
!7945 = !DILocation(line: 715, column: 26, scope: !7802)
!7946 = !DILocation(line: 715, column: 25, scope: !7802)
!7947 = !DILocation(line: 715, column: 22, scope: !7802)
!7948 = !DILocation(line: 715, column: 10, scope: !7802)
!7949 = !DILocation(line: 715, column: 4, scope: !7802)
!7950 = !DILocation(line: 715, column: 9, scope: !7802)
!7951 = !DILocation(line: 716, column: 23, scope: !7802)
!7952 = !DILocation(line: 716, column: 25, scope: !7802)
!7953 = !DILocation(line: 716, column: 24, scope: !7802)
!7954 = !DILocation(line: 716, column: 21, scope: !7802)
!7955 = !DILocation(line: 716, column: 9, scope: !7802)
!7956 = !DILocation(line: 716, column: 4, scope: !7802)
!7957 = !DILocation(line: 716, column: 8, scope: !7802)
!7958 = !DILocation(line: 717, column: 1, scope: !7802)
!7959 = distinct !DISubprogram(name: "ConvertRGBToCMYK", scope: !2983, file: !2983, line: 30, type: !7960, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !3082}
!7962 = !DILocalVariable(name: "pixel", arg: 1, scope: !7959, file: !2983, line: 30, type: !3082)
!7963 = !DILocation(line: 30, column: 56, scope: !7959)
!7964 = !DILocalVariable(name: "black", scope: !7959, file: !2983, line: 33, type: !710)
!7965 = !DILocation(line: 33, column: 5, scope: !7959)
!7966 = !DILocalVariable(name: "blue", scope: !7959, file: !2983, line: 34, type: !710)
!7967 = !DILocation(line: 34, column: 5, scope: !7959)
!7968 = !DILocalVariable(name: "cyan", scope: !7959, file: !2983, line: 35, type: !710)
!7969 = !DILocation(line: 35, column: 5, scope: !7959)
!7970 = !DILocalVariable(name: "green", scope: !7959, file: !2983, line: 36, type: !710)
!7971 = !DILocation(line: 36, column: 5, scope: !7959)
!7972 = !DILocalVariable(name: "magenta", scope: !7959, file: !2983, line: 37, type: !710)
!7973 = !DILocation(line: 37, column: 5, scope: !7959)
!7974 = !DILocalVariable(name: "red", scope: !7959, file: !2983, line: 38, type: !710)
!7975 = !DILocation(line: 38, column: 5, scope: !7959)
!7976 = !DILocalVariable(name: "yellow", scope: !7959, file: !2983, line: 39, type: !710)
!7977 = !DILocation(line: 39, column: 5, scope: !7959)
!7978 = !DILocation(line: 41, column: 7, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7959, file: !2983, line: 41, column: 7)
!7980 = !DILocation(line: 41, column: 14, scope: !7979)
!7981 = !DILocation(line: 41, column: 25, scope: !7979)
!7982 = !DILocation(line: 41, column: 7, scope: !7959)
!7983 = !DILocation(line: 43, column: 24, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !2983, line: 42, column: 5)
!7985 = !DILocation(line: 43, column: 31, scope: !7984)
!7986 = !DILocation(line: 43, column: 23, scope: !7984)
!7987 = !DILocation(line: 43, column: 11, scope: !7984)
!7988 = !DILocation(line: 43, column: 10, scope: !7984)
!7989 = !DILocation(line: 44, column: 26, scope: !7984)
!7990 = !DILocation(line: 44, column: 33, scope: !7984)
!7991 = !DILocation(line: 44, column: 25, scope: !7984)
!7992 = !DILocation(line: 44, column: 13, scope: !7984)
!7993 = !DILocation(line: 44, column: 12, scope: !7984)
!7994 = !DILocation(line: 45, column: 25, scope: !7984)
!7995 = !DILocation(line: 45, column: 32, scope: !7984)
!7996 = !DILocation(line: 45, column: 24, scope: !7984)
!7997 = !DILocation(line: 45, column: 12, scope: !7984)
!7998 = !DILocation(line: 45, column: 11, scope: !7984)
!7999 = !DILocation(line: 46, column: 5, scope: !7984)
!8000 = !DILocation(line: 49, column: 28, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7979, file: !2983, line: 48, column: 5)
!8002 = !DILocation(line: 49, column: 35, scope: !8001)
!8003 = !DILocation(line: 49, column: 11, scope: !8001)
!8004 = !DILocation(line: 49, column: 10, scope: !8001)
!8005 = !DILocation(line: 50, column: 30, scope: !8001)
!8006 = !DILocation(line: 50, column: 37, scope: !8001)
!8007 = !DILocation(line: 50, column: 13, scope: !8001)
!8008 = !DILocation(line: 50, column: 12, scope: !8001)
!8009 = !DILocation(line: 51, column: 29, scope: !8001)
!8010 = !DILocation(line: 51, column: 36, scope: !8001)
!8011 = !DILocation(line: 51, column: 12, scope: !8001)
!8012 = !DILocation(line: 51, column: 11, scope: !8001)
!8013 = !DILocation(line: 53, column: 13, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7959, file: !2983, line: 53, column: 7)
!8015 = !DILocation(line: 53, column: 8, scope: !8014)
!8016 = !DILocation(line: 53, column: 18, scope: !8014)
!8017 = !DILocation(line: 53, column: 35, scope: !8014)
!8018 = !DILocation(line: 53, column: 44, scope: !8014)
!8019 = !DILocation(line: 53, column: 39, scope: !8014)
!8020 = !DILocation(line: 53, column: 51, scope: !8014)
!8021 = !DILocation(line: 53, column: 68, scope: !8014)
!8022 = !DILocation(line: 54, column: 13, scope: !8014)
!8023 = !DILocation(line: 54, column: 8, scope: !8014)
!8024 = !DILocation(line: 54, column: 19, scope: !8014)
!8025 = !DILocation(line: 53, column: 7, scope: !7959)
!8026 = !DILocation(line: 56, column: 7, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8014, file: !2983, line: 55, column: 5)
!8028 = !DILocation(line: 56, column: 14, scope: !8027)
!8029 = !DILocation(line: 56, column: 19, scope: !8027)
!8030 = !DILocation(line: 57, column: 7, scope: !8027)
!8031 = !DILocation(line: 59, column: 30, scope: !7959)
!8032 = !DILocation(line: 59, column: 29, scope: !7959)
!8033 = !DILocation(line: 59, column: 8, scope: !7959)
!8034 = !DILocation(line: 59, column: 7, scope: !7959)
!8035 = !DILocation(line: 60, column: 33, scope: !7959)
!8036 = !DILocation(line: 60, column: 32, scope: !7959)
!8037 = !DILocation(line: 60, column: 11, scope: !7959)
!8038 = !DILocation(line: 60, column: 10, scope: !7959)
!8039 = !DILocation(line: 61, column: 32, scope: !7959)
!8040 = !DILocation(line: 61, column: 31, scope: !7959)
!8041 = !DILocation(line: 61, column: 10, scope: !7959)
!8042 = !DILocation(line: 61, column: 9, scope: !7959)
!8043 = !DILocation(line: 62, column: 9, scope: !7959)
!8044 = !DILocation(line: 62, column: 8, scope: !7959)
!8045 = !DILocation(line: 63, column: 7, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !7959, file: !2983, line: 63, column: 7)
!8047 = !DILocation(line: 63, column: 17, scope: !8046)
!8048 = !DILocation(line: 63, column: 15, scope: !8046)
!8049 = !DILocation(line: 63, column: 7, scope: !7959)
!8050 = !DILocation(line: 64, column: 11, scope: !8046)
!8051 = !DILocation(line: 64, column: 10, scope: !8046)
!8052 = !DILocation(line: 64, column: 5, scope: !8046)
!8053 = !DILocation(line: 65, column: 7, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !7959, file: !2983, line: 65, column: 7)
!8055 = !DILocation(line: 65, column: 16, scope: !8054)
!8056 = !DILocation(line: 65, column: 14, scope: !8054)
!8057 = !DILocation(line: 65, column: 7, scope: !7959)
!8058 = !DILocation(line: 66, column: 11, scope: !8054)
!8059 = !DILocation(line: 66, column: 10, scope: !8054)
!8060 = !DILocation(line: 66, column: 5, scope: !8054)
!8061 = !DILocation(line: 67, column: 27, scope: !7959)
!8062 = !DILocation(line: 67, column: 32, scope: !7959)
!8063 = !DILocation(line: 67, column: 31, scope: !7959)
!8064 = !DILocation(line: 67, column: 26, scope: !7959)
!8065 = !DILocation(line: 67, column: 44, scope: !7959)
!8066 = !DILocation(line: 67, column: 43, scope: !7959)
!8067 = !DILocation(line: 67, column: 38, scope: !7959)
!8068 = !DILocation(line: 67, column: 8, scope: !7959)
!8069 = !DILocation(line: 67, column: 7, scope: !7959)
!8070 = !DILocation(line: 68, column: 30, scope: !7959)
!8071 = !DILocation(line: 68, column: 38, scope: !7959)
!8072 = !DILocation(line: 68, column: 37, scope: !7959)
!8073 = !DILocation(line: 68, column: 29, scope: !7959)
!8074 = !DILocation(line: 68, column: 50, scope: !7959)
!8075 = !DILocation(line: 68, column: 49, scope: !7959)
!8076 = !DILocation(line: 68, column: 44, scope: !7959)
!8077 = !DILocation(line: 68, column: 11, scope: !7959)
!8078 = !DILocation(line: 68, column: 10, scope: !7959)
!8079 = !DILocation(line: 69, column: 29, scope: !7959)
!8080 = !DILocation(line: 69, column: 36, scope: !7959)
!8081 = !DILocation(line: 69, column: 35, scope: !7959)
!8082 = !DILocation(line: 69, column: 28, scope: !7959)
!8083 = !DILocation(line: 69, column: 48, scope: !7959)
!8084 = !DILocation(line: 69, column: 47, scope: !7959)
!8085 = !DILocation(line: 69, column: 42, scope: !7959)
!8086 = !DILocation(line: 69, column: 10, scope: !7959)
!8087 = !DILocation(line: 69, column: 9, scope: !7959)
!8088 = !DILocation(line: 70, column: 3, scope: !7959)
!8089 = !DILocation(line: 70, column: 10, scope: !7959)
!8090 = !DILocation(line: 70, column: 20, scope: !7959)
!8091 = !DILocation(line: 71, column: 27, scope: !7959)
!8092 = !DILocation(line: 71, column: 26, scope: !7959)
!8093 = !DILocation(line: 71, column: 3, scope: !7959)
!8094 = !DILocation(line: 71, column: 10, scope: !7959)
!8095 = !DILocation(line: 71, column: 13, scope: !7959)
!8096 = !DILocation(line: 72, column: 29, scope: !7959)
!8097 = !DILocation(line: 72, column: 28, scope: !7959)
!8098 = !DILocation(line: 72, column: 3, scope: !7959)
!8099 = !DILocation(line: 72, column: 10, scope: !7959)
!8100 = !DILocation(line: 72, column: 15, scope: !7959)
!8101 = !DILocation(line: 73, column: 28, scope: !7959)
!8102 = !DILocation(line: 73, column: 27, scope: !7959)
!8103 = !DILocation(line: 73, column: 3, scope: !7959)
!8104 = !DILocation(line: 73, column: 10, scope: !7959)
!8105 = !DILocation(line: 73, column: 14, scope: !7959)
!8106 = !DILocation(line: 74, column: 29, scope: !7959)
!8107 = !DILocation(line: 74, column: 28, scope: !7959)
!8108 = !DILocation(line: 74, column: 3, scope: !7959)
!8109 = !DILocation(line: 74, column: 10, scope: !7959)
!8110 = !DILocation(line: 74, column: 15, scope: !7959)
!8111 = !DILocation(line: 75, column: 1, scope: !7959)
!8112 = distinct !DISubprogram(name: "TextureImage", scope: !1, file: !1, line: 2917, type: !8113, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!498, !703, !481}
!8115 = !DILocalVariable(name: "image", arg: 1, scope: !8112, file: !1, line: 2917, type: !703)
!8116 = !DILocation(line: 2917, column: 52, scope: !8112)
!8117 = !DILocalVariable(name: "texture", arg: 2, scope: !8112, file: !1, line: 2917, type: !481)
!8118 = !DILocation(line: 2917, column: 71, scope: !8112)
!8119 = !DILocalVariable(name: "image_view", scope: !8112, file: !1, line: 2922, type: !761)
!8120 = !DILocation(line: 2922, column: 6, scope: !8112)
!8121 = !DILocalVariable(name: "texture_view", scope: !8112, file: !1, line: 2923, type: !761)
!8122 = !DILocation(line: 2923, column: 6, scope: !8112)
!8123 = !DILocalVariable(name: "exception", scope: !8112, file: !1, line: 2926, type: !770)
!8124 = !DILocation(line: 2926, column: 6, scope: !8112)
!8125 = !DILocalVariable(name: "texture_image", scope: !8112, file: !1, line: 2929, type: !703)
!8126 = !DILocation(line: 2929, column: 6, scope: !8112)
!8127 = !DILocalVariable(name: "status", scope: !8112, file: !1, line: 2932, type: !498)
!8128 = !DILocation(line: 2932, column: 5, scope: !8112)
!8129 = !DILocalVariable(name: "y", scope: !8112, file: !1, line: 2935, type: !546)
!8130 = !DILocation(line: 2935, column: 5, scope: !8112)
!8131 = !DILocation(line: 2938, column: 7, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 2938, column: 7)
!8133 = !DILocation(line: 2938, column: 14, scope: !8132)
!8134 = !DILocation(line: 2938, column: 20, scope: !8132)
!8135 = !DILocation(line: 2938, column: 7, scope: !8112)
!8136 = !DILocation(line: 2939, column: 12, scope: !8132)
!8137 = !DILocation(line: 2939, column: 5, scope: !8132)
!8138 = !DILocation(line: 2941, column: 7, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 2941, column: 7)
!8140 = !DILocation(line: 2941, column: 15, scope: !8139)
!8141 = !DILocation(line: 2941, column: 7, scope: !8112)
!8142 = !DILocation(line: 2942, column: 5, scope: !8139)
!8143 = !DILocation(line: 2943, column: 28, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 2943, column: 7)
!8145 = !DILocation(line: 2943, column: 7, scope: !8144)
!8146 = !DILocation(line: 2943, column: 47, scope: !8144)
!8147 = !DILocation(line: 2943, column: 7, scope: !8112)
!8148 = !DILocation(line: 2944, column: 5, scope: !8144)
!8149 = !DILocation(line: 2945, column: 15, scope: !8112)
!8150 = !DILocation(line: 2945, column: 22, scope: !8112)
!8151 = !DILocation(line: 2945, column: 12, scope: !8112)
!8152 = !DILocation(line: 2946, column: 28, scope: !8112)
!8153 = !DILocation(line: 2946, column: 51, scope: !8112)
!8154 = !DILocation(line: 2946, column: 17, scope: !8112)
!8155 = !DILocation(line: 2946, column: 16, scope: !8112)
!8156 = !DILocation(line: 2947, column: 7, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 2947, column: 7)
!8158 = !DILocation(line: 2947, column: 21, scope: !8157)
!8159 = !DILocation(line: 2947, column: 7, scope: !8112)
!8160 = !DILocation(line: 2948, column: 5, scope: !8157)
!8161 = !DILocation(line: 2949, column: 35, scope: !8112)
!8162 = !DILocation(line: 2949, column: 49, scope: !8112)
!8163 = !DILocation(line: 2949, column: 56, scope: !8112)
!8164 = !DILocation(line: 2949, column: 10, scope: !8112)
!8165 = !DILocation(line: 2950, column: 37, scope: !8112)
!8166 = !DILocation(line: 2950, column: 10, scope: !8112)
!8167 = !DILocation(line: 2951, column: 9, scope: !8112)
!8168 = !DILocation(line: 2952, column: 8, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 2952, column: 7)
!8170 = !DILocation(line: 2952, column: 15, scope: !8169)
!8171 = !DILocation(line: 2952, column: 23, scope: !8169)
!8172 = !DILocation(line: 2952, column: 43, scope: !8169)
!8173 = !DILocation(line: 2953, column: 9, scope: !8169)
!8174 = !DILocation(line: 2953, column: 16, scope: !8169)
!8175 = !DILocation(line: 2953, column: 24, scope: !8169)
!8176 = !DILocation(line: 2953, column: 44, scope: !8169)
!8177 = !DILocation(line: 2953, column: 48, scope: !8169)
!8178 = !DILocation(line: 2953, column: 55, scope: !8169)
!8179 = !DILocation(line: 2953, column: 61, scope: !8169)
!8180 = !DILocation(line: 2953, column: 77, scope: !8169)
!8181 = !DILocation(line: 2954, column: 9, scope: !8169)
!8182 = !DILocation(line: 2954, column: 24, scope: !8169)
!8183 = !DILocation(line: 2954, column: 30, scope: !8169)
!8184 = !DILocation(line: 2952, column: 7, scope: !8112)
!8185 = !DILocation(line: 2959, column: 13, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !1, line: 2959, column: 7)
!8187 = distinct !DILexicalBlock(scope: !8169, file: !1, line: 2955, column: 5)
!8188 = !DILocation(line: 2959, column: 12, scope: !8186)
!8189 = !DILocation(line: 2959, column: 17, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !1, line: 2959, column: 7)
!8191 = !DILocation(line: 2959, column: 31, scope: !8190)
!8192 = !DILocation(line: 2959, column: 38, scope: !8190)
!8193 = !DILocation(line: 2959, column: 19, scope: !8190)
!8194 = !DILocation(line: 2959, column: 7, scope: !8186)
!8195 = !DILocalVariable(name: "x", scope: !8196, file: !1, line: 2962, type: !546)
!8196 = distinct !DILexicalBlock(scope: !8190, file: !1, line: 2960, column: 7)
!8197 = !DILocation(line: 2962, column: 11, scope: !8196)
!8198 = !DILocation(line: 2964, column: 13, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8196, file: !1, line: 2964, column: 13)
!8200 = !DILocation(line: 2964, column: 20, scope: !8199)
!8201 = !DILocation(line: 2964, column: 13, scope: !8196)
!8202 = !DILocation(line: 2965, column: 11, scope: !8199)
!8203 = !DILocation(line: 2966, column: 15, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8196, file: !1, line: 2966, column: 9)
!8205 = !DILocation(line: 2966, column: 14, scope: !8204)
!8206 = !DILocation(line: 2966, column: 19, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8204, file: !1, line: 2966, column: 9)
!8208 = !DILocation(line: 2966, column: 33, scope: !8207)
!8209 = !DILocation(line: 2966, column: 40, scope: !8207)
!8210 = !DILocation(line: 2966, column: 21, scope: !8207)
!8211 = !DILocation(line: 2966, column: 9, scope: !8204)
!8212 = !DILocalVariable(name: "thread_status", scope: !8213, file: !1, line: 2969, type: !498)
!8213 = distinct !DILexicalBlock(scope: !8207, file: !1, line: 2967, column: 9)
!8214 = !DILocation(line: 2969, column: 13, scope: !8213)
!8215 = !DILocation(line: 2971, column: 40, scope: !8213)
!8216 = !DILocation(line: 2971, column: 46, scope: !8213)
!8217 = !DILocation(line: 2971, column: 53, scope: !8213)
!8218 = !DILocation(line: 2971, column: 61, scope: !8213)
!8219 = !DILocation(line: 2971, column: 75, scope: !8213)
!8220 = !DILocation(line: 2972, column: 13, scope: !8213)
!8221 = !DILocation(line: 2972, column: 28, scope: !8213)
!8222 = !DILocation(line: 2972, column: 40, scope: !8213)
!8223 = !DILocation(line: 2971, column: 76, scope: !8213)
!8224 = !DILocation(line: 2972, column: 42, scope: !8213)
!8225 = !DILocation(line: 2972, column: 44, scope: !8213)
!8226 = !DILocation(line: 2972, column: 59, scope: !8213)
!8227 = !DILocation(line: 2972, column: 71, scope: !8213)
!8228 = !DILocation(line: 2972, column: 43, scope: !8213)
!8229 = !DILocation(line: 2971, column: 25, scope: !8213)
!8230 = !DILocation(line: 2971, column: 24, scope: !8213)
!8231 = !DILocation(line: 2973, column: 15, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8213, file: !1, line: 2973, column: 15)
!8233 = !DILocation(line: 2973, column: 29, scope: !8232)
!8234 = !DILocation(line: 2973, column: 15, scope: !8213)
!8235 = !DILocation(line: 2975, column: 22, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8232, file: !1, line: 2974, column: 13)
!8237 = !DILocation(line: 2975, column: 21, scope: !8236)
!8238 = !DILocation(line: 2976, column: 15, scope: !8236)
!8239 = !DILocation(line: 2978, column: 9, scope: !8213)
!8240 = !DILocation(line: 2966, column: 62, scope: !8207)
!8241 = !DILocation(line: 2966, column: 77, scope: !8207)
!8242 = !DILocation(line: 2966, column: 50, scope: !8207)
!8243 = !DILocation(line: 2966, column: 9, scope: !8207)
!8244 = distinct !{!8244, !8211, !8245}
!8245 = !DILocation(line: 2978, column: 9, scope: !8204)
!8246 = !DILocation(line: 2979, column: 13, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8196, file: !1, line: 2979, column: 13)
!8248 = !DILocation(line: 2979, column: 20, scope: !8247)
!8249 = !DILocation(line: 2979, column: 37, scope: !8247)
!8250 = !DILocation(line: 2979, column: 13, scope: !8196)
!8251 = !DILocalVariable(name: "proceed", scope: !8252, file: !1, line: 2982, type: !498)
!8252 = distinct !DILexicalBlock(scope: !8247, file: !1, line: 2980, column: 11)
!8253 = !DILocation(line: 2982, column: 15, scope: !8252)
!8254 = !DILocation(line: 2984, column: 38, scope: !8252)
!8255 = !DILocation(line: 2985, column: 15, scope: !8252)
!8256 = !DILocation(line: 2985, column: 17, scope: !8252)
!8257 = !DILocation(line: 2985, column: 24, scope: !8252)
!8258 = !DILocation(line: 2984, column: 21, scope: !8252)
!8259 = !DILocation(line: 2984, column: 20, scope: !8252)
!8260 = !DILocation(line: 2986, column: 17, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8252, file: !1, line: 2986, column: 17)
!8262 = !DILocation(line: 2986, column: 25, scope: !8261)
!8263 = !DILocation(line: 2986, column: 17, scope: !8252)
!8264 = !DILocation(line: 2987, column: 21, scope: !8261)
!8265 = !DILocation(line: 2987, column: 15, scope: !8261)
!8266 = !DILocation(line: 2988, column: 11, scope: !8252)
!8267 = !DILocation(line: 2989, column: 7, scope: !8196)
!8268 = !DILocation(line: 2959, column: 57, scope: !8190)
!8269 = !DILocation(line: 2959, column: 72, scope: !8190)
!8270 = !DILocation(line: 2959, column: 45, scope: !8190)
!8271 = !DILocation(line: 2959, column: 7, scope: !8190)
!8272 = distinct !{!8272, !8194, !8273}
!8273 = !DILocation(line: 2989, column: 7, scope: !8186)
!8274 = !DILocation(line: 2990, column: 31, scope: !8187)
!8275 = !DILocation(line: 2991, column: 9, scope: !8187)
!8276 = !DILocation(line: 2991, column: 16, scope: !8187)
!8277 = !DILocation(line: 2991, column: 21, scope: !8187)
!8278 = !DILocation(line: 2991, column: 28, scope: !8187)
!8279 = !DILocation(line: 2990, column: 14, scope: !8187)
!8280 = !DILocation(line: 2992, column: 34, scope: !8187)
!8281 = !DILocation(line: 2992, column: 21, scope: !8187)
!8282 = !DILocation(line: 2992, column: 20, scope: !8187)
!8283 = !DILocation(line: 2993, column: 14, scope: !8187)
!8284 = !DILocation(line: 2993, column: 7, scope: !8187)
!8285 = !DILocation(line: 2998, column: 9, scope: !8112)
!8286 = !DILocation(line: 2999, column: 40, scope: !8112)
!8287 = !DILocation(line: 2999, column: 54, scope: !8112)
!8288 = !DILocation(line: 2999, column: 16, scope: !8112)
!8289 = !DILocation(line: 2999, column: 15, scope: !8112)
!8290 = !DILocation(line: 3000, column: 40, scope: !8112)
!8291 = !DILocation(line: 3000, column: 46, scope: !8112)
!8292 = !DILocation(line: 3000, column: 14, scope: !8112)
!8293 = !DILocation(line: 3000, column: 13, scope: !8112)
!8294 = !DILocation(line: 3005, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8112, file: !1, line: 3005, column: 3)
!8296 = !DILocation(line: 3005, column: 8, scope: !8295)
!8297 = !DILocation(line: 3005, column: 13, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8295, file: !1, line: 3005, column: 3)
!8299 = !DILocation(line: 3005, column: 27, scope: !8298)
!8300 = !DILocation(line: 3005, column: 34, scope: !8298)
!8301 = !DILocation(line: 3005, column: 15, scope: !8298)
!8302 = !DILocation(line: 3005, column: 3, scope: !8295)
!8303 = !DILocalVariable(name: "sync", scope: !8304, file: !1, line: 3008, type: !498)
!8304 = distinct !DILexicalBlock(scope: !8298, file: !1, line: 3006, column: 3)
!8305 = !DILocation(line: 3008, column: 7, scope: !8304)
!8306 = !DILocalVariable(name: "texture_indexes", scope: !8304, file: !1, line: 3011, type: !708)
!8307 = !DILocation(line: 3011, column: 8, scope: !8304)
!8308 = !DILocalVariable(name: "p", scope: !8304, file: !1, line: 3014, type: !704)
!8309 = !DILocation(line: 3014, column: 8, scope: !8304)
!8310 = !DILocalVariable(name: "indexes", scope: !8304, file: !1, line: 3017, type: !706)
!8311 = !DILocation(line: 3017, column: 8, scope: !8304)
!8312 = !DILocalVariable(name: "x", scope: !8304, file: !1, line: 3020, type: !546)
!8313 = !DILocation(line: 3020, column: 7, scope: !8304)
!8314 = !DILocalVariable(name: "q", scope: !8304, file: !1, line: 3023, type: !505)
!8315 = !DILocation(line: 3023, column: 8, scope: !8304)
!8316 = !DILocalVariable(name: "width", scope: !8304, file: !1, line: 3026, type: !493)
!8317 = !DILocation(line: 3026, column: 7, scope: !8304)
!8318 = !DILocation(line: 3028, column: 9, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 3028, column: 9)
!8320 = !DILocation(line: 3028, column: 16, scope: !8319)
!8321 = !DILocation(line: 3028, column: 9, scope: !8304)
!8322 = !DILocation(line: 3029, column: 7, scope: !8319)
!8323 = !DILocation(line: 3030, column: 33, scope: !8304)
!8324 = !DILocation(line: 3030, column: 46, scope: !8304)
!8325 = !DILocation(line: 3030, column: 61, scope: !8304)
!8326 = !DILocation(line: 3030, column: 73, scope: !8304)
!8327 = !DILocation(line: 3030, column: 76, scope: !8304)
!8328 = !DILocation(line: 3031, column: 7, scope: !8304)
!8329 = !DILocation(line: 3031, column: 22, scope: !8304)
!8330 = !DILocation(line: 3031, column: 34, scope: !8304)
!8331 = !DILocation(line: 3030, column: 77, scope: !8304)
!8332 = !DILocation(line: 3031, column: 39, scope: !8304)
!8333 = !DILocation(line: 3031, column: 54, scope: !8304)
!8334 = !DILocation(line: 3031, column: 37, scope: !8304)
!8335 = !DILocation(line: 3032, column: 7, scope: !8304)
!8336 = !DILocation(line: 3032, column: 22, scope: !8304)
!8337 = !DILocation(line: 3032, column: 32, scope: !8304)
!8338 = !DILocation(line: 3030, column: 7, scope: !8304)
!8339 = !DILocation(line: 3030, column: 6, scope: !8304)
!8340 = !DILocation(line: 3033, column: 37, scope: !8304)
!8341 = !DILocation(line: 3033, column: 50, scope: !8304)
!8342 = !DILocation(line: 3033, column: 52, scope: !8304)
!8343 = !DILocation(line: 3033, column: 59, scope: !8304)
!8344 = !DILocation(line: 3034, column: 7, scope: !8304)
!8345 = !DILocation(line: 3033, column: 7, scope: !8304)
!8346 = !DILocation(line: 3033, column: 6, scope: !8304)
!8347 = !DILocation(line: 3035, column: 10, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 3035, column: 9)
!8349 = !DILocation(line: 3035, column: 12, scope: !8348)
!8350 = !DILocation(line: 3035, column: 43, scope: !8348)
!8351 = !DILocation(line: 3035, column: 47, scope: !8348)
!8352 = !DILocation(line: 3035, column: 49, scope: !8348)
!8353 = !DILocation(line: 3035, column: 9, scope: !8304)
!8354 = !DILocation(line: 3037, column: 15, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 3036, column: 7)
!8356 = !DILocation(line: 3038, column: 9, scope: !8355)
!8357 = !DILocation(line: 3040, column: 51, scope: !8304)
!8358 = !DILocation(line: 3040, column: 21, scope: !8304)
!8359 = !DILocation(line: 3040, column: 20, scope: !8304)
!8360 = !DILocation(line: 3041, column: 45, scope: !8304)
!8361 = !DILocation(line: 3041, column: 13, scope: !8304)
!8362 = !DILocation(line: 3041, column: 12, scope: !8304)
!8363 = !DILocation(line: 3042, column: 11, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 3042, column: 5)
!8365 = !DILocation(line: 3042, column: 10, scope: !8364)
!8366 = !DILocation(line: 3042, column: 15, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8364, file: !1, line: 3042, column: 5)
!8368 = !DILocation(line: 3042, column: 29, scope: !8367)
!8369 = !DILocation(line: 3042, column: 36, scope: !8367)
!8370 = !DILocation(line: 3042, column: 17, scope: !8367)
!8371 = !DILocation(line: 3042, column: 5, scope: !8364)
!8372 = !DILocation(line: 3044, column: 13, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8367, file: !1, line: 3043, column: 5)
!8374 = !DILocation(line: 3044, column: 28, scope: !8373)
!8375 = !DILocation(line: 3044, column: 12, scope: !8373)
!8376 = !DILocation(line: 3045, column: 12, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8373, file: !1, line: 3045, column: 11)
!8378 = !DILocation(line: 3045, column: 24, scope: !8377)
!8379 = !DILocation(line: 3045, column: 13, scope: !8377)
!8380 = !DILocation(line: 3045, column: 43, scope: !8377)
!8381 = !DILocation(line: 3045, column: 50, scope: !8377)
!8382 = !DILocation(line: 3045, column: 31, scope: !8377)
!8383 = !DILocation(line: 3045, column: 11, scope: !8373)
!8384 = !DILocation(line: 3046, column: 15, scope: !8377)
!8385 = !DILocation(line: 3046, column: 22, scope: !8377)
!8386 = !DILocation(line: 3046, column: 30, scope: !8377)
!8387 = !DILocation(line: 3046, column: 29, scope: !8377)
!8388 = !DILocation(line: 3046, column: 14, scope: !8377)
!8389 = !DILocation(line: 3046, column: 9, scope: !8377)
!8390 = !DILocation(line: 3047, column: 31, scope: !8373)
!8391 = !DILocation(line: 3047, column: 33, scope: !8373)
!8392 = !DILocation(line: 3047, column: 35, scope: !8373)
!8393 = !DILocation(line: 3047, column: 40, scope: !8373)
!8394 = !DILocation(line: 3047, column: 14, scope: !8373)
!8395 = !DILocation(line: 3048, column: 12, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8373, file: !1, line: 3048, column: 11)
!8397 = !DILocation(line: 3048, column: 19, scope: !8396)
!8398 = !DILocation(line: 3048, column: 30, scope: !8396)
!8399 = !DILocation(line: 3048, column: 49, scope: !8396)
!8400 = !DILocation(line: 3049, column: 12, scope: !8396)
!8401 = !DILocation(line: 3049, column: 27, scope: !8396)
!8402 = !DILocation(line: 3049, column: 38, scope: !8396)
!8403 = !DILocation(line: 3048, column: 11, scope: !8373)
!8404 = !DILocation(line: 3051, column: 35, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8396, file: !1, line: 3050, column: 9)
!8406 = !DILocation(line: 3051, column: 43, scope: !8405)
!8407 = !DILocation(line: 3051, column: 59, scope: !8405)
!8408 = !DILocation(line: 3051, column: 64, scope: !8405)
!8409 = !DILocation(line: 3051, column: 18, scope: !8405)
!8410 = !DILocation(line: 3053, column: 20, scope: !8405)
!8411 = !DILocation(line: 3053, column: 18, scope: !8405)
!8412 = !DILocation(line: 3054, column: 9, scope: !8405)
!8413 = !DILocation(line: 3055, column: 10, scope: !8373)
!8414 = !DILocation(line: 3055, column: 8, scope: !8373)
!8415 = !DILocation(line: 3056, column: 5, scope: !8373)
!8416 = !DILocation(line: 3042, column: 58, scope: !8367)
!8417 = !DILocation(line: 3042, column: 73, scope: !8367)
!8418 = !DILocation(line: 3042, column: 46, scope: !8367)
!8419 = !DILocation(line: 3042, column: 5, scope: !8367)
!8420 = distinct !{!8420, !8371, !8421}
!8421 = !DILocation(line: 3056, column: 5, scope: !8364)
!8422 = !DILocation(line: 3057, column: 39, scope: !8304)
!8423 = !DILocation(line: 3057, column: 50, scope: !8304)
!8424 = !DILocation(line: 3057, column: 10, scope: !8304)
!8425 = !DILocation(line: 3057, column: 9, scope: !8304)
!8426 = !DILocation(line: 3058, column: 9, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 3058, column: 9)
!8428 = !DILocation(line: 3058, column: 14, scope: !8427)
!8429 = !DILocation(line: 3058, column: 9, scope: !8304)
!8430 = !DILocation(line: 3059, column: 13, scope: !8427)
!8431 = !DILocation(line: 3059, column: 7, scope: !8427)
!8432 = !DILocation(line: 3060, column: 9, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 3060, column: 9)
!8434 = !DILocation(line: 3060, column: 16, scope: !8433)
!8435 = !DILocation(line: 3060, column: 33, scope: !8433)
!8436 = !DILocation(line: 3060, column: 9, scope: !8304)
!8437 = !DILocalVariable(name: "proceed", scope: !8438, file: !1, line: 3063, type: !498)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !1, line: 3061, column: 7)
!8439 = !DILocation(line: 3063, column: 11, scope: !8438)
!8440 = !DILocation(line: 3068, column: 34, scope: !8438)
!8441 = !DILocation(line: 3068, column: 75, scope: !8438)
!8442 = !DILocation(line: 3069, column: 11, scope: !8438)
!8443 = !DILocation(line: 3069, column: 18, scope: !8438)
!8444 = !DILocation(line: 3068, column: 17, scope: !8438)
!8445 = !DILocation(line: 3068, column: 16, scope: !8438)
!8446 = !DILocation(line: 3070, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8438, file: !1, line: 3070, column: 13)
!8448 = !DILocation(line: 3070, column: 21, scope: !8447)
!8449 = !DILocation(line: 3070, column: 13, scope: !8438)
!8450 = !DILocation(line: 3071, column: 17, scope: !8447)
!8451 = !DILocation(line: 3071, column: 11, scope: !8447)
!8452 = !DILocation(line: 3072, column: 7, scope: !8438)
!8453 = !DILocation(line: 3073, column: 3, scope: !8304)
!8454 = !DILocation(line: 3005, column: 41, scope: !8298)
!8455 = !DILocation(line: 3005, column: 3, scope: !8298)
!8456 = distinct !{!8456, !8302, !8457}
!8457 = !DILocation(line: 3073, column: 3, scope: !8295)
!8458 = !DILocation(line: 3074, column: 33, scope: !8112)
!8459 = !DILocation(line: 3074, column: 16, scope: !8112)
!8460 = !DILocation(line: 3074, column: 15, scope: !8112)
!8461 = !DILocation(line: 3075, column: 31, scope: !8112)
!8462 = !DILocation(line: 3075, column: 14, scope: !8112)
!8463 = !DILocation(line: 3075, column: 13, scope: !8112)
!8464 = !DILocation(line: 3076, column: 30, scope: !8112)
!8465 = !DILocation(line: 3076, column: 17, scope: !8112)
!8466 = !DILocation(line: 3076, column: 16, scope: !8112)
!8467 = !DILocation(line: 3077, column: 10, scope: !8112)
!8468 = !DILocation(line: 3077, column: 3, scope: !8112)
!8469 = !DILocation(line: 3078, column: 1, scope: !8112)
!8470 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !3048, file: !3048, line: 78, type: !3038, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8471 = !DILocalVariable(name: "x", arg: 1, scope: !8470, file: !3048, line: 78, type: !3040)
!8472 = !DILocation(line: 78, column: 57, scope: !8470)
!8473 = !DILocalVariable(name: "sign", scope: !8470, file: !3048, line: 81, type: !519)
!8474 = !DILocation(line: 81, column: 5, scope: !8470)
!8475 = !DILocation(line: 86, column: 8, scope: !8470)
!8476 = !DILocation(line: 86, column: 10, scope: !8470)
!8477 = !DILocation(line: 86, column: 7, scope: !8470)
!8478 = !DILocation(line: 87, column: 8, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8470, file: !3048, line: 87, column: 7)
!8480 = !DILocation(line: 87, column: 13, scope: !8479)
!8481 = !DILocation(line: 87, column: 12, scope: !8479)
!8482 = !DILocation(line: 87, column: 16, scope: !8479)
!8483 = !DILocation(line: 87, column: 7, scope: !8470)
!8484 = !DILocation(line: 88, column: 16, scope: !8479)
!8485 = !DILocation(line: 88, column: 15, scope: !8479)
!8486 = !DILocation(line: 88, column: 5, scope: !8479)
!8487 = !DILocation(line: 89, column: 10, scope: !8470)
!8488 = !DILocation(line: 89, column: 14, scope: !8470)
!8489 = !DILocation(line: 89, column: 3, scope: !8470)
!8490 = !DILocation(line: 90, column: 1, scope: !8470)
!8491 = distinct !DISubprogram(name: "MagickOver_", scope: !3130, file: !3130, line: 38, type: !8492, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!710, !3111, !3111, !3111, !3111}
!8494 = !DILocalVariable(name: "p", arg: 1, scope: !8491, file: !3130, line: 38, type: !3111)
!8495 = !DILocation(line: 38, column: 63, scope: !8491)
!8496 = !DILocalVariable(name: "alpha", arg: 2, scope: !8491, file: !3130, line: 39, type: !3111)
!8497 = !DILocation(line: 39, column: 24, scope: !8491)
!8498 = !DILocalVariable(name: "q", arg: 3, scope: !8491, file: !3130, line: 39, type: !3111)
!8499 = !DILocation(line: 39, column: 51, scope: !8491)
!8500 = !DILocalVariable(name: "beta", arg: 4, scope: !8491, file: !3130, line: 39, type: !3111)
!8501 = !DILocation(line: 39, column: 74, scope: !8491)
!8502 = !DILocation(line: 41, column: 28, scope: !8491)
!8503 = !DILocation(line: 41, column: 27, scope: !8491)
!8504 = !DILocation(line: 41, column: 14, scope: !8491)
!8505 = !DILocation(line: 41, column: 35, scope: !8491)
!8506 = !DILocation(line: 41, column: 34, scope: !8491)
!8507 = !DILocation(line: 41, column: 55, scope: !8491)
!8508 = !DILocation(line: 41, column: 54, scope: !8491)
!8509 = !DILocation(line: 41, column: 41, scope: !8491)
!8510 = !DILocation(line: 41, column: 61, scope: !8491)
!8511 = !DILocation(line: 41, column: 60, scope: !8491)
!8512 = !DILocation(line: 41, column: 62, scope: !8491)
!8513 = !DILocation(line: 42, column: 18, scope: !8491)
!8514 = !DILocation(line: 42, column: 17, scope: !8491)
!8515 = !DILocation(line: 41, column: 36, scope: !8491)
!8516 = !DILocation(line: 41, column: 9, scope: !8491)
!8517 = !DILocation(line: 41, column: 3, scope: !8491)
!8518 = distinct !DISubprogram(name: "In", scope: !1, file: !1, line: 758, type: !8492, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8519 = !DILocalVariable(name: "p", arg: 1, scope: !8518, file: !1, line: 758, type: !3111)
!8520 = !DILocation(line: 758, column: 54, scope: !8518)
!8521 = !DILocalVariable(name: "Sa", arg: 2, scope: !8518, file: !1, line: 758, type: !3111)
!8522 = !DILocation(line: 758, column: 77, scope: !8518)
!8523 = !DILocalVariable(name: "q", arg: 3, scope: !8518, file: !1, line: 759, type: !3111)
!8524 = !DILocation(line: 759, column: 24, scope: !8518)
!8525 = !DILocalVariable(name: "Da", arg: 4, scope: !8518, file: !1, line: 759, type: !3111)
!8526 = !DILocation(line: 759, column: 62, scope: !8518)
!8527 = !DILocation(line: 763, column: 10, scope: !8518)
!8528 = !DILocation(line: 763, column: 13, scope: !8518)
!8529 = !DILocation(line: 763, column: 12, scope: !8518)
!8530 = !DILocation(line: 763, column: 15, scope: !8518)
!8531 = !DILocation(line: 763, column: 14, scope: !8518)
!8532 = !DILocation(line: 763, column: 3, scope: !8518)
!8533 = distinct !DISubprogram(name: "Out", scope: !1, file: !1, line: 1290, type: !8492, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8534 = !DILocalVariable(name: "p", arg: 1, scope: !8533, file: !1, line: 1290, type: !3111)
!8535 = !DILocation(line: 1290, column: 55, scope: !8533)
!8536 = !DILocalVariable(name: "Sa", arg: 2, scope: !8533, file: !1, line: 1291, type: !3111)
!8537 = !DILocation(line: 1291, column: 24, scope: !8533)
!8538 = !DILocalVariable(name: "q", arg: 3, scope: !8533, file: !1, line: 1291, type: !3111)
!8539 = !DILocation(line: 1291, column: 48, scope: !8533)
!8540 = !DILocalVariable(name: "Da", arg: 4, scope: !8533, file: !1, line: 1292, type: !3111)
!8541 = !DILocation(line: 1292, column: 24, scope: !8533)
!8542 = !DILocation(line: 1296, column: 10, scope: !8533)
!8543 = !DILocation(line: 1296, column: 13, scope: !8533)
!8544 = !DILocation(line: 1296, column: 12, scope: !8533)
!8545 = !DILocation(line: 1296, column: 20, scope: !8533)
!8546 = !DILocation(line: 1296, column: 19, scope: !8533)
!8547 = !DILocation(line: 1296, column: 14, scope: !8533)
!8548 = !DILocation(line: 1296, column: 9, scope: !8533)
!8549 = !DILocation(line: 1296, column: 3, scope: !8533)
!8550 = distinct !DISubprogram(name: "Atop", scope: !1, file: !1, line: 205, type: !8492, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8551 = !DILocalVariable(name: "p", arg: 1, scope: !8550, file: !1, line: 205, type: !3111)
!8552 = !DILocation(line: 205, column: 56, scope: !8550)
!8553 = !DILocalVariable(name: "Sa", arg: 2, scope: !8550, file: !1, line: 206, type: !3111)
!8554 = !DILocation(line: 206, column: 24, scope: !8550)
!8555 = !DILocalVariable(name: "q", arg: 3, scope: !8550, file: !1, line: 206, type: !3111)
!8556 = !DILocation(line: 206, column: 48, scope: !8550)
!8557 = !DILocalVariable(name: "Da", arg: 4, scope: !8550, file: !1, line: 207, type: !3111)
!8558 = !DILocation(line: 207, column: 24, scope: !8550)
!8559 = !DILocation(line: 211, column: 10, scope: !8550)
!8560 = !DILocation(line: 211, column: 12, scope: !8550)
!8561 = !DILocation(line: 211, column: 11, scope: !8550)
!8562 = !DILocation(line: 211, column: 15, scope: !8550)
!8563 = !DILocation(line: 211, column: 22, scope: !8550)
!8564 = !DILocation(line: 211, column: 21, scope: !8550)
!8565 = !DILocation(line: 211, column: 16, scope: !8550)
!8566 = !DILocation(line: 211, column: 14, scope: !8550)
!8567 = !DILocation(line: 211, column: 9, scope: !8550)
!8568 = !DILocation(line: 211, column: 3, scope: !8550)
!8569 = distinct !DISubprogram(name: "Xor", scope: !1, file: !1, line: 1590, type: !8492, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8570 = !DILocalVariable(name: "Sca", arg: 1, scope: !8569, file: !1, line: 1590, type: !3111)
!8571 = !DILocation(line: 1590, column: 48, scope: !8569)
!8572 = !DILocalVariable(name: "Sa", arg: 2, scope: !8569, file: !1, line: 1590, type: !3111)
!8573 = !DILocation(line: 1590, column: 73, scope: !8569)
!8574 = !DILocalVariable(name: "Dca", arg: 3, scope: !8569, file: !1, line: 1591, type: !3111)
!8575 = !DILocation(line: 1591, column: 24, scope: !8569)
!8576 = !DILocalVariable(name: "Da", arg: 4, scope: !8569, file: !1, line: 1591, type: !3111)
!8577 = !DILocation(line: 1591, column: 49, scope: !8569)
!8578 = !DILocation(line: 1593, column: 10, scope: !8569)
!8579 = !DILocation(line: 1593, column: 19, scope: !8569)
!8580 = !DILocation(line: 1593, column: 18, scope: !8569)
!8581 = !DILocation(line: 1593, column: 13, scope: !8569)
!8582 = !DILocation(line: 1593, column: 23, scope: !8569)
!8583 = !DILocation(line: 1593, column: 32, scope: !8569)
!8584 = !DILocation(line: 1593, column: 31, scope: !8569)
!8585 = !DILocation(line: 1593, column: 26, scope: !8569)
!8586 = !DILocation(line: 1593, column: 22, scope: !8569)
!8587 = !DILocation(line: 1593, column: 9, scope: !8569)
!8588 = !DILocation(line: 1593, column: 3, scope: !8569)
!8589 = distinct !DISubprogram(name: "MagickPixelCompositePlus", scope: !3130, file: !3130, line: 114, type: !3131, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8590 = !DILocalVariable(name: "p", arg: 1, scope: !8589, file: !3130, line: 114, type: !3051)
!8591 = !DILocation(line: 114, column: 70, scope: !8589)
!8592 = !DILocalVariable(name: "alpha", arg: 2, scope: !8589, file: !3130, line: 115, type: !3111)
!8593 = !DILocation(line: 115, column: 24, scope: !8589)
!8594 = !DILocalVariable(name: "q", arg: 3, scope: !8589, file: !3130, line: 115, type: !3051)
!8595 = !DILocation(line: 115, column: 55, scope: !8589)
!8596 = !DILocalVariable(name: "beta", arg: 4, scope: !8589, file: !3130, line: 116, type: !3111)
!8597 = !DILocation(line: 116, column: 24, scope: !8589)
!8598 = !DILocalVariable(name: "composite", arg: 5, scope: !8589, file: !3130, line: 116, type: !3082)
!8599 = !DILocation(line: 116, column: 48, scope: !8589)
!8600 = !DILocalVariable(name: "gamma", scope: !8589, file: !3130, line: 119, type: !519)
!8601 = !DILocation(line: 119, column: 5, scope: !8589)
!8602 = !DILocalVariable(name: "Da", scope: !8589, file: !3130, line: 122, type: !710)
!8603 = !DILocation(line: 122, column: 5, scope: !8589)
!8604 = !DILocalVariable(name: "Sa", scope: !8589, file: !3130, line: 123, type: !710)
!8605 = !DILocation(line: 123, column: 5, scope: !8589)
!8606 = !DILocation(line: 128, column: 23, scope: !8589)
!8607 = !DILocation(line: 128, column: 22, scope: !8589)
!8608 = !DILocation(line: 128, column: 9, scope: !8589)
!8609 = !DILocation(line: 128, column: 6, scope: !8589)
!8610 = !DILocation(line: 128, column: 5, scope: !8589)
!8611 = !DILocation(line: 129, column: 23, scope: !8589)
!8612 = !DILocation(line: 129, column: 22, scope: !8589)
!8613 = !DILocation(line: 129, column: 9, scope: !8589)
!8614 = !DILocation(line: 129, column: 6, scope: !8589)
!8615 = !DILocation(line: 129, column: 5, scope: !8589)
!8616 = !DILocation(line: 130, column: 22, scope: !8589)
!8617 = !DILocation(line: 130, column: 25, scope: !8589)
!8618 = !DILocation(line: 130, column: 24, scope: !8589)
!8619 = !DILocation(line: 130, column: 9, scope: !8589)
!8620 = !DILocation(line: 130, column: 8, scope: !8589)
!8621 = !DILocation(line: 131, column: 57, scope: !8589)
!8622 = !DILocation(line: 131, column: 56, scope: !8589)
!8623 = !DILocation(line: 131, column: 51, scope: !8589)
!8624 = !DILocation(line: 131, column: 22, scope: !8589)
!8625 = !DILocation(line: 131, column: 3, scope: !8589)
!8626 = !DILocation(line: 131, column: 14, scope: !8589)
!8627 = !DILocation(line: 131, column: 21, scope: !8589)
!8628 = !DILocation(line: 132, column: 31, scope: !8589)
!8629 = !DILocation(line: 132, column: 9, scope: !8589)
!8630 = !DILocation(line: 132, column: 8, scope: !8589)
!8631 = !DILocation(line: 133, column: 18, scope: !8589)
!8632 = !DILocation(line: 133, column: 25, scope: !8589)
!8633 = !DILocation(line: 133, column: 28, scope: !8589)
!8634 = !DILocation(line: 133, column: 31, scope: !8589)
!8635 = !DILocation(line: 133, column: 27, scope: !8589)
!8636 = !DILocation(line: 133, column: 35, scope: !8589)
!8637 = !DILocation(line: 133, column: 38, scope: !8589)
!8638 = !DILocation(line: 133, column: 41, scope: !8589)
!8639 = !DILocation(line: 133, column: 37, scope: !8589)
!8640 = !DILocation(line: 133, column: 34, scope: !8589)
!8641 = !DILocation(line: 133, column: 24, scope: !8589)
!8642 = !DILocation(line: 133, column: 23, scope: !8589)
!8643 = !DILocation(line: 133, column: 3, scope: !8589)
!8644 = !DILocation(line: 133, column: 14, scope: !8589)
!8645 = !DILocation(line: 133, column: 17, scope: !8589)
!8646 = !DILocation(line: 134, column: 20, scope: !8589)
!8647 = !DILocation(line: 134, column: 27, scope: !8589)
!8648 = !DILocation(line: 134, column: 30, scope: !8589)
!8649 = !DILocation(line: 134, column: 33, scope: !8589)
!8650 = !DILocation(line: 134, column: 29, scope: !8589)
!8651 = !DILocation(line: 134, column: 39, scope: !8589)
!8652 = !DILocation(line: 134, column: 42, scope: !8589)
!8653 = !DILocation(line: 134, column: 45, scope: !8589)
!8654 = !DILocation(line: 134, column: 41, scope: !8589)
!8655 = !DILocation(line: 134, column: 38, scope: !8589)
!8656 = !DILocation(line: 134, column: 26, scope: !8589)
!8657 = !DILocation(line: 134, column: 25, scope: !8589)
!8658 = !DILocation(line: 134, column: 3, scope: !8589)
!8659 = !DILocation(line: 134, column: 14, scope: !8589)
!8660 = !DILocation(line: 134, column: 19, scope: !8589)
!8661 = !DILocation(line: 135, column: 19, scope: !8589)
!8662 = !DILocation(line: 135, column: 26, scope: !8589)
!8663 = !DILocation(line: 135, column: 29, scope: !8589)
!8664 = !DILocation(line: 135, column: 32, scope: !8589)
!8665 = !DILocation(line: 135, column: 28, scope: !8589)
!8666 = !DILocation(line: 135, column: 37, scope: !8589)
!8667 = !DILocation(line: 135, column: 40, scope: !8589)
!8668 = !DILocation(line: 135, column: 43, scope: !8589)
!8669 = !DILocation(line: 135, column: 39, scope: !8589)
!8670 = !DILocation(line: 135, column: 36, scope: !8589)
!8671 = !DILocation(line: 135, column: 25, scope: !8589)
!8672 = !DILocation(line: 135, column: 24, scope: !8589)
!8673 = !DILocation(line: 135, column: 3, scope: !8589)
!8674 = !DILocation(line: 135, column: 14, scope: !8589)
!8675 = !DILocation(line: 135, column: 18, scope: !8589)
!8676 = !DILocation(line: 136, column: 7, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8589, file: !3130, line: 136, column: 7)
!8678 = !DILocation(line: 136, column: 10, scope: !8677)
!8679 = !DILocation(line: 136, column: 21, scope: !8677)
!8680 = !DILocation(line: 136, column: 7, scope: !8589)
!8681 = !DILocation(line: 137, column: 22, scope: !8677)
!8682 = !DILocation(line: 137, column: 29, scope: !8677)
!8683 = !DILocation(line: 137, column: 32, scope: !8677)
!8684 = !DILocation(line: 137, column: 35, scope: !8677)
!8685 = !DILocation(line: 137, column: 31, scope: !8677)
!8686 = !DILocation(line: 137, column: 41, scope: !8677)
!8687 = !DILocation(line: 137, column: 44, scope: !8677)
!8688 = !DILocation(line: 137, column: 47, scope: !8677)
!8689 = !DILocation(line: 137, column: 43, scope: !8677)
!8690 = !DILocation(line: 137, column: 40, scope: !8677)
!8691 = !DILocation(line: 137, column: 28, scope: !8677)
!8692 = !DILocation(line: 137, column: 27, scope: !8677)
!8693 = !DILocation(line: 137, column: 5, scope: !8677)
!8694 = !DILocation(line: 137, column: 16, scope: !8677)
!8695 = !DILocation(line: 137, column: 21, scope: !8677)
!8696 = !DILocation(line: 138, column: 1, scope: !8589)
!8697 = distinct !DISubprogram(name: "RoundToUnity", scope: !3130, file: !3130, line: 33, type: !8698, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!710, !3111}
!8700 = !DILocalVariable(name: "value", arg: 1, scope: !8697, file: !3130, line: 33, type: !3111)
!8701 = !DILocation(line: 33, column: 64, scope: !8697)
!8702 = !DILocation(line: 35, column: 10, scope: !8697)
!8703 = !DILocation(line: 35, column: 16, scope: !8697)
!8704 = !DILocation(line: 35, column: 31, scope: !8697)
!8705 = !DILocation(line: 35, column: 37, scope: !8697)
!8706 = !DILocation(line: 35, column: 30, scope: !8697)
!8707 = !DILocation(line: 35, column: 52, scope: !8697)
!8708 = !DILocation(line: 35, column: 9, scope: !8697)
!8709 = !DILocation(line: 35, column: 3, scope: !8697)
!8710 = distinct !DISubprogram(name: "Minus", scope: !1, file: !1, line: 1093, type: !8492, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8711 = !DILocalVariable(name: "Sca", arg: 1, scope: !8710, file: !1, line: 1093, type: !3111)
!8712 = !DILocation(line: 1093, column: 57, scope: !8710)
!8713 = !DILocalVariable(name: "Sa", arg: 2, scope: !8710, file: !1, line: 1094, type: !3111)
!8714 = !DILocation(line: 1094, column: 24, scope: !8710)
!8715 = !DILocalVariable(name: "Dca", arg: 3, scope: !8710, file: !1, line: 1094, type: !3111)
!8716 = !DILocation(line: 1094, column: 48, scope: !8710)
!8717 = !DILocalVariable(name: "Da", arg: 4, scope: !8710, file: !1, line: 1095, type: !3111)
!8718 = !DILocation(line: 1095, column: 24, scope: !8710)
!8719 = !DILocation(line: 1105, column: 10, scope: !8710)
!8720 = !DILocation(line: 1105, column: 16, scope: !8710)
!8721 = !DILocation(line: 1105, column: 14, scope: !8710)
!8722 = !DILocation(line: 1105, column: 24, scope: !8710)
!8723 = !DILocation(line: 1105, column: 23, scope: !8710)
!8724 = !DILocation(line: 1105, column: 28, scope: !8710)
!8725 = !DILocation(line: 1105, column: 27, scope: !8710)
!8726 = !DILocation(line: 1105, column: 20, scope: !8710)
!8727 = !DILocation(line: 1105, column: 3, scope: !8710)
!8728 = distinct !DISubprogram(name: "ModulusAdd", scope: !1, file: !1, line: 1145, type: !8492, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8729 = !DILocalVariable(name: "p", arg: 1, scope: !8728, file: !1, line: 1145, type: !3111)
!8730 = !DILocation(line: 1145, column: 62, scope: !8728)
!8731 = !DILocalVariable(name: "Sa", arg: 2, scope: !8728, file: !1, line: 1146, type: !3111)
!8732 = !DILocation(line: 1146, column: 24, scope: !8728)
!8733 = !DILocalVariable(name: "q", arg: 3, scope: !8728, file: !1, line: 1146, type: !3111)
!8734 = !DILocation(line: 1146, column: 48, scope: !8728)
!8735 = !DILocalVariable(name: "Da", arg: 4, scope: !8728, file: !1, line: 1146, type: !3111)
!8736 = !DILocation(line: 1146, column: 71, scope: !8728)
!8737 = !DILocalVariable(name: "pixel", scope: !8728, file: !1, line: 1149, type: !710)
!8738 = !DILocation(line: 1149, column: 5, scope: !8728)
!8739 = !DILocation(line: 1151, column: 9, scope: !8728)
!8740 = !DILocation(line: 1151, column: 11, scope: !8728)
!8741 = !DILocation(line: 1151, column: 10, scope: !8728)
!8742 = !DILocation(line: 1151, column: 8, scope: !8728)
!8743 = !DILocation(line: 1152, column: 7, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8728, file: !1, line: 1152, column: 7)
!8745 = !DILocation(line: 1152, column: 13, scope: !8744)
!8746 = !DILocation(line: 1152, column: 7, scope: !8728)
!8747 = !DILocation(line: 1153, column: 10, scope: !8744)
!8748 = !DILocation(line: 1153, column: 5, scope: !8744)
!8749 = !DILocation(line: 1154, column: 10, scope: !8728)
!8750 = !DILocation(line: 1154, column: 16, scope: !8728)
!8751 = !DILocation(line: 1154, column: 15, scope: !8728)
!8752 = !DILocation(line: 1154, column: 19, scope: !8728)
!8753 = !DILocation(line: 1154, column: 18, scope: !8728)
!8754 = !DILocation(line: 1154, column: 22, scope: !8728)
!8755 = !DILocation(line: 1154, column: 24, scope: !8728)
!8756 = !DILocation(line: 1154, column: 23, scope: !8728)
!8757 = !DILocation(line: 1154, column: 32, scope: !8728)
!8758 = !DILocation(line: 1154, column: 31, scope: !8728)
!8759 = !DILocation(line: 1154, column: 26, scope: !8728)
!8760 = !DILocation(line: 1154, column: 21, scope: !8728)
!8761 = !DILocation(line: 1154, column: 36, scope: !8728)
!8762 = !DILocation(line: 1154, column: 38, scope: !8728)
!8763 = !DILocation(line: 1154, column: 37, scope: !8728)
!8764 = !DILocation(line: 1154, column: 46, scope: !8728)
!8765 = !DILocation(line: 1154, column: 45, scope: !8728)
!8766 = !DILocation(line: 1154, column: 40, scope: !8728)
!8767 = !DILocation(line: 1154, column: 35, scope: !8728)
!8768 = !DILocation(line: 1154, column: 9, scope: !8728)
!8769 = !DILocation(line: 1154, column: 3, scope: !8728)
!8770 = distinct !DISubprogram(name: "ModulusSubtract", scope: !1, file: !1, line: 1195, type: !8492, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8771 = !DILocalVariable(name: "p", arg: 1, scope: !8770, file: !1, line: 1195, type: !3111)
!8772 = !DILocation(line: 1195, column: 67, scope: !8770)
!8773 = !DILocalVariable(name: "Sa", arg: 2, scope: !8770, file: !1, line: 1196, type: !3111)
!8774 = !DILocation(line: 1196, column: 24, scope: !8770)
!8775 = !DILocalVariable(name: "q", arg: 3, scope: !8770, file: !1, line: 1196, type: !3111)
!8776 = !DILocation(line: 1196, column: 48, scope: !8770)
!8777 = !DILocalVariable(name: "Da", arg: 4, scope: !8770, file: !1, line: 1196, type: !3111)
!8778 = !DILocation(line: 1196, column: 71, scope: !8770)
!8779 = !DILocalVariable(name: "pixel", scope: !8770, file: !1, line: 1199, type: !710)
!8780 = !DILocation(line: 1199, column: 5, scope: !8770)
!8781 = !DILocation(line: 1201, column: 9, scope: !8770)
!8782 = !DILocation(line: 1201, column: 11, scope: !8770)
!8783 = !DILocation(line: 1201, column: 10, scope: !8770)
!8784 = !DILocation(line: 1201, column: 8, scope: !8770)
!8785 = !DILocation(line: 1202, column: 7, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8770, file: !1, line: 1202, column: 7)
!8787 = !DILocation(line: 1202, column: 13, scope: !8786)
!8788 = !DILocation(line: 1202, column: 7, scope: !8770)
!8789 = !DILocation(line: 1203, column: 10, scope: !8786)
!8790 = !DILocation(line: 1203, column: 5, scope: !8786)
!8791 = !DILocation(line: 1204, column: 10, scope: !8770)
!8792 = !DILocation(line: 1204, column: 16, scope: !8770)
!8793 = !DILocation(line: 1204, column: 15, scope: !8770)
!8794 = !DILocation(line: 1204, column: 19, scope: !8770)
!8795 = !DILocation(line: 1204, column: 18, scope: !8770)
!8796 = !DILocation(line: 1204, column: 22, scope: !8770)
!8797 = !DILocation(line: 1204, column: 24, scope: !8770)
!8798 = !DILocation(line: 1204, column: 23, scope: !8770)
!8799 = !DILocation(line: 1204, column: 32, scope: !8770)
!8800 = !DILocation(line: 1204, column: 31, scope: !8770)
!8801 = !DILocation(line: 1204, column: 26, scope: !8770)
!8802 = !DILocation(line: 1204, column: 21, scope: !8770)
!8803 = !DILocation(line: 1204, column: 36, scope: !8770)
!8804 = !DILocation(line: 1204, column: 38, scope: !8770)
!8805 = !DILocation(line: 1204, column: 37, scope: !8770)
!8806 = !DILocation(line: 1204, column: 46, scope: !8770)
!8807 = !DILocation(line: 1204, column: 45, scope: !8770)
!8808 = !DILocation(line: 1204, column: 40, scope: !8770)
!8809 = !DILocation(line: 1204, column: 35, scope: !8770)
!8810 = !DILocation(line: 1204, column: 9, scope: !8770)
!8811 = !DILocation(line: 1204, column: 3, scope: !8770)
!8812 = distinct !DISubprogram(name: "Difference", scope: !1, file: !1, line: 449, type: !8492, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8813 = !DILocalVariable(name: "p", arg: 1, scope: !8812, file: !1, line: 449, type: !3111)
!8814 = !DILocation(line: 449, column: 62, scope: !8812)
!8815 = !DILocalVariable(name: "Sa", arg: 2, scope: !8812, file: !1, line: 450, type: !3111)
!8816 = !DILocation(line: 450, column: 24, scope: !8812)
!8817 = !DILocalVariable(name: "q", arg: 3, scope: !8812, file: !1, line: 450, type: !3111)
!8818 = !DILocation(line: 450, column: 48, scope: !8812)
!8819 = !DILocalVariable(name: "Da", arg: 4, scope: !8812, file: !1, line: 450, type: !3111)
!8820 = !DILocation(line: 450, column: 71, scope: !8812)
!8821 = !DILocation(line: 453, column: 10, scope: !8812)
!8822 = !DILocation(line: 453, column: 13, scope: !8812)
!8823 = !DILocation(line: 453, column: 12, scope: !8812)
!8824 = !DILocation(line: 453, column: 15, scope: !8812)
!8825 = !DILocation(line: 453, column: 18, scope: !8812)
!8826 = !DILocation(line: 453, column: 17, scope: !8812)
!8827 = !DILocation(line: 453, column: 14, scope: !8812)
!8828 = !DILocation(line: 453, column: 20, scope: !8812)
!8829 = !DILocation(line: 453, column: 23, scope: !8812)
!8830 = !DILocation(line: 453, column: 22, scope: !8812)
!8831 = !DILocation(line: 453, column: 25, scope: !8812)
!8832 = !DILocation(line: 453, column: 40, scope: !8812)
!8833 = !DILocation(line: 453, column: 42, scope: !8812)
!8834 = !DILocation(line: 453, column: 30, scope: !8812)
!8835 = !DILocation(line: 453, column: 29, scope: !8812)
!8836 = !DILocation(line: 453, column: 19, scope: !8812)
!8837 = !DILocation(line: 453, column: 9, scope: !8812)
!8838 = !DILocation(line: 453, column: 3, scope: !8812)
!8839 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 142, type: !8840, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!519, !3040, !3040}
!8842 = !DILocalVariable(name: "x", arg: 1, scope: !8839, file: !1, line: 142, type: !3040)
!8843 = !DILocation(line: 142, column: 45, scope: !8839)
!8844 = !DILocalVariable(name: "y", arg: 2, scope: !8839, file: !1, line: 142, type: !3040)
!8845 = !DILocation(line: 142, column: 60, scope: !8839)
!8846 = !DILocation(line: 144, column: 7, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8839, file: !1, line: 144, column: 7)
!8848 = !DILocation(line: 144, column: 11, scope: !8847)
!8849 = !DILocation(line: 144, column: 9, scope: !8847)
!8850 = !DILocation(line: 144, column: 7, scope: !8839)
!8851 = !DILocation(line: 145, column: 12, scope: !8847)
!8852 = !DILocation(line: 145, column: 5, scope: !8847)
!8853 = !DILocation(line: 146, column: 10, scope: !8839)
!8854 = !DILocation(line: 146, column: 3, scope: !8839)
!8855 = !DILocation(line: 147, column: 1, scope: !8839)
!8856 = distinct !DISubprogram(name: "Exclusion", scope: !1, file: !1, line: 557, type: !8492, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8857 = !DILocalVariable(name: "Sca", arg: 1, scope: !8856, file: !1, line: 557, type: !3111)
!8858 = !DILocation(line: 557, column: 54, scope: !8856)
!8859 = !DILocalVariable(name: "Sa", arg: 2, scope: !8856, file: !1, line: 558, type: !3111)
!8860 = !DILocation(line: 558, column: 24, scope: !8856)
!8861 = !DILocalVariable(name: "Dca", arg: 3, scope: !8856, file: !1, line: 558, type: !3111)
!8862 = !DILocation(line: 558, column: 48, scope: !8856)
!8863 = !DILocalVariable(name: "Da", arg: 4, scope: !8856, file: !1, line: 558, type: !3111)
!8864 = !DILocation(line: 558, column: 73, scope: !8856)
!8865 = !DILocation(line: 560, column: 10, scope: !8856)
!8866 = !DILocation(line: 560, column: 14, scope: !8856)
!8867 = !DILocation(line: 560, column: 13, scope: !8856)
!8868 = !DILocation(line: 560, column: 17, scope: !8856)
!8869 = !DILocation(line: 560, column: 21, scope: !8856)
!8870 = !DILocation(line: 560, column: 20, scope: !8856)
!8871 = !DILocation(line: 560, column: 16, scope: !8856)
!8872 = !DILocation(line: 560, column: 28, scope: !8856)
!8873 = !DILocation(line: 560, column: 27, scope: !8856)
!8874 = !DILocation(line: 560, column: 32, scope: !8856)
!8875 = !DILocation(line: 560, column: 31, scope: !8856)
!8876 = !DILocation(line: 560, column: 23, scope: !8856)
!8877 = !DILocation(line: 560, column: 36, scope: !8856)
!8878 = !DILocation(line: 560, column: 45, scope: !8856)
!8879 = !DILocation(line: 560, column: 44, scope: !8856)
!8880 = !DILocation(line: 560, column: 39, scope: !8856)
!8881 = !DILocation(line: 560, column: 35, scope: !8856)
!8882 = !DILocation(line: 560, column: 49, scope: !8856)
!8883 = !DILocation(line: 560, column: 58, scope: !8856)
!8884 = !DILocation(line: 560, column: 57, scope: !8856)
!8885 = !DILocation(line: 560, column: 52, scope: !8856)
!8886 = !DILocation(line: 560, column: 48, scope: !8856)
!8887 = !DILocation(line: 560, column: 9, scope: !8856)
!8888 = !DILocation(line: 560, column: 3, scope: !8856)
!8889 = distinct !DISubprogram(name: "Multiply", scope: !1, file: !1, line: 1245, type: !8492, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8890 = !DILocalVariable(name: "Sca", arg: 1, scope: !8889, file: !1, line: 1245, type: !3111)
!8891 = !DILocation(line: 1245, column: 61, scope: !8889)
!8892 = !DILocalVariable(name: "Sa", arg: 2, scope: !8889, file: !1, line: 1246, type: !3111)
!8893 = !DILocation(line: 1246, column: 24, scope: !8889)
!8894 = !DILocalVariable(name: "Dca", arg: 3, scope: !8889, file: !1, line: 1246, type: !3111)
!8895 = !DILocation(line: 1246, column: 48, scope: !8889)
!8896 = !DILocalVariable(name: "Da", arg: 4, scope: !8889, file: !1, line: 1246, type: !3111)
!8897 = !DILocation(line: 1246, column: 73, scope: !8889)
!8898 = !DILocation(line: 1248, column: 10, scope: !8889)
!8899 = !DILocation(line: 1248, column: 14, scope: !8889)
!8900 = !DILocation(line: 1248, column: 13, scope: !8889)
!8901 = !DILocation(line: 1248, column: 18, scope: !8889)
!8902 = !DILocation(line: 1248, column: 27, scope: !8889)
!8903 = !DILocation(line: 1248, column: 26, scope: !8889)
!8904 = !DILocation(line: 1248, column: 21, scope: !8889)
!8905 = !DILocation(line: 1248, column: 17, scope: !8889)
!8906 = !DILocation(line: 1248, column: 31, scope: !8889)
!8907 = !DILocation(line: 1248, column: 40, scope: !8889)
!8908 = !DILocation(line: 1248, column: 39, scope: !8889)
!8909 = !DILocation(line: 1248, column: 34, scope: !8889)
!8910 = !DILocation(line: 1248, column: 30, scope: !8889)
!8911 = !DILocation(line: 1248, column: 9, scope: !8889)
!8912 = !DILocation(line: 1248, column: 3, scope: !8889)
!8913 = distinct !DISubprogram(name: "Screen", scope: !1, file: !1, line: 1404, type: !8914, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!710, !3111, !3111}
!8916 = !DILocalVariable(name: "Sca", arg: 1, scope: !8913, file: !1, line: 1404, type: !3111)
!8917 = !DILocation(line: 1404, column: 58, scope: !8913)
!8918 = !DILocalVariable(name: "Dca", arg: 2, scope: !8913, file: !1, line: 1405, type: !3111)
!8919 = !DILocation(line: 1405, column: 24, scope: !8913)
!8920 = !DILocation(line: 1410, column: 10, scope: !8913)
!8921 = !DILocation(line: 1410, column: 14, scope: !8913)
!8922 = !DILocation(line: 1410, column: 13, scope: !8913)
!8923 = !DILocation(line: 1410, column: 18, scope: !8913)
!8924 = !DILocation(line: 1410, column: 22, scope: !8913)
!8925 = !DILocation(line: 1410, column: 21, scope: !8913)
!8926 = !DILocation(line: 1410, column: 17, scope: !8913)
!8927 = !DILocation(line: 1410, column: 3, scope: !8913)
!8928 = distinct !DISubprogram(name: "Divide", scope: !1, file: !1, line: 494, type: !8492, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8929 = !DILocalVariable(name: "Sca", arg: 1, scope: !8928, file: !1, line: 494, type: !3111)
!8930 = !DILocation(line: 494, column: 51, scope: !8928)
!8931 = !DILocalVariable(name: "Sa", arg: 2, scope: !8928, file: !1, line: 494, type: !3111)
!8932 = !DILocation(line: 494, column: 76, scope: !8928)
!8933 = !DILocalVariable(name: "Dca", arg: 3, scope: !8928, file: !1, line: 495, type: !3111)
!8934 = !DILocation(line: 495, column: 24, scope: !8928)
!8935 = !DILocalVariable(name: "Da", arg: 4, scope: !8928, file: !1, line: 495, type: !3111)
!8936 = !DILocation(line: 495, column: 49, scope: !8928)
!8937 = !DILocation(line: 507, column: 13, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 507, column: 7)
!8939 = !DILocation(line: 507, column: 8, scope: !8938)
!8940 = !DILocation(line: 507, column: 18, scope: !8938)
!8941 = !DILocation(line: 507, column: 35, scope: !8938)
!8942 = !DILocation(line: 507, column: 44, scope: !8938)
!8943 = !DILocation(line: 507, column: 39, scope: !8938)
!8944 = !DILocation(line: 507, column: 49, scope: !8938)
!8945 = !DILocation(line: 507, column: 7, scope: !8928)
!8946 = !DILocation(line: 508, column: 12, scope: !8938)
!8947 = !DILocation(line: 508, column: 21, scope: !8938)
!8948 = !DILocation(line: 508, column: 20, scope: !8938)
!8949 = !DILocation(line: 508, column: 15, scope: !8938)
!8950 = !DILocation(line: 508, column: 25, scope: !8938)
!8951 = !DILocation(line: 508, column: 34, scope: !8938)
!8952 = !DILocation(line: 508, column: 33, scope: !8938)
!8953 = !DILocation(line: 508, column: 28, scope: !8938)
!8954 = !DILocation(line: 508, column: 24, scope: !8938)
!8955 = !DILocation(line: 508, column: 11, scope: !8938)
!8956 = !DILocation(line: 508, column: 5, scope: !8938)
!8957 = !DILocation(line: 509, column: 12, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 509, column: 7)
!8959 = !DILocation(line: 509, column: 7, scope: !8958)
!8960 = !DILocation(line: 509, column: 17, scope: !8958)
!8961 = !DILocation(line: 509, column: 7, scope: !8928)
!8962 = !DILocation(line: 510, column: 12, scope: !8958)
!8963 = !DILocation(line: 510, column: 15, scope: !8958)
!8964 = !DILocation(line: 510, column: 14, scope: !8958)
!8965 = !DILocation(line: 510, column: 18, scope: !8958)
!8966 = !DILocation(line: 510, column: 27, scope: !8958)
!8967 = !DILocation(line: 510, column: 26, scope: !8958)
!8968 = !DILocation(line: 510, column: 21, scope: !8958)
!8969 = !DILocation(line: 510, column: 17, scope: !8958)
!8970 = !DILocation(line: 510, column: 31, scope: !8958)
!8971 = !DILocation(line: 510, column: 40, scope: !8958)
!8972 = !DILocation(line: 510, column: 39, scope: !8958)
!8973 = !DILocation(line: 510, column: 34, scope: !8958)
!8974 = !DILocation(line: 510, column: 30, scope: !8958)
!8975 = !DILocation(line: 510, column: 11, scope: !8958)
!8976 = !DILocation(line: 510, column: 5, scope: !8958)
!8977 = !DILocation(line: 511, column: 10, scope: !8928)
!8978 = !DILocation(line: 511, column: 14, scope: !8928)
!8979 = !DILocation(line: 511, column: 13, scope: !8928)
!8980 = !DILocation(line: 511, column: 17, scope: !8928)
!8981 = !DILocation(line: 511, column: 16, scope: !8928)
!8982 = !DILocation(line: 511, column: 20, scope: !8928)
!8983 = !DILocation(line: 511, column: 19, scope: !8928)
!8984 = !DILocation(line: 511, column: 24, scope: !8928)
!8985 = !DILocation(line: 511, column: 33, scope: !8928)
!8986 = !DILocation(line: 511, column: 32, scope: !8928)
!8987 = !DILocation(line: 511, column: 27, scope: !8928)
!8988 = !DILocation(line: 511, column: 23, scope: !8928)
!8989 = !DILocation(line: 511, column: 37, scope: !8928)
!8990 = !DILocation(line: 511, column: 46, scope: !8928)
!8991 = !DILocation(line: 511, column: 45, scope: !8928)
!8992 = !DILocation(line: 511, column: 40, scope: !8928)
!8993 = !DILocation(line: 511, column: 36, scope: !8928)
!8994 = !DILocation(line: 511, column: 9, scope: !8928)
!8995 = !DILocation(line: 511, column: 3, scope: !8928)
!8996 = !DILocation(line: 512, column: 1, scope: !8928)
!8997 = distinct !DISubprogram(name: "Darken", scope: !1, file: !1, line: 368, type: !8492, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!8998 = !DILocalVariable(name: "p", arg: 1, scope: !8997, file: !1, line: 368, type: !3111)
!8999 = !DILocation(line: 368, column: 58, scope: !8997)
!9000 = !DILocalVariable(name: "alpha", arg: 2, scope: !8997, file: !1, line: 369, type: !3111)
!9001 = !DILocation(line: 369, column: 24, scope: !8997)
!9002 = !DILocalVariable(name: "q", arg: 3, scope: !8997, file: !1, line: 369, type: !3111)
!9003 = !DILocation(line: 369, column: 51, scope: !8997)
!9004 = !DILocalVariable(name: "beta", arg: 4, scope: !8997, file: !1, line: 369, type: !3111)
!9005 = !DILocation(line: 369, column: 74, scope: !8997)
!9006 = !DILocation(line: 371, column: 7, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8997, file: !1, line: 371, column: 7)
!9008 = !DILocation(line: 371, column: 11, scope: !9007)
!9009 = !DILocation(line: 371, column: 9, scope: !9007)
!9010 = !DILocation(line: 371, column: 7, scope: !8997)
!9011 = !DILocation(line: 372, column: 24, scope: !9007)
!9012 = !DILocation(line: 372, column: 26, scope: !9007)
!9013 = !DILocation(line: 372, column: 32, scope: !9007)
!9014 = !DILocation(line: 372, column: 34, scope: !9007)
!9015 = !DILocation(line: 372, column: 12, scope: !9007)
!9016 = !DILocation(line: 372, column: 5, scope: !9007)
!9017 = !DILocation(line: 373, column: 22, scope: !8997)
!9018 = !DILocation(line: 373, column: 24, scope: !8997)
!9019 = !DILocation(line: 373, column: 29, scope: !8997)
!9020 = !DILocation(line: 373, column: 31, scope: !8997)
!9021 = !DILocation(line: 373, column: 10, scope: !8997)
!9022 = !DILocation(line: 373, column: 3, scope: !8997)
!9023 = !DILocation(line: 374, column: 1, scope: !8997)
!9024 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 148, type: !8840, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9025 = !DILocalVariable(name: "x", arg: 1, scope: !9024, file: !1, line: 148, type: !3040)
!9026 = !DILocation(line: 148, column: 45, scope: !9024)
!9027 = !DILocalVariable(name: "y", arg: 2, scope: !9024, file: !1, line: 148, type: !3040)
!9028 = !DILocation(line: 148, column: 60, scope: !9024)
!9029 = !DILocation(line: 150, column: 7, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9024, file: !1, line: 150, column: 7)
!9031 = !DILocation(line: 150, column: 11, scope: !9030)
!9032 = !DILocation(line: 150, column: 9, scope: !9030)
!9033 = !DILocation(line: 150, column: 7, scope: !9024)
!9034 = !DILocation(line: 151, column: 12, scope: !9030)
!9035 = !DILocation(line: 151, column: 5, scope: !9030)
!9036 = !DILocation(line: 152, column: 10, scope: !9024)
!9037 = !DILocation(line: 152, column: 3, scope: !9024)
!9038 = !DILocation(line: 153, column: 1, scope: !9024)
!9039 = distinct !DISubprogram(name: "Lighten", scope: !1, file: !1, line: 791, type: !8492, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9040 = !DILocalVariable(name: "p", arg: 1, scope: !9039, file: !1, line: 791, type: !3111)
!9041 = !DILocation(line: 791, column: 59, scope: !9039)
!9042 = !DILocalVariable(name: "alpha", arg: 2, scope: !9039, file: !1, line: 792, type: !3111)
!9043 = !DILocation(line: 792, column: 24, scope: !9039)
!9044 = !DILocalVariable(name: "q", arg: 3, scope: !9039, file: !1, line: 792, type: !3111)
!9045 = !DILocation(line: 792, column: 51, scope: !9039)
!9046 = !DILocalVariable(name: "beta", arg: 4, scope: !9039, file: !1, line: 792, type: !3111)
!9047 = !DILocation(line: 792, column: 74, scope: !9039)
!9048 = !DILocation(line: 794, column: 8, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9039, file: !1, line: 794, column: 8)
!9050 = !DILocation(line: 794, column: 12, scope: !9049)
!9051 = !DILocation(line: 794, column: 10, scope: !9049)
!9052 = !DILocation(line: 794, column: 8, scope: !9039)
!9053 = !DILocation(line: 795, column: 25, scope: !9049)
!9054 = !DILocation(line: 795, column: 27, scope: !9049)
!9055 = !DILocation(line: 795, column: 33, scope: !9049)
!9056 = !DILocation(line: 795, column: 35, scope: !9049)
!9057 = !DILocation(line: 795, column: 13, scope: !9049)
!9058 = !DILocation(line: 795, column: 6, scope: !9049)
!9059 = !DILocation(line: 796, column: 23, scope: !9039)
!9060 = !DILocation(line: 796, column: 25, scope: !9039)
!9061 = !DILocation(line: 796, column: 30, scope: !9039)
!9062 = !DILocation(line: 796, column: 32, scope: !9039)
!9063 = !DILocation(line: 796, column: 11, scope: !9039)
!9064 = !DILocation(line: 796, column: 4, scope: !9039)
!9065 = !DILocation(line: 797, column: 1, scope: !9039)
!9066 = distinct !DISubprogram(name: "MagickPixelIntensity", scope: !7652, file: !7652, line: 87, type: !9067, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!710, !3051}
!9069 = !DILocalVariable(name: "pixel", arg: 1, scope: !9066, file: !7652, line: 88, type: !3051)
!9070 = !DILocation(line: 88, column: 28, scope: !9066)
!9071 = !DILocation(line: 90, column: 7, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9066, file: !7652, line: 90, column: 7)
!9073 = !DILocation(line: 90, column: 14, scope: !9072)
!9074 = !DILocation(line: 90, column: 25, scope: !9072)
!9075 = !DILocation(line: 90, column: 7, scope: !9066)
!9076 = !DILocation(line: 91, column: 12, scope: !9072)
!9077 = !DILocation(line: 91, column: 19, scope: !9072)
!9078 = !DILocation(line: 91, column: 5, scope: !9072)
!9079 = !DILocation(line: 92, column: 19, scope: !9066)
!9080 = !DILocation(line: 92, column: 26, scope: !9066)
!9081 = !DILocation(line: 92, column: 18, scope: !9066)
!9082 = !DILocation(line: 92, column: 39, scope: !9066)
!9083 = !DILocation(line: 92, column: 46, scope: !9066)
!9084 = !DILocation(line: 92, column: 38, scope: !9066)
!9085 = !DILocation(line: 92, column: 29, scope: !9066)
!9086 = !DILocation(line: 92, column: 61, scope: !9066)
!9087 = !DILocation(line: 92, column: 68, scope: !9066)
!9088 = !DILocation(line: 92, column: 60, scope: !9066)
!9089 = !DILocation(line: 92, column: 51, scope: !9066)
!9090 = !DILocation(line: 92, column: 9, scope: !9066)
!9091 = !DILocation(line: 92, column: 3, scope: !9066)
!9092 = !DILocation(line: 93, column: 1, scope: !9066)
!9093 = distinct !DISubprogram(name: "Mathematics", scope: !1, file: !1, line: 984, type: !9094, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9094 = !DISubroutineType(types: !9095)
!9095 = !{!710, !3111, !3111, !3111, !3111, !5930}
!9096 = !DILocalVariable(name: "Sca", arg: 1, scope: !9093, file: !1, line: 984, type: !3111)
!9097 = !DILocation(line: 984, column: 63, scope: !9093)
!9098 = !DILocalVariable(name: "Sa", arg: 2, scope: !9093, file: !1, line: 985, type: !3111)
!9099 = !DILocation(line: 985, column: 24, scope: !9093)
!9100 = !DILocalVariable(name: "Dca", arg: 3, scope: !9093, file: !1, line: 985, type: !3111)
!9101 = !DILocation(line: 985, column: 48, scope: !9093)
!9102 = !DILocalVariable(name: "Da", arg: 4, scope: !9093, file: !1, line: 985, type: !3111)
!9103 = !DILocation(line: 985, column: 73, scope: !9093)
!9104 = !DILocalVariable(name: "geometry_info", arg: 5, scope: !9093, file: !1, line: 986, type: !5930)
!9105 = !DILocation(line: 986, column: 23, scope: !9093)
!9106 = !DILocation(line: 1006, column: 10, scope: !9093)
!9107 = !DILocation(line: 1006, column: 25, scope: !9093)
!9108 = !DILocation(line: 1006, column: 29, scope: !9093)
!9109 = !DILocation(line: 1006, column: 28, scope: !9093)
!9110 = !DILocation(line: 1006, column: 33, scope: !9093)
!9111 = !DILocation(line: 1006, column: 32, scope: !9093)
!9112 = !DILocation(line: 1006, column: 37, scope: !9093)
!9113 = !DILocation(line: 1006, column: 52, scope: !9093)
!9114 = !DILocation(line: 1006, column: 58, scope: !9093)
!9115 = !DILocation(line: 1006, column: 57, scope: !9093)
!9116 = !DILocation(line: 1006, column: 62, scope: !9093)
!9117 = !DILocation(line: 1006, column: 61, scope: !9093)
!9118 = !DILocation(line: 1006, column: 36, scope: !9093)
!9119 = !DILocation(line: 1007, column: 5, scope: !9093)
!9120 = !DILocation(line: 1007, column: 20, scope: !9093)
!9121 = !DILocation(line: 1007, column: 23, scope: !9093)
!9122 = !DILocation(line: 1007, column: 22, scope: !9093)
!9123 = !DILocation(line: 1007, column: 27, scope: !9093)
!9124 = !DILocation(line: 1007, column: 26, scope: !9093)
!9125 = !DILocation(line: 1006, column: 64, scope: !9093)
!9126 = !DILocation(line: 1007, column: 30, scope: !9093)
!9127 = !DILocation(line: 1007, column: 45, scope: !9093)
!9128 = !DILocation(line: 1007, column: 49, scope: !9093)
!9129 = !DILocation(line: 1007, column: 48, scope: !9093)
!9130 = !DILocation(line: 1007, column: 52, scope: !9093)
!9131 = !DILocation(line: 1007, column: 51, scope: !9093)
!9132 = !DILocation(line: 1007, column: 29, scope: !9093)
!9133 = !DILocation(line: 1007, column: 55, scope: !9093)
!9134 = !DILocation(line: 1007, column: 64, scope: !9093)
!9135 = !DILocation(line: 1007, column: 63, scope: !9093)
!9136 = !DILocation(line: 1007, column: 58, scope: !9093)
!9137 = !DILocation(line: 1007, column: 54, scope: !9093)
!9138 = !DILocation(line: 1008, column: 5, scope: !9093)
!9139 = !DILocation(line: 1008, column: 14, scope: !9093)
!9140 = !DILocation(line: 1008, column: 13, scope: !9093)
!9141 = !DILocation(line: 1008, column: 8, scope: !9093)
!9142 = !DILocation(line: 1007, column: 67, scope: !9093)
!9143 = !DILocation(line: 1006, column: 9, scope: !9093)
!9144 = !DILocation(line: 1006, column: 3, scope: !9093)
!9145 = distinct !DISubprogram(name: "ColorDodge", scope: !1, file: !1, line: 307, type: !8492, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9146 = !DILocalVariable(name: "Sca", arg: 1, scope: !9145, file: !1, line: 307, type: !3111)
!9147 = !DILocation(line: 307, column: 55, scope: !9145)
!9148 = !DILocalVariable(name: "Sa", arg: 2, scope: !9145, file: !1, line: 308, type: !3111)
!9149 = !DILocation(line: 308, column: 24, scope: !9145)
!9150 = !DILocalVariable(name: "Dca", arg: 3, scope: !9145, file: !1, line: 308, type: !3111)
!9151 = !DILocation(line: 308, column: 48, scope: !9145)
!9152 = !DILocalVariable(name: "Da", arg: 4, scope: !9145, file: !1, line: 308, type: !3111)
!9153 = !DILocation(line: 308, column: 73, scope: !9145)
!9154 = !DILocation(line: 313, column: 8, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9145, file: !1, line: 313, column: 7)
!9156 = !DILocation(line: 313, column: 12, scope: !9155)
!9157 = !DILocation(line: 313, column: 11, scope: !9155)
!9158 = !DILocation(line: 313, column: 15, scope: !9155)
!9159 = !DILocation(line: 313, column: 19, scope: !9155)
!9160 = !DILocation(line: 313, column: 18, scope: !9155)
!9161 = !DILocation(line: 313, column: 14, scope: !9155)
!9162 = !DILocation(line: 313, column: 26, scope: !9155)
!9163 = !DILocation(line: 313, column: 29, scope: !9155)
!9164 = !DILocation(line: 313, column: 28, scope: !9155)
!9165 = !DILocation(line: 313, column: 23, scope: !9155)
!9166 = !DILocation(line: 313, column: 7, scope: !9145)
!9167 = !DILocation(line: 314, column: 12, scope: !9155)
!9168 = !DILocation(line: 314, column: 15, scope: !9155)
!9169 = !DILocation(line: 314, column: 14, scope: !9155)
!9170 = !DILocation(line: 314, column: 18, scope: !9155)
!9171 = !DILocation(line: 314, column: 27, scope: !9155)
!9172 = !DILocation(line: 314, column: 26, scope: !9155)
!9173 = !DILocation(line: 314, column: 21, scope: !9155)
!9174 = !DILocation(line: 314, column: 17, scope: !9155)
!9175 = !DILocation(line: 314, column: 31, scope: !9155)
!9176 = !DILocation(line: 314, column: 40, scope: !9155)
!9177 = !DILocation(line: 314, column: 39, scope: !9155)
!9178 = !DILocation(line: 314, column: 34, scope: !9155)
!9179 = !DILocation(line: 314, column: 30, scope: !9155)
!9180 = !DILocation(line: 314, column: 11, scope: !9155)
!9181 = !DILocation(line: 314, column: 5, scope: !9155)
!9182 = !DILocation(line: 315, column: 10, scope: !9145)
!9183 = !DILocation(line: 315, column: 14, scope: !9145)
!9184 = !DILocation(line: 315, column: 13, scope: !9145)
!9185 = !DILocation(line: 315, column: 17, scope: !9145)
!9186 = !DILocation(line: 315, column: 16, scope: !9145)
!9187 = !DILocation(line: 315, column: 21, scope: !9145)
!9188 = !DILocation(line: 315, column: 24, scope: !9145)
!9189 = !DILocation(line: 315, column: 23, scope: !9145)
!9190 = !DILocation(line: 315, column: 19, scope: !9145)
!9191 = !DILocation(line: 315, column: 29, scope: !9145)
!9192 = !DILocation(line: 315, column: 38, scope: !9145)
!9193 = !DILocation(line: 315, column: 37, scope: !9145)
!9194 = !DILocation(line: 315, column: 32, scope: !9145)
!9195 = !DILocation(line: 315, column: 28, scope: !9145)
!9196 = !DILocation(line: 315, column: 42, scope: !9145)
!9197 = !DILocation(line: 315, column: 51, scope: !9145)
!9198 = !DILocation(line: 315, column: 50, scope: !9145)
!9199 = !DILocation(line: 315, column: 45, scope: !9145)
!9200 = !DILocation(line: 315, column: 41, scope: !9145)
!9201 = !DILocation(line: 315, column: 9, scope: !9145)
!9202 = !DILocation(line: 315, column: 3, scope: !9145)
!9203 = !DILocation(line: 342, column: 1, scope: !9145)
!9204 = distinct !DISubprogram(name: "ColorBurn", scope: !1, file: !1, line: 260, type: !8492, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9205 = !DILocalVariable(name: "Sca", arg: 1, scope: !9204, file: !1, line: 260, type: !3111)
!9206 = !DILocation(line: 260, column: 54, scope: !9204)
!9207 = !DILocalVariable(name: "Sa", arg: 2, scope: !9204, file: !1, line: 261, type: !3111)
!9208 = !DILocation(line: 261, column: 24, scope: !9204)
!9209 = !DILocalVariable(name: "Dca", arg: 3, scope: !9204, file: !1, line: 261, type: !3111)
!9210 = !DILocation(line: 261, column: 48, scope: !9204)
!9211 = !DILocalVariable(name: "Da", arg: 4, scope: !9204, file: !1, line: 261, type: !3111)
!9212 = !DILocation(line: 261, column: 73, scope: !9204)
!9213 = !DILocation(line: 274, column: 13, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9204, file: !1, line: 274, column: 7)
!9215 = !DILocation(line: 274, column: 8, scope: !9214)
!9216 = !DILocation(line: 274, column: 18, scope: !9214)
!9217 = !DILocation(line: 274, column: 35, scope: !9214)
!9218 = !DILocation(line: 274, column: 44, scope: !9214)
!9219 = !DILocation(line: 274, column: 48, scope: !9214)
!9220 = !DILocation(line: 274, column: 47, scope: !9214)
!9221 = !DILocation(line: 274, column: 39, scope: !9214)
!9222 = !DILocation(line: 274, column: 52, scope: !9214)
!9223 = !DILocation(line: 274, column: 7, scope: !9204)
!9224 = !DILocation(line: 275, column: 12, scope: !9214)
!9225 = !DILocation(line: 275, column: 15, scope: !9214)
!9226 = !DILocation(line: 275, column: 14, scope: !9214)
!9227 = !DILocation(line: 275, column: 18, scope: !9214)
!9228 = !DILocation(line: 275, column: 27, scope: !9214)
!9229 = !DILocation(line: 275, column: 26, scope: !9214)
!9230 = !DILocation(line: 275, column: 21, scope: !9214)
!9231 = !DILocation(line: 275, column: 17, scope: !9214)
!9232 = !DILocation(line: 275, column: 11, scope: !9214)
!9233 = !DILocation(line: 275, column: 5, scope: !9214)
!9234 = !DILocation(line: 276, column: 7, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9204, file: !1, line: 276, column: 7)
!9236 = !DILocation(line: 276, column: 11, scope: !9235)
!9237 = !DILocation(line: 276, column: 7, scope: !9204)
!9238 = !DILocation(line: 277, column: 12, scope: !9235)
!9239 = !DILocation(line: 277, column: 21, scope: !9235)
!9240 = !DILocation(line: 277, column: 20, scope: !9235)
!9241 = !DILocation(line: 277, column: 15, scope: !9235)
!9242 = !DILocation(line: 277, column: 11, scope: !9235)
!9243 = !DILocation(line: 277, column: 5, scope: !9235)
!9244 = !DILocation(line: 278, column: 10, scope: !9204)
!9245 = !DILocation(line: 278, column: 13, scope: !9204)
!9246 = !DILocation(line: 278, column: 12, scope: !9204)
!9247 = !DILocation(line: 278, column: 16, scope: !9204)
!9248 = !DILocation(line: 278, column: 29, scope: !9204)
!9249 = !DILocation(line: 278, column: 33, scope: !9204)
!9250 = !DILocation(line: 278, column: 36, scope: !9204)
!9251 = !DILocation(line: 278, column: 35, scope: !9204)
!9252 = !DILocation(line: 278, column: 41, scope: !9204)
!9253 = !DILocation(line: 278, column: 40, scope: !9204)
!9254 = !DILocation(line: 278, column: 44, scope: !9204)
!9255 = !DILocation(line: 278, column: 43, scope: !9204)
!9256 = !DILocation(line: 278, column: 32, scope: !9204)
!9257 = !DILocation(line: 278, column: 19, scope: !9204)
!9258 = !DILocation(line: 278, column: 18, scope: !9204)
!9259 = !DILocation(line: 278, column: 15, scope: !9204)
!9260 = !DILocation(line: 278, column: 49, scope: !9204)
!9261 = !DILocation(line: 278, column: 58, scope: !9204)
!9262 = !DILocation(line: 278, column: 57, scope: !9204)
!9263 = !DILocation(line: 278, column: 52, scope: !9204)
!9264 = !DILocation(line: 278, column: 48, scope: !9204)
!9265 = !DILocation(line: 278, column: 62, scope: !9204)
!9266 = !DILocation(line: 278, column: 71, scope: !9204)
!9267 = !DILocation(line: 278, column: 70, scope: !9204)
!9268 = !DILocation(line: 278, column: 65, scope: !9204)
!9269 = !DILocation(line: 278, column: 61, scope: !9204)
!9270 = !DILocation(line: 278, column: 9, scope: !9204)
!9271 = !DILocation(line: 278, column: 3, scope: !9204)
!9272 = !DILocation(line: 280, column: 1, scope: !9204)
!9273 = distinct !DISubprogram(name: "LinearBurn", scope: !1, file: !1, line: 905, type: !8492, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9274 = !DILocalVariable(name: "Sca", arg: 1, scope: !9273, file: !1, line: 905, type: !3111)
!9275 = !DILocation(line: 905, column: 62, scope: !9273)
!9276 = !DILocalVariable(name: "Sa", arg: 2, scope: !9273, file: !1, line: 906, type: !3111)
!9277 = !DILocation(line: 906, column: 24, scope: !9273)
!9278 = !DILocalVariable(name: "Dca", arg: 3, scope: !9273, file: !1, line: 906, type: !3111)
!9279 = !DILocation(line: 906, column: 48, scope: !9273)
!9280 = !DILocalVariable(name: "Da", arg: 4, scope: !9273, file: !1, line: 906, type: !3111)
!9281 = !DILocation(line: 906, column: 73, scope: !9273)
!9282 = !DILocation(line: 914, column: 10, scope: !9273)
!9283 = !DILocation(line: 914, column: 14, scope: !9273)
!9284 = !DILocation(line: 914, column: 13, scope: !9273)
!9285 = !DILocation(line: 914, column: 18, scope: !9273)
!9286 = !DILocation(line: 914, column: 21, scope: !9273)
!9287 = !DILocation(line: 914, column: 20, scope: !9273)
!9288 = !DILocation(line: 914, column: 17, scope: !9273)
!9289 = !DILocation(line: 914, column: 3, scope: !9273)
!9290 = distinct !DISubprogram(name: "HardLight", scope: !1, file: !1, line: 606, type: !8492, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9291 = !DILocalVariable(name: "Sca", arg: 1, scope: !9290, file: !1, line: 606, type: !3111)
!9292 = !DILocation(line: 606, column: 54, scope: !9290)
!9293 = !DILocalVariable(name: "Sa", arg: 2, scope: !9290, file: !1, line: 607, type: !3111)
!9294 = !DILocation(line: 607, column: 24, scope: !9290)
!9295 = !DILocalVariable(name: "Dca", arg: 3, scope: !9290, file: !1, line: 607, type: !3111)
!9296 = !DILocation(line: 607, column: 48, scope: !9290)
!9297 = !DILocalVariable(name: "Da", arg: 4, scope: !9290, file: !1, line: 607, type: !3111)
!9298 = !DILocation(line: 607, column: 73, scope: !9290)
!9299 = !DILocation(line: 609, column: 12, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9290, file: !1, line: 609, column: 7)
!9301 = !DILocation(line: 609, column: 11, scope: !9300)
!9302 = !DILocation(line: 609, column: 19, scope: !9300)
!9303 = !DILocation(line: 609, column: 17, scope: !9300)
!9304 = !DILocation(line: 609, column: 7, scope: !9290)
!9305 = !DILocation(line: 610, column: 16, scope: !9300)
!9306 = !DILocation(line: 610, column: 15, scope: !9300)
!9307 = !DILocation(line: 610, column: 20, scope: !9300)
!9308 = !DILocation(line: 610, column: 19, scope: !9300)
!9309 = !DILocation(line: 610, column: 24, scope: !9300)
!9310 = !DILocation(line: 610, column: 33, scope: !9300)
!9311 = !DILocation(line: 610, column: 32, scope: !9300)
!9312 = !DILocation(line: 610, column: 27, scope: !9300)
!9313 = !DILocation(line: 610, column: 23, scope: !9300)
!9314 = !DILocation(line: 610, column: 37, scope: !9300)
!9315 = !DILocation(line: 610, column: 46, scope: !9300)
!9316 = !DILocation(line: 610, column: 45, scope: !9300)
!9317 = !DILocation(line: 610, column: 40, scope: !9300)
!9318 = !DILocation(line: 610, column: 36, scope: !9300)
!9319 = !DILocation(line: 610, column: 11, scope: !9300)
!9320 = !DILocation(line: 610, column: 5, scope: !9300)
!9321 = !DILocation(line: 611, column: 10, scope: !9290)
!9322 = !DILocation(line: 611, column: 13, scope: !9290)
!9323 = !DILocation(line: 611, column: 12, scope: !9290)
!9324 = !DILocation(line: 611, column: 21, scope: !9290)
!9325 = !DILocation(line: 611, column: 24, scope: !9290)
!9326 = !DILocation(line: 611, column: 23, scope: !9290)
!9327 = !DILocation(line: 611, column: 20, scope: !9290)
!9328 = !DILocation(line: 611, column: 19, scope: !9290)
!9329 = !DILocation(line: 611, column: 30, scope: !9290)
!9330 = !DILocation(line: 611, column: 33, scope: !9290)
!9331 = !DILocation(line: 611, column: 32, scope: !9290)
!9332 = !DILocation(line: 611, column: 29, scope: !9290)
!9333 = !DILocation(line: 611, column: 28, scope: !9290)
!9334 = !DILocation(line: 611, column: 15, scope: !9290)
!9335 = !DILocation(line: 611, column: 38, scope: !9290)
!9336 = !DILocation(line: 611, column: 47, scope: !9290)
!9337 = !DILocation(line: 611, column: 46, scope: !9290)
!9338 = !DILocation(line: 611, column: 41, scope: !9290)
!9339 = !DILocation(line: 611, column: 37, scope: !9290)
!9340 = !DILocation(line: 611, column: 51, scope: !9290)
!9341 = !DILocation(line: 611, column: 60, scope: !9290)
!9342 = !DILocation(line: 611, column: 59, scope: !9290)
!9343 = !DILocation(line: 611, column: 54, scope: !9290)
!9344 = !DILocation(line: 611, column: 50, scope: !9290)
!9345 = !DILocation(line: 611, column: 9, scope: !9290)
!9346 = !DILocation(line: 611, column: 3, scope: !9290)
!9347 = !DILocation(line: 612, column: 1, scope: !9290)
!9348 = distinct !DISubprogram(name: "SoftLight", scope: !1, file: !1, line: 1456, type: !8492, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9349 = !DILocalVariable(name: "Sca", arg: 1, scope: !9348, file: !1, line: 1456, type: !3111)
!9350 = !DILocation(line: 1456, column: 54, scope: !9348)
!9351 = !DILocalVariable(name: "Sa", arg: 2, scope: !9348, file: !1, line: 1457, type: !3111)
!9352 = !DILocation(line: 1457, column: 24, scope: !9348)
!9353 = !DILocalVariable(name: "Dca", arg: 3, scope: !9348, file: !1, line: 1457, type: !3111)
!9354 = !DILocation(line: 1457, column: 49, scope: !9348)
!9355 = !DILocalVariable(name: "Da", arg: 4, scope: !9348, file: !1, line: 1457, type: !3111)
!9356 = !DILocation(line: 1457, column: 75, scope: !9348)
!9357 = !DILocalVariable(name: "alpha", scope: !9348, file: !1, line: 1473, type: !710)
!9358 = !DILocation(line: 1473, column: 5, scope: !9348)
!9359 = !DILocalVariable(name: "beta", scope: !9348, file: !1, line: 1474, type: !710)
!9360 = !DILocation(line: 1474, column: 5, scope: !9348)
!9361 = !DILocation(line: 1479, column: 9, scope: !9348)
!9362 = !DILocation(line: 1479, column: 13, scope: !9348)
!9363 = !DILocation(line: 1479, column: 12, scope: !9348)
!9364 = !DILocation(line: 1479, column: 8, scope: !9348)
!9365 = !DILocation(line: 1480, column: 12, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9348, file: !1, line: 1480, column: 7)
!9367 = !DILocation(line: 1480, column: 11, scope: !9366)
!9368 = !DILocation(line: 1480, column: 19, scope: !9366)
!9369 = !DILocation(line: 1480, column: 17, scope: !9366)
!9370 = !DILocation(line: 1480, column: 7, scope: !9348)
!9371 = !DILocation(line: 1481, column: 12, scope: !9366)
!9372 = !DILocation(line: 1481, column: 17, scope: !9366)
!9373 = !DILocation(line: 1481, column: 25, scope: !9366)
!9374 = !DILocation(line: 1481, column: 24, scope: !9366)
!9375 = !DILocation(line: 1481, column: 29, scope: !9366)
!9376 = !DILocation(line: 1481, column: 28, scope: !9366)
!9377 = !DILocation(line: 1481, column: 38, scope: !9366)
!9378 = !DILocation(line: 1481, column: 37, scope: !9366)
!9379 = !DILocation(line: 1481, column: 32, scope: !9366)
!9380 = !DILocation(line: 1481, column: 19, scope: !9366)
!9381 = !DILocation(line: 1481, column: 15, scope: !9366)
!9382 = !DILocation(line: 1481, column: 46, scope: !9366)
!9383 = !DILocation(line: 1481, column: 55, scope: !9366)
!9384 = !DILocation(line: 1481, column: 54, scope: !9366)
!9385 = !DILocation(line: 1481, column: 49, scope: !9366)
!9386 = !DILocation(line: 1481, column: 45, scope: !9366)
!9387 = !DILocation(line: 1481, column: 59, scope: !9366)
!9388 = !DILocation(line: 1481, column: 68, scope: !9366)
!9389 = !DILocation(line: 1481, column: 67, scope: !9366)
!9390 = !DILocation(line: 1481, column: 62, scope: !9366)
!9391 = !DILocation(line: 1481, column: 58, scope: !9366)
!9392 = !DILocation(line: 1481, column: 11, scope: !9366)
!9393 = !DILocation(line: 1481, column: 5, scope: !9366)
!9394 = !DILocation(line: 1482, column: 13, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9348, file: !1, line: 1482, column: 7)
!9396 = !DILocation(line: 1482, column: 12, scope: !9395)
!9397 = !DILocation(line: 1482, column: 20, scope: !9395)
!9398 = !DILocation(line: 1482, column: 18, scope: !9395)
!9399 = !DILocation(line: 1482, column: 24, scope: !9395)
!9400 = !DILocation(line: 1482, column: 33, scope: !9395)
!9401 = !DILocation(line: 1482, column: 32, scope: !9395)
!9402 = !DILocation(line: 1482, column: 41, scope: !9395)
!9403 = !DILocation(line: 1482, column: 38, scope: !9395)
!9404 = !DILocation(line: 1482, column: 7, scope: !9348)
!9405 = !DILocation(line: 1484, column: 12, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9395, file: !1, line: 1483, column: 5)
!9407 = !DILocation(line: 1484, column: 16, scope: !9406)
!9408 = !DILocation(line: 1484, column: 15, scope: !9406)
!9409 = !DILocation(line: 1484, column: 19, scope: !9406)
!9410 = !DILocation(line: 1484, column: 27, scope: !9406)
!9411 = !DILocation(line: 1484, column: 26, scope: !9406)
!9412 = !DILocation(line: 1484, column: 31, scope: !9406)
!9413 = !DILocation(line: 1484, column: 30, scope: !9406)
!9414 = !DILocation(line: 1484, column: 21, scope: !9406)
!9415 = !DILocation(line: 1484, column: 40, scope: !9406)
!9416 = !DILocation(line: 1484, column: 39, scope: !9406)
!9417 = !DILocation(line: 1484, column: 51, scope: !9406)
!9418 = !DILocation(line: 1484, column: 50, scope: !9406)
!9419 = !DILocation(line: 1484, column: 56, scope: !9406)
!9420 = !DILocation(line: 1484, column: 45, scope: !9406)
!9421 = !DILocation(line: 1484, column: 63, scope: !9406)
!9422 = !DILocation(line: 1484, column: 68, scope: !9406)
!9423 = !DILocation(line: 1484, column: 61, scope: !9406)
!9424 = !DILocation(line: 1485, column: 9, scope: !9406)
!9425 = !DILocation(line: 1484, column: 77, scope: !9406)
!9426 = !DILocation(line: 1484, column: 73, scope: !9406)
!9427 = !DILocation(line: 1484, column: 34, scope: !9406)
!9428 = !DILocation(line: 1484, column: 18, scope: !9406)
!9429 = !DILocation(line: 1485, column: 16, scope: !9406)
!9430 = !DILocation(line: 1485, column: 25, scope: !9406)
!9431 = !DILocation(line: 1485, column: 24, scope: !9406)
!9432 = !DILocation(line: 1485, column: 19, scope: !9406)
!9433 = !DILocation(line: 1485, column: 15, scope: !9406)
!9434 = !DILocation(line: 1485, column: 29, scope: !9406)
!9435 = !DILocation(line: 1485, column: 38, scope: !9406)
!9436 = !DILocation(line: 1485, column: 37, scope: !9406)
!9437 = !DILocation(line: 1485, column: 32, scope: !9406)
!9438 = !DILocation(line: 1485, column: 28, scope: !9406)
!9439 = !DILocation(line: 1484, column: 11, scope: !9406)
!9440 = !DILocation(line: 1486, column: 14, scope: !9406)
!9441 = !DILocation(line: 1486, column: 7, scope: !9406)
!9442 = !DILocation(line: 1488, column: 8, scope: !9348)
!9443 = !DILocation(line: 1488, column: 12, scope: !9348)
!9444 = !DILocation(line: 1488, column: 11, scope: !9348)
!9445 = !DILocation(line: 1488, column: 15, scope: !9348)
!9446 = !DILocation(line: 1488, column: 23, scope: !9348)
!9447 = !DILocation(line: 1488, column: 22, scope: !9348)
!9448 = !DILocation(line: 1488, column: 27, scope: !9348)
!9449 = !DILocation(line: 1488, column: 26, scope: !9348)
!9450 = !DILocation(line: 1488, column: 17, scope: !9348)
!9451 = !DILocation(line: 1488, column: 36, scope: !9348)
!9452 = !DILocation(line: 1488, column: 32, scope: !9348)
!9453 = !DILocation(line: 1488, column: 47, scope: !9348)
!9454 = !DILocation(line: 1488, column: 46, scope: !9348)
!9455 = !DILocation(line: 1488, column: 30, scope: !9348)
!9456 = !DILocation(line: 1488, column: 14, scope: !9348)
!9457 = !DILocation(line: 1488, column: 54, scope: !9348)
!9458 = !DILocation(line: 1488, column: 63, scope: !9348)
!9459 = !DILocation(line: 1488, column: 62, scope: !9348)
!9460 = !DILocation(line: 1488, column: 57, scope: !9348)
!9461 = !DILocation(line: 1488, column: 53, scope: !9348)
!9462 = !DILocation(line: 1488, column: 67, scope: !9348)
!9463 = !DILocation(line: 1488, column: 76, scope: !9348)
!9464 = !DILocation(line: 1488, column: 75, scope: !9348)
!9465 = !DILocation(line: 1488, column: 70, scope: !9348)
!9466 = !DILocation(line: 1488, column: 66, scope: !9348)
!9467 = !DILocation(line: 1488, column: 7, scope: !9348)
!9468 = !DILocation(line: 1489, column: 10, scope: !9348)
!9469 = !DILocation(line: 1489, column: 3, scope: !9348)
!9470 = !DILocation(line: 1491, column: 1, scope: !9348)
!9471 = distinct !DISubprogram(name: "LinearLight", scope: !1, file: !1, line: 941, type: !8492, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9472 = !DILocalVariable(name: "Sca", arg: 1, scope: !9471, file: !1, line: 941, type: !3111)
!9473 = !DILocation(line: 941, column: 63, scope: !9471)
!9474 = !DILocalVariable(name: "Sa", arg: 2, scope: !9471, file: !1, line: 942, type: !3111)
!9475 = !DILocation(line: 942, column: 24, scope: !9471)
!9476 = !DILocalVariable(name: "Dca", arg: 3, scope: !9471, file: !1, line: 942, type: !3111)
!9477 = !DILocation(line: 942, column: 48, scope: !9471)
!9478 = !DILocalVariable(name: "Da", arg: 4, scope: !9471, file: !1, line: 942, type: !3111)
!9479 = !DILocation(line: 942, column: 73, scope: !9471)
!9480 = !DILocation(line: 956, column: 11, scope: !9471)
!9481 = !DILocation(line: 956, column: 15, scope: !9471)
!9482 = !DILocation(line: 956, column: 14, scope: !9471)
!9483 = !DILocation(line: 956, column: 19, scope: !9471)
!9484 = !DILocation(line: 956, column: 18, scope: !9471)
!9485 = !DILocation(line: 956, column: 22, scope: !9471)
!9486 = !DILocation(line: 956, column: 21, scope: !9471)
!9487 = !DILocation(line: 956, column: 26, scope: !9471)
!9488 = !DILocation(line: 956, column: 25, scope: !9471)
!9489 = !DILocation(line: 956, column: 3, scope: !9471)
!9490 = distinct !DISubprogram(name: "PegtopLight", scope: !1, file: !1, line: 1324, type: !8492, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9491 = !DILocalVariable(name: "Sca", arg: 1, scope: !9490, file: !1, line: 1324, type: !3111)
!9492 = !DILocation(line: 1324, column: 56, scope: !9490)
!9493 = !DILocalVariable(name: "Sa", arg: 2, scope: !9490, file: !1, line: 1325, type: !3111)
!9494 = !DILocation(line: 1325, column: 24, scope: !9490)
!9495 = !DILocalVariable(name: "Dca", arg: 3, scope: !9490, file: !1, line: 1325, type: !3111)
!9496 = !DILocation(line: 1325, column: 48, scope: !9490)
!9497 = !DILocalVariable(name: "Da", arg: 4, scope: !9490, file: !1, line: 1325, type: !3111)
!9498 = !DILocation(line: 1325, column: 73, scope: !9490)
!9499 = !DILocation(line: 1335, column: 12, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9490, file: !1, line: 1335, column: 7)
!9501 = !DILocation(line: 1335, column: 7, scope: !9500)
!9502 = !DILocation(line: 1335, column: 16, scope: !9500)
!9503 = !DILocation(line: 1335, column: 7, scope: !9490)
!9504 = !DILocation(line: 1336, column: 12, scope: !9500)
!9505 = !DILocation(line: 1336, column: 5, scope: !9500)
!9506 = !DILocation(line: 1337, column: 10, scope: !9490)
!9507 = !DILocation(line: 1337, column: 14, scope: !9490)
!9508 = !DILocation(line: 1337, column: 13, scope: !9490)
!9509 = !DILocation(line: 1337, column: 19, scope: !9490)
!9510 = !DILocation(line: 1337, column: 26, scope: !9490)
!9511 = !DILocation(line: 1337, column: 25, scope: !9490)
!9512 = !DILocation(line: 1337, column: 21, scope: !9490)
!9513 = !DILocation(line: 1337, column: 17, scope: !9490)
!9514 = !DILocation(line: 1337, column: 31, scope: !9490)
!9515 = !DILocation(line: 1337, column: 30, scope: !9490)
!9516 = !DILocation(line: 1337, column: 34, scope: !9490)
!9517 = !DILocation(line: 1337, column: 43, scope: !9490)
!9518 = !DILocation(line: 1337, column: 42, scope: !9490)
!9519 = !DILocation(line: 1337, column: 46, scope: !9490)
!9520 = !DILocation(line: 1337, column: 51, scope: !9490)
!9521 = !DILocation(line: 1337, column: 50, scope: !9490)
!9522 = !DILocation(line: 1337, column: 37, scope: !9490)
!9523 = !DILocation(line: 1337, column: 33, scope: !9490)
!9524 = !DILocation(line: 1337, column: 55, scope: !9490)
!9525 = !DILocation(line: 1337, column: 64, scope: !9490)
!9526 = !DILocation(line: 1337, column: 63, scope: !9490)
!9527 = !DILocation(line: 1337, column: 58, scope: !9490)
!9528 = !DILocation(line: 1337, column: 54, scope: !9490)
!9529 = !DILocation(line: 1337, column: 9, scope: !9490)
!9530 = !DILocation(line: 1337, column: 3, scope: !9490)
!9531 = !DILocation(line: 1338, column: 1, scope: !9490)
!9532 = distinct !DISubprogram(name: "VividLight", scope: !1, file: !1, line: 1550, type: !8492, scopeLine: 1552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9533 = !DILocalVariable(name: "Sca", arg: 1, scope: !9532, file: !1, line: 1550, type: !3111)
!9534 = !DILocation(line: 1550, column: 55, scope: !9532)
!9535 = !DILocalVariable(name: "Sa", arg: 2, scope: !9532, file: !1, line: 1551, type: !3111)
!9536 = !DILocation(line: 1551, column: 24, scope: !9532)
!9537 = !DILocalVariable(name: "Dca", arg: 3, scope: !9532, file: !1, line: 1551, type: !3111)
!9538 = !DILocation(line: 1551, column: 49, scope: !9532)
!9539 = !DILocalVariable(name: "Da", arg: 4, scope: !9532, file: !1, line: 1551, type: !3111)
!9540 = !DILocation(line: 1551, column: 75, scope: !9532)
!9541 = !DILocation(line: 1559, column: 13, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9532, file: !1, line: 1559, column: 7)
!9543 = !DILocation(line: 1559, column: 8, scope: !9542)
!9544 = !DILocation(line: 1559, column: 17, scope: !9542)
!9545 = !DILocation(line: 1559, column: 34, scope: !9542)
!9546 = !DILocation(line: 1559, column: 43, scope: !9542)
!9547 = !DILocation(line: 1559, column: 47, scope: !9542)
!9548 = !DILocation(line: 1559, column: 46, scope: !9542)
!9549 = !DILocation(line: 1559, column: 38, scope: !9542)
!9550 = !DILocation(line: 1559, column: 51, scope: !9542)
!9551 = !DILocation(line: 1559, column: 7, scope: !9532)
!9552 = !DILocation(line: 1560, column: 12, scope: !9542)
!9553 = !DILocation(line: 1560, column: 15, scope: !9542)
!9554 = !DILocation(line: 1560, column: 14, scope: !9542)
!9555 = !DILocation(line: 1560, column: 18, scope: !9542)
!9556 = !DILocation(line: 1560, column: 27, scope: !9542)
!9557 = !DILocation(line: 1560, column: 26, scope: !9542)
!9558 = !DILocation(line: 1560, column: 21, scope: !9542)
!9559 = !DILocation(line: 1560, column: 17, scope: !9542)
!9560 = !DILocation(line: 1560, column: 31, scope: !9542)
!9561 = !DILocation(line: 1560, column: 40, scope: !9542)
!9562 = !DILocation(line: 1560, column: 39, scope: !9542)
!9563 = !DILocation(line: 1560, column: 34, scope: !9542)
!9564 = !DILocation(line: 1560, column: 30, scope: !9542)
!9565 = !DILocation(line: 1560, column: 11, scope: !9542)
!9566 = !DILocation(line: 1560, column: 5, scope: !9542)
!9567 = !DILocation(line: 1561, column: 10, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9532, file: !1, line: 1561, column: 7)
!9569 = !DILocation(line: 1561, column: 9, scope: !9568)
!9570 = !DILocation(line: 1561, column: 18, scope: !9568)
!9571 = !DILocation(line: 1561, column: 15, scope: !9568)
!9572 = !DILocation(line: 1561, column: 7, scope: !9532)
!9573 = !DILocation(line: 1562, column: 12, scope: !9568)
!9574 = !DILocation(line: 1562, column: 16, scope: !9568)
!9575 = !DILocation(line: 1562, column: 19, scope: !9568)
!9576 = !DILocation(line: 1562, column: 23, scope: !9568)
!9577 = !DILocation(line: 1562, column: 27, scope: !9568)
!9578 = !DILocation(line: 1562, column: 26, scope: !9568)
!9579 = !DILocation(line: 1562, column: 21, scope: !9568)
!9580 = !DILocation(line: 1562, column: 36, scope: !9568)
!9581 = !DILocation(line: 1562, column: 35, scope: !9568)
!9582 = !DILocation(line: 1562, column: 30, scope: !9568)
!9583 = !DILocation(line: 1562, column: 18, scope: !9568)
!9584 = !DILocation(line: 1562, column: 14, scope: !9568)
!9585 = !DILocation(line: 1562, column: 42, scope: !9568)
!9586 = !DILocation(line: 1562, column: 51, scope: !9568)
!9587 = !DILocation(line: 1562, column: 50, scope: !9568)
!9588 = !DILocation(line: 1562, column: 45, scope: !9568)
!9589 = !DILocation(line: 1562, column: 41, scope: !9568)
!9590 = !DILocation(line: 1562, column: 55, scope: !9568)
!9591 = !DILocation(line: 1562, column: 64, scope: !9568)
!9592 = !DILocation(line: 1562, column: 63, scope: !9568)
!9593 = !DILocation(line: 1562, column: 58, scope: !9568)
!9594 = !DILocation(line: 1562, column: 54, scope: !9568)
!9595 = !DILocation(line: 1562, column: 11, scope: !9568)
!9596 = !DILocation(line: 1562, column: 5, scope: !9568)
!9597 = !DILocation(line: 1563, column: 10, scope: !9532)
!9598 = !DILocation(line: 1563, column: 14, scope: !9532)
!9599 = !DILocation(line: 1563, column: 13, scope: !9532)
!9600 = !DILocation(line: 1563, column: 17, scope: !9532)
!9601 = !DILocation(line: 1563, column: 16, scope: !9532)
!9602 = !DILocation(line: 1563, column: 26, scope: !9532)
!9603 = !DILocation(line: 1563, column: 29, scope: !9532)
!9604 = !DILocation(line: 1563, column: 28, scope: !9532)
!9605 = !DILocation(line: 1563, column: 25, scope: !9532)
!9606 = !DILocation(line: 1563, column: 24, scope: !9532)
!9607 = !DILocation(line: 1563, column: 19, scope: !9532)
!9608 = !DILocation(line: 1563, column: 35, scope: !9532)
!9609 = !DILocation(line: 1563, column: 44, scope: !9532)
!9610 = !DILocation(line: 1563, column: 43, scope: !9532)
!9611 = !DILocation(line: 1563, column: 38, scope: !9532)
!9612 = !DILocation(line: 1563, column: 34, scope: !9532)
!9613 = !DILocation(line: 1563, column: 48, scope: !9532)
!9614 = !DILocation(line: 1563, column: 57, scope: !9532)
!9615 = !DILocation(line: 1563, column: 56, scope: !9532)
!9616 = !DILocation(line: 1563, column: 51, scope: !9532)
!9617 = !DILocation(line: 1563, column: 47, scope: !9532)
!9618 = !DILocation(line: 1563, column: 9, scope: !9532)
!9619 = !DILocation(line: 1563, column: 3, scope: !9532)
!9620 = !DILocation(line: 1564, column: 1, scope: !9532)
!9621 = distinct !DISubprogram(name: "PinLight", scope: !1, file: !1, line: 1364, type: !8492, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9622 = !DILocalVariable(name: "Sca", arg: 1, scope: !9621, file: !1, line: 1364, type: !3111)
!9623 = !DILocation(line: 1364, column: 53, scope: !9621)
!9624 = !DILocalVariable(name: "Sa", arg: 2, scope: !9621, file: !1, line: 1365, type: !3111)
!9625 = !DILocation(line: 1365, column: 24, scope: !9621)
!9626 = !DILocalVariable(name: "Dca", arg: 3, scope: !9621, file: !1, line: 1365, type: !3111)
!9627 = !DILocation(line: 1365, column: 48, scope: !9621)
!9628 = !DILocalVariable(name: "Da", arg: 4, scope: !9621, file: !1, line: 1365, type: !3111)
!9629 = !DILocation(line: 1365, column: 73, scope: !9621)
!9630 = !DILocation(line: 1373, column: 7, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9621, file: !1, line: 1373, column: 7)
!9632 = !DILocation(line: 1373, column: 11, scope: !9631)
!9633 = !DILocation(line: 1373, column: 10, scope: !9631)
!9634 = !DILocation(line: 1373, column: 16, scope: !9631)
!9635 = !DILocation(line: 1373, column: 22, scope: !9631)
!9636 = !DILocation(line: 1373, column: 21, scope: !9631)
!9637 = !DILocation(line: 1373, column: 26, scope: !9631)
!9638 = !DILocation(line: 1373, column: 25, scope: !9631)
!9639 = !DILocation(line: 1373, column: 18, scope: !9631)
!9640 = !DILocation(line: 1373, column: 14, scope: !9631)
!9641 = !DILocation(line: 1373, column: 7, scope: !9621)
!9642 = !DILocation(line: 1374, column: 12, scope: !9631)
!9643 = !DILocation(line: 1374, column: 17, scope: !9631)
!9644 = !DILocation(line: 1374, column: 19, scope: !9631)
!9645 = !DILocation(line: 1374, column: 15, scope: !9631)
!9646 = !DILocation(line: 1374, column: 25, scope: !9631)
!9647 = !DILocation(line: 1374, column: 28, scope: !9631)
!9648 = !DILocation(line: 1374, column: 27, scope: !9631)
!9649 = !DILocation(line: 1374, column: 24, scope: !9631)
!9650 = !DILocation(line: 1374, column: 31, scope: !9631)
!9651 = !DILocation(line: 1374, column: 40, scope: !9631)
!9652 = !DILocation(line: 1374, column: 39, scope: !9631)
!9653 = !DILocation(line: 1374, column: 34, scope: !9631)
!9654 = !DILocation(line: 1374, column: 30, scope: !9631)
!9655 = !DILocation(line: 1374, column: 11, scope: !9631)
!9656 = !DILocation(line: 1374, column: 5, scope: !9631)
!9657 = !DILocation(line: 1375, column: 8, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9621, file: !1, line: 1375, column: 7)
!9659 = !DILocation(line: 1375, column: 12, scope: !9658)
!9660 = !DILocation(line: 1375, column: 11, scope: !9658)
!9661 = !DILocation(line: 1375, column: 21, scope: !9658)
!9662 = !DILocation(line: 1375, column: 20, scope: !9658)
!9663 = !DILocation(line: 1375, column: 25, scope: !9658)
!9664 = !DILocation(line: 1375, column: 24, scope: !9658)
!9665 = !DILocation(line: 1375, column: 16, scope: !9658)
!9666 = !DILocation(line: 1375, column: 7, scope: !9621)
!9667 = !DILocation(line: 1376, column: 12, scope: !9658)
!9668 = !DILocation(line: 1376, column: 16, scope: !9658)
!9669 = !DILocation(line: 1376, column: 15, scope: !9658)
!9670 = !DILocation(line: 1376, column: 19, scope: !9658)
!9671 = !DILocation(line: 1376, column: 18, scope: !9658)
!9672 = !DILocation(line: 1376, column: 23, scope: !9658)
!9673 = !DILocation(line: 1376, column: 32, scope: !9658)
!9674 = !DILocation(line: 1376, column: 31, scope: !9658)
!9675 = !DILocation(line: 1376, column: 26, scope: !9658)
!9676 = !DILocation(line: 1376, column: 22, scope: !9658)
!9677 = !DILocation(line: 1376, column: 11, scope: !9658)
!9678 = !DILocation(line: 1376, column: 5, scope: !9658)
!9679 = !DILocation(line: 1377, column: 10, scope: !9621)
!9680 = !DILocation(line: 1377, column: 19, scope: !9621)
!9681 = !DILocation(line: 1377, column: 18, scope: !9621)
!9682 = !DILocation(line: 1377, column: 13, scope: !9621)
!9683 = !DILocation(line: 1377, column: 23, scope: !9621)
!9684 = !DILocation(line: 1377, column: 22, scope: !9621)
!9685 = !DILocation(line: 1377, column: 9, scope: !9621)
!9686 = !DILocation(line: 1377, column: 3, scope: !9621)
!9687 = !DILocation(line: 1378, column: 1, scope: !9621)
!9688 = distinct !DISubprogram(name: "Threshold", scope: !1, file: !1, line: 1523, type: !8492, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !721)
!9689 = !DILocalVariable(name: "p", arg: 1, scope: !9688, file: !1, line: 1523, type: !3111)
!9690 = !DILocation(line: 1523, column: 61, scope: !9688)
!9691 = !DILocalVariable(name: "q", arg: 2, scope: !9688, file: !1, line: 1524, type: !3111)
!9692 = !DILocation(line: 1524, column: 24, scope: !9688)
!9693 = !DILocalVariable(name: "threshold", arg: 3, scope: !9688, file: !1, line: 1524, type: !3111)
!9694 = !DILocation(line: 1524, column: 47, scope: !9688)
!9695 = !DILocalVariable(name: "amount", arg: 4, scope: !9688, file: !1, line: 1525, type: !3111)
!9696 = !DILocation(line: 1525, column: 24, scope: !9688)
!9697 = !DILocalVariable(name: "delta", scope: !9688, file: !1, line: 1528, type: !710)
!9698 = !DILocation(line: 1528, column: 5, scope: !9688)
!9699 = !DILocation(line: 1530, column: 9, scope: !9688)
!9700 = !DILocation(line: 1530, column: 11, scope: !9688)
!9701 = !DILocation(line: 1530, column: 10, scope: !9688)
!9702 = !DILocation(line: 1530, column: 8, scope: !9688)
!9703 = !DILocation(line: 1531, column: 43, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9688, file: !1, line: 1531, column: 7)
!9705 = !DILocation(line: 1531, column: 42, scope: !9704)
!9706 = !DILocation(line: 1531, column: 24, scope: !9704)
!9707 = !DILocation(line: 1531, column: 7, scope: !9704)
!9708 = !DILocation(line: 1531, column: 53, scope: !9704)
!9709 = !DILocation(line: 1531, column: 51, scope: !9704)
!9710 = !DILocation(line: 1531, column: 7, scope: !9688)
!9711 = !DILocation(line: 1532, column: 12, scope: !9704)
!9712 = !DILocation(line: 1532, column: 5, scope: !9704)
!9713 = !DILocation(line: 1533, column: 10, scope: !9688)
!9714 = !DILocation(line: 1533, column: 12, scope: !9688)
!9715 = !DILocation(line: 1533, column: 18, scope: !9688)
!9716 = !DILocation(line: 1533, column: 17, scope: !9688)
!9717 = !DILocation(line: 1533, column: 11, scope: !9688)
!9718 = !DILocation(line: 1533, column: 3, scope: !9688)
!9719 = !DILocation(line: 1534, column: 1, scope: !9688)
