; ModuleID = 'blender/source/blender/editors/space_logic/logic_window.c'
source_filename = "blender/source/blender/editors/space_logic/logic_window.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.StructRNA = type opaque
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.bContext = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bProperty = type { %struct.bProperty*, %struct.bProperty*, [64 x i8], i16, i16, i32, i8* }
%struct.bSensor = type { %struct.bSensor*, %struct.bSensor*, i16, i16, i16, i16, i16, i16, i16, i16, [64 x i8], i8*, %struct.bController**, %struct.Object*, i16, i16, i16, i16 }
%struct.bController = type { %struct.bController*, %struct.bController*, %struct.bController*, i16, i16, i16, i16, i16, i16, i16, i16, [64 x i8], i8*, %struct.bActuator**, %struct.bSensor**, i16, i16, i32 }
%struct.bActuator = type { %struct.bActuator*, %struct.bActuator*, %struct.bActuator*, i16, i16, i16, i16, [64 x i8], i8*, %struct.Object* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type opaque
%struct.SpaceLogic = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], i16, i16, i32, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.uiLayout = type opaque
%struct.uiBlock = type { %struct.uiBlock*, %struct.uiBlock*, %struct.ListBase, %struct.Panel*, %struct.uiBlock*, %struct.ListBase, %struct.ListBase, %struct.uiLayout*, %struct.ListBase, [128 x i8], [4 x [4 x float]], %struct.rctf, float, i32, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, i32 (%struct.bContext*, %struct.uiBlock*, %struct.wmEvent*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, i8*, i8*, i32, i16, i8, i8, i8, [7 x i8], double, i8*, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.rctf, %struct.ListBase, %struct.uiPopupBlockHandle*, %struct.wmOperator*, i8*, %struct.UnitSettings*, [3 x float], i8, [64 x i8], %struct.PieMenuData }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.PanelType = type opaque
%struct.wmEvent = type opaque
%struct.uiPopupBlockHandle = type { %struct.ARegion*, [2 x float], double, i8, i8, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*, %struct.uiPopupBlockCreate, %struct.wmTimer*, %struct.uiKeyNavLock, %struct.wmOperatorType*, %struct.ScrArea*, %struct.ARegion*, i32, i32, i32, i32, [4 x float], i32, i8, [2 x i32] }
%struct.uiPopupBlockCreate = type { %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.uiPopupBlockHandle*, i8*)*, i8*, [2 x i32], %struct.ARegion* }
%struct.uiKeyNavLock = type { i8, [2 x i32] }
%struct.wmOperatorType = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.SpaceType = type opaque
%struct.wmOperator = type opaque
%struct.PieMenuData = type { [2 x float], [2 x float], [2 x float], [2 x float], double, i32, i32, float }
%struct.uiBut = type { %struct.uiBut*, %struct.uiBut*, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8*, [128 x i8], [400 x i8], %struct.rctf, i8*, float, float, float, float, float, float, [4 x i8], void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, %struct.bContextStore*, i32 (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, %struct.uiLink*, [2 x i16], i8*, i8*, i32, i8, i8, i8, i8, i8, i16, i16, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, %struct.PointerRNA, %struct.PropertyRNA*, i32, %struct.PointerRNA, %struct.PropertyRNA*, %struct.wmOperatorType*, %struct.PointerRNA*, i16, i8, i8, i8*, %struct.ImBuf*, float, %struct.uiHandleButtonData*, i8*, i8*, double*, float*, i8*, i8*, %struct.uiBlock* }
%struct.bContextStore = type { %struct.bContextStore*, %struct.bContextStore*, %struct.ListBase, i8 }
%struct.uiSearchItems = type opaque
%struct.uiLink = type { i8**, i8***, i16*, i16, i16, i16, i16, %struct.ListBase }
%struct.PropertyRNA = type opaque
%struct.ImBuf = type opaque
%struct.uiHandleButtonData = type opaque
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.bSoundActuator = type { i16, i16, i32, i32, [2 x i16], float, float, %struct.bSound*, %struct.Sound3D, i16, i16, i16, [1 x i16] }
%struct.Sound3D = type { float, float, float, float, float, float, float, float }
%struct.bArmatureSensor = type { [64 x i8], [64 x i8], i32, float }
%struct.bArmatureActuator = type { [64 x i8], [64 x i8], i32, float, float, float, %struct.Object*, %struct.Object* }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bPropertyActuator = type { i32, i32, [64 x i8], [64 x i8], %struct.Object* }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type opaque

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [6 x i8] c"names\00", align 1
@RNA_SpaceLogicEditor = external dso_local global %struct.StructRNA, align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"buttonswin %p\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"Controllers\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"show_controllers_selected_objects\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"Sel\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"show_controllers_active_object\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"Act\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"show_controllers_linked_controller\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"Link\00", align 1
@RNA_GameObjectSettings = external dso_local global %struct.StructRNA, align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"show_state_panel\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"Object name, click to show/hide controllers\00", align 1
@RNA_Object = external dso_local global %struct.StructRNA, align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"LOGIC_OT_controller_add\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"Add Controller\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Visible\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"Initial\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"use_all_states\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"states_visible\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"used_states\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"states_initial\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"show_debug_state\00", align 1
@RNA_Controller = external dso_local global %struct.StructRNA, align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"controller\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"Sensors\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"show_sensors_selected_objects\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"show_sensors_active_object\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"show_sensors_linked_controller\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"show_sensors_active_states\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"State\00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"Object name, click to show/hide sensors\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"LOGIC_OT_sensor_add\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"Add Sensor\00", align 1
@RNA_Sensor = external dso_local global %struct.StructRNA, align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"sensor\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"Actuators\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"show_actuators_selected_objects\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"show_actuators_active_object\00", align 1
@.str.38 = private unnamed_addr constant [33 x i8] c"show_actuators_linked_controller\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"show_actuators_active_states\00", align 1
@.str.40 = private unnamed_addr constant [42 x i8] c"Object name, click to show/hide actuators\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"LOGIC_OT_actuator_add\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"Add Actuator\00", align 1
@RNA_Actuator = external dso_local global %struct.StructRNA, align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"actuator\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"idar\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"Add sensor\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"Delete sensor\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"Add controller\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"Delete controller\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"Add actuator\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"Delete actuator\00", align 1
@__func__.controller_menu = private unnamed_addr constant [16 x i8] c"controller_menu\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"Show Objects\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"Hide Objects\00", align 1
@.str.53 = private unnamed_addr constant [17 x i8] c"Show Controllers\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"Hide Controllers\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"states\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"show_expanded\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.59 = private unnamed_addr constant [42 x i8] c"Set controller state index (from 1 to 30)\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"use_priority\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"LOGIC_OT_controller_move\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"LOGIC_OT_controller_remove\00", align 1
@__func__.controller_state_mask_menu = private unnamed_addr constant [27 x i8] c"controller_state_mask_menu\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"Nand\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"Nor\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"Xor\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"Xnor\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"Expression\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"Python\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"use_debug\00", align 1
@__func__.sensor_menu = private unnamed_addr constant [12 x i8] c"sensor_menu\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"Show Sensors\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"Hide Sensors\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"pin\00", align 1
@.str.81 = private unnamed_addr constant [21 x i8] c"LOGIC_OT_sensor_move\00", align 1
@.str.82 = private unnamed_addr constant [23 x i8] c"LOGIC_OT_sensor_remove\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"Always\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"Near\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"Keyboard\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"Property\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"Armature\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"Actuator\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"Delay\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"Mouse\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"Collision\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"Radar\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"Random\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"Ray\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"Message\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c"Joystick\00", align 1
@.str.97 = private unnamed_addr constant [21 x i8] c"use_pulse_true_level\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"use_pulse_false_level\00", align 1
@.str.99 = private unnamed_addr constant [10 x i8] c"frequency\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"Freq\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"use_level\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"use_tap\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"invert\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"Invert\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"actuators\00", align 1
@.str.106 = private unnamed_addr constant [36 x i8] c"Sensor only available for armatures\00", align 1
@RNA_Pose = external dso_local global %struct.StructRNA, align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"bones\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"bone\00", align 1
@.str.109 = private unnamed_addr constant [11 x i8] c"constraint\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"constraints\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"test_type\00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"use_pulse\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"use_material\00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c"property\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"material\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"materials\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"delay\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"use_repeat\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"joystick_index\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"event_type\00", align 1
@.str.123 = private unnamed_addr constant [15 x i8] c"use_all_events\00", align 1
@.str.124 = private unnamed_addr constant [14 x i8] c"button_number\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"axis_number\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"axis_threshold\00", align 1
@.str.127 = private unnamed_addr constant [15 x i8] c"axis_direction\00", align 1
@.str.128 = private unnamed_addr constant [11 x i8] c"hat_number\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"hat_direction\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"single_axis_number\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"Key:\00", align 1
@.str.132 = private unnamed_addr constant [13 x i8] c"use_all_keys\00", align 1
@.str.133 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c"First Modifier:\00", align 1
@.str.135 = private unnamed_addr constant [15 x i8] c"modifier_key_1\00", align 1
@.str.136 = private unnamed_addr constant [17 x i8] c"Second Modifier:\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"modifier_key_2\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.139 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"subject\00", align 1
@.str.142 = private unnamed_addr constant [12 x i8] c"mouse_event\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"use_x_ray\00", align 1
@.str.144 = private unnamed_addr constant [9 x i8] c"distance\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"reset_distance\00", align 1
@.str.146 = private unnamed_addr constant [16 x i8] c"evaluation_type\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"value_min\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"value_max\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"angle\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"seed\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"ray_type\00", align 1
@.str.153 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@__func__.actuator_menu = private unnamed_addr constant [14 x i8] c"actuator_menu\00", align 1
@.str.154 = private unnamed_addr constant [15 x i8] c"Show Actuators\00", align 1
@.str.155 = private unnamed_addr constant [15 x i8] c"Hide Actuators\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"LOGIC_OT_actuator_move\00", align 1
@.str.157 = private unnamed_addr constant [25 x i8] c"LOGIC_OT_actuator_remove\00", align 1
@.str.158 = private unnamed_addr constant [13 x i8] c"Shape Action\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"Action\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"Motion\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"F-Curve\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"Lamp\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"Camera\00", align 1
@.str.164 = private unnamed_addr constant [9 x i8] c"Material\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"Sound\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"Edit Object\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"Constraint\00", align 1
@.str.168 = private unnamed_addr constant [6 x i8] c"Scene\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"Group\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"Game\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c"Visibility\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"Filter 2D\00", align 1
@.str.173 = private unnamed_addr constant [7 x i8] c"Parent\00", align 1
@.str.174 = private unnamed_addr constant [9 x i8] c"Steering\00", align 1
@.str.175 = private unnamed_addr constant [10 x i8] c"play_mode\00", align 1
@.str.176 = private unnamed_addr constant [10 x i8] c"use_force\00", align 1
@.str.177 = private unnamed_addr constant [13 x i8] c"use_additive\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"use_local\00", align 1
@.str.179 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.180 = private unnamed_addr constant [24 x i8] c"use_continue_last_frame\00", align 1
@.str.181 = private unnamed_addr constant [12 x i8] c"frame_start\00", align 1
@.str.182 = private unnamed_addr constant [10 x i8] c"frame_end\00", align 1
@.str.183 = private unnamed_addr constant [18 x i8] c"apply_to_children\00", align 1
@.str.184 = private unnamed_addr constant [15 x i8] c"frame_blend_in\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"priority\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.187 = private unnamed_addr constant [13 x i8] c"layer_weight\00", align 1
@.str.188 = private unnamed_addr constant [11 x i8] c"blend_mode\00", align 1
@.str.189 = private unnamed_addr constant [15 x i8] c"frame_property\00", align 1
@.str.190 = private unnamed_addr constant [38 x i8] c"Actuator only available for armatures\00", align 1
@.str.191 = private unnamed_addr constant [17 x i8] c"secondary_target\00", align 1
@.str.192 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.193 = private unnamed_addr constant [10 x i8] c"influence\00", align 1
@.str.194 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.195 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.196 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.197 = private unnamed_addr constant [8 x i8] c"damping\00", align 1
@.str.198 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"limit_min\00", align 1
@.str.200 = private unnamed_addr constant [10 x i8] c"limit_max\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"use_normal\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"Range:\00", align 1
@.str.203 = private unnamed_addr constant [19 x i8] c"use_force_distance\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"use_material_detect\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"use_persistent\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.207 = private unnamed_addr constant [17 x i8] c"damping_rotation\00", align 1
@.str.208 = private unnamed_addr constant [19 x i8] c"direction_axis_pos\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"rotation_max\00", align 1
@.str.210 = private unnamed_addr constant [10 x i8] c"angle_min\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"angle_max\00", align 1
@.str.212 = private unnamed_addr constant [11 x i8] c"fh_damping\00", align 1
@.str.213 = private unnamed_addr constant [10 x i8] c"fh_height\00", align 1
@.str.214 = private unnamed_addr constant [20 x i8] c"use_fh_paralel_axis\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"direction_axis\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"fh_force\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"use_fh_normal\00", align 1
@.str.218 = private unnamed_addr constant [16 x i8] c"linear_velocity\00", align 1
@.str.219 = private unnamed_addr constant [26 x i8] c"use_local_linear_velocity\00", align 1
@.str.220 = private unnamed_addr constant [17 x i8] c"angular_velocity\00", align 1
@.str.221 = private unnamed_addr constant [27 x i8] c"use_local_angular_velocity\00", align 1
@.str.222 = private unnamed_addr constant [37 x i8] c"Mode only available for mesh objects\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"mesh\00", align 1
@.str.224 = private unnamed_addr constant [25 x i8] c"use_replace_display_mesh\00", align 1
@.str.225 = private unnamed_addr constant [25 x i8] c"use_replace_physics_mesh\00", align 1
@.str.226 = private unnamed_addr constant [13 x i8] c"track_object\00", align 1
@.str.227 = private unnamed_addr constant [16 x i8] c"use_3d_tracking\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"up_axis\00", align 1
@.str.229 = private unnamed_addr constant [11 x i8] c"track_axis\00", align 1
@.str.230 = private unnamed_addr constant [18 x i8] c"dynamic_operation\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"mass\00", align 1
@.str.232 = private unnamed_addr constant [12 x i8] c"filter_pass\00", align 1
@.str.233 = private unnamed_addr constant [12 x i8] c"glsl_shader\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"use_motion_blur\00", align 1
@.str.235 = private unnamed_addr constant [19 x i8] c"motion_blur_factor\00", align 1
@.str.236 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.237 = private unnamed_addr constant [12 x i8] c"to_property\00", align 1
@.str.238 = private unnamed_addr constant [8 x i8] c"objects\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"body_type\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"body_message\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"body_property\00", align 1
@.str.242 = private unnamed_addr constant [13 x i8] c"physics_type\00", align 1
@.str.243 = private unnamed_addr constant [16 x i8] c"offset_location\00", align 1
@.str.244 = private unnamed_addr constant [19 x i8] c"use_local_location\00", align 1
@.str.245 = private unnamed_addr constant [16 x i8] c"offset_rotation\00", align 1
@.str.246 = private unnamed_addr constant [19 x i8] c"use_local_rotation\00", align 1
@.str.247 = private unnamed_addr constant [25 x i8] c"Dynamic Object Settings:\00", align 1
@.str.248 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.249 = private unnamed_addr constant [16 x i8] c"use_local_force\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"torque\00", align 1
@.str.251 = private unnamed_addr constant [17 x i8] c"use_local_torque\00", align 1
@.str.252 = private unnamed_addr constant [24 x i8] c"use_add_linear_velocity\00", align 1
@.str.253 = private unnamed_addr constant [17 x i8] c"reference_object\00", align 1
@.str.254 = private unnamed_addr constant [18 x i8] c"use_servo_limit_x\00", align 1
@.str.255 = private unnamed_addr constant [12 x i8] c"force_max_x\00", align 1
@.str.256 = private unnamed_addr constant [12 x i8] c"force_min_x\00", align 1
@.str.257 = private unnamed_addr constant [18 x i8] c"use_servo_limit_y\00", align 1
@.str.258 = private unnamed_addr constant [12 x i8] c"force_max_y\00", align 1
@.str.259 = private unnamed_addr constant [12 x i8] c"force_min_y\00", align 1
@.str.260 = private unnamed_addr constant [18 x i8] c"use_servo_limit_z\00", align 1
@.str.261 = private unnamed_addr constant [12 x i8] c"force_max_z\00", align 1
@.str.262 = private unnamed_addr constant [12 x i8] c"force_min_z\00", align 1
@.str.263 = private unnamed_addr constant [25 x i8] c"proportional_coefficient\00", align 1
@.str.264 = private unnamed_addr constant [21 x i8] c"integral_coefficient\00", align 1
@.str.265 = private unnamed_addr constant [21 x i8] c"derivate_coefficient\00", align 1
@.str.266 = private unnamed_addr constant [27 x i8] c"use_add_character_location\00", align 1
@.str.267 = private unnamed_addr constant [19 x i8] c"use_character_jump\00", align 1
@.str.268 = private unnamed_addr constant [13 x i8] c"use_compound\00", align 1
@.str.269 = private unnamed_addr constant [10 x i8] c"use_ghost\00", align 1
@.str.270 = private unnamed_addr constant [16 x i8] c"object_property\00", align 1
@.str.271 = private unnamed_addr constant [13 x i8] c"distribution\00", align 1
@.str.272 = private unnamed_addr constant [16 x i8] c"use_always_true\00", align 1
@.str.273 = private unnamed_addr constant [47 x i8] c"Choose between true and false, 50% chance each\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"chance\00", align 1
@.str.275 = private unnamed_addr constant [10 x i8] c"int_value\00", align 1
@.str.276 = private unnamed_addr constant [8 x i8] c"int_min\00", align 1
@.str.277 = private unnamed_addr constant [8 x i8] c"int_max\00", align 1
@.str.278 = private unnamed_addr constant [9 x i8] c"int_mean\00", align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"float_value\00", align 1
@.str.280 = private unnamed_addr constant [10 x i8] c"float_min\00", align 1
@.str.281 = private unnamed_addr constant [10 x i8] c"float_max\00", align 1
@.str.282 = private unnamed_addr constant [11 x i8] c"float_mean\00", align 1
@.str.283 = private unnamed_addr constant [20 x i8] c"standard_derivation\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"half_life_time\00", align 1
@.str.285 = private unnamed_addr constant [7 x i8] c"camera\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"scene\00", align 1
@.str.287 = private unnamed_addr constant [41 x i8] c"Actuator only available for mesh objects\00", align 1
@.str.288 = private unnamed_addr constant [6 x i8] c"sound\00", align 1
@.str.289 = private unnamed_addr constant [14 x i8] c"SOUND_OT_open\00", align 1
@.str.290 = private unnamed_addr constant [47 x i8] c"Select a sound from the list or load a new one\00", align 1
@.str.291 = private unnamed_addr constant [7 x i8] c"volume\00", align 1
@.str.292 = private unnamed_addr constant [6 x i8] c"pitch\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"use_sound_3d\00", align 1
@.str.294 = private unnamed_addr constant [12 x i8] c"gain_3d_min\00", align 1
@.str.295 = private unnamed_addr constant [12 x i8] c"gain_3d_max\00", align 1
@.str.296 = private unnamed_addr constant [22 x i8] c"distance_3d_reference\00", align 1
@.str.297 = private unnamed_addr constant [16 x i8] c"distance_3d_max\00", align 1
@.str.298 = private unnamed_addr constant [18 x i8] c"rolloff_factor_3d\00", align 1
@.str.299 = private unnamed_addr constant [19 x i8] c"cone_outer_gain_3d\00", align 1
@.str.300 = private unnamed_addr constant [20 x i8] c"cone_outer_angle_3d\00", align 1
@.str.301 = private unnamed_addr constant [20 x i8] c"cone_inner_angle_3d\00", align 1
@.str.302 = private unnamed_addr constant [10 x i8] c"operation\00", align 1
@.str.303 = private unnamed_addr constant [12 x i8] c"use_visible\00", align 1
@.str.304 = private unnamed_addr constant [14 x i8] c"use_occlusion\00", align 1
@.str.305 = private unnamed_addr constant [8 x i8] c"navmesh\00", align 1
@.str.306 = private unnamed_addr constant [9 x i8] c"velocity\00", align 1
@.str.307 = private unnamed_addr constant [13 x i8] c"acceleration\00", align 1
@.str.308 = private unnamed_addr constant [11 x i8] c"turn_speed\00", align 1
@.str.309 = private unnamed_addr constant [7 x i8] c"facing\00", align 1
@.str.310 = private unnamed_addr constant [12 x i8] c"facing_axis\00", align 1
@.str.311 = private unnamed_addr constant [10 x i8] c"normal_up\00", align 1
@.str.312 = private unnamed_addr constant [16 x i8] c"self_terminated\00", align 1
@.str.313 = private unnamed_addr constant [14 x i8] c"update_period\00", align 1
@.str.314 = private unnamed_addr constant [19 x i8] c"show_visualization\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"visible\00", align 1
@.str.316 = private unnamed_addr constant [11 x i8] c"use_axis_x\00", align 1
@.str.317 = private unnamed_addr constant [14 x i8] c"sensitivity_x\00", align 1
@.str.318 = private unnamed_addr constant [12 x i8] c"threshold_x\00", align 1
@.str.319 = private unnamed_addr constant [6 x i8] c"min_x\00", align 1
@.str.320 = private unnamed_addr constant [6 x i8] c"max_x\00", align 1
@.str.321 = private unnamed_addr constant [14 x i8] c"object_axis_x\00", align 1
@.str.322 = private unnamed_addr constant [11 x i8] c"use_axis_y\00", align 1
@.str.323 = private unnamed_addr constant [14 x i8] c"sensitivity_y\00", align 1
@.str.324 = private unnamed_addr constant [12 x i8] c"threshold_y\00", align 1
@.str.325 = private unnamed_addr constant [6 x i8] c"min_y\00", align 1
@.str.326 = private unnamed_addr constant [6 x i8] c"max_y\00", align 1
@.str.327 = private unnamed_addr constant [14 x i8] c"object_axis_y\00", align 1
@.str.328 = private unnamed_addr constant [8 x i8] c"local_x\00", align 1
@.str.329 = private unnamed_addr constant [8 x i8] c"reset_x\00", align 1
@.str.330 = private unnamed_addr constant [8 x i8] c"local_y\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"reset_y\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @make_unique_prop_names(%struct.bContext* %C, i8* %str) #0 !dbg !2683 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %str.addr = alloca i8*, align 8
  %ob = alloca %struct.Object*, align 8
  %prop = alloca %struct.bProperty*, align 8
  %sens = alloca %struct.bSensor*, align 8
  %cont = alloca %struct.bController*, align 8
  %act = alloca %struct.bActuator*, align 8
  %idar = alloca %struct.ID**, align 8
  %a = alloca i16, align 2
  %obcount = alloca i16, align 2
  %propcount = alloca i16, align 2
  %nr = alloca i16, align 2
  %names = alloca i8**, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !2694, metadata !DIExpression()), !dbg !2695
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2696, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata %struct.bProperty** %prop, metadata !2698, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !2715, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !2717, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !2719, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata i16* %a, metadata !2722, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.declare(metadata i16* %obcount, metadata !2724, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.declare(metadata i16* %propcount, metadata !2726, metadata !DIExpression()), !dbg !2727
  store i16 0, i16* %propcount, align 2, !dbg !2727
  call void @llvm.dbg.declare(metadata i16* %nr, metadata !2728, metadata !DIExpression()), !dbg !2729
  call void @llvm.dbg.declare(metadata i8*** %names, metadata !2730, metadata !DIExpression()), !dbg !2734
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2735
  %call = call %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %0, i16* %obcount, i16 signext 219), !dbg !2736
  store %struct.ID** %call, %struct.ID*** %idar, align 8, !dbg !2737
  store i16 0, i16* %a, align 2, !dbg !2738
  br label %for.cond, !dbg !2740

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16, i16* %a, align 2, !dbg !2741
  %conv = sext i16 %1 to i32, !dbg !2741
  %2 = load i16, i16* %obcount, align 2, !dbg !2743
  %conv1 = sext i16 %2 to i32, !dbg !2743
  %cmp = icmp slt i32 %conv, %conv1, !dbg !2744
  br i1 %cmp, label %for.body, label %for.end, !dbg !2745

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !2746
  %4 = load i16, i16* %a, align 2, !dbg !2748
  %idxprom = sext i16 %4 to i64, !dbg !2746
  %arrayidx = getelementptr inbounds %struct.ID*, %struct.ID** %3, i64 %idxprom, !dbg !2746
  %5 = load %struct.ID*, %struct.ID** %arrayidx, align 8, !dbg !2746
  %6 = bitcast %struct.ID* %5 to %struct.Object*, !dbg !2749
  store %struct.Object* %6, %struct.Object** %ob, align 8, !dbg !2750
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2751
  %prop3 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 91, !dbg !2752
  %call4 = call i32 @BLI_countlist(%struct.ListBase* %prop3), !dbg !2753
  %8 = load i16, i16* %propcount, align 2, !dbg !2754
  %conv5 = sext i16 %8 to i32, !dbg !2754
  %add = add nsw i32 %conv5, %call4, !dbg !2754
  %conv6 = trunc i32 %add to i16, !dbg !2754
  store i16 %conv6, i16* %propcount, align 2, !dbg !2754
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2755
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 92, !dbg !2756
  %call7 = call i32 @BLI_countlist(%struct.ListBase* %sensors), !dbg !2757
  %10 = load i16, i16* %propcount, align 2, !dbg !2758
  %conv8 = sext i16 %10 to i32, !dbg !2758
  %add9 = add nsw i32 %conv8, %call7, !dbg !2758
  %conv10 = trunc i32 %add9 to i16, !dbg !2758
  store i16 %conv10, i16* %propcount, align 2, !dbg !2758
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2759
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 93, !dbg !2760
  %call11 = call i32 @BLI_countlist(%struct.ListBase* %controllers), !dbg !2761
  %12 = load i16, i16* %propcount, align 2, !dbg !2762
  %conv12 = sext i16 %12 to i32, !dbg !2762
  %add13 = add nsw i32 %conv12, %call11, !dbg !2762
  %conv14 = trunc i32 %add13 to i16, !dbg !2762
  store i16 %conv14, i16* %propcount, align 2, !dbg !2762
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2763
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 94, !dbg !2764
  %call15 = call i32 @BLI_countlist(%struct.ListBase* %actuators), !dbg !2765
  %14 = load i16, i16* %propcount, align 2, !dbg !2766
  %conv16 = sext i16 %14 to i32, !dbg !2766
  %add17 = add nsw i32 %conv16, %call15, !dbg !2766
  %conv18 = trunc i32 %add17 to i16, !dbg !2766
  store i16 %conv18, i16* %propcount, align 2, !dbg !2766
  br label %for.inc, !dbg !2767

for.inc:                                          ; preds = %for.body
  %15 = load i16, i16* %a, align 2, !dbg !2768
  %inc = add i16 %15, 1, !dbg !2768
  store i16 %inc, i16* %a, align 2, !dbg !2768
  br label %for.cond, !dbg !2769, !llvm.loop !2770

for.end:                                          ; preds = %for.cond
  %16 = load i16, i16* %propcount, align 2, !dbg !2772
  %conv19 = sext i16 %16 to i32, !dbg !2772
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !2774
  br i1 %cmp20, label %if.then, label %if.end23, !dbg !2775

if.then:                                          ; preds = %for.end
  %17 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !2776
  %tobool = icmp ne %struct.ID** %17, null, !dbg !2776
  br i1 %tobool, label %if.then22, label %if.end, !dbg !2779

if.then22:                                        ; preds = %if.then
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2780
  %19 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !2781
  %20 = bitcast %struct.ID** %19 to i8*, !dbg !2781
  call void %18(i8* %20), !dbg !2780
  br label %if.end, !dbg !2780

if.end:                                           ; preds = %if.then22, %if.then
  br label %return, !dbg !2782

if.end23:                                         ; preds = %for.end
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2783
  %22 = load i16, i16* %propcount, align 2, !dbg !2784
  %conv24 = sext i16 %22 to i64, !dbg !2784
  %mul = mul i64 %conv24, 8, !dbg !2785
  %call25 = call i8* %21(i64 %mul, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !2783
  %23 = bitcast i8* %call25 to i8**, !dbg !2783
  store i8** %23, i8*** %names, align 8, !dbg !2786
  store i16 0, i16* %nr, align 2, !dbg !2787
  store i16 0, i16* %a, align 2, !dbg !2788
  br label %for.cond26, !dbg !2790

for.cond26:                                       ; preds = %for.inc75, %if.end23
  %24 = load i16, i16* %a, align 2, !dbg !2791
  %conv27 = sext i16 %24 to i32, !dbg !2791
  %25 = load i16, i16* %obcount, align 2, !dbg !2793
  %conv28 = sext i16 %25 to i32, !dbg !2793
  %cmp29 = icmp slt i32 %conv27, %conv28, !dbg !2794
  br i1 %cmp29, label %for.body31, label %for.end77, !dbg !2795

for.body31:                                       ; preds = %for.cond26
  %26 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !2796
  %27 = load i16, i16* %a, align 2, !dbg !2798
  %idxprom32 = sext i16 %27 to i64, !dbg !2796
  %arrayidx33 = getelementptr inbounds %struct.ID*, %struct.ID** %26, i64 %idxprom32, !dbg !2796
  %28 = load %struct.ID*, %struct.ID** %arrayidx33, align 8, !dbg !2796
  %29 = bitcast %struct.ID* %28 to %struct.Object*, !dbg !2799
  store %struct.Object* %29, %struct.Object** %ob, align 8, !dbg !2800
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2801
  %prop34 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 91, !dbg !2802
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %prop34, i32 0, i32 0, !dbg !2803
  %31 = load i8*, i8** %first, align 8, !dbg !2803
  %32 = bitcast i8* %31 to %struct.bProperty*, !dbg !2801
  store %struct.bProperty* %32, %struct.bProperty** %prop, align 8, !dbg !2804
  br label %while.cond, !dbg !2805

while.cond:                                       ; preds = %while.body, %for.body31
  %33 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !2806
  %tobool35 = icmp ne %struct.bProperty* %33, null, !dbg !2805
  br i1 %tobool35, label %while.body, label %while.end, !dbg !2805

while.body:                                       ; preds = %while.cond
  %34 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !2807
  %name = getelementptr inbounds %struct.bProperty, %struct.bProperty* %34, i32 0, i32 2, !dbg !2809
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !2807
  %35 = load i8**, i8*** %names, align 8, !dbg !2810
  %36 = load i16, i16* %nr, align 2, !dbg !2811
  %inc36 = add i16 %36, 1, !dbg !2811
  store i16 %inc36, i16* %nr, align 2, !dbg !2811
  %idxprom37 = sext i16 %36 to i64, !dbg !2810
  %arrayidx38 = getelementptr inbounds i8*, i8** %35, i64 %idxprom37, !dbg !2810
  store i8* %arraydecay, i8** %arrayidx38, align 8, !dbg !2812
  %37 = load %struct.bProperty*, %struct.bProperty** %prop, align 8, !dbg !2813
  %next = getelementptr inbounds %struct.bProperty, %struct.bProperty* %37, i32 0, i32 0, !dbg !2814
  %38 = load %struct.bProperty*, %struct.bProperty** %next, align 8, !dbg !2814
  store %struct.bProperty* %38, %struct.bProperty** %prop, align 8, !dbg !2815
  br label %while.cond, !dbg !2805, !llvm.loop !2816

while.end:                                        ; preds = %while.cond
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2818
  %sensors39 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 92, !dbg !2819
  %first40 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors39, i32 0, i32 0, !dbg !2820
  %40 = load i8*, i8** %first40, align 8, !dbg !2820
  %41 = bitcast i8* %40 to %struct.bSensor*, !dbg !2818
  store %struct.bSensor* %41, %struct.bSensor** %sens, align 8, !dbg !2821
  br label %while.cond41, !dbg !2822

while.cond41:                                     ; preds = %while.body43, %while.end
  %42 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !2823
  %tobool42 = icmp ne %struct.bSensor* %42, null, !dbg !2822
  br i1 %tobool42, label %while.body43, label %while.end50, !dbg !2822

while.body43:                                     ; preds = %while.cond41
  %43 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !2824
  %name44 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %43, i32 0, i32 10, !dbg !2826
  %arraydecay45 = getelementptr inbounds [64 x i8], [64 x i8]* %name44, i64 0, i64 0, !dbg !2824
  %44 = load i8**, i8*** %names, align 8, !dbg !2827
  %45 = load i16, i16* %nr, align 2, !dbg !2828
  %inc46 = add i16 %45, 1, !dbg !2828
  store i16 %inc46, i16* %nr, align 2, !dbg !2828
  %idxprom47 = sext i16 %45 to i64, !dbg !2827
  %arrayidx48 = getelementptr inbounds i8*, i8** %44, i64 %idxprom47, !dbg !2827
  store i8* %arraydecay45, i8** %arrayidx48, align 8, !dbg !2829
  %46 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !2830
  %next49 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %46, i32 0, i32 0, !dbg !2831
  %47 = load %struct.bSensor*, %struct.bSensor** %next49, align 8, !dbg !2831
  store %struct.bSensor* %47, %struct.bSensor** %sens, align 8, !dbg !2832
  br label %while.cond41, !dbg !2822, !llvm.loop !2833

while.end50:                                      ; preds = %while.cond41
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2835
  %controllers51 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 93, !dbg !2836
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers51, i32 0, i32 0, !dbg !2837
  %49 = load i8*, i8** %first52, align 8, !dbg !2837
  %50 = bitcast i8* %49 to %struct.bController*, !dbg !2835
  store %struct.bController* %50, %struct.bController** %cont, align 8, !dbg !2838
  br label %while.cond53, !dbg !2839

while.cond53:                                     ; preds = %while.body55, %while.end50
  %51 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !2840
  %tobool54 = icmp ne %struct.bController* %51, null, !dbg !2839
  br i1 %tobool54, label %while.body55, label %while.end62, !dbg !2839

while.body55:                                     ; preds = %while.cond53
  %52 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !2841
  %name56 = getelementptr inbounds %struct.bController, %struct.bController* %52, i32 0, i32 11, !dbg !2843
  %arraydecay57 = getelementptr inbounds [64 x i8], [64 x i8]* %name56, i64 0, i64 0, !dbg !2841
  %53 = load i8**, i8*** %names, align 8, !dbg !2844
  %54 = load i16, i16* %nr, align 2, !dbg !2845
  %inc58 = add i16 %54, 1, !dbg !2845
  store i16 %inc58, i16* %nr, align 2, !dbg !2845
  %idxprom59 = sext i16 %54 to i64, !dbg !2844
  %arrayidx60 = getelementptr inbounds i8*, i8** %53, i64 %idxprom59, !dbg !2844
  store i8* %arraydecay57, i8** %arrayidx60, align 8, !dbg !2846
  %55 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !2847
  %next61 = getelementptr inbounds %struct.bController, %struct.bController* %55, i32 0, i32 0, !dbg !2848
  %56 = load %struct.bController*, %struct.bController** %next61, align 8, !dbg !2848
  store %struct.bController* %56, %struct.bController** %cont, align 8, !dbg !2849
  br label %while.cond53, !dbg !2839, !llvm.loop !2850

while.end62:                                      ; preds = %while.cond53
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2852
  %actuators63 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 94, !dbg !2853
  %first64 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators63, i32 0, i32 0, !dbg !2854
  %58 = load i8*, i8** %first64, align 8, !dbg !2854
  %59 = bitcast i8* %58 to %struct.bActuator*, !dbg !2852
  store %struct.bActuator* %59, %struct.bActuator** %act, align 8, !dbg !2855
  br label %while.cond65, !dbg !2856

while.cond65:                                     ; preds = %while.body67, %while.end62
  %60 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !2857
  %tobool66 = icmp ne %struct.bActuator* %60, null, !dbg !2856
  br i1 %tobool66, label %while.body67, label %while.end74, !dbg !2856

while.body67:                                     ; preds = %while.cond65
  %61 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !2858
  %name68 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %61, i32 0, i32 7, !dbg !2860
  %arraydecay69 = getelementptr inbounds [64 x i8], [64 x i8]* %name68, i64 0, i64 0, !dbg !2858
  %62 = load i8**, i8*** %names, align 8, !dbg !2861
  %63 = load i16, i16* %nr, align 2, !dbg !2862
  %inc70 = add i16 %63, 1, !dbg !2862
  store i16 %inc70, i16* %nr, align 2, !dbg !2862
  %idxprom71 = sext i16 %63 to i64, !dbg !2861
  %arrayidx72 = getelementptr inbounds i8*, i8** %62, i64 %idxprom71, !dbg !2861
  store i8* %arraydecay69, i8** %arrayidx72, align 8, !dbg !2863
  %64 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !2864
  %next73 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %64, i32 0, i32 0, !dbg !2865
  %65 = load %struct.bActuator*, %struct.bActuator** %next73, align 8, !dbg !2865
  store %struct.bActuator* %65, %struct.bActuator** %act, align 8, !dbg !2866
  br label %while.cond65, !dbg !2856, !llvm.loop !2867

while.end74:                                      ; preds = %while.cond65
  br label %for.inc75, !dbg !2869

for.inc75:                                        ; preds = %while.end74
  %66 = load i16, i16* %a, align 2, !dbg !2870
  %inc76 = add i16 %66, 1, !dbg !2870
  store i16 %inc76, i16* %a, align 2, !dbg !2870
  br label %for.cond26, !dbg !2871, !llvm.loop !2872

for.end77:                                        ; preds = %for.cond26
  %67 = load i8**, i8*** %names, align 8, !dbg !2874
  %68 = bitcast i8** %67 to i8*, !dbg !2874
  %69 = load i16, i16* %propcount, align 2, !dbg !2875
  %conv78 = sext i16 %69 to i64, !dbg !2875
  call void @qsort(i8* %68, i64 %conv78, i64 8, i32 (i8*, i8*)* @vergname), !dbg !2876
  store i16 0, i16* %nr, align 2, !dbg !2877
  br label %for.cond79, !dbg !2879

for.cond79:                                       ; preds = %for.inc96, %for.end77
  %70 = load i16, i16* %nr, align 2, !dbg !2880
  %conv80 = sext i16 %70 to i32, !dbg !2880
  %71 = load i16, i16* %propcount, align 2, !dbg !2882
  %conv81 = sext i16 %71 to i32, !dbg !2882
  %cmp82 = icmp slt i32 %conv80, %conv81, !dbg !2883
  br i1 %cmp82, label %for.body84, label %for.end98, !dbg !2884

for.body84:                                       ; preds = %for.cond79
  %72 = load i8**, i8*** %names, align 8, !dbg !2885
  %73 = load i16, i16* %nr, align 2, !dbg !2888
  %idxprom85 = sext i16 %73 to i64, !dbg !2885
  %arrayidx86 = getelementptr inbounds i8*, i8** %72, i64 %idxprom85, !dbg !2885
  %74 = load i8*, i8** %arrayidx86, align 8, !dbg !2885
  %75 = load i8*, i8** %str.addr, align 8, !dbg !2889
  %cmp87 = icmp ne i8* %74, %75, !dbg !2890
  br i1 %cmp87, label %land.lhs.true, label %if.end95, !dbg !2891

land.lhs.true:                                    ; preds = %for.body84
  %76 = load i8**, i8*** %names, align 8, !dbg !2892
  %77 = load i16, i16* %nr, align 2, !dbg !2893
  %idxprom89 = sext i16 %77 to i64, !dbg !2892
  %arrayidx90 = getelementptr inbounds i8*, i8** %76, i64 %idxprom89, !dbg !2892
  %78 = load i8*, i8** %arrayidx90, align 8, !dbg !2892
  %79 = load i8*, i8** %str.addr, align 8, !dbg !2894
  %call91 = call i32 @strcmp(i8* %78, i8* %79) #4, !dbg !2895
  %cmp92 = icmp eq i32 %call91, 0, !dbg !2896
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !2897

if.then94:                                        ; preds = %land.lhs.true
  %80 = load i8*, i8** %str.addr, align 8, !dbg !2898
  call void @BLI_newname(i8* %80, i32 1), !dbg !2900
  br label %if.end95, !dbg !2901

if.end95:                                         ; preds = %if.then94, %land.lhs.true, %for.body84
  br label %for.inc96, !dbg !2902

for.inc96:                                        ; preds = %if.end95
  %81 = load i16, i16* %nr, align 2, !dbg !2903
  %inc97 = add i16 %81, 1, !dbg !2903
  store i16 %inc97, i16* %nr, align 2, !dbg !2903
  br label %for.cond79, !dbg !2904, !llvm.loop !2905

for.end98:                                        ; preds = %for.cond79
  %82 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2907
  %83 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !2908
  %84 = bitcast %struct.ID** %83 to i8*, !dbg !2908
  call void %82(i8* %84), !dbg !2907
  %85 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2909
  %86 = load i8**, i8*** %names, align 8, !dbg !2910
  %87 = bitcast i8** %86 to i8*, !dbg !2910
  call void %85(i8* %87), !dbg !2909
  br label %return, !dbg !2911

return:                                           ; preds = %for.end98, %if.end
  ret void, !dbg !2911
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %C, i16* %count, i16 signext %scavisflag) #0 !dbg !2912 {
entry:
  %retval = alloca %struct.ID**, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %count.addr = alloca i16*, align 8
  %scavisflag.addr = alloca i16, align 2
  %base = alloca %struct.Base*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %obt = alloca %struct.Object*, align 8
  %obact = alloca %struct.Object*, align 8
  %idar = alloca %struct.ID**, align 8
  %sens = alloca %struct.bSensor*, align 8
  %cont = alloca %struct.bController*, align 8
  %lay = alloca i32, align 4
  %a = alloca i32, align 4
  %nr = alloca i32, align 4
  %do_it = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2916, metadata !DIExpression()), !dbg !2917
  store i16* %count, i16** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %count.addr, metadata !2918, metadata !DIExpression()), !dbg !2919
  store i16 %scavisflag, i16* %scavisflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %scavisflag.addr, metadata !2920, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !2922, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2926, metadata !DIExpression()), !dbg !2988
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2989
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !2990
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !2988
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2991, metadata !DIExpression()), !dbg !2994
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2995
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !2996
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !2994
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2997, metadata !DIExpression()), !dbg !2998
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !2999, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !3001, metadata !DIExpression()), !dbg !3002
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3003
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !3004
  store %struct.Object* %call2, %struct.Object** %obact, align 8, !dbg !3002
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !3005, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !3007, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !3009, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !3011, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3013, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3015, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %do_it, metadata !3017, metadata !DIExpression()), !dbg !3018
  %3 = load i16*, i16** %count.addr, align 8, !dbg !3019
  store i16 0, i16* %3, align 2, !dbg !3020
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3021
  %cmp = icmp eq %struct.Scene* %4, null, !dbg !3023
  br i1 %cmp, label %if.then, label %if.end, !dbg !3024

if.then:                                          ; preds = %entry
  store %struct.ID** null, %struct.ID*** %retval, align 8, !dbg !3025
  br label %return, !dbg !3025

if.end:                                           ; preds = %entry
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3026
  %object = getelementptr inbounds %struct.Main, %struct.Main* %5, i32 0, i32 13, !dbg !3027
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !3028
  %6 = load i8*, i8** %first, align 8, !dbg !3028
  %7 = bitcast i8* %6 to %struct.Object*, !dbg !3026
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !3029
  br label %while.cond, !dbg !3030

while.cond:                                       ; preds = %while.body, %if.end
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3031
  %tobool = icmp ne %struct.Object* %8, null, !dbg !3030
  br i1 %tobool, label %while.body, label %while.end, !dbg !3030

while.body:                                       ; preds = %while.cond
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3032
  %scavisflag3 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 62, !dbg !3034
  store i8 0, i8* %scavisflag3, align 2, !dbg !3035
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3036
  call void @set_sca_ob(%struct.Object* %10), !dbg !3037
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3038
  %id = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 0, !dbg !3039
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !3040
  %12 = load i8*, i8** %next, align 8, !dbg !3040
  %13 = bitcast i8* %12 to %struct.Object*, !dbg !3038
  store %struct.Object* %13, %struct.Object** %ob, align 8, !dbg !3041
  br label %while.cond, !dbg !3030, !llvm.loop !3042

while.end:                                        ; preds = %while.cond
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3044
  %lay4 = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 12, !dbg !3045
  %15 = load i32, i32* %lay4, align 8, !dbg !3045
  store i32 %15, i32* %lay, align 4, !dbg !3046
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3047
  %base5 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 5, !dbg !3047
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base5, i32 0, i32 0, !dbg !3047
  %17 = load i8*, i8** %first6, align 8, !dbg !3047
  %18 = bitcast i8* %17 to %struct.Base*, !dbg !3047
  store %struct.Base* %18, %struct.Base** %base, align 8, !dbg !3048
  br label %while.cond7, !dbg !3049

while.cond7:                                      ; preds = %if.end45, %while.end
  %19 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3050
  %tobool8 = icmp ne %struct.Base* %19, null, !dbg !3049
  br i1 %tobool8, label %while.body9, label %while.end47, !dbg !3049

while.body9:                                      ; preds = %while.cond7
  %20 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3051
  %lay10 = getelementptr inbounds %struct.Base, %struct.Base* %20, i32 0, i32 2, !dbg !3054
  %21 = load i32, i32* %lay10, align 8, !dbg !3054
  %22 = load i32, i32* %lay, align 4, !dbg !3055
  %and = and i32 %21, %22, !dbg !3056
  %tobool11 = icmp ne i32 %and, 0, !dbg !3056
  br i1 %tobool11, label %if.then12, label %if.end45, !dbg !3057

if.then12:                                        ; preds = %while.body9
  %23 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3058
  %flag = getelementptr inbounds %struct.Base, %struct.Base* %23, i32 0, i32 4, !dbg !3061
  %24 = load i32, i32* %flag, align 8, !dbg !3061
  %and13 = and i32 %24, 1, !dbg !3062
  %tobool14 = icmp ne i32 %and13, 0, !dbg !3062
  br i1 %tobool14, label %if.then15, label %if.end44, !dbg !3063

if.then15:                                        ; preds = %if.then12
  %25 = load i16, i16* %scavisflag.addr, align 2, !dbg !3064
  %conv = sext i16 %25 to i32, !dbg !3064
  %and16 = and i32 %conv, 1, !dbg !3067
  %tobool17 = icmp ne i32 %and16, 0, !dbg !3067
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !3068

if.then18:                                        ; preds = %if.then15
  %26 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3069
  %object19 = getelementptr inbounds %struct.Base, %struct.Base* %26, i32 0, i32 7, !dbg !3070
  %27 = load %struct.Object*, %struct.Object** %object19, align 8, !dbg !3070
  %scavisflag20 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 62, !dbg !3071
  %28 = load i8, i8* %scavisflag20, align 2, !dbg !3072
  %conv21 = zext i8 %28 to i32, !dbg !3072
  %or = or i32 %conv21, 1, !dbg !3072
  %conv22 = trunc i32 %or to i8, !dbg !3072
  store i8 %conv22, i8* %scavisflag20, align 2, !dbg !3072
  br label %if.end23, !dbg !3069

if.end23:                                         ; preds = %if.then18, %if.then15
  %29 = load i16, i16* %scavisflag.addr, align 2, !dbg !3073
  %conv24 = sext i16 %29 to i32, !dbg !3073
  %and25 = and i32 %conv24, 8, !dbg !3075
  %tobool26 = icmp ne i32 %and25, 0, !dbg !3075
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !3076

if.then27:                                        ; preds = %if.end23
  %30 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3077
  %object28 = getelementptr inbounds %struct.Base, %struct.Base* %30, i32 0, i32 7, !dbg !3078
  %31 = load %struct.Object*, %struct.Object** %object28, align 8, !dbg !3078
  %scavisflag29 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 62, !dbg !3079
  %32 = load i8, i8* %scavisflag29, align 2, !dbg !3080
  %conv30 = zext i8 %32 to i32, !dbg !3080
  %or31 = or i32 %conv30, 2, !dbg !3080
  %conv32 = trunc i32 %or31 to i8, !dbg !3080
  store i8 %conv32, i8* %scavisflag29, align 2, !dbg !3080
  br label %if.end33, !dbg !3077

if.end33:                                         ; preds = %if.then27, %if.end23
  %33 = load i16, i16* %scavisflag.addr, align 2, !dbg !3081
  %conv34 = sext i16 %33 to i32, !dbg !3081
  %and35 = and i32 %conv34, 64, !dbg !3083
  %tobool36 = icmp ne i32 %and35, 0, !dbg !3083
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !3084

if.then37:                                        ; preds = %if.end33
  %34 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3085
  %object38 = getelementptr inbounds %struct.Base, %struct.Base* %34, i32 0, i32 7, !dbg !3086
  %35 = load %struct.Object*, %struct.Object** %object38, align 8, !dbg !3086
  %scavisflag39 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 62, !dbg !3087
  %36 = load i8, i8* %scavisflag39, align 2, !dbg !3088
  %conv40 = zext i8 %36 to i32, !dbg !3088
  %or41 = or i32 %conv40, 4, !dbg !3088
  %conv42 = trunc i32 %or41 to i8, !dbg !3088
  store i8 %conv42, i8* %scavisflag39, align 2, !dbg !3088
  br label %if.end43, !dbg !3085

if.end43:                                         ; preds = %if.then37, %if.end33
  br label %if.end44, !dbg !3089

if.end44:                                         ; preds = %if.end43, %if.then12
  br label %if.end45, !dbg !3090

if.end45:                                         ; preds = %if.end44, %while.body9
  %37 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3091
  %next46 = getelementptr inbounds %struct.Base, %struct.Base* %37, i32 0, i32 0, !dbg !3092
  %38 = load %struct.Base*, %struct.Base** %next46, align 8, !dbg !3092
  store %struct.Base* %38, %struct.Base** %base, align 8, !dbg !3093
  br label %while.cond7, !dbg !3049, !llvm.loop !3094

while.end47:                                      ; preds = %while.cond7
  %39 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3096
  %tobool48 = icmp ne %struct.Object* %39, null, !dbg !3096
  br i1 %tobool48, label %if.then49, label %if.end77, !dbg !3098

if.then49:                                        ; preds = %while.end47
  %40 = load i16, i16* %scavisflag.addr, align 2, !dbg !3099
  %conv50 = sext i16 %40 to i32, !dbg !3099
  %and51 = and i32 %conv50, 2, !dbg !3102
  %tobool52 = icmp ne i32 %and51, 0, !dbg !3102
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !3103

if.then53:                                        ; preds = %if.then49
  %41 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3104
  %scavisflag54 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 62, !dbg !3105
  %42 = load i8, i8* %scavisflag54, align 2, !dbg !3106
  %conv55 = zext i8 %42 to i32, !dbg !3106
  %or56 = or i32 %conv55, 1, !dbg !3106
  %conv57 = trunc i32 %or56 to i8, !dbg !3106
  store i8 %conv57, i8* %scavisflag54, align 2, !dbg !3106
  br label %if.end58, !dbg !3104

if.end58:                                         ; preds = %if.then53, %if.then49
  %43 = load i16, i16* %scavisflag.addr, align 2, !dbg !3107
  %conv59 = sext i16 %43 to i32, !dbg !3107
  %and60 = and i32 %conv59, 16, !dbg !3109
  %tobool61 = icmp ne i32 %and60, 0, !dbg !3109
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !3110

if.then62:                                        ; preds = %if.end58
  %44 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3111
  %scavisflag63 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 62, !dbg !3112
  %45 = load i8, i8* %scavisflag63, align 2, !dbg !3113
  %conv64 = zext i8 %45 to i32, !dbg !3113
  %or65 = or i32 %conv64, 2, !dbg !3113
  %conv66 = trunc i32 %or65 to i8, !dbg !3113
  store i8 %conv66, i8* %scavisflag63, align 2, !dbg !3113
  br label %if.end67, !dbg !3111

if.end67:                                         ; preds = %if.then62, %if.end58
  %46 = load i16, i16* %scavisflag.addr, align 2, !dbg !3114
  %conv68 = sext i16 %46 to i32, !dbg !3114
  %and69 = and i32 %conv68, 128, !dbg !3116
  %tobool70 = icmp ne i32 %and69, 0, !dbg !3116
  br i1 %tobool70, label %if.then71, label %if.end76, !dbg !3117

if.then71:                                        ; preds = %if.end67
  %47 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3118
  %scavisflag72 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 62, !dbg !3119
  %48 = load i8, i8* %scavisflag72, align 2, !dbg !3120
  %conv73 = zext i8 %48 to i32, !dbg !3120
  %or74 = or i32 %conv73, 4, !dbg !3120
  %conv75 = trunc i32 %or74 to i8, !dbg !3120
  store i8 %conv75, i8* %scavisflag72, align 2, !dbg !3120
  br label %if.end76, !dbg !3118

if.end76:                                         ; preds = %if.then71, %if.end67
  br label %if.end77, !dbg !3121

if.end77:                                         ; preds = %if.end76, %while.end47
  %49 = load i16, i16* %scavisflag.addr, align 2, !dbg !3122
  %conv78 = sext i16 %49 to i32, !dbg !3122
  %and79 = and i32 %conv78, 1828, !dbg !3124
  %tobool80 = icmp ne i32 %and79, 0, !dbg !3124
  br i1 %tobool80, label %if.then81, label %if.end283, !dbg !3125

if.then81:                                        ; preds = %if.end77
  store i32 1, i32* %do_it, align 4, !dbg !3126
  br label %while.cond82, !dbg !3128

while.cond82:                                     ; preds = %while.end281, %if.then81
  %50 = load i32, i32* %do_it, align 4, !dbg !3129
  %tobool83 = icmp ne i32 %50, 0, !dbg !3128
  br i1 %tobool83, label %while.body84, label %while.end282, !dbg !3128

while.body84:                                     ; preds = %while.cond82
  store i32 0, i32* %do_it, align 4, !dbg !3130
  %51 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3132
  %object85 = getelementptr inbounds %struct.Main, %struct.Main* %51, i32 0, i32 13, !dbg !3133
  %first86 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object85, i32 0, i32 0, !dbg !3134
  %52 = load i8*, i8** %first86, align 8, !dbg !3134
  %53 = bitcast i8* %52 to %struct.Object*, !dbg !3132
  store %struct.Object* %53, %struct.Object** %ob, align 8, !dbg !3135
  br label %while.cond87, !dbg !3136

while.cond87:                                     ; preds = %if.end278, %while.body84
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3137
  %tobool88 = icmp ne %struct.Object* %54, null, !dbg !3136
  br i1 %tobool88, label %while.body89, label %while.end281, !dbg !3136

while.body89:                                     ; preds = %while.cond87
  %55 = load i16, i16* %scavisflag.addr, align 2, !dbg !3138
  %conv90 = sext i16 %55 to i32, !dbg !3138
  %and91 = and i32 %conv90, 516, !dbg !3141
  %tobool92 = icmp ne i32 %and91, 0, !dbg !3141
  br i1 %tobool92, label %land.lhs.true, label %if.end129, !dbg !3142

land.lhs.true:                                    ; preds = %while.body89
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3143
  %scavisflag93 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 62, !dbg !3144
  %57 = load i8, i8* %scavisflag93, align 2, !dbg !3144
  %conv94 = zext i8 %57 to i32, !dbg !3143
  %and95 = and i32 %conv94, 1, !dbg !3145
  %cmp96 = icmp eq i32 %and95, 0, !dbg !3146
  br i1 %cmp96, label %if.then98, label %if.end129, !dbg !3147

if.then98:                                        ; preds = %land.lhs.true
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3148
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 92, !dbg !3150
  %first99 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors, i32 0, i32 0, !dbg !3151
  %59 = load i8*, i8** %first99, align 8, !dbg !3151
  %60 = bitcast i8* %59 to %struct.bSensor*, !dbg !3148
  store %struct.bSensor* %60, %struct.bSensor** %sens, align 8, !dbg !3152
  br label %while.cond100, !dbg !3153

while.cond100:                                    ; preds = %if.end126, %if.then98
  %61 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3154
  %tobool101 = icmp ne %struct.bSensor* %61, null, !dbg !3153
  br i1 %tobool101, label %while.body102, label %while.end128, !dbg !3153

while.body102:                                    ; preds = %while.cond100
  store i32 0, i32* %a, align 4, !dbg !3155
  br label %for.cond, !dbg !3158

for.cond:                                         ; preds = %for.inc, %while.body102
  %62 = load i32, i32* %a, align 4, !dbg !3159
  %63 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3161
  %totlinks = getelementptr inbounds %struct.bSensor, %struct.bSensor* %63, i32 0, i32 7, !dbg !3162
  %64 = load i16, i16* %totlinks, align 2, !dbg !3162
  %conv103 = sext i16 %64 to i32, !dbg !3161
  %cmp104 = icmp slt i32 %62, %conv103, !dbg !3163
  br i1 %cmp104, label %for.body, label %for.end, !dbg !3164

for.body:                                         ; preds = %for.cond
  %65 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3165
  %links = getelementptr inbounds %struct.bSensor, %struct.bSensor* %65, i32 0, i32 12, !dbg !3168
  %66 = load %struct.bController**, %struct.bController*** %links, align 8, !dbg !3168
  %67 = load i32, i32* %a, align 4, !dbg !3169
  %idxprom = sext i32 %67 to i64, !dbg !3165
  %arrayidx = getelementptr inbounds %struct.bController*, %struct.bController** %66, i64 %idxprom, !dbg !3165
  %68 = load %struct.bController*, %struct.bController** %arrayidx, align 8, !dbg !3165
  %tobool106 = icmp ne %struct.bController* %68, null, !dbg !3165
  br i1 %tobool106, label %if.then107, label %if.end123, !dbg !3170

if.then107:                                       ; preds = %for.body
  %69 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3171
  %links108 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %69, i32 0, i32 12, !dbg !3173
  %70 = load %struct.bController**, %struct.bController*** %links108, align 8, !dbg !3173
  %71 = load i32, i32* %a, align 4, !dbg !3174
  %idxprom109 = sext i32 %71 to i64, !dbg !3171
  %arrayidx110 = getelementptr inbounds %struct.bController*, %struct.bController** %70, i64 %idxprom109, !dbg !3171
  %72 = load %struct.bController*, %struct.bController** %arrayidx110, align 8, !dbg !3171
  %mynew = getelementptr inbounds %struct.bController, %struct.bController* %72, i32 0, i32 2, !dbg !3175
  %73 = load %struct.bController*, %struct.bController** %mynew, align 8, !dbg !3175
  %74 = bitcast %struct.bController* %73 to %struct.Object*, !dbg !3176
  store %struct.Object* %74, %struct.Object** %obt, align 8, !dbg !3177
  %75 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3178
  %tobool111 = icmp ne %struct.Object* %75, null, !dbg !3178
  br i1 %tobool111, label %land.lhs.true112, label %if.end122, !dbg !3180

land.lhs.true112:                                 ; preds = %if.then107
  %76 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3181
  %scavisflag113 = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 62, !dbg !3182
  %77 = load i8, i8* %scavisflag113, align 2, !dbg !3182
  %conv114 = zext i8 %77 to i32, !dbg !3181
  %and115 = and i32 %conv114, 2, !dbg !3183
  %tobool116 = icmp ne i32 %and115, 0, !dbg !3183
  br i1 %tobool116, label %if.then117, label %if.end122, !dbg !3184

if.then117:                                       ; preds = %land.lhs.true112
  store i32 1, i32* %do_it, align 4, !dbg !3185
  %78 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3187
  %scavisflag118 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 62, !dbg !3188
  %79 = load i8, i8* %scavisflag118, align 2, !dbg !3189
  %conv119 = zext i8 %79 to i32, !dbg !3189
  %or120 = or i32 %conv119, 1, !dbg !3189
  %conv121 = trunc i32 %or120 to i8, !dbg !3189
  store i8 %conv121, i8* %scavisflag118, align 2, !dbg !3189
  br label %for.end, !dbg !3190

if.end122:                                        ; preds = %land.lhs.true112, %if.then107
  br label %if.end123, !dbg !3191

if.end123:                                        ; preds = %if.end122, %for.body
  br label %for.inc, !dbg !3192

for.inc:                                          ; preds = %if.end123
  %80 = load i32, i32* %a, align 4, !dbg !3193
  %inc = add nsw i32 %80, 1, !dbg !3193
  store i32 %inc, i32* %a, align 4, !dbg !3193
  br label %for.cond, !dbg !3194, !llvm.loop !3195

for.end:                                          ; preds = %if.then117, %for.cond
  %81 = load i32, i32* %do_it, align 4, !dbg !3197
  %tobool124 = icmp ne i32 %81, 0, !dbg !3197
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !3199

if.then125:                                       ; preds = %for.end
  br label %while.end128, !dbg !3200

if.end126:                                        ; preds = %for.end
  %82 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3201
  %next127 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %82, i32 0, i32 0, !dbg !3202
  %83 = load %struct.bSensor*, %struct.bSensor** %next127, align 8, !dbg !3202
  store %struct.bSensor* %83, %struct.bSensor** %sens, align 8, !dbg !3203
  br label %while.cond100, !dbg !3153, !llvm.loop !3204

while.end128:                                     ; preds = %if.then125, %while.cond100
  br label %if.end129, !dbg !3206

if.end129:                                        ; preds = %while.end128, %land.lhs.true, %while.body89
  %84 = load i16, i16* %scavisflag.addr, align 2, !dbg !3207
  %conv130 = sext i16 %84 to i32, !dbg !3207
  %and131 = and i32 %conv130, 32, !dbg !3209
  %tobool132 = icmp ne i32 %and131, 0, !dbg !3209
  br i1 %tobool132, label %land.lhs.true133, label %if.end180, !dbg !3210

land.lhs.true133:                                 ; preds = %if.end129
  %85 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3211
  %scavisflag134 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 62, !dbg !3212
  %86 = load i8, i8* %scavisflag134, align 2, !dbg !3212
  %conv135 = zext i8 %86 to i32, !dbg !3211
  %and136 = and i32 %conv135, 2, !dbg !3213
  %cmp137 = icmp eq i32 %and136, 0, !dbg !3214
  br i1 %cmp137, label %if.then139, label %if.end180, !dbg !3215

if.then139:                                       ; preds = %land.lhs.true133
  %87 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3216
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 93, !dbg !3218
  %first140 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers, i32 0, i32 0, !dbg !3219
  %88 = load i8*, i8** %first140, align 8, !dbg !3219
  %89 = bitcast i8* %88 to %struct.bController*, !dbg !3216
  store %struct.bController* %89, %struct.bController** %cont, align 8, !dbg !3220
  br label %while.cond141, !dbg !3221

while.cond141:                                    ; preds = %if.end177, %if.then139
  %90 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3222
  %tobool142 = icmp ne %struct.bController* %90, null, !dbg !3221
  br i1 %tobool142, label %while.body143, label %while.end179, !dbg !3221

while.body143:                                    ; preds = %while.cond141
  store i32 0, i32* %a, align 4, !dbg !3223
  br label %for.cond144, !dbg !3226

for.cond144:                                      ; preds = %for.inc172, %while.body143
  %91 = load i32, i32* %a, align 4, !dbg !3227
  %92 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3229
  %totlinks145 = getelementptr inbounds %struct.bController, %struct.bController* %92, i32 0, i32 6, !dbg !3230
  %93 = load i16, i16* %totlinks145, align 2, !dbg !3230
  %conv146 = sext i16 %93 to i32, !dbg !3229
  %cmp147 = icmp slt i32 %91, %conv146, !dbg !3231
  br i1 %cmp147, label %for.body149, label %for.end174, !dbg !3232

for.body149:                                      ; preds = %for.cond144
  %94 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3233
  %links150 = getelementptr inbounds %struct.bController, %struct.bController* %94, i32 0, i32 13, !dbg !3236
  %95 = load %struct.bActuator**, %struct.bActuator*** %links150, align 8, !dbg !3236
  %96 = load i32, i32* %a, align 4, !dbg !3237
  %idxprom151 = sext i32 %96 to i64, !dbg !3233
  %arrayidx152 = getelementptr inbounds %struct.bActuator*, %struct.bActuator** %95, i64 %idxprom151, !dbg !3233
  %97 = load %struct.bActuator*, %struct.bActuator** %arrayidx152, align 8, !dbg !3233
  %tobool153 = icmp ne %struct.bActuator* %97, null, !dbg !3233
  br i1 %tobool153, label %if.then154, label %if.end171, !dbg !3238

if.then154:                                       ; preds = %for.body149
  %98 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3239
  %links155 = getelementptr inbounds %struct.bController, %struct.bController* %98, i32 0, i32 13, !dbg !3241
  %99 = load %struct.bActuator**, %struct.bActuator*** %links155, align 8, !dbg !3241
  %100 = load i32, i32* %a, align 4, !dbg !3242
  %idxprom156 = sext i32 %100 to i64, !dbg !3239
  %arrayidx157 = getelementptr inbounds %struct.bActuator*, %struct.bActuator** %99, i64 %idxprom156, !dbg !3239
  %101 = load %struct.bActuator*, %struct.bActuator** %arrayidx157, align 8, !dbg !3239
  %mynew158 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %101, i32 0, i32 2, !dbg !3243
  %102 = load %struct.bActuator*, %struct.bActuator** %mynew158, align 8, !dbg !3243
  %103 = bitcast %struct.bActuator* %102 to %struct.Object*, !dbg !3244
  store %struct.Object* %103, %struct.Object** %obt, align 8, !dbg !3245
  %104 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3246
  %tobool159 = icmp ne %struct.Object* %104, null, !dbg !3246
  br i1 %tobool159, label %land.lhs.true160, label %if.end170, !dbg !3248

land.lhs.true160:                                 ; preds = %if.then154
  %105 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3249
  %scavisflag161 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 62, !dbg !3250
  %106 = load i8, i8* %scavisflag161, align 2, !dbg !3250
  %conv162 = zext i8 %106 to i32, !dbg !3249
  %and163 = and i32 %conv162, 4, !dbg !3251
  %tobool164 = icmp ne i32 %and163, 0, !dbg !3251
  br i1 %tobool164, label %if.then165, label %if.end170, !dbg !3252

if.then165:                                       ; preds = %land.lhs.true160
  store i32 1, i32* %do_it, align 4, !dbg !3253
  %107 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3255
  %scavisflag166 = getelementptr inbounds %struct.Object, %struct.Object* %107, i32 0, i32 62, !dbg !3256
  %108 = load i8, i8* %scavisflag166, align 2, !dbg !3257
  %conv167 = zext i8 %108 to i32, !dbg !3257
  %or168 = or i32 %conv167, 2, !dbg !3257
  %conv169 = trunc i32 %or168 to i8, !dbg !3257
  store i8 %conv169, i8* %scavisflag166, align 2, !dbg !3257
  br label %for.end174, !dbg !3258

if.end170:                                        ; preds = %land.lhs.true160, %if.then154
  br label %if.end171, !dbg !3259

if.end171:                                        ; preds = %if.end170, %for.body149
  br label %for.inc172, !dbg !3260

for.inc172:                                       ; preds = %if.end171
  %109 = load i32, i32* %a, align 4, !dbg !3261
  %inc173 = add nsw i32 %109, 1, !dbg !3261
  store i32 %inc173, i32* %a, align 4, !dbg !3261
  br label %for.cond144, !dbg !3262, !llvm.loop !3263

for.end174:                                       ; preds = %if.then165, %for.cond144
  %110 = load i32, i32* %do_it, align 4, !dbg !3265
  %tobool175 = icmp ne i32 %110, 0, !dbg !3265
  br i1 %tobool175, label %if.then176, label %if.end177, !dbg !3267

if.then176:                                       ; preds = %for.end174
  br label %while.end179, !dbg !3268

if.end177:                                        ; preds = %for.end174
  %111 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3269
  %next178 = getelementptr inbounds %struct.bController, %struct.bController* %111, i32 0, i32 0, !dbg !3270
  %112 = load %struct.bController*, %struct.bController** %next178, align 8, !dbg !3270
  store %struct.bController* %112, %struct.bController** %cont, align 8, !dbg !3271
  br label %while.cond141, !dbg !3221, !llvm.loop !3272

while.end179:                                     ; preds = %if.then176, %while.cond141
  br label %if.end180, !dbg !3274

if.end180:                                        ; preds = %while.end179, %land.lhs.true133, %if.end129
  %113 = load i16, i16* %scavisflag.addr, align 2, !dbg !3275
  %conv181 = sext i16 %113 to i32, !dbg !3275
  %and182 = and i32 %conv181, 32, !dbg !3277
  %tobool183 = icmp ne i32 %and182, 0, !dbg !3277
  br i1 %tobool183, label %land.lhs.true184, label %if.end229, !dbg !3278

land.lhs.true184:                                 ; preds = %if.end180
  %114 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3279
  %scavisflag185 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 62, !dbg !3280
  %115 = load i8, i8* %scavisflag185, align 2, !dbg !3280
  %conv186 = zext i8 %115 to i32, !dbg !3279
  %and187 = and i32 %conv186, 1, !dbg !3281
  %tobool188 = icmp ne i32 %and187, 0, !dbg !3281
  br i1 %tobool188, label %if.then189, label %if.end229, !dbg !3282

if.then189:                                       ; preds = %land.lhs.true184
  %116 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3283
  %sensors190 = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 92, !dbg !3285
  %first191 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors190, i32 0, i32 0, !dbg !3286
  %117 = load i8*, i8** %first191, align 8, !dbg !3286
  %118 = bitcast i8* %117 to %struct.bSensor*, !dbg !3283
  store %struct.bSensor* %118, %struct.bSensor** %sens, align 8, !dbg !3287
  br label %while.cond192, !dbg !3288

while.cond192:                                    ; preds = %for.end226, %if.then189
  %119 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3289
  %tobool193 = icmp ne %struct.bSensor* %119, null, !dbg !3288
  br i1 %tobool193, label %while.body194, label %while.end228, !dbg !3288

while.body194:                                    ; preds = %while.cond192
  store i32 0, i32* %a, align 4, !dbg !3290
  br label %for.cond195, !dbg !3293

for.cond195:                                      ; preds = %for.inc224, %while.body194
  %120 = load i32, i32* %a, align 4, !dbg !3294
  %121 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3296
  %totlinks196 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %121, i32 0, i32 7, !dbg !3297
  %122 = load i16, i16* %totlinks196, align 2, !dbg !3297
  %conv197 = sext i16 %122 to i32, !dbg !3296
  %cmp198 = icmp slt i32 %120, %conv197, !dbg !3298
  br i1 %cmp198, label %for.body200, label %for.end226, !dbg !3299

for.body200:                                      ; preds = %for.cond195
  %123 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3300
  %links201 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %123, i32 0, i32 12, !dbg !3303
  %124 = load %struct.bController**, %struct.bController*** %links201, align 8, !dbg !3303
  %125 = load i32, i32* %a, align 4, !dbg !3304
  %idxprom202 = sext i32 %125 to i64, !dbg !3300
  %arrayidx203 = getelementptr inbounds %struct.bController*, %struct.bController** %124, i64 %idxprom202, !dbg !3300
  %126 = load %struct.bController*, %struct.bController** %arrayidx203, align 8, !dbg !3300
  %tobool204 = icmp ne %struct.bController* %126, null, !dbg !3300
  br i1 %tobool204, label %if.then205, label %if.end223, !dbg !3305

if.then205:                                       ; preds = %for.body200
  %127 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3306
  %links206 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %127, i32 0, i32 12, !dbg !3308
  %128 = load %struct.bController**, %struct.bController*** %links206, align 8, !dbg !3308
  %129 = load i32, i32* %a, align 4, !dbg !3309
  %idxprom207 = sext i32 %129 to i64, !dbg !3306
  %arrayidx208 = getelementptr inbounds %struct.bController*, %struct.bController** %128, i64 %idxprom207, !dbg !3306
  %130 = load %struct.bController*, %struct.bController** %arrayidx208, align 8, !dbg !3306
  %mynew209 = getelementptr inbounds %struct.bController, %struct.bController* %130, i32 0, i32 2, !dbg !3310
  %131 = load %struct.bController*, %struct.bController** %mynew209, align 8, !dbg !3310
  %132 = bitcast %struct.bController* %131 to %struct.Object*, !dbg !3311
  store %struct.Object* %132, %struct.Object** %obt, align 8, !dbg !3312
  %133 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3313
  %tobool210 = icmp ne %struct.Object* %133, null, !dbg !3313
  br i1 %tobool210, label %land.lhs.true211, label %if.end222, !dbg !3315

land.lhs.true211:                                 ; preds = %if.then205
  %134 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3316
  %scavisflag212 = getelementptr inbounds %struct.Object, %struct.Object* %134, i32 0, i32 62, !dbg !3317
  %135 = load i8, i8* %scavisflag212, align 2, !dbg !3317
  %conv213 = zext i8 %135 to i32, !dbg !3316
  %and214 = and i32 %conv213, 2, !dbg !3318
  %cmp215 = icmp eq i32 %and214, 0, !dbg !3319
  br i1 %cmp215, label %if.then217, label %if.end222, !dbg !3320

if.then217:                                       ; preds = %land.lhs.true211
  store i32 1, i32* %do_it, align 4, !dbg !3321
  %136 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3323
  %scavisflag218 = getelementptr inbounds %struct.Object, %struct.Object* %136, i32 0, i32 62, !dbg !3324
  %137 = load i8, i8* %scavisflag218, align 2, !dbg !3325
  %conv219 = zext i8 %137 to i32, !dbg !3325
  %or220 = or i32 %conv219, 2, !dbg !3325
  %conv221 = trunc i32 %or220 to i8, !dbg !3325
  store i8 %conv221, i8* %scavisflag218, align 2, !dbg !3325
  br label %if.end222, !dbg !3326

if.end222:                                        ; preds = %if.then217, %land.lhs.true211, %if.then205
  br label %if.end223, !dbg !3327

if.end223:                                        ; preds = %if.end222, %for.body200
  br label %for.inc224, !dbg !3328

for.inc224:                                       ; preds = %if.end223
  %138 = load i32, i32* %a, align 4, !dbg !3329
  %inc225 = add nsw i32 %138, 1, !dbg !3329
  store i32 %inc225, i32* %a, align 4, !dbg !3329
  br label %for.cond195, !dbg !3330, !llvm.loop !3331

for.end226:                                       ; preds = %for.cond195
  %139 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !3333
  %next227 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %139, i32 0, i32 0, !dbg !3334
  %140 = load %struct.bSensor*, %struct.bSensor** %next227, align 8, !dbg !3334
  store %struct.bSensor* %140, %struct.bSensor** %sens, align 8, !dbg !3335
  br label %while.cond192, !dbg !3288, !llvm.loop !3336

while.end228:                                     ; preds = %while.cond192
  br label %if.end229, !dbg !3338

if.end229:                                        ; preds = %while.end228, %land.lhs.true184, %if.end180
  %141 = load i16, i16* %scavisflag.addr, align 2, !dbg !3339
  %conv230 = sext i16 %141 to i32, !dbg !3339
  %and231 = and i32 %conv230, 1280, !dbg !3341
  %tobool232 = icmp ne i32 %and231, 0, !dbg !3341
  br i1 %tobool232, label %land.lhs.true233, label %if.end278, !dbg !3342

land.lhs.true233:                                 ; preds = %if.end229
  %142 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3343
  %scavisflag234 = getelementptr inbounds %struct.Object, %struct.Object* %142, i32 0, i32 62, !dbg !3344
  %143 = load i8, i8* %scavisflag234, align 2, !dbg !3344
  %conv235 = zext i8 %143 to i32, !dbg !3343
  %and236 = and i32 %conv235, 2, !dbg !3345
  %tobool237 = icmp ne i32 %and236, 0, !dbg !3345
  br i1 %tobool237, label %if.then238, label %if.end278, !dbg !3346

if.then238:                                       ; preds = %land.lhs.true233
  %144 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3347
  %controllers239 = getelementptr inbounds %struct.Object, %struct.Object* %144, i32 0, i32 93, !dbg !3349
  %first240 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers239, i32 0, i32 0, !dbg !3350
  %145 = load i8*, i8** %first240, align 8, !dbg !3350
  %146 = bitcast i8* %145 to %struct.bController*, !dbg !3347
  store %struct.bController* %146, %struct.bController** %cont, align 8, !dbg !3351
  br label %while.cond241, !dbg !3352

while.cond241:                                    ; preds = %for.end275, %if.then238
  %147 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3353
  %tobool242 = icmp ne %struct.bController* %147, null, !dbg !3352
  br i1 %tobool242, label %while.body243, label %while.end277, !dbg !3352

while.body243:                                    ; preds = %while.cond241
  store i32 0, i32* %a, align 4, !dbg !3354
  br label %for.cond244, !dbg !3357

for.cond244:                                      ; preds = %for.inc273, %while.body243
  %148 = load i32, i32* %a, align 4, !dbg !3358
  %149 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3360
  %totlinks245 = getelementptr inbounds %struct.bController, %struct.bController* %149, i32 0, i32 6, !dbg !3361
  %150 = load i16, i16* %totlinks245, align 2, !dbg !3361
  %conv246 = sext i16 %150 to i32, !dbg !3360
  %cmp247 = icmp slt i32 %148, %conv246, !dbg !3362
  br i1 %cmp247, label %for.body249, label %for.end275, !dbg !3363

for.body249:                                      ; preds = %for.cond244
  %151 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3364
  %links250 = getelementptr inbounds %struct.bController, %struct.bController* %151, i32 0, i32 13, !dbg !3367
  %152 = load %struct.bActuator**, %struct.bActuator*** %links250, align 8, !dbg !3367
  %153 = load i32, i32* %a, align 4, !dbg !3368
  %idxprom251 = sext i32 %153 to i64, !dbg !3364
  %arrayidx252 = getelementptr inbounds %struct.bActuator*, %struct.bActuator** %152, i64 %idxprom251, !dbg !3364
  %154 = load %struct.bActuator*, %struct.bActuator** %arrayidx252, align 8, !dbg !3364
  %tobool253 = icmp ne %struct.bActuator* %154, null, !dbg !3364
  br i1 %tobool253, label %if.then254, label %if.end272, !dbg !3369

if.then254:                                       ; preds = %for.body249
  %155 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3370
  %links255 = getelementptr inbounds %struct.bController, %struct.bController* %155, i32 0, i32 13, !dbg !3372
  %156 = load %struct.bActuator**, %struct.bActuator*** %links255, align 8, !dbg !3372
  %157 = load i32, i32* %a, align 4, !dbg !3373
  %idxprom256 = sext i32 %157 to i64, !dbg !3370
  %arrayidx257 = getelementptr inbounds %struct.bActuator*, %struct.bActuator** %156, i64 %idxprom256, !dbg !3370
  %158 = load %struct.bActuator*, %struct.bActuator** %arrayidx257, align 8, !dbg !3370
  %mynew258 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %158, i32 0, i32 2, !dbg !3374
  %159 = load %struct.bActuator*, %struct.bActuator** %mynew258, align 8, !dbg !3374
  %160 = bitcast %struct.bActuator* %159 to %struct.Object*, !dbg !3375
  store %struct.Object* %160, %struct.Object** %obt, align 8, !dbg !3376
  %161 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3377
  %tobool259 = icmp ne %struct.Object* %161, null, !dbg !3377
  br i1 %tobool259, label %land.lhs.true260, label %if.end271, !dbg !3379

land.lhs.true260:                                 ; preds = %if.then254
  %162 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3380
  %scavisflag261 = getelementptr inbounds %struct.Object, %struct.Object* %162, i32 0, i32 62, !dbg !3381
  %163 = load i8, i8* %scavisflag261, align 2, !dbg !3381
  %conv262 = zext i8 %163 to i32, !dbg !3380
  %and263 = and i32 %conv262, 4, !dbg !3382
  %cmp264 = icmp eq i32 %and263, 0, !dbg !3383
  br i1 %cmp264, label %if.then266, label %if.end271, !dbg !3384

if.then266:                                       ; preds = %land.lhs.true260
  store i32 1, i32* %do_it, align 4, !dbg !3385
  %164 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !3387
  %scavisflag267 = getelementptr inbounds %struct.Object, %struct.Object* %164, i32 0, i32 62, !dbg !3388
  %165 = load i8, i8* %scavisflag267, align 2, !dbg !3389
  %conv268 = zext i8 %165 to i32, !dbg !3389
  %or269 = or i32 %conv268, 4, !dbg !3389
  %conv270 = trunc i32 %or269 to i8, !dbg !3389
  store i8 %conv270, i8* %scavisflag267, align 2, !dbg !3389
  br label %if.end271, !dbg !3390

if.end271:                                        ; preds = %if.then266, %land.lhs.true260, %if.then254
  br label %if.end272, !dbg !3391

if.end272:                                        ; preds = %if.end271, %for.body249
  br label %for.inc273, !dbg !3392

for.inc273:                                       ; preds = %if.end272
  %166 = load i32, i32* %a, align 4, !dbg !3393
  %inc274 = add nsw i32 %166, 1, !dbg !3393
  store i32 %inc274, i32* %a, align 4, !dbg !3393
  br label %for.cond244, !dbg !3394, !llvm.loop !3395

for.end275:                                       ; preds = %for.cond244
  %167 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3397
  %next276 = getelementptr inbounds %struct.bController, %struct.bController* %167, i32 0, i32 0, !dbg !3398
  %168 = load %struct.bController*, %struct.bController** %next276, align 8, !dbg !3398
  store %struct.bController* %168, %struct.bController** %cont, align 8, !dbg !3399
  br label %while.cond241, !dbg !3352, !llvm.loop !3400

while.end277:                                     ; preds = %while.cond241
  br label %if.end278, !dbg !3402

if.end278:                                        ; preds = %while.end277, %land.lhs.true233, %if.end229
  %169 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3403
  %id279 = getelementptr inbounds %struct.Object, %struct.Object* %169, i32 0, i32 0, !dbg !3404
  %next280 = getelementptr inbounds %struct.ID, %struct.ID* %id279, i32 0, i32 0, !dbg !3405
  %170 = load i8*, i8** %next280, align 8, !dbg !3405
  %171 = bitcast i8* %170 to %struct.Object*, !dbg !3403
  store %struct.Object* %171, %struct.Object** %ob, align 8, !dbg !3406
  br label %while.cond87, !dbg !3136, !llvm.loop !3407

while.end281:                                     ; preds = %while.cond87
  br label %while.cond82, !dbg !3128, !llvm.loop !3409

while.end282:                                     ; preds = %while.cond82
  br label %if.end283, !dbg !3411

if.end283:                                        ; preds = %while.end282, %if.end77
  %172 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3412
  %object284 = getelementptr inbounds %struct.Main, %struct.Main* %172, i32 0, i32 13, !dbg !3413
  %first285 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object284, i32 0, i32 0, !dbg !3414
  %173 = load i8*, i8** %first285, align 8, !dbg !3414
  %174 = bitcast i8* %173 to %struct.Object*, !dbg !3412
  store %struct.Object* %174, %struct.Object** %ob, align 8, !dbg !3415
  br label %while.cond286, !dbg !3416

while.cond286:                                    ; preds = %if.end293, %if.end283
  %175 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3417
  %tobool287 = icmp ne %struct.Object* %175, null, !dbg !3416
  br i1 %tobool287, label %while.body288, label %while.end296, !dbg !3416

while.body288:                                    ; preds = %while.cond286
  %176 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3418
  %scavisflag289 = getelementptr inbounds %struct.Object, %struct.Object* %176, i32 0, i32 62, !dbg !3421
  %177 = load i8, i8* %scavisflag289, align 2, !dbg !3421
  %tobool290 = icmp ne i8 %177, 0, !dbg !3418
  br i1 %tobool290, label %if.then291, label %if.end293, !dbg !3422

if.then291:                                       ; preds = %while.body288
  %178 = load i16*, i16** %count.addr, align 8, !dbg !3423
  %179 = load i16, i16* %178, align 2, !dbg !3424
  %inc292 = add i16 %179, 1, !dbg !3424
  store i16 %inc292, i16* %178, align 2, !dbg !3424
  br label %if.end293, !dbg !3425

if.end293:                                        ; preds = %if.then291, %while.body288
  %180 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3426
  %id294 = getelementptr inbounds %struct.Object, %struct.Object* %180, i32 0, i32 0, !dbg !3427
  %next295 = getelementptr inbounds %struct.ID, %struct.ID* %id294, i32 0, i32 0, !dbg !3428
  %181 = load i8*, i8** %next295, align 8, !dbg !3428
  %182 = bitcast i8* %181 to %struct.Object*, !dbg !3426
  store %struct.Object* %182, %struct.Object** %ob, align 8, !dbg !3429
  br label %while.cond286, !dbg !3416, !llvm.loop !3430

while.end296:                                     ; preds = %while.cond286
  %183 = load i16*, i16** %count.addr, align 8, !dbg !3432
  %184 = load i16, i16* %183, align 2, !dbg !3434
  %conv297 = sext i16 %184 to i32, !dbg !3434
  %cmp298 = icmp eq i32 %conv297, 0, !dbg !3435
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !3436

if.then300:                                       ; preds = %while.end296
  store %struct.ID** null, %struct.ID*** %retval, align 8, !dbg !3437
  br label %return, !dbg !3437

if.end301:                                        ; preds = %while.end296
  %185 = load i16*, i16** %count.addr, align 8, !dbg !3438
  %186 = load i16, i16* %185, align 2, !dbg !3440
  %conv302 = sext i16 %186 to i32, !dbg !3440
  %cmp303 = icmp sgt i32 %conv302, 24, !dbg !3441
  br i1 %cmp303, label %if.then305, label %if.end306, !dbg !3442

if.then305:                                       ; preds = %if.end301
  %187 = load i16*, i16** %count.addr, align 8, !dbg !3443
  store i16 24, i16* %187, align 2, !dbg !3444
  br label %if.end306, !dbg !3445

if.end306:                                        ; preds = %if.then305, %if.end301
  %188 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3446
  %189 = load i16*, i16** %count.addr, align 8, !dbg !3447
  %190 = load i16, i16* %189, align 2, !dbg !3448
  %conv307 = sext i16 %190 to i64, !dbg !3449
  %mul = mul i64 %conv307, 8, !dbg !3450
  %call308 = call i8* %188(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0)), !dbg !3446
  %191 = bitcast i8* %call308 to %struct.ID**, !dbg !3446
  store %struct.ID** %191, %struct.ID*** %idar, align 8, !dbg !3451
  %192 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3452
  %object309 = getelementptr inbounds %struct.Main, %struct.Main* %192, i32 0, i32 13, !dbg !3453
  %first310 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object309, i32 0, i32 0, !dbg !3454
  %193 = load i8*, i8** %first310, align 8, !dbg !3454
  %194 = bitcast i8* %193 to %struct.Object*, !dbg !3452
  store %struct.Object* %194, %struct.Object** %ob, align 8, !dbg !3455
  store i32 0, i32* %nr, align 4, !dbg !3456
  %195 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3457
  %tobool311 = icmp ne %struct.Object* %195, null, !dbg !3457
  br i1 %tobool311, label %if.then312, label %if.end315, !dbg !3459

if.then312:                                       ; preds = %if.end306
  %196 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3460
  %197 = bitcast %struct.Object* %196 to %struct.ID*, !dbg !3462
  %198 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !3463
  %arrayidx313 = getelementptr inbounds %struct.ID*, %struct.ID** %198, i64 0, !dbg !3463
  store %struct.ID* %197, %struct.ID** %arrayidx313, align 8, !dbg !3464
  %199 = load i32, i32* %nr, align 4, !dbg !3465
  %inc314 = add nsw i32 %199, 1, !dbg !3465
  store i32 %inc314, i32* %nr, align 4, !dbg !3465
  br label %if.end315, !dbg !3466

if.end315:                                        ; preds = %if.then312, %if.end306
  br label %while.cond316, !dbg !3467

while.cond316:                                    ; preds = %if.end333, %if.end315
  %200 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3468
  %tobool317 = icmp ne %struct.Object* %200, null, !dbg !3467
  br i1 %tobool317, label %while.body318, label %while.end336, !dbg !3467

while.body318:                                    ; preds = %while.cond316
  %201 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3469
  %scavisflag319 = getelementptr inbounds %struct.Object, %struct.Object* %201, i32 0, i32 62, !dbg !3472
  %202 = load i8, i8* %scavisflag319, align 2, !dbg !3472
  %conv320 = zext i8 %202 to i32, !dbg !3473
  %tobool321 = icmp ne i32 %conv320, 0, !dbg !3473
  br i1 %tobool321, label %land.lhs.true322, label %if.end329, !dbg !3474

land.lhs.true322:                                 ; preds = %while.body318
  %203 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3475
  %204 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3476
  %cmp323 = icmp ne %struct.Object* %203, %204, !dbg !3477
  br i1 %cmp323, label %if.then325, label %if.end329, !dbg !3478

if.then325:                                       ; preds = %land.lhs.true322
  %205 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3479
  %206 = bitcast %struct.Object* %205 to %struct.ID*, !dbg !3481
  %207 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !3482
  %208 = load i32, i32* %nr, align 4, !dbg !3483
  %idxprom326 = sext i32 %208 to i64, !dbg !3482
  %arrayidx327 = getelementptr inbounds %struct.ID*, %struct.ID** %207, i64 %idxprom326, !dbg !3482
  store %struct.ID* %206, %struct.ID** %arrayidx327, align 8, !dbg !3484
  %209 = load i32, i32* %nr, align 4, !dbg !3485
  %inc328 = add nsw i32 %209, 1, !dbg !3485
  store i32 %inc328, i32* %nr, align 4, !dbg !3485
  br label %if.end329, !dbg !3486

if.end329:                                        ; preds = %if.then325, %land.lhs.true322, %while.body318
  %210 = load i32, i32* %nr, align 4, !dbg !3487
  %cmp330 = icmp sge i32 %210, 24, !dbg !3489
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !3490

if.then332:                                       ; preds = %if.end329
  br label %while.end336, !dbg !3491

if.end333:                                        ; preds = %if.end329
  %211 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3492
  %id334 = getelementptr inbounds %struct.Object, %struct.Object* %211, i32 0, i32 0, !dbg !3493
  %next335 = getelementptr inbounds %struct.ID, %struct.ID* %id334, i32 0, i32 0, !dbg !3494
  %212 = load i8*, i8** %next335, align 8, !dbg !3494
  %213 = bitcast i8* %212 to %struct.Object*, !dbg !3492
  store %struct.Object* %213, %struct.Object** %ob, align 8, !dbg !3495
  br label %while.cond316, !dbg !3467, !llvm.loop !3496

while.end336:                                     ; preds = %if.then332, %while.cond316
  call void @clear_sca_new_poins(), !dbg !3498
  %214 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !3499
  store %struct.ID** %214, %struct.ID*** %retval, align 8, !dbg !3500
  br label %return, !dbg !3500

return:                                           ; preds = %while.end336, %if.then300, %if.then
  %215 = load %struct.ID**, %struct.ID*** %retval, align 8, !dbg !3501
  ret %struct.ID** %215, !dbg !3501
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @vergname(i8* %v1, i8* %v2) #0 !dbg !3502 {
entry:
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %x1 = alloca i8**, align 8
  %x2 = alloca i8**, align 8
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.declare(metadata i8*** %x1, metadata !3511, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.declare(metadata i8*** %x2, metadata !3513, metadata !DIExpression()), !dbg !3514
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !3515
  %1 = bitcast i8* %0 to i8**, !dbg !3516
  store i8** %1, i8*** %x1, align 8, !dbg !3517
  %2 = load i8*, i8** %v2.addr, align 8, !dbg !3518
  %3 = bitcast i8* %2 to i8**, !dbg !3519
  store i8** %3, i8*** %x2, align 8, !dbg !3520
  %4 = load i8**, i8*** %x1, align 8, !dbg !3521
  %5 = load i8*, i8** %4, align 8, !dbg !3522
  %6 = load i8**, i8*** %x2, align 8, !dbg !3523
  %7 = load i8*, i8** %6, align 8, !dbg !3524
  %call = call i32 @BLI_natstrcmp(i8* %5, i8* %7), !dbg !3525
  ret i32 %call, !dbg !3526
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local void @BLI_newname(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @logic_buttons(%struct.bContext* %C, %struct.ARegion* %ar) #0 !dbg !3527 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %slogic = alloca %struct.SpaceLogic*, align 8
  %ob = alloca %struct.Object*, align 8
  %idar = alloca %struct.ID**, align 8
  %logic_ptr = alloca %struct.PointerRNA, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %object_ptr = alloca %struct.PointerRNA, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %box = alloca %struct.uiLayout*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %uiblockstr = alloca [32 x i8], align 16
  %a = alloca i16, align 2
  %count = alloca i16, align 2
  %xco = alloca i32, align 4
  %yco = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %act = alloca %struct.bActuator*, align 8
  %sens = alloca %struct.bSensor*, align 8
  %cont = alloca %struct.bController*, align 8
  %iact = alloca i32, align 4
  %flag = alloca i16, align 2
  %cont76 = alloca %struct.bController*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %split = alloca %struct.uiLayout*, align 8
  %subsplit = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %sens189 = alloca %struct.bSensor*, align 8
  %ptr190 = alloca %struct.PointerRNA, align 8
  %split259 = alloca %struct.uiLayout*, align 8
  %col260 = alloca %struct.uiLayout*, align 8
  %act309 = alloca %struct.bActuator*, align 8
  %ptr310 = alloca %struct.PointerRNA, align 8
  %split380 = alloca %struct.uiLayout*, align 8
  %col381 = alloca %struct.uiLayout*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3606, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.declare(metadata %struct.SpaceLogic** %slogic, metadata !3608, metadata !DIExpression()), !dbg !3635
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3636
  %call = call %struct.SpaceLogic* @CTX_wm_space_logic(%struct.bContext* %0), !dbg !3637
  store %struct.SpaceLogic* %call, %struct.SpaceLogic** %slogic, align 8, !dbg !3635
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3638, metadata !DIExpression()), !dbg !3639
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3640
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !3641
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !3639
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %logic_ptr, metadata !3644, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %object_ptr, metadata !3657, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !3659, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !3666, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !3668, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !3921, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.declare(metadata [32 x i8]* %uiblockstr, metadata !4056, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.declare(metadata i16* %a, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata i16* %count, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata i32* %xco, metadata !4062, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.declare(metadata i32* %yco, metadata !4064, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata i32* %width, metadata !4066, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata i32* %height, metadata !4068, metadata !DIExpression()), !dbg !4069
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4070
  %cmp = icmp eq %struct.Object* %2, null, !dbg !4072
  br i1 %cmp, label %if.then, label %if.end, !dbg !4073

if.then:                                          ; preds = %entry
  br label %if.end418, !dbg !4074

if.end:                                           ; preds = %entry
  %3 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4075
  %4 = bitcast %struct.SpaceLogic* %3 to i8*, !dbg !4075
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_SpaceLogicEditor, i8* %4, %struct.PointerRNA* %logic_ptr), !dbg !4076
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4077
  %6 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4078
  %scaflag = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %6, i32 0, i32 7, !dbg !4079
  %7 = load i16, i16* %scaflag, align 2, !dbg !4079
  %call2 = call %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %5, i16* %count, i16 signext %7), !dbg !4080
  store %struct.ID** %call2, %struct.ID*** %idar, align 8, !dbg !4081
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %uiblockstr, i64 0, i64 0, !dbg !4082
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4083
  %9 = bitcast %struct.ARegion* %8 to i8*, !dbg !4084
  %call3 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* %9), !dbg !4085
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4086
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4087
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %uiblockstr, i64 0, i64 0, !dbg !4088
  %call5 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %10, %struct.ARegion* %11, i8* %arraydecay4, i16 signext 0), !dbg !4089
  store %struct.uiBlock* %call5, %struct.uiBlock** %block, align 8, !dbg !4090
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4091
  call void @uiBlockSetHandleFunc(%struct.uiBlock* %12, void (%struct.bContext*, i8*, i32)* @do_logic_buts, i8* null), !dbg !4092
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4093
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4094
  %conv = sext i16 %14 to i32, !dbg !4095
  %div = sdiv i32 %conv, 2, !dbg !4096
  call void @uiBoundsBlock(%struct.uiBlock* %13, i32 %div), !dbg !4097
  store i16 0, i16* %a, align 2, !dbg !4098
  br label %for.cond, !dbg !4100

for.cond:                                         ; preds = %for.inc54, %if.end
  %15 = load i16, i16* %a, align 2, !dbg !4101
  %conv6 = sext i16 %15 to i32, !dbg !4101
  %16 = load i16, i16* %count, align 2, !dbg !4103
  %conv7 = sext i16 %16 to i32, !dbg !4103
  %cmp8 = icmp slt i32 %conv6, %conv7, !dbg !4104
  br i1 %cmp8, label %for.body, label %for.end56, !dbg !4105

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !4106, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !4111, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.declare(metadata i32* %iact, metadata !4113, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.declare(metadata i16* %flag, metadata !4115, metadata !DIExpression()), !dbg !4116
  %17 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4117
  %18 = load i16, i16* %a, align 2, !dbg !4118
  %idxprom = sext i16 %18 to i64, !dbg !4117
  %arrayidx = getelementptr inbounds %struct.ID*, %struct.ID** %17, i64 %idxprom, !dbg !4117
  %19 = load %struct.ID*, %struct.ID** %arrayidx, align 8, !dbg !4117
  %20 = bitcast %struct.ID* %19 to %struct.Object*, !dbg !4119
  store %struct.Object* %20, %struct.Object** %ob, align 8, !dbg !4120
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4121
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 94, !dbg !4122
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators, i32 0, i32 0, !dbg !4123
  %22 = load i8*, i8** %first, align 8, !dbg !4123
  %23 = bitcast i8* %22 to %struct.bActuator*, !dbg !4121
  store %struct.bActuator* %23, %struct.bActuator** %act, align 8, !dbg !4124
  br label %while.cond, !dbg !4125

while.cond:                                       ; preds = %while.body, %for.body
  %24 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4126
  %tobool = icmp ne %struct.bActuator* %24, null, !dbg !4125
  br i1 %tobool, label %while.body, label %while.end, !dbg !4125

while.body:                                       ; preds = %while.cond
  %25 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4127
  %flag10 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %25, i32 0, i32 4, !dbg !4129
  %26 = load i16, i16* %flag10, align 2, !dbg !4130
  %conv11 = sext i16 %26 to i32, !dbg !4130
  %and = and i32 %conv11, -25, !dbg !4130
  %conv12 = trunc i32 %and to i16, !dbg !4130
  store i16 %conv12, i16* %flag10, align 2, !dbg !4130
  %27 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4131
  %next = getelementptr inbounds %struct.bActuator, %struct.bActuator* %27, i32 0, i32 0, !dbg !4132
  %28 = load %struct.bActuator*, %struct.bActuator** %next, align 8, !dbg !4132
  store %struct.bActuator* %28, %struct.bActuator** %act, align 8, !dbg !4133
  br label %while.cond, !dbg !4125, !llvm.loop !4134

while.end:                                        ; preds = %while.cond
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4136
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 92, !dbg !4137
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors, i32 0, i32 0, !dbg !4138
  %30 = load i8*, i8** %first13, align 8, !dbg !4138
  %31 = bitcast i8* %30 to %struct.bSensor*, !dbg !4136
  store %struct.bSensor* %31, %struct.bSensor** %sens, align 8, !dbg !4139
  br label %while.cond14, !dbg !4140

while.cond14:                                     ; preds = %while.body16, %while.end
  %32 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !4141
  %tobool15 = icmp ne %struct.bSensor* %32, null, !dbg !4140
  br i1 %tobool15, label %while.body16, label %while.end22, !dbg !4140

while.body16:                                     ; preds = %while.cond14
  %33 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !4142
  %flag17 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %33, i32 0, i32 4, !dbg !4144
  %34 = load i16, i16* %flag17, align 4, !dbg !4145
  %conv18 = sext i16 %34 to i32, !dbg !4145
  %and19 = and i32 %conv18, -17, !dbg !4145
  %conv20 = trunc i32 %and19 to i16, !dbg !4145
  store i16 %conv20, i16* %flag17, align 4, !dbg !4145
  %35 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !4146
  %next21 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %35, i32 0, i32 0, !dbg !4147
  %36 = load %struct.bSensor*, %struct.bSensor** %next21, align 8, !dbg !4147
  store %struct.bSensor* %36, %struct.bSensor** %sens, align 8, !dbg !4148
  br label %while.cond14, !dbg !4140, !llvm.loop !4149

while.end22:                                      ; preds = %while.cond14
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4151
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 93, !dbg !4152
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers, i32 0, i32 0, !dbg !4153
  %38 = load i8*, i8** %first23, align 8, !dbg !4153
  %39 = bitcast i8* %38 to %struct.bController*, !dbg !4151
  store %struct.bController* %39, %struct.bController** %cont, align 8, !dbg !4154
  br label %while.cond24, !dbg !4155

while.cond24:                                     ; preds = %for.end, %while.end22
  %40 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !4156
  %tobool25 = icmp ne %struct.bController* %40, null, !dbg !4155
  br i1 %tobool25, label %while.body26, label %while.end53, !dbg !4155

while.body26:                                     ; preds = %while.cond24
  store i16 8, i16* %flag, align 2, !dbg !4157
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4159
  %scaflag27 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 61, !dbg !4161
  %42 = load i16, i16* %scaflag27, align 4, !dbg !4161
  %conv28 = sext i16 %42 to i32, !dbg !4159
  %and29 = and i32 %conv28, 4096, !dbg !4162
  %tobool30 = icmp ne i32 %and29, 0, !dbg !4162
  br i1 %tobool30, label %if.then33, label %lor.lhs.false, !dbg !4163

lor.lhs.false:                                    ; preds = %while.body26
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4164
  %state = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 123, !dbg !4165
  %44 = load i32, i32* %state, align 8, !dbg !4165
  %45 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !4166
  %state_mask = getelementptr inbounds %struct.bController, %struct.bController* %45, i32 0, i32 17, !dbg !4167
  %46 = load i32, i32* %state_mask, align 4, !dbg !4167
  %and31 = and i32 %44, %46, !dbg !4168
  %tobool32 = icmp ne i32 %and31, 0, !dbg !4168
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !4169

if.then33:                                        ; preds = %lor.lhs.false, %while.body26
  %47 = load i16, i16* %flag, align 2, !dbg !4170
  %conv34 = sext i16 %47 to i32, !dbg !4170
  %or = or i32 %conv34, 16, !dbg !4170
  %conv35 = trunc i32 %or to i16, !dbg !4170
  store i16 %conv35, i16* %flag, align 2, !dbg !4170
  br label %if.end36, !dbg !4171

if.end36:                                         ; preds = %if.then33, %lor.lhs.false
  store i32 0, i32* %iact, align 4, !dbg !4172
  br label %for.cond37, !dbg !4174

for.cond37:                                       ; preds = %for.inc, %if.end36
  %48 = load i32, i32* %iact, align 4, !dbg !4175
  %49 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !4177
  %totlinks = getelementptr inbounds %struct.bController, %struct.bController* %49, i32 0, i32 6, !dbg !4178
  %50 = load i16, i16* %totlinks, align 2, !dbg !4178
  %conv38 = sext i16 %50 to i32, !dbg !4177
  %cmp39 = icmp slt i32 %48, %conv38, !dbg !4179
  br i1 %cmp39, label %for.body41, label %for.end, !dbg !4180

for.body41:                                       ; preds = %for.cond37
  %51 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !4181
  %links = getelementptr inbounds %struct.bController, %struct.bController* %51, i32 0, i32 13, !dbg !4183
  %52 = load %struct.bActuator**, %struct.bActuator*** %links, align 8, !dbg !4183
  %53 = load i32, i32* %iact, align 4, !dbg !4184
  %idxprom42 = sext i32 %53 to i64, !dbg !4181
  %arrayidx43 = getelementptr inbounds %struct.bActuator*, %struct.bActuator** %52, i64 %idxprom42, !dbg !4181
  %54 = load %struct.bActuator*, %struct.bActuator** %arrayidx43, align 8, !dbg !4181
  store %struct.bActuator* %54, %struct.bActuator** %act, align 8, !dbg !4185
  %55 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4186
  %tobool44 = icmp ne %struct.bActuator* %55, null, !dbg !4186
  br i1 %tobool44, label %if.then45, label %if.end51, !dbg !4188

if.then45:                                        ; preds = %for.body41
  %56 = load i16, i16* %flag, align 2, !dbg !4189
  %conv46 = sext i16 %56 to i32, !dbg !4189
  %57 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4190
  %flag47 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %57, i32 0, i32 4, !dbg !4191
  %58 = load i16, i16* %flag47, align 2, !dbg !4192
  %conv48 = sext i16 %58 to i32, !dbg !4192
  %or49 = or i32 %conv48, %conv46, !dbg !4192
  %conv50 = trunc i32 %or49 to i16, !dbg !4192
  store i16 %conv50, i16* %flag47, align 2, !dbg !4192
  br label %if.end51, !dbg !4190

if.end51:                                         ; preds = %if.then45, %for.body41
  br label %for.inc, !dbg !4193

for.inc:                                          ; preds = %if.end51
  %59 = load i32, i32* %iact, align 4, !dbg !4194
  %inc = add nsw i32 %59, 1, !dbg !4194
  store i32 %inc, i32* %iact, align 4, !dbg !4194
  br label %for.cond37, !dbg !4195, !llvm.loop !4196

for.end:                                          ; preds = %for.cond37
  %60 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !4198
  %next52 = getelementptr inbounds %struct.bController, %struct.bController* %60, i32 0, i32 0, !dbg !4199
  %61 = load %struct.bController*, %struct.bController** %next52, align 8, !dbg !4199
  store %struct.bController* %61, %struct.bController** %cont, align 8, !dbg !4200
  br label %while.cond24, !dbg !4155, !llvm.loop !4201

while.end53:                                      ; preds = %while.cond24
  br label %for.inc54, !dbg !4203

for.inc54:                                        ; preds = %while.end53
  %62 = load i16, i16* %a, align 2, !dbg !4204
  %inc55 = add i16 %62, 1, !dbg !4204
  store i16 %inc55, i16* %a, align 2, !dbg !4204
  br label %for.cond, !dbg !4205, !llvm.loop !4206

for.end56:                                        ; preds = %for.cond
  %63 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4208
  %conv57 = sext i16 %63 to i32, !dbg !4209
  %mul = mul nsw i32 21, %conv57, !dbg !4210
  store i32 %mul, i32* %xco, align 4, !dbg !4211
  %64 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4212
  %conv58 = sext i16 %64 to i32, !dbg !4213
  %sub = sub nsw i32 0, %conv58, !dbg !4214
  %div59 = sdiv i32 %sub, 2, !dbg !4215
  store i32 %div59, i32* %yco, align 4, !dbg !4216
  %65 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4217
  %conv60 = sext i16 %65 to i32, !dbg !4218
  %mul61 = mul nsw i32 15, %conv60, !dbg !4219
  store i32 %mul61, i32* %width, align 4, !dbg !4220
  %66 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4221
  %67 = load i32, i32* %xco, align 4, !dbg !4222
  %68 = load i32, i32* %yco, align 4, !dbg !4223
  %69 = load i32, i32* %width, align 4, !dbg !4224
  %call62 = call %struct.uiStyle* @UI_GetStyle(), !dbg !4225
  %call63 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %66, i32 1, i32 0, i32 %67, i32 %68, i32 %69, i32 20, i32 0, %struct.uiStyle* %call62), !dbg !4226
  store %struct.uiLayout* %call63, %struct.uiLayout** %layout, align 8, !dbg !4227
  %70 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4228
  %call64 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %70, i32 1), !dbg !4229
  store %struct.uiLayout* %call64, %struct.uiLayout** %row, align 8, !dbg !4230
  %71 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4231
  %72 = load i32, i32* %xco, align 4, !dbg !4232
  %73 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4233
  %conv65 = sext i16 %73 to i32, !dbg !4234
  %div66 = sdiv i32 %conv65, 2, !dbg !4235
  %sub67 = sub nsw i32 %72, %div66, !dbg !4236
  %74 = load i32, i32* %yco, align 4, !dbg !4237
  %75 = load i32, i32* %width, align 4, !dbg !4238
  %conv68 = trunc i32 %75 to i16, !dbg !4238
  %76 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4239
  %call69 = call %struct.uiBut* @uiDefBlockBut(%struct.uiBlock* %71, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @controller_menu, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %sub67, i32 %74, i16 signext %conv68, i16 signext %76, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4240
  %77 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4241
  call void @uiItemR(%struct.uiLayout* %77, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i32 0), !dbg !4242
  %78 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4243
  call void @uiItemR(%struct.uiLayout* %78, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 0), !dbg !4244
  %79 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4245
  call void @uiItemR(%struct.uiLayout* %79, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 0), !dbg !4246
  store i16 0, i16* %a, align 2, !dbg !4247
  br label %for.cond70, !dbg !4249

for.cond70:                                       ; preds = %for.inc163, %for.end56
  %80 = load i16, i16* %a, align 2, !dbg !4250
  %conv71 = sext i16 %80 to i32, !dbg !4250
  %81 = load i16, i16* %count, align 2, !dbg !4252
  %conv72 = sext i16 %81 to i32, !dbg !4252
  %cmp73 = icmp slt i32 %conv71, %conv72, !dbg !4253
  br i1 %cmp73, label %for.body75, label %for.end165, !dbg !4254

for.body75:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata %struct.bController** %cont76, metadata !4255, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !4260, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %subsplit, metadata !4262, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !4264, metadata !DIExpression()), !dbg !4265
  %82 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4266
  %83 = load i16, i16* %a, align 2, !dbg !4267
  %idxprom77 = sext i16 %83 to i64, !dbg !4266
  %arrayidx78 = getelementptr inbounds %struct.ID*, %struct.ID** %82, i64 %idxprom77, !dbg !4266
  %84 = load %struct.ID*, %struct.ID** %arrayidx78, align 8, !dbg !4266
  %85 = bitcast %struct.ID* %84 to %struct.Object*, !dbg !4268
  store %struct.Object* %85, %struct.Object** %ob, align 8, !dbg !4269
  %86 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4270
  %scavisflag = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 62, !dbg !4272
  %87 = load i8, i8* %scavisflag, align 2, !dbg !4272
  %conv79 = zext i8 %87 to i32, !dbg !4270
  %and80 = and i32 %conv79, 2, !dbg !4273
  %cmp81 = icmp eq i32 %and80, 0, !dbg !4274
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4275

if.then83:                                        ; preds = %for.body75
  br label %for.inc163, !dbg !4276

if.end84:                                         ; preds = %for.body75
  %88 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4278
  %89 = bitcast %struct.Object* %88 to %struct.ID*, !dbg !4279
  %90 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4280
  %91 = bitcast %struct.Object* %90 to i8*, !dbg !4280
  call void @RNA_pointer_create(%struct.ID* %89, %struct.StructRNA* @RNA_GameObjectSettings, i8* %91, %struct.PointerRNA* %settings_ptr), !dbg !4281
  %92 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4282
  %call85 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %92, float 0x3FA99999A0000000, i32 0), !dbg !4283
  store %struct.uiLayout* %call85, %struct.uiLayout** %split, align 8, !dbg !4284
  %93 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4285
  call void @uiItemR(%struct.uiLayout* %93, %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 11), !dbg !4286
  %94 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4287
  %call86 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %94, i32 1), !dbg !4288
  store %struct.uiLayout* %call86, %struct.uiLayout** %row, align 8, !dbg !4289
  %95 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4290
  %96 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4291
  %id = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 0, !dbg !4292
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4293
  %arraydecay87 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4291
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay87, i64 2, !dbg !4294
  %97 = load i32, i32* %xco, align 4, !dbg !4295
  %98 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4296
  %conv88 = sext i16 %98 to i32, !dbg !4297
  %div89 = sdiv i32 %conv88, 2, !dbg !4298
  %sub90 = sub nsw i32 %97, %div89, !dbg !4299
  %conv91 = trunc i32 %sub90 to i16, !dbg !4300
  %conv92 = sext i16 %conv91 to i32, !dbg !4300
  %99 = load i32, i32* %yco, align 4, !dbg !4301
  %100 = load i32, i32* %width, align 4, !dbg !4302
  %conv93 = sitofp i32 %100 to float, !dbg !4302
  %101 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4303
  %conv94 = sext i16 %101 to i32, !dbg !4304
  %conv95 = sitofp i32 %conv94 to float, !dbg !4304
  %mul96 = fmul float 1.500000e+00, %conv95, !dbg !4305
  %sub97 = fsub float %conv93, %mul96, !dbg !4306
  %conv98 = fptosi float %sub97 to i16, !dbg !4307
  %102 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4308
  %103 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4309
  %scaflag99 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 61, !dbg !4310
  %call100 = call %struct.uiBut* @uiDefButBitS(%struct.uiBlock* %95, i32 1536, i32 2048, i32 1, i8* %add.ptr, i32 %conv92, i32 %99, i16 signext %conv98, i16 signext %102, i16* %scaflag99, float 0.000000e+00, float 3.100000e+01, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0)), !dbg !4311
  %104 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4312
  %105 = bitcast %struct.Object* %104 to %struct.ID*, !dbg !4313
  %106 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4314
  %107 = bitcast %struct.Object* %106 to i8*, !dbg !4314
  call void @RNA_pointer_create(%struct.ID* %105, %struct.StructRNA* @RNA_Object, i8* %107, %struct.PointerRNA* %object_ptr), !dbg !4315
  %108 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4316
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %108, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), %struct.PointerRNA* %object_ptr), !dbg !4317
  %109 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4318
  %110 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4319
  call void @uiItemMenuEnumO(%struct.uiLayout* %109, %struct.bContext* %110, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i32 0), !dbg !4320
  %call101 = call i32 @RNA_boolean_get(%struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !4321
  %tobool102 = icmp ne i32 %call101, 0, !dbg !4321
  br i1 %tobool102, label %if.then103, label %if.end116, !dbg !4323

if.then103:                                       ; preds = %if.end84
  %111 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4324
  %call104 = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %111), !dbg !4326
  store %struct.uiLayout* %call104, %struct.uiLayout** %box, align 8, !dbg !4327
  %112 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !4328
  %call105 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %112, float 0x3FC99999A0000000, i32 0), !dbg !4329
  store %struct.uiLayout* %call105, %struct.uiLayout** %split, align 8, !dbg !4330
  %113 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4331
  %call106 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %113, i32 0), !dbg !4332
  store %struct.uiLayout* %call106, %struct.uiLayout** %col, align 8, !dbg !4333
  %114 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4334
  call void @uiItemL(%struct.uiLayout* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i32 0), !dbg !4335
  %115 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4336
  call void @uiItemL(%struct.uiLayout* %115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 0), !dbg !4337
  %116 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4338
  %call107 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %116, float 0x3FEB333340000000, i32 0), !dbg !4339
  store %struct.uiLayout* %call107, %struct.uiLayout** %subsplit, align 8, !dbg !4340
  %117 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !4341
  %call108 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %117, i32 0), !dbg !4342
  store %struct.uiLayout* %call108, %struct.uiLayout** %col, align 8, !dbg !4343
  %118 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4344
  %call109 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %118, i32 0), !dbg !4345
  store %struct.uiLayout* %call109, %struct.uiLayout** %row, align 8, !dbg !4346
  %119 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4347
  %call110 = call i32 @RNA_boolean_get(%struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)), !dbg !4348
  %cmp111 = icmp eq i32 %call110, 0, !dbg !4349
  %conv112 = zext i1 %cmp111 to i32, !dbg !4349
  %conv113 = trunc i32 %conv112 to i8, !dbg !4348
  call void @uiLayoutSetActive(%struct.uiLayout* %119, i8 zeroext %conv113), !dbg !4350
  %120 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4351
  call void @uiTemplateGameStates(%struct.uiLayout* %120, %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i32 0), !dbg !4352
  %121 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4353
  %call114 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %121, i32 0), !dbg !4354
  store %struct.uiLayout* %call114, %struct.uiLayout** %row, align 8, !dbg !4355
  %122 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4356
  call void @uiTemplateGameStates(%struct.uiLayout* %122, %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i32 0), !dbg !4357
  %123 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !4358
  %call115 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %123, i32 0), !dbg !4359
  store %struct.uiLayout* %call115, %struct.uiLayout** %col, align 8, !dbg !4360
  %124 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4361
  call void @uiItemR(%struct.uiLayout* %124, %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !4362
  %125 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4363
  call void @uiItemR(%struct.uiLayout* %125, %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !4364
  br label %if.end116, !dbg !4365

if.end116:                                        ; preds = %if.then103, %if.end84
  %126 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4366
  %scaflag117 = getelementptr inbounds %struct.Object, %struct.Object* %126, i32 0, i32 61, !dbg !4368
  %127 = load i16, i16* %scaflag117, align 4, !dbg !4368
  %conv118 = sext i16 %127 to i32, !dbg !4366
  %and119 = and i32 %conv118, 2048, !dbg !4369
  %cmp120 = icmp eq i32 %and119, 0, !dbg !4370
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !4371

if.then122:                                       ; preds = %if.end116
  br label %for.inc163, !dbg !4372

if.end123:                                        ; preds = %if.end116
  %128 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4373
  call void @uiItemS(%struct.uiLayout* %128), !dbg !4374
  %129 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4375
  %controllers124 = getelementptr inbounds %struct.Object, %struct.Object* %129, i32 0, i32 93, !dbg !4377
  %first125 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers124, i32 0, i32 0, !dbg !4378
  %130 = load i8*, i8** %first125, align 8, !dbg !4378
  %131 = bitcast i8* %130 to %struct.bController*, !dbg !4375
  store %struct.bController* %131, %struct.bController** %cont76, align 8, !dbg !4379
  br label %for.cond126, !dbg !4380

for.cond126:                                      ; preds = %for.inc160, %if.end123
  %132 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4381
  %tobool127 = icmp ne %struct.bController* %132, null, !dbg !4383
  br i1 %tobool127, label %for.body128, label %for.end162, !dbg !4383

for.body128:                                      ; preds = %for.cond126
  %133 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4384
  %134 = bitcast %struct.Object* %133 to %struct.ID*, !dbg !4386
  %135 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4387
  %136 = bitcast %struct.bController* %135 to i8*, !dbg !4387
  call void @RNA_pointer_create(%struct.ID* %134, %struct.StructRNA* @RNA_Controller, i8* %136, %struct.PointerRNA* %ptr), !dbg !4388
  %137 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4389
  %scaflag129 = getelementptr inbounds %struct.Object, %struct.Object* %137, i32 0, i32 61, !dbg !4391
  %138 = load i16, i16* %scaflag129, align 4, !dbg !4391
  %conv130 = sext i16 %138 to i32, !dbg !4389
  %and131 = and i32 %conv130, 4096, !dbg !4392
  %tobool132 = icmp ne i32 %and131, 0, !dbg !4392
  br i1 %tobool132, label %if.end138, label %land.lhs.true, !dbg !4393

land.lhs.true:                                    ; preds = %for.body128
  %139 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4394
  %state133 = getelementptr inbounds %struct.Object, %struct.Object* %139, i32 0, i32 123, !dbg !4395
  %140 = load i32, i32* %state133, align 8, !dbg !4395
  %141 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4396
  %state_mask134 = getelementptr inbounds %struct.bController, %struct.bController* %141, i32 0, i32 17, !dbg !4397
  %142 = load i32, i32* %state_mask134, align 4, !dbg !4397
  %and135 = and i32 %140, %142, !dbg !4398
  %tobool136 = icmp ne i32 %and135, 0, !dbg !4398
  br i1 %tobool136, label %if.end138, label %if.then137, !dbg !4399

if.then137:                                       ; preds = %land.lhs.true
  br label %for.inc160, !dbg !4400

if.end138:                                        ; preds = %land.lhs.true, %for.body128
  %143 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4401
  %call139 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %143, float 0x3FA99999A0000000, i32 0), !dbg !4402
  store %struct.uiLayout* %call139, %struct.uiLayout** %split, align 8, !dbg !4403
  %144 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4404
  %call140 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %144, i32 0), !dbg !4405
  store %struct.uiLayout* %call140, %struct.uiLayout** %col, align 8, !dbg !4406
  %145 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4407
  %call141 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4408
  %conv142 = trunc i32 %call141 to i8, !dbg !4408
  call void @uiLayoutSetActive(%struct.uiLayout* %145, i8 zeroext %conv142), !dbg !4409
  %146 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4410
  call void @uiLayoutSetAlignment(%struct.uiLayout* %146, i8 zeroext 1), !dbg !4411
  %147 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4412
  %148 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4413
  %149 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4414
  %150 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4415
  %151 = bitcast %struct.bController* %150 to i8*, !dbg !4415
  %call143 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %147, i32 11776, i32 0, i32 50, i32 0, i32 0, i16 signext %148, i16 signext %149, i8* %151, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4416
  store %struct.uiBut* %call143, %struct.uiBut** %but, align 8, !dbg !4417
  %call144 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4418
  %tobool145 = icmp ne i32 %call144, 0, !dbg !4418
  br i1 %tobool145, label %if.end147, label %if.then146, !dbg !4420

if.then146:                                       ; preds = %if.end138
  %152 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4421
  call void @uiButSetFlag(%struct.uiBut* %152, i32 67108864), !dbg !4423
  br label %if.end147, !dbg !4424

if.end147:                                        ; preds = %if.then146, %if.end138
  %153 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !4425
  %call148 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %153, float 0x3FEE666660000000, i32 0), !dbg !4426
  store %struct.uiLayout* %call148, %struct.uiLayout** %subsplit, align 8, !dbg !4427
  %154 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !4428
  %call149 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %154, i32 1), !dbg !4429
  store %struct.uiLayout* %call149, %struct.uiLayout** %col, align 8, !dbg !4430
  %155 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4431
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %155, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), %struct.PointerRNA* %ptr), !dbg !4432
  %156 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4433
  %157 = load i32, i32* %xco, align 4, !dbg !4434
  %158 = load i32, i32* %width, align 4, !dbg !4435
  %159 = load i32, i32* %yco, align 4, !dbg !4436
  call void @draw_controller_header(%struct.uiLayout* %156, %struct.PointerRNA* %ptr, i32 %157, i32 %158, i32 %159), !dbg !4437
  %160 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4438
  call void @draw_brick_controller(%struct.uiLayout* %160, %struct.PointerRNA* %ptr), !dbg !4439
  %161 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !4440
  %call150 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %161, i32 0), !dbg !4441
  store %struct.uiLayout* %call150, %struct.uiLayout** %col, align 8, !dbg !4442
  %162 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4443
  %call151 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4444
  %conv152 = trunc i32 %call151 to i8, !dbg !4444
  call void @uiLayoutSetActive(%struct.uiLayout* %162, i8 zeroext %conv152), !dbg !4445
  %163 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !4446
  call void @uiLayoutSetAlignment(%struct.uiLayout* %163, i8 zeroext 1), !dbg !4447
  %164 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4448
  %165 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4449
  %166 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4450
  %call153 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %164, i32 11264, i32 0, i32 49, i32 0, i32 0, i16 signext %165, i16 signext %166, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4451
  store %struct.uiBut* %call153, %struct.uiBut** %but, align 8, !dbg !4452
  %call154 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4453
  %tobool155 = icmp ne i32 %call154, 0, !dbg !4453
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !4455

if.then156:                                       ; preds = %if.end147
  %167 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4456
  call void @uiButSetFlag(%struct.uiBut* %167, i32 67108864), !dbg !4458
  br label %if.end157, !dbg !4459

if.end157:                                        ; preds = %if.then156, %if.end147
  %168 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4460
  %169 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4461
  %links158 = getelementptr inbounds %struct.bController, %struct.bController* %169, i32 0, i32 13, !dbg !4462
  %170 = bitcast %struct.bActuator*** %links158 to i8***, !dbg !4463
  %171 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4464
  %totlinks159 = getelementptr inbounds %struct.bController, %struct.bController* %171, i32 0, i32 6, !dbg !4465
  call void @uiSetButLink(%struct.uiBut* %168, i8** null, i8*** %170, i16* %totlinks159, i32 1, i32 2), !dbg !4466
  br label %for.inc160, !dbg !4467

for.inc160:                                       ; preds = %if.end157, %if.then137
  %172 = load %struct.bController*, %struct.bController** %cont76, align 8, !dbg !4468
  %next161 = getelementptr inbounds %struct.bController, %struct.bController* %172, i32 0, i32 0, !dbg !4469
  %173 = load %struct.bController*, %struct.bController** %next161, align 8, !dbg !4469
  store %struct.bController* %173, %struct.bController** %cont76, align 8, !dbg !4470
  br label %for.cond126, !dbg !4471, !llvm.loop !4472

for.end162:                                       ; preds = %for.cond126
  br label %for.inc163, !dbg !4474

for.inc163:                                       ; preds = %for.end162, %if.then122, %if.then83
  %174 = load i16, i16* %a, align 2, !dbg !4475
  %inc164 = add i16 %174, 1, !dbg !4475
  store i16 %inc164, i16* %a, align 2, !dbg !4475
  br label %for.cond70, !dbg !4476, !llvm.loop !4477

for.end165:                                       ; preds = %for.cond70
  %175 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4479
  call void @uiBlockLayoutResolve(%struct.uiBlock* %175, i32* null, i32* %yco), !dbg !4480
  %176 = load i32, i32* %yco, align 4, !dbg !4481
  store i32 %176, i32* %height, align 4, !dbg !4482
  %177 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4483
  %conv166 = sext i16 %177 to i32, !dbg !4484
  %div167 = sdiv i32 %conv166, 2, !dbg !4485
  store i32 %div167, i32* %xco, align 4, !dbg !4486
  %178 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4487
  %conv168 = sext i16 %178 to i32, !dbg !4488
  %sub169 = sub nsw i32 0, %conv168, !dbg !4489
  %div170 = sdiv i32 %sub169, 2, !dbg !4490
  store i32 %div170, i32* %yco, align 4, !dbg !4491
  %179 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4492
  %conv171 = sext i16 %179 to i32, !dbg !4493
  %mul172 = mul nsw i32 17, %conv171, !dbg !4494
  store i32 %mul172, i32* %width, align 4, !dbg !4495
  %180 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4496
  %181 = load i32, i32* %xco, align 4, !dbg !4497
  %182 = load i32, i32* %yco, align 4, !dbg !4498
  %183 = load i32, i32* %width, align 4, !dbg !4499
  %call173 = call %struct.uiStyle* @UI_GetStyle(), !dbg !4500
  %call174 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %180, i32 1, i32 0, i32 %181, i32 %182, i32 %183, i32 20, i32 0, %struct.uiStyle* %call173), !dbg !4501
  store %struct.uiLayout* %call174, %struct.uiLayout** %layout, align 8, !dbg !4502
  %184 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4503
  %call175 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %184, i32 1), !dbg !4504
  store %struct.uiLayout* %call175, %struct.uiLayout** %row, align 8, !dbg !4505
  %185 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4506
  %186 = load i32, i32* %xco, align 4, !dbg !4507
  %187 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4508
  %conv176 = sext i16 %187 to i32, !dbg !4509
  %div177 = sdiv i32 %conv176, 2, !dbg !4510
  %sub178 = sub nsw i32 %186, %div177, !dbg !4511
  %188 = load i32, i32* %yco, align 4, !dbg !4512
  %189 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4513
  %conv179 = sext i16 %189 to i32, !dbg !4514
  %mul180 = mul nsw i32 15, %conv179, !dbg !4515
  %conv181 = trunc i32 %mul180 to i16, !dbg !4516
  %190 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4517
  %call182 = call %struct.uiBut* @uiDefBlockBut(%struct.uiBlock* %185, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @sensor_menu, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i32 %sub178, i32 %188, i16 signext %conv181, i16 signext %190, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4518
  %191 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4519
  call void @uiItemR(%struct.uiLayout* %191, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i32 0), !dbg !4520
  %192 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4521
  call void @uiItemR(%struct.uiLayout* %192, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 0), !dbg !4522
  %193 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4523
  call void @uiItemR(%struct.uiLayout* %193, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 0), !dbg !4524
  %194 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4525
  call void @uiItemR(%struct.uiLayout* %194, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0), !dbg !4526
  store i16 0, i16* %a, align 2, !dbg !4527
  br label %for.cond183, !dbg !4529

for.cond183:                                      ; preds = %for.inc281, %for.end165
  %195 = load i16, i16* %a, align 2, !dbg !4530
  %conv184 = sext i16 %195 to i32, !dbg !4530
  %196 = load i16, i16* %count, align 2, !dbg !4532
  %conv185 = sext i16 %196 to i32, !dbg !4532
  %cmp186 = icmp slt i32 %conv184, %conv185, !dbg !4533
  br i1 %cmp186, label %for.body188, label %for.end283, !dbg !4534

for.body188:                                      ; preds = %for.cond183
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens189, metadata !4535, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr190, metadata !4538, metadata !DIExpression()), !dbg !4539
  %197 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4540
  %198 = load i16, i16* %a, align 2, !dbg !4541
  %idxprom191 = sext i16 %198 to i64, !dbg !4540
  %arrayidx192 = getelementptr inbounds %struct.ID*, %struct.ID** %197, i64 %idxprom191, !dbg !4540
  %199 = load %struct.ID*, %struct.ID** %arrayidx192, align 8, !dbg !4540
  %200 = bitcast %struct.ID* %199 to %struct.Object*, !dbg !4542
  store %struct.Object* %200, %struct.Object** %ob, align 8, !dbg !4543
  %201 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4544
  %scavisflag193 = getelementptr inbounds %struct.Object, %struct.Object* %201, i32 0, i32 62, !dbg !4546
  %202 = load i8, i8* %scavisflag193, align 2, !dbg !4546
  %conv194 = zext i8 %202 to i32, !dbg !4544
  %and195 = and i32 %conv194, 1, !dbg !4547
  %cmp196 = icmp eq i32 %and195, 0, !dbg !4548
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !4549

if.then198:                                       ; preds = %for.body188
  br label %for.inc281, !dbg !4550

if.end199:                                        ; preds = %for.body188
  %203 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4551
  %call200 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %203, i32 1), !dbg !4552
  store %struct.uiLayout* %call200, %struct.uiLayout** %row, align 8, !dbg !4553
  %204 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4554
  %205 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4555
  %id201 = getelementptr inbounds %struct.Object, %struct.Object* %205, i32 0, i32 0, !dbg !4556
  %name202 = getelementptr inbounds %struct.ID, %struct.ID* %id201, i32 0, i32 4, !dbg !4557
  %arraydecay203 = getelementptr inbounds [66 x i8], [66 x i8]* %name202, i64 0, i64 0, !dbg !4555
  %add.ptr204 = getelementptr inbounds i8, i8* %arraydecay203, i64 2, !dbg !4558
  %206 = load i32, i32* %xco, align 4, !dbg !4559
  %207 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4560
  %conv205 = sext i16 %207 to i32, !dbg !4561
  %div206 = sdiv i32 %conv205, 2, !dbg !4562
  %sub207 = sub nsw i32 %206, %div206, !dbg !4563
  %conv208 = trunc i32 %sub207 to i16, !dbg !4564
  %conv209 = sext i16 %conv208 to i32, !dbg !4564
  %208 = load i32, i32* %yco, align 4, !dbg !4565
  %209 = load i32, i32* %width, align 4, !dbg !4566
  %conv210 = sitofp i32 %209 to float, !dbg !4566
  %210 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4567
  %conv211 = sext i16 %210 to i32, !dbg !4568
  %conv212 = sitofp i32 %conv211 to float, !dbg !4568
  %mul213 = fmul float 1.500000e+00, %conv212, !dbg !4569
  %sub214 = fsub float %conv210, %mul213, !dbg !4570
  %conv215 = fptosi float %sub214 to i16, !dbg !4571
  %211 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4572
  %212 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4573
  %scaflag216 = getelementptr inbounds %struct.Object, %struct.Object* %212, i32 0, i32 61, !dbg !4574
  %call217 = call %struct.uiBut* @uiDefButBitS(%struct.uiBlock* %204, i32 1536, i32 64, i32 1, i8* %add.ptr204, i32 %conv209, i32 %208, i16 signext %conv215, i16 signext %211, i16* %scaflag216, float 0.000000e+00, float 3.100000e+01, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0)), !dbg !4575
  %213 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4576
  %214 = bitcast %struct.Object* %213 to %struct.ID*, !dbg !4577
  %215 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4578
  %216 = bitcast %struct.Object* %215 to i8*, !dbg !4578
  call void @RNA_pointer_create(%struct.ID* %214, %struct.StructRNA* @RNA_Object, i8* %216, %struct.PointerRNA* %object_ptr), !dbg !4579
  %217 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4580
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %217, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), %struct.PointerRNA* %object_ptr), !dbg !4581
  %218 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4582
  %219 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4583
  call void @uiItemMenuEnumO(%struct.uiLayout* %218, %struct.bContext* %219, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i32 0), !dbg !4584
  %220 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4585
  %scaflag218 = getelementptr inbounds %struct.Object, %struct.Object* %220, i32 0, i32 61, !dbg !4587
  %221 = load i16, i16* %scaflag218, align 4, !dbg !4587
  %conv219 = sext i16 %221 to i32, !dbg !4585
  %and220 = and i32 %conv219, 64, !dbg !4588
  %cmp221 = icmp eq i32 %and220, 0, !dbg !4589
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !4590

if.then223:                                       ; preds = %if.end199
  br label %for.inc281, !dbg !4591

if.end224:                                        ; preds = %if.end199
  %222 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4592
  call void @uiItemS(%struct.uiLayout* %222), !dbg !4593
  %223 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4594
  %sensors225 = getelementptr inbounds %struct.Object, %struct.Object* %223, i32 0, i32 92, !dbg !4596
  %first226 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors225, i32 0, i32 0, !dbg !4597
  %224 = load i8*, i8** %first226, align 8, !dbg !4597
  %225 = bitcast i8* %224 to %struct.bSensor*, !dbg !4594
  store %struct.bSensor* %225, %struct.bSensor** %sens189, align 8, !dbg !4598
  br label %for.cond227, !dbg !4599

for.cond227:                                      ; preds = %for.inc278, %if.end224
  %226 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4600
  %tobool228 = icmp ne %struct.bSensor* %226, null, !dbg !4602
  br i1 %tobool228, label %for.body229, label %for.end280, !dbg !4602

for.body229:                                      ; preds = %for.cond227
  %227 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4603
  %228 = bitcast %struct.Object* %227 to %struct.ID*, !dbg !4605
  %229 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4606
  %230 = bitcast %struct.bSensor* %229 to i8*, !dbg !4606
  call void @RNA_pointer_create(%struct.ID* %228, %struct.StructRNA* @RNA_Sensor, i8* %230, %struct.PointerRNA* %ptr190), !dbg !4607
  %231 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4608
  %scaflag230 = getelementptr inbounds %struct.Object, %struct.Object* %231, i32 0, i32 61, !dbg !4610
  %232 = load i16, i16* %scaflag230, align 4, !dbg !4610
  %conv231 = sext i16 %232 to i32, !dbg !4608
  %and232 = and i32 %conv231, 4096, !dbg !4611
  %tobool233 = icmp ne i32 %and232, 0, !dbg !4611
  br i1 %tobool233, label %if.then258, label %lor.lhs.false234, !dbg !4612

lor.lhs.false234:                                 ; preds = %for.body229
  %233 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4613
  %scaflag235 = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %233, i32 0, i32 7, !dbg !4614
  %234 = load i16, i16* %scaflag235, align 2, !dbg !4614
  %conv236 = sext i16 %234 to i32, !dbg !4613
  %and237 = and i32 %conv236, 512, !dbg !4615
  %tobool238 = icmp ne i32 %and237, 0, !dbg !4615
  br i1 %tobool238, label %lor.lhs.false239, label %if.then258, !dbg !4616

lor.lhs.false239:                                 ; preds = %lor.lhs.false234
  %235 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4617
  %totlinks240 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %235, i32 0, i32 7, !dbg !4618
  %236 = load i16, i16* %totlinks240, align 2, !dbg !4618
  %conv241 = sext i16 %236 to i32, !dbg !4617
  %cmp242 = icmp eq i32 %conv241, 0, !dbg !4619
  br i1 %cmp242, label %if.then258, label %lor.lhs.false244, !dbg !4620

lor.lhs.false244:                                 ; preds = %lor.lhs.false239
  %237 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4621
  %flag245 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %237, i32 0, i32 4, !dbg !4622
  %238 = load i16, i16* %flag245, align 4, !dbg !4622
  %conv246 = sext i16 %238 to i32, !dbg !4621
  %and247 = and i32 %conv246, 32, !dbg !4623
  %tobool248 = icmp ne i32 %and247, 0, !dbg !4623
  br i1 %tobool248, label %land.lhs.true249, label %lor.lhs.false254, !dbg !4624

land.lhs.true249:                                 ; preds = %lor.lhs.false244
  %239 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4625
  %scaflag250 = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %239, i32 0, i32 7, !dbg !4626
  %240 = load i16, i16* %scaflag250, align 2, !dbg !4626
  %conv251 = sext i16 %240 to i32, !dbg !4625
  %and252 = and i32 %conv251, 512, !dbg !4627
  %tobool253 = icmp ne i32 %and252, 0, !dbg !4627
  br i1 %tobool253, label %if.then258, label %lor.lhs.false254, !dbg !4628

lor.lhs.false254:                                 ; preds = %land.lhs.true249, %lor.lhs.false244
  %241 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4629
  %242 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4630
  %call255 = call zeroext i8 @is_sensor_linked(%struct.uiBlock* %241, %struct.bSensor* %242), !dbg !4631
  %conv256 = zext i8 %call255 to i32, !dbg !4632
  %tobool257 = icmp ne i32 %conv256, 0, !dbg !4632
  br i1 %tobool257, label %if.then258, label %if.end277, !dbg !4633

if.then258:                                       ; preds = %lor.lhs.false254, %land.lhs.true249, %lor.lhs.false239, %lor.lhs.false234, %for.body229
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split259, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col260, metadata !4637, metadata !DIExpression()), !dbg !4638
  %243 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4639
  %flag261 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %243, i32 0, i32 4, !dbg !4640
  %244 = load i16, i16* %flag261, align 4, !dbg !4641
  %conv262 = sext i16 %244 to i32, !dbg !4641
  %or263 = or i32 %conv262, 16, !dbg !4641
  %conv264 = trunc i32 %or263 to i16, !dbg !4641
  store i16 %conv264, i16* %flag261, align 4, !dbg !4641
  %245 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4642
  %call265 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %245, float 0x3FEE666660000000, i32 0), !dbg !4643
  store %struct.uiLayout* %call265, %struct.uiLayout** %split259, align 8, !dbg !4644
  %246 = load %struct.uiLayout*, %struct.uiLayout** %split259, align 8, !dbg !4645
  %call266 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %246, i32 1), !dbg !4646
  store %struct.uiLayout* %call266, %struct.uiLayout** %col260, align 8, !dbg !4647
  %247 = load %struct.uiLayout*, %struct.uiLayout** %col260, align 8, !dbg !4648
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %247, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), %struct.PointerRNA* %ptr190), !dbg !4649
  %248 = load %struct.uiLayout*, %struct.uiLayout** %col260, align 8, !dbg !4650
  call void @draw_sensor_header(%struct.uiLayout* %248, %struct.PointerRNA* %ptr190, %struct.PointerRNA* %logic_ptr), !dbg !4651
  %249 = load %struct.uiLayout*, %struct.uiLayout** %col260, align 8, !dbg !4652
  %250 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4653
  call void @draw_brick_sensor(%struct.uiLayout* %249, %struct.PointerRNA* %ptr190, %struct.bContext* %250), !dbg !4654
  %251 = load %struct.uiLayout*, %struct.uiLayout** %split259, align 8, !dbg !4655
  %call267 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %251, i32 0), !dbg !4656
  store %struct.uiLayout* %call267, %struct.uiLayout** %col260, align 8, !dbg !4657
  %252 = load %struct.uiLayout*, %struct.uiLayout** %col260, align 8, !dbg !4658
  %call268 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4659
  %conv269 = trunc i32 %call268 to i8, !dbg !4659
  call void @uiLayoutSetActive(%struct.uiLayout* %252, i8 zeroext %conv269), !dbg !4660
  %253 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4661
  %254 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4662
  %255 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4663
  %call270 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %253, i32 11264, i32 0, i32 49, i32 0, i32 0, i16 signext %254, i16 signext %255, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4664
  store %struct.uiBut* %call270, %struct.uiBut** %but, align 8, !dbg !4665
  %call271 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4666
  %tobool272 = icmp ne i32 %call271, 0, !dbg !4666
  br i1 %tobool272, label %if.end274, label %if.then273, !dbg !4668

if.then273:                                       ; preds = %if.then258
  %256 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4669
  call void @uiButSetFlag(%struct.uiBut* %256, i32 67108864), !dbg !4671
  br label %if.end274, !dbg !4672

if.end274:                                        ; preds = %if.then273, %if.then258
  %257 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4673
  %258 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4674
  %links275 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %258, i32 0, i32 12, !dbg !4675
  %259 = bitcast %struct.bController*** %links275 to i8***, !dbg !4676
  %260 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4677
  %totlinks276 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %260, i32 0, i32 7, !dbg !4678
  call void @uiSetButLink(%struct.uiBut* %257, i8** null, i8*** %259, i16* %totlinks276, i32 0, i32 1), !dbg !4679
  br label %if.end277, !dbg !4680

if.end277:                                        ; preds = %if.end274, %lor.lhs.false254
  br label %for.inc278, !dbg !4681

for.inc278:                                       ; preds = %if.end277
  %261 = load %struct.bSensor*, %struct.bSensor** %sens189, align 8, !dbg !4682
  %next279 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %261, i32 0, i32 0, !dbg !4683
  %262 = load %struct.bSensor*, %struct.bSensor** %next279, align 8, !dbg !4683
  store %struct.bSensor* %262, %struct.bSensor** %sens189, align 8, !dbg !4684
  br label %for.cond227, !dbg !4685, !llvm.loop !4686

for.end280:                                       ; preds = %for.cond227
  br label %for.inc281, !dbg !4688

for.inc281:                                       ; preds = %for.end280, %if.then223, %if.then198
  %263 = load i16, i16* %a, align 2, !dbg !4689
  %inc282 = add i16 %263, 1, !dbg !4689
  store i16 %inc282, i16* %a, align 2, !dbg !4689
  br label %for.cond183, !dbg !4690, !llvm.loop !4691

for.end283:                                       ; preds = %for.cond183
  %264 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4693
  call void @uiBlockLayoutResolve(%struct.uiBlock* %264, i32* null, i32* %yco), !dbg !4694
  %265 = load i32, i32* %height, align 4, !dbg !4695
  %266 = load i32, i32* %yco, align 4, !dbg !4695
  %cmp284 = icmp slt i32 %265, %266, !dbg !4695
  br i1 %cmp284, label %cond.true, label %cond.false, !dbg !4695

cond.true:                                        ; preds = %for.end283
  %267 = load i32, i32* %height, align 4, !dbg !4695
  br label %cond.end, !dbg !4695

cond.false:                                       ; preds = %for.end283
  %268 = load i32, i32* %yco, align 4, !dbg !4695
  br label %cond.end, !dbg !4695

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %267, %cond.true ], [ %268, %cond.false ], !dbg !4695
  store i32 %cond, i32* %height, align 4, !dbg !4696
  %269 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4697
  %conv286 = sext i16 %269 to i32, !dbg !4698
  %mul287 = mul nsw i32 40, %conv286, !dbg !4699
  store i32 %mul287, i32* %xco, align 4, !dbg !4700
  %270 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4701
  %conv288 = sext i16 %270 to i32, !dbg !4702
  %sub289 = sub nsw i32 0, %conv288, !dbg !4703
  %div290 = sdiv i32 %sub289, 2, !dbg !4704
  store i32 %div290, i32* %yco, align 4, !dbg !4705
  %271 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4706
  %conv291 = sext i16 %271 to i32, !dbg !4707
  %mul292 = mul nsw i32 17, %conv291, !dbg !4708
  store i32 %mul292, i32* %width, align 4, !dbg !4709
  %272 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4710
  %273 = load i32, i32* %xco, align 4, !dbg !4711
  %274 = load i32, i32* %yco, align 4, !dbg !4712
  %275 = load i32, i32* %width, align 4, !dbg !4713
  %call293 = call %struct.uiStyle* @UI_GetStyle(), !dbg !4714
  %call294 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %272, i32 1, i32 0, i32 %273, i32 %274, i32 %275, i32 20, i32 0, %struct.uiStyle* %call293), !dbg !4715
  store %struct.uiLayout* %call294, %struct.uiLayout** %layout, align 8, !dbg !4716
  %276 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4717
  %call295 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %276, i32 1), !dbg !4718
  store %struct.uiLayout* %call295, %struct.uiLayout** %row, align 8, !dbg !4719
  %277 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4720
  %278 = load i32, i32* %xco, align 4, !dbg !4721
  %279 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4722
  %conv296 = sext i16 %279 to i32, !dbg !4723
  %div297 = sdiv i32 %conv296, 2, !dbg !4724
  %sub298 = sub nsw i32 %278, %div297, !dbg !4725
  %280 = load i32, i32* %yco, align 4, !dbg !4726
  %281 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4727
  %conv299 = sext i16 %281 to i32, !dbg !4728
  %mul300 = mul nsw i32 15, %conv299, !dbg !4729
  %conv301 = trunc i32 %mul300 to i16, !dbg !4730
  %282 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4731
  %call302 = call %struct.uiBut* @uiDefBlockBut(%struct.uiBlock* %277, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @actuator_menu, i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i32 %sub298, i32 %280, i16 signext %conv301, i16 signext %282, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4732
  %283 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4733
  call void @uiItemR(%struct.uiLayout* %283, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i32 0), !dbg !4734
  %284 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4735
  call void @uiItemR(%struct.uiLayout* %284, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 0), !dbg !4736
  %285 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4737
  call void @uiItemR(%struct.uiLayout* %285, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 0), !dbg !4738
  %286 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4739
  call void @uiItemR(%struct.uiLayout* %286, %struct.PointerRNA* %logic_ptr, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0), !dbg !4740
  store i16 0, i16* %a, align 2, !dbg !4741
  br label %for.cond303, !dbg !4743

for.cond303:                                      ; preds = %for.inc400, %cond.end
  %287 = load i16, i16* %a, align 2, !dbg !4744
  %conv304 = sext i16 %287 to i32, !dbg !4744
  %288 = load i16, i16* %count, align 2, !dbg !4746
  %conv305 = sext i16 %288 to i32, !dbg !4746
  %cmp306 = icmp slt i32 %conv304, %conv305, !dbg !4747
  br i1 %cmp306, label %for.body308, label %for.end402, !dbg !4748

for.body308:                                      ; preds = %for.cond303
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act309, metadata !4749, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr310, metadata !4752, metadata !DIExpression()), !dbg !4753
  %289 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4754
  %290 = load i16, i16* %a, align 2, !dbg !4755
  %idxprom311 = sext i16 %290 to i64, !dbg !4754
  %arrayidx312 = getelementptr inbounds %struct.ID*, %struct.ID** %289, i64 %idxprom311, !dbg !4754
  %291 = load %struct.ID*, %struct.ID** %arrayidx312, align 8, !dbg !4754
  %292 = bitcast %struct.ID* %291 to %struct.Object*, !dbg !4756
  store %struct.Object* %292, %struct.Object** %ob, align 8, !dbg !4757
  %293 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4758
  %scavisflag313 = getelementptr inbounds %struct.Object, %struct.Object* %293, i32 0, i32 62, !dbg !4760
  %294 = load i8, i8* %scavisflag313, align 2, !dbg !4760
  %conv314 = zext i8 %294 to i32, !dbg !4758
  %and315 = and i32 %conv314, 4, !dbg !4761
  %cmp316 = icmp eq i32 %and315, 0, !dbg !4762
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !4763

if.then318:                                       ; preds = %for.body308
  br label %for.inc400, !dbg !4764

if.end319:                                        ; preds = %for.body308
  %295 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4766
  %call320 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %295, i32 1), !dbg !4767
  store %struct.uiLayout* %call320, %struct.uiLayout** %row, align 8, !dbg !4768
  %296 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4769
  %297 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4770
  %id321 = getelementptr inbounds %struct.Object, %struct.Object* %297, i32 0, i32 0, !dbg !4771
  %name322 = getelementptr inbounds %struct.ID, %struct.ID* %id321, i32 0, i32 4, !dbg !4772
  %arraydecay323 = getelementptr inbounds [66 x i8], [66 x i8]* %name322, i64 0, i64 0, !dbg !4770
  %add.ptr324 = getelementptr inbounds i8, i8* %arraydecay323, i64 2, !dbg !4773
  %298 = load i32, i32* %xco, align 4, !dbg !4774
  %299 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4775
  %conv325 = sext i16 %299 to i32, !dbg !4776
  %div326 = sdiv i32 %conv325, 2, !dbg !4777
  %sub327 = sub nsw i32 %298, %div326, !dbg !4778
  %conv328 = trunc i32 %sub327 to i16, !dbg !4779
  %conv329 = sext i16 %conv328 to i32, !dbg !4779
  %300 = load i32, i32* %yco, align 4, !dbg !4780
  %301 = load i32, i32* %width, align 4, !dbg !4781
  %conv330 = sitofp i32 %301 to float, !dbg !4781
  %302 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4782
  %conv331 = sext i16 %302 to i32, !dbg !4783
  %conv332 = sitofp i32 %conv331 to float, !dbg !4783
  %mul333 = fmul float 1.500000e+00, %conv332, !dbg !4784
  %sub334 = fsub float %conv330, %mul333, !dbg !4785
  %conv335 = fptosi float %sub334 to i16, !dbg !4786
  %303 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4787
  %304 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4788
  %scaflag336 = getelementptr inbounds %struct.Object, %struct.Object* %304, i32 0, i32 61, !dbg !4789
  %call337 = call %struct.uiBut* @uiDefButBitS(%struct.uiBlock* %296, i32 1536, i32 128, i32 1, i8* %add.ptr324, i32 %conv329, i32 %300, i16 signext %conv335, i16 signext %303, i16* %scaflag336, float 0.000000e+00, float 3.100000e+01, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i64 0, i64 0)), !dbg !4790
  %305 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4791
  %306 = bitcast %struct.Object* %305 to %struct.ID*, !dbg !4792
  %307 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4793
  %308 = bitcast %struct.Object* %307 to i8*, !dbg !4793
  call void @RNA_pointer_create(%struct.ID* %306, %struct.StructRNA* @RNA_Object, i8* %308, %struct.PointerRNA* %object_ptr), !dbg !4794
  %309 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4795
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %309, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), %struct.PointerRNA* %object_ptr), !dbg !4796
  %310 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !4797
  %311 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4798
  call void @uiItemMenuEnumO(%struct.uiLayout* %310, %struct.bContext* %311, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), i32 0), !dbg !4799
  %312 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4800
  %scaflag338 = getelementptr inbounds %struct.Object, %struct.Object* %312, i32 0, i32 61, !dbg !4802
  %313 = load i16, i16* %scaflag338, align 4, !dbg !4802
  %conv339 = sext i16 %313 to i32, !dbg !4800
  %and340 = and i32 %conv339, 128, !dbg !4803
  %cmp341 = icmp eq i32 %and340, 0, !dbg !4804
  br i1 %cmp341, label %if.then343, label %if.end344, !dbg !4805

if.then343:                                       ; preds = %if.end319
  br label %for.inc400, !dbg !4806

if.end344:                                        ; preds = %if.end319
  %314 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4807
  call void @uiItemS(%struct.uiLayout* %314), !dbg !4808
  %315 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4809
  %actuators345 = getelementptr inbounds %struct.Object, %struct.Object* %315, i32 0, i32 94, !dbg !4811
  %first346 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators345, i32 0, i32 0, !dbg !4812
  %316 = load i8*, i8** %first346, align 8, !dbg !4812
  %317 = bitcast i8* %316 to %struct.bActuator*, !dbg !4809
  store %struct.bActuator* %317, %struct.bActuator** %act309, align 8, !dbg !4813
  br label %for.cond347, !dbg !4814

for.cond347:                                      ; preds = %for.inc397, %if.end344
  %318 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4815
  %tobool348 = icmp ne %struct.bActuator* %318, null, !dbg !4817
  br i1 %tobool348, label %for.body349, label %for.end399, !dbg !4817

for.body349:                                      ; preds = %for.cond347
  %319 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4818
  %320 = bitcast %struct.Object* %319 to %struct.ID*, !dbg !4820
  %321 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4821
  %322 = bitcast %struct.bActuator* %321 to i8*, !dbg !4821
  call void @RNA_pointer_create(%struct.ID* %320, %struct.StructRNA* @RNA_Actuator, i8* %322, %struct.PointerRNA* %ptr310), !dbg !4822
  %323 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4823
  %scaflag350 = getelementptr inbounds %struct.Object, %struct.Object* %323, i32 0, i32 61, !dbg !4825
  %324 = load i16, i16* %scaflag350, align 4, !dbg !4825
  %conv351 = sext i16 %324 to i32, !dbg !4823
  %and352 = and i32 %conv351, 4096, !dbg !4826
  %tobool353 = icmp ne i32 %and352, 0, !dbg !4826
  br i1 %tobool353, label %if.then379, label %lor.lhs.false354, !dbg !4827

lor.lhs.false354:                                 ; preds = %for.body349
  %325 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4828
  %scaflag355 = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %325, i32 0, i32 7, !dbg !4829
  %326 = load i16, i16* %scaflag355, align 2, !dbg !4829
  %conv356 = sext i16 %326 to i32, !dbg !4828
  %and357 = and i32 %conv356, 1024, !dbg !4830
  %tobool358 = icmp ne i32 %and357, 0, !dbg !4830
  br i1 %tobool358, label %lor.lhs.false359, label %if.then379, !dbg !4831

lor.lhs.false359:                                 ; preds = %lor.lhs.false354
  %327 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4832
  %flag360 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %327, i32 0, i32 4, !dbg !4833
  %328 = load i16, i16* %flag360, align 2, !dbg !4833
  %conv361 = sext i16 %328 to i32, !dbg !4832
  %and362 = and i32 %conv361, 8, !dbg !4834
  %tobool363 = icmp ne i32 %and362, 0, !dbg !4834
  br i1 %tobool363, label %lor.lhs.false364, label %if.then379, !dbg !4835

lor.lhs.false364:                                 ; preds = %lor.lhs.false359
  %329 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4836
  %flag365 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %329, i32 0, i32 4, !dbg !4837
  %330 = load i16, i16* %flag365, align 2, !dbg !4837
  %conv366 = sext i16 %330 to i32, !dbg !4836
  %and367 = and i32 %conv366, 16, !dbg !4838
  %tobool368 = icmp ne i32 %and367, 0, !dbg !4838
  br i1 %tobool368, label %if.then379, label %lor.lhs.false369, !dbg !4839

lor.lhs.false369:                                 ; preds = %lor.lhs.false364
  %331 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4840
  %flag370 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %331, i32 0, i32 4, !dbg !4841
  %332 = load i16, i16* %flag370, align 2, !dbg !4841
  %conv371 = sext i16 %332 to i32, !dbg !4840
  %and372 = and i32 %conv371, 32, !dbg !4842
  %tobool373 = icmp ne i32 %and372, 0, !dbg !4842
  br i1 %tobool373, label %land.lhs.true374, label %if.end396, !dbg !4843

land.lhs.true374:                                 ; preds = %lor.lhs.false369
  %333 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !4844
  %scaflag375 = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %333, i32 0, i32 7, !dbg !4845
  %334 = load i16, i16* %scaflag375, align 2, !dbg !4845
  %conv376 = sext i16 %334 to i32, !dbg !4844
  %and377 = and i32 %conv376, 1024, !dbg !4846
  %tobool378 = icmp ne i32 %and377, 0, !dbg !4846
  br i1 %tobool378, label %if.then379, label %if.end396, !dbg !4847

if.then379:                                       ; preds = %land.lhs.true374, %lor.lhs.false364, %lor.lhs.false359, %lor.lhs.false354, %for.body349
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split380, metadata !4848, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col381, metadata !4851, metadata !DIExpression()), !dbg !4852
  %335 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4853
  %flag382 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %335, i32 0, i32 4, !dbg !4854
  %336 = load i16, i16* %flag382, align 2, !dbg !4855
  %conv383 = sext i16 %336 to i32, !dbg !4855
  %or384 = or i32 %conv383, 16, !dbg !4855
  %conv385 = trunc i32 %or384 to i16, !dbg !4855
  store i16 %conv385, i16* %flag382, align 2, !dbg !4855
  %337 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !4856
  %call386 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %337, float 0x3FA99999A0000000, i32 0), !dbg !4857
  store %struct.uiLayout* %call386, %struct.uiLayout** %split380, align 8, !dbg !4858
  %338 = load %struct.uiLayout*, %struct.uiLayout** %split380, align 8, !dbg !4859
  %call387 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %338, i32 0), !dbg !4860
  store %struct.uiLayout* %call387, %struct.uiLayout** %col381, align 8, !dbg !4861
  %339 = load %struct.uiLayout*, %struct.uiLayout** %col381, align 8, !dbg !4862
  %call388 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr310, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4863
  %conv389 = trunc i32 %call388 to i8, !dbg !4863
  call void @uiLayoutSetActive(%struct.uiLayout* %339, i8 zeroext %conv389), !dbg !4864
  %340 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4865
  %341 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4866
  %342 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4867
  %343 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4868
  %344 = bitcast %struct.bActuator* %343 to i8*, !dbg !4868
  %call390 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %340, i32 11776, i32 0, i32 50, i32 0, i32 0, i16 signext %341, i16 signext %342, i8* %344, float 2.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !4869
  store %struct.uiBut* %call390, %struct.uiBut** %but, align 8, !dbg !4870
  %call391 = call i32 @RNA_boolean_get(%struct.PointerRNA* %ptr310, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !4871
  %tobool392 = icmp ne i32 %call391, 0, !dbg !4871
  br i1 %tobool392, label %if.end394, label %if.then393, !dbg !4873

if.then393:                                       ; preds = %if.then379
  %345 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4874
  call void @uiButSetFlag(%struct.uiBut* %345, i32 67108864), !dbg !4876
  br label %if.end394, !dbg !4877

if.end394:                                        ; preds = %if.then393, %if.then379
  %346 = load %struct.uiLayout*, %struct.uiLayout** %split380, align 8, !dbg !4878
  %call395 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %346, i32 1), !dbg !4879
  store %struct.uiLayout* %call395, %struct.uiLayout** %col381, align 8, !dbg !4880
  %347 = load %struct.uiLayout*, %struct.uiLayout** %col381, align 8, !dbg !4881
  call void @uiLayoutSetContextPointer(%struct.uiLayout* %347, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), %struct.PointerRNA* %ptr310), !dbg !4882
  %348 = load %struct.uiLayout*, %struct.uiLayout** %col381, align 8, !dbg !4883
  call void @draw_actuator_header(%struct.uiLayout* %348, %struct.PointerRNA* %ptr310, %struct.PointerRNA* %logic_ptr), !dbg !4884
  %349 = load %struct.uiLayout*, %struct.uiLayout** %col381, align 8, !dbg !4885
  %350 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4886
  call void @draw_brick_actuator(%struct.uiLayout* %349, %struct.PointerRNA* %ptr310, %struct.bContext* %350), !dbg !4887
  br label %if.end396, !dbg !4888

if.end396:                                        ; preds = %if.end394, %land.lhs.true374, %lor.lhs.false369
  br label %for.inc397, !dbg !4889

for.inc397:                                       ; preds = %if.end396
  %351 = load %struct.bActuator*, %struct.bActuator** %act309, align 8, !dbg !4890
  %next398 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %351, i32 0, i32 0, !dbg !4891
  %352 = load %struct.bActuator*, %struct.bActuator** %next398, align 8, !dbg !4891
  store %struct.bActuator* %352, %struct.bActuator** %act309, align 8, !dbg !4892
  br label %for.cond347, !dbg !4893, !llvm.loop !4894

for.end399:                                       ; preds = %for.cond347
  br label %for.inc400, !dbg !4896

for.inc400:                                       ; preds = %for.end399, %if.then343, %if.then318
  %353 = load i16, i16* %a, align 2, !dbg !4897
  %inc401 = add i16 %353, 1, !dbg !4897
  store i16 %inc401, i16* %a, align 2, !dbg !4897
  br label %for.cond303, !dbg !4898, !llvm.loop !4899

for.end402:                                       ; preds = %for.cond303
  %354 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4901
  call void @uiBlockLayoutResolve(%struct.uiBlock* %354, i32* null, i32* %yco), !dbg !4902
  %355 = load i32, i32* %height, align 4, !dbg !4903
  %356 = load i32, i32* %yco, align 4, !dbg !4903
  %cmp403 = icmp slt i32 %355, %356, !dbg !4903
  br i1 %cmp403, label %cond.true405, label %cond.false406, !dbg !4903

cond.true405:                                     ; preds = %for.end402
  %357 = load i32, i32* %height, align 4, !dbg !4903
  br label %cond.end407, !dbg !4903

cond.false406:                                    ; preds = %for.end402
  %358 = load i32, i32* %yco, align 4, !dbg !4903
  br label %cond.end407, !dbg !4903

cond.end407:                                      ; preds = %cond.false406, %cond.true405
  %cond408 = phi i32 [ %357, %cond.true405 ], [ %358, %cond.false406 ], !dbg !4903
  store i32 %cond408, i32* %height, align 4, !dbg !4904
  %359 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4905
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %359, i32 0, i32 2, !dbg !4906
  %360 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4907
  %conv409 = sext i16 %360 to i32, !dbg !4908
  %conv410 = sitofp i32 %conv409 to float, !dbg !4908
  %mul411 = fmul float 5.750000e+01, %conv410, !dbg !4909
  %conv412 = fptosi float %mul411 to i32, !dbg !4910
  %361 = load i32, i32* %height, align 4, !dbg !4911
  %362 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4912
  %conv413 = sext i16 %362 to i32, !dbg !4913
  %sub414 = sub nsw i32 %361, %conv413, !dbg !4914
  call void @UI_view2d_totRect_set(%struct.View2D* %v2d, i32 %conv412, i32 %sub414), !dbg !4915
  %363 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4916
  %v2d415 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %363, i32 0, i32 2, !dbg !4917
  call void @UI_view2d_view_ortho(%struct.View2D* %v2d415), !dbg !4918
  %364 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4919
  call void @uiComposeLinks(%struct.uiBlock* %364), !dbg !4920
  %365 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4921
  %366 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4922
  call void @uiEndBlock(%struct.bContext* %365, %struct.uiBlock* %366), !dbg !4923
  %367 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4924
  %368 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4925
  call void @uiDrawBlock(%struct.bContext* %367, %struct.uiBlock* %368), !dbg !4926
  %369 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4927
  call void @UI_view2d_view_restore(%struct.bContext* %369), !dbg !4928
  %370 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4929
  %tobool416 = icmp ne %struct.ID** %370, null, !dbg !4929
  br i1 %tobool416, label %if.then417, label %if.end418, !dbg !4931

if.then417:                                       ; preds = %cond.end407
  %371 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4932
  %372 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !4933
  %373 = bitcast %struct.ID** %372 to i8*, !dbg !4933
  call void %371(i8* %373), !dbg !4932
  br label %if.end418, !dbg !4932

if.end418:                                        ; preds = %if.then, %if.then417, %cond.end407
  ret void, !dbg !4934
}

declare dso_local %struct.SpaceLogic* @CTX_wm_space_logic(%struct.bContext*) #2

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local %struct.uiBlock* @uiBeginBlock(%struct.bContext*, %struct.ARegion*, i8*, i16 signext) #2

declare dso_local void @uiBlockSetHandleFunc(%struct.uiBlock*, void (%struct.bContext*, i8*, i32)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_logic_buts(%struct.bContext* %C, i8* %UNUSED_arg, i32 %event) #0 !dbg !4935 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %event.addr = alloca i32, align 4
  %bmain = alloca %struct.Main*, align 8
  %sens = alloca %struct.bSensor*, align 8
  %cont = alloca %struct.bController*, align 8
  %act = alloca %struct.bActuator*, align 8
  %ob = alloca %struct.Object*, align 8
  %didit = alloca i32, align 4
  %bit = alloca i32, align 4
  %sa = alloca %struct.bSoundActuator*, align 8
  %sound = alloca %struct.ID*, align 8
  %nr = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !4944, metadata !DIExpression()), !dbg !4945
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4946
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !4947
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !4948, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4954, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.declare(metadata i32* %didit, metadata !4956, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !4958, metadata !DIExpression()), !dbg !4959
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4960
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !4961
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !4962
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4963
  %cmp = icmp eq %struct.Object* %2, null, !dbg !4965
  br i1 %cmp, label %if.then, label %if.end, !dbg !4966

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !4967

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %event.addr, align 4, !dbg !4968
  switch i32 %3, label %sw.epilog [
    i32 2714, label %sw.bb
    i32 2715, label %sw.bb2
    i32 2717, label %sw.bb2
    i32 2716, label %sw.bb2
    i32 2703, label %sw.bb5
    i32 2704, label %sw.bb18
    i32 2705, label %sw.bb40
    i32 2706, label %sw.bb63
    i32 2718, label %sw.bb107
    i32 2719, label %sw.bb128
    i32 2707, label %sw.bb154
    i32 2708, label %sw.bb181
    i32 2709, label %sw.bb205
    i32 2710, label %sw.bb232
    i32 2711, label %sw.bb259
    i32 2712, label %sw.bb283
  ], !dbg !4969

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4970
  %gameflag = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 99, !dbg !4972
  %5 = load i32, i32* %gameflag, align 8, !dbg !4973
  %and = and i32 %5, -40966, !dbg !4973
  store i32 %and, i32* %gameflag, align 8, !dbg !4973
  br label %sw.epilog, !dbg !4974

sw.bb2:                                           ; preds = %if.end, %if.end, %if.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4975
  %gameflag3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 99, !dbg !4976
  %7 = load i32, i32* %gameflag3, align 8, !dbg !4977
  %and4 = and i32 %7, -24577, !dbg !4977
  store i32 %and4, i32* %gameflag3, align 8, !dbg !4977
  br label %sw.epilog, !dbg !4978

sw.bb5:                                           ; preds = %if.end
  %8 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4979
  %object = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 13, !dbg !4981
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !4982
  %9 = load i8*, i8** %first, align 8, !dbg !4982
  %10 = bitcast i8* %9 to %struct.Object*, !dbg !4979
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !4983
  br label %for.cond, !dbg !4984

for.cond:                                         ; preds = %for.inc, %sw.bb5
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4985
  %tobool = icmp ne %struct.Object* %11, null, !dbg !4987
  br i1 %tobool, label %for.body, label %for.end, !dbg !4987

for.body:                                         ; preds = %for.cond
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4988
  %scaflag = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 61, !dbg !4991
  %13 = load i16, i16* %scaflag, align 4, !dbg !4991
  %conv = sext i16 %13 to i32, !dbg !4988
  %and6 = and i32 %conv, 256, !dbg !4992
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4992
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !4993

if.then8:                                         ; preds = %for.body
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4994
  %scaflag9 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 61, !dbg !4996
  %15 = load i16, i16* %scaflag9, align 4, !dbg !4997
  %conv10 = sext i16 %15 to i32, !dbg !4997
  %and11 = and i32 %conv10, -257, !dbg !4997
  %conv12 = trunc i32 %and11 to i16, !dbg !4997
  store i16 %conv12, i16* %scaflag9, align 4, !dbg !4997
  %call13 = call %struct.bSensor* @new_sensor(i32 0), !dbg !4998
  store %struct.bSensor* %call13, %struct.bSensor** %sens, align 8, !dbg !4999
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5000
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 92, !dbg !5001
  %17 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5002
  %18 = bitcast %struct.bSensor* %17 to i8*, !dbg !5002
  call void @BLI_addtail(%struct.ListBase* %sensors, i8* %18), !dbg !5003
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5004
  %20 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5005
  %name = getelementptr inbounds %struct.bSensor, %struct.bSensor* %20, i32 0, i32 10, !dbg !5006
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5005
  call void @make_unique_prop_names(%struct.bContext* %19, i8* %arraydecay), !dbg !5007
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5008
  %scaflag14 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 61, !dbg !5009
  %22 = load i16, i16* %scaflag14, align 4, !dbg !5010
  %conv15 = sext i16 %22 to i32, !dbg !5010
  %or = or i32 %conv15, 64, !dbg !5010
  %conv16 = trunc i32 %or to i16, !dbg !5010
  store i16 %conv16, i16* %scaflag14, align 4, !dbg !5010
  br label %if.end17, !dbg !5011

if.end17:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !5012

for.inc:                                          ; preds = %if.end17
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5013
  %id = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 0, !dbg !5014
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !5015
  %24 = load i8*, i8** %next, align 8, !dbg !5015
  %25 = bitcast i8* %24 to %struct.Object*, !dbg !5013
  store %struct.Object* %25, %struct.Object** %ob, align 8, !dbg !5016
  br label %for.cond, !dbg !5017, !llvm.loop !5018

for.end:                                          ; preds = %for.cond
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5020
  call void @ED_undo_push(%struct.bContext* %26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0)), !dbg !5021
  br label %sw.epilog, !dbg !5022

sw.bb18:                                          ; preds = %if.end
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5023
  %object19 = getelementptr inbounds %struct.Main, %struct.Main* %27, i32 0, i32 13, !dbg !5025
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object19, i32 0, i32 0, !dbg !5026
  %28 = load i8*, i8** %first20, align 8, !dbg !5026
  %29 = bitcast i8* %28 to %struct.Object*, !dbg !5023
  store %struct.Object* %29, %struct.Object** %ob, align 8, !dbg !5027
  br label %for.cond21, !dbg !5028

for.cond21:                                       ; preds = %for.inc36, %sw.bb18
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5029
  %tobool22 = icmp ne %struct.Object* %30, null, !dbg !5031
  br i1 %tobool22, label %for.body23, label %for.end39, !dbg !5031

for.body23:                                       ; preds = %for.cond21
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5032
  %sensors24 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 92, !dbg !5034
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors24, i32 0, i32 0, !dbg !5035
  %32 = load i8*, i8** %first25, align 8, !dbg !5035
  %33 = bitcast i8* %32 to %struct.bSensor*, !dbg !5032
  store %struct.bSensor* %33, %struct.bSensor** %sens, align 8, !dbg !5036
  br label %while.cond, !dbg !5037

while.cond:                                       ; preds = %if.end34, %for.body23
  %34 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5038
  %tobool26 = icmp ne %struct.bSensor* %34, null, !dbg !5037
  br i1 %tobool26, label %while.body, label %while.end, !dbg !5037

while.body:                                       ; preds = %while.cond
  %35 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5039
  %type = getelementptr inbounds %struct.bSensor, %struct.bSensor* %35, i32 0, i32 2, !dbg !5042
  %36 = load i16, i16* %type, align 8, !dbg !5042
  %conv27 = sext i16 %36 to i32, !dbg !5039
  %37 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5043
  %otype = getelementptr inbounds %struct.bSensor, %struct.bSensor* %37, i32 0, i32 3, !dbg !5044
  %38 = load i16, i16* %otype, align 2, !dbg !5044
  %conv28 = sext i16 %38 to i32, !dbg !5043
  %cmp29 = icmp ne i32 %conv27, %conv28, !dbg !5045
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !5046

if.then31:                                        ; preds = %while.body
  %39 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5047
  call void @init_sensor(%struct.bSensor* %39), !dbg !5049
  %40 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5050
  %type32 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %40, i32 0, i32 2, !dbg !5051
  %41 = load i16, i16* %type32, align 8, !dbg !5051
  %42 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5052
  %otype33 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %42, i32 0, i32 3, !dbg !5053
  store i16 %41, i16* %otype33, align 2, !dbg !5054
  br label %while.end, !dbg !5055

if.end34:                                         ; preds = %while.body
  %43 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5056
  %next35 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %43, i32 0, i32 0, !dbg !5057
  %44 = load %struct.bSensor*, %struct.bSensor** %next35, align 8, !dbg !5057
  store %struct.bSensor* %44, %struct.bSensor** %sens, align 8, !dbg !5058
  br label %while.cond, !dbg !5037, !llvm.loop !5059

while.end:                                        ; preds = %if.then31, %while.cond
  br label %for.inc36, !dbg !5061

for.inc36:                                        ; preds = %while.end
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5062
  %id37 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 0, !dbg !5063
  %next38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 0, !dbg !5064
  %46 = load i8*, i8** %next38, align 8, !dbg !5064
  %47 = bitcast i8* %46 to %struct.Object*, !dbg !5062
  store %struct.Object* %47, %struct.Object** %ob, align 8, !dbg !5065
  br label %for.cond21, !dbg !5066, !llvm.loop !5067

for.end39:                                        ; preds = %for.cond21
  br label %sw.epilog, !dbg !5069

sw.bb40:                                          ; preds = %if.end
  %48 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5070
  %object41 = getelementptr inbounds %struct.Main, %struct.Main* %48, i32 0, i32 13, !dbg !5072
  %first42 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object41, i32 0, i32 0, !dbg !5073
  %49 = load i8*, i8** %first42, align 8, !dbg !5073
  %50 = bitcast i8* %49 to %struct.Object*, !dbg !5070
  store %struct.Object* %50, %struct.Object** %ob, align 8, !dbg !5074
  br label %for.cond43, !dbg !5075

for.cond43:                                       ; preds = %for.inc59, %sw.bb40
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5076
  %tobool44 = icmp ne %struct.Object* %51, null, !dbg !5078
  br i1 %tobool44, label %for.body45, label %for.end62, !dbg !5078

for.body45:                                       ; preds = %for.cond43
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5079
  %sensors46 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 92, !dbg !5081
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors46, i32 0, i32 0, !dbg !5082
  %53 = load i8*, i8** %first47, align 8, !dbg !5082
  %54 = bitcast i8* %53 to %struct.bSensor*, !dbg !5079
  store %struct.bSensor* %54, %struct.bSensor** %sens, align 8, !dbg !5083
  br label %while.cond48, !dbg !5084

while.cond48:                                     ; preds = %if.end56, %for.body45
  %55 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5085
  %tobool49 = icmp ne %struct.bSensor* %55, null, !dbg !5084
  br i1 %tobool49, label %while.body50, label %while.end58, !dbg !5084

while.body50:                                     ; preds = %while.cond48
  %56 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5086
  %flag = getelementptr inbounds %struct.bSensor, %struct.bSensor* %56, i32 0, i32 4, !dbg !5089
  %57 = load i16, i16* %flag, align 4, !dbg !5089
  %conv51 = sext i16 %57 to i32, !dbg !5086
  %and52 = and i32 %conv51, 2, !dbg !5090
  %tobool53 = icmp ne i32 %and52, 0, !dbg !5090
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !5091

if.then54:                                        ; preds = %while.body50
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5092
  %sensors55 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 92, !dbg !5094
  %59 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5095
  %60 = bitcast %struct.bSensor* %59 to i8*, !dbg !5095
  call void @BLI_remlink(%struct.ListBase* %sensors55, i8* %60), !dbg !5096
  %61 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5097
  call void @free_sensor(%struct.bSensor* %61), !dbg !5098
  br label %while.end58, !dbg !5099

if.end56:                                         ; preds = %while.body50
  %62 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5100
  %next57 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %62, i32 0, i32 0, !dbg !5101
  %63 = load %struct.bSensor*, %struct.bSensor** %next57, align 8, !dbg !5101
  store %struct.bSensor* %63, %struct.bSensor** %sens, align 8, !dbg !5102
  br label %while.cond48, !dbg !5084, !llvm.loop !5103

while.end58:                                      ; preds = %if.then54, %while.cond48
  br label %for.inc59, !dbg !5105

for.inc59:                                        ; preds = %while.end58
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5106
  %id60 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 0, !dbg !5107
  %next61 = getelementptr inbounds %struct.ID, %struct.ID* %id60, i32 0, i32 0, !dbg !5108
  %65 = load i8*, i8** %next61, align 8, !dbg !5108
  %66 = bitcast i8* %65 to %struct.Object*, !dbg !5106
  store %struct.Object* %66, %struct.Object** %ob, align 8, !dbg !5109
  br label %for.cond43, !dbg !5110, !llvm.loop !5111

for.end62:                                        ; preds = %for.cond43
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5113
  call void @ED_undo_push(%struct.bContext* %67, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0)), !dbg !5114
  br label %sw.epilog, !dbg !5115

sw.bb63:                                          ; preds = %if.end
  %68 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5116
  %object64 = getelementptr inbounds %struct.Main, %struct.Main* %68, i32 0, i32 13, !dbg !5118
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object64, i32 0, i32 0, !dbg !5119
  %69 = load i8*, i8** %first65, align 8, !dbg !5119
  %70 = bitcast i8* %69 to %struct.Object*, !dbg !5116
  store %struct.Object* %70, %struct.Object** %ob, align 8, !dbg !5120
  br label %for.cond66, !dbg !5121

for.cond66:                                       ; preds = %for.inc103, %sw.bb63
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5122
  %tobool67 = icmp ne %struct.Object* %71, null, !dbg !5124
  br i1 %tobool67, label %for.body68, label %for.end106, !dbg !5124

for.body68:                                       ; preds = %for.cond66
  %72 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5125
  %scaflag69 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 61, !dbg !5128
  %73 = load i16, i16* %scaflag69, align 4, !dbg !5128
  %conv70 = sext i16 %73 to i32, !dbg !5125
  %and71 = and i32 %conv70, 512, !dbg !5129
  %tobool72 = icmp ne i32 %and71, 0, !dbg !5129
  br i1 %tobool72, label %if.then73, label %if.end102, !dbg !5130

if.then73:                                        ; preds = %for.body68
  %74 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5131
  %scaflag74 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 61, !dbg !5133
  %75 = load i16, i16* %scaflag74, align 4, !dbg !5134
  %conv75 = sext i16 %75 to i32, !dbg !5134
  %and76 = and i32 %conv75, -513, !dbg !5134
  %conv77 = trunc i32 %and76 to i16, !dbg !5134
  store i16 %conv77, i16* %scaflag74, align 4, !dbg !5134
  %call78 = call %struct.bController* @new_controller(i32 0), !dbg !5135
  store %struct.bController* %call78, %struct.bController** %cont, align 8, !dbg !5136
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5137
  %77 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5138
  %name79 = getelementptr inbounds %struct.bController, %struct.bController* %77, i32 0, i32 11, !dbg !5139
  %arraydecay80 = getelementptr inbounds [64 x i8], [64 x i8]* %name79, i64 0, i64 0, !dbg !5138
  call void @make_unique_prop_names(%struct.bContext* %76, i8* %arraydecay80), !dbg !5140
  %78 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5141
  %scaflag81 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 61, !dbg !5142
  %79 = load i16, i16* %scaflag81, align 4, !dbg !5143
  %conv82 = sext i16 %79 to i32, !dbg !5143
  %or83 = or i32 %conv82, 2048, !dbg !5143
  %conv84 = trunc i32 %or83 to i16, !dbg !5143
  store i16 %conv84, i16* %scaflag81, align 4, !dbg !5143
  %80 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5144
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %80, i32 0, i32 93, !dbg !5145
  %81 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5146
  %82 = bitcast %struct.bController* %81 to i8*, !dbg !5146
  call void @BLI_addtail(%struct.ListBase* %controllers, i8* %82), !dbg !5147
  store i32 0, i32* %bit, align 4, !dbg !5148
  br label %for.cond85, !dbg !5150

for.cond85:                                       ; preds = %for.inc93, %if.then73
  %83 = load i32, i32* %bit, align 4, !dbg !5151
  %cmp86 = icmp slt i32 %83, 32, !dbg !5153
  br i1 %cmp86, label %for.body88, label %for.end94, !dbg !5154

for.body88:                                       ; preds = %for.cond85
  %84 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5155
  %state = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 123, !dbg !5158
  %85 = load i32, i32* %state, align 8, !dbg !5158
  %86 = load i32, i32* %bit, align 4, !dbg !5159
  %shl = shl i32 1, %86, !dbg !5160
  %and89 = and i32 %85, %shl, !dbg !5161
  %tobool90 = icmp ne i32 %and89, 0, !dbg !5161
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !5162

if.then91:                                        ; preds = %for.body88
  br label %for.end94, !dbg !5163

if.end92:                                         ; preds = %for.body88
  br label %for.inc93, !dbg !5164

for.inc93:                                        ; preds = %if.end92
  %87 = load i32, i32* %bit, align 4, !dbg !5165
  %inc = add nsw i32 %87, 1, !dbg !5165
  store i32 %inc, i32* %bit, align 4, !dbg !5165
  br label %for.cond85, !dbg !5166, !llvm.loop !5167

for.end94:                                        ; preds = %if.then91, %for.cond85
  %88 = load i32, i32* %bit, align 4, !dbg !5169
  %shl95 = shl i32 1, %88, !dbg !5170
  %89 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5171
  %state_mask = getelementptr inbounds %struct.bController, %struct.bController* %89, i32 0, i32 17, !dbg !5172
  store i32 %shl95, i32* %state_mask, align 4, !dbg !5173
  %90 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5174
  %state_mask96 = getelementptr inbounds %struct.bController, %struct.bController* %90, i32 0, i32 17, !dbg !5176
  %91 = load i32, i32* %state_mask96, align 4, !dbg !5176
  %cmp97 = icmp eq i32 %91, 0, !dbg !5177
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !5178

if.then99:                                        ; preds = %for.end94
  %92 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5179
  %state_mask100 = getelementptr inbounds %struct.bController, %struct.bController* %92, i32 0, i32 17, !dbg !5181
  store i32 1, i32* %state_mask100, align 4, !dbg !5182
  br label %if.end101, !dbg !5183

if.end101:                                        ; preds = %if.then99, %for.end94
  br label %if.end102, !dbg !5184

if.end102:                                        ; preds = %if.end101, %for.body68
  br label %for.inc103, !dbg !5185

for.inc103:                                       ; preds = %if.end102
  %93 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5186
  %id104 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 0, !dbg !5187
  %next105 = getelementptr inbounds %struct.ID, %struct.ID* %id104, i32 0, i32 0, !dbg !5188
  %94 = load i8*, i8** %next105, align 8, !dbg !5188
  %95 = bitcast i8* %94 to %struct.Object*, !dbg !5186
  store %struct.Object* %95, %struct.Object** %ob, align 8, !dbg !5189
  br label %for.cond66, !dbg !5190, !llvm.loop !5191

for.end106:                                       ; preds = %for.cond66
  %96 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5193
  call void @ED_undo_push(%struct.bContext* %96, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0)), !dbg !5194
  br label %sw.epilog, !dbg !5195

sw.bb107:                                         ; preds = %if.end
  %97 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5196
  %object108 = getelementptr inbounds %struct.Main, %struct.Main* %97, i32 0, i32 13, !dbg !5198
  %first109 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object108, i32 0, i32 0, !dbg !5199
  %98 = load i8*, i8** %first109, align 8, !dbg !5199
  %99 = bitcast i8* %98 to %struct.Object*, !dbg !5196
  store %struct.Object* %99, %struct.Object** %ob, align 8, !dbg !5200
  br label %for.cond110, !dbg !5201

for.cond110:                                      ; preds = %for.inc124, %sw.bb107
  %100 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5202
  %tobool111 = icmp ne %struct.Object* %100, null, !dbg !5204
  br i1 %tobool111, label %for.body112, label %for.end127, !dbg !5204

for.body112:                                      ; preds = %for.cond110
  %101 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5205
  %scaflag113 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 61, !dbg !5208
  %102 = load i16, i16* %scaflag113, align 4, !dbg !5208
  %conv114 = sext i16 %102 to i32, !dbg !5205
  %and115 = and i32 %conv114, 4096, !dbg !5209
  %tobool116 = icmp ne i32 %and115, 0, !dbg !5209
  br i1 %tobool116, label %if.then117, label %if.end123, !dbg !5210

if.then117:                                       ; preds = %for.body112
  %103 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5211
  %scaflag118 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 61, !dbg !5213
  %104 = load i16, i16* %scaflag118, align 4, !dbg !5214
  %conv119 = sext i16 %104 to i32, !dbg !5214
  %and120 = and i32 %conv119, -4097, !dbg !5214
  %conv121 = trunc i32 %and120 to i16, !dbg !5214
  store i16 %conv121, i16* %scaflag118, align 4, !dbg !5214
  %105 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5215
  %state122 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 123, !dbg !5216
  store i32 1073741823, i32* %state122, align 8, !dbg !5217
  br label %if.end123, !dbg !5218

if.end123:                                        ; preds = %if.then117, %for.body112
  br label %for.inc124, !dbg !5219

for.inc124:                                       ; preds = %if.end123
  %106 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5220
  %id125 = getelementptr inbounds %struct.Object, %struct.Object* %106, i32 0, i32 0, !dbg !5221
  %next126 = getelementptr inbounds %struct.ID, %struct.ID* %id125, i32 0, i32 0, !dbg !5222
  %107 = load i8*, i8** %next126, align 8, !dbg !5222
  %108 = bitcast i8* %107 to %struct.Object*, !dbg !5220
  store %struct.Object* %108, %struct.Object** %ob, align 8, !dbg !5223
  br label %for.cond110, !dbg !5224, !llvm.loop !5225

for.end127:                                       ; preds = %for.cond110
  br label %sw.epilog, !dbg !5227

sw.bb128:                                         ; preds = %if.end
  %109 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5228
  %object129 = getelementptr inbounds %struct.Main, %struct.Main* %109, i32 0, i32 13, !dbg !5230
  %first130 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object129, i32 0, i32 0, !dbg !5231
  %110 = load i8*, i8** %first130, align 8, !dbg !5231
  %111 = bitcast i8* %110 to %struct.Object*, !dbg !5228
  store %struct.Object* %111, %struct.Object** %ob, align 8, !dbg !5232
  br label %for.cond131, !dbg !5233

for.cond131:                                      ; preds = %for.inc150, %sw.bb128
  %112 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5234
  %tobool132 = icmp ne %struct.Object* %112, null, !dbg !5236
  br i1 %tobool132, label %for.body133, label %for.end153, !dbg !5236

for.body133:                                      ; preds = %for.cond131
  %113 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5237
  %scaflag134 = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 61, !dbg !5240
  %114 = load i16, i16* %scaflag134, align 4, !dbg !5240
  %conv135 = sext i16 %114 to i32, !dbg !5237
  %and136 = and i32 %conv135, 8192, !dbg !5241
  %tobool137 = icmp ne i32 %and136, 0, !dbg !5241
  br i1 %tobool137, label %if.then138, label %if.end149, !dbg !5242

if.then138:                                       ; preds = %for.body133
  %115 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5243
  %scaflag139 = getelementptr inbounds %struct.Object, %struct.Object* %115, i32 0, i32 61, !dbg !5245
  %116 = load i16, i16* %scaflag139, align 4, !dbg !5246
  %conv140 = sext i16 %116 to i32, !dbg !5246
  %and141 = and i32 %conv140, -8193, !dbg !5246
  %conv142 = trunc i32 %and141 to i16, !dbg !5246
  store i16 %conv142, i16* %scaflag139, align 4, !dbg !5246
  %117 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5247
  %init_state = getelementptr inbounds %struct.Object, %struct.Object* %117, i32 0, i32 124, !dbg !5248
  %118 = load i32, i32* %init_state, align 4, !dbg !5248
  %119 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5249
  %state143 = getelementptr inbounds %struct.Object, %struct.Object* %119, i32 0, i32 123, !dbg !5250
  store i32 %118, i32* %state143, align 8, !dbg !5251
  %120 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5252
  %state144 = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 123, !dbg !5254
  %121 = load i32, i32* %state144, align 8, !dbg !5254
  %tobool145 = icmp ne i32 %121, 0, !dbg !5252
  br i1 %tobool145, label %if.end148, label %if.then146, !dbg !5255

if.then146:                                       ; preds = %if.then138
  %122 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5256
  %state147 = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 123, !dbg !5257
  store i32 1, i32* %state147, align 8, !dbg !5258
  br label %if.end148, !dbg !5256

if.end148:                                        ; preds = %if.then146, %if.then138
  br label %if.end149, !dbg !5259

if.end149:                                        ; preds = %if.end148, %for.body133
  br label %for.inc150, !dbg !5260

for.inc150:                                       ; preds = %if.end149
  %123 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5261
  %id151 = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 0, !dbg !5262
  %next152 = getelementptr inbounds %struct.ID, %struct.ID* %id151, i32 0, i32 0, !dbg !5263
  %124 = load i8*, i8** %next152, align 8, !dbg !5263
  %125 = bitcast i8* %124 to %struct.Object*, !dbg !5261
  store %struct.Object* %125, %struct.Object** %ob, align 8, !dbg !5264
  br label %for.cond131, !dbg !5265, !llvm.loop !5266

for.end153:                                       ; preds = %for.cond131
  br label %sw.epilog, !dbg !5268

sw.bb154:                                         ; preds = %if.end
  %126 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5269
  %object155 = getelementptr inbounds %struct.Main, %struct.Main* %126, i32 0, i32 13, !dbg !5271
  %first156 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object155, i32 0, i32 0, !dbg !5272
  %127 = load i8*, i8** %first156, align 8, !dbg !5272
  %128 = bitcast i8* %127 to %struct.Object*, !dbg !5269
  store %struct.Object* %128, %struct.Object** %ob, align 8, !dbg !5273
  br label %for.cond157, !dbg !5274

for.cond157:                                      ; preds = %for.inc177, %sw.bb154
  %129 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5275
  %tobool158 = icmp ne %struct.Object* %129, null, !dbg !5277
  br i1 %tobool158, label %for.body159, label %for.end180, !dbg !5277

for.body159:                                      ; preds = %for.cond157
  %130 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5278
  %controllers160 = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 93, !dbg !5280
  %first161 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers160, i32 0, i32 0, !dbg !5281
  %131 = load i8*, i8** %first161, align 8, !dbg !5281
  %132 = bitcast i8* %131 to %struct.bController*, !dbg !5278
  store %struct.bController* %132, %struct.bController** %cont, align 8, !dbg !5282
  br label %while.cond162, !dbg !5283

while.cond162:                                    ; preds = %if.end174, %for.body159
  %133 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5284
  %tobool163 = icmp ne %struct.bController* %133, null, !dbg !5283
  br i1 %tobool163, label %while.body164, label %while.end176, !dbg !5283

while.body164:                                    ; preds = %while.cond162
  %134 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5285
  %type165 = getelementptr inbounds %struct.bController, %struct.bController* %134, i32 0, i32 3, !dbg !5288
  %135 = load i16, i16* %type165, align 8, !dbg !5288
  %conv166 = sext i16 %135 to i32, !dbg !5285
  %136 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5289
  %otype167 = getelementptr inbounds %struct.bController, %struct.bController* %136, i32 0, i32 7, !dbg !5290
  %137 = load i16, i16* %otype167, align 8, !dbg !5290
  %conv168 = sext i16 %137 to i32, !dbg !5289
  %cmp169 = icmp ne i32 %conv166, %conv168, !dbg !5291
  br i1 %cmp169, label %if.then171, label %if.end174, !dbg !5292

if.then171:                                       ; preds = %while.body164
  %138 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5293
  call void @init_controller(%struct.bController* %138), !dbg !5295
  %139 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5296
  %type172 = getelementptr inbounds %struct.bController, %struct.bController* %139, i32 0, i32 3, !dbg !5297
  %140 = load i16, i16* %type172, align 8, !dbg !5297
  %141 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5298
  %otype173 = getelementptr inbounds %struct.bController, %struct.bController* %141, i32 0, i32 7, !dbg !5299
  store i16 %140, i16* %otype173, align 8, !dbg !5300
  br label %while.end176, !dbg !5301

if.end174:                                        ; preds = %while.body164
  %142 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5302
  %next175 = getelementptr inbounds %struct.bController, %struct.bController* %142, i32 0, i32 0, !dbg !5303
  %143 = load %struct.bController*, %struct.bController** %next175, align 8, !dbg !5303
  store %struct.bController* %143, %struct.bController** %cont, align 8, !dbg !5304
  br label %while.cond162, !dbg !5283, !llvm.loop !5305

while.end176:                                     ; preds = %if.then171, %while.cond162
  br label %for.inc177, !dbg !5307

for.inc177:                                       ; preds = %while.end176
  %144 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5308
  %id178 = getelementptr inbounds %struct.Object, %struct.Object* %144, i32 0, i32 0, !dbg !5309
  %next179 = getelementptr inbounds %struct.ID, %struct.ID* %id178, i32 0, i32 0, !dbg !5310
  %145 = load i8*, i8** %next179, align 8, !dbg !5310
  %146 = bitcast i8* %145 to %struct.Object*, !dbg !5308
  store %struct.Object* %146, %struct.Object** %ob, align 8, !dbg !5311
  br label %for.cond157, !dbg !5312, !llvm.loop !5313

for.end180:                                       ; preds = %for.cond157
  br label %sw.epilog, !dbg !5315

sw.bb181:                                         ; preds = %if.end
  %147 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5316
  %object182 = getelementptr inbounds %struct.Main, %struct.Main* %147, i32 0, i32 13, !dbg !5318
  %first183 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object182, i32 0, i32 0, !dbg !5319
  %148 = load i8*, i8** %first183, align 8, !dbg !5319
  %149 = bitcast i8* %148 to %struct.Object*, !dbg !5316
  store %struct.Object* %149, %struct.Object** %ob, align 8, !dbg !5320
  br label %for.cond184, !dbg !5321

for.cond184:                                      ; preds = %for.inc201, %sw.bb181
  %150 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5322
  %tobool185 = icmp ne %struct.Object* %150, null, !dbg !5324
  br i1 %tobool185, label %for.body186, label %for.end204, !dbg !5324

for.body186:                                      ; preds = %for.cond184
  %151 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5325
  %controllers187 = getelementptr inbounds %struct.Object, %struct.Object* %151, i32 0, i32 93, !dbg !5327
  %first188 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers187, i32 0, i32 0, !dbg !5328
  %152 = load i8*, i8** %first188, align 8, !dbg !5328
  %153 = bitcast i8* %152 to %struct.bController*, !dbg !5325
  store %struct.bController* %153, %struct.bController** %cont, align 8, !dbg !5329
  br label %while.cond189, !dbg !5330

while.cond189:                                    ; preds = %if.end198, %for.body186
  %154 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5331
  %tobool190 = icmp ne %struct.bController* %154, null, !dbg !5330
  br i1 %tobool190, label %while.body191, label %while.end200, !dbg !5330

while.body191:                                    ; preds = %while.cond189
  %155 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5332
  %flag192 = getelementptr inbounds %struct.bController, %struct.bController* %155, i32 0, i32 4, !dbg !5335
  %156 = load i16, i16* %flag192, align 2, !dbg !5335
  %conv193 = sext i16 %156 to i32, !dbg !5332
  %and194 = and i32 %conv193, 2, !dbg !5336
  %tobool195 = icmp ne i32 %and194, 0, !dbg !5336
  br i1 %tobool195, label %if.then196, label %if.end198, !dbg !5337

if.then196:                                       ; preds = %while.body191
  %157 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5338
  %controllers197 = getelementptr inbounds %struct.Object, %struct.Object* %157, i32 0, i32 93, !dbg !5340
  %158 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5341
  %159 = bitcast %struct.bController* %158 to i8*, !dbg !5341
  call void @BLI_remlink(%struct.ListBase* %controllers197, i8* %159), !dbg !5342
  %160 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5343
  call void @unlink_controller(%struct.bController* %160), !dbg !5344
  %161 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5345
  call void @free_controller(%struct.bController* %161), !dbg !5346
  br label %while.end200, !dbg !5347

if.end198:                                        ; preds = %while.body191
  %162 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5348
  %next199 = getelementptr inbounds %struct.bController, %struct.bController* %162, i32 0, i32 0, !dbg !5349
  %163 = load %struct.bController*, %struct.bController** %next199, align 8, !dbg !5349
  store %struct.bController* %163, %struct.bController** %cont, align 8, !dbg !5350
  br label %while.cond189, !dbg !5330, !llvm.loop !5351

while.end200:                                     ; preds = %if.then196, %while.cond189
  br label %for.inc201, !dbg !5353

for.inc201:                                       ; preds = %while.end200
  %164 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5354
  %id202 = getelementptr inbounds %struct.Object, %struct.Object* %164, i32 0, i32 0, !dbg !5355
  %next203 = getelementptr inbounds %struct.ID, %struct.ID* %id202, i32 0, i32 0, !dbg !5356
  %165 = load i8*, i8** %next203, align 8, !dbg !5356
  %166 = bitcast i8* %165 to %struct.Object*, !dbg !5354
  store %struct.Object* %166, %struct.Object** %ob, align 8, !dbg !5357
  br label %for.cond184, !dbg !5358, !llvm.loop !5359

for.end204:                                       ; preds = %for.cond184
  %167 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5361
  call void @ED_undo_push(%struct.bContext* %167, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)), !dbg !5362
  br label %sw.epilog, !dbg !5363

sw.bb205:                                         ; preds = %if.end
  %168 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5364
  %object206 = getelementptr inbounds %struct.Main, %struct.Main* %168, i32 0, i32 13, !dbg !5366
  %first207 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object206, i32 0, i32 0, !dbg !5367
  %169 = load i8*, i8** %first207, align 8, !dbg !5367
  %170 = bitcast i8* %169 to %struct.Object*, !dbg !5364
  store %struct.Object* %170, %struct.Object** %ob, align 8, !dbg !5368
  br label %for.cond208, !dbg !5369

for.cond208:                                      ; preds = %for.inc228, %sw.bb205
  %171 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5370
  %tobool209 = icmp ne %struct.Object* %171, null, !dbg !5372
  br i1 %tobool209, label %for.body210, label %for.end231, !dbg !5372

for.body210:                                      ; preds = %for.cond208
  %172 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5373
  %scaflag211 = getelementptr inbounds %struct.Object, %struct.Object* %172, i32 0, i32 61, !dbg !5376
  %173 = load i16, i16* %scaflag211, align 4, !dbg !5376
  %conv212 = sext i16 %173 to i32, !dbg !5373
  %and213 = and i32 %conv212, 1024, !dbg !5377
  %tobool214 = icmp ne i32 %and213, 0, !dbg !5377
  br i1 %tobool214, label %if.then215, label %if.end227, !dbg !5378

if.then215:                                       ; preds = %for.body210
  %174 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5379
  %scaflag216 = getelementptr inbounds %struct.Object, %struct.Object* %174, i32 0, i32 61, !dbg !5381
  %175 = load i16, i16* %scaflag216, align 4, !dbg !5382
  %conv217 = sext i16 %175 to i32, !dbg !5382
  %and218 = and i32 %conv217, -1025, !dbg !5382
  %conv219 = trunc i32 %and218 to i16, !dbg !5382
  store i16 %conv219, i16* %scaflag216, align 4, !dbg !5382
  %call220 = call %struct.bActuator* @new_actuator(i32 0), !dbg !5383
  store %struct.bActuator* %call220, %struct.bActuator** %act, align 8, !dbg !5384
  %176 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5385
  %177 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5386
  %name221 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %177, i32 0, i32 7, !dbg !5387
  %arraydecay222 = getelementptr inbounds [64 x i8], [64 x i8]* %name221, i64 0, i64 0, !dbg !5386
  call void @make_unique_prop_names(%struct.bContext* %176, i8* %arraydecay222), !dbg !5388
  %178 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5389
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %178, i32 0, i32 94, !dbg !5390
  %179 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5391
  %180 = bitcast %struct.bActuator* %179 to i8*, !dbg !5391
  call void @BLI_addtail(%struct.ListBase* %actuators, i8* %180), !dbg !5392
  %181 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5393
  %scaflag223 = getelementptr inbounds %struct.Object, %struct.Object* %181, i32 0, i32 61, !dbg !5394
  %182 = load i16, i16* %scaflag223, align 4, !dbg !5395
  %conv224 = sext i16 %182 to i32, !dbg !5395
  %or225 = or i32 %conv224, 128, !dbg !5395
  %conv226 = trunc i32 %or225 to i16, !dbg !5395
  store i16 %conv226, i16* %scaflag223, align 4, !dbg !5395
  br label %if.end227, !dbg !5396

if.end227:                                        ; preds = %if.then215, %for.body210
  br label %for.inc228, !dbg !5397

for.inc228:                                       ; preds = %if.end227
  %183 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5398
  %id229 = getelementptr inbounds %struct.Object, %struct.Object* %183, i32 0, i32 0, !dbg !5399
  %next230 = getelementptr inbounds %struct.ID, %struct.ID* %id229, i32 0, i32 0, !dbg !5400
  %184 = load i8*, i8** %next230, align 8, !dbg !5400
  %185 = bitcast i8* %184 to %struct.Object*, !dbg !5398
  store %struct.Object* %185, %struct.Object** %ob, align 8, !dbg !5401
  br label %for.cond208, !dbg !5402, !llvm.loop !5403

for.end231:                                       ; preds = %for.cond208
  %186 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5405
  call void @ED_undo_push(%struct.bContext* %186, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0)), !dbg !5406
  br label %sw.epilog, !dbg !5407

sw.bb232:                                         ; preds = %if.end
  %187 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5408
  %object233 = getelementptr inbounds %struct.Main, %struct.Main* %187, i32 0, i32 13, !dbg !5410
  %first234 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object233, i32 0, i32 0, !dbg !5411
  %188 = load i8*, i8** %first234, align 8, !dbg !5411
  %189 = bitcast i8* %188 to %struct.Object*, !dbg !5408
  store %struct.Object* %189, %struct.Object** %ob, align 8, !dbg !5412
  br label %for.cond235, !dbg !5413

for.cond235:                                      ; preds = %for.inc255, %sw.bb232
  %190 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5414
  %tobool236 = icmp ne %struct.Object* %190, null, !dbg !5416
  br i1 %tobool236, label %for.body237, label %for.end258, !dbg !5416

for.body237:                                      ; preds = %for.cond235
  %191 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5417
  %actuators238 = getelementptr inbounds %struct.Object, %struct.Object* %191, i32 0, i32 94, !dbg !5419
  %first239 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators238, i32 0, i32 0, !dbg !5420
  %192 = load i8*, i8** %first239, align 8, !dbg !5420
  %193 = bitcast i8* %192 to %struct.bActuator*, !dbg !5417
  store %struct.bActuator* %193, %struct.bActuator** %act, align 8, !dbg !5421
  br label %while.cond240, !dbg !5422

while.cond240:                                    ; preds = %if.end252, %for.body237
  %194 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5423
  %tobool241 = icmp ne %struct.bActuator* %194, null, !dbg !5422
  br i1 %tobool241, label %while.body242, label %while.end254, !dbg !5422

while.body242:                                    ; preds = %while.cond240
  %195 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5424
  %type243 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %195, i32 0, i32 3, !dbg !5427
  %196 = load i16, i16* %type243, align 8, !dbg !5427
  %conv244 = sext i16 %196 to i32, !dbg !5424
  %197 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5428
  %otype245 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %197, i32 0, i32 5, !dbg !5429
  %198 = load i16, i16* %otype245, align 4, !dbg !5429
  %conv246 = sext i16 %198 to i32, !dbg !5428
  %cmp247 = icmp ne i32 %conv244, %conv246, !dbg !5430
  br i1 %cmp247, label %if.then249, label %if.end252, !dbg !5431

if.then249:                                       ; preds = %while.body242
  %199 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5432
  call void @init_actuator(%struct.bActuator* %199), !dbg !5434
  %200 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5435
  %type250 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %200, i32 0, i32 3, !dbg !5436
  %201 = load i16, i16* %type250, align 8, !dbg !5436
  %202 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5437
  %otype251 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %202, i32 0, i32 5, !dbg !5438
  store i16 %201, i16* %otype251, align 4, !dbg !5439
  br label %while.end254, !dbg !5440

if.end252:                                        ; preds = %while.body242
  %203 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5441
  %next253 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %203, i32 0, i32 0, !dbg !5442
  %204 = load %struct.bActuator*, %struct.bActuator** %next253, align 8, !dbg !5442
  store %struct.bActuator* %204, %struct.bActuator** %act, align 8, !dbg !5443
  br label %while.cond240, !dbg !5422, !llvm.loop !5444

while.end254:                                     ; preds = %if.then249, %while.cond240
  br label %for.inc255, !dbg !5446

for.inc255:                                       ; preds = %while.end254
  %205 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5447
  %id256 = getelementptr inbounds %struct.Object, %struct.Object* %205, i32 0, i32 0, !dbg !5448
  %next257 = getelementptr inbounds %struct.ID, %struct.ID* %id256, i32 0, i32 0, !dbg !5449
  %206 = load i8*, i8** %next257, align 8, !dbg !5449
  %207 = bitcast i8* %206 to %struct.Object*, !dbg !5447
  store %struct.Object* %207, %struct.Object** %ob, align 8, !dbg !5450
  br label %for.cond235, !dbg !5451, !llvm.loop !5452

for.end258:                                       ; preds = %for.cond235
  br label %sw.epilog, !dbg !5454

sw.bb259:                                         ; preds = %if.end
  %208 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5455
  %object260 = getelementptr inbounds %struct.Main, %struct.Main* %208, i32 0, i32 13, !dbg !5457
  %first261 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object260, i32 0, i32 0, !dbg !5458
  %209 = load i8*, i8** %first261, align 8, !dbg !5458
  %210 = bitcast i8* %209 to %struct.Object*, !dbg !5455
  store %struct.Object* %210, %struct.Object** %ob, align 8, !dbg !5459
  br label %for.cond262, !dbg !5460

for.cond262:                                      ; preds = %for.inc279, %sw.bb259
  %211 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5461
  %tobool263 = icmp ne %struct.Object* %211, null, !dbg !5463
  br i1 %tobool263, label %for.body264, label %for.end282, !dbg !5463

for.body264:                                      ; preds = %for.cond262
  %212 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5464
  %actuators265 = getelementptr inbounds %struct.Object, %struct.Object* %212, i32 0, i32 94, !dbg !5466
  %first266 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators265, i32 0, i32 0, !dbg !5467
  %213 = load i8*, i8** %first266, align 8, !dbg !5467
  %214 = bitcast i8* %213 to %struct.bActuator*, !dbg !5464
  store %struct.bActuator* %214, %struct.bActuator** %act, align 8, !dbg !5468
  br label %while.cond267, !dbg !5469

while.cond267:                                    ; preds = %if.end276, %for.body264
  %215 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5470
  %tobool268 = icmp ne %struct.bActuator* %215, null, !dbg !5469
  br i1 %tobool268, label %while.body269, label %while.end278, !dbg !5469

while.body269:                                    ; preds = %while.cond267
  %216 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5471
  %flag270 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %216, i32 0, i32 4, !dbg !5474
  %217 = load i16, i16* %flag270, align 2, !dbg !5474
  %conv271 = sext i16 %217 to i32, !dbg !5471
  %and272 = and i32 %conv271, 2, !dbg !5475
  %tobool273 = icmp ne i32 %and272, 0, !dbg !5475
  br i1 %tobool273, label %if.then274, label %if.end276, !dbg !5476

if.then274:                                       ; preds = %while.body269
  %218 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5477
  %actuators275 = getelementptr inbounds %struct.Object, %struct.Object* %218, i32 0, i32 94, !dbg !5479
  %219 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5480
  %220 = bitcast %struct.bActuator* %219 to i8*, !dbg !5480
  call void @BLI_remlink(%struct.ListBase* %actuators275, i8* %220), !dbg !5481
  %221 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5482
  call void @unlink_actuator(%struct.bActuator* %221), !dbg !5483
  %222 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5484
  call void @free_actuator(%struct.bActuator* %222), !dbg !5485
  br label %while.end278, !dbg !5486

if.end276:                                        ; preds = %while.body269
  %223 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5487
  %next277 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %223, i32 0, i32 0, !dbg !5488
  %224 = load %struct.bActuator*, %struct.bActuator** %next277, align 8, !dbg !5488
  store %struct.bActuator* %224, %struct.bActuator** %act, align 8, !dbg !5489
  br label %while.cond267, !dbg !5469, !llvm.loop !5490

while.end278:                                     ; preds = %if.then274, %while.cond267
  br label %for.inc279, !dbg !5492

for.inc279:                                       ; preds = %while.end278
  %225 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5493
  %id280 = getelementptr inbounds %struct.Object, %struct.Object* %225, i32 0, i32 0, !dbg !5494
  %next281 = getelementptr inbounds %struct.ID, %struct.ID* %id280, i32 0, i32 0, !dbg !5495
  %226 = load i8*, i8** %next281, align 8, !dbg !5495
  %227 = bitcast i8* %226 to %struct.Object*, !dbg !5493
  store %struct.Object* %227, %struct.Object** %ob, align 8, !dbg !5496
  br label %for.cond262, !dbg !5497, !llvm.loop !5498

for.end282:                                       ; preds = %for.cond262
  %228 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5500
  call void @ED_undo_push(%struct.bContext* %228, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i64 0, i64 0)), !dbg !5501
  br label %sw.epilog, !dbg !5502

sw.bb283:                                         ; preds = %if.end
  store i32 0, i32* %didit, align 4, !dbg !5503
  %229 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5504
  %object284 = getelementptr inbounds %struct.Main, %struct.Main* %229, i32 0, i32 13, !dbg !5506
  %first285 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object284, i32 0, i32 0, !dbg !5507
  %230 = load i8*, i8** %first285, align 8, !dbg !5507
  %231 = bitcast i8* %230 to %struct.Object*, !dbg !5504
  store %struct.Object* %231, %struct.Object** %ob, align 8, !dbg !5508
  br label %for.cond286, !dbg !5509

for.cond286:                                      ; preds = %for.inc340, %sw.bb283
  %232 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5510
  %tobool287 = icmp ne %struct.Object* %232, null, !dbg !5512
  br i1 %tobool287, label %for.body288, label %for.end343, !dbg !5512

for.body288:                                      ; preds = %for.cond286
  %233 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5513
  %actuators289 = getelementptr inbounds %struct.Object, %struct.Object* %233, i32 0, i32 94, !dbg !5515
  %first290 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators289, i32 0, i32 0, !dbg !5516
  %234 = load i8*, i8** %first290, align 8, !dbg !5516
  %235 = bitcast i8* %234 to %struct.bActuator*, !dbg !5513
  store %struct.bActuator* %235, %struct.bActuator** %act, align 8, !dbg !5517
  br label %while.cond291, !dbg !5518

while.cond291:                                    ; preds = %if.end334, %for.body288
  %236 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5519
  %tobool292 = icmp ne %struct.bActuator* %236, null, !dbg !5518
  br i1 %tobool292, label %while.body293, label %while.end336, !dbg !5518

while.body293:                                    ; preds = %while.cond291
  %237 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5520
  %type294 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %237, i32 0, i32 3, !dbg !5523
  %238 = load i16, i16* %type294, align 8, !dbg !5523
  %conv295 = sext i16 %238 to i32, !dbg !5520
  %cmp296 = icmp eq i32 %conv295, 5, !dbg !5524
  br i1 %cmp296, label %if.then298, label %if.end334, !dbg !5525

if.then298:                                       ; preds = %while.body293
  call void @llvm.dbg.declare(metadata %struct.bSoundActuator** %sa, metadata !5526, metadata !DIExpression()), !dbg !5556
  %239 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5557
  %data = getelementptr inbounds %struct.bActuator, %struct.bActuator* %239, i32 0, i32 8, !dbg !5558
  %240 = load i8*, i8** %data, align 8, !dbg !5558
  %241 = bitcast i8* %240 to %struct.bSoundActuator*, !dbg !5557
  store %struct.bSoundActuator* %241, %struct.bSoundActuator** %sa, align 8, !dbg !5556
  %242 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5559
  %sndnr = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %242, i32 0, i32 1, !dbg !5561
  %243 = load i16, i16* %sndnr, align 2, !dbg !5561
  %tobool299 = icmp ne i16 %243, 0, !dbg !5559
  br i1 %tobool299, label %if.then300, label %if.end333, !dbg !5562

if.then300:                                       ; preds = %if.then298
  call void @llvm.dbg.declare(metadata %struct.ID** %sound, metadata !5563, metadata !DIExpression()), !dbg !5565
  %244 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5566
  %sound301 = getelementptr inbounds %struct.Main, %struct.Main* %244, i32 0, i32 31, !dbg !5567
  %first302 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sound301, i32 0, i32 0, !dbg !5568
  %245 = load i8*, i8** %first302, align 8, !dbg !5568
  %246 = bitcast i8* %245 to %struct.ID*, !dbg !5566
  store %struct.ID* %246, %struct.ID** %sound, align 8, !dbg !5565
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !5569, metadata !DIExpression()), !dbg !5570
  store i32 1, i32* %nr, align 4, !dbg !5570
  %247 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5571
  %sndnr303 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %247, i32 0, i32 1, !dbg !5573
  %248 = load i16, i16* %sndnr303, align 2, !dbg !5573
  %conv304 = sext i16 %248 to i32, !dbg !5571
  %cmp305 = icmp eq i32 %conv304, -2, !dbg !5574
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !5575

if.then307:                                       ; preds = %if.then300
  br label %while.end336, !dbg !5576

if.end308:                                        ; preds = %if.then300
  br label %while.cond309, !dbg !5578

while.cond309:                                    ; preds = %if.end317, %if.end308
  %249 = load %struct.ID*, %struct.ID** %sound, align 8, !dbg !5579
  %tobool310 = icmp ne %struct.ID* %249, null, !dbg !5578
  br i1 %tobool310, label %while.body311, label %while.end320, !dbg !5578

while.body311:                                    ; preds = %while.cond309
  %250 = load i32, i32* %nr, align 4, !dbg !5580
  %251 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5583
  %sndnr312 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %251, i32 0, i32 1, !dbg !5584
  %252 = load i16, i16* %sndnr312, align 2, !dbg !5584
  %conv313 = sext i16 %252 to i32, !dbg !5583
  %cmp314 = icmp eq i32 %250, %conv313, !dbg !5585
  br i1 %cmp314, label %if.then316, label %if.end317, !dbg !5586

if.then316:                                       ; preds = %while.body311
  br label %while.end320, !dbg !5587

if.end317:                                        ; preds = %while.body311
  %253 = load i32, i32* %nr, align 4, !dbg !5588
  %inc318 = add nsw i32 %253, 1, !dbg !5588
  store i32 %inc318, i32* %nr, align 4, !dbg !5588
  %254 = load %struct.ID*, %struct.ID** %sound, align 8, !dbg !5589
  %next319 = getelementptr inbounds %struct.ID, %struct.ID* %254, i32 0, i32 0, !dbg !5590
  %255 = load i8*, i8** %next319, align 8, !dbg !5590
  %256 = bitcast i8* %255 to %struct.ID*, !dbg !5589
  store %struct.ID* %256, %struct.ID** %sound, align 8, !dbg !5591
  br label %while.cond309, !dbg !5578, !llvm.loop !5592

while.end320:                                     ; preds = %if.then316, %while.cond309
  %257 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5594
  %sound321 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %257, i32 0, i32 7, !dbg !5596
  %258 = load %struct.bSound*, %struct.bSound** %sound321, align 8, !dbg !5596
  %tobool322 = icmp ne %struct.bSound* %258, null, !dbg !5594
  br i1 %tobool322, label %if.then323, label %if.end325, !dbg !5597

if.then323:                                       ; preds = %while.end320
  %259 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5598
  %sound324 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %259, i32 0, i32 7, !dbg !5599
  %260 = load %struct.bSound*, %struct.bSound** %sound324, align 8, !dbg !5599
  %261 = bitcast %struct.bSound* %260 to %struct.ID*, !dbg !5600
  %us = getelementptr inbounds %struct.ID, %struct.ID* %261, i32 0, i32 6, !dbg !5600
  %262 = load i32, i32* %us, align 4, !dbg !5601
  %dec = add nsw i32 %262, -1, !dbg !5601
  store i32 %dec, i32* %us, align 4, !dbg !5601
  br label %if.end325, !dbg !5602

if.end325:                                        ; preds = %if.then323, %while.end320
  %263 = load %struct.ID*, %struct.ID** %sound, align 8, !dbg !5603
  %264 = bitcast %struct.ID* %263 to %struct.bSound*, !dbg !5604
  %265 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5605
  %sound326 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %265, i32 0, i32 7, !dbg !5606
  store %struct.bSound* %264, %struct.bSound** %sound326, align 8, !dbg !5607
  %266 = load %struct.ID*, %struct.ID** %sound, align 8, !dbg !5608
  %tobool327 = icmp ne %struct.ID* %266, null, !dbg !5608
  br i1 %tobool327, label %if.then328, label %if.end331, !dbg !5610

if.then328:                                       ; preds = %if.end325
  %267 = load %struct.ID*, %struct.ID** %sound, align 8, !dbg !5611
  %us329 = getelementptr inbounds %struct.ID, %struct.ID* %267, i32 0, i32 6, !dbg !5612
  %268 = load i32, i32* %us329, align 4, !dbg !5613
  %inc330 = add nsw i32 %268, 1, !dbg !5613
  store i32 %inc330, i32* %us329, align 4, !dbg !5613
  br label %if.end331, !dbg !5611

if.end331:                                        ; preds = %if.then328, %if.end325
  %269 = load %struct.bSoundActuator*, %struct.bSoundActuator** %sa, align 8, !dbg !5614
  %sndnr332 = getelementptr inbounds %struct.bSoundActuator, %struct.bSoundActuator* %269, i32 0, i32 1, !dbg !5615
  store i16 0, i16* %sndnr332, align 2, !dbg !5616
  store i32 1, i32* %didit, align 4, !dbg !5617
  br label %if.end333, !dbg !5618

if.end333:                                        ; preds = %if.end331, %if.then298
  br label %if.end334, !dbg !5619

if.end334:                                        ; preds = %if.end333, %while.body293
  %270 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !5620
  %next335 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %270, i32 0, i32 0, !dbg !5621
  %271 = load %struct.bActuator*, %struct.bActuator** %next335, align 8, !dbg !5621
  store %struct.bActuator* %271, %struct.bActuator** %act, align 8, !dbg !5622
  br label %while.cond291, !dbg !5518, !llvm.loop !5623

while.end336:                                     ; preds = %if.then307, %while.cond291
  %272 = load i32, i32* %didit, align 4, !dbg !5625
  %tobool337 = icmp ne i32 %272, 0, !dbg !5625
  br i1 %tobool337, label %if.then338, label %if.end339, !dbg !5627

if.then338:                                       ; preds = %while.end336
  br label %for.end343, !dbg !5628

if.end339:                                        ; preds = %while.end336
  br label %for.inc340, !dbg !5629

for.inc340:                                       ; preds = %if.end339
  %273 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5630
  %id341 = getelementptr inbounds %struct.Object, %struct.Object* %273, i32 0, i32 0, !dbg !5631
  %next342 = getelementptr inbounds %struct.ID, %struct.ID* %id341, i32 0, i32 0, !dbg !5632
  %274 = load i8*, i8** %next342, align 8, !dbg !5632
  %275 = bitcast i8* %274 to %struct.Object*, !dbg !5630
  store %struct.Object* %275, %struct.Object** %ob, align 8, !dbg !5633
  br label %for.cond286, !dbg !5634, !llvm.loop !5635

for.end343:                                       ; preds = %if.then338, %for.cond286
  br label %sw.epilog, !dbg !5637

sw.epilog:                                        ; preds = %if.then, %if.end, %for.end343, %for.end282, %for.end258, %for.end231, %for.end204, %for.end180, %for.end153, %for.end127, %for.end106, %for.end62, %for.end39, %for.end, %sw.bb2, %sw.bb
  ret void, !dbg !5638
}

declare dso_local void @uiBoundsBlock(%struct.uiBlock*, i32) #2

declare dso_local %struct.uiLayout* @uiBlockLayout(%struct.uiBlock*, i32, i32, i32, i32, i32, i32, i32, %struct.uiStyle*) #2

declare dso_local %struct.uiStyle* @UI_GetStyle() #2

declare dso_local %struct.uiLayout* @uiLayoutRow(%struct.uiLayout*, i32) #2

declare dso_local %struct.uiBut* @uiDefBlockBut(%struct.uiBlock*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, i8*, i8*, i32, i32, i16 signext, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @controller_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %UNUSED_arg) #0 !dbg !5639 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %yco = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5642, metadata !DIExpression()), !dbg !5643
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %yco, metadata !5650, metadata !DIExpression()), !dbg !5651
  store i32 0, i32* %yco, align 4, !dbg !5651
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5652
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5653
  %call = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %0, %struct.ARegion* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.controller_menu, i64 0, i64 0), i16 signext 2), !dbg !5654
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !5655
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5656
  call void @uiBlockSetButmFunc(%struct.uiBlock* %2, void (%struct.bContext*, i8*, i32)* @do_controller_menu, i8* null), !dbg !5657
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5658
  %4 = load i32, i32* %yco, align 4, !dbg !5659
  %sub = sub nsw i32 %4, 20, !dbg !5659
  store i32 %sub, i32* %yco, align 4, !dbg !5659
  %conv = trunc i32 %sub to i16, !dbg !5660
  %conv1 = sext i16 %conv to i32, !dbg !5660
  %call2 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %3, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i32 0, i32 %conv1, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5661
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5662
  %6 = load i32, i32* %yco, align 4, !dbg !5663
  %sub3 = sub nsw i32 %6, 20, !dbg !5663
  store i32 %sub3, i32* %yco, align 4, !dbg !5663
  %conv4 = trunc i32 %sub3 to i16, !dbg !5664
  %conv5 = sext i16 %conv4 to i32, !dbg !5664
  %call6 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %5, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 0, i32 %conv5, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5665
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5666
  %8 = load i32, i32* %yco, align 4, !dbg !5667
  %sub7 = sub nsw i32 %8, 6, !dbg !5667
  store i32 %sub7, i32* %yco, align 4, !dbg !5667
  %conv8 = trunc i32 %sub7 to i16, !dbg !5668
  %conv9 = sext i16 %conv8 to i32, !dbg !5668
  %call10 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %7, i32 27648, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 %conv9, i16 signext 160, i16 signext 6, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5669
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5670
  %10 = load i32, i32* %yco, align 4, !dbg !5671
  %sub11 = sub nsw i32 %10, 20, !dbg !5671
  store i32 %sub11, i32* %yco, align 4, !dbg !5671
  %conv12 = trunc i32 %sub11 to i16, !dbg !5672
  %conv13 = sext i16 %conv12 to i32, !dbg !5672
  %call14 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %9, i32 10240, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.53, i64 0, i64 0), i32 0, i32 %conv13, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 2.000000e+00, float 2.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5673
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5674
  %12 = load i32, i32* %yco, align 4, !dbg !5675
  %sub15 = sub nsw i32 %12, 20, !dbg !5675
  store i32 %sub15, i32* %yco, align 4, !dbg !5675
  %conv16 = trunc i32 %sub15 to i16, !dbg !5676
  %conv17 = sext i16 %conv16 to i32, !dbg !5676
  %call18 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %11, i32 10240, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0), i32 0, i32 %conv17, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 3.000000e+00, float 3.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5677
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5678
  call void @uiBlockSetDirection(%struct.uiBlock* %13, i8 zeroext 1), !dbg !5679
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5680
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5681
  call void @uiEndBlock(%struct.bContext* %14, %struct.uiBlock* %15), !dbg !5682
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5683
  ret %struct.uiBlock* %16, !dbg !5684
}

declare dso_local void @uiItemR(%struct.uiLayout*, %struct.PointerRNA*, i8*, i32, i8*, i32) #2

declare dso_local %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout*, float, i32) #2

declare dso_local %struct.uiBut* @uiDefButBitS(%struct.uiBlock*, i32, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i16*, float, float, float, float, i8*) #2

declare dso_local void @uiLayoutSetContextPointer(%struct.uiLayout*, i8*, %struct.PointerRNA*) #2

declare dso_local void @uiItemMenuEnumO(%struct.uiLayout*, %struct.bContext*, i8*, i8*, i8*, i32) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.uiLayout* @uiLayoutBox(%struct.uiLayout*) #2

declare dso_local %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout*, i32) #2

declare dso_local void @uiItemL(%struct.uiLayout*, i8*, i32) #2

declare dso_local void @uiLayoutSetActive(%struct.uiLayout*, i8 zeroext) #2

declare dso_local void @uiTemplateGameStates(%struct.uiLayout*, %struct.PointerRNA*, i8*, %struct.PointerRNA*, i8*, i32) #2

declare dso_local void @uiItemS(%struct.uiLayout*) #2

declare dso_local void @uiLayoutSetAlignment(%struct.uiLayout*, i8 zeroext) #2

declare dso_local %struct.uiBut* @uiDefIconBut(%struct.uiBlock*, i32, i32, i32, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

declare dso_local void @uiButSetFlag(%struct.uiBut*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_controller_header(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i32 %xco, i32 %width, i32 %yco) #0 !dbg !5685 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %xco.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %yco.addr = alloca i32, align 4
  %box = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %cont = alloca %struct.bController*, align 8
  %state = alloca [3 x i8], align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i32 %xco, i32* %xco.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xco.addr, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  store i32 %yco, i32* %yco.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yco.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !5699, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !5701, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !5705, metadata !DIExpression()), !dbg !5706
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5707
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5708
  %1 = load i8*, i8** %data, align 8, !dbg !5708
  %2 = bitcast i8* %1 to %struct.bController*, !dbg !5709
  store %struct.bController* %2, %struct.bController** %cont, align 8, !dbg !5706
  call void @llvm.dbg.declare(metadata [3 x i8]* %state, metadata !5710, metadata !DIExpression()), !dbg !5711
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %state, i64 0, i64 0, !dbg !5712
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5713
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0)), !dbg !5714
  %call1 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), i32 %call), !dbg !5715
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5716
  %call2 = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %4), !dbg !5717
  store %struct.uiLayout* %call2, %struct.uiLayout** %box, align 8, !dbg !5718
  %5 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5719
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %5, i32 0), !dbg !5720
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !5721
  %6 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5722
  %call4 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %6, i32 0), !dbg !5723
  store %struct.uiLayout* %call4, %struct.uiLayout** %sub, align 8, !dbg !5724
  %7 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5725
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5726
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5727
  %conv = trunc i32 %call5 to i8, !dbg !5727
  call void @uiLayoutSetActive(%struct.uiLayout* %7, i8 zeroext %conv), !dbg !5728
  %9 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5729
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5730
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5731
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5732
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !5734
  %tobool = icmp ne i32 %call6, 0, !dbg !5734
  br i1 %tobool, label %if.then, label %if.else, !dbg !5735

if.then:                                          ; preds = %entry
  %12 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5736
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5738
  call void @uiItemR(%struct.uiLayout* %12, %struct.PointerRNA* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5739
  %14 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5740
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5741
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5742
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5743
  %call7 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %16), !dbg !5744
  %17 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5745
  %18 = bitcast %struct.bController* %17 to i8*, !dbg !5745
  %arraydecay8 = getelementptr inbounds [3 x i8], [3 x i8]* %state, i64 0, i64 0, !dbg !5746
  %19 = load i32, i32* %xco.addr, align 4, !dbg !5747
  %20 = load i32, i32* %width.addr, align 4, !dbg !5748
  %add = add nsw i32 %19, %20, !dbg !5749
  %sub9 = sub nsw i32 %add, 44, !dbg !5750
  %conv10 = trunc i32 %sub9 to i16, !dbg !5751
  %conv11 = sext i16 %conv10 to i32, !dbg !5751
  %21 = load i32, i32* %yco.addr, align 4, !dbg !5752
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5753
  %call12 = call %struct.uiBut* @uiDefBlockBut(%struct.uiBlock* %call7, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @controller_state_mask_menu, i8* %18, i8* %arraydecay8, i32 %conv11, i32 %21, i16 signext 44, i16 signext %22, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.59, i64 0, i64 0)), !dbg !5754
  br label %if.end, !dbg !5755

if.else:                                          ; preds = %entry
  %23 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5756
  %24 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5758
  %type = getelementptr inbounds %struct.bController, %struct.bController* %24, i32 0, i32 3, !dbg !5758
  %25 = load i16, i16* %type, align 8, !dbg !5758
  %conv13 = sext i16 %25 to i32, !dbg !5758
  %call14 = call i8* @controller_name(i32 %conv13), !dbg !5758
  call void @uiItemL(%struct.uiLayout* %23, i8* %call14, i32 0), !dbg !5759
  %26 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5760
  %27 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5761
  %name = getelementptr inbounds %struct.bController, %struct.bController* %27, i32 0, i32 11, !dbg !5762
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5761
  call void @uiItemL(%struct.uiLayout* %26, i8* %arraydecay15, i32 0), !dbg !5763
  %28 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5764
  %arraydecay16 = getelementptr inbounds [3 x i8], [3 x i8]* %state, i64 0, i64 0, !dbg !5765
  call void @uiItemL(%struct.uiLayout* %28, i8* %arraydecay16, i32 0), !dbg !5766
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5767
  %call17 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %29, i32 0), !dbg !5768
  store %struct.uiLayout* %call17, %struct.uiLayout** %sub, align 8, !dbg !5769
  %30 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5770
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5771
  %call18 = call i32 @RNA_boolean_get(%struct.PointerRNA* %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5772
  %conv19 = trunc i32 %call18 to i8, !dbg !5772
  call void @uiLayoutSetActive(%struct.uiLayout* %30, i8 zeroext %conv19), !dbg !5773
  %32 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5774
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5775
  call void @uiItemR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5776
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5777
  %call20 = call i32 @RNA_boolean_get(%struct.PointerRNA* %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !5779
  %cmp = icmp eq i32 %call20, 0, !dbg !5780
  br i1 %cmp, label %if.then22, label %if.end26, !dbg !5781

if.then22:                                        ; preds = %if.end
  %35 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5782
  %call23 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %35, i32 1), !dbg !5784
  store %struct.uiLayout* %call23, %struct.uiLayout** %sub, align 8, !dbg !5785
  %36 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5786
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5787
  %call24 = call i32 @RNA_boolean_get(%struct.PointerRNA* %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5788
  %conv25 = trunc i32 %call24 to i8, !dbg !5788
  call void @uiLayoutSetActive(%struct.uiLayout* %36, i8 zeroext %conv25), !dbg !5789
  %38 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5790
  call void @uiItemEnumO(%struct.uiLayout* %38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !5791
  %39 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5792
  call void @uiItemEnumO(%struct.uiLayout* %39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 2), !dbg !5793
  br label %if.end26, !dbg !5794

if.end26:                                         ; preds = %if.then22, %if.end
  %40 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5795
  %call27 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %40, i32 0), !dbg !5796
  store %struct.uiLayout* %call27, %struct.uiLayout** %sub, align 8, !dbg !5797
  %41 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5798
  %42 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5799
  call void @uiItemR(%struct.uiLayout* %41, %struct.PointerRNA* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5800
  %43 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5801
  %call28 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %43, i32 0), !dbg !5802
  store %struct.uiLayout* %call28, %struct.uiLayout** %sub, align 8, !dbg !5803
  %44 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5804
  %45 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5805
  %call29 = call i32 @RNA_boolean_get(%struct.PointerRNA* %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5806
  %conv30 = trunc i32 %call29 to i8, !dbg !5806
  call void @uiLayoutSetActive(%struct.uiLayout* %44, i8 zeroext %conv30), !dbg !5807
  %46 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5808
  call void @uiItemO(%struct.uiLayout* %46, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0)), !dbg !5809
  ret void, !dbg !5810
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_brick_controller(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !5811 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %box = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !5818, metadata !DIExpression()), !dbg !5819
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5820
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !5822
  %tobool = icmp ne i32 %call, 0, !dbg !5822
  br i1 %tobool, label %if.end, label %if.then, !dbg !5823

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !5824

if.end:                                           ; preds = %entry
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5825
  %call1 = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %1), !dbg !5826
  store %struct.uiLayout* %call1, %struct.uiLayout** %box, align 8, !dbg !5827
  %2 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5828
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5829
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5830
  %conv = trunc i32 %call2 to i8, !dbg !5830
  call void @uiLayoutSetActive(%struct.uiLayout* %2, i8 zeroext %conv), !dbg !5831
  %4 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5832
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5833
  call void @draw_controller_state(%struct.uiLayout* %4, %struct.PointerRNA* %5), !dbg !5834
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5835
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !5836
  switch i32 %call3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
    i32 3, label %sw.bb6
    i32 4, label %sw.bb7
    i32 5, label %sw.bb8
    i32 6, label %sw.bb9
    i32 7, label %sw.bb10
  ], !dbg !5837

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !5838

sw.bb4:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !5840

sw.bb5:                                           ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5841
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5842
  call void @draw_controller_expression(%struct.uiLayout* %7, %struct.PointerRNA* %8), !dbg !5843
  br label %sw.epilog, !dbg !5844

sw.bb6:                                           ; preds = %if.end
  %9 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5845
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5846
  call void @draw_controller_python(%struct.uiLayout* %9, %struct.PointerRNA* %10), !dbg !5847
  br label %sw.epilog, !dbg !5848

sw.bb7:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !5849

sw.bb8:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !5850

sw.bb9:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !5851

sw.bb10:                                          ; preds = %if.end
  br label %sw.epilog, !dbg !5852

sw.epilog:                                        ; preds = %if.then, %if.end, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !5853
}

declare dso_local void @uiSetButLink(%struct.uiBut*, i8**, i8***, i16*, i32, i32) #2

declare dso_local void @uiBlockLayoutResolve(%struct.uiBlock*, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @sensor_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %UNUSED_arg) #0 !dbg !5854 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %yco = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata i32* %yco, metadata !5863, metadata !DIExpression()), !dbg !5864
  store i32 0, i32* %yco, align 4, !dbg !5864
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5865
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5866
  %call = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %0, %struct.ARegion* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.sensor_menu, i64 0, i64 0), i16 signext 2), !dbg !5867
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !5868
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5869
  call void @uiBlockSetButmFunc(%struct.uiBlock* %2, void (%struct.bContext*, i8*, i32)* @do_sensor_menu, i8* null), !dbg !5870
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5871
  %4 = load i32, i32* %yco, align 4, !dbg !5872
  %sub = sub nsw i32 %4, 20, !dbg !5872
  store i32 %sub, i32* %yco, align 4, !dbg !5872
  %conv = trunc i32 %sub to i16, !dbg !5873
  %conv1 = sext i16 %conv to i32, !dbg !5873
  %call2 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %3, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i32 0, i32 %conv1, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5874
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5875
  %6 = load i32, i32* %yco, align 4, !dbg !5876
  %sub3 = sub nsw i32 %6, 20, !dbg !5876
  store i32 %sub3, i32* %yco, align 4, !dbg !5876
  %conv4 = trunc i32 %sub3 to i16, !dbg !5877
  %conv5 = sext i16 %conv4 to i32, !dbg !5877
  %call6 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %5, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 0, i32 %conv5, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5878
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5879
  %8 = load i32, i32* %yco, align 4, !dbg !5880
  %sub7 = sub nsw i32 %8, 6, !dbg !5880
  store i32 %sub7, i32* %yco, align 4, !dbg !5880
  %conv8 = trunc i32 %sub7 to i16, !dbg !5881
  %conv9 = sext i16 %conv8 to i32, !dbg !5881
  %call10 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %7, i32 27648, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 %conv9, i16 signext 160, i16 signext 6, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5882
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5883
  %10 = load i32, i32* %yco, align 4, !dbg !5884
  %sub11 = sub nsw i32 %10, 20, !dbg !5884
  store i32 %sub11, i32* %yco, align 4, !dbg !5884
  %conv12 = trunc i32 %sub11 to i16, !dbg !5885
  %conv13 = sext i16 %conv12 to i32, !dbg !5885
  %call14 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %9, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), i32 0, i32 %conv13, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5886
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5887
  %12 = load i32, i32* %yco, align 4, !dbg !5888
  %sub15 = sub nsw i32 %12, 20, !dbg !5888
  store i32 %sub15, i32* %yco, align 4, !dbg !5888
  %conv16 = trunc i32 %sub15 to i16, !dbg !5889
  %conv17 = sext i16 %conv16 to i32, !dbg !5889
  %call18 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %11, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i64 0, i64 0), i32 0, i32 %conv17, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 3.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !5890
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5891
  call void @uiBlockSetDirection(%struct.uiBlock* %13, i8 zeroext 1), !dbg !5892
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5893
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5894
  call void @uiEndBlock(%struct.bContext* %14, %struct.uiBlock* %15), !dbg !5895
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5896
  ret %struct.uiBlock* %16, !dbg !5897
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_sensor_linked(%struct.uiBlock* %block, %struct.bSensor* %sens) #0 !dbg !5898 {
entry:
  %retval = alloca i8, align 1
  %block.addr = alloca %struct.uiBlock*, align 8
  %sens.addr = alloca %struct.bSensor*, align 8
  %cont = alloca %struct.bController*, align 8
  %i = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  store %struct.bSensor* %sens, %struct.bSensor** %sens.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !5905, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5907, metadata !DIExpression()), !dbg !5908
  store i32 0, i32* %i, align 4, !dbg !5909
  br label %for.cond, !dbg !5911

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5912
  %1 = load %struct.bSensor*, %struct.bSensor** %sens.addr, align 8, !dbg !5914
  %totlinks = getelementptr inbounds %struct.bSensor, %struct.bSensor* %1, i32 0, i32 7, !dbg !5915
  %2 = load i16, i16* %totlinks, align 2, !dbg !5915
  %conv = sext i16 %2 to i32, !dbg !5914
  %cmp = icmp slt i32 %0, %conv, !dbg !5916
  br i1 %cmp, label %for.body, label %for.end, !dbg !5917

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bSensor*, %struct.bSensor** %sens.addr, align 8, !dbg !5918
  %links = getelementptr inbounds %struct.bSensor, %struct.bSensor* %3, i32 0, i32 12, !dbg !5920
  %4 = load %struct.bController**, %struct.bController*** %links, align 8, !dbg !5920
  %5 = load i32, i32* %i, align 4, !dbg !5921
  %idxprom = sext i32 %5 to i64, !dbg !5918
  %arrayidx = getelementptr inbounds %struct.bController*, %struct.bController** %4, i64 %idxprom, !dbg !5918
  %6 = load %struct.bController*, %struct.bController** %arrayidx, align 8, !dbg !5918
  store %struct.bController* %6, %struct.bController** %cont, align 8, !dbg !5922
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5923
  %8 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !5925
  %9 = bitcast %struct.bController* %8 to i8*, !dbg !5925
  %call = call %struct.uiBut* @uiFindInlink(%struct.uiBlock* %7, i8* %9), !dbg !5926
  %cmp2 = icmp ne %struct.uiBut* %call, null, !dbg !5927
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5928

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !5929
  br label %return, !dbg !5929

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5930

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !5931
  %inc = add nsw i32 %10, 1, !dbg !5931
  store i32 %inc, i32* %i, align 4, !dbg !5931
  br label %for.cond, !dbg !5932, !llvm.loop !5933

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !5935
  br label %return, !dbg !5935

return:                                           ; preds = %for.end, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !5936
  ret i8 %11, !dbg !5936
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_header(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.PointerRNA* %logic_ptr) #0 !dbg !5937 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %logic_ptr.addr = alloca %struct.PointerRNA*, align 8
  %box = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %sens = alloca %struct.bSensor*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  store %struct.PointerRNA* %logic_ptr, %struct.PointerRNA** %logic_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %logic_ptr.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !5946, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !5952, metadata !DIExpression()), !dbg !5953
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5954
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5955
  %1 = load i8*, i8** %data, align 8, !dbg !5955
  %2 = bitcast i8* %1 to %struct.bSensor*, !dbg !5956
  store %struct.bSensor* %2, %struct.bSensor** %sens, align 8, !dbg !5953
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5957
  %call = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %3), !dbg !5958
  store %struct.uiLayout* %call, %struct.uiLayout** %box, align 8, !dbg !5959
  %4 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !5960
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %4, i32 0), !dbg !5961
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !5962
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5963
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %5, i32 0), !dbg !5964
  store %struct.uiLayout* %call2, %struct.uiLayout** %sub, align 8, !dbg !5965
  %6 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5966
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5967
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !5968
  %conv = trunc i32 %call3 to i8, !dbg !5968
  call void @uiLayoutSetActive(%struct.uiLayout* %6, i8 zeroext %conv), !dbg !5969
  %8 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5970
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5971
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5972
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5973
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !5975
  %tobool = icmp ne i32 %call4, 0, !dbg !5975
  br i1 %tobool, label %if.then, label %if.else, !dbg !5976

if.then:                                          ; preds = %entry
  %11 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5977
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5979
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5980
  %13 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5981
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5982
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !5983
  br label %if.end, !dbg !5984

if.else:                                          ; preds = %entry
  %15 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5985
  %16 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5987
  %type = getelementptr inbounds %struct.bSensor, %struct.bSensor* %16, i32 0, i32 2, !dbg !5987
  %17 = load i16, i16* %type, align 8, !dbg !5987
  %conv5 = sext i16 %17 to i32, !dbg !5987
  %call6 = call i8* @sensor_name(i32 %conv5), !dbg !5987
  call void @uiItemL(%struct.uiLayout* %15, i8* %call6, i32 0), !dbg !5988
  %18 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5989
  %19 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !5990
  %name = getelementptr inbounds %struct.bSensor, %struct.bSensor* %19, i32 0, i32 10, !dbg !5991
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5990
  call void @uiItemL(%struct.uiLayout* %18, i8* %arraydecay, i32 0), !dbg !5992
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !5993
  %call7 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %20, i32 0), !dbg !5994
  store %struct.uiLayout* %call7, %struct.uiLayout** %sub, align 8, !dbg !5995
  %21 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5996
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %logic_ptr.addr, align 8, !dbg !5997
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0)), !dbg !5998
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5998
  br i1 %tobool9, label %land.lhs.true, label %lor.lhs.false, !dbg !5999

land.lhs.true:                                    ; preds = %if.end
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6000
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6001
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6001
  br i1 %tobool11, label %land.rhs, label %lor.lhs.false, !dbg !6002

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6003
  %call12 = call i32 @RNA_boolean_get(%struct.PointerRNA* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0)), !dbg !6004
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6004
  br i1 %tobool13, label %land.rhs, label %land.end, !dbg !6005

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6006
  %call14 = call i32 @RNA_boolean_get(%struct.PointerRNA* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6007
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6005
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %26 = phi i1 [ false, %lor.lhs.false ], [ %tobool15, %land.rhs ], !dbg !6008
  %land.ext = zext i1 %26 to i32, !dbg !6005
  %conv16 = trunc i32 %land.ext to i8, !dbg !6009
  call void @uiLayoutSetActive(%struct.uiLayout* %21, i8 zeroext %conv16), !dbg !6010
  %27 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6011
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6012
  call void @uiItemR(%struct.uiLayout* %27, %struct.PointerRNA* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6013
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6014
  %call17 = call i32 @RNA_boolean_get(%struct.PointerRNA* %29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6016
  %cmp = icmp eq i32 %call17, 0, !dbg !6017
  br i1 %cmp, label %if.then19, label %if.end23, !dbg !6018

if.then19:                                        ; preds = %land.end
  %30 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6019
  %call20 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %30, i32 1), !dbg !6021
  store %struct.uiLayout* %call20, %struct.uiLayout** %sub, align 8, !dbg !6022
  %31 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6023
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6024
  %call21 = call i32 @RNA_boolean_get(%struct.PointerRNA* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6025
  %conv22 = trunc i32 %call21 to i8, !dbg !6025
  call void @uiLayoutSetActive(%struct.uiLayout* %31, i8 zeroext %conv22), !dbg !6026
  %33 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6027
  call void @uiItemEnumO(%struct.uiLayout* %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !6028
  %34 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6029
  call void @uiItemEnumO(%struct.uiLayout* %34, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 2), !dbg !6030
  br label %if.end23, !dbg !6031

if.end23:                                         ; preds = %if.then19, %land.end
  %35 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6032
  %call24 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %35, i32 0), !dbg !6033
  store %struct.uiLayout* %call24, %struct.uiLayout** %sub, align 8, !dbg !6034
  %36 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6035
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6036
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6037
  %38 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6038
  %call25 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %38, i32 0), !dbg !6039
  store %struct.uiLayout* %call25, %struct.uiLayout** %sub, align 8, !dbg !6040
  %39 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6041
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6042
  %call26 = call i32 @RNA_boolean_get(%struct.PointerRNA* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6043
  %conv27 = trunc i32 %call26 to i8, !dbg !6043
  call void @uiLayoutSetActive(%struct.uiLayout* %39, i8 zeroext %conv27), !dbg !6044
  %41 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6045
  call void @uiItemO(%struct.uiLayout* %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.82, i64 0, i64 0)), !dbg !6046
  ret void, !dbg !6047
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_brick_sensor(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !6048 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %box = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6053, metadata !DIExpression()), !dbg !6054
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !6057, metadata !DIExpression()), !dbg !6058
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6059
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6061
  %tobool = icmp ne i32 %call, 0, !dbg !6061
  br i1 %tobool, label %if.end, label %if.then, !dbg !6062

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !6063

if.end:                                           ; preds = %entry
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6064
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6065
  call void @draw_sensor_internal_header(%struct.uiLayout* %1, %struct.PointerRNA* %2), !dbg !6066
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6067
  %call1 = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %3), !dbg !6068
  store %struct.uiLayout* %call1, %struct.uiLayout** %box, align 8, !dbg !6069
  %4 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6070
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6071
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6072
  %conv = trunc i32 %call2 to i8, !dbg !6072
  call void @uiLayoutSetActive(%struct.uiLayout* %4, i8 zeroext %conv), !dbg !6073
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6074
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !6075
  switch i32 %call3, label %sw.epilog [
    i32 12, label %sw.bb
    i32 0, label %sw.bb4
    i32 14, label %sw.bb5
    i32 6, label %sw.bb6
    i32 13, label %sw.bb7
    i32 11, label %sw.bb8
    i32 3, label %sw.bb9
    i32 10, label %sw.bb10
    i32 5, label %sw.bb11
    i32 2, label %sw.bb12
    i32 4, label %sw.bb13
    i32 7, label %sw.bb14
    i32 8, label %sw.bb15
    i32 9, label %sw.bb16
  ], !dbg !6076

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6077
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6079
  call void @draw_sensor_actuator(%struct.uiLayout* %7, %struct.PointerRNA* %8), !dbg !6080
  br label %sw.epilog, !dbg !6081

sw.bb4:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !6082

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6083
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6084
  call void @draw_sensor_armature(%struct.uiLayout* %9, %struct.PointerRNA* %10), !dbg !6085
  br label %sw.epilog, !dbg !6086

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6087
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6088
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6089
  call void @draw_sensor_collision(%struct.uiLayout* %11, %struct.PointerRNA* %12, %struct.bContext* %13), !dbg !6090
  br label %sw.epilog, !dbg !6091

sw.bb7:                                           ; preds = %if.end
  %14 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6092
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6093
  call void @draw_sensor_delay(%struct.uiLayout* %14, %struct.PointerRNA* %15), !dbg !6094
  br label %sw.epilog, !dbg !6095

sw.bb8:                                           ; preds = %if.end
  %16 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6096
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6097
  call void @draw_sensor_joystick(%struct.uiLayout* %16, %struct.PointerRNA* %17), !dbg !6098
  br label %sw.epilog, !dbg !6099

sw.bb9:                                           ; preds = %if.end
  %18 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6100
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6101
  call void @draw_sensor_keyboard(%struct.uiLayout* %18, %struct.PointerRNA* %19), !dbg !6102
  br label %sw.epilog, !dbg !6103

sw.bb10:                                          ; preds = %if.end
  %20 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6104
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6105
  call void @draw_sensor_message(%struct.uiLayout* %20, %struct.PointerRNA* %21), !dbg !6106
  br label %sw.epilog, !dbg !6107

sw.bb11:                                          ; preds = %if.end
  %22 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6108
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6109
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6110
  call void @draw_sensor_mouse(%struct.uiLayout* %22, %struct.PointerRNA* %23, %struct.bContext* %24), !dbg !6111
  br label %sw.epilog, !dbg !6112

sw.bb12:                                          ; preds = %if.end
  %25 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6113
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6114
  call void @draw_sensor_near(%struct.uiLayout* %25, %struct.PointerRNA* %26), !dbg !6115
  br label %sw.epilog, !dbg !6116

sw.bb13:                                          ; preds = %if.end
  %27 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6117
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6118
  call void @draw_sensor_property(%struct.uiLayout* %27, %struct.PointerRNA* %28), !dbg !6119
  br label %sw.epilog, !dbg !6120

sw.bb14:                                          ; preds = %if.end
  %29 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6121
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6122
  call void @draw_sensor_radar(%struct.uiLayout* %29, %struct.PointerRNA* %30), !dbg !6123
  br label %sw.epilog, !dbg !6124

sw.bb15:                                          ; preds = %if.end
  %31 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6125
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6126
  call void @draw_sensor_random(%struct.uiLayout* %31, %struct.PointerRNA* %32), !dbg !6127
  br label %sw.epilog, !dbg !6128

sw.bb16:                                          ; preds = %if.end
  %33 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6129
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6130
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6131
  call void @draw_sensor_ray(%struct.uiLayout* %33, %struct.PointerRNA* %34, %struct.bContext* %35), !dbg !6132
  br label %sw.epilog, !dbg !6133

sw.epilog:                                        ; preds = %if.then, %if.end, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !6134
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @actuator_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %UNUSED_arg) #0 !dbg !6135 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %xco = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata i32* %xco, metadata !6144, metadata !DIExpression()), !dbg !6145
  store i32 0, i32* %xco, align 4, !dbg !6145
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6146
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6147
  %call = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %0, %struct.ARegion* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.actuator_menu, i64 0, i64 0), i16 signext 2), !dbg !6148
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !6149
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6150
  call void @uiBlockSetButmFunc(%struct.uiBlock* %2, void (%struct.bContext*, i8*, i32)* @do_actuator_menu, i8* null), !dbg !6151
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6152
  %4 = load i32, i32* %xco, align 4, !dbg !6153
  %sub = sub nsw i32 %4, 20, !dbg !6153
  store i32 %sub, i32* %xco, align 4, !dbg !6153
  %conv = trunc i32 %sub to i16, !dbg !6154
  %conv1 = sext i16 %conv to i32, !dbg !6154
  %call2 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %3, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i32 0, i32 %conv1, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6155
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6156
  %6 = load i32, i32* %xco, align 4, !dbg !6157
  %sub3 = sub nsw i32 %6, 20, !dbg !6157
  store i32 %sub3, i32* %xco, align 4, !dbg !6157
  %conv4 = trunc i32 %sub3 to i16, !dbg !6158
  %conv5 = sext i16 %conv4 to i32, !dbg !6158
  %call6 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %5, i32 10240, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 0, i32 %conv5, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6159
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6160
  %8 = load i32, i32* %xco, align 4, !dbg !6161
  %sub7 = sub nsw i32 %8, 6, !dbg !6161
  store i32 %sub7, i32* %xco, align 4, !dbg !6161
  %conv8 = trunc i32 %sub7 to i16, !dbg !6162
  %conv9 = sext i16 %conv8 to i32, !dbg !6162
  %call10 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %7, i32 27648, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 %conv9, i16 signext 160, i16 signext 6, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6163
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6164
  %10 = load i32, i32* %xco, align 4, !dbg !6165
  %sub11 = sub nsw i32 %10, 20, !dbg !6165
  store i32 %sub11, i32* %xco, align 4, !dbg !6165
  %conv12 = trunc i32 %sub11 to i16, !dbg !6166
  %conv13 = sext i16 %conv12 to i32, !dbg !6166
  %call14 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %9, i32 10240, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.154, i64 0, i64 0), i32 0, i32 %conv13, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6167
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6168
  %12 = load i32, i32* %xco, align 4, !dbg !6169
  %sub15 = sub nsw i32 %12, 20, !dbg !6169
  store i32 %sub15, i32* %xco, align 4, !dbg !6169
  %conv16 = trunc i32 %sub15 to i16, !dbg !6170
  %conv17 = sext i16 %conv16 to i32, !dbg !6170
  %call18 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %11, i32 10240, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.155, i64 0, i64 0), i32 0, i32 %conv17, i16 signext 160, i16 signext 19, i8* null, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 3.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6171
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6172
  call void @uiBlockSetDirection(%struct.uiBlock* %13, i8 zeroext 1), !dbg !6173
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6174
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6175
  call void @uiEndBlock(%struct.bContext* %14, %struct.uiBlock* %15), !dbg !6176
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6177
  ret %struct.uiBlock* %16, !dbg !6178
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_header(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.PointerRNA* %logic_ptr) #0 !dbg !6179 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %logic_ptr.addr = alloca %struct.PointerRNA*, align 8
  %box = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %act = alloca %struct.bActuator*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6182, metadata !DIExpression()), !dbg !6183
  store %struct.PointerRNA* %logic_ptr, %struct.PointerRNA** %logic_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %logic_ptr.addr, metadata !6184, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !6186, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !6188, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !6192, metadata !DIExpression()), !dbg !6193
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6194
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !6195
  %1 = load i8*, i8** %data, align 8, !dbg !6195
  %2 = bitcast i8* %1 to %struct.bActuator*, !dbg !6196
  store %struct.bActuator* %2, %struct.bActuator** %act, align 8, !dbg !6193
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6197
  %call = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %3), !dbg !6198
  store %struct.uiLayout* %call, %struct.uiLayout** %box, align 8, !dbg !6199
  %4 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6200
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %4, i32 0), !dbg !6201
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !6202
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6203
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %5, i32 0), !dbg !6204
  store %struct.uiLayout* %call2, %struct.uiLayout** %sub, align 8, !dbg !6205
  %6 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6206
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6207
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6208
  %conv = trunc i32 %call3 to i8, !dbg !6208
  call void @uiLayoutSetActive(%struct.uiLayout* %6, i8 zeroext %conv), !dbg !6209
  %8 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6210
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6211
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6212
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6213
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6215
  %tobool = icmp ne i32 %call4, 0, !dbg !6215
  br i1 %tobool, label %if.then, label %if.else, !dbg !6216

if.then:                                          ; preds = %entry
  %11 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6217
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6219
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6220
  %13 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6221
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6222
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6223
  br label %if.end, !dbg !6224

if.else:                                          ; preds = %entry
  %15 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6225
  %16 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !6227
  %type = getelementptr inbounds %struct.bActuator, %struct.bActuator* %16, i32 0, i32 3, !dbg !6227
  %17 = load i16, i16* %type, align 8, !dbg !6227
  %conv5 = sext i16 %17 to i32, !dbg !6227
  %call6 = call i8* @actuator_name(i32 %conv5), !dbg !6227
  call void @uiItemL(%struct.uiLayout* %15, i8* %call6, i32 0), !dbg !6228
  %18 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6229
  %19 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !6230
  %name = getelementptr inbounds %struct.bActuator, %struct.bActuator* %19, i32 0, i32 7, !dbg !6231
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6230
  call void @uiItemL(%struct.uiLayout* %18, i8* %arraydecay, i32 0), !dbg !6232
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6233
  %call7 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %20, i32 0), !dbg !6234
  store %struct.uiLayout* %call7, %struct.uiLayout** %sub, align 8, !dbg !6235
  %21 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6236
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %logic_ptr.addr, align 8, !dbg !6237
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %22, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0)), !dbg !6238
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6238
  br i1 %tobool9, label %land.lhs.true, label %lor.lhs.false, !dbg !6239

land.lhs.true:                                    ; preds = %if.end
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6240
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6241
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6241
  br i1 %tobool11, label %land.rhs, label %lor.lhs.false, !dbg !6242

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6243
  %call12 = call i32 @RNA_boolean_get(%struct.PointerRNA* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0)), !dbg !6244
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6244
  br i1 %tobool13, label %land.rhs, label %land.end, !dbg !6245

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6246
  %call14 = call i32 @RNA_boolean_get(%struct.PointerRNA* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6247
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6245
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %26 = phi i1 [ false, %lor.lhs.false ], [ %tobool15, %land.rhs ], !dbg !6248
  %land.ext = zext i1 %26 to i32, !dbg !6245
  %conv16 = trunc i32 %land.ext to i8, !dbg !6249
  call void @uiLayoutSetActive(%struct.uiLayout* %21, i8 zeroext %conv16), !dbg !6250
  %27 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6251
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6252
  call void @uiItemR(%struct.uiLayout* %27, %struct.PointerRNA* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6253
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6254
  %call17 = call i32 @RNA_boolean_get(%struct.PointerRNA* %29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6256
  %cmp = icmp eq i32 %call17, 0, !dbg !6257
  br i1 %cmp, label %if.then19, label %if.end23, !dbg !6258

if.then19:                                        ; preds = %land.end
  %30 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6259
  %call20 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %30, i32 1), !dbg !6261
  store %struct.uiLayout* %call20, %struct.uiLayout** %sub, align 8, !dbg !6262
  %31 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6263
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6264
  %call21 = call i32 @RNA_boolean_get(%struct.PointerRNA* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6265
  %conv22 = trunc i32 %call21 to i8, !dbg !6265
  call void @uiLayoutSetActive(%struct.uiLayout* %31, i8 zeroext %conv22), !dbg !6266
  %33 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6267
  call void @uiItemEnumO(%struct.uiLayout* %33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 1), !dbg !6268
  %34 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6269
  call void @uiItemEnumO(%struct.uiLayout* %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 2), !dbg !6270
  br label %if.end23, !dbg !6271

if.end23:                                         ; preds = %if.then19, %land.end
  %35 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6272
  %call24 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %35, i32 0), !dbg !6273
  store %struct.uiLayout* %call24, %struct.uiLayout** %sub, align 8, !dbg !6274
  %36 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6275
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6276
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6277
  %38 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6278
  %call25 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %38, i32 0), !dbg !6279
  store %struct.uiLayout* %call25, %struct.uiLayout** %sub, align 8, !dbg !6280
  %39 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6281
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6282
  %call26 = call i32 @RNA_boolean_get(%struct.PointerRNA* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6283
  %conv27 = trunc i32 %call26 to i8, !dbg !6283
  call void @uiLayoutSetActive(%struct.uiLayout* %39, i8 zeroext %conv27), !dbg !6284
  %41 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6285
  call void @uiItemO(%struct.uiLayout* %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.157, i64 0, i64 0)), !dbg !6286
  ret void, !dbg !6287
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_brick_actuator(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !6288 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %box = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6289, metadata !DIExpression()), !dbg !6290
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6291, metadata !DIExpression()), !dbg !6292
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !6295, metadata !DIExpression()), !dbg !6296
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6297
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0)), !dbg !6299
  %tobool = icmp ne i32 %call, 0, !dbg !6299
  br i1 %tobool, label %if.end, label %if.then, !dbg !6300

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !6301

if.end:                                           ; preds = %entry
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6302
  %call1 = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %1), !dbg !6303
  store %struct.uiLayout* %call1, %struct.uiLayout** %box, align 8, !dbg !6304
  %2 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6305
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6306
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6307
  %conv = trunc i32 %call2 to i8, !dbg !6307
  call void @uiLayoutSetActive(%struct.uiLayout* %2, i8 zeroext %conv), !dbg !6308
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6309
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !6310
  switch i32 %call3, label %sw.epilog [
    i32 15, label %sw.bb
    i32 23, label %sw.bb4
    i32 3, label %sw.bb5
    i32 9, label %sw.bb6
    i32 10, label %sw.bb7
    i32 19, label %sw.bb8
    i32 17, label %sw.bb9
    i32 14, label %sw.bb10
    i32 0, label %sw.bb11
    i32 20, label %sw.bb12
    i32 6, label %sw.bb13
    i32 13, label %sw.bb14
    i32 11, label %sw.bb15
    i32 21, label %sw.bb16
    i32 5, label %sw.bb17
    i32 22, label %sw.bb18
    i32 18, label %sw.bb19
    i32 24, label %sw.bb20
    i32 25, label %sw.bb21
  ], !dbg !6311

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6312
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6314
  call void @draw_actuator_action(%struct.uiLayout* %5, %struct.PointerRNA* %6), !dbg !6315
  br label %sw.epilog, !dbg !6316

sw.bb4:                                           ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6317
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6318
  call void @draw_actuator_armature(%struct.uiLayout* %7, %struct.PointerRNA* %8), !dbg !6319
  br label %sw.epilog, !dbg !6320

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6321
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6322
  call void @draw_actuator_camera(%struct.uiLayout* %9, %struct.PointerRNA* %10), !dbg !6323
  br label %sw.epilog, !dbg !6324

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6325
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6326
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6327
  call void @draw_actuator_constraint(%struct.uiLayout* %11, %struct.PointerRNA* %12, %struct.bContext* %13), !dbg !6328
  br label %sw.epilog, !dbg !6329

sw.bb7:                                           ; preds = %if.end
  %14 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6330
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6331
  call void @draw_actuator_edit_object(%struct.uiLayout* %14, %struct.PointerRNA* %15), !dbg !6332
  br label %sw.epilog, !dbg !6333

sw.bb8:                                           ; preds = %if.end
  %16 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6334
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6335
  call void @draw_actuator_filter_2d(%struct.uiLayout* %16, %struct.PointerRNA* %17), !dbg !6336
  br label %sw.epilog, !dbg !6337

sw.bb9:                                           ; preds = %if.end
  %18 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6338
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6339
  call void @draw_actuator_game(%struct.uiLayout* %18, %struct.PointerRNA* %19), !dbg !6340
  br label %sw.epilog, !dbg !6341

sw.bb10:                                          ; preds = %if.end
  %20 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6342
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6343
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6344
  call void @draw_actuator_message(%struct.uiLayout* %20, %struct.PointerRNA* %21, %struct.bContext* %22), !dbg !6345
  br label %sw.epilog, !dbg !6346

sw.bb11:                                          ; preds = %if.end
  %23 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6347
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6348
  call void @draw_actuator_motion(%struct.uiLayout* %23, %struct.PointerRNA* %24), !dbg !6349
  br label %sw.epilog, !dbg !6350

sw.bb12:                                          ; preds = %if.end
  %25 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6351
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6352
  call void @draw_actuator_parent(%struct.uiLayout* %25, %struct.PointerRNA* %26), !dbg !6353
  br label %sw.epilog, !dbg !6354

sw.bb13:                                          ; preds = %if.end
  %27 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6355
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6356
  call void @draw_actuator_property(%struct.uiLayout* %27, %struct.PointerRNA* %28), !dbg !6357
  br label %sw.epilog, !dbg !6358

sw.bb14:                                          ; preds = %if.end
  %29 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6359
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6360
  call void @draw_actuator_random(%struct.uiLayout* %29, %struct.PointerRNA* %30), !dbg !6361
  br label %sw.epilog, !dbg !6362

sw.bb15:                                          ; preds = %if.end
  %31 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6363
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6364
  call void @draw_actuator_scene(%struct.uiLayout* %31, %struct.PointerRNA* %32), !dbg !6365
  br label %sw.epilog, !dbg !6366

sw.bb16:                                          ; preds = %if.end
  %33 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6367
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6368
  call void @draw_actuator_shape_action(%struct.uiLayout* %33, %struct.PointerRNA* %34), !dbg !6369
  br label %sw.epilog, !dbg !6370

sw.bb17:                                          ; preds = %if.end
  %35 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6371
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6372
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6373
  call void @draw_actuator_sound(%struct.uiLayout* %35, %struct.PointerRNA* %36, %struct.bContext* %37), !dbg !6374
  br label %sw.epilog, !dbg !6375

sw.bb18:                                          ; preds = %if.end
  %38 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6376
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6377
  call void @draw_actuator_state(%struct.uiLayout* %38, %struct.PointerRNA* %39), !dbg !6378
  br label %sw.epilog, !dbg !6379

sw.bb19:                                          ; preds = %if.end
  %40 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6380
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6381
  call void @draw_actuator_visibility(%struct.uiLayout* %40, %struct.PointerRNA* %41), !dbg !6382
  br label %sw.epilog, !dbg !6383

sw.bb20:                                          ; preds = %if.end
  %42 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6384
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6385
  call void @draw_actuator_steering(%struct.uiLayout* %42, %struct.PointerRNA* %43), !dbg !6386
  br label %sw.epilog, !dbg !6387

sw.bb21:                                          ; preds = %if.end
  %44 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6388
  %45 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6389
  call void @draw_actuator_mouse(%struct.uiLayout* %44, %struct.PointerRNA* %45), !dbg !6390
  br label %sw.epilog, !dbg !6391

sw.epilog:                                        ; preds = %if.then, %if.end, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !6392
}

declare dso_local void @UI_view2d_totRect_set(%struct.View2D*, i32, i32) #2

declare dso_local void @UI_view2d_view_ortho(%struct.View2D*) #2

declare dso_local void @uiComposeLinks(%struct.uiBlock*) #2

declare dso_local void @uiEndBlock(%struct.bContext*, %struct.uiBlock*) #2

declare dso_local void @uiDrawBlock(%struct.bContext*, %struct.uiBlock*) #2

declare dso_local void @UI_view2d_view_restore(%struct.bContext*) #2

declare dso_local i32 @BLI_natstrcmp(i8*, i8*) #2

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_sca_ob(%struct.Object* %ob) #0 !dbg !6393 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %cont = alloca %struct.bController*, align 8
  %act = alloca %struct.bActuator*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6396, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !6398, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !6400, metadata !DIExpression()), !dbg !6401
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6402
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 93, !dbg !6403
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers, i32 0, i32 0, !dbg !6404
  %1 = load i8*, i8** %first, align 8, !dbg !6404
  %2 = bitcast i8* %1 to %struct.bController*, !dbg !6402
  store %struct.bController* %2, %struct.bController** %cont, align 8, !dbg !6405
  br label %while.cond, !dbg !6406

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6407
  %tobool = icmp ne %struct.bController* %3, null, !dbg !6406
  br i1 %tobool, label %while.body, label %while.end, !dbg !6406

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6408
  %5 = bitcast %struct.Object* %4 to %struct.bController*, !dbg !6410
  %6 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6411
  %mynew = getelementptr inbounds %struct.bController, %struct.bController* %6, i32 0, i32 2, !dbg !6412
  store %struct.bController* %5, %struct.bController** %mynew, align 8, !dbg !6413
  %7 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6414
  %next = getelementptr inbounds %struct.bController, %struct.bController* %7, i32 0, i32 0, !dbg !6415
  %8 = load %struct.bController*, %struct.bController** %next, align 8, !dbg !6415
  store %struct.bController* %8, %struct.bController** %cont, align 8, !dbg !6416
  br label %while.cond, !dbg !6406, !llvm.loop !6417

while.end:                                        ; preds = %while.cond
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6419
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 94, !dbg !6420
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators, i32 0, i32 0, !dbg !6421
  %10 = load i8*, i8** %first1, align 8, !dbg !6421
  %11 = bitcast i8* %10 to %struct.bActuator*, !dbg !6419
  store %struct.bActuator* %11, %struct.bActuator** %act, align 8, !dbg !6422
  br label %while.cond2, !dbg !6423

while.cond2:                                      ; preds = %while.body4, %while.end
  %12 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !6424
  %tobool3 = icmp ne %struct.bActuator* %12, null, !dbg !6423
  br i1 %tobool3, label %while.body4, label %while.end7, !dbg !6423

while.body4:                                      ; preds = %while.cond2
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6425
  %14 = bitcast %struct.Object* %13 to %struct.bActuator*, !dbg !6427
  %15 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !6428
  %mynew5 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %15, i32 0, i32 2, !dbg !6429
  store %struct.bActuator* %14, %struct.bActuator** %mynew5, align 8, !dbg !6430
  %16 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !6431
  %next6 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %16, i32 0, i32 0, !dbg !6432
  %17 = load %struct.bActuator*, %struct.bActuator** %next6, align 8, !dbg !6432
  store %struct.bActuator* %17, %struct.bActuator** %act, align 8, !dbg !6433
  br label %while.cond2, !dbg !6423, !llvm.loop !6434

while.end7:                                       ; preds = %while.cond2
  ret void, !dbg !6436
}

declare dso_local void @clear_sca_new_poins() #2

declare dso_local %struct.bSensor* @new_sensor(i32) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local void @ED_undo_push(%struct.bContext*, i8*) #2

declare dso_local void @init_sensor(%struct.bSensor*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @free_sensor(%struct.bSensor*) #2

declare dso_local %struct.bController* @new_controller(i32) #2

declare dso_local void @init_controller(%struct.bController*) #2

declare dso_local void @unlink_controller(%struct.bController*) #2

declare dso_local void @free_controller(%struct.bController*) #2

declare dso_local %struct.bActuator* @new_actuator(i32) #2

declare dso_local void @init_actuator(%struct.bActuator*) #2

declare dso_local void @unlink_actuator(%struct.bActuator*) #2

declare dso_local void @free_actuator(%struct.bActuator*) #2

declare dso_local void @uiBlockSetButmFunc(%struct.uiBlock*, void (%struct.bContext*, i8*, i32)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_controller_menu(%struct.bContext* %C, i8* %UNUSED_arg, i32 %event) #0 !dbg !6437 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %event.addr = alloca i32, align 4
  %slogic = alloca %struct.SpaceLogic*, align 8
  %idar = alloca %struct.ID**, align 8
  %ob = alloca %struct.Object*, align 8
  %cont = alloca %struct.bController*, align 8
  %count = alloca i16, align 2
  %a = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !6440, metadata !DIExpression()), !dbg !6441
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.declare(metadata %struct.SpaceLogic** %slogic, metadata !6444, metadata !DIExpression()), !dbg !6445
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6446
  %call = call %struct.SpaceLogic* @CTX_wm_space_logic(%struct.bContext* %0), !dbg !6447
  store %struct.SpaceLogic* %call, %struct.SpaceLogic** %slogic, align 8, !dbg !6445
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !6448, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !6452, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.declare(metadata i16* %count, metadata !6454, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata i16* %a, metadata !6456, metadata !DIExpression()), !dbg !6457
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6458
  %2 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !6459
  %scaflag = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %2, i32 0, i32 7, !dbg !6460
  %3 = load i16, i16* %scaflag, align 2, !dbg !6460
  %call1 = call %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %1, i16* %count, i16 signext %3), !dbg !6461
  store %struct.ID** %call1, %struct.ID*** %idar, align 8, !dbg !6462
  store i16 0, i16* %a, align 2, !dbg !6463
  br label %for.cond, !dbg !6465

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %a, align 2, !dbg !6466
  %conv = sext i16 %4 to i32, !dbg !6466
  %5 = load i16, i16* %count, align 2, !dbg !6468
  %conv2 = sext i16 %5 to i32, !dbg !6468
  %cmp = icmp slt i32 %conv, %conv2, !dbg !6469
  br i1 %cmp, label %for.body, label %for.end, !dbg !6470

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6471
  %7 = load i16, i16* %a, align 2, !dbg !6473
  %idxprom = sext i16 %7 to i64, !dbg !6471
  %arrayidx = getelementptr inbounds %struct.ID*, %struct.ID** %6, i64 %idxprom, !dbg !6471
  %8 = load %struct.ID*, %struct.ID** %arrayidx, align 8, !dbg !6471
  %9 = bitcast %struct.ID* %8 to %struct.Object*, !dbg !6474
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !6475
  %10 = load i32, i32* %event.addr, align 4, !dbg !6476
  %cmp4 = icmp eq i32 %10, 0, !dbg !6478
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !6479

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %event.addr, align 4, !dbg !6480
  %cmp6 = icmp eq i32 %11, 2, !dbg !6481
  br i1 %cmp6, label %if.then, label %if.else, !dbg !6482

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6483
  %scaflag8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 61, !dbg !6484
  %13 = load i16, i16* %scaflag8, align 4, !dbg !6485
  %conv9 = sext i16 %13 to i32, !dbg !6485
  %or = or i32 %conv9, 2048, !dbg !6485
  %conv10 = trunc i32 %or to i16, !dbg !6485
  store i16 %conv10, i16* %scaflag8, align 4, !dbg !6485
  br label %if.end17, !dbg !6483

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i32, i32* %event.addr, align 4, !dbg !6486
  %cmp11 = icmp eq i32 %14, 1, !dbg !6488
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !6489

if.then13:                                        ; preds = %if.else
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6490
  %scaflag14 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 61, !dbg !6491
  %16 = load i16, i16* %scaflag14, align 4, !dbg !6492
  %conv15 = sext i16 %16 to i32, !dbg !6492
  %and = and i32 %conv15, -2049, !dbg !6492
  %conv16 = trunc i32 %and to i16, !dbg !6492
  store i16 %conv16, i16* %scaflag14, align 4, !dbg !6492
  br label %if.end, !dbg !6490

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !6493

for.inc:                                          ; preds = %if.end17
  %17 = load i16, i16* %a, align 2, !dbg !6494
  %inc = add i16 %17, 1, !dbg !6494
  store i16 %inc, i16* %a, align 2, !dbg !6494
  br label %for.cond, !dbg !6495, !llvm.loop !6496

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %a, align 2, !dbg !6498
  br label %for.cond18, !dbg !6500

for.cond18:                                       ; preds = %for.inc42, %for.end
  %18 = load i16, i16* %a, align 2, !dbg !6501
  %conv19 = sext i16 %18 to i32, !dbg !6501
  %19 = load i16, i16* %count, align 2, !dbg !6503
  %conv20 = sext i16 %19 to i32, !dbg !6503
  %cmp21 = icmp slt i32 %conv19, %conv20, !dbg !6504
  br i1 %cmp21, label %for.body23, label %for.end44, !dbg !6505

for.body23:                                       ; preds = %for.cond18
  %20 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6506
  %21 = load i16, i16* %a, align 2, !dbg !6508
  %idxprom24 = sext i16 %21 to i64, !dbg !6506
  %arrayidx25 = getelementptr inbounds %struct.ID*, %struct.ID** %20, i64 %idxprom24, !dbg !6506
  %22 = load %struct.ID*, %struct.ID** %arrayidx25, align 8, !dbg !6506
  %23 = bitcast %struct.ID* %22 to %struct.Object*, !dbg !6509
  store %struct.Object* %23, %struct.Object** %ob, align 8, !dbg !6510
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6511
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 93, !dbg !6512
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers, i32 0, i32 0, !dbg !6513
  %25 = load i8*, i8** %first, align 8, !dbg !6513
  %26 = bitcast i8* %25 to %struct.bController*, !dbg !6511
  store %struct.bController* %26, %struct.bController** %cont, align 8, !dbg !6514
  br label %while.cond, !dbg !6515

while.cond:                                       ; preds = %if.end41, %for.body23
  %27 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6516
  %tobool = icmp ne %struct.bController* %27, null, !dbg !6515
  br i1 %tobool, label %while.body, label %while.end, !dbg !6515

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %event.addr, align 4, !dbg !6517
  %cmp26 = icmp eq i32 %28, 2, !dbg !6520
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !6521

if.then28:                                        ; preds = %while.body
  %29 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6522
  %flag = getelementptr inbounds %struct.bController, %struct.bController* %29, i32 0, i32 4, !dbg !6523
  %30 = load i16, i16* %flag, align 2, !dbg !6524
  %conv29 = sext i16 %30 to i32, !dbg !6524
  %or30 = or i32 %conv29, 1, !dbg !6524
  %conv31 = trunc i32 %or30 to i16, !dbg !6524
  store i16 %conv31, i16* %flag, align 2, !dbg !6524
  br label %if.end41, !dbg !6522

if.else32:                                        ; preds = %while.body
  %31 = load i32, i32* %event.addr, align 4, !dbg !6525
  %cmp33 = icmp eq i32 %31, 3, !dbg !6527
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !6528

if.then35:                                        ; preds = %if.else32
  %32 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6529
  %flag36 = getelementptr inbounds %struct.bController, %struct.bController* %32, i32 0, i32 4, !dbg !6530
  %33 = load i16, i16* %flag36, align 2, !dbg !6531
  %conv37 = sext i16 %33 to i32, !dbg !6531
  %and38 = and i32 %conv37, -2, !dbg !6531
  %conv39 = trunc i32 %and38 to i16, !dbg !6531
  store i16 %conv39, i16* %flag36, align 2, !dbg !6531
  br label %if.end40, !dbg !6529

if.end40:                                         ; preds = %if.then35, %if.else32
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then28
  %34 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6532
  %next = getelementptr inbounds %struct.bController, %struct.bController* %34, i32 0, i32 0, !dbg !6533
  %35 = load %struct.bController*, %struct.bController** %next, align 8, !dbg !6533
  store %struct.bController* %35, %struct.bController** %cont, align 8, !dbg !6534
  br label %while.cond, !dbg !6515, !llvm.loop !6535

while.end:                                        ; preds = %while.cond
  br label %for.inc42, !dbg !6537

for.inc42:                                        ; preds = %while.end
  %36 = load i16, i16* %a, align 2, !dbg !6538
  %inc43 = add i16 %36, 1, !dbg !6538
  store i16 %inc43, i16* %a, align 2, !dbg !6538
  br label %for.cond18, !dbg !6539, !llvm.loop !6540

for.end44:                                        ; preds = %for.cond18
  %37 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6542
  %tobool45 = icmp ne %struct.ID** %37, null, !dbg !6542
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6544

if.then46:                                        ; preds = %for.end44
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6545
  %39 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6546
  %40 = bitcast %struct.ID** %39 to i8*, !dbg !6546
  call void %38(i8* %40), !dbg !6545
  br label %if.end47, !dbg !6545

if.end47:                                         ; preds = %if.then46, %for.end44
  ret void, !dbg !6547
}

declare dso_local %struct.uiBut* @uiDefBut(%struct.uiBlock*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

declare dso_local void @uiBlockSetDirection(%struct.uiBlock*, i8 zeroext) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @controller_state_mask_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %arg_cont) #0 !dbg !6548 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %arg_cont.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %cont = alloca %struct.bController*, align 8
  %yco = alloca i16, align 2
  %xco = alloca i16, align 2
  %stbit = alloca i16, align 2
  %offset = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6551, metadata !DIExpression()), !dbg !6552
  store i8* %arg_cont, i8** %arg_cont.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_cont.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6555, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6557, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !6559, metadata !DIExpression()), !dbg !6560
  %0 = load i8*, i8** %arg_cont.addr, align 8, !dbg !6561
  %1 = bitcast i8* %0 to %struct.bController*, !dbg !6561
  store %struct.bController* %1, %struct.bController** %cont, align 8, !dbg !6560
  call void @llvm.dbg.declare(metadata i16* %yco, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i16 12, i16* %yco, align 2, !dbg !6563
  call void @llvm.dbg.declare(metadata i16* %xco, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i16 0, i16* %xco, align 2, !dbg !6565
  call void @llvm.dbg.declare(metadata i16* %stbit, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !6568, metadata !DIExpression()), !dbg !6569
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6570
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6571
  %call = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %2, %struct.ARegion* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.controller_state_mask_menu, i64 0, i64 0), i16 signext 0), !dbg !6572
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !6573
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6574
  %call1 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %4, i32 5120, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 -5, i32 -5, i16 signext 200, i16 signext 34, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6575
  store i16 0, i16* %offset, align 2, !dbg !6576
  br label %for.cond, !dbg !6578

for.cond:                                         ; preds = %for.inc54, %entry
  %5 = load i16, i16* %offset, align 2, !dbg !6579
  %conv = sext i16 %5 to i32, !dbg !6579
  %cmp = icmp slt i32 %conv, 15, !dbg !6581
  br i1 %cmp, label %for.body, label %for.end58, !dbg !6582

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6583
  call void @uiBlockBeginAlign(%struct.uiBlock* %6), !dbg !6585
  store i16 0, i16* %stbit, align 2, !dbg !6586
  br label %for.cond3, !dbg !6588

for.cond3:                                        ; preds = %for.inc, %for.body
  %7 = load i16, i16* %stbit, align 2, !dbg !6589
  %conv4 = sext i16 %7 to i32, !dbg !6589
  %cmp5 = icmp slt i32 %conv4, 5, !dbg !6591
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !6592

for.body7:                                        ; preds = %for.cond3
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6593
  %9 = load i16, i16* %stbit, align 2, !dbg !6595
  %conv8 = sext i16 %9 to i32, !dbg !6595
  %10 = load i16, i16* %offset, align 2, !dbg !6596
  %conv9 = sext i16 %10 to i32, !dbg !6596
  %add = add nsw i32 %conv8, %conv9, !dbg !6597
  %shl = shl i32 1, %add, !dbg !6598
  %11 = load i16, i16* %stbit, align 2, !dbg !6599
  %conv10 = sext i16 %11 to i32, !dbg !6599
  %12 = load i16, i16* %offset, align 2, !dbg !6600
  %conv11 = sext i16 %12 to i32, !dbg !6600
  %add12 = add nsw i32 %conv10, %conv11, !dbg !6601
  %13 = load i16, i16* %xco, align 2, !dbg !6602
  %conv13 = sext i16 %13 to i32, !dbg !6602
  %14 = load i16, i16* %stbit, align 2, !dbg !6603
  %conv14 = sext i16 %14 to i32, !dbg !6603
  %mul = mul nsw i32 12, %conv14, !dbg !6604
  %add15 = add nsw i32 %conv13, %mul, !dbg !6605
  %15 = load i16, i16* %offset, align 2, !dbg !6606
  %conv16 = sext i16 %15 to i32, !dbg !6606
  %mul17 = mul nsw i32 13, %conv16, !dbg !6607
  %add18 = add nsw i32 %add15, %mul17, !dbg !6608
  %conv19 = trunc i32 %add18 to i16, !dbg !6609
  %conv20 = sext i16 %conv19 to i32, !dbg !6609
  %16 = load i16, i16* %yco, align 2, !dbg !6610
  %conv21 = sext i16 %16 to i32, !dbg !6610
  %17 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6611
  %state_mask = getelementptr inbounds %struct.bController, %struct.bController* %17, i32 0, i32 17, !dbg !6612
  %call22 = call %struct.uiBut* @uiDefButBitI(%struct.uiBlock* %8, i32 1536, i32 %shl, i32 %add12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 %conv20, i32 %conv21, i16 signext 12, i16 signext 12, i32* %state_mask, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6613
  store %struct.uiBut* %call22, %struct.uiBut** %but, align 8, !dbg !6614
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6615
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6616
  %20 = bitcast %struct.uiBut* %19 to i8*, !dbg !6616
  %21 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6617
  %state_mask23 = getelementptr inbounds %struct.bController, %struct.bController* %21, i32 0, i32 17, !dbg !6618
  %22 = bitcast i32* %state_mask23 to i8*, !dbg !6619
  call void @uiButSetFunc(%struct.uiBut* %18, void (%struct.bContext*, i8*, i8*)* @check_controller_state_mask, i8* %20, i8* %22), !dbg !6620
  br label %for.inc, !dbg !6621

for.inc:                                          ; preds = %for.body7
  %23 = load i16, i16* %stbit, align 2, !dbg !6622
  %inc = add i16 %23, 1, !dbg !6622
  store i16 %inc, i16* %stbit, align 2, !dbg !6622
  br label %for.cond3, !dbg !6623, !llvm.loop !6624

for.end:                                          ; preds = %for.cond3
  store i16 0, i16* %stbit, align 2, !dbg !6626
  br label %for.cond24, !dbg !6628

for.cond24:                                       ; preds = %for.inc51, %for.end
  %24 = load i16, i16* %stbit, align 2, !dbg !6629
  %conv25 = sext i16 %24 to i32, !dbg !6629
  %cmp26 = icmp slt i32 %conv25, 5, !dbg !6631
  br i1 %cmp26, label %for.body28, label %for.end53, !dbg !6632

for.body28:                                       ; preds = %for.cond24
  %25 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6633
  %26 = load i16, i16* %stbit, align 2, !dbg !6635
  %conv29 = sext i16 %26 to i32, !dbg !6635
  %27 = load i16, i16* %offset, align 2, !dbg !6636
  %conv30 = sext i16 %27 to i32, !dbg !6636
  %add31 = add nsw i32 %conv29, %conv30, !dbg !6637
  %add32 = add nsw i32 %add31, 15, !dbg !6638
  %shl33 = shl i32 1, %add32, !dbg !6639
  %28 = load i16, i16* %stbit, align 2, !dbg !6640
  %conv34 = sext i16 %28 to i32, !dbg !6640
  %29 = load i16, i16* %offset, align 2, !dbg !6641
  %conv35 = sext i16 %29 to i32, !dbg !6641
  %add36 = add nsw i32 %conv34, %conv35, !dbg !6642
  %add37 = add nsw i32 %add36, 15, !dbg !6643
  %30 = load i16, i16* %xco, align 2, !dbg !6644
  %conv38 = sext i16 %30 to i32, !dbg !6644
  %31 = load i16, i16* %stbit, align 2, !dbg !6645
  %conv39 = sext i16 %31 to i32, !dbg !6645
  %mul40 = mul nsw i32 12, %conv39, !dbg !6646
  %add41 = add nsw i32 %conv38, %mul40, !dbg !6647
  %32 = load i16, i16* %offset, align 2, !dbg !6648
  %conv42 = sext i16 %32 to i32, !dbg !6648
  %mul43 = mul nsw i32 13, %conv42, !dbg !6649
  %add44 = add nsw i32 %add41, %mul43, !dbg !6650
  %conv45 = trunc i32 %add44 to i16, !dbg !6651
  %conv46 = sext i16 %conv45 to i32, !dbg !6651
  %33 = load i16, i16* %yco, align 2, !dbg !6652
  %conv47 = sext i16 %33 to i32, !dbg !6652
  %sub = sub nsw i32 %conv47, 12, !dbg !6653
  %34 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6654
  %state_mask48 = getelementptr inbounds %struct.bController, %struct.bController* %34, i32 0, i32 17, !dbg !6655
  %call49 = call %struct.uiBut* @uiDefButBitI(%struct.uiBlock* %25, i32 1536, i32 %shl33, i32 %add37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 %conv46, i32 %sub, i16 signext 12, i16 signext 12, i32* %state_mask48, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)), !dbg !6656
  store %struct.uiBut* %call49, %struct.uiBut** %but, align 8, !dbg !6657
  %35 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6658
  %36 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6659
  %37 = bitcast %struct.uiBut* %36 to i8*, !dbg !6659
  %38 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !6660
  %state_mask50 = getelementptr inbounds %struct.bController, %struct.bController* %38, i32 0, i32 17, !dbg !6661
  %39 = bitcast i32* %state_mask50 to i8*, !dbg !6662
  call void @uiButSetFunc(%struct.uiBut* %35, void (%struct.bContext*, i8*, i8*)* @check_controller_state_mask, i8* %37, i8* %39), !dbg !6663
  br label %for.inc51, !dbg !6664

for.inc51:                                        ; preds = %for.body28
  %40 = load i16, i16* %stbit, align 2, !dbg !6665
  %inc52 = add i16 %40, 1, !dbg !6665
  store i16 %inc52, i16* %stbit, align 2, !dbg !6665
  br label %for.cond24, !dbg !6666, !llvm.loop !6667

for.end53:                                        ; preds = %for.cond24
  br label %for.inc54, !dbg !6669

for.inc54:                                        ; preds = %for.end53
  %41 = load i16, i16* %offset, align 2, !dbg !6670
  %conv55 = sext i16 %41 to i32, !dbg !6670
  %add56 = add nsw i32 %conv55, 5, !dbg !6670
  %conv57 = trunc i32 %add56 to i16, !dbg !6670
  store i16 %conv57, i16* %offset, align 2, !dbg !6670
  br label %for.cond, !dbg !6671, !llvm.loop !6672

for.end58:                                        ; preds = %for.cond
  %42 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6674
  call void @uiBlockEndAlign(%struct.uiBlock* %42), !dbg !6675
  %43 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6676
  call void @uiBlockSetDirection(%struct.uiBlock* %43, i8 zeroext 1), !dbg !6677
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6678
  %45 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6679
  call void @uiEndBlock(%struct.bContext* %44, %struct.uiBlock* %45), !dbg !6680
  %46 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6681
  ret %struct.uiBlock* %46, !dbg !6682
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @controller_name(i32 %type) #0 !dbg !6683 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  %0 = load i32, i32* %type.addr, align 4, !dbg !6688
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 4, label %sw.bb2
    i32 5, label %sw.bb3
    i32 6, label %sw.bb4
    i32 7, label %sw.bb5
    i32 2, label %sw.bb6
    i32 3, label %sw.bb7
  ], !dbg !6689

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i8** %retval, align 8, !dbg !6690
  br label %return, !dbg !6690

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i64 0, i64 0), i8** %retval, align 8, !dbg !6692
  br label %return, !dbg !6692

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i8** %retval, align 8, !dbg !6693
  br label %return, !dbg !6693

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), i8** %retval, align 8, !dbg !6694
  br label %return, !dbg !6694

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0), i8** %retval, align 8, !dbg !6695
  br label %return, !dbg !6695

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0), i8** %retval, align 8, !dbg !6696
  br label %return, !dbg !6696

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i64 0, i64 0), i8** %retval, align 8, !dbg !6697
  br label %return, !dbg !6697

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8** %retval, align 8, !dbg !6698
  br label %return, !dbg !6698

sw.epilog:                                        ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i8** %retval, align 8, !dbg !6699
  br label %return, !dbg !6699

return:                                           ; preds = %sw.epilog, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !6700
  ret i8* %1, !dbg !6700
}

declare dso_local void @uiItemEnumO(%struct.uiLayout*, i8*, i8*, i32, i8*, i32) #2

declare dso_local void @uiItemO(%struct.uiLayout*, i8*, i32, i8*) #2

declare dso_local void @uiBlockBeginAlign(%struct.uiBlock*) #2

declare dso_local %struct.uiBut* @uiDefButBitI(%struct.uiBlock*, i32, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i32*, float, float, float, float, i8*) #2

declare dso_local void @uiButSetFunc(%struct.uiBut*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @check_controller_state_mask(%struct.bContext* %UNUSED_C, i8* %arg1_but, i8* %arg2_mask) #0 !dbg !6701 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %arg1_but.addr = alloca i8*, align 8
  %arg2_mask.addr = alloca i8*, align 8
  %cont_mask = alloca i32*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i8* %arg1_but, i8** %arg1_but.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1_but.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  store i8* %arg2_mask, i8** %arg2_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2_mask.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata i32** %cont_mask, metadata !6710, metadata !DIExpression()), !dbg !6711
  %0 = load i8*, i8** %arg2_mask.addr, align 8, !dbg !6712
  %1 = bitcast i8* %0 to i32*, !dbg !6712
  store i32* %1, i32** %cont_mask, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6713, metadata !DIExpression()), !dbg !6714
  %2 = load i8*, i8** %arg1_but.addr, align 8, !dbg !6715
  %3 = bitcast i8* %2 to %struct.uiBut*, !dbg !6715
  store %struct.uiBut* %3, %struct.uiBut** %but, align 8, !dbg !6714
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6716
  %retval = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 8, !dbg !6717
  %5 = load i16, i16* %retval, align 4, !dbg !6717
  %conv = sext i16 %5 to i32, !dbg !6716
  %shl = shl i32 1, %conv, !dbg !6718
  %6 = load i32*, i32** %cont_mask, align 8, !dbg !6719
  store i32 %shl, i32* %6, align 4, !dbg !6720
  %7 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6721
  %retval1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 8, !dbg !6722
  store i16 1, i16* %retval1, align 4, !dbg !6723
  ret void, !dbg !6724
}

declare dso_local void @uiBlockEndAlign(%struct.uiBlock*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_controller_state(%struct.uiLayout* %UNUSED_layout, %struct.PointerRNA* %UNUSED_ptr) #0 !dbg !6725 {
entry:
  %UNUSED_layout.addr = alloca %struct.uiLayout*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %UNUSED_layout, %struct.uiLayout** %UNUSED_layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %UNUSED_layout.addr, metadata !6726, metadata !DIExpression()), !dbg !6727
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  ret void, !dbg !6730
}

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_controller_expression(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !6731 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6734, metadata !DIExpression()), !dbg !6735
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6736
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6737
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6738
  ret void, !dbg !6739
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_controller_python(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !6740 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6741, metadata !DIExpression()), !dbg !6742
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6743, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !6745, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !6747, metadata !DIExpression()), !dbg !6748
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6749
  %call = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %0, float 0x3FD3333340000000, i32 1), !dbg !6750
  store %struct.uiLayout* %call, %struct.uiLayout** %split, align 8, !dbg !6751
  %1 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6752
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6753
  call void @uiItemR(%struct.uiLayout* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6754
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6755
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !6757
  %cmp = icmp eq i32 %call1, 0, !dbg !6758
  br i1 %cmp, label %if.then, label %if.else, !dbg !6759

if.then:                                          ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6760
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6762
  call void @uiItemR(%struct.uiLayout* %4, %struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6763
  br label %if.end, !dbg !6764

if.else:                                          ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6765
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %6, float 0x3FE99999A0000000, i32 0), !dbg !6767
  store %struct.uiLayout* %call2, %struct.uiLayout** %sub, align 8, !dbg !6768
  %7 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6769
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6770
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !6771
  %9 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6772
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6773
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !6774
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6775
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_sensor_menu(%struct.bContext* %C, i8* %UNUSED_arg, i32 %event) #0 !dbg !6776 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %event.addr = alloca i32, align 4
  %slogic = alloca %struct.SpaceLogic*, align 8
  %idar = alloca %struct.ID**, align 8
  %ob = alloca %struct.Object*, align 8
  %sens = alloca %struct.bSensor*, align 8
  %count = alloca i16, align 2
  %a = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata %struct.SpaceLogic** %slogic, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6785
  %call = call %struct.SpaceLogic* @CTX_wm_space_logic(%struct.bContext* %0), !dbg !6786
  store %struct.SpaceLogic* %call, %struct.SpaceLogic** %slogic, align 8, !dbg !6784
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !6787, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6789, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !6791, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata i16* %count, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata i16* %a, metadata !6795, metadata !DIExpression()), !dbg !6796
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6797
  %2 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !6798
  %scaflag = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %2, i32 0, i32 7, !dbg !6799
  %3 = load i16, i16* %scaflag, align 2, !dbg !6799
  %call1 = call %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %1, i16* %count, i16 signext %3), !dbg !6800
  store %struct.ID** %call1, %struct.ID*** %idar, align 8, !dbg !6801
  store i16 0, i16* %a, align 2, !dbg !6802
  br label %for.cond, !dbg !6804

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %a, align 2, !dbg !6805
  %conv = sext i16 %4 to i32, !dbg !6805
  %5 = load i16, i16* %count, align 2, !dbg !6807
  %conv2 = sext i16 %5 to i32, !dbg !6807
  %cmp = icmp slt i32 %conv, %conv2, !dbg !6808
  br i1 %cmp, label %for.body, label %for.end, !dbg !6809

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6810
  %7 = load i16, i16* %a, align 2, !dbg !6812
  %idxprom = sext i16 %7 to i64, !dbg !6810
  %arrayidx = getelementptr inbounds %struct.ID*, %struct.ID** %6, i64 %idxprom, !dbg !6810
  %8 = load %struct.ID*, %struct.ID** %arrayidx, align 8, !dbg !6810
  %9 = bitcast %struct.ID* %8 to %struct.Object*, !dbg !6813
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !6814
  %10 = load i32, i32* %event.addr, align 4, !dbg !6815
  %cmp4 = icmp eq i32 %10, 0, !dbg !6817
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !6818

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %event.addr, align 4, !dbg !6819
  %cmp6 = icmp eq i32 %11, 2, !dbg !6820
  br i1 %cmp6, label %if.then, label %if.else, !dbg !6821

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6822
  %scaflag8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 61, !dbg !6823
  %13 = load i16, i16* %scaflag8, align 4, !dbg !6824
  %conv9 = sext i16 %13 to i32, !dbg !6824
  %or = or i32 %conv9, 64, !dbg !6824
  %conv10 = trunc i32 %or to i16, !dbg !6824
  store i16 %conv10, i16* %scaflag8, align 4, !dbg !6824
  br label %if.end17, !dbg !6822

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i32, i32* %event.addr, align 4, !dbg !6825
  %cmp11 = icmp eq i32 %14, 1, !dbg !6827
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !6828

if.then13:                                        ; preds = %if.else
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6829
  %scaflag14 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 61, !dbg !6830
  %16 = load i16, i16* %scaflag14, align 4, !dbg !6831
  %conv15 = sext i16 %16 to i32, !dbg !6831
  %and = and i32 %conv15, -65, !dbg !6831
  %conv16 = trunc i32 %and to i16, !dbg !6831
  store i16 %conv16, i16* %scaflag14, align 4, !dbg !6831
  br label %if.end, !dbg !6829

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !6832

for.inc:                                          ; preds = %if.end17
  %17 = load i16, i16* %a, align 2, !dbg !6833
  %inc = add i16 %17, 1, !dbg !6833
  store i16 %inc, i16* %a, align 2, !dbg !6833
  br label %for.cond, !dbg !6834, !llvm.loop !6835

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %a, align 2, !dbg !6837
  br label %for.cond18, !dbg !6839

for.cond18:                                       ; preds = %for.inc42, %for.end
  %18 = load i16, i16* %a, align 2, !dbg !6840
  %conv19 = sext i16 %18 to i32, !dbg !6840
  %19 = load i16, i16* %count, align 2, !dbg !6842
  %conv20 = sext i16 %19 to i32, !dbg !6842
  %cmp21 = icmp slt i32 %conv19, %conv20, !dbg !6843
  br i1 %cmp21, label %for.body23, label %for.end44, !dbg !6844

for.body23:                                       ; preds = %for.cond18
  %20 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6845
  %21 = load i16, i16* %a, align 2, !dbg !6847
  %idxprom24 = sext i16 %21 to i64, !dbg !6845
  %arrayidx25 = getelementptr inbounds %struct.ID*, %struct.ID** %20, i64 %idxprom24, !dbg !6845
  %22 = load %struct.ID*, %struct.ID** %arrayidx25, align 8, !dbg !6845
  %23 = bitcast %struct.ID* %22 to %struct.Object*, !dbg !6848
  store %struct.Object* %23, %struct.Object** %ob, align 8, !dbg !6849
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6850
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 92, !dbg !6851
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %sensors, i32 0, i32 0, !dbg !6852
  %25 = load i8*, i8** %first, align 8, !dbg !6852
  %26 = bitcast i8* %25 to %struct.bSensor*, !dbg !6850
  store %struct.bSensor* %26, %struct.bSensor** %sens, align 8, !dbg !6853
  br label %while.cond, !dbg !6854

while.cond:                                       ; preds = %if.end41, %for.body23
  %27 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !6855
  %tobool = icmp ne %struct.bSensor* %27, null, !dbg !6854
  br i1 %tobool, label %while.body, label %while.end, !dbg !6854

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %event.addr, align 4, !dbg !6856
  %cmp26 = icmp eq i32 %28, 2, !dbg !6859
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !6860

if.then28:                                        ; preds = %while.body
  %29 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !6861
  %flag = getelementptr inbounds %struct.bSensor, %struct.bSensor* %29, i32 0, i32 4, !dbg !6862
  %30 = load i16, i16* %flag, align 4, !dbg !6863
  %conv29 = sext i16 %30 to i32, !dbg !6863
  %or30 = or i32 %conv29, 1, !dbg !6863
  %conv31 = trunc i32 %or30 to i16, !dbg !6863
  store i16 %conv31, i16* %flag, align 4, !dbg !6863
  br label %if.end41, !dbg !6861

if.else32:                                        ; preds = %while.body
  %31 = load i32, i32* %event.addr, align 4, !dbg !6864
  %cmp33 = icmp eq i32 %31, 3, !dbg !6866
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !6867

if.then35:                                        ; preds = %if.else32
  %32 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !6868
  %flag36 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %32, i32 0, i32 4, !dbg !6869
  %33 = load i16, i16* %flag36, align 4, !dbg !6870
  %conv37 = sext i16 %33 to i32, !dbg !6870
  %and38 = and i32 %conv37, -2, !dbg !6870
  %conv39 = trunc i32 %and38 to i16, !dbg !6870
  store i16 %conv39, i16* %flag36, align 4, !dbg !6870
  br label %if.end40, !dbg !6868

if.end40:                                         ; preds = %if.then35, %if.else32
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then28
  %34 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !6871
  %next = getelementptr inbounds %struct.bSensor, %struct.bSensor* %34, i32 0, i32 0, !dbg !6872
  %35 = load %struct.bSensor*, %struct.bSensor** %next, align 8, !dbg !6872
  store %struct.bSensor* %35, %struct.bSensor** %sens, align 8, !dbg !6873
  br label %while.cond, !dbg !6854, !llvm.loop !6874

while.end:                                        ; preds = %while.cond
  br label %for.inc42, !dbg !6876

for.inc42:                                        ; preds = %while.end
  %36 = load i16, i16* %a, align 2, !dbg !6877
  %inc43 = add i16 %36, 1, !dbg !6877
  store i16 %inc43, i16* %a, align 2, !dbg !6877
  br label %for.cond18, !dbg !6878, !llvm.loop !6879

for.end44:                                        ; preds = %for.cond18
  %37 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6881
  %tobool45 = icmp ne %struct.ID** %37, null, !dbg !6881
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6883

if.then46:                                        ; preds = %for.end44
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6884
  %39 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !6885
  %40 = bitcast %struct.ID** %39 to i8*, !dbg !6885
  call void %38(i8* %40), !dbg !6884
  br label %if.end47, !dbg !6884

if.end47:                                         ; preds = %if.then46, %for.end44
  ret void, !dbg !6886
}

declare dso_local %struct.uiBut* @uiFindInlink(%struct.uiBlock*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @sensor_name(i32 %type) #0 !dbg !6887 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6888, metadata !DIExpression()), !dbg !6889
  %0 = load i32, i32* %type.addr, align 4, !dbg !6890
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 14, label %sw.bb4
    i32 12, label %sw.bb5
    i32 13, label %sw.bb6
    i32 5, label %sw.bb7
    i32 6, label %sw.bb8
    i32 7, label %sw.bb9
    i32 8, label %sw.bb10
    i32 9, label %sw.bb11
    i32 10, label %sw.bb12
    i32 11, label %sw.bb13
  ], !dbg !6891

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i64 0, i64 0), i8** %retval, align 8, !dbg !6892
  br label %return, !dbg !6892

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i64 0, i64 0), i8** %retval, align 8, !dbg !6894
  br label %return, !dbg !6894

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0), i8** %retval, align 8, !dbg !6895
  br label %return, !dbg !6895

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0), i8** %retval, align 8, !dbg !6896
  br label %return, !dbg !6896

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8** %retval, align 8, !dbg !6897
  br label %return, !dbg !6897

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i8** %retval, align 8, !dbg !6898
  br label %return, !dbg !6898

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0), i8** %retval, align 8, !dbg !6899
  br label %return, !dbg !6899

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i8** %retval, align 8, !dbg !6900
  br label %return, !dbg !6900

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0), i8** %retval, align 8, !dbg !6901
  br label %return, !dbg !6901

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i8** %retval, align 8, !dbg !6902
  br label %return, !dbg !6902

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0), i8** %retval, align 8, !dbg !6903
  br label %return, !dbg !6903

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0), i8** %retval, align 8, !dbg !6904
  br label %return, !dbg !6904

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i8** %retval, align 8, !dbg !6905
  br label %return, !dbg !6905

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i64 0, i64 0), i8** %retval, align 8, !dbg !6906
  br label %return, !dbg !6906

sw.epilog:                                        ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i8** %retval, align 8, !dbg !6907
  br label %return, !dbg !6907

return:                                           ; preds = %sw.epilog, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !6908
  ret i8* %1, !dbg !6908
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_internal_header(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !6909 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %box = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %box, metadata !6914, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !6916, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !6918, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !6920, metadata !DIExpression()), !dbg !6921
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6922
  %call = call %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %0), !dbg !6923
  store %struct.uiLayout* %call, %struct.uiLayout** %box, align 8, !dbg !6924
  %1 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6925
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6926
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !6927
  %conv = trunc i32 %call1 to i8, !dbg !6927
  call void @uiLayoutSetActive(%struct.uiLayout* %1, i8 zeroext %conv), !dbg !6928
  %3 = load %struct.uiLayout*, %struct.uiLayout** %box, align 8, !dbg !6929
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %3, float 0x3FDCCCCCC0000000, i32 0), !dbg !6930
  store %struct.uiLayout* %call2, %struct.uiLayout** %split, align 8, !dbg !6931
  %4 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6932
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %4, i32 1), !dbg !6933
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !6934
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6935
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6936
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 47), !dbg !6937
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6938
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6939
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 48), !dbg !6940
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6941
  %call4 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %9, i32 0), !dbg !6942
  store %struct.uiLayout* %call4, %struct.uiLayout** %sub, align 8, !dbg !6943
  %10 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6944
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6945
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i64 0, i64 0)), !dbg !6946
  %tobool = icmp ne i32 %call5, 0, !dbg !6946
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6947

lor.rhs:                                          ; preds = %entry
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6948
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0)), !dbg !6949
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6947
  br label %lor.end, !dbg !6947

lor.end:                                          ; preds = %lor.rhs, %entry
  %13 = phi i1 [ true, %entry ], [ %tobool7, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32, !dbg !6947
  %conv8 = trunc i32 %lor.ext to i8, !dbg !6950
  call void @uiLayoutSetActive(%struct.uiLayout* %10, i8 zeroext %conv8), !dbg !6951
  %14 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !6952
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6953
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i64 0, i64 0), i32 0), !dbg !6954
  %16 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6955
  %call9 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %16, i32 1), !dbg !6956
  store %struct.uiLayout* %call9, %struct.uiLayout** %row, align 8, !dbg !6957
  %17 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6958
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6959
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !6960
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !6961
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6962
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !6963
  %21 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !6964
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6965
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i64 0, i64 0), i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i64 0, i64 0), i32 0), !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_actuator(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !6968 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6973, metadata !DIExpression()), !dbg !6974
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6975
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !6976
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6977
  %1 = load i8*, i8** %data, align 8, !dbg !6977
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !6978
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !6974
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !6979, metadata !DIExpression()), !dbg !6980
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6981
  %4 = bitcast %struct.Object* %3 to %struct.ID*, !dbg !6982
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6983
  %6 = bitcast %struct.Object* %5 to i8*, !dbg !6983
  call void @RNA_pointer_create(%struct.ID* %4, %struct.StructRNA* @RNA_GameObjectSettings, i8* %6, %struct.PointerRNA* %settings_ptr), !dbg !6984
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6985
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6986
  call void @uiItemPointerR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i8* null, i32 120), !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_armature(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !6989 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %sens = alloca %struct.bSensor*, align 8
  %as = alloca %struct.bArmatureSensor*, align 8
  %ob = alloca %struct.Object*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %pose_ptr = alloca %struct.PointerRNA, align 8
  %pchan_ptr = alloca %struct.PointerRNA, align 8
  %bones_prop = alloca %struct.PropertyRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata %struct.bSensor** %sens, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6996
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !6997
  %1 = load i8*, i8** %data, align 8, !dbg !6997
  %2 = bitcast i8* %1 to %struct.bSensor*, !dbg !6998
  store %struct.bSensor* %2, %struct.bSensor** %sens, align 8, !dbg !6995
  call void @llvm.dbg.declare(metadata %struct.bArmatureSensor** %as, metadata !6999, metadata !DIExpression()), !dbg !7000
  %3 = load %struct.bSensor*, %struct.bSensor** %sens, align 8, !dbg !7001
  %data1 = getelementptr inbounds %struct.bSensor, %struct.bSensor* %3, i32 0, i32 11, !dbg !7002
  %4 = load i8*, i8** %data1, align 8, !dbg !7002
  %5 = bitcast i8* %4 to %struct.bArmatureSensor*, !dbg !7003
  store %struct.bArmatureSensor* %5, %struct.bArmatureSensor** %as, align 8, !dbg !7000
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7004, metadata !DIExpression()), !dbg !7005
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7006
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 0, !dbg !7007
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7008
  %7 = load i8*, i8** %data2, align 8, !dbg !7008
  %8 = bitcast i8* %7 to %struct.Object*, !dbg !7009
  store %struct.Object* %8, %struct.Object** %ob, align 8, !dbg !7005
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7010, metadata !DIExpression()), !dbg !7011
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7012
  %type = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !7014
  %10 = load i16, i16* %type, align 8, !dbg !7014
  %conv = sext i16 %10 to i32, !dbg !7012
  %cmp = icmp ne i32 %conv, 25, !dbg !7015
  br i1 %cmp, label %if.then, label %if.end, !dbg !7016

if.then:                                          ; preds = %entry
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7017
  call void @uiItemL(%struct.uiLayout* %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106, i64 0, i64 0), i32 0), !dbg !7019
  br label %if.end16, !dbg !7020

if.end:                                           ; preds = %entry
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7021
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 18, !dbg !7023
  %13 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7023
  %tobool = icmp ne %struct.bPose* %13, null, !dbg !7021
  br i1 %tobool, label %if.then4, label %if.end10, !dbg !7024

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %pose_ptr, metadata !7025, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %pchan_ptr, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %bones_prop, metadata !7030, metadata !DIExpression()), !dbg !7033
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7034
  %15 = bitcast %struct.Object* %14 to %struct.ID*, !dbg !7035
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7036
  %pose5 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 18, !dbg !7037
  %17 = load %struct.bPose*, %struct.bPose** %pose5, align 8, !dbg !7037
  %18 = bitcast %struct.bPose* %17 to i8*, !dbg !7036
  call void @RNA_pointer_create(%struct.ID* %15, %struct.StructRNA* @RNA_Pose, i8* %18, %struct.PointerRNA* %pose_ptr), !dbg !7038
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)), !dbg !7039
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7040
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7041
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7042
  call void @uiItemPointerR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), %struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* null, i32 174), !dbg !7043
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7044
  %22 = load %struct.bArmatureSensor*, %struct.bArmatureSensor** %as, align 8, !dbg !7046
  %posechannel = getelementptr inbounds %struct.bArmatureSensor, %struct.bArmatureSensor* %22, i32 0, i32 0, !dbg !7047
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel, i64 0, i64 0, !dbg !7046
  %call6 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %pose_ptr, %struct.PropertyRNA* %21, i8* %arraydecay, %struct.PointerRNA* %pchan_ptr), !dbg !7048
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7048
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7049

if.then8:                                         ; preds = %if.then4
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7050
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7051
  call void @uiItemPointerR(%struct.uiLayout* %23, %struct.PointerRNA* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0), %struct.PointerRNA* %pchan_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 177), !dbg !7052
  br label %if.end9, !dbg !7052

if.end9:                                          ; preds = %if.then8, %if.then4
  br label %if.end10, !dbg !7053

if.end10:                                         ; preds = %if.end9, %if.end
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7054
  %call11 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %25, i32 1), !dbg !7055
  store %struct.uiLayout* %call11, %struct.uiLayout** %row, align 8, !dbg !7056
  %26 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7057
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7058
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7059
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7060
  %call12 = call i32 @RNA_enum_get(%struct.PointerRNA* %28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0)), !dbg !7062
  %cmp13 = icmp ne i32 %call12, 0, !dbg !7063
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7064

if.then15:                                        ; preds = %if.end10
  %29 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7065
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7066
  call void @uiItemR(%struct.uiLayout* %29, %struct.PointerRNA* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7067
  br label %if.end16, !dbg !7067

if.end16:                                         ; preds = %if.then, %if.then15, %if.end10
  ret void, !dbg !7068
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_collision(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !7069 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %main_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %main_ptr, metadata !7080, metadata !DIExpression()), !dbg !7081
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7082
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7083
  call void @RNA_main_pointer_create(%struct.Main* %call, %struct.PointerRNA* %main_ptr), !dbg !7084
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7085
  %call1 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %1, float 0x3FD3333340000000, i32 0), !dbg !7086
  store %struct.uiLayout* %call1, %struct.uiLayout** %split, align 8, !dbg !7087
  %2 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7088
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %2, i32 1), !dbg !7089
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !7090
  %3 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7091
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7092
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7093
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7094
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7095
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7096
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7097
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0)), !dbg !7098
  switch i32 %call3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ], !dbg !7099

sw.bb:                                            ; preds = %entry
  %8 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7100
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7102
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7103
  br label %sw.epilog, !dbg !7104

sw.bb4:                                           ; preds = %entry
  %10 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7105
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7106
  call void @uiItemPointerR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i8* null, i32 165), !dbg !7107
  br label %sw.epilog, !dbg !7108

sw.epilog:                                        ; preds = %entry, %sw.bb4, %sw.bb
  ret void, !dbg !7109
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_delay(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7110 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7115, metadata !DIExpression()), !dbg !7116
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7117
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %0, i32 0), !dbg !7118
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7119
  %1 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7120
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7121
  call void @uiItemR(%struct.uiLayout* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7122
  %3 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7123
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7124
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7125
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7126
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7127
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7128
  ret void, !dbg !7129
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_joystick(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7130 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7137, metadata !DIExpression()), !dbg !7138
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7139
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7140
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7141
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7142
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7143
  call void @uiItemR(%struct.uiLayout* %2, %struct.PointerRNA* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7144
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7145
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i64 0, i64 0)), !dbg !7146
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb11
    i32 3, label %sw.bb17
  ], !dbg !7147

sw.bb:                                            ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7148
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7150
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7151
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7152
  %call1 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %7, i32 0), !dbg !7153
  store %struct.uiLayout* %call1, %struct.uiLayout** %col, align 8, !dbg !7154
  %8 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7155
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7156
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0)), !dbg !7157
  %cmp = icmp eq i32 %call2, 0, !dbg !7158
  %conv = zext i1 %cmp to i32, !dbg !7158
  %conv3 = trunc i32 %conv to i8, !dbg !7157
  call void @uiLayoutSetActive(%struct.uiLayout* %8, i8 zeroext %conv3), !dbg !7159
  %10 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7160
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7161
  call void @uiItemR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7162
  br label %sw.epilog, !dbg !7163

sw.bb4:                                           ; preds = %entry
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7164
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 0), !dbg !7165
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !7166
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7167
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7168
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7169
  %15 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7170
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7171
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7172
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7173
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7174
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7175
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7176
  %call6 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %19, i32 0), !dbg !7177
  store %struct.uiLayout* %call6, %struct.uiLayout** %col, align 8, !dbg !7178
  %20 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7179
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7180
  %call7 = call i32 @RNA_boolean_get(%struct.PointerRNA* %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0)), !dbg !7181
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7182
  %conv9 = zext i1 %cmp8 to i32, !dbg !7182
  %conv10 = trunc i32 %conv9 to i8, !dbg !7181
  call void @uiLayoutSetActive(%struct.uiLayout* %20, i8 zeroext %conv10), !dbg !7183
  %22 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7184
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7185
  call void @uiItemR(%struct.uiLayout* %22, %struct.PointerRNA* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7186
  br label %sw.epilog, !dbg !7187

sw.bb11:                                          ; preds = %entry
  %24 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7188
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7189
  call void @uiItemR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.128, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7190
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7191
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7192
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7193
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7194
  %call12 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %28, i32 0), !dbg !7195
  store %struct.uiLayout* %call12, %struct.uiLayout** %col, align 8, !dbg !7196
  %29 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7197
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7198
  %call13 = call i32 @RNA_boolean_get(%struct.PointerRNA* %30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0)), !dbg !7199
  %cmp14 = icmp eq i32 %call13, 0, !dbg !7200
  %conv15 = zext i1 %cmp14 to i32, !dbg !7200
  %conv16 = trunc i32 %conv15 to i8, !dbg !7199
  call void @uiLayoutSetActive(%struct.uiLayout* %29, i8 zeroext %conv16), !dbg !7201
  %31 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7202
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7203
  call void @uiItemR(%struct.uiLayout* %31, %struct.PointerRNA* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7204
  br label %sw.epilog, !dbg !7205

sw.bb17:                                          ; preds = %entry
  %33 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7206
  %call18 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %33, i32 0), !dbg !7207
  store %struct.uiLayout* %call18, %struct.uiLayout** %row, align 8, !dbg !7208
  %34 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7209
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7210
  call void @uiItemR(%struct.uiLayout* %34, %struct.PointerRNA* %35, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7211
  %36 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7212
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7213
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7214
  br label %sw.epilog, !dbg !7215

sw.epilog:                                        ; preds = %entry, %sw.bb17, %sw.bb11, %sw.bb4, %sw.bb
  ret void, !dbg !7216
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_keyboard(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7217 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7222, metadata !DIExpression()), !dbg !7223
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7224
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !7225
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7226
  %1 = load i8*, i8** %data, align 8, !dbg !7226
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !7227
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !7223
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !7232, metadata !DIExpression()), !dbg !7233
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7234
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %3, i32 0), !dbg !7235
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7236
  %4 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7237
  call void @uiItemL(%struct.uiLayout* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0), i32 0), !dbg !7238
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7239
  %call1 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %5, i32 0), !dbg !7240
  store %struct.uiLayout* %call1, %struct.uiLayout** %col, align 8, !dbg !7241
  %6 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7242
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7243
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i64 0, i64 0)), !dbg !7244
  %cmp = icmp eq i32 %call2, 0, !dbg !7245
  %conv = zext i1 %cmp to i32, !dbg !7245
  %conv3 = trunc i32 %conv to i8, !dbg !7244
  call void @uiLayoutSetActive(%struct.uiLayout* %6, i8 zeroext %conv3), !dbg !7246
  %8 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7247
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7248
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7249
  %10 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7250
  %call4 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %10, i32 0), !dbg !7251
  store %struct.uiLayout* %call4, %struct.uiLayout** %col, align 8, !dbg !7252
  %11 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7253
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7254
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7255
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7256
  %call5 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %13, i32 0), !dbg !7257
  store %struct.uiLayout* %call5, %struct.uiLayout** %col, align 8, !dbg !7258
  %14 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7259
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7260
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i64 0, i64 0)), !dbg !7261
  %cmp7 = icmp eq i32 %call6, 0, !dbg !7262
  %conv8 = zext i1 %cmp7 to i32, !dbg !7262
  %conv9 = trunc i32 %conv8 to i8, !dbg !7261
  call void @uiLayoutSetActive(%struct.uiLayout* %14, i8 zeroext %conv9), !dbg !7263
  %16 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7264
  %call10 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %16, i32 0), !dbg !7265
  store %struct.uiLayout* %call10, %struct.uiLayout** %row, align 8, !dbg !7266
  %17 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7267
  call void @uiItemL(%struct.uiLayout* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i64 0, i64 0), i32 0), !dbg !7268
  %18 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7269
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7270
  call void @uiItemR(%struct.uiLayout* %18, %struct.PointerRNA* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.135, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7271
  %20 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !7272
  %call11 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %20, i32 0), !dbg !7273
  store %struct.uiLayout* %call11, %struct.uiLayout** %row, align 8, !dbg !7274
  %21 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7275
  call void @uiItemL(%struct.uiLayout* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.136, i64 0, i64 0), i32 0), !dbg !7276
  %22 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7277
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7278
  call void @uiItemR(%struct.uiLayout* %22, %struct.PointerRNA* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7279
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7280
  %25 = bitcast %struct.Object* %24 to %struct.ID*, !dbg !7281
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7282
  %27 = bitcast %struct.Object* %26 to i8*, !dbg !7282
  call void @RNA_pointer_create(%struct.ID* %25, %struct.StructRNA* @RNA_GameObjectSettings, i8* %27, %struct.PointerRNA* %settings_ptr), !dbg !7283
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7284
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7285
  call void @uiItemPointerR(%struct.uiLayout* %28, %struct.PointerRNA* %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !7286
  %30 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7287
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7288
  call void @uiItemPointerR(%struct.uiLayout* %30, %struct.PointerRNA* %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !7289
  ret void, !dbg !7290
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_message(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7291 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7296
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7297
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7298
  ret void, !dbg !7299
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_mouse(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !7300 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %split2 = alloca %struct.uiLayout*, align 8
  %main_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7301, metadata !DIExpression()), !dbg !7302
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !7307, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split2, metadata !7309, metadata !DIExpression()), !dbg !7310
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %main_ptr, metadata !7311, metadata !DIExpression()), !dbg !7312
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7313
  %call = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %0, float 0x3FE99999A0000000, i32 0), !dbg !7314
  store %struct.uiLayout* %call, %struct.uiLayout** %split, align 8, !dbg !7315
  %1 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7316
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7317
  call void @uiItemR(%struct.uiLayout* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7318
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7319
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)), !dbg !7321
  %cmp = icmp eq i32 %call1, 32, !dbg !7322
  br i1 %cmp, label %if.then, label %if.end8, !dbg !7323

if.then:                                          ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7324
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7326
  call void @uiItemR(%struct.uiLayout* %4, %struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7327
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7328
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %6, float 0x3FD3333340000000, i32 0), !dbg !7329
  store %struct.uiLayout* %call2, %struct.uiLayout** %split, align 8, !dbg !7330
  %7 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7331
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7332
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7333
  %9 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7334
  %call3 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %9, float 0x3FE6666660000000, i32 0), !dbg !7335
  store %struct.uiLayout* %call3, %struct.uiLayout** %split2, align 8, !dbg !7336
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7337
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0)), !dbg !7339
  %cmp5 = icmp eq i32 %call4, 0, !dbg !7340
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !7341

if.then6:                                         ; preds = %if.then
  %11 = load %struct.uiLayout*, %struct.uiLayout** %split2, align 8, !dbg !7342
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7344
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7345
  br label %if.end, !dbg !7346

if.else:                                          ; preds = %if.then
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7347
  %call7 = call %struct.Main* @CTX_data_main(%struct.bContext* %13), !dbg !7349
  call void @RNA_main_pointer_create(%struct.Main* %call7, %struct.PointerRNA* %main_ptr), !dbg !7350
  %14 = load %struct.uiLayout*, %struct.uiLayout** %split2, align 8, !dbg !7351
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7352
  call void @uiItemPointerR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 165), !dbg !7353
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %16 = load %struct.uiLayout*, %struct.uiLayout** %split2, align 8, !dbg !7354
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7355
  call void @uiItemR(%struct.uiLayout* %16, %struct.PointerRNA* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7356
  br label %if.end8, !dbg !7357

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !7358
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_near(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7359 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7364, metadata !DIExpression()), !dbg !7365
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7366
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7367
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7368
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7369
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %2, i32 1), !dbg !7370
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7371
  %3 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7372
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7373
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7374
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7375
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7376
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7377
  ret void, !dbg !7378
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_property(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7379 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7384, metadata !DIExpression()), !dbg !7385
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7386
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !7387
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7388
  %1 = load i8*, i8** %data, align 8, !dbg !7388
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !7389
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !7385
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7392, metadata !DIExpression()), !dbg !7393
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7394
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7395
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7396
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7397
  %6 = bitcast %struct.Object* %5 to %struct.ID*, !dbg !7398
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7399
  %8 = bitcast %struct.Object* %7 to i8*, !dbg !7399
  call void @RNA_pointer_create(%struct.ID* %6, %struct.StructRNA* @RNA_GameObjectSettings, i8* %8, %struct.PointerRNA* %settings_ptr), !dbg !7400
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7401
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7402
  call void @uiItemPointerR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !7403
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7404
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0)), !dbg !7405
  switch i32 %call, label %sw.epilog [
    i32 2, label %sw.bb
    i32 0, label %sw.bb2
    i32 1, label %sw.bb2
    i32 5, label %sw.bb2
    i32 6, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !7406

sw.bb:                                            ; preds = %entry
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7407
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 0), !dbg !7409
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !7410
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7411
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7412
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7413
  %15 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7414
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7415
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7416
  br label %sw.epilog, !dbg !7417

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7418
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7419
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7420
  br label %sw.epilog, !dbg !7421

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog, !dbg !7422

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb
  ret void, !dbg !7423
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_radar(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7424 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7431
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7432
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7433
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7434
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7435
  call void @uiItemR(%struct.uiLayout* %2, %struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7436
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7437
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %4, i32 0), !dbg !7438
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7439
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7440
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7441
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7442
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7443
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7444
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7445
  ret void, !dbg !7446
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_random(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7447 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7452
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7453
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7454
  ret void, !dbg !7455
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_sensor_ray(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !7456 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %main_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %main_ptr, metadata !7467, metadata !DIExpression()), !dbg !7468
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7469
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7470
  call void @RNA_main_pointer_create(%struct.Main* %call, %struct.PointerRNA* %main_ptr), !dbg !7471
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7472
  %call1 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %1, float 0x3FD3333340000000, i32 0), !dbg !7473
  store %struct.uiLayout* %call1, %struct.uiLayout** %split, align 8, !dbg !7474
  %2 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7475
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7476
  call void @uiItemR(%struct.uiLayout* %2, %struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7477
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7478
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i64 0, i64 0)), !dbg !7479
  switch i32 %call2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !7480

sw.bb:                                            ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7481
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7483
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7484
  br label %sw.epilog, !dbg !7485

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7486
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7487
  call void @uiItemPointerR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 165), !dbg !7488
  br label %sw.epilog, !dbg !7489

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7490
  %call4 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %9, float 0x3FD3333340000000, i32 0), !dbg !7491
  store %struct.uiLayout* %call4, %struct.uiLayout** %split, align 8, !dbg !7492
  %10 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7493
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7494
  call void @uiItemR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7495
  %12 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !7496
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 0), !dbg !7497
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !7498
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7499
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7500
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7501
  %15 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7502
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7503
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7504
  ret void, !dbg !7505
}

declare dso_local void @uiItemPointerR(%struct.uiLayout*, %struct.PointerRNA*, i8*, %struct.PointerRNA*, i8*, i8*, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_property_collection_lookup_string(%struct.PointerRNA*, %struct.PropertyRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local void @RNA_main_pointer_create(%struct.Main*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_actuator_menu(%struct.bContext* %C, i8* %UNUSED_arg, i32 %event) #0 !dbg !7506 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %event.addr = alloca i32, align 4
  %slogic = alloca %struct.SpaceLogic*, align 8
  %idar = alloca %struct.ID**, align 8
  %ob = alloca %struct.Object*, align 8
  %act = alloca %struct.bActuator*, align 8
  %count = alloca i16, align 2
  %a = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.SpaceLogic** %slogic, metadata !7513, metadata !DIExpression()), !dbg !7514
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7515
  %call = call %struct.SpaceLogic* @CTX_wm_space_logic(%struct.bContext* %0), !dbg !7516
  store %struct.SpaceLogic* %call, %struct.SpaceLogic** %slogic, align 8, !dbg !7514
  call void @llvm.dbg.declare(metadata %struct.ID*** %idar, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7519, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !7521, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.declare(metadata i16* %count, metadata !7523, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.declare(metadata i16* %a, metadata !7525, metadata !DIExpression()), !dbg !7526
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7527
  %2 = load %struct.SpaceLogic*, %struct.SpaceLogic** %slogic, align 8, !dbg !7528
  %scaflag = getelementptr inbounds %struct.SpaceLogic, %struct.SpaceLogic* %2, i32 0, i32 7, !dbg !7529
  %3 = load i16, i16* %scaflag, align 2, !dbg !7529
  %call1 = call %struct.ID** @get_selected_and_linked_obs(%struct.bContext* %1, i16* %count, i16 signext %3), !dbg !7530
  store %struct.ID** %call1, %struct.ID*** %idar, align 8, !dbg !7531
  store i16 0, i16* %a, align 2, !dbg !7532
  br label %for.cond, !dbg !7534

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i16, i16* %a, align 2, !dbg !7535
  %conv = sext i16 %4 to i32, !dbg !7535
  %5 = load i16, i16* %count, align 2, !dbg !7537
  %conv2 = sext i16 %5 to i32, !dbg !7537
  %cmp = icmp slt i32 %conv, %conv2, !dbg !7538
  br i1 %cmp, label %for.body, label %for.end, !dbg !7539

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !7540
  %7 = load i16, i16* %a, align 2, !dbg !7542
  %idxprom = sext i16 %7 to i64, !dbg !7540
  %arrayidx = getelementptr inbounds %struct.ID*, %struct.ID** %6, i64 %idxprom, !dbg !7540
  %8 = load %struct.ID*, %struct.ID** %arrayidx, align 8, !dbg !7540
  %9 = bitcast %struct.ID* %8 to %struct.Object*, !dbg !7543
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !7544
  %10 = load i32, i32* %event.addr, align 4, !dbg !7545
  %cmp4 = icmp eq i32 %10, 0, !dbg !7547
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !7548

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %event.addr, align 4, !dbg !7549
  %cmp6 = icmp eq i32 %11, 2, !dbg !7550
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7551

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7552
  %scaflag8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 61, !dbg !7553
  %13 = load i16, i16* %scaflag8, align 4, !dbg !7554
  %conv9 = sext i16 %13 to i32, !dbg !7554
  %or = or i32 %conv9, 128, !dbg !7554
  %conv10 = trunc i32 %or to i16, !dbg !7554
  store i16 %conv10, i16* %scaflag8, align 4, !dbg !7554
  br label %if.end17, !dbg !7552

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i32, i32* %event.addr, align 4, !dbg !7555
  %cmp11 = icmp eq i32 %14, 1, !dbg !7557
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !7558

if.then13:                                        ; preds = %if.else
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7559
  %scaflag14 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 61, !dbg !7560
  %16 = load i16, i16* %scaflag14, align 4, !dbg !7561
  %conv15 = sext i16 %16 to i32, !dbg !7561
  %and = and i32 %conv15, -129, !dbg !7561
  %conv16 = trunc i32 %and to i16, !dbg !7561
  store i16 %conv16, i16* %scaflag14, align 4, !dbg !7561
  br label %if.end, !dbg !7559

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7562

for.inc:                                          ; preds = %if.end17
  %17 = load i16, i16* %a, align 2, !dbg !7563
  %inc = add i16 %17, 1, !dbg !7563
  store i16 %inc, i16* %a, align 2, !dbg !7563
  br label %for.cond, !dbg !7564, !llvm.loop !7565

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %a, align 2, !dbg !7567
  br label %for.cond18, !dbg !7569

for.cond18:                                       ; preds = %for.inc42, %for.end
  %18 = load i16, i16* %a, align 2, !dbg !7570
  %conv19 = sext i16 %18 to i32, !dbg !7570
  %19 = load i16, i16* %count, align 2, !dbg !7572
  %conv20 = sext i16 %19 to i32, !dbg !7572
  %cmp21 = icmp slt i32 %conv19, %conv20, !dbg !7573
  br i1 %cmp21, label %for.body23, label %for.end44, !dbg !7574

for.body23:                                       ; preds = %for.cond18
  %20 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !7575
  %21 = load i16, i16* %a, align 2, !dbg !7577
  %idxprom24 = sext i16 %21 to i64, !dbg !7575
  %arrayidx25 = getelementptr inbounds %struct.ID*, %struct.ID** %20, i64 %idxprom24, !dbg !7575
  %22 = load %struct.ID*, %struct.ID** %arrayidx25, align 8, !dbg !7575
  %23 = bitcast %struct.ID* %22 to %struct.Object*, !dbg !7578
  store %struct.Object* %23, %struct.Object** %ob, align 8, !dbg !7579
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7580
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 94, !dbg !7581
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators, i32 0, i32 0, !dbg !7582
  %25 = load i8*, i8** %first, align 8, !dbg !7582
  %26 = bitcast i8* %25 to %struct.bActuator*, !dbg !7580
  store %struct.bActuator* %26, %struct.bActuator** %act, align 8, !dbg !7583
  br label %while.cond, !dbg !7584

while.cond:                                       ; preds = %if.end41, %for.body23
  %27 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !7585
  %tobool = icmp ne %struct.bActuator* %27, null, !dbg !7584
  br i1 %tobool, label %while.body, label %while.end, !dbg !7584

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %event.addr, align 4, !dbg !7586
  %cmp26 = icmp eq i32 %28, 2, !dbg !7589
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !7590

if.then28:                                        ; preds = %while.body
  %29 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !7591
  %flag = getelementptr inbounds %struct.bActuator, %struct.bActuator* %29, i32 0, i32 4, !dbg !7592
  %30 = load i16, i16* %flag, align 2, !dbg !7593
  %conv29 = sext i16 %30 to i32, !dbg !7593
  %or30 = or i32 %conv29, 1, !dbg !7593
  %conv31 = trunc i32 %or30 to i16, !dbg !7593
  store i16 %conv31, i16* %flag, align 2, !dbg !7593
  br label %if.end41, !dbg !7591

if.else32:                                        ; preds = %while.body
  %31 = load i32, i32* %event.addr, align 4, !dbg !7594
  %cmp33 = icmp eq i32 %31, 3, !dbg !7596
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !7597

if.then35:                                        ; preds = %if.else32
  %32 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !7598
  %flag36 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %32, i32 0, i32 4, !dbg !7599
  %33 = load i16, i16* %flag36, align 2, !dbg !7600
  %conv37 = sext i16 %33 to i32, !dbg !7600
  %and38 = and i32 %conv37, -2, !dbg !7600
  %conv39 = trunc i32 %and38 to i16, !dbg !7600
  store i16 %conv39, i16* %flag36, align 2, !dbg !7600
  br label %if.end40, !dbg !7598

if.end40:                                         ; preds = %if.then35, %if.else32
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then28
  %34 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !7601
  %next = getelementptr inbounds %struct.bActuator, %struct.bActuator* %34, i32 0, i32 0, !dbg !7602
  %35 = load %struct.bActuator*, %struct.bActuator** %next, align 8, !dbg !7602
  store %struct.bActuator* %35, %struct.bActuator** %act, align 8, !dbg !7603
  br label %while.cond, !dbg !7584, !llvm.loop !7604

while.end:                                        ; preds = %while.cond
  br label %for.inc42, !dbg !7606

for.inc42:                                        ; preds = %while.end
  %36 = load i16, i16* %a, align 2, !dbg !7607
  %inc43 = add i16 %36, 1, !dbg !7607
  store i16 %inc43, i16* %a, align 2, !dbg !7607
  br label %for.cond18, !dbg !7608, !llvm.loop !7609

for.end44:                                        ; preds = %for.cond18
  %37 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !7611
  %tobool45 = icmp ne %struct.ID** %37, null, !dbg !7611
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !7613

if.then46:                                        ; preds = %for.end44
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7614
  %39 = load %struct.ID**, %struct.ID*** %idar, align 8, !dbg !7615
  %40 = bitcast %struct.ID** %39 to i8*, !dbg !7615
  call void %38(i8* %40), !dbg !7614
  br label %if.end47, !dbg !7614

if.end47:                                         ; preds = %if.then46, %for.end44
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @actuator_name(i32 %type) #0 !dbg !7617 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  %0 = load i32, i32* %type.addr, align 4, !dbg !7620
  switch i32 %0, label %sw.epilog [
    i32 21, label %sw.bb
    i32 15, label %sw.bb1
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
    i32 2, label %sw.bb4
    i32 3, label %sw.bb5
    i32 4, label %sw.bb6
    i32 5, label %sw.bb7
    i32 6, label %sw.bb8
    i32 10, label %sw.bb9
    i32 9, label %sw.bb10
    i32 11, label %sw.bb11
    i32 12, label %sw.bb12
    i32 13, label %sw.bb13
    i32 14, label %sw.bb14
    i32 17, label %sw.bb15
    i32 18, label %sw.bb16
    i32 19, label %sw.bb17
    i32 20, label %sw.bb18
    i32 22, label %sw.bb19
    i32 23, label %sw.bb20
    i32 24, label %sw.bb21
    i32 25, label %sw.bb22
  ], !dbg !7621

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.158, i64 0, i64 0), i8** %retval, align 8, !dbg !7622
  br label %return, !dbg !7622

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i64 0, i64 0), i8** %retval, align 8, !dbg !7624
  br label %return, !dbg !7624

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i64 0, i64 0), i8** %retval, align 8, !dbg !7625
  br label %return, !dbg !7625

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i64 0, i64 0), i8** %retval, align 8, !dbg !7626
  br label %return, !dbg !7626

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i64 0, i64 0), i8** %retval, align 8, !dbg !7627
  br label %return, !dbg !7627

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i64 0, i64 0), i8** %retval, align 8, !dbg !7628
  br label %return, !dbg !7628

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.164, i64 0, i64 0), i8** %retval, align 8, !dbg !7629
  br label %return, !dbg !7629

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i64 0, i64 0), i8** %retval, align 8, !dbg !7630
  br label %return, !dbg !7630

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0), i8** %retval, align 8, !dbg !7631
  br label %return, !dbg !7631

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i64 0, i64 0), i8** %retval, align 8, !dbg !7632
  br label %return, !dbg !7632

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i64 0, i64 0), i8** %retval, align 8, !dbg !7633
  br label %return, !dbg !7633

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.168, i64 0, i64 0), i8** %retval, align 8, !dbg !7634
  br label %return, !dbg !7634

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i64 0, i64 0), i8** %retval, align 8, !dbg !7635
  br label %return, !dbg !7635

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0), i8** %retval, align 8, !dbg !7636
  br label %return, !dbg !7636

sw.bb14:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i8** %retval, align 8, !dbg !7637
  br label %return, !dbg !7637

sw.bb15:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i64 0, i64 0), i8** %retval, align 8, !dbg !7638
  br label %return, !dbg !7638

sw.bb16:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i64 0, i64 0), i8** %retval, align 8, !dbg !7639
  br label %return, !dbg !7639

sw.bb17:                                          ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0), i8** %retval, align 8, !dbg !7640
  br label %return, !dbg !7640

sw.bb18:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i64 0, i64 0), i8** %retval, align 8, !dbg !7641
  br label %return, !dbg !7641

sw.bb19:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8** %retval, align 8, !dbg !7642
  br label %return, !dbg !7642

sw.bb20:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8** %retval, align 8, !dbg !7643
  br label %return, !dbg !7643

sw.bb21:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.174, i64 0, i64 0), i8** %retval, align 8, !dbg !7644
  br label %return, !dbg !7644

sw.bb22:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i8** %retval, align 8, !dbg !7645
  br label %return, !dbg !7645

sw.epilog:                                        ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i8** %retval, align 8, !dbg !7646
  br label %return, !dbg !7646

return:                                           ; preds = %sw.epilog, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !7647
  ret i8* %1, !dbg !7647
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_action(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7648 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7649, metadata !DIExpression()), !dbg !7650
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7653, metadata !DIExpression()), !dbg !7654
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7655
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !7656
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7657
  %1 = load i8*, i8** %data, align 8, !dbg !7657
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !7658
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !7654
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !7659, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !7663, metadata !DIExpression()), !dbg !7664
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7665
  %4 = bitcast %struct.Object* %3 to %struct.ID*, !dbg !7666
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7667
  %6 = bitcast %struct.Object* %5 to i8*, !dbg !7667
  call void @RNA_pointer_create(%struct.ID* %4, %struct.StructRNA* @RNA_GameObjectSettings, i8* %6, %struct.PointerRNA* %settings_ptr), !dbg !7668
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7669
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %7, i32 0), !dbg !7670
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7671
  %8 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7672
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7673
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.175, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7674
  %10 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7675
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %10, i32 1), !dbg !7676
  store %struct.uiLayout* %call1, %struct.uiLayout** %sub, align 8, !dbg !7677
  %11 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !7678
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7679
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.176, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7680
  %13 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !7681
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7682
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.177, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7683
  %15 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !7684
  %call2 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %15, i32 0), !dbg !7685
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !7686
  %16 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7687
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7688
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.177, i64 0, i64 0)), !dbg !7689
  %tobool = icmp ne i32 %call3, 0, !dbg !7689
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7690

lor.rhs:                                          ; preds = %entry
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7691
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.176, i64 0, i64 0)), !dbg !7692
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7690
  br label %lor.end, !dbg !7690

lor.end:                                          ; preds = %lor.rhs, %entry
  %19 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  %lor.ext = zext i1 %19 to i32, !dbg !7690
  %conv = trunc i32 %lor.ext to i8, !dbg !7693
  call void @uiLayoutSetActive(%struct.uiLayout* %16, i8 zeroext %conv), !dbg !7694
  %20 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7695
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7696
  call void @uiItemR(%struct.uiLayout* %20, %struct.PointerRNA* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !7697
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7698
  %call6 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %22, i32 0), !dbg !7699
  store %struct.uiLayout* %call6, %struct.uiLayout** %row, align 8, !dbg !7700
  %23 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7701
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7702
  call void @uiItemR(%struct.uiLayout* %23, %struct.PointerRNA* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7703
  %25 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7704
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7705
  call void @uiItemR(%struct.uiLayout* %25, %struct.PointerRNA* %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.180, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7706
  %27 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7707
  %call7 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %27, i32 0), !dbg !7708
  store %struct.uiLayout* %call7, %struct.uiLayout** %row, align 8, !dbg !7709
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7710
  %call8 = call i32 @RNA_enum_get(%struct.PointerRNA* %28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.175, i64 0, i64 0)), !dbg !7712
  %cmp = icmp eq i32 %call8, 6, !dbg !7713
  br i1 %cmp, label %if.then, label %if.else, !dbg !7714

if.then:                                          ; preds = %lor.end
  %29 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7715
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7716
  call void @uiItemPointerR(%struct.uiLayout* %29, %struct.PointerRNA* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !7717
  br label %if.end, !dbg !7717

if.else:                                          ; preds = %lor.end
  %31 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7718
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7720
  call void @uiItemR(%struct.uiLayout* %31, %struct.PointerRNA* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.181, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7721
  %33 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7722
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7723
  call void @uiItemR(%struct.uiLayout* %33, %struct.PointerRNA* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %35 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7725
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7726
  call void @uiItemR(%struct.uiLayout* %35, %struct.PointerRNA* %36, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7727
  %37 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7728
  %call10 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %37, i32 0), !dbg !7729
  store %struct.uiLayout* %call10, %struct.uiLayout** %row, align 8, !dbg !7730
  %38 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7731
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7732
  call void @uiItemR(%struct.uiLayout* %38, %struct.PointerRNA* %39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.184, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7733
  %40 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7734
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7735
  call void @uiItemR(%struct.uiLayout* %40, %struct.PointerRNA* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7736
  %42 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7737
  %call11 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %42, i32 0), !dbg !7738
  store %struct.uiLayout* %call11, %struct.uiLayout** %row, align 8, !dbg !7739
  %43 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7740
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7741
  call void @uiItemR(%struct.uiLayout* %43, %struct.PointerRNA* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7742
  %45 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7743
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7744
  call void @uiItemR(%struct.uiLayout* %45, %struct.PointerRNA* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.187, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7745
  %47 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7746
  %48 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7747
  call void @uiItemR(%struct.uiLayout* %47, %struct.PointerRNA* %48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.188, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !7748
  %49 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7749
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7750
  call void @uiItemPointerR(%struct.uiLayout* %49, %struct.PointerRNA* %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !7751
  ret void, !dbg !7752
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_armature(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7753 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %act = alloca %struct.bActuator*, align 8
  %aa = alloca %struct.bArmatureActuator*, align 8
  %ob = alloca %struct.Object*, align 8
  %constraint = alloca %struct.bConstraint*, align 8
  %pose_ptr = alloca %struct.PointerRNA, align 8
  %pchan_ptr = alloca %struct.PointerRNA, align 8
  %bones_prop = alloca %struct.PropertyRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !7758, metadata !DIExpression()), !dbg !7759
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7760
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !7761
  %1 = load i8*, i8** %data, align 8, !dbg !7761
  %2 = bitcast i8* %1 to %struct.bActuator*, !dbg !7762
  store %struct.bActuator* %2, %struct.bActuator** %act, align 8, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.bArmatureActuator** %aa, metadata !7763, metadata !DIExpression()), !dbg !7764
  %3 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !7765
  %data1 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %3, i32 0, i32 8, !dbg !7766
  %4 = load i8*, i8** %data1, align 8, !dbg !7766
  %5 = bitcast i8* %4 to %struct.bArmatureActuator*, !dbg !7767
  store %struct.bArmatureActuator* %5, %struct.bArmatureActuator** %aa, align 8, !dbg !7764
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7768, metadata !DIExpression()), !dbg !7769
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7770
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 0, !dbg !7771
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7772
  %7 = load i8*, i8** %data2, align 8, !dbg !7772
  %8 = bitcast i8* %7 to %struct.Object*, !dbg !7773
  store %struct.Object* %8, %struct.Object** %ob, align 8, !dbg !7769
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %constraint, metadata !7774, metadata !DIExpression()), !dbg !7794
  store %struct.bConstraint* null, %struct.bConstraint** %constraint, align 8, !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %pose_ptr, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %pchan_ptr, metadata !7797, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %bones_prop, metadata !7799, metadata !DIExpression()), !dbg !7800
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7800
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7801
  %type = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !7803
  %10 = load i16, i16* %type, align 8, !dbg !7803
  %conv = sext i16 %10 to i32, !dbg !7801
  %cmp = icmp ne i32 %conv, 25, !dbg !7804
  br i1 %cmp, label %if.then, label %if.end, !dbg !7805

if.then:                                          ; preds = %entry
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7806
  call void @uiItemL(%struct.uiLayout* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.190, i64 0, i64 0), i32 0), !dbg !7808
  br label %sw.epilog, !dbg !7809

if.end:                                           ; preds = %entry
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7810
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 18, !dbg !7812
  %13 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7812
  %tobool = icmp ne %struct.bPose* %13, null, !dbg !7810
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !7813

if.then4:                                         ; preds = %if.end
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7814
  %15 = bitcast %struct.Object* %14 to %struct.ID*, !dbg !7816
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7817
  %pose5 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 18, !dbg !7818
  %17 = load %struct.bPose*, %struct.bPose** %pose5, align 8, !dbg !7818
  %18 = bitcast %struct.bPose* %17 to i8*, !dbg !7817
  call void @RNA_pointer_create(%struct.ID* %15, %struct.StructRNA* @RNA_Pose, i8* %18, %struct.PointerRNA* %pose_ptr), !dbg !7819
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)), !dbg !7820
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7821
  br label %if.end6, !dbg !7822

if.end6:                                          ; preds = %if.then4, %if.end
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7823
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7824
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7825
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7826
  %call7 = call i32 @RNA_enum_get(%struct.PointerRNA* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !7827
  switch i32 %call7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb8
    i32 3, label %sw.bb17
    i32 4, label %sw.bb39
    i32 5, label %sw.bb50
  ], !dbg !7828

sw.bb:                                            ; preds = %if.end6
  br label %sw.epilog, !dbg !7829

sw.bb8:                                           ; preds = %if.end6, %if.end6
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7831
  %pose9 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 18, !dbg !7833
  %23 = load %struct.bPose*, %struct.bPose** %pose9, align 8, !dbg !7833
  %tobool10 = icmp ne %struct.bPose* %23, null, !dbg !7831
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !7834

if.then11:                                        ; preds = %sw.bb8
  %24 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7835
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7837
  call void @uiItemPointerR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), %struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* null, i32 174), !dbg !7838
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7839
  %27 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7841
  %posechannel = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %27, i32 0, i32 0, !dbg !7842
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel, i64 0, i64 0, !dbg !7841
  %call12 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %pose_ptr, %struct.PropertyRNA* %26, i8* %arraydecay, %struct.PointerRNA* %pchan_ptr), !dbg !7843
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7843
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7844

if.then14:                                        ; preds = %if.then11
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7845
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7846
  call void @uiItemPointerR(%struct.uiLayout* %28, %struct.PointerRNA* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0), %struct.PointerRNA* %pchan_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 177), !dbg !7847
  br label %if.end15, !dbg !7847

if.end15:                                         ; preds = %if.then14, %if.then11
  br label %if.end16, !dbg !7848

if.end16:                                         ; preds = %if.end15, %sw.bb8
  br label %sw.epilog, !dbg !7849

sw.bb17:                                          ; preds = %if.end6
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7850
  %pose18 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 18, !dbg !7852
  %31 = load %struct.bPose*, %struct.bPose** %pose18, align 8, !dbg !7852
  %tobool19 = icmp ne %struct.bPose* %31, null, !dbg !7850
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !7853

if.then20:                                        ; preds = %sw.bb17
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7854
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7856
  call void @uiItemPointerR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), %struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* null, i32 174), !dbg !7857
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7858
  %35 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7860
  %posechannel21 = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %35, i32 0, i32 0, !dbg !7861
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel21, i64 0, i64 0, !dbg !7860
  %call23 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %pose_ptr, %struct.PropertyRNA* %34, i8* %arraydecay22, %struct.PointerRNA* %pchan_ptr), !dbg !7862
  %tobool24 = icmp ne i32 %call23, 0, !dbg !7862
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7863

if.then25:                                        ; preds = %if.then20
  %36 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7864
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7865
  call void @uiItemPointerR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0), %struct.PointerRNA* %pchan_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 177), !dbg !7866
  br label %if.end26, !dbg !7866

if.end26:                                         ; preds = %if.then25, %if.then20
  br label %if.end27, !dbg !7867

if.end27:                                         ; preds = %if.end26, %sw.bb17
  %38 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7868
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7869
  call void @uiItemR(%struct.uiLayout* %38, %struct.PointerRNA* %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7870
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7871
  %41 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7872
  %posechannel28 = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %41, i32 0, i32 0, !dbg !7873
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel28, i64 0, i64 0, !dbg !7872
  %42 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7874
  %constraint30 = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %42, i32 0, i32 1, !dbg !7875
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %constraint30, i64 0, i64 0, !dbg !7874
  call void @get_armature_bone_constraint(%struct.Object* %40, i8* %arraydecay29, i8* %arraydecay31, %struct.bConstraint** %constraint), !dbg !7876
  %43 = load %struct.bConstraint*, %struct.bConstraint** %constraint, align 8, !dbg !7877
  %tobool32 = icmp ne %struct.bConstraint* %43, null, !dbg !7877
  br i1 %tobool32, label %land.lhs.true, label %if.end38, !dbg !7879

land.lhs.true:                                    ; preds = %if.end27
  %44 = load %struct.bConstraint*, %struct.bConstraint** %constraint, align 8, !dbg !7880
  %type33 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %44, i32 0, i32 3, !dbg !7881
  %45 = load i16, i16* %type33, align 8, !dbg !7881
  %conv34 = sext i16 %45 to i32, !dbg !7880
  %cmp35 = icmp eq i32 %conv34, 3, !dbg !7882
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !7883

if.then37:                                        ; preds = %land.lhs.true
  %46 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7884
  %47 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7886
  call void @uiItemR(%struct.uiLayout* %46, %struct.PointerRNA* %47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.191, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7887
  br label %if.end38, !dbg !7888

if.end38:                                         ; preds = %if.then37, %land.lhs.true, %if.end27
  br label %sw.epilog, !dbg !7889

sw.bb39:                                          ; preds = %if.end6
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7890
  %pose40 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 18, !dbg !7892
  %49 = load %struct.bPose*, %struct.bPose** %pose40, align 8, !dbg !7892
  %tobool41 = icmp ne %struct.bPose* %49, null, !dbg !7890
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !7893

if.then42:                                        ; preds = %sw.bb39
  %50 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7894
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7896
  call void @uiItemPointerR(%struct.uiLayout* %50, %struct.PointerRNA* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), %struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* null, i32 174), !dbg !7897
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7898
  %53 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7900
  %posechannel43 = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %53, i32 0, i32 0, !dbg !7901
  %arraydecay44 = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel43, i64 0, i64 0, !dbg !7900
  %call45 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %pose_ptr, %struct.PropertyRNA* %52, i8* %arraydecay44, %struct.PointerRNA* %pchan_ptr), !dbg !7902
  %tobool46 = icmp ne i32 %call45, 0, !dbg !7902
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7903

if.then47:                                        ; preds = %if.then42
  %54 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7904
  %55 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7905
  call void @uiItemPointerR(%struct.uiLayout* %54, %struct.PointerRNA* %55, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0), %struct.PointerRNA* %pchan_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 177), !dbg !7906
  br label %if.end48, !dbg !7906

if.end48:                                         ; preds = %if.then47, %if.then42
  br label %if.end49, !dbg !7907

if.end49:                                         ; preds = %if.end48, %sw.bb39
  %56 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7908
  %57 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7909
  call void @uiItemR(%struct.uiLayout* %56, %struct.PointerRNA* %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.192, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7910
  br label %sw.epilog, !dbg !7911

sw.bb50:                                          ; preds = %if.end6
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7912
  %pose51 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 18, !dbg !7914
  %59 = load %struct.bPose*, %struct.bPose** %pose51, align 8, !dbg !7914
  %tobool52 = icmp ne %struct.bPose* %59, null, !dbg !7912
  br i1 %tobool52, label %if.then53, label %if.end60, !dbg !7915

if.then53:                                        ; preds = %sw.bb50
  %60 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7916
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7918
  call void @uiItemPointerR(%struct.uiLayout* %60, %struct.PointerRNA* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), %struct.PointerRNA* %pose_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* null, i32 174), !dbg !7919
  %62 = load %struct.PropertyRNA*, %struct.PropertyRNA** %bones_prop, align 8, !dbg !7920
  %63 = load %struct.bArmatureActuator*, %struct.bArmatureActuator** %aa, align 8, !dbg !7922
  %posechannel54 = getelementptr inbounds %struct.bArmatureActuator, %struct.bArmatureActuator* %63, i32 0, i32 0, !dbg !7923
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %posechannel54, i64 0, i64 0, !dbg !7922
  %call56 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %pose_ptr, %struct.PropertyRNA* %62, i8* %arraydecay55, %struct.PointerRNA* %pchan_ptr), !dbg !7924
  %tobool57 = icmp ne i32 %call56, 0, !dbg !7924
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !7925

if.then58:                                        ; preds = %if.then53
  %64 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7926
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7927
  call void @uiItemPointerR(%struct.uiLayout* %64, %struct.PointerRNA* %65, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0), %struct.PointerRNA* %pchan_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 177), !dbg !7928
  br label %if.end59, !dbg !7928

if.end59:                                         ; preds = %if.then58, %if.then53
  br label %if.end60, !dbg !7929

if.end60:                                         ; preds = %if.end59, %sw.bb50
  %66 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7930
  %67 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7931
  call void @uiItemR(%struct.uiLayout* %66, %struct.PointerRNA* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7932
  br label %sw.epilog, !dbg !7933

sw.epilog:                                        ; preds = %if.then, %if.end6, %if.end60, %if.end49, %if.end38, %if.end16, %sw.bb
  ret void, !dbg !7934
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_camera(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !7935 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7940, metadata !DIExpression()), !dbg !7941
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7942
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7943
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7944
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7945
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %2, i32 0), !dbg !7946
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !7947
  %3 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7948
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7949
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.194, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7950
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7951
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7952
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7953
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7954
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %7, i32 1), !dbg !7955
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !7956
  %8 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7957
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7958
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.195, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7959
  %10 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !7960
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7961
  call void @uiItemR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7962
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7963
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7964
  call void @uiItemR(%struct.uiLayout* %12, %struct.PointerRNA* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7965
  ret void, !dbg !7966
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_constraint(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !7967 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %main_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7968, metadata !DIExpression()), !dbg !7969
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !7974, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !7978, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %main_ptr, metadata !7982, metadata !DIExpression()), !dbg !7983
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7984
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7985
  call void @RNA_main_pointer_create(%struct.Main* %call, %struct.PointerRNA* %main_ptr), !dbg !7986
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7987
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7988
  call void @uiItemR(%struct.uiLayout* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7989
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7990
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !7991
  switch i32 %call1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb16
    i32 3, label %sw.bb20
  ], !dbg !7992

sw.bb:                                            ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7993
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7995
  call void @uiItemR(%struct.uiLayout* %4, %struct.PointerRNA* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7996
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7997
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %6, i32 1), !dbg !7998
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !7999
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8000
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8001
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8002
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8003
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8004
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.200, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8005
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8006
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8007
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8008
  br label %sw.epilog, !dbg !8009

sw.bb3:                                           ; preds = %entry
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8010
  %call4 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %13, float 0x3FE99999A0000000, i32 0), !dbg !8011
  store %struct.uiLayout* %call4, %struct.uiLayout** %split, align 8, !dbg !8012
  %14 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8013
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8014
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8015
  %16 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8016
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %16, i32 1), !dbg !8017
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !8018
  %17 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8019
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8020
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8021
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8022
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8023
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.201, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8024
  %21 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8025
  %call6 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %21, i32 0), !dbg !8026
  store %struct.uiLayout* %call6, %struct.uiLayout** %row, align 8, !dbg !8027
  %22 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8028
  %call7 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %22, i32 1), !dbg !8029
  store %struct.uiLayout* %call7, %struct.uiLayout** %col, align 8, !dbg !8030
  %23 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8031
  call void @uiItemL(%struct.uiLayout* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i64 0, i64 0), i32 0), !dbg !8032
  %24 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8033
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8034
  call void @uiItemR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8035
  %26 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8036
  %call8 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %26, i32 1), !dbg !8037
  store %struct.uiLayout* %call8, %struct.uiLayout** %col, align 8, !dbg !8038
  %27 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8039
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8040
  call void @uiItemR(%struct.uiLayout* %27, %struct.PointerRNA* %28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.203, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8041
  %29 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8042
  %call9 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %29, i32 0), !dbg !8043
  store %struct.uiLayout* %call9, %struct.uiLayout** %sub, align 8, !dbg !8044
  %30 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8045
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8046
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.203, i64 0, i64 0)), !dbg !8047
  %cmp = icmp eq i32 %call10, 1, !dbg !8048
  %conv = zext i1 %cmp to i32, !dbg !8048
  %conv11 = trunc i32 %conv to i8, !dbg !8047
  call void @uiLayoutSetActive(%struct.uiLayout* %30, i8 zeroext %conv11), !dbg !8049
  %32 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8050
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8051
  call void @uiItemR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8052
  %34 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8053
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8054
  call void @uiItemR(%struct.uiLayout* %34, %struct.PointerRNA* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8055
  %36 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8056
  %call12 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %36, float 0x3FC3333340000000, i32 0), !dbg !8057
  store %struct.uiLayout* %call12, %struct.uiLayout** %split, align 8, !dbg !8058
  %37 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8059
  %38 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8060
  call void @uiItemR(%struct.uiLayout* %37, %struct.PointerRNA* %38, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8061
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8062
  %call13 = call i32 @RNA_boolean_get(%struct.PointerRNA* %39, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0)), !dbg !8064
  %tobool = icmp ne i32 %call13, 0, !dbg !8064
  br i1 %tobool, label %if.then, label %if.else, !dbg !8065

if.then:                                          ; preds = %sw.bb3
  %40 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8066
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8067
  call void @uiItemPointerR(%struct.uiLayout* %40, %struct.PointerRNA* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i8* null, i32 165), !dbg !8068
  br label %if.end, !dbg !8068

if.else:                                          ; preds = %sw.bb3
  %42 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8069
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8070
  call void @uiItemR(%struct.uiLayout* %42, %struct.PointerRNA* %43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8071
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %44 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8072
  %call14 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %44, float 0x3FC3333340000000, i32 0), !dbg !8073
  store %struct.uiLayout* %call14, %struct.uiLayout** %split, align 8, !dbg !8074
  %45 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8075
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8076
  call void @uiItemR(%struct.uiLayout* %45, %struct.PointerRNA* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8077
  %47 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8078
  %call15 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %47, i32 1), !dbg !8079
  store %struct.uiLayout* %call15, %struct.uiLayout** %row, align 8, !dbg !8080
  %48 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8081
  %49 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8082
  call void @uiItemR(%struct.uiLayout* %48, %struct.PointerRNA* %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8083
  %50 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8084
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8085
  call void @uiItemR(%struct.uiLayout* %50, %struct.PointerRNA* %51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.207, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8086
  br label %sw.epilog, !dbg !8087

sw.bb16:                                          ; preds = %entry
  %52 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8088
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8089
  call void @uiItemR(%struct.uiLayout* %52, %struct.PointerRNA* %53, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.208, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8090
  %54 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8091
  %call17 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %54, i32 1), !dbg !8092
  store %struct.uiLayout* %call17, %struct.uiLayout** %row, align 8, !dbg !8093
  %55 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8094
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8095
  call void @uiItemR(%struct.uiLayout* %55, %struct.PointerRNA* %56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8096
  %57 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8097
  %58 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8098
  call void @uiItemR(%struct.uiLayout* %57, %struct.PointerRNA* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8099
  %59 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8100
  %call18 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %59, i32 0), !dbg !8101
  store %struct.uiLayout* %call18, %struct.uiLayout** %row, align 8, !dbg !8102
  %60 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8103
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8104
  call void @uiItemR(%struct.uiLayout* %60, %struct.PointerRNA* %61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8105
  %62 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8106
  %call19 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %62, i32 1), !dbg !8107
  store %struct.uiLayout* %call19, %struct.uiLayout** %row, align 8, !dbg !8108
  %63 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8109
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8110
  call void @uiItemR(%struct.uiLayout* %63, %struct.PointerRNA* %64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.210, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8111
  %65 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8112
  %66 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8113
  call void @uiItemR(%struct.uiLayout* %65, %struct.PointerRNA* %66, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8114
  br label %sw.epilog, !dbg !8115

sw.bb20:                                          ; preds = %entry
  %67 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8116
  %call21 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %67, float 7.500000e-01, i32 0), !dbg !8117
  store %struct.uiLayout* %call21, %struct.uiLayout** %split, align 8, !dbg !8118
  %68 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8119
  %call22 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %68, i32 0), !dbg !8120
  store %struct.uiLayout* %call22, %struct.uiLayout** %row, align 8, !dbg !8121
  %69 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8122
  %70 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8123
  call void @uiItemR(%struct.uiLayout* %69, %struct.PointerRNA* %70, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8124
  %71 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8125
  %72 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8126
  call void @uiItemR(%struct.uiLayout* %71, %struct.PointerRNA* %72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.213, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8127
  %73 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8128
  %74 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8129
  call void @uiItemR(%struct.uiLayout* %73, %struct.PointerRNA* %74, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.214, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8130
  %75 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8131
  %call23 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %75, i32 0), !dbg !8132
  store %struct.uiLayout* %call23, %struct.uiLayout** %row, align 8, !dbg !8133
  %76 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8134
  %77 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8135
  call void @uiItemR(%struct.uiLayout* %76, %struct.PointerRNA* %77, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8136
  %78 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8137
  %call24 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %78, float 0x3FECCCCCC0000000, i32 0), !dbg !8138
  store %struct.uiLayout* %call24, %struct.uiLayout** %split, align 8, !dbg !8139
  %79 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8140
  %80 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8141
  call void @uiItemR(%struct.uiLayout* %79, %struct.PointerRNA* %80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8142
  %81 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8143
  %82 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8144
  call void @uiItemR(%struct.uiLayout* %81, %struct.PointerRNA* %82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8145
  %83 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8146
  %call25 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %83, float 0x3FC3333340000000, i32 0), !dbg !8147
  store %struct.uiLayout* %call25, %struct.uiLayout** %split, align 8, !dbg !8148
  %84 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8149
  %85 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8150
  call void @uiItemR(%struct.uiLayout* %84, %struct.PointerRNA* %85, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8151
  %86 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8152
  %call26 = call i32 @RNA_boolean_get(%struct.PointerRNA* %86, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0)), !dbg !8154
  %tobool27 = icmp ne i32 %call26, 0, !dbg !8154
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !8155

if.then28:                                        ; preds = %sw.bb20
  %87 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8156
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8157
  call void @uiItemPointerR(%struct.uiLayout* %87, %struct.PointerRNA* %88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i8* null, i32 165), !dbg !8158
  br label %if.end30, !dbg !8158

if.else29:                                        ; preds = %sw.bb20
  %89 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8159
  %90 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8160
  call void @uiItemR(%struct.uiLayout* %89, %struct.PointerRNA* %90, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8161
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then28
  %91 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8162
  %call31 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %91, float 0x3FC3333340000000, i32 0), !dbg !8163
  store %struct.uiLayout* %call31, %struct.uiLayout** %split, align 8, !dbg !8164
  %92 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8165
  %93 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8166
  call void @uiItemR(%struct.uiLayout* %92, %struct.PointerRNA* %93, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8167
  %94 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8168
  %call32 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %94, i32 0), !dbg !8169
  store %struct.uiLayout* %call32, %struct.uiLayout** %row, align 8, !dbg !8170
  %95 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8171
  %96 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8172
  call void @uiItemR(%struct.uiLayout* %95, %struct.PointerRNA* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8173
  %97 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8174
  %98 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8175
  call void @uiItemR(%struct.uiLayout* %97, %struct.PointerRNA* %98, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.207, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8176
  br label %sw.epilog, !dbg !8177

sw.epilog:                                        ; preds = %entry, %if.end30, %sw.bb16, %if.end, %sw.bb
  ret void, !dbg !8178
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_edit_object(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8179 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8184, metadata !DIExpression()), !dbg !8185
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8186
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !8187
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8188
  %1 = load i8*, i8** %data, align 8, !dbg !8188
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !8189
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !8185
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !8192, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !8194, metadata !DIExpression()), !dbg !8195
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8196
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8197
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8198
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8199
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8200
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
    i32 3, label %sw.bb11
    i32 4, label %sw.bb16
  ], !dbg !8201

sw.bb:                                            ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8202
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %6, i32 0), !dbg !8204
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !8205
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8206
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8207
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8208
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8209
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8210
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8211
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8212
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %11, float 0x3FECCCCCC0000000, i32 0), !dbg !8213
  store %struct.uiLayout* %call2, %struct.uiLayout** %split, align 8, !dbg !8214
  %12 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8215
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 0), !dbg !8216
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !8217
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8218
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8219
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8220
  %15 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8221
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8222
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.219, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8223
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8224
  %call4 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %17, float 0x3FECCCCCC0000000, i32 0), !dbg !8225
  store %struct.uiLayout* %call4, %struct.uiLayout** %split, align 8, !dbg !8226
  %18 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8227
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %18, i32 0), !dbg !8228
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !8229
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8230
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8231
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.220, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8232
  %21 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8233
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8234
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.221, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8235
  br label %sw.epilog, !dbg !8236

sw.bb6:                                           ; preds = %entry
  br label %sw.epilog, !dbg !8237

sw.bb7:                                           ; preds = %entry
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8238
  %type = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 3, !dbg !8240
  %24 = load i16, i16* %type, align 8, !dbg !8240
  %conv = sext i16 %24 to i32, !dbg !8238
  %cmp = icmp ne i32 %conv, 1, !dbg !8241
  br i1 %cmp, label %if.then, label %if.end, !dbg !8242

if.then:                                          ; preds = %sw.bb7
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8243
  call void @uiItemL(%struct.uiLayout* %25, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.222, i64 0, i64 0), i32 0), !dbg !8245
  br label %sw.epilog, !dbg !8246

if.end:                                           ; preds = %sw.bb7
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8247
  %call9 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %26, float 0x3FE3333340000000, i32 0), !dbg !8248
  store %struct.uiLayout* %call9, %struct.uiLayout** %split, align 8, !dbg !8249
  %27 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8250
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8251
  call void @uiItemR(%struct.uiLayout* %27, %struct.PointerRNA* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8252
  %29 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8253
  %call10 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %29, i32 0), !dbg !8254
  store %struct.uiLayout* %call10, %struct.uiLayout** %row, align 8, !dbg !8255
  %30 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8256
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8257
  call void @uiItemR(%struct.uiLayout* %30, %struct.PointerRNA* %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.224, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8258
  %32 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8259
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8260
  call void @uiItemR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.225, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8261
  br label %sw.epilog, !dbg !8262

sw.bb11:                                          ; preds = %entry
  %34 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8263
  %call12 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %34, float 5.000000e-01, i32 0), !dbg !8264
  store %struct.uiLayout* %call12, %struct.uiLayout** %split, align 8, !dbg !8265
  %35 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8266
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8267
  call void @uiItemR(%struct.uiLayout* %35, %struct.PointerRNA* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8268
  %37 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8269
  %call13 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %37, float 0x3FE6666660000000, i32 0), !dbg !8270
  store %struct.uiLayout* %call13, %struct.uiLayout** %sub, align 8, !dbg !8271
  %38 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8272
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8273
  call void @uiItemR(%struct.uiLayout* %38, %struct.PointerRNA* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8274
  %40 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8275
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8276
  call void @uiItemR(%struct.uiLayout* %40, %struct.PointerRNA* %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.227, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8277
  %42 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8278
  %call14 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %42, i32 0), !dbg !8279
  store %struct.uiLayout* %call14, %struct.uiLayout** %row, align 8, !dbg !8280
  %43 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8281
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8282
  call void @uiItemR(%struct.uiLayout* %43, %struct.PointerRNA* %44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8283
  %45 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8284
  %call15 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %45, i32 0), !dbg !8285
  store %struct.uiLayout* %call15, %struct.uiLayout** %row, align 8, !dbg !8286
  %46 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8287
  %47 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8288
  call void @uiItemR(%struct.uiLayout* %46, %struct.PointerRNA* %47, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.229, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8289
  br label %sw.epilog, !dbg !8290

sw.bb16:                                          ; preds = %entry
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8291
  %type17 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 3, !dbg !8293
  %49 = load i16, i16* %type17, align 8, !dbg !8293
  %conv18 = sext i16 %49 to i32, !dbg !8291
  %cmp19 = icmp ne i32 %conv18, 1, !dbg !8294
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8295

if.then21:                                        ; preds = %sw.bb16
  %50 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8296
  call void @uiItemL(%struct.uiLayout* %50, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.222, i64 0, i64 0), i32 0), !dbg !8298
  br label %sw.epilog, !dbg !8299

if.end22:                                         ; preds = %sw.bb16
  %51 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8300
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8301
  call void @uiItemR(%struct.uiLayout* %51, %struct.PointerRNA* %52, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.230, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8302
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8303
  %call23 = call i32 @RNA_enum_get(%struct.PointerRNA* %53, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.230, i64 0, i64 0)), !dbg !8305
  %cmp24 = icmp eq i32 %call23, 4, !dbg !8306
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !8307

if.then26:                                        ; preds = %if.end22
  %54 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8308
  %55 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8309
  call void @uiItemR(%struct.uiLayout* %54, %struct.PointerRNA* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.231, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8310
  br label %if.end27, !dbg !8310

if.end27:                                         ; preds = %if.then26, %if.end22
  br label %sw.epilog, !dbg !8311

sw.epilog:                                        ; preds = %entry, %if.end27, %if.then21, %sw.bb11, %if.end, %if.then, %sw.bb6, %sw.bb
  ret void, !dbg !8312
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_filter_2d(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8313 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8318, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !8320, metadata !DIExpression()), !dbg !8321
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8322
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8323
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8324
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8325
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8326
  switch i32 %call, label %sw.default [
    i32 12, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !8327

sw.bb:                                            ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8328
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8330
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.232, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8331
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8332
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8333
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.233, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8334
  br label %sw.epilog, !dbg !8335

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8336
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %7, float 7.500000e-01, i32 1), !dbg !8337
  store %struct.uiLayout* %call2, %struct.uiLayout** %split, align 8, !dbg !8338
  %8 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8339
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %8, i32 0), !dbg !8340
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !8341
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8342
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8343
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i64 0, i64 0)), !dbg !8344
  %cmp = icmp eq i32 %call4, 1, !dbg !8345
  %conv = zext i1 %cmp to i32, !dbg !8345
  %conv5 = trunc i32 %conv to i8, !dbg !8344
  call void @uiLayoutSetActive(%struct.uiLayout* %9, i8 zeroext %conv5), !dbg !8346
  %11 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8347
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8348
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.235, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8349
  %13 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8350
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8351
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8352
  br label %sw.epilog, !dbg !8353

sw.default:                                       ; preds = %entry
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8354
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8355
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.232, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8356
  br label %sw.epilog, !dbg !8357

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !8358
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_game(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8359 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8364
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8365
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8366
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8367
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8369
  %cmp = icmp eq i32 %call, 0, !dbg !8370
  br i1 %cmp, label %if.then, label %if.end, !dbg !8371

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8372
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8373
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.236, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8374
  br label %if.end, !dbg !8374

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8375
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_message(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !8376 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %main_ptr = alloca %struct.PointerRNA, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %main_ptr, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !8387, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8389, metadata !DIExpression()), !dbg !8390
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8391
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !8392
  call void @RNA_main_pointer_create(%struct.Main* %call, %struct.PointerRNA* %main_ptr), !dbg !8393
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8394
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 0, !dbg !8395
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8396
  %2 = load i8*, i8** %data, align 8, !dbg !8396
  %3 = bitcast i8* %2 to %struct.Object*, !dbg !8397
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !8398
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8399
  %5 = bitcast %struct.Object* %4 to %struct.ID*, !dbg !8400
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8401
  %7 = bitcast %struct.Object* %6 to i8*, !dbg !8401
  call void @RNA_pointer_create(%struct.ID* %5, %struct.StructRNA* @RNA_GameObjectSettings, i8* %7, %struct.PointerRNA* %settings_ptr), !dbg !8402
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8403
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8404
  call void @uiItemPointerR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.237, i64 0, i64 0), %struct.PointerRNA* %main_ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i64 0, i64 0), i8* null, i32 159), !dbg !8405
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8406
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8407
  call void @uiItemR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8408
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8409
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 1), !dbg !8410
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !8411
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8412
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8413
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8414
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8415
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i64 0, i64 0)), !dbg !8417
  %cmp = icmp eq i32 %call2, 0, !dbg !8418
  br i1 %cmp, label %if.then, label %if.else, !dbg !8419

if.then:                                          ; preds = %entry
  %16 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8420
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8421
  call void @uiItemR(%struct.uiLayout* %16, %struct.PointerRNA* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.240, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8422
  br label %if.end, !dbg !8422

if.else:                                          ; preds = %entry
  %18 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8423
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8424
  call void @uiItemPointerR(%struct.uiLayout* %18, %struct.PointerRNA* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8425
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8426
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_motion(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8427 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %split = alloca %struct.uiLayout*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  %physics_type = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8432, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !8434, metadata !DIExpression()), !dbg !8435
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !8436, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %physics_type, metadata !8444, metadata !DIExpression()), !dbg !8445
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8446
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !8447
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8448
  %1 = load i8*, i8** %data, align 8, !dbg !8448
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !8449
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !8450
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8451
  %4 = bitcast %struct.Object* %3 to %struct.ID*, !dbg !8452
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8453
  %6 = bitcast %struct.Object* %5 to i8*, !dbg !8453
  call void @RNA_pointer_create(%struct.ID* %4, %struct.StructRNA* @RNA_GameObjectSettings, i8* %6, %struct.PointerRNA* %settings_ptr), !dbg !8454
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.242, i64 0, i64 0)), !dbg !8455
  store i32 %call, i32* %physics_type, align 4, !dbg !8456
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8457
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8458
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8459
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8460
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8461
  switch i32 %call1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb18
    i32 2, label %sw.bb40
  ], !dbg !8462

sw.bb:                                            ; preds = %entry
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8463
  %call2 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %10, float 0x3FECCCCCC0000000, i32 0), !dbg !8465
  store %struct.uiLayout* %call2, %struct.uiLayout** %split, align 8, !dbg !8466
  %11 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8467
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %11, i32 0), !dbg !8468
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !8469
  %12 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8470
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8471
  call void @uiItemR(%struct.uiLayout* %12, %struct.PointerRNA* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.243, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8472
  %14 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8473
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8474
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.244, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8475
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8476
  %call4 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %16, float 0x3FECCCCCC0000000, i32 0), !dbg !8477
  store %struct.uiLayout* %call4, %struct.uiLayout** %split, align 8, !dbg !8478
  %17 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8479
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %17, i32 0), !dbg !8480
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !8481
  %18 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8482
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8483
  call void @uiItemR(%struct.uiLayout* %18, %struct.PointerRNA* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.245, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8484
  %20 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8485
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8486
  call void @uiItemR(%struct.uiLayout* %20, %struct.PointerRNA* %21, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.246, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8487
  %22 = load i32, i32* %physics_type, align 4, !dbg !8488
  %cmp = icmp eq i32 %22, 2, !dbg !8488
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8488

lor.lhs.false:                                    ; preds = %sw.bb
  %23 = load i32, i32* %physics_type, align 4, !dbg !8488
  %cmp6 = icmp eq i32 %23, 3, !dbg !8488
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !8488

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %24 = load i32, i32* %physics_type, align 4, !dbg !8488
  %cmp8 = icmp eq i32 %24, 4, !dbg !8488
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8490

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %sw.bb
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8491
  call void @uiItemL(%struct.uiLayout* %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.247, i64 0, i64 0), i32 0), !dbg !8493
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8494
  %call9 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %26, float 0x3FECCCCCC0000000, i32 0), !dbg !8495
  store %struct.uiLayout* %call9, %struct.uiLayout** %split, align 8, !dbg !8496
  %27 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8497
  %call10 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %27, i32 0), !dbg !8498
  store %struct.uiLayout* %call10, %struct.uiLayout** %row, align 8, !dbg !8499
  %28 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8500
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8501
  call void @uiItemR(%struct.uiLayout* %28, %struct.PointerRNA* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8502
  %30 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8503
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8504
  call void @uiItemR(%struct.uiLayout* %30, %struct.PointerRNA* %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.249, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8505
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8506
  %call11 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %32, float 0x3FECCCCCC0000000, i32 0), !dbg !8507
  store %struct.uiLayout* %call11, %struct.uiLayout** %split, align 8, !dbg !8508
  %33 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8509
  %call12 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %33, i32 0), !dbg !8510
  store %struct.uiLayout* %call12, %struct.uiLayout** %row, align 8, !dbg !8511
  %34 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8512
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8513
  call void @uiItemR(%struct.uiLayout* %34, %struct.PointerRNA* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8514
  %36 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8515
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8516
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.251, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8517
  %38 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8518
  %call13 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %38, float 0x3FECCCCCC0000000, i32 0), !dbg !8519
  store %struct.uiLayout* %call13, %struct.uiLayout** %split, align 8, !dbg !8520
  %39 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8521
  %call14 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %39, i32 0), !dbg !8522
  store %struct.uiLayout* %call14, %struct.uiLayout** %row, align 8, !dbg !8523
  %40 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8524
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8525
  call void @uiItemR(%struct.uiLayout* %40, %struct.PointerRNA* %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8526
  %42 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8527
  %call15 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %42, i32 1), !dbg !8528
  store %struct.uiLayout* %call15, %struct.uiLayout** %row, align 8, !dbg !8529
  %43 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8530
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8531
  call void @uiItemR(%struct.uiLayout* %43, %struct.PointerRNA* %44, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.219, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8532
  %45 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8533
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8534
  call void @uiItemR(%struct.uiLayout* %45, %struct.PointerRNA* %46, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.252, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8535
  %47 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8536
  %call16 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %47, float 0x3FECCCCCC0000000, i32 0), !dbg !8537
  store %struct.uiLayout* %call16, %struct.uiLayout** %split, align 8, !dbg !8538
  %48 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8539
  %call17 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %48, i32 0), !dbg !8540
  store %struct.uiLayout* %call17, %struct.uiLayout** %row, align 8, !dbg !8541
  %49 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8542
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8543
  call void @uiItemR(%struct.uiLayout* %49, %struct.PointerRNA* %50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.220, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8544
  %51 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8545
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8546
  call void @uiItemR(%struct.uiLayout* %51, %struct.PointerRNA* %52, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.221, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8547
  %53 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8548
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8549
  call void @uiItemR(%struct.uiLayout* %53, %struct.PointerRNA* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8550
  br label %if.end, !dbg !8551

if.end:                                           ; preds = %if.then, %lor.lhs.false7
  br label %sw.epilog, !dbg !8552

sw.bb18:                                          ; preds = %entry
  %55 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8553
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8554
  call void @uiItemR(%struct.uiLayout* %55, %struct.PointerRNA* %56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.253, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8555
  %57 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8556
  %call19 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %57, float 0x3FECCCCCC0000000, i32 0), !dbg !8557
  store %struct.uiLayout* %call19, %struct.uiLayout** %split, align 8, !dbg !8558
  %58 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8559
  %call20 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %58, i32 0), !dbg !8560
  store %struct.uiLayout* %call20, %struct.uiLayout** %row, align 8, !dbg !8561
  %59 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8562
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8563
  call void @uiItemR(%struct.uiLayout* %59, %struct.PointerRNA* %60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8564
  %61 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8565
  %62 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8566
  call void @uiItemR(%struct.uiLayout* %61, %struct.PointerRNA* %62, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.219, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8567
  %63 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8568
  %call21 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %63, i32 0), !dbg !8569
  store %struct.uiLayout* %call21, %struct.uiLayout** %row, align 8, !dbg !8570
  %64 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8571
  %call22 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %64, i32 0), !dbg !8572
  store %struct.uiLayout* %call22, %struct.uiLayout** %col, align 8, !dbg !8573
  %65 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8574
  %66 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8575
  call void @uiItemR(%struct.uiLayout* %65, %struct.PointerRNA* %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.254, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8576
  %67 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8577
  %call23 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %67, i32 1), !dbg !8578
  store %struct.uiLayout* %call23, %struct.uiLayout** %sub, align 8, !dbg !8579
  %68 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8580
  %69 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8581
  %call24 = call i32 @RNA_boolean_get(%struct.PointerRNA* %69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.254, i64 0, i64 0)), !dbg !8582
  %cmp25 = icmp eq i32 %call24, 1, !dbg !8583
  %conv = zext i1 %cmp25 to i32, !dbg !8583
  %conv26 = trunc i32 %conv to i8, !dbg !8582
  call void @uiLayoutSetActive(%struct.uiLayout* %68, i8 zeroext %conv26), !dbg !8584
  %70 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8585
  %71 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8586
  call void @uiItemR(%struct.uiLayout* %70, %struct.PointerRNA* %71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8587
  %72 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8588
  %73 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8589
  call void @uiItemR(%struct.uiLayout* %72, %struct.PointerRNA* %73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.256, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8590
  %74 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8591
  %call27 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %74, i32 0), !dbg !8592
  store %struct.uiLayout* %call27, %struct.uiLayout** %col, align 8, !dbg !8593
  %75 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8594
  %76 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8595
  call void @uiItemR(%struct.uiLayout* %75, %struct.PointerRNA* %76, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.257, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8596
  %77 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8597
  %call28 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %77, i32 1), !dbg !8598
  store %struct.uiLayout* %call28, %struct.uiLayout** %sub, align 8, !dbg !8599
  %78 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8600
  %79 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8601
  %call29 = call i32 @RNA_boolean_get(%struct.PointerRNA* %79, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.257, i64 0, i64 0)), !dbg !8602
  %cmp30 = icmp eq i32 %call29, 1, !dbg !8603
  %conv31 = zext i1 %cmp30 to i32, !dbg !8603
  %conv32 = trunc i32 %conv31 to i8, !dbg !8602
  call void @uiLayoutSetActive(%struct.uiLayout* %78, i8 zeroext %conv32), !dbg !8604
  %80 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8605
  %81 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8606
  call void @uiItemR(%struct.uiLayout* %80, %struct.PointerRNA* %81, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.258, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8607
  %82 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8608
  %83 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8609
  call void @uiItemR(%struct.uiLayout* %82, %struct.PointerRNA* %83, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.259, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8610
  %84 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8611
  %call33 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %84, i32 0), !dbg !8612
  store %struct.uiLayout* %call33, %struct.uiLayout** %col, align 8, !dbg !8613
  %85 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8614
  %86 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8615
  call void @uiItemR(%struct.uiLayout* %85, %struct.PointerRNA* %86, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.260, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8616
  %87 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8617
  %call34 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %87, i32 1), !dbg !8618
  store %struct.uiLayout* %call34, %struct.uiLayout** %sub, align 8, !dbg !8619
  %88 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8620
  %89 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8621
  %call35 = call i32 @RNA_boolean_get(%struct.PointerRNA* %89, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.260, i64 0, i64 0)), !dbg !8622
  %cmp36 = icmp eq i32 %call35, 1, !dbg !8623
  %conv37 = zext i1 %cmp36 to i32, !dbg !8623
  %conv38 = trunc i32 %conv37 to i8, !dbg !8622
  call void @uiLayoutSetActive(%struct.uiLayout* %88, i8 zeroext %conv38), !dbg !8624
  %90 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8625
  %91 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8626
  call void @uiItemR(%struct.uiLayout* %90, %struct.PointerRNA* %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.261, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8627
  %92 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8628
  %93 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8629
  call void @uiItemR(%struct.uiLayout* %92, %struct.PointerRNA* %93, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.262, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8630
  %94 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8631
  %call39 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %94, i32 1), !dbg !8632
  store %struct.uiLayout* %call39, %struct.uiLayout** %col, align 8, !dbg !8633
  %95 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8634
  %96 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8635
  call void @uiItemR(%struct.uiLayout* %95, %struct.PointerRNA* %96, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.263, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8636
  %97 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8637
  %98 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8638
  call void @uiItemR(%struct.uiLayout* %97, %struct.PointerRNA* %98, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.264, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8639
  %99 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !8640
  %100 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8641
  call void @uiItemR(%struct.uiLayout* %99, %struct.PointerRNA* %100, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.265, i64 0, i64 0), i32 4, i8* null, i32 0), !dbg !8642
  br label %sw.epilog, !dbg !8643

sw.bb40:                                          ; preds = %entry
  %101 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8644
  %call41 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %101, float 0x3FECCCCCC0000000, i32 0), !dbg !8645
  store %struct.uiLayout* %call41, %struct.uiLayout** %split, align 8, !dbg !8646
  %102 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8647
  %call42 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %102, i32 0), !dbg !8648
  store %struct.uiLayout* %call42, %struct.uiLayout** %row, align 8, !dbg !8649
  %103 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8650
  %104 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8651
  call void @uiItemR(%struct.uiLayout* %103, %struct.PointerRNA* %104, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.243, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8652
  %105 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8653
  %call43 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %105, i32 1), !dbg !8654
  store %struct.uiLayout* %call43, %struct.uiLayout** %row, align 8, !dbg !8655
  %106 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8656
  %107 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8657
  call void @uiItemR(%struct.uiLayout* %106, %struct.PointerRNA* %107, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.244, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8658
  %108 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8659
  %109 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8660
  call void @uiItemR(%struct.uiLayout* %108, %struct.PointerRNA* %109, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.266, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8661
  %110 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8662
  %call44 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %110, float 0x3FECCCCCC0000000, i32 0), !dbg !8663
  store %struct.uiLayout* %call44, %struct.uiLayout** %split, align 8, !dbg !8664
  %111 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8665
  %call45 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %111, i32 0), !dbg !8666
  store %struct.uiLayout* %call45, %struct.uiLayout** %row, align 8, !dbg !8667
  %112 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8668
  %113 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8669
  call void @uiItemR(%struct.uiLayout* %112, %struct.PointerRNA* %113, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.245, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8670
  %114 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8671
  %115 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8672
  call void @uiItemR(%struct.uiLayout* %114, %struct.PointerRNA* %115, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.246, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8673
  %116 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8674
  %call46 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %116, float 0x3FECCCCCC0000000, i32 0), !dbg !8675
  store %struct.uiLayout* %call46, %struct.uiLayout** %split, align 8, !dbg !8676
  %117 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8677
  %call47 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %117, i32 0), !dbg !8678
  store %struct.uiLayout* %call47, %struct.uiLayout** %row, align 8, !dbg !8679
  %118 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8680
  %call48 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %118, float 0x3FE6666660000000, i32 0), !dbg !8681
  store %struct.uiLayout* %call48, %struct.uiLayout** %split, align 8, !dbg !8682
  %119 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8683
  call void @uiItemL(%struct.uiLayout* %119, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8684
  %120 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !8685
  %121 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8686
  call void @uiItemR(%struct.uiLayout* %120, %struct.PointerRNA* %121, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.267, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8687
  br label %sw.epilog, !dbg !8688

sw.epilog:                                        ; preds = %entry, %sw.bb40, %sw.bb18, %if.end
  ret void, !dbg !8689
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_parent(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8690 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8693, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8695, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !8697, metadata !DIExpression()), !dbg !8698
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8699
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8700
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8701
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8702
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8704
  %cmp = icmp eq i32 %call, 0, !dbg !8705
  br i1 %cmp, label %if.then, label %if.end, !dbg !8706

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8707
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8709
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8710
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8711
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %5, i32 0), !dbg !8712
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !8713
  %6 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8714
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8715
  call void @uiItemR(%struct.uiLayout* %6, %struct.PointerRNA* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.268, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8716
  %8 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8717
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %8, i32 0), !dbg !8718
  store %struct.uiLayout* %call2, %struct.uiLayout** %sub, align 8, !dbg !8719
  %9 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8720
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8721
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.268, i64 0, i64 0)), !dbg !8722
  %cmp4 = icmp eq i32 %call3, 1, !dbg !8723
  %conv = zext i1 %cmp4 to i32, !dbg !8723
  %conv5 = trunc i32 %conv to i8, !dbg !8722
  call void @uiLayoutSetActive(%struct.uiLayout* %9, i8 zeroext %conv5), !dbg !8724
  %11 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8725
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8726
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8727
  br label %if.end, !dbg !8728

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8729
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_property(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8730 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %act = alloca %struct.bActuator*, align 8
  %pa = alloca %struct.bPropertyActuator*, align 8
  %ob_from = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %obj_settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8733, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8735, metadata !DIExpression()), !dbg !8736
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8737
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !8738
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8739
  %1 = load i8*, i8** %data, align 8, !dbg !8739
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !8740
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !8736
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !8741, metadata !DIExpression()), !dbg !8742
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8743
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !8744
  %4 = load i8*, i8** %data1, align 8, !dbg !8744
  %5 = bitcast i8* %4 to %struct.bActuator*, !dbg !8745
  store %struct.bActuator* %5, %struct.bActuator** %act, align 8, !dbg !8742
  call void @llvm.dbg.declare(metadata %struct.bPropertyActuator** %pa, metadata !8746, metadata !DIExpression()), !dbg !8747
  %6 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !8748
  %data2 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %6, i32 0, i32 8, !dbg !8749
  %7 = load i8*, i8** %data2, align 8, !dbg !8749
  %8 = bitcast i8* %7 to %struct.bPropertyActuator*, !dbg !8750
  store %struct.bPropertyActuator* %8, %struct.bPropertyActuator** %pa, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_from, metadata !8751, metadata !DIExpression()), !dbg !8752
  %9 = load %struct.bPropertyActuator*, %struct.bPropertyActuator** %pa, align 8, !dbg !8753
  %ob3 = getelementptr inbounds %struct.bPropertyActuator, %struct.bPropertyActuator* %9, i32 0, i32 4, !dbg !8754
  %10 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !8754
  store %struct.Object* %10, %struct.Object** %ob_from, align 8, !dbg !8752
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !8755, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %obj_settings_ptr, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8759, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !8761, metadata !DIExpression()), !dbg !8762
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8763
  %12 = bitcast %struct.Object* %11 to %struct.ID*, !dbg !8764
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8765
  %14 = bitcast %struct.Object* %13 to i8*, !dbg !8765
  call void @RNA_pointer_create(%struct.ID* %12, %struct.StructRNA* @RNA_GameObjectSettings, i8* %14, %struct.PointerRNA* %settings_ptr), !dbg !8766
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8767
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8768
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8769
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8770
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8771
  call void @uiItemPointerR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !8772
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8773
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8774
  switch i32 %call, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb4
    i32 0, label %sw.bb5
    i32 2, label %sw.bb6
  ], !dbg !8775

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !8776

sw.bb4:                                           ; preds = %entry
  %20 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8778
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8779
  call void @uiItemR(%struct.uiLayout* %20, %struct.PointerRNA* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8780
  br label %sw.epilog, !dbg !8781

sw.bb5:                                           ; preds = %entry
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8782
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8783
  call void @uiItemR(%struct.uiLayout* %22, %struct.PointerRNA* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8784
  br label %sw.epilog, !dbg !8785

sw.bb6:                                           ; preds = %entry
  %24 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8786
  %call7 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %24, i32 0), !dbg !8787
  store %struct.uiLayout* %call7, %struct.uiLayout** %row, align 8, !dbg !8788
  %25 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8789
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8790
  call void @uiItemR(%struct.uiLayout* %25, %struct.PointerRNA* %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8791
  %27 = load %struct.Object*, %struct.Object** %ob_from, align 8, !dbg !8792
  %tobool = icmp ne %struct.Object* %27, null, !dbg !8792
  br i1 %tobool, label %if.then, label %if.else, !dbg !8794

if.then:                                          ; preds = %sw.bb6
  %28 = load %struct.Object*, %struct.Object** %ob_from, align 8, !dbg !8795
  %29 = bitcast %struct.Object* %28 to %struct.ID*, !dbg !8797
  %30 = load %struct.Object*, %struct.Object** %ob_from, align 8, !dbg !8798
  %31 = bitcast %struct.Object* %30 to i8*, !dbg !8798
  call void @RNA_pointer_create(%struct.ID* %29, %struct.StructRNA* @RNA_GameObjectSettings, i8* %31, %struct.PointerRNA* %obj_settings_ptr), !dbg !8799
  %32 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8800
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8801
  call void @uiItemPointerR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.270, i64 0, i64 0), %struct.PointerRNA* %obj_settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !8802
  br label %if.end, !dbg !8803

if.else:                                          ; preds = %sw.bb6
  %34 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8804
  %call8 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %34, i32 0), !dbg !8806
  store %struct.uiLayout* %call8, %struct.uiLayout** %sub, align 8, !dbg !8807
  %35 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8808
  call void @uiLayoutSetActive(%struct.uiLayout* %35, i8 zeroext 0), !dbg !8809
  %36 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !8810
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8811
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.270, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8812
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !8813

sw.epilog:                                        ; preds = %entry, %if.end, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !8814
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_random(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8815 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8816, metadata !DIExpression()), !dbg !8817
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8818, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !8822, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8824, metadata !DIExpression()), !dbg !8825
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8826
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !8827
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8828
  %1 = load i8*, i8** %data, align 8, !dbg !8828
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !8829
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !8830
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8831
  %4 = bitcast %struct.Object* %3 to %struct.ID*, !dbg !8832
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8833
  %6 = bitcast %struct.Object* %5 to i8*, !dbg !8833
  call void @RNA_pointer_create(%struct.ID* %4, %struct.StructRNA* @RNA_GameObjectSettings, i8* %6, %struct.PointerRNA* %settings_ptr), !dbg !8834
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8835
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %7, i32 0), !dbg !8836
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !8837
  %8 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8838
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8839
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8840
  %10 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8841
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8842
  call void @uiItemR(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.271, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8843
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8844
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %12, i32 0), !dbg !8845
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !8846
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8847
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8848
  call void @uiItemPointerR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !8849
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8850
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %15, i32 0), !dbg !8851
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !8852
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8853
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.271, i64 0, i64 0)), !dbg !8854
  switch i32 %call3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
    i32 3, label %sw.bb6
    i32 4, label %sw.bb7
    i32 5, label %sw.bb8
    i32 6, label %sw.bb9
    i32 7, label %sw.bb10
    i32 8, label %sw.bb11
    i32 9, label %sw.bb12
  ], !dbg !8855

sw.bb:                                            ; preds = %entry
  %17 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8856
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8858
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.272, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !8859
  br label %sw.epilog, !dbg !8860

sw.bb4:                                           ; preds = %entry
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8861
  call void @uiItemL(%struct.uiLayout* %19, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.273, i64 0, i64 0), i32 0), !dbg !8862
  br label %sw.epilog, !dbg !8863

sw.bb5:                                           ; preds = %entry
  %20 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8864
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8865
  call void @uiItemR(%struct.uiLayout* %20, %struct.PointerRNA* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8866
  br label %sw.epilog, !dbg !8867

sw.bb6:                                           ; preds = %entry
  %22 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8868
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8869
  call void @uiItemR(%struct.uiLayout* %22, %struct.PointerRNA* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8870
  br label %sw.epilog, !dbg !8871

sw.bb7:                                           ; preds = %entry
  %24 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8872
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8873
  call void @uiItemR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.276, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8874
  %26 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8875
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8876
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8877
  br label %sw.epilog, !dbg !8878

sw.bb8:                                           ; preds = %entry
  %28 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8879
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8880
  call void @uiItemR(%struct.uiLayout* %28, %struct.PointerRNA* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.278, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8881
  br label %sw.epilog, !dbg !8882

sw.bb9:                                           ; preds = %entry
  %30 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8883
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8884
  call void @uiItemR(%struct.uiLayout* %30, %struct.PointerRNA* %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8885
  br label %sw.epilog, !dbg !8886

sw.bb10:                                          ; preds = %entry
  %32 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8887
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8888
  call void @uiItemR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.280, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8889
  %34 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8890
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8891
  call void @uiItemR(%struct.uiLayout* %34, %struct.PointerRNA* %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.281, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8892
  br label %sw.epilog, !dbg !8893

sw.bb11:                                          ; preds = %entry
  %36 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8894
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8895
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.282, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8896
  %38 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8897
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8898
  call void @uiItemR(%struct.uiLayout* %38, %struct.PointerRNA* %39, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.283, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8899
  br label %sw.epilog, !dbg !8900

sw.bb12:                                          ; preds = %entry
  %40 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8901
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8902
  call void @uiItemR(%struct.uiLayout* %40, %struct.PointerRNA* %41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.284, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8903
  br label %sw.epilog, !dbg !8904

sw.epilog:                                        ; preds = %entry, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !8905
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_scene(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8906 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8911
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8912
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8913
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8914
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8915
  switch i32 %call, label %sw.default [
    i32 2, label %sw.bb
    i32 0, label %sw.bb1
  ], !dbg !8916

sw.bb:                                            ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8917
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8919
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.285, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8920
  br label %sw.epilog, !dbg !8921

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog, !dbg !8922

sw.default:                                       ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8923
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8924
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8925
  br label %sw.epilog, !dbg !8926

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !8927
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_shape_action(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !8928 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8933, metadata !DIExpression()), !dbg !8934
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8935
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !8936
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8937
  %1 = load i8*, i8** %data, align 8, !dbg !8937
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !8938
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !8939, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8941, metadata !DIExpression()), !dbg !8942
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8943
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !8945
  %4 = load i16, i16* %type, align 8, !dbg !8945
  %conv = sext i16 %4 to i32, !dbg !8943
  %cmp = icmp ne i32 %conv, 1, !dbg !8946
  br i1 %cmp, label %if.then, label %if.end, !dbg !8947

if.then:                                          ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8948
  call void @uiItemL(%struct.uiLayout* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.287, i64 0, i64 0), i32 0), !dbg !8950
  br label %return, !dbg !8951

if.end:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8952
  %7 = bitcast %struct.Object* %6 to %struct.ID*, !dbg !8953
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8954
  %9 = bitcast %struct.Object* %8 to i8*, !dbg !8954
  call void @RNA_pointer_create(%struct.ID* %7, %struct.StructRNA* @RNA_GameObjectSettings, i8* %9, %struct.PointerRNA* %settings_ptr), !dbg !8955
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8956
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %10, i32 0), !dbg !8957
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !8958
  %11 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8959
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8960
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8961
  %13 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8962
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8963
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0), !dbg !8964
  %15 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8965
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8966
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.180, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8967
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8968
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %17, i32 0), !dbg !8969
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !8970
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8971
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !8973
  %cmp4 = icmp eq i32 %call3, 6, !dbg !8974
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !8975

if.then6:                                         ; preds = %if.end
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8976
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8977
  call void @uiItemPointerR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !8978
  br label %if.end7, !dbg !8978

if.else:                                          ; preds = %if.end
  %21 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8979
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8981
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.181, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8982
  %23 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8983
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8984
  call void @uiItemR(%struct.uiLayout* %23, %struct.PointerRNA* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8985
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8986
  %call8 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %25, i32 0), !dbg !8987
  store %struct.uiLayout* %call8, %struct.uiLayout** %row, align 8, !dbg !8988
  %26 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8989
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8990
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.184, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8991
  %28 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8992
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8993
  call void @uiItemR(%struct.uiLayout* %28, %struct.PointerRNA* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !8994
  %30 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8995
  %call9 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %30, i32 0), !dbg !8996
  store %struct.uiLayout* %call9, %struct.uiLayout** %row, align 8, !dbg !8997
  %31 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8998
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8999
  call void @uiItemPointerR(%struct.uiLayout* %31, %struct.PointerRNA* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* null, i32 0), !dbg !9000
  br label %return, !dbg !9001

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !9001
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_sound(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.bContext* %C) #0 !dbg !9002 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !9009, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !9011, metadata !DIExpression()), !dbg !9012
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9013
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9014
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9015
  call void @uiTemplateID(%struct.uiLayout* %0, %struct.bContext* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.289, i64 0, i64 0), i8* null), !dbg !9016
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9017
  call void @RNA_pointer_get(%struct.PointerRNA* sret %tmp, %struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i64 0, i64 0)), !dbg !9019
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp, i32 0, i32 2, !dbg !9020
  %4 = load i8*, i8** %data, align 8, !dbg !9020
  %tobool = icmp ne i8* %4, null, !dbg !9020
  br i1 %tobool, label %if.end, label %if.then, !dbg !9021

if.then:                                          ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9022
  call void @uiItemL(%struct.uiLayout* %5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.290, i64 0, i64 0), i32 0), !dbg !9024
  br label %return, !dbg !9025

if.end:                                           ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9026
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9027
  call void @uiItemR(%struct.uiLayout* %6, %struct.PointerRNA* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9028
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9029
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %8, i32 0), !dbg !9030
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !9031
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9032
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9033
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.291, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9034
  %11 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9035
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9036
  call void @uiItemR(%struct.uiLayout* %11, %struct.PointerRNA* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.292, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9037
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9038
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9039
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9040
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9041
  %call1 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %15, i32 0), !dbg !9042
  store %struct.uiLayout* %call1, %struct.uiLayout** %col, align 8, !dbg !9043
  %16 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9044
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9045
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i64 0, i64 0)), !dbg !9046
  %cmp = icmp eq i32 %call2, 1, !dbg !9047
  %conv = zext i1 %cmp to i32, !dbg !9047
  %conv3 = trunc i32 %conv to i8, !dbg !9046
  call void @uiLayoutSetActive(%struct.uiLayout* %16, i8 zeroext %conv3), !dbg !9048
  %18 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9049
  %call4 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %18, i32 0), !dbg !9050
  store %struct.uiLayout* %call4, %struct.uiLayout** %row, align 8, !dbg !9051
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9052
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9053
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.294, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9054
  %21 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9055
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9056
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9057
  %23 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9058
  %call5 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %23, i32 0), !dbg !9059
  store %struct.uiLayout* %call5, %struct.uiLayout** %row, align 8, !dbg !9060
  %24 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9061
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9062
  call void @uiItemR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.296, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9063
  %26 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9064
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9065
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.297, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9066
  %28 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9067
  %call6 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %28, i32 0), !dbg !9068
  store %struct.uiLayout* %call6, %struct.uiLayout** %row, align 8, !dbg !9069
  %29 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9070
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9071
  call void @uiItemR(%struct.uiLayout* %29, %struct.PointerRNA* %30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.298, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9072
  %31 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9073
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9074
  call void @uiItemR(%struct.uiLayout* %31, %struct.PointerRNA* %32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.299, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9075
  %33 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9076
  %call7 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %33, i32 0), !dbg !9077
  store %struct.uiLayout* %call7, %struct.uiLayout** %row, align 8, !dbg !9078
  %34 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9079
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9080
  call void @uiItemR(%struct.uiLayout* %34, %struct.PointerRNA* %35, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9081
  %36 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9082
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9083
  call void @uiItemR(%struct.uiLayout* %36, %struct.PointerRNA* %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.301, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9084
  br label %return, !dbg !9085

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9085
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_state(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !9086 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %ob = alloca %struct.Object*, align 8
  %settings_ptr = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9095
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !9096
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !9097
  %1 = load i8*, i8** %data, align 8, !dbg !9097
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !9098
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !9094
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %settings_ptr, metadata !9099, metadata !DIExpression()), !dbg !9100
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9101
  %4 = bitcast %struct.Object* %3 to %struct.ID*, !dbg !9102
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9103
  %6 = bitcast %struct.Object* %5 to i8*, !dbg !9103
  call void @RNA_pointer_create(%struct.ID* %4, %struct.StructRNA* @RNA_GameObjectSettings, i8* %6, %struct.PointerRNA* %settings_ptr), !dbg !9104
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9105
  %call = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %7, float 0x3FD6666660000000, i32 0), !dbg !9106
  store %struct.uiLayout* %call, %struct.uiLayout** %split, align 8, !dbg !9107
  %8 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !9108
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9109
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.302, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9110
  %10 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !9111
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9112
  call void @uiTemplateLayers(%struct.uiLayout* %10, %struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), %struct.PointerRNA* %settings_ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i32 0), !dbg !9113
  ret void, !dbg !9114
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_visibility(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !9115 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !9116, metadata !DIExpression()), !dbg !9117
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !9120, metadata !DIExpression()), !dbg !9121
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9122
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %0, i32 0), !dbg !9123
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !9124
  %1 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9125
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9126
  call void @uiItemR(%struct.uiLayout* %1, %struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.303, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9127
  %3 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9128
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9129
  call void @uiItemR(%struct.uiLayout* %3, %struct.PointerRNA* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.304, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9130
  %5 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9131
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9132
  call void @uiItemR(%struct.uiLayout* %5, %struct.PointerRNA* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9133
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_steering(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !9135 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !9142, metadata !DIExpression()), !dbg !9143
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9144
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9145
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9146
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9147
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9148
  call void @uiItemR(%struct.uiLayout* %2, %struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9149
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9150
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9151
  call void @uiItemR(%struct.uiLayout* %4, %struct.PointerRNA* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.305, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9152
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9153
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %6, i32 0), !dbg !9154
  store %struct.uiLayout* %call, %struct.uiLayout** %row, align 8, !dbg !9155
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9156
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9157
  call void @uiItemR(%struct.uiLayout* %7, %struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9158
  %9 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9159
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9160
  call void @uiItemR(%struct.uiLayout* %9, %struct.PointerRNA* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.306, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9161
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9162
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %11, i32 0), !dbg !9163
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !9164
  %12 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9165
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9166
  call void @uiItemR(%struct.uiLayout* %12, %struct.PointerRNA* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.307, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9167
  %14 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9168
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9169
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.308, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9170
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9171
  %call2 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %16, i32 0), !dbg !9172
  store %struct.uiLayout* %call2, %struct.uiLayout** %row, align 8, !dbg !9173
  %17 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9174
  %call3 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %17, i32 0), !dbg !9175
  store %struct.uiLayout* %call3, %struct.uiLayout** %col, align 8, !dbg !9176
  %18 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9177
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9178
  call void @uiItemR(%struct.uiLayout* %18, %struct.PointerRNA* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.309, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9179
  %20 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9180
  %call4 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %20, i32 0), !dbg !9181
  store %struct.uiLayout* %call4, %struct.uiLayout** %col, align 8, !dbg !9182
  %21 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9183
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9184
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.310, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9185
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9186
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.309, i64 0, i64 0)), !dbg !9188
  %tobool = icmp ne i32 %call5, 0, !dbg !9188
  br i1 %tobool, label %if.end, label %if.then, !dbg !9189

if.then:                                          ; preds = %entry
  %24 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9190
  call void @uiLayoutSetActive(%struct.uiLayout* %24, i8 zeroext 0), !dbg !9192
  br label %if.end, !dbg !9193

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9194
  %call6 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %25, i32 0), !dbg !9195
  store %struct.uiLayout* %call6, %struct.uiLayout** %col, align 8, !dbg !9196
  %26 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9197
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9198
  call void @uiItemR(%struct.uiLayout* %26, %struct.PointerRNA* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.311, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9199
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9200
  call void @RNA_pointer_get(%struct.PointerRNA* sret %tmp, %struct.PointerRNA* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.305, i64 0, i64 0)), !dbg !9202
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp, i32 0, i32 2, !dbg !9203
  %29 = load i8*, i8** %data, align 8, !dbg !9203
  %tobool7 = icmp ne i8* %29, null, !dbg !9203
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9204

if.then8:                                         ; preds = %if.end
  %30 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9205
  call void @uiLayoutSetActive(%struct.uiLayout* %30, i8 zeroext 0), !dbg !9207
  br label %if.end9, !dbg !9208

if.end9:                                          ; preds = %if.then8, %if.end
  %31 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9209
  %call10 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %31, i32 0), !dbg !9210
  store %struct.uiLayout* %call10, %struct.uiLayout** %row, align 8, !dbg !9211
  %32 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9212
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9213
  call void @uiItemR(%struct.uiLayout* %32, %struct.PointerRNA* %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.312, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9214
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9215
  %call11 = call i32 @RNA_enum_get(%struct.PointerRNA* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !9217
  %cmp = icmp eq i32 %call11, 2, !dbg !9218
  br i1 %cmp, label %if.then12, label %if.end14, !dbg !9219

if.then12:                                        ; preds = %if.end9
  %35 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9220
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9222
  call void @uiItemR(%struct.uiLayout* %35, %struct.PointerRNA* %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.313, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9223
  %37 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9224
  %call13 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %37, i32 0), !dbg !9225
  store %struct.uiLayout* %call13, %struct.uiLayout** %row, align 8, !dbg !9226
  br label %if.end14, !dbg !9227

if.end14:                                         ; preds = %if.then12, %if.end9
  %38 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9228
  %call15 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %38, i32 0), !dbg !9229
  store %struct.uiLayout* %call15, %struct.uiLayout** %row, align 8, !dbg !9230
  %39 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9231
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9232
  call void @uiItemR(%struct.uiLayout* %39, %struct.PointerRNA* %40, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.314, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9233
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9234
  %call16 = call i32 @RNA_enum_get(%struct.PointerRNA* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !9236
  %cmp17 = icmp ne i32 %call16, 2, !dbg !9237
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9238

if.then18:                                        ; preds = %if.end14
  %42 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9239
  call void @uiLayoutSetActive(%struct.uiLayout* %42, i8 zeroext 0), !dbg !9241
  br label %if.end19, !dbg !9242

if.end19:                                         ; preds = %if.then18, %if.end14
  ret void, !dbg !9243
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_actuator_mouse(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr) #0 !dbg !9244 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %row = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %subcol = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %subsplit = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9247, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !9249, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !9251, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %subcol, metadata !9253, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !9255, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %subsplit, metadata !9257, metadata !DIExpression()), !dbg !9258
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9259
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9260
  call void @uiItemR(%struct.uiLayout* %0, %struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9261
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9262
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)), !dbg !9263
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !9264

sw.bb:                                            ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9265
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %3, i32 0), !dbg !9267
  store %struct.uiLayout* %call1, %struct.uiLayout** %row, align 8, !dbg !9268
  %4 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9269
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9270
  call void @uiItemR(%struct.uiLayout* %4, %struct.PointerRNA* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9271
  br label %sw.epilog, !dbg !9272

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9273
  %call3 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %6, i32 0), !dbg !9274
  store %struct.uiLayout* %call3, %struct.uiLayout** %row, align 8, !dbg !9275
  %7 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9276
  %call4 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %7, i32 1), !dbg !9277
  store %struct.uiLayout* %call4, %struct.uiLayout** %col, align 8, !dbg !9278
  %8 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9279
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9280
  call void @uiItemR(%struct.uiLayout* %8, %struct.PointerRNA* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9281
  %10 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9282
  %call5 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %10, i32 1), !dbg !9283
  store %struct.uiLayout* %call5, %struct.uiLayout** %subcol, align 8, !dbg !9284
  %11 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9285
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9286
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)), !dbg !9287
  %cmp = icmp eq i32 %call6, 1, !dbg !9288
  %conv = zext i1 %cmp to i32, !dbg !9288
  %conv7 = trunc i32 %conv to i8, !dbg !9287
  call void @uiLayoutSetActive(%struct.uiLayout* %11, i8 zeroext %conv7), !dbg !9289
  %13 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9290
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9291
  call void @uiItemR(%struct.uiLayout* %13, %struct.PointerRNA* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.317, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9292
  %15 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9293
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9294
  call void @uiItemR(%struct.uiLayout* %15, %struct.PointerRNA* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.318, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9295
  %17 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9296
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9297
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.319, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9298
  %19 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9299
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9300
  call void @uiItemR(%struct.uiLayout* %19, %struct.PointerRNA* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.320, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9301
  %21 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9302
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9303
  call void @uiItemR(%struct.uiLayout* %21, %struct.PointerRNA* %22, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.321, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9304
  %23 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9305
  %call8 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %23, i32 1), !dbg !9306
  store %struct.uiLayout* %call8, %struct.uiLayout** %col, align 8, !dbg !9307
  %24 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9308
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9309
  call void @uiItemR(%struct.uiLayout* %24, %struct.PointerRNA* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9310
  %26 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !9311
  %call9 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %26, i32 1), !dbg !9312
  store %struct.uiLayout* %call9, %struct.uiLayout** %subcol, align 8, !dbg !9313
  %27 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9314
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9315
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i64 0, i64 0)), !dbg !9316
  %cmp11 = icmp eq i32 %call10, 1, !dbg !9317
  %conv12 = zext i1 %cmp11 to i32, !dbg !9317
  %conv13 = trunc i32 %conv12 to i8, !dbg !9316
  call void @uiLayoutSetActive(%struct.uiLayout* %27, i8 zeroext %conv13), !dbg !9318
  %29 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9319
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9320
  call void @uiItemR(%struct.uiLayout* %29, %struct.PointerRNA* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.323, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9321
  %31 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9322
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9323
  call void @uiItemR(%struct.uiLayout* %31, %struct.PointerRNA* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.324, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9324
  %33 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9325
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9326
  call void @uiItemR(%struct.uiLayout* %33, %struct.PointerRNA* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.325, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9327
  %35 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9328
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9329
  call void @uiItemR(%struct.uiLayout* %35, %struct.PointerRNA* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.326, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9330
  %37 = load %struct.uiLayout*, %struct.uiLayout** %subcol, align 8, !dbg !9331
  %38 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9332
  call void @uiItemR(%struct.uiLayout* %37, %struct.PointerRNA* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.327, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !9333
  %39 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !9334
  %call14 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %39, i32 0), !dbg !9335
  store %struct.uiLayout* %call14, %struct.uiLayout** %row, align 8, !dbg !9336
  %40 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !9337
  %call15 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %40, float 5.000000e-01, i32 0), !dbg !9338
  store %struct.uiLayout* %call15, %struct.uiLayout** %split, align 8, !dbg !9339
  %41 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !9340
  %call16 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %41, float 5.000000e-01, i32 1), !dbg !9341
  store %struct.uiLayout* %call16, %struct.uiLayout** %subsplit, align 8, !dbg !9342
  %42 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9343
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9344
  %call17 = call i32 @RNA_boolean_get(%struct.PointerRNA* %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)), !dbg !9345
  %cmp18 = icmp eq i32 %call17, 1, !dbg !9346
  %conv19 = zext i1 %cmp18 to i32, !dbg !9346
  %conv20 = trunc i32 %conv19 to i8, !dbg !9345
  call void @uiLayoutSetActive(%struct.uiLayout* %42, i8 zeroext %conv20), !dbg !9347
  %44 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9348
  %45 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9349
  call void @uiItemR(%struct.uiLayout* %44, %struct.PointerRNA* %45, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.328, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9350
  %46 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9351
  %47 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9352
  call void @uiItemR(%struct.uiLayout* %46, %struct.PointerRNA* %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.329, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9353
  %48 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !9354
  %call21 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %48, float 5.000000e-01, i32 1), !dbg !9355
  store %struct.uiLayout* %call21, %struct.uiLayout** %subsplit, align 8, !dbg !9356
  %49 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9357
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9358
  %call22 = call i32 @RNA_boolean_get(%struct.PointerRNA* %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i64 0, i64 0)), !dbg !9359
  %cmp23 = icmp eq i32 %call22, 1, !dbg !9360
  %conv24 = zext i1 %cmp23 to i32, !dbg !9360
  %conv25 = trunc i32 %conv24 to i8, !dbg !9359
  call void @uiLayoutSetActive(%struct.uiLayout* %49, i8 zeroext %conv25), !dbg !9361
  %51 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9362
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9363
  call void @uiItemR(%struct.uiLayout* %51, %struct.PointerRNA* %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.330, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9364
  %53 = load %struct.uiLayout*, %struct.uiLayout** %subsplit, align 8, !dbg !9365
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9366
  call void @uiItemR(%struct.uiLayout* %53, %struct.PointerRNA* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i64 0, i64 0), i32 8, i8* null, i32 0), !dbg !9367
  br label %sw.epilog, !dbg !9368

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb
  ret void, !dbg !9369
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_armature_bone_constraint(%struct.Object* %ob, i8* %posechannel, i8* %constraint_name, %struct.bConstraint** %constraint) #0 !dbg !9370 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %posechannel.addr = alloca i8*, align 8
  %constraint_name.addr = alloca i8*, align 8
  %constraint.addr = alloca %struct.bConstraint**, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9374, metadata !DIExpression()), !dbg !9375
  store i8* %posechannel, i8** %posechannel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %posechannel.addr, metadata !9376, metadata !DIExpression()), !dbg !9377
  store i8* %constraint_name, i8** %constraint_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %constraint_name.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  store %struct.bConstraint** %constraint, %struct.bConstraint*** %constraint.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraint*** %constraint.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9382
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !9384
  %1 = load i16, i16* %type, align 8, !dbg !9384
  %conv = sext i16 %1 to i32, !dbg !9382
  %cmp = icmp eq i32 %conv, 25, !dbg !9385
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !9386

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9387
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 18, !dbg !9388
  %3 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !9388
  %tobool = icmp ne %struct.bPose* %3, null, !dbg !9387
  br i1 %tobool, label %if.then, label %if.end9, !dbg !9389

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !9390, metadata !DIExpression()), !dbg !9439
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9440
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 18, !dbg !9441
  %5 = load %struct.bPose*, %struct.bPose** %pose2, align 8, !dbg !9441
  %6 = load i8*, i8** %posechannel.addr, align 8, !dbg !9442
  %call = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %5, i8* %6), !dbg !9443
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !9439
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9444
  %tobool3 = icmp ne %struct.bPoseChannel* %7, null, !dbg !9444
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !9446

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !9447, metadata !DIExpression()), !dbg !9449
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !9450
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 3, !dbg !9451
  %9 = load i8*, i8** %constraint_name.addr, align 8, !dbg !9452
  %call5 = call i8* @BLI_findstring(%struct.ListBase* %constraints, i8* %9, i32 30), !dbg !9453
  %10 = bitcast i8* %call5 to %struct.bConstraint*, !dbg !9453
  store %struct.bConstraint* %10, %struct.bConstraint** %con, align 8, !dbg !9449
  %11 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9454
  %tobool6 = icmp ne %struct.bConstraint* %11, null, !dbg !9454
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9456

if.then7:                                         ; preds = %if.then4
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9457
  %13 = load %struct.bConstraint**, %struct.bConstraint*** %constraint.addr, align 8, !dbg !9459
  store %struct.bConstraint* %12, %struct.bConstraint** %13, align 8, !dbg !9460
  br label %if.end, !dbg !9461

if.end:                                           ; preds = %if.then7, %if.then4
  br label %if.end8, !dbg !9462

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end9, !dbg !9463

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %entry
  ret void, !dbg !9464
}

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #2

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

declare dso_local void @uiTemplateID(%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*, i8*, i8*, i8*, i8*) #2

declare dso_local void @RNA_pointer_get(%struct.PointerRNA* sret, %struct.PointerRNA*, i8*) #2

declare dso_local void @uiTemplateLayers(%struct.uiLayout*, %struct.PointerRNA*, i8*, %struct.PointerRNA*, i8*, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2679, !2680, !2681}
!llvm.ident = !{!2682}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1043, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/editors/space_logic/logic_window.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !14, !60, !67, !917, !930, !935, !960, !986, !999, !1032}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 426, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13}
!7 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_NONE", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "UI_BLOCK_BOUNDS", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_TEXT", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MOUSE", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MENU", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_CENTER", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_PIE_CENTER", value: 6, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 236, baseType: !5, size: 32, elements: !15)
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59}
!16 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!17 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!18 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!19 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!20 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!21 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!22 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!23 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!24 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!25 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!26 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!27 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!28 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!29 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!30 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!31 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!32 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!33 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!34 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!35 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!36 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!37 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!38 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!39 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!40 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!41 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!42 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!43 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!44 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!45 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!46 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!47 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!48 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!49 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!50 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!51 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!52 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!53 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!54 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!55 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!56 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!57 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!58 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!59 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 223, baseType: !5, size: 32, elements: !61)
!61 = !{!62, !63, !64, !65, !66}
!62 = !DIEnumerator(name: "UI_BUT_POIN_CHAR", value: 32, isUnsigned: true)
!63 = !DIEnumerator(name: "UI_BUT_POIN_SHORT", value: 64, isUnsigned: true)
!64 = !DIEnumerator(name: "UI_BUT_POIN_INT", value: 96, isUnsigned: true)
!65 = !DIEnumerator(name: "UI_BUT_POIN_FLOAT", value: 128, isUnsigned: true)
!66 = !DIEnumerator(name: "UI_BUT_POIN_BIT", value: 256, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 40, baseType: !5, size: 32, elements: !69)
!68 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!69 = !{!70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!70 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!74 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!76 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!77 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!78 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!79 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!80 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!81 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!82 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!83 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!84 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!85 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!86 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!87 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!88 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!89 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!90 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!91 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!92 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!906 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!907 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!908 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!909 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!910 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!911 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!912 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!913 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!914 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!915 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!916 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !918, line: 605, baseType: !5, size: 32, elements: !919)
!918 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!919 = !{!920, !921, !922, !923, !924, !925, !926, !927, !928, !929}
!920 = !DIEnumerator(name: "OB_SHOWSENS", value: 64, isUnsigned: true)
!921 = !DIEnumerator(name: "OB_SHOWACT", value: 128, isUnsigned: true)
!922 = !DIEnumerator(name: "OB_ADDSENS", value: 256, isUnsigned: true)
!923 = !DIEnumerator(name: "OB_ADDCONT", value: 512, isUnsigned: true)
!924 = !DIEnumerator(name: "OB_ADDACT", value: 1024, isUnsigned: true)
!925 = !DIEnumerator(name: "OB_SHOWCONT", value: 2048, isUnsigned: true)
!926 = !DIEnumerator(name: "OB_ALLSTATE", value: 4096, isUnsigned: true)
!927 = !DIEnumerator(name: "OB_INITSTBIT", value: 8192, isUnsigned: true)
!928 = !DIEnumerator(name: "OB_DEBUGSTATE", value: 16384, isUnsigned: true)
!929 = !DIEnumerator(name: "OB_SHOWSTATE", value: 32768, isUnsigned: true)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !918, line: 598, baseType: !5, size: 32, elements: !931)
!931 = !{!932, !933, !934}
!932 = !DIEnumerator(name: "OB_VIS_SENS", value: 1, isUnsigned: true)
!933 = !DIEnumerator(name: "OB_VIS_CONT", value: 2, isUnsigned: true)
!934 = !DIEnumerator(name: "OB_VIS_ACT", value: 4, isUnsigned: true)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 157, baseType: !5, size: 32, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959}
!937 = !DIEnumerator(name: "UI_ICON_SUBMENU", value: 64, isUnsigned: true)
!938 = !DIEnumerator(name: "UI_ICON_PREVIEW", value: 128, isUnsigned: true)
!939 = !DIEnumerator(name: "UI_BUT_NODE_LINK", value: 256, isUnsigned: true)
!940 = !DIEnumerator(name: "UI_BUT_NODE_ACTIVE", value: 512, isUnsigned: true)
!941 = !DIEnumerator(name: "UI_BUT_DRAG_LOCK", value: 1024, isUnsigned: true)
!942 = !DIEnumerator(name: "UI_BUT_DISABLED", value: 2048, isUnsigned: true)
!943 = !DIEnumerator(name: "UI_BUT_COLOR_LOCK", value: 4096, isUnsigned: true)
!944 = !DIEnumerator(name: "UI_BUT_ANIMATED", value: 8192, isUnsigned: true)
!945 = !DIEnumerator(name: "UI_BUT_ANIMATED_KEY", value: 16384, isUnsigned: true)
!946 = !DIEnumerator(name: "UI_BUT_DRIVEN", value: 32768, isUnsigned: true)
!947 = !DIEnumerator(name: "UI_BUT_REDALERT", value: 65536, isUnsigned: true)
!948 = !DIEnumerator(name: "UI_BUT_INACTIVE", value: 131072, isUnsigned: true)
!949 = !DIEnumerator(name: "UI_BUT_LAST_ACTIVE", value: 262144, isUnsigned: true)
!950 = !DIEnumerator(name: "UI_BUT_UNDO", value: 524288, isUnsigned: true)
!951 = !DIEnumerator(name: "UI_BUT_IMMEDIATE", value: 1048576, isUnsigned: true)
!952 = !DIEnumerator(name: "UI_BUT_NO_UTF8", value: 2097152, isUnsigned: true)
!953 = !DIEnumerator(name: "UI_BUT_VEC_SIZE_LOCK", value: 4194304, isUnsigned: true)
!954 = !DIEnumerator(name: "UI_BUT_COLOR_CUBIC", value: 8388608, isUnsigned: true)
!955 = !DIEnumerator(name: "UI_BUT_LIST_ITEM", value: 16777216, isUnsigned: true)
!956 = !DIEnumerator(name: "UI_BUT_DRAG_MULTI", value: 33554432, isUnsigned: true)
!957 = !DIEnumerator(name: "UI_BUT_SCA_LINK_GREY", value: 67108864, isUnsigned: true)
!958 = !DIEnumerator(name: "UI_BUT_HAS_SEP_CHAR", value: 134217728, isUnsigned: true)
!959 = !DIEnumerator(name: "UI_BUT_TIP_FORCE", value: 268435456, isUnsigned: true)
!960 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !918, line: 535, baseType: !5, size: 32, elements: !961)
!961 = !{!962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985}
!962 = !DIEnumerator(name: "OB_DYNAMIC", value: 1, isUnsigned: true)
!963 = !DIEnumerator(name: "OB_CHILD", value: 2, isUnsigned: true)
!964 = !DIEnumerator(name: "OB_ACTOR", value: 4, isUnsigned: true)
!965 = !DIEnumerator(name: "OB_INERTIA_LOCK_X", value: 8, isUnsigned: true)
!966 = !DIEnumerator(name: "OB_INERTIA_LOCK_Y", value: 16, isUnsigned: true)
!967 = !DIEnumerator(name: "OB_INERTIA_LOCK_Z", value: 32, isUnsigned: true)
!968 = !DIEnumerator(name: "OB_DO_FH", value: 64, isUnsigned: true)
!969 = !DIEnumerator(name: "OB_ROT_FH", value: 128, isUnsigned: true)
!970 = !DIEnumerator(name: "OB_ANISOTROPIC_FRICTION", value: 256, isUnsigned: true)
!971 = !DIEnumerator(name: "OB_GHOST", value: 512, isUnsigned: true)
!972 = !DIEnumerator(name: "OB_RIGID_BODY", value: 1024, isUnsigned: true)
!973 = !DIEnumerator(name: "OB_BOUNDS", value: 2048, isUnsigned: true)
!974 = !DIEnumerator(name: "OB_COLLISION_RESPONSE", value: 4096, isUnsigned: true)
!975 = !DIEnumerator(name: "OB_SECTOR", value: 8192, isUnsigned: true)
!976 = !DIEnumerator(name: "OB_PROP", value: 16384, isUnsigned: true)
!977 = !DIEnumerator(name: "OB_MAINACTOR", value: 32768, isUnsigned: true)
!978 = !DIEnumerator(name: "OB_COLLISION", value: 65536, isUnsigned: true)
!979 = !DIEnumerator(name: "OB_SOFT_BODY", value: 131072, isUnsigned: true)
!980 = !DIEnumerator(name: "OB_OCCLUDER", value: 262144, isUnsigned: true)
!981 = !DIEnumerator(name: "OB_SENSOR", value: 524288, isUnsigned: true)
!982 = !DIEnumerator(name: "OB_NAVMESH", value: 1048576, isUnsigned: true)
!983 = !DIEnumerator(name: "OB_HASOBSTACLE", value: 2097152, isUnsigned: true)
!984 = !DIEnumerator(name: "OB_CHARACTER", value: 4194304, isUnsigned: true)
!985 = !DIEnumerator(name: "OB_RECORD_ANIMATION", value: 8388608, isUnsigned: true)
!986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !918, line: 339, baseType: !5, size: 32, elements: !987)
!987 = !{!988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!988 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!989 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!990 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!991 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!992 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!993 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!994 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!995 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!996 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!997 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!998 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !1000, line: 461, baseType: !5, size: 32, elements: !1001)
!1000 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031}
!1002 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!1003 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!1004 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!1005 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!1006 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!1007 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!1008 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!1009 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!1010 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!1011 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!1012 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!1013 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!1014 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!1015 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!1016 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!1017 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!1018 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!1019 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!1020 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!1021 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!1022 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!1023 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!1024 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!1025 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!1026 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!1027 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!1028 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!1029 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!1030 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!1031 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!1032 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !918, line: 579, baseType: !5, size: 32, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1034 = !DIEnumerator(name: "OB_BODY_TYPE_NO_COLLISION", value: 0, isUnsigned: true)
!1035 = !DIEnumerator(name: "OB_BODY_TYPE_STATIC", value: 1, isUnsigned: true)
!1036 = !DIEnumerator(name: "OB_BODY_TYPE_DYNAMIC", value: 2, isUnsigned: true)
!1037 = !DIEnumerator(name: "OB_BODY_TYPE_RIGID", value: 3, isUnsigned: true)
!1038 = !DIEnumerator(name: "OB_BODY_TYPE_SOFT", value: 4, isUnsigned: true)
!1039 = !DIEnumerator(name: "OB_BODY_TYPE_OCCLUDER", value: 5, isUnsigned: true)
!1040 = !DIEnumerator(name: "OB_BODY_TYPE_SENSOR", value: 6, isUnsigned: true)
!1041 = !DIEnumerator(name: "OB_BODY_TYPE_NAVMESH", value: 7, isUnsigned: true)
!1042 = !DIEnumerator(name: "OB_BODY_TYPE_CHARACTER", value: 8, isUnsigned: true)
!1043 = !{!1044, !1054, !1064, !1083, !2580, !2582, !2583, !2645, !1900, !2647, !2648, !2650, !2658, !2670}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !918, line: 295, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !918, line: 115, size: 11392, elements: !1047)
!1047 = !{!1048, !1120, !1124, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1135, !1136, !1137, !1138, !1139, !1143, !1155, !1169, !1170, !1214, !1215, !1219, !1220, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1247, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1263, !1264, !1265, !1266, !1267, !1268, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1339, !1342, !1346, !1347, !1348, !1349, !1350, !1353, !1356, !1359, !1360, !1366, !1367, !1368, !1369, !1370, !1371, !1373, !1376, !1379, !1383, !2568, !2569}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1046, file: !918, line: 116, baseType: !1049, size: 960)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1050, line: 130, baseType: !1051)
!1050 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1050, line: 117, size: 960, elements: !1052)
!1052 = !{!1053, !1055, !1056, !1058, !1078, !1082, !1084, !1086, !1087, !1088}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1051, file: !1050, line: 118, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1051, file: !1050, line: 118, baseType: !1054, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1051, file: !1050, line: 119, baseType: !1057, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1051, file: !1050, line: 120, baseType: !1059, size: 64, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1050, line: 136, size: 17600, elements: !1061)
!1061 = !{!1062, !1063, !1065, !1068, !1073, !1074, !1075}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1060, file: !1050, line: 137, baseType: !1049, size: 960)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1060, file: !1050, line: 138, baseType: !1064, size: 64, offset: 960)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1060, file: !1050, line: 139, baseType: !1066, size: 64, offset: 1024)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1050, line: 43, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1060, file: !1050, line: 140, baseType: !1069, size: 8192, offset: 1088)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 8192, elements: !1071)
!1070 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1071 = !{!1072}
!1072 = !DISubrange(count: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1060, file: !1050, line: 141, baseType: !1069, size: 8192, offset: 9280)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1060, file: !1050, line: 148, baseType: !1059, size: 64, offset: 17472)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1060, file: !1050, line: 150, baseType: !1076, size: 64, offset: 17536)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1050, line: 45, flags: DIFlagFwdDecl)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1051, file: !1050, line: 121, baseType: !1079, size: 528, offset: 256)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 528, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 66)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1051, file: !1050, line: 126, baseType: !1083, size: 16, offset: 784)
!1083 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1051, file: !1050, line: 127, baseType: !1085, size: 32, offset: 800)
!1085 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1051, file: !1050, line: 128, baseType: !1085, size: 32, offset: 832)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1051, file: !1050, line: 128, baseType: !1085, size: 32, offset: 864)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1051, file: !1050, line: 129, baseType: !1089, size: 64, offset: 896)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1050, line: 75, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1050, line: 62, size: 1024, elements: !1092)
!1092 = !{!1093, !1095, !1096, !1097, !1098, !1099, !1103, !1104, !1118, !1119}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1091, file: !1050, line: 63, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1091, file: !1050, line: 63, baseType: !1094, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1091, file: !1050, line: 64, baseType: !1070, size: 8, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1091, file: !1050, line: 64, baseType: !1070, size: 8, offset: 136)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1091, file: !1050, line: 65, baseType: !1083, size: 16, offset: 144)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1091, file: !1050, line: 66, baseType: !1100, size: 512, offset: 160)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 512, elements: !1101)
!1101 = !{!1102}
!1102 = !DISubrange(count: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1091, file: !1050, line: 67, baseType: !1085, size: 32, offset: 672)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1091, file: !1050, line: 69, baseType: !1105, size: 256, offset: 704)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1050, line: 60, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1050, line: 48, size: 256, elements: !1107)
!1107 = !{!1108, !1109, !1116, !1117}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1106, file: !1050, line: 49, baseType: !1054, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1106, file: !1050, line: 58, baseType: !1110, size: 128, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1111, line: 71, baseType: !1112)
!1111 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1111, line: 69, size: 128, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1112, file: !1111, line: 70, baseType: !1054, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1112, file: !1111, line: 70, baseType: !1054, size: 64, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1106, file: !1050, line: 59, baseType: !1085, size: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1106, file: !1050, line: 59, baseType: !1085, size: 32, offset: 224)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1091, file: !1050, line: 70, baseType: !1085, size: 32, offset: 960)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1091, file: !1050, line: 74, baseType: !1085, size: 32, offset: 992)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1046, file: !918, line: 117, baseType: !1121, size: 64, offset: 960)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1123, line: 43, flags: DIFlagFwdDecl)
!1123 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1046, file: !918, line: 119, baseType: !1125, size: 64, offset: 1024)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !918, line: 57, flags: DIFlagFwdDecl)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1046, file: !918, line: 121, baseType: !1083, size: 16, offset: 1088)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1046, file: !918, line: 121, baseType: !1083, size: 16, offset: 1104)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1046, file: !918, line: 122, baseType: !1085, size: 32, offset: 1120)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1046, file: !918, line: 122, baseType: !1085, size: 32, offset: 1152)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1046, file: !918, line: 122, baseType: !1085, size: 32, offset: 1184)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1046, file: !918, line: 123, baseType: !1100, size: 512, offset: 1216)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1046, file: !918, line: 124, baseType: !1134, size: 64, offset: 1728)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1046, file: !918, line: 124, baseType: !1134, size: 64, offset: 1792)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1046, file: !918, line: 127, baseType: !1134, size: 64, offset: 1856)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1046, file: !918, line: 127, baseType: !1134, size: 64, offset: 1920)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1046, file: !918, line: 127, baseType: !1134, size: 64, offset: 1984)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1046, file: !918, line: 128, baseType: !1140, size: 64, offset: 2048)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1142, line: 49, flags: DIFlagFwdDecl)
!1142 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1046, file: !918, line: 130, baseType: !1144, size: 64, offset: 2112)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !918, line: 97, size: 832, elements: !1146)
!1146 = !{!1147, !1153, !1154}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1145, file: !918, line: 98, baseType: !1148, size: 768)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 768, elements: !1150)
!1149 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1150 = !{!1151, !1152}
!1151 = !DISubrange(count: 8)
!1152 = !DISubrange(count: 3)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1145, file: !918, line: 99, baseType: !1085, size: 32, offset: 768)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1145, file: !918, line: 99, baseType: !1085, size: 32, offset: 800)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1046, file: !918, line: 131, baseType: !1156, size: 64, offset: 2176)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1158, line: 486, size: 1600, elements: !1159)
!1158 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1157, file: !1158, line: 487, baseType: !1049, size: 960)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1157, file: !1158, line: 489, baseType: !1110, size: 128, offset: 960)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1157, file: !1158, line: 490, baseType: !1110, size: 128, offset: 1088)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1157, file: !1158, line: 491, baseType: !1110, size: 128, offset: 1216)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1157, file: !1158, line: 492, baseType: !1110, size: 128, offset: 1344)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1157, file: !1158, line: 494, baseType: !1085, size: 32, offset: 1472)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1157, file: !1158, line: 495, baseType: !1085, size: 32, offset: 1504)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1157, file: !1158, line: 497, baseType: !1085, size: 32, offset: 1536)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1157, file: !1158, line: 498, baseType: !1085, size: 32, offset: 1568)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1046, file: !918, line: 132, baseType: !1156, size: 64, offset: 2240)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1046, file: !918, line: 133, baseType: !1171, size: 64, offset: 2304)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1158, line: 334, size: 1728, elements: !1173)
!1173 = !{!1174, !1175, !1179, !1180, !1181, !1182, !1183, !1184, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1213}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1172, file: !1158, line: 335, baseType: !1110, size: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1172, file: !1158, line: 336, baseType: !1176, size: 64, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1178, line: 74, flags: DIFlagFwdDecl)
!1178 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1172, file: !1158, line: 338, baseType: !1083, size: 16, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1172, file: !1158, line: 338, baseType: !1083, size: 16, offset: 208)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1172, file: !1158, line: 339, baseType: !5, size: 32, offset: 224)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1172, file: !1158, line: 340, baseType: !1085, size: 32, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1172, file: !1158, line: 342, baseType: !1149, size: 32, offset: 288)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1172, file: !1158, line: 343, baseType: !1185, size: 96, offset: 320)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 96, elements: !1186)
!1186 = !{!1152}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1172, file: !1158, line: 344, baseType: !1185, size: 96, offset: 416)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1172, file: !1158, line: 347, baseType: !1110, size: 128, offset: 512)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1172, file: !1158, line: 349, baseType: !1085, size: 32, offset: 640)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1172, file: !1158, line: 350, baseType: !1085, size: 32, offset: 672)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1172, file: !1158, line: 351, baseType: !1054, size: 64, offset: 704)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1172, file: !1158, line: 352, baseType: !1054, size: 64, offset: 768)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1172, file: !1158, line: 354, baseType: !1194, size: 384, offset: 832)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1158, line: 116, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1158, line: 94, size: 384, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1195, file: !1158, line: 96, baseType: !1085, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1195, file: !1158, line: 96, baseType: !1085, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1195, file: !1158, line: 97, baseType: !1085, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1195, file: !1158, line: 97, baseType: !1085, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1195, file: !1158, line: 99, baseType: !1083, size: 16, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1195, file: !1158, line: 100, baseType: !1083, size: 16, offset: 144)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1195, file: !1158, line: 102, baseType: !1083, size: 16, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1195, file: !1158, line: 105, baseType: !1083, size: 16, offset: 176)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1195, file: !1158, line: 108, baseType: !1083, size: 16, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1195, file: !1158, line: 109, baseType: !1083, size: 16, offset: 208)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1195, file: !1158, line: 111, baseType: !1083, size: 16, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1195, file: !1158, line: 112, baseType: !1083, size: 16, offset: 240)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1195, file: !1158, line: 114, baseType: !1085, size: 32, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1195, file: !1158, line: 114, baseType: !1085, size: 32, offset: 288)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1195, file: !1158, line: 115, baseType: !1085, size: 32, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1195, file: !1158, line: 115, baseType: !1085, size: 32, offset: 352)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1172, file: !1158, line: 355, baseType: !1100, size: 512, offset: 1216)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1046, file: !918, line: 134, baseType: !1054, size: 64, offset: 2368)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1046, file: !918, line: 136, baseType: !1216, size: 64, offset: 2432)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1218, line: 45, flags: DIFlagFwdDecl)
!1218 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1046, file: !918, line: 138, baseType: !1194, size: 384, offset: 2496)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1046, file: !918, line: 139, baseType: !1221, size: 64, offset: 2880)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1158, line: 80, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1158, line: 72, size: 192, elements: !1224)
!1224 = !{!1225, !1232, !1233, !1234, !1235}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1223, file: !1158, line: 73, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1158, line: 59, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1158, line: 56, size: 128, elements: !1229)
!1229 = !{!1230, !1231}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1228, file: !1158, line: 57, baseType: !1185, size: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1228, file: !1158, line: 58, baseType: !1085, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1223, file: !1158, line: 74, baseType: !1085, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1223, file: !1158, line: 76, baseType: !1085, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1223, file: !1158, line: 77, baseType: !1085, size: 32, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1223, file: !1158, line: 79, baseType: !1085, size: 32, offset: 160)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1046, file: !918, line: 141, baseType: !1110, size: 128, offset: 2944)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1046, file: !918, line: 142, baseType: !1110, size: 128, offset: 3072)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1046, file: !918, line: 143, baseType: !1110, size: 128, offset: 3200)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1046, file: !918, line: 144, baseType: !1110, size: 128, offset: 3328)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1046, file: !918, line: 146, baseType: !1085, size: 32, offset: 3456)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1046, file: !918, line: 147, baseType: !1085, size: 32, offset: 3488)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1046, file: !918, line: 150, baseType: !1243, size: 64, offset: 3520)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1246, line: 179, flags: DIFlagFwdDecl)
!1246 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1046, file: !918, line: 151, baseType: !1248, size: 64, offset: 3584)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1046, file: !918, line: 152, baseType: !1085, size: 32, offset: 3648)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1046, file: !918, line: 153, baseType: !1085, size: 32, offset: 3680)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1046, file: !918, line: 156, baseType: !1185, size: 96, offset: 3712)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1046, file: !918, line: 156, baseType: !1185, size: 96, offset: 3808)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1046, file: !918, line: 156, baseType: !1185, size: 96, offset: 3904)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1046, file: !918, line: 157, baseType: !1185, size: 96, offset: 4000)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1046, file: !918, line: 158, baseType: !1185, size: 96, offset: 4096)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1046, file: !918, line: 159, baseType: !1185, size: 96, offset: 4192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1046, file: !918, line: 160, baseType: !1185, size: 96, offset: 4288)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1046, file: !918, line: 160, baseType: !1185, size: 96, offset: 4384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1046, file: !918, line: 161, baseType: !1260, size: 128, offset: 4480)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 128, elements: !1261)
!1261 = !{!1262}
!1262 = !DISubrange(count: 4)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1046, file: !918, line: 161, baseType: !1260, size: 128, offset: 4608)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1046, file: !918, line: 162, baseType: !1185, size: 96, offset: 4736)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1046, file: !918, line: 162, baseType: !1185, size: 96, offset: 4832)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1046, file: !918, line: 163, baseType: !1149, size: 32, offset: 4928)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1046, file: !918, line: 163, baseType: !1149, size: 32, offset: 4960)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1046, file: !918, line: 164, baseType: !1269, size: 512, offset: 4992)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 512, elements: !1270)
!1270 = !{!1262, !1262}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1046, file: !918, line: 165, baseType: !1269, size: 512, offset: 5504)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1046, file: !918, line: 166, baseType: !1269, size: 512, offset: 6016)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1046, file: !918, line: 167, baseType: !1269, size: 512, offset: 6528)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1046, file: !918, line: 176, baseType: !1269, size: 512, offset: 7040)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1046, file: !918, line: 178, baseType: !5, size: 32, offset: 7552)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1046, file: !918, line: 180, baseType: !1083, size: 16, offset: 7584)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1046, file: !918, line: 181, baseType: !1083, size: 16, offset: 7600)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1046, file: !918, line: 183, baseType: !1083, size: 16, offset: 7616)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1046, file: !918, line: 183, baseType: !1083, size: 16, offset: 7632)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1046, file: !918, line: 184, baseType: !1083, size: 16, offset: 7648)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1046, file: !918, line: 184, baseType: !1083, size: 16, offset: 7664)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1046, file: !918, line: 185, baseType: !1083, size: 16, offset: 7680)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1046, file: !918, line: 186, baseType: !1083, size: 16, offset: 7696)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1046, file: !918, line: 187, baseType: !1083, size: 16, offset: 7712)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1046, file: !918, line: 188, baseType: !1070, size: 8, offset: 7728)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1046, file: !918, line: 189, baseType: !1070, size: 8, offset: 7736)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1046, file: !918, line: 192, baseType: !1085, size: 32, offset: 7744)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1046, file: !918, line: 192, baseType: !1085, size: 32, offset: 7776)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1046, file: !918, line: 192, baseType: !1085, size: 32, offset: 7808)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1046, file: !918, line: 192, baseType: !1085, size: 32, offset: 7840)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1046, file: !918, line: 194, baseType: !1085, size: 32, offset: 7872)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1046, file: !918, line: 202, baseType: !1149, size: 32, offset: 7904)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1046, file: !918, line: 202, baseType: !1149, size: 32, offset: 7936)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1046, file: !918, line: 202, baseType: !1149, size: 32, offset: 7968)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1046, file: !918, line: 211, baseType: !1149, size: 32, offset: 8000)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1046, file: !918, line: 212, baseType: !1149, size: 32, offset: 8032)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1046, file: !918, line: 213, baseType: !1149, size: 32, offset: 8064)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1046, file: !918, line: 214, baseType: !1149, size: 32, offset: 8096)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1046, file: !918, line: 215, baseType: !1149, size: 32, offset: 8128)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1046, file: !918, line: 216, baseType: !1149, size: 32, offset: 8160)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1046, file: !918, line: 219, baseType: !1149, size: 32, offset: 8192)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1046, file: !918, line: 220, baseType: !1149, size: 32, offset: 8224)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1046, file: !918, line: 221, baseType: !1149, size: 32, offset: 8256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1046, file: !918, line: 224, baseType: !1305, size: 16, offset: 8288)
!1305 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1046, file: !918, line: 224, baseType: !1305, size: 16, offset: 8304)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1046, file: !918, line: 226, baseType: !1083, size: 16, offset: 8320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1046, file: !918, line: 228, baseType: !1070, size: 8, offset: 8336)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1046, file: !918, line: 229, baseType: !1070, size: 8, offset: 8344)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1046, file: !918, line: 231, baseType: !1083, size: 16, offset: 8352)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1046, file: !918, line: 232, baseType: !1070, size: 8, offset: 8368)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1046, file: !918, line: 233, baseType: !1070, size: 8, offset: 8376)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1046, file: !918, line: 234, baseType: !1149, size: 32, offset: 8384)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1046, file: !918, line: 235, baseType: !1149, size: 32, offset: 8416)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1046, file: !918, line: 237, baseType: !1110, size: 128, offset: 8448)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1046, file: !918, line: 238, baseType: !1110, size: 128, offset: 8576)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1046, file: !918, line: 239, baseType: !1110, size: 128, offset: 8704)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1046, file: !918, line: 240, baseType: !1110, size: 128, offset: 8832)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1046, file: !918, line: 242, baseType: !1149, size: 32, offset: 8960)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1046, file: !918, line: 244, baseType: !1083, size: 16, offset: 8992)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1046, file: !918, line: 245, baseType: !1305, size: 16, offset: 9008)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1046, file: !918, line: 246, baseType: !1260, size: 128, offset: 9024)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1046, file: !918, line: 248, baseType: !1085, size: 32, offset: 9152)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1046, file: !918, line: 249, baseType: !1085, size: 32, offset: 9184)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1046, file: !918, line: 251, baseType: !1326, size: 64, offset: 9216)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !918, line: 251, flags: DIFlagFwdDecl)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1046, file: !918, line: 253, baseType: !1070, size: 8, offset: 9280)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1046, file: !918, line: 254, baseType: !1070, size: 8, offset: 9288)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1046, file: !918, line: 255, baseType: !1083, size: 16, offset: 9296)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1046, file: !918, line: 256, baseType: !1185, size: 96, offset: 9312)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1046, file: !918, line: 258, baseType: !1110, size: 128, offset: 9408)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1046, file: !918, line: 259, baseType: !1110, size: 128, offset: 9536)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1046, file: !918, line: 260, baseType: !1110, size: 128, offset: 9664)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1046, file: !918, line: 261, baseType: !1110, size: 128, offset: 9792)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1046, file: !918, line: 263, baseType: !1337, size: 64, offset: 9920)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !918, line: 52, flags: DIFlagFwdDecl)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1046, file: !918, line: 264, baseType: !1340, size: 64, offset: 9984)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !918, line: 53, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1046, file: !918, line: 265, baseType: !1343, size: 64, offset: 10048)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1345, line: 40, flags: DIFlagFwdDecl)
!1345 = !DIFile(filename: "blender/source/blender/makesdna/DNA_actuator_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1046, file: !918, line: 267, baseType: !1070, size: 8, offset: 10112)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1046, file: !918, line: 268, baseType: !1070, size: 8, offset: 10120)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1046, file: !918, line: 269, baseType: !1083, size: 16, offset: 10128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1046, file: !918, line: 270, baseType: !1149, size: 32, offset: 10144)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1046, file: !918, line: 272, baseType: !1351, size: 64, offset: 10176)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !918, line: 54, flags: DIFlagFwdDecl)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1046, file: !918, line: 275, baseType: !1354, size: 64, offset: 10240)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !918, line: 275, flags: DIFlagFwdDecl)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1046, file: !918, line: 277, baseType: !1357, size: 64, offset: 10304)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !918, line: 56, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1046, file: !918, line: 277, baseType: !1357, size: 64, offset: 10368)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1046, file: !918, line: 278, baseType: !1361, size: 64, offset: 10432)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1362, line: 27, baseType: !1363)
!1362 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1364, line: 45, baseType: !1365)
!1364 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1365 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1046, file: !918, line: 279, baseType: !1361, size: 64, offset: 10496)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1046, file: !918, line: 280, baseType: !5, size: 32, offset: 10560)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1046, file: !918, line: 281, baseType: !5, size: 32, offset: 10592)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1046, file: !918, line: 283, baseType: !1110, size: 128, offset: 10624)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1046, file: !918, line: 284, baseType: !1110, size: 128, offset: 10752)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1046, file: !918, line: 285, baseType: !1372, size: 64, offset: 10880)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1046, file: !918, line: 287, baseType: !1374, size: 64, offset: 10944)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !918, line: 59, flags: DIFlagFwdDecl)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1046, file: !918, line: 288, baseType: !1377, size: 64, offset: 11008)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !918, line: 288, flags: DIFlagFwdDecl)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1046, file: !918, line: 290, baseType: !1380, size: 64, offset: 11072)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 64, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 2)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1046, file: !918, line: 291, baseType: !1384, size: 64, offset: 11136)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1386, line: 65, baseType: !1387)
!1386 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1386, line: 50, size: 320, elements: !1388)
!1388 = !{!1389, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1387, file: !1386, line: 51, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1246, line: 1216, size: 39680, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1399, !1400, !1401, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1427, !1500, !1924, !2139, !2142, !2430, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2452, !2453, !2454, !2455, !2456, !2464, !2531, !2538, !2539, !2546, !2547, !2548, !2549, !2550, !2551, !2552}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1391, file: !1246, line: 1217, baseType: !1049, size: 960)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1391, file: !1246, line: 1218, baseType: !1121, size: 64, offset: 960)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1391, file: !1246, line: 1220, baseType: !1134, size: 64, offset: 1024)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1391, file: !1246, line: 1221, baseType: !1397, size: 64, offset: 1088)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1246, line: 52, flags: DIFlagFwdDecl)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1391, file: !1246, line: 1223, baseType: !1390, size: 64, offset: 1152)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1391, file: !1246, line: 1225, baseType: !1110, size: 128, offset: 1216)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1391, file: !1246, line: 1226, baseType: !1402, size: 64, offset: 1344)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1246, line: 69, size: 320, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1403, file: !1246, line: 70, baseType: !1402, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1403, file: !1246, line: 70, baseType: !1402, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1403, file: !1246, line: 71, baseType: !5, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1403, file: !1246, line: 71, baseType: !5, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1403, file: !1246, line: 72, baseType: !1085, size: 32, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1403, file: !1246, line: 73, baseType: !1083, size: 16, offset: 224)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1403, file: !1246, line: 73, baseType: !1083, size: 16, offset: 240)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1403, file: !1246, line: 74, baseType: !1134, size: 64, offset: 256)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1391, file: !1246, line: 1227, baseType: !1134, size: 64, offset: 1408)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1391, file: !1246, line: 1229, baseType: !1185, size: 96, offset: 1472)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1391, file: !1246, line: 1230, baseType: !1185, size: 96, offset: 1568)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1391, file: !1246, line: 1231, baseType: !1185, size: 96, offset: 1664)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1391, file: !1246, line: 1231, baseType: !1185, size: 96, offset: 1760)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1391, file: !1246, line: 1233, baseType: !5, size: 32, offset: 1856)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1391, file: !1246, line: 1234, baseType: !1085, size: 32, offset: 1888)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1391, file: !1246, line: 1235, baseType: !5, size: 32, offset: 1920)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1391, file: !1246, line: 1237, baseType: !1083, size: 16, offset: 1952)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1391, file: !1246, line: 1239, baseType: !1070, size: 8, offset: 1968)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1391, file: !1246, line: 1240, baseType: !1424, size: 8, offset: 1976)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 8, elements: !1425)
!1425 = !{!1426}
!1426 = !DISubrange(count: 1)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1391, file: !1246, line: 1242, baseType: !1428, size: 64, offset: 1984)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1430, line: 328, size: 3456, elements: !1431)
!1430 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1431 = !{!1432, !1433, !1434, !1437, !1438, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1466, !1467, !1468, !1471, !1476, !1477, !1480, !1484, !1488, !1492, !1496, !1497, !1498, !1499}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1429, file: !1430, line: 329, baseType: !1049, size: 960)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1429, file: !1430, line: 330, baseType: !1121, size: 64, offset: 960)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1429, file: !1430, line: 332, baseType: !1435, size: 64, offset: 1024)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1430, line: 332, flags: DIFlagFwdDecl)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1429, file: !1430, line: 333, baseType: !1100, size: 512, offset: 1088)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1429, file: !1430, line: 335, baseType: !1439, size: 64, offset: 1600)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1430, line: 335, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1429, file: !1430, line: 337, baseType: !1216, size: 64, offset: 1664)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1429, file: !1430, line: 338, baseType: !1380, size: 64, offset: 1728)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1429, file: !1430, line: 340, baseType: !1110, size: 128, offset: 1792)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1429, file: !1430, line: 340, baseType: !1110, size: 128, offset: 1920)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1429, file: !1430, line: 342, baseType: !1085, size: 32, offset: 2048)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1429, file: !1430, line: 342, baseType: !1085, size: 32, offset: 2080)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1429, file: !1430, line: 343, baseType: !1085, size: 32, offset: 2112)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1429, file: !1430, line: 345, baseType: !1085, size: 32, offset: 2144)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1429, file: !1430, line: 346, baseType: !1085, size: 32, offset: 2176)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1429, file: !1430, line: 347, baseType: !1083, size: 16, offset: 2208)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1429, file: !1430, line: 348, baseType: !1083, size: 16, offset: 2224)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1429, file: !1430, line: 349, baseType: !1085, size: 32, offset: 2240)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1429, file: !1430, line: 351, baseType: !1085, size: 32, offset: 2272)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1429, file: !1430, line: 353, baseType: !1083, size: 16, offset: 2304)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1429, file: !1430, line: 354, baseType: !1083, size: 16, offset: 2320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1429, file: !1430, line: 355, baseType: !1085, size: 32, offset: 2336)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1429, file: !1430, line: 357, baseType: !1458, size: 128, offset: 2368)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1459, line: 95, baseType: !1460)
!1459 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1459, line: 92, size: 128, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1460, file: !1459, line: 93, baseType: !1149, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1460, file: !1459, line: 93, baseType: !1149, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1460, file: !1459, line: 94, baseType: !1149, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1460, file: !1459, line: 94, baseType: !1149, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1429, file: !1430, line: 363, baseType: !1110, size: 128, offset: 2496)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1429, file: !1430, line: 363, baseType: !1110, size: 128, offset: 2624)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1429, file: !1430, line: 368, baseType: !1469, size: 64, offset: 2752)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1430, line: 48, flags: DIFlagFwdDecl)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1429, file: !1430, line: 372, baseType: !1472, size: 32, offset: 2816)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1430, line: 274, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1430, line: 271, size: 32, elements: !1474)
!1474 = !{!1475}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1473, file: !1430, line: 273, baseType: !5, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1429, file: !1430, line: 373, baseType: !1085, size: 32, offset: 2848)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1429, file: !1430, line: 382, baseType: !1478, size: 64, offset: 2880)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1430, line: 46, flags: DIFlagFwdDecl)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1429, file: !1430, line: 385, baseType: !1481, size: 64, offset: 2944)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{null, !1054, !1149}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1429, file: !1430, line: 386, baseType: !1485, size: 64, offset: 3008)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{null, !1054, !1248}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1429, file: !1430, line: 387, baseType: !1489, size: 64, offset: 3072)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!1085, !1054}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1429, file: !1430, line: 388, baseType: !1493, size: 64, offset: 3136)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{null, !1054}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1429, file: !1430, line: 389, baseType: !1054, size: 64, offset: 3200)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1429, file: !1430, line: 389, baseType: !1054, size: 64, offset: 3264)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1429, file: !1430, line: 389, baseType: !1054, size: 64, offset: 3328)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1429, file: !1430, line: 389, baseType: !1054, size: 64, offset: 3392)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1391, file: !1246, line: 1244, baseType: !1501, size: 64, offset: 2048)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1142, line: 200, size: 17024, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1502, file: !1142, line: 201, baseType: !1372, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1502, file: !1142, line: 202, baseType: !1110, size: 128, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1502, file: !1142, line: 203, baseType: !1110, size: 128, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1502, file: !1142, line: 206, baseType: !1508, size: 64, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1142, line: 190, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1142, line: 126, size: 2816, elements: !1511)
!1511 = !{!1512, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1610, !1611, !1612, !1613, !1889, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1916}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1510, file: !1142, line: 127, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1510, file: !1142, line: 127, baseType: !1513, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1510, file: !1142, line: 128, baseType: !1054, size: 64, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1510, file: !1142, line: 129, baseType: !1054, size: 64, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1510, file: !1142, line: 130, baseType: !1100, size: 512, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1510, file: !1142, line: 132, baseType: !1085, size: 32, offset: 768)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1510, file: !1142, line: 132, baseType: !1085, size: 32, offset: 800)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1510, file: !1142, line: 133, baseType: !1085, size: 32, offset: 832)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1510, file: !1142, line: 134, baseType: !1085, size: 32, offset: 864)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1510, file: !1142, line: 134, baseType: !1085, size: 32, offset: 896)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1510, file: !1142, line: 134, baseType: !1085, size: 32, offset: 928)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1510, file: !1142, line: 135, baseType: !1085, size: 32, offset: 960)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1510, file: !1142, line: 135, baseType: !1085, size: 32, offset: 992)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1510, file: !1142, line: 136, baseType: !1085, size: 32, offset: 1024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1510, file: !1142, line: 136, baseType: !1085, size: 32, offset: 1056)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1510, file: !1142, line: 137, baseType: !1085, size: 32, offset: 1088)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1510, file: !1142, line: 137, baseType: !1085, size: 32, offset: 1120)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1510, file: !1142, line: 138, baseType: !1149, size: 32, offset: 1152)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1510, file: !1142, line: 139, baseType: !1149, size: 32, offset: 1184)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1510, file: !1142, line: 139, baseType: !1149, size: 32, offset: 1216)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1510, file: !1142, line: 141, baseType: !1083, size: 16, offset: 1248)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1510, file: !1142, line: 142, baseType: !1083, size: 16, offset: 1264)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1510, file: !1142, line: 143, baseType: !1085, size: 32, offset: 1280)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1510, file: !1142, line: 144, baseType: !1085, size: 32, offset: 1312)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1510, file: !1142, line: 146, baseType: !1538, size: 64, offset: 1344)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1142, line: 114, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1142, line: 99, size: 7232, elements: !1541)
!1541 = !{!1542, !1544, !1545, !1546, !1547, !1548, !1549, !1560, !1564, !1578, !1587, !1594, !1604}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1540, file: !1142, line: 100, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1540, file: !1142, line: 100, baseType: !1543, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1540, file: !1142, line: 101, baseType: !1085, size: 32, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1540, file: !1142, line: 101, baseType: !1085, size: 32, offset: 160)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1540, file: !1142, line: 102, baseType: !1085, size: 32, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1540, file: !1142, line: 102, baseType: !1085, size: 32, offset: 224)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1540, file: !1142, line: 103, baseType: !1550, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1142, line: 59, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1142, line: 56, size: 2112, elements: !1553)
!1553 = !{!1554, !1558, !1559}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1552, file: !1142, line: 57, baseType: !1555, size: 2048)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 2048, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1552, file: !1142, line: 58, baseType: !1085, size: 32, offset: 2048)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1552, file: !1142, line: 58, baseType: !1085, size: 32, offset: 2080)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1540, file: !1142, line: 106, baseType: !1561, size: 6144, offset: 320)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 6144, elements: !1562)
!1562 = !{!1563}
!1563 = !DISubrange(count: 768)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1540, file: !1142, line: 107, baseType: !1565, size: 64, offset: 6464)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1142, line: 97, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1142, line: 83, size: 8320, elements: !1568)
!1568 = !{!1569, !1570, !1571, !1574, !1575, !1576, !1577}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1567, file: !1142, line: 84, baseType: !1561, size: 6144)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1567, file: !1142, line: 87, baseType: !1555, size: 2048, offset: 6144)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1567, file: !1142, line: 88, baseType: !1572, size: 64, offset: 8192)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1386, line: 41, flags: DIFlagFwdDecl)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1567, file: !1142, line: 90, baseType: !1083, size: 16, offset: 8256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1567, file: !1142, line: 92, baseType: !1083, size: 16, offset: 8272)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1567, file: !1142, line: 93, baseType: !1083, size: 16, offset: 8288)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1567, file: !1142, line: 95, baseType: !1083, size: 16, offset: 8304)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1540, file: !1142, line: 108, baseType: !1579, size: 64, offset: 6528)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1142, line: 66, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1142, line: 61, size: 128, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1581, file: !1142, line: 62, baseType: !1085, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1581, file: !1142, line: 63, baseType: !1085, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1581, file: !1142, line: 64, baseType: !1085, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1581, file: !1142, line: 65, baseType: !1085, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1540, file: !1142, line: 109, baseType: !1588, size: 64, offset: 6592)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1142, line: 71, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1142, line: 68, size: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1590, file: !1142, line: 69, baseType: !1085, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1590, file: !1142, line: 70, baseType: !1085, size: 32, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1540, file: !1142, line: 110, baseType: !1595, size: 64, offset: 6656)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1142, line: 81, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1142, line: 73, size: 352, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1597, file: !1142, line: 74, baseType: !1185, size: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1597, file: !1142, line: 75, baseType: !1185, size: 96, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1597, file: !1142, line: 76, baseType: !1185, size: 96, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1597, file: !1142, line: 77, baseType: !1085, size: 32, offset: 288)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1597, file: !1142, line: 78, baseType: !1085, size: 32, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1540, file: !1142, line: 113, baseType: !1605, size: 512, offset: 6720)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1606, line: 182, baseType: !1607)
!1606 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1606, line: 180, size: 512, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1607, file: !1606, line: 181, baseType: !1100, size: 512)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1510, file: !1142, line: 148, baseType: !1140, size: 64, offset: 1408)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1510, file: !1142, line: 151, baseType: !1390, size: 64, offset: 1472)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1510, file: !1142, line: 152, baseType: !1134, size: 64, offset: 1536)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1510, file: !1142, line: 153, baseType: !1614, size: 64, offset: 1600)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1123, line: 64, size: 19136, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1621, !1622, !1624, !1625, !1626, !1627, !1630, !1631, !1875, !1876, !1884, !1885, !1886, !1887, !1888}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1615, file: !1123, line: 65, baseType: !1049, size: 960)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1615, file: !1123, line: 66, baseType: !1121, size: 64, offset: 960)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1615, file: !1123, line: 68, baseType: !1069, size: 8192, offset: 1024)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1615, file: !1123, line: 70, baseType: !1085, size: 32, offset: 9216)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1615, file: !1123, line: 71, baseType: !1085, size: 32, offset: 9248)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1615, file: !1123, line: 72, baseType: !1623, size: 64, offset: 9280)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 64, elements: !1381)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1615, file: !1123, line: 74, baseType: !1149, size: 32, offset: 9344)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1615, file: !1123, line: 74, baseType: !1149, size: 32, offset: 9376)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1615, file: !1123, line: 76, baseType: !1572, size: 64, offset: 9408)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1615, file: !1123, line: 77, baseType: !1628, size: 64, offset: 9472)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1123, line: 77, flags: DIFlagFwdDecl)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1615, file: !1123, line: 78, baseType: !1216, size: 64, offset: 9536)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1615, file: !1123, line: 80, baseType: !1632, size: 2624, offset: 9600)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1218, line: 340, size: 2624, elements: !1633)
!1633 = !{!1634, !1662, !1680, !1681, !1682, !1697, !1755, !1756, !1855, !1856, !1857, !1858, !1864}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1632, file: !1218, line: 341, baseType: !1635, size: 576)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1218, line: 251, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1218, line: 207, size: 576, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1636, file: !1218, line: 208, baseType: !1085, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1636, file: !1218, line: 211, baseType: !1083, size: 16, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1636, file: !1218, line: 212, baseType: !1083, size: 16, offset: 48)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1636, file: !1218, line: 213, baseType: !1149, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1636, file: !1218, line: 214, baseType: !1083, size: 16, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1636, file: !1218, line: 215, baseType: !1083, size: 16, offset: 112)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1636, file: !1218, line: 216, baseType: !1083, size: 16, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1636, file: !1218, line: 217, baseType: !1083, size: 16, offset: 144)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1636, file: !1218, line: 218, baseType: !1083, size: 16, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1636, file: !1218, line: 219, baseType: !1083, size: 16, offset: 176)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1636, file: !1218, line: 220, baseType: !1149, size: 32, offset: 192)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1636, file: !1218, line: 222, baseType: !1083, size: 16, offset: 224)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1636, file: !1218, line: 225, baseType: !1083, size: 16, offset: 240)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1636, file: !1218, line: 228, baseType: !1085, size: 32, offset: 256)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1636, file: !1218, line: 229, baseType: !1085, size: 32, offset: 288)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1636, file: !1218, line: 233, baseType: !1085, size: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1636, file: !1218, line: 236, baseType: !1083, size: 16, offset: 352)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1636, file: !1218, line: 236, baseType: !1083, size: 16, offset: 368)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1636, file: !1218, line: 241, baseType: !1149, size: 32, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1636, file: !1218, line: 244, baseType: !1085, size: 32, offset: 416)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1636, file: !1218, line: 244, baseType: !1085, size: 32, offset: 448)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1636, file: !1218, line: 245, baseType: !1149, size: 32, offset: 480)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1636, file: !1218, line: 248, baseType: !1149, size: 32, offset: 512)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1636, file: !1218, line: 250, baseType: !1085, size: 32, offset: 544)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1632, file: !1218, line: 342, baseType: !1663, size: 448, offset: 576)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1218, line: 79, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1218, line: 61, size: 448, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1664, file: !1218, line: 62, baseType: !1054, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1664, file: !1218, line: 64, baseType: !1083, size: 16, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1664, file: !1218, line: 65, baseType: !1083, size: 16, offset: 80)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1664, file: !1218, line: 67, baseType: !1149, size: 32, offset: 96)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1664, file: !1218, line: 68, baseType: !1149, size: 32, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1664, file: !1218, line: 69, baseType: !1149, size: 32, offset: 160)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1664, file: !1218, line: 70, baseType: !1083, size: 16, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1664, file: !1218, line: 71, baseType: !1083, size: 16, offset: 208)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1664, file: !1218, line: 72, baseType: !1380, size: 64, offset: 224)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1664, file: !1218, line: 75, baseType: !1149, size: 32, offset: 288)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1664, file: !1218, line: 75, baseType: !1149, size: 32, offset: 320)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1664, file: !1218, line: 75, baseType: !1149, size: 32, offset: 352)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1664, file: !1218, line: 78, baseType: !1149, size: 32, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1664, file: !1218, line: 78, baseType: !1149, size: 32, offset: 416)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1632, file: !1218, line: 343, baseType: !1110, size: 128, offset: 1024)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1632, file: !1218, line: 344, baseType: !1110, size: 128, offset: 1152)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1632, file: !1218, line: 345, baseType: !1683, size: 192, offset: 1280)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1218, line: 278, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1218, line: 270, size: 192, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1684, file: !1218, line: 271, baseType: !1085, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1684, file: !1218, line: 273, baseType: !1149, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1684, file: !1218, line: 275, baseType: !1085, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1684, file: !1218, line: 276, baseType: !1085, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1684, file: !1218, line: 277, baseType: !1691, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1218, line: 55, size: 576, elements: !1693)
!1693 = !{!1694, !1695, !1696}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1692, file: !1218, line: 56, baseType: !1085, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1692, file: !1218, line: 57, baseType: !1149, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1692, file: !1218, line: 58, baseType: !1269, size: 512, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1632, file: !1218, line: 346, baseType: !1698, size: 384, offset: 1472)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1218, line: 268, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1218, line: 253, size: 384, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1749, !1750, !1751, !1752, !1753, !1754}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1699, file: !1218, line: 254, baseType: !1085, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1699, file: !1218, line: 255, baseType: !1085, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1699, file: !1218, line: 255, baseType: !1085, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1699, file: !1218, line: 258, baseType: !1149, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1699, file: !1218, line: 259, baseType: !1706, size: 64, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1218, line: 164, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1218, line: 108, size: 1664, elements: !1709)
!1709 = !{!1710, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1708, file: !1218, line: 109, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1708, file: !1218, line: 109, baseType: !1711, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1708, file: !1218, line: 111, baseType: !1100, size: 512, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1708, file: !1218, line: 119, baseType: !1380, size: 64, offset: 640)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1708, file: !1218, line: 119, baseType: !1380, size: 64, offset: 704)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1708, file: !1218, line: 125, baseType: !1380, size: 64, offset: 768)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1708, file: !1218, line: 125, baseType: !1380, size: 64, offset: 832)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1708, file: !1218, line: 127, baseType: !1380, size: 64, offset: 896)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1708, file: !1218, line: 130, baseType: !1085, size: 32, offset: 960)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1708, file: !1218, line: 131, baseType: !1085, size: 32, offset: 992)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1708, file: !1218, line: 132, baseType: !1722, size: 64, offset: 1024)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1218, line: 106, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1218, line: 81, size: 512, elements: !1725)
!1725 = !{!1726, !1727, !1730, !1731, !1732, !1733}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1724, file: !1218, line: 82, baseType: !1380, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1724, file: !1218, line: 97, baseType: !1728, size: 256, offset: 64)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 256, elements: !1729)
!1729 = !{!1262, !1382}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1724, file: !1218, line: 102, baseType: !1380, size: 64, offset: 320)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1724, file: !1218, line: 102, baseType: !1380, size: 64, offset: 384)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1724, file: !1218, line: 104, baseType: !1085, size: 32, offset: 448)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1724, file: !1218, line: 105, baseType: !1085, size: 32, offset: 480)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1708, file: !1218, line: 135, baseType: !1185, size: 96, offset: 1088)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1708, file: !1218, line: 136, baseType: !1149, size: 32, offset: 1184)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1708, file: !1218, line: 139, baseType: !1085, size: 32, offset: 1216)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1708, file: !1218, line: 139, baseType: !1085, size: 32, offset: 1248)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1708, file: !1218, line: 139, baseType: !1085, size: 32, offset: 1280)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1708, file: !1218, line: 140, baseType: !1185, size: 96, offset: 1312)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1708, file: !1218, line: 143, baseType: !1083, size: 16, offset: 1408)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1708, file: !1218, line: 144, baseType: !1083, size: 16, offset: 1424)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1708, file: !1218, line: 145, baseType: !1083, size: 16, offset: 1440)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1708, file: !1218, line: 148, baseType: !1083, size: 16, offset: 1456)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1708, file: !1218, line: 149, baseType: !1085, size: 32, offset: 1472)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1708, file: !1218, line: 150, baseType: !1149, size: 32, offset: 1504)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1708, file: !1218, line: 152, baseType: !1216, size: 64, offset: 1536)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1708, file: !1218, line: 163, baseType: !1149, size: 32, offset: 1600)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1708, file: !1218, line: 163, baseType: !1149, size: 32, offset: 1632)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1699, file: !1218, line: 261, baseType: !1149, size: 32, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1699, file: !1218, line: 261, baseType: !1149, size: 32, offset: 224)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1699, file: !1218, line: 261, baseType: !1149, size: 32, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1699, file: !1218, line: 263, baseType: !1085, size: 32, offset: 288)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1699, file: !1218, line: 266, baseType: !1085, size: 32, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1699, file: !1218, line: 267, baseType: !1149, size: 32, offset: 352)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1632, file: !1218, line: 347, baseType: !1706, size: 64, offset: 1856)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1632, file: !1218, line: 348, baseType: !1757, size: 64, offset: 1920)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1218, line: 205, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1218, line: 186, size: 1024, elements: !1760)
!1760 = !{!1761, !1763, !1764, !1765, !1767, !1768, !1769, !1777, !1778, !1779, !1853, !1854}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1759, file: !1218, line: 187, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1759, file: !1218, line: 187, baseType: !1762, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1759, file: !1218, line: 189, baseType: !1100, size: 512, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1759, file: !1218, line: 191, baseType: !1766, size: 64, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1759, file: !1218, line: 193, baseType: !1085, size: 32, offset: 704)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1759, file: !1218, line: 193, baseType: !1085, size: 32, offset: 736)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1759, file: !1218, line: 195, baseType: !1770, size: 64, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1218, line: 184, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1218, line: 166, size: 320, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1772, file: !1218, line: 180, baseType: !1728, size: 256)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1772, file: !1218, line: 182, baseType: !1085, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1772, file: !1218, line: 183, baseType: !1085, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1759, file: !1218, line: 196, baseType: !1085, size: 32, offset: 832)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1759, file: !1218, line: 198, baseType: !1085, size: 32, offset: 864)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1759, file: !1218, line: 200, baseType: !1780, size: 64, offset: 896)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1386, line: 77, size: 15424, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1788, !1791, !1792, !1795, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1814, !1815, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1847}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1781, file: !1386, line: 78, baseType: !1049, size: 960)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1781, file: !1386, line: 80, baseType: !1069, size: 8192, offset: 960)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1781, file: !1386, line: 82, baseType: !1786, size: 64, offset: 9152)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1386, line: 43, flags: DIFlagFwdDecl)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1781, file: !1386, line: 83, baseType: !1789, size: 64, offset: 9216)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1050, line: 46, flags: DIFlagFwdDecl)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1781, file: !1386, line: 86, baseType: !1572, size: 64, offset: 9280)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1781, file: !1386, line: 87, baseType: !1793, size: 64, offset: 9344)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1386, line: 44, flags: DIFlagFwdDecl)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1781, file: !1386, line: 89, baseType: !1796, size: 512, offset: 9408)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 512, elements: !1797)
!1797 = !{!1151}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1781, file: !1386, line: 90, baseType: !1083, size: 16, offset: 9920)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1781, file: !1386, line: 90, baseType: !1083, size: 16, offset: 9936)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1781, file: !1386, line: 92, baseType: !1083, size: 16, offset: 9952)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1781, file: !1386, line: 92, baseType: !1083, size: 16, offset: 9968)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1781, file: !1386, line: 93, baseType: !1083, size: 16, offset: 9984)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1781, file: !1386, line: 93, baseType: !1083, size: 16, offset: 10000)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1781, file: !1386, line: 94, baseType: !1085, size: 32, offset: 10016)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1781, file: !1386, line: 97, baseType: !1083, size: 16, offset: 10048)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1781, file: !1386, line: 97, baseType: !1083, size: 16, offset: 10064)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1781, file: !1386, line: 98, baseType: !1083, size: 16, offset: 10080)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1781, file: !1386, line: 98, baseType: !1083, size: 16, offset: 10096)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1781, file: !1386, line: 99, baseType: !1083, size: 16, offset: 10112)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1781, file: !1386, line: 99, baseType: !1083, size: 16, offset: 10128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1781, file: !1386, line: 100, baseType: !5, size: 32, offset: 10144)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1781, file: !1386, line: 101, baseType: !1813, size: 64, offset: 10176)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1781, file: !1386, line: 103, baseType: !1076, size: 64, offset: 10240)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1781, file: !1386, line: 104, baseType: !1816, size: 64, offset: 10304)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1050, line: 159, size: 448, elements: !1818)
!1818 = !{!1819, !1821, !1822, !1824, !1825, !1827}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1817, file: !1050, line: 161, baseType: !1820, size: 64)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1381)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1817, file: !1050, line: 162, baseType: !1820, size: 64, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1817, file: !1050, line: 163, baseType: !1823, size: 32, offset: 128)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 32, elements: !1381)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1817, file: !1050, line: 164, baseType: !1823, size: 32, offset: 160)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1817, file: !1050, line: 165, baseType: !1826, size: 128, offset: 192)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1813, size: 128, elements: !1381)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1817, file: !1050, line: 166, baseType: !1828, size: 128, offset: 320)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1789, size: 128, elements: !1381)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1781, file: !1386, line: 107, baseType: !1149, size: 32, offset: 10368)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1781, file: !1386, line: 108, baseType: !1085, size: 32, offset: 10400)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1781, file: !1386, line: 109, baseType: !1083, size: 16, offset: 10432)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1781, file: !1386, line: 110, baseType: !1083, size: 16, offset: 10448)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1781, file: !1386, line: 113, baseType: !1085, size: 32, offset: 10464)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1781, file: !1386, line: 113, baseType: !1085, size: 32, offset: 10496)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1781, file: !1386, line: 114, baseType: !1070, size: 8, offset: 10528)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1781, file: !1386, line: 114, baseType: !1070, size: 8, offset: 10536)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1781, file: !1386, line: 115, baseType: !1083, size: 16, offset: 10544)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1781, file: !1386, line: 116, baseType: !1260, size: 128, offset: 10560)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1781, file: !1386, line: 119, baseType: !1149, size: 32, offset: 10688)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1781, file: !1386, line: 119, baseType: !1149, size: 32, offset: 10720)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1781, file: !1386, line: 122, baseType: !1605, size: 512, offset: 10752)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1781, file: !1386, line: 123, baseType: !1070, size: 8, offset: 11264)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1781, file: !1386, line: 125, baseType: !1844, size: 56, offset: 11272)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 56, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 7)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1781, file: !1386, line: 126, baseType: !1848, size: 4096, offset: 11328)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 4096, elements: !1797)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1386, line: 69, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1386, line: 67, size: 512, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1850, file: !1386, line: 68, baseType: !1100, size: 512)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1759, file: !1218, line: 201, baseType: !1149, size: 32, offset: 960)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1759, file: !1218, line: 204, baseType: !1085, size: 32, offset: 992)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1632, file: !1218, line: 350, baseType: !1110, size: 128, offset: 1984)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1632, file: !1218, line: 351, baseType: !1085, size: 32, offset: 2112)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1632, file: !1218, line: 351, baseType: !1085, size: 32, offset: 2144)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1632, file: !1218, line: 353, baseType: !1859, size: 64, offset: 2176)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1218, line: 297, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1218, line: 295, size: 2048, elements: !1862)
!1862 = !{!1863}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1861, file: !1218, line: 296, baseType: !1555, size: 2048)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1632, file: !1218, line: 355, baseType: !1865, size: 384, offset: 2240)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1218, line: 338, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1218, line: 322, size: 384, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1866, file: !1218, line: 323, baseType: !1085, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1866, file: !1218, line: 325, baseType: !1083, size: 16, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1866, file: !1218, line: 326, baseType: !1083, size: 16, offset: 48)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1866, file: !1218, line: 331, baseType: !1110, size: 128, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1866, file: !1218, line: 334, baseType: !1110, size: 128, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1866, file: !1218, line: 335, baseType: !1085, size: 32, offset: 320)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1866, file: !1218, line: 337, baseType: !1085, size: 32, offset: 352)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1615, file: !1123, line: 81, baseType: !1054, size: 64, offset: 12224)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1615, file: !1123, line: 85, baseType: !1877, size: 6208, offset: 12288)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1123, line: 55, size: 6208, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1877, file: !1123, line: 56, baseType: !1561, size: 6144)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1877, file: !1123, line: 58, baseType: !1083, size: 16, offset: 6144)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1877, file: !1123, line: 59, baseType: !1083, size: 16, offset: 6160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1877, file: !1123, line: 60, baseType: !1083, size: 16, offset: 6176)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1877, file: !1123, line: 61, baseType: !1083, size: 16, offset: 6192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1615, file: !1123, line: 86, baseType: !1085, size: 32, offset: 18496)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1615, file: !1123, line: 88, baseType: !1085, size: 32, offset: 18528)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1615, file: !1123, line: 90, baseType: !1085, size: 32, offset: 18560)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1615, file: !1123, line: 94, baseType: !1085, size: 32, offset: 18592)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1615, file: !1123, line: 100, baseType: !1605, size: 512, offset: 18624)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1510, file: !1142, line: 154, baseType: !1890, size: 64, offset: 1664)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1142, line: 154, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1510, file: !1142, line: 156, baseType: !1572, size: 64, offset: 1728)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1510, file: !1142, line: 158, baseType: !1149, size: 32, offset: 1792)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1510, file: !1142, line: 159, baseType: !1149, size: 32, offset: 1824)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1510, file: !1142, line: 162, baseType: !1513, size: 64, offset: 1856)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1510, file: !1142, line: 162, baseType: !1513, size: 64, offset: 1920)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1510, file: !1142, line: 162, baseType: !1513, size: 64, offset: 1984)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1510, file: !1142, line: 164, baseType: !1110, size: 128, offset: 2048)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1510, file: !1142, line: 166, baseType: !1900, size: 64, offset: 2176)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1345, line: 83, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1510, file: !1142, line: 167, baseType: !1054, size: 64, offset: 2240)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1510, file: !1142, line: 168, baseType: !1149, size: 32, offset: 2304)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1510, file: !1142, line: 170, baseType: !1149, size: 32, offset: 2336)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1510, file: !1142, line: 170, baseType: !1149, size: 32, offset: 2368)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1510, file: !1142, line: 171, baseType: !1149, size: 32, offset: 2400)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1510, file: !1142, line: 173, baseType: !1054, size: 64, offset: 2432)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1510, file: !1142, line: 175, baseType: !1085, size: 32, offset: 2496)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1510, file: !1142, line: 176, baseType: !1085, size: 32, offset: 2528)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1510, file: !1142, line: 179, baseType: !1085, size: 32, offset: 2560)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1510, file: !1142, line: 180, baseType: !1149, size: 32, offset: 2592)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1510, file: !1142, line: 183, baseType: !1085, size: 32, offset: 2624)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1510, file: !1142, line: 185, baseType: !1070, size: 8, offset: 2656)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1510, file: !1142, line: 186, baseType: !1915, size: 24, offset: 2664)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 24, elements: !1186)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1510, file: !1142, line: 189, baseType: !1110, size: 128, offset: 2688)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1502, file: !1142, line: 207, baseType: !1069, size: 8192, offset: 384)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1502, file: !1142, line: 208, baseType: !1069, size: 8192, offset: 8576)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1502, file: !1142, line: 210, baseType: !1085, size: 32, offset: 16768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1502, file: !1142, line: 210, baseType: !1085, size: 32, offset: 16800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1502, file: !1142, line: 211, baseType: !1085, size: 32, offset: 16832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1502, file: !1142, line: 211, baseType: !1085, size: 32, offset: 16864)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1502, file: !1142, line: 212, baseType: !1458, size: 128, offset: 16896)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1391, file: !1246, line: 1246, baseType: !1925, size: 64, offset: 2112)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1246, line: 1067, size: 5184, elements: !1927)
!1927 = !{!1928, !1958, !1959, !1974, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1996, !2012, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2122}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1926, file: !1246, line: 1068, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1246, line: 934, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1246, line: 925, size: 576, elements: !1932)
!1932 = !{!1933, !1950, !1951, !1952, !1953, !1954, !1957}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1931, file: !1246, line: 926, baseType: !1934, size: 320)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1246, line: 830, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1246, line: 813, size: 320, elements: !1936)
!1936 = !{!1937, !1940, !1943, !1944, !1947, !1948, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1935, file: !1246, line: 814, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1246, line: 51, flags: DIFlagFwdDecl)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1935, file: !1246, line: 815, baseType: !1941, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1246, line: 815, flags: DIFlagFwdDecl)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1935, file: !1246, line: 818, baseType: !1054, size: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1935, file: !1246, line: 819, baseType: !1945, size: 32, offset: 192)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 32, elements: !1261)
!1946 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1935, file: !1246, line: 822, baseType: !1085, size: 32, offset: 224)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1935, file: !1246, line: 826, baseType: !1085, size: 32, offset: 256)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1935, file: !1246, line: 829, baseType: !1085, size: 32, offset: 288)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1931, file: !1246, line: 928, baseType: !1083, size: 16, offset: 320)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1931, file: !1246, line: 928, baseType: !1083, size: 16, offset: 336)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1931, file: !1246, line: 929, baseType: !1085, size: 32, offset: 352)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1931, file: !1246, line: 930, baseType: !1813, size: 64, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1931, file: !1246, line: 931, baseType: !1955, size: 64, offset: 448)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1246, line: 931, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1931, file: !1246, line: 933, baseType: !1054, size: 64, offset: 512)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1926, file: !1246, line: 1069, baseType: !1929, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1926, file: !1246, line: 1070, baseType: !1960, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1246, line: 916, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1246, line: 891, size: 704, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1968, !1969, !1970, !1971, !1972, !1973}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1962, file: !1246, line: 892, baseType: !1934, size: 320)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1962, file: !1246, line: 896, baseType: !1085, size: 32, offset: 320)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1962, file: !1246, line: 900, baseType: !1967, size: 96, offset: 352)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 96, elements: !1186)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1962, file: !1246, line: 903, baseType: !1149, size: 32, offset: 448)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1962, file: !1246, line: 906, baseType: !1085, size: 32, offset: 480)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1962, file: !1246, line: 909, baseType: !1149, size: 32, offset: 512)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1962, file: !1246, line: 912, baseType: !1149, size: 32, offset: 544)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1962, file: !1246, line: 914, baseType: !1134, size: 64, offset: 576)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1962, file: !1246, line: 915, baseType: !1054, size: 64, offset: 640)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1926, file: !1246, line: 1071, baseType: !1975, size: 64, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1246, line: 920, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1246, line: 918, size: 320, elements: !1978)
!1978 = !{!1979}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1977, file: !1246, line: 919, baseType: !1934, size: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1926, file: !1246, line: 1075, baseType: !1149, size: 32, offset: 256)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1926, file: !1246, line: 1077, baseType: !1149, size: 32, offset: 288)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1926, file: !1246, line: 1078, baseType: !1149, size: 32, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1926, file: !1246, line: 1079, baseType: !1083, size: 16, offset: 352)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1926, file: !1246, line: 1082, baseType: !1083, size: 16, offset: 368)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1926, file: !1246, line: 1085, baseType: !1070, size: 8, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1926, file: !1246, line: 1086, baseType: !1070, size: 8, offset: 392)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1926, file: !1246, line: 1087, baseType: !1070, size: 8, offset: 400)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1926, file: !1246, line: 1088, baseType: !1070, size: 8, offset: 408)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1926, file: !1246, line: 1090, baseType: !1149, size: 32, offset: 416)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1926, file: !1246, line: 1093, baseType: !1083, size: 16, offset: 448)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1926, file: !1246, line: 1096, baseType: !1070, size: 8, offset: 464)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1926, file: !1246, line: 1098, baseType: !1993, size: 40, offset: 472)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 40, elements: !1994)
!1994 = !{!1995}
!1995 = !DISubrange(count: 5)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1926, file: !1246, line: 1101, baseType: !1997, size: 832, offset: 512)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1246, line: 836, size: 832, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1997, file: !1246, line: 837, baseType: !1934, size: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1997, file: !1246, line: 839, baseType: !1083, size: 16, offset: 320)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1997, file: !1246, line: 839, baseType: !1083, size: 16, offset: 336)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1997, file: !1246, line: 842, baseType: !1083, size: 16, offset: 352)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1997, file: !1246, line: 842, baseType: !1083, size: 16, offset: 368)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1997, file: !1246, line: 843, baseType: !1823, size: 32, offset: 384)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1997, file: !1246, line: 845, baseType: !1085, size: 32, offset: 416)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1997, file: !1246, line: 847, baseType: !1054, size: 64, offset: 448)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1997, file: !1246, line: 848, baseType: !1780, size: 64, offset: 512)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1997, file: !1246, line: 849, baseType: !1780, size: 64, offset: 576)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1997, file: !1246, line: 850, baseType: !1780, size: 64, offset: 640)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1997, file: !1246, line: 851, baseType: !1185, size: 96, offset: 704)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1997, file: !1246, line: 852, baseType: !1149, size: 32, offset: 800)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1926, file: !1246, line: 1104, baseType: !2013, size: 1344, offset: 1344)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1246, line: 867, size: 1344, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2013, file: !1246, line: 868, baseType: !1083, size: 16)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2013, file: !1246, line: 869, baseType: !1083, size: 16, offset: 16)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2013, file: !1246, line: 870, baseType: !1083, size: 16, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2013, file: !1246, line: 871, baseType: !1083, size: 16, offset: 48)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2013, file: !1246, line: 873, baseType: !2020, size: 896, offset: 64)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2021, size: 896, elements: !1845)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1246, line: 864, baseType: !2022)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1246, line: 859, size: 128, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2028, !2029}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2022, file: !1246, line: 860, baseType: !1083, size: 16)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2022, file: !1246, line: 861, baseType: !1083, size: 16, offset: 16)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2022, file: !1246, line: 861, baseType: !1083, size: 16, offset: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2022, file: !1246, line: 861, baseType: !1083, size: 16, offset: 48)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2022, file: !1246, line: 862, baseType: !1085, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2022, file: !1246, line: 863, baseType: !1149, size: 32, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2013, file: !1246, line: 874, baseType: !1054, size: 64, offset: 960)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2013, file: !1246, line: 876, baseType: !1149, size: 32, offset: 1024)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2013, file: !1246, line: 876, baseType: !1149, size: 32, offset: 1056)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2013, file: !1246, line: 878, baseType: !1085, size: 32, offset: 1088)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2013, file: !1246, line: 879, baseType: !1085, size: 32, offset: 1120)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2013, file: !1246, line: 881, baseType: !1085, size: 32, offset: 1152)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2013, file: !1246, line: 881, baseType: !1085, size: 32, offset: 1184)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2013, file: !1246, line: 883, baseType: !1390, size: 64, offset: 1216)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2013, file: !1246, line: 884, baseType: !1134, size: 64, offset: 1280)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1926, file: !1246, line: 1107, baseType: !1149, size: 32, offset: 2688)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1926, file: !1246, line: 1110, baseType: !1149, size: 32, offset: 2720)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1926, file: !1246, line: 1113, baseType: !1083, size: 16, offset: 2752)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1926, file: !1246, line: 1113, baseType: !1083, size: 16, offset: 2768)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1926, file: !1246, line: 1116, baseType: !1070, size: 8, offset: 2784)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1926, file: !1246, line: 1117, baseType: !1424, size: 8, offset: 2792)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1926, file: !1246, line: 1120, baseType: !1083, size: 16, offset: 2800)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1926, file: !1246, line: 1121, baseType: !1149, size: 32, offset: 2816)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1926, file: !1246, line: 1122, baseType: !1149, size: 32, offset: 2848)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1926, file: !1246, line: 1123, baseType: !1149, size: 32, offset: 2880)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1926, file: !1246, line: 1124, baseType: !1149, size: 32, offset: 2912)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1926, file: !1246, line: 1125, baseType: !1149, size: 32, offset: 2944)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1926, file: !1246, line: 1126, baseType: !1149, size: 32, offset: 2976)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1926, file: !1246, line: 1127, baseType: !1149, size: 32, offset: 3008)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1926, file: !1246, line: 1128, baseType: !1149, size: 32, offset: 3040)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1926, file: !1246, line: 1129, baseType: !1149, size: 32, offset: 3072)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1926, file: !1246, line: 1130, baseType: !1149, size: 32, offset: 3104)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1926, file: !1246, line: 1131, baseType: !1083, size: 16, offset: 3136)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1926, file: !1246, line: 1132, baseType: !1070, size: 8, offset: 3152)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1926, file: !1246, line: 1133, baseType: !1070, size: 8, offset: 3160)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1926, file: !1246, line: 1134, baseType: !1915, size: 24, offset: 3168)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1926, file: !1246, line: 1135, baseType: !1070, size: 8, offset: 3192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1926, file: !1246, line: 1138, baseType: !1134, size: 64, offset: 3200)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1926, file: !1246, line: 1139, baseType: !1070, size: 8, offset: 3264)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1926, file: !1246, line: 1140, baseType: !1070, size: 8, offset: 3272)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1926, file: !1246, line: 1141, baseType: !1070, size: 8, offset: 3280)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1926, file: !1246, line: 1142, baseType: !1070, size: 8, offset: 3288)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1926, file: !1246, line: 1143, baseType: !1070, size: 8, offset: 3296)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1926, file: !1246, line: 1144, baseType: !2068, size: 64, offset: 3304)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 64, elements: !1797)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1926, file: !1246, line: 1145, baseType: !2068, size: 64, offset: 3368)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1926, file: !1246, line: 1148, baseType: !1070, size: 8, offset: 3432)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1926, file: !1246, line: 1149, baseType: !1070, size: 8, offset: 3440)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1926, file: !1246, line: 1152, baseType: !1070, size: 8, offset: 3448)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1926, file: !1246, line: 1152, baseType: !1070, size: 8, offset: 3456)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1926, file: !1246, line: 1153, baseType: !1070, size: 8, offset: 3464)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1926, file: !1246, line: 1154, baseType: !1083, size: 16, offset: 3472)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1926, file: !1246, line: 1154, baseType: !1083, size: 16, offset: 3488)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1926, file: !1246, line: 1155, baseType: !1083, size: 16, offset: 3504)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1926, file: !1246, line: 1155, baseType: !1083, size: 16, offset: 3520)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1926, file: !1246, line: 1156, baseType: !1070, size: 8, offset: 3536)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1926, file: !1246, line: 1157, baseType: !1070, size: 8, offset: 3544)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1926, file: !1246, line: 1159, baseType: !1070, size: 8, offset: 3552)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1926, file: !1246, line: 1160, baseType: !1070, size: 8, offset: 3560)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1926, file: !1246, line: 1161, baseType: !1070, size: 8, offset: 3568)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1926, file: !1246, line: 1162, baseType: !1070, size: 8, offset: 3576)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1926, file: !1246, line: 1165, baseType: !1085, size: 32, offset: 3584)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1926, file: !1246, line: 1166, baseType: !1085, size: 32, offset: 3616)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1926, file: !1246, line: 1167, baseType: !1085, size: 32, offset: 3648)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1926, file: !1246, line: 1168, baseType: !1085, size: 32, offset: 3680)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1926, file: !1246, line: 1171, baseType: !1083, size: 16, offset: 3712)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1926, file: !1246, line: 1171, baseType: !1083, size: 16, offset: 3728)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1926, file: !1246, line: 1172, baseType: !1085, size: 32, offset: 3744)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1926, file: !1246, line: 1173, baseType: !1149, size: 32, offset: 3776)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1926, file: !1246, line: 1174, baseType: !1149, size: 32, offset: 3808)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1926, file: !1246, line: 1177, baseType: !2095, size: 1024, offset: 3840)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1246, line: 963, size: 1024, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2120, !2121}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2095, file: !1246, line: 965, baseType: !1085, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2095, file: !1246, line: 968, baseType: !1149, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2095, file: !1246, line: 971, baseType: !1149, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2095, file: !1246, line: 974, baseType: !1149, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2095, file: !1246, line: 977, baseType: !1185, size: 96, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2095, file: !1246, line: 979, baseType: !1185, size: 96, offset: 224)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2095, file: !1246, line: 982, baseType: !1085, size: 32, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2095, file: !1246, line: 987, baseType: !1380, size: 64, offset: 352)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2095, file: !1246, line: 989, baseType: !1149, size: 32, offset: 416)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2095, file: !1246, line: 994, baseType: !1085, size: 32, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2095, file: !1246, line: 995, baseType: !1085, size: 32, offset: 480)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2095, file: !1246, line: 997, baseType: !1070, size: 8, offset: 512)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2095, file: !1246, line: 998, baseType: !1844, size: 56, offset: 520)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2095, file: !1246, line: 1000, baseType: !1149, size: 32, offset: 576)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2095, file: !1246, line: 1003, baseType: !1380, size: 64, offset: 608)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2095, file: !1246, line: 1006, baseType: !1085, size: 32, offset: 672)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2095, file: !1246, line: 1009, baseType: !1149, size: 32, offset: 704)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2095, file: !1246, line: 1012, baseType: !1380, size: 64, offset: 736)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2095, file: !1246, line: 1015, baseType: !1380, size: 64, offset: 800)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2095, file: !1246, line: 1018, baseType: !1085, size: 32, offset: 864)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2095, file: !1246, line: 1019, baseType: !2118, size: 64, offset: 896)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1246, line: 63, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2095, file: !1246, line: 1023, baseType: !1149, size: 32, offset: 960)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2095, file: !1246, line: 1024, baseType: !1085, size: 32, offset: 992)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1926, file: !1246, line: 1179, baseType: !2123, size: 320, offset: 4864)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1246, line: 1043, size: 320, elements: !2124)
!2124 = !{!2125, !2126, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2123, file: !1246, line: 1044, baseType: !1070, size: 8)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2123, file: !1246, line: 1045, baseType: !2127, size: 16, offset: 8)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 16, elements: !1381)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2123, file: !1246, line: 1048, baseType: !1070, size: 8, offset: 24)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2123, file: !1246, line: 1049, baseType: !1149, size: 32, offset: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2123, file: !1246, line: 1049, baseType: !1149, size: 32, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2123, file: !1246, line: 1052, baseType: !1149, size: 32, offset: 96)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2123, file: !1246, line: 1052, baseType: !1149, size: 32, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2123, file: !1246, line: 1053, baseType: !1070, size: 8, offset: 160)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2123, file: !1246, line: 1054, baseType: !1915, size: 24, offset: 168)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2123, file: !1246, line: 1057, baseType: !1149, size: 32, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2123, file: !1246, line: 1057, baseType: !1149, size: 32, offset: 224)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2123, file: !1246, line: 1060, baseType: !1149, size: 32, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2123, file: !1246, line: 1060, baseType: !1149, size: 32, offset: 288)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1391, file: !1246, line: 1247, baseType: !2140, size: 64, offset: 2176)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1246, line: 60, flags: DIFlagFwdDecl)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1391, file: !1246, line: 1251, baseType: !2143, size: 31872, offset: 2240)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1246, line: 403, size: 31872, elements: !2144)
!2144 = !{!2145, !2220, !2240, !2249, !2269, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2406, !2407, !2408, !2412, !2428, !2429}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2143, file: !1246, line: 404, baseType: !2146, size: 1984)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1246, line: 259, size: 1984, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2165, !2215}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2146, file: !1246, line: 260, baseType: !1070, size: 8)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2146, file: !1246, line: 263, baseType: !1070, size: 8, offset: 8)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2146, file: !1246, line: 266, baseType: !1070, size: 8, offset: 16)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2146, file: !1246, line: 267, baseType: !1070, size: 8, offset: 24)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2146, file: !1246, line: 269, baseType: !1070, size: 8, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2146, file: !1246, line: 270, baseType: !1070, size: 8, offset: 40)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2146, file: !1246, line: 276, baseType: !1070, size: 8, offset: 48)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2146, file: !1246, line: 279, baseType: !1070, size: 8, offset: 56)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2146, file: !1246, line: 280, baseType: !1083, size: 16, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2146, file: !1246, line: 280, baseType: !1083, size: 16, offset: 80)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2146, file: !1246, line: 281, baseType: !1149, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2146, file: !1246, line: 284, baseType: !1070, size: 8, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2146, file: !1246, line: 285, baseType: !1070, size: 8, offset: 136)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2146, file: !1246, line: 287, baseType: !2162, size: 48, offset: 144)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 48, elements: !2163)
!2163 = !{!2164}
!2164 = !DISubrange(count: 6)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2146, file: !1246, line: 290, baseType: !2166, size: 1280, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1606, line: 174, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1606, line: 166, size: 1280, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2214}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2167, file: !1606, line: 167, baseType: !1085, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2167, file: !1606, line: 167, baseType: !1085, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2167, file: !1606, line: 168, baseType: !1100, size: 512, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2167, file: !1606, line: 169, baseType: !1100, size: 512, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2167, file: !1606, line: 170, baseType: !1149, size: 32, offset: 1088)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2167, file: !1606, line: 171, baseType: !1149, size: 32, offset: 1120)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2167, file: !1606, line: 172, baseType: !2176, size: 64, offset: 1152)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1606, line: 72, size: 3072, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2210, !2211, !2212, !2213}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2177, file: !1606, line: 73, baseType: !1085, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2177, file: !1606, line: 73, baseType: !1085, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2177, file: !1606, line: 74, baseType: !1085, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2177, file: !1606, line: 75, baseType: !1085, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2177, file: !1606, line: 77, baseType: !1458, size: 128, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2177, file: !1606, line: 77, baseType: !1458, size: 128, offset: 256)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2177, file: !1606, line: 79, baseType: !2186, size: 2304, offset: 384)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2187, size: 2304, elements: !1261)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1606, line: 67, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1606, line: 55, size: 576, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2206, !2207, !2208, !2209}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2188, file: !1606, line: 56, baseType: !1083, size: 16)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2188, file: !1606, line: 56, baseType: !1083, size: 16, offset: 16)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2188, file: !1606, line: 58, baseType: !1149, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2188, file: !1606, line: 59, baseType: !1149, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2188, file: !1606, line: 59, baseType: !1149, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2188, file: !1606, line: 60, baseType: !1380, size: 64, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2188, file: !1606, line: 60, baseType: !1380, size: 64, offset: 192)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2188, file: !1606, line: 61, baseType: !2198, size: 64, offset: 256)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1606, line: 47, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1606, line: 44, size: 96, elements: !2201)
!2201 = !{!2202, !2203, !2204, !2205}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2200, file: !1606, line: 45, baseType: !1149, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2200, file: !1606, line: 45, baseType: !1149, size: 32, offset: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2200, file: !1606, line: 46, baseType: !1083, size: 16, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2200, file: !1606, line: 46, baseType: !1083, size: 16, offset: 80)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2188, file: !1606, line: 62, baseType: !2198, size: 64, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2188, file: !1606, line: 64, baseType: !2198, size: 64, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2188, file: !1606, line: 65, baseType: !1380, size: 64, offset: 448)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2188, file: !1606, line: 66, baseType: !1380, size: 64, offset: 512)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2177, file: !1606, line: 80, baseType: !1185, size: 96, offset: 2688)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2177, file: !1606, line: 80, baseType: !1185, size: 96, offset: 2784)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2177, file: !1606, line: 81, baseType: !1185, size: 96, offset: 2880)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2177, file: !1606, line: 83, baseType: !1185, size: 96, offset: 2976)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2167, file: !1606, line: 173, baseType: !1054, size: 64, offset: 1216)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2146, file: !1246, line: 291, baseType: !2216, size: 512, offset: 1472)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1606, line: 178, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1606, line: 176, size: 512, elements: !2218)
!2218 = !{!2219}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2217, file: !1606, line: 177, baseType: !1100, size: 512)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2143, file: !1246, line: 406, baseType: !2221, size: 64, offset: 1984)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1246, line: 80, size: 1472, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2222, file: !1246, line: 81, baseType: !1054, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2222, file: !1246, line: 82, baseType: !1054, size: 64, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2222, file: !1246, line: 83, baseType: !5, size: 32, offset: 128)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2222, file: !1246, line: 84, baseType: !5, size: 32, offset: 160)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2222, file: !1246, line: 86, baseType: !5, size: 32, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2222, file: !1246, line: 87, baseType: !5, size: 32, offset: 224)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2222, file: !1246, line: 88, baseType: !5, size: 32, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2222, file: !1246, line: 89, baseType: !5, size: 32, offset: 288)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2222, file: !1246, line: 90, baseType: !5, size: 32, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2222, file: !1246, line: 91, baseType: !5, size: 32, offset: 352)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2222, file: !1246, line: 92, baseType: !5, size: 32, offset: 384)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2222, file: !1246, line: 93, baseType: !5, size: 32, offset: 416)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2222, file: !1246, line: 95, baseType: !2237, size: 1024, offset: 448)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 1024, elements: !2238)
!2238 = !{!2239}
!2239 = !DISubrange(count: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2143, file: !1246, line: 407, baseType: !2241, size: 64, offset: 2048)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1246, line: 98, size: 1216, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2242, file: !1246, line: 100, baseType: !1054, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2242, file: !1246, line: 101, baseType: !1054, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2242, file: !1246, line: 103, baseType: !5, size: 32, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2242, file: !1246, line: 104, baseType: !5, size: 32, offset: 160)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2242, file: !1246, line: 106, baseType: !2237, size: 1024, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2143, file: !1246, line: 408, baseType: !2250, size: 512, offset: 2112)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1246, line: 109, size: 512, elements: !2251)
!2251 = !{!2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2250, file: !1246, line: 111, baseType: !1085, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2250, file: !1246, line: 112, baseType: !1085, size: 32, offset: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2250, file: !1246, line: 115, baseType: !1085, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2250, file: !1246, line: 116, baseType: !1085, size: 32, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2250, file: !1246, line: 117, baseType: !1085, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2250, file: !1246, line: 118, baseType: !1085, size: 32, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2250, file: !1246, line: 119, baseType: !1085, size: 32, offset: 192)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2250, file: !1246, line: 120, baseType: !1085, size: 32, offset: 224)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2250, file: !1246, line: 121, baseType: !1085, size: 32, offset: 256)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2250, file: !1246, line: 122, baseType: !1085, size: 32, offset: 288)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2250, file: !1246, line: 125, baseType: !1085, size: 32, offset: 320)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2250, file: !1246, line: 126, baseType: !1085, size: 32, offset: 352)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2250, file: !1246, line: 127, baseType: !1083, size: 16, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2250, file: !1246, line: 128, baseType: !1083, size: 16, offset: 400)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2250, file: !1246, line: 129, baseType: !1085, size: 32, offset: 416)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2250, file: !1246, line: 130, baseType: !1085, size: 32, offset: 448)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2250, file: !1246, line: 131, baseType: !1085, size: 32, offset: 480)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2143, file: !1246, line: 409, baseType: !2270, size: 576, offset: 2624)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1246, line: 134, size: 576, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2270, file: !1246, line: 135, baseType: !1085, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2270, file: !1246, line: 136, baseType: !1085, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2270, file: !1246, line: 137, baseType: !1085, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2270, file: !1246, line: 138, baseType: !1085, size: 32, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2270, file: !1246, line: 139, baseType: !1085, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2270, file: !1246, line: 140, baseType: !1085, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2270, file: !1246, line: 141, baseType: !1085, size: 32, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2270, file: !1246, line: 142, baseType: !1085, size: 32, offset: 224)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2270, file: !1246, line: 143, baseType: !1149, size: 32, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2270, file: !1246, line: 144, baseType: !1085, size: 32, offset: 288)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2270, file: !1246, line: 145, baseType: !1085, size: 32, offset: 320)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2270, file: !1246, line: 147, baseType: !1085, size: 32, offset: 352)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2270, file: !1246, line: 148, baseType: !1085, size: 32, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2270, file: !1246, line: 149, baseType: !1085, size: 32, offset: 416)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2270, file: !1246, line: 150, baseType: !1085, size: 32, offset: 448)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2270, file: !1246, line: 151, baseType: !1085, size: 32, offset: 480)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2270, file: !1246, line: 152, baseType: !1089, size: 64, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2143, file: !1246, line: 411, baseType: !1085, size: 32, offset: 3200)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2143, file: !1246, line: 411, baseType: !1085, size: 32, offset: 3232)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2143, file: !1246, line: 411, baseType: !1085, size: 32, offset: 3264)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2143, file: !1246, line: 412, baseType: !1149, size: 32, offset: 3296)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2143, file: !1246, line: 413, baseType: !1085, size: 32, offset: 3328)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2143, file: !1246, line: 413, baseType: !1085, size: 32, offset: 3360)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2143, file: !1246, line: 415, baseType: !1085, size: 32, offset: 3392)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2143, file: !1246, line: 415, baseType: !1085, size: 32, offset: 3424)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2143, file: !1246, line: 416, baseType: !1083, size: 16, offset: 3456)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2143, file: !1246, line: 416, baseType: !1083, size: 16, offset: 3472)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2143, file: !1246, line: 418, baseType: !1149, size: 32, offset: 3488)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2143, file: !1246, line: 418, baseType: !1149, size: 32, offset: 3520)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2143, file: !1246, line: 421, baseType: !1149, size: 32, offset: 3552)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2143, file: !1246, line: 421, baseType: !1149, size: 32, offset: 3584)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2143, file: !1246, line: 421, baseType: !1149, size: 32, offset: 3616)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2143, file: !1246, line: 425, baseType: !1083, size: 16, offset: 3648)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2143, file: !1246, line: 425, baseType: !1083, size: 16, offset: 3664)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2143, file: !1246, line: 425, baseType: !1083, size: 16, offset: 3680)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2143, file: !1246, line: 426, baseType: !1083, size: 16, offset: 3696)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2143, file: !1246, line: 428, baseType: !1083, size: 16, offset: 3712)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2143, file: !1246, line: 428, baseType: !1083, size: 16, offset: 3728)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2143, file: !1246, line: 431, baseType: !1085, size: 32, offset: 3744)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2143, file: !1246, line: 433, baseType: !1083, size: 16, offset: 3776)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2143, file: !1246, line: 435, baseType: !1083, size: 16, offset: 3792)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2143, file: !1246, line: 437, baseType: !1083, size: 16, offset: 3808)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2143, file: !1246, line: 439, baseType: !1083, size: 16, offset: 3824)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2143, file: !1246, line: 441, baseType: !1083, size: 16, offset: 3840)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2143, file: !1246, line: 443, baseType: !1083, size: 16, offset: 3856)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2143, file: !1246, line: 449, baseType: !1085, size: 32, offset: 3872)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2143, file: !1246, line: 453, baseType: !1085, size: 32, offset: 3904)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2143, file: !1246, line: 458, baseType: !1083, size: 16, offset: 3936)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2143, file: !1246, line: 462, baseType: !1083, size: 16, offset: 3952)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2143, file: !1246, line: 467, baseType: !1085, size: 32, offset: 3968)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2143, file: !1246, line: 467, baseType: !1085, size: 32, offset: 4000)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2143, file: !1246, line: 469, baseType: !1083, size: 16, offset: 4032)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2143, file: !1246, line: 469, baseType: !1083, size: 16, offset: 4048)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2143, file: !1246, line: 469, baseType: !1083, size: 16, offset: 4064)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2143, file: !1246, line: 469, baseType: !1083, size: 16, offset: 4080)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2143, file: !1246, line: 474, baseType: !1083, size: 16, offset: 4096)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2143, file: !1246, line: 475, baseType: !1070, size: 8, offset: 4112)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2143, file: !1246, line: 476, baseType: !1070, size: 8, offset: 4120)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2143, file: !1246, line: 481, baseType: !1085, size: 32, offset: 4128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2143, file: !1246, line: 486, baseType: !1085, size: 32, offset: 4160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2143, file: !1246, line: 491, baseType: !1085, size: 32, offset: 4192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2143, file: !1246, line: 496, baseType: !1083, size: 16, offset: 4224)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2143, file: !1246, line: 498, baseType: !1083, size: 16, offset: 4240)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2143, file: !1246, line: 501, baseType: !1083, size: 16, offset: 4256)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2143, file: !1246, line: 502, baseType: !1083, size: 16, offset: 4272)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2143, file: !1246, line: 508, baseType: !1083, size: 16, offset: 4288)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2143, file: !1246, line: 513, baseType: !1083, size: 16, offset: 4304)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2143, file: !1246, line: 515, baseType: !1083, size: 16, offset: 4320)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2143, file: !1246, line: 515, baseType: !1083, size: 16, offset: 4336)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2143, file: !1246, line: 519, baseType: !1458, size: 128, offset: 4352)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2143, file: !1246, line: 519, baseType: !1458, size: 128, offset: 4480)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2143, file: !1246, line: 520, baseType: !2344, size: 128, offset: 4608)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1459, line: 89, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1459, line: 86, size: 128, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2345, file: !1459, line: 87, baseType: !1085, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2345, file: !1459, line: 87, baseType: !1085, size: 32, offset: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2345, file: !1459, line: 88, baseType: !1085, size: 32, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2345, file: !1459, line: 88, baseType: !1085, size: 32, offset: 96)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2143, file: !1246, line: 523, baseType: !1110, size: 128, offset: 4736)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2143, file: !1246, line: 524, baseType: !1083, size: 16, offset: 4864)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2143, file: !1246, line: 527, baseType: !1083, size: 16, offset: 4880)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2143, file: !1246, line: 532, baseType: !1149, size: 32, offset: 4896)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2143, file: !1246, line: 532, baseType: !1149, size: 32, offset: 4928)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2143, file: !1246, line: 534, baseType: !1149, size: 32, offset: 4960)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2143, file: !1246, line: 538, baseType: !1149, size: 32, offset: 4992)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2143, file: !1246, line: 542, baseType: !1085, size: 32, offset: 5024)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2143, file: !1246, line: 545, baseType: !1149, size: 32, offset: 5056)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2143, file: !1246, line: 545, baseType: !1149, size: 32, offset: 5088)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2143, file: !1246, line: 545, baseType: !1149, size: 32, offset: 5120)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2143, file: !1246, line: 548, baseType: !1149, size: 32, offset: 5152)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2143, file: !1246, line: 551, baseType: !1083, size: 16, offset: 5184)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2143, file: !1246, line: 551, baseType: !1083, size: 16, offset: 5200)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2143, file: !1246, line: 551, baseType: !1083, size: 16, offset: 5216)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2143, file: !1246, line: 551, baseType: !1083, size: 16, offset: 5232)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2143, file: !1246, line: 552, baseType: !1083, size: 16, offset: 5248)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2143, file: !1246, line: 552, baseType: !1083, size: 16, offset: 5264)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2143, file: !1246, line: 553, baseType: !1149, size: 32, offset: 5280)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2143, file: !1246, line: 553, baseType: !1149, size: 32, offset: 5312)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2143, file: !1246, line: 554, baseType: !1083, size: 16, offset: 5344)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2143, file: !1246, line: 554, baseType: !1083, size: 16, offset: 5360)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2143, file: !1246, line: 555, baseType: !1149, size: 32, offset: 5376)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2143, file: !1246, line: 555, baseType: !1149, size: 32, offset: 5408)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2143, file: !1246, line: 558, baseType: !1069, size: 8192, offset: 5440)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2143, file: !1246, line: 561, baseType: !1085, size: 32, offset: 13632)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2143, file: !1246, line: 562, baseType: !1083, size: 16, offset: 13664)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2143, file: !1246, line: 562, baseType: !1083, size: 16, offset: 13680)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2143, file: !1246, line: 565, baseType: !1561, size: 6144, offset: 13696)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2143, file: !1246, line: 568, baseType: !1260, size: 128, offset: 19840)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2143, file: !1246, line: 569, baseType: !1260, size: 128, offset: 19968)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2143, file: !1246, line: 572, baseType: !1070, size: 8, offset: 20096)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2143, file: !1246, line: 573, baseType: !1070, size: 8, offset: 20104)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2143, file: !1246, line: 574, baseType: !1070, size: 8, offset: 20112)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2143, file: !1246, line: 575, baseType: !1993, size: 40, offset: 20120)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2143, file: !1246, line: 578, baseType: !1085, size: 32, offset: 20160)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2143, file: !1246, line: 579, baseType: !1083, size: 16, offset: 20192)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2143, file: !1246, line: 580, baseType: !1083, size: 16, offset: 20208)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2143, file: !1246, line: 581, baseType: !1149, size: 32, offset: 20224)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2143, file: !1246, line: 582, baseType: !1149, size: 32, offset: 20256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2143, file: !1246, line: 585, baseType: !1083, size: 16, offset: 20288)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2143, file: !1246, line: 585, baseType: !1083, size: 16, offset: 20304)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2143, file: !1246, line: 586, baseType: !1149, size: 32, offset: 20320)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2143, file: !1246, line: 589, baseType: !1083, size: 16, offset: 20352)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2143, file: !1246, line: 589, baseType: !1083, size: 16, offset: 20368)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2143, file: !1246, line: 590, baseType: !1085, size: 32, offset: 20384)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2143, file: !1246, line: 593, baseType: !1083, size: 16, offset: 20416)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2143, file: !1246, line: 593, baseType: !1083, size: 16, offset: 20432)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2143, file: !1246, line: 594, baseType: !1083, size: 16, offset: 20448)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2143, file: !1246, line: 594, baseType: !1083, size: 16, offset: 20464)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2143, file: !1246, line: 595, baseType: !1149, size: 32, offset: 20480)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2143, file: !1246, line: 596, baseType: !1149, size: 32, offset: 20512)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2143, file: !1246, line: 597, baseType: !2404, size: 64, offset: 20544)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1345, line: 41, flags: DIFlagFwdDecl)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2143, file: !1246, line: 600, baseType: !1085, size: 32, offset: 20608)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2143, file: !1246, line: 601, baseType: !1149, size: 32, offset: 20640)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2143, file: !1246, line: 604, baseType: !2409, size: 256, offset: 20672)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 256, elements: !2410)
!2410 = !{!2411}
!2411 = !DISubrange(count: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2143, file: !1246, line: 607, baseType: !2413, size: 10880, offset: 20928)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1246, line: 364, size: 10880, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2413, file: !1246, line: 365, baseType: !2146, size: 1984)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2413, file: !1246, line: 367, baseType: !1069, size: 8192, offset: 1984)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2413, file: !1246, line: 369, baseType: !1083, size: 16, offset: 10176)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2413, file: !1246, line: 369, baseType: !1083, size: 16, offset: 10192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2413, file: !1246, line: 370, baseType: !1083, size: 16, offset: 10208)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2413, file: !1246, line: 370, baseType: !1083, size: 16, offset: 10224)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2413, file: !1246, line: 372, baseType: !1149, size: 32, offset: 10240)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2413, file: !1246, line: 373, baseType: !1149, size: 32, offset: 10272)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2413, file: !1246, line: 375, baseType: !1915, size: 24, offset: 10304)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2413, file: !1246, line: 376, baseType: !1070, size: 8, offset: 10328)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2413, file: !1246, line: 378, baseType: !1070, size: 8, offset: 10336)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2413, file: !1246, line: 379, baseType: !1915, size: 24, offset: 10344)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2413, file: !1246, line: 381, baseType: !1100, size: 512, offset: 10368)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2143, file: !1246, line: 609, baseType: !1085, size: 32, offset: 31808)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2143, file: !1246, line: 610, baseType: !1085, size: 32, offset: 31840)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1391, file: !1246, line: 1252, baseType: !2431, size: 256, offset: 34112)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1246, line: 158, size: 256, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2431, file: !1246, line: 159, baseType: !1085, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2431, file: !1246, line: 160, baseType: !1149, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2431, file: !1246, line: 161, baseType: !1149, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2431, file: !1246, line: 162, baseType: !1149, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2431, file: !1246, line: 163, baseType: !1085, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2431, file: !1246, line: 164, baseType: !1083, size: 16, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2431, file: !1246, line: 165, baseType: !1083, size: 16, offset: 176)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2431, file: !1246, line: 166, baseType: !1149, size: 32, offset: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2431, file: !1246, line: 167, baseType: !1149, size: 32, offset: 224)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1391, file: !1246, line: 1254, baseType: !1110, size: 128, offset: 34368)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1391, file: !1246, line: 1255, baseType: !1110, size: 128, offset: 34496)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1391, file: !1246, line: 1257, baseType: !1054, size: 64, offset: 34624)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1391, file: !1246, line: 1258, baseType: !1054, size: 64, offset: 34688)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1391, file: !1246, line: 1259, baseType: !1054, size: 64, offset: 34752)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1391, file: !1246, line: 1260, baseType: !1054, size: 64, offset: 34816)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1391, file: !1246, line: 1262, baseType: !1054, size: 64, offset: 34880)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1391, file: !1246, line: 1265, baseType: !2450, size: 64, offset: 34944)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1246, line: 1265, flags: DIFlagFwdDecl)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1391, file: !1246, line: 1266, baseType: !1083, size: 16, offset: 35008)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1391, file: !1246, line: 1267, baseType: !1083, size: 16, offset: 35024)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1391, file: !1246, line: 1270, baseType: !1085, size: 32, offset: 35040)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1391, file: !1246, line: 1271, baseType: !1110, size: 128, offset: 35072)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1391, file: !1246, line: 1274, baseType: !2457, size: 128, offset: 35200)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1246, line: 650, size: 128, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2457, file: !1246, line: 651, baseType: !1185, size: 96)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2457, file: !1246, line: 652, baseType: !1070, size: 8, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2457, file: !1246, line: 652, baseType: !1070, size: 8, offset: 104)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2457, file: !1246, line: 652, baseType: !1070, size: 8, offset: 112)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2457, file: !1246, line: 652, baseType: !1070, size: 8, offset: 120)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1391, file: !1246, line: 1275, baseType: !2465, size: 1472, offset: 35328)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1246, line: 676, size: 1472, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2479, !2489, !2490, !2491, !2492, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2465, file: !1246, line: 679, baseType: !2457, size: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2465, file: !1246, line: 680, baseType: !1083, size: 16, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2465, file: !1246, line: 680, baseType: !1083, size: 16, offset: 144)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2465, file: !1246, line: 680, baseType: !1083, size: 16, offset: 160)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2465, file: !1246, line: 680, baseType: !1083, size: 16, offset: 176)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2465, file: !1246, line: 681, baseType: !1083, size: 16, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2465, file: !1246, line: 681, baseType: !1083, size: 16, offset: 208)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2465, file: !1246, line: 681, baseType: !1083, size: 16, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2465, file: !1246, line: 681, baseType: !1083, size: 16, offset: 240)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2465, file: !1246, line: 682, baseType: !1083, size: 16, offset: 256)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2465, file: !1246, line: 682, baseType: !2478, size: 48, offset: 272)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 48, elements: !1186)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2465, file: !1246, line: 685, baseType: !2480, size: 192, offset: 320)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1246, line: 633, size: 192, elements: !2481)
!2481 = !{!2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2480, file: !1246, line: 634, baseType: !1083, size: 16)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2480, file: !1246, line: 634, baseType: !1083, size: 16, offset: 16)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2480, file: !1246, line: 635, baseType: !1083, size: 16, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2480, file: !1246, line: 635, baseType: !1083, size: 16, offset: 48)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2480, file: !1246, line: 636, baseType: !1149, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2480, file: !1246, line: 636, baseType: !1149, size: 32, offset: 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2480, file: !1246, line: 637, baseType: !2404, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2465, file: !1246, line: 686, baseType: !1083, size: 16, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2465, file: !1246, line: 686, baseType: !1083, size: 16, offset: 528)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2465, file: !1246, line: 687, baseType: !1149, size: 32, offset: 544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2465, file: !1246, line: 688, baseType: !2493, size: 448, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1246, line: 674, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1246, line: 659, size: 448, elements: !2495)
!2495 = !{!2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2494, file: !1246, line: 660, baseType: !1149, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2494, file: !1246, line: 661, baseType: !1149, size: 32, offset: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2494, file: !1246, line: 662, baseType: !1149, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2494, file: !1246, line: 663, baseType: !1149, size: 32, offset: 96)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2494, file: !1246, line: 664, baseType: !1149, size: 32, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2494, file: !1246, line: 665, baseType: !1149, size: 32, offset: 160)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2494, file: !1246, line: 666, baseType: !1149, size: 32, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2494, file: !1246, line: 667, baseType: !1149, size: 32, offset: 224)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2494, file: !1246, line: 668, baseType: !1149, size: 32, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2494, file: !1246, line: 669, baseType: !1149, size: 32, offset: 288)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2494, file: !1246, line: 670, baseType: !1085, size: 32, offset: 320)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2494, file: !1246, line: 671, baseType: !1149, size: 32, offset: 352)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2494, file: !1246, line: 672, baseType: !1149, size: 32, offset: 384)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2494, file: !1246, line: 673, baseType: !1083, size: 16, offset: 416)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2494, file: !1246, line: 673, baseType: !1083, size: 16, offset: 432)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2465, file: !1246, line: 692, baseType: !1149, size: 32, offset: 1024)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2465, file: !1246, line: 697, baseType: !1149, size: 32, offset: 1056)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2465, file: !1246, line: 703, baseType: !1085, size: 32, offset: 1088)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2465, file: !1246, line: 704, baseType: !1083, size: 16, offset: 1120)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2465, file: !1246, line: 704, baseType: !1083, size: 16, offset: 1136)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2465, file: !1246, line: 705, baseType: !1083, size: 16, offset: 1152)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2465, file: !1246, line: 706, baseType: !1083, size: 16, offset: 1168)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2465, file: !1246, line: 707, baseType: !1083, size: 16, offset: 1184)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2465, file: !1246, line: 708, baseType: !1083, size: 16, offset: 1200)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2465, file: !1246, line: 709, baseType: !1083, size: 16, offset: 1216)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2465, file: !1246, line: 709, baseType: !1083, size: 16, offset: 1232)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2465, file: !1246, line: 709, baseType: !1083, size: 16, offset: 1248)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2465, file: !1246, line: 709, baseType: !1083, size: 16, offset: 1264)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2465, file: !1246, line: 710, baseType: !1083, size: 16, offset: 1280)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2465, file: !1246, line: 711, baseType: !1083, size: 16, offset: 1296)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2465, file: !1246, line: 712, baseType: !1149, size: 32, offset: 1312)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2465, file: !1246, line: 713, baseType: !1149, size: 32, offset: 1344)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2465, file: !1246, line: 713, baseType: !1149, size: 32, offset: 1376)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2465, file: !1246, line: 713, baseType: !1149, size: 32, offset: 1408)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2465, file: !1246, line: 713, baseType: !1149, size: 32, offset: 1440)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1391, file: !1246, line: 1278, baseType: !2532, size: 64, offset: 36800)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1246, line: 1197, size: 64, elements: !2533)
!2533 = !{!2534, !2535, !2536, !2537}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2532, file: !1246, line: 1199, baseType: !1149, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2532, file: !1246, line: 1200, baseType: !1070, size: 8, offset: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2532, file: !1246, line: 1201, baseType: !1070, size: 8, offset: 40)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2532, file: !1246, line: 1202, baseType: !1083, size: 16, offset: 48)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1391, file: !1246, line: 1281, baseType: !1216, size: 64, offset: 36864)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1391, file: !1246, line: 1284, baseType: !2540, size: 192, offset: 36928)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1246, line: 1208, size: 192, elements: !2541)
!2541 = !{!2542, !2543, !2544, !2545}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2540, file: !1246, line: 1209, baseType: !1185, size: 96)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2540, file: !1246, line: 1210, baseType: !1085, size: 32, offset: 96)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2540, file: !1246, line: 1210, baseType: !1085, size: 32, offset: 128)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2540, file: !1246, line: 1210, baseType: !1085, size: 32, offset: 160)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1391, file: !1246, line: 1287, baseType: !1614, size: 64, offset: 37120)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1391, file: !1246, line: 1289, baseType: !1361, size: 64, offset: 37184)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1391, file: !1246, line: 1290, baseType: !1361, size: 64, offset: 37248)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1391, file: !1246, line: 1293, baseType: !2166, size: 1280, offset: 37312)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1391, file: !1246, line: 1294, baseType: !2216, size: 512, offset: 38592)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1391, file: !1246, line: 1295, baseType: !1605, size: 512, offset: 39104)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1391, file: !1246, line: 1298, baseType: !2553, size: 64, offset: 39616)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1246, line: 1298, flags: DIFlagFwdDecl)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1387, file: !1386, line: 53, baseType: !1085, size: 32, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1387, file: !1386, line: 54, baseType: !1085, size: 32, offset: 96)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1387, file: !1386, line: 55, baseType: !1085, size: 32, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1387, file: !1386, line: 55, baseType: !1085, size: 32, offset: 160)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1387, file: !1386, line: 56, baseType: !1070, size: 8, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1387, file: !1386, line: 56, baseType: !1070, size: 8, offset: 200)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1387, file: !1386, line: 57, baseType: !1070, size: 8, offset: 208)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1387, file: !1386, line: 57, baseType: !1070, size: 8, offset: 216)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1387, file: !1386, line: 59, baseType: !1083, size: 16, offset: 224)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1387, file: !1386, line: 59, baseType: !1083, size: 16, offset: 240)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1387, file: !1386, line: 59, baseType: !1083, size: 16, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1387, file: !1386, line: 61, baseType: !1083, size: 16, offset: 272)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1387, file: !1386, line: 63, baseType: !1085, size: 32, offset: 288)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1046, file: !918, line: 293, baseType: !1110, size: 128, offset: 11200)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1046, file: !918, line: 294, baseType: !2570, size: 64, offset: 11328)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !918, line: 113, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !918, line: 108, size: 256, elements: !2573)
!2573 = !{!2574, !2576, !2577, !2578, !2579}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2572, file: !918, line: 109, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !918, line: 109, baseType: !2575, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2572, file: !918, line: 110, baseType: !1134, size: 64, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2572, file: !918, line: 111, baseType: !1085, size: 32, offset: 192)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2572, file: !918, line: 112, baseType: !1149, size: 32, offset: 224)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "bController", file: !2585, line: 68, baseType: !2586)
!2585 = !DIFile(filename: "blender/source/blender/makesdna/DNA_controller_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bController", file: !2585, line: 54, size: 1088, elements: !2587)
!2587 = !{!2588, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2617, !2642, !2643, !2644}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2586, file: !2585, line: 55, baseType: !2589, size: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2586, file: !2585, line: 55, baseType: !2589, size: 64, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !2586, file: !2585, line: 55, baseType: !2589, size: 64, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2586, file: !2585, line: 56, baseType: !1083, size: 16, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2586, file: !2585, line: 56, baseType: !1083, size: 16, offset: 208)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !2586, file: !2585, line: 56, baseType: !1083, size: 16, offset: 224)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "totlinks", scope: !2586, file: !2585, line: 56, baseType: !1083, size: 16, offset: 240)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !2586, file: !2585, line: 57, baseType: !1083, size: 16, offset: 256)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "totslinks", scope: !2586, file: !2585, line: 57, baseType: !1083, size: 16, offset: 272)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2586, file: !2585, line: 57, baseType: !1083, size: 16, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2586, file: !2585, line: 57, baseType: !1083, size: 16, offset: 304)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2586, file: !2585, line: 59, baseType: !1100, size: 512, offset: 320)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2586, file: !2585, line: 60, baseType: !1054, size: 64, offset: 832)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2586, file: !2585, line: 62, baseType: !2603, size: 64, offset: 896)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActuator", file: !1345, line: 262, size: 896, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2605, file: !1345, line: 263, baseType: !2604, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2605, file: !1345, line: 263, baseType: !2604, size: 64, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !2605, file: !1345, line: 263, baseType: !2604, size: 64, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2605, file: !1345, line: 264, baseType: !1083, size: 16, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2605, file: !1345, line: 268, baseType: !1083, size: 16, offset: 208)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !2605, file: !1345, line: 269, baseType: !1083, size: 16, offset: 224)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "go", scope: !2605, file: !1345, line: 269, baseType: !1083, size: 16, offset: 240)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2605, file: !1345, line: 270, baseType: !1100, size: 512, offset: 256)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2605, file: !1345, line: 275, baseType: !1054, size: 64, offset: 768)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2605, file: !1345, line: 280, baseType: !1134, size: 64, offset: 832)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "slinks", scope: !2586, file: !2585, line: 64, baseType: !2618, size: 64, offset: 960)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSensor", file: !2621, line: 163, size: 1024, elements: !2622)
!2621 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sensor_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2622 = !{!2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2637, !2638, !2639, !2640, !2641}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2620, file: !2621, line: 164, baseType: !2619, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2620, file: !2621, line: 164, baseType: !2619, size: 64, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2620, file: !2621, line: 166, baseType: !1083, size: 16, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !2620, file: !2621, line: 166, baseType: !1083, size: 16, offset: 144)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2620, file: !2621, line: 166, baseType: !1083, size: 16, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !2620, file: !2621, line: 166, baseType: !1083, size: 16, offset: 176)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !2620, file: !2621, line: 167, baseType: !1083, size: 16, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "totlinks", scope: !2620, file: !2621, line: 167, baseType: !1083, size: 16, offset: 208)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2620, file: !2621, line: 167, baseType: !1083, size: 16, offset: 224)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2620, file: !2621, line: 167, baseType: !1083, size: 16, offset: 240)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2620, file: !2621, line: 168, baseType: !1100, size: 512, offset: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2620, file: !2621, line: 169, baseType: !1054, size: 64, offset: 768)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2620, file: !2621, line: 171, baseType: !2636, size: 64, offset: 832)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2620, file: !2621, line: 173, baseType: !1134, size: 64, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2620, file: !2621, line: 176, baseType: !1083, size: 16, offset: 960)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2620, file: !2621, line: 177, baseType: !1083, size: 16, offset: 976)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "tap", scope: !2620, file: !2621, line: 178, baseType: !1083, size: 16, offset: 992)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2620, file: !2621, line: 179, baseType: !1083, size: 16, offset: 1008)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2586, file: !2585, line: 65, baseType: !1083, size: 16, offset: 1024)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "valo", scope: !2586, file: !2585, line: 65, baseType: !1083, size: 16, offset: 1040)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "state_mask", scope: !2586, file: !2585, line: 66, baseType: !5, size: 32, offset: 1056)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActuator", file: !1345, line: 282, baseType: !2605)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSensor", file: !2621, line: 180, baseType: !2620)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmatureSensor", file: !2621, line: 144, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmatureSensor", file: !2621, line: 139, size: 1088, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "posechannel", scope: !2652, file: !2621, line: 140, baseType: !1100, size: 512)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "constraint", scope: !2652, file: !2621, line: 141, baseType: !1100, size: 512, offset: 512)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2652, file: !2621, line: 142, baseType: !1085, size: 32, offset: 1024)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2652, file: !2621, line: 143, baseType: !1149, size: 32, offset: 1056)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmatureActuator", file: !1345, line: 234, baseType: !2660)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmatureActuator", file: !1345, line: 225, size: 1280, elements: !2661)
!2661 = !{!2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "posechannel", scope: !2660, file: !1345, line: 226, baseType: !1100, size: 512)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "constraint", scope: !2660, file: !1345, line: 227, baseType: !1100, size: 512, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2660, file: !1345, line: 228, baseType: !1085, size: 32, offset: 1024)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2660, file: !1345, line: 229, baseType: !1149, size: 32, offset: 1056)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !2660, file: !1345, line: 230, baseType: !1149, size: 32, offset: 1088)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2660, file: !1345, line: 231, baseType: !1149, size: 32, offset: 1120)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !2660, file: !1345, line: 232, baseType: !1134, size: 64, offset: 1152)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !2660, file: !1345, line: 233, baseType: !1134, size: 64, offset: 1216)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPropertyActuator", file: !1345, line: 115, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPropertyActuator", file: !1345, line: 111, size: 1152, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2672, file: !1345, line: 112, baseType: !1085, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2672, file: !1345, line: 112, baseType: !1085, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2672, file: !1345, line: 113, baseType: !1100, size: 512, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2672, file: !1345, line: 113, baseType: !1100, size: 512, offset: 576)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2672, file: !1345, line: 114, baseType: !1134, size: 64, offset: 1088)
!2679 = !{i32 7, !"Dwarf Version", i32 4}
!2680 = !{i32 2, !"Debug Info Version", i32 3}
!2681 = !{i32 1, !"wchar_size", i32 4}
!2682 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2683 = distinct !DISubprogram(name: "make_unique_prop_names", scope: !1, file: !1, line: 107, type: !2684, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{null, !2686, !1248}
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !2688, line: 69, baseType: !2689)
!2688 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2689 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !2690, line: 44, flags: DIFlagFwdDecl)
!2690 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2691 = !{}
!2692 = !DILocalVariable(name: "C", arg: 1, scope: !2683, file: !1, line: 107, type: !2686)
!2693 = !DILocation(line: 107, column: 39, scope: !2683)
!2694 = !DILocalVariable(name: "str", arg: 2, scope: !2683, file: !1, line: 107, type: !1248)
!2695 = !DILocation(line: 107, column: 48, scope: !2683)
!2696 = !DILocalVariable(name: "ob", scope: !2683, file: !1, line: 109, type: !1044)
!2697 = !DILocation(line: 109, column: 10, scope: !2683)
!2698 = !DILocalVariable(name: "prop", scope: !2683, file: !1, line: 110, type: !2699)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "bProperty", file: !2701, line: 50, baseType: !2702)
!2701 = !DIFile(filename: "blender/source/blender/makesdna/DNA_property_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bProperty", file: !2701, line: 43, size: 768, elements: !2703)
!2703 = !{!2704, !2706, !2707, !2708, !2709, !2710, !2711}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2702, file: !2701, line: 44, baseType: !2705, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2702, file: !2701, line: 44, baseType: !2705, size: 64, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2702, file: !2701, line: 45, baseType: !1100, size: 512, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2702, file: !2701, line: 46, baseType: !1083, size: 16, offset: 640)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2702, file: !2701, line: 46, baseType: !1083, size: 16, offset: 656)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2702, file: !2701, line: 47, baseType: !1085, size: 32, offset: 672)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !2702, file: !2701, line: 48, baseType: !1054, size: 64, offset: 704)
!2712 = !DILocation(line: 110, column: 13, scope: !2683)
!2713 = !DILocalVariable(name: "sens", scope: !2683, file: !1, line: 111, type: !2648)
!2714 = !DILocation(line: 111, column: 11, scope: !2683)
!2715 = !DILocalVariable(name: "cont", scope: !2683, file: !1, line: 112, type: !2583)
!2716 = !DILocation(line: 112, column: 15, scope: !2683)
!2717 = !DILocalVariable(name: "act", scope: !2683, file: !1, line: 113, type: !2645)
!2718 = !DILocation(line: 113, column: 13, scope: !2683)
!2719 = !DILocalVariable(name: "idar", scope: !2683, file: !1, line: 114, type: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!2721 = !DILocation(line: 114, column: 7, scope: !2683)
!2722 = !DILocalVariable(name: "a", scope: !2683, file: !1, line: 115, type: !1083)
!2723 = !DILocation(line: 115, column: 8, scope: !2683)
!2724 = !DILocalVariable(name: "obcount", scope: !2683, file: !1, line: 115, type: !1083)
!2725 = !DILocation(line: 115, column: 11, scope: !2683)
!2726 = !DILocalVariable(name: "propcount", scope: !2683, file: !1, line: 115, type: !1083)
!2727 = !DILocation(line: 115, column: 20, scope: !2683)
!2728 = !DILocalVariable(name: "nr", scope: !2683, file: !1, line: 115, type: !1083)
!2729 = !DILocation(line: 115, column: 33, scope: !2683)
!2730 = !DILocalVariable(name: "names", scope: !2683, file: !1, line: 116, type: !2731)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!2734 = !DILocation(line: 116, column: 15, scope: !2683)
!2735 = !DILocation(line: 122, column: 36, scope: !2683)
!2736 = !DILocation(line: 122, column: 8, scope: !2683)
!2737 = !DILocation(line: 122, column: 6, scope: !2683)
!2738 = !DILocation(line: 127, column: 8, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 127, column: 2)
!2740 = !DILocation(line: 127, column: 7, scope: !2739)
!2741 = !DILocation(line: 127, column: 12, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 127, column: 2)
!2743 = !DILocation(line: 127, column: 14, scope: !2742)
!2744 = !DILocation(line: 127, column: 13, scope: !2742)
!2745 = !DILocation(line: 127, column: 2, scope: !2739)
!2746 = !DILocation(line: 128, column: 17, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2742, file: !1, line: 127, column: 28)
!2748 = !DILocation(line: 128, column: 22, scope: !2747)
!2749 = !DILocation(line: 128, column: 7, scope: !2747)
!2750 = !DILocation(line: 128, column: 5, scope: !2747)
!2751 = !DILocation(line: 129, column: 30, scope: !2747)
!2752 = !DILocation(line: 129, column: 34, scope: !2747)
!2753 = !DILocation(line: 129, column: 15, scope: !2747)
!2754 = !DILocation(line: 129, column: 12, scope: !2747)
!2755 = !DILocation(line: 130, column: 30, scope: !2747)
!2756 = !DILocation(line: 130, column: 34, scope: !2747)
!2757 = !DILocation(line: 130, column: 15, scope: !2747)
!2758 = !DILocation(line: 130, column: 12, scope: !2747)
!2759 = !DILocation(line: 131, column: 30, scope: !2747)
!2760 = !DILocation(line: 131, column: 34, scope: !2747)
!2761 = !DILocation(line: 131, column: 15, scope: !2747)
!2762 = !DILocation(line: 131, column: 12, scope: !2747)
!2763 = !DILocation(line: 132, column: 30, scope: !2747)
!2764 = !DILocation(line: 132, column: 34, scope: !2747)
!2765 = !DILocation(line: 132, column: 15, scope: !2747)
!2766 = !DILocation(line: 132, column: 12, scope: !2747)
!2767 = !DILocation(line: 133, column: 2, scope: !2747)
!2768 = !DILocation(line: 127, column: 24, scope: !2742)
!2769 = !DILocation(line: 127, column: 2, scope: !2742)
!2770 = distinct !{!2770, !2745, !2771}
!2771 = !DILocation(line: 133, column: 2, scope: !2739)
!2772 = !DILocation(line: 134, column: 6, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 134, column: 6)
!2774 = !DILocation(line: 134, column: 15, scope: !2773)
!2775 = !DILocation(line: 134, column: 6, scope: !2683)
!2776 = !DILocation(line: 135, column: 7, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !1, line: 135, column: 7)
!2778 = distinct !DILexicalBlock(scope: !2773, file: !1, line: 134, column: 20)
!2779 = !DILocation(line: 135, column: 7, scope: !2778)
!2780 = !DILocation(line: 135, column: 13, scope: !2777)
!2781 = !DILocation(line: 135, column: 23, scope: !2777)
!2782 = !DILocation(line: 136, column: 3, scope: !2778)
!2783 = !DILocation(line: 140, column: 9, scope: !2683)
!2784 = !DILocation(line: 140, column: 21, scope: !2683)
!2785 = !DILocation(line: 140, column: 30, scope: !2683)
!2786 = !DILocation(line: 140, column: 7, scope: !2683)
!2787 = !DILocation(line: 143, column: 4, scope: !2683)
!2788 = !DILocation(line: 144, column: 8, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 144, column: 2)
!2790 = !DILocation(line: 144, column: 7, scope: !2789)
!2791 = !DILocation(line: 144, column: 12, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2789, file: !1, line: 144, column: 2)
!2793 = !DILocation(line: 144, column: 14, scope: !2792)
!2794 = !DILocation(line: 144, column: 13, scope: !2792)
!2795 = !DILocation(line: 144, column: 2, scope: !2789)
!2796 = !DILocation(line: 145, column: 17, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2792, file: !1, line: 144, column: 28)
!2798 = !DILocation(line: 145, column: 22, scope: !2797)
!2799 = !DILocation(line: 145, column: 7, scope: !2797)
!2800 = !DILocation(line: 145, column: 5, scope: !2797)
!2801 = !DILocation(line: 146, column: 9, scope: !2797)
!2802 = !DILocation(line: 146, column: 13, scope: !2797)
!2803 = !DILocation(line: 146, column: 18, scope: !2797)
!2804 = !DILocation(line: 146, column: 7, scope: !2797)
!2805 = !DILocation(line: 147, column: 3, scope: !2797)
!2806 = !DILocation(line: 147, column: 10, scope: !2797)
!2807 = !DILocation(line: 148, column: 18, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 147, column: 16)
!2809 = !DILocation(line: 148, column: 24, scope: !2808)
!2810 = !DILocation(line: 148, column: 4, scope: !2808)
!2811 = !DILocation(line: 148, column: 12, scope: !2808)
!2812 = !DILocation(line: 148, column: 16, scope: !2808)
!2813 = !DILocation(line: 149, column: 10, scope: !2808)
!2814 = !DILocation(line: 149, column: 16, scope: !2808)
!2815 = !DILocation(line: 149, column: 8, scope: !2808)
!2816 = distinct !{!2816, !2805, !2817}
!2817 = !DILocation(line: 150, column: 3, scope: !2797)
!2818 = !DILocation(line: 151, column: 9, scope: !2797)
!2819 = !DILocation(line: 151, column: 13, scope: !2797)
!2820 = !DILocation(line: 151, column: 21, scope: !2797)
!2821 = !DILocation(line: 151, column: 7, scope: !2797)
!2822 = !DILocation(line: 152, column: 3, scope: !2797)
!2823 = !DILocation(line: 152, column: 10, scope: !2797)
!2824 = !DILocation(line: 153, column: 18, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 152, column: 16)
!2826 = !DILocation(line: 153, column: 24, scope: !2825)
!2827 = !DILocation(line: 153, column: 4, scope: !2825)
!2828 = !DILocation(line: 153, column: 12, scope: !2825)
!2829 = !DILocation(line: 153, column: 16, scope: !2825)
!2830 = !DILocation(line: 154, column: 10, scope: !2825)
!2831 = !DILocation(line: 154, column: 16, scope: !2825)
!2832 = !DILocation(line: 154, column: 8, scope: !2825)
!2833 = distinct !{!2833, !2822, !2834}
!2834 = !DILocation(line: 155, column: 3, scope: !2797)
!2835 = !DILocation(line: 156, column: 9, scope: !2797)
!2836 = !DILocation(line: 156, column: 13, scope: !2797)
!2837 = !DILocation(line: 156, column: 25, scope: !2797)
!2838 = !DILocation(line: 156, column: 7, scope: !2797)
!2839 = !DILocation(line: 157, column: 3, scope: !2797)
!2840 = !DILocation(line: 157, column: 10, scope: !2797)
!2841 = !DILocation(line: 158, column: 18, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 157, column: 16)
!2843 = !DILocation(line: 158, column: 24, scope: !2842)
!2844 = !DILocation(line: 158, column: 4, scope: !2842)
!2845 = !DILocation(line: 158, column: 12, scope: !2842)
!2846 = !DILocation(line: 158, column: 16, scope: !2842)
!2847 = !DILocation(line: 159, column: 10, scope: !2842)
!2848 = !DILocation(line: 159, column: 16, scope: !2842)
!2849 = !DILocation(line: 159, column: 8, scope: !2842)
!2850 = distinct !{!2850, !2839, !2851}
!2851 = !DILocation(line: 160, column: 3, scope: !2797)
!2852 = !DILocation(line: 161, column: 8, scope: !2797)
!2853 = !DILocation(line: 161, column: 12, scope: !2797)
!2854 = !DILocation(line: 161, column: 22, scope: !2797)
!2855 = !DILocation(line: 161, column: 6, scope: !2797)
!2856 = !DILocation(line: 162, column: 3, scope: !2797)
!2857 = !DILocation(line: 162, column: 10, scope: !2797)
!2858 = !DILocation(line: 163, column: 18, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 162, column: 15)
!2860 = !DILocation(line: 163, column: 23, scope: !2859)
!2861 = !DILocation(line: 163, column: 4, scope: !2859)
!2862 = !DILocation(line: 163, column: 12, scope: !2859)
!2863 = !DILocation(line: 163, column: 16, scope: !2859)
!2864 = !DILocation(line: 164, column: 9, scope: !2859)
!2865 = !DILocation(line: 164, column: 14, scope: !2859)
!2866 = !DILocation(line: 164, column: 7, scope: !2859)
!2867 = distinct !{!2867, !2856, !2868}
!2868 = !DILocation(line: 165, column: 3, scope: !2797)
!2869 = !DILocation(line: 166, column: 2, scope: !2797)
!2870 = !DILocation(line: 144, column: 24, scope: !2792)
!2871 = !DILocation(line: 144, column: 2, scope: !2792)
!2872 = distinct !{!2872, !2795, !2873}
!2873 = !DILocation(line: 166, column: 2, scope: !2789)
!2874 = !DILocation(line: 168, column: 8, scope: !2683)
!2875 = !DILocation(line: 168, column: 15, scope: !2683)
!2876 = !DILocation(line: 168, column: 2, scope: !2683)
!2877 = !DILocation(line: 172, column: 9, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 172, column: 2)
!2879 = !DILocation(line: 172, column: 7, scope: !2878)
!2880 = !DILocation(line: 172, column: 13, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2878, file: !1, line: 172, column: 2)
!2882 = !DILocation(line: 172, column: 16, scope: !2881)
!2883 = !DILocation(line: 172, column: 15, scope: !2881)
!2884 = !DILocation(line: 172, column: 2, scope: !2878)
!2885 = !DILocation(line: 173, column: 7, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !1, line: 173, column: 7)
!2887 = distinct !DILexicalBlock(scope: !2881, file: !1, line: 172, column: 33)
!2888 = !DILocation(line: 173, column: 13, scope: !2886)
!2889 = !DILocation(line: 173, column: 18, scope: !2886)
!2890 = !DILocation(line: 173, column: 16, scope: !2886)
!2891 = !DILocation(line: 173, column: 22, scope: !2886)
!2892 = !DILocation(line: 173, column: 33, scope: !2886)
!2893 = !DILocation(line: 173, column: 39, scope: !2886)
!2894 = !DILocation(line: 173, column: 44, scope: !2886)
!2895 = !DILocation(line: 173, column: 25, scope: !2886)
!2896 = !DILocation(line: 173, column: 49, scope: !2886)
!2897 = !DILocation(line: 173, column: 7, scope: !2887)
!2898 = !DILocation(line: 174, column: 16, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2886, file: !1, line: 173, column: 55)
!2900 = !DILocation(line: 174, column: 4, scope: !2899)
!2901 = !DILocation(line: 175, column: 3, scope: !2899)
!2902 = !DILocation(line: 176, column: 2, scope: !2887)
!2903 = !DILocation(line: 172, column: 29, scope: !2881)
!2904 = !DILocation(line: 172, column: 2, scope: !2881)
!2905 = distinct !{!2905, !2884, !2906}
!2906 = !DILocation(line: 176, column: 2, scope: !2878)
!2907 = !DILocation(line: 178, column: 2, scope: !2683)
!2908 = !DILocation(line: 178, column: 12, scope: !2683)
!2909 = !DILocation(line: 179, column: 2, scope: !2683)
!2910 = !DILocation(line: 179, column: 12, scope: !2683)
!2911 = !DILocation(line: 180, column: 1, scope: !2683)
!2912 = distinct !DISubprogram(name: "get_selected_and_linked_obs", scope: !1, file: !1, line: 545, type: !2913, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!2720, !2686, !2915, !1083}
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!2916 = !DILocalVariable(name: "C", arg: 1, scope: !2912, file: !1, line: 545, type: !2686)
!2917 = !DILocation(line: 545, column: 51, scope: !2912)
!2918 = !DILocalVariable(name: "count", arg: 2, scope: !2912, file: !1, line: 545, type: !2915)
!2919 = !DILocation(line: 545, column: 61, scope: !2912)
!2920 = !DILocalVariable(name: "scavisflag", arg: 3, scope: !2912, file: !1, line: 545, type: !1083)
!2921 = !DILocation(line: 545, column: 74, scope: !2912)
!2922 = !DILocalVariable(name: "base", scope: !2912, file: !1, line: 547, type: !2923)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !1246, line: 75, baseType: !1403)
!2925 = !DILocation(line: 547, column: 8, scope: !2912)
!2926 = !DILocalVariable(name: "bmain", scope: !2912, file: !1, line: 548, type: !2927)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2929, line: 104, baseType: !2930)
!2929 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2929, line: 53, size: 15232, elements: !2931)
!2931 = !{!2932, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2985}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2930, file: !2929, line: 54, baseType: !2933, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2930, file: !2929, line: 54, baseType: !2933, size: 64, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2930, file: !2929, line: 55, baseType: !1069, size: 8192, offset: 128)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2930, file: !2929, line: 56, baseType: !1083, size: 16, offset: 8320)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2930, file: !2929, line: 56, baseType: !1083, size: 16, offset: 8336)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2930, file: !2929, line: 57, baseType: !1083, size: 16, offset: 8352)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2930, file: !2929, line: 57, baseType: !1083, size: 16, offset: 8368)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2930, file: !2929, line: 58, baseType: !1361, size: 64, offset: 8384)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2930, file: !2929, line: 59, baseType: !2942, size: 128, offset: 8448)
!2942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 128, elements: !2943)
!2943 = !{!2944}
!2944 = !DISubrange(count: 16)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2930, file: !2929, line: 60, baseType: !1083, size: 16, offset: 8576)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2930, file: !2929, line: 62, baseType: !1059, size: 64, offset: 8640)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2930, file: !2929, line: 63, baseType: !1110, size: 128, offset: 8704)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2930, file: !2929, line: 64, baseType: !1110, size: 128, offset: 8832)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2930, file: !2929, line: 65, baseType: !1110, size: 128, offset: 8960)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2930, file: !2929, line: 66, baseType: !1110, size: 128, offset: 9088)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2930, file: !2929, line: 67, baseType: !1110, size: 128, offset: 9216)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2930, file: !2929, line: 68, baseType: !1110, size: 128, offset: 9344)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2930, file: !2929, line: 69, baseType: !1110, size: 128, offset: 9472)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2930, file: !2929, line: 70, baseType: !1110, size: 128, offset: 9600)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2930, file: !2929, line: 71, baseType: !1110, size: 128, offset: 9728)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2930, file: !2929, line: 72, baseType: !1110, size: 128, offset: 9856)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2930, file: !2929, line: 73, baseType: !1110, size: 128, offset: 9984)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2930, file: !2929, line: 74, baseType: !1110, size: 128, offset: 10112)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2930, file: !2929, line: 75, baseType: !1110, size: 128, offset: 10240)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2930, file: !2929, line: 76, baseType: !1110, size: 128, offset: 10368)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2930, file: !2929, line: 77, baseType: !1110, size: 128, offset: 10496)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2930, file: !2929, line: 78, baseType: !1110, size: 128, offset: 10624)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2930, file: !2929, line: 79, baseType: !1110, size: 128, offset: 10752)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2930, file: !2929, line: 80, baseType: !1110, size: 128, offset: 10880)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2930, file: !2929, line: 81, baseType: !1110, size: 128, offset: 11008)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2930, file: !2929, line: 82, baseType: !1110, size: 128, offset: 11136)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2930, file: !2929, line: 83, baseType: !1110, size: 128, offset: 11264)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2930, file: !2929, line: 84, baseType: !1110, size: 128, offset: 11392)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2930, file: !2929, line: 85, baseType: !1110, size: 128, offset: 11520)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2930, file: !2929, line: 86, baseType: !1110, size: 128, offset: 11648)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2930, file: !2929, line: 87, baseType: !1110, size: 128, offset: 11776)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2930, file: !2929, line: 88, baseType: !1110, size: 128, offset: 11904)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2930, file: !2929, line: 89, baseType: !1110, size: 128, offset: 12032)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2930, file: !2929, line: 90, baseType: !1110, size: 128, offset: 12160)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2930, file: !2929, line: 91, baseType: !1110, size: 128, offset: 12288)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2930, file: !2929, line: 92, baseType: !1110, size: 128, offset: 12416)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2930, file: !2929, line: 93, baseType: !1110, size: 128, offset: 12544)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2930, file: !2929, line: 94, baseType: !1110, size: 128, offset: 12672)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2930, file: !2929, line: 95, baseType: !1110, size: 128, offset: 12800)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2930, file: !2929, line: 96, baseType: !1110, size: 128, offset: 12928)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2930, file: !2929, line: 98, baseType: !1555, size: 2048, offset: 13056)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2930, file: !2929, line: 101, baseType: !2983, size: 64, offset: 15104)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2929, line: 49, flags: DIFlagFwdDecl)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2930, file: !2929, line: 103, baseType: !2986, size: 64, offset: 15168)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2929, line: 51, flags: DIFlagFwdDecl)
!2988 = !DILocation(line: 548, column: 8, scope: !2912)
!2989 = !DILocation(line: 548, column: 29, scope: !2912)
!2990 = !DILocation(line: 548, column: 15, scope: !2912)
!2991 = !DILocalVariable(name: "scene", scope: !2912, file: !1, line: 549, type: !2992)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1246, line: 1299, baseType: !1391)
!2994 = !DILocation(line: 549, column: 9, scope: !2912)
!2995 = !DILocation(line: 549, column: 31, scope: !2912)
!2996 = !DILocation(line: 549, column: 16, scope: !2912)
!2997 = !DILocalVariable(name: "ob", scope: !2912, file: !1, line: 550, type: !1044)
!2998 = !DILocation(line: 550, column: 10, scope: !2912)
!2999 = !DILocalVariable(name: "obt", scope: !2912, file: !1, line: 550, type: !1044)
!3000 = !DILocation(line: 550, column: 15, scope: !2912)
!3001 = !DILocalVariable(name: "obact", scope: !2912, file: !1, line: 550, type: !1044)
!3002 = !DILocation(line: 550, column: 21, scope: !2912)
!3003 = !DILocation(line: 550, column: 51, scope: !2912)
!3004 = !DILocation(line: 550, column: 28, scope: !2912)
!3005 = !DILocalVariable(name: "idar", scope: !2912, file: !1, line: 551, type: !2720)
!3006 = !DILocation(line: 551, column: 7, scope: !2912)
!3007 = !DILocalVariable(name: "sens", scope: !2912, file: !1, line: 552, type: !2648)
!3008 = !DILocation(line: 552, column: 11, scope: !2912)
!3009 = !DILocalVariable(name: "cont", scope: !2912, file: !1, line: 553, type: !2583)
!3010 = !DILocation(line: 553, column: 15, scope: !2912)
!3011 = !DILocalVariable(name: "lay", scope: !2912, file: !1, line: 554, type: !5)
!3012 = !DILocation(line: 554, column: 15, scope: !2912)
!3013 = !DILocalVariable(name: "a", scope: !2912, file: !1, line: 555, type: !1085)
!3014 = !DILocation(line: 555, column: 6, scope: !2912)
!3015 = !DILocalVariable(name: "nr", scope: !2912, file: !1, line: 555, type: !1085)
!3016 = !DILocation(line: 555, column: 9, scope: !2912)
!3017 = !DILocalVariable(name: "do_it", scope: !2912, file: !1, line: 555, type: !1085)
!3018 = !DILocation(line: 555, column: 13, scope: !2912)
!3019 = !DILocation(line: 561, column: 3, scope: !2912)
!3020 = !DILocation(line: 561, column: 8, scope: !2912)
!3021 = !DILocation(line: 563, column: 6, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 563, column: 6)
!3023 = !DILocation(line: 563, column: 11, scope: !3022)
!3024 = !DILocation(line: 563, column: 6, scope: !2912)
!3025 = !DILocation(line: 563, column: 19, scope: !3022)
!3026 = !DILocation(line: 565, column: 6, scope: !2912)
!3027 = !DILocation(line: 565, column: 13, scope: !2912)
!3028 = !DILocation(line: 565, column: 20, scope: !2912)
!3029 = !DILocation(line: 565, column: 4, scope: !2912)
!3030 = !DILocation(line: 566, column: 2, scope: !2912)
!3031 = !DILocation(line: 566, column: 9, scope: !2912)
!3032 = !DILocation(line: 567, column: 3, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 566, column: 13)
!3034 = !DILocation(line: 567, column: 7, scope: !3033)
!3035 = !DILocation(line: 567, column: 17, scope: !3033)
!3036 = !DILocation(line: 568, column: 14, scope: !3033)
!3037 = !DILocation(line: 568, column: 3, scope: !3033)
!3038 = !DILocation(line: 569, column: 7, scope: !3033)
!3039 = !DILocation(line: 569, column: 11, scope: !3033)
!3040 = !DILocation(line: 569, column: 14, scope: !3033)
!3041 = !DILocation(line: 569, column: 5, scope: !3033)
!3042 = distinct !{!3042, !3030, !3043}
!3043 = !DILocation(line: 570, column: 2, scope: !2912)
!3044 = !DILocation(line: 573, column: 7, scope: !2912)
!3045 = !DILocation(line: 573, column: 14, scope: !2912)
!3046 = !DILocation(line: 573, column: 5, scope: !2912)
!3047 = !DILocation(line: 575, column: 8, scope: !2912)
!3048 = !DILocation(line: 575, column: 6, scope: !2912)
!3049 = !DILocation(line: 576, column: 2, scope: !2912)
!3050 = !DILocation(line: 576, column: 9, scope: !2912)
!3051 = !DILocation(line: 577, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !1, line: 577, column: 7)
!3053 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 576, column: 15)
!3054 = !DILocation(line: 577, column: 13, scope: !3052)
!3055 = !DILocation(line: 577, column: 19, scope: !3052)
!3056 = !DILocation(line: 577, column: 17, scope: !3052)
!3057 = !DILocation(line: 577, column: 7, scope: !3053)
!3058 = !DILocation(line: 578, column: 8, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !1, line: 578, column: 8)
!3060 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 577, column: 24)
!3061 = !DILocation(line: 578, column: 14, scope: !3059)
!3062 = !DILocation(line: 578, column: 19, scope: !3059)
!3063 = !DILocation(line: 578, column: 8, scope: !3060)
!3064 = !DILocation(line: 579, column: 9, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 579, column: 9)
!3066 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 578, column: 29)
!3067 = !DILocation(line: 579, column: 20, scope: !3065)
!3068 = !DILocation(line: 579, column: 9, scope: !3066)
!3069 = !DILocation(line: 579, column: 37, scope: !3065)
!3070 = !DILocation(line: 579, column: 43, scope: !3065)
!3071 = !DILocation(line: 579, column: 51, scope: !3065)
!3072 = !DILocation(line: 579, column: 62, scope: !3065)
!3073 = !DILocation(line: 580, column: 9, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 580, column: 9)
!3075 = !DILocation(line: 580, column: 20, scope: !3074)
!3076 = !DILocation(line: 580, column: 9, scope: !3066)
!3077 = !DILocation(line: 580, column: 37, scope: !3074)
!3078 = !DILocation(line: 580, column: 43, scope: !3074)
!3079 = !DILocation(line: 580, column: 51, scope: !3074)
!3080 = !DILocation(line: 580, column: 62, scope: !3074)
!3081 = !DILocation(line: 581, column: 9, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 581, column: 9)
!3083 = !DILocation(line: 581, column: 20, scope: !3082)
!3084 = !DILocation(line: 581, column: 9, scope: !3066)
!3085 = !DILocation(line: 581, column: 36, scope: !3082)
!3086 = !DILocation(line: 581, column: 42, scope: !3082)
!3087 = !DILocation(line: 581, column: 50, scope: !3082)
!3088 = !DILocation(line: 581, column: 61, scope: !3082)
!3089 = !DILocation(line: 582, column: 4, scope: !3066)
!3090 = !DILocation(line: 583, column: 3, scope: !3060)
!3091 = !DILocation(line: 584, column: 9, scope: !3053)
!3092 = !DILocation(line: 584, column: 15, scope: !3053)
!3093 = !DILocation(line: 584, column: 7, scope: !3053)
!3094 = distinct !{!3094, !3049, !3095}
!3095 = !DILocation(line: 585, column: 2, scope: !2912)
!3096 = !DILocation(line: 587, column: 6, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 587, column: 6)
!3098 = !DILocation(line: 587, column: 6, scope: !2912)
!3099 = !DILocation(line: 588, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3101, file: !1, line: 588, column: 7)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !1, line: 587, column: 13)
!3102 = !DILocation(line: 588, column: 18, scope: !3100)
!3103 = !DILocation(line: 588, column: 7, scope: !3101)
!3104 = !DILocation(line: 588, column: 35, scope: !3100)
!3105 = !DILocation(line: 588, column: 42, scope: !3100)
!3106 = !DILocation(line: 588, column: 53, scope: !3100)
!3107 = !DILocation(line: 589, column: 7, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3101, file: !1, line: 589, column: 7)
!3109 = !DILocation(line: 589, column: 18, scope: !3108)
!3110 = !DILocation(line: 589, column: 7, scope: !3101)
!3111 = !DILocation(line: 589, column: 35, scope: !3108)
!3112 = !DILocation(line: 589, column: 42, scope: !3108)
!3113 = !DILocation(line: 589, column: 53, scope: !3108)
!3114 = !DILocation(line: 590, column: 7, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3101, file: !1, line: 590, column: 7)
!3116 = !DILocation(line: 590, column: 18, scope: !3115)
!3117 = !DILocation(line: 590, column: 7, scope: !3101)
!3118 = !DILocation(line: 590, column: 34, scope: !3115)
!3119 = !DILocation(line: 590, column: 41, scope: !3115)
!3120 = !DILocation(line: 590, column: 52, scope: !3115)
!3121 = !DILocation(line: 591, column: 2, scope: !3101)
!3122 = !DILocation(line: 594, column: 6, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 594, column: 6)
!3124 = !DILocation(line: 594, column: 17, scope: !3123)
!3125 = !DILocation(line: 594, column: 6, scope: !2912)
!3126 = !DILocation(line: 595, column: 9, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3123, file: !1, line: 594, column: 97)
!3128 = !DILocation(line: 596, column: 3, scope: !3127)
!3129 = !DILocation(line: 596, column: 10, scope: !3127)
!3130 = !DILocation(line: 597, column: 10, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 596, column: 17)
!3132 = !DILocation(line: 599, column: 8, scope: !3131)
!3133 = !DILocation(line: 599, column: 15, scope: !3131)
!3134 = !DILocation(line: 599, column: 22, scope: !3131)
!3135 = !DILocation(line: 599, column: 6, scope: !3131)
!3136 = !DILocation(line: 600, column: 4, scope: !3131)
!3137 = !DILocation(line: 600, column: 11, scope: !3131)
!3138 = !DILocation(line: 603, column: 10, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 603, column: 9)
!3140 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 600, column: 15)
!3141 = !DILocation(line: 603, column: 21, scope: !3139)
!3142 = !DILocation(line: 603, column: 57, scope: !3139)
!3143 = !DILocation(line: 603, column: 61, scope: !3139)
!3144 = !DILocation(line: 603, column: 65, scope: !3139)
!3145 = !DILocation(line: 603, column: 76, scope: !3139)
!3146 = !DILocation(line: 603, column: 90, scope: !3139)
!3147 = !DILocation(line: 603, column: 9, scope: !3140)
!3148 = !DILocation(line: 604, column: 12, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3139, file: !1, line: 603, column: 95)
!3150 = !DILocation(line: 604, column: 16, scope: !3149)
!3151 = !DILocation(line: 604, column: 24, scope: !3149)
!3152 = !DILocation(line: 604, column: 10, scope: !3149)
!3153 = !DILocation(line: 605, column: 6, scope: !3149)
!3154 = !DILocation(line: 605, column: 13, scope: !3149)
!3155 = !DILocation(line: 606, column: 13, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !1, line: 606, column: 7)
!3157 = distinct !DILexicalBlock(scope: !3149, file: !1, line: 605, column: 19)
!3158 = !DILocation(line: 606, column: 12, scope: !3156)
!3159 = !DILocation(line: 606, column: 17, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3156, file: !1, line: 606, column: 7)
!3161 = !DILocation(line: 606, column: 19, scope: !3160)
!3162 = !DILocation(line: 606, column: 25, scope: !3160)
!3163 = !DILocation(line: 606, column: 18, scope: !3160)
!3164 = !DILocation(line: 606, column: 7, scope: !3156)
!3165 = !DILocation(line: 607, column: 12, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 607, column: 12)
!3167 = distinct !DILexicalBlock(scope: !3160, file: !1, line: 606, column: 40)
!3168 = !DILocation(line: 607, column: 18, scope: !3166)
!3169 = !DILocation(line: 607, column: 24, scope: !3166)
!3170 = !DILocation(line: 607, column: 12, scope: !3167)
!3171 = !DILocation(line: 608, column: 24, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3166, file: !1, line: 607, column: 28)
!3173 = !DILocation(line: 608, column: 30, scope: !3172)
!3174 = !DILocation(line: 608, column: 36, scope: !3172)
!3175 = !DILocation(line: 608, column: 40, scope: !3172)
!3176 = !DILocation(line: 608, column: 14, scope: !3172)
!3177 = !DILocation(line: 608, column: 12, scope: !3172)
!3178 = !DILocation(line: 609, column: 13, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 609, column: 13)
!3180 = !DILocation(line: 609, column: 17, scope: !3179)
!3181 = !DILocation(line: 609, column: 21, scope: !3179)
!3182 = !DILocation(line: 609, column: 26, scope: !3179)
!3183 = !DILocation(line: 609, column: 37, scope: !3179)
!3184 = !DILocation(line: 609, column: 13, scope: !3172)
!3185 = !DILocation(line: 610, column: 16, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3179, file: !1, line: 609, column: 53)
!3187 = !DILocation(line: 611, column: 10, scope: !3186)
!3188 = !DILocation(line: 611, column: 14, scope: !3186)
!3189 = !DILocation(line: 611, column: 25, scope: !3186)
!3190 = !DILocation(line: 612, column: 10, scope: !3186)
!3191 = !DILocation(line: 614, column: 8, scope: !3172)
!3192 = !DILocation(line: 615, column: 7, scope: !3167)
!3193 = !DILocation(line: 606, column: 36, scope: !3160)
!3194 = !DILocation(line: 606, column: 7, scope: !3160)
!3195 = distinct !{!3195, !3164, !3196}
!3196 = !DILocation(line: 615, column: 7, scope: !3156)
!3197 = !DILocation(line: 616, column: 11, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3157, file: !1, line: 616, column: 11)
!3199 = !DILocation(line: 616, column: 11, scope: !3157)
!3200 = !DILocation(line: 616, column: 18, scope: !3198)
!3201 = !DILocation(line: 617, column: 13, scope: !3157)
!3202 = !DILocation(line: 617, column: 19, scope: !3157)
!3203 = !DILocation(line: 617, column: 11, scope: !3157)
!3204 = distinct !{!3204, !3153, !3205}
!3205 = !DILocation(line: 618, column: 6, scope: !3149)
!3206 = !DILocation(line: 619, column: 5, scope: !3149)
!3207 = !DILocation(line: 622, column: 10, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 622, column: 9)
!3209 = !DILocation(line: 622, column: 21, scope: !3208)
!3210 = !DILocation(line: 622, column: 39, scope: !3208)
!3211 = !DILocation(line: 622, column: 43, scope: !3208)
!3212 = !DILocation(line: 622, column: 47, scope: !3208)
!3213 = !DILocation(line: 622, column: 58, scope: !3208)
!3214 = !DILocation(line: 622, column: 72, scope: !3208)
!3215 = !DILocation(line: 622, column: 9, scope: !3140)
!3216 = !DILocation(line: 623, column: 12, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3208, file: !1, line: 622, column: 77)
!3218 = !DILocation(line: 623, column: 16, scope: !3217)
!3219 = !DILocation(line: 623, column: 28, scope: !3217)
!3220 = !DILocation(line: 623, column: 10, scope: !3217)
!3221 = !DILocation(line: 624, column: 6, scope: !3217)
!3222 = !DILocation(line: 624, column: 13, scope: !3217)
!3223 = !DILocation(line: 625, column: 13, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 625, column: 7)
!3225 = distinct !DILexicalBlock(scope: !3217, file: !1, line: 624, column: 19)
!3226 = !DILocation(line: 625, column: 12, scope: !3224)
!3227 = !DILocation(line: 625, column: 17, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 625, column: 7)
!3229 = !DILocation(line: 625, column: 19, scope: !3228)
!3230 = !DILocation(line: 625, column: 25, scope: !3228)
!3231 = !DILocation(line: 625, column: 18, scope: !3228)
!3232 = !DILocation(line: 625, column: 7, scope: !3224)
!3233 = !DILocation(line: 626, column: 12, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !1, line: 626, column: 12)
!3235 = distinct !DILexicalBlock(scope: !3228, file: !1, line: 625, column: 40)
!3236 = !DILocation(line: 626, column: 18, scope: !3234)
!3237 = !DILocation(line: 626, column: 24, scope: !3234)
!3238 = !DILocation(line: 626, column: 12, scope: !3235)
!3239 = !DILocation(line: 627, column: 24, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3234, file: !1, line: 626, column: 28)
!3241 = !DILocation(line: 627, column: 30, scope: !3240)
!3242 = !DILocation(line: 627, column: 36, scope: !3240)
!3243 = !DILocation(line: 627, column: 40, scope: !3240)
!3244 = !DILocation(line: 627, column: 14, scope: !3240)
!3245 = !DILocation(line: 627, column: 12, scope: !3240)
!3246 = !DILocation(line: 628, column: 13, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3240, file: !1, line: 628, column: 13)
!3248 = !DILocation(line: 628, column: 17, scope: !3247)
!3249 = !DILocation(line: 628, column: 21, scope: !3247)
!3250 = !DILocation(line: 628, column: 26, scope: !3247)
!3251 = !DILocation(line: 628, column: 37, scope: !3247)
!3252 = !DILocation(line: 628, column: 13, scope: !3240)
!3253 = !DILocation(line: 629, column: 16, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3247, file: !1, line: 628, column: 52)
!3255 = !DILocation(line: 630, column: 10, scope: !3254)
!3256 = !DILocation(line: 630, column: 14, scope: !3254)
!3257 = !DILocation(line: 630, column: 25, scope: !3254)
!3258 = !DILocation(line: 631, column: 10, scope: !3254)
!3259 = !DILocation(line: 633, column: 8, scope: !3240)
!3260 = !DILocation(line: 634, column: 7, scope: !3235)
!3261 = !DILocation(line: 625, column: 36, scope: !3228)
!3262 = !DILocation(line: 625, column: 7, scope: !3228)
!3263 = distinct !{!3263, !3232, !3264}
!3264 = !DILocation(line: 634, column: 7, scope: !3224)
!3265 = !DILocation(line: 635, column: 11, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 635, column: 11)
!3267 = !DILocation(line: 635, column: 11, scope: !3225)
!3268 = !DILocation(line: 635, column: 18, scope: !3266)
!3269 = !DILocation(line: 636, column: 13, scope: !3225)
!3270 = !DILocation(line: 636, column: 19, scope: !3225)
!3271 = !DILocation(line: 636, column: 11, scope: !3225)
!3272 = distinct !{!3272, !3221, !3273}
!3273 = !DILocation(line: 637, column: 6, scope: !3217)
!3274 = !DILocation(line: 638, column: 5, scope: !3217)
!3275 = !DILocation(line: 641, column: 10, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 641, column: 9)
!3277 = !DILocation(line: 641, column: 21, scope: !3276)
!3278 = !DILocation(line: 641, column: 39, scope: !3276)
!3279 = !DILocation(line: 641, column: 43, scope: !3276)
!3280 = !DILocation(line: 641, column: 47, scope: !3276)
!3281 = !DILocation(line: 641, column: 58, scope: !3276)
!3282 = !DILocation(line: 641, column: 9, scope: !3140)
!3283 = !DILocation(line: 642, column: 12, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 641, column: 74)
!3285 = !DILocation(line: 642, column: 16, scope: !3284)
!3286 = !DILocation(line: 642, column: 24, scope: !3284)
!3287 = !DILocation(line: 642, column: 10, scope: !3284)
!3288 = !DILocation(line: 643, column: 6, scope: !3284)
!3289 = !DILocation(line: 643, column: 13, scope: !3284)
!3290 = !DILocation(line: 644, column: 13, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 644, column: 7)
!3292 = distinct !DILexicalBlock(scope: !3284, file: !1, line: 643, column: 19)
!3293 = !DILocation(line: 644, column: 12, scope: !3291)
!3294 = !DILocation(line: 644, column: 17, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !1, line: 644, column: 7)
!3296 = !DILocation(line: 644, column: 19, scope: !3295)
!3297 = !DILocation(line: 644, column: 25, scope: !3295)
!3298 = !DILocation(line: 644, column: 18, scope: !3295)
!3299 = !DILocation(line: 644, column: 7, scope: !3291)
!3300 = !DILocation(line: 645, column: 12, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !1, line: 645, column: 12)
!3302 = distinct !DILexicalBlock(scope: !3295, file: !1, line: 644, column: 40)
!3303 = !DILocation(line: 645, column: 18, scope: !3301)
!3304 = !DILocation(line: 645, column: 24, scope: !3301)
!3305 = !DILocation(line: 645, column: 12, scope: !3302)
!3306 = !DILocation(line: 646, column: 24, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 645, column: 28)
!3308 = !DILocation(line: 646, column: 30, scope: !3307)
!3309 = !DILocation(line: 646, column: 36, scope: !3307)
!3310 = !DILocation(line: 646, column: 40, scope: !3307)
!3311 = !DILocation(line: 646, column: 14, scope: !3307)
!3312 = !DILocation(line: 646, column: 12, scope: !3307)
!3313 = !DILocation(line: 647, column: 13, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3307, file: !1, line: 647, column: 13)
!3315 = !DILocation(line: 647, column: 17, scope: !3314)
!3316 = !DILocation(line: 647, column: 21, scope: !3314)
!3317 = !DILocation(line: 647, column: 26, scope: !3314)
!3318 = !DILocation(line: 647, column: 37, scope: !3314)
!3319 = !DILocation(line: 647, column: 51, scope: !3314)
!3320 = !DILocation(line: 647, column: 13, scope: !3307)
!3321 = !DILocation(line: 648, column: 16, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3314, file: !1, line: 647, column: 56)
!3323 = !DILocation(line: 649, column: 10, scope: !3322)
!3324 = !DILocation(line: 649, column: 15, scope: !3322)
!3325 = !DILocation(line: 649, column: 26, scope: !3322)
!3326 = !DILocation(line: 650, column: 9, scope: !3322)
!3327 = !DILocation(line: 651, column: 8, scope: !3307)
!3328 = !DILocation(line: 652, column: 7, scope: !3302)
!3329 = !DILocation(line: 644, column: 36, scope: !3295)
!3330 = !DILocation(line: 644, column: 7, scope: !3295)
!3331 = distinct !{!3331, !3299, !3332}
!3332 = !DILocation(line: 652, column: 7, scope: !3291)
!3333 = !DILocation(line: 653, column: 13, scope: !3292)
!3334 = !DILocation(line: 653, column: 19, scope: !3292)
!3335 = !DILocation(line: 653, column: 11, scope: !3292)
!3336 = distinct !{!3336, !3288, !3337}
!3337 = !DILocation(line: 654, column: 6, scope: !3284)
!3338 = !DILocation(line: 655, column: 5, scope: !3284)
!3339 = !DILocation(line: 658, column: 10, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 658, column: 9)
!3341 = !DILocation(line: 658, column: 21, scope: !3340)
!3342 = !DILocation(line: 658, column: 55, scope: !3340)
!3343 = !DILocation(line: 658, column: 59, scope: !3340)
!3344 = !DILocation(line: 658, column: 63, scope: !3340)
!3345 = !DILocation(line: 658, column: 74, scope: !3340)
!3346 = !DILocation(line: 658, column: 9, scope: !3140)
!3347 = !DILocation(line: 659, column: 12, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3340, file: !1, line: 658, column: 90)
!3349 = !DILocation(line: 659, column: 16, scope: !3348)
!3350 = !DILocation(line: 659, column: 28, scope: !3348)
!3351 = !DILocation(line: 659, column: 10, scope: !3348)
!3352 = !DILocation(line: 660, column: 6, scope: !3348)
!3353 = !DILocation(line: 660, column: 13, scope: !3348)
!3354 = !DILocation(line: 661, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !1, line: 661, column: 7)
!3356 = distinct !DILexicalBlock(scope: !3348, file: !1, line: 660, column: 19)
!3357 = !DILocation(line: 661, column: 12, scope: !3355)
!3358 = !DILocation(line: 661, column: 17, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3355, file: !1, line: 661, column: 7)
!3360 = !DILocation(line: 661, column: 19, scope: !3359)
!3361 = !DILocation(line: 661, column: 25, scope: !3359)
!3362 = !DILocation(line: 661, column: 18, scope: !3359)
!3363 = !DILocation(line: 661, column: 7, scope: !3355)
!3364 = !DILocation(line: 662, column: 12, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !1, line: 662, column: 12)
!3366 = distinct !DILexicalBlock(scope: !3359, file: !1, line: 661, column: 40)
!3367 = !DILocation(line: 662, column: 18, scope: !3365)
!3368 = !DILocation(line: 662, column: 24, scope: !3365)
!3369 = !DILocation(line: 662, column: 12, scope: !3366)
!3370 = !DILocation(line: 663, column: 24, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3365, file: !1, line: 662, column: 28)
!3372 = !DILocation(line: 663, column: 30, scope: !3371)
!3373 = !DILocation(line: 663, column: 36, scope: !3371)
!3374 = !DILocation(line: 663, column: 40, scope: !3371)
!3375 = !DILocation(line: 663, column: 14, scope: !3371)
!3376 = !DILocation(line: 663, column: 12, scope: !3371)
!3377 = !DILocation(line: 664, column: 13, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 664, column: 13)
!3379 = !DILocation(line: 664, column: 17, scope: !3378)
!3380 = !DILocation(line: 664, column: 21, scope: !3378)
!3381 = !DILocation(line: 664, column: 26, scope: !3378)
!3382 = !DILocation(line: 664, column: 37, scope: !3378)
!3383 = !DILocation(line: 664, column: 50, scope: !3378)
!3384 = !DILocation(line: 664, column: 13, scope: !3371)
!3385 = !DILocation(line: 665, column: 16, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3378, file: !1, line: 664, column: 55)
!3387 = !DILocation(line: 666, column: 10, scope: !3386)
!3388 = !DILocation(line: 666, column: 15, scope: !3386)
!3389 = !DILocation(line: 666, column: 26, scope: !3386)
!3390 = !DILocation(line: 667, column: 9, scope: !3386)
!3391 = !DILocation(line: 668, column: 8, scope: !3371)
!3392 = !DILocation(line: 669, column: 7, scope: !3366)
!3393 = !DILocation(line: 661, column: 36, scope: !3359)
!3394 = !DILocation(line: 661, column: 7, scope: !3359)
!3395 = distinct !{!3395, !3363, !3396}
!3396 = !DILocation(line: 669, column: 7, scope: !3355)
!3397 = !DILocation(line: 670, column: 13, scope: !3356)
!3398 = !DILocation(line: 670, column: 19, scope: !3356)
!3399 = !DILocation(line: 670, column: 11, scope: !3356)
!3400 = distinct !{!3400, !3352, !3401}
!3401 = !DILocation(line: 671, column: 6, scope: !3348)
!3402 = !DILocation(line: 673, column: 5, scope: !3348)
!3403 = !DILocation(line: 674, column: 9, scope: !3140)
!3404 = !DILocation(line: 674, column: 13, scope: !3140)
!3405 = !DILocation(line: 674, column: 16, scope: !3140)
!3406 = !DILocation(line: 674, column: 7, scope: !3140)
!3407 = distinct !{!3407, !3136, !3408}
!3408 = !DILocation(line: 675, column: 4, scope: !3131)
!3409 = distinct !{!3409, !3128, !3410}
!3410 = !DILocation(line: 676, column: 3, scope: !3127)
!3411 = !DILocation(line: 677, column: 2, scope: !3127)
!3412 = !DILocation(line: 680, column: 6, scope: !2912)
!3413 = !DILocation(line: 680, column: 13, scope: !2912)
!3414 = !DILocation(line: 680, column: 20, scope: !2912)
!3415 = !DILocation(line: 680, column: 4, scope: !2912)
!3416 = !DILocation(line: 681, column: 2, scope: !2912)
!3417 = !DILocation(line: 681, column: 9, scope: !2912)
!3418 = !DILocation(line: 682, column: 8, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !1, line: 682, column: 8)
!3420 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 681, column: 13)
!3421 = !DILocation(line: 682, column: 12, scope: !3419)
!3422 = !DILocation(line: 682, column: 8, scope: !3420)
!3423 = !DILocation(line: 682, column: 27, scope: !3419)
!3424 = !DILocation(line: 682, column: 33, scope: !3419)
!3425 = !DILocation(line: 682, column: 25, scope: !3419)
!3426 = !DILocation(line: 683, column: 7, scope: !3420)
!3427 = !DILocation(line: 683, column: 11, scope: !3420)
!3428 = !DILocation(line: 683, column: 14, scope: !3420)
!3429 = !DILocation(line: 683, column: 5, scope: !3420)
!3430 = distinct !{!3430, !3416, !3431}
!3431 = !DILocation(line: 684, column: 2, scope: !2912)
!3432 = !DILocation(line: 686, column: 7, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 686, column: 6)
!3434 = !DILocation(line: 686, column: 6, scope: !3433)
!3435 = !DILocation(line: 686, column: 13, scope: !3433)
!3436 = !DILocation(line: 686, column: 6, scope: !2912)
!3437 = !DILocation(line: 686, column: 19, scope: !3433)
!3438 = !DILocation(line: 687, column: 7, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 687, column: 6)
!3440 = !DILocation(line: 687, column: 6, scope: !3439)
!3441 = !DILocation(line: 687, column: 13, scope: !3439)
!3442 = !DILocation(line: 687, column: 6, scope: !2912)
!3443 = !DILocation(line: 687, column: 20, scope: !3439)
!3444 = !DILocation(line: 687, column: 26, scope: !3439)
!3445 = !DILocation(line: 687, column: 19, scope: !3439)
!3446 = !DILocation(line: 689, column: 8, scope: !2912)
!3447 = !DILocation(line: 689, column: 22, scope: !2912)
!3448 = !DILocation(line: 689, column: 21, scope: !2912)
!3449 = !DILocation(line: 689, column: 20, scope: !2912)
!3450 = !DILocation(line: 689, column: 28, scope: !2912)
!3451 = !DILocation(line: 689, column: 6, scope: !2912)
!3452 = !DILocation(line: 691, column: 6, scope: !2912)
!3453 = !DILocation(line: 691, column: 13, scope: !2912)
!3454 = !DILocation(line: 691, column: 20, scope: !2912)
!3455 = !DILocation(line: 691, column: 4, scope: !2912)
!3456 = !DILocation(line: 692, column: 4, scope: !2912)
!3457 = !DILocation(line: 695, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 695, column: 6)
!3459 = !DILocation(line: 695, column: 6, scope: !2912)
!3460 = !DILocation(line: 696, column: 19, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3458, file: !1, line: 695, column: 13)
!3462 = !DILocation(line: 696, column: 13, scope: !3461)
!3463 = !DILocation(line: 696, column: 3, scope: !3461)
!3464 = !DILocation(line: 696, column: 11, scope: !3461)
!3465 = !DILocation(line: 697, column: 5, scope: !3461)
!3466 = !DILocation(line: 698, column: 2, scope: !3461)
!3467 = !DILocation(line: 700, column: 2, scope: !2912)
!3468 = !DILocation(line: 700, column: 9, scope: !2912)
!3469 = !DILocation(line: 701, column: 8, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !1, line: 701, column: 7)
!3471 = distinct !DILexicalBlock(scope: !2912, file: !1, line: 700, column: 13)
!3472 = !DILocation(line: 701, column: 12, scope: !3470)
!3473 = !DILocation(line: 701, column: 7, scope: !3470)
!3474 = !DILocation(line: 701, column: 24, scope: !3470)
!3475 = !DILocation(line: 701, column: 28, scope: !3470)
!3476 = !DILocation(line: 701, column: 34, scope: !3470)
!3477 = !DILocation(line: 701, column: 31, scope: !3470)
!3478 = !DILocation(line: 701, column: 7, scope: !3471)
!3479 = !DILocation(line: 702, column: 21, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3470, file: !1, line: 701, column: 42)
!3481 = !DILocation(line: 702, column: 15, scope: !3480)
!3482 = !DILocation(line: 702, column: 4, scope: !3480)
!3483 = !DILocation(line: 702, column: 9, scope: !3480)
!3484 = !DILocation(line: 702, column: 13, scope: !3480)
!3485 = !DILocation(line: 703, column: 6, scope: !3480)
!3486 = !DILocation(line: 704, column: 3, scope: !3480)
!3487 = !DILocation(line: 705, column: 7, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3471, file: !1, line: 705, column: 7)
!3489 = !DILocation(line: 705, column: 10, scope: !3488)
!3490 = !DILocation(line: 705, column: 7, scope: !3471)
!3491 = !DILocation(line: 705, column: 17, scope: !3488)
!3492 = !DILocation(line: 706, column: 7, scope: !3471)
!3493 = !DILocation(line: 706, column: 11, scope: !3471)
!3494 = !DILocation(line: 706, column: 14, scope: !3471)
!3495 = !DILocation(line: 706, column: 5, scope: !3471)
!3496 = distinct !{!3496, !3467, !3497}
!3497 = !DILocation(line: 707, column: 2, scope: !2912)
!3498 = !DILocation(line: 710, column: 2, scope: !2912)
!3499 = !DILocation(line: 712, column: 9, scope: !2912)
!3500 = !DILocation(line: 712, column: 2, scope: !2912)
!3501 = !DILocation(line: 713, column: 1, scope: !2912)
!3502 = distinct !DISubprogram(name: "vergname", scope: !1, file: !1, line: 97, type: !3503, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!1085, !3505, !3505}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3507 = !DILocalVariable(name: "v1", arg: 1, scope: !3502, file: !1, line: 97, type: !3505)
!3508 = !DILocation(line: 97, column: 33, scope: !3502)
!3509 = !DILocalVariable(name: "v2", arg: 2, scope: !3502, file: !1, line: 97, type: !3505)
!3510 = !DILocation(line: 97, column: 49, scope: !3502)
!3511 = !DILocalVariable(name: "x1", scope: !3502, file: !1, line: 99, type: !2582)
!3512 = !DILocation(line: 99, column: 9, scope: !3502)
!3513 = !DILocalVariable(name: "x2", scope: !3502, file: !1, line: 99, type: !2582)
!3514 = !DILocation(line: 99, column: 15, scope: !3502)
!3515 = !DILocation(line: 101, column: 16, scope: !3502)
!3516 = !DILocation(line: 101, column: 7, scope: !3502)
!3517 = !DILocation(line: 101, column: 5, scope: !3502)
!3518 = !DILocation(line: 102, column: 16, scope: !3502)
!3519 = !DILocation(line: 102, column: 7, scope: !3502)
!3520 = !DILocation(line: 102, column: 5, scope: !3502)
!3521 = !DILocation(line: 104, column: 24, scope: !3502)
!3522 = !DILocation(line: 104, column: 23, scope: !3502)
!3523 = !DILocation(line: 104, column: 29, scope: !3502)
!3524 = !DILocation(line: 104, column: 28, scope: !3502)
!3525 = !DILocation(line: 104, column: 9, scope: !3502)
!3526 = !DILocation(line: 104, column: 2, scope: !3502)
!3527 = distinct !DISubprogram(name: "logic_buttons", scope: !1, file: !1, line: 2337, type: !3528, scopeLine: 2338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{null, !2686, !3530}
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !3532, line: 267, baseType: !3533)
!3532 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !3532, line: 230, size: 3072, elements: !3534)
!3534 = !{!3535, !3537, !3538, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3533, file: !3532, line: 231, baseType: !3536, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3533, file: !3532, line: 231, baseType: !3536, size: 64, offset: 64)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3533, file: !3532, line: 233, baseType: !3539, size: 1280, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3540, line: 71, baseType: !3541)
!3540 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3540, line: 40, size: 1280, elements: !3542)
!3542 = !{!3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3566, !3567, !3568, !3571}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3541, file: !3540, line: 41, baseType: !1458, size: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3541, file: !3540, line: 41, baseType: !1458, size: 128, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3541, file: !3540, line: 42, baseType: !2344, size: 128, offset: 256)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3541, file: !3540, line: 42, baseType: !2344, size: 128, offset: 384)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3541, file: !3540, line: 43, baseType: !2344, size: 128, offset: 512)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3541, file: !3540, line: 45, baseType: !1380, size: 64, offset: 640)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3541, file: !3540, line: 45, baseType: !1380, size: 64, offset: 704)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3541, file: !3540, line: 46, baseType: !1149, size: 32, offset: 768)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3541, file: !3540, line: 46, baseType: !1149, size: 32, offset: 800)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3541, file: !3540, line: 48, baseType: !1083, size: 16, offset: 832)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3541, file: !3540, line: 49, baseType: !1083, size: 16, offset: 848)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3541, file: !3540, line: 51, baseType: !1083, size: 16, offset: 864)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3541, file: !3540, line: 52, baseType: !1083, size: 16, offset: 880)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3541, file: !3540, line: 53, baseType: !1083, size: 16, offset: 896)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3541, file: !3540, line: 55, baseType: !1083, size: 16, offset: 912)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3541, file: !3540, line: 56, baseType: !1083, size: 16, offset: 928)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3541, file: !3540, line: 58, baseType: !1083, size: 16, offset: 944)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3541, file: !3540, line: 58, baseType: !1083, size: 16, offset: 960)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3541, file: !3540, line: 59, baseType: !1083, size: 16, offset: 976)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3541, file: !3540, line: 59, baseType: !1083, size: 16, offset: 992)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3541, file: !3540, line: 61, baseType: !1083, size: 16, offset: 1008)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3541, file: !3540, line: 63, baseType: !3565, size: 64, offset: 1024)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3541, file: !3540, line: 64, baseType: !1085, size: 32, offset: 1088)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3541, file: !3540, line: 65, baseType: !1085, size: 32, offset: 1120)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3541, file: !3540, line: 68, baseType: !3569, size: 64, offset: 1152)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3540, line: 68, flags: DIFlagFwdDecl)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3541, file: !3540, line: 69, baseType: !3572, size: 64, offset: 1216)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3540, line: 69, flags: DIFlagFwdDecl)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3533, file: !3532, line: 234, baseType: !2344, size: 128, offset: 1408)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3533, file: !3532, line: 235, baseType: !2344, size: 128, offset: 1536)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3533, file: !3532, line: 236, baseType: !1083, size: 16, offset: 1664)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3533, file: !3532, line: 236, baseType: !1083, size: 16, offset: 1680)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3533, file: !3532, line: 238, baseType: !1083, size: 16, offset: 1696)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3533, file: !3532, line: 239, baseType: !1083, size: 16, offset: 1712)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3533, file: !3532, line: 240, baseType: !1083, size: 16, offset: 1728)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3533, file: !3532, line: 241, baseType: !1083, size: 16, offset: 1744)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3533, file: !3532, line: 243, baseType: !1149, size: 32, offset: 1760)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3533, file: !3532, line: 244, baseType: !1083, size: 16, offset: 1792)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3533, file: !3532, line: 244, baseType: !1083, size: 16, offset: 1808)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3533, file: !3532, line: 246, baseType: !1083, size: 16, offset: 1824)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3533, file: !3532, line: 247, baseType: !1083, size: 16, offset: 1840)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3533, file: !3532, line: 248, baseType: !1083, size: 16, offset: 1856)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3533, file: !3532, line: 249, baseType: !1083, size: 16, offset: 1872)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3533, file: !3532, line: 250, baseType: !1083, size: 16, offset: 1888)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3533, file: !3532, line: 251, baseType: !1083, size: 16, offset: 1904)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3533, file: !3532, line: 253, baseType: !3592, size: 64, offset: 1920)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3532, line: 42, flags: DIFlagFwdDecl)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3533, file: !3532, line: 255, baseType: !1110, size: 128, offset: 1984)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3533, file: !3532, line: 256, baseType: !1110, size: 128, offset: 2112)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3533, file: !3532, line: 257, baseType: !1110, size: 128, offset: 2240)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3533, file: !3532, line: 258, baseType: !1110, size: 128, offset: 2368)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3533, file: !3532, line: 259, baseType: !1110, size: 128, offset: 2496)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3533, file: !3532, line: 260, baseType: !1110, size: 128, offset: 2624)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3533, file: !3532, line: 261, baseType: !1110, size: 128, offset: 2752)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3533, file: !3532, line: 263, baseType: !3572, size: 64, offset: 2880)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3533, file: !3532, line: 265, baseType: !1248, size: 64, offset: 2944)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3533, file: !3532, line: 266, baseType: !1054, size: 64, offset: 3008)
!3604 = !DILocalVariable(name: "C", arg: 1, scope: !3527, file: !1, line: 2337, type: !2686)
!3605 = !DILocation(line: 2337, column: 30, scope: !3527)
!3606 = !DILocalVariable(name: "ar", arg: 2, scope: !3527, file: !1, line: 2337, type: !3530)
!3607 = !DILocation(line: 2337, column: 42, scope: !3527)
!3608 = !DILocalVariable(name: "slogic", scope: !3527, file: !1, line: 2339, type: !3609)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLogic", file: !1178, line: 1011, baseType: !3611)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLogic", file: !1178, line: 999, size: 576, elements: !3612)
!3612 = !{!3613, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3611, file: !1178, line: 1000, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !1178, line: 91, baseType: !3616)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !1178, line: 85, size: 448, elements: !3617)
!3617 = !{!3618, !3620, !3621, !3622, !3623, !3624}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3616, file: !1178, line: 86, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3616, file: !1178, line: 86, baseType: !3619, size: 64, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3616, file: !1178, line: 87, baseType: !1110, size: 128, offset: 128)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3616, file: !1178, line: 88, baseType: !1085, size: 32, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3616, file: !1178, line: 89, baseType: !1149, size: 32, offset: 288)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3616, file: !1178, line: 90, baseType: !3625, size: 128, offset: 320)
!3625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 128, elements: !1797)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3611, file: !1178, line: 1000, baseType: !3614, size: 64, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3611, file: !1178, line: 1001, baseType: !1110, size: 128, offset: 128)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3611, file: !1178, line: 1002, baseType: !1085, size: 32, offset: 256)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3611, file: !1178, line: 1003, baseType: !1149, size: 32, offset: 288)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3611, file: !1178, line: 1005, baseType: !3625, size: 128, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3611, file: !1178, line: 1007, baseType: !1083, size: 16, offset: 448)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !3611, file: !1178, line: 1007, baseType: !1083, size: 16, offset: 464)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3611, file: !1178, line: 1008, baseType: !1085, size: 32, offset: 480)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3611, file: !1178, line: 1010, baseType: !1216, size: 64, offset: 512)
!3635 = !DILocation(line: 2339, column: 14, scope: !3527)
!3636 = !DILocation(line: 2339, column: 41, scope: !3527)
!3637 = !DILocation(line: 2339, column: 22, scope: !3527)
!3638 = !DILocalVariable(name: "ob", scope: !3527, file: !1, line: 2340, type: !1044)
!3639 = !DILocation(line: 2340, column: 10, scope: !3527)
!3640 = !DILocation(line: 2340, column: 37, scope: !3527)
!3641 = !DILocation(line: 2340, column: 14, scope: !3527)
!3642 = !DILocalVariable(name: "idar", scope: !3527, file: !1, line: 2341, type: !2720)
!3643 = !DILocation(line: 2341, column: 7, scope: !3527)
!3644 = !DILocalVariable(name: "logic_ptr", scope: !3527, file: !1, line: 2342, type: !3645)
!3645 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !2690, line: 62, baseType: !3646)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !2690, line: 55, size: 192, elements: !3647)
!3647 = !{!3648, !3652, !3653}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3646, file: !2690, line: 58, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3646, file: !2690, line: 56, size: 64, elements: !3650)
!3650 = !{!3651}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3649, file: !2690, line: 57, baseType: !1054, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3646, file: !2690, line: 60, baseType: !1439, size: 64, offset: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3646, file: !2690, line: 61, baseType: !1054, size: 64, offset: 128)
!3654 = !DILocation(line: 2342, column: 13, scope: !3527)
!3655 = !DILocalVariable(name: "settings_ptr", scope: !3527, file: !1, line: 2342, type: !3645)
!3656 = !DILocation(line: 2342, column: 24, scope: !3527)
!3657 = !DILocalVariable(name: "object_ptr", scope: !3527, file: !1, line: 2342, type: !3645)
!3658 = !DILocation(line: 2342, column: 38, scope: !3527)
!3659 = !DILocalVariable(name: "layout", scope: !3527, file: !1, line: 2343, type: !3660)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !4, line: 85, baseType: !3662)
!3662 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !3532, line: 46, flags: DIFlagFwdDecl)
!3663 = !DILocation(line: 2343, column: 12, scope: !3527)
!3664 = !DILocalVariable(name: "row", scope: !3527, file: !1, line: 2343, type: !3660)
!3665 = !DILocation(line: 2343, column: 21, scope: !3527)
!3666 = !DILocalVariable(name: "box", scope: !3527, file: !1, line: 2343, type: !3660)
!3667 = !DILocation(line: 2343, column: 27, scope: !3527)
!3668 = !DILocalVariable(name: "block", scope: !3527, file: !1, line: 2344, type: !3669)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !4, line: 83, baseType: !3671)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !3672, line: 320, size: 5440, elements: !3673)
!3672 = !DIFile(filename: "blender/source/blender/editors/space_logic/../interface/interface_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3673 = !{!3674, !3675, !3676, !3677, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3722, !3723, !3724, !3726, !3727, !3732, !3733, !3735, !3736, !3746, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3761, !3762, !3763, !3764, !3765, !3766, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3900, !3903, !3904, !3906, !3907, !3908, !3909}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3671, file: !3672, line: 321, baseType: !3669, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3671, file: !3672, line: 321, baseType: !3669, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "buttons", scope: !3671, file: !3672, line: 323, baseType: !1110, size: 128, offset: 128)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !3671, file: !3672, line: 324, baseType: !3678, size: 64, offset: 256)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !3532, line: 113, baseType: !3680)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !3532, line: 97, size: 2176, elements: !3681)
!3681 = !{!3682, !3684, !3685, !3688, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3680, file: !3532, line: 98, baseType: !3683, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3680, file: !3532, line: 98, baseType: !3683, size: 64, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3680, file: !3532, line: 100, baseType: !3686, size: 64, offset: 128)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !3532, line: 43, flags: DIFlagFwdDecl)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3680, file: !3532, line: 101, baseType: !3689, size: 64, offset: 192)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !3680, file: !3532, line: 103, baseType: !1100, size: 512, offset: 256)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !3680, file: !3532, line: 103, baseType: !1100, size: 512, offset: 768)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !3680, file: !3532, line: 104, baseType: !1100, size: 512, offset: 1280)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !3680, file: !3532, line: 105, baseType: !1085, size: 32, offset: 1792)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !3680, file: !3532, line: 105, baseType: !1085, size: 32, offset: 1824)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3680, file: !3532, line: 105, baseType: !1085, size: 32, offset: 1856)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3680, file: !3532, line: 105, baseType: !1085, size: 32, offset: 1888)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !3680, file: !3532, line: 106, baseType: !1083, size: 16, offset: 1920)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3680, file: !3532, line: 106, baseType: !1083, size: 16, offset: 1936)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3680, file: !3532, line: 107, baseType: !1083, size: 16, offset: 1952)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !3680, file: !3532, line: 107, baseType: !1083, size: 16, offset: 1968)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !3680, file: !3532, line: 108, baseType: !1083, size: 16, offset: 1984)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !3680, file: !3532, line: 109, baseType: !1083, size: 16, offset: 2000)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !3680, file: !3532, line: 110, baseType: !1085, size: 32, offset: 2016)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !3680, file: !3532, line: 111, baseType: !3683, size: 64, offset: 2048)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !3680, file: !3532, line: 112, baseType: !1054, size: 64, offset: 2112)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "oldblock", scope: !3671, file: !3672, line: 325, baseType: !3669, size: 64, offset: 320)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "butstore", scope: !3671, file: !3672, line: 327, baseType: !1110, size: 128, offset: 384)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "layouts", scope: !3671, file: !3672, line: 329, baseType: !1110, size: 128, offset: 512)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "curlayout", scope: !3671, file: !3672, line: 330, baseType: !3689, size: 64, offset: 640)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !3671, file: !3672, line: 332, baseType: !1110, size: 128, offset: 704)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3671, file: !3672, line: 334, baseType: !2237, size: 1024, offset: 832)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3671, file: !3672, line: 336, baseType: !1269, size: 512, offset: 1856)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !3671, file: !3672, line: 338, baseType: !1458, size: 128, offset: 2368)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !3671, file: !3672, line: 339, baseType: !1149, size: 32, offset: 2496)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "puphash", scope: !3671, file: !3672, line: 341, baseType: !5, size: 32, offset: 2528)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3671, file: !3672, line: 343, baseType: !3717, size: 64, offset: 2560)
!3717 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleFunc", file: !4, line: 336, baseType: !3718)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{null, !3721, !1054, !1054}
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !3671, file: !3672, line: 344, baseType: !1054, size: 64, offset: 2624)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !3671, file: !3672, line: 345, baseType: !1054, size: 64, offset: 2688)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !3671, file: !3672, line: 347, baseType: !3725, size: 64, offset: 2752)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleNFunc", file: !4, line: 338, baseType: !3718)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !3671, file: !3672, line: 348, baseType: !1054, size: 64, offset: 2816)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func", scope: !3671, file: !3672, line: 350, baseType: !3728, size: 64, offset: 2880)
!3728 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuHandleFunc", file: !4, line: 346, baseType: !3729)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !3721, !1054, !1085}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func_arg", scope: !3671, file: !3672, line: 351, baseType: !1054, size: 64, offset: 2944)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func", scope: !3671, file: !3672, line: 353, baseType: !3734, size: 64, offset: 3008)
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleFunc", file: !4, line: 341, baseType: !3729)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func_arg", scope: !3671, file: !3672, line: 354, baseType: !1054, size: 64, offset: 3072)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "block_event_func", scope: !3671, file: !3672, line: 357, baseType: !3737, size: 64, offset: 3136)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!1085, !3740, !3742, !3743}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2689)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3745)
!3745 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !4, line: 48, flags: DIFlagFwdDecl)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra", scope: !3671, file: !3672, line: 360, baseType: !3747, size: 64, offset: 3200)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !3740, !1054, !1054, !1054, !3750}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg1", scope: !3671, file: !3672, line: 361, baseType: !1054, size: 64, offset: 3264)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg2", scope: !3671, file: !3672, line: 362, baseType: !1054, size: 64, offset: 3328)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3671, file: !3672, line: 364, baseType: !1085, size: 32, offset: 3392)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !3671, file: !3672, line: 365, baseType: !1083, size: 16, offset: 3424)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !3671, file: !3672, line: 367, baseType: !1070, size: 8, offset: 3440)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !3671, file: !3672, line: 368, baseType: !1070, size: 8, offset: 3448)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open", scope: !3671, file: !3672, line: 369, baseType: !1946, size: 8, offset: 3456)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3671, file: !3672, line: 370, baseType: !1844, size: 56, offset: 3464)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open_last", scope: !3671, file: !3672, line: 371, baseType: !3760, size: 64, offset: 3520)
!3760 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !3671, file: !3672, line: 373, baseType: !2732, size: 64, offset: 3584)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3671, file: !3672, line: 375, baseType: !1070, size: 8, offset: 3648)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3671, file: !3672, line: 376, baseType: !1070, size: 8, offset: 3656)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "tooltipdisabled", scope: !3671, file: !3672, line: 377, baseType: !1070, size: 8, offset: 3664)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "endblock", scope: !3671, file: !3672, line: 378, baseType: !1070, size: 8, offset: 3672)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "bounds_type", scope: !3671, file: !3672, line: 380, baseType: !3767, size: 32, offset: 3680)
!3767 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBlockBoundsCalc", file: !4, line: 434, baseType: !3)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "mx", scope: !3671, file: !3672, line: 381, baseType: !1085, size: 32, offset: 3712)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "my", scope: !3671, file: !3672, line: 381, baseType: !1085, size: 32, offset: 3744)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !3671, file: !3672, line: 382, baseType: !1085, size: 32, offset: 3776)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "minbounds", scope: !3671, file: !3672, line: 382, baseType: !1085, size: 32, offset: 3808)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !3671, file: !3672, line: 384, baseType: !1458, size: 128, offset: 3840)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "saferct", scope: !3671, file: !3672, line: 385, baseType: !1110, size: 128, offset: 3968)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !3671, file: !3672, line: 387, baseType: !3775, size: 64, offset: 4096)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupBlockHandle", file: !4, line: 84, baseType: !3777)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockHandle", file: !3672, line: 491, size: 1536, elements: !3778)
!3778 = !{!3779, !3780, !3781, !3782, !3783, !3784, !3785, !3789, !3790, !3807, !3808, !3813, !3817, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !3777, file: !3672, line: 493, baseType: !3536, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "towards_xy", scope: !3777, file: !3672, line: 496, baseType: !1380, size: 64, offset: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "towardstime", scope: !3777, file: !3672, line: 497, baseType: !3760, size: 64, offset: 128)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "dotowards", scope: !3777, file: !3672, line: 498, baseType: !1946, size: 8, offset: 192)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "popup", scope: !3777, file: !3672, line: 500, baseType: !1946, size: 8, offset: 200)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "popup_func", scope: !3777, file: !3672, line: 501, baseType: !3729, size: 64, offset: 256)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_func", scope: !3777, file: !3672, line: 502, baseType: !3786, size: 64, offset: 320)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{null, !3721, !1054}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "popup_arg", scope: !3777, file: !3672, line: 503, baseType: !1054, size: 64, offset: 384)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "popup_create_vars", scope: !3777, file: !3672, line: 506, baseType: !3791, size: 320, offset: 448)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockCreate", file: !3672, line: 480, size: 320, elements: !3792)
!3792 = !{!3793, !3798, !3804, !3805, !3806}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "create_func", scope: !3791, file: !3672, line: 481, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockCreateFunc", file: !4, line: 380, baseType: !3795)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!3669, !3721, !3536, !1054}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "handle_create_func", scope: !3791, file: !3672, line: 482, baseType: !3799, size: 64, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleCreateFunc", file: !3672, line: 478, baseType: !3800)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!3669, !3721, !3803, !1054}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3791, file: !3672, line: 483, baseType: !1054, size: 64, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3791, file: !3672, line: 485, baseType: !1623, size: 64, offset: 192)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "butregion", scope: !3791, file: !3672, line: 488, baseType: !3530, size: 64, offset: 256)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "scrolltimer", scope: !3777, file: !3672, line: 508, baseType: !3572, size: 64, offset: 768)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "keynav_state", scope: !3777, file: !3672, line: 510, baseType: !3809, size: 96, offset: 832)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiKeyNavLock", file: !3672, line: 471, size: 96, elements: !3810)
!3810 = !{!3811, !3812}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "is_keynav", scope: !3809, file: !3672, line: 473, baseType: !1946, size: 8)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3809, file: !3672, line: 475, baseType: !1623, size: 64, offset: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !3777, file: !3672, line: 513, baseType: !3814, size: 64, offset: 960)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !3816, line: 40, flags: DIFlagFwdDecl)
!3816 = !DIFile(filename: "blender/source/blender/editors/include/ED_util.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_area", scope: !3777, file: !3672, line: 514, baseType: !3818, size: 64, offset: 1024)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !3532, line: 228, baseType: !3820)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !3532, line: 203, size: 1280, elements: !3821)
!3821 = !{!3822, !3824, !3825, !3842, !3843, !3844, !3845, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3887, !3888, !3889, !3890}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3820, file: !3532, line: 204, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3820, file: !3532, line: 204, baseType: !3823, size: 64, offset: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3820, file: !3532, line: 206, baseType: !3826, size: 64, offset: 128)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !3532, line: 87, baseType: !3828)
!3828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !3532, line: 82, size: 256, elements: !3829)
!3829 = !{!3830, !3832, !3833, !3834, !3840, !3841}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3828, file: !3532, line: 83, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3828, file: !3532, line: 83, baseType: !3831, size: 64, offset: 64)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3828, file: !3532, line: 83, baseType: !3831, size: 64, offset: 128)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3828, file: !3532, line: 84, baseType: !3835, size: 32, offset: 192)
!3835 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1459, line: 43, baseType: !3836)
!3836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1459, line: 41, size: 32, elements: !3837)
!3837 = !{!3838, !3839}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3836, file: !1459, line: 42, baseType: !1083, size: 16)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3836, file: !1459, line: 42, baseType: !1083, size: 16, offset: 16)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3828, file: !3532, line: 86, baseType: !1083, size: 16, offset: 224)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3828, file: !3532, line: 86, baseType: !1083, size: 16, offset: 240)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3820, file: !3532, line: 206, baseType: !3826, size: 64, offset: 192)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3820, file: !3532, line: 206, baseType: !3826, size: 64, offset: 256)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3820, file: !3532, line: 206, baseType: !3826, size: 64, offset: 320)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3820, file: !3532, line: 207, baseType: !3846, size: 64, offset: 384)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !3532, line: 80, baseType: !3848)
!3848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3532, line: 49, size: 1984, elements: !3849)
!3849 = !{!3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3848, file: !3532, line: 50, baseType: !1049, size: 960)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3848, file: !3532, line: 52, baseType: !1110, size: 128, offset: 960)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3848, file: !3532, line: 53, baseType: !1110, size: 128, offset: 1088)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3848, file: !3532, line: 54, baseType: !1110, size: 128, offset: 1216)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3848, file: !3532, line: 55, baseType: !1110, size: 128, offset: 1344)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3848, file: !3532, line: 57, baseType: !1390, size: 64, offset: 1472)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3848, file: !3532, line: 58, baseType: !1390, size: 64, offset: 1536)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3848, file: !3532, line: 60, baseType: !1085, size: 32, offset: 1600)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3848, file: !3532, line: 61, baseType: !1085, size: 32, offset: 1632)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3848, file: !3532, line: 63, baseType: !1083, size: 16, offset: 1664)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3848, file: !3532, line: 64, baseType: !1083, size: 16, offset: 1680)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3848, file: !3532, line: 65, baseType: !1083, size: 16, offset: 1696)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3848, file: !3532, line: 66, baseType: !1083, size: 16, offset: 1712)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3848, file: !3532, line: 67, baseType: !1083, size: 16, offset: 1728)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3848, file: !3532, line: 68, baseType: !1083, size: 16, offset: 1744)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3848, file: !3532, line: 69, baseType: !1083, size: 16, offset: 1760)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3848, file: !3532, line: 70, baseType: !1083, size: 16, offset: 1776)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3848, file: !3532, line: 71, baseType: !1083, size: 16, offset: 1792)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3848, file: !3532, line: 73, baseType: !1083, size: 16, offset: 1808)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3848, file: !3532, line: 74, baseType: !1083, size: 16, offset: 1824)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3848, file: !3532, line: 76, baseType: !1083, size: 16, offset: 1840)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3848, file: !3532, line: 78, baseType: !3572, size: 64, offset: 1856)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3848, file: !3532, line: 79, baseType: !1054, size: 64, offset: 1920)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3820, file: !3532, line: 209, baseType: !2344, size: 128, offset: 448)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3820, file: !3532, line: 211, baseType: !1070, size: 8, offset: 576)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3820, file: !3532, line: 211, baseType: !1070, size: 8, offset: 584)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3820, file: !3532, line: 212, baseType: !1083, size: 16, offset: 592)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3820, file: !3532, line: 212, baseType: !1083, size: 16, offset: 608)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3820, file: !3532, line: 214, baseType: !1083, size: 16, offset: 624)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3820, file: !3532, line: 215, baseType: !1083, size: 16, offset: 640)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3820, file: !3532, line: 216, baseType: !1083, size: 16, offset: 656)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3820, file: !3532, line: 217, baseType: !1083, size: 16, offset: 672)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3820, file: !3532, line: 219, baseType: !1070, size: 8, offset: 688)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3820, file: !3532, line: 219, baseType: !1070, size: 8, offset: 696)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3820, file: !3532, line: 221, baseType: !3885, size: 64, offset: 704)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !3532, line: 39, flags: DIFlagFwdDecl)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3820, file: !3532, line: 223, baseType: !1110, size: 128, offset: 768)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3820, file: !3532, line: 224, baseType: !1110, size: 128, offset: 896)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3820, file: !3532, line: 225, baseType: !1110, size: 128, offset: 1024)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3820, file: !3532, line: 227, baseType: !1110, size: 128, offset: 1152)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_region", scope: !3777, file: !3672, line: 515, baseType: !3530, size: 64, offset: 1088)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !3777, file: !3672, line: 516, baseType: !1085, size: 32, offset: 1152)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "butretval", scope: !3777, file: !3672, line: 519, baseType: !1085, size: 32, offset: 1184)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "menuretval", scope: !3777, file: !3672, line: 520, baseType: !1085, size: 32, offset: 1216)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "retvalue", scope: !3777, file: !3672, line: 521, baseType: !1085, size: 32, offset: 1248)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "retvec", scope: !3777, file: !3672, line: 522, baseType: !1260, size: 128, offset: 1280)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !3777, file: !3672, line: 525, baseType: !1085, size: 32, offset: 1408)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "is_grab", scope: !3777, file: !3672, line: 528, baseType: !1946, size: 8, offset: 1440)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "grab_xy_prev", scope: !3777, file: !3672, line: 529, baseType: !1623, size: 64, offset: 1472)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "ui_operator", scope: !3671, file: !3672, line: 389, baseType: !3901, size: 64, offset: 4160)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !1178, line: 69, flags: DIFlagFwdDecl)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "evil_C", scope: !3671, file: !3672, line: 392, baseType: !1054, size: 64, offset: 4224)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !3671, file: !3672, line: 394, baseType: !3905, size: 64, offset: 4288)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "_hsv", scope: !3671, file: !3672, line: 395, baseType: !1185, size: 96, offset: 4352)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !3671, file: !3672, line: 397, baseType: !1946, size: 8, offset: 4448)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !3671, file: !3672, line: 399, baseType: !1100, size: 512, offset: 4456)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "pie_data", scope: !3671, file: !3672, line: 402, baseType: !3910, size: 448, offset: 4992)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PieMenuData", file: !3672, line: 309, size: 448, elements: !3911)
!3911 = !{!3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !3910, file: !3672, line: 310, baseType: !1380, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_init", scope: !3910, file: !3672, line: 311, baseType: !1380, size: 64, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_spawned", scope: !3910, file: !3672, line: 312, baseType: !1380, size: 64, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !3910, file: !3672, line: 313, baseType: !1380, size: 64, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gesture", scope: !3910, file: !3672, line: 314, baseType: !3760, size: 64, offset: 256)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3910, file: !3672, line: 315, baseType: !1085, size: 32, offset: 320)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3910, file: !3672, line: 316, baseType: !1085, size: 32, offset: 352)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !3910, file: !3672, line: 317, baseType: !1149, size: 32, offset: 384)
!3920 = !DILocation(line: 2344, column: 11, scope: !3527)
!3921 = !DILocalVariable(name: "but", scope: !3527, file: !1, line: 2345, type: !3922)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !4, line: 82, baseType: !3924)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !3672, line: 195, size: 8000, elements: !3925)
!3925 = !{!3926, !3928, !3929, !3930, !3931, !3933, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3972, !3977, !3978, !3986, !3987, !3992, !3993, !3994, !4007, !4008, !4009, !4010, !4012, !4013, !4014, !4016, !4017, !4018, !4019, !4020, !4021, !4026, !4027, !4030, !4031, !4032, !4033, !4034, !4036, !4037, !4038, !4039, !4040, !4043, !4044, !4047, !4048, !4049, !4051, !4052, !4053, !4054}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3924, file: !3672, line: 196, baseType: !3927, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3924, file: !3672, line: 196, baseType: !3927, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3924, file: !3672, line: 197, baseType: !1085, size: 32, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3924, file: !3672, line: 197, baseType: !1085, size: 32, offset: 160)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3924, file: !3672, line: 198, baseType: !3932, size: 32, offset: 192)
!3932 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButType", file: !4, line: 282, baseType: !14)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "pointype", scope: !3924, file: !3672, line: 199, baseType: !3934, size: 32, offset: 224)
!3934 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButPointerType", file: !4, line: 230, baseType: !60)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3924, file: !3672, line: 200, baseType: !1083, size: 16, offset: 256)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "bitnr", scope: !3924, file: !3672, line: 200, baseType: !1083, size: 16, offset: 272)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3924, file: !3672, line: 200, baseType: !1083, size: 16, offset: 288)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "strwidth", scope: !3924, file: !3672, line: 200, baseType: !1083, size: 16, offset: 304)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !3924, file: !3672, line: 200, baseType: !1083, size: 16, offset: 320)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3924, file: !3672, line: 201, baseType: !1083, size: 16, offset: 336)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3924, file: !3672, line: 201, baseType: !1083, size: 16, offset: 352)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "selsta", scope: !3924, file: !3672, line: 201, baseType: !1083, size: 16, offset: 368)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !3924, file: !3672, line: 201, baseType: !1083, size: 16, offset: 384)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3924, file: !3672, line: 203, baseType: !1248, size: 64, offset: 448)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "strdata", scope: !3924, file: !3672, line: 204, baseType: !2237, size: 1024, offset: 512)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "drawstr", scope: !3924, file: !3672, line: 205, baseType: !3947, size: 3200, offset: 1536)
!3947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 3200, elements: !3948)
!3948 = !{!3949}
!3949 = !DISubrange(count: 400)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !3924, file: !3672, line: 207, baseType: !1458, size: 128, offset: 4736)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !3924, file: !3672, line: 209, baseType: !1248, size: 64, offset: 4864)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !3924, file: !3672, line: 210, baseType: !1149, size: 32, offset: 4928)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !3924, file: !3672, line: 210, baseType: !1149, size: 32, offset: 4960)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !3924, file: !3672, line: 210, baseType: !1149, size: 32, offset: 4992)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !3924, file: !3672, line: 210, baseType: !1149, size: 32, offset: 5024)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3924, file: !3672, line: 222, baseType: !1149, size: 32, offset: 5056)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3924, file: !3672, line: 230, baseType: !1149, size: 32, offset: 5088)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3924, file: !3672, line: 232, baseType: !1945, size: 32, offset: 5120)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3924, file: !3672, line: 234, baseType: !3717, size: 64, offset: 5184)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !3924, file: !3672, line: 235, baseType: !1054, size: 64, offset: 5248)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !3924, file: !3672, line: 236, baseType: !1054, size: 64, offset: 5312)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !3924, file: !3672, line: 238, baseType: !3725, size: 64, offset: 5376)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !3924, file: !3672, line: 239, baseType: !1054, size: 64, offset: 5440)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3924, file: !3672, line: 241, baseType: !3965, size: 64, offset: 5504)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bContextStore", file: !2688, line: 84, size: 320, elements: !3967)
!3967 = !{!3968, !3969, !3970, !3971}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3966, file: !2688, line: 85, baseType: !3965, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3966, file: !2688, line: 85, baseType: !3965, size: 64, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !3966, file: !2688, line: 87, baseType: !1110, size: 128, offset: 128)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3966, file: !2688, line: 88, baseType: !1946, size: 8, offset: 256)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "autocomplete_func", scope: !3924, file: !3672, line: 243, baseType: !3973, size: 64, offset: 5568)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButCompleteFunc", file: !4, line: 339, baseType: !3974)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!1085, !3721, !1248, !1054}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "autofunc_arg", scope: !3924, file: !3672, line: 244, baseType: !1054, size: 64, offset: 5632)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "search_func", scope: !3924, file: !3672, line: 246, baseType: !3979, size: 64, offset: 5696)
!3979 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButSearchFunc", file: !4, line: 340, baseType: !3980)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !3740, !1054, !2732, !3983}
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiSearchItems", file: !4, line: 334, baseType: !3985)
!3985 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiSearchItems", file: !4, line: 334, flags: DIFlagFwdDecl)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "search_arg", scope: !3924, file: !3672, line: 247, baseType: !1054, size: 64, offset: 5760)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "rename_func", scope: !3924, file: !3672, line: 249, baseType: !3988, size: 64, offset: 5824)
!3988 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleRenameFunc", file: !4, line: 337, baseType: !3989)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !3721, !1054, !1248}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "rename_arg1", scope: !3924, file: !3672, line: 250, baseType: !1054, size: 64, offset: 5888)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "rename_orig", scope: !3924, file: !3672, line: 251, baseType: !1054, size: 64, offset: 5952)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3924, file: !3672, line: 253, baseType: !3995, size: 64, offset: 6016)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLink", file: !3672, line: 193, baseType: !3997)
!3997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3672, line: 184, size: 384, elements: !3998)
!3998 = !{!3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !3997, file: !3672, line: 185, baseType: !2581, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ppoin", scope: !3997, file: !3672, line: 186, baseType: !2580, size: 64, offset: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "totlink", scope: !3997, file: !3672, line: 187, baseType: !2915, size: 64, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "maxlink", scope: !3997, file: !3672, line: 189, baseType: !1083, size: 16, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3997, file: !3672, line: 189, baseType: !1083, size: 16, offset: 208)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "fromcode", scope: !3997, file: !3672, line: 190, baseType: !1083, size: 16, offset: 224)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "tocode", scope: !3997, file: !3672, line: 190, baseType: !1083, size: 16, offset: 240)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !3997, file: !3672, line: 192, baseType: !1110, size: 128, offset: 256)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "linkto", scope: !3924, file: !3672, line: 254, baseType: !1823, size: 32, offset: 6080)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "tip", scope: !3924, file: !3672, line: 256, baseType: !2732, size: 64, offset: 6144)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !3924, file: !3672, line: 256, baseType: !2732, size: 64, offset: 6208)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3924, file: !3672, line: 258, baseType: !4011, size: 32, offset: 6272)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIFIconID", file: !68, line: 44, baseType: !67)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3924, file: !3672, line: 259, baseType: !1946, size: 8, offset: 6304)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !3924, file: !3672, line: 260, baseType: !1070, size: 8, offset: 6312)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !3924, file: !3672, line: 261, baseType: !4015, size: 8, offset: 6320)
!4015 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3924, file: !3672, line: 262, baseType: !1070, size: 8, offset: 6328)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !3924, file: !3672, line: 263, baseType: !1946, size: 8, offset: 6336)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_key", scope: !3924, file: !3672, line: 264, baseType: !1083, size: 16, offset: 6352)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "iconadd", scope: !3924, file: !3672, line: 265, baseType: !1083, size: 16, offset: 6368)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "block_create_func", scope: !3924, file: !3672, line: 268, baseType: !3794, size: 64, offset: 6400)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "menu_create_func", scope: !3924, file: !3672, line: 271, baseType: !4022, size: 64, offset: 6464)
!4022 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuCreateFunc", file: !4, line: 345, baseType: !4023)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{null, !3721, !3689, !1054}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !3924, file: !3672, line: 274, baseType: !3646, size: 192, offset: 6528)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "rnaprop", scope: !3924, file: !3672, line: 275, baseType: !4028, size: 64, offset: 6720)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !2690, line: 39, flags: DIFlagFwdDecl)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "rnaindex", scope: !3924, file: !3672, line: 276, baseType: !1085, size: 32, offset: 6784)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchpoin", scope: !3924, file: !3672, line: 278, baseType: !3646, size: 192, offset: 6848)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchprop", scope: !3924, file: !3672, line: 279, baseType: !4028, size: 64, offset: 7040)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !3924, file: !3672, line: 282, baseType: !3814, size: 64, offset: 7104)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "opptr", scope: !3924, file: !3672, line: 283, baseType: !4035, size: 64, offset: 7168)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !3924, file: !3672, line: 284, baseType: !1083, size: 16, offset: 7232)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "menu_key", scope: !3924, file: !3672, line: 285, baseType: !1946, size: 8, offset: 7248)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "dragtype", scope: !3924, file: !3672, line: 288, baseType: !1070, size: 8, offset: 7256)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "dragpoin", scope: !3924, file: !3672, line: 289, baseType: !1054, size: 64, offset: 7296)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !3924, file: !3672, line: 290, baseType: !4041, size: 64, offset: 7360)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1606, line: 136, flags: DIFlagFwdDecl)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "imb_scale", scope: !3924, file: !3672, line: 291, baseType: !1149, size: 32, offset: 7424)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3924, file: !3672, line: 294, baseType: !4045, size: 64, offset: 7488)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandleButtonData", file: !3672, line: 43, flags: DIFlagFwdDecl)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !3924, file: !3672, line: 297, baseType: !1054, size: 64, offset: 7552)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "editstr", scope: !3924, file: !3672, line: 299, baseType: !1248, size: 64, offset: 7616)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "editval", scope: !3924, file: !3672, line: 300, baseType: !4050, size: 64, offset: 7680)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "editvec", scope: !3924, file: !3672, line: 301, baseType: !3565, size: 64, offset: 7744)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "editcoba", scope: !3924, file: !3672, line: 302, baseType: !1054, size: 64, offset: 7808)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "editcumap", scope: !3924, file: !3672, line: 303, baseType: !1054, size: 64, offset: 7872)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3924, file: !3672, line: 306, baseType: !3669, size: 64, offset: 7936)
!4055 = !DILocation(line: 2345, column: 9, scope: !3527)
!4056 = !DILocalVariable(name: "uiblockstr", scope: !3527, file: !1, line: 2346, type: !2409)
!4057 = !DILocation(line: 2346, column: 7, scope: !3527)
!4058 = !DILocalVariable(name: "a", scope: !3527, file: !1, line: 2347, type: !1083)
!4059 = !DILocation(line: 2347, column: 8, scope: !3527)
!4060 = !DILocalVariable(name: "count", scope: !3527, file: !1, line: 2347, type: !1083)
!4061 = !DILocation(line: 2347, column: 11, scope: !3527)
!4062 = !DILocalVariable(name: "xco", scope: !3527, file: !1, line: 2348, type: !1085)
!4063 = !DILocation(line: 2348, column: 6, scope: !3527)
!4064 = !DILocalVariable(name: "yco", scope: !3527, file: !1, line: 2348, type: !1085)
!4065 = !DILocation(line: 2348, column: 11, scope: !3527)
!4066 = !DILocalVariable(name: "width", scope: !3527, file: !1, line: 2348, type: !1085)
!4067 = !DILocation(line: 2348, column: 16, scope: !3527)
!4068 = !DILocalVariable(name: "height", scope: !3527, file: !1, line: 2348, type: !1085)
!4069 = !DILocation(line: 2348, column: 23, scope: !3527)
!4070 = !DILocation(line: 2350, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2350, column: 6)
!4072 = !DILocation(line: 2350, column: 8, scope: !4071)
!4073 = !DILocation(line: 2350, column: 6, scope: !3527)
!4074 = !DILocation(line: 2350, column: 16, scope: !4071)
!4075 = !DILocation(line: 2352, column: 50, scope: !3527)
!4076 = !DILocation(line: 2352, column: 2, scope: !3527)
!4077 = !DILocation(line: 2353, column: 36, scope: !3527)
!4078 = !DILocation(line: 2353, column: 47, scope: !3527)
!4079 = !DILocation(line: 2353, column: 55, scope: !3527)
!4080 = !DILocation(line: 2353, column: 8, scope: !3527)
!4081 = !DILocation(line: 2353, column: 6, scope: !3527)
!4082 = !DILocation(line: 2355, column: 15, scope: !3527)
!4083 = !DILocation(line: 2355, column: 72, scope: !3527)
!4084 = !DILocation(line: 2355, column: 64, scope: !3527)
!4085 = !DILocation(line: 2355, column: 2, scope: !3527)
!4086 = !DILocation(line: 2356, column: 22, scope: !3527)
!4087 = !DILocation(line: 2356, column: 25, scope: !3527)
!4088 = !DILocation(line: 2356, column: 29, scope: !3527)
!4089 = !DILocation(line: 2356, column: 9, scope: !3527)
!4090 = !DILocation(line: 2356, column: 7, scope: !3527)
!4091 = !DILocation(line: 2357, column: 23, scope: !3527)
!4092 = !DILocation(line: 2357, column: 2, scope: !3527)
!4093 = !DILocation(line: 2358, column: 16, scope: !3527)
!4094 = !DILocation(line: 2358, column: 25, scope: !3527)
!4095 = !DILocation(line: 2358, column: 23, scope: !3527)
!4096 = !DILocation(line: 2358, column: 36, scope: !3527)
!4097 = !DILocation(line: 2358, column: 2, scope: !3527)
!4098 = !DILocation(line: 2361, column: 8, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2361, column: 2)
!4100 = !DILocation(line: 2361, column: 7, scope: !4099)
!4101 = !DILocation(line: 2361, column: 12, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4099, file: !1, line: 2361, column: 2)
!4103 = !DILocation(line: 2361, column: 14, scope: !4102)
!4104 = !DILocation(line: 2361, column: 13, scope: !4102)
!4105 = !DILocation(line: 2361, column: 2, scope: !4099)
!4106 = !DILocalVariable(name: "act", scope: !4107, file: !1, line: 2362, type: !2645)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !1, line: 2361, column: 26)
!4108 = !DILocation(line: 2362, column: 14, scope: !4107)
!4109 = !DILocalVariable(name: "sens", scope: !4107, file: !1, line: 2363, type: !2648)
!4110 = !DILocation(line: 2363, column: 12, scope: !4107)
!4111 = !DILocalVariable(name: "cont", scope: !4107, file: !1, line: 2364, type: !2583)
!4112 = !DILocation(line: 2364, column: 16, scope: !4107)
!4113 = !DILocalVariable(name: "iact", scope: !4107, file: !1, line: 2365, type: !1085)
!4114 = !DILocation(line: 2365, column: 7, scope: !4107)
!4115 = !DILocalVariable(name: "flag", scope: !4107, file: !1, line: 2366, type: !1083)
!4116 = !DILocation(line: 2366, column: 9, scope: !4107)
!4117 = !DILocation(line: 2368, column: 17, scope: !4107)
!4118 = !DILocation(line: 2368, column: 22, scope: !4107)
!4119 = !DILocation(line: 2368, column: 7, scope: !4107)
!4120 = !DILocation(line: 2368, column: 5, scope: !4107)
!4121 = !DILocation(line: 2371, column: 9, scope: !4107)
!4122 = !DILocation(line: 2371, column: 13, scope: !4107)
!4123 = !DILocation(line: 2371, column: 23, scope: !4107)
!4124 = !DILocation(line: 2371, column: 7, scope: !4107)
!4125 = !DILocation(line: 2372, column: 3, scope: !4107)
!4126 = !DILocation(line: 2372, column: 10, scope: !4107)
!4127 = !DILocation(line: 2373, column: 4, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 2372, column: 15)
!4129 = !DILocation(line: 2373, column: 9, scope: !4128)
!4130 = !DILocation(line: 2373, column: 14, scope: !4128)
!4131 = !DILocation(line: 2374, column: 10, scope: !4128)
!4132 = !DILocation(line: 2374, column: 15, scope: !4128)
!4133 = !DILocation(line: 2374, column: 8, scope: !4128)
!4134 = distinct !{!4134, !4125, !4135}
!4135 = !DILocation(line: 2375, column: 3, scope: !4107)
!4136 = !DILocation(line: 2377, column: 9, scope: !4107)
!4137 = !DILocation(line: 2377, column: 13, scope: !4107)
!4138 = !DILocation(line: 2377, column: 21, scope: !4107)
!4139 = !DILocation(line: 2377, column: 7, scope: !4107)
!4140 = !DILocation(line: 2378, column: 3, scope: !4107)
!4141 = !DILocation(line: 2378, column: 10, scope: !4107)
!4142 = !DILocation(line: 2379, column: 4, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 2378, column: 16)
!4144 = !DILocation(line: 2379, column: 10, scope: !4143)
!4145 = !DILocation(line: 2379, column: 15, scope: !4143)
!4146 = !DILocation(line: 2380, column: 11, scope: !4143)
!4147 = !DILocation(line: 2380, column: 17, scope: !4143)
!4148 = !DILocation(line: 2380, column: 9, scope: !4143)
!4149 = distinct !{!4149, !4140, !4150}
!4150 = !DILocation(line: 2381, column: 3, scope: !4107)
!4151 = !DILocation(line: 2384, column: 9, scope: !4107)
!4152 = !DILocation(line: 2384, column: 13, scope: !4107)
!4153 = !DILocation(line: 2384, column: 25, scope: !4107)
!4154 = !DILocation(line: 2384, column: 7, scope: !4107)
!4155 = !DILocation(line: 2385, column: 3, scope: !4107)
!4156 = !DILocation(line: 2385, column: 10, scope: !4107)
!4157 = !DILocation(line: 2386, column: 9, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 2385, column: 16)
!4159 = !DILocation(line: 2389, column: 9, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4158, file: !1, line: 2389, column: 8)
!4161 = !DILocation(line: 2389, column: 13, scope: !4160)
!4162 = !DILocation(line: 2389, column: 21, scope: !4160)
!4163 = !DILocation(line: 2389, column: 36, scope: !4160)
!4164 = !DILocation(line: 2389, column: 40, scope: !4160)
!4165 = !DILocation(line: 2389, column: 44, scope: !4160)
!4166 = !DILocation(line: 2389, column: 52, scope: !4160)
!4167 = !DILocation(line: 2389, column: 58, scope: !4160)
!4168 = !DILocation(line: 2389, column: 50, scope: !4160)
!4169 = !DILocation(line: 2389, column: 8, scope: !4158)
!4170 = !DILocation(line: 2390, column: 10, scope: !4160)
!4171 = !DILocation(line: 2390, column: 5, scope: !4160)
!4172 = !DILocation(line: 2392, column: 13, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4158, file: !1, line: 2392, column: 4)
!4174 = !DILocation(line: 2392, column: 9, scope: !4173)
!4175 = !DILocation(line: 2392, column: 17, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4173, file: !1, line: 2392, column: 4)
!4177 = !DILocation(line: 2392, column: 22, scope: !4176)
!4178 = !DILocation(line: 2392, column: 28, scope: !4176)
!4179 = !DILocation(line: 2392, column: 21, scope: !4176)
!4180 = !DILocation(line: 2392, column: 4, scope: !4173)
!4181 = !DILocation(line: 2393, column: 11, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 2392, column: 46)
!4183 = !DILocation(line: 2393, column: 17, scope: !4182)
!4184 = !DILocation(line: 2393, column: 23, scope: !4182)
!4185 = !DILocation(line: 2393, column: 9, scope: !4182)
!4186 = !DILocation(line: 2394, column: 9, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4182, file: !1, line: 2394, column: 9)
!4188 = !DILocation(line: 2394, column: 9, scope: !4182)
!4189 = !DILocation(line: 2395, column: 19, scope: !4187)
!4190 = !DILocation(line: 2395, column: 6, scope: !4187)
!4191 = !DILocation(line: 2395, column: 11, scope: !4187)
!4192 = !DILocation(line: 2395, column: 16, scope: !4187)
!4193 = !DILocation(line: 2396, column: 4, scope: !4182)
!4194 = !DILocation(line: 2392, column: 42, scope: !4176)
!4195 = !DILocation(line: 2392, column: 4, scope: !4176)
!4196 = distinct !{!4196, !4180, !4197}
!4197 = !DILocation(line: 2396, column: 4, scope: !4173)
!4198 = !DILocation(line: 2397, column: 11, scope: !4158)
!4199 = !DILocation(line: 2397, column: 17, scope: !4158)
!4200 = !DILocation(line: 2397, column: 9, scope: !4158)
!4201 = distinct !{!4201, !4155, !4202}
!4202 = !DILocation(line: 2398, column: 3, scope: !4107)
!4203 = !DILocation(line: 2399, column: 2, scope: !4107)
!4204 = !DILocation(line: 2361, column: 22, scope: !4102)
!4205 = !DILocation(line: 2361, column: 2, scope: !4102)
!4206 = distinct !{!4206, !4105, !4207}
!4207 = !DILocation(line: 2399, column: 2, scope: !4099)
!4208 = !DILocation(line: 2403, column: 14, scope: !3527)
!4209 = !DILocation(line: 2403, column: 12, scope: !3527)
!4210 = !DILocation(line: 2403, column: 10, scope: !3527)
!4211 = !DILocation(line: 2403, column: 5, scope: !3527)
!4212 = !DILocation(line: 2403, column: 36, scope: !3527)
!4213 = !DILocation(line: 2403, column: 34, scope: !3527)
!4214 = !DILocation(line: 2403, column: 32, scope: !3527)
!4215 = !DILocation(line: 2403, column: 48, scope: !3527)
!4216 = !DILocation(line: 2403, column: 30, scope: !3527)
!4217 = !DILocation(line: 2403, column: 67, scope: !3527)
!4218 = !DILocation(line: 2403, column: 65, scope: !3527)
!4219 = !DILocation(line: 2403, column: 63, scope: !3527)
!4220 = !DILocation(line: 2403, column: 58, scope: !3527)
!4221 = !DILocation(line: 2404, column: 24, scope: !3527)
!4222 = !DILocation(line: 2404, column: 68, scope: !3527)
!4223 = !DILocation(line: 2404, column: 73, scope: !3527)
!4224 = !DILocation(line: 2404, column: 78, scope: !3527)
!4225 = !DILocation(line: 2404, column: 92, scope: !3527)
!4226 = !DILocation(line: 2404, column: 10, scope: !3527)
!4227 = !DILocation(line: 2404, column: 8, scope: !3527)
!4228 = !DILocation(line: 2405, column: 20, scope: !3527)
!4229 = !DILocation(line: 2405, column: 8, scope: !3527)
!4230 = !DILocation(line: 2405, column: 6, scope: !3527)
!4231 = !DILocation(line: 2407, column: 16, scope: !3527)
!4232 = !DILocation(line: 2407, column: 69, scope: !3527)
!4233 = !DILocation(line: 2407, column: 77, scope: !3527)
!4234 = !DILocation(line: 2407, column: 75, scope: !3527)
!4235 = !DILocation(line: 2407, column: 89, scope: !3527)
!4236 = !DILocation(line: 2407, column: 73, scope: !3527)
!4237 = !DILocation(line: 2407, column: 94, scope: !3527)
!4238 = !DILocation(line: 2407, column: 99, scope: !3527)
!4239 = !DILocation(line: 2407, column: 106, scope: !3527)
!4240 = !DILocation(line: 2407, column: 2, scope: !3527)
!4241 = !DILocation(line: 2409, column: 10, scope: !3527)
!4242 = !DILocation(line: 2409, column: 2, scope: !3527)
!4243 = !DILocation(line: 2410, column: 10, scope: !3527)
!4244 = !DILocation(line: 2410, column: 2, scope: !3527)
!4245 = !DILocation(line: 2411, column: 10, scope: !3527)
!4246 = !DILocation(line: 2411, column: 2, scope: !3527)
!4247 = !DILocation(line: 2413, column: 8, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2413, column: 2)
!4249 = !DILocation(line: 2413, column: 7, scope: !4248)
!4250 = !DILocation(line: 2413, column: 12, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4248, file: !1, line: 2413, column: 2)
!4252 = !DILocation(line: 2413, column: 14, scope: !4251)
!4253 = !DILocation(line: 2413, column: 13, scope: !4251)
!4254 = !DILocation(line: 2413, column: 2, scope: !4248)
!4255 = !DILocalVariable(name: "cont", scope: !4256, file: !1, line: 2414, type: !2583)
!4256 = distinct !DILexicalBlock(scope: !4251, file: !1, line: 2413, column: 26)
!4257 = !DILocation(line: 2414, column: 16, scope: !4256)
!4258 = !DILocalVariable(name: "ptr", scope: !4256, file: !1, line: 2415, type: !3645)
!4259 = !DILocation(line: 2415, column: 14, scope: !4256)
!4260 = !DILocalVariable(name: "split", scope: !4256, file: !1, line: 2416, type: !3660)
!4261 = !DILocation(line: 2416, column: 13, scope: !4256)
!4262 = !DILocalVariable(name: "subsplit", scope: !4256, file: !1, line: 2416, type: !3660)
!4263 = !DILocation(line: 2416, column: 21, scope: !4256)
!4264 = !DILocalVariable(name: "col", scope: !4256, file: !1, line: 2416, type: !3660)
!4265 = !DILocation(line: 2416, column: 32, scope: !4256)
!4266 = !DILocation(line: 2419, column: 17, scope: !4256)
!4267 = !DILocation(line: 2419, column: 22, scope: !4256)
!4268 = !DILocation(line: 2419, column: 7, scope: !4256)
!4269 = !DILocation(line: 2419, column: 5, scope: !4256)
!4270 = !DILocation(line: 2422, column: 9, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2422, column: 8)
!4272 = !DILocation(line: 2422, column: 13, scope: !4271)
!4273 = !DILocation(line: 2422, column: 24, scope: !4271)
!4274 = !DILocation(line: 2422, column: 39, scope: !4271)
!4275 = !DILocation(line: 2422, column: 8, scope: !4256)
!4276 = !DILocation(line: 2423, column: 4, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4271, file: !1, line: 2422, column: 45)
!4278 = !DILocation(line: 2428, column: 28, scope: !4256)
!4279 = !DILocation(line: 2428, column: 22, scope: !4256)
!4280 = !DILocation(line: 2428, column: 57, scope: !4256)
!4281 = !DILocation(line: 2428, column: 3, scope: !4256)
!4282 = !DILocation(line: 2430, column: 25, scope: !4256)
!4283 = !DILocation(line: 2430, column: 11, scope: !4256)
!4284 = !DILocation(line: 2430, column: 9, scope: !4256)
!4285 = !DILocation(line: 2431, column: 11, scope: !4256)
!4286 = !DILocation(line: 2431, column: 3, scope: !4256)
!4287 = !DILocation(line: 2433, column: 21, scope: !4256)
!4288 = !DILocation(line: 2433, column: 9, scope: !4256)
!4289 = !DILocation(line: 2433, column: 7, scope: !4256)
!4290 = !DILocation(line: 2434, column: 16, scope: !4256)
!4291 = !DILocation(line: 2434, column: 49, scope: !4256)
!4292 = !DILocation(line: 2434, column: 53, scope: !4256)
!4293 = !DILocation(line: 2434, column: 56, scope: !4256)
!4294 = !DILocation(line: 2434, column: 61, scope: !4256)
!4295 = !DILocation(line: 2434, column: 74, scope: !4256)
!4296 = !DILocation(line: 2434, column: 82, scope: !4256)
!4297 = !DILocation(line: 2434, column: 80, scope: !4256)
!4298 = !DILocation(line: 2434, column: 94, scope: !4256)
!4299 = !DILocation(line: 2434, column: 78, scope: !4256)
!4300 = !DILocation(line: 2434, column: 66, scope: !4256)
!4301 = !DILocation(line: 2434, column: 100, scope: !4256)
!4302 = !DILocation(line: 2434, column: 113, scope: !4256)
!4303 = !DILocation(line: 2434, column: 130, scope: !4256)
!4304 = !DILocation(line: 2434, column: 128, scope: !4256)
!4305 = !DILocation(line: 2434, column: 126, scope: !4256)
!4306 = !DILocation(line: 2434, column: 119, scope: !4256)
!4307 = !DILocation(line: 2434, column: 105, scope: !4256)
!4308 = !DILocation(line: 2434, column: 144, scope: !4256)
!4309 = !DILocation(line: 2434, column: 156, scope: !4256)
!4310 = !DILocation(line: 2434, column: 160, scope: !4256)
!4311 = !DILocation(line: 2434, column: 3, scope: !4256)
!4312 = !DILocation(line: 2436, column: 28, scope: !4256)
!4313 = !DILocation(line: 2436, column: 22, scope: !4256)
!4314 = !DILocation(line: 2436, column: 45, scope: !4256)
!4315 = !DILocation(line: 2436, column: 3, scope: !4256)
!4316 = !DILocation(line: 2437, column: 29, scope: !4256)
!4317 = !DILocation(line: 2437, column: 3, scope: !4256)
!4318 = !DILocation(line: 2438, column: 19, scope: !4256)
!4319 = !DILocation(line: 2438, column: 24, scope: !4256)
!4320 = !DILocation(line: 2438, column: 3, scope: !4256)
!4321 = !DILocation(line: 2440, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2440, column: 7)
!4323 = !DILocation(line: 2440, column: 7, scope: !4256)
!4324 = !DILocation(line: 2442, column: 22, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4322, file: !1, line: 2440, column: 59)
!4326 = !DILocation(line: 2442, column: 10, scope: !4325)
!4327 = !DILocation(line: 2442, column: 8, scope: !4325)
!4328 = !DILocation(line: 2443, column: 26, scope: !4325)
!4329 = !DILocation(line: 2443, column: 12, scope: !4325)
!4330 = !DILocation(line: 2443, column: 10, scope: !4325)
!4331 = !DILocation(line: 2445, column: 25, scope: !4325)
!4332 = !DILocation(line: 2445, column: 10, scope: !4325)
!4333 = !DILocation(line: 2445, column: 8, scope: !4325)
!4334 = !DILocation(line: 2446, column: 12, scope: !4325)
!4335 = !DILocation(line: 2446, column: 4, scope: !4325)
!4336 = !DILocation(line: 2447, column: 12, scope: !4325)
!4337 = !DILocation(line: 2447, column: 4, scope: !4325)
!4338 = !DILocation(line: 2449, column: 29, scope: !4325)
!4339 = !DILocation(line: 2449, column: 15, scope: !4325)
!4340 = !DILocation(line: 2449, column: 13, scope: !4325)
!4341 = !DILocation(line: 2450, column: 25, scope: !4325)
!4342 = !DILocation(line: 2450, column: 10, scope: !4325)
!4343 = !DILocation(line: 2450, column: 8, scope: !4325)
!4344 = !DILocation(line: 2451, column: 22, scope: !4325)
!4345 = !DILocation(line: 2451, column: 10, scope: !4325)
!4346 = !DILocation(line: 2451, column: 8, scope: !4325)
!4347 = !DILocation(line: 2452, column: 22, scope: !4325)
!4348 = !DILocation(line: 2452, column: 27, scope: !4325)
!4349 = !DILocation(line: 2452, column: 76, scope: !4325)
!4350 = !DILocation(line: 2452, column: 4, scope: !4325)
!4351 = !DILocation(line: 2453, column: 25, scope: !4325)
!4352 = !DILocation(line: 2453, column: 4, scope: !4325)
!4353 = !DILocation(line: 2454, column: 22, scope: !4325)
!4354 = !DILocation(line: 2454, column: 10, scope: !4325)
!4355 = !DILocation(line: 2454, column: 8, scope: !4325)
!4356 = !DILocation(line: 2455, column: 25, scope: !4325)
!4357 = !DILocation(line: 2455, column: 4, scope: !4325)
!4358 = !DILocation(line: 2457, column: 25, scope: !4325)
!4359 = !DILocation(line: 2457, column: 10, scope: !4325)
!4360 = !DILocation(line: 2457, column: 8, scope: !4325)
!4361 = !DILocation(line: 2458, column: 12, scope: !4325)
!4362 = !DILocation(line: 2458, column: 4, scope: !4325)
!4363 = !DILocation(line: 2459, column: 12, scope: !4325)
!4364 = !DILocation(line: 2459, column: 4, scope: !4325)
!4365 = !DILocation(line: 2460, column: 3, scope: !4325)
!4366 = !DILocation(line: 2464, column: 8, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2464, column: 7)
!4368 = !DILocation(line: 2464, column: 12, scope: !4367)
!4369 = !DILocation(line: 2464, column: 20, scope: !4367)
!4370 = !DILocation(line: 2464, column: 35, scope: !4367)
!4371 = !DILocation(line: 2464, column: 7, scope: !4256)
!4372 = !DILocation(line: 2464, column: 41, scope: !4367)
!4373 = !DILocation(line: 2467, column: 11, scope: !4256)
!4374 = !DILocation(line: 2467, column: 3, scope: !4256)
!4375 = !DILocation(line: 2469, column: 14, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2469, column: 3)
!4377 = !DILocation(line: 2469, column: 18, scope: !4376)
!4378 = !DILocation(line: 2469, column: 30, scope: !4376)
!4379 = !DILocation(line: 2469, column: 12, scope: !4376)
!4380 = !DILocation(line: 2469, column: 8, scope: !4376)
!4381 = !DILocation(line: 2469, column: 37, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4376, file: !1, line: 2469, column: 3)
!4383 = !DILocation(line: 2469, column: 3, scope: !4376)
!4384 = !DILocation(line: 2470, column: 29, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 2469, column: 60)
!4386 = !DILocation(line: 2470, column: 23, scope: !4385)
!4387 = !DILocation(line: 2470, column: 50, scope: !4385)
!4388 = !DILocation(line: 2470, column: 4, scope: !4385)
!4389 = !DILocation(line: 2472, column: 10, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 2472, column: 8)
!4391 = !DILocation(line: 2472, column: 14, scope: !4390)
!4392 = !DILocation(line: 2472, column: 22, scope: !4390)
!4393 = !DILocation(line: 2472, column: 37, scope: !4390)
!4394 = !DILocation(line: 2472, column: 42, scope: !4390)
!4395 = !DILocation(line: 2472, column: 46, scope: !4390)
!4396 = !DILocation(line: 2472, column: 54, scope: !4390)
!4397 = !DILocation(line: 2472, column: 60, scope: !4390)
!4398 = !DILocation(line: 2472, column: 52, scope: !4390)
!4399 = !DILocation(line: 2472, column: 8, scope: !4385)
!4400 = !DILocation(line: 2473, column: 5, scope: !4390)
!4401 = !DILocation(line: 2476, column: 26, scope: !4385)
!4402 = !DILocation(line: 2476, column: 12, scope: !4385)
!4403 = !DILocation(line: 2476, column: 10, scope: !4385)
!4404 = !DILocation(line: 2479, column: 25, scope: !4385)
!4405 = !DILocation(line: 2479, column: 10, scope: !4385)
!4406 = !DILocation(line: 2479, column: 8, scope: !4385)
!4407 = !DILocation(line: 2480, column: 22, scope: !4385)
!4408 = !DILocation(line: 2480, column: 27, scope: !4385)
!4409 = !DILocation(line: 2480, column: 4, scope: !4385)
!4410 = !DILocation(line: 2481, column: 25, scope: !4385)
!4411 = !DILocation(line: 2481, column: 4, scope: !4385)
!4412 = !DILocation(line: 2482, column: 23, scope: !4385)
!4413 = !DILocation(line: 2482, column: 60, scope: !4385)
!4414 = !DILocation(line: 2482, column: 71, scope: !4385)
!4415 = !DILocation(line: 2482, column: 82, scope: !4385)
!4416 = !DILocation(line: 2482, column: 10, scope: !4385)
!4417 = !DILocation(line: 2482, column: 8, scope: !4385)
!4418 = !DILocation(line: 2483, column: 9, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 2483, column: 8)
!4420 = !DILocation(line: 2483, column: 8, scope: !4385)
!4421 = !DILocation(line: 2484, column: 18, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !1, line: 2483, column: 42)
!4423 = !DILocation(line: 2484, column: 5, scope: !4422)
!4424 = !DILocation(line: 2485, column: 4, scope: !4422)
!4425 = !DILocation(line: 2489, column: 29, scope: !4385)
!4426 = !DILocation(line: 2489, column: 15, scope: !4385)
!4427 = !DILocation(line: 2489, column: 13, scope: !4385)
!4428 = !DILocation(line: 2491, column: 25, scope: !4385)
!4429 = !DILocation(line: 2491, column: 10, scope: !4385)
!4430 = !DILocation(line: 2491, column: 8, scope: !4385)
!4431 = !DILocation(line: 2492, column: 30, scope: !4385)
!4432 = !DILocation(line: 2492, column: 4, scope: !4385)
!4433 = !DILocation(line: 2496, column: 27, scope: !4385)
!4434 = !DILocation(line: 2496, column: 38, scope: !4385)
!4435 = !DILocation(line: 2496, column: 43, scope: !4385)
!4436 = !DILocation(line: 2496, column: 50, scope: !4385)
!4437 = !DILocation(line: 2496, column: 4, scope: !4385)
!4438 = !DILocation(line: 2499, column: 26, scope: !4385)
!4439 = !DILocation(line: 2499, column: 4, scope: !4385)
!4440 = !DILocation(line: 2502, column: 25, scope: !4385)
!4441 = !DILocation(line: 2502, column: 10, scope: !4385)
!4442 = !DILocation(line: 2502, column: 8, scope: !4385)
!4443 = !DILocation(line: 2503, column: 22, scope: !4385)
!4444 = !DILocation(line: 2503, column: 27, scope: !4385)
!4445 = !DILocation(line: 2503, column: 4, scope: !4385)
!4446 = !DILocation(line: 2504, column: 25, scope: !4385)
!4447 = !DILocation(line: 2504, column: 4, scope: !4385)
!4448 = !DILocation(line: 2505, column: 23, scope: !4385)
!4449 = !DILocation(line: 2505, column: 56, scope: !4385)
!4450 = !DILocation(line: 2505, column: 67, scope: !4385)
!4451 = !DILocation(line: 2505, column: 10, scope: !4385)
!4452 = !DILocation(line: 2505, column: 8, scope: !4385)
!4453 = !DILocation(line: 2506, column: 9, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 2506, column: 8)
!4455 = !DILocation(line: 2506, column: 8, scope: !4385)
!4456 = !DILocation(line: 2507, column: 18, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4454, file: !1, line: 2506, column: 42)
!4458 = !DILocation(line: 2507, column: 5, scope: !4457)
!4459 = !DILocation(line: 2508, column: 4, scope: !4457)
!4460 = !DILocation(line: 2510, column: 17, scope: !4385)
!4461 = !DILocation(line: 2510, column: 40, scope: !4385)
!4462 = !DILocation(line: 2510, column: 46, scope: !4385)
!4463 = !DILocation(line: 2510, column: 28, scope: !4385)
!4464 = !DILocation(line: 2510, column: 55, scope: !4385)
!4465 = !DILocation(line: 2510, column: 61, scope: !4385)
!4466 = !DILocation(line: 2510, column: 4, scope: !4385)
!4467 = !DILocation(line: 2512, column: 3, scope: !4385)
!4468 = !DILocation(line: 2469, column: 48, scope: !4382)
!4469 = !DILocation(line: 2469, column: 54, scope: !4382)
!4470 = !DILocation(line: 2469, column: 47, scope: !4382)
!4471 = !DILocation(line: 2469, column: 3, scope: !4382)
!4472 = distinct !{!4472, !4383, !4473}
!4473 = !DILocation(line: 2512, column: 3, scope: !4376)
!4474 = !DILocation(line: 2513, column: 2, scope: !4256)
!4475 = !DILocation(line: 2413, column: 22, scope: !4251)
!4476 = !DILocation(line: 2413, column: 2, scope: !4251)
!4477 = distinct !{!4477, !4254, !4478}
!4478 = !DILocation(line: 2513, column: 2, scope: !4248)
!4479 = !DILocation(line: 2514, column: 23, scope: !3527)
!4480 = !DILocation(line: 2514, column: 2, scope: !3527)
!4481 = !DILocation(line: 2515, column: 11, scope: !3527)
!4482 = !DILocation(line: 2515, column: 9, scope: !3527)
!4483 = !DILocation(line: 2519, column: 9, scope: !3527)
!4484 = !DILocation(line: 2519, column: 7, scope: !3527)
!4485 = !DILocation(line: 2519, column: 21, scope: !3527)
!4486 = !DILocation(line: 2519, column: 5, scope: !3527)
!4487 = !DILocation(line: 2519, column: 34, scope: !3527)
!4488 = !DILocation(line: 2519, column: 32, scope: !3527)
!4489 = !DILocation(line: 2519, column: 31, scope: !3527)
!4490 = !DILocation(line: 2519, column: 46, scope: !3527)
!4491 = !DILocation(line: 2519, column: 29, scope: !3527)
!4492 = !DILocation(line: 2519, column: 65, scope: !3527)
!4493 = !DILocation(line: 2519, column: 63, scope: !3527)
!4494 = !DILocation(line: 2519, column: 61, scope: !3527)
!4495 = !DILocation(line: 2519, column: 56, scope: !3527)
!4496 = !DILocation(line: 2520, column: 24, scope: !3527)
!4497 = !DILocation(line: 2520, column: 68, scope: !3527)
!4498 = !DILocation(line: 2520, column: 73, scope: !3527)
!4499 = !DILocation(line: 2520, column: 78, scope: !3527)
!4500 = !DILocation(line: 2520, column: 92, scope: !3527)
!4501 = !DILocation(line: 2520, column: 10, scope: !3527)
!4502 = !DILocation(line: 2520, column: 8, scope: !3527)
!4503 = !DILocation(line: 2521, column: 20, scope: !3527)
!4504 = !DILocation(line: 2521, column: 8, scope: !3527)
!4505 = !DILocation(line: 2521, column: 6, scope: !3527)
!4506 = !DILocation(line: 2523, column: 16, scope: !3527)
!4507 = !DILocation(line: 2523, column: 61, scope: !3527)
!4508 = !DILocation(line: 2523, column: 69, scope: !3527)
!4509 = !DILocation(line: 2523, column: 67, scope: !3527)
!4510 = !DILocation(line: 2523, column: 81, scope: !3527)
!4511 = !DILocation(line: 2523, column: 65, scope: !3527)
!4512 = !DILocation(line: 2523, column: 86, scope: !3527)
!4513 = !DILocation(line: 2523, column: 98, scope: !3527)
!4514 = !DILocation(line: 2523, column: 96, scope: !3527)
!4515 = !DILocation(line: 2523, column: 94, scope: !3527)
!4516 = !DILocation(line: 2523, column: 91, scope: !3527)
!4517 = !DILocation(line: 2523, column: 111, scope: !3527)
!4518 = !DILocation(line: 2523, column: 2, scope: !3527)
!4519 = !DILocation(line: 2525, column: 10, scope: !3527)
!4520 = !DILocation(line: 2525, column: 2, scope: !3527)
!4521 = !DILocation(line: 2526, column: 10, scope: !3527)
!4522 = !DILocation(line: 2526, column: 2, scope: !3527)
!4523 = !DILocation(line: 2527, column: 10, scope: !3527)
!4524 = !DILocation(line: 2527, column: 2, scope: !3527)
!4525 = !DILocation(line: 2528, column: 10, scope: !3527)
!4526 = !DILocation(line: 2528, column: 2, scope: !3527)
!4527 = !DILocation(line: 2530, column: 8, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2530, column: 2)
!4529 = !DILocation(line: 2530, column: 7, scope: !4528)
!4530 = !DILocation(line: 2530, column: 12, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !1, line: 2530, column: 2)
!4532 = !DILocation(line: 2530, column: 14, scope: !4531)
!4533 = !DILocation(line: 2530, column: 13, scope: !4531)
!4534 = !DILocation(line: 2530, column: 2, scope: !4528)
!4535 = !DILocalVariable(name: "sens", scope: !4536, file: !1, line: 2531, type: !2648)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !1, line: 2530, column: 26)
!4537 = !DILocation(line: 2531, column: 12, scope: !4536)
!4538 = !DILocalVariable(name: "ptr", scope: !4536, file: !1, line: 2532, type: !3645)
!4539 = !DILocation(line: 2532, column: 14, scope: !4536)
!4540 = !DILocation(line: 2534, column: 17, scope: !4536)
!4541 = !DILocation(line: 2534, column: 22, scope: !4536)
!4542 = !DILocation(line: 2534, column: 7, scope: !4536)
!4543 = !DILocation(line: 2534, column: 5, scope: !4536)
!4544 = !DILocation(line: 2537, column: 8, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 2537, column: 7)
!4546 = !DILocation(line: 2537, column: 12, scope: !4545)
!4547 = !DILocation(line: 2537, column: 23, scope: !4545)
!4548 = !DILocation(line: 2537, column: 38, scope: !4545)
!4549 = !DILocation(line: 2537, column: 7, scope: !4536)
!4550 = !DILocation(line: 2537, column: 44, scope: !4545)
!4551 = !DILocation(line: 2539, column: 21, scope: !4536)
!4552 = !DILocation(line: 2539, column: 9, scope: !4536)
!4553 = !DILocation(line: 2539, column: 7, scope: !4536)
!4554 = !DILocation(line: 2540, column: 16, scope: !4536)
!4555 = !DILocation(line: 2540, column: 49, scope: !4536)
!4556 = !DILocation(line: 2540, column: 53, scope: !4536)
!4557 = !DILocation(line: 2540, column: 56, scope: !4536)
!4558 = !DILocation(line: 2540, column: 61, scope: !4536)
!4559 = !DILocation(line: 2540, column: 74, scope: !4536)
!4560 = !DILocation(line: 2540, column: 82, scope: !4536)
!4561 = !DILocation(line: 2540, column: 80, scope: !4536)
!4562 = !DILocation(line: 2540, column: 94, scope: !4536)
!4563 = !DILocation(line: 2540, column: 78, scope: !4536)
!4564 = !DILocation(line: 2540, column: 66, scope: !4536)
!4565 = !DILocation(line: 2540, column: 100, scope: !4536)
!4566 = !DILocation(line: 2540, column: 113, scope: !4536)
!4567 = !DILocation(line: 2540, column: 130, scope: !4536)
!4568 = !DILocation(line: 2540, column: 128, scope: !4536)
!4569 = !DILocation(line: 2540, column: 126, scope: !4536)
!4570 = !DILocation(line: 2540, column: 119, scope: !4536)
!4571 = !DILocation(line: 2540, column: 105, scope: !4536)
!4572 = !DILocation(line: 2540, column: 144, scope: !4536)
!4573 = !DILocation(line: 2540, column: 156, scope: !4536)
!4574 = !DILocation(line: 2540, column: 160, scope: !4536)
!4575 = !DILocation(line: 2540, column: 3, scope: !4536)
!4576 = !DILocation(line: 2542, column: 28, scope: !4536)
!4577 = !DILocation(line: 2542, column: 22, scope: !4536)
!4578 = !DILocation(line: 2542, column: 45, scope: !4536)
!4579 = !DILocation(line: 2542, column: 3, scope: !4536)
!4580 = !DILocation(line: 2543, column: 29, scope: !4536)
!4581 = !DILocation(line: 2543, column: 3, scope: !4536)
!4582 = !DILocation(line: 2544, column: 19, scope: !4536)
!4583 = !DILocation(line: 2544, column: 24, scope: !4536)
!4584 = !DILocation(line: 2544, column: 3, scope: !4536)
!4585 = !DILocation(line: 2546, column: 8, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 2546, column: 7)
!4587 = !DILocation(line: 2546, column: 12, scope: !4586)
!4588 = !DILocation(line: 2546, column: 20, scope: !4586)
!4589 = !DILocation(line: 2546, column: 35, scope: !4586)
!4590 = !DILocation(line: 2546, column: 7, scope: !4536)
!4591 = !DILocation(line: 2546, column: 41, scope: !4586)
!4592 = !DILocation(line: 2548, column: 11, scope: !4536)
!4593 = !DILocation(line: 2548, column: 3, scope: !4536)
!4594 = !DILocation(line: 2550, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 2550, column: 3)
!4596 = !DILocation(line: 2550, column: 18, scope: !4595)
!4597 = !DILocation(line: 2550, column: 26, scope: !4595)
!4598 = !DILocation(line: 2550, column: 12, scope: !4595)
!4599 = !DILocation(line: 2550, column: 8, scope: !4595)
!4600 = !DILocation(line: 2550, column: 33, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4595, file: !1, line: 2550, column: 3)
!4602 = !DILocation(line: 2550, column: 3, scope: !4595)
!4603 = !DILocation(line: 2551, column: 29, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !1, line: 2550, column: 56)
!4605 = !DILocation(line: 2551, column: 23, scope: !4604)
!4606 = !DILocation(line: 2551, column: 46, scope: !4604)
!4607 = !DILocation(line: 2551, column: 4, scope: !4604)
!4608 = !DILocation(line: 2553, column: 9, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4604, file: !1, line: 2553, column: 8)
!4610 = !DILocation(line: 2553, column: 13, scope: !4609)
!4611 = !DILocation(line: 2553, column: 21, scope: !4609)
!4612 = !DILocation(line: 2553, column: 36, scope: !4609)
!4613 = !DILocation(line: 2554, column: 7, scope: !4609)
!4614 = !DILocation(line: 2554, column: 15, scope: !4609)
!4615 = !DILocation(line: 2554, column: 23, scope: !4609)
!4616 = !DILocation(line: 2554, column: 42, scope: !4609)
!4617 = !DILocation(line: 2555, column: 6, scope: !4609)
!4618 = !DILocation(line: 2555, column: 12, scope: !4609)
!4619 = !DILocation(line: 2555, column: 21, scope: !4609)
!4620 = !DILocation(line: 2555, column: 27, scope: !4609)
!4621 = !DILocation(line: 2556, column: 6, scope: !4609)
!4622 = !DILocation(line: 2556, column: 12, scope: !4609)
!4623 = !DILocation(line: 2556, column: 17, scope: !4609)
!4624 = !DILocation(line: 2556, column: 28, scope: !4609)
!4625 = !DILocation(line: 2556, column: 31, scope: !4609)
!4626 = !DILocation(line: 2556, column: 39, scope: !4609)
!4627 = !DILocation(line: 2556, column: 47, scope: !4609)
!4628 = !DILocation(line: 2556, column: 66, scope: !4609)
!4629 = !DILocation(line: 2557, column: 23, scope: !4609)
!4630 = !DILocation(line: 2557, column: 30, scope: !4609)
!4631 = !DILocation(line: 2557, column: 6, scope: !4609)
!4632 = !DILocation(line: 2557, column: 5, scope: !4609)
!4633 = !DILocation(line: 2553, column: 8, scope: !4604)
!4634 = !DILocalVariable(name: "split", scope: !4635, file: !1, line: 2560, type: !3660)
!4635 = distinct !DILexicalBlock(scope: !4609, file: !1, line: 2559, column: 4)
!4636 = !DILocation(line: 2560, column: 15, scope: !4635)
!4637 = !DILocalVariable(name: "col", scope: !4635, file: !1, line: 2560, type: !3660)
!4638 = !DILocation(line: 2560, column: 23, scope: !4635)
!4639 = !DILocation(line: 2563, column: 5, scope: !4635)
!4640 = !DILocation(line: 2563, column: 11, scope: !4635)
!4641 = !DILocation(line: 2563, column: 16, scope: !4635)
!4642 = !DILocation(line: 2565, column: 27, scope: !4635)
!4643 = !DILocation(line: 2565, column: 13, scope: !4635)
!4644 = !DILocation(line: 2565, column: 11, scope: !4635)
!4645 = !DILocation(line: 2566, column: 26, scope: !4635)
!4646 = !DILocation(line: 2566, column: 11, scope: !4635)
!4647 = !DILocation(line: 2566, column: 9, scope: !4635)
!4648 = !DILocation(line: 2567, column: 31, scope: !4635)
!4649 = !DILocation(line: 2567, column: 5, scope: !4635)
!4650 = !DILocation(line: 2570, column: 24, scope: !4635)
!4651 = !DILocation(line: 2570, column: 5, scope: !4635)
!4652 = !DILocation(line: 2573, column: 23, scope: !4635)
!4653 = !DILocation(line: 2573, column: 34, scope: !4635)
!4654 = !DILocation(line: 2573, column: 5, scope: !4635)
!4655 = !DILocation(line: 2576, column: 26, scope: !4635)
!4656 = !DILocation(line: 2576, column: 11, scope: !4635)
!4657 = !DILocation(line: 2576, column: 9, scope: !4635)
!4658 = !DILocation(line: 2577, column: 23, scope: !4635)
!4659 = !DILocation(line: 2577, column: 28, scope: !4635)
!4660 = !DILocation(line: 2577, column: 5, scope: !4635)
!4661 = !DILocation(line: 2578, column: 24, scope: !4635)
!4662 = !DILocation(line: 2578, column: 57, scope: !4635)
!4663 = !DILocation(line: 2578, column: 68, scope: !4635)
!4664 = !DILocation(line: 2578, column: 11, scope: !4635)
!4665 = !DILocation(line: 2578, column: 9, scope: !4635)
!4666 = !DILocation(line: 2579, column: 10, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4635, file: !1, line: 2579, column: 9)
!4668 = !DILocation(line: 2579, column: 9, scope: !4635)
!4669 = !DILocation(line: 2580, column: 19, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !1, line: 2579, column: 43)
!4671 = !DILocation(line: 2580, column: 6, scope: !4670)
!4672 = !DILocation(line: 2581, column: 5, scope: !4670)
!4673 = !DILocation(line: 2584, column: 18, scope: !4635)
!4674 = !DILocation(line: 2584, column: 40, scope: !4635)
!4675 = !DILocation(line: 2584, column: 46, scope: !4635)
!4676 = !DILocation(line: 2584, column: 29, scope: !4635)
!4677 = !DILocation(line: 2584, column: 54, scope: !4635)
!4678 = !DILocation(line: 2584, column: 60, scope: !4635)
!4679 = !DILocation(line: 2584, column: 5, scope: !4635)
!4680 = !DILocation(line: 2585, column: 4, scope: !4635)
!4681 = !DILocation(line: 2586, column: 3, scope: !4604)
!4682 = !DILocation(line: 2550, column: 44, scope: !4601)
!4683 = !DILocation(line: 2550, column: 50, scope: !4601)
!4684 = !DILocation(line: 2550, column: 43, scope: !4601)
!4685 = !DILocation(line: 2550, column: 3, scope: !4601)
!4686 = distinct !{!4686, !4602, !4687}
!4687 = !DILocation(line: 2586, column: 3, scope: !4595)
!4688 = !DILocation(line: 2587, column: 2, scope: !4536)
!4689 = !DILocation(line: 2530, column: 22, scope: !4531)
!4690 = !DILocation(line: 2530, column: 2, scope: !4531)
!4691 = distinct !{!4691, !4534, !4692}
!4692 = !DILocation(line: 2587, column: 2, scope: !4528)
!4693 = !DILocation(line: 2588, column: 23, scope: !3527)
!4694 = !DILocation(line: 2588, column: 2, scope: !3527)
!4695 = !DILocation(line: 2589, column: 11, scope: !3527)
!4696 = !DILocation(line: 2589, column: 9, scope: !3527)
!4697 = !DILocation(line: 2593, column: 14, scope: !3527)
!4698 = !DILocation(line: 2593, column: 12, scope: !3527)
!4699 = !DILocation(line: 2593, column: 10, scope: !3527)
!4700 = !DILocation(line: 2593, column: 5, scope: !3527)
!4701 = !DILocation(line: 2593, column: 35, scope: !3527)
!4702 = !DILocation(line: 2593, column: 33, scope: !3527)
!4703 = !DILocation(line: 2593, column: 32, scope: !3527)
!4704 = !DILocation(line: 2593, column: 47, scope: !3527)
!4705 = !DILocation(line: 2593, column: 30, scope: !3527)
!4706 = !DILocation(line: 2593, column: 66, scope: !3527)
!4707 = !DILocation(line: 2593, column: 64, scope: !3527)
!4708 = !DILocation(line: 2593, column: 62, scope: !3527)
!4709 = !DILocation(line: 2593, column: 57, scope: !3527)
!4710 = !DILocation(line: 2594, column: 24, scope: !3527)
!4711 = !DILocation(line: 2594, column: 68, scope: !3527)
!4712 = !DILocation(line: 2594, column: 73, scope: !3527)
!4713 = !DILocation(line: 2594, column: 78, scope: !3527)
!4714 = !DILocation(line: 2594, column: 92, scope: !3527)
!4715 = !DILocation(line: 2594, column: 10, scope: !3527)
!4716 = !DILocation(line: 2594, column: 8, scope: !3527)
!4717 = !DILocation(line: 2595, column: 20, scope: !3527)
!4718 = !DILocation(line: 2595, column: 8, scope: !3527)
!4719 = !DILocation(line: 2595, column: 6, scope: !3527)
!4720 = !DILocation(line: 2597, column: 16, scope: !3527)
!4721 = !DILocation(line: 2597, column: 65, scope: !3527)
!4722 = !DILocation(line: 2597, column: 73, scope: !3527)
!4723 = !DILocation(line: 2597, column: 71, scope: !3527)
!4724 = !DILocation(line: 2597, column: 85, scope: !3527)
!4725 = !DILocation(line: 2597, column: 69, scope: !3527)
!4726 = !DILocation(line: 2597, column: 90, scope: !3527)
!4727 = !DILocation(line: 2597, column: 102, scope: !3527)
!4728 = !DILocation(line: 2597, column: 100, scope: !3527)
!4729 = !DILocation(line: 2597, column: 98, scope: !3527)
!4730 = !DILocation(line: 2597, column: 95, scope: !3527)
!4731 = !DILocation(line: 2597, column: 115, scope: !3527)
!4732 = !DILocation(line: 2597, column: 2, scope: !3527)
!4733 = !DILocation(line: 2599, column: 10, scope: !3527)
!4734 = !DILocation(line: 2599, column: 2, scope: !3527)
!4735 = !DILocation(line: 2600, column: 10, scope: !3527)
!4736 = !DILocation(line: 2600, column: 2, scope: !3527)
!4737 = !DILocation(line: 2601, column: 10, scope: !3527)
!4738 = !DILocation(line: 2601, column: 2, scope: !3527)
!4739 = !DILocation(line: 2602, column: 10, scope: !3527)
!4740 = !DILocation(line: 2602, column: 2, scope: !3527)
!4741 = !DILocation(line: 2604, column: 8, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2604, column: 2)
!4743 = !DILocation(line: 2604, column: 7, scope: !4742)
!4744 = !DILocation(line: 2604, column: 12, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !1, line: 2604, column: 2)
!4746 = !DILocation(line: 2604, column: 14, scope: !4745)
!4747 = !DILocation(line: 2604, column: 13, scope: !4745)
!4748 = !DILocation(line: 2604, column: 2, scope: !4742)
!4749 = !DILocalVariable(name: "act", scope: !4750, file: !1, line: 2605, type: !2645)
!4750 = distinct !DILexicalBlock(scope: !4745, file: !1, line: 2604, column: 26)
!4751 = !DILocation(line: 2605, column: 14, scope: !4750)
!4752 = !DILocalVariable(name: "ptr", scope: !4750, file: !1, line: 2606, type: !3645)
!4753 = !DILocation(line: 2606, column: 14, scope: !4750)
!4754 = !DILocation(line: 2608, column: 17, scope: !4750)
!4755 = !DILocation(line: 2608, column: 22, scope: !4750)
!4756 = !DILocation(line: 2608, column: 7, scope: !4750)
!4757 = !DILocation(line: 2608, column: 5, scope: !4750)
!4758 = !DILocation(line: 2611, column: 8, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4750, file: !1, line: 2611, column: 7)
!4760 = !DILocation(line: 2611, column: 12, scope: !4759)
!4761 = !DILocation(line: 2611, column: 23, scope: !4759)
!4762 = !DILocation(line: 2611, column: 37, scope: !4759)
!4763 = !DILocation(line: 2611, column: 7, scope: !4750)
!4764 = !DILocation(line: 2612, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4759, file: !1, line: 2611, column: 43)
!4766 = !DILocation(line: 2615, column: 21, scope: !4750)
!4767 = !DILocation(line: 2615, column: 9, scope: !4750)
!4768 = !DILocation(line: 2615, column: 7, scope: !4750)
!4769 = !DILocation(line: 2616, column: 16, scope: !4750)
!4770 = !DILocation(line: 2616, column: 48, scope: !4750)
!4771 = !DILocation(line: 2616, column: 52, scope: !4750)
!4772 = !DILocation(line: 2616, column: 55, scope: !4750)
!4773 = !DILocation(line: 2616, column: 60, scope: !4750)
!4774 = !DILocation(line: 2616, column: 73, scope: !4750)
!4775 = !DILocation(line: 2616, column: 81, scope: !4750)
!4776 = !DILocation(line: 2616, column: 79, scope: !4750)
!4777 = !DILocation(line: 2616, column: 93, scope: !4750)
!4778 = !DILocation(line: 2616, column: 77, scope: !4750)
!4779 = !DILocation(line: 2616, column: 65, scope: !4750)
!4780 = !DILocation(line: 2616, column: 99, scope: !4750)
!4781 = !DILocation(line: 2616, column: 112, scope: !4750)
!4782 = !DILocation(line: 2616, column: 129, scope: !4750)
!4783 = !DILocation(line: 2616, column: 127, scope: !4750)
!4784 = !DILocation(line: 2616, column: 125, scope: !4750)
!4785 = !DILocation(line: 2616, column: 118, scope: !4750)
!4786 = !DILocation(line: 2616, column: 104, scope: !4750)
!4787 = !DILocation(line: 2616, column: 143, scope: !4750)
!4788 = !DILocation(line: 2616, column: 155, scope: !4750)
!4789 = !DILocation(line: 2616, column: 159, scope: !4750)
!4790 = !DILocation(line: 2616, column: 3, scope: !4750)
!4791 = !DILocation(line: 2618, column: 28, scope: !4750)
!4792 = !DILocation(line: 2618, column: 22, scope: !4750)
!4793 = !DILocation(line: 2618, column: 45, scope: !4750)
!4794 = !DILocation(line: 2618, column: 3, scope: !4750)
!4795 = !DILocation(line: 2619, column: 29, scope: !4750)
!4796 = !DILocation(line: 2619, column: 3, scope: !4750)
!4797 = !DILocation(line: 2620, column: 19, scope: !4750)
!4798 = !DILocation(line: 2620, column: 24, scope: !4750)
!4799 = !DILocation(line: 2620, column: 3, scope: !4750)
!4800 = !DILocation(line: 2622, column: 8, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4750, file: !1, line: 2622, column: 7)
!4802 = !DILocation(line: 2622, column: 12, scope: !4801)
!4803 = !DILocation(line: 2622, column: 20, scope: !4801)
!4804 = !DILocation(line: 2622, column: 34, scope: !4801)
!4805 = !DILocation(line: 2622, column: 7, scope: !4750)
!4806 = !DILocation(line: 2622, column: 40, scope: !4801)
!4807 = !DILocation(line: 2624, column: 11, scope: !4750)
!4808 = !DILocation(line: 2624, column: 3, scope: !4750)
!4809 = !DILocation(line: 2626, column: 13, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4750, file: !1, line: 2626, column: 3)
!4811 = !DILocation(line: 2626, column: 17, scope: !4810)
!4812 = !DILocation(line: 2626, column: 27, scope: !4810)
!4813 = !DILocation(line: 2626, column: 11, scope: !4810)
!4814 = !DILocation(line: 2626, column: 8, scope: !4810)
!4815 = !DILocation(line: 2626, column: 34, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4810, file: !1, line: 2626, column: 3)
!4817 = !DILocation(line: 2626, column: 3, scope: !4810)
!4818 = !DILocation(line: 2628, column: 29, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4816, file: !1, line: 2626, column: 54)
!4820 = !DILocation(line: 2628, column: 23, scope: !4819)
!4821 = !DILocation(line: 2628, column: 48, scope: !4819)
!4822 = !DILocation(line: 2628, column: 4, scope: !4819)
!4823 = !DILocation(line: 2630, column: 9, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4819, file: !1, line: 2630, column: 8)
!4825 = !DILocation(line: 2630, column: 13, scope: !4824)
!4826 = !DILocation(line: 2630, column: 21, scope: !4824)
!4827 = !DILocation(line: 2630, column: 36, scope: !4824)
!4828 = !DILocation(line: 2631, column: 7, scope: !4824)
!4829 = !DILocation(line: 2631, column: 15, scope: !4824)
!4830 = !DILocation(line: 2631, column: 23, scope: !4824)
!4831 = !DILocation(line: 2631, column: 41, scope: !4824)
!4832 = !DILocation(line: 2632, column: 7, scope: !4824)
!4833 = !DILocation(line: 2632, column: 12, scope: !4824)
!4834 = !DILocation(line: 2632, column: 17, scope: !4824)
!4835 = !DILocation(line: 2632, column: 31, scope: !4824)
!4836 = !DILocation(line: 2633, column: 6, scope: !4824)
!4837 = !DILocation(line: 2633, column: 11, scope: !4824)
!4838 = !DILocation(line: 2633, column: 16, scope: !4824)
!4839 = !DILocation(line: 2633, column: 31, scope: !4824)
!4840 = !DILocation(line: 2634, column: 6, scope: !4824)
!4841 = !DILocation(line: 2634, column: 11, scope: !4824)
!4842 = !DILocation(line: 2634, column: 16, scope: !4824)
!4843 = !DILocation(line: 2634, column: 26, scope: !4824)
!4844 = !DILocation(line: 2634, column: 29, scope: !4824)
!4845 = !DILocation(line: 2634, column: 37, scope: !4824)
!4846 = !DILocation(line: 2634, column: 45, scope: !4824)
!4847 = !DILocation(line: 2630, column: 8, scope: !4819)
!4848 = !DILocalVariable(name: "split", scope: !4849, file: !1, line: 2637, type: !3660)
!4849 = distinct !DILexicalBlock(scope: !4824, file: !1, line: 2636, column: 4)
!4850 = !DILocation(line: 2637, column: 15, scope: !4849)
!4851 = !DILocalVariable(name: "col", scope: !4849, file: !1, line: 2637, type: !3660)
!4852 = !DILocation(line: 2637, column: 23, scope: !4849)
!4853 = !DILocation(line: 2640, column: 5, scope: !4849)
!4854 = !DILocation(line: 2640, column: 10, scope: !4849)
!4855 = !DILocation(line: 2640, column: 15, scope: !4849)
!4856 = !DILocation(line: 2642, column: 27, scope: !4849)
!4857 = !DILocation(line: 2642, column: 13, scope: !4849)
!4858 = !DILocation(line: 2642, column: 11, scope: !4849)
!4859 = !DILocation(line: 2645, column: 26, scope: !4849)
!4860 = !DILocation(line: 2645, column: 11, scope: !4849)
!4861 = !DILocation(line: 2645, column: 9, scope: !4849)
!4862 = !DILocation(line: 2646, column: 23, scope: !4849)
!4863 = !DILocation(line: 2646, column: 28, scope: !4849)
!4864 = !DILocation(line: 2646, column: 5, scope: !4849)
!4865 = !DILocation(line: 2647, column: 24, scope: !4849)
!4866 = !DILocation(line: 2647, column: 61, scope: !4849)
!4867 = !DILocation(line: 2647, column: 72, scope: !4849)
!4868 = !DILocation(line: 2647, column: 83, scope: !4849)
!4869 = !DILocation(line: 2647, column: 11, scope: !4849)
!4870 = !DILocation(line: 2647, column: 9, scope: !4849)
!4871 = !DILocation(line: 2648, column: 10, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4849, file: !1, line: 2648, column: 9)
!4873 = !DILocation(line: 2648, column: 9, scope: !4849)
!4874 = !DILocation(line: 2649, column: 19, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4872, file: !1, line: 2648, column: 43)
!4876 = !DILocation(line: 2649, column: 6, scope: !4875)
!4877 = !DILocation(line: 2650, column: 5, scope: !4875)
!4878 = !DILocation(line: 2652, column: 26, scope: !4849)
!4879 = !DILocation(line: 2652, column: 11, scope: !4849)
!4880 = !DILocation(line: 2652, column: 9, scope: !4849)
!4881 = !DILocation(line: 2653, column: 31, scope: !4849)
!4882 = !DILocation(line: 2653, column: 5, scope: !4849)
!4883 = !DILocation(line: 2656, column: 26, scope: !4849)
!4884 = !DILocation(line: 2656, column: 5, scope: !4849)
!4885 = !DILocation(line: 2659, column: 25, scope: !4849)
!4886 = !DILocation(line: 2659, column: 36, scope: !4849)
!4887 = !DILocation(line: 2659, column: 5, scope: !4849)
!4888 = !DILocation(line: 2661, column: 4, scope: !4849)
!4889 = !DILocation(line: 2662, column: 3, scope: !4819)
!4890 = !DILocation(line: 2626, column: 43, scope: !4816)
!4891 = !DILocation(line: 2626, column: 48, scope: !4816)
!4892 = !DILocation(line: 2626, column: 42, scope: !4816)
!4893 = !DILocation(line: 2626, column: 3, scope: !4816)
!4894 = distinct !{!4894, !4817, !4895}
!4895 = !DILocation(line: 2662, column: 3, scope: !4810)
!4896 = !DILocation(line: 2663, column: 2, scope: !4750)
!4897 = !DILocation(line: 2604, column: 22, scope: !4745)
!4898 = !DILocation(line: 2604, column: 2, scope: !4745)
!4899 = distinct !{!4899, !4748, !4900}
!4900 = !DILocation(line: 2663, column: 2, scope: !4742)
!4901 = !DILocation(line: 2664, column: 23, scope: !3527)
!4902 = !DILocation(line: 2664, column: 2, scope: !3527)
!4903 = !DILocation(line: 2665, column: 11, scope: !3527)
!4904 = !DILocation(line: 2665, column: 9, scope: !3527)
!4905 = !DILocation(line: 2667, column: 25, scope: !3527)
!4906 = !DILocation(line: 2667, column: 29, scope: !3527)
!4907 = !DILocation(line: 2667, column: 44, scope: !3527)
!4908 = !DILocation(line: 2667, column: 42, scope: !3527)
!4909 = !DILocation(line: 2667, column: 40, scope: !3527)
!4910 = !DILocation(line: 2667, column: 34, scope: !3527)
!4911 = !DILocation(line: 2667, column: 57, scope: !3527)
!4912 = !DILocation(line: 2667, column: 68, scope: !3527)
!4913 = !DILocation(line: 2667, column: 66, scope: !3527)
!4914 = !DILocation(line: 2667, column: 64, scope: !3527)
!4915 = !DILocation(line: 2667, column: 2, scope: !3527)
!4916 = !DILocation(line: 2670, column: 24, scope: !3527)
!4917 = !DILocation(line: 2670, column: 28, scope: !3527)
!4918 = !DILocation(line: 2670, column: 2, scope: !3527)
!4919 = !DILocation(line: 2672, column: 17, scope: !3527)
!4920 = !DILocation(line: 2672, column: 2, scope: !3527)
!4921 = !DILocation(line: 2674, column: 13, scope: !3527)
!4922 = !DILocation(line: 2674, column: 16, scope: !3527)
!4923 = !DILocation(line: 2674, column: 2, scope: !3527)
!4924 = !DILocation(line: 2675, column: 14, scope: !3527)
!4925 = !DILocation(line: 2675, column: 17, scope: !3527)
!4926 = !DILocation(line: 2675, column: 2, scope: !3527)
!4927 = !DILocation(line: 2678, column: 25, scope: !3527)
!4928 = !DILocation(line: 2678, column: 2, scope: !3527)
!4929 = !DILocation(line: 2680, column: 6, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2680, column: 6)
!4931 = !DILocation(line: 2680, column: 6, scope: !3527)
!4932 = !DILocation(line: 2680, column: 12, scope: !4930)
!4933 = !DILocation(line: 2680, column: 22, scope: !4930)
!4934 = !DILocation(line: 2681, column: 1, scope: !3527)
!4935 = distinct !DISubprogram(name: "do_logic_buts", scope: !1, file: !1, line: 182, type: !4936, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{null, !2686, !1054, !1085}
!4938 = !DILocalVariable(name: "C", arg: 1, scope: !4935, file: !1, line: 182, type: !2686)
!4939 = !DILocation(line: 182, column: 37, scope: !4935)
!4940 = !DILocalVariable(name: "UNUSED_arg", arg: 2, scope: !4935, file: !1, line: 182, type: !1054)
!4941 = !DILocation(line: 182, column: 46, scope: !4935)
!4942 = !DILocalVariable(name: "event", arg: 3, scope: !4935, file: !1, line: 182, type: !1085)
!4943 = !DILocation(line: 182, column: 63, scope: !4935)
!4944 = !DILocalVariable(name: "bmain", scope: !4935, file: !1, line: 184, type: !2927)
!4945 = !DILocation(line: 184, column: 8, scope: !4935)
!4946 = !DILocation(line: 184, column: 29, scope: !4935)
!4947 = !DILocation(line: 184, column: 15, scope: !4935)
!4948 = !DILocalVariable(name: "sens", scope: !4935, file: !1, line: 185, type: !2648)
!4949 = !DILocation(line: 185, column: 11, scope: !4935)
!4950 = !DILocalVariable(name: "cont", scope: !4935, file: !1, line: 186, type: !2583)
!4951 = !DILocation(line: 186, column: 15, scope: !4935)
!4952 = !DILocalVariable(name: "act", scope: !4935, file: !1, line: 187, type: !2645)
!4953 = !DILocation(line: 187, column: 13, scope: !4935)
!4954 = !DILocalVariable(name: "ob", scope: !4935, file: !1, line: 188, type: !1044)
!4955 = !DILocation(line: 188, column: 10, scope: !4935)
!4956 = !DILocalVariable(name: "didit", scope: !4935, file: !1, line: 189, type: !1085)
!4957 = !DILocation(line: 189, column: 6, scope: !4935)
!4958 = !DILocalVariable(name: "bit", scope: !4935, file: !1, line: 189, type: !1085)
!4959 = !DILocation(line: 189, column: 13, scope: !4935)
!4960 = !DILocation(line: 191, column: 29, scope: !4935)
!4961 = !DILocation(line: 191, column: 6, scope: !4935)
!4962 = !DILocation(line: 191, column: 4, scope: !4935)
!4963 = !DILocation(line: 192, column: 6, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4935, file: !1, line: 192, column: 6)
!4965 = !DILocation(line: 192, column: 8, scope: !4964)
!4966 = !DILocation(line: 192, column: 6, scope: !4935)
!4967 = !DILocation(line: 192, column: 16, scope: !4964)
!4968 = !DILocation(line: 194, column: 10, scope: !4935)
!4969 = !DILocation(line: 194, column: 2, scope: !4935)
!4970 = !DILocation(line: 198, column: 3, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4935, file: !1, line: 194, column: 17)
!4972 = !DILocation(line: 198, column: 7, scope: !4971)
!4973 = !DILocation(line: 198, column: 16, scope: !4971)
!4974 = !DILocation(line: 199, column: 3, scope: !4971)
!4975 = !DILocation(line: 204, column: 3, scope: !4971)
!4976 = !DILocation(line: 204, column: 7, scope: !4971)
!4977 = !DILocation(line: 204, column: 16, scope: !4971)
!4978 = !DILocation(line: 205, column: 3, scope: !4971)
!4979 = !DILocation(line: 208, column: 11, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 208, column: 3)
!4981 = !DILocation(line: 208, column: 18, scope: !4980)
!4982 = !DILocation(line: 208, column: 25, scope: !4980)
!4983 = !DILocation(line: 208, column: 10, scope: !4980)
!4984 = !DILocation(line: 208, column: 8, scope: !4980)
!4985 = !DILocation(line: 208, column: 32, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4980, file: !1, line: 208, column: 3)
!4987 = !DILocation(line: 208, column: 3, scope: !4980)
!4988 = !DILocation(line: 209, column: 8, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 209, column: 8)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !1, line: 208, column: 52)
!4991 = !DILocation(line: 209, column: 12, scope: !4989)
!4992 = !DILocation(line: 209, column: 20, scope: !4989)
!4993 = !DILocation(line: 209, column: 8, scope: !4990)
!4994 = !DILocation(line: 210, column: 5, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 209, column: 34)
!4996 = !DILocation(line: 210, column: 9, scope: !4995)
!4997 = !DILocation(line: 210, column: 17, scope: !4995)
!4998 = !DILocation(line: 211, column: 11, scope: !4995)
!4999 = !DILocation(line: 211, column: 9, scope: !4995)
!5000 = !DILocation(line: 212, column: 19, scope: !4995)
!5001 = !DILocation(line: 212, column: 23, scope: !4995)
!5002 = !DILocation(line: 212, column: 33, scope: !4995)
!5003 = !DILocation(line: 212, column: 5, scope: !4995)
!5004 = !DILocation(line: 213, column: 28, scope: !4995)
!5005 = !DILocation(line: 213, column: 31, scope: !4995)
!5006 = !DILocation(line: 213, column: 37, scope: !4995)
!5007 = !DILocation(line: 213, column: 5, scope: !4995)
!5008 = !DILocation(line: 214, column: 5, scope: !4995)
!5009 = !DILocation(line: 214, column: 9, scope: !4995)
!5010 = !DILocation(line: 214, column: 17, scope: !4995)
!5011 = !DILocation(line: 215, column: 4, scope: !4995)
!5012 = !DILocation(line: 216, column: 3, scope: !4990)
!5013 = !DILocation(line: 208, column: 39, scope: !4986)
!5014 = !DILocation(line: 208, column: 43, scope: !4986)
!5015 = !DILocation(line: 208, column: 46, scope: !4986)
!5016 = !DILocation(line: 208, column: 38, scope: !4986)
!5017 = !DILocation(line: 208, column: 3, scope: !4986)
!5018 = distinct !{!5018, !4987, !5019}
!5019 = !DILocation(line: 216, column: 3, scope: !4980)
!5020 = !DILocation(line: 218, column: 16, scope: !4971)
!5021 = !DILocation(line: 218, column: 3, scope: !4971)
!5022 = !DILocation(line: 219, column: 3, scope: !4971)
!5023 = !DILocation(line: 222, column: 11, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 222, column: 3)
!5025 = !DILocation(line: 222, column: 18, scope: !5024)
!5026 = !DILocation(line: 222, column: 25, scope: !5024)
!5027 = !DILocation(line: 222, column: 10, scope: !5024)
!5028 = !DILocation(line: 222, column: 8, scope: !5024)
!5029 = !DILocation(line: 222, column: 32, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5024, file: !1, line: 222, column: 3)
!5031 = !DILocation(line: 222, column: 3, scope: !5024)
!5032 = !DILocation(line: 223, column: 10, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 222, column: 52)
!5034 = !DILocation(line: 223, column: 14, scope: !5033)
!5035 = !DILocation(line: 223, column: 22, scope: !5033)
!5036 = !DILocation(line: 223, column: 8, scope: !5033)
!5037 = !DILocation(line: 224, column: 4, scope: !5033)
!5038 = !DILocation(line: 224, column: 11, scope: !5033)
!5039 = !DILocation(line: 225, column: 9, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !1, line: 225, column: 9)
!5041 = distinct !DILexicalBlock(scope: !5033, file: !1, line: 224, column: 17)
!5042 = !DILocation(line: 225, column: 15, scope: !5040)
!5043 = !DILocation(line: 225, column: 23, scope: !5040)
!5044 = !DILocation(line: 225, column: 29, scope: !5040)
!5045 = !DILocation(line: 225, column: 20, scope: !5040)
!5046 = !DILocation(line: 225, column: 9, scope: !5041)
!5047 = !DILocation(line: 226, column: 18, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5040, file: !1, line: 225, column: 36)
!5049 = !DILocation(line: 226, column: 6, scope: !5048)
!5050 = !DILocation(line: 227, column: 19, scope: !5048)
!5051 = !DILocation(line: 227, column: 25, scope: !5048)
!5052 = !DILocation(line: 227, column: 6, scope: !5048)
!5053 = !DILocation(line: 227, column: 12, scope: !5048)
!5054 = !DILocation(line: 227, column: 17, scope: !5048)
!5055 = !DILocation(line: 228, column: 6, scope: !5048)
!5056 = !DILocation(line: 230, column: 11, scope: !5041)
!5057 = !DILocation(line: 230, column: 17, scope: !5041)
!5058 = !DILocation(line: 230, column: 9, scope: !5041)
!5059 = distinct !{!5059, !5037, !5060}
!5060 = !DILocation(line: 231, column: 4, scope: !5033)
!5061 = !DILocation(line: 232, column: 3, scope: !5033)
!5062 = !DILocation(line: 222, column: 39, scope: !5030)
!5063 = !DILocation(line: 222, column: 43, scope: !5030)
!5064 = !DILocation(line: 222, column: 46, scope: !5030)
!5065 = !DILocation(line: 222, column: 38, scope: !5030)
!5066 = !DILocation(line: 222, column: 3, scope: !5030)
!5067 = distinct !{!5067, !5031, !5068}
!5068 = !DILocation(line: 232, column: 3, scope: !5024)
!5069 = !DILocation(line: 233, column: 3, scope: !4971)
!5070 = !DILocation(line: 236, column: 11, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 236, column: 3)
!5072 = !DILocation(line: 236, column: 18, scope: !5071)
!5073 = !DILocation(line: 236, column: 25, scope: !5071)
!5074 = !DILocation(line: 236, column: 10, scope: !5071)
!5075 = !DILocation(line: 236, column: 8, scope: !5071)
!5076 = !DILocation(line: 236, column: 32, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5071, file: !1, line: 236, column: 3)
!5078 = !DILocation(line: 236, column: 3, scope: !5071)
!5079 = !DILocation(line: 237, column: 10, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5077, file: !1, line: 236, column: 52)
!5081 = !DILocation(line: 237, column: 14, scope: !5080)
!5082 = !DILocation(line: 237, column: 22, scope: !5080)
!5083 = !DILocation(line: 237, column: 8, scope: !5080)
!5084 = !DILocation(line: 238, column: 4, scope: !5080)
!5085 = !DILocation(line: 238, column: 11, scope: !5080)
!5086 = !DILocation(line: 239, column: 9, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !1, line: 239, column: 9)
!5088 = distinct !DILexicalBlock(scope: !5080, file: !1, line: 238, column: 17)
!5089 = !DILocation(line: 239, column: 15, scope: !5087)
!5090 = !DILocation(line: 239, column: 20, scope: !5087)
!5091 = !DILocation(line: 239, column: 9, scope: !5088)
!5092 = !DILocation(line: 240, column: 20, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 239, column: 32)
!5094 = !DILocation(line: 240, column: 24, scope: !5093)
!5095 = !DILocation(line: 240, column: 34, scope: !5093)
!5096 = !DILocation(line: 240, column: 6, scope: !5093)
!5097 = !DILocation(line: 241, column: 18, scope: !5093)
!5098 = !DILocation(line: 241, column: 6, scope: !5093)
!5099 = !DILocation(line: 242, column: 6, scope: !5093)
!5100 = !DILocation(line: 244, column: 11, scope: !5088)
!5101 = !DILocation(line: 244, column: 17, scope: !5088)
!5102 = !DILocation(line: 244, column: 9, scope: !5088)
!5103 = distinct !{!5103, !5084, !5104}
!5104 = !DILocation(line: 245, column: 4, scope: !5080)
!5105 = !DILocation(line: 246, column: 3, scope: !5080)
!5106 = !DILocation(line: 236, column: 39, scope: !5077)
!5107 = !DILocation(line: 236, column: 43, scope: !5077)
!5108 = !DILocation(line: 236, column: 46, scope: !5077)
!5109 = !DILocation(line: 236, column: 38, scope: !5077)
!5110 = !DILocation(line: 236, column: 3, scope: !5077)
!5111 = distinct !{!5111, !5078, !5112}
!5112 = !DILocation(line: 246, column: 3, scope: !5071)
!5113 = !DILocation(line: 247, column: 16, scope: !4971)
!5114 = !DILocation(line: 247, column: 3, scope: !4971)
!5115 = !DILocation(line: 248, column: 3, scope: !4971)
!5116 = !DILocation(line: 251, column: 11, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 251, column: 3)
!5118 = !DILocation(line: 251, column: 18, scope: !5117)
!5119 = !DILocation(line: 251, column: 25, scope: !5117)
!5120 = !DILocation(line: 251, column: 10, scope: !5117)
!5121 = !DILocation(line: 251, column: 8, scope: !5117)
!5122 = !DILocation(line: 251, column: 32, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5117, file: !1, line: 251, column: 3)
!5124 = !DILocation(line: 251, column: 3, scope: !5117)
!5125 = !DILocation(line: 252, column: 8, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !1, line: 252, column: 8)
!5127 = distinct !DILexicalBlock(scope: !5123, file: !1, line: 251, column: 52)
!5128 = !DILocation(line: 252, column: 12, scope: !5126)
!5129 = !DILocation(line: 252, column: 20, scope: !5126)
!5130 = !DILocation(line: 252, column: 8, scope: !5127)
!5131 = !DILocation(line: 253, column: 5, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5126, file: !1, line: 252, column: 34)
!5133 = !DILocation(line: 253, column: 9, scope: !5132)
!5134 = !DILocation(line: 253, column: 17, scope: !5132)
!5135 = !DILocation(line: 254, column: 11, scope: !5132)
!5136 = !DILocation(line: 254, column: 9, scope: !5132)
!5137 = !DILocation(line: 255, column: 28, scope: !5132)
!5138 = !DILocation(line: 255, column: 31, scope: !5132)
!5139 = !DILocation(line: 255, column: 37, scope: !5132)
!5140 = !DILocation(line: 255, column: 5, scope: !5132)
!5141 = !DILocation(line: 256, column: 5, scope: !5132)
!5142 = !DILocation(line: 256, column: 9, scope: !5132)
!5143 = !DILocation(line: 256, column: 17, scope: !5132)
!5144 = !DILocation(line: 257, column: 19, scope: !5132)
!5145 = !DILocation(line: 257, column: 23, scope: !5132)
!5146 = !DILocation(line: 257, column: 37, scope: !5132)
!5147 = !DILocation(line: 257, column: 5, scope: !5132)
!5148 = !DILocation(line: 261, column: 13, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5132, file: !1, line: 261, column: 5)
!5150 = !DILocation(line: 261, column: 10, scope: !5149)
!5151 = !DILocation(line: 261, column: 17, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5149, file: !1, line: 261, column: 5)
!5153 = !DILocation(line: 261, column: 20, scope: !5152)
!5154 = !DILocation(line: 261, column: 5, scope: !5149)
!5155 = !DILocation(line: 262, column: 10, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 262, column: 10)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !1, line: 261, column: 32)
!5158 = !DILocation(line: 262, column: 14, scope: !5156)
!5159 = !DILocation(line: 262, column: 26, scope: !5156)
!5160 = !DILocation(line: 262, column: 24, scope: !5156)
!5161 = !DILocation(line: 262, column: 20, scope: !5156)
!5162 = !DILocation(line: 262, column: 10, scope: !5157)
!5163 = !DILocation(line: 263, column: 7, scope: !5156)
!5164 = !DILocation(line: 264, column: 5, scope: !5157)
!5165 = !DILocation(line: 261, column: 28, scope: !5152)
!5166 = !DILocation(line: 261, column: 5, scope: !5152)
!5167 = distinct !{!5167, !5154, !5168}
!5168 = !DILocation(line: 264, column: 5, scope: !5149)
!5169 = !DILocation(line: 265, column: 28, scope: !5132)
!5170 = !DILocation(line: 265, column: 26, scope: !5132)
!5171 = !DILocation(line: 265, column: 5, scope: !5132)
!5172 = !DILocation(line: 265, column: 11, scope: !5132)
!5173 = !DILocation(line: 265, column: 22, scope: !5132)
!5174 = !DILocation(line: 266, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5132, file: !1, line: 266, column: 9)
!5176 = !DILocation(line: 266, column: 15, scope: !5175)
!5177 = !DILocation(line: 266, column: 26, scope: !5175)
!5178 = !DILocation(line: 266, column: 9, scope: !5132)
!5179 = !DILocation(line: 268, column: 6, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5175, file: !1, line: 266, column: 32)
!5181 = !DILocation(line: 268, column: 12, scope: !5180)
!5182 = !DILocation(line: 268, column: 23, scope: !5180)
!5183 = !DILocation(line: 269, column: 5, scope: !5180)
!5184 = !DILocation(line: 270, column: 4, scope: !5132)
!5185 = !DILocation(line: 271, column: 3, scope: !5127)
!5186 = !DILocation(line: 251, column: 39, scope: !5123)
!5187 = !DILocation(line: 251, column: 43, scope: !5123)
!5188 = !DILocation(line: 251, column: 46, scope: !5123)
!5189 = !DILocation(line: 251, column: 38, scope: !5123)
!5190 = !DILocation(line: 251, column: 3, scope: !5123)
!5191 = distinct !{!5191, !5124, !5192}
!5192 = !DILocation(line: 271, column: 3, scope: !5117)
!5193 = !DILocation(line: 272, column: 16, scope: !4971)
!5194 = !DILocation(line: 272, column: 3, scope: !4971)
!5195 = !DILocation(line: 273, column: 3, scope: !4971)
!5196 = !DILocation(line: 276, column: 11, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 276, column: 3)
!5198 = !DILocation(line: 276, column: 18, scope: !5197)
!5199 = !DILocation(line: 276, column: 25, scope: !5197)
!5200 = !DILocation(line: 276, column: 10, scope: !5197)
!5201 = !DILocation(line: 276, column: 8, scope: !5197)
!5202 = !DILocation(line: 276, column: 32, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 276, column: 3)
!5204 = !DILocation(line: 276, column: 3, scope: !5197)
!5205 = !DILocation(line: 277, column: 8, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !1, line: 277, column: 8)
!5207 = distinct !DILexicalBlock(scope: !5203, file: !1, line: 276, column: 52)
!5208 = !DILocation(line: 277, column: 12, scope: !5206)
!5209 = !DILocation(line: 277, column: 20, scope: !5206)
!5210 = !DILocation(line: 277, column: 8, scope: !5207)
!5211 = !DILocation(line: 278, column: 5, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 277, column: 35)
!5213 = !DILocation(line: 278, column: 9, scope: !5212)
!5214 = !DILocation(line: 278, column: 17, scope: !5212)
!5215 = !DILocation(line: 279, column: 5, scope: !5212)
!5216 = !DILocation(line: 279, column: 9, scope: !5212)
!5217 = !DILocation(line: 279, column: 15, scope: !5212)
!5218 = !DILocation(line: 280, column: 4, scope: !5212)
!5219 = !DILocation(line: 281, column: 3, scope: !5207)
!5220 = !DILocation(line: 276, column: 39, scope: !5203)
!5221 = !DILocation(line: 276, column: 43, scope: !5203)
!5222 = !DILocation(line: 276, column: 46, scope: !5203)
!5223 = !DILocation(line: 276, column: 38, scope: !5203)
!5224 = !DILocation(line: 276, column: 3, scope: !5203)
!5225 = distinct !{!5225, !5204, !5226}
!5226 = !DILocation(line: 281, column: 3, scope: !5197)
!5227 = !DILocation(line: 282, column: 3, scope: !4971)
!5228 = !DILocation(line: 285, column: 11, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 285, column: 3)
!5230 = !DILocation(line: 285, column: 18, scope: !5229)
!5231 = !DILocation(line: 285, column: 25, scope: !5229)
!5232 = !DILocation(line: 285, column: 10, scope: !5229)
!5233 = !DILocation(line: 285, column: 8, scope: !5229)
!5234 = !DILocation(line: 285, column: 32, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 285, column: 3)
!5236 = !DILocation(line: 285, column: 3, scope: !5229)
!5237 = !DILocation(line: 286, column: 8, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !1, line: 286, column: 8)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !1, line: 285, column: 52)
!5240 = !DILocation(line: 286, column: 12, scope: !5238)
!5241 = !DILocation(line: 286, column: 20, scope: !5238)
!5242 = !DILocation(line: 286, column: 8, scope: !5239)
!5243 = !DILocation(line: 287, column: 5, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5238, file: !1, line: 286, column: 36)
!5245 = !DILocation(line: 287, column: 9, scope: !5244)
!5246 = !DILocation(line: 287, column: 17, scope: !5244)
!5247 = !DILocation(line: 288, column: 17, scope: !5244)
!5248 = !DILocation(line: 288, column: 21, scope: !5244)
!5249 = !DILocation(line: 288, column: 5, scope: !5244)
!5250 = !DILocation(line: 288, column: 9, scope: !5244)
!5251 = !DILocation(line: 288, column: 15, scope: !5244)
!5252 = !DILocation(line: 289, column: 10, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5244, file: !1, line: 289, column: 9)
!5254 = !DILocation(line: 289, column: 14, scope: !5253)
!5255 = !DILocation(line: 289, column: 9, scope: !5244)
!5256 = !DILocation(line: 290, column: 6, scope: !5253)
!5257 = !DILocation(line: 290, column: 10, scope: !5253)
!5258 = !DILocation(line: 290, column: 16, scope: !5253)
!5259 = !DILocation(line: 291, column: 4, scope: !5244)
!5260 = !DILocation(line: 292, column: 3, scope: !5239)
!5261 = !DILocation(line: 285, column: 39, scope: !5235)
!5262 = !DILocation(line: 285, column: 43, scope: !5235)
!5263 = !DILocation(line: 285, column: 46, scope: !5235)
!5264 = !DILocation(line: 285, column: 38, scope: !5235)
!5265 = !DILocation(line: 285, column: 3, scope: !5235)
!5266 = distinct !{!5266, !5236, !5267}
!5267 = !DILocation(line: 292, column: 3, scope: !5229)
!5268 = !DILocation(line: 293, column: 3, scope: !4971)
!5269 = !DILocation(line: 296, column: 11, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 296, column: 3)
!5271 = !DILocation(line: 296, column: 18, scope: !5270)
!5272 = !DILocation(line: 296, column: 25, scope: !5270)
!5273 = !DILocation(line: 296, column: 10, scope: !5270)
!5274 = !DILocation(line: 296, column: 8, scope: !5270)
!5275 = !DILocation(line: 296, column: 32, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5270, file: !1, line: 296, column: 3)
!5277 = !DILocation(line: 296, column: 3, scope: !5270)
!5278 = !DILocation(line: 297, column: 10, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5276, file: !1, line: 296, column: 52)
!5280 = !DILocation(line: 297, column: 14, scope: !5279)
!5281 = !DILocation(line: 297, column: 26, scope: !5279)
!5282 = !DILocation(line: 297, column: 8, scope: !5279)
!5283 = !DILocation(line: 298, column: 4, scope: !5279)
!5284 = !DILocation(line: 298, column: 11, scope: !5279)
!5285 = !DILocation(line: 299, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 299, column: 9)
!5287 = distinct !DILexicalBlock(scope: !5279, file: !1, line: 298, column: 17)
!5288 = !DILocation(line: 299, column: 15, scope: !5286)
!5289 = !DILocation(line: 299, column: 23, scope: !5286)
!5290 = !DILocation(line: 299, column: 29, scope: !5286)
!5291 = !DILocation(line: 299, column: 20, scope: !5286)
!5292 = !DILocation(line: 299, column: 9, scope: !5287)
!5293 = !DILocation(line: 300, column: 22, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5286, file: !1, line: 299, column: 36)
!5295 = !DILocation(line: 300, column: 6, scope: !5294)
!5296 = !DILocation(line: 301, column: 19, scope: !5294)
!5297 = !DILocation(line: 301, column: 25, scope: !5294)
!5298 = !DILocation(line: 301, column: 6, scope: !5294)
!5299 = !DILocation(line: 301, column: 12, scope: !5294)
!5300 = !DILocation(line: 301, column: 17, scope: !5294)
!5301 = !DILocation(line: 302, column: 6, scope: !5294)
!5302 = !DILocation(line: 304, column: 11, scope: !5287)
!5303 = !DILocation(line: 304, column: 17, scope: !5287)
!5304 = !DILocation(line: 304, column: 9, scope: !5287)
!5305 = distinct !{!5305, !5283, !5306}
!5306 = !DILocation(line: 305, column: 4, scope: !5279)
!5307 = !DILocation(line: 306, column: 3, scope: !5279)
!5308 = !DILocation(line: 296, column: 39, scope: !5276)
!5309 = !DILocation(line: 296, column: 43, scope: !5276)
!5310 = !DILocation(line: 296, column: 46, scope: !5276)
!5311 = !DILocation(line: 296, column: 38, scope: !5276)
!5312 = !DILocation(line: 296, column: 3, scope: !5276)
!5313 = distinct !{!5313, !5277, !5314}
!5314 = !DILocation(line: 306, column: 3, scope: !5270)
!5315 = !DILocation(line: 307, column: 3, scope: !4971)
!5316 = !DILocation(line: 311, column: 11, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 311, column: 3)
!5318 = !DILocation(line: 311, column: 18, scope: !5317)
!5319 = !DILocation(line: 311, column: 25, scope: !5317)
!5320 = !DILocation(line: 311, column: 10, scope: !5317)
!5321 = !DILocation(line: 311, column: 8, scope: !5317)
!5322 = !DILocation(line: 311, column: 32, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !1, line: 311, column: 3)
!5324 = !DILocation(line: 311, column: 3, scope: !5317)
!5325 = !DILocation(line: 312, column: 10, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5323, file: !1, line: 311, column: 52)
!5327 = !DILocation(line: 312, column: 14, scope: !5326)
!5328 = !DILocation(line: 312, column: 26, scope: !5326)
!5329 = !DILocation(line: 312, column: 8, scope: !5326)
!5330 = !DILocation(line: 313, column: 4, scope: !5326)
!5331 = !DILocation(line: 313, column: 11, scope: !5326)
!5332 = !DILocation(line: 314, column: 9, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !1, line: 314, column: 9)
!5334 = distinct !DILexicalBlock(scope: !5326, file: !1, line: 313, column: 17)
!5335 = !DILocation(line: 314, column: 15, scope: !5333)
!5336 = !DILocation(line: 314, column: 20, scope: !5333)
!5337 = !DILocation(line: 314, column: 9, scope: !5334)
!5338 = !DILocation(line: 315, column: 20, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5333, file: !1, line: 314, column: 32)
!5340 = !DILocation(line: 315, column: 24, scope: !5339)
!5341 = !DILocation(line: 315, column: 38, scope: !5339)
!5342 = !DILocation(line: 315, column: 6, scope: !5339)
!5343 = !DILocation(line: 316, column: 24, scope: !5339)
!5344 = !DILocation(line: 316, column: 6, scope: !5339)
!5345 = !DILocation(line: 317, column: 22, scope: !5339)
!5346 = !DILocation(line: 317, column: 6, scope: !5339)
!5347 = !DILocation(line: 318, column: 6, scope: !5339)
!5348 = !DILocation(line: 320, column: 11, scope: !5334)
!5349 = !DILocation(line: 320, column: 17, scope: !5334)
!5350 = !DILocation(line: 320, column: 9, scope: !5334)
!5351 = distinct !{!5351, !5330, !5352}
!5352 = !DILocation(line: 321, column: 4, scope: !5326)
!5353 = !DILocation(line: 322, column: 3, scope: !5326)
!5354 = !DILocation(line: 311, column: 39, scope: !5323)
!5355 = !DILocation(line: 311, column: 43, scope: !5323)
!5356 = !DILocation(line: 311, column: 46, scope: !5323)
!5357 = !DILocation(line: 311, column: 38, scope: !5323)
!5358 = !DILocation(line: 311, column: 3, scope: !5323)
!5359 = distinct !{!5359, !5324, !5360}
!5360 = !DILocation(line: 322, column: 3, scope: !5317)
!5361 = !DILocation(line: 323, column: 16, scope: !4971)
!5362 = !DILocation(line: 323, column: 3, scope: !4971)
!5363 = !DILocation(line: 324, column: 3, scope: !4971)
!5364 = !DILocation(line: 327, column: 11, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 327, column: 3)
!5366 = !DILocation(line: 327, column: 18, scope: !5365)
!5367 = !DILocation(line: 327, column: 25, scope: !5365)
!5368 = !DILocation(line: 327, column: 10, scope: !5365)
!5369 = !DILocation(line: 327, column: 8, scope: !5365)
!5370 = !DILocation(line: 327, column: 32, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5365, file: !1, line: 327, column: 3)
!5372 = !DILocation(line: 327, column: 3, scope: !5365)
!5373 = !DILocation(line: 328, column: 8, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !1, line: 328, column: 8)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !1, line: 327, column: 52)
!5376 = !DILocation(line: 328, column: 12, scope: !5374)
!5377 = !DILocation(line: 328, column: 20, scope: !5374)
!5378 = !DILocation(line: 328, column: 8, scope: !5375)
!5379 = !DILocation(line: 329, column: 5, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5374, file: !1, line: 328, column: 33)
!5381 = !DILocation(line: 329, column: 9, scope: !5380)
!5382 = !DILocation(line: 329, column: 17, scope: !5380)
!5383 = !DILocation(line: 330, column: 10, scope: !5380)
!5384 = !DILocation(line: 330, column: 8, scope: !5380)
!5385 = !DILocation(line: 331, column: 28, scope: !5380)
!5386 = !DILocation(line: 331, column: 31, scope: !5380)
!5387 = !DILocation(line: 331, column: 36, scope: !5380)
!5388 = !DILocation(line: 331, column: 5, scope: !5380)
!5389 = !DILocation(line: 332, column: 19, scope: !5380)
!5390 = !DILocation(line: 332, column: 23, scope: !5380)
!5391 = !DILocation(line: 332, column: 35, scope: !5380)
!5392 = !DILocation(line: 332, column: 5, scope: !5380)
!5393 = !DILocation(line: 333, column: 5, scope: !5380)
!5394 = !DILocation(line: 333, column: 9, scope: !5380)
!5395 = !DILocation(line: 333, column: 17, scope: !5380)
!5396 = !DILocation(line: 334, column: 4, scope: !5380)
!5397 = !DILocation(line: 335, column: 3, scope: !5375)
!5398 = !DILocation(line: 327, column: 39, scope: !5371)
!5399 = !DILocation(line: 327, column: 43, scope: !5371)
!5400 = !DILocation(line: 327, column: 46, scope: !5371)
!5401 = !DILocation(line: 327, column: 38, scope: !5371)
!5402 = !DILocation(line: 327, column: 3, scope: !5371)
!5403 = distinct !{!5403, !5372, !5404}
!5404 = !DILocation(line: 335, column: 3, scope: !5365)
!5405 = !DILocation(line: 336, column: 16, scope: !4971)
!5406 = !DILocation(line: 336, column: 3, scope: !4971)
!5407 = !DILocation(line: 337, column: 3, scope: !4971)
!5408 = !DILocation(line: 340, column: 11, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 340, column: 3)
!5410 = !DILocation(line: 340, column: 18, scope: !5409)
!5411 = !DILocation(line: 340, column: 25, scope: !5409)
!5412 = !DILocation(line: 340, column: 10, scope: !5409)
!5413 = !DILocation(line: 340, column: 8, scope: !5409)
!5414 = !DILocation(line: 340, column: 32, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !1, line: 340, column: 3)
!5416 = !DILocation(line: 340, column: 3, scope: !5409)
!5417 = !DILocation(line: 341, column: 9, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !1, line: 340, column: 52)
!5419 = !DILocation(line: 341, column: 13, scope: !5418)
!5420 = !DILocation(line: 341, column: 23, scope: !5418)
!5421 = !DILocation(line: 341, column: 7, scope: !5418)
!5422 = !DILocation(line: 342, column: 4, scope: !5418)
!5423 = !DILocation(line: 342, column: 11, scope: !5418)
!5424 = !DILocation(line: 343, column: 9, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 343, column: 9)
!5426 = distinct !DILexicalBlock(scope: !5418, file: !1, line: 342, column: 16)
!5427 = !DILocation(line: 343, column: 14, scope: !5425)
!5428 = !DILocation(line: 343, column: 22, scope: !5425)
!5429 = !DILocation(line: 343, column: 27, scope: !5425)
!5430 = !DILocation(line: 343, column: 19, scope: !5425)
!5431 = !DILocation(line: 343, column: 9, scope: !5426)
!5432 = !DILocation(line: 344, column: 20, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5425, file: !1, line: 343, column: 34)
!5434 = !DILocation(line: 344, column: 6, scope: !5433)
!5435 = !DILocation(line: 345, column: 18, scope: !5433)
!5436 = !DILocation(line: 345, column: 23, scope: !5433)
!5437 = !DILocation(line: 345, column: 6, scope: !5433)
!5438 = !DILocation(line: 345, column: 11, scope: !5433)
!5439 = !DILocation(line: 345, column: 16, scope: !5433)
!5440 = !DILocation(line: 346, column: 6, scope: !5433)
!5441 = !DILocation(line: 348, column: 10, scope: !5426)
!5442 = !DILocation(line: 348, column: 15, scope: !5426)
!5443 = !DILocation(line: 348, column: 8, scope: !5426)
!5444 = distinct !{!5444, !5422, !5445}
!5445 = !DILocation(line: 349, column: 4, scope: !5418)
!5446 = !DILocation(line: 350, column: 3, scope: !5418)
!5447 = !DILocation(line: 340, column: 39, scope: !5415)
!5448 = !DILocation(line: 340, column: 43, scope: !5415)
!5449 = !DILocation(line: 340, column: 46, scope: !5415)
!5450 = !DILocation(line: 340, column: 38, scope: !5415)
!5451 = !DILocation(line: 340, column: 3, scope: !5415)
!5452 = distinct !{!5452, !5416, !5453}
!5453 = !DILocation(line: 350, column: 3, scope: !5409)
!5454 = !DILocation(line: 351, column: 3, scope: !4971)
!5455 = !DILocation(line: 354, column: 11, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 354, column: 3)
!5457 = !DILocation(line: 354, column: 18, scope: !5456)
!5458 = !DILocation(line: 354, column: 25, scope: !5456)
!5459 = !DILocation(line: 354, column: 10, scope: !5456)
!5460 = !DILocation(line: 354, column: 8, scope: !5456)
!5461 = !DILocation(line: 354, column: 32, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5456, file: !1, line: 354, column: 3)
!5463 = !DILocation(line: 354, column: 3, scope: !5456)
!5464 = !DILocation(line: 355, column: 9, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5462, file: !1, line: 354, column: 52)
!5466 = !DILocation(line: 355, column: 13, scope: !5465)
!5467 = !DILocation(line: 355, column: 23, scope: !5465)
!5468 = !DILocation(line: 355, column: 7, scope: !5465)
!5469 = !DILocation(line: 356, column: 4, scope: !5465)
!5470 = !DILocation(line: 356, column: 11, scope: !5465)
!5471 = !DILocation(line: 357, column: 9, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !1, line: 357, column: 9)
!5473 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 356, column: 16)
!5474 = !DILocation(line: 357, column: 14, scope: !5472)
!5475 = !DILocation(line: 357, column: 19, scope: !5472)
!5476 = !DILocation(line: 357, column: 9, scope: !5473)
!5477 = !DILocation(line: 358, column: 20, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 357, column: 30)
!5479 = !DILocation(line: 358, column: 24, scope: !5478)
!5480 = !DILocation(line: 358, column: 36, scope: !5478)
!5481 = !DILocation(line: 358, column: 6, scope: !5478)
!5482 = !DILocation(line: 359, column: 22, scope: !5478)
!5483 = !DILocation(line: 359, column: 6, scope: !5478)
!5484 = !DILocation(line: 360, column: 20, scope: !5478)
!5485 = !DILocation(line: 360, column: 6, scope: !5478)
!5486 = !DILocation(line: 361, column: 6, scope: !5478)
!5487 = !DILocation(line: 363, column: 10, scope: !5473)
!5488 = !DILocation(line: 363, column: 15, scope: !5473)
!5489 = !DILocation(line: 363, column: 8, scope: !5473)
!5490 = distinct !{!5490, !5469, !5491}
!5491 = !DILocation(line: 364, column: 4, scope: !5465)
!5492 = !DILocation(line: 365, column: 3, scope: !5465)
!5493 = !DILocation(line: 354, column: 39, scope: !5462)
!5494 = !DILocation(line: 354, column: 43, scope: !5462)
!5495 = !DILocation(line: 354, column: 46, scope: !5462)
!5496 = !DILocation(line: 354, column: 38, scope: !5462)
!5497 = !DILocation(line: 354, column: 3, scope: !5462)
!5498 = distinct !{!5498, !5463, !5499}
!5499 = !DILocation(line: 365, column: 3, scope: !5456)
!5500 = !DILocation(line: 366, column: 16, scope: !4971)
!5501 = !DILocation(line: 366, column: 3, scope: !4971)
!5502 = !DILocation(line: 367, column: 3, scope: !4971)
!5503 = !DILocation(line: 371, column: 8, scope: !4971)
!5504 = !DILocation(line: 372, column: 11, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 372, column: 3)
!5506 = !DILocation(line: 372, column: 18, scope: !5505)
!5507 = !DILocation(line: 372, column: 25, scope: !5505)
!5508 = !DILocation(line: 372, column: 10, scope: !5505)
!5509 = !DILocation(line: 372, column: 8, scope: !5505)
!5510 = !DILocation(line: 372, column: 32, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5505, file: !1, line: 372, column: 3)
!5512 = !DILocation(line: 372, column: 3, scope: !5505)
!5513 = !DILocation(line: 373, column: 9, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 372, column: 52)
!5515 = !DILocation(line: 373, column: 13, scope: !5514)
!5516 = !DILocation(line: 373, column: 23, scope: !5514)
!5517 = !DILocation(line: 373, column: 7, scope: !5514)
!5518 = !DILocation(line: 374, column: 4, scope: !5514)
!5519 = !DILocation(line: 374, column: 11, scope: !5514)
!5520 = !DILocation(line: 375, column: 9, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 375, column: 9)
!5522 = distinct !DILexicalBlock(scope: !5514, file: !1, line: 374, column: 16)
!5523 = !DILocation(line: 375, column: 14, scope: !5521)
!5524 = !DILocation(line: 375, column: 18, scope: !5521)
!5525 = !DILocation(line: 375, column: 9, scope: !5522)
!5526 = !DILocalVariable(name: "sa", scope: !5527, file: !1, line: 376, type: !5528)
!5527 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 375, column: 31)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSoundActuator", file: !1345, line: 87, baseType: !5530)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSoundActuator", file: !1345, line: 78, size: 576, elements: !5531)
!5531 = !{!5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5551, !5552, !5553, !5554}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5530, file: !1345, line: 79, baseType: !1083, size: 16)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "sndnr", scope: !5530, file: !1345, line: 79, baseType: !1083, size: 16, offset: 16)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5530, file: !1345, line: 80, baseType: !1085, size: 32, offset: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5530, file: !1345, line: 80, baseType: !1085, size: 32, offset: 64)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5530, file: !1345, line: 81, baseType: !1823, size: 32, offset: 96)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !5530, file: !1345, line: 82, baseType: !1149, size: 32, offset: 128)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !5530, file: !1345, line: 82, baseType: !1149, size: 32, offset: 160)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !5530, file: !1345, line: 83, baseType: !1900, size: 64, offset: 192)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "sound3D", scope: !5530, file: !1345, line: 84, baseType: !5541, size: 256, offset: 256)
!5541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sound3D", file: !1345, line: 67, size: 256, elements: !5542)
!5542 = !{!5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "min_gain", scope: !5541, file: !1345, line: 68, baseType: !1149, size: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "max_gain", scope: !5541, file: !1345, line: 69, baseType: !1149, size: 32, offset: 32)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "reference_distance", scope: !5541, file: !1345, line: 70, baseType: !1149, size: 32, offset: 64)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "max_distance", scope: !5541, file: !1345, line: 71, baseType: !1149, size: 32, offset: 96)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff_factor", scope: !5541, file: !1345, line: 72, baseType: !1149, size: 32, offset: 128)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "cone_inner_angle", scope: !5541, file: !1345, line: 73, baseType: !1149, size: 32, offset: 160)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "cone_outer_angle", scope: !5541, file: !1345, line: 74, baseType: !1149, size: 32, offset: 192)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "cone_outer_gain", scope: !5541, file: !1345, line: 75, baseType: !1149, size: 32, offset: 224)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5530, file: !1345, line: 85, baseType: !1083, size: 16, offset: 512)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !5530, file: !1345, line: 85, baseType: !1083, size: 16, offset: 528)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !5530, file: !1345, line: 86, baseType: !1083, size: 16, offset: 544)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !5530, file: !1345, line: 86, baseType: !5555, size: 16, offset: 560)
!5555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 16, elements: !1425)
!5556 = !DILocation(line: 376, column: 22, scope: !5527)
!5557 = !DILocation(line: 376, column: 26, scope: !5527)
!5558 = !DILocation(line: 376, column: 31, scope: !5527)
!5559 = !DILocation(line: 377, column: 10, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5527, file: !1, line: 377, column: 10)
!5561 = !DILocation(line: 377, column: 14, scope: !5560)
!5562 = !DILocation(line: 377, column: 10, scope: !5527)
!5563 = !DILocalVariable(name: "sound", scope: !5564, file: !1, line: 378, type: !1064)
!5564 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 377, column: 21)
!5565 = !DILocation(line: 378, column: 11, scope: !5564)
!5566 = !DILocation(line: 378, column: 18, scope: !5564)
!5567 = !DILocation(line: 378, column: 25, scope: !5564)
!5568 = !DILocation(line: 378, column: 31, scope: !5564)
!5569 = !DILocalVariable(name: "nr", scope: !5564, file: !1, line: 379, type: !1085)
!5570 = !DILocation(line: 379, column: 11, scope: !5564)
!5571 = !DILocation(line: 381, column: 11, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 381, column: 11)
!5573 = !DILocation(line: 381, column: 15, scope: !5572)
!5574 = !DILocation(line: 381, column: 21, scope: !5572)
!5575 = !DILocation(line: 381, column: 11, scope: !5564)
!5576 = !DILocation(line: 384, column: 8, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5572, file: !1, line: 381, column: 28)
!5578 = !DILocation(line: 387, column: 7, scope: !5564)
!5579 = !DILocation(line: 387, column: 14, scope: !5564)
!5580 = !DILocation(line: 388, column: 12, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !1, line: 388, column: 12)
!5582 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 387, column: 21)
!5583 = !DILocation(line: 388, column: 16, scope: !5581)
!5584 = !DILocation(line: 388, column: 20, scope: !5581)
!5585 = !DILocation(line: 388, column: 14, scope: !5581)
!5586 = !DILocation(line: 388, column: 12, scope: !5582)
!5587 = !DILocation(line: 389, column: 9, scope: !5581)
!5588 = !DILocation(line: 390, column: 10, scope: !5582)
!5589 = !DILocation(line: 391, column: 15, scope: !5582)
!5590 = !DILocation(line: 391, column: 22, scope: !5582)
!5591 = !DILocation(line: 391, column: 13, scope: !5582)
!5592 = distinct !{!5592, !5578, !5593}
!5593 = !DILocation(line: 392, column: 7, scope: !5564)
!5594 = !DILocation(line: 394, column: 11, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 394, column: 11)
!5596 = !DILocation(line: 394, column: 15, scope: !5595)
!5597 = !DILocation(line: 394, column: 11, scope: !5564)
!5598 = !DILocation(line: 395, column: 15, scope: !5595)
!5599 = !DILocation(line: 395, column: 19, scope: !5595)
!5600 = !DILocation(line: 395, column: 27, scope: !5595)
!5601 = !DILocation(line: 395, column: 29, scope: !5595)
!5602 = !DILocation(line: 395, column: 8, scope: !5595)
!5603 = !DILocation(line: 397, column: 35, scope: !5564)
!5604 = !DILocation(line: 397, column: 18, scope: !5564)
!5605 = !DILocation(line: 397, column: 7, scope: !5564)
!5606 = !DILocation(line: 397, column: 11, scope: !5564)
!5607 = !DILocation(line: 397, column: 16, scope: !5564)
!5608 = !DILocation(line: 399, column: 11, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 399, column: 11)
!5610 = !DILocation(line: 399, column: 11, scope: !5564)
!5611 = !DILocation(line: 400, column: 8, scope: !5609)
!5612 = !DILocation(line: 400, column: 15, scope: !5609)
!5613 = !DILocation(line: 400, column: 17, scope: !5609)
!5614 = !DILocation(line: 402, column: 7, scope: !5564)
!5615 = !DILocation(line: 402, column: 11, scope: !5564)
!5616 = !DILocation(line: 402, column: 16, scope: !5564)
!5617 = !DILocation(line: 403, column: 12, scope: !5564)
!5618 = !DILocation(line: 404, column: 6, scope: !5564)
!5619 = !DILocation(line: 405, column: 5, scope: !5527)
!5620 = !DILocation(line: 406, column: 10, scope: !5522)
!5621 = !DILocation(line: 406, column: 15, scope: !5522)
!5622 = !DILocation(line: 406, column: 8, scope: !5522)
!5623 = distinct !{!5623, !5518, !5624}
!5624 = !DILocation(line: 407, column: 4, scope: !5514)
!5625 = !DILocation(line: 408, column: 8, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5514, file: !1, line: 408, column: 8)
!5627 = !DILocation(line: 408, column: 8, scope: !5514)
!5628 = !DILocation(line: 409, column: 5, scope: !5626)
!5629 = !DILocation(line: 410, column: 3, scope: !5514)
!5630 = !DILocation(line: 372, column: 39, scope: !5511)
!5631 = !DILocation(line: 372, column: 43, scope: !5511)
!5632 = !DILocation(line: 372, column: 46, scope: !5511)
!5633 = !DILocation(line: 372, column: 38, scope: !5511)
!5634 = !DILocation(line: 372, column: 3, scope: !5511)
!5635 = distinct !{!5635, !5512, !5636}
!5636 = !DILocation(line: 410, column: 3, scope: !5505)
!5637 = !DILocation(line: 412, column: 3, scope: !4971)
!5638 = !DILocation(line: 414, column: 1, scope: !4935)
!5639 = distinct !DISubprogram(name: "controller_menu", scope: !1, file: !1, line: 808, type: !5640, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!3669, !2686, !3530, !1054}
!5642 = !DILocalVariable(name: "C", arg: 1, scope: !5639, file: !1, line: 808, type: !2686)
!5643 = !DILocation(line: 808, column: 43, scope: !5639)
!5644 = !DILocalVariable(name: "ar", arg: 2, scope: !5639, file: !1, line: 808, type: !3530)
!5645 = !DILocation(line: 808, column: 55, scope: !5639)
!5646 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !5639, file: !1, line: 808, type: !1054)
!5647 = !DILocation(line: 808, column: 65, scope: !5639)
!5648 = !DILocalVariable(name: "block", scope: !5639, file: !1, line: 810, type: !3669)
!5649 = !DILocation(line: 810, column: 11, scope: !5639)
!5650 = !DILocalVariable(name: "yco", scope: !5639, file: !1, line: 811, type: !1085)
!5651 = !DILocation(line: 811, column: 6, scope: !5639)
!5652 = !DILocation(line: 813, column: 22, scope: !5639)
!5653 = !DILocation(line: 813, column: 25, scope: !5639)
!5654 = !DILocation(line: 813, column: 9, scope: !5639)
!5655 = !DILocation(line: 813, column: 7, scope: !5639)
!5656 = !DILocation(line: 814, column: 21, scope: !5639)
!5657 = !DILocation(line: 814, column: 2, scope: !5639)
!5658 = !DILocation(line: 816, column: 11, scope: !5639)
!5659 = !DILocation(line: 816, column: 65, scope: !5639)
!5660 = !DILocation(line: 816, column: 54, scope: !5639)
!5661 = !DILocation(line: 816, column: 2, scope: !5639)
!5662 = !DILocation(line: 817, column: 11, scope: !5639)
!5663 = !DILocation(line: 817, column: 65, scope: !5639)
!5664 = !DILocation(line: 817, column: 54, scope: !5639)
!5665 = !DILocation(line: 817, column: 2, scope: !5639)
!5666 = !DILocation(line: 818, column: 11, scope: !5639)
!5667 = !DILocation(line: 818, column: 53, scope: !5639)
!5668 = !DILocation(line: 818, column: 42, scope: !5639)
!5669 = !DILocation(line: 818, column: 2, scope: !5639)
!5670 = !DILocation(line: 819, column: 11, scope: !5639)
!5671 = !DILocation(line: 819, column: 69, scope: !5639)
!5672 = !DILocation(line: 819, column: 58, scope: !5639)
!5673 = !DILocation(line: 819, column: 2, scope: !5639)
!5674 = !DILocation(line: 820, column: 11, scope: !5639)
!5675 = !DILocation(line: 820, column: 69, scope: !5639)
!5676 = !DILocation(line: 820, column: 58, scope: !5639)
!5677 = !DILocation(line: 820, column: 2, scope: !5639)
!5678 = !DILocation(line: 822, column: 22, scope: !5639)
!5679 = !DILocation(line: 822, column: 2, scope: !5639)
!5680 = !DILocation(line: 823, column: 13, scope: !5639)
!5681 = !DILocation(line: 823, column: 16, scope: !5639)
!5682 = !DILocation(line: 823, column: 2, scope: !5639)
!5683 = !DILocation(line: 825, column: 9, scope: !5639)
!5684 = !DILocation(line: 825, column: 2, scope: !5639)
!5685 = distinct !DISubprogram(name: "draw_controller_header", scope: !1, file: !1, line: 1312, type: !5686, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{null, !3660, !5688, !1085, !1085, !1085}
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!5689 = !DILocalVariable(name: "layout", arg: 1, scope: !5685, file: !1, line: 1312, type: !3660)
!5690 = !DILocation(line: 1312, column: 46, scope: !5685)
!5691 = !DILocalVariable(name: "ptr", arg: 2, scope: !5685, file: !1, line: 1312, type: !5688)
!5692 = !DILocation(line: 1312, column: 66, scope: !5685)
!5693 = !DILocalVariable(name: "xco", arg: 3, scope: !5685, file: !1, line: 1312, type: !1085)
!5694 = !DILocation(line: 1312, column: 75, scope: !5685)
!5695 = !DILocalVariable(name: "width", arg: 4, scope: !5685, file: !1, line: 1312, type: !1085)
!5696 = !DILocation(line: 1312, column: 84, scope: !5685)
!5697 = !DILocalVariable(name: "yco", arg: 5, scope: !5685, file: !1, line: 1312, type: !1085)
!5698 = !DILocation(line: 1312, column: 95, scope: !5685)
!5699 = !DILocalVariable(name: "box", scope: !5685, file: !1, line: 1314, type: !3660)
!5700 = !DILocation(line: 1314, column: 12, scope: !5685)
!5701 = !DILocalVariable(name: "row", scope: !5685, file: !1, line: 1314, type: !3660)
!5702 = !DILocation(line: 1314, column: 18, scope: !5685)
!5703 = !DILocalVariable(name: "sub", scope: !5685, file: !1, line: 1314, type: !3660)
!5704 = !DILocation(line: 1314, column: 24, scope: !5685)
!5705 = !DILocalVariable(name: "cont", scope: !5685, file: !1, line: 1315, type: !2583)
!5706 = !DILocation(line: 1315, column: 15, scope: !5685)
!5707 = !DILocation(line: 1315, column: 36, scope: !5685)
!5708 = !DILocation(line: 1315, column: 41, scope: !5685)
!5709 = !DILocation(line: 1315, column: 21, scope: !5685)
!5710 = !DILocalVariable(name: "state", scope: !5685, file: !1, line: 1317, type: !1915)
!5711 = !DILocation(line: 1317, column: 7, scope: !5685)
!5712 = !DILocation(line: 1318, column: 15, scope: !5685)
!5713 = !DILocation(line: 1318, column: 55, scope: !5685)
!5714 = !DILocation(line: 1318, column: 43, scope: !5685)
!5715 = !DILocation(line: 1318, column: 2, scope: !5685)
!5716 = !DILocation(line: 1320, column: 20, scope: !5685)
!5717 = !DILocation(line: 1320, column: 8, scope: !5685)
!5718 = !DILocation(line: 1320, column: 6, scope: !5685)
!5719 = !DILocation(line: 1321, column: 20, scope: !5685)
!5720 = !DILocation(line: 1321, column: 8, scope: !5685)
!5721 = !DILocation(line: 1321, column: 6, scope: !5685)
!5722 = !DILocation(line: 1323, column: 20, scope: !5685)
!5723 = !DILocation(line: 1323, column: 8, scope: !5685)
!5724 = !DILocation(line: 1323, column: 6, scope: !5685)
!5725 = !DILocation(line: 1324, column: 20, scope: !5685)
!5726 = !DILocation(line: 1324, column: 41, scope: !5685)
!5727 = !DILocation(line: 1324, column: 25, scope: !5685)
!5728 = !DILocation(line: 1324, column: 2, scope: !5685)
!5729 = !DILocation(line: 1325, column: 10, scope: !5685)
!5730 = !DILocation(line: 1325, column: 15, scope: !5685)
!5731 = !DILocation(line: 1325, column: 2, scope: !5685)
!5732 = !DILocation(line: 1326, column: 22, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5685, file: !1, line: 1326, column: 6)
!5734 = !DILocation(line: 1326, column: 6, scope: !5733)
!5735 = !DILocation(line: 1326, column: 6, scope: !5685)
!5736 = !DILocation(line: 1327, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !1, line: 1326, column: 45)
!5738 = !DILocation(line: 1327, column: 16, scope: !5737)
!5739 = !DILocation(line: 1327, column: 3, scope: !5737)
!5740 = !DILocation(line: 1328, column: 11, scope: !5737)
!5741 = !DILocation(line: 1328, column: 16, scope: !5737)
!5742 = !DILocation(line: 1328, column: 3, scope: !5737)
!5743 = !DILocation(line: 1330, column: 34, scope: !5737)
!5744 = !DILocation(line: 1330, column: 17, scope: !5737)
!5745 = !DILocation(line: 1330, column: 71, scope: !5737)
!5746 = !DILocation(line: 1330, column: 77, scope: !5737)
!5747 = !DILocation(line: 1330, column: 92, scope: !5737)
!5748 = !DILocation(line: 1330, column: 96, scope: !5737)
!5749 = !DILocation(line: 1330, column: 95, scope: !5737)
!5750 = !DILocation(line: 1330, column: 101, scope: !5737)
!5751 = !DILocation(line: 1330, column: 84, scope: !5737)
!5752 = !DILocation(line: 1330, column: 107, scope: !5737)
!5753 = !DILocation(line: 1330, column: 119, scope: !5737)
!5754 = !DILocation(line: 1330, column: 3, scope: !5737)
!5755 = !DILocation(line: 1331, column: 2, scope: !5737)
!5756 = !DILocation(line: 1333, column: 11, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5733, file: !1, line: 1332, column: 7)
!5758 = !DILocation(line: 1333, column: 16, scope: !5757)
!5759 = !DILocation(line: 1333, column: 3, scope: !5757)
!5760 = !DILocation(line: 1334, column: 11, scope: !5757)
!5761 = !DILocation(line: 1334, column: 16, scope: !5757)
!5762 = !DILocation(line: 1334, column: 22, scope: !5757)
!5763 = !DILocation(line: 1334, column: 3, scope: !5757)
!5764 = !DILocation(line: 1335, column: 11, scope: !5757)
!5765 = !DILocation(line: 1335, column: 16, scope: !5757)
!5766 = !DILocation(line: 1335, column: 3, scope: !5757)
!5767 = !DILocation(line: 1338, column: 20, scope: !5685)
!5768 = !DILocation(line: 1338, column: 8, scope: !5685)
!5769 = !DILocation(line: 1338, column: 6, scope: !5685)
!5770 = !DILocation(line: 1339, column: 20, scope: !5685)
!5771 = !DILocation(line: 1339, column: 41, scope: !5685)
!5772 = !DILocation(line: 1339, column: 25, scope: !5685)
!5773 = !DILocation(line: 1339, column: 2, scope: !5685)
!5774 = !DILocation(line: 1340, column: 10, scope: !5685)
!5775 = !DILocation(line: 1340, column: 15, scope: !5685)
!5776 = !DILocation(line: 1340, column: 2, scope: !5685)
!5777 = !DILocation(line: 1342, column: 22, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5685, file: !1, line: 1342, column: 6)
!5779 = !DILocation(line: 1342, column: 6, scope: !5778)
!5780 = !DILocation(line: 1342, column: 43, scope: !5778)
!5781 = !DILocation(line: 1342, column: 6, scope: !5685)
!5782 = !DILocation(line: 1343, column: 21, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5778, file: !1, line: 1342, column: 48)
!5784 = !DILocation(line: 1343, column: 9, scope: !5783)
!5785 = !DILocation(line: 1343, column: 7, scope: !5783)
!5786 = !DILocation(line: 1344, column: 21, scope: !5783)
!5787 = !DILocation(line: 1344, column: 42, scope: !5783)
!5788 = !DILocation(line: 1344, column: 26, scope: !5783)
!5789 = !DILocation(line: 1344, column: 3, scope: !5783)
!5790 = !DILocation(line: 1345, column: 15, scope: !5783)
!5791 = !DILocation(line: 1345, column: 3, scope: !5783)
!5792 = !DILocation(line: 1346, column: 15, scope: !5783)
!5793 = !DILocation(line: 1346, column: 3, scope: !5783)
!5794 = !DILocation(line: 1347, column: 2, scope: !5783)
!5795 = !DILocation(line: 1349, column: 20, scope: !5685)
!5796 = !DILocation(line: 1349, column: 8, scope: !5685)
!5797 = !DILocation(line: 1349, column: 6, scope: !5685)
!5798 = !DILocation(line: 1350, column: 10, scope: !5685)
!5799 = !DILocation(line: 1350, column: 15, scope: !5685)
!5800 = !DILocation(line: 1350, column: 2, scope: !5685)
!5801 = !DILocation(line: 1352, column: 20, scope: !5685)
!5802 = !DILocation(line: 1352, column: 8, scope: !5685)
!5803 = !DILocation(line: 1352, column: 6, scope: !5685)
!5804 = !DILocation(line: 1353, column: 20, scope: !5685)
!5805 = !DILocation(line: 1353, column: 41, scope: !5685)
!5806 = !DILocation(line: 1353, column: 25, scope: !5685)
!5807 = !DILocation(line: 1353, column: 2, scope: !5685)
!5808 = !DILocation(line: 1354, column: 10, scope: !5685)
!5809 = !DILocation(line: 1354, column: 2, scope: !5685)
!5810 = !DILocation(line: 1355, column: 1, scope: !5685)
!5811 = distinct !DISubprogram(name: "draw_brick_controller", scope: !1, file: !1, line: 1383, type: !5812, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{null, !3660, !5688}
!5814 = !DILocalVariable(name: "layout", arg: 1, scope: !5811, file: !1, line: 1383, type: !3660)
!5815 = !DILocation(line: 1383, column: 45, scope: !5811)
!5816 = !DILocalVariable(name: "ptr", arg: 2, scope: !5811, file: !1, line: 1383, type: !5688)
!5817 = !DILocation(line: 1383, column: 65, scope: !5811)
!5818 = !DILocalVariable(name: "box", scope: !5811, file: !1, line: 1385, type: !3660)
!5819 = !DILocation(line: 1385, column: 12, scope: !5811)
!5820 = !DILocation(line: 1387, column: 23, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5811, file: !1, line: 1387, column: 6)
!5822 = !DILocation(line: 1387, column: 7, scope: !5821)
!5823 = !DILocation(line: 1387, column: 6, scope: !5811)
!5824 = !DILocation(line: 1388, column: 3, scope: !5821)
!5825 = !DILocation(line: 1390, column: 20, scope: !5811)
!5826 = !DILocation(line: 1390, column: 8, scope: !5811)
!5827 = !DILocation(line: 1390, column: 6, scope: !5811)
!5828 = !DILocation(line: 1391, column: 20, scope: !5811)
!5829 = !DILocation(line: 1391, column: 41, scope: !5811)
!5830 = !DILocation(line: 1391, column: 25, scope: !5811)
!5831 = !DILocation(line: 1391, column: 2, scope: !5811)
!5832 = !DILocation(line: 1393, column: 24, scope: !5811)
!5833 = !DILocation(line: 1393, column: 29, scope: !5811)
!5834 = !DILocation(line: 1393, column: 2, scope: !5811)
!5835 = !DILocation(line: 1395, column: 23, scope: !5811)
!5836 = !DILocation(line: 1395, column: 10, scope: !5811)
!5837 = !DILocation(line: 1395, column: 2, scope: !5811)
!5838 = !DILocation(line: 1397, column: 4, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5811, file: !1, line: 1395, column: 37)
!5840 = !DILocation(line: 1399, column: 4, scope: !5839)
!5841 = !DILocation(line: 1401, column: 31, scope: !5839)
!5842 = !DILocation(line: 1401, column: 36, scope: !5839)
!5843 = !DILocation(line: 1401, column: 4, scope: !5839)
!5844 = !DILocation(line: 1402, column: 4, scope: !5839)
!5845 = !DILocation(line: 1404, column: 27, scope: !5839)
!5846 = !DILocation(line: 1404, column: 32, scope: !5839)
!5847 = !DILocation(line: 1404, column: 4, scope: !5839)
!5848 = !DILocation(line: 1405, column: 4, scope: !5839)
!5849 = !DILocation(line: 1407, column: 4, scope: !5839)
!5850 = !DILocation(line: 1409, column: 4, scope: !5839)
!5851 = !DILocation(line: 1411, column: 4, scope: !5839)
!5852 = !DILocation(line: 1413, column: 4, scope: !5839)
!5853 = !DILocation(line: 1415, column: 1, scope: !5811)
!5854 = distinct !DISubprogram(name: "sensor_menu", scope: !1, file: !1, line: 759, type: !5640, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5855 = !DILocalVariable(name: "C", arg: 1, scope: !5854, file: !1, line: 759, type: !2686)
!5856 = !DILocation(line: 759, column: 39, scope: !5854)
!5857 = !DILocalVariable(name: "ar", arg: 2, scope: !5854, file: !1, line: 759, type: !3530)
!5858 = !DILocation(line: 759, column: 51, scope: !5854)
!5859 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !5854, file: !1, line: 759, type: !1054)
!5860 = !DILocation(line: 759, column: 61, scope: !5854)
!5861 = !DILocalVariable(name: "block", scope: !5854, file: !1, line: 761, type: !3669)
!5862 = !DILocation(line: 761, column: 11, scope: !5854)
!5863 = !DILocalVariable(name: "yco", scope: !5854, file: !1, line: 762, type: !1085)
!5864 = !DILocation(line: 762, column: 6, scope: !5854)
!5865 = !DILocation(line: 764, column: 22, scope: !5854)
!5866 = !DILocation(line: 764, column: 25, scope: !5854)
!5867 = !DILocation(line: 764, column: 9, scope: !5854)
!5868 = !DILocation(line: 764, column: 7, scope: !5854)
!5869 = !DILocation(line: 765, column: 21, scope: !5854)
!5870 = !DILocation(line: 765, column: 2, scope: !5854)
!5871 = !DILocation(line: 767, column: 11, scope: !5854)
!5872 = !DILocation(line: 767, column: 65, scope: !5854)
!5873 = !DILocation(line: 767, column: 54, scope: !5854)
!5874 = !DILocation(line: 767, column: 2, scope: !5854)
!5875 = !DILocation(line: 768, column: 11, scope: !5854)
!5876 = !DILocation(line: 768, column: 65, scope: !5854)
!5877 = !DILocation(line: 768, column: 54, scope: !5854)
!5878 = !DILocation(line: 768, column: 2, scope: !5854)
!5879 = !DILocation(line: 769, column: 11, scope: !5854)
!5880 = !DILocation(line: 769, column: 49, scope: !5854)
!5881 = !DILocation(line: 769, column: 38, scope: !5854)
!5882 = !DILocation(line: 769, column: 2, scope: !5854)
!5883 = !DILocation(line: 770, column: 11, scope: !5854)
!5884 = !DILocation(line: 770, column: 65, scope: !5854)
!5885 = !DILocation(line: 770, column: 54, scope: !5854)
!5886 = !DILocation(line: 770, column: 2, scope: !5854)
!5887 = !DILocation(line: 771, column: 11, scope: !5854)
!5888 = !DILocation(line: 771, column: 65, scope: !5854)
!5889 = !DILocation(line: 771, column: 54, scope: !5854)
!5890 = !DILocation(line: 771, column: 2, scope: !5854)
!5891 = !DILocation(line: 773, column: 22, scope: !5854)
!5892 = !DILocation(line: 773, column: 2, scope: !5854)
!5893 = !DILocation(line: 774, column: 13, scope: !5854)
!5894 = !DILocation(line: 774, column: 16, scope: !5854)
!5895 = !DILocation(line: 774, column: 2, scope: !5854)
!5896 = !DILocation(line: 776, column: 9, scope: !5854)
!5897 = !DILocation(line: 776, column: 2, scope: !5854)
!5898 = distinct !DISubprogram(name: "is_sensor_linked", scope: !1, file: !1, line: 919, type: !5899, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{!1946, !3669, !2648}
!5901 = !DILocalVariable(name: "block", arg: 1, scope: !5898, file: !1, line: 919, type: !3669)
!5902 = !DILocation(line: 919, column: 39, scope: !5898)
!5903 = !DILocalVariable(name: "sens", arg: 2, scope: !5898, file: !1, line: 919, type: !2648)
!5904 = !DILocation(line: 919, column: 55, scope: !5898)
!5905 = !DILocalVariable(name: "cont", scope: !5898, file: !1, line: 921, type: !2583)
!5906 = !DILocation(line: 921, column: 15, scope: !5898)
!5907 = !DILocalVariable(name: "i", scope: !5898, file: !1, line: 922, type: !1085)
!5908 = !DILocation(line: 922, column: 6, scope: !5898)
!5909 = !DILocation(line: 924, column: 8, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5898, file: !1, line: 924, column: 2)
!5911 = !DILocation(line: 924, column: 7, scope: !5910)
!5912 = !DILocation(line: 924, column: 12, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 924, column: 2)
!5914 = !DILocation(line: 924, column: 14, scope: !5913)
!5915 = !DILocation(line: 924, column: 20, scope: !5913)
!5916 = !DILocation(line: 924, column: 13, scope: !5913)
!5917 = !DILocation(line: 924, column: 2, scope: !5910)
!5918 = !DILocation(line: 925, column: 10, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5913, file: !1, line: 924, column: 35)
!5920 = !DILocation(line: 925, column: 16, scope: !5919)
!5921 = !DILocation(line: 925, column: 22, scope: !5919)
!5922 = !DILocation(line: 925, column: 8, scope: !5919)
!5923 = !DILocation(line: 926, column: 20, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !1, line: 926, column: 7)
!5925 = !DILocation(line: 926, column: 27, scope: !5924)
!5926 = !DILocation(line: 926, column: 7, scope: !5924)
!5927 = !DILocation(line: 926, column: 33, scope: !5924)
!5928 = !DILocation(line: 926, column: 7, scope: !5919)
!5929 = !DILocation(line: 927, column: 4, scope: !5924)
!5930 = !DILocation(line: 928, column: 2, scope: !5919)
!5931 = !DILocation(line: 924, column: 31, scope: !5913)
!5932 = !DILocation(line: 924, column: 2, scope: !5913)
!5933 = distinct !{!5933, !5917, !5934}
!5934 = !DILocation(line: 928, column: 2, scope: !5910)
!5935 = !DILocation(line: 929, column: 2, scope: !5898)
!5936 = !DILocation(line: 930, column: 1, scope: !5898)
!5937 = distinct !DISubprogram(name: "draw_sensor_header", scope: !1, file: !1, line: 934, type: !5938, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{null, !3660, !5688, !5688}
!5940 = !DILocalVariable(name: "layout", arg: 1, scope: !5937, file: !1, line: 934, type: !3660)
!5941 = !DILocation(line: 934, column: 42, scope: !5937)
!5942 = !DILocalVariable(name: "ptr", arg: 2, scope: !5937, file: !1, line: 934, type: !5688)
!5943 = !DILocation(line: 934, column: 62, scope: !5937)
!5944 = !DILocalVariable(name: "logic_ptr", arg: 3, scope: !5937, file: !1, line: 934, type: !5688)
!5945 = !DILocation(line: 934, column: 79, scope: !5937)
!5946 = !DILocalVariable(name: "box", scope: !5937, file: !1, line: 936, type: !3660)
!5947 = !DILocation(line: 936, column: 12, scope: !5937)
!5948 = !DILocalVariable(name: "row", scope: !5937, file: !1, line: 936, type: !3660)
!5949 = !DILocation(line: 936, column: 18, scope: !5937)
!5950 = !DILocalVariable(name: "sub", scope: !5937, file: !1, line: 936, type: !3660)
!5951 = !DILocation(line: 936, column: 24, scope: !5937)
!5952 = !DILocalVariable(name: "sens", scope: !5937, file: !1, line: 937, type: !2648)
!5953 = !DILocation(line: 937, column: 11, scope: !5937)
!5954 = !DILocation(line: 937, column: 28, scope: !5937)
!5955 = !DILocation(line: 937, column: 33, scope: !5937)
!5956 = !DILocation(line: 937, column: 17, scope: !5937)
!5957 = !DILocation(line: 939, column: 20, scope: !5937)
!5958 = !DILocation(line: 939, column: 8, scope: !5937)
!5959 = !DILocation(line: 939, column: 6, scope: !5937)
!5960 = !DILocation(line: 940, column: 20, scope: !5937)
!5961 = !DILocation(line: 940, column: 8, scope: !5937)
!5962 = !DILocation(line: 940, column: 6, scope: !5937)
!5963 = !DILocation(line: 942, column: 20, scope: !5937)
!5964 = !DILocation(line: 942, column: 8, scope: !5937)
!5965 = !DILocation(line: 942, column: 6, scope: !5937)
!5966 = !DILocation(line: 943, column: 20, scope: !5937)
!5967 = !DILocation(line: 943, column: 41, scope: !5937)
!5968 = !DILocation(line: 943, column: 25, scope: !5937)
!5969 = !DILocation(line: 943, column: 2, scope: !5937)
!5970 = !DILocation(line: 944, column: 10, scope: !5937)
!5971 = !DILocation(line: 944, column: 15, scope: !5937)
!5972 = !DILocation(line: 944, column: 2, scope: !5937)
!5973 = !DILocation(line: 945, column: 22, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5937, file: !1, line: 945, column: 6)
!5975 = !DILocation(line: 945, column: 6, scope: !5974)
!5976 = !DILocation(line: 945, column: 6, scope: !5937)
!5977 = !DILocation(line: 946, column: 11, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 945, column: 45)
!5979 = !DILocation(line: 946, column: 16, scope: !5978)
!5980 = !DILocation(line: 946, column: 3, scope: !5978)
!5981 = !DILocation(line: 947, column: 11, scope: !5978)
!5982 = !DILocation(line: 947, column: 16, scope: !5978)
!5983 = !DILocation(line: 947, column: 3, scope: !5978)
!5984 = !DILocation(line: 948, column: 2, scope: !5978)
!5985 = !DILocation(line: 950, column: 11, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 949, column: 7)
!5987 = !DILocation(line: 950, column: 16, scope: !5986)
!5988 = !DILocation(line: 950, column: 3, scope: !5986)
!5989 = !DILocation(line: 951, column: 11, scope: !5986)
!5990 = !DILocation(line: 951, column: 16, scope: !5986)
!5991 = !DILocation(line: 951, column: 22, scope: !5986)
!5992 = !DILocation(line: 951, column: 3, scope: !5986)
!5993 = !DILocation(line: 954, column: 20, scope: !5937)
!5994 = !DILocation(line: 954, column: 8, scope: !5937)
!5995 = !DILocation(line: 954, column: 6, scope: !5937)
!5996 = !DILocation(line: 955, column: 20, scope: !5937)
!5997 = !DILocation(line: 955, column: 44, scope: !5937)
!5998 = !DILocation(line: 955, column: 28, scope: !5937)
!5999 = !DILocation(line: 955, column: 85, scope: !5937)
!6000 = !DILocation(line: 956, column: 43, scope: !5937)
!6001 = !DILocation(line: 956, column: 27, scope: !5937)
!6002 = !DILocation(line: 956, column: 66, scope: !5937)
!6003 = !DILocation(line: 956, column: 85, scope: !5937)
!6004 = !DILocation(line: 956, column: 69, scope: !5937)
!6005 = !DILocation(line: 956, column: 98, scope: !5937)
!6006 = !DILocation(line: 957, column: 31, scope: !5937)
!6007 = !DILocation(line: 957, column: 15, scope: !5937)
!6008 = !DILocation(line: 0, scope: !5937)
!6009 = !DILocation(line: 955, column: 25, scope: !5937)
!6010 = !DILocation(line: 955, column: 2, scope: !5937)
!6011 = !DILocation(line: 958, column: 10, scope: !5937)
!6012 = !DILocation(line: 958, column: 15, scope: !5937)
!6013 = !DILocation(line: 958, column: 2, scope: !5937)
!6014 = !DILocation(line: 960, column: 22, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5937, file: !1, line: 960, column: 6)
!6016 = !DILocation(line: 960, column: 6, scope: !6015)
!6017 = !DILocation(line: 960, column: 43, scope: !6015)
!6018 = !DILocation(line: 960, column: 6, scope: !5937)
!6019 = !DILocation(line: 961, column: 21, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !1, line: 960, column: 48)
!6021 = !DILocation(line: 961, column: 9, scope: !6020)
!6022 = !DILocation(line: 961, column: 7, scope: !6020)
!6023 = !DILocation(line: 962, column: 21, scope: !6020)
!6024 = !DILocation(line: 962, column: 42, scope: !6020)
!6025 = !DILocation(line: 962, column: 26, scope: !6020)
!6026 = !DILocation(line: 962, column: 3, scope: !6020)
!6027 = !DILocation(line: 963, column: 15, scope: !6020)
!6028 = !DILocation(line: 963, column: 3, scope: !6020)
!6029 = !DILocation(line: 964, column: 15, scope: !6020)
!6030 = !DILocation(line: 964, column: 3, scope: !6020)
!6031 = !DILocation(line: 965, column: 2, scope: !6020)
!6032 = !DILocation(line: 967, column: 20, scope: !5937)
!6033 = !DILocation(line: 967, column: 8, scope: !5937)
!6034 = !DILocation(line: 967, column: 6, scope: !5937)
!6035 = !DILocation(line: 968, column: 10, scope: !5937)
!6036 = !DILocation(line: 968, column: 15, scope: !5937)
!6037 = !DILocation(line: 968, column: 2, scope: !5937)
!6038 = !DILocation(line: 970, column: 20, scope: !5937)
!6039 = !DILocation(line: 970, column: 8, scope: !5937)
!6040 = !DILocation(line: 970, column: 6, scope: !5937)
!6041 = !DILocation(line: 971, column: 20, scope: !5937)
!6042 = !DILocation(line: 971, column: 41, scope: !5937)
!6043 = !DILocation(line: 971, column: 25, scope: !5937)
!6044 = !DILocation(line: 971, column: 2, scope: !5937)
!6045 = !DILocation(line: 972, column: 10, scope: !5937)
!6046 = !DILocation(line: 972, column: 2, scope: !5937)
!6047 = !DILocation(line: 973, column: 1, scope: !5937)
!6048 = distinct !DISubprogram(name: "draw_brick_sensor", scope: !1, file: !1, line: 1253, type: !6049, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !3660, !5688, !2686}
!6051 = !DILocalVariable(name: "layout", arg: 1, scope: !6048, file: !1, line: 1253, type: !3660)
!6052 = !DILocation(line: 1253, column: 41, scope: !6048)
!6053 = !DILocalVariable(name: "ptr", arg: 2, scope: !6048, file: !1, line: 1253, type: !5688)
!6054 = !DILocation(line: 1253, column: 61, scope: !6048)
!6055 = !DILocalVariable(name: "C", arg: 3, scope: !6048, file: !1, line: 1253, type: !2686)
!6056 = !DILocation(line: 1253, column: 76, scope: !6048)
!6057 = !DILocalVariable(name: "box", scope: !6048, file: !1, line: 1255, type: !3660)
!6058 = !DILocation(line: 1255, column: 12, scope: !6048)
!6059 = !DILocation(line: 1257, column: 23, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6048, file: !1, line: 1257, column: 6)
!6061 = !DILocation(line: 1257, column: 7, scope: !6060)
!6062 = !DILocation(line: 1257, column: 6, scope: !6048)
!6063 = !DILocation(line: 1258, column: 3, scope: !6060)
!6064 = !DILocation(line: 1260, column: 30, scope: !6048)
!6065 = !DILocation(line: 1260, column: 38, scope: !6048)
!6066 = !DILocation(line: 1260, column: 2, scope: !6048)
!6067 = !DILocation(line: 1262, column: 20, scope: !6048)
!6068 = !DILocation(line: 1262, column: 8, scope: !6048)
!6069 = !DILocation(line: 1262, column: 6, scope: !6048)
!6070 = !DILocation(line: 1263, column: 20, scope: !6048)
!6071 = !DILocation(line: 1263, column: 41, scope: !6048)
!6072 = !DILocation(line: 1263, column: 25, scope: !6048)
!6073 = !DILocation(line: 1263, column: 2, scope: !6048)
!6074 = !DILocation(line: 1265, column: 23, scope: !6048)
!6075 = !DILocation(line: 1265, column: 10, scope: !6048)
!6076 = !DILocation(line: 1265, column: 2, scope: !6048)
!6077 = !DILocation(line: 1268, column: 25, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6048, file: !1, line: 1265, column: 37)
!6079 = !DILocation(line: 1268, column: 30, scope: !6078)
!6080 = !DILocation(line: 1268, column: 4, scope: !6078)
!6081 = !DILocation(line: 1269, column: 4, scope: !6078)
!6082 = !DILocation(line: 1271, column: 4, scope: !6078)
!6083 = !DILocation(line: 1273, column: 25, scope: !6078)
!6084 = !DILocation(line: 1273, column: 30, scope: !6078)
!6085 = !DILocation(line: 1273, column: 4, scope: !6078)
!6086 = !DILocation(line: 1274, column: 4, scope: !6078)
!6087 = !DILocation(line: 1276, column: 26, scope: !6078)
!6088 = !DILocation(line: 1276, column: 31, scope: !6078)
!6089 = !DILocation(line: 1276, column: 36, scope: !6078)
!6090 = !DILocation(line: 1276, column: 4, scope: !6078)
!6091 = !DILocation(line: 1277, column: 4, scope: !6078)
!6092 = !DILocation(line: 1279, column: 22, scope: !6078)
!6093 = !DILocation(line: 1279, column: 27, scope: !6078)
!6094 = !DILocation(line: 1279, column: 4, scope: !6078)
!6095 = !DILocation(line: 1280, column: 4, scope: !6078)
!6096 = !DILocation(line: 1282, column: 25, scope: !6078)
!6097 = !DILocation(line: 1282, column: 30, scope: !6078)
!6098 = !DILocation(line: 1282, column: 4, scope: !6078)
!6099 = !DILocation(line: 1283, column: 4, scope: !6078)
!6100 = !DILocation(line: 1285, column: 25, scope: !6078)
!6101 = !DILocation(line: 1285, column: 30, scope: !6078)
!6102 = !DILocation(line: 1285, column: 4, scope: !6078)
!6103 = !DILocation(line: 1286, column: 4, scope: !6078)
!6104 = !DILocation(line: 1288, column: 24, scope: !6078)
!6105 = !DILocation(line: 1288, column: 29, scope: !6078)
!6106 = !DILocation(line: 1288, column: 4, scope: !6078)
!6107 = !DILocation(line: 1289, column: 4, scope: !6078)
!6108 = !DILocation(line: 1291, column: 22, scope: !6078)
!6109 = !DILocation(line: 1291, column: 27, scope: !6078)
!6110 = !DILocation(line: 1291, column: 32, scope: !6078)
!6111 = !DILocation(line: 1291, column: 4, scope: !6078)
!6112 = !DILocation(line: 1292, column: 4, scope: !6078)
!6113 = !DILocation(line: 1294, column: 21, scope: !6078)
!6114 = !DILocation(line: 1294, column: 26, scope: !6078)
!6115 = !DILocation(line: 1294, column: 4, scope: !6078)
!6116 = !DILocation(line: 1295, column: 4, scope: !6078)
!6117 = !DILocation(line: 1297, column: 25, scope: !6078)
!6118 = !DILocation(line: 1297, column: 30, scope: !6078)
!6119 = !DILocation(line: 1297, column: 4, scope: !6078)
!6120 = !DILocation(line: 1298, column: 4, scope: !6078)
!6121 = !DILocation(line: 1300, column: 22, scope: !6078)
!6122 = !DILocation(line: 1300, column: 27, scope: !6078)
!6123 = !DILocation(line: 1300, column: 4, scope: !6078)
!6124 = !DILocation(line: 1301, column: 4, scope: !6078)
!6125 = !DILocation(line: 1303, column: 23, scope: !6078)
!6126 = !DILocation(line: 1303, column: 28, scope: !6078)
!6127 = !DILocation(line: 1303, column: 4, scope: !6078)
!6128 = !DILocation(line: 1304, column: 4, scope: !6078)
!6129 = !DILocation(line: 1306, column: 20, scope: !6078)
!6130 = !DILocation(line: 1306, column: 25, scope: !6078)
!6131 = !DILocation(line: 1306, column: 30, scope: !6078)
!6132 = !DILocation(line: 1306, column: 4, scope: !6078)
!6133 = !DILocation(line: 1307, column: 4, scope: !6078)
!6134 = !DILocation(line: 1309, column: 1, scope: !6048)
!6135 = distinct !DISubprogram(name: "actuator_menu", scope: !1, file: !1, line: 857, type: !5640, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6136 = !DILocalVariable(name: "C", arg: 1, scope: !6135, file: !1, line: 857, type: !2686)
!6137 = !DILocation(line: 857, column: 41, scope: !6135)
!6138 = !DILocalVariable(name: "ar", arg: 2, scope: !6135, file: !1, line: 857, type: !3530)
!6139 = !DILocation(line: 857, column: 53, scope: !6135)
!6140 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !6135, file: !1, line: 857, type: !1054)
!6141 = !DILocation(line: 857, column: 63, scope: !6135)
!6142 = !DILocalVariable(name: "block", scope: !6135, file: !1, line: 859, type: !3669)
!6143 = !DILocation(line: 859, column: 11, scope: !6135)
!6144 = !DILocalVariable(name: "xco", scope: !6135, file: !1, line: 860, type: !1085)
!6145 = !DILocation(line: 860, column: 6, scope: !6135)
!6146 = !DILocation(line: 862, column: 22, scope: !6135)
!6147 = !DILocation(line: 862, column: 25, scope: !6135)
!6148 = !DILocation(line: 862, column: 9, scope: !6135)
!6149 = !DILocation(line: 862, column: 7, scope: !6135)
!6150 = !DILocation(line: 863, column: 21, scope: !6135)
!6151 = !DILocation(line: 863, column: 2, scope: !6135)
!6152 = !DILocation(line: 865, column: 11, scope: !6135)
!6153 = !DILocation(line: 865, column: 65, scope: !6135)
!6154 = !DILocation(line: 865, column: 54, scope: !6135)
!6155 = !DILocation(line: 865, column: 2, scope: !6135)
!6156 = !DILocation(line: 866, column: 11, scope: !6135)
!6157 = !DILocation(line: 866, column: 65, scope: !6135)
!6158 = !DILocation(line: 866, column: 54, scope: !6135)
!6159 = !DILocation(line: 866, column: 2, scope: !6135)
!6160 = !DILocation(line: 867, column: 11, scope: !6135)
!6161 = !DILocation(line: 867, column: 49, scope: !6135)
!6162 = !DILocation(line: 867, column: 38, scope: !6135)
!6163 = !DILocation(line: 867, column: 2, scope: !6135)
!6164 = !DILocation(line: 868, column: 11, scope: !6135)
!6165 = !DILocation(line: 868, column: 67, scope: !6135)
!6166 = !DILocation(line: 868, column: 56, scope: !6135)
!6167 = !DILocation(line: 868, column: 2, scope: !6135)
!6168 = !DILocation(line: 869, column: 11, scope: !6135)
!6169 = !DILocation(line: 869, column: 67, scope: !6135)
!6170 = !DILocation(line: 869, column: 56, scope: !6135)
!6171 = !DILocation(line: 869, column: 2, scope: !6135)
!6172 = !DILocation(line: 871, column: 22, scope: !6135)
!6173 = !DILocation(line: 871, column: 2, scope: !6135)
!6174 = !DILocation(line: 872, column: 13, scope: !6135)
!6175 = !DILocation(line: 872, column: 16, scope: !6135)
!6176 = !DILocation(line: 872, column: 2, scope: !6135)
!6177 = !DILocation(line: 874, column: 9, scope: !6135)
!6178 = !DILocation(line: 874, column: 2, scope: !6135)
!6179 = distinct !DISubprogram(name: "draw_actuator_header", scope: !1, file: !1, line: 1418, type: !5938, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6180 = !DILocalVariable(name: "layout", arg: 1, scope: !6179, file: !1, line: 1418, type: !3660)
!6181 = !DILocation(line: 1418, column: 44, scope: !6179)
!6182 = !DILocalVariable(name: "ptr", arg: 2, scope: !6179, file: !1, line: 1418, type: !5688)
!6183 = !DILocation(line: 1418, column: 64, scope: !6179)
!6184 = !DILocalVariable(name: "logic_ptr", arg: 3, scope: !6179, file: !1, line: 1418, type: !5688)
!6185 = !DILocation(line: 1418, column: 81, scope: !6179)
!6186 = !DILocalVariable(name: "box", scope: !6179, file: !1, line: 1420, type: !3660)
!6187 = !DILocation(line: 1420, column: 12, scope: !6179)
!6188 = !DILocalVariable(name: "row", scope: !6179, file: !1, line: 1420, type: !3660)
!6189 = !DILocation(line: 1420, column: 18, scope: !6179)
!6190 = !DILocalVariable(name: "sub", scope: !6179, file: !1, line: 1420, type: !3660)
!6191 = !DILocation(line: 1420, column: 24, scope: !6179)
!6192 = !DILocalVariable(name: "act", scope: !6179, file: !1, line: 1421, type: !2645)
!6193 = !DILocation(line: 1421, column: 13, scope: !6179)
!6194 = !DILocation(line: 1421, column: 31, scope: !6179)
!6195 = !DILocation(line: 1421, column: 36, scope: !6179)
!6196 = !DILocation(line: 1421, column: 18, scope: !6179)
!6197 = !DILocation(line: 1423, column: 20, scope: !6179)
!6198 = !DILocation(line: 1423, column: 8, scope: !6179)
!6199 = !DILocation(line: 1423, column: 6, scope: !6179)
!6200 = !DILocation(line: 1424, column: 20, scope: !6179)
!6201 = !DILocation(line: 1424, column: 8, scope: !6179)
!6202 = !DILocation(line: 1424, column: 6, scope: !6179)
!6203 = !DILocation(line: 1426, column: 20, scope: !6179)
!6204 = !DILocation(line: 1426, column: 8, scope: !6179)
!6205 = !DILocation(line: 1426, column: 6, scope: !6179)
!6206 = !DILocation(line: 1427, column: 20, scope: !6179)
!6207 = !DILocation(line: 1427, column: 41, scope: !6179)
!6208 = !DILocation(line: 1427, column: 25, scope: !6179)
!6209 = !DILocation(line: 1427, column: 2, scope: !6179)
!6210 = !DILocation(line: 1428, column: 10, scope: !6179)
!6211 = !DILocation(line: 1428, column: 15, scope: !6179)
!6212 = !DILocation(line: 1428, column: 2, scope: !6179)
!6213 = !DILocation(line: 1429, column: 22, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6179, file: !1, line: 1429, column: 6)
!6215 = !DILocation(line: 1429, column: 6, scope: !6214)
!6216 = !DILocation(line: 1429, column: 6, scope: !6179)
!6217 = !DILocation(line: 1430, column: 11, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6214, file: !1, line: 1429, column: 45)
!6219 = !DILocation(line: 1430, column: 16, scope: !6218)
!6220 = !DILocation(line: 1430, column: 3, scope: !6218)
!6221 = !DILocation(line: 1431, column: 11, scope: !6218)
!6222 = !DILocation(line: 1431, column: 16, scope: !6218)
!6223 = !DILocation(line: 1431, column: 3, scope: !6218)
!6224 = !DILocation(line: 1432, column: 2, scope: !6218)
!6225 = !DILocation(line: 1434, column: 11, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6214, file: !1, line: 1433, column: 7)
!6227 = !DILocation(line: 1434, column: 16, scope: !6226)
!6228 = !DILocation(line: 1434, column: 3, scope: !6226)
!6229 = !DILocation(line: 1435, column: 11, scope: !6226)
!6230 = !DILocation(line: 1435, column: 16, scope: !6226)
!6231 = !DILocation(line: 1435, column: 21, scope: !6226)
!6232 = !DILocation(line: 1435, column: 3, scope: !6226)
!6233 = !DILocation(line: 1438, column: 20, scope: !6179)
!6234 = !DILocation(line: 1438, column: 8, scope: !6179)
!6235 = !DILocation(line: 1438, column: 6, scope: !6179)
!6236 = !DILocation(line: 1439, column: 20, scope: !6179)
!6237 = !DILocation(line: 1439, column: 44, scope: !6179)
!6238 = !DILocation(line: 1439, column: 28, scope: !6179)
!6239 = !DILocation(line: 1439, column: 87, scope: !6179)
!6240 = !DILocation(line: 1440, column: 44, scope: !6179)
!6241 = !DILocation(line: 1440, column: 28, scope: !6179)
!6242 = !DILocation(line: 1440, column: 67, scope: !6179)
!6243 = !DILocation(line: 1440, column: 86, scope: !6179)
!6244 = !DILocation(line: 1440, column: 70, scope: !6179)
!6245 = !DILocation(line: 1440, column: 99, scope: !6179)
!6246 = !DILocation(line: 1441, column: 44, scope: !6179)
!6247 = !DILocation(line: 1441, column: 28, scope: !6179)
!6248 = !DILocation(line: 0, scope: !6179)
!6249 = !DILocation(line: 1439, column: 25, scope: !6179)
!6250 = !DILocation(line: 1439, column: 2, scope: !6179)
!6251 = !DILocation(line: 1442, column: 10, scope: !6179)
!6252 = !DILocation(line: 1442, column: 15, scope: !6179)
!6253 = !DILocation(line: 1442, column: 2, scope: !6179)
!6254 = !DILocation(line: 1444, column: 22, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6179, file: !1, line: 1444, column: 6)
!6256 = !DILocation(line: 1444, column: 6, scope: !6255)
!6257 = !DILocation(line: 1444, column: 43, scope: !6255)
!6258 = !DILocation(line: 1444, column: 6, scope: !6179)
!6259 = !DILocation(line: 1445, column: 21, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6255, file: !1, line: 1444, column: 48)
!6261 = !DILocation(line: 1445, column: 9, scope: !6260)
!6262 = !DILocation(line: 1445, column: 7, scope: !6260)
!6263 = !DILocation(line: 1446, column: 21, scope: !6260)
!6264 = !DILocation(line: 1446, column: 42, scope: !6260)
!6265 = !DILocation(line: 1446, column: 26, scope: !6260)
!6266 = !DILocation(line: 1446, column: 3, scope: !6260)
!6267 = !DILocation(line: 1447, column: 15, scope: !6260)
!6268 = !DILocation(line: 1447, column: 3, scope: !6260)
!6269 = !DILocation(line: 1448, column: 15, scope: !6260)
!6270 = !DILocation(line: 1448, column: 3, scope: !6260)
!6271 = !DILocation(line: 1449, column: 2, scope: !6260)
!6272 = !DILocation(line: 1451, column: 20, scope: !6179)
!6273 = !DILocation(line: 1451, column: 8, scope: !6179)
!6274 = !DILocation(line: 1451, column: 6, scope: !6179)
!6275 = !DILocation(line: 1452, column: 10, scope: !6179)
!6276 = !DILocation(line: 1452, column: 15, scope: !6179)
!6277 = !DILocation(line: 1452, column: 2, scope: !6179)
!6278 = !DILocation(line: 1454, column: 20, scope: !6179)
!6279 = !DILocation(line: 1454, column: 8, scope: !6179)
!6280 = !DILocation(line: 1454, column: 6, scope: !6179)
!6281 = !DILocation(line: 1455, column: 20, scope: !6179)
!6282 = !DILocation(line: 1455, column: 41, scope: !6179)
!6283 = !DILocation(line: 1455, column: 25, scope: !6179)
!6284 = !DILocation(line: 1455, column: 2, scope: !6179)
!6285 = !DILocation(line: 1456, column: 10, scope: !6179)
!6286 = !DILocation(line: 1456, column: 2, scope: !6179)
!6287 = !DILocation(line: 1457, column: 1, scope: !6179)
!6288 = distinct !DISubprogram(name: "draw_brick_actuator", scope: !1, file: !1, line: 2266, type: !6049, scopeLine: 2267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6289 = !DILocalVariable(name: "layout", arg: 1, scope: !6288, file: !1, line: 2266, type: !3660)
!6290 = !DILocation(line: 2266, column: 43, scope: !6288)
!6291 = !DILocalVariable(name: "ptr", arg: 2, scope: !6288, file: !1, line: 2266, type: !5688)
!6292 = !DILocation(line: 2266, column: 63, scope: !6288)
!6293 = !DILocalVariable(name: "C", arg: 3, scope: !6288, file: !1, line: 2266, type: !2686)
!6294 = !DILocation(line: 2266, column: 78, scope: !6288)
!6295 = !DILocalVariable(name: "box", scope: !6288, file: !1, line: 2268, type: !3660)
!6296 = !DILocation(line: 2268, column: 12, scope: !6288)
!6297 = !DILocation(line: 2270, column: 23, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6288, file: !1, line: 2270, column: 6)
!6299 = !DILocation(line: 2270, column: 7, scope: !6298)
!6300 = !DILocation(line: 2270, column: 6, scope: !6288)
!6301 = !DILocation(line: 2271, column: 3, scope: !6298)
!6302 = !DILocation(line: 2273, column: 20, scope: !6288)
!6303 = !DILocation(line: 2273, column: 8, scope: !6288)
!6304 = !DILocation(line: 2273, column: 6, scope: !6288)
!6305 = !DILocation(line: 2274, column: 20, scope: !6288)
!6306 = !DILocation(line: 2274, column: 41, scope: !6288)
!6307 = !DILocation(line: 2274, column: 25, scope: !6288)
!6308 = !DILocation(line: 2274, column: 2, scope: !6288)
!6309 = !DILocation(line: 2276, column: 23, scope: !6288)
!6310 = !DILocation(line: 2276, column: 10, scope: !6288)
!6311 = !DILocation(line: 2276, column: 2, scope: !6288)
!6312 = !DILocation(line: 2278, column: 25, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6288, file: !1, line: 2276, column: 37)
!6314 = !DILocation(line: 2278, column: 30, scope: !6313)
!6315 = !DILocation(line: 2278, column: 4, scope: !6313)
!6316 = !DILocation(line: 2279, column: 4, scope: !6313)
!6317 = !DILocation(line: 2281, column: 27, scope: !6313)
!6318 = !DILocation(line: 2281, column: 32, scope: !6313)
!6319 = !DILocation(line: 2281, column: 4, scope: !6313)
!6320 = !DILocation(line: 2282, column: 4, scope: !6313)
!6321 = !DILocation(line: 2284, column: 25, scope: !6313)
!6322 = !DILocation(line: 2284, column: 30, scope: !6313)
!6323 = !DILocation(line: 2284, column: 4, scope: !6313)
!6324 = !DILocation(line: 2285, column: 4, scope: !6313)
!6325 = !DILocation(line: 2287, column: 29, scope: !6313)
!6326 = !DILocation(line: 2287, column: 34, scope: !6313)
!6327 = !DILocation(line: 2287, column: 39, scope: !6313)
!6328 = !DILocation(line: 2287, column: 4, scope: !6313)
!6329 = !DILocation(line: 2288, column: 4, scope: !6313)
!6330 = !DILocation(line: 2290, column: 30, scope: !6313)
!6331 = !DILocation(line: 2290, column: 35, scope: !6313)
!6332 = !DILocation(line: 2290, column: 4, scope: !6313)
!6333 = !DILocation(line: 2291, column: 4, scope: !6313)
!6334 = !DILocation(line: 2293, column: 28, scope: !6313)
!6335 = !DILocation(line: 2293, column: 33, scope: !6313)
!6336 = !DILocation(line: 2293, column: 4, scope: !6313)
!6337 = !DILocation(line: 2294, column: 4, scope: !6313)
!6338 = !DILocation(line: 2296, column: 23, scope: !6313)
!6339 = !DILocation(line: 2296, column: 28, scope: !6313)
!6340 = !DILocation(line: 2296, column: 4, scope: !6313)
!6341 = !DILocation(line: 2297, column: 4, scope: !6313)
!6342 = !DILocation(line: 2299, column: 26, scope: !6313)
!6343 = !DILocation(line: 2299, column: 31, scope: !6313)
!6344 = !DILocation(line: 2299, column: 36, scope: !6313)
!6345 = !DILocation(line: 2299, column: 4, scope: !6313)
!6346 = !DILocation(line: 2300, column: 4, scope: !6313)
!6347 = !DILocation(line: 2302, column: 25, scope: !6313)
!6348 = !DILocation(line: 2302, column: 30, scope: !6313)
!6349 = !DILocation(line: 2302, column: 4, scope: !6313)
!6350 = !DILocation(line: 2303, column: 4, scope: !6313)
!6351 = !DILocation(line: 2305, column: 25, scope: !6313)
!6352 = !DILocation(line: 2305, column: 30, scope: !6313)
!6353 = !DILocation(line: 2305, column: 4, scope: !6313)
!6354 = !DILocation(line: 2306, column: 4, scope: !6313)
!6355 = !DILocation(line: 2308, column: 27, scope: !6313)
!6356 = !DILocation(line: 2308, column: 32, scope: !6313)
!6357 = !DILocation(line: 2308, column: 4, scope: !6313)
!6358 = !DILocation(line: 2309, column: 4, scope: !6313)
!6359 = !DILocation(line: 2311, column: 25, scope: !6313)
!6360 = !DILocation(line: 2311, column: 30, scope: !6313)
!6361 = !DILocation(line: 2311, column: 4, scope: !6313)
!6362 = !DILocation(line: 2312, column: 4, scope: !6313)
!6363 = !DILocation(line: 2314, column: 24, scope: !6313)
!6364 = !DILocation(line: 2314, column: 29, scope: !6313)
!6365 = !DILocation(line: 2314, column: 4, scope: !6313)
!6366 = !DILocation(line: 2315, column: 4, scope: !6313)
!6367 = !DILocation(line: 2317, column: 31, scope: !6313)
!6368 = !DILocation(line: 2317, column: 36, scope: !6313)
!6369 = !DILocation(line: 2317, column: 4, scope: !6313)
!6370 = !DILocation(line: 2318, column: 4, scope: !6313)
!6371 = !DILocation(line: 2320, column: 24, scope: !6313)
!6372 = !DILocation(line: 2320, column: 29, scope: !6313)
!6373 = !DILocation(line: 2320, column: 34, scope: !6313)
!6374 = !DILocation(line: 2320, column: 4, scope: !6313)
!6375 = !DILocation(line: 2321, column: 4, scope: !6313)
!6376 = !DILocation(line: 2323, column: 24, scope: !6313)
!6377 = !DILocation(line: 2323, column: 29, scope: !6313)
!6378 = !DILocation(line: 2323, column: 4, scope: !6313)
!6379 = !DILocation(line: 2324, column: 4, scope: !6313)
!6380 = !DILocation(line: 2326, column: 29, scope: !6313)
!6381 = !DILocation(line: 2326, column: 34, scope: !6313)
!6382 = !DILocation(line: 2326, column: 4, scope: !6313)
!6383 = !DILocation(line: 2327, column: 4, scope: !6313)
!6384 = !DILocation(line: 2329, column: 27, scope: !6313)
!6385 = !DILocation(line: 2329, column: 32, scope: !6313)
!6386 = !DILocation(line: 2329, column: 4, scope: !6313)
!6387 = !DILocation(line: 2330, column: 4, scope: !6313)
!6388 = !DILocation(line: 2332, column: 24, scope: !6313)
!6389 = !DILocation(line: 2332, column: 29, scope: !6313)
!6390 = !DILocation(line: 2332, column: 4, scope: !6313)
!6391 = !DILocation(line: 2333, column: 4, scope: !6313)
!6392 = !DILocation(line: 2335, column: 1, scope: !6288)
!6393 = distinct !DISubprogram(name: "set_sca_ob", scope: !1, file: !1, line: 528, type: !6394, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6394 = !DISubroutineType(types: !6395)
!6395 = !{null, !1044}
!6396 = !DILocalVariable(name: "ob", arg: 1, scope: !6393, file: !1, line: 528, type: !1044)
!6397 = !DILocation(line: 528, column: 32, scope: !6393)
!6398 = !DILocalVariable(name: "cont", scope: !6393, file: !1, line: 530, type: !2583)
!6399 = !DILocation(line: 530, column: 15, scope: !6393)
!6400 = !DILocalVariable(name: "act", scope: !6393, file: !1, line: 531, type: !2645)
!6401 = !DILocation(line: 531, column: 13, scope: !6393)
!6402 = !DILocation(line: 533, column: 8, scope: !6393)
!6403 = !DILocation(line: 533, column: 12, scope: !6393)
!6404 = !DILocation(line: 533, column: 24, scope: !6393)
!6405 = !DILocation(line: 533, column: 6, scope: !6393)
!6406 = !DILocation(line: 534, column: 2, scope: !6393)
!6407 = !DILocation(line: 534, column: 9, scope: !6393)
!6408 = !DILocation(line: 535, column: 31, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 534, column: 15)
!6410 = !DILocation(line: 535, column: 16, scope: !6409)
!6411 = !DILocation(line: 535, column: 3, scope: !6409)
!6412 = !DILocation(line: 535, column: 9, scope: !6409)
!6413 = !DILocation(line: 535, column: 14, scope: !6409)
!6414 = !DILocation(line: 536, column: 9, scope: !6409)
!6415 = !DILocation(line: 536, column: 15, scope: !6409)
!6416 = !DILocation(line: 536, column: 7, scope: !6409)
!6417 = distinct !{!6417, !6406, !6418}
!6418 = !DILocation(line: 537, column: 2, scope: !6393)
!6419 = !DILocation(line: 538, column: 7, scope: !6393)
!6420 = !DILocation(line: 538, column: 11, scope: !6393)
!6421 = !DILocation(line: 538, column: 21, scope: !6393)
!6422 = !DILocation(line: 538, column: 5, scope: !6393)
!6423 = !DILocation(line: 539, column: 2, scope: !6393)
!6424 = !DILocation(line: 539, column: 9, scope: !6393)
!6425 = !DILocation(line: 540, column: 28, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 539, column: 14)
!6427 = !DILocation(line: 540, column: 15, scope: !6426)
!6428 = !DILocation(line: 540, column: 3, scope: !6426)
!6429 = !DILocation(line: 540, column: 8, scope: !6426)
!6430 = !DILocation(line: 540, column: 13, scope: !6426)
!6431 = !DILocation(line: 541, column: 8, scope: !6426)
!6432 = !DILocation(line: 541, column: 13, scope: !6426)
!6433 = !DILocation(line: 541, column: 6, scope: !6426)
!6434 = distinct !{!6434, !6423, !6435}
!6435 = !DILocation(line: 542, column: 2, scope: !6393)
!6436 = !DILocation(line: 543, column: 1, scope: !6393)
!6437 = distinct !DISubprogram(name: "do_controller_menu", scope: !1, file: !1, line: 779, type: !4936, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6438 = !DILocalVariable(name: "C", arg: 1, scope: !6437, file: !1, line: 779, type: !2686)
!6439 = !DILocation(line: 779, column: 42, scope: !6437)
!6440 = !DILocalVariable(name: "UNUSED_arg", arg: 2, scope: !6437, file: !1, line: 779, type: !1054)
!6441 = !DILocation(line: 779, column: 51, scope: !6437)
!6442 = !DILocalVariable(name: "event", arg: 3, scope: !6437, file: !1, line: 779, type: !1085)
!6443 = !DILocation(line: 779, column: 68, scope: !6437)
!6444 = !DILocalVariable(name: "slogic", scope: !6437, file: !1, line: 781, type: !3609)
!6445 = !DILocation(line: 781, column: 14, scope: !6437)
!6446 = !DILocation(line: 781, column: 41, scope: !6437)
!6447 = !DILocation(line: 781, column: 22, scope: !6437)
!6448 = !DILocalVariable(name: "idar", scope: !6437, file: !1, line: 782, type: !2720)
!6449 = !DILocation(line: 782, column: 7, scope: !6437)
!6450 = !DILocalVariable(name: "ob", scope: !6437, file: !1, line: 783, type: !1044)
!6451 = !DILocation(line: 783, column: 10, scope: !6437)
!6452 = !DILocalVariable(name: "cont", scope: !6437, file: !1, line: 784, type: !2583)
!6453 = !DILocation(line: 784, column: 15, scope: !6437)
!6454 = !DILocalVariable(name: "count", scope: !6437, file: !1, line: 785, type: !1083)
!6455 = !DILocation(line: 785, column: 8, scope: !6437)
!6456 = !DILocalVariable(name: "a", scope: !6437, file: !1, line: 785, type: !1083)
!6457 = !DILocation(line: 785, column: 15, scope: !6437)
!6458 = !DILocation(line: 787, column: 36, scope: !6437)
!6459 = !DILocation(line: 787, column: 47, scope: !6437)
!6460 = !DILocation(line: 787, column: 55, scope: !6437)
!6461 = !DILocation(line: 787, column: 8, scope: !6437)
!6462 = !DILocation(line: 787, column: 6, scope: !6437)
!6463 = !DILocation(line: 789, column: 8, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 789, column: 2)
!6465 = !DILocation(line: 789, column: 7, scope: !6464)
!6466 = !DILocation(line: 789, column: 12, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 789, column: 2)
!6468 = !DILocation(line: 789, column: 14, scope: !6467)
!6469 = !DILocation(line: 789, column: 13, scope: !6467)
!6470 = !DILocation(line: 789, column: 2, scope: !6464)
!6471 = !DILocation(line: 790, column: 17, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 789, column: 26)
!6473 = !DILocation(line: 790, column: 22, scope: !6472)
!6474 = !DILocation(line: 790, column: 7, scope: !6472)
!6475 = !DILocation(line: 790, column: 5, scope: !6472)
!6476 = !DILocation(line: 791, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 791, column: 7)
!6478 = !DILocation(line: 791, column: 12, scope: !6477)
!6479 = !DILocation(line: 791, column: 16, scope: !6477)
!6480 = !DILocation(line: 791, column: 19, scope: !6477)
!6481 = !DILocation(line: 791, column: 24, scope: !6477)
!6482 = !DILocation(line: 791, column: 7, scope: !6472)
!6483 = !DILocation(line: 791, column: 29, scope: !6477)
!6484 = !DILocation(line: 791, column: 33, scope: !6477)
!6485 = !DILocation(line: 791, column: 41, scope: !6477)
!6486 = !DILocation(line: 792, column: 12, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6477, file: !1, line: 792, column: 12)
!6488 = !DILocation(line: 792, column: 17, scope: !6487)
!6489 = !DILocation(line: 792, column: 12, scope: !6477)
!6490 = !DILocation(line: 792, column: 22, scope: !6487)
!6491 = !DILocation(line: 792, column: 26, scope: !6487)
!6492 = !DILocation(line: 792, column: 34, scope: !6487)
!6493 = !DILocation(line: 793, column: 2, scope: !6472)
!6494 = !DILocation(line: 789, column: 22, scope: !6467)
!6495 = !DILocation(line: 789, column: 2, scope: !6467)
!6496 = distinct !{!6496, !6470, !6497}
!6497 = !DILocation(line: 793, column: 2, scope: !6464)
!6498 = !DILocation(line: 795, column: 8, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 795, column: 2)
!6500 = !DILocation(line: 795, column: 7, scope: !6499)
!6501 = !DILocation(line: 795, column: 12, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6499, file: !1, line: 795, column: 2)
!6503 = !DILocation(line: 795, column: 14, scope: !6502)
!6504 = !DILocation(line: 795, column: 13, scope: !6502)
!6505 = !DILocation(line: 795, column: 2, scope: !6499)
!6506 = !DILocation(line: 796, column: 17, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6502, file: !1, line: 795, column: 26)
!6508 = !DILocation(line: 796, column: 22, scope: !6507)
!6509 = !DILocation(line: 796, column: 7, scope: !6507)
!6510 = !DILocation(line: 796, column: 5, scope: !6507)
!6511 = !DILocation(line: 797, column: 9, scope: !6507)
!6512 = !DILocation(line: 797, column: 13, scope: !6507)
!6513 = !DILocation(line: 797, column: 25, scope: !6507)
!6514 = !DILocation(line: 797, column: 7, scope: !6507)
!6515 = !DILocation(line: 798, column: 3, scope: !6507)
!6516 = !DILocation(line: 798, column: 10, scope: !6507)
!6517 = !DILocation(line: 799, column: 8, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 799, column: 8)
!6519 = distinct !DILexicalBlock(scope: !6507, file: !1, line: 798, column: 16)
!6520 = !DILocation(line: 799, column: 13, scope: !6518)
!6521 = !DILocation(line: 799, column: 8, scope: !6519)
!6522 = !DILocation(line: 799, column: 18, scope: !6518)
!6523 = !DILocation(line: 799, column: 24, scope: !6518)
!6524 = !DILocation(line: 799, column: 29, scope: !6518)
!6525 = !DILocation(line: 800, column: 13, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6518, file: !1, line: 800, column: 13)
!6527 = !DILocation(line: 800, column: 18, scope: !6526)
!6528 = !DILocation(line: 800, column: 13, scope: !6518)
!6529 = !DILocation(line: 800, column: 23, scope: !6526)
!6530 = !DILocation(line: 800, column: 29, scope: !6526)
!6531 = !DILocation(line: 800, column: 34, scope: !6526)
!6532 = !DILocation(line: 801, column: 10, scope: !6519)
!6533 = !DILocation(line: 801, column: 16, scope: !6519)
!6534 = !DILocation(line: 801, column: 8, scope: !6519)
!6535 = distinct !{!6535, !6515, !6536}
!6536 = !DILocation(line: 802, column: 3, scope: !6507)
!6537 = !DILocation(line: 803, column: 2, scope: !6507)
!6538 = !DILocation(line: 795, column: 22, scope: !6502)
!6539 = !DILocation(line: 795, column: 2, scope: !6502)
!6540 = distinct !{!6540, !6505, !6541}
!6541 = !DILocation(line: 803, column: 2, scope: !6499)
!6542 = !DILocation(line: 805, column: 6, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 805, column: 6)
!6544 = !DILocation(line: 805, column: 6, scope: !6437)
!6545 = !DILocation(line: 805, column: 12, scope: !6543)
!6546 = !DILocation(line: 805, column: 22, scope: !6543)
!6547 = !DILocation(line: 806, column: 1, scope: !6437)
!6548 = distinct !DISubprogram(name: "controller_state_mask_menu", scope: !1, file: !1, line: 887, type: !5640, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6549 = !DILocalVariable(name: "C", arg: 1, scope: !6548, file: !1, line: 887, type: !2686)
!6550 = !DILocation(line: 887, column: 54, scope: !6548)
!6551 = !DILocalVariable(name: "ar", arg: 2, scope: !6548, file: !1, line: 887, type: !3530)
!6552 = !DILocation(line: 887, column: 66, scope: !6548)
!6553 = !DILocalVariable(name: "arg_cont", arg: 3, scope: !6548, file: !1, line: 887, type: !1054)
!6554 = !DILocation(line: 887, column: 76, scope: !6548)
!6555 = !DILocalVariable(name: "block", scope: !6548, file: !1, line: 889, type: !3669)
!6556 = !DILocation(line: 889, column: 11, scope: !6548)
!6557 = !DILocalVariable(name: "but", scope: !6548, file: !1, line: 890, type: !3922)
!6558 = !DILocation(line: 890, column: 9, scope: !6548)
!6559 = !DILocalVariable(name: "cont", scope: !6548, file: !1, line: 891, type: !2583)
!6560 = !DILocation(line: 891, column: 15, scope: !6548)
!6561 = !DILocation(line: 891, column: 22, scope: !6548)
!6562 = !DILocalVariable(name: "yco", scope: !6548, file: !1, line: 893, type: !1083)
!6563 = !DILocation(line: 893, column: 8, scope: !6548)
!6564 = !DILocalVariable(name: "xco", scope: !6548, file: !1, line: 893, type: !1083)
!6565 = !DILocation(line: 893, column: 18, scope: !6548)
!6566 = !DILocalVariable(name: "stbit", scope: !6548, file: !1, line: 893, type: !1083)
!6567 = !DILocation(line: 893, column: 27, scope: !6548)
!6568 = !DILocalVariable(name: "offset", scope: !6548, file: !1, line: 893, type: !1083)
!6569 = !DILocation(line: 893, column: 34, scope: !6548)
!6570 = !DILocation(line: 895, column: 22, scope: !6548)
!6571 = !DILocation(line: 895, column: 25, scope: !6548)
!6572 = !DILocation(line: 895, column: 9, scope: !6548)
!6573 = !DILocation(line: 895, column: 7, scope: !6548)
!6574 = !DILocation(line: 898, column: 11, scope: !6548)
!6575 = !DILocation(line: 898, column: 2, scope: !6548)
!6576 = !DILocation(line: 900, column: 13, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6548, file: !1, line: 900, column: 2)
!6578 = !DILocation(line: 900, column: 7, scope: !6577)
!6579 = !DILocation(line: 900, column: 17, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6577, file: !1, line: 900, column: 2)
!6581 = !DILocation(line: 900, column: 23, scope: !6580)
!6582 = !DILocation(line: 900, column: 2, scope: !6577)
!6583 = !DILocation(line: 901, column: 21, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6580, file: !1, line: 900, column: 41)
!6585 = !DILocation(line: 901, column: 3, scope: !6584)
!6586 = !DILocation(line: 902, column: 13, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6584, file: !1, line: 902, column: 3)
!6588 = !DILocation(line: 902, column: 8, scope: !6587)
!6589 = !DILocation(line: 902, column: 17, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 902, column: 3)
!6591 = !DILocation(line: 902, column: 22, scope: !6590)
!6592 = !DILocation(line: 902, column: 3, scope: !6587)
!6593 = !DILocation(line: 903, column: 23, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 902, column: 35)
!6595 = !DILocation(line: 903, column: 40, scope: !6594)
!6596 = !DILocation(line: 903, column: 46, scope: !6594)
!6597 = !DILocation(line: 903, column: 45, scope: !6594)
!6598 = !DILocation(line: 903, column: 37, scope: !6594)
!6599 = !DILocation(line: 903, column: 57, scope: !6594)
!6600 = !DILocation(line: 903, column: 63, scope: !6594)
!6601 = !DILocation(line: 903, column: 62, scope: !6594)
!6602 = !DILocation(line: 903, column: 84, scope: !6594)
!6603 = !DILocation(line: 903, column: 91, scope: !6594)
!6604 = !DILocation(line: 903, column: 90, scope: !6594)
!6605 = !DILocation(line: 903, column: 87, scope: !6594)
!6606 = !DILocation(line: 903, column: 100, scope: !6594)
!6607 = !DILocation(line: 903, column: 99, scope: !6594)
!6608 = !DILocation(line: 903, column: 96, scope: !6594)
!6609 = !DILocation(line: 903, column: 76, scope: !6594)
!6610 = !DILocation(line: 903, column: 109, scope: !6594)
!6611 = !DILocation(line: 903, column: 131, scope: !6594)
!6612 = !DILocation(line: 903, column: 137, scope: !6594)
!6613 = !DILocation(line: 903, column: 10, scope: !6594)
!6614 = !DILocation(line: 903, column: 8, scope: !6594)
!6615 = !DILocation(line: 904, column: 17, scope: !6594)
!6616 = !DILocation(line: 904, column: 51, scope: !6594)
!6617 = !DILocation(line: 904, column: 58, scope: !6594)
!6618 = !DILocation(line: 904, column: 64, scope: !6594)
!6619 = !DILocation(line: 904, column: 56, scope: !6594)
!6620 = !DILocation(line: 904, column: 4, scope: !6594)
!6621 = !DILocation(line: 905, column: 3, scope: !6594)
!6622 = !DILocation(line: 902, column: 31, scope: !6590)
!6623 = !DILocation(line: 902, column: 3, scope: !6590)
!6624 = distinct !{!6624, !6592, !6625}
!6625 = !DILocation(line: 905, column: 3, scope: !6587)
!6626 = !DILocation(line: 906, column: 13, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6584, file: !1, line: 906, column: 3)
!6628 = !DILocation(line: 906, column: 8, scope: !6627)
!6629 = !DILocation(line: 906, column: 17, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6627, file: !1, line: 906, column: 3)
!6631 = !DILocation(line: 906, column: 22, scope: !6630)
!6632 = !DILocation(line: 906, column: 3, scope: !6627)
!6633 = !DILocation(line: 907, column: 23, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !1, line: 906, column: 35)
!6635 = !DILocation(line: 907, column: 40, scope: !6634)
!6636 = !DILocation(line: 907, column: 46, scope: !6634)
!6637 = !DILocation(line: 907, column: 45, scope: !6634)
!6638 = !DILocation(line: 907, column: 52, scope: !6634)
!6639 = !DILocation(line: 907, column: 37, scope: !6634)
!6640 = !DILocation(line: 907, column: 60, scope: !6634)
!6641 = !DILocation(line: 907, column: 66, scope: !6634)
!6642 = !DILocation(line: 907, column: 65, scope: !6634)
!6643 = !DILocation(line: 907, column: 72, scope: !6634)
!6644 = !DILocation(line: 907, column: 90, scope: !6634)
!6645 = !DILocation(line: 907, column: 97, scope: !6634)
!6646 = !DILocation(line: 907, column: 96, scope: !6634)
!6647 = !DILocation(line: 907, column: 93, scope: !6634)
!6648 = !DILocation(line: 907, column: 106, scope: !6634)
!6649 = !DILocation(line: 907, column: 105, scope: !6634)
!6650 = !DILocation(line: 907, column: 102, scope: !6634)
!6651 = !DILocation(line: 907, column: 82, scope: !6634)
!6652 = !DILocation(line: 907, column: 115, scope: !6634)
!6653 = !DILocation(line: 907, column: 118, scope: !6634)
!6654 = !DILocation(line: 907, column: 140, scope: !6634)
!6655 = !DILocation(line: 907, column: 146, scope: !6634)
!6656 = !DILocation(line: 907, column: 10, scope: !6634)
!6657 = !DILocation(line: 907, column: 8, scope: !6634)
!6658 = !DILocation(line: 908, column: 17, scope: !6634)
!6659 = !DILocation(line: 908, column: 51, scope: !6634)
!6660 = !DILocation(line: 908, column: 58, scope: !6634)
!6661 = !DILocation(line: 908, column: 64, scope: !6634)
!6662 = !DILocation(line: 908, column: 56, scope: !6634)
!6663 = !DILocation(line: 908, column: 4, scope: !6634)
!6664 = !DILocation(line: 909, column: 3, scope: !6634)
!6665 = !DILocation(line: 906, column: 31, scope: !6630)
!6666 = !DILocation(line: 906, column: 3, scope: !6630)
!6667 = distinct !{!6667, !6632, !6668}
!6668 = !DILocation(line: 909, column: 3, scope: !6627)
!6669 = !DILocation(line: 910, column: 2, scope: !6584)
!6670 = !DILocation(line: 900, column: 35, scope: !6580)
!6671 = !DILocation(line: 900, column: 2, scope: !6580)
!6672 = distinct !{!6672, !6582, !6673}
!6673 = !DILocation(line: 910, column: 2, scope: !6577)
!6674 = !DILocation(line: 911, column: 18, scope: !6548)
!6675 = !DILocation(line: 911, column: 2, scope: !6548)
!6676 = !DILocation(line: 913, column: 22, scope: !6548)
!6677 = !DILocation(line: 913, column: 2, scope: !6548)
!6678 = !DILocation(line: 914, column: 13, scope: !6548)
!6679 = !DILocation(line: 914, column: 16, scope: !6548)
!6680 = !DILocation(line: 914, column: 2, scope: !6548)
!6681 = !DILocation(line: 916, column: 9, scope: !6548)
!6682 = !DILocation(line: 916, column: 2, scope: !6548)
!6683 = distinct !DISubprogram(name: "controller_name", scope: !1, file: !1, line: 452, type: !6684, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!2732, !1085}
!6686 = !DILocalVariable(name: "type", arg: 1, scope: !6683, file: !1, line: 452, type: !1085)
!6687 = !DILocation(line: 452, column: 40, scope: !6683)
!6688 = !DILocation(line: 454, column: 10, scope: !6683)
!6689 = !DILocation(line: 454, column: 2, scope: !6683)
!6690 = !DILocation(line: 456, column: 3, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6683, file: !1, line: 454, column: 16)
!6692 = !DILocation(line: 458, column: 3, scope: !6691)
!6693 = !DILocation(line: 460, column: 3, scope: !6691)
!6694 = !DILocation(line: 462, column: 3, scope: !6691)
!6695 = !DILocation(line: 464, column: 3, scope: !6691)
!6696 = !DILocation(line: 466, column: 3, scope: !6691)
!6697 = !DILocation(line: 468, column: 3, scope: !6691)
!6698 = !DILocation(line: 470, column: 3, scope: !6691)
!6699 = !DILocation(line: 472, column: 2, scope: !6683)
!6700 = !DILocation(line: 473, column: 1, scope: !6683)
!6701 = distinct !DISubprogram(name: "check_controller_state_mask", scope: !1, file: !1, line: 877, type: !6702, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{null, !2686, !1054, !1054}
!6704 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !6701, file: !1, line: 877, type: !2686)
!6705 = !DILocation(line: 877, column: 51, scope: !6701)
!6706 = !DILocalVariable(name: "arg1_but", arg: 2, scope: !6701, file: !1, line: 877, type: !1054)
!6707 = !DILocation(line: 877, column: 68, scope: !6701)
!6708 = !DILocalVariable(name: "arg2_mask", arg: 3, scope: !6701, file: !1, line: 877, type: !1054)
!6709 = !DILocation(line: 877, column: 84, scope: !6701)
!6710 = !DILocalVariable(name: "cont_mask", scope: !6701, file: !1, line: 879, type: !1813)
!6711 = !DILocation(line: 879, column: 16, scope: !6701)
!6712 = !DILocation(line: 879, column: 28, scope: !6701)
!6713 = !DILocalVariable(name: "but", scope: !6701, file: !1, line: 880, type: !3922)
!6714 = !DILocation(line: 880, column: 9, scope: !6701)
!6715 = !DILocation(line: 880, column: 15, scope: !6701)
!6716 = !DILocation(line: 883, column: 19, scope: !6701)
!6717 = !DILocation(line: 883, column: 24, scope: !6701)
!6718 = !DILocation(line: 883, column: 17, scope: !6701)
!6719 = !DILocation(line: 883, column: 3, scope: !6701)
!6720 = !DILocation(line: 883, column: 13, scope: !6701)
!6721 = !DILocation(line: 884, column: 2, scope: !6701)
!6722 = !DILocation(line: 884, column: 7, scope: !6701)
!6723 = !DILocation(line: 884, column: 14, scope: !6701)
!6724 = !DILocation(line: 885, column: 1, scope: !6701)
!6725 = distinct !DISubprogram(name: "draw_controller_state", scope: !1, file: !1, line: 1378, type: !5812, scopeLine: 1379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6726 = !DILocalVariable(name: "UNUSED_layout", arg: 1, scope: !6725, file: !1, line: 1378, type: !3660)
!6727 = !DILocation(line: 1378, column: 45, scope: !6725)
!6728 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !6725, file: !1, line: 1378, type: !5688)
!6729 = !DILocation(line: 1378, column: 73, scope: !6725)
!6730 = !DILocation(line: 1381, column: 1, scope: !6725)
!6731 = distinct !DISubprogram(name: "draw_controller_expression", scope: !1, file: !1, line: 1357, type: !5812, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6732 = !DILocalVariable(name: "layout", arg: 1, scope: !6731, file: !1, line: 1357, type: !3660)
!6733 = !DILocation(line: 1357, column: 50, scope: !6731)
!6734 = !DILocalVariable(name: "ptr", arg: 2, scope: !6731, file: !1, line: 1357, type: !5688)
!6735 = !DILocation(line: 1357, column: 70, scope: !6731)
!6736 = !DILocation(line: 1359, column: 10, scope: !6731)
!6737 = !DILocation(line: 1359, column: 18, scope: !6731)
!6738 = !DILocation(line: 1359, column: 2, scope: !6731)
!6739 = !DILocation(line: 1360, column: 1, scope: !6731)
!6740 = distinct !DISubprogram(name: "draw_controller_python", scope: !1, file: !1, line: 1362, type: !5812, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6741 = !DILocalVariable(name: "layout", arg: 1, scope: !6740, file: !1, line: 1362, type: !3660)
!6742 = !DILocation(line: 1362, column: 46, scope: !6740)
!6743 = !DILocalVariable(name: "ptr", arg: 2, scope: !6740, file: !1, line: 1362, type: !5688)
!6744 = !DILocation(line: 1362, column: 66, scope: !6740)
!6745 = !DILocalVariable(name: "split", scope: !6740, file: !1, line: 1364, type: !3660)
!6746 = !DILocation(line: 1364, column: 12, scope: !6740)
!6747 = !DILocalVariable(name: "sub", scope: !6740, file: !1, line: 1364, type: !3660)
!6748 = !DILocation(line: 1364, column: 20, scope: !6740)
!6749 = !DILocation(line: 1366, column: 24, scope: !6740)
!6750 = !DILocation(line: 1366, column: 10, scope: !6740)
!6751 = !DILocation(line: 1366, column: 8, scope: !6740)
!6752 = !DILocation(line: 1367, column: 10, scope: !6740)
!6753 = !DILocation(line: 1367, column: 17, scope: !6740)
!6754 = !DILocation(line: 1367, column: 2, scope: !6740)
!6755 = !DILocation(line: 1368, column: 19, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6740, file: !1, line: 1368, column: 6)
!6757 = !DILocation(line: 1368, column: 6, scope: !6756)
!6758 = !DILocation(line: 1368, column: 32, scope: !6756)
!6759 = !DILocation(line: 1368, column: 6, scope: !6740)
!6760 = !DILocation(line: 1369, column: 11, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 1368, column: 51)
!6762 = !DILocation(line: 1369, column: 18, scope: !6761)
!6763 = !DILocation(line: 1369, column: 3, scope: !6761)
!6764 = !DILocation(line: 1370, column: 2, scope: !6761)
!6765 = !DILocation(line: 1372, column: 23, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 1371, column: 7)
!6767 = !DILocation(line: 1372, column: 9, scope: !6766)
!6768 = !DILocation(line: 1372, column: 7, scope: !6766)
!6769 = !DILocation(line: 1373, column: 11, scope: !6766)
!6770 = !DILocation(line: 1373, column: 16, scope: !6766)
!6771 = !DILocation(line: 1373, column: 3, scope: !6766)
!6772 = !DILocation(line: 1374, column: 11, scope: !6766)
!6773 = !DILocation(line: 1374, column: 16, scope: !6766)
!6774 = !DILocation(line: 1374, column: 3, scope: !6766)
!6775 = !DILocation(line: 1376, column: 1, scope: !6740)
!6776 = distinct !DISubprogram(name: "do_sensor_menu", scope: !1, file: !1, line: 730, type: !4936, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6777 = !DILocalVariable(name: "C", arg: 1, scope: !6776, file: !1, line: 730, type: !2686)
!6778 = !DILocation(line: 730, column: 38, scope: !6776)
!6779 = !DILocalVariable(name: "UNUSED_arg", arg: 2, scope: !6776, file: !1, line: 730, type: !1054)
!6780 = !DILocation(line: 730, column: 47, scope: !6776)
!6781 = !DILocalVariable(name: "event", arg: 3, scope: !6776, file: !1, line: 730, type: !1085)
!6782 = !DILocation(line: 730, column: 64, scope: !6776)
!6783 = !DILocalVariable(name: "slogic", scope: !6776, file: !1, line: 732, type: !3609)
!6784 = !DILocation(line: 732, column: 14, scope: !6776)
!6785 = !DILocation(line: 732, column: 41, scope: !6776)
!6786 = !DILocation(line: 732, column: 22, scope: !6776)
!6787 = !DILocalVariable(name: "idar", scope: !6776, file: !1, line: 733, type: !2720)
!6788 = !DILocation(line: 733, column: 7, scope: !6776)
!6789 = !DILocalVariable(name: "ob", scope: !6776, file: !1, line: 734, type: !1044)
!6790 = !DILocation(line: 734, column: 10, scope: !6776)
!6791 = !DILocalVariable(name: "sens", scope: !6776, file: !1, line: 735, type: !2648)
!6792 = !DILocation(line: 735, column: 11, scope: !6776)
!6793 = !DILocalVariable(name: "count", scope: !6776, file: !1, line: 736, type: !1083)
!6794 = !DILocation(line: 736, column: 8, scope: !6776)
!6795 = !DILocalVariable(name: "a", scope: !6776, file: !1, line: 736, type: !1083)
!6796 = !DILocation(line: 736, column: 15, scope: !6776)
!6797 = !DILocation(line: 738, column: 36, scope: !6776)
!6798 = !DILocation(line: 738, column: 47, scope: !6776)
!6799 = !DILocation(line: 738, column: 55, scope: !6776)
!6800 = !DILocation(line: 738, column: 8, scope: !6776)
!6801 = !DILocation(line: 738, column: 6, scope: !6776)
!6802 = !DILocation(line: 740, column: 8, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6776, file: !1, line: 740, column: 2)
!6804 = !DILocation(line: 740, column: 7, scope: !6803)
!6805 = !DILocation(line: 740, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6803, file: !1, line: 740, column: 2)
!6807 = !DILocation(line: 740, column: 14, scope: !6806)
!6808 = !DILocation(line: 740, column: 13, scope: !6806)
!6809 = !DILocation(line: 740, column: 2, scope: !6803)
!6810 = !DILocation(line: 741, column: 17, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !1, line: 740, column: 26)
!6812 = !DILocation(line: 741, column: 22, scope: !6811)
!6813 = !DILocation(line: 741, column: 7, scope: !6811)
!6814 = !DILocation(line: 741, column: 5, scope: !6811)
!6815 = !DILocation(line: 742, column: 7, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !1, line: 742, column: 7)
!6817 = !DILocation(line: 742, column: 12, scope: !6816)
!6818 = !DILocation(line: 742, column: 16, scope: !6816)
!6819 = !DILocation(line: 742, column: 19, scope: !6816)
!6820 = !DILocation(line: 742, column: 24, scope: !6816)
!6821 = !DILocation(line: 742, column: 7, scope: !6811)
!6822 = !DILocation(line: 742, column: 29, scope: !6816)
!6823 = !DILocation(line: 742, column: 33, scope: !6816)
!6824 = !DILocation(line: 742, column: 41, scope: !6816)
!6825 = !DILocation(line: 743, column: 12, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 743, column: 12)
!6827 = !DILocation(line: 743, column: 17, scope: !6826)
!6828 = !DILocation(line: 743, column: 12, scope: !6816)
!6829 = !DILocation(line: 743, column: 22, scope: !6826)
!6830 = !DILocation(line: 743, column: 26, scope: !6826)
!6831 = !DILocation(line: 743, column: 34, scope: !6826)
!6832 = !DILocation(line: 744, column: 2, scope: !6811)
!6833 = !DILocation(line: 740, column: 22, scope: !6806)
!6834 = !DILocation(line: 740, column: 2, scope: !6806)
!6835 = distinct !{!6835, !6809, !6836}
!6836 = !DILocation(line: 744, column: 2, scope: !6803)
!6837 = !DILocation(line: 746, column: 8, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6776, file: !1, line: 746, column: 2)
!6839 = !DILocation(line: 746, column: 7, scope: !6838)
!6840 = !DILocation(line: 746, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 746, column: 2)
!6842 = !DILocation(line: 746, column: 14, scope: !6841)
!6843 = !DILocation(line: 746, column: 13, scope: !6841)
!6844 = !DILocation(line: 746, column: 2, scope: !6838)
!6845 = !DILocation(line: 747, column: 17, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6841, file: !1, line: 746, column: 26)
!6847 = !DILocation(line: 747, column: 22, scope: !6846)
!6848 = !DILocation(line: 747, column: 7, scope: !6846)
!6849 = !DILocation(line: 747, column: 5, scope: !6846)
!6850 = !DILocation(line: 748, column: 9, scope: !6846)
!6851 = !DILocation(line: 748, column: 13, scope: !6846)
!6852 = !DILocation(line: 748, column: 21, scope: !6846)
!6853 = !DILocation(line: 748, column: 7, scope: !6846)
!6854 = !DILocation(line: 749, column: 3, scope: !6846)
!6855 = !DILocation(line: 749, column: 10, scope: !6846)
!6856 = !DILocation(line: 750, column: 8, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !1, line: 750, column: 8)
!6858 = distinct !DILexicalBlock(scope: !6846, file: !1, line: 749, column: 16)
!6859 = !DILocation(line: 750, column: 13, scope: !6857)
!6860 = !DILocation(line: 750, column: 8, scope: !6858)
!6861 = !DILocation(line: 750, column: 18, scope: !6857)
!6862 = !DILocation(line: 750, column: 24, scope: !6857)
!6863 = !DILocation(line: 750, column: 29, scope: !6857)
!6864 = !DILocation(line: 751, column: 13, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6857, file: !1, line: 751, column: 13)
!6866 = !DILocation(line: 751, column: 18, scope: !6865)
!6867 = !DILocation(line: 751, column: 13, scope: !6857)
!6868 = !DILocation(line: 751, column: 23, scope: !6865)
!6869 = !DILocation(line: 751, column: 29, scope: !6865)
!6870 = !DILocation(line: 751, column: 34, scope: !6865)
!6871 = !DILocation(line: 752, column: 10, scope: !6858)
!6872 = !DILocation(line: 752, column: 16, scope: !6858)
!6873 = !DILocation(line: 752, column: 8, scope: !6858)
!6874 = distinct !{!6874, !6854, !6875}
!6875 = !DILocation(line: 753, column: 3, scope: !6846)
!6876 = !DILocation(line: 754, column: 2, scope: !6846)
!6877 = !DILocation(line: 746, column: 22, scope: !6841)
!6878 = !DILocation(line: 746, column: 2, scope: !6841)
!6879 = distinct !{!6879, !6844, !6880}
!6880 = !DILocation(line: 754, column: 2, scope: !6838)
!6881 = !DILocation(line: 756, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6776, file: !1, line: 756, column: 6)
!6883 = !DILocation(line: 756, column: 6, scope: !6776)
!6884 = !DILocation(line: 756, column: 12, scope: !6882)
!6885 = !DILocation(line: 756, column: 22, scope: !6882)
!6886 = !DILocation(line: 757, column: 1, scope: !6776)
!6887 = distinct !DISubprogram(name: "sensor_name", scope: !1, file: !1, line: 417, type: !6684, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6888 = !DILocalVariable(name: "type", arg: 1, scope: !6887, file: !1, line: 417, type: !1085)
!6889 = !DILocation(line: 417, column: 36, scope: !6887)
!6890 = !DILocation(line: 419, column: 10, scope: !6887)
!6891 = !DILocation(line: 419, column: 2, scope: !6887)
!6892 = !DILocation(line: 421, column: 3, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6887, file: !1, line: 419, column: 16)
!6894 = !DILocation(line: 423, column: 3, scope: !6893)
!6895 = !DILocation(line: 425, column: 3, scope: !6893)
!6896 = !DILocation(line: 427, column: 3, scope: !6893)
!6897 = !DILocation(line: 429, column: 3, scope: !6893)
!6898 = !DILocation(line: 431, column: 3, scope: !6893)
!6899 = !DILocation(line: 433, column: 3, scope: !6893)
!6900 = !DILocation(line: 435, column: 3, scope: !6893)
!6901 = !DILocation(line: 437, column: 3, scope: !6893)
!6902 = !DILocation(line: 439, column: 3, scope: !6893)
!6903 = !DILocation(line: 441, column: 3, scope: !6893)
!6904 = !DILocation(line: 443, column: 3, scope: !6893)
!6905 = !DILocation(line: 445, column: 3, scope: !6893)
!6906 = !DILocation(line: 447, column: 3, scope: !6893)
!6907 = !DILocation(line: 449, column: 2, scope: !6887)
!6908 = !DILocation(line: 450, column: 1, scope: !6887)
!6909 = distinct !DISubprogram(name: "draw_sensor_internal_header", scope: !1, file: !1, line: 975, type: !5812, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6910 = !DILocalVariable(name: "layout", arg: 1, scope: !6909, file: !1, line: 975, type: !3660)
!6911 = !DILocation(line: 975, column: 51, scope: !6909)
!6912 = !DILocalVariable(name: "ptr", arg: 2, scope: !6909, file: !1, line: 975, type: !5688)
!6913 = !DILocation(line: 975, column: 71, scope: !6909)
!6914 = !DILocalVariable(name: "box", scope: !6909, file: !1, line: 977, type: !3660)
!6915 = !DILocation(line: 977, column: 12, scope: !6909)
!6916 = !DILocalVariable(name: "split", scope: !6909, file: !1, line: 977, type: !3660)
!6917 = !DILocation(line: 977, column: 18, scope: !6909)
!6918 = !DILocalVariable(name: "sub", scope: !6909, file: !1, line: 977, type: !3660)
!6919 = !DILocation(line: 977, column: 26, scope: !6909)
!6920 = !DILocalVariable(name: "row", scope: !6909, file: !1, line: 977, type: !3660)
!6921 = !DILocation(line: 977, column: 32, scope: !6909)
!6922 = !DILocation(line: 979, column: 20, scope: !6909)
!6923 = !DILocation(line: 979, column: 8, scope: !6909)
!6924 = !DILocation(line: 979, column: 6, scope: !6909)
!6925 = !DILocation(line: 980, column: 20, scope: !6909)
!6926 = !DILocation(line: 980, column: 41, scope: !6909)
!6927 = !DILocation(line: 980, column: 25, scope: !6909)
!6928 = !DILocation(line: 980, column: 2, scope: !6909)
!6929 = !DILocation(line: 981, column: 24, scope: !6909)
!6930 = !DILocation(line: 981, column: 10, scope: !6909)
!6931 = !DILocation(line: 981, column: 8, scope: !6909)
!6932 = !DILocation(line: 983, column: 20, scope: !6909)
!6933 = !DILocation(line: 983, column: 8, scope: !6909)
!6934 = !DILocation(line: 983, column: 6, scope: !6909)
!6935 = !DILocation(line: 984, column: 10, scope: !6909)
!6936 = !DILocation(line: 984, column: 15, scope: !6909)
!6937 = !DILocation(line: 984, column: 2, scope: !6909)
!6938 = !DILocation(line: 985, column: 10, scope: !6909)
!6939 = !DILocation(line: 985, column: 15, scope: !6909)
!6940 = !DILocation(line: 985, column: 2, scope: !6909)
!6941 = !DILocation(line: 987, column: 20, scope: !6909)
!6942 = !DILocation(line: 987, column: 8, scope: !6909)
!6943 = !DILocation(line: 987, column: 6, scope: !6909)
!6944 = !DILocation(line: 988, column: 20, scope: !6909)
!6945 = !DILocation(line: 988, column: 42, scope: !6909)
!6946 = !DILocation(line: 988, column: 26, scope: !6909)
!6947 = !DILocation(line: 988, column: 71, scope: !6909)
!6948 = !DILocation(line: 989, column: 42, scope: !6909)
!6949 = !DILocation(line: 989, column: 26, scope: !6909)
!6950 = !DILocation(line: 988, column: 25, scope: !6909)
!6951 = !DILocation(line: 988, column: 2, scope: !6909)
!6952 = !DILocation(line: 990, column: 10, scope: !6909)
!6953 = !DILocation(line: 990, column: 15, scope: !6909)
!6954 = !DILocation(line: 990, column: 2, scope: !6909)
!6955 = !DILocation(line: 992, column: 20, scope: !6909)
!6956 = !DILocation(line: 992, column: 8, scope: !6909)
!6957 = !DILocation(line: 992, column: 6, scope: !6909)
!6958 = !DILocation(line: 993, column: 10, scope: !6909)
!6959 = !DILocation(line: 993, column: 15, scope: !6909)
!6960 = !DILocation(line: 993, column: 2, scope: !6909)
!6961 = !DILocation(line: 994, column: 10, scope: !6909)
!6962 = !DILocation(line: 994, column: 15, scope: !6909)
!6963 = !DILocation(line: 994, column: 2, scope: !6909)
!6964 = !DILocation(line: 996, column: 10, scope: !6909)
!6965 = !DILocation(line: 996, column: 17, scope: !6909)
!6966 = !DILocation(line: 996, column: 2, scope: !6909)
!6967 = !DILocation(line: 997, column: 1, scope: !6909)
!6968 = distinct !DISubprogram(name: "draw_sensor_actuator", scope: !1, file: !1, line: 1000, type: !5812, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6969 = !DILocalVariable(name: "layout", arg: 1, scope: !6968, file: !1, line: 1000, type: !3660)
!6970 = !DILocation(line: 1000, column: 44, scope: !6968)
!6971 = !DILocalVariable(name: "ptr", arg: 2, scope: !6968, file: !1, line: 1000, type: !5688)
!6972 = !DILocation(line: 1000, column: 64, scope: !6968)
!6973 = !DILocalVariable(name: "ob", scope: !6968, file: !1, line: 1002, type: !1044)
!6974 = !DILocation(line: 1002, column: 10, scope: !6968)
!6975 = !DILocation(line: 1002, column: 25, scope: !6968)
!6976 = !DILocation(line: 1002, column: 30, scope: !6968)
!6977 = !DILocation(line: 1002, column: 33, scope: !6968)
!6978 = !DILocation(line: 1002, column: 15, scope: !6968)
!6979 = !DILocalVariable(name: "settings_ptr", scope: !6968, file: !1, line: 1003, type: !3645)
!6980 = !DILocation(line: 1003, column: 13, scope: !6968)
!6981 = !DILocation(line: 1005, column: 27, scope: !6968)
!6982 = !DILocation(line: 1005, column: 21, scope: !6968)
!6983 = !DILocation(line: 1005, column: 56, scope: !6968)
!6984 = !DILocation(line: 1005, column: 2, scope: !6968)
!6985 = !DILocation(line: 1006, column: 17, scope: !6968)
!6986 = !DILocation(line: 1006, column: 25, scope: !6968)
!6987 = !DILocation(line: 1006, column: 2, scope: !6968)
!6988 = !DILocation(line: 1007, column: 1, scope: !6968)
!6989 = distinct !DISubprogram(name: "draw_sensor_armature", scope: !1, file: !1, line: 1009, type: !5812, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!6990 = !DILocalVariable(name: "layout", arg: 1, scope: !6989, file: !1, line: 1009, type: !3660)
!6991 = !DILocation(line: 1009, column: 44, scope: !6989)
!6992 = !DILocalVariable(name: "ptr", arg: 2, scope: !6989, file: !1, line: 1009, type: !5688)
!6993 = !DILocation(line: 1009, column: 64, scope: !6989)
!6994 = !DILocalVariable(name: "sens", scope: !6989, file: !1, line: 1011, type: !2648)
!6995 = !DILocation(line: 1011, column: 11, scope: !6989)
!6996 = !DILocation(line: 1011, column: 29, scope: !6989)
!6997 = !DILocation(line: 1011, column: 34, scope: !6989)
!6998 = !DILocation(line: 1011, column: 18, scope: !6989)
!6999 = !DILocalVariable(name: "as", scope: !6989, file: !1, line: 1012, type: !2650)
!7000 = !DILocation(line: 1012, column: 19, scope: !6989)
!7001 = !DILocation(line: 1012, column: 44, scope: !6989)
!7002 = !DILocation(line: 1012, column: 50, scope: !6989)
!7003 = !DILocation(line: 1012, column: 24, scope: !6989)
!7004 = !DILocalVariable(name: "ob", scope: !6989, file: !1, line: 1013, type: !1044)
!7005 = !DILocation(line: 1013, column: 10, scope: !6989)
!7006 = !DILocation(line: 1013, column: 25, scope: !6989)
!7007 = !DILocation(line: 1013, column: 30, scope: !6989)
!7008 = !DILocation(line: 1013, column: 33, scope: !6989)
!7009 = !DILocation(line: 1013, column: 15, scope: !6989)
!7010 = !DILocalVariable(name: "row", scope: !6989, file: !1, line: 1014, type: !3660)
!7011 = !DILocation(line: 1014, column: 12, scope: !6989)
!7012 = !DILocation(line: 1016, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6989, file: !1, line: 1016, column: 6)
!7014 = !DILocation(line: 1016, column: 10, scope: !7013)
!7015 = !DILocation(line: 1016, column: 15, scope: !7013)
!7016 = !DILocation(line: 1016, column: 6, scope: !6989)
!7017 = !DILocation(line: 1017, column: 11, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !1, line: 1016, column: 31)
!7019 = !DILocation(line: 1017, column: 3, scope: !7018)
!7020 = !DILocation(line: 1018, column: 3, scope: !7018)
!7021 = !DILocation(line: 1021, column: 6, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6989, file: !1, line: 1021, column: 6)
!7023 = !DILocation(line: 1021, column: 10, scope: !7022)
!7024 = !DILocation(line: 1021, column: 6, scope: !6989)
!7025 = !DILocalVariable(name: "pose_ptr", scope: !7026, file: !1, line: 1022, type: !3645)
!7026 = distinct !DILexicalBlock(scope: !7022, file: !1, line: 1021, column: 16)
!7027 = !DILocation(line: 1022, column: 14, scope: !7026)
!7028 = !DILocalVariable(name: "pchan_ptr", scope: !7026, file: !1, line: 1022, type: !3645)
!7029 = !DILocation(line: 1022, column: 24, scope: !7026)
!7030 = !DILocalVariable(name: "bones_prop", scope: !7026, file: !1, line: 1023, type: !7031)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !2690, line: 333, baseType: !4029)
!7033 = !DILocation(line: 1023, column: 16, scope: !7026)
!7034 = !DILocation(line: 1025, column: 28, scope: !7026)
!7035 = !DILocation(line: 1025, column: 22, scope: !7026)
!7036 = !DILocation(line: 1025, column: 43, scope: !7026)
!7037 = !DILocation(line: 1025, column: 47, scope: !7026)
!7038 = !DILocation(line: 1025, column: 3, scope: !7026)
!7039 = !DILocation(line: 1026, column: 16, scope: !7026)
!7040 = !DILocation(line: 1026, column: 14, scope: !7026)
!7041 = !DILocation(line: 1028, column: 18, scope: !7026)
!7042 = !DILocation(line: 1028, column: 26, scope: !7026)
!7043 = !DILocation(line: 1028, column: 3, scope: !7026)
!7044 = !DILocation(line: 1030, column: 56, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7026, file: !1, line: 1030, column: 7)
!7046 = !DILocation(line: 1030, column: 68, scope: !7045)
!7047 = !DILocation(line: 1030, column: 72, scope: !7045)
!7048 = !DILocation(line: 1030, column: 7, scope: !7045)
!7049 = !DILocation(line: 1030, column: 7, scope: !7026)
!7050 = !DILocation(line: 1031, column: 19, scope: !7045)
!7051 = !DILocation(line: 1031, column: 27, scope: !7045)
!7052 = !DILocation(line: 1031, column: 4, scope: !7045)
!7053 = !DILocation(line: 1032, column: 2, scope: !7026)
!7054 = !DILocation(line: 1033, column: 20, scope: !6989)
!7055 = !DILocation(line: 1033, column: 8, scope: !6989)
!7056 = !DILocation(line: 1033, column: 6, scope: !6989)
!7057 = !DILocation(line: 1034, column: 10, scope: !6989)
!7058 = !DILocation(line: 1034, column: 15, scope: !6989)
!7059 = !DILocation(line: 1034, column: 2, scope: !6989)
!7060 = !DILocation(line: 1035, column: 19, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !6989, file: !1, line: 1035, column: 6)
!7062 = !DILocation(line: 1035, column: 6, scope: !7061)
!7063 = !DILocation(line: 1035, column: 37, scope: !7061)
!7064 = !DILocation(line: 1035, column: 6, scope: !6989)
!7065 = !DILocation(line: 1036, column: 11, scope: !7061)
!7066 = !DILocation(line: 1036, column: 16, scope: !7061)
!7067 = !DILocation(line: 1036, column: 3, scope: !7061)
!7068 = !DILocation(line: 1037, column: 1, scope: !6989)
!7069 = distinct !DISubprogram(name: "draw_sensor_collision", scope: !1, file: !1, line: 1039, type: !6049, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7070 = !DILocalVariable(name: "layout", arg: 1, scope: !7069, file: !1, line: 1039, type: !3660)
!7071 = !DILocation(line: 1039, column: 45, scope: !7069)
!7072 = !DILocalVariable(name: "ptr", arg: 2, scope: !7069, file: !1, line: 1039, type: !5688)
!7073 = !DILocation(line: 1039, column: 65, scope: !7069)
!7074 = !DILocalVariable(name: "C", arg: 3, scope: !7069, file: !1, line: 1039, type: !2686)
!7075 = !DILocation(line: 1039, column: 80, scope: !7069)
!7076 = !DILocalVariable(name: "row", scope: !7069, file: !1, line: 1041, type: !3660)
!7077 = !DILocation(line: 1041, column: 12, scope: !7069)
!7078 = !DILocalVariable(name: "split", scope: !7069, file: !1, line: 1041, type: !3660)
!7079 = !DILocation(line: 1041, column: 18, scope: !7069)
!7080 = !DILocalVariable(name: "main_ptr", scope: !7069, file: !1, line: 1042, type: !3645)
!7081 = !DILocation(line: 1042, column: 13, scope: !7069)
!7082 = !DILocation(line: 1044, column: 40, scope: !7069)
!7083 = !DILocation(line: 1044, column: 26, scope: !7069)
!7084 = !DILocation(line: 1044, column: 2, scope: !7069)
!7085 = !DILocation(line: 1046, column: 24, scope: !7069)
!7086 = !DILocation(line: 1046, column: 10, scope: !7069)
!7087 = !DILocation(line: 1046, column: 8, scope: !7069)
!7088 = !DILocation(line: 1047, column: 20, scope: !7069)
!7089 = !DILocation(line: 1047, column: 8, scope: !7069)
!7090 = !DILocation(line: 1047, column: 6, scope: !7069)
!7091 = !DILocation(line: 1048, column: 10, scope: !7069)
!7092 = !DILocation(line: 1048, column: 15, scope: !7069)
!7093 = !DILocation(line: 1048, column: 2, scope: !7069)
!7094 = !DILocation(line: 1049, column: 10, scope: !7069)
!7095 = !DILocation(line: 1049, column: 15, scope: !7069)
!7096 = !DILocation(line: 1049, column: 2, scope: !7069)
!7097 = !DILocation(line: 1051, column: 26, scope: !7069)
!7098 = !DILocation(line: 1051, column: 10, scope: !7069)
!7099 = !DILocation(line: 1051, column: 2, scope: !7069)
!7100 = !DILocation(line: 1053, column: 12, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7069, file: !1, line: 1051, column: 48)
!7102 = !DILocation(line: 1053, column: 19, scope: !7101)
!7103 = !DILocation(line: 1053, column: 4, scope: !7101)
!7104 = !DILocation(line: 1054, column: 4, scope: !7101)
!7105 = !DILocation(line: 1056, column: 19, scope: !7101)
!7106 = !DILocation(line: 1056, column: 26, scope: !7101)
!7107 = !DILocation(line: 1056, column: 4, scope: !7101)
!7108 = !DILocation(line: 1057, column: 4, scope: !7101)
!7109 = !DILocation(line: 1059, column: 1, scope: !7069)
!7110 = distinct !DISubprogram(name: "draw_sensor_delay", scope: !1, file: !1, line: 1061, type: !5812, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7111 = !DILocalVariable(name: "layout", arg: 1, scope: !7110, file: !1, line: 1061, type: !3660)
!7112 = !DILocation(line: 1061, column: 41, scope: !7110)
!7113 = !DILocalVariable(name: "ptr", arg: 2, scope: !7110, file: !1, line: 1061, type: !5688)
!7114 = !DILocation(line: 1061, column: 61, scope: !7110)
!7115 = !DILocalVariable(name: "row", scope: !7110, file: !1, line: 1063, type: !3660)
!7116 = !DILocation(line: 1063, column: 12, scope: !7110)
!7117 = !DILocation(line: 1065, column: 20, scope: !7110)
!7118 = !DILocation(line: 1065, column: 8, scope: !7110)
!7119 = !DILocation(line: 1065, column: 6, scope: !7110)
!7120 = !DILocation(line: 1067, column: 10, scope: !7110)
!7121 = !DILocation(line: 1067, column: 15, scope: !7110)
!7122 = !DILocation(line: 1067, column: 2, scope: !7110)
!7123 = !DILocation(line: 1068, column: 10, scope: !7110)
!7124 = !DILocation(line: 1068, column: 15, scope: !7110)
!7125 = !DILocation(line: 1068, column: 2, scope: !7110)
!7126 = !DILocation(line: 1069, column: 10, scope: !7110)
!7127 = !DILocation(line: 1069, column: 15, scope: !7110)
!7128 = !DILocation(line: 1069, column: 2, scope: !7110)
!7129 = !DILocation(line: 1070, column: 1, scope: !7110)
!7130 = distinct !DISubprogram(name: "draw_sensor_joystick", scope: !1, file: !1, line: 1072, type: !5812, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7131 = !DILocalVariable(name: "layout", arg: 1, scope: !7130, file: !1, line: 1072, type: !3660)
!7132 = !DILocation(line: 1072, column: 44, scope: !7130)
!7133 = !DILocalVariable(name: "ptr", arg: 2, scope: !7130, file: !1, line: 1072, type: !5688)
!7134 = !DILocation(line: 1072, column: 64, scope: !7130)
!7135 = !DILocalVariable(name: "col", scope: !7130, file: !1, line: 1074, type: !3660)
!7136 = !DILocation(line: 1074, column: 12, scope: !7130)
!7137 = !DILocalVariable(name: "row", scope: !7130, file: !1, line: 1074, type: !3660)
!7138 = !DILocation(line: 1074, column: 18, scope: !7130)
!7139 = !DILocation(line: 1076, column: 10, scope: !7130)
!7140 = !DILocation(line: 1076, column: 18, scope: !7130)
!7141 = !DILocation(line: 1076, column: 2, scope: !7130)
!7142 = !DILocation(line: 1077, column: 10, scope: !7130)
!7143 = !DILocation(line: 1077, column: 18, scope: !7130)
!7144 = !DILocation(line: 1077, column: 2, scope: !7130)
!7145 = !DILocation(line: 1079, column: 23, scope: !7130)
!7146 = !DILocation(line: 1079, column: 10, scope: !7130)
!7147 = !DILocation(line: 1079, column: 2, scope: !7130)
!7148 = !DILocation(line: 1081, column: 12, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7130, file: !1, line: 1079, column: 43)
!7150 = !DILocation(line: 1081, column: 20, scope: !7149)
!7151 = !DILocation(line: 1081, column: 4, scope: !7149)
!7152 = !DILocation(line: 1083, column: 25, scope: !7149)
!7153 = !DILocation(line: 1083, column: 10, scope: !7149)
!7154 = !DILocation(line: 1083, column: 8, scope: !7149)
!7155 = !DILocation(line: 1084, column: 22, scope: !7149)
!7156 = !DILocation(line: 1084, column: 43, scope: !7149)
!7157 = !DILocation(line: 1084, column: 27, scope: !7149)
!7158 = !DILocation(line: 1084, column: 66, scope: !7149)
!7159 = !DILocation(line: 1084, column: 4, scope: !7149)
!7160 = !DILocation(line: 1085, column: 12, scope: !7149)
!7161 = !DILocation(line: 1085, column: 17, scope: !7149)
!7162 = !DILocation(line: 1085, column: 4, scope: !7149)
!7163 = !DILocation(line: 1086, column: 4, scope: !7149)
!7164 = !DILocation(line: 1088, column: 22, scope: !7149)
!7165 = !DILocation(line: 1088, column: 10, scope: !7149)
!7166 = !DILocation(line: 1088, column: 8, scope: !7149)
!7167 = !DILocation(line: 1089, column: 12, scope: !7149)
!7168 = !DILocation(line: 1089, column: 17, scope: !7149)
!7169 = !DILocation(line: 1089, column: 4, scope: !7149)
!7170 = !DILocation(line: 1090, column: 12, scope: !7149)
!7171 = !DILocation(line: 1090, column: 17, scope: !7149)
!7172 = !DILocation(line: 1090, column: 4, scope: !7149)
!7173 = !DILocation(line: 1092, column: 12, scope: !7149)
!7174 = !DILocation(line: 1092, column: 20, scope: !7149)
!7175 = !DILocation(line: 1092, column: 4, scope: !7149)
!7176 = !DILocation(line: 1093, column: 25, scope: !7149)
!7177 = !DILocation(line: 1093, column: 10, scope: !7149)
!7178 = !DILocation(line: 1093, column: 8, scope: !7149)
!7179 = !DILocation(line: 1094, column: 22, scope: !7149)
!7180 = !DILocation(line: 1094, column: 43, scope: !7149)
!7181 = !DILocation(line: 1094, column: 27, scope: !7149)
!7182 = !DILocation(line: 1094, column: 66, scope: !7149)
!7183 = !DILocation(line: 1094, column: 4, scope: !7149)
!7184 = !DILocation(line: 1095, column: 12, scope: !7149)
!7185 = !DILocation(line: 1095, column: 17, scope: !7149)
!7186 = !DILocation(line: 1095, column: 4, scope: !7149)
!7187 = !DILocation(line: 1096, column: 4, scope: !7149)
!7188 = !DILocation(line: 1098, column: 12, scope: !7149)
!7189 = !DILocation(line: 1098, column: 20, scope: !7149)
!7190 = !DILocation(line: 1098, column: 4, scope: !7149)
!7191 = !DILocation(line: 1099, column: 12, scope: !7149)
!7192 = !DILocation(line: 1099, column: 20, scope: !7149)
!7193 = !DILocation(line: 1099, column: 4, scope: !7149)
!7194 = !DILocation(line: 1101, column: 25, scope: !7149)
!7195 = !DILocation(line: 1101, column: 10, scope: !7149)
!7196 = !DILocation(line: 1101, column: 8, scope: !7149)
!7197 = !DILocation(line: 1102, column: 22, scope: !7149)
!7198 = !DILocation(line: 1102, column: 43, scope: !7149)
!7199 = !DILocation(line: 1102, column: 27, scope: !7149)
!7200 = !DILocation(line: 1102, column: 66, scope: !7149)
!7201 = !DILocation(line: 1102, column: 4, scope: !7149)
!7202 = !DILocation(line: 1103, column: 12, scope: !7149)
!7203 = !DILocation(line: 1103, column: 17, scope: !7149)
!7204 = !DILocation(line: 1103, column: 4, scope: !7149)
!7205 = !DILocation(line: 1104, column: 4, scope: !7149)
!7206 = !DILocation(line: 1106, column: 22, scope: !7149)
!7207 = !DILocation(line: 1106, column: 10, scope: !7149)
!7208 = !DILocation(line: 1106, column: 8, scope: !7149)
!7209 = !DILocation(line: 1107, column: 12, scope: !7149)
!7210 = !DILocation(line: 1107, column: 17, scope: !7149)
!7211 = !DILocation(line: 1107, column: 4, scope: !7149)
!7212 = !DILocation(line: 1108, column: 12, scope: !7149)
!7213 = !DILocation(line: 1108, column: 17, scope: !7149)
!7214 = !DILocation(line: 1108, column: 4, scope: !7149)
!7215 = !DILocation(line: 1109, column: 4, scope: !7149)
!7216 = !DILocation(line: 1111, column: 1, scope: !7130)
!7217 = distinct !DISubprogram(name: "draw_sensor_keyboard", scope: !1, file: !1, line: 1113, type: !5812, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7218 = !DILocalVariable(name: "layout", arg: 1, scope: !7217, file: !1, line: 1113, type: !3660)
!7219 = !DILocation(line: 1113, column: 44, scope: !7217)
!7220 = !DILocalVariable(name: "ptr", arg: 2, scope: !7217, file: !1, line: 1113, type: !5688)
!7221 = !DILocation(line: 1113, column: 64, scope: !7217)
!7222 = !DILocalVariable(name: "ob", scope: !7217, file: !1, line: 1115, type: !1044)
!7223 = !DILocation(line: 1115, column: 10, scope: !7217)
!7224 = !DILocation(line: 1115, column: 25, scope: !7217)
!7225 = !DILocation(line: 1115, column: 30, scope: !7217)
!7226 = !DILocation(line: 1115, column: 33, scope: !7217)
!7227 = !DILocation(line: 1115, column: 15, scope: !7217)
!7228 = !DILocalVariable(name: "settings_ptr", scope: !7217, file: !1, line: 1116, type: !3645)
!7229 = !DILocation(line: 1116, column: 13, scope: !7217)
!7230 = !DILocalVariable(name: "row", scope: !7217, file: !1, line: 1117, type: !3660)
!7231 = !DILocation(line: 1117, column: 12, scope: !7217)
!7232 = !DILocalVariable(name: "col", scope: !7217, file: !1, line: 1117, type: !3660)
!7233 = !DILocation(line: 1117, column: 18, scope: !7217)
!7234 = !DILocation(line: 1119, column: 20, scope: !7217)
!7235 = !DILocation(line: 1119, column: 8, scope: !7217)
!7236 = !DILocation(line: 1119, column: 6, scope: !7217)
!7237 = !DILocation(line: 1120, column: 10, scope: !7217)
!7238 = !DILocation(line: 1120, column: 2, scope: !7217)
!7239 = !DILocation(line: 1121, column: 23, scope: !7217)
!7240 = !DILocation(line: 1121, column: 8, scope: !7217)
!7241 = !DILocation(line: 1121, column: 6, scope: !7217)
!7242 = !DILocation(line: 1122, column: 20, scope: !7217)
!7243 = !DILocation(line: 1122, column: 41, scope: !7217)
!7244 = !DILocation(line: 1122, column: 25, scope: !7217)
!7245 = !DILocation(line: 1122, column: 62, scope: !7217)
!7246 = !DILocation(line: 1122, column: 2, scope: !7217)
!7247 = !DILocation(line: 1123, column: 10, scope: !7217)
!7248 = !DILocation(line: 1123, column: 15, scope: !7217)
!7249 = !DILocation(line: 1123, column: 2, scope: !7217)
!7250 = !DILocation(line: 1124, column: 23, scope: !7217)
!7251 = !DILocation(line: 1124, column: 8, scope: !7217)
!7252 = !DILocation(line: 1124, column: 6, scope: !7217)
!7253 = !DILocation(line: 1125, column: 10, scope: !7217)
!7254 = !DILocation(line: 1125, column: 15, scope: !7217)
!7255 = !DILocation(line: 1125, column: 2, scope: !7217)
!7256 = !DILocation(line: 1127, column: 23, scope: !7217)
!7257 = !DILocation(line: 1127, column: 8, scope: !7217)
!7258 = !DILocation(line: 1127, column: 6, scope: !7217)
!7259 = !DILocation(line: 1128, column: 20, scope: !7217)
!7260 = !DILocation(line: 1128, column: 41, scope: !7217)
!7261 = !DILocation(line: 1128, column: 25, scope: !7217)
!7262 = !DILocation(line: 1128, column: 62, scope: !7217)
!7263 = !DILocation(line: 1128, column: 2, scope: !7217)
!7264 = !DILocation(line: 1129, column: 20, scope: !7217)
!7265 = !DILocation(line: 1129, column: 8, scope: !7217)
!7266 = !DILocation(line: 1129, column: 6, scope: !7217)
!7267 = !DILocation(line: 1130, column: 10, scope: !7217)
!7268 = !DILocation(line: 1130, column: 2, scope: !7217)
!7269 = !DILocation(line: 1131, column: 10, scope: !7217)
!7270 = !DILocation(line: 1131, column: 15, scope: !7217)
!7271 = !DILocation(line: 1131, column: 2, scope: !7217)
!7272 = !DILocation(line: 1133, column: 20, scope: !7217)
!7273 = !DILocation(line: 1133, column: 8, scope: !7217)
!7274 = !DILocation(line: 1133, column: 6, scope: !7217)
!7275 = !DILocation(line: 1134, column: 10, scope: !7217)
!7276 = !DILocation(line: 1134, column: 2, scope: !7217)
!7277 = !DILocation(line: 1135, column: 10, scope: !7217)
!7278 = !DILocation(line: 1135, column: 15, scope: !7217)
!7279 = !DILocation(line: 1135, column: 2, scope: !7217)
!7280 = !DILocation(line: 1137, column: 27, scope: !7217)
!7281 = !DILocation(line: 1137, column: 21, scope: !7217)
!7282 = !DILocation(line: 1137, column: 56, scope: !7217)
!7283 = !DILocation(line: 1137, column: 2, scope: !7217)
!7284 = !DILocation(line: 1138, column: 17, scope: !7217)
!7285 = !DILocation(line: 1138, column: 25, scope: !7217)
!7286 = !DILocation(line: 1138, column: 2, scope: !7217)
!7287 = !DILocation(line: 1139, column: 17, scope: !7217)
!7288 = !DILocation(line: 1139, column: 25, scope: !7217)
!7289 = !DILocation(line: 1139, column: 2, scope: !7217)
!7290 = !DILocation(line: 1140, column: 1, scope: !7217)
!7291 = distinct !DISubprogram(name: "draw_sensor_message", scope: !1, file: !1, line: 1142, type: !5812, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7292 = !DILocalVariable(name: "layout", arg: 1, scope: !7291, file: !1, line: 1142, type: !3660)
!7293 = !DILocation(line: 1142, column: 43, scope: !7291)
!7294 = !DILocalVariable(name: "ptr", arg: 2, scope: !7291, file: !1, line: 1142, type: !5688)
!7295 = !DILocation(line: 1142, column: 63, scope: !7291)
!7296 = !DILocation(line: 1144, column: 10, scope: !7291)
!7297 = !DILocation(line: 1144, column: 18, scope: !7291)
!7298 = !DILocation(line: 1144, column: 2, scope: !7291)
!7299 = !DILocation(line: 1145, column: 1, scope: !7291)
!7300 = distinct !DISubprogram(name: "draw_sensor_mouse", scope: !1, file: !1, line: 1147, type: !6049, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7301 = !DILocalVariable(name: "layout", arg: 1, scope: !7300, file: !1, line: 1147, type: !3660)
!7302 = !DILocation(line: 1147, column: 41, scope: !7300)
!7303 = !DILocalVariable(name: "ptr", arg: 2, scope: !7300, file: !1, line: 1147, type: !5688)
!7304 = !DILocation(line: 1147, column: 61, scope: !7300)
!7305 = !DILocalVariable(name: "C", arg: 3, scope: !7300, file: !1, line: 1147, type: !2686)
!7306 = !DILocation(line: 1147, column: 76, scope: !7300)
!7307 = !DILocalVariable(name: "split", scope: !7300, file: !1, line: 1149, type: !3660)
!7308 = !DILocation(line: 1149, column: 12, scope: !7300)
!7309 = !DILocalVariable(name: "split2", scope: !7300, file: !1, line: 1149, type: !3660)
!7310 = !DILocation(line: 1149, column: 20, scope: !7300)
!7311 = !DILocalVariable(name: "main_ptr", scope: !7300, file: !1, line: 1150, type: !3645)
!7312 = !DILocation(line: 1150, column: 13, scope: !7300)
!7313 = !DILocation(line: 1152, column: 24, scope: !7300)
!7314 = !DILocation(line: 1152, column: 10, scope: !7300)
!7315 = !DILocation(line: 1152, column: 8, scope: !7300)
!7316 = !DILocation(line: 1153, column: 10, scope: !7300)
!7317 = !DILocation(line: 1153, column: 17, scope: !7300)
!7318 = !DILocation(line: 1153, column: 2, scope: !7300)
!7319 = !DILocation(line: 1155, column: 19, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7300, file: !1, line: 1155, column: 6)
!7321 = !DILocation(line: 1155, column: 6, scope: !7320)
!7322 = !DILocation(line: 1155, column: 39, scope: !7320)
!7323 = !DILocation(line: 1155, column: 6, scope: !7300)
!7324 = !DILocation(line: 1156, column: 11, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7320, file: !1, line: 1155, column: 71)
!7326 = !DILocation(line: 1156, column: 18, scope: !7325)
!7327 = !DILocation(line: 1156, column: 3, scope: !7325)
!7328 = !DILocation(line: 1158, column: 25, scope: !7325)
!7329 = !DILocation(line: 1158, column: 11, scope: !7325)
!7330 = !DILocation(line: 1158, column: 9, scope: !7325)
!7331 = !DILocation(line: 1159, column: 11, scope: !7325)
!7332 = !DILocation(line: 1159, column: 18, scope: !7325)
!7333 = !DILocation(line: 1159, column: 3, scope: !7325)
!7334 = !DILocation(line: 1161, column: 26, scope: !7325)
!7335 = !DILocation(line: 1161, column: 12, scope: !7325)
!7336 = !DILocation(line: 1161, column: 10, scope: !7325)
!7337 = !DILocation(line: 1162, column: 20, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 1162, column: 7)
!7339 = !DILocation(line: 1162, column: 7, scope: !7338)
!7340 = !DILocation(line: 1162, column: 41, scope: !7338)
!7341 = !DILocation(line: 1162, column: 7, scope: !7325)
!7342 = !DILocation(line: 1163, column: 12, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7338, file: !1, line: 1162, column: 63)
!7344 = !DILocation(line: 1163, column: 20, scope: !7343)
!7345 = !DILocation(line: 1163, column: 4, scope: !7343)
!7346 = !DILocation(line: 1164, column: 3, scope: !7343)
!7347 = !DILocation(line: 1166, column: 42, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7338, file: !1, line: 1165, column: 8)
!7349 = !DILocation(line: 1166, column: 28, scope: !7348)
!7350 = !DILocation(line: 1166, column: 4, scope: !7348)
!7351 = !DILocation(line: 1167, column: 19, scope: !7348)
!7352 = !DILocation(line: 1167, column: 27, scope: !7348)
!7353 = !DILocation(line: 1167, column: 4, scope: !7348)
!7354 = !DILocation(line: 1169, column: 11, scope: !7325)
!7355 = !DILocation(line: 1169, column: 19, scope: !7325)
!7356 = !DILocation(line: 1169, column: 3, scope: !7325)
!7357 = !DILocation(line: 1170, column: 2, scope: !7325)
!7358 = !DILocation(line: 1171, column: 1, scope: !7300)
!7359 = distinct !DISubprogram(name: "draw_sensor_near", scope: !1, file: !1, line: 1173, type: !5812, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7360 = !DILocalVariable(name: "layout", arg: 1, scope: !7359, file: !1, line: 1173, type: !3660)
!7361 = !DILocation(line: 1173, column: 40, scope: !7359)
!7362 = !DILocalVariable(name: "ptr", arg: 2, scope: !7359, file: !1, line: 1173, type: !5688)
!7363 = !DILocation(line: 1173, column: 60, scope: !7359)
!7364 = !DILocalVariable(name: "row", scope: !7359, file: !1, line: 1175, type: !3660)
!7365 = !DILocation(line: 1175, column: 12, scope: !7359)
!7366 = !DILocation(line: 1177, column: 10, scope: !7359)
!7367 = !DILocation(line: 1177, column: 18, scope: !7359)
!7368 = !DILocation(line: 1177, column: 2, scope: !7359)
!7369 = !DILocation(line: 1179, column: 20, scope: !7359)
!7370 = !DILocation(line: 1179, column: 8, scope: !7359)
!7371 = !DILocation(line: 1179, column: 6, scope: !7359)
!7372 = !DILocation(line: 1180, column: 10, scope: !7359)
!7373 = !DILocation(line: 1180, column: 15, scope: !7359)
!7374 = !DILocation(line: 1180, column: 2, scope: !7359)
!7375 = !DILocation(line: 1181, column: 10, scope: !7359)
!7376 = !DILocation(line: 1181, column: 15, scope: !7359)
!7377 = !DILocation(line: 1181, column: 2, scope: !7359)
!7378 = !DILocation(line: 1182, column: 1, scope: !7359)
!7379 = distinct !DISubprogram(name: "draw_sensor_property", scope: !1, file: !1, line: 1184, type: !5812, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7380 = !DILocalVariable(name: "layout", arg: 1, scope: !7379, file: !1, line: 1184, type: !3660)
!7381 = !DILocation(line: 1184, column: 44, scope: !7379)
!7382 = !DILocalVariable(name: "ptr", arg: 2, scope: !7379, file: !1, line: 1184, type: !5688)
!7383 = !DILocation(line: 1184, column: 64, scope: !7379)
!7384 = !DILocalVariable(name: "ob", scope: !7379, file: !1, line: 1186, type: !1044)
!7385 = !DILocation(line: 1186, column: 10, scope: !7379)
!7386 = !DILocation(line: 1186, column: 25, scope: !7379)
!7387 = !DILocation(line: 1186, column: 30, scope: !7379)
!7388 = !DILocation(line: 1186, column: 33, scope: !7379)
!7389 = !DILocation(line: 1186, column: 15, scope: !7379)
!7390 = !DILocalVariable(name: "settings_ptr", scope: !7379, file: !1, line: 1187, type: !3645)
!7391 = !DILocation(line: 1187, column: 13, scope: !7379)
!7392 = !DILocalVariable(name: "row", scope: !7379, file: !1, line: 1189, type: !3660)
!7393 = !DILocation(line: 1189, column: 12, scope: !7379)
!7394 = !DILocation(line: 1190, column: 10, scope: !7379)
!7395 = !DILocation(line: 1190, column: 18, scope: !7379)
!7396 = !DILocation(line: 1190, column: 2, scope: !7379)
!7397 = !DILocation(line: 1192, column: 27, scope: !7379)
!7398 = !DILocation(line: 1192, column: 21, scope: !7379)
!7399 = !DILocation(line: 1192, column: 56, scope: !7379)
!7400 = !DILocation(line: 1192, column: 2, scope: !7379)
!7401 = !DILocation(line: 1193, column: 17, scope: !7379)
!7402 = !DILocation(line: 1193, column: 25, scope: !7379)
!7403 = !DILocation(line: 1193, column: 2, scope: !7379)
!7404 = !DILocation(line: 1195, column: 23, scope: !7379)
!7405 = !DILocation(line: 1195, column: 10, scope: !7379)
!7406 = !DILocation(line: 1195, column: 2, scope: !7379)
!7407 = !DILocation(line: 1197, column: 22, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 1195, column: 48)
!7409 = !DILocation(line: 1197, column: 10, scope: !7408)
!7410 = !DILocation(line: 1197, column: 8, scope: !7408)
!7411 = !DILocation(line: 1198, column: 12, scope: !7408)
!7412 = !DILocation(line: 1198, column: 17, scope: !7408)
!7413 = !DILocation(line: 1198, column: 4, scope: !7408)
!7414 = !DILocation(line: 1199, column: 12, scope: !7408)
!7415 = !DILocation(line: 1199, column: 17, scope: !7408)
!7416 = !DILocation(line: 1199, column: 4, scope: !7408)
!7417 = !DILocation(line: 1200, column: 4, scope: !7408)
!7418 = !DILocation(line: 1205, column: 12, scope: !7408)
!7419 = !DILocation(line: 1205, column: 20, scope: !7408)
!7420 = !DILocation(line: 1205, column: 4, scope: !7408)
!7421 = !DILocation(line: 1206, column: 4, scope: !7408)
!7422 = !DILocation(line: 1208, column: 4, scope: !7408)
!7423 = !DILocation(line: 1210, column: 1, scope: !7379)
!7424 = distinct !DISubprogram(name: "draw_sensor_radar", scope: !1, file: !1, line: 1212, type: !5812, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7425 = !DILocalVariable(name: "layout", arg: 1, scope: !7424, file: !1, line: 1212, type: !3660)
!7426 = !DILocation(line: 1212, column: 41, scope: !7424)
!7427 = !DILocalVariable(name: "ptr", arg: 2, scope: !7424, file: !1, line: 1212, type: !5688)
!7428 = !DILocation(line: 1212, column: 61, scope: !7424)
!7429 = !DILocalVariable(name: "row", scope: !7424, file: !1, line: 1214, type: !3660)
!7430 = !DILocation(line: 1214, column: 12, scope: !7424)
!7431 = !DILocation(line: 1216, column: 10, scope: !7424)
!7432 = !DILocation(line: 1216, column: 18, scope: !7424)
!7433 = !DILocation(line: 1216, column: 2, scope: !7424)
!7434 = !DILocation(line: 1217, column: 10, scope: !7424)
!7435 = !DILocation(line: 1217, column: 18, scope: !7424)
!7436 = !DILocation(line: 1217, column: 2, scope: !7424)
!7437 = !DILocation(line: 1219, column: 20, scope: !7424)
!7438 = !DILocation(line: 1219, column: 8, scope: !7424)
!7439 = !DILocation(line: 1219, column: 6, scope: !7424)
!7440 = !DILocation(line: 1220, column: 10, scope: !7424)
!7441 = !DILocation(line: 1220, column: 15, scope: !7424)
!7442 = !DILocation(line: 1220, column: 2, scope: !7424)
!7443 = !DILocation(line: 1221, column: 10, scope: !7424)
!7444 = !DILocation(line: 1221, column: 15, scope: !7424)
!7445 = !DILocation(line: 1221, column: 2, scope: !7424)
!7446 = !DILocation(line: 1222, column: 1, scope: !7424)
!7447 = distinct !DISubprogram(name: "draw_sensor_random", scope: !1, file: !1, line: 1224, type: !5812, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7448 = !DILocalVariable(name: "layout", arg: 1, scope: !7447, file: !1, line: 1224, type: !3660)
!7449 = !DILocation(line: 1224, column: 42, scope: !7447)
!7450 = !DILocalVariable(name: "ptr", arg: 2, scope: !7447, file: !1, line: 1224, type: !5688)
!7451 = !DILocation(line: 1224, column: 62, scope: !7447)
!7452 = !DILocation(line: 1226, column: 10, scope: !7447)
!7453 = !DILocation(line: 1226, column: 18, scope: !7447)
!7454 = !DILocation(line: 1226, column: 2, scope: !7447)
!7455 = !DILocation(line: 1227, column: 1, scope: !7447)
!7456 = distinct !DISubprogram(name: "draw_sensor_ray", scope: !1, file: !1, line: 1229, type: !6049, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7457 = !DILocalVariable(name: "layout", arg: 1, scope: !7456, file: !1, line: 1229, type: !3660)
!7458 = !DILocation(line: 1229, column: 39, scope: !7456)
!7459 = !DILocalVariable(name: "ptr", arg: 2, scope: !7456, file: !1, line: 1229, type: !5688)
!7460 = !DILocation(line: 1229, column: 59, scope: !7456)
!7461 = !DILocalVariable(name: "C", arg: 3, scope: !7456, file: !1, line: 1229, type: !2686)
!7462 = !DILocation(line: 1229, column: 74, scope: !7456)
!7463 = !DILocalVariable(name: "split", scope: !7456, file: !1, line: 1231, type: !3660)
!7464 = !DILocation(line: 1231, column: 12, scope: !7456)
!7465 = !DILocalVariable(name: "row", scope: !7456, file: !1, line: 1231, type: !3660)
!7466 = !DILocation(line: 1231, column: 20, scope: !7456)
!7467 = !DILocalVariable(name: "main_ptr", scope: !7456, file: !1, line: 1232, type: !3645)
!7468 = !DILocation(line: 1232, column: 13, scope: !7456)
!7469 = !DILocation(line: 1234, column: 40, scope: !7456)
!7470 = !DILocation(line: 1234, column: 26, scope: !7456)
!7471 = !DILocation(line: 1234, column: 2, scope: !7456)
!7472 = !DILocation(line: 1235, column: 24, scope: !7456)
!7473 = !DILocation(line: 1235, column: 10, scope: !7456)
!7474 = !DILocation(line: 1235, column: 8, scope: !7456)
!7475 = !DILocation(line: 1236, column: 10, scope: !7456)
!7476 = !DILocation(line: 1236, column: 17, scope: !7456)
!7477 = !DILocation(line: 1236, column: 2, scope: !7456)
!7478 = !DILocation(line: 1237, column: 23, scope: !7456)
!7479 = !DILocation(line: 1237, column: 10, scope: !7456)
!7480 = !DILocation(line: 1237, column: 2, scope: !7456)
!7481 = !DILocation(line: 1239, column: 12, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7456, file: !1, line: 1237, column: 41)
!7483 = !DILocation(line: 1239, column: 19, scope: !7482)
!7484 = !DILocation(line: 1239, column: 4, scope: !7482)
!7485 = !DILocation(line: 1240, column: 4, scope: !7482)
!7486 = !DILocation(line: 1242, column: 19, scope: !7482)
!7487 = !DILocation(line: 1242, column: 26, scope: !7482)
!7488 = !DILocation(line: 1242, column: 4, scope: !7482)
!7489 = !DILocation(line: 1243, column: 4, scope: !7482)
!7490 = !DILocation(line: 1246, column: 24, scope: !7456)
!7491 = !DILocation(line: 1246, column: 10, scope: !7456)
!7492 = !DILocation(line: 1246, column: 8, scope: !7456)
!7493 = !DILocation(line: 1247, column: 10, scope: !7456)
!7494 = !DILocation(line: 1247, column: 17, scope: !7456)
!7495 = !DILocation(line: 1247, column: 2, scope: !7456)
!7496 = !DILocation(line: 1248, column: 20, scope: !7456)
!7497 = !DILocation(line: 1248, column: 8, scope: !7456)
!7498 = !DILocation(line: 1248, column: 6, scope: !7456)
!7499 = !DILocation(line: 1249, column: 10, scope: !7456)
!7500 = !DILocation(line: 1249, column: 15, scope: !7456)
!7501 = !DILocation(line: 1249, column: 2, scope: !7456)
!7502 = !DILocation(line: 1250, column: 10, scope: !7456)
!7503 = !DILocation(line: 1250, column: 15, scope: !7456)
!7504 = !DILocation(line: 1250, column: 2, scope: !7456)
!7505 = !DILocation(line: 1251, column: 1, scope: !7456)
!7506 = distinct !DISubprogram(name: "do_actuator_menu", scope: !1, file: !1, line: 828, type: !4936, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7507 = !DILocalVariable(name: "C", arg: 1, scope: !7506, file: !1, line: 828, type: !2686)
!7508 = !DILocation(line: 828, column: 40, scope: !7506)
!7509 = !DILocalVariable(name: "UNUSED_arg", arg: 2, scope: !7506, file: !1, line: 828, type: !1054)
!7510 = !DILocation(line: 828, column: 49, scope: !7506)
!7511 = !DILocalVariable(name: "event", arg: 3, scope: !7506, file: !1, line: 828, type: !1085)
!7512 = !DILocation(line: 828, column: 66, scope: !7506)
!7513 = !DILocalVariable(name: "slogic", scope: !7506, file: !1, line: 830, type: !3609)
!7514 = !DILocation(line: 830, column: 14, scope: !7506)
!7515 = !DILocation(line: 830, column: 41, scope: !7506)
!7516 = !DILocation(line: 830, column: 22, scope: !7506)
!7517 = !DILocalVariable(name: "idar", scope: !7506, file: !1, line: 831, type: !2720)
!7518 = !DILocation(line: 831, column: 7, scope: !7506)
!7519 = !DILocalVariable(name: "ob", scope: !7506, file: !1, line: 832, type: !1044)
!7520 = !DILocation(line: 832, column: 10, scope: !7506)
!7521 = !DILocalVariable(name: "act", scope: !7506, file: !1, line: 833, type: !2645)
!7522 = !DILocation(line: 833, column: 13, scope: !7506)
!7523 = !DILocalVariable(name: "count", scope: !7506, file: !1, line: 834, type: !1083)
!7524 = !DILocation(line: 834, column: 8, scope: !7506)
!7525 = !DILocalVariable(name: "a", scope: !7506, file: !1, line: 834, type: !1083)
!7526 = !DILocation(line: 834, column: 15, scope: !7506)
!7527 = !DILocation(line: 836, column: 36, scope: !7506)
!7528 = !DILocation(line: 836, column: 47, scope: !7506)
!7529 = !DILocation(line: 836, column: 55, scope: !7506)
!7530 = !DILocation(line: 836, column: 8, scope: !7506)
!7531 = !DILocation(line: 836, column: 6, scope: !7506)
!7532 = !DILocation(line: 838, column: 8, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7506, file: !1, line: 838, column: 2)
!7534 = !DILocation(line: 838, column: 7, scope: !7533)
!7535 = !DILocation(line: 838, column: 12, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7533, file: !1, line: 838, column: 2)
!7537 = !DILocation(line: 838, column: 14, scope: !7536)
!7538 = !DILocation(line: 838, column: 13, scope: !7536)
!7539 = !DILocation(line: 838, column: 2, scope: !7533)
!7540 = !DILocation(line: 839, column: 17, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 838, column: 26)
!7542 = !DILocation(line: 839, column: 22, scope: !7541)
!7543 = !DILocation(line: 839, column: 7, scope: !7541)
!7544 = !DILocation(line: 839, column: 5, scope: !7541)
!7545 = !DILocation(line: 840, column: 7, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7541, file: !1, line: 840, column: 7)
!7547 = !DILocation(line: 840, column: 12, scope: !7546)
!7548 = !DILocation(line: 840, column: 16, scope: !7546)
!7549 = !DILocation(line: 840, column: 19, scope: !7546)
!7550 = !DILocation(line: 840, column: 24, scope: !7546)
!7551 = !DILocation(line: 840, column: 7, scope: !7541)
!7552 = !DILocation(line: 840, column: 29, scope: !7546)
!7553 = !DILocation(line: 840, column: 33, scope: !7546)
!7554 = !DILocation(line: 840, column: 41, scope: !7546)
!7555 = !DILocation(line: 841, column: 12, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7546, file: !1, line: 841, column: 12)
!7557 = !DILocation(line: 841, column: 17, scope: !7556)
!7558 = !DILocation(line: 841, column: 12, scope: !7546)
!7559 = !DILocation(line: 841, column: 22, scope: !7556)
!7560 = !DILocation(line: 841, column: 26, scope: !7556)
!7561 = !DILocation(line: 841, column: 34, scope: !7556)
!7562 = !DILocation(line: 842, column: 2, scope: !7541)
!7563 = !DILocation(line: 838, column: 22, scope: !7536)
!7564 = !DILocation(line: 838, column: 2, scope: !7536)
!7565 = distinct !{!7565, !7539, !7566}
!7566 = !DILocation(line: 842, column: 2, scope: !7533)
!7567 = !DILocation(line: 844, column: 8, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7506, file: !1, line: 844, column: 2)
!7569 = !DILocation(line: 844, column: 7, scope: !7568)
!7570 = !DILocation(line: 844, column: 12, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 844, column: 2)
!7572 = !DILocation(line: 844, column: 14, scope: !7571)
!7573 = !DILocation(line: 844, column: 13, scope: !7571)
!7574 = !DILocation(line: 844, column: 2, scope: !7568)
!7575 = !DILocation(line: 845, column: 17, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 844, column: 26)
!7577 = !DILocation(line: 845, column: 22, scope: !7576)
!7578 = !DILocation(line: 845, column: 7, scope: !7576)
!7579 = !DILocation(line: 845, column: 5, scope: !7576)
!7580 = !DILocation(line: 846, column: 8, scope: !7576)
!7581 = !DILocation(line: 846, column: 12, scope: !7576)
!7582 = !DILocation(line: 846, column: 22, scope: !7576)
!7583 = !DILocation(line: 846, column: 6, scope: !7576)
!7584 = !DILocation(line: 847, column: 3, scope: !7576)
!7585 = !DILocation(line: 847, column: 10, scope: !7576)
!7586 = !DILocation(line: 848, column: 8, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 848, column: 8)
!7588 = distinct !DILexicalBlock(scope: !7576, file: !1, line: 847, column: 15)
!7589 = !DILocation(line: 848, column: 13, scope: !7587)
!7590 = !DILocation(line: 848, column: 8, scope: !7588)
!7591 = !DILocation(line: 848, column: 18, scope: !7587)
!7592 = !DILocation(line: 848, column: 23, scope: !7587)
!7593 = !DILocation(line: 848, column: 28, scope: !7587)
!7594 = !DILocation(line: 849, column: 13, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7587, file: !1, line: 849, column: 13)
!7596 = !DILocation(line: 849, column: 18, scope: !7595)
!7597 = !DILocation(line: 849, column: 13, scope: !7587)
!7598 = !DILocation(line: 849, column: 23, scope: !7595)
!7599 = !DILocation(line: 849, column: 28, scope: !7595)
!7600 = !DILocation(line: 849, column: 33, scope: !7595)
!7601 = !DILocation(line: 850, column: 9, scope: !7588)
!7602 = !DILocation(line: 850, column: 14, scope: !7588)
!7603 = !DILocation(line: 850, column: 7, scope: !7588)
!7604 = distinct !{!7604, !7584, !7605}
!7605 = !DILocation(line: 851, column: 3, scope: !7576)
!7606 = !DILocation(line: 852, column: 2, scope: !7576)
!7607 = !DILocation(line: 844, column: 22, scope: !7571)
!7608 = !DILocation(line: 844, column: 2, scope: !7571)
!7609 = distinct !{!7609, !7574, !7610}
!7610 = !DILocation(line: 852, column: 2, scope: !7568)
!7611 = !DILocation(line: 854, column: 6, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7506, file: !1, line: 854, column: 6)
!7613 = !DILocation(line: 854, column: 6, scope: !7506)
!7614 = !DILocation(line: 854, column: 12, scope: !7612)
!7615 = !DILocation(line: 854, column: 22, scope: !7612)
!7616 = !DILocation(line: 855, column: 1, scope: !7506)
!7617 = distinct !DISubprogram(name: "actuator_name", scope: !1, file: !1, line: 475, type: !6684, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7618 = !DILocalVariable(name: "type", arg: 1, scope: !7617, file: !1, line: 475, type: !1085)
!7619 = !DILocation(line: 475, column: 38, scope: !7617)
!7620 = !DILocation(line: 477, column: 10, scope: !7617)
!7621 = !DILocation(line: 477, column: 2, scope: !7617)
!7622 = !DILocation(line: 479, column: 3, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 477, column: 16)
!7624 = !DILocation(line: 481, column: 3, scope: !7623)
!7625 = !DILocation(line: 483, column: 3, scope: !7623)
!7626 = !DILocation(line: 485, column: 3, scope: !7623)
!7627 = !DILocation(line: 487, column: 3, scope: !7623)
!7628 = !DILocation(line: 489, column: 3, scope: !7623)
!7629 = !DILocation(line: 491, column: 3, scope: !7623)
!7630 = !DILocation(line: 493, column: 3, scope: !7623)
!7631 = !DILocation(line: 495, column: 3, scope: !7623)
!7632 = !DILocation(line: 497, column: 3, scope: !7623)
!7633 = !DILocation(line: 499, column: 3, scope: !7623)
!7634 = !DILocation(line: 501, column: 3, scope: !7623)
!7635 = !DILocation(line: 503, column: 3, scope: !7623)
!7636 = !DILocation(line: 505, column: 3, scope: !7623)
!7637 = !DILocation(line: 507, column: 3, scope: !7623)
!7638 = !DILocation(line: 509, column: 3, scope: !7623)
!7639 = !DILocation(line: 511, column: 3, scope: !7623)
!7640 = !DILocation(line: 513, column: 3, scope: !7623)
!7641 = !DILocation(line: 515, column: 3, scope: !7623)
!7642 = !DILocation(line: 517, column: 3, scope: !7623)
!7643 = !DILocation(line: 519, column: 3, scope: !7623)
!7644 = !DILocation(line: 521, column: 3, scope: !7623)
!7645 = !DILocation(line: 523, column: 3, scope: !7623)
!7646 = !DILocation(line: 525, column: 2, scope: !7617)
!7647 = !DILocation(line: 526, column: 1, scope: !7617)
!7648 = distinct !DISubprogram(name: "draw_actuator_action", scope: !1, file: !1, line: 1459, type: !5812, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7649 = !DILocalVariable(name: "layout", arg: 1, scope: !7648, file: !1, line: 1459, type: !3660)
!7650 = !DILocation(line: 1459, column: 44, scope: !7648)
!7651 = !DILocalVariable(name: "ptr", arg: 2, scope: !7648, file: !1, line: 1459, type: !5688)
!7652 = !DILocation(line: 1459, column: 64, scope: !7648)
!7653 = !DILocalVariable(name: "ob", scope: !7648, file: !1, line: 1461, type: !1044)
!7654 = !DILocation(line: 1461, column: 10, scope: !7648)
!7655 = !DILocation(line: 1461, column: 25, scope: !7648)
!7656 = !DILocation(line: 1461, column: 30, scope: !7648)
!7657 = !DILocation(line: 1461, column: 33, scope: !7648)
!7658 = !DILocation(line: 1461, column: 15, scope: !7648)
!7659 = !DILocalVariable(name: "settings_ptr", scope: !7648, file: !1, line: 1462, type: !3645)
!7660 = !DILocation(line: 1462, column: 13, scope: !7648)
!7661 = !DILocalVariable(name: "row", scope: !7648, file: !1, line: 1463, type: !3660)
!7662 = !DILocation(line: 1463, column: 12, scope: !7648)
!7663 = !DILocalVariable(name: "sub", scope: !7648, file: !1, line: 1463, type: !3660)
!7664 = !DILocation(line: 1463, column: 18, scope: !7648)
!7665 = !DILocation(line: 1465, column: 27, scope: !7648)
!7666 = !DILocation(line: 1465, column: 21, scope: !7648)
!7667 = !DILocation(line: 1465, column: 56, scope: !7648)
!7668 = !DILocation(line: 1465, column: 2, scope: !7648)
!7669 = !DILocation(line: 1467, column: 20, scope: !7648)
!7670 = !DILocation(line: 1467, column: 8, scope: !7648)
!7671 = !DILocation(line: 1467, column: 6, scope: !7648)
!7672 = !DILocation(line: 1468, column: 10, scope: !7648)
!7673 = !DILocation(line: 1468, column: 15, scope: !7648)
!7674 = !DILocation(line: 1468, column: 2, scope: !7648)
!7675 = !DILocation(line: 1470, column: 20, scope: !7648)
!7676 = !DILocation(line: 1470, column: 8, scope: !7648)
!7677 = !DILocation(line: 1470, column: 6, scope: !7648)
!7678 = !DILocation(line: 1471, column: 10, scope: !7648)
!7679 = !DILocation(line: 1471, column: 15, scope: !7648)
!7680 = !DILocation(line: 1471, column: 2, scope: !7648)
!7681 = !DILocation(line: 1472, column: 10, scope: !7648)
!7682 = !DILocation(line: 1472, column: 15, scope: !7648)
!7683 = !DILocation(line: 1472, column: 2, scope: !7648)
!7684 = !DILocation(line: 1474, column: 23, scope: !7648)
!7685 = !DILocation(line: 1474, column: 8, scope: !7648)
!7686 = !DILocation(line: 1474, column: 6, scope: !7648)
!7687 = !DILocation(line: 1475, column: 20, scope: !7648)
!7688 = !DILocation(line: 1475, column: 42, scope: !7648)
!7689 = !DILocation(line: 1475, column: 26, scope: !7648)
!7690 = !DILocation(line: 1475, column: 63, scope: !7648)
!7691 = !DILocation(line: 1475, column: 82, scope: !7648)
!7692 = !DILocation(line: 1475, column: 66, scope: !7648)
!7693 = !DILocation(line: 1475, column: 25, scope: !7648)
!7694 = !DILocation(line: 1475, column: 2, scope: !7648)
!7695 = !DILocation(line: 1476, column: 10, scope: !7648)
!7696 = !DILocation(line: 1476, column: 15, scope: !7648)
!7697 = !DILocation(line: 1476, column: 2, scope: !7648)
!7698 = !DILocation(line: 1478, column: 20, scope: !7648)
!7699 = !DILocation(line: 1478, column: 8, scope: !7648)
!7700 = !DILocation(line: 1478, column: 6, scope: !7648)
!7701 = !DILocation(line: 1479, column: 10, scope: !7648)
!7702 = !DILocation(line: 1479, column: 15, scope: !7648)
!7703 = !DILocation(line: 1479, column: 2, scope: !7648)
!7704 = !DILocation(line: 1480, column: 10, scope: !7648)
!7705 = !DILocation(line: 1480, column: 15, scope: !7648)
!7706 = !DILocation(line: 1480, column: 2, scope: !7648)
!7707 = !DILocation(line: 1482, column: 20, scope: !7648)
!7708 = !DILocation(line: 1482, column: 8, scope: !7648)
!7709 = !DILocation(line: 1482, column: 6, scope: !7648)
!7710 = !DILocation(line: 1483, column: 20, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 1483, column: 6)
!7712 = !DILocation(line: 1483, column: 7, scope: !7711)
!7713 = !DILocation(line: 1483, column: 38, scope: !7711)
!7714 = !DILocation(line: 1483, column: 6, scope: !7648)
!7715 = !DILocation(line: 1484, column: 18, scope: !7711)
!7716 = !DILocation(line: 1484, column: 23, scope: !7711)
!7717 = !DILocation(line: 1484, column: 3, scope: !7711)
!7718 = !DILocation(line: 1487, column: 11, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7711, file: !1, line: 1486, column: 7)
!7720 = !DILocation(line: 1487, column: 16, scope: !7719)
!7721 = !DILocation(line: 1487, column: 3, scope: !7719)
!7722 = !DILocation(line: 1488, column: 11, scope: !7719)
!7723 = !DILocation(line: 1488, column: 16, scope: !7719)
!7724 = !DILocation(line: 1488, column: 3, scope: !7719)
!7725 = !DILocation(line: 1491, column: 10, scope: !7648)
!7726 = !DILocation(line: 1491, column: 15, scope: !7648)
!7727 = !DILocation(line: 1491, column: 2, scope: !7648)
!7728 = !DILocation(line: 1493, column: 20, scope: !7648)
!7729 = !DILocation(line: 1493, column: 8, scope: !7648)
!7730 = !DILocation(line: 1493, column: 6, scope: !7648)
!7731 = !DILocation(line: 1494, column: 10, scope: !7648)
!7732 = !DILocation(line: 1494, column: 15, scope: !7648)
!7733 = !DILocation(line: 1494, column: 2, scope: !7648)
!7734 = !DILocation(line: 1495, column: 10, scope: !7648)
!7735 = !DILocation(line: 1495, column: 15, scope: !7648)
!7736 = !DILocation(line: 1495, column: 2, scope: !7648)
!7737 = !DILocation(line: 1497, column: 20, scope: !7648)
!7738 = !DILocation(line: 1497, column: 8, scope: !7648)
!7739 = !DILocation(line: 1497, column: 6, scope: !7648)
!7740 = !DILocation(line: 1498, column: 10, scope: !7648)
!7741 = !DILocation(line: 1498, column: 15, scope: !7648)
!7742 = !DILocation(line: 1498, column: 2, scope: !7648)
!7743 = !DILocation(line: 1499, column: 10, scope: !7648)
!7744 = !DILocation(line: 1499, column: 15, scope: !7648)
!7745 = !DILocation(line: 1499, column: 2, scope: !7648)
!7746 = !DILocation(line: 1500, column: 10, scope: !7648)
!7747 = !DILocation(line: 1500, column: 15, scope: !7648)
!7748 = !DILocation(line: 1500, column: 2, scope: !7648)
!7749 = !DILocation(line: 1502, column: 17, scope: !7648)
!7750 = !DILocation(line: 1502, column: 25, scope: !7648)
!7751 = !DILocation(line: 1502, column: 2, scope: !7648)
!7752 = !DILocation(line: 1507, column: 1, scope: !7648)
!7753 = distinct !DISubprogram(name: "draw_actuator_armature", scope: !1, file: !1, line: 1509, type: !5812, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7754 = !DILocalVariable(name: "layout", arg: 1, scope: !7753, file: !1, line: 1509, type: !3660)
!7755 = !DILocation(line: 1509, column: 46, scope: !7753)
!7756 = !DILocalVariable(name: "ptr", arg: 2, scope: !7753, file: !1, line: 1509, type: !5688)
!7757 = !DILocation(line: 1509, column: 66, scope: !7753)
!7758 = !DILocalVariable(name: "act", scope: !7753, file: !1, line: 1511, type: !2645)
!7759 = !DILocation(line: 1511, column: 13, scope: !7753)
!7760 = !DILocation(line: 1511, column: 32, scope: !7753)
!7761 = !DILocation(line: 1511, column: 37, scope: !7753)
!7762 = !DILocation(line: 1511, column: 19, scope: !7753)
!7763 = !DILocalVariable(name: "aa", scope: !7753, file: !1, line: 1512, type: !2658)
!7764 = !DILocation(line: 1512, column: 21, scope: !7753)
!7765 = !DILocation(line: 1512, column: 48, scope: !7753)
!7766 = !DILocation(line: 1512, column: 53, scope: !7753)
!7767 = !DILocation(line: 1512, column: 26, scope: !7753)
!7768 = !DILocalVariable(name: "ob", scope: !7753, file: !1, line: 1513, type: !1044)
!7769 = !DILocation(line: 1513, column: 10, scope: !7753)
!7770 = !DILocation(line: 1513, column: 25, scope: !7753)
!7771 = !DILocation(line: 1513, column: 30, scope: !7753)
!7772 = !DILocation(line: 1513, column: 33, scope: !7753)
!7773 = !DILocation(line: 1513, column: 15, scope: !7753)
!7774 = !DILocalVariable(name: "constraint", scope: !7753, file: !1, line: 1514, type: !7775)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 64)
!7776 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !1000, line: 76, baseType: !7777)
!7777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !1000, line: 54, size: 960, elements: !7778)
!7778 = !{!7779, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792, !7793}
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7777, file: !1000, line: 55, baseType: !7780, size: 64)
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7777, size: 64)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7777, file: !1000, line: 55, baseType: !7780, size: 64, offset: 64)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7777, file: !1000, line: 57, baseType: !1054, size: 64, offset: 128)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7777, file: !1000, line: 58, baseType: !1083, size: 16, offset: 192)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7777, file: !1000, line: 59, baseType: !1083, size: 16, offset: 208)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !7777, file: !1000, line: 61, baseType: !1070, size: 8, offset: 224)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !7777, file: !1000, line: 62, baseType: !1070, size: 8, offset: 232)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7777, file: !1000, line: 64, baseType: !1100, size: 512, offset: 240)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7777, file: !1000, line: 66, baseType: !1083, size: 16, offset: 752)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !7777, file: !1000, line: 68, baseType: !1149, size: 32, offset: 768)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !7777, file: !1000, line: 69, baseType: !1149, size: 32, offset: 800)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !7777, file: !1000, line: 71, baseType: !1140, size: 64, offset: 832)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !7777, file: !1000, line: 74, baseType: !1149, size: 32, offset: 896)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !7777, file: !1000, line: 75, baseType: !1149, size: 32, offset: 928)
!7794 = !DILocation(line: 1514, column: 15, scope: !7753)
!7795 = !DILocalVariable(name: "pose_ptr", scope: !7753, file: !1, line: 1515, type: !3645)
!7796 = !DILocation(line: 1515, column: 13, scope: !7753)
!7797 = !DILocalVariable(name: "pchan_ptr", scope: !7753, file: !1, line: 1515, type: !3645)
!7798 = !DILocation(line: 1515, column: 23, scope: !7753)
!7799 = !DILocalVariable(name: "bones_prop", scope: !7753, file: !1, line: 1516, type: !7031)
!7800 = !DILocation(line: 1516, column: 15, scope: !7753)
!7801 = !DILocation(line: 1518, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7753, file: !1, line: 1518, column: 6)
!7803 = !DILocation(line: 1518, column: 10, scope: !7802)
!7804 = !DILocation(line: 1518, column: 15, scope: !7802)
!7805 = !DILocation(line: 1518, column: 6, scope: !7753)
!7806 = !DILocation(line: 1519, column: 11, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 1518, column: 31)
!7808 = !DILocation(line: 1519, column: 3, scope: !7807)
!7809 = !DILocation(line: 1520, column: 3, scope: !7807)
!7810 = !DILocation(line: 1523, column: 6, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7753, file: !1, line: 1523, column: 6)
!7812 = !DILocation(line: 1523, column: 10, scope: !7811)
!7813 = !DILocation(line: 1523, column: 6, scope: !7753)
!7814 = !DILocation(line: 1524, column: 28, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 1523, column: 16)
!7816 = !DILocation(line: 1524, column: 22, scope: !7815)
!7817 = !DILocation(line: 1524, column: 43, scope: !7815)
!7818 = !DILocation(line: 1524, column: 47, scope: !7815)
!7819 = !DILocation(line: 1524, column: 3, scope: !7815)
!7820 = !DILocation(line: 1525, column: 16, scope: !7815)
!7821 = !DILocation(line: 1525, column: 14, scope: !7815)
!7822 = !DILocation(line: 1526, column: 2, scope: !7815)
!7823 = !DILocation(line: 1528, column: 10, scope: !7753)
!7824 = !DILocation(line: 1528, column: 18, scope: !7753)
!7825 = !DILocation(line: 1528, column: 2, scope: !7753)
!7826 = !DILocation(line: 1530, column: 23, scope: !7753)
!7827 = !DILocation(line: 1530, column: 10, scope: !7753)
!7828 = !DILocation(line: 1530, column: 2, scope: !7753)
!7829 = !DILocation(line: 1532, column: 4, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7753, file: !1, line: 1530, column: 37)
!7831 = !DILocation(line: 1535, column: 8, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7830, file: !1, line: 1535, column: 8)
!7833 = !DILocation(line: 1535, column: 12, scope: !7832)
!7834 = !DILocation(line: 1535, column: 8, scope: !7830)
!7835 = !DILocation(line: 1536, column: 20, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !1, line: 1535, column: 18)
!7837 = !DILocation(line: 1536, column: 28, scope: !7836)
!7838 = !DILocation(line: 1536, column: 5, scope: !7836)
!7839 = !DILocation(line: 1538, column: 58, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !1, line: 1538, column: 9)
!7841 = !DILocation(line: 1538, column: 70, scope: !7840)
!7842 = !DILocation(line: 1538, column: 74, scope: !7840)
!7843 = !DILocation(line: 1538, column: 9, scope: !7840)
!7844 = !DILocation(line: 1538, column: 9, scope: !7836)
!7845 = !DILocation(line: 1539, column: 21, scope: !7840)
!7846 = !DILocation(line: 1539, column: 29, scope: !7840)
!7847 = !DILocation(line: 1539, column: 6, scope: !7840)
!7848 = !DILocation(line: 1540, column: 4, scope: !7836)
!7849 = !DILocation(line: 1541, column: 4, scope: !7830)
!7850 = !DILocation(line: 1543, column: 8, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7830, file: !1, line: 1543, column: 8)
!7852 = !DILocation(line: 1543, column: 12, scope: !7851)
!7853 = !DILocation(line: 1543, column: 8, scope: !7830)
!7854 = !DILocation(line: 1544, column: 20, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 1543, column: 18)
!7856 = !DILocation(line: 1544, column: 28, scope: !7855)
!7857 = !DILocation(line: 1544, column: 5, scope: !7855)
!7858 = !DILocation(line: 1546, column: 58, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7855, file: !1, line: 1546, column: 9)
!7860 = !DILocation(line: 1546, column: 70, scope: !7859)
!7861 = !DILocation(line: 1546, column: 74, scope: !7859)
!7862 = !DILocation(line: 1546, column: 9, scope: !7859)
!7863 = !DILocation(line: 1546, column: 9, scope: !7855)
!7864 = !DILocation(line: 1547, column: 21, scope: !7859)
!7865 = !DILocation(line: 1547, column: 29, scope: !7859)
!7866 = !DILocation(line: 1547, column: 6, scope: !7859)
!7867 = !DILocation(line: 1548, column: 4, scope: !7855)
!7868 = !DILocation(line: 1550, column: 12, scope: !7830)
!7869 = !DILocation(line: 1550, column: 20, scope: !7830)
!7870 = !DILocation(line: 1550, column: 4, scope: !7830)
!7871 = !DILocation(line: 1553, column: 33, scope: !7830)
!7872 = !DILocation(line: 1553, column: 37, scope: !7830)
!7873 = !DILocation(line: 1553, column: 41, scope: !7830)
!7874 = !DILocation(line: 1553, column: 54, scope: !7830)
!7875 = !DILocation(line: 1553, column: 58, scope: !7830)
!7876 = !DILocation(line: 1553, column: 4, scope: !7830)
!7877 = !DILocation(line: 1554, column: 8, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7830, file: !1, line: 1554, column: 8)
!7879 = !DILocation(line: 1554, column: 19, scope: !7878)
!7880 = !DILocation(line: 1554, column: 22, scope: !7878)
!7881 = !DILocation(line: 1554, column: 34, scope: !7878)
!7882 = !DILocation(line: 1554, column: 39, scope: !7878)
!7883 = !DILocation(line: 1554, column: 8, scope: !7830)
!7884 = !DILocation(line: 1555, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7878, file: !1, line: 1554, column: 69)
!7886 = !DILocation(line: 1555, column: 21, scope: !7885)
!7887 = !DILocation(line: 1555, column: 5, scope: !7885)
!7888 = !DILocation(line: 1556, column: 4, scope: !7885)
!7889 = !DILocation(line: 1557, column: 4, scope: !7830)
!7890 = !DILocation(line: 1559, column: 8, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7830, file: !1, line: 1559, column: 8)
!7892 = !DILocation(line: 1559, column: 12, scope: !7891)
!7893 = !DILocation(line: 1559, column: 8, scope: !7830)
!7894 = !DILocation(line: 1560, column: 20, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 1559, column: 18)
!7896 = !DILocation(line: 1560, column: 28, scope: !7895)
!7897 = !DILocation(line: 1560, column: 5, scope: !7895)
!7898 = !DILocation(line: 1562, column: 58, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7895, file: !1, line: 1562, column: 9)
!7900 = !DILocation(line: 1562, column: 70, scope: !7899)
!7901 = !DILocation(line: 1562, column: 74, scope: !7899)
!7902 = !DILocation(line: 1562, column: 9, scope: !7899)
!7903 = !DILocation(line: 1562, column: 9, scope: !7895)
!7904 = !DILocation(line: 1563, column: 21, scope: !7899)
!7905 = !DILocation(line: 1563, column: 29, scope: !7899)
!7906 = !DILocation(line: 1563, column: 6, scope: !7899)
!7907 = !DILocation(line: 1564, column: 4, scope: !7895)
!7908 = !DILocation(line: 1566, column: 12, scope: !7830)
!7909 = !DILocation(line: 1566, column: 20, scope: !7830)
!7910 = !DILocation(line: 1566, column: 4, scope: !7830)
!7911 = !DILocation(line: 1567, column: 4, scope: !7830)
!7912 = !DILocation(line: 1569, column: 8, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7830, file: !1, line: 1569, column: 8)
!7914 = !DILocation(line: 1569, column: 12, scope: !7913)
!7915 = !DILocation(line: 1569, column: 8, scope: !7830)
!7916 = !DILocation(line: 1570, column: 20, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7913, file: !1, line: 1569, column: 18)
!7918 = !DILocation(line: 1570, column: 28, scope: !7917)
!7919 = !DILocation(line: 1570, column: 5, scope: !7917)
!7920 = !DILocation(line: 1572, column: 58, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7917, file: !1, line: 1572, column: 9)
!7922 = !DILocation(line: 1572, column: 70, scope: !7921)
!7923 = !DILocation(line: 1572, column: 74, scope: !7921)
!7924 = !DILocation(line: 1572, column: 9, scope: !7921)
!7925 = !DILocation(line: 1572, column: 9, scope: !7917)
!7926 = !DILocation(line: 1573, column: 21, scope: !7921)
!7927 = !DILocation(line: 1573, column: 29, scope: !7921)
!7928 = !DILocation(line: 1573, column: 6, scope: !7921)
!7929 = !DILocation(line: 1574, column: 4, scope: !7917)
!7930 = !DILocation(line: 1576, column: 12, scope: !7830)
!7931 = !DILocation(line: 1576, column: 20, scope: !7830)
!7932 = !DILocation(line: 1576, column: 4, scope: !7830)
!7933 = !DILocation(line: 1577, column: 4, scope: !7830)
!7934 = !DILocation(line: 1579, column: 1, scope: !7753)
!7935 = distinct !DISubprogram(name: "draw_actuator_camera", scope: !1, file: !1, line: 1581, type: !5812, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7936 = !DILocalVariable(name: "layout", arg: 1, scope: !7935, file: !1, line: 1581, type: !3660)
!7937 = !DILocation(line: 1581, column: 44, scope: !7935)
!7938 = !DILocalVariable(name: "ptr", arg: 2, scope: !7935, file: !1, line: 1581, type: !5688)
!7939 = !DILocation(line: 1581, column: 64, scope: !7935)
!7940 = !DILocalVariable(name: "row", scope: !7935, file: !1, line: 1583, type: !3660)
!7941 = !DILocation(line: 1583, column: 12, scope: !7935)
!7942 = !DILocation(line: 1584, column: 10, scope: !7935)
!7943 = !DILocation(line: 1584, column: 18, scope: !7935)
!7944 = !DILocation(line: 1584, column: 2, scope: !7935)
!7945 = !DILocation(line: 1586, column: 20, scope: !7935)
!7946 = !DILocation(line: 1586, column: 8, scope: !7935)
!7947 = !DILocation(line: 1586, column: 6, scope: !7935)
!7948 = !DILocation(line: 1587, column: 10, scope: !7935)
!7949 = !DILocation(line: 1587, column: 15, scope: !7935)
!7950 = !DILocation(line: 1587, column: 2, scope: !7935)
!7951 = !DILocation(line: 1588, column: 10, scope: !7935)
!7952 = !DILocation(line: 1588, column: 15, scope: !7935)
!7953 = !DILocation(line: 1588, column: 2, scope: !7935)
!7954 = !DILocation(line: 1590, column: 20, scope: !7935)
!7955 = !DILocation(line: 1590, column: 8, scope: !7935)
!7956 = !DILocation(line: 1590, column: 6, scope: !7935)
!7957 = !DILocation(line: 1591, column: 10, scope: !7935)
!7958 = !DILocation(line: 1591, column: 15, scope: !7935)
!7959 = !DILocation(line: 1591, column: 2, scope: !7935)
!7960 = !DILocation(line: 1592, column: 10, scope: !7935)
!7961 = !DILocation(line: 1592, column: 15, scope: !7935)
!7962 = !DILocation(line: 1592, column: 2, scope: !7935)
!7963 = !DILocation(line: 1594, column: 10, scope: !7935)
!7964 = !DILocation(line: 1594, column: 18, scope: !7935)
!7965 = !DILocation(line: 1594, column: 2, scope: !7935)
!7966 = !DILocation(line: 1595, column: 1, scope: !7935)
!7967 = distinct !DISubprogram(name: "draw_actuator_constraint", scope: !1, file: !1, line: 1597, type: !6049, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!7968 = !DILocalVariable(name: "layout", arg: 1, scope: !7967, file: !1, line: 1597, type: !3660)
!7969 = !DILocation(line: 1597, column: 48, scope: !7967)
!7970 = !DILocalVariable(name: "ptr", arg: 2, scope: !7967, file: !1, line: 1597, type: !5688)
!7971 = !DILocation(line: 1597, column: 68, scope: !7967)
!7972 = !DILocalVariable(name: "C", arg: 3, scope: !7967, file: !1, line: 1597, type: !2686)
!7973 = !DILocation(line: 1597, column: 83, scope: !7967)
!7974 = !DILocalVariable(name: "row", scope: !7967, file: !1, line: 1599, type: !3660)
!7975 = !DILocation(line: 1599, column: 12, scope: !7967)
!7976 = !DILocalVariable(name: "col", scope: !7967, file: !1, line: 1599, type: !3660)
!7977 = !DILocation(line: 1599, column: 18, scope: !7967)
!7978 = !DILocalVariable(name: "sub", scope: !7967, file: !1, line: 1599, type: !3660)
!7979 = !DILocation(line: 1599, column: 24, scope: !7967)
!7980 = !DILocalVariable(name: "split", scope: !7967, file: !1, line: 1599, type: !3660)
!7981 = !DILocation(line: 1599, column: 30, scope: !7967)
!7982 = !DILocalVariable(name: "main_ptr", scope: !7967, file: !1, line: 1600, type: !3645)
!7983 = !DILocation(line: 1600, column: 13, scope: !7967)
!7984 = !DILocation(line: 1602, column: 40, scope: !7967)
!7985 = !DILocation(line: 1602, column: 26, scope: !7967)
!7986 = !DILocation(line: 1602, column: 2, scope: !7967)
!7987 = !DILocation(line: 1604, column: 10, scope: !7967)
!7988 = !DILocation(line: 1604, column: 18, scope: !7967)
!7989 = !DILocation(line: 1604, column: 2, scope: !7967)
!7990 = !DILocation(line: 1605, column: 23, scope: !7967)
!7991 = !DILocation(line: 1605, column: 10, scope: !7967)
!7992 = !DILocation(line: 1605, column: 2, scope: !7967)
!7993 = !DILocation(line: 1607, column: 12, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7967, file: !1, line: 1605, column: 37)
!7995 = !DILocation(line: 1607, column: 20, scope: !7994)
!7996 = !DILocation(line: 1607, column: 4, scope: !7994)
!7997 = !DILocation(line: 1609, column: 22, scope: !7994)
!7998 = !DILocation(line: 1609, column: 10, scope: !7994)
!7999 = !DILocation(line: 1609, column: 8, scope: !7994)
!8000 = !DILocation(line: 1610, column: 12, scope: !7994)
!8001 = !DILocation(line: 1610, column: 17, scope: !7994)
!8002 = !DILocation(line: 1610, column: 4, scope: !7994)
!8003 = !DILocation(line: 1611, column: 12, scope: !7994)
!8004 = !DILocation(line: 1611, column: 17, scope: !7994)
!8005 = !DILocation(line: 1611, column: 4, scope: !7994)
!8006 = !DILocation(line: 1613, column: 12, scope: !7994)
!8007 = !DILocation(line: 1613, column: 20, scope: !7994)
!8008 = !DILocation(line: 1613, column: 4, scope: !7994)
!8009 = !DILocation(line: 1614, column: 4, scope: !7994)
!8010 = !DILocation(line: 1617, column: 26, scope: !7994)
!8011 = !DILocation(line: 1617, column: 12, scope: !7994)
!8012 = !DILocation(line: 1617, column: 10, scope: !7994)
!8013 = !DILocation(line: 1618, column: 12, scope: !7994)
!8014 = !DILocation(line: 1618, column: 19, scope: !7994)
!8015 = !DILocation(line: 1618, column: 4, scope: !7994)
!8016 = !DILocation(line: 1619, column: 22, scope: !7994)
!8017 = !DILocation(line: 1619, column: 10, scope: !7994)
!8018 = !DILocation(line: 1619, column: 8, scope: !7994)
!8019 = !DILocation(line: 1620, column: 12, scope: !7994)
!8020 = !DILocation(line: 1620, column: 17, scope: !7994)
!8021 = !DILocation(line: 1620, column: 4, scope: !7994)
!8022 = !DILocation(line: 1621, column: 12, scope: !7994)
!8023 = !DILocation(line: 1621, column: 17, scope: !7994)
!8024 = !DILocation(line: 1621, column: 4, scope: !7994)
!8025 = !DILocation(line: 1623, column: 22, scope: !7994)
!8026 = !DILocation(line: 1623, column: 10, scope: !7994)
!8027 = !DILocation(line: 1623, column: 8, scope: !7994)
!8028 = !DILocation(line: 1624, column: 25, scope: !7994)
!8029 = !DILocation(line: 1624, column: 10, scope: !7994)
!8030 = !DILocation(line: 1624, column: 8, scope: !7994)
!8031 = !DILocation(line: 1625, column: 12, scope: !7994)
!8032 = !DILocation(line: 1625, column: 4, scope: !7994)
!8033 = !DILocation(line: 1626, column: 12, scope: !7994)
!8034 = !DILocation(line: 1626, column: 17, scope: !7994)
!8035 = !DILocation(line: 1626, column: 4, scope: !7994)
!8036 = !DILocation(line: 1628, column: 25, scope: !7994)
!8037 = !DILocation(line: 1628, column: 10, scope: !7994)
!8038 = !DILocation(line: 1628, column: 8, scope: !7994)
!8039 = !DILocation(line: 1629, column: 12, scope: !7994)
!8040 = !DILocation(line: 1629, column: 17, scope: !7994)
!8041 = !DILocation(line: 1629, column: 4, scope: !7994)
!8042 = !DILocation(line: 1630, column: 25, scope: !7994)
!8043 = !DILocation(line: 1630, column: 10, scope: !7994)
!8044 = !DILocation(line: 1630, column: 8, scope: !7994)
!8045 = !DILocation(line: 1631, column: 22, scope: !7994)
!8046 = !DILocation(line: 1631, column: 43, scope: !7994)
!8047 = !DILocation(line: 1631, column: 27, scope: !7994)
!8048 = !DILocation(line: 1631, column: 70, scope: !7994)
!8049 = !DILocation(line: 1631, column: 4, scope: !7994)
!8050 = !DILocation(line: 1632, column: 12, scope: !7994)
!8051 = !DILocation(line: 1632, column: 17, scope: !7994)
!8052 = !DILocation(line: 1632, column: 4, scope: !7994)
!8053 = !DILocation(line: 1634, column: 12, scope: !7994)
!8054 = !DILocation(line: 1634, column: 20, scope: !7994)
!8055 = !DILocation(line: 1634, column: 4, scope: !7994)
!8056 = !DILocation(line: 1636, column: 26, scope: !7994)
!8057 = !DILocation(line: 1636, column: 12, scope: !7994)
!8058 = !DILocation(line: 1636, column: 10, scope: !7994)
!8059 = !DILocation(line: 1637, column: 12, scope: !7994)
!8060 = !DILocation(line: 1637, column: 19, scope: !7994)
!8061 = !DILocation(line: 1637, column: 4, scope: !7994)
!8062 = !DILocation(line: 1638, column: 24, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !7994, file: !1, line: 1638, column: 8)
!8064 = !DILocation(line: 1638, column: 8, scope: !8063)
!8065 = !DILocation(line: 1638, column: 8, scope: !7994)
!8066 = !DILocation(line: 1639, column: 20, scope: !8063)
!8067 = !DILocation(line: 1639, column: 27, scope: !8063)
!8068 = !DILocation(line: 1639, column: 5, scope: !8063)
!8069 = !DILocation(line: 1641, column: 13, scope: !8063)
!8070 = !DILocation(line: 1641, column: 20, scope: !8063)
!8071 = !DILocation(line: 1641, column: 5, scope: !8063)
!8072 = !DILocation(line: 1643, column: 26, scope: !7994)
!8073 = !DILocation(line: 1643, column: 12, scope: !7994)
!8074 = !DILocation(line: 1643, column: 10, scope: !7994)
!8075 = !DILocation(line: 1644, column: 12, scope: !7994)
!8076 = !DILocation(line: 1644, column: 19, scope: !7994)
!8077 = !DILocation(line: 1644, column: 4, scope: !7994)
!8078 = !DILocation(line: 1646, column: 22, scope: !7994)
!8079 = !DILocation(line: 1646, column: 10, scope: !7994)
!8080 = !DILocation(line: 1646, column: 8, scope: !7994)
!8081 = !DILocation(line: 1647, column: 12, scope: !7994)
!8082 = !DILocation(line: 1647, column: 17, scope: !7994)
!8083 = !DILocation(line: 1647, column: 4, scope: !7994)
!8084 = !DILocation(line: 1648, column: 12, scope: !7994)
!8085 = !DILocation(line: 1648, column: 17, scope: !7994)
!8086 = !DILocation(line: 1648, column: 4, scope: !7994)
!8087 = !DILocation(line: 1649, column: 4, scope: !7994)
!8088 = !DILocation(line: 1652, column: 12, scope: !7994)
!8089 = !DILocation(line: 1652, column: 20, scope: !7994)
!8090 = !DILocation(line: 1652, column: 4, scope: !7994)
!8091 = !DILocation(line: 1654, column: 20, scope: !7994)
!8092 = !DILocation(line: 1654, column: 8, scope: !7994)
!8093 = !DILocation(line: 1654, column: 7, scope: !7994)
!8094 = !DILocation(line: 1655, column: 12, scope: !7994)
!8095 = !DILocation(line: 1655, column: 17, scope: !7994)
!8096 = !DILocation(line: 1655, column: 4, scope: !7994)
!8097 = !DILocation(line: 1656, column: 12, scope: !7994)
!8098 = !DILocation(line: 1656, column: 17, scope: !7994)
!8099 = !DILocation(line: 1656, column: 4, scope: !7994)
!8100 = !DILocation(line: 1658, column: 20, scope: !7994)
!8101 = !DILocation(line: 1658, column: 8, scope: !7994)
!8102 = !DILocation(line: 1658, column: 7, scope: !7994)
!8103 = !DILocation(line: 1659, column: 12, scope: !7994)
!8104 = !DILocation(line: 1659, column: 17, scope: !7994)
!8105 = !DILocation(line: 1659, column: 4, scope: !7994)
!8106 = !DILocation(line: 1661, column: 20, scope: !7994)
!8107 = !DILocation(line: 1661, column: 8, scope: !7994)
!8108 = !DILocation(line: 1661, column: 7, scope: !7994)
!8109 = !DILocation(line: 1662, column: 12, scope: !7994)
!8110 = !DILocation(line: 1662, column: 17, scope: !7994)
!8111 = !DILocation(line: 1662, column: 4, scope: !7994)
!8112 = !DILocation(line: 1663, column: 12, scope: !7994)
!8113 = !DILocation(line: 1663, column: 17, scope: !7994)
!8114 = !DILocation(line: 1663, column: 4, scope: !7994)
!8115 = !DILocation(line: 1664, column: 4, scope: !7994)
!8116 = !DILocation(line: 1667, column: 26, scope: !7994)
!8117 = !DILocation(line: 1667, column: 12, scope: !7994)
!8118 = !DILocation(line: 1667, column: 10, scope: !7994)
!8119 = !DILocation(line: 1668, column: 22, scope: !7994)
!8120 = !DILocation(line: 1668, column: 10, scope: !7994)
!8121 = !DILocation(line: 1668, column: 8, scope: !7994)
!8122 = !DILocation(line: 1669, column: 12, scope: !7994)
!8123 = !DILocation(line: 1669, column: 17, scope: !7994)
!8124 = !DILocation(line: 1669, column: 4, scope: !7994)
!8125 = !DILocation(line: 1671, column: 12, scope: !7994)
!8126 = !DILocation(line: 1671, column: 17, scope: !7994)
!8127 = !DILocation(line: 1671, column: 4, scope: !7994)
!8128 = !DILocation(line: 1672, column: 12, scope: !7994)
!8129 = !DILocation(line: 1672, column: 19, scope: !7994)
!8130 = !DILocation(line: 1672, column: 4, scope: !7994)
!8131 = !DILocation(line: 1674, column: 22, scope: !7994)
!8132 = !DILocation(line: 1674, column: 10, scope: !7994)
!8133 = !DILocation(line: 1674, column: 8, scope: !7994)
!8134 = !DILocation(line: 1675, column: 12, scope: !7994)
!8135 = !DILocation(line: 1675, column: 17, scope: !7994)
!8136 = !DILocation(line: 1675, column: 4, scope: !7994)
!8137 = !DILocation(line: 1676, column: 26, scope: !7994)
!8138 = !DILocation(line: 1676, column: 12, scope: !7994)
!8139 = !DILocation(line: 1676, column: 10, scope: !7994)
!8140 = !DILocation(line: 1677, column: 12, scope: !7994)
!8141 = !DILocation(line: 1677, column: 19, scope: !7994)
!8142 = !DILocation(line: 1677, column: 4, scope: !7994)
!8143 = !DILocation(line: 1678, column: 12, scope: !7994)
!8144 = !DILocation(line: 1678, column: 19, scope: !7994)
!8145 = !DILocation(line: 1678, column: 4, scope: !7994)
!8146 = !DILocation(line: 1680, column: 26, scope: !7994)
!8147 = !DILocation(line: 1680, column: 12, scope: !7994)
!8148 = !DILocation(line: 1680, column: 10, scope: !7994)
!8149 = !DILocation(line: 1681, column: 12, scope: !7994)
!8150 = !DILocation(line: 1681, column: 19, scope: !7994)
!8151 = !DILocation(line: 1681, column: 4, scope: !7994)
!8152 = !DILocation(line: 1682, column: 24, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !7994, file: !1, line: 1682, column: 8)
!8154 = !DILocation(line: 1682, column: 8, scope: !8153)
!8155 = !DILocation(line: 1682, column: 8, scope: !7994)
!8156 = !DILocation(line: 1683, column: 20, scope: !8153)
!8157 = !DILocation(line: 1683, column: 27, scope: !8153)
!8158 = !DILocation(line: 1683, column: 5, scope: !8153)
!8159 = !DILocation(line: 1685, column: 13, scope: !8153)
!8160 = !DILocation(line: 1685, column: 20, scope: !8153)
!8161 = !DILocation(line: 1685, column: 5, scope: !8153)
!8162 = !DILocation(line: 1687, column: 26, scope: !7994)
!8163 = !DILocation(line: 1687, column: 12, scope: !7994)
!8164 = !DILocation(line: 1687, column: 10, scope: !7994)
!8165 = !DILocation(line: 1688, column: 12, scope: !7994)
!8166 = !DILocation(line: 1688, column: 19, scope: !7994)
!8167 = !DILocation(line: 1688, column: 4, scope: !7994)
!8168 = !DILocation(line: 1690, column: 22, scope: !7994)
!8169 = !DILocation(line: 1690, column: 10, scope: !7994)
!8170 = !DILocation(line: 1690, column: 8, scope: !7994)
!8171 = !DILocation(line: 1691, column: 12, scope: !7994)
!8172 = !DILocation(line: 1691, column: 17, scope: !7994)
!8173 = !DILocation(line: 1691, column: 4, scope: !7994)
!8174 = !DILocation(line: 1692, column: 12, scope: !7994)
!8175 = !DILocation(line: 1692, column: 17, scope: !7994)
!8176 = !DILocation(line: 1692, column: 4, scope: !7994)
!8177 = !DILocation(line: 1693, column: 4, scope: !7994)
!8178 = !DILocation(line: 1695, column: 1, scope: !7967)
!8179 = distinct !DISubprogram(name: "draw_actuator_edit_object", scope: !1, file: !1, line: 1697, type: !5812, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8180 = !DILocalVariable(name: "layout", arg: 1, scope: !8179, file: !1, line: 1697, type: !3660)
!8181 = !DILocation(line: 1697, column: 49, scope: !8179)
!8182 = !DILocalVariable(name: "ptr", arg: 2, scope: !8179, file: !1, line: 1697, type: !5688)
!8183 = !DILocation(line: 1697, column: 69, scope: !8179)
!8184 = !DILocalVariable(name: "ob", scope: !8179, file: !1, line: 1699, type: !1044)
!8185 = !DILocation(line: 1699, column: 10, scope: !8179)
!8186 = !DILocation(line: 1699, column: 25, scope: !8179)
!8187 = !DILocation(line: 1699, column: 30, scope: !8179)
!8188 = !DILocation(line: 1699, column: 33, scope: !8179)
!8189 = !DILocation(line: 1699, column: 15, scope: !8179)
!8190 = !DILocalVariable(name: "row", scope: !8179, file: !1, line: 1700, type: !3660)
!8191 = !DILocation(line: 1700, column: 12, scope: !8179)
!8192 = !DILocalVariable(name: "split", scope: !8179, file: !1, line: 1700, type: !3660)
!8193 = !DILocation(line: 1700, column: 18, scope: !8179)
!8194 = !DILocalVariable(name: "sub", scope: !8179, file: !1, line: 1700, type: !3660)
!8195 = !DILocation(line: 1700, column: 26, scope: !8179)
!8196 = !DILocation(line: 1701, column: 10, scope: !8179)
!8197 = !DILocation(line: 1701, column: 18, scope: !8179)
!8198 = !DILocation(line: 1701, column: 2, scope: !8179)
!8199 = !DILocation(line: 1703, column: 23, scope: !8179)
!8200 = !DILocation(line: 1703, column: 10, scope: !8179)
!8201 = !DILocation(line: 1703, column: 2, scope: !8179)
!8202 = !DILocation(line: 1705, column: 22, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8179, file: !1, line: 1703, column: 37)
!8204 = !DILocation(line: 1705, column: 10, scope: !8203)
!8205 = !DILocation(line: 1705, column: 8, scope: !8203)
!8206 = !DILocation(line: 1706, column: 12, scope: !8203)
!8207 = !DILocation(line: 1706, column: 17, scope: !8203)
!8208 = !DILocation(line: 1706, column: 4, scope: !8203)
!8209 = !DILocation(line: 1707, column: 12, scope: !8203)
!8210 = !DILocation(line: 1707, column: 17, scope: !8203)
!8211 = !DILocation(line: 1707, column: 4, scope: !8203)
!8212 = !DILocation(line: 1709, column: 26, scope: !8203)
!8213 = !DILocation(line: 1709, column: 12, scope: !8203)
!8214 = !DILocation(line: 1709, column: 10, scope: !8203)
!8215 = !DILocation(line: 1710, column: 22, scope: !8203)
!8216 = !DILocation(line: 1710, column: 10, scope: !8203)
!8217 = !DILocation(line: 1710, column: 8, scope: !8203)
!8218 = !DILocation(line: 1711, column: 12, scope: !8203)
!8219 = !DILocation(line: 1711, column: 17, scope: !8203)
!8220 = !DILocation(line: 1711, column: 4, scope: !8203)
!8221 = !DILocation(line: 1712, column: 12, scope: !8203)
!8222 = !DILocation(line: 1712, column: 19, scope: !8203)
!8223 = !DILocation(line: 1712, column: 4, scope: !8203)
!8224 = !DILocation(line: 1714, column: 26, scope: !8203)
!8225 = !DILocation(line: 1714, column: 12, scope: !8203)
!8226 = !DILocation(line: 1714, column: 10, scope: !8203)
!8227 = !DILocation(line: 1715, column: 22, scope: !8203)
!8228 = !DILocation(line: 1715, column: 10, scope: !8203)
!8229 = !DILocation(line: 1715, column: 8, scope: !8203)
!8230 = !DILocation(line: 1716, column: 12, scope: !8203)
!8231 = !DILocation(line: 1716, column: 17, scope: !8203)
!8232 = !DILocation(line: 1716, column: 4, scope: !8203)
!8233 = !DILocation(line: 1717, column: 12, scope: !8203)
!8234 = !DILocation(line: 1717, column: 19, scope: !8203)
!8235 = !DILocation(line: 1717, column: 4, scope: !8203)
!8236 = !DILocation(line: 1718, column: 4, scope: !8203)
!8237 = !DILocation(line: 1720, column: 4, scope: !8203)
!8238 = !DILocation(line: 1722, column: 8, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8203, file: !1, line: 1722, column: 8)
!8240 = !DILocation(line: 1722, column: 12, scope: !8239)
!8241 = !DILocation(line: 1722, column: 17, scope: !8239)
!8242 = !DILocation(line: 1722, column: 8, scope: !8203)
!8243 = !DILocation(line: 1723, column: 13, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !1, line: 1722, column: 29)
!8245 = !DILocation(line: 1723, column: 5, scope: !8244)
!8246 = !DILocation(line: 1724, column: 5, scope: !8244)
!8247 = !DILocation(line: 1726, column: 26, scope: !8203)
!8248 = !DILocation(line: 1726, column: 12, scope: !8203)
!8249 = !DILocation(line: 1726, column: 10, scope: !8203)
!8250 = !DILocation(line: 1727, column: 12, scope: !8203)
!8251 = !DILocation(line: 1727, column: 19, scope: !8203)
!8252 = !DILocation(line: 1727, column: 4, scope: !8203)
!8253 = !DILocation(line: 1728, column: 22, scope: !8203)
!8254 = !DILocation(line: 1728, column: 10, scope: !8203)
!8255 = !DILocation(line: 1728, column: 8, scope: !8203)
!8256 = !DILocation(line: 1729, column: 12, scope: !8203)
!8257 = !DILocation(line: 1729, column: 17, scope: !8203)
!8258 = !DILocation(line: 1729, column: 4, scope: !8203)
!8259 = !DILocation(line: 1730, column: 12, scope: !8203)
!8260 = !DILocation(line: 1730, column: 17, scope: !8203)
!8261 = !DILocation(line: 1730, column: 4, scope: !8203)
!8262 = !DILocation(line: 1731, column: 4, scope: !8203)
!8263 = !DILocation(line: 1733, column: 26, scope: !8203)
!8264 = !DILocation(line: 1733, column: 12, scope: !8203)
!8265 = !DILocation(line: 1733, column: 10, scope: !8203)
!8266 = !DILocation(line: 1734, column: 12, scope: !8203)
!8267 = !DILocation(line: 1734, column: 19, scope: !8203)
!8268 = !DILocation(line: 1734, column: 4, scope: !8203)
!8269 = !DILocation(line: 1735, column: 24, scope: !8203)
!8270 = !DILocation(line: 1735, column: 10, scope: !8203)
!8271 = !DILocation(line: 1735, column: 8, scope: !8203)
!8272 = !DILocation(line: 1736, column: 12, scope: !8203)
!8273 = !DILocation(line: 1736, column: 17, scope: !8203)
!8274 = !DILocation(line: 1736, column: 4, scope: !8203)
!8275 = !DILocation(line: 1737, column: 12, scope: !8203)
!8276 = !DILocation(line: 1737, column: 17, scope: !8203)
!8277 = !DILocation(line: 1737, column: 4, scope: !8203)
!8278 = !DILocation(line: 1739, column: 22, scope: !8203)
!8279 = !DILocation(line: 1739, column: 10, scope: !8203)
!8280 = !DILocation(line: 1739, column: 8, scope: !8203)
!8281 = !DILocation(line: 1740, column: 12, scope: !8203)
!8282 = !DILocation(line: 1740, column: 17, scope: !8203)
!8283 = !DILocation(line: 1740, column: 4, scope: !8203)
!8284 = !DILocation(line: 1742, column: 22, scope: !8203)
!8285 = !DILocation(line: 1742, column: 10, scope: !8203)
!8286 = !DILocation(line: 1742, column: 8, scope: !8203)
!8287 = !DILocation(line: 1743, column: 12, scope: !8203)
!8288 = !DILocation(line: 1743, column: 17, scope: !8203)
!8289 = !DILocation(line: 1743, column: 4, scope: !8203)
!8290 = !DILocation(line: 1744, column: 4, scope: !8203)
!8291 = !DILocation(line: 1746, column: 8, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8203, file: !1, line: 1746, column: 8)
!8293 = !DILocation(line: 1746, column: 12, scope: !8292)
!8294 = !DILocation(line: 1746, column: 17, scope: !8292)
!8295 = !DILocation(line: 1746, column: 8, scope: !8203)
!8296 = !DILocation(line: 1747, column: 13, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8292, file: !1, line: 1746, column: 29)
!8298 = !DILocation(line: 1747, column: 5, scope: !8297)
!8299 = !DILocation(line: 1748, column: 5, scope: !8297)
!8300 = !DILocation(line: 1750, column: 12, scope: !8203)
!8301 = !DILocation(line: 1750, column: 20, scope: !8203)
!8302 = !DILocation(line: 1750, column: 4, scope: !8203)
!8303 = !DILocation(line: 1751, column: 21, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8203, file: !1, line: 1751, column: 8)
!8305 = !DILocation(line: 1751, column: 8, scope: !8304)
!8306 = !DILocation(line: 1751, column: 47, scope: !8304)
!8307 = !DILocation(line: 1751, column: 8, scope: !8203)
!8308 = !DILocation(line: 1752, column: 13, scope: !8304)
!8309 = !DILocation(line: 1752, column: 21, scope: !8304)
!8310 = !DILocation(line: 1752, column: 5, scope: !8304)
!8311 = !DILocation(line: 1753, column: 4, scope: !8203)
!8312 = !DILocation(line: 1755, column: 1, scope: !8179)
!8313 = distinct !DISubprogram(name: "draw_actuator_filter_2d", scope: !1, file: !1, line: 1757, type: !5812, scopeLine: 1758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8314 = !DILocalVariable(name: "layout", arg: 1, scope: !8313, file: !1, line: 1757, type: !3660)
!8315 = !DILocation(line: 1757, column: 47, scope: !8313)
!8316 = !DILocalVariable(name: "ptr", arg: 2, scope: !8313, file: !1, line: 1757, type: !5688)
!8317 = !DILocation(line: 1757, column: 67, scope: !8313)
!8318 = !DILocalVariable(name: "row", scope: !8313, file: !1, line: 1759, type: !3660)
!8319 = !DILocation(line: 1759, column: 12, scope: !8313)
!8320 = !DILocalVariable(name: "split", scope: !8313, file: !1, line: 1759, type: !3660)
!8321 = !DILocation(line: 1759, column: 18, scope: !8313)
!8322 = !DILocation(line: 1761, column: 10, scope: !8313)
!8323 = !DILocation(line: 1761, column: 18, scope: !8313)
!8324 = !DILocation(line: 1761, column: 2, scope: !8313)
!8325 = !DILocation(line: 1762, column: 23, scope: !8313)
!8326 = !DILocation(line: 1762, column: 10, scope: !8313)
!8327 = !DILocation(line: 1762, column: 2, scope: !8313)
!8328 = !DILocation(line: 1764, column: 12, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 1762, column: 37)
!8330 = !DILocation(line: 1764, column: 20, scope: !8329)
!8331 = !DILocation(line: 1764, column: 4, scope: !8329)
!8332 = !DILocation(line: 1765, column: 12, scope: !8329)
!8333 = !DILocation(line: 1765, column: 20, scope: !8329)
!8334 = !DILocation(line: 1765, column: 4, scope: !8329)
!8335 = !DILocation(line: 1766, column: 4, scope: !8329)
!8336 = !DILocation(line: 1768, column: 24, scope: !8329)
!8337 = !DILocation(line: 1768, column: 10, scope: !8329)
!8338 = !DILocation(line: 1768, column: 9, scope: !8329)
!8339 = !DILocation(line: 1769, column: 22, scope: !8329)
!8340 = !DILocation(line: 1769, column: 10, scope: !8329)
!8341 = !DILocation(line: 1769, column: 8, scope: !8329)
!8342 = !DILocation(line: 1770, column: 22, scope: !8329)
!8343 = !DILocation(line: 1770, column: 43, scope: !8329)
!8344 = !DILocation(line: 1770, column: 27, scope: !8329)
!8345 = !DILocation(line: 1770, column: 67, scope: !8329)
!8346 = !DILocation(line: 1770, column: 4, scope: !8329)
!8347 = !DILocation(line: 1771, column: 12, scope: !8329)
!8348 = !DILocation(line: 1771, column: 17, scope: !8329)
!8349 = !DILocation(line: 1771, column: 4, scope: !8329)
!8350 = !DILocation(line: 1772, column: 12, scope: !8329)
!8351 = !DILocation(line: 1772, column: 19, scope: !8329)
!8352 = !DILocation(line: 1772, column: 4, scope: !8329)
!8353 = !DILocation(line: 1773, column: 4, scope: !8329)
!8354 = !DILocation(line: 1775, column: 12, scope: !8329)
!8355 = !DILocation(line: 1775, column: 20, scope: !8329)
!8356 = !DILocation(line: 1775, column: 4, scope: !8329)
!8357 = !DILocation(line: 1776, column: 4, scope: !8329)
!8358 = !DILocation(line: 1778, column: 1, scope: !8313)
!8359 = distinct !DISubprogram(name: "draw_actuator_game", scope: !1, file: !1, line: 1780, type: !5812, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8360 = !DILocalVariable(name: "layout", arg: 1, scope: !8359, file: !1, line: 1780, type: !3660)
!8361 = !DILocation(line: 1780, column: 42, scope: !8359)
!8362 = !DILocalVariable(name: "ptr", arg: 2, scope: !8359, file: !1, line: 1780, type: !5688)
!8363 = !DILocation(line: 1780, column: 62, scope: !8359)
!8364 = !DILocation(line: 1782, column: 10, scope: !8359)
!8365 = !DILocation(line: 1782, column: 18, scope: !8359)
!8366 = !DILocation(line: 1782, column: 2, scope: !8359)
!8367 = !DILocation(line: 1783, column: 19, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8359, file: !1, line: 1783, column: 6)
!8369 = !DILocation(line: 1783, column: 6, scope: !8368)
!8370 = !DILocation(line: 1783, column: 32, scope: !8368)
!8371 = !DILocation(line: 1783, column: 6, scope: !8359)
!8372 = !DILocation(line: 1784, column: 11, scope: !8368)
!8373 = !DILocation(line: 1784, column: 19, scope: !8368)
!8374 = !DILocation(line: 1784, column: 3, scope: !8368)
!8375 = !DILocation(line: 1785, column: 1, scope: !8359)
!8376 = distinct !DISubprogram(name: "draw_actuator_message", scope: !1, file: !1, line: 1787, type: !6049, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8377 = !DILocalVariable(name: "layout", arg: 1, scope: !8376, file: !1, line: 1787, type: !3660)
!8378 = !DILocation(line: 1787, column: 45, scope: !8376)
!8379 = !DILocalVariable(name: "ptr", arg: 2, scope: !8376, file: !1, line: 1787, type: !5688)
!8380 = !DILocation(line: 1787, column: 65, scope: !8376)
!8381 = !DILocalVariable(name: "C", arg: 3, scope: !8376, file: !1, line: 1787, type: !2686)
!8382 = !DILocation(line: 1787, column: 80, scope: !8376)
!8383 = !DILocalVariable(name: "ob", scope: !8376, file: !1, line: 1789, type: !1044)
!8384 = !DILocation(line: 1789, column: 10, scope: !8376)
!8385 = !DILocalVariable(name: "main_ptr", scope: !8376, file: !1, line: 1790, type: !3645)
!8386 = !DILocation(line: 1790, column: 13, scope: !8376)
!8387 = !DILocalVariable(name: "settings_ptr", scope: !8376, file: !1, line: 1790, type: !3645)
!8388 = !DILocation(line: 1790, column: 23, scope: !8376)
!8389 = !DILocalVariable(name: "row", scope: !8376, file: !1, line: 1791, type: !3660)
!8390 = !DILocation(line: 1791, column: 12, scope: !8376)
!8391 = !DILocation(line: 1793, column: 40, scope: !8376)
!8392 = !DILocation(line: 1793, column: 26, scope: !8376)
!8393 = !DILocation(line: 1793, column: 2, scope: !8376)
!8394 = !DILocation(line: 1795, column: 17, scope: !8376)
!8395 = !DILocation(line: 1795, column: 22, scope: !8376)
!8396 = !DILocation(line: 1795, column: 25, scope: !8376)
!8397 = !DILocation(line: 1795, column: 7, scope: !8376)
!8398 = !DILocation(line: 1795, column: 5, scope: !8376)
!8399 = !DILocation(line: 1796, column: 27, scope: !8376)
!8400 = !DILocation(line: 1796, column: 21, scope: !8376)
!8401 = !DILocation(line: 1796, column: 56, scope: !8376)
!8402 = !DILocation(line: 1796, column: 2, scope: !8376)
!8403 = !DILocation(line: 1798, column: 17, scope: !8376)
!8404 = !DILocation(line: 1798, column: 25, scope: !8376)
!8405 = !DILocation(line: 1798, column: 2, scope: !8376)
!8406 = !DILocation(line: 1799, column: 10, scope: !8376)
!8407 = !DILocation(line: 1799, column: 18, scope: !8376)
!8408 = !DILocation(line: 1799, column: 2, scope: !8376)
!8409 = !DILocation(line: 1801, column: 20, scope: !8376)
!8410 = !DILocation(line: 1801, column: 8, scope: !8376)
!8411 = !DILocation(line: 1801, column: 6, scope: !8376)
!8412 = !DILocation(line: 1802, column: 10, scope: !8376)
!8413 = !DILocation(line: 1802, column: 15, scope: !8376)
!8414 = !DILocation(line: 1802, column: 2, scope: !8376)
!8415 = !DILocation(line: 1804, column: 19, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8376, file: !1, line: 1804, column: 6)
!8417 = !DILocation(line: 1804, column: 6, scope: !8416)
!8418 = !DILocation(line: 1804, column: 37, scope: !8416)
!8419 = !DILocation(line: 1804, column: 6, scope: !8376)
!8420 = !DILocation(line: 1805, column: 11, scope: !8416)
!8421 = !DILocation(line: 1805, column: 16, scope: !8416)
!8422 = !DILocation(line: 1805, column: 3, scope: !8416)
!8423 = !DILocation(line: 1807, column: 18, scope: !8416)
!8424 = !DILocation(line: 1807, column: 23, scope: !8416)
!8425 = !DILocation(line: 1807, column: 3, scope: !8416)
!8426 = !DILocation(line: 1808, column: 1, scope: !8376)
!8427 = distinct !DISubprogram(name: "draw_actuator_motion", scope: !1, file: !1, line: 1810, type: !5812, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8428 = !DILocalVariable(name: "layout", arg: 1, scope: !8427, file: !1, line: 1810, type: !3660)
!8429 = !DILocation(line: 1810, column: 44, scope: !8427)
!8430 = !DILocalVariable(name: "ptr", arg: 2, scope: !8427, file: !1, line: 1810, type: !5688)
!8431 = !DILocation(line: 1810, column: 64, scope: !8427)
!8432 = !DILocalVariable(name: "ob", scope: !8427, file: !1, line: 1812, type: !1044)
!8433 = !DILocation(line: 1812, column: 10, scope: !8427)
!8434 = !DILocalVariable(name: "settings_ptr", scope: !8427, file: !1, line: 1813, type: !3645)
!8435 = !DILocation(line: 1813, column: 13, scope: !8427)
!8436 = !DILocalVariable(name: "split", scope: !8427, file: !1, line: 1814, type: !3660)
!8437 = !DILocation(line: 1814, column: 12, scope: !8427)
!8438 = !DILocalVariable(name: "row", scope: !8427, file: !1, line: 1814, type: !3660)
!8439 = !DILocation(line: 1814, column: 20, scope: !8427)
!8440 = !DILocalVariable(name: "col", scope: !8427, file: !1, line: 1814, type: !3660)
!8441 = !DILocation(line: 1814, column: 26, scope: !8427)
!8442 = !DILocalVariable(name: "sub", scope: !8427, file: !1, line: 1814, type: !3660)
!8443 = !DILocation(line: 1814, column: 32, scope: !8427)
!8444 = !DILocalVariable(name: "physics_type", scope: !8427, file: !1, line: 1815, type: !1085)
!8445 = !DILocation(line: 1815, column: 6, scope: !8427)
!8446 = !DILocation(line: 1817, column: 17, scope: !8427)
!8447 = !DILocation(line: 1817, column: 22, scope: !8427)
!8448 = !DILocation(line: 1817, column: 25, scope: !8427)
!8449 = !DILocation(line: 1817, column: 7, scope: !8427)
!8450 = !DILocation(line: 1817, column: 5, scope: !8427)
!8451 = !DILocation(line: 1818, column: 27, scope: !8427)
!8452 = !DILocation(line: 1818, column: 21, scope: !8427)
!8453 = !DILocation(line: 1818, column: 56, scope: !8427)
!8454 = !DILocation(line: 1818, column: 2, scope: !8427)
!8455 = !DILocation(line: 1819, column: 17, scope: !8427)
!8456 = !DILocation(line: 1819, column: 15, scope: !8427)
!8457 = !DILocation(line: 1821, column: 10, scope: !8427)
!8458 = !DILocation(line: 1821, column: 18, scope: !8427)
!8459 = !DILocation(line: 1821, column: 2, scope: !8427)
!8460 = !DILocation(line: 1823, column: 23, scope: !8427)
!8461 = !DILocation(line: 1823, column: 10, scope: !8427)
!8462 = !DILocation(line: 1823, column: 2, scope: !8427)
!8463 = !DILocation(line: 1825, column: 26, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8427, file: !1, line: 1823, column: 37)
!8465 = !DILocation(line: 1825, column: 12, scope: !8464)
!8466 = !DILocation(line: 1825, column: 10, scope: !8464)
!8467 = !DILocation(line: 1826, column: 22, scope: !8464)
!8468 = !DILocation(line: 1826, column: 10, scope: !8464)
!8469 = !DILocation(line: 1826, column: 8, scope: !8464)
!8470 = !DILocation(line: 1827, column: 12, scope: !8464)
!8471 = !DILocation(line: 1827, column: 17, scope: !8464)
!8472 = !DILocation(line: 1827, column: 4, scope: !8464)
!8473 = !DILocation(line: 1828, column: 12, scope: !8464)
!8474 = !DILocation(line: 1828, column: 19, scope: !8464)
!8475 = !DILocation(line: 1828, column: 4, scope: !8464)
!8476 = !DILocation(line: 1830, column: 26, scope: !8464)
!8477 = !DILocation(line: 1830, column: 12, scope: !8464)
!8478 = !DILocation(line: 1830, column: 10, scope: !8464)
!8479 = !DILocation(line: 1831, column: 22, scope: !8464)
!8480 = !DILocation(line: 1831, column: 10, scope: !8464)
!8481 = !DILocation(line: 1831, column: 8, scope: !8464)
!8482 = !DILocation(line: 1832, column: 12, scope: !8464)
!8483 = !DILocation(line: 1832, column: 17, scope: !8464)
!8484 = !DILocation(line: 1832, column: 4, scope: !8464)
!8485 = !DILocation(line: 1833, column: 12, scope: !8464)
!8486 = !DILocation(line: 1833, column: 19, scope: !8464)
!8487 = !DILocation(line: 1833, column: 4, scope: !8464)
!8488 = !DILocation(line: 1835, column: 8, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8464, file: !1, line: 1835, column: 8)
!8490 = !DILocation(line: 1835, column: 8, scope: !8464)
!8491 = !DILocation(line: 1836, column: 13, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8489, file: !1, line: 1835, column: 89)
!8493 = !DILocation(line: 1836, column: 5, scope: !8492)
!8494 = !DILocation(line: 1837, column: 27, scope: !8492)
!8495 = !DILocation(line: 1837, column: 13, scope: !8492)
!8496 = !DILocation(line: 1837, column: 11, scope: !8492)
!8497 = !DILocation(line: 1838, column: 23, scope: !8492)
!8498 = !DILocation(line: 1838, column: 11, scope: !8492)
!8499 = !DILocation(line: 1838, column: 9, scope: !8492)
!8500 = !DILocation(line: 1839, column: 13, scope: !8492)
!8501 = !DILocation(line: 1839, column: 18, scope: !8492)
!8502 = !DILocation(line: 1839, column: 5, scope: !8492)
!8503 = !DILocation(line: 1840, column: 13, scope: !8492)
!8504 = !DILocation(line: 1840, column: 20, scope: !8492)
!8505 = !DILocation(line: 1840, column: 5, scope: !8492)
!8506 = !DILocation(line: 1842, column: 27, scope: !8492)
!8507 = !DILocation(line: 1842, column: 13, scope: !8492)
!8508 = !DILocation(line: 1842, column: 11, scope: !8492)
!8509 = !DILocation(line: 1843, column: 23, scope: !8492)
!8510 = !DILocation(line: 1843, column: 11, scope: !8492)
!8511 = !DILocation(line: 1843, column: 9, scope: !8492)
!8512 = !DILocation(line: 1844, column: 13, scope: !8492)
!8513 = !DILocation(line: 1844, column: 18, scope: !8492)
!8514 = !DILocation(line: 1844, column: 5, scope: !8492)
!8515 = !DILocation(line: 1845, column: 13, scope: !8492)
!8516 = !DILocation(line: 1845, column: 20, scope: !8492)
!8517 = !DILocation(line: 1845, column: 5, scope: !8492)
!8518 = !DILocation(line: 1847, column: 27, scope: !8492)
!8519 = !DILocation(line: 1847, column: 13, scope: !8492)
!8520 = !DILocation(line: 1847, column: 11, scope: !8492)
!8521 = !DILocation(line: 1848, column: 23, scope: !8492)
!8522 = !DILocation(line: 1848, column: 11, scope: !8492)
!8523 = !DILocation(line: 1848, column: 9, scope: !8492)
!8524 = !DILocation(line: 1849, column: 13, scope: !8492)
!8525 = !DILocation(line: 1849, column: 18, scope: !8492)
!8526 = !DILocation(line: 1849, column: 5, scope: !8492)
!8527 = !DILocation(line: 1850, column: 23, scope: !8492)
!8528 = !DILocation(line: 1850, column: 11, scope: !8492)
!8529 = !DILocation(line: 1850, column: 9, scope: !8492)
!8530 = !DILocation(line: 1851, column: 13, scope: !8492)
!8531 = !DILocation(line: 1851, column: 18, scope: !8492)
!8532 = !DILocation(line: 1851, column: 5, scope: !8492)
!8533 = !DILocation(line: 1852, column: 13, scope: !8492)
!8534 = !DILocation(line: 1852, column: 18, scope: !8492)
!8535 = !DILocation(line: 1852, column: 5, scope: !8492)
!8536 = !DILocation(line: 1854, column: 27, scope: !8492)
!8537 = !DILocation(line: 1854, column: 13, scope: !8492)
!8538 = !DILocation(line: 1854, column: 11, scope: !8492)
!8539 = !DILocation(line: 1855, column: 23, scope: !8492)
!8540 = !DILocation(line: 1855, column: 11, scope: !8492)
!8541 = !DILocation(line: 1855, column: 9, scope: !8492)
!8542 = !DILocation(line: 1856, column: 13, scope: !8492)
!8543 = !DILocation(line: 1856, column: 18, scope: !8492)
!8544 = !DILocation(line: 1856, column: 5, scope: !8492)
!8545 = !DILocation(line: 1857, column: 13, scope: !8492)
!8546 = !DILocation(line: 1857, column: 20, scope: !8492)
!8547 = !DILocation(line: 1857, column: 5, scope: !8492)
!8548 = !DILocation(line: 1859, column: 13, scope: !8492)
!8549 = !DILocation(line: 1859, column: 21, scope: !8492)
!8550 = !DILocation(line: 1859, column: 5, scope: !8492)
!8551 = !DILocation(line: 1860, column: 4, scope: !8492)
!8552 = !DILocation(line: 1861, column: 4, scope: !8464)
!8553 = !DILocation(line: 1863, column: 12, scope: !8464)
!8554 = !DILocation(line: 1863, column: 20, scope: !8464)
!8555 = !DILocation(line: 1863, column: 4, scope: !8464)
!8556 = !DILocation(line: 1865, column: 26, scope: !8464)
!8557 = !DILocation(line: 1865, column: 12, scope: !8464)
!8558 = !DILocation(line: 1865, column: 10, scope: !8464)
!8559 = !DILocation(line: 1866, column: 22, scope: !8464)
!8560 = !DILocation(line: 1866, column: 10, scope: !8464)
!8561 = !DILocation(line: 1866, column: 8, scope: !8464)
!8562 = !DILocation(line: 1867, column: 12, scope: !8464)
!8563 = !DILocation(line: 1867, column: 17, scope: !8464)
!8564 = !DILocation(line: 1867, column: 4, scope: !8464)
!8565 = !DILocation(line: 1868, column: 12, scope: !8464)
!8566 = !DILocation(line: 1868, column: 19, scope: !8464)
!8567 = !DILocation(line: 1868, column: 4, scope: !8464)
!8568 = !DILocation(line: 1870, column: 22, scope: !8464)
!8569 = !DILocation(line: 1870, column: 10, scope: !8464)
!8570 = !DILocation(line: 1870, column: 8, scope: !8464)
!8571 = !DILocation(line: 1871, column: 25, scope: !8464)
!8572 = !DILocation(line: 1871, column: 10, scope: !8464)
!8573 = !DILocation(line: 1871, column: 8, scope: !8464)
!8574 = !DILocation(line: 1872, column: 12, scope: !8464)
!8575 = !DILocation(line: 1872, column: 17, scope: !8464)
!8576 = !DILocation(line: 1872, column: 4, scope: !8464)
!8577 = !DILocation(line: 1873, column: 25, scope: !8464)
!8578 = !DILocation(line: 1873, column: 10, scope: !8464)
!8579 = !DILocation(line: 1873, column: 8, scope: !8464)
!8580 = !DILocation(line: 1874, column: 22, scope: !8464)
!8581 = !DILocation(line: 1874, column: 43, scope: !8464)
!8582 = !DILocation(line: 1874, column: 27, scope: !8464)
!8583 = !DILocation(line: 1874, column: 69, scope: !8464)
!8584 = !DILocation(line: 1874, column: 4, scope: !8464)
!8585 = !DILocation(line: 1875, column: 12, scope: !8464)
!8586 = !DILocation(line: 1875, column: 17, scope: !8464)
!8587 = !DILocation(line: 1875, column: 4, scope: !8464)
!8588 = !DILocation(line: 1876, column: 12, scope: !8464)
!8589 = !DILocation(line: 1876, column: 17, scope: !8464)
!8590 = !DILocation(line: 1876, column: 4, scope: !8464)
!8591 = !DILocation(line: 1878, column: 25, scope: !8464)
!8592 = !DILocation(line: 1878, column: 10, scope: !8464)
!8593 = !DILocation(line: 1878, column: 8, scope: !8464)
!8594 = !DILocation(line: 1879, column: 12, scope: !8464)
!8595 = !DILocation(line: 1879, column: 17, scope: !8464)
!8596 = !DILocation(line: 1879, column: 4, scope: !8464)
!8597 = !DILocation(line: 1880, column: 25, scope: !8464)
!8598 = !DILocation(line: 1880, column: 10, scope: !8464)
!8599 = !DILocation(line: 1880, column: 8, scope: !8464)
!8600 = !DILocation(line: 1881, column: 22, scope: !8464)
!8601 = !DILocation(line: 1881, column: 43, scope: !8464)
!8602 = !DILocation(line: 1881, column: 27, scope: !8464)
!8603 = !DILocation(line: 1881, column: 69, scope: !8464)
!8604 = !DILocation(line: 1881, column: 4, scope: !8464)
!8605 = !DILocation(line: 1882, column: 12, scope: !8464)
!8606 = !DILocation(line: 1882, column: 17, scope: !8464)
!8607 = !DILocation(line: 1882, column: 4, scope: !8464)
!8608 = !DILocation(line: 1883, column: 12, scope: !8464)
!8609 = !DILocation(line: 1883, column: 17, scope: !8464)
!8610 = !DILocation(line: 1883, column: 4, scope: !8464)
!8611 = !DILocation(line: 1885, column: 25, scope: !8464)
!8612 = !DILocation(line: 1885, column: 10, scope: !8464)
!8613 = !DILocation(line: 1885, column: 8, scope: !8464)
!8614 = !DILocation(line: 1886, column: 12, scope: !8464)
!8615 = !DILocation(line: 1886, column: 17, scope: !8464)
!8616 = !DILocation(line: 1886, column: 4, scope: !8464)
!8617 = !DILocation(line: 1887, column: 25, scope: !8464)
!8618 = !DILocation(line: 1887, column: 10, scope: !8464)
!8619 = !DILocation(line: 1887, column: 8, scope: !8464)
!8620 = !DILocation(line: 1888, column: 22, scope: !8464)
!8621 = !DILocation(line: 1888, column: 43, scope: !8464)
!8622 = !DILocation(line: 1888, column: 27, scope: !8464)
!8623 = !DILocation(line: 1888, column: 69, scope: !8464)
!8624 = !DILocation(line: 1888, column: 4, scope: !8464)
!8625 = !DILocation(line: 1889, column: 12, scope: !8464)
!8626 = !DILocation(line: 1889, column: 17, scope: !8464)
!8627 = !DILocation(line: 1889, column: 4, scope: !8464)
!8628 = !DILocation(line: 1890, column: 12, scope: !8464)
!8629 = !DILocation(line: 1890, column: 17, scope: !8464)
!8630 = !DILocation(line: 1890, column: 4, scope: !8464)
!8631 = !DILocation(line: 1896, column: 25, scope: !8464)
!8632 = !DILocation(line: 1896, column: 10, scope: !8464)
!8633 = !DILocation(line: 1896, column: 8, scope: !8464)
!8634 = !DILocation(line: 1897, column: 12, scope: !8464)
!8635 = !DILocation(line: 1897, column: 17, scope: !8464)
!8636 = !DILocation(line: 1897, column: 4, scope: !8464)
!8637 = !DILocation(line: 1898, column: 12, scope: !8464)
!8638 = !DILocation(line: 1898, column: 17, scope: !8464)
!8639 = !DILocation(line: 1898, column: 4, scope: !8464)
!8640 = !DILocation(line: 1899, column: 12, scope: !8464)
!8641 = !DILocation(line: 1899, column: 17, scope: !8464)
!8642 = !DILocation(line: 1899, column: 4, scope: !8464)
!8643 = !DILocation(line: 1900, column: 4, scope: !8464)
!8644 = !DILocation(line: 1902, column: 26, scope: !8464)
!8645 = !DILocation(line: 1902, column: 12, scope: !8464)
!8646 = !DILocation(line: 1902, column: 10, scope: !8464)
!8647 = !DILocation(line: 1903, column: 22, scope: !8464)
!8648 = !DILocation(line: 1903, column: 10, scope: !8464)
!8649 = !DILocation(line: 1903, column: 8, scope: !8464)
!8650 = !DILocation(line: 1904, column: 12, scope: !8464)
!8651 = !DILocation(line: 1904, column: 17, scope: !8464)
!8652 = !DILocation(line: 1904, column: 4, scope: !8464)
!8653 = !DILocation(line: 1905, column: 22, scope: !8464)
!8654 = !DILocation(line: 1905, column: 10, scope: !8464)
!8655 = !DILocation(line: 1905, column: 8, scope: !8464)
!8656 = !DILocation(line: 1906, column: 12, scope: !8464)
!8657 = !DILocation(line: 1906, column: 17, scope: !8464)
!8658 = !DILocation(line: 1906, column: 4, scope: !8464)
!8659 = !DILocation(line: 1907, column: 12, scope: !8464)
!8660 = !DILocation(line: 1907, column: 17, scope: !8464)
!8661 = !DILocation(line: 1907, column: 4, scope: !8464)
!8662 = !DILocation(line: 1909, column: 26, scope: !8464)
!8663 = !DILocation(line: 1909, column: 12, scope: !8464)
!8664 = !DILocation(line: 1909, column: 10, scope: !8464)
!8665 = !DILocation(line: 1910, column: 22, scope: !8464)
!8666 = !DILocation(line: 1910, column: 10, scope: !8464)
!8667 = !DILocation(line: 1910, column: 8, scope: !8464)
!8668 = !DILocation(line: 1911, column: 12, scope: !8464)
!8669 = !DILocation(line: 1911, column: 17, scope: !8464)
!8670 = !DILocation(line: 1911, column: 4, scope: !8464)
!8671 = !DILocation(line: 1912, column: 12, scope: !8464)
!8672 = !DILocation(line: 1912, column: 19, scope: !8464)
!8673 = !DILocation(line: 1912, column: 4, scope: !8464)
!8674 = !DILocation(line: 1914, column: 26, scope: !8464)
!8675 = !DILocation(line: 1914, column: 12, scope: !8464)
!8676 = !DILocation(line: 1914, column: 10, scope: !8464)
!8677 = !DILocation(line: 1915, column: 22, scope: !8464)
!8678 = !DILocation(line: 1915, column: 10, scope: !8464)
!8679 = !DILocation(line: 1915, column: 8, scope: !8464)
!8680 = !DILocation(line: 1916, column: 26, scope: !8464)
!8681 = !DILocation(line: 1916, column: 12, scope: !8464)
!8682 = !DILocation(line: 1916, column: 10, scope: !8464)
!8683 = !DILocation(line: 1917, column: 12, scope: !8464)
!8684 = !DILocation(line: 1917, column: 4, scope: !8464)
!8685 = !DILocation(line: 1918, column: 12, scope: !8464)
!8686 = !DILocation(line: 1918, column: 19, scope: !8464)
!8687 = !DILocation(line: 1918, column: 4, scope: !8464)
!8688 = !DILocation(line: 1919, column: 4, scope: !8464)
!8689 = !DILocation(line: 1921, column: 1, scope: !8427)
!8690 = distinct !DISubprogram(name: "draw_actuator_parent", scope: !1, file: !1, line: 1923, type: !5812, scopeLine: 1924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8691 = !DILocalVariable(name: "layout", arg: 1, scope: !8690, file: !1, line: 1923, type: !3660)
!8692 = !DILocation(line: 1923, column: 44, scope: !8690)
!8693 = !DILocalVariable(name: "ptr", arg: 2, scope: !8690, file: !1, line: 1923, type: !5688)
!8694 = !DILocation(line: 1923, column: 64, scope: !8690)
!8695 = !DILocalVariable(name: "row", scope: !8690, file: !1, line: 1925, type: !3660)
!8696 = !DILocation(line: 1925, column: 12, scope: !8690)
!8697 = !DILocalVariable(name: "sub", scope: !8690, file: !1, line: 1925, type: !3660)
!8698 = !DILocation(line: 1925, column: 18, scope: !8690)
!8699 = !DILocation(line: 1927, column: 10, scope: !8690)
!8700 = !DILocation(line: 1927, column: 18, scope: !8690)
!8701 = !DILocation(line: 1927, column: 2, scope: !8690)
!8702 = !DILocation(line: 1929, column: 19, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8690, file: !1, line: 1929, column: 6)
!8704 = !DILocation(line: 1929, column: 6, scope: !8703)
!8705 = !DILocation(line: 1929, column: 32, scope: !8703)
!8706 = !DILocation(line: 1929, column: 6, scope: !8690)
!8707 = !DILocation(line: 1930, column: 11, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8703, file: !1, line: 1929, column: 51)
!8709 = !DILocation(line: 1930, column: 19, scope: !8708)
!8710 = !DILocation(line: 1930, column: 3, scope: !8708)
!8711 = !DILocation(line: 1932, column: 21, scope: !8708)
!8712 = !DILocation(line: 1932, column: 9, scope: !8708)
!8713 = !DILocation(line: 1932, column: 7, scope: !8708)
!8714 = !DILocation(line: 1933, column: 11, scope: !8708)
!8715 = !DILocation(line: 1933, column: 16, scope: !8708)
!8716 = !DILocation(line: 1933, column: 3, scope: !8708)
!8717 = !DILocation(line: 1934, column: 21, scope: !8708)
!8718 = !DILocation(line: 1934, column: 9, scope: !8708)
!8719 = !DILocation(line: 1934, column: 7, scope: !8708)
!8720 = !DILocation(line: 1935, column: 21, scope: !8708)
!8721 = !DILocation(line: 1935, column: 42, scope: !8708)
!8722 = !DILocation(line: 1935, column: 26, scope: !8708)
!8723 = !DILocation(line: 1935, column: 63, scope: !8708)
!8724 = !DILocation(line: 1935, column: 3, scope: !8708)
!8725 = !DILocation(line: 1936, column: 11, scope: !8708)
!8726 = !DILocation(line: 1936, column: 16, scope: !8708)
!8727 = !DILocation(line: 1936, column: 3, scope: !8708)
!8728 = !DILocation(line: 1937, column: 2, scope: !8708)
!8729 = !DILocation(line: 1938, column: 1, scope: !8690)
!8730 = distinct !DISubprogram(name: "draw_actuator_property", scope: !1, file: !1, line: 1940, type: !5812, scopeLine: 1941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8731 = !DILocalVariable(name: "layout", arg: 1, scope: !8730, file: !1, line: 1940, type: !3660)
!8732 = !DILocation(line: 1940, column: 46, scope: !8730)
!8733 = !DILocalVariable(name: "ptr", arg: 2, scope: !8730, file: !1, line: 1940, type: !5688)
!8734 = !DILocation(line: 1940, column: 66, scope: !8730)
!8735 = !DILocalVariable(name: "ob", scope: !8730, file: !1, line: 1942, type: !1044)
!8736 = !DILocation(line: 1942, column: 10, scope: !8730)
!8737 = !DILocation(line: 1942, column: 25, scope: !8730)
!8738 = !DILocation(line: 1942, column: 30, scope: !8730)
!8739 = !DILocation(line: 1942, column: 33, scope: !8730)
!8740 = !DILocation(line: 1942, column: 15, scope: !8730)
!8741 = !DILocalVariable(name: "act", scope: !8730, file: !1, line: 1943, type: !2645)
!8742 = !DILocation(line: 1943, column: 13, scope: !8730)
!8743 = !DILocation(line: 1943, column: 32, scope: !8730)
!8744 = !DILocation(line: 1943, column: 37, scope: !8730)
!8745 = !DILocation(line: 1943, column: 19, scope: !8730)
!8746 = !DILocalVariable(name: "pa", scope: !8730, file: !1, line: 1944, type: !2670)
!8747 = !DILocation(line: 1944, column: 21, scope: !8730)
!8748 = !DILocation(line: 1944, column: 48, scope: !8730)
!8749 = !DILocation(line: 1944, column: 53, scope: !8730)
!8750 = !DILocation(line: 1944, column: 26, scope: !8730)
!8751 = !DILocalVariable(name: "ob_from", scope: !8730, file: !1, line: 1945, type: !1044)
!8752 = !DILocation(line: 1945, column: 10, scope: !8730)
!8753 = !DILocation(line: 1945, column: 19, scope: !8730)
!8754 = !DILocation(line: 1945, column: 23, scope: !8730)
!8755 = !DILocalVariable(name: "settings_ptr", scope: !8730, file: !1, line: 1946, type: !3645)
!8756 = !DILocation(line: 1946, column: 13, scope: !8730)
!8757 = !DILocalVariable(name: "obj_settings_ptr", scope: !8730, file: !1, line: 1946, type: !3645)
!8758 = !DILocation(line: 1946, column: 27, scope: !8730)
!8759 = !DILocalVariable(name: "row", scope: !8730, file: !1, line: 1948, type: !3660)
!8760 = !DILocation(line: 1948, column: 12, scope: !8730)
!8761 = !DILocalVariable(name: "sub", scope: !8730, file: !1, line: 1948, type: !3660)
!8762 = !DILocation(line: 1948, column: 18, scope: !8730)
!8763 = !DILocation(line: 1950, column: 27, scope: !8730)
!8764 = !DILocation(line: 1950, column: 21, scope: !8730)
!8765 = !DILocation(line: 1950, column: 56, scope: !8730)
!8766 = !DILocation(line: 1950, column: 2, scope: !8730)
!8767 = !DILocation(line: 1952, column: 10, scope: !8730)
!8768 = !DILocation(line: 1952, column: 18, scope: !8730)
!8769 = !DILocation(line: 1952, column: 2, scope: !8730)
!8770 = !DILocation(line: 1953, column: 17, scope: !8730)
!8771 = !DILocation(line: 1953, column: 25, scope: !8730)
!8772 = !DILocation(line: 1953, column: 2, scope: !8730)
!8773 = !DILocation(line: 1955, column: 23, scope: !8730)
!8774 = !DILocation(line: 1955, column: 10, scope: !8730)
!8775 = !DILocation(line: 1955, column: 2, scope: !8730)
!8776 = !DILocation(line: 1958, column: 4, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8730, file: !1, line: 1955, column: 37)
!8778 = !DILocation(line: 1960, column: 12, scope: !8777)
!8779 = !DILocation(line: 1960, column: 20, scope: !8777)
!8780 = !DILocation(line: 1960, column: 4, scope: !8777)
!8781 = !DILocation(line: 1961, column: 4, scope: !8777)
!8782 = !DILocation(line: 1963, column: 12, scope: !8777)
!8783 = !DILocation(line: 1963, column: 20, scope: !8777)
!8784 = !DILocation(line: 1963, column: 4, scope: !8777)
!8785 = !DILocation(line: 1964, column: 4, scope: !8777)
!8786 = !DILocation(line: 1966, column: 22, scope: !8777)
!8787 = !DILocation(line: 1966, column: 10, scope: !8777)
!8788 = !DILocation(line: 1966, column: 8, scope: !8777)
!8789 = !DILocation(line: 1967, column: 12, scope: !8777)
!8790 = !DILocation(line: 1967, column: 17, scope: !8777)
!8791 = !DILocation(line: 1967, column: 4, scope: !8777)
!8792 = !DILocation(line: 1968, column: 8, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8777, file: !1, line: 1968, column: 8)
!8794 = !DILocation(line: 1968, column: 8, scope: !8777)
!8795 = !DILocation(line: 1969, column: 30, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !1, line: 1968, column: 17)
!8797 = !DILocation(line: 1969, column: 24, scope: !8796)
!8798 = !DILocation(line: 1969, column: 64, scope: !8796)
!8799 = !DILocation(line: 1969, column: 5, scope: !8796)
!8800 = !DILocation(line: 1970, column: 20, scope: !8796)
!8801 = !DILocation(line: 1970, column: 25, scope: !8796)
!8802 = !DILocation(line: 1970, column: 5, scope: !8796)
!8803 = !DILocation(line: 1971, column: 4, scope: !8796)
!8804 = !DILocation(line: 1973, column: 23, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8793, file: !1, line: 1972, column: 9)
!8806 = !DILocation(line: 1973, column: 11, scope: !8805)
!8807 = !DILocation(line: 1973, column: 9, scope: !8805)
!8808 = !DILocation(line: 1974, column: 23, scope: !8805)
!8809 = !DILocation(line: 1974, column: 5, scope: !8805)
!8810 = !DILocation(line: 1975, column: 13, scope: !8805)
!8811 = !DILocation(line: 1975, column: 18, scope: !8805)
!8812 = !DILocation(line: 1975, column: 5, scope: !8805)
!8813 = !DILocation(line: 1977, column: 4, scope: !8777)
!8814 = !DILocation(line: 1979, column: 1, scope: !8730)
!8815 = distinct !DISubprogram(name: "draw_actuator_random", scope: !1, file: !1, line: 1981, type: !5812, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8816 = !DILocalVariable(name: "layout", arg: 1, scope: !8815, file: !1, line: 1981, type: !3660)
!8817 = !DILocation(line: 1981, column: 44, scope: !8815)
!8818 = !DILocalVariable(name: "ptr", arg: 2, scope: !8815, file: !1, line: 1981, type: !5688)
!8819 = !DILocation(line: 1981, column: 64, scope: !8815)
!8820 = !DILocalVariable(name: "ob", scope: !8815, file: !1, line: 1983, type: !1044)
!8821 = !DILocation(line: 1983, column: 10, scope: !8815)
!8822 = !DILocalVariable(name: "settings_ptr", scope: !8815, file: !1, line: 1984, type: !3645)
!8823 = !DILocation(line: 1984, column: 13, scope: !8815)
!8824 = !DILocalVariable(name: "row", scope: !8815, file: !1, line: 1985, type: !3660)
!8825 = !DILocation(line: 1985, column: 12, scope: !8815)
!8826 = !DILocation(line: 1987, column: 17, scope: !8815)
!8827 = !DILocation(line: 1987, column: 22, scope: !8815)
!8828 = !DILocation(line: 1987, column: 25, scope: !8815)
!8829 = !DILocation(line: 1987, column: 7, scope: !8815)
!8830 = !DILocation(line: 1987, column: 5, scope: !8815)
!8831 = !DILocation(line: 1988, column: 27, scope: !8815)
!8832 = !DILocation(line: 1988, column: 21, scope: !8815)
!8833 = !DILocation(line: 1988, column: 56, scope: !8815)
!8834 = !DILocation(line: 1988, column: 2, scope: !8815)
!8835 = !DILocation(line: 1990, column: 20, scope: !8815)
!8836 = !DILocation(line: 1990, column: 8, scope: !8815)
!8837 = !DILocation(line: 1990, column: 6, scope: !8815)
!8838 = !DILocation(line: 1992, column: 10, scope: !8815)
!8839 = !DILocation(line: 1992, column: 15, scope: !8815)
!8840 = !DILocation(line: 1992, column: 2, scope: !8815)
!8841 = !DILocation(line: 1993, column: 10, scope: !8815)
!8842 = !DILocation(line: 1993, column: 15, scope: !8815)
!8843 = !DILocation(line: 1993, column: 2, scope: !8815)
!8844 = !DILocation(line: 1995, column: 20, scope: !8815)
!8845 = !DILocation(line: 1995, column: 8, scope: !8815)
!8846 = !DILocation(line: 1995, column: 6, scope: !8815)
!8847 = !DILocation(line: 1996, column: 17, scope: !8815)
!8848 = !DILocation(line: 1996, column: 22, scope: !8815)
!8849 = !DILocation(line: 1996, column: 2, scope: !8815)
!8850 = !DILocation(line: 1998, column: 20, scope: !8815)
!8851 = !DILocation(line: 1998, column: 8, scope: !8815)
!8852 = !DILocation(line: 1998, column: 6, scope: !8815)
!8853 = !DILocation(line: 2000, column: 23, scope: !8815)
!8854 = !DILocation(line: 2000, column: 10, scope: !8815)
!8855 = !DILocation(line: 2000, column: 2, scope: !8815)
!8856 = !DILocation(line: 2002, column: 12, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8815, file: !1, line: 2000, column: 45)
!8858 = !DILocation(line: 2002, column: 17, scope: !8857)
!8859 = !DILocation(line: 2002, column: 4, scope: !8857)
!8860 = !DILocation(line: 2003, column: 4, scope: !8857)
!8861 = !DILocation(line: 2006, column: 12, scope: !8857)
!8862 = !DILocation(line: 2006, column: 4, scope: !8857)
!8863 = !DILocation(line: 2007, column: 4, scope: !8857)
!8864 = !DILocation(line: 2010, column: 12, scope: !8857)
!8865 = !DILocation(line: 2010, column: 17, scope: !8857)
!8866 = !DILocation(line: 2010, column: 4, scope: !8857)
!8867 = !DILocation(line: 2011, column: 4, scope: !8857)
!8868 = !DILocation(line: 2014, column: 12, scope: !8857)
!8869 = !DILocation(line: 2014, column: 17, scope: !8857)
!8870 = !DILocation(line: 2014, column: 4, scope: !8857)
!8871 = !DILocation(line: 2015, column: 4, scope: !8857)
!8872 = !DILocation(line: 2018, column: 12, scope: !8857)
!8873 = !DILocation(line: 2018, column: 17, scope: !8857)
!8874 = !DILocation(line: 2018, column: 4, scope: !8857)
!8875 = !DILocation(line: 2019, column: 12, scope: !8857)
!8876 = !DILocation(line: 2019, column: 17, scope: !8857)
!8877 = !DILocation(line: 2019, column: 4, scope: !8857)
!8878 = !DILocation(line: 2020, column: 4, scope: !8857)
!8879 = !DILocation(line: 2023, column: 12, scope: !8857)
!8880 = !DILocation(line: 2023, column: 17, scope: !8857)
!8881 = !DILocation(line: 2023, column: 4, scope: !8857)
!8882 = !DILocation(line: 2024, column: 4, scope: !8857)
!8883 = !DILocation(line: 2027, column: 12, scope: !8857)
!8884 = !DILocation(line: 2027, column: 17, scope: !8857)
!8885 = !DILocation(line: 2027, column: 4, scope: !8857)
!8886 = !DILocation(line: 2028, column: 4, scope: !8857)
!8887 = !DILocation(line: 2031, column: 12, scope: !8857)
!8888 = !DILocation(line: 2031, column: 17, scope: !8857)
!8889 = !DILocation(line: 2031, column: 4, scope: !8857)
!8890 = !DILocation(line: 2032, column: 12, scope: !8857)
!8891 = !DILocation(line: 2032, column: 17, scope: !8857)
!8892 = !DILocation(line: 2032, column: 4, scope: !8857)
!8893 = !DILocation(line: 2033, column: 4, scope: !8857)
!8894 = !DILocation(line: 2036, column: 12, scope: !8857)
!8895 = !DILocation(line: 2036, column: 17, scope: !8857)
!8896 = !DILocation(line: 2036, column: 4, scope: !8857)
!8897 = !DILocation(line: 2037, column: 12, scope: !8857)
!8898 = !DILocation(line: 2037, column: 17, scope: !8857)
!8899 = !DILocation(line: 2037, column: 4, scope: !8857)
!8900 = !DILocation(line: 2038, column: 4, scope: !8857)
!8901 = !DILocation(line: 2041, column: 12, scope: !8857)
!8902 = !DILocation(line: 2041, column: 17, scope: !8857)
!8903 = !DILocation(line: 2041, column: 4, scope: !8857)
!8904 = !DILocation(line: 2042, column: 4, scope: !8857)
!8905 = !DILocation(line: 2044, column: 1, scope: !8815)
!8906 = distinct !DISubprogram(name: "draw_actuator_scene", scope: !1, file: !1, line: 2046, type: !5812, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8907 = !DILocalVariable(name: "layout", arg: 1, scope: !8906, file: !1, line: 2046, type: !3660)
!8908 = !DILocation(line: 2046, column: 43, scope: !8906)
!8909 = !DILocalVariable(name: "ptr", arg: 2, scope: !8906, file: !1, line: 2046, type: !5688)
!8910 = !DILocation(line: 2046, column: 63, scope: !8906)
!8911 = !DILocation(line: 2048, column: 10, scope: !8906)
!8912 = !DILocation(line: 2048, column: 18, scope: !8906)
!8913 = !DILocation(line: 2048, column: 2, scope: !8906)
!8914 = !DILocation(line: 2050, column: 23, scope: !8906)
!8915 = !DILocation(line: 2050, column: 10, scope: !8906)
!8916 = !DILocation(line: 2050, column: 2, scope: !8906)
!8917 = !DILocation(line: 2052, column: 12, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 2050, column: 37)
!8919 = !DILocation(line: 2052, column: 20, scope: !8918)
!8920 = !DILocation(line: 2052, column: 4, scope: !8918)
!8921 = !DILocation(line: 2053, column: 4, scope: !8918)
!8922 = !DILocation(line: 2055, column: 4, scope: !8918)
!8923 = !DILocation(line: 2057, column: 12, scope: !8918)
!8924 = !DILocation(line: 2057, column: 20, scope: !8918)
!8925 = !DILocation(line: 2057, column: 4, scope: !8918)
!8926 = !DILocation(line: 2058, column: 4, scope: !8918)
!8927 = !DILocation(line: 2060, column: 1, scope: !8906)
!8928 = distinct !DISubprogram(name: "draw_actuator_shape_action", scope: !1, file: !1, line: 2062, type: !5812, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!8929 = !DILocalVariable(name: "layout", arg: 1, scope: !8928, file: !1, line: 2062, type: !3660)
!8930 = !DILocation(line: 2062, column: 50, scope: !8928)
!8931 = !DILocalVariable(name: "ptr", arg: 2, scope: !8928, file: !1, line: 2062, type: !5688)
!8932 = !DILocation(line: 2062, column: 70, scope: !8928)
!8933 = !DILocalVariable(name: "ob", scope: !8928, file: !1, line: 2064, type: !1044)
!8934 = !DILocation(line: 2064, column: 10, scope: !8928)
!8935 = !DILocation(line: 2064, column: 25, scope: !8928)
!8936 = !DILocation(line: 2064, column: 30, scope: !8928)
!8937 = !DILocation(line: 2064, column: 33, scope: !8928)
!8938 = !DILocation(line: 2064, column: 15, scope: !8928)
!8939 = !DILocalVariable(name: "settings_ptr", scope: !8928, file: !1, line: 2065, type: !3645)
!8940 = !DILocation(line: 2065, column: 13, scope: !8928)
!8941 = !DILocalVariable(name: "row", scope: !8928, file: !1, line: 2066, type: !3660)
!8942 = !DILocation(line: 2066, column: 12, scope: !8928)
!8943 = !DILocation(line: 2068, column: 6, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 2068, column: 6)
!8945 = !DILocation(line: 2068, column: 10, scope: !8944)
!8946 = !DILocation(line: 2068, column: 15, scope: !8944)
!8947 = !DILocation(line: 2068, column: 6, scope: !8928)
!8948 = !DILocation(line: 2069, column: 11, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !1, line: 2068, column: 27)
!8950 = !DILocation(line: 2069, column: 3, scope: !8949)
!8951 = !DILocation(line: 2070, column: 3, scope: !8949)
!8952 = !DILocation(line: 2073, column: 27, scope: !8928)
!8953 = !DILocation(line: 2073, column: 21, scope: !8928)
!8954 = !DILocation(line: 2073, column: 56, scope: !8928)
!8955 = !DILocation(line: 2073, column: 2, scope: !8928)
!8956 = !DILocation(line: 2075, column: 20, scope: !8928)
!8957 = !DILocation(line: 2075, column: 8, scope: !8928)
!8958 = !DILocation(line: 2075, column: 6, scope: !8928)
!8959 = !DILocation(line: 2076, column: 10, scope: !8928)
!8960 = !DILocation(line: 2076, column: 15, scope: !8928)
!8961 = !DILocation(line: 2076, column: 2, scope: !8928)
!8962 = !DILocation(line: 2077, column: 10, scope: !8928)
!8963 = !DILocation(line: 2077, column: 15, scope: !8928)
!8964 = !DILocation(line: 2077, column: 2, scope: !8928)
!8965 = !DILocation(line: 2078, column: 10, scope: !8928)
!8966 = !DILocation(line: 2078, column: 15, scope: !8928)
!8967 = !DILocation(line: 2078, column: 2, scope: !8928)
!8968 = !DILocation(line: 2080, column: 20, scope: !8928)
!8969 = !DILocation(line: 2080, column: 8, scope: !8928)
!8970 = !DILocation(line: 2080, column: 6, scope: !8928)
!8971 = !DILocation(line: 2081, column: 20, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 2081, column: 6)
!8973 = !DILocation(line: 2081, column: 7, scope: !8972)
!8974 = !DILocation(line: 2081, column: 33, scope: !8972)
!8975 = !DILocation(line: 2081, column: 6, scope: !8928)
!8976 = !DILocation(line: 2082, column: 18, scope: !8972)
!8977 = !DILocation(line: 2082, column: 23, scope: !8972)
!8978 = !DILocation(line: 2082, column: 3, scope: !8972)
!8979 = !DILocation(line: 2085, column: 11, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8972, file: !1, line: 2084, column: 7)
!8981 = !DILocation(line: 2085, column: 16, scope: !8980)
!8982 = !DILocation(line: 2085, column: 3, scope: !8980)
!8983 = !DILocation(line: 2086, column: 11, scope: !8980)
!8984 = !DILocation(line: 2086, column: 16, scope: !8980)
!8985 = !DILocation(line: 2086, column: 3, scope: !8980)
!8986 = !DILocation(line: 2089, column: 20, scope: !8928)
!8987 = !DILocation(line: 2089, column: 8, scope: !8928)
!8988 = !DILocation(line: 2089, column: 6, scope: !8928)
!8989 = !DILocation(line: 2090, column: 10, scope: !8928)
!8990 = !DILocation(line: 2090, column: 15, scope: !8928)
!8991 = !DILocation(line: 2090, column: 2, scope: !8928)
!8992 = !DILocation(line: 2091, column: 10, scope: !8928)
!8993 = !DILocation(line: 2091, column: 15, scope: !8928)
!8994 = !DILocation(line: 2091, column: 2, scope: !8928)
!8995 = !DILocation(line: 2093, column: 20, scope: !8928)
!8996 = !DILocation(line: 2093, column: 8, scope: !8928)
!8997 = !DILocation(line: 2093, column: 6, scope: !8928)
!8998 = !DILocation(line: 2094, column: 17, scope: !8928)
!8999 = !DILocation(line: 2094, column: 22, scope: !8928)
!9000 = !DILocation(line: 2094, column: 2, scope: !8928)
!9001 = !DILocation(line: 2099, column: 1, scope: !8928)
!9002 = distinct !DISubprogram(name: "draw_actuator_sound", scope: !1, file: !1, line: 2101, type: !6049, scopeLine: 2102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9003 = !DILocalVariable(name: "layout", arg: 1, scope: !9002, file: !1, line: 2101, type: !3660)
!9004 = !DILocation(line: 2101, column: 43, scope: !9002)
!9005 = !DILocalVariable(name: "ptr", arg: 2, scope: !9002, file: !1, line: 2101, type: !5688)
!9006 = !DILocation(line: 2101, column: 63, scope: !9002)
!9007 = !DILocalVariable(name: "C", arg: 3, scope: !9002, file: !1, line: 2101, type: !2686)
!9008 = !DILocation(line: 2101, column: 78, scope: !9002)
!9009 = !DILocalVariable(name: "row", scope: !9002, file: !1, line: 2103, type: !3660)
!9010 = !DILocation(line: 2103, column: 12, scope: !9002)
!9011 = !DILocalVariable(name: "col", scope: !9002, file: !1, line: 2103, type: !3660)
!9012 = !DILocation(line: 2103, column: 18, scope: !9002)
!9013 = !DILocation(line: 2105, column: 15, scope: !9002)
!9014 = !DILocation(line: 2105, column: 23, scope: !9002)
!9015 = !DILocation(line: 2105, column: 26, scope: !9002)
!9016 = !DILocation(line: 2105, column: 2, scope: !9002)
!9017 = !DILocation(line: 2106, column: 23, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9002, file: !1, line: 2106, column: 6)
!9019 = !DILocation(line: 2106, column: 7, scope: !9018)
!9020 = !DILocation(line: 2106, column: 37, scope: !9018)
!9021 = !DILocation(line: 2106, column: 6, scope: !9002)
!9022 = !DILocation(line: 2107, column: 11, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 2106, column: 43)
!9024 = !DILocation(line: 2107, column: 3, scope: !9023)
!9025 = !DILocation(line: 2108, column: 3, scope: !9023)
!9026 = !DILocation(line: 2110, column: 10, scope: !9002)
!9027 = !DILocation(line: 2110, column: 18, scope: !9002)
!9028 = !DILocation(line: 2110, column: 2, scope: !9002)
!9029 = !DILocation(line: 2112, column: 20, scope: !9002)
!9030 = !DILocation(line: 2112, column: 8, scope: !9002)
!9031 = !DILocation(line: 2112, column: 6, scope: !9002)
!9032 = !DILocation(line: 2113, column: 10, scope: !9002)
!9033 = !DILocation(line: 2113, column: 15, scope: !9002)
!9034 = !DILocation(line: 2113, column: 2, scope: !9002)
!9035 = !DILocation(line: 2114, column: 10, scope: !9002)
!9036 = !DILocation(line: 2114, column: 15, scope: !9002)
!9037 = !DILocation(line: 2114, column: 2, scope: !9002)
!9038 = !DILocation(line: 2116, column: 10, scope: !9002)
!9039 = !DILocation(line: 2116, column: 18, scope: !9002)
!9040 = !DILocation(line: 2116, column: 2, scope: !9002)
!9041 = !DILocation(line: 2118, column: 23, scope: !9002)
!9042 = !DILocation(line: 2118, column: 8, scope: !9002)
!9043 = !DILocation(line: 2118, column: 6, scope: !9002)
!9044 = !DILocation(line: 2119, column: 20, scope: !9002)
!9045 = !DILocation(line: 2119, column: 41, scope: !9002)
!9046 = !DILocation(line: 2119, column: 25, scope: !9002)
!9047 = !DILocation(line: 2119, column: 62, scope: !9002)
!9048 = !DILocation(line: 2119, column: 2, scope: !9002)
!9049 = !DILocation(line: 2121, column: 20, scope: !9002)
!9050 = !DILocation(line: 2121, column: 8, scope: !9002)
!9051 = !DILocation(line: 2121, column: 6, scope: !9002)
!9052 = !DILocation(line: 2122, column: 10, scope: !9002)
!9053 = !DILocation(line: 2122, column: 15, scope: !9002)
!9054 = !DILocation(line: 2122, column: 2, scope: !9002)
!9055 = !DILocation(line: 2123, column: 10, scope: !9002)
!9056 = !DILocation(line: 2123, column: 15, scope: !9002)
!9057 = !DILocation(line: 2123, column: 2, scope: !9002)
!9058 = !DILocation(line: 2125, column: 20, scope: !9002)
!9059 = !DILocation(line: 2125, column: 8, scope: !9002)
!9060 = !DILocation(line: 2125, column: 6, scope: !9002)
!9061 = !DILocation(line: 2126, column: 10, scope: !9002)
!9062 = !DILocation(line: 2126, column: 15, scope: !9002)
!9063 = !DILocation(line: 2126, column: 2, scope: !9002)
!9064 = !DILocation(line: 2127, column: 10, scope: !9002)
!9065 = !DILocation(line: 2127, column: 15, scope: !9002)
!9066 = !DILocation(line: 2127, column: 2, scope: !9002)
!9067 = !DILocation(line: 2129, column: 20, scope: !9002)
!9068 = !DILocation(line: 2129, column: 8, scope: !9002)
!9069 = !DILocation(line: 2129, column: 6, scope: !9002)
!9070 = !DILocation(line: 2130, column: 10, scope: !9002)
!9071 = !DILocation(line: 2130, column: 15, scope: !9002)
!9072 = !DILocation(line: 2130, column: 2, scope: !9002)
!9073 = !DILocation(line: 2131, column: 10, scope: !9002)
!9074 = !DILocation(line: 2131, column: 15, scope: !9002)
!9075 = !DILocation(line: 2131, column: 2, scope: !9002)
!9076 = !DILocation(line: 2133, column: 20, scope: !9002)
!9077 = !DILocation(line: 2133, column: 8, scope: !9002)
!9078 = !DILocation(line: 2133, column: 6, scope: !9002)
!9079 = !DILocation(line: 2134, column: 10, scope: !9002)
!9080 = !DILocation(line: 2134, column: 15, scope: !9002)
!9081 = !DILocation(line: 2134, column: 2, scope: !9002)
!9082 = !DILocation(line: 2135, column: 10, scope: !9002)
!9083 = !DILocation(line: 2135, column: 15, scope: !9002)
!9084 = !DILocation(line: 2135, column: 2, scope: !9002)
!9085 = !DILocation(line: 2136, column: 1, scope: !9002)
!9086 = distinct !DISubprogram(name: "draw_actuator_state", scope: !1, file: !1, line: 2138, type: !5812, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9087 = !DILocalVariable(name: "layout", arg: 1, scope: !9086, file: !1, line: 2138, type: !3660)
!9088 = !DILocation(line: 2138, column: 43, scope: !9086)
!9089 = !DILocalVariable(name: "ptr", arg: 2, scope: !9086, file: !1, line: 2138, type: !5688)
!9090 = !DILocation(line: 2138, column: 63, scope: !9086)
!9091 = !DILocalVariable(name: "split", scope: !9086, file: !1, line: 2140, type: !3660)
!9092 = !DILocation(line: 2140, column: 12, scope: !9086)
!9093 = !DILocalVariable(name: "ob", scope: !9086, file: !1, line: 2141, type: !1044)
!9094 = !DILocation(line: 2141, column: 10, scope: !9086)
!9095 = !DILocation(line: 2141, column: 25, scope: !9086)
!9096 = !DILocation(line: 2141, column: 30, scope: !9086)
!9097 = !DILocation(line: 2141, column: 33, scope: !9086)
!9098 = !DILocation(line: 2141, column: 15, scope: !9086)
!9099 = !DILocalVariable(name: "settings_ptr", scope: !9086, file: !1, line: 2142, type: !3645)
!9100 = !DILocation(line: 2142, column: 13, scope: !9086)
!9101 = !DILocation(line: 2143, column: 27, scope: !9086)
!9102 = !DILocation(line: 2143, column: 21, scope: !9086)
!9103 = !DILocation(line: 2143, column: 56, scope: !9086)
!9104 = !DILocation(line: 2143, column: 2, scope: !9086)
!9105 = !DILocation(line: 2145, column: 24, scope: !9086)
!9106 = !DILocation(line: 2145, column: 10, scope: !9086)
!9107 = !DILocation(line: 2145, column: 8, scope: !9086)
!9108 = !DILocation(line: 2146, column: 10, scope: !9086)
!9109 = !DILocation(line: 2146, column: 17, scope: !9086)
!9110 = !DILocation(line: 2146, column: 2, scope: !9086)
!9111 = !DILocation(line: 2148, column: 19, scope: !9086)
!9112 = !DILocation(line: 2148, column: 26, scope: !9086)
!9113 = !DILocation(line: 2148, column: 2, scope: !9086)
!9114 = !DILocation(line: 2149, column: 1, scope: !9086)
!9115 = distinct !DISubprogram(name: "draw_actuator_visibility", scope: !1, file: !1, line: 2151, type: !5812, scopeLine: 2152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9116 = !DILocalVariable(name: "layout", arg: 1, scope: !9115, file: !1, line: 2151, type: !3660)
!9117 = !DILocation(line: 2151, column: 48, scope: !9115)
!9118 = !DILocalVariable(name: "ptr", arg: 2, scope: !9115, file: !1, line: 2151, type: !5688)
!9119 = !DILocation(line: 2151, column: 68, scope: !9115)
!9120 = !DILocalVariable(name: "row", scope: !9115, file: !1, line: 2153, type: !3660)
!9121 = !DILocation(line: 2153, column: 12, scope: !9115)
!9122 = !DILocation(line: 2154, column: 20, scope: !9115)
!9123 = !DILocation(line: 2154, column: 8, scope: !9115)
!9124 = !DILocation(line: 2154, column: 6, scope: !9115)
!9125 = !DILocation(line: 2156, column: 10, scope: !9115)
!9126 = !DILocation(line: 2156, column: 15, scope: !9115)
!9127 = !DILocation(line: 2156, column: 2, scope: !9115)
!9128 = !DILocation(line: 2157, column: 10, scope: !9115)
!9129 = !DILocation(line: 2157, column: 15, scope: !9115)
!9130 = !DILocation(line: 2157, column: 2, scope: !9115)
!9131 = !DILocation(line: 2158, column: 10, scope: !9115)
!9132 = !DILocation(line: 2158, column: 15, scope: !9115)
!9133 = !DILocation(line: 2158, column: 2, scope: !9115)
!9134 = !DILocation(line: 2159, column: 1, scope: !9115)
!9135 = distinct !DISubprogram(name: "draw_actuator_steering", scope: !1, file: !1, line: 2161, type: !5812, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9136 = !DILocalVariable(name: "layout", arg: 1, scope: !9135, file: !1, line: 2161, type: !3660)
!9137 = !DILocation(line: 2161, column: 46, scope: !9135)
!9138 = !DILocalVariable(name: "ptr", arg: 2, scope: !9135, file: !1, line: 2161, type: !5688)
!9139 = !DILocation(line: 2161, column: 66, scope: !9135)
!9140 = !DILocalVariable(name: "row", scope: !9135, file: !1, line: 2163, type: !3660)
!9141 = !DILocation(line: 2163, column: 12, scope: !9135)
!9142 = !DILocalVariable(name: "col", scope: !9135, file: !1, line: 2164, type: !3660)
!9143 = !DILocation(line: 2164, column: 12, scope: !9135)
!9144 = !DILocation(line: 2166, column: 10, scope: !9135)
!9145 = !DILocation(line: 2166, column: 18, scope: !9135)
!9146 = !DILocation(line: 2166, column: 2, scope: !9135)
!9147 = !DILocation(line: 2167, column: 10, scope: !9135)
!9148 = !DILocation(line: 2167, column: 18, scope: !9135)
!9149 = !DILocation(line: 2167, column: 2, scope: !9135)
!9150 = !DILocation(line: 2168, column: 10, scope: !9135)
!9151 = !DILocation(line: 2168, column: 18, scope: !9135)
!9152 = !DILocation(line: 2168, column: 2, scope: !9135)
!9153 = !DILocation(line: 2170, column: 20, scope: !9135)
!9154 = !DILocation(line: 2170, column: 8, scope: !9135)
!9155 = !DILocation(line: 2170, column: 6, scope: !9135)
!9156 = !DILocation(line: 2171, column: 10, scope: !9135)
!9157 = !DILocation(line: 2171, column: 15, scope: !9135)
!9158 = !DILocation(line: 2171, column: 2, scope: !9135)
!9159 = !DILocation(line: 2172, column: 10, scope: !9135)
!9160 = !DILocation(line: 2172, column: 15, scope: !9135)
!9161 = !DILocation(line: 2172, column: 2, scope: !9135)
!9162 = !DILocation(line: 2173, column: 20, scope: !9135)
!9163 = !DILocation(line: 2173, column: 8, scope: !9135)
!9164 = !DILocation(line: 2173, column: 6, scope: !9135)
!9165 = !DILocation(line: 2174, column: 10, scope: !9135)
!9166 = !DILocation(line: 2174, column: 15, scope: !9135)
!9167 = !DILocation(line: 2174, column: 2, scope: !9135)
!9168 = !DILocation(line: 2175, column: 10, scope: !9135)
!9169 = !DILocation(line: 2175, column: 15, scope: !9135)
!9170 = !DILocation(line: 2175, column: 2, scope: !9135)
!9171 = !DILocation(line: 2177, column: 20, scope: !9135)
!9172 = !DILocation(line: 2177, column: 8, scope: !9135)
!9173 = !DILocation(line: 2177, column: 6, scope: !9135)
!9174 = !DILocation(line: 2178, column: 23, scope: !9135)
!9175 = !DILocation(line: 2178, column: 8, scope: !9135)
!9176 = !DILocation(line: 2178, column: 6, scope: !9135)
!9177 = !DILocation(line: 2179, column: 10, scope: !9135)
!9178 = !DILocation(line: 2179, column: 15, scope: !9135)
!9179 = !DILocation(line: 2179, column: 2, scope: !9135)
!9180 = !DILocation(line: 2180, column: 23, scope: !9135)
!9181 = !DILocation(line: 2180, column: 8, scope: !9135)
!9182 = !DILocation(line: 2180, column: 6, scope: !9135)
!9183 = !DILocation(line: 2181, column: 10, scope: !9135)
!9184 = !DILocation(line: 2181, column: 15, scope: !9135)
!9185 = !DILocation(line: 2181, column: 2, scope: !9135)
!9186 = !DILocation(line: 2182, column: 23, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9135, file: !1, line: 2182, column: 6)
!9188 = !DILocation(line: 2182, column: 7, scope: !9187)
!9189 = !DILocation(line: 2182, column: 6, scope: !9135)
!9190 = !DILocation(line: 2183, column: 21, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9187, file: !1, line: 2182, column: 39)
!9192 = !DILocation(line: 2183, column: 3, scope: !9191)
!9193 = !DILocation(line: 2184, column: 2, scope: !9191)
!9194 = !DILocation(line: 2185, column: 23, scope: !9135)
!9195 = !DILocation(line: 2185, column: 8, scope: !9135)
!9196 = !DILocation(line: 2185, column: 6, scope: !9135)
!9197 = !DILocation(line: 2186, column: 10, scope: !9135)
!9198 = !DILocation(line: 2186, column: 15, scope: !9135)
!9199 = !DILocation(line: 2186, column: 2, scope: !9135)
!9200 = !DILocation(line: 2187, column: 23, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9135, file: !1, line: 2187, column: 6)
!9202 = !DILocation(line: 2187, column: 7, scope: !9201)
!9203 = !DILocation(line: 2187, column: 39, scope: !9201)
!9204 = !DILocation(line: 2187, column: 6, scope: !9135)
!9205 = !DILocation(line: 2188, column: 21, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9201, file: !1, line: 2187, column: 45)
!9207 = !DILocation(line: 2188, column: 3, scope: !9206)
!9208 = !DILocation(line: 2189, column: 2, scope: !9206)
!9209 = !DILocation(line: 2191, column: 20, scope: !9135)
!9210 = !DILocation(line: 2191, column: 8, scope: !9135)
!9211 = !DILocation(line: 2191, column: 6, scope: !9135)
!9212 = !DILocation(line: 2192, column: 10, scope: !9135)
!9213 = !DILocation(line: 2192, column: 15, scope: !9135)
!9214 = !DILocation(line: 2192, column: 2, scope: !9135)
!9215 = !DILocation(line: 2193, column: 19, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9135, file: !1, line: 2193, column: 6)
!9217 = !DILocation(line: 2193, column: 6, scope: !9216)
!9218 = !DILocation(line: 2193, column: 31, scope: !9216)
!9219 = !DILocation(line: 2193, column: 6, scope: !9135)
!9220 = !DILocation(line: 2194, column: 11, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9216, file: !1, line: 2193, column: 61)
!9222 = !DILocation(line: 2194, column: 16, scope: !9221)
!9223 = !DILocation(line: 2194, column: 3, scope: !9221)
!9224 = !DILocation(line: 2195, column: 21, scope: !9221)
!9225 = !DILocation(line: 2195, column: 9, scope: !9221)
!9226 = !DILocation(line: 2195, column: 7, scope: !9221)
!9227 = !DILocation(line: 2196, column: 2, scope: !9221)
!9228 = !DILocation(line: 2197, column: 20, scope: !9135)
!9229 = !DILocation(line: 2197, column: 8, scope: !9135)
!9230 = !DILocation(line: 2197, column: 6, scope: !9135)
!9231 = !DILocation(line: 2198, column: 10, scope: !9135)
!9232 = !DILocation(line: 2198, column: 15, scope: !9135)
!9233 = !DILocation(line: 2198, column: 2, scope: !9135)
!9234 = !DILocation(line: 2199, column: 19, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9135, file: !1, line: 2199, column: 6)
!9236 = !DILocation(line: 2199, column: 6, scope: !9235)
!9237 = !DILocation(line: 2199, column: 32, scope: !9235)
!9238 = !DILocation(line: 2199, column: 6, scope: !9135)
!9239 = !DILocation(line: 2200, column: 21, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !1, line: 2199, column: 63)
!9241 = !DILocation(line: 2200, column: 3, scope: !9240)
!9242 = !DILocation(line: 2201, column: 2, scope: !9240)
!9243 = !DILocation(line: 2202, column: 1, scope: !9135)
!9244 = distinct !DISubprogram(name: "draw_actuator_mouse", scope: !1, file: !1, line: 2204, type: !5812, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9245 = !DILocalVariable(name: "layout", arg: 1, scope: !9244, file: !1, line: 2204, type: !3660)
!9246 = !DILocation(line: 2204, column: 43, scope: !9244)
!9247 = !DILocalVariable(name: "ptr", arg: 2, scope: !9244, file: !1, line: 2204, type: !5688)
!9248 = !DILocation(line: 2204, column: 63, scope: !9244)
!9249 = !DILocalVariable(name: "row", scope: !9244, file: !1, line: 2206, type: !3660)
!9250 = !DILocation(line: 2206, column: 12, scope: !9244)
!9251 = !DILocalVariable(name: "col", scope: !9244, file: !1, line: 2206, type: !3660)
!9252 = !DILocation(line: 2206, column: 18, scope: !9244)
!9253 = !DILocalVariable(name: "subcol", scope: !9244, file: !1, line: 2206, type: !3660)
!9254 = !DILocation(line: 2206, column: 24, scope: !9244)
!9255 = !DILocalVariable(name: "split", scope: !9244, file: !1, line: 2206, type: !3660)
!9256 = !DILocation(line: 2206, column: 33, scope: !9244)
!9257 = !DILocalVariable(name: "subsplit", scope: !9244, file: !1, line: 2206, type: !3660)
!9258 = !DILocation(line: 2206, column: 41, scope: !9244)
!9259 = !DILocation(line: 2208, column: 10, scope: !9244)
!9260 = !DILocation(line: 2208, column: 18, scope: !9244)
!9261 = !DILocation(line: 2208, column: 2, scope: !9244)
!9262 = !DILocation(line: 2210, column: 23, scope: !9244)
!9263 = !DILocation(line: 2210, column: 10, scope: !9244)
!9264 = !DILocation(line: 2210, column: 2, scope: !9244)
!9265 = !DILocation(line: 2212, column: 22, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9244, file: !1, line: 2210, column: 37)
!9267 = !DILocation(line: 2212, column: 10, scope: !9266)
!9268 = !DILocation(line: 2212, column: 8, scope: !9266)
!9269 = !DILocation(line: 2213, column: 12, scope: !9266)
!9270 = !DILocation(line: 2213, column: 17, scope: !9266)
!9271 = !DILocation(line: 2213, column: 4, scope: !9266)
!9272 = !DILocation(line: 2214, column: 4, scope: !9266)
!9273 = !DILocation(line: 2218, column: 22, scope: !9266)
!9274 = !DILocation(line: 2218, column: 10, scope: !9266)
!9275 = !DILocation(line: 2218, column: 8, scope: !9266)
!9276 = !DILocation(line: 2219, column: 25, scope: !9266)
!9277 = !DILocation(line: 2219, column: 10, scope: !9266)
!9278 = !DILocation(line: 2219, column: 8, scope: !9266)
!9279 = !DILocation(line: 2221, column: 12, scope: !9266)
!9280 = !DILocation(line: 2221, column: 17, scope: !9266)
!9281 = !DILocation(line: 2221, column: 4, scope: !9266)
!9282 = !DILocation(line: 2223, column: 28, scope: !9266)
!9283 = !DILocation(line: 2223, column: 13, scope: !9266)
!9284 = !DILocation(line: 2223, column: 11, scope: !9266)
!9285 = !DILocation(line: 2224, column: 22, scope: !9266)
!9286 = !DILocation(line: 2224, column: 46, scope: !9266)
!9287 = !DILocation(line: 2224, column: 30, scope: !9266)
!9288 = !DILocation(line: 2224, column: 64, scope: !9266)
!9289 = !DILocation(line: 2224, column: 4, scope: !9266)
!9290 = !DILocation(line: 2225, column: 12, scope: !9266)
!9291 = !DILocation(line: 2225, column: 20, scope: !9266)
!9292 = !DILocation(line: 2225, column: 4, scope: !9266)
!9293 = !DILocation(line: 2226, column: 12, scope: !9266)
!9294 = !DILocation(line: 2226, column: 20, scope: !9266)
!9295 = !DILocation(line: 2226, column: 4, scope: !9266)
!9296 = !DILocation(line: 2228, column: 12, scope: !9266)
!9297 = !DILocation(line: 2228, column: 20, scope: !9266)
!9298 = !DILocation(line: 2228, column: 4, scope: !9266)
!9299 = !DILocation(line: 2229, column: 12, scope: !9266)
!9300 = !DILocation(line: 2229, column: 20, scope: !9266)
!9301 = !DILocation(line: 2229, column: 4, scope: !9266)
!9302 = !DILocation(line: 2231, column: 12, scope: !9266)
!9303 = !DILocation(line: 2231, column: 20, scope: !9266)
!9304 = !DILocation(line: 2231, column: 4, scope: !9266)
!9305 = !DILocation(line: 2234, column: 25, scope: !9266)
!9306 = !DILocation(line: 2234, column: 10, scope: !9266)
!9307 = !DILocation(line: 2234, column: 8, scope: !9266)
!9308 = !DILocation(line: 2236, column: 12, scope: !9266)
!9309 = !DILocation(line: 2236, column: 17, scope: !9266)
!9310 = !DILocation(line: 2236, column: 4, scope: !9266)
!9311 = !DILocation(line: 2238, column: 28, scope: !9266)
!9312 = !DILocation(line: 2238, column: 13, scope: !9266)
!9313 = !DILocation(line: 2238, column: 11, scope: !9266)
!9314 = !DILocation(line: 2239, column: 22, scope: !9266)
!9315 = !DILocation(line: 2239, column: 46, scope: !9266)
!9316 = !DILocation(line: 2239, column: 30, scope: !9266)
!9317 = !DILocation(line: 2239, column: 64, scope: !9266)
!9318 = !DILocation(line: 2239, column: 4, scope: !9266)
!9319 = !DILocation(line: 2240, column: 12, scope: !9266)
!9320 = !DILocation(line: 2240, column: 20, scope: !9266)
!9321 = !DILocation(line: 2240, column: 4, scope: !9266)
!9322 = !DILocation(line: 2241, column: 12, scope: !9266)
!9323 = !DILocation(line: 2241, column: 20, scope: !9266)
!9324 = !DILocation(line: 2241, column: 4, scope: !9266)
!9325 = !DILocation(line: 2243, column: 12, scope: !9266)
!9326 = !DILocation(line: 2243, column: 20, scope: !9266)
!9327 = !DILocation(line: 2243, column: 4, scope: !9266)
!9328 = !DILocation(line: 2244, column: 12, scope: !9266)
!9329 = !DILocation(line: 2244, column: 20, scope: !9266)
!9330 = !DILocation(line: 2244, column: 4, scope: !9266)
!9331 = !DILocation(line: 2246, column: 12, scope: !9266)
!9332 = !DILocation(line: 2246, column: 20, scope: !9266)
!9333 = !DILocation(line: 2246, column: 4, scope: !9266)
!9334 = !DILocation(line: 2249, column: 22, scope: !9266)
!9335 = !DILocation(line: 2249, column: 10, scope: !9266)
!9336 = !DILocation(line: 2249, column: 8, scope: !9266)
!9337 = !DILocation(line: 2250, column: 26, scope: !9266)
!9338 = !DILocation(line: 2250, column: 12, scope: !9266)
!9339 = !DILocation(line: 2250, column: 10, scope: !9266)
!9340 = !DILocation(line: 2252, column: 29, scope: !9266)
!9341 = !DILocation(line: 2252, column: 15, scope: !9266)
!9342 = !DILocation(line: 2252, column: 13, scope: !9266)
!9343 = !DILocation(line: 2253, column: 22, scope: !9266)
!9344 = !DILocation(line: 2253, column: 48, scope: !9266)
!9345 = !DILocation(line: 2253, column: 32, scope: !9266)
!9346 = !DILocation(line: 2253, column: 66, scope: !9266)
!9347 = !DILocation(line: 2253, column: 4, scope: !9266)
!9348 = !DILocation(line: 2254, column: 12, scope: !9266)
!9349 = !DILocation(line: 2254, column: 22, scope: !9266)
!9350 = !DILocation(line: 2254, column: 4, scope: !9266)
!9351 = !DILocation(line: 2255, column: 12, scope: !9266)
!9352 = !DILocation(line: 2255, column: 22, scope: !9266)
!9353 = !DILocation(line: 2255, column: 4, scope: !9266)
!9354 = !DILocation(line: 2257, column: 29, scope: !9266)
!9355 = !DILocation(line: 2257, column: 15, scope: !9266)
!9356 = !DILocation(line: 2257, column: 13, scope: !9266)
!9357 = !DILocation(line: 2258, column: 22, scope: !9266)
!9358 = !DILocation(line: 2258, column: 48, scope: !9266)
!9359 = !DILocation(line: 2258, column: 32, scope: !9266)
!9360 = !DILocation(line: 2258, column: 66, scope: !9266)
!9361 = !DILocation(line: 2258, column: 4, scope: !9266)
!9362 = !DILocation(line: 2259, column: 12, scope: !9266)
!9363 = !DILocation(line: 2259, column: 22, scope: !9266)
!9364 = !DILocation(line: 2259, column: 4, scope: !9266)
!9365 = !DILocation(line: 2260, column: 12, scope: !9266)
!9366 = !DILocation(line: 2260, column: 22, scope: !9266)
!9367 = !DILocation(line: 2260, column: 4, scope: !9266)
!9368 = !DILocation(line: 2262, column: 4, scope: !9266)
!9369 = !DILocation(line: 2264, column: 1, scope: !9244)
!9370 = distinct !DISubprogram(name: "get_armature_bone_constraint", scope: !1, file: !1, line: 715, type: !9371, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2691)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{null, !1044, !2732, !2732, !9373}
!9373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7775, size: 64)
!9374 = !DILocalVariable(name: "ob", arg: 1, scope: !9370, file: !1, line: 715, type: !1044)
!9375 = !DILocation(line: 715, column: 50, scope: !9370)
!9376 = !DILocalVariable(name: "posechannel", arg: 2, scope: !9370, file: !1, line: 715, type: !2732)
!9377 = !DILocation(line: 715, column: 66, scope: !9370)
!9378 = !DILocalVariable(name: "constraint_name", arg: 3, scope: !9370, file: !1, line: 715, type: !2732)
!9379 = !DILocation(line: 715, column: 91, scope: !9370)
!9380 = !DILocalVariable(name: "constraint", arg: 4, scope: !9370, file: !1, line: 715, type: !9373)
!9381 = !DILocation(line: 715, column: 122, scope: !9370)
!9382 = !DILocation(line: 718, column: 6, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 718, column: 6)
!9384 = !DILocation(line: 718, column: 10, scope: !9383)
!9385 = !DILocation(line: 718, column: 15, scope: !9383)
!9386 = !DILocation(line: 718, column: 30, scope: !9383)
!9387 = !DILocation(line: 718, column: 33, scope: !9383)
!9388 = !DILocation(line: 718, column: 37, scope: !9383)
!9389 = !DILocation(line: 718, column: 6, scope: !9370)
!9390 = !DILocalVariable(name: "pchan", scope: !9391, file: !1, line: 719, type: !9392)
!9391 = distinct !DILexicalBlock(scope: !9383, file: !1, line: 718, column: 43)
!9392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9393, size: 64)
!9393 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !1158, line: 243, baseType: !9394)
!9394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !1158, line: 187, size: 4352, elements: !9395)
!9395 = !{!9396, !9398, !9399, !9400, !9401, !9402, !9403, !9404, !9405, !9406, !9407, !9408, !9409, !9412, !9413, !9414, !9415, !9416, !9417, !9418, !9419, !9420, !9421, !9422, !9423, !9424, !9425, !9426, !9427, !9428, !9429, !9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438}
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9394, file: !1158, line: 188, baseType: !9397, size: 64)
!9397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9394, size: 64)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9394, file: !1158, line: 188, baseType: !9397, size: 64, offset: 64)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9394, file: !1158, line: 190, baseType: !1089, size: 64, offset: 128)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !9394, file: !1158, line: 192, baseType: !1110, size: 128, offset: 192)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9394, file: !1158, line: 193, baseType: !1100, size: 512, offset: 320)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9394, file: !1158, line: 195, baseType: !1083, size: 16, offset: 832)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !9394, file: !1158, line: 196, baseType: !1083, size: 16, offset: 848)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !9394, file: !1158, line: 197, baseType: !1083, size: 16, offset: 864)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !9394, file: !1158, line: 198, baseType: !1083, size: 16, offset: 880)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !9394, file: !1158, line: 199, baseType: !1070, size: 8, offset: 896)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !9394, file: !1158, line: 200, baseType: !1070, size: 8, offset: 904)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !9394, file: !1158, line: 201, baseType: !2162, size: 48, offset: 912)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !9394, file: !1158, line: 203, baseType: !9410, size: 64, offset: 960)
!9410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9411, size: 64)
!9411 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !1158, line: 203, flags: DIFlagFwdDecl)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9394, file: !1158, line: 204, baseType: !9397, size: 64, offset: 1024)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !9394, file: !1158, line: 205, baseType: !9397, size: 64, offset: 1088)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !9394, file: !1158, line: 207, baseType: !1112, size: 128, offset: 1152)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !9394, file: !1158, line: 208, baseType: !1112, size: 128, offset: 1280)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !9394, file: !1158, line: 210, baseType: !1221, size: 64, offset: 1408)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !9394, file: !1158, line: 211, baseType: !1134, size: 64, offset: 1472)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !9394, file: !1158, line: 212, baseType: !9397, size: 64, offset: 1536)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !9394, file: !1158, line: 217, baseType: !1185, size: 96, offset: 1600)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9394, file: !1158, line: 218, baseType: !1185, size: 96, offset: 1696)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !9394, file: !1158, line: 221, baseType: !1185, size: 96, offset: 1792)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !9394, file: !1158, line: 222, baseType: !1260, size: 128, offset: 1888)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !9394, file: !1158, line: 223, baseType: !1185, size: 96, offset: 2016)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !9394, file: !1158, line: 223, baseType: !1149, size: 32, offset: 2112)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !9394, file: !1158, line: 224, baseType: !1083, size: 16, offset: 2144)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9394, file: !1158, line: 225, baseType: !1083, size: 16, offset: 2160)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !9394, file: !1158, line: 227, baseType: !1269, size: 512, offset: 2176)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !9394, file: !1158, line: 228, baseType: !1269, size: 512, offset: 2688)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !9394, file: !1158, line: 230, baseType: !1269, size: 512, offset: 3200)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !9394, file: !1158, line: 233, baseType: !1185, size: 96, offset: 3712)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !9394, file: !1158, line: 234, baseType: !1185, size: 96, offset: 3808)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !9394, file: !1158, line: 236, baseType: !1185, size: 96, offset: 3904)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !9394, file: !1158, line: 236, baseType: !1185, size: 96, offset: 4000)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !9394, file: !1158, line: 237, baseType: !1185, size: 96, offset: 4096)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !9394, file: !1158, line: 238, baseType: !1149, size: 32, offset: 4192)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !9394, file: !1158, line: 239, baseType: !1149, size: 32, offset: 4224)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !9394, file: !1158, line: 240, baseType: !1149, size: 32, offset: 4256)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !9394, file: !1158, line: 242, baseType: !1054, size: 64, offset: 4288)
!9439 = !DILocation(line: 719, column: 17, scope: !9391)
!9440 = !DILocation(line: 719, column: 51, scope: !9391)
!9441 = !DILocation(line: 719, column: 55, scope: !9391)
!9442 = !DILocation(line: 719, column: 61, scope: !9391)
!9443 = !DILocation(line: 719, column: 24, scope: !9391)
!9444 = !DILocation(line: 720, column: 7, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 720, column: 7)
!9446 = !DILocation(line: 720, column: 7, scope: !9391)
!9447 = !DILocalVariable(name: "con", scope: !9448, file: !1, line: 721, type: !7775)
!9448 = distinct !DILexicalBlock(scope: !9445, file: !1, line: 720, column: 14)
!9449 = !DILocation(line: 721, column: 17, scope: !9448)
!9450 = !DILocation(line: 721, column: 38, scope: !9448)
!9451 = !DILocation(line: 721, column: 45, scope: !9448)
!9452 = !DILocation(line: 721, column: 58, scope: !9448)
!9453 = !DILocation(line: 721, column: 22, scope: !9448)
!9454 = !DILocation(line: 722, column: 8, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9448, file: !1, line: 722, column: 8)
!9456 = !DILocation(line: 722, column: 8, scope: !9448)
!9457 = !DILocation(line: 723, column: 18, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9455, file: !1, line: 722, column: 13)
!9459 = !DILocation(line: 723, column: 6, scope: !9458)
!9460 = !DILocation(line: 723, column: 16, scope: !9458)
!9461 = !DILocation(line: 724, column: 4, scope: !9458)
!9462 = !DILocation(line: 725, column: 3, scope: !9448)
!9463 = !DILocation(line: 726, column: 2, scope: !9391)
!9464 = !DILocation(line: 728, column: 1, scope: !9370)
