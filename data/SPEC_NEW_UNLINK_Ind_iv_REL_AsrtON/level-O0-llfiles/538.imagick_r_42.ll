; ModuleID = 'magick/morphology.c'
source_filename = "magick/morphology.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.KernelInfo = type { i32, i64, i64, i64, i64, double*, double, double, double, double, double, %struct.KernelInfo*, i64 }
%struct._GeometryInfo = type { double, double, double, double, double }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._DoublePixelPacket = type { double, double, double, double, double }

@.str = private unnamed_addr constant [31 x i8] c"3: -1,-1,-1  -1,8,-1  -1,-1,-1\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"3: 0,-1,0  -1,4,-1  0,-1,0\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"3: -2,1,-2  1,4,1  -2,1,-2\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"3: 1,-2,1  -2,4,-2  1,-2,1\00", align 1
@.str.4 = private unnamed_addr constant [69 x i8] c"5: -4,-1,0,-1,-4  -1,2,3,2,-1  0,3,4,3,0  -1,2,3,2,-1  -4,-1,0,-1,-4\00", align 1
@.str.5 = private unnamed_addr constant [128 x i8] c"7:-10,-5,-2,-1,-2,-5,-10 -5,0,3,4,3,0,-5 -2,3,6,7,6,3,-2 -1,4,7,8,7,4,-1 -2,3,6,7,6,3,-2 -5,0,3,4,3,0,-5 -10,-5,-2,-1,-2,-5,-10\00", align 1
@.str.6 = private unnamed_addr constant [70 x i8] c"5: 0,0,-1,0,0  0,-1,-2,-1,0  -1,-2,16,-2,-1  0,-1,-2,-1,0  0,0,-1,0,0\00", align 1
@.str.7 = private unnamed_addr constant [250 x i8] c"9: 0,-1,-1,-2,-2,-2,-1,-1,0  -1,-2,-4,-5,-5,-5,-4,-2,-1  -1,-4,-5,-3,-0,-3,-5,-4,-1  -2,-5,-3,12,24,12,-3,-5,-2  -2,-5,-0,24,40,24,-0,-5,-2  -2,-5,-3,12,24,12,-3,-5,-2  -1,-4,-5,-3,-0,-3,-5,-4,-1  -1,-2,-4,-5,-5,-5,-4,-2,-1  0,-1,-1,-2,-2,-2,-1,-1,0\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"3: 1,0,-1  2,0,-2  1,0,-1\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"3: 0,0,0  1,-1,0  0,0,0\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"3: 1,0,-1  1,0,-1  1,0,-1\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"3: 1,1,-1  1,-2,-1  1,1,-1\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"3: 5,-3,-3  5,0,-3  5,-3,-3\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"3: 1,2,0  2,0,-2  0,-2,-1\00", align 1
@.str.14 = private unnamed_addr constant [108 x i8] c"FreiChen:11;FreiChen:12;FreiChen:13;FreiChen:14;FreiChen:15;FreiChen:16;FreiChen:17;FreiChen:18;FreiChen:19\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"3: 1,2,1  0,0,0  1,2,1\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"3: 2,-1,0  -1,0,1  0,1,-2\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"3: 0,1,-2  -1,0,1  2,-1,0\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"3: 0,-1,0  1,0,1  0,-1,0\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"3: 1,0,-1  0,0,0  -1,0,1\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"3: 1,-2,1  -2,4,-2  -1,-2,1\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"3: 1,1,1  1,1,1  1,1,1\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"ThinSE:482\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"ThinSE:87\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"3: 0,0,0  0,-,1  1,1,-\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"3: 0,0,1  0,-,1  0,1,-\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"LineEnds:1>;LineEnds:2>\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"3: 0,0,-  0,1,1  0,0,-\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"3: 0,0,0  0,1,0  0,0,1\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"3: 0,0,0  0,1,1  0,0,0\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"3: 0,0,0  0,1,-  0,0,-\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"LineJunctions:1@;LineJunctions:2>\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"3: 1,-,1  -,1,-  -,1,-\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"3: 1,-,-  -,1,-  1,-,1\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"3: -,-,-  1,1,1  -,1,-\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"3: 1,-,1  -,1,-  1,-,1\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"3: -,1,-  1,1,1  -,1,-\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"3x1:0,1,0\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"4x1:0,1,1,0\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"4x3+1+1:0,1,1,- -,1,1,- -,1,1,0\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"4x3+2+1:0,1,1,- -,1,1,- -,1,1,0\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"4x3+1+1:-,1,1,0 -,1,1,- 0,1,1,-\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"4x3+2+1:-,1,1,0 -,1,1,- 0,1,1,-\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"3x4+1+1:0,-,- 1,1,1 1,1,1 -,-,0\00", align 1
@.str.44 = private unnamed_addr constant [32 x i8] c"3x4+1+2:0,-,- 1,1,1 1,1,1 -,-,0\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"3x4+1+1:-,-,0 1,1,1 1,1,1 0,-,-\00", align 1
@.str.46 = private unnamed_addr constant [32 x i8] c"3x4+1+2:-,-,0 1,1,1 1,1,1 0,-,-\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"3: 1,1,-  1,0,-  1,-,0\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"3: 1,1,1  1,0,-  -,-,0\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"ThinSE:482; ThinSE:87x90;\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"ThinSE:41; ThinSE:42; ThinSE:43\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"3: -,-,1  0,-,1  -,-,1\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"3: -,-,1  0,-,1  -,0,-\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"3: -,0,-  0,-,1  -,-,1\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"3: -,0,-  0,-,1  -,0,-\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"3: -,0,1  0,-,1  -,0,-\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"3: -,0,-  0,-,1  -,0,1\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"3: -,1,1  0,-,1  -,0,-\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"3: -,-,1  0,-,1  0,-,1\00", align 1
@.str.59 = private unnamed_addr constant [23 x i8] c"3: 0,-,1  0,-,1  -,-,1\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"3: -,1,-  0,-,1  -,1,-\00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"3: -,1,-  0,-,1  0,-,-\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c"3: 0,-,-  0,-,1  -,1,-\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"3: 0,-,-  0,-,1  0,-,-\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"3: 0,-,1  0,-,1  0,-,-\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"3: 0,-,-  0,-,1  0,-,1\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"3: -,1,-  0,-,1  0,0,-\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"3: -,1,-  0,-,1  0,1,-\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"3: 0,1,-  0,-,1  -,1,-\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"3: -,-,1  0,-,-  -,0,-\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"3: -,1,-  -,-,1  0,-,-\00", align 1
@.str.71 = private unnamed_addr constant [23 x i8] c"3: -,1,1  0,-,1  0,0,-\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"3: 0,-,1  0,-,1  0,-,1\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"1:1\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.75 = private unnamed_addr constant [40 x i8] c"%s:%.20g.%.20g #%.20g => Changed %.20g\0A\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"%s:%.20g.%.20g -> \00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"%s:%.20g -> \00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.79 = private unnamed_addr constant [43 x i8] c"%s%s%s:%.20g.%.20g #%.20g => Changed %.20g\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.81 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.82 = private unnamed_addr constant [15 x i8] c"   Total %.20g\00", align 1
@.str.83 = private unnamed_addr constant [36 x i8] c"\0A%s: Difference with original image\00", align 1
@.str.84 = private unnamed_addr constant [36 x i8] c"\0A%s: Difference of Dilate and Erode\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c" (re-iterate)\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c" (done)\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c" (save for compose)\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c" (compose \22%s\22)\00", align 1
@.str.89 = private unnamed_addr constant [14 x i8] c"convolve:bias\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"convolve:scale\00", align 1
@.str.91 = private unnamed_addr constant [11 x i8] c"showkernel\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"convolve:showkernel\00", align 1
@.str.93 = private unnamed_addr constant [22 x i8] c"morphology:showkernel\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"morphology:compose\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c"Kernel\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c" #%lu\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c" \22%s\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"@%lg\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"\22 of size %lux%lu%+ld%+ld\00", align 1
@.str.100 = private unnamed_addr constant [34 x i8] c" with values from %.*lg to %.*lg\0A\00", align 1
@.str.101 = private unnamed_addr constant [43 x i8] c"Forming a output range from %.*lg to %.*lg\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c" (Zero-Summing)\0A\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c" (Normalized)\0A\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c" (Sum %.*lg)\0A\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"%2lu:\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c" %*s\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c" %*.*lg\00", align 1
@.str.109 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.110 = private unnamed_addr constant [17 x i8] c"Morphology/Image\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.112 = private unnamed_addr constant [20 x i8] c"magick/morphology.c\00", align 1
@.str.113 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.115 = private unnamed_addr constant [46 x i8] c"Unable to rotate non-3x3 kernel by 45 degrees\00", align 1
@.str.116 = private unnamed_addr constant [60 x i8] c"Unable to rotate a non-square, non-linear kernel 90 degrees\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KernelInfo* @AcquireKernelInfo(i8* %kernel_string) #0 !dbg !848 {
entry:
  %retval = alloca %struct.KernelInfo*, align 8
  %kernel_string.addr = alloca i8*, align 8
  %kernel = alloca %struct.KernelInfo*, align 8
  %new_kernel = alloca %struct.KernelInfo*, align 8
  %token = alloca [4096 x i8], align 16
  %p = alloca i8*, align 8
  store i8* %kernel_string, i8** %kernel_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %kernel_string.addr, metadata !852, metadata !DIExpression()), !dbg !853
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel, metadata !854, metadata !DIExpression()), !dbg !855
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %new_kernel, metadata !856, metadata !DIExpression()), !dbg !857
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !858, metadata !DIExpression()), !dbg !859
  call void @llvm.dbg.declare(metadata i8** %p, metadata !860, metadata !DIExpression()), !dbg !861
  %0 = load i8*, i8** %kernel_string.addr, align 8, !dbg !862
  %cmp = icmp eq i8* %0, null, !dbg !864
  br i1 %cmp, label %if.then, label %if.end, !dbg !865

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %kernel_string.addr, align 8, !dbg !866
  %call = call %struct.KernelInfo* @ParseKernelArray(i8* %1), !dbg !867
  store %struct.KernelInfo* %call, %struct.KernelInfo** %retval, align 8, !dbg !868
  br label %return, !dbg !868

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %kernel_string.addr, align 8, !dbg !869
  store i8* %2, i8** %p, align 8, !dbg !870
  store %struct.KernelInfo* null, %struct.KernelInfo** %kernel, align 8, !dbg !871
  br label %while.cond, !dbg !872

while.cond:                                       ; preds = %if.end39, %if.end
  %3 = load i8*, i8** %p, align 8, !dbg !873
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !874
  call void @GetMagickToken(i8* %3, i8** null, i8* %arraydecay), !dbg !875
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !876
  %4 = load i8, i8* %arraydecay1, align 16, !dbg !876
  %conv = sext i8 %4 to i32, !dbg !876
  %cmp2 = icmp ne i32 %conv, 0, !dbg !877
  br i1 %cmp2, label %while.body, label %while.end, !dbg !872

while.body:                                       ; preds = %while.cond
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !878
  %5 = load i8, i8* %arraydecay4, align 16, !dbg !878
  %conv5 = sext i8 %5 to i32, !dbg !878
  %cmp6 = icmp ne i32 %conv5, 59, !dbg !881
  br i1 %cmp6, label %if.then8, label %if.end34, !dbg !882

if.then8:                                         ; preds = %while.body
  %call9 = call i16** @__ctype_b_loc() #10, !dbg !883
  %6 = load i16*, i16** %call9, align 8, !dbg !883
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !883
  %7 = load i8, i8* %arraydecay10, align 16, !dbg !883
  %conv11 = zext i8 %7 to i32, !dbg !883
  %idxprom = sext i32 %conv11 to i64, !dbg !883
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !883
  %8 = load i16, i16* %arrayidx, align 2, !dbg !883
  %conv12 = zext i16 %8 to i32, !dbg !883
  %and = and i32 %conv12, 1024, !dbg !883
  %cmp13 = icmp ne i32 %and, 0, !dbg !886
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !887

if.then15:                                        ; preds = %if.then8
  %9 = load i8*, i8** %p, align 8, !dbg !888
  %call16 = call %struct.KernelInfo* @ParseKernelName(i8* %9), !dbg !889
  store %struct.KernelInfo* %call16, %struct.KernelInfo** %new_kernel, align 8, !dbg !890
  br label %if.end18, !dbg !891

if.else:                                          ; preds = %if.then8
  %10 = load i8*, i8** %p, align 8, !dbg !892
  %call17 = call %struct.KernelInfo* @ParseKernelArray(i8* %10), !dbg !893
  store %struct.KernelInfo* %call17, %struct.KernelInfo** %new_kernel, align 8, !dbg !894
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !895
  %cmp19 = icmp eq %struct.KernelInfo* %11, null, !dbg !897
  br i1 %cmp19, label %if.then21, label %if.end27, !dbg !898

if.then21:                                        ; preds = %if.end18
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !899
  %cmp22 = icmp ne %struct.KernelInfo* %12, null, !dbg !902
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !903

if.then24:                                        ; preds = %if.then21
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !904
  %call25 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %13), !dbg !905
  store %struct.KernelInfo* %call25, %struct.KernelInfo** %kernel, align 8, !dbg !906
  br label %if.end26, !dbg !907

if.end26:                                         ; preds = %if.then24, %if.then21
  store %struct.KernelInfo* null, %struct.KernelInfo** %retval, align 8, !dbg !908
  br label %return, !dbg !908

if.end27:                                         ; preds = %if.end18
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !909
  %cmp28 = icmp eq %struct.KernelInfo* %14, null, !dbg !911
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !912

if.then30:                                        ; preds = %if.end27
  %15 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !913
  store %struct.KernelInfo* %15, %struct.KernelInfo** %kernel, align 8, !dbg !914
  br label %if.end33, !dbg !915

if.else31:                                        ; preds = %if.end27
  %16 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !916
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !917
  %call32 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %17), !dbg !918
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call32, i32 0, i32 11, !dbg !919
  store %struct.KernelInfo* %16, %struct.KernelInfo** %next, align 8, !dbg !920
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then30
  br label %if.end34, !dbg !921

if.end34:                                         ; preds = %if.end33, %while.body
  %18 = load i8*, i8** %p, align 8, !dbg !922
  %call35 = call i8* @strchr(i8* %18, i32 59) #11, !dbg !923
  store i8* %call35, i8** %p, align 8, !dbg !924
  %19 = load i8*, i8** %p, align 8, !dbg !925
  %cmp36 = icmp eq i8* %19, null, !dbg !927
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !928

if.then38:                                        ; preds = %if.end34
  br label %while.end, !dbg !929

if.end39:                                         ; preds = %if.end34
  %20 = load i8*, i8** %p, align 8, !dbg !930
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !930
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !930
  br label %while.cond, !dbg !872, !llvm.loop !931

while.end:                                        ; preds = %if.then38, %while.cond
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !933
  store %struct.KernelInfo* %21, %struct.KernelInfo** %retval, align 8, !dbg !934
  br label %return, !dbg !934

return:                                           ; preds = %while.end, %if.end26, %if.then
  %22 = load %struct.KernelInfo*, %struct.KernelInfo** %retval, align 8, !dbg !935
  ret %struct.KernelInfo* %22, !dbg !935
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.KernelInfo* @ParseKernelArray(i8* %kernel_string) #0 !dbg !936 {
entry:
  %retval = alloca %struct.KernelInfo*, align 8
  %kernel_string.addr = alloca i8*, align 8
  %kernel = alloca %struct.KernelInfo*, align 8
  %token = alloca [4096 x i8], align 16
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %i = alloca i64, align 8
  %nan = alloca double, align 8
  %flags = alloca i32, align 4
  %args = alloca %struct._GeometryInfo, align 8
  store i8* %kernel_string, i8** %kernel_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %kernel_string.addr, metadata !937, metadata !DIExpression()), !dbg !938
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel, metadata !939, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !941, metadata !DIExpression()), !dbg !942
  call void @llvm.dbg.declare(metadata i8** %p, metadata !943, metadata !DIExpression()), !dbg !944
  call void @llvm.dbg.declare(metadata i8** %end, metadata !945, metadata !DIExpression()), !dbg !946
  call void @llvm.dbg.declare(metadata i64* %i, metadata !947, metadata !DIExpression()), !dbg !948
  call void @llvm.dbg.declare(metadata double* %nan, metadata !949, metadata !DIExpression()), !dbg !950
  %call = call double @sqrt(double -1.000000e+00) #12, !dbg !951
  store double %call, double* %nan, align 8, !dbg !950
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !952, metadata !DIExpression()), !dbg !954
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %args, metadata !955, metadata !DIExpression()), !dbg !964
  %call1 = call i8* @AcquireMagickMemory(i64 104) #13, !dbg !965
  %0 = bitcast i8* %call1 to %struct.KernelInfo*, !dbg !966
  store %struct.KernelInfo* %0, %struct.KernelInfo** %kernel, align 8, !dbg !967
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !968
  %cmp = icmp eq %struct.KernelInfo* %1, null, !dbg !970
  br i1 %cmp, label %if.then, label %if.end, !dbg !971

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !972
  store %struct.KernelInfo* %2, %struct.KernelInfo** %retval, align 8, !dbg !973
  br label %return, !dbg !973

if.end:                                           ; preds = %entry
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !974
  %4 = bitcast %struct.KernelInfo* %3 to i8*, !dbg !974
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 104), !dbg !975
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !976
  %angle = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %5, i32 0, i32 10, !dbg !977
  store double 0.000000e+00, double* %angle, align 8, !dbg !978
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !979
  %maximum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 7, !dbg !980
  store double 0.000000e+00, double* %maximum, align 8, !dbg !981
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !982
  %minimum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 6, !dbg !983
  store double 0.000000e+00, double* %minimum, align 8, !dbg !984
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !985
  %positive_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 9, !dbg !986
  store double 0.000000e+00, double* %positive_range, align 8, !dbg !987
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !988
  %negative_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 8, !dbg !989
  store double 0.000000e+00, double* %negative_range, align 8, !dbg !990
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !991
  %type = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 0, !dbg !992
  store i32 36, i32* %type, align 8, !dbg !993
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !994
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %11, i32 0, i32 11, !dbg !995
  store %struct.KernelInfo* null, %struct.KernelInfo** %next, align 8, !dbg !996
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !997
  %signature = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 12, !dbg !998
  store i64 2880220587, i64* %signature, align 8, !dbg !999
  %13 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1000
  %cmp3 = icmp eq i8* %13, null, !dbg !1002
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1003

if.then4:                                         ; preds = %if.end
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1004
  store %struct.KernelInfo* %14, %struct.KernelInfo** %retval, align 8, !dbg !1005
  br label %return, !dbg !1005

if.end5:                                          ; preds = %if.end
  %15 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1006
  %call6 = call i8* @strchr(i8* %15, i32 59) #11, !dbg !1007
  store i8* %call6, i8** %end, align 8, !dbg !1008
  %16 = load i8*, i8** %end, align 8, !dbg !1009
  %cmp7 = icmp eq i8* %16, null, !dbg !1011
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !1012

if.then8:                                         ; preds = %if.end5
  %17 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1013
  %call9 = call i8* @strchr(i8* %17, i32 0) #11, !dbg !1014
  store i8* %call9, i8** %end, align 8, !dbg !1015
  br label %if.end10, !dbg !1016

if.end10:                                         ; preds = %if.then8, %if.end5
  store i32 0, i32* %flags, align 4, !dbg !1017
  %18 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1018
  %call11 = call i8* @strchr(i8* %18, i32 58) #11, !dbg !1019
  store i8* %call11, i8** %p, align 8, !dbg !1020
  %19 = load i8*, i8** %p, align 8, !dbg !1021
  %cmp12 = icmp ne i8* %19, null, !dbg !1023
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !1024

land.lhs.true:                                    ; preds = %if.end10
  %20 = load i8*, i8** %p, align 8, !dbg !1025
  %21 = load i8*, i8** %end, align 8, !dbg !1026
  %cmp13 = icmp ult i8* %20, %21, !dbg !1027
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !1028

if.then14:                                        ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1029
  %22 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1031
  %23 = load i8*, i8** %p, align 8, !dbg !1032
  %24 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1033
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64, !dbg !1034
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64, !dbg !1034
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %22, i64 %sub.ptr.sub, i1 false), !dbg !1029
  %25 = load i8*, i8** %p, align 8, !dbg !1035
  %26 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1036
  %sub.ptr.lhs.cast15 = ptrtoint i8* %25 to i64, !dbg !1037
  %sub.ptr.rhs.cast16 = ptrtoint i8* %26 to i64, !dbg !1037
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !1037
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 %sub.ptr.sub17, !dbg !1038
  store i8 0, i8* %arrayidx, align 1, !dbg !1039
  call void @SetGeometryInfo(%struct._GeometryInfo* %args), !dbg !1040
  %arraydecay18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1041
  %call19 = call i32 @ParseGeometry(i8* %arraydecay18, %struct._GeometryInfo* %args), !dbg !1042
  store i32 %call19, i32* %flags, align 4, !dbg !1043
  %27 = load i32, i32* %flags, align 4, !dbg !1044
  %and = and i32 %27, 4, !dbg !1046
  %cmp20 = icmp eq i32 %and, 0, !dbg !1047
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !1048

if.then21:                                        ; preds = %if.then14
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1049
  %28 = load double, double* %sigma, align 8, !dbg !1049
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1050
  store double %28, double* %rho, align 8, !dbg !1051
  br label %if.end22, !dbg !1052

if.end22:                                         ; preds = %if.then21, %if.then14
  %rho23 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1053
  %29 = load double, double* %rho23, align 8, !dbg !1053
  %cmp24 = fcmp olt double %29, 1.000000e+00, !dbg !1055
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !1056

if.then25:                                        ; preds = %if.end22
  %rho26 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1057
  store double 1.000000e+00, double* %rho26, align 8, !dbg !1058
  br label %if.end27, !dbg !1059

if.end27:                                         ; preds = %if.then25, %if.end22
  %sigma28 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1060
  %30 = load double, double* %sigma28, align 8, !dbg !1060
  %cmp29 = fcmp olt double %30, 1.000000e+00, !dbg !1062
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !1063

if.then30:                                        ; preds = %if.end27
  %rho31 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1064
  %31 = load double, double* %rho31, align 8, !dbg !1064
  %sigma32 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1065
  store double %31, double* %sigma32, align 8, !dbg !1066
  br label %if.end33, !dbg !1067

if.end33:                                         ; preds = %if.then30, %if.end27
  %rho34 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1068
  %32 = load double, double* %rho34, align 8, !dbg !1068
  %conv = fptoui double %32 to i64, !dbg !1069
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1070
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %33, i32 0, i32 1, !dbg !1071
  store i64 %conv, i64* %width, align 8, !dbg !1072
  %sigma35 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1073
  %34 = load double, double* %sigma35, align 8, !dbg !1073
  %conv36 = fptoui double %34 to i64, !dbg !1074
  %35 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1075
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %35, i32 0, i32 2, !dbg !1076
  store i64 %conv36, i64* %height, align 8, !dbg !1077
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 2, !dbg !1078
  %36 = load double, double* %xi, align 8, !dbg !1078
  %cmp37 = fcmp olt double %36, 0.000000e+00, !dbg !1080
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !1081

lor.lhs.false:                                    ; preds = %if.end33
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 3, !dbg !1082
  %37 = load double, double* %psi, align 8, !dbg !1082
  %cmp39 = fcmp olt double %37, 0.000000e+00, !dbg !1083
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !1084

if.then41:                                        ; preds = %lor.lhs.false, %if.end33
  %38 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1085
  %call42 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %38), !dbg !1086
  store %struct.KernelInfo* %call42, %struct.KernelInfo** %retval, align 8, !dbg !1087
  br label %return, !dbg !1087

if.end43:                                         ; preds = %lor.lhs.false
  %39 = load i32, i32* %flags, align 4, !dbg !1088
  %and44 = and i32 %39, 1, !dbg !1089
  %cmp45 = icmp ne i32 %and44, 0, !dbg !1090
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !1091

cond.true:                                        ; preds = %if.end43
  %xi47 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 2, !dbg !1092
  %40 = load double, double* %xi47, align 8, !dbg !1092
  %conv48 = fptosi double %40 to i64, !dbg !1093
  br label %cond.end, !dbg !1091

cond.false:                                       ; preds = %if.end43
  %41 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1094
  %width49 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %41, i32 0, i32 1, !dbg !1095
  %42 = load i64, i64* %width49, align 8, !dbg !1095
  %sub = sub i64 %42, 1, !dbg !1096
  %div = sdiv i64 %sub, 2, !dbg !1097
  br label %cond.end, !dbg !1091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv48, %cond.true ], [ %div, %cond.false ], !dbg !1091
  %43 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1098
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %43, i32 0, i32 3, !dbg !1099
  store i64 %cond, i64* %x, align 8, !dbg !1100
  %44 = load i32, i32* %flags, align 4, !dbg !1101
  %and50 = and i32 %44, 2, !dbg !1102
  %cmp51 = icmp ne i32 %and50, 0, !dbg !1103
  br i1 %cmp51, label %cond.true53, label %cond.false56, !dbg !1104

cond.true53:                                      ; preds = %cond.end
  %psi54 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 3, !dbg !1105
  %45 = load double, double* %psi54, align 8, !dbg !1105
  %conv55 = fptosi double %45 to i64, !dbg !1106
  br label %cond.end60, !dbg !1104

cond.false56:                                     ; preds = %cond.end
  %46 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1107
  %height57 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %46, i32 0, i32 2, !dbg !1108
  %47 = load i64, i64* %height57, align 8, !dbg !1108
  %sub58 = sub i64 %47, 1, !dbg !1109
  %div59 = sdiv i64 %sub58, 2, !dbg !1110
  br label %cond.end60, !dbg !1104

cond.end60:                                       ; preds = %cond.false56, %cond.true53
  %cond61 = phi i64 [ %conv55, %cond.true53 ], [ %div59, %cond.false56 ], !dbg !1104
  %48 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1111
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %48, i32 0, i32 4, !dbg !1112
  store i64 %cond61, i64* %y, align 8, !dbg !1113
  %49 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1114
  %x62 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %49, i32 0, i32 3, !dbg !1116
  %50 = load i64, i64* %x62, align 8, !dbg !1116
  %51 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1117
  %width63 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %51, i32 0, i32 1, !dbg !1118
  %52 = load i64, i64* %width63, align 8, !dbg !1118
  %cmp64 = icmp sge i64 %50, %52, !dbg !1119
  br i1 %cmp64, label %if.then71, label %lor.lhs.false66, !dbg !1120

lor.lhs.false66:                                  ; preds = %cond.end60
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1121
  %y67 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %53, i32 0, i32 4, !dbg !1122
  %54 = load i64, i64* %y67, align 8, !dbg !1122
  %55 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1123
  %height68 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %55, i32 0, i32 2, !dbg !1124
  %56 = load i64, i64* %height68, align 8, !dbg !1124
  %cmp69 = icmp sge i64 %54, %56, !dbg !1125
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !1126

if.then71:                                        ; preds = %lor.lhs.false66, %cond.end60
  %57 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1127
  %call72 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %57), !dbg !1128
  store %struct.KernelInfo* %call72, %struct.KernelInfo** %retval, align 8, !dbg !1129
  br label %return, !dbg !1129

if.end73:                                         ; preds = %lor.lhs.false66
  %58 = load i8*, i8** %p, align 8, !dbg !1130
  %incdec.ptr = getelementptr inbounds i8, i8* %58, i32 1, !dbg !1130
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1130
  br label %if.end122, !dbg !1131

if.else:                                          ; preds = %land.lhs.true, %if.end10
  %59 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1132
  store i8* %59, i8** %p, align 8, !dbg !1134
  br label %while.cond, !dbg !1135

while.cond:                                       ; preds = %while.body, %if.else
  %call74 = call i16** @__ctype_b_loc() #10, !dbg !1136
  %60 = load i16*, i16** %call74, align 8, !dbg !1136
  %61 = load i8*, i8** %p, align 8, !dbg !1136
  %62 = load i8, i8* %61, align 1, !dbg !1136
  %conv75 = zext i8 %62 to i32, !dbg !1136
  %idxprom = sext i32 %conv75 to i64, !dbg !1136
  %arrayidx76 = getelementptr inbounds i16, i16* %60, i64 %idxprom, !dbg !1136
  %63 = load i16, i16* %arrayidx76, align 2, !dbg !1136
  %conv77 = zext i16 %63 to i32, !dbg !1136
  %and78 = and i32 %conv77, 8192, !dbg !1136
  %cmp79 = icmp ne i32 %and78, 0, !dbg !1137
  br i1 %cmp79, label %lor.end, label %lor.rhs, !dbg !1138

lor.rhs:                                          ; preds = %while.cond
  %64 = load i8*, i8** %p, align 8, !dbg !1139
  %65 = load i8, i8* %64, align 1, !dbg !1140
  %conv81 = sext i8 %65 to i32, !dbg !1140
  %cmp82 = icmp eq i32 %conv81, 39, !dbg !1141
  br label %lor.end, !dbg !1138

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %66 = phi i1 [ true, %while.cond ], [ %cmp82, %lor.rhs ]
  br i1 %66, label %while.body, label %while.end, !dbg !1135

while.body:                                       ; preds = %lor.end
  %67 = load i8*, i8** %p, align 8, !dbg !1142
  %incdec.ptr84 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !1142
  store i8* %incdec.ptr84, i8** %p, align 8, !dbg !1142
  br label %while.cond, !dbg !1135, !llvm.loop !1143

while.end:                                        ; preds = %lor.end
  store i64 0, i64* %i, align 8, !dbg !1144
  br label %for.cond, !dbg !1146

for.cond:                                         ; preds = %for.inc, %while.end
  %68 = load i8*, i8** %p, align 8, !dbg !1147
  %69 = load i8*, i8** %end, align 8, !dbg !1149
  %cmp85 = icmp ult i8* %68, %69, !dbg !1150
  br i1 %cmp85, label %for.body, label %for.end, !dbg !1151

for.body:                                         ; preds = %for.cond
  %70 = load i8*, i8** %p, align 8, !dbg !1152
  %arraydecay87 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1154
  call void @GetMagickToken(i8* %70, i8** %p, i8* %arraydecay87), !dbg !1155
  %arraydecay88 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1156
  %71 = load i8, i8* %arraydecay88, align 16, !dbg !1156
  %conv89 = sext i8 %71 to i32, !dbg !1156
  %cmp90 = icmp eq i32 %conv89, 44, !dbg !1158
  br i1 %cmp90, label %if.then92, label %if.end94, !dbg !1159

if.then92:                                        ; preds = %for.body
  %72 = load i8*, i8** %p, align 8, !dbg !1160
  %arraydecay93 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1161
  call void @GetMagickToken(i8* %72, i8** %p, i8* %arraydecay93), !dbg !1162
  br label %if.end94, !dbg !1162

if.end94:                                         ; preds = %if.then92, %for.body
  br label %for.inc, !dbg !1163

for.inc:                                          ; preds = %if.end94
  %73 = load i64, i64* %i, align 8, !dbg !1164
  %inc = add nsw i64 %73, 1, !dbg !1164
  store i64 %inc, i64* %i, align 8, !dbg !1164
  br label %for.cond, !dbg !1165, !llvm.loop !1166

for.end:                                          ; preds = %for.cond
  %74 = load i64, i64* %i, align 8, !dbg !1168
  %conv95 = sitofp i64 %74 to double, !dbg !1169
  %add = fadd double %conv95, 1.000000e+00, !dbg !1170
  %call96 = call double @sqrt(double %add) #12, !dbg !1171
  %conv97 = fptoui double %call96 to i64, !dbg !1172
  %75 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1173
  %height98 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %75, i32 0, i32 2, !dbg !1174
  store i64 %conv97, i64* %height98, align 8, !dbg !1175
  %76 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1176
  %width99 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %76, i32 0, i32 1, !dbg !1177
  store i64 %conv97, i64* %width99, align 8, !dbg !1178
  %77 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1179
  %width100 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %77, i32 0, i32 1, !dbg !1180
  %78 = load i64, i64* %width100, align 8, !dbg !1180
  %sub101 = sub i64 %78, 1, !dbg !1181
  %div102 = sdiv i64 %sub101, 2, !dbg !1182
  %79 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1183
  %y103 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %79, i32 0, i32 4, !dbg !1184
  store i64 %div102, i64* %y103, align 8, !dbg !1185
  %80 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1186
  %x104 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %80, i32 0, i32 3, !dbg !1187
  store i64 %div102, i64* %x104, align 8, !dbg !1188
  %81 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1189
  store i8* %81, i8** %p, align 8, !dbg !1190
  br label %while.cond105, !dbg !1191

while.cond105:                                    ; preds = %while.body119, %for.end
  %call106 = call i16** @__ctype_b_loc() #10, !dbg !1192
  %82 = load i16*, i16** %call106, align 8, !dbg !1192
  %83 = load i8*, i8** %p, align 8, !dbg !1192
  %84 = load i8, i8* %83, align 1, !dbg !1192
  %conv107 = zext i8 %84 to i32, !dbg !1192
  %idxprom108 = sext i32 %conv107 to i64, !dbg !1192
  %arrayidx109 = getelementptr inbounds i16, i16* %82, i64 %idxprom108, !dbg !1192
  %85 = load i16, i16* %arrayidx109, align 2, !dbg !1192
  %conv110 = zext i16 %85 to i32, !dbg !1192
  %and111 = and i32 %conv110, 8192, !dbg !1192
  %cmp112 = icmp ne i32 %and111, 0, !dbg !1193
  br i1 %cmp112, label %lor.end118, label %lor.rhs114, !dbg !1194

lor.rhs114:                                       ; preds = %while.cond105
  %86 = load i8*, i8** %p, align 8, !dbg !1195
  %87 = load i8, i8* %86, align 1, !dbg !1196
  %conv115 = sext i8 %87 to i32, !dbg !1196
  %cmp116 = icmp eq i32 %conv115, 39, !dbg !1197
  br label %lor.end118, !dbg !1194

lor.end118:                                       ; preds = %lor.rhs114, %while.cond105
  %88 = phi i1 [ true, %while.cond105 ], [ %cmp116, %lor.rhs114 ]
  br i1 %88, label %while.body119, label %while.end121, !dbg !1191

while.body119:                                    ; preds = %lor.end118
  %89 = load i8*, i8** %p, align 8, !dbg !1198
  %incdec.ptr120 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !1198
  store i8* %incdec.ptr120, i8** %p, align 8, !dbg !1198
  br label %while.cond105, !dbg !1191, !llvm.loop !1199

while.end121:                                     ; preds = %lor.end118
  br label %if.end122

if.end122:                                        ; preds = %while.end121, %if.end73
  %90 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1200
  %width123 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %90, i32 0, i32 1, !dbg !1200
  %91 = load i64, i64* %width123, align 8, !dbg !1200
  %92 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1200
  %height124 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %92, i32 0, i32 2, !dbg !1200
  %93 = load i64, i64* %height124, align 8, !dbg !1200
  %mul = mul i64 %93, 8, !dbg !1200
  %call125 = call i8* @AcquireAlignedMemory(i64 %91, i64 %mul) #14, !dbg !1200
  %94 = bitcast i8* %call125 to double*, !dbg !1201
  %95 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1202
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %95, i32 0, i32 5, !dbg !1203
  store double* %94, double** %values, align 8, !dbg !1204
  %96 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1205
  %values126 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %96, i32 0, i32 5, !dbg !1207
  %97 = load double*, double** %values126, align 8, !dbg !1207
  %cmp127 = icmp eq double* %97, null, !dbg !1208
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !1209

if.then129:                                       ; preds = %if.end122
  %98 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1210
  %call130 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %98), !dbg !1211
  store %struct.KernelInfo* %call130, %struct.KernelInfo** %retval, align 8, !dbg !1212
  br label %return, !dbg !1212

if.end131:                                        ; preds = %if.end122
  %99 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1213
  %minimum132 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %99, i32 0, i32 6, !dbg !1214
  store double 0x7FEFFFFFFFFFFFFF, double* %minimum132, align 8, !dbg !1215
  %100 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1216
  %maximum133 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %100, i32 0, i32 7, !dbg !1217
  store double 0xFFEFFFFFFFFFFFFF, double* %maximum133, align 8, !dbg !1218
  %101 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1219
  %positive_range134 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %101, i32 0, i32 9, !dbg !1220
  store double 0.000000e+00, double* %positive_range134, align 8, !dbg !1221
  %102 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1222
  %negative_range135 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %102, i32 0, i32 8, !dbg !1223
  store double 0.000000e+00, double* %negative_range135, align 8, !dbg !1224
  store i64 0, i64* %i, align 8, !dbg !1225
  br label %for.cond136, !dbg !1227

for.cond136:                                      ; preds = %for.inc197, %if.end131
  %103 = load i64, i64* %i, align 8, !dbg !1228
  %104 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1230
  %width137 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %104, i32 0, i32 1, !dbg !1231
  %105 = load i64, i64* %width137, align 8, !dbg !1231
  %106 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1232
  %height138 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %106, i32 0, i32 2, !dbg !1233
  %107 = load i64, i64* %height138, align 8, !dbg !1233
  %mul139 = mul i64 %105, %107, !dbg !1234
  %cmp140 = icmp slt i64 %103, %mul139, !dbg !1235
  br i1 %cmp140, label %land.rhs, label %land.end, !dbg !1236

land.rhs:                                         ; preds = %for.cond136
  %108 = load i8*, i8** %p, align 8, !dbg !1237
  %109 = load i8*, i8** %end, align 8, !dbg !1238
  %cmp142 = icmp ult i8* %108, %109, !dbg !1239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond136
  %110 = phi i1 [ false, %for.cond136 ], [ %cmp142, %land.rhs ], !dbg !1240
  br i1 %110, label %for.body144, label %for.end199, !dbg !1241

for.body144:                                      ; preds = %land.end
  %111 = load i8*, i8** %p, align 8, !dbg !1242
  %arraydecay145 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1244
  call void @GetMagickToken(i8* %111, i8** %p, i8* %arraydecay145), !dbg !1245
  %arraydecay146 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1246
  %112 = load i8, i8* %arraydecay146, align 16, !dbg !1246
  %conv147 = sext i8 %112 to i32, !dbg !1246
  %cmp148 = icmp eq i32 %conv147, 44, !dbg !1248
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !1249

if.then150:                                       ; preds = %for.body144
  %113 = load i8*, i8** %p, align 8, !dbg !1250
  %arraydecay151 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1251
  call void @GetMagickToken(i8* %113, i8** %p, i8* %arraydecay151), !dbg !1252
  br label %if.end152, !dbg !1252

if.end152:                                        ; preds = %if.then150, %for.body144
  %arraydecay153 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1253
  %call154 = call i32 @LocaleCompare(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* %arraydecay153), !dbg !1255
  %cmp155 = icmp eq i32 %call154, 0, !dbg !1256
  br i1 %cmp155, label %if.then162, label %lor.lhs.false157, !dbg !1257

lor.lhs.false157:                                 ; preds = %if.end152
  %arraydecay158 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1258
  %call159 = call i32 @LocaleCompare(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0), i8* %arraydecay158), !dbg !1259
  %cmp160 = icmp eq i32 %call159, 0, !dbg !1260
  br i1 %cmp160, label %if.then162, label %if.else165, !dbg !1261

if.then162:                                       ; preds = %lor.lhs.false157, %if.end152
  %114 = load double, double* %nan, align 8, !dbg !1262
  %115 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1264
  %values163 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %115, i32 0, i32 5, !dbg !1265
  %116 = load double*, double** %values163, align 8, !dbg !1265
  %117 = load i64, i64* %i, align 8, !dbg !1266
  %arrayidx164 = getelementptr inbounds double, double* %116, i64 %117, !dbg !1264
  store double %114, double* %arrayidx164, align 8, !dbg !1267
  br label %if.end196, !dbg !1268

if.else165:                                       ; preds = %lor.lhs.false157
  %arraydecay166 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1269
  %call167 = call double @StringToDouble(i8* %arraydecay166, i8** null), !dbg !1271
  %118 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1272
  %values168 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %118, i32 0, i32 5, !dbg !1273
  %119 = load double*, double** %values168, align 8, !dbg !1273
  %120 = load i64, i64* %i, align 8, !dbg !1274
  %arrayidx169 = getelementptr inbounds double, double* %119, i64 %120, !dbg !1272
  store double %call167, double* %arrayidx169, align 8, !dbg !1275
  %121 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1276
  %values170 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %121, i32 0, i32 5, !dbg !1277
  %122 = load double*, double** %values170, align 8, !dbg !1277
  %123 = load i64, i64* %i, align 8, !dbg !1278
  %arrayidx171 = getelementptr inbounds double, double* %122, i64 %123, !dbg !1276
  %124 = load double, double* %arrayidx171, align 8, !dbg !1276
  %cmp172 = fcmp olt double %124, 0.000000e+00, !dbg !1279
  br i1 %cmp172, label %cond.true174, label %cond.false179, !dbg !1280

cond.true174:                                     ; preds = %if.else165
  %125 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1281
  %values175 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %125, i32 0, i32 5, !dbg !1282
  %126 = load double*, double** %values175, align 8, !dbg !1282
  %127 = load i64, i64* %i, align 8, !dbg !1283
  %arrayidx176 = getelementptr inbounds double, double* %126, i64 %127, !dbg !1281
  %128 = load double, double* %arrayidx176, align 8, !dbg !1281
  %129 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1284
  %negative_range177 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %129, i32 0, i32 8, !dbg !1285
  %130 = load double, double* %negative_range177, align 8, !dbg !1286
  %add178 = fadd double %130, %128, !dbg !1286
  store double %add178, double* %negative_range177, align 8, !dbg !1286
  br label %cond.end184, !dbg !1280

cond.false179:                                    ; preds = %if.else165
  %131 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1287
  %values180 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %131, i32 0, i32 5, !dbg !1288
  %132 = load double*, double** %values180, align 8, !dbg !1288
  %133 = load i64, i64* %i, align 8, !dbg !1289
  %arrayidx181 = getelementptr inbounds double, double* %132, i64 %133, !dbg !1287
  %134 = load double, double* %arrayidx181, align 8, !dbg !1287
  %135 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1290
  %positive_range182 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %135, i32 0, i32 9, !dbg !1291
  %136 = load double, double* %positive_range182, align 8, !dbg !1292
  %add183 = fadd double %136, %134, !dbg !1292
  store double %add183, double* %positive_range182, align 8, !dbg !1292
  br label %cond.end184, !dbg !1280

cond.end184:                                      ; preds = %cond.false179, %cond.true174
  %cond185 = phi double [ %add178, %cond.true174 ], [ %add183, %cond.false179 ], !dbg !1280
  %137 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1293
  %minimum186 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %137, i32 0, i32 6, !dbg !1293
  %138 = load double, double* %minimum186, align 8, !dbg !1293
  %139 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1293
  %values187 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %139, i32 0, i32 5, !dbg !1293
  %140 = load double*, double** %values187, align 8, !dbg !1293
  %141 = load i64, i64* %i, align 8, !dbg !1293
  %arrayidx188 = getelementptr inbounds double, double* %140, i64 %141, !dbg !1293
  %142 = load double, double* %arrayidx188, align 8, !dbg !1293
  %call189 = call double @MagickMin(double %138, double %142), !dbg !1293
  %143 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1293
  %minimum190 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %143, i32 0, i32 6, !dbg !1293
  store double %call189, double* %minimum190, align 8, !dbg !1293
  %144 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1294
  %maximum191 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %144, i32 0, i32 7, !dbg !1294
  %145 = load double, double* %maximum191, align 8, !dbg !1294
  %146 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1294
  %values192 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %146, i32 0, i32 5, !dbg !1294
  %147 = load double*, double** %values192, align 8, !dbg !1294
  %148 = load i64, i64* %i, align 8, !dbg !1294
  %arrayidx193 = getelementptr inbounds double, double* %147, i64 %148, !dbg !1294
  %149 = load double, double* %arrayidx193, align 8, !dbg !1294
  %call194 = call double @MagickMax(double %145, double %149), !dbg !1294
  %150 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1294
  %maximum195 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %150, i32 0, i32 7, !dbg !1294
  store double %call194, double* %maximum195, align 8, !dbg !1294
  br label %if.end196

if.end196:                                        ; preds = %cond.end184, %if.then162
  br label %for.inc197, !dbg !1295

for.inc197:                                       ; preds = %if.end196
  %151 = load i64, i64* %i, align 8, !dbg !1296
  %inc198 = add nsw i64 %151, 1, !dbg !1296
  store i64 %inc198, i64* %i, align 8, !dbg !1296
  br label %for.cond136, !dbg !1297, !llvm.loop !1298

for.end199:                                       ; preds = %land.end
  %152 = load i8*, i8** %p, align 8, !dbg !1300
  %arraydecay200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1301
  call void @GetMagickToken(i8* %152, i8** %p, i8* %arraydecay200), !dbg !1302
  %arraydecay201 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1303
  %153 = load i8, i8* %arraydecay201, align 16, !dbg !1303
  %conv202 = sext i8 %153 to i32, !dbg !1303
  %cmp203 = icmp ne i32 %conv202, 0, !dbg !1305
  br i1 %cmp203, label %land.lhs.true205, label %if.end217, !dbg !1306

land.lhs.true205:                                 ; preds = %for.end199
  %arraydecay206 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1307
  %154 = load i8, i8* %arraydecay206, align 16, !dbg !1307
  %conv207 = sext i8 %154 to i32, !dbg !1307
  %cmp208 = icmp ne i32 %conv207, 59, !dbg !1308
  br i1 %cmp208, label %land.lhs.true210, label %if.end217, !dbg !1309

land.lhs.true210:                                 ; preds = %land.lhs.true205
  %arraydecay211 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1310
  %155 = load i8, i8* %arraydecay211, align 16, !dbg !1310
  %conv212 = sext i8 %155 to i32, !dbg !1310
  %cmp213 = icmp ne i32 %conv212, 39, !dbg !1311
  br i1 %cmp213, label %if.then215, label %if.end217, !dbg !1312

if.then215:                                       ; preds = %land.lhs.true210
  %156 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1313
  %call216 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %156), !dbg !1314
  store %struct.KernelInfo* %call216, %struct.KernelInfo** %retval, align 8, !dbg !1315
  br label %return, !dbg !1315

if.end217:                                        ; preds = %land.lhs.true210, %land.lhs.true205, %for.end199
  %157 = load i64, i64* %i, align 8, !dbg !1316
  %158 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1318
  %width218 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %158, i32 0, i32 1, !dbg !1319
  %159 = load i64, i64* %width218, align 8, !dbg !1319
  %160 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1320
  %height219 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %160, i32 0, i32 2, !dbg !1321
  %161 = load i64, i64* %height219, align 8, !dbg !1321
  %mul220 = mul i64 %159, %161, !dbg !1322
  %cmp221 = icmp slt i64 %157, %mul220, !dbg !1323
  br i1 %cmp221, label %if.then223, label %if.end225, !dbg !1324

if.then223:                                       ; preds = %if.end217
  %162 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1325
  %call224 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %162), !dbg !1326
  store %struct.KernelInfo* %call224, %struct.KernelInfo** %retval, align 8, !dbg !1327
  br label %return, !dbg !1327

if.end225:                                        ; preds = %if.end217
  %163 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1328
  %minimum226 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %163, i32 0, i32 6, !dbg !1330
  %164 = load double, double* %minimum226, align 8, !dbg !1330
  %cmp227 = fcmp oeq double %164, 0x7FEFFFFFFFFFFFFF, !dbg !1331
  br i1 %cmp227, label %if.then229, label %if.end231, !dbg !1332

if.then229:                                       ; preds = %if.end225
  %165 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1333
  %call230 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %165), !dbg !1334
  store %struct.KernelInfo* %call230, %struct.KernelInfo** %retval, align 8, !dbg !1335
  br label %return, !dbg !1335

if.end231:                                        ; preds = %if.end225
  %166 = load i32, i32* %flags, align 4, !dbg !1336
  %and232 = and i32 %166, 131072, !dbg !1338
  %cmp233 = icmp ne i32 %and232, 0, !dbg !1339
  br i1 %cmp233, label %if.then235, label %if.else236, !dbg !1340

if.then235:                                       ; preds = %if.end231
  %167 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1341
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %167, double 4.500000e+01), !dbg !1342
  br label %if.end248, !dbg !1342

if.else236:                                       ; preds = %if.end231
  %168 = load i32, i32* %flags, align 4, !dbg !1343
  %and237 = and i32 %168, 32768, !dbg !1345
  %cmp238 = icmp ne i32 %and237, 0, !dbg !1346
  br i1 %cmp238, label %if.then240, label %if.else241, !dbg !1347

if.then240:                                       ; preds = %if.else236
  %169 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1348
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %169, double 9.000000e+01), !dbg !1349
  br label %if.end247, !dbg !1349

if.else241:                                       ; preds = %if.else236
  %170 = load i32, i32* %flags, align 4, !dbg !1350
  %and242 = and i32 %170, 16384, !dbg !1352
  %cmp243 = icmp ne i32 %and242, 0, !dbg !1353
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !1354

if.then245:                                       ; preds = %if.else241
  %171 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1355
  call void @ExpandMirrorKernelInfo(%struct.KernelInfo* %171), !dbg !1356
  br label %if.end246, !dbg !1356

if.end246:                                        ; preds = %if.then245, %if.else241
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.then240
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.then235
  %172 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1357
  store %struct.KernelInfo* %172, %struct.KernelInfo** %retval, align 8, !dbg !1358
  br label %return, !dbg !1358

return:                                           ; preds = %if.end248, %if.then229, %if.then223, %if.then215, %if.then129, %if.then71, %if.then41, %if.then4, %if.then
  %173 = load %struct.KernelInfo*, %struct.KernelInfo** %retval, align 8, !dbg !1359
  ret %struct.KernelInfo* %173, !dbg !1359
}

declare dso_local void @GetMagickToken(i8*, i8**, i8*) #2

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.KernelInfo* @ParseKernelName(i8* %kernel_string) #0 !dbg !1360 {
entry:
  %retval = alloca %struct.KernelInfo*, align 8
  %kernel_string.addr = alloca i8*, align 8
  %token = alloca [4096 x i8], align 16
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %args = alloca %struct._GeometryInfo, align 8
  %kernel = alloca %struct.KernelInfo*, align 8
  %flags = alloca i32, align 4
  %type = alloca i64, align 8
  store i8* %kernel_string, i8** %kernel_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %kernel_string.addr, metadata !1361, metadata !DIExpression()), !dbg !1362
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !1363, metadata !DIExpression()), !dbg !1364
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1365, metadata !DIExpression()), !dbg !1366
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1367, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %args, metadata !1369, metadata !DIExpression()), !dbg !1370
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel, metadata !1371, metadata !DIExpression()), !dbg !1372
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1373, metadata !DIExpression()), !dbg !1374
  call void @llvm.dbg.declare(metadata i64* %type, metadata !1375, metadata !DIExpression()), !dbg !1376
  %0 = load i8*, i8** %kernel_string.addr, align 8, !dbg !1377
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1378
  call void @GetMagickToken(i8* %0, i8** %p, i8* %arraydecay), !dbg !1379
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1380
  %call = call i64 @ParseCommandOption(i32 34, i32 0, i8* %arraydecay1), !dbg !1381
  store i64 %call, i64* %type, align 8, !dbg !1382
  %1 = load i64, i64* %type, align 8, !dbg !1383
  %cmp = icmp slt i64 %1, 0, !dbg !1385
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1386

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %type, align 8, !dbg !1387
  %cmp2 = icmp eq i64 %2, 36, !dbg !1388
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1389

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.KernelInfo* null, %struct.KernelInfo** %retval, align 8, !dbg !1390
  br label %return, !dbg !1390

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !1391

while.cond:                                       ; preds = %while.body, %if.end
  %call3 = call i16** @__ctype_b_loc() #10, !dbg !1392
  %3 = load i16*, i16** %call3, align 8, !dbg !1392
  %4 = load i8*, i8** %p, align 8, !dbg !1392
  %5 = load i8, i8* %4, align 1, !dbg !1392
  %conv = zext i8 %5 to i32, !dbg !1392
  %idxprom = sext i32 %conv to i64, !dbg !1392
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !1392
  %6 = load i16, i16* %arrayidx, align 2, !dbg !1392
  %conv4 = zext i16 %6 to i32, !dbg !1392
  %and = and i32 %conv4, 8192, !dbg !1392
  %cmp5 = icmp ne i32 %and, 0, !dbg !1393
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7, !dbg !1394

lor.lhs.false7:                                   ; preds = %while.cond
  %7 = load i8*, i8** %p, align 8, !dbg !1395
  %8 = load i8, i8* %7, align 1, !dbg !1396
  %conv8 = sext i8 %8 to i32, !dbg !1396
  %cmp9 = icmp eq i32 %conv8, 44, !dbg !1397
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false11, !dbg !1398

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %9 = load i8*, i8** %p, align 8, !dbg !1399
  %10 = load i8, i8* %9, align 1, !dbg !1400
  %conv12 = sext i8 %10 to i32, !dbg !1400
  %cmp13 = icmp eq i32 %conv12, 58, !dbg !1401
  br i1 %cmp13, label %land.lhs.true, label %land.end, !dbg !1402

land.lhs.true:                                    ; preds = %lor.lhs.false11, %lor.lhs.false7, %while.cond
  %11 = load i8*, i8** %p, align 8, !dbg !1403
  %12 = load i8, i8* %11, align 1, !dbg !1404
  %conv15 = sext i8 %12 to i32, !dbg !1404
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !1405
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !1406

land.rhs:                                         ; preds = %land.lhs.true
  %13 = load i8*, i8** %p, align 8, !dbg !1407
  %14 = load i8, i8* %13, align 1, !dbg !1408
  %conv18 = sext i8 %14 to i32, !dbg !1408
  %cmp19 = icmp ne i32 %conv18, 59, !dbg !1409
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false11
  %15 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false11 ], [ %cmp19, %land.rhs ], !dbg !1410
  br i1 %15, label %while.body, label %while.end, !dbg !1391

while.body:                                       ; preds = %land.end
  %16 = load i8*, i8** %p, align 8, !dbg !1411
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1411
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1411
  br label %while.cond, !dbg !1391, !llvm.loop !1412

while.end:                                        ; preds = %land.end
  %17 = load i8*, i8** %p, align 8, !dbg !1413
  %call21 = call i8* @strchr(i8* %17, i32 59) #11, !dbg !1414
  store i8* %call21, i8** %end, align 8, !dbg !1415
  %18 = load i8*, i8** %end, align 8, !dbg !1416
  %cmp22 = icmp eq i8* %18, null, !dbg !1418
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !1419

if.then24:                                        ; preds = %while.end
  %19 = load i8*, i8** %p, align 8, !dbg !1420
  %call25 = call i8* @strchr(i8* %19, i32 0) #11, !dbg !1421
  store i8* %call25, i8** %end, align 8, !dbg !1422
  br label %if.end26, !dbg !1423

if.end26:                                         ; preds = %if.then24, %while.end
  %arraydecay27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1424
  %20 = load i8*, i8** %p, align 8, !dbg !1425
  %21 = load i8*, i8** %end, align 8, !dbg !1426
  %22 = load i8*, i8** %p, align 8, !dbg !1427
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !1428
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !1428
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay27, i8* align 1 %20, i64 %sub.ptr.sub, i1 false), !dbg !1424
  %23 = load i8*, i8** %end, align 8, !dbg !1429
  %24 = load i8*, i8** %p, align 8, !dbg !1430
  %sub.ptr.lhs.cast28 = ptrtoint i8* %23 to i64, !dbg !1431
  %sub.ptr.rhs.cast29 = ptrtoint i8* %24 to i64, !dbg !1431
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !1431
  %arrayidx31 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 %sub.ptr.sub30, !dbg !1432
  store i8 0, i8* %arrayidx31, align 1, !dbg !1433
  call void @SetGeometryInfo(%struct._GeometryInfo* %args), !dbg !1434
  %arraydecay32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1435
  %call33 = call i32 @ParseGeometry(i8* %arraydecay32, %struct._GeometryInfo* %args), !dbg !1436
  store i32 %call33, i32* %flags, align 4, !dbg !1437
  %25 = load i64, i64* %type, align 8, !dbg !1438
  switch i64 %25, label %sw.default [
    i64 1, label %sw.bb
    i64 15, label %sw.bb39
    i64 14, label %sw.bb39
    i64 17, label %sw.bb39
    i64 18, label %sw.bb39
    i64 19, label %sw.bb39
    i64 20, label %sw.bb39
    i64 21, label %sw.bb45
    i64 16, label %sw.bb51
    i64 32, label %sw.bb91
    i64 33, label %sw.bb91
    i64 34, label %sw.bb91
    i64 35, label %sw.bb91
  ], !dbg !1439

sw.bb:                                            ; preds = %if.end26
  %26 = load i32, i32* %flags, align 4, !dbg !1440
  %and34 = and i32 %26, 4, !dbg !1443
  %cmp35 = icmp eq i32 %and34, 0, !dbg !1444
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !1445

if.then37:                                        ; preds = %sw.bb
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1446
  store double 1.000000e+00, double* %rho, align 8, !dbg !1447
  br label %if.end38, !dbg !1448

if.end38:                                         ; preds = %if.then37, %sw.bb
  br label %sw.epilog, !dbg !1449

sw.bb39:                                          ; preds = %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26
  %27 = load i32, i32* %flags, align 4, !dbg !1450
  %and40 = and i32 %27, 8, !dbg !1452
  %cmp41 = icmp eq i32 %and40, 0, !dbg !1453
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !1454

if.then43:                                        ; preds = %sw.bb39
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1455
  store double 1.000000e+00, double* %sigma, align 8, !dbg !1456
  br label %if.end44, !dbg !1457

if.end44:                                         ; preds = %if.then43, %sw.bb39
  br label %sw.epilog, !dbg !1458

sw.bb45:                                          ; preds = %if.end26
  %28 = load i32, i32* %flags, align 4, !dbg !1459
  %and46 = and i32 %28, 1, !dbg !1461
  %cmp47 = icmp eq i32 %and46, 0, !dbg !1462
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !1463

if.then49:                                        ; preds = %sw.bb45
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 2, !dbg !1464
  store double 1.000000e+00, double* %xi, align 8, !dbg !1465
  br label %if.end50, !dbg !1466

if.end50:                                         ; preds = %if.then49, %sw.bb45
  br label %sw.epilog, !dbg !1467

sw.bb51:                                          ; preds = %if.end26
  %29 = load i32, i32* %flags, align 4, !dbg !1468
  %and52 = and i32 %29, 4, !dbg !1470
  %cmp53 = icmp eq i32 %and52, 0, !dbg !1471
  br i1 %cmp53, label %if.then55, label %if.end58, !dbg !1472

if.then55:                                        ; preds = %sw.bb51
  %sigma56 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1473
  %30 = load double, double* %sigma56, align 8, !dbg !1473
  %rho57 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1474
  store double %30, double* %rho57, align 8, !dbg !1475
  br label %if.end58, !dbg !1476

if.end58:                                         ; preds = %if.then55, %sw.bb51
  %rho59 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1477
  %31 = load double, double* %rho59, align 8, !dbg !1477
  %cmp60 = fcmp olt double %31, 1.000000e+00, !dbg !1479
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !1480

if.then62:                                        ; preds = %if.end58
  %rho63 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1481
  store double 3.000000e+00, double* %rho63, align 8, !dbg !1482
  br label %if.end64, !dbg !1483

if.end64:                                         ; preds = %if.then62, %if.end58
  %sigma65 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1484
  %32 = load double, double* %sigma65, align 8, !dbg !1484
  %cmp66 = fcmp olt double %32, 1.000000e+00, !dbg !1486
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !1487

if.then68:                                        ; preds = %if.end64
  %rho69 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1488
  %33 = load double, double* %rho69, align 8, !dbg !1488
  %sigma70 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1489
  store double %33, double* %sigma70, align 8, !dbg !1490
  br label %if.end71, !dbg !1491

if.end71:                                         ; preds = %if.then68, %if.end64
  %34 = load i32, i32* %flags, align 4, !dbg !1492
  %and72 = and i32 %34, 1, !dbg !1494
  %cmp73 = icmp eq i32 %and72, 0, !dbg !1495
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !1496

if.then75:                                        ; preds = %if.end71
  %rho76 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !1497
  %35 = load double, double* %rho76, align 8, !dbg !1497
  %conv77 = fptosi double %35 to i64, !dbg !1498
  %sub = sub nsw i64 %conv77, 1, !dbg !1499
  %div = sdiv i64 %sub, 2, !dbg !1500
  %conv78 = sitofp i64 %div to double, !dbg !1501
  %xi79 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 2, !dbg !1502
  store double %conv78, double* %xi79, align 8, !dbg !1503
  br label %if.end80, !dbg !1504

if.end80:                                         ; preds = %if.then75, %if.end71
  %36 = load i32, i32* %flags, align 4, !dbg !1505
  %and81 = and i32 %36, 2, !dbg !1507
  %cmp82 = icmp eq i32 %and81, 0, !dbg !1508
  br i1 %cmp82, label %if.then84, label %if.end90, !dbg !1509

if.then84:                                        ; preds = %if.end80
  %sigma85 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1510
  %37 = load double, double* %sigma85, align 8, !dbg !1510
  %conv86 = fptosi double %37 to i64, !dbg !1511
  %sub87 = sub nsw i64 %conv86, 1, !dbg !1512
  %div88 = sdiv i64 %sub87, 2, !dbg !1513
  %conv89 = sitofp i64 %div88 to double, !dbg !1514
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 3, !dbg !1515
  store double %conv89, double* %psi, align 8, !dbg !1516
  br label %if.end90, !dbg !1517

if.end90:                                         ; preds = %if.then84, %if.end80
  br label %sw.epilog, !dbg !1518

sw.bb91:                                          ; preds = %if.end26, %if.end26, %if.end26, %if.end26
  %38 = load i32, i32* %flags, align 4, !dbg !1519
  %and92 = and i32 %38, 8, !dbg !1521
  %cmp93 = icmp eq i32 %and92, 0, !dbg !1522
  br i1 %cmp93, label %if.then95, label %if.else, !dbg !1523

if.then95:                                        ; preds = %sw.bb91
  %sigma96 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1524
  store double 1.000000e+02, double* %sigma96, align 8, !dbg !1525
  br label %if.end112, !dbg !1526

if.else:                                          ; preds = %sw.bb91
  %39 = load i32, i32* %flags, align 4, !dbg !1527
  %and97 = and i32 %39, 8192, !dbg !1529
  %cmp98 = icmp ne i32 %and97, 0, !dbg !1530
  br i1 %cmp98, label %if.then100, label %if.else104, !dbg !1531

if.then100:                                       ; preds = %if.else
  %sigma101 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1532
  %40 = load double, double* %sigma101, align 8, !dbg !1532
  %add = fadd double %40, 1.000000e+00, !dbg !1533
  %div102 = fdiv double 6.553500e+04, %add, !dbg !1534
  %sigma103 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1535
  store double %div102, double* %sigma103, align 8, !dbg !1536
  br label %if.end111, !dbg !1537

if.else104:                                       ; preds = %if.else
  %41 = load i32, i32* %flags, align 4, !dbg !1538
  %and105 = and i32 %41, 4096, !dbg !1540
  %cmp106 = icmp ne i32 %and105, 0, !dbg !1541
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !1542

if.then108:                                       ; preds = %if.else104
  %sigma109 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !1543
  %42 = load double, double* %sigma109, align 8, !dbg !1544
  %mul = fmul double %42, 6.553500e+02, !dbg !1544
  store double %mul, double* %sigma109, align 8, !dbg !1544
  br label %if.end110, !dbg !1545

if.end110:                                        ; preds = %if.then108, %if.else104
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.then100
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then95
  br label %sw.epilog, !dbg !1546

sw.default:                                       ; preds = %if.end26
  br label %sw.epilog, !dbg !1547

sw.epilog:                                        ; preds = %sw.default, %if.end112, %if.end90, %if.end50, %if.end44, %if.end38
  %43 = load i64, i64* %type, align 8, !dbg !1548
  %conv113 = trunc i64 %43 to i32, !dbg !1549
  %call114 = call %struct.KernelInfo* @AcquireKernelBuiltIn(i32 %conv113, %struct._GeometryInfo* %args), !dbg !1550
  store %struct.KernelInfo* %call114, %struct.KernelInfo** %kernel, align 8, !dbg !1551
  %44 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1552
  %cmp115 = icmp eq %struct.KernelInfo* %44, null, !dbg !1554
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !1555

if.then117:                                       ; preds = %sw.epilog
  %45 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1556
  store %struct.KernelInfo* %45, %struct.KernelInfo** %retval, align 8, !dbg !1557
  br label %return, !dbg !1557

if.end118:                                        ; preds = %sw.epilog
  %46 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1558
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %46, i32 0, i32 11, !dbg !1560
  %47 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !1560
  %cmp119 = icmp eq %struct.KernelInfo* %47, null, !dbg !1561
  br i1 %cmp119, label %if.then121, label %if.end139, !dbg !1562

if.then121:                                       ; preds = %if.end118
  %48 = load i32, i32* %flags, align 4, !dbg !1563
  %and122 = and i32 %48, 131072, !dbg !1566
  %cmp123 = icmp ne i32 %and122, 0, !dbg !1567
  br i1 %cmp123, label %if.then125, label %if.else126, !dbg !1568

if.then125:                                       ; preds = %if.then121
  %49 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1569
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %49, double 4.500000e+01), !dbg !1570
  br label %if.end138, !dbg !1570

if.else126:                                       ; preds = %if.then121
  %50 = load i32, i32* %flags, align 4, !dbg !1571
  %and127 = and i32 %50, 32768, !dbg !1573
  %cmp128 = icmp ne i32 %and127, 0, !dbg !1574
  br i1 %cmp128, label %if.then130, label %if.else131, !dbg !1575

if.then130:                                       ; preds = %if.else126
  %51 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1576
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %51, double 9.000000e+01), !dbg !1577
  br label %if.end137, !dbg !1577

if.else131:                                       ; preds = %if.else126
  %52 = load i32, i32* %flags, align 4, !dbg !1578
  %and132 = and i32 %52, 16384, !dbg !1580
  %cmp133 = icmp ne i32 %and132, 0, !dbg !1581
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !1582

if.then135:                                       ; preds = %if.else131
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1583
  call void @ExpandMirrorKernelInfo(%struct.KernelInfo* %53), !dbg !1584
  br label %if.end136, !dbg !1584

if.end136:                                        ; preds = %if.then135, %if.else131
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then130
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then125
  br label %if.end139, !dbg !1585

if.end139:                                        ; preds = %if.end138, %if.end118
  %54 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1586
  store %struct.KernelInfo* %54, %struct.KernelInfo** %retval, align 8, !dbg !1587
  br label %return, !dbg !1587

return:                                           ; preds = %if.end139, %if.then117, %if.then
  %55 = load %struct.KernelInfo*, %struct.KernelInfo** %retval, align 8, !dbg !1588
  ret %struct.KernelInfo* %55, !dbg !1588
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %kernel) #0 !dbg !1589 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !1592, metadata !DIExpression()), !dbg !1593
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1594
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !1596
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !1596
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !1597
  br i1 %cmp, label %if.then, label %if.end, !dbg !1598

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1599
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !1600
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !1600
  %call = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %3), !dbg !1601
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1602
  %next2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %4, i32 0, i32 11, !dbg !1603
  store %struct.KernelInfo* %call, %struct.KernelInfo** %next2, align 8, !dbg !1604
  br label %if.end, !dbg !1602

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1605
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %5, i32 0, i32 5, !dbg !1606
  %6 = load double*, double** %values, align 8, !dbg !1606
  %7 = bitcast double* %6 to i8*, !dbg !1605
  %call3 = call i8* @RelinquishAlignedMemory(i8* %7), !dbg !1607
  %8 = bitcast i8* %call3 to double*, !dbg !1608
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1609
  %values4 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 5, !dbg !1610
  store double* %8, double** %values4, align 8, !dbg !1611
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1612
  %11 = bitcast %struct.KernelInfo* %10 to i8*, !dbg !1612
  %call5 = call i8* @RelinquishMagickMemory(i8* %11), !dbg !1613
  %12 = bitcast i8* %call5 to %struct.KernelInfo*, !dbg !1614
  store %struct.KernelInfo* %12, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1615
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1616
  ret %struct.KernelInfo* %13, !dbg !1617
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %kernel) #0 !dbg !1618 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !1619, metadata !DIExpression()), !dbg !1620
  br label %while.cond, !dbg !1621

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1622
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !1623
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !1623
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !1624
  br i1 %cmp, label %while.body, label %while.end, !dbg !1621

while.body:                                       ; preds = %while.cond
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1625
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !1626
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !1626
  store %struct.KernelInfo* %3, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1627
  br label %while.cond, !dbg !1621, !llvm.loop !1628

while.end:                                        ; preds = %while.cond
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !1629
  ret %struct.KernelInfo* %4, !dbg !1630
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KernelInfo* @AcquireKernelBuiltIn(i32 %type, %struct._GeometryInfo* %args) #0 !dbg !1631 {
entry:
  %retval = alloca %struct.KernelInfo*, align 8
  %type.addr = alloca i32, align 4
  %args.addr = alloca %struct._GeometryInfo*, align 8
  %kernel = alloca %struct.KernelInfo*, align 8
  %i = alloca i64, align 8
  %u = alloca i64, align 8
  %v = alloca i64, align 8
  %nan = alloca double, align 8
  %sigma = alloca double, align 8
  %sigma2 = alloca double, align 8
  %A = alloca double, align 8
  %B = alloca double, align 8
  %R = alloca double, align 8
  %sigma226 = alloca double, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %sigma310 = alloca double, align 8
  %A312 = alloca double, align 8
  %order_f = alloca i64, align 8
  %alpha446 = alloca i64, align 8
  %scale = alloca double, align 8
  %limit = alloca i64, align 8
  %limit1 = alloca i64, align 8
  %limit2 = alloca i64, align 8
  %scale1150 = alloca i64, align 8
  %radius = alloca i64, align 8
  %new_kernel = alloca %struct.KernelInfo*, align 8
  %new_kernel1359 = alloca %struct.KernelInfo*, align 8
  %new_kernel1451 = alloca %struct.KernelInfo*, align 8
  %r1 = alloca double, align 8
  %r2 = alloca double, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !1637, metadata !DIExpression()), !dbg !1638
  store %struct._GeometryInfo* %args, %struct._GeometryInfo** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo** %args.addr, metadata !1639, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel, metadata !1641, metadata !DIExpression()), !dbg !1642
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1643, metadata !DIExpression()), !dbg !1644
  call void @llvm.dbg.declare(metadata i64* %u, metadata !1645, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.declare(metadata i64* %v, metadata !1647, metadata !DIExpression()), !dbg !1648
  call void @llvm.dbg.declare(metadata double* %nan, metadata !1649, metadata !DIExpression()), !dbg !1650
  %call = call double @sqrt(double -1.000000e+00) #12, !dbg !1651
  store double %call, double* %nan, align 8, !dbg !1650
  store %struct.KernelInfo* null, %struct.KernelInfo** %kernel, align 8, !dbg !1652
  %0 = load i32, i32* %type.addr, align 4, !dbg !1653
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 36, label %sw.bb
    i32 7, label %sw.bb1
    i32 8, label %sw.bb1
    i32 10, label %sw.bb1
    i32 11, label %sw.bb1
    i32 12, label %sw.bb1
    i32 13, label %sw.bb1
    i32 9, label %sw.bb1
    i32 23, label %sw.bb1
    i32 24, label %sw.bb1
    i32 25, label %sw.bb1
    i32 26, label %sw.bb1
    i32 27, label %sw.bb1
    i32 28, label %sw.bb1
    i32 29, label %sw.bb1
    i32 31, label %sw.bb1
    i32 30, label %sw.bb1
  ], !dbg !1654

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !1655

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !1657

sw.default:                                       ; preds = %entry
  %call2 = call i8* @AcquireMagickMemory(i64 104) #13, !dbg !1658
  %1 = bitcast i8* %call2 to %struct.KernelInfo*, !dbg !1659
  store %struct.KernelInfo* %1, %struct.KernelInfo** %kernel, align 8, !dbg !1660
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1661
  %cmp = icmp eq %struct.KernelInfo* %2, null, !dbg !1663
  br i1 %cmp, label %if.then, label %if.end, !dbg !1664

if.then:                                          ; preds = %sw.default
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1665
  store %struct.KernelInfo* %3, %struct.KernelInfo** %retval, align 8, !dbg !1666
  br label %return, !dbg !1666

if.end:                                           ; preds = %sw.default
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1667
  %5 = bitcast %struct.KernelInfo* %4 to i8*, !dbg !1667
  %call3 = call i8* @ResetMagickMemory(i8* %5, i32 0, i64 104), !dbg !1668
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1669
  %angle = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 10, !dbg !1670
  store double 0.000000e+00, double* %angle, align 8, !dbg !1671
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1672
  %maximum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 7, !dbg !1673
  store double 0.000000e+00, double* %maximum, align 8, !dbg !1674
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1675
  %minimum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 6, !dbg !1676
  store double 0.000000e+00, double* %minimum, align 8, !dbg !1677
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1678
  %positive_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 9, !dbg !1679
  store double 0.000000e+00, double* %positive_range, align 8, !dbg !1680
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1681
  %negative_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 8, !dbg !1682
  store double 0.000000e+00, double* %negative_range, align 8, !dbg !1683
  %11 = load i32, i32* %type.addr, align 4, !dbg !1684
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1685
  %type4 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 0, !dbg !1686
  store i32 %11, i32* %type4, align 8, !dbg !1687
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1688
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %13, i32 0, i32 11, !dbg !1689
  store %struct.KernelInfo* null, %struct.KernelInfo** %next, align 8, !dbg !1690
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1691
  %signature = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %14, i32 0, i32 12, !dbg !1692
  store i64 2880220587, i64* %signature, align 8, !dbg !1693
  br label %sw.epilog, !dbg !1694

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  %15 = load i32, i32* %type.addr, align 4, !dbg !1695
  switch i32 %15, label %sw.default1827 [
    i32 1, label %sw.bb5
    i32 2, label %sw.bb14
    i32 3, label %sw.bb14
    i32 4, label %sw.bb14
    i32 5, label %sw.bb225
    i32 6, label %sw.bb309
    i32 37, label %sw.bb407
    i32 7, label %sw.bb489
    i32 8, label %sw.bb515
    i32 10, label %sw.bb523
    i32 11, label %sw.bb531
    i32 12, label %sw.bb539
    i32 13, label %sw.bb547
    i32 9, label %sw.bb555
    i32 14, label %sw.bb688
    i32 15, label %sw.bb759
    i32 16, label %sw.bb759
    i32 17, label %sw.bb856
    i32 18, label %sw.bb930
    i32 19, label %sw.bb1004
    i32 20, label %sw.bb1074
    i32 21, label %sw.bb1149
    i32 22, label %sw.bb1149
    i32 23, label %sw.bb1269
    i32 24, label %sw.bb1276
    i32 25, label %sw.bb1283
    i32 26, label %sw.bb1314
    i32 27, label %sw.bb1335
    i32 28, label %sw.bb1358
    i32 29, label %sw.bb1450
    i32 31, label %sw.bb1467
    i32 30, label %sw.bb1506
    i32 32, label %sw.bb1561
    i32 33, label %sw.bb1625
    i32 34, label %sw.bb1690
    i32 35, label %sw.bb1761
  ], !dbg !1696

sw.bb5:                                           ; preds = %sw.epilog
  %16 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1697
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %16, i32 0, i32 1, !dbg !1700
  store i64 1, i64* %width, align 8, !dbg !1701
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1702
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 2, !dbg !1703
  store i64 1, i64* %height, align 8, !dbg !1704
  %18 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1705
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %18, i32 0, i32 4, !dbg !1706
  store i64 0, i64* %y, align 8, !dbg !1707
  %19 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1708
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %19, i32 0, i32 3, !dbg !1709
  store i64 0, i64* %x, align 8, !dbg !1710
  %call6 = call i8* @AcquireAlignedMemory(i64 1, i64 8) #14, !dbg !1711
  %20 = bitcast i8* %call6 to double*, !dbg !1712
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1713
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 5, !dbg !1714
  store double* %20, double** %values, align 8, !dbg !1715
  %22 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1716
  %values7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %22, i32 0, i32 5, !dbg !1718
  %23 = load double*, double** %values7, align 8, !dbg !1718
  %cmp8 = icmp eq double* %23, null, !dbg !1719
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !1720

if.then9:                                         ; preds = %sw.bb5
  %24 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1721
  %call10 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %24), !dbg !1722
  store %struct.KernelInfo* %call10, %struct.KernelInfo** %retval, align 8, !dbg !1723
  br label %return, !dbg !1723

if.end11:                                         ; preds = %sw.bb5
  %25 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1724
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %25, i32 0, i32 0, !dbg !1725
  %26 = load double, double* %rho, align 8, !dbg !1725
  %27 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1726
  %values12 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %27, i32 0, i32 5, !dbg !1727
  %28 = load double*, double** %values12, align 8, !dbg !1727
  %arrayidx = getelementptr inbounds double, double* %28, i64 0, !dbg !1726
  store double %26, double* %arrayidx, align 8, !dbg !1728
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1729
  %maximum13 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %29, i32 0, i32 7, !dbg !1730
  store double %26, double* %maximum13, align 8, !dbg !1731
  br label %sw.epilog1834, !dbg !1732

sw.bb14:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata double* %sigma, metadata !1733, metadata !DIExpression()), !dbg !1735
  %30 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1736
  %sigma15 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %30, i32 0, i32 1, !dbg !1737
  %31 = load double, double* %sigma15, align 8, !dbg !1737
  %32 = call double @llvm.fabs.f64(double %31), !dbg !1738
  store double %32, double* %sigma, align 8, !dbg !1735
  call void @llvm.dbg.declare(metadata double* %sigma2, metadata !1739, metadata !DIExpression()), !dbg !1740
  %33 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1741
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %33, i32 0, i32 2, !dbg !1742
  %34 = load double, double* %xi, align 8, !dbg !1742
  %35 = call double @llvm.fabs.f64(double %34), !dbg !1743
  store double %35, double* %sigma2, align 8, !dbg !1740
  call void @llvm.dbg.declare(metadata double* %A, metadata !1744, metadata !DIExpression()), !dbg !1745
  call void @llvm.dbg.declare(metadata double* %B, metadata !1746, metadata !DIExpression()), !dbg !1747
  call void @llvm.dbg.declare(metadata double* %R, metadata !1748, metadata !DIExpression()), !dbg !1749
  %36 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1750
  %rho16 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %36, i32 0, i32 0, !dbg !1752
  %37 = load double, double* %rho16, align 8, !dbg !1752
  %cmp17 = fcmp oge double %37, 1.000000e+00, !dbg !1753
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !1754

if.then18:                                        ; preds = %sw.bb14
  %38 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1755
  %rho19 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %38, i32 0, i32 0, !dbg !1756
  %39 = load double, double* %rho19, align 8, !dbg !1756
  %conv = fptoui double %39 to i64, !dbg !1757
  %mul = mul i64 %conv, 2, !dbg !1758
  %add = add i64 %mul, 1, !dbg !1759
  %40 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1760
  %width20 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %40, i32 0, i32 1, !dbg !1761
  store i64 %add, i64* %width20, align 8, !dbg !1762
  br label %if.end34, !dbg !1760

if.else:                                          ; preds = %sw.bb14
  %41 = load i32, i32* %type.addr, align 4, !dbg !1763
  %cmp21 = icmp ne i32 %41, 3, !dbg !1765
  br i1 %cmp21, label %if.then25, label %lor.lhs.false, !dbg !1766

lor.lhs.false:                                    ; preds = %if.else
  %42 = load double, double* %sigma, align 8, !dbg !1767
  %43 = load double, double* %sigma2, align 8, !dbg !1768
  %cmp23 = fcmp oge double %42, %43, !dbg !1769
  br i1 %cmp23, label %if.then25, label %if.else29, !dbg !1770

if.then25:                                        ; preds = %lor.lhs.false, %if.else
  %44 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1771
  %rho26 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %44, i32 0, i32 0, !dbg !1772
  %45 = load double, double* %rho26, align 8, !dbg !1772
  %46 = load double, double* %sigma, align 8, !dbg !1773
  %call27 = call i64 @GetOptimalKernelWidth2D(double %45, double %46), !dbg !1774
  %47 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1775
  %width28 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %47, i32 0, i32 1, !dbg !1776
  store i64 %call27, i64* %width28, align 8, !dbg !1777
  br label %if.end33, !dbg !1775

if.else29:                                        ; preds = %lor.lhs.false
  %48 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !1778
  %rho30 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %48, i32 0, i32 0, !dbg !1779
  %49 = load double, double* %rho30, align 8, !dbg !1779
  %50 = load double, double* %sigma2, align 8, !dbg !1780
  %call31 = call i64 @GetOptimalKernelWidth2D(double %49, double %50), !dbg !1781
  %51 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1782
  %width32 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %51, i32 0, i32 1, !dbg !1783
  store i64 %call31, i64* %width32, align 8, !dbg !1784
  br label %if.end33

if.end33:                                         ; preds = %if.else29, %if.then25
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then18
  %52 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1785
  %width35 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %52, i32 0, i32 1, !dbg !1786
  %53 = load i64, i64* %width35, align 8, !dbg !1786
  %54 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1787
  %height36 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %54, i32 0, i32 2, !dbg !1788
  store i64 %53, i64* %height36, align 8, !dbg !1789
  %55 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1790
  %width37 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %55, i32 0, i32 1, !dbg !1791
  %56 = load i64, i64* %width37, align 8, !dbg !1791
  %sub = sub i64 %56, 1, !dbg !1792
  %div = sdiv i64 %sub, 2, !dbg !1793
  %57 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1794
  %y38 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %57, i32 0, i32 4, !dbg !1795
  store i64 %div, i64* %y38, align 8, !dbg !1796
  %58 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1797
  %x39 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %58, i32 0, i32 3, !dbg !1798
  store i64 %div, i64* %x39, align 8, !dbg !1799
  %59 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1800
  %width40 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %59, i32 0, i32 1, !dbg !1800
  %60 = load i64, i64* %width40, align 8, !dbg !1800
  %61 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1800
  %height41 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %61, i32 0, i32 2, !dbg !1800
  %62 = load i64, i64* %height41, align 8, !dbg !1800
  %mul42 = mul i64 %62, 8, !dbg !1800
  %call43 = call i8* @AcquireAlignedMemory(i64 %60, i64 %mul42) #14, !dbg !1800
  %63 = bitcast i8* %call43 to double*, !dbg !1801
  %64 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1802
  %values44 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %64, i32 0, i32 5, !dbg !1803
  store double* %63, double** %values44, align 8, !dbg !1804
  %65 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1805
  %values45 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %65, i32 0, i32 5, !dbg !1807
  %66 = load double*, double** %values45, align 8, !dbg !1807
  %cmp46 = icmp eq double* %66, null, !dbg !1808
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !1809

if.then48:                                        ; preds = %if.end34
  %67 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1810
  %call49 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %67), !dbg !1811
  store %struct.KernelInfo* %call49, %struct.KernelInfo** %retval, align 8, !dbg !1812
  br label %return, !dbg !1812

if.end50:                                         ; preds = %if.end34
  %68 = load i32, i32* %type.addr, align 4, !dbg !1813
  %cmp51 = icmp eq i32 %68, 2, !dbg !1815
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !1816

lor.lhs.false53:                                  ; preds = %if.end50
  %69 = load i32, i32* %type.addr, align 4, !dbg !1817
  %cmp54 = icmp eq i32 %69, 3, !dbg !1818
  br i1 %cmp54, label %if.then56, label %if.end106, !dbg !1819

if.then56:                                        ; preds = %lor.lhs.false53, %if.end50
  %70 = load double, double* %sigma, align 8, !dbg !1820
  %cmp57 = fcmp ogt double %70, 1.000000e-15, !dbg !1823
  br i1 %cmp57, label %if.then59, label %if.else91, !dbg !1824

if.then59:                                        ; preds = %if.then56
  %71 = load double, double* %sigma, align 8, !dbg !1825
  %mul60 = fmul double 2.000000e+00, %71, !dbg !1827
  %72 = load double, double* %sigma, align 8, !dbg !1828
  %mul61 = fmul double %mul60, %72, !dbg !1829
  %div62 = fdiv double 1.000000e+00, %mul61, !dbg !1830
  store double %div62, double* %A, align 8, !dbg !1831
  %73 = load double, double* %sigma, align 8, !dbg !1832
  %mul63 = fmul double 0x401921FB54442D18, %73, !dbg !1833
  %74 = load double, double* %sigma, align 8, !dbg !1834
  %mul64 = fmul double %mul63, %74, !dbg !1835
  %div65 = fdiv double 1.000000e+00, %mul64, !dbg !1836
  store double %div65, double* %B, align 8, !dbg !1837
  store i64 0, i64* %i, align 8, !dbg !1838
  %75 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1840
  %y66 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %75, i32 0, i32 4, !dbg !1841
  %76 = load i64, i64* %y66, align 8, !dbg !1841
  %sub67 = sub nsw i64 0, %76, !dbg !1842
  store i64 %sub67, i64* %v, align 8, !dbg !1843
  br label %for.cond, !dbg !1844

for.cond:                                         ; preds = %for.inc88, %if.then59
  %77 = load i64, i64* %v, align 8, !dbg !1845
  %78 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1847
  %y68 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %78, i32 0, i32 4, !dbg !1848
  %79 = load i64, i64* %y68, align 8, !dbg !1848
  %cmp69 = icmp sle i64 %77, %79, !dbg !1849
  br i1 %cmp69, label %for.body, label %for.end90, !dbg !1850

for.body:                                         ; preds = %for.cond
  %80 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1851
  %x71 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %80, i32 0, i32 3, !dbg !1853
  %81 = load i64, i64* %x71, align 8, !dbg !1853
  %sub72 = sub nsw i64 0, %81, !dbg !1854
  store i64 %sub72, i64* %u, align 8, !dbg !1855
  br label %for.cond73, !dbg !1856

for.cond73:                                       ; preds = %for.inc, %for.body
  %82 = load i64, i64* %u, align 8, !dbg !1857
  %83 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1859
  %x74 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %83, i32 0, i32 3, !dbg !1860
  %84 = load i64, i64* %x74, align 8, !dbg !1860
  %cmp75 = icmp sle i64 %82, %84, !dbg !1861
  br i1 %cmp75, label %for.body77, label %for.end, !dbg !1862

for.body77:                                       ; preds = %for.cond73
  %85 = load i64, i64* %u, align 8, !dbg !1863
  %86 = load i64, i64* %u, align 8, !dbg !1864
  %mul78 = mul nsw i64 %85, %86, !dbg !1865
  %87 = load i64, i64* %v, align 8, !dbg !1866
  %88 = load i64, i64* %v, align 8, !dbg !1867
  %mul79 = mul nsw i64 %87, %88, !dbg !1868
  %add80 = add nsw i64 %mul78, %mul79, !dbg !1869
  %conv81 = sitofp i64 %add80 to double, !dbg !1870
  %fneg = fneg double %conv81, !dbg !1871
  %89 = load double, double* %A, align 8, !dbg !1872
  %mul82 = fmul double %fneg, %89, !dbg !1873
  %call83 = call double @exp(double %mul82) #12, !dbg !1874
  %90 = load double, double* %B, align 8, !dbg !1875
  %mul84 = fmul double %call83, %90, !dbg !1876
  %91 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1877
  %values85 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %91, i32 0, i32 5, !dbg !1878
  %92 = load double*, double** %values85, align 8, !dbg !1878
  %93 = load i64, i64* %i, align 8, !dbg !1879
  %arrayidx86 = getelementptr inbounds double, double* %92, i64 %93, !dbg !1877
  store double %mul84, double* %arrayidx86, align 8, !dbg !1880
  br label %for.inc, !dbg !1877

for.inc:                                          ; preds = %for.body77
  %94 = load i64, i64* %u, align 8, !dbg !1881
  %inc = add nsw i64 %94, 1, !dbg !1881
  store i64 %inc, i64* %u, align 8, !dbg !1881
  %95 = load i64, i64* %i, align 8, !dbg !1882
  %inc87 = add nsw i64 %95, 1, !dbg !1882
  store i64 %inc87, i64* %i, align 8, !dbg !1882
  br label %for.cond73, !dbg !1883, !llvm.loop !1884

for.end:                                          ; preds = %for.cond73
  br label %for.inc88, !dbg !1885

for.inc88:                                        ; preds = %for.end
  %96 = load i64, i64* %v, align 8, !dbg !1886
  %inc89 = add nsw i64 %96, 1, !dbg !1886
  store i64 %inc89, i64* %v, align 8, !dbg !1886
  br label %for.cond, !dbg !1887, !llvm.loop !1888

for.end90:                                        ; preds = %for.cond
  br label %if.end105, !dbg !1890

if.else91:                                        ; preds = %if.then56
  %97 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1891
  %values92 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %97, i32 0, i32 5, !dbg !1893
  %98 = load double*, double** %values92, align 8, !dbg !1893
  %99 = bitcast double* %98 to i8*, !dbg !1891
  %100 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1894
  %width93 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %100, i32 0, i32 1, !dbg !1895
  %101 = load i64, i64* %width93, align 8, !dbg !1895
  %102 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1896
  %height94 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %102, i32 0, i32 2, !dbg !1897
  %103 = load i64, i64* %height94, align 8, !dbg !1897
  %mul95 = mul i64 %101, %103, !dbg !1898
  %mul96 = mul i64 %mul95, 8, !dbg !1899
  %call97 = call i8* @ResetMagickMemory(i8* %99, i32 0, i64 %mul96), !dbg !1900
  %104 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1901
  %values98 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %104, i32 0, i32 5, !dbg !1902
  %105 = load double*, double** %values98, align 8, !dbg !1902
  %106 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1903
  %x99 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %106, i32 0, i32 3, !dbg !1904
  %107 = load i64, i64* %x99, align 8, !dbg !1904
  %108 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1905
  %y100 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %108, i32 0, i32 4, !dbg !1906
  %109 = load i64, i64* %y100, align 8, !dbg !1906
  %110 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1907
  %width101 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %110, i32 0, i32 1, !dbg !1908
  %111 = load i64, i64* %width101, align 8, !dbg !1908
  %mul102 = mul i64 %109, %111, !dbg !1909
  %add103 = add i64 %107, %mul102, !dbg !1910
  %arrayidx104 = getelementptr inbounds double, double* %105, i64 %add103, !dbg !1901
  store double 1.000000e+00, double* %arrayidx104, align 8, !dbg !1911
  br label %if.end105

if.end105:                                        ; preds = %if.else91, %for.end90
  br label %if.end106, !dbg !1912

if.end106:                                        ; preds = %if.end105, %lor.lhs.false53
  %112 = load i32, i32* %type.addr, align 4, !dbg !1913
  %cmp107 = icmp eq i32 %112, 3, !dbg !1915
  br i1 %cmp107, label %if.then109, label %if.end161, !dbg !1916

if.then109:                                       ; preds = %if.end106
  %113 = load double, double* %sigma2, align 8, !dbg !1917
  %cmp110 = fcmp ogt double %113, 1.000000e-15, !dbg !1920
  br i1 %cmp110, label %if.then112, label %if.else151, !dbg !1921

if.then112:                                       ; preds = %if.then109
  %114 = load double, double* %sigma2, align 8, !dbg !1922
  store double %114, double* %sigma, align 8, !dbg !1924
  %115 = load double, double* %sigma, align 8, !dbg !1925
  %mul113 = fmul double 2.000000e+00, %115, !dbg !1926
  %116 = load double, double* %sigma, align 8, !dbg !1927
  %mul114 = fmul double %mul113, %116, !dbg !1928
  %div115 = fdiv double 1.000000e+00, %mul114, !dbg !1929
  store double %div115, double* %A, align 8, !dbg !1930
  %117 = load double, double* %sigma, align 8, !dbg !1931
  %mul116 = fmul double 0x401921FB54442D18, %117, !dbg !1932
  %118 = load double, double* %sigma, align 8, !dbg !1933
  %mul117 = fmul double %mul116, %118, !dbg !1934
  %div118 = fdiv double 1.000000e+00, %mul117, !dbg !1935
  store double %div118, double* %B, align 8, !dbg !1936
  store i64 0, i64* %i, align 8, !dbg !1937
  %119 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1939
  %y119 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %119, i32 0, i32 4, !dbg !1940
  %120 = load i64, i64* %y119, align 8, !dbg !1940
  %sub120 = sub nsw i64 0, %120, !dbg !1941
  store i64 %sub120, i64* %v, align 8, !dbg !1942
  br label %for.cond121, !dbg !1943

for.cond121:                                      ; preds = %for.inc148, %if.then112
  %121 = load i64, i64* %v, align 8, !dbg !1944
  %122 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1946
  %y122 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %122, i32 0, i32 4, !dbg !1947
  %123 = load i64, i64* %y122, align 8, !dbg !1947
  %cmp123 = icmp sle i64 %121, %123, !dbg !1948
  br i1 %cmp123, label %for.body125, label %for.end150, !dbg !1949

for.body125:                                      ; preds = %for.cond121
  %124 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1950
  %x126 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %124, i32 0, i32 3, !dbg !1952
  %125 = load i64, i64* %x126, align 8, !dbg !1952
  %sub127 = sub nsw i64 0, %125, !dbg !1953
  store i64 %sub127, i64* %u, align 8, !dbg !1954
  br label %for.cond128, !dbg !1955

for.cond128:                                      ; preds = %for.inc144, %for.body125
  %126 = load i64, i64* %u, align 8, !dbg !1956
  %127 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1958
  %x129 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %127, i32 0, i32 3, !dbg !1959
  %128 = load i64, i64* %x129, align 8, !dbg !1959
  %cmp130 = icmp sle i64 %126, %128, !dbg !1960
  br i1 %cmp130, label %for.body132, label %for.end147, !dbg !1961

for.body132:                                      ; preds = %for.cond128
  %129 = load i64, i64* %u, align 8, !dbg !1962
  %130 = load i64, i64* %u, align 8, !dbg !1963
  %mul133 = mul nsw i64 %129, %130, !dbg !1964
  %131 = load i64, i64* %v, align 8, !dbg !1965
  %132 = load i64, i64* %v, align 8, !dbg !1966
  %mul134 = mul nsw i64 %131, %132, !dbg !1967
  %add135 = add nsw i64 %mul133, %mul134, !dbg !1968
  %conv136 = sitofp i64 %add135 to double, !dbg !1969
  %fneg137 = fneg double %conv136, !dbg !1970
  %133 = load double, double* %A, align 8, !dbg !1971
  %mul138 = fmul double %fneg137, %133, !dbg !1972
  %call139 = call double @exp(double %mul138) #12, !dbg !1973
  %134 = load double, double* %B, align 8, !dbg !1974
  %mul140 = fmul double %call139, %134, !dbg !1975
  %135 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1976
  %values141 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %135, i32 0, i32 5, !dbg !1977
  %136 = load double*, double** %values141, align 8, !dbg !1977
  %137 = load i64, i64* %i, align 8, !dbg !1978
  %arrayidx142 = getelementptr inbounds double, double* %136, i64 %137, !dbg !1976
  %138 = load double, double* %arrayidx142, align 8, !dbg !1979
  %sub143 = fsub double %138, %mul140, !dbg !1979
  store double %sub143, double* %arrayidx142, align 8, !dbg !1979
  br label %for.inc144, !dbg !1976

for.inc144:                                       ; preds = %for.body132
  %139 = load i64, i64* %u, align 8, !dbg !1980
  %inc145 = add nsw i64 %139, 1, !dbg !1980
  store i64 %inc145, i64* %u, align 8, !dbg !1980
  %140 = load i64, i64* %i, align 8, !dbg !1981
  %inc146 = add nsw i64 %140, 1, !dbg !1981
  store i64 %inc146, i64* %i, align 8, !dbg !1981
  br label %for.cond128, !dbg !1982, !llvm.loop !1983

for.end147:                                       ; preds = %for.cond128
  br label %for.inc148, !dbg !1984

for.inc148:                                       ; preds = %for.end147
  %141 = load i64, i64* %v, align 8, !dbg !1985
  %inc149 = add nsw i64 %141, 1, !dbg !1985
  store i64 %inc149, i64* %v, align 8, !dbg !1985
  br label %for.cond121, !dbg !1986, !llvm.loop !1987

for.end150:                                       ; preds = %for.cond121
  br label %if.end160, !dbg !1989

if.else151:                                       ; preds = %if.then109
  %142 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1990
  %values152 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %142, i32 0, i32 5, !dbg !1991
  %143 = load double*, double** %values152, align 8, !dbg !1991
  %144 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1992
  %x153 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %144, i32 0, i32 3, !dbg !1993
  %145 = load i64, i64* %x153, align 8, !dbg !1993
  %146 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1994
  %y154 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %146, i32 0, i32 4, !dbg !1995
  %147 = load i64, i64* %y154, align 8, !dbg !1995
  %148 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !1996
  %width155 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %148, i32 0, i32 1, !dbg !1997
  %149 = load i64, i64* %width155, align 8, !dbg !1997
  %mul156 = mul i64 %147, %149, !dbg !1998
  %add157 = add i64 %145, %mul156, !dbg !1999
  %arrayidx158 = getelementptr inbounds double, double* %143, i64 %add157, !dbg !1990
  %150 = load double, double* %arrayidx158, align 8, !dbg !2000
  %sub159 = fsub double %150, 1.000000e+00, !dbg !2000
  store double %sub159, double* %arrayidx158, align 8, !dbg !2000
  br label %if.end160

if.end160:                                        ; preds = %if.else151, %for.end150
  br label %if.end161, !dbg !2001

if.end161:                                        ; preds = %if.end160, %if.end106
  %151 = load i32, i32* %type.addr, align 4, !dbg !2002
  %cmp162 = icmp eq i32 %151, 4, !dbg !2004
  br i1 %cmp162, label %if.then164, label %if.end224, !dbg !2005

if.then164:                                       ; preds = %if.end161
  %152 = load double, double* %sigma, align 8, !dbg !2006
  %cmp165 = fcmp ogt double %152, 1.000000e-15, !dbg !2009
  br i1 %cmp165, label %if.then167, label %if.else209, !dbg !2010

if.then167:                                       ; preds = %if.then164
  %153 = load double, double* %sigma, align 8, !dbg !2011
  %mul168 = fmul double 2.000000e+00, %153, !dbg !2013
  %154 = load double, double* %sigma, align 8, !dbg !2014
  %mul169 = fmul double %mul168, %154, !dbg !2015
  %div170 = fdiv double 1.000000e+00, %mul169, !dbg !2016
  store double %div170, double* %A, align 8, !dbg !2017
  %155 = load double, double* %sigma, align 8, !dbg !2018
  %mul171 = fmul double 0x400921FB54442D18, %155, !dbg !2019
  %156 = load double, double* %sigma, align 8, !dbg !2020
  %mul172 = fmul double %mul171, %156, !dbg !2021
  %157 = load double, double* %sigma, align 8, !dbg !2022
  %mul173 = fmul double %mul172, %157, !dbg !2023
  %158 = load double, double* %sigma, align 8, !dbg !2024
  %mul174 = fmul double %mul173, %158, !dbg !2025
  %div175 = fdiv double 1.000000e+00, %mul174, !dbg !2026
  store double %div175, double* %B, align 8, !dbg !2027
  store i64 0, i64* %i, align 8, !dbg !2028
  %159 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2030
  %y176 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %159, i32 0, i32 4, !dbg !2031
  %160 = load i64, i64* %y176, align 8, !dbg !2031
  %sub177 = sub nsw i64 0, %160, !dbg !2032
  store i64 %sub177, i64* %v, align 8, !dbg !2033
  br label %for.cond178, !dbg !2034

for.cond178:                                      ; preds = %for.inc206, %if.then167
  %161 = load i64, i64* %v, align 8, !dbg !2035
  %162 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2037
  %y179 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %162, i32 0, i32 4, !dbg !2038
  %163 = load i64, i64* %y179, align 8, !dbg !2038
  %cmp180 = icmp sle i64 %161, %163, !dbg !2039
  br i1 %cmp180, label %for.body182, label %for.end208, !dbg !2040

for.body182:                                      ; preds = %for.cond178
  %164 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2041
  %x183 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %164, i32 0, i32 3, !dbg !2043
  %165 = load i64, i64* %x183, align 8, !dbg !2043
  %sub184 = sub nsw i64 0, %165, !dbg !2044
  store i64 %sub184, i64* %u, align 8, !dbg !2045
  br label %for.cond185, !dbg !2046

for.cond185:                                      ; preds = %for.inc202, %for.body182
  %166 = load i64, i64* %u, align 8, !dbg !2047
  %167 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2049
  %x186 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %167, i32 0, i32 3, !dbg !2050
  %168 = load i64, i64* %x186, align 8, !dbg !2050
  %cmp187 = icmp sle i64 %166, %168, !dbg !2051
  br i1 %cmp187, label %for.body189, label %for.end205, !dbg !2052

for.body189:                                      ; preds = %for.cond185
  %169 = load i64, i64* %u, align 8, !dbg !2053
  %170 = load i64, i64* %u, align 8, !dbg !2055
  %mul190 = mul nsw i64 %169, %170, !dbg !2056
  %171 = load i64, i64* %v, align 8, !dbg !2057
  %172 = load i64, i64* %v, align 8, !dbg !2058
  %mul191 = mul nsw i64 %171, %172, !dbg !2059
  %add192 = add nsw i64 %mul190, %mul191, !dbg !2060
  %conv193 = sitofp i64 %add192 to double, !dbg !2061
  %173 = load double, double* %A, align 8, !dbg !2062
  %mul194 = fmul double %conv193, %173, !dbg !2063
  store double %mul194, double* %R, align 8, !dbg !2064
  %174 = load double, double* %R, align 8, !dbg !2065
  %sub195 = fsub double 1.000000e+00, %174, !dbg !2066
  %175 = load double, double* %R, align 8, !dbg !2067
  %fneg196 = fneg double %175, !dbg !2068
  %call197 = call double @exp(double %fneg196) #12, !dbg !2069
  %mul198 = fmul double %sub195, %call197, !dbg !2070
  %176 = load double, double* %B, align 8, !dbg !2071
  %mul199 = fmul double %mul198, %176, !dbg !2072
  %177 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2073
  %values200 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %177, i32 0, i32 5, !dbg !2074
  %178 = load double*, double** %values200, align 8, !dbg !2074
  %179 = load i64, i64* %i, align 8, !dbg !2075
  %arrayidx201 = getelementptr inbounds double, double* %178, i64 %179, !dbg !2073
  store double %mul199, double* %arrayidx201, align 8, !dbg !2076
  br label %for.inc202, !dbg !2077

for.inc202:                                       ; preds = %for.body189
  %180 = load i64, i64* %u, align 8, !dbg !2078
  %inc203 = add nsw i64 %180, 1, !dbg !2078
  store i64 %inc203, i64* %u, align 8, !dbg !2078
  %181 = load i64, i64* %i, align 8, !dbg !2079
  %inc204 = add nsw i64 %181, 1, !dbg !2079
  store i64 %inc204, i64* %i, align 8, !dbg !2079
  br label %for.cond185, !dbg !2080, !llvm.loop !2081

for.end205:                                       ; preds = %for.cond185
  br label %for.inc206, !dbg !2082

for.inc206:                                       ; preds = %for.end205
  %182 = load i64, i64* %v, align 8, !dbg !2083
  %inc207 = add nsw i64 %182, 1, !dbg !2083
  store i64 %inc207, i64* %v, align 8, !dbg !2083
  br label %for.cond178, !dbg !2084, !llvm.loop !2085

for.end208:                                       ; preds = %for.cond178
  br label %if.end223, !dbg !2087

if.else209:                                       ; preds = %if.then164
  %183 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2088
  %values210 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %183, i32 0, i32 5, !dbg !2090
  %184 = load double*, double** %values210, align 8, !dbg !2090
  %185 = bitcast double* %184 to i8*, !dbg !2088
  %186 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2091
  %width211 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %186, i32 0, i32 1, !dbg !2092
  %187 = load i64, i64* %width211, align 8, !dbg !2092
  %188 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2093
  %height212 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %188, i32 0, i32 2, !dbg !2094
  %189 = load i64, i64* %height212, align 8, !dbg !2094
  %mul213 = mul i64 %187, %189, !dbg !2095
  %mul214 = mul i64 %mul213, 8, !dbg !2096
  %call215 = call i8* @ResetMagickMemory(i8* %185, i32 0, i64 %mul214), !dbg !2097
  %190 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2098
  %values216 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %190, i32 0, i32 5, !dbg !2099
  %191 = load double*, double** %values216, align 8, !dbg !2099
  %192 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2100
  %x217 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %192, i32 0, i32 3, !dbg !2101
  %193 = load i64, i64* %x217, align 8, !dbg !2101
  %194 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2102
  %y218 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %194, i32 0, i32 4, !dbg !2103
  %195 = load i64, i64* %y218, align 8, !dbg !2103
  %196 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2104
  %width219 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %196, i32 0, i32 1, !dbg !2105
  %197 = load i64, i64* %width219, align 8, !dbg !2105
  %mul220 = mul i64 %195, %197, !dbg !2106
  %add221 = add i64 %193, %mul220, !dbg !2107
  %arrayidx222 = getelementptr inbounds double, double* %191, i64 %add221, !dbg !2098
  store double 1.000000e+00, double* %arrayidx222, align 8, !dbg !2108
  br label %if.end223

if.end223:                                        ; preds = %if.else209, %for.end208
  br label %if.end224, !dbg !2109

if.end224:                                        ; preds = %if.end223, %if.end161
  %198 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2110
  call void @CalcKernelMetaData(%struct.KernelInfo* %198), !dbg !2111
  %199 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2112
  call void @ScaleKernelInfo(%struct.KernelInfo* %199, double 1.000000e+00, i32 65536), !dbg !2113
  br label %sw.epilog1834, !dbg !2114

sw.bb225:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata double* %sigma226, metadata !2115, metadata !DIExpression()), !dbg !2117
  %200 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2118
  %sigma227 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %200, i32 0, i32 1, !dbg !2119
  %201 = load double, double* %sigma227, align 8, !dbg !2119
  %202 = call double @llvm.fabs.f64(double %201), !dbg !2120
  store double %202, double* %sigma226, align 8, !dbg !2117
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !2121, metadata !DIExpression()), !dbg !2122
  call void @llvm.dbg.declare(metadata double* %beta, metadata !2123, metadata !DIExpression()), !dbg !2124
  %203 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2125
  %rho228 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %203, i32 0, i32 0, !dbg !2127
  %204 = load double, double* %rho228, align 8, !dbg !2127
  %cmp229 = fcmp oge double %204, 1.000000e+00, !dbg !2128
  br i1 %cmp229, label %if.then231, label %if.else237, !dbg !2129

if.then231:                                       ; preds = %sw.bb225
  %205 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2130
  %rho232 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %205, i32 0, i32 0, !dbg !2131
  %206 = load double, double* %rho232, align 8, !dbg !2131
  %conv233 = fptoui double %206 to i64, !dbg !2132
  %mul234 = mul i64 %conv233, 2, !dbg !2133
  %add235 = add i64 %mul234, 1, !dbg !2134
  %207 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2135
  %width236 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %207, i32 0, i32 1, !dbg !2136
  store i64 %add235, i64* %width236, align 8, !dbg !2137
  br label %if.end241, !dbg !2135

if.else237:                                       ; preds = %sw.bb225
  %208 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2138
  %rho238 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %208, i32 0, i32 0, !dbg !2139
  %209 = load double, double* %rho238, align 8, !dbg !2139
  %210 = load double, double* %sigma226, align 8, !dbg !2140
  %call239 = call i64 @GetOptimalKernelWidth1D(double %209, double %210), !dbg !2141
  %211 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2142
  %width240 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %211, i32 0, i32 1, !dbg !2143
  store i64 %call239, i64* %width240, align 8, !dbg !2144
  br label %if.end241

if.end241:                                        ; preds = %if.else237, %if.then231
  %212 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2145
  %height242 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %212, i32 0, i32 2, !dbg !2146
  store i64 1, i64* %height242, align 8, !dbg !2147
  %213 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2148
  %width243 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %213, i32 0, i32 1, !dbg !2149
  %214 = load i64, i64* %width243, align 8, !dbg !2149
  %sub244 = sub i64 %214, 1, !dbg !2150
  %div245 = sdiv i64 %sub244, 2, !dbg !2151
  %215 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2152
  %x246 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %215, i32 0, i32 3, !dbg !2153
  store i64 %div245, i64* %x246, align 8, !dbg !2154
  %216 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2155
  %y247 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %216, i32 0, i32 4, !dbg !2156
  store i64 0, i64* %y247, align 8, !dbg !2157
  %217 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2158
  %positive_range248 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %217, i32 0, i32 9, !dbg !2159
  store double 0.000000e+00, double* %positive_range248, align 8, !dbg !2160
  %218 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2161
  %negative_range249 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %218, i32 0, i32 8, !dbg !2162
  store double 0.000000e+00, double* %negative_range249, align 8, !dbg !2163
  %219 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2164
  %width250 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %219, i32 0, i32 1, !dbg !2165
  %220 = load i64, i64* %width250, align 8, !dbg !2165
  %221 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2166
  %height251 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %221, i32 0, i32 2, !dbg !2167
  %222 = load i64, i64* %height251, align 8, !dbg !2167
  %mul252 = mul i64 %222, 8, !dbg !2168
  %call253 = call i8* @AcquireAlignedMemory(i64 %220, i64 %mul252) #14, !dbg !2169
  %223 = bitcast i8* %call253 to double*, !dbg !2170
  %224 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2171
  %values254 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %224, i32 0, i32 5, !dbg !2172
  store double* %223, double** %values254, align 8, !dbg !2173
  %225 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2174
  %values255 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %225, i32 0, i32 5, !dbg !2176
  %226 = load double*, double** %values255, align 8, !dbg !2176
  %cmp256 = icmp eq double* %226, null, !dbg !2177
  br i1 %cmp256, label %if.then258, label %if.end260, !dbg !2178

if.then258:                                       ; preds = %if.end241
  %227 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2179
  %call259 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %227), !dbg !2180
  store %struct.KernelInfo* %call259, %struct.KernelInfo** %retval, align 8, !dbg !2181
  br label %return, !dbg !2181

if.end260:                                        ; preds = %if.end241
  %228 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2182
  %width261 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %228, i32 0, i32 1, !dbg !2183
  %229 = load i64, i64* %width261, align 8, !dbg !2183
  %mul262 = mul i64 %229, 3, !dbg !2184
  %sub263 = sub i64 %mul262, 1, !dbg !2185
  %div264 = sdiv i64 %sub263, 2, !dbg !2186
  store i64 %div264, i64* %v, align 8, !dbg !2187
  %230 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2188
  %values265 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %230, i32 0, i32 5, !dbg !2189
  %231 = load double*, double** %values265, align 8, !dbg !2189
  %232 = bitcast double* %231 to i8*, !dbg !2188
  %233 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2190
  %width266 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %233, i32 0, i32 1, !dbg !2191
  %234 = load i64, i64* %width266, align 8, !dbg !2191
  %235 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2192
  %height267 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %235, i32 0, i32 2, !dbg !2193
  %236 = load i64, i64* %height267, align 8, !dbg !2193
  %mul268 = mul i64 %234, %236, !dbg !2194
  %mul269 = mul i64 %mul268, 8, !dbg !2195
  %call270 = call i8* @ResetMagickMemory(i8* %232, i32 0, i64 %mul269), !dbg !2196
  %237 = load double, double* %sigma226, align 8, !dbg !2197
  %cmp271 = fcmp ogt double %237, 1.000000e-15, !dbg !2199
  br i1 %cmp271, label %if.then273, label %if.else299, !dbg !2200

if.then273:                                       ; preds = %if.end260
  %238 = load double, double* %sigma226, align 8, !dbg !2201
  %mul274 = fmul double %238, 3.000000e+00, !dbg !2201
  store double %mul274, double* %sigma226, align 8, !dbg !2201
  %239 = load double, double* %sigma226, align 8, !dbg !2203
  %mul275 = fmul double 2.000000e+00, %239, !dbg !2204
  %240 = load double, double* %sigma226, align 8, !dbg !2205
  %mul276 = fmul double %mul275, %240, !dbg !2206
  %div277 = fdiv double 1.000000e+00, %mul276, !dbg !2207
  store double %div277, double* %alpha, align 8, !dbg !2208
  %241 = load double, double* %sigma226, align 8, !dbg !2209
  %mul278 = fmul double 0x40040D931FF62705, %241, !dbg !2210
  %div279 = fdiv double 1.000000e+00, %mul278, !dbg !2211
  store double %div279, double* %beta, align 8, !dbg !2212
  %242 = load i64, i64* %v, align 8, !dbg !2213
  %sub280 = sub nsw i64 0, %242, !dbg !2215
  store i64 %sub280, i64* %u, align 8, !dbg !2216
  br label %for.cond281, !dbg !2217

for.cond281:                                      ; preds = %for.inc296, %if.then273
  %243 = load i64, i64* %u, align 8, !dbg !2218
  %244 = load i64, i64* %v, align 8, !dbg !2220
  %cmp282 = icmp sle i64 %243, %244, !dbg !2221
  br i1 %cmp282, label %for.body284, label %for.end298, !dbg !2222

for.body284:                                      ; preds = %for.cond281
  %245 = load i64, i64* %u, align 8, !dbg !2223
  %246 = load i64, i64* %u, align 8, !dbg !2225
  %mul285 = mul nsw i64 %245, %246, !dbg !2226
  %conv286 = sitofp i64 %mul285 to double, !dbg !2227
  %fneg287 = fneg double %conv286, !dbg !2228
  %247 = load double, double* %alpha, align 8, !dbg !2229
  %mul288 = fmul double %fneg287, %247, !dbg !2230
  %call289 = call double @exp(double %mul288) #12, !dbg !2231
  %248 = load double, double* %beta, align 8, !dbg !2232
  %mul290 = fmul double %call289, %248, !dbg !2233
  %249 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2234
  %values291 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %249, i32 0, i32 5, !dbg !2235
  %250 = load double*, double** %values291, align 8, !dbg !2235
  %251 = load i64, i64* %u, align 8, !dbg !2236
  %252 = load i64, i64* %v, align 8, !dbg !2237
  %add292 = add nsw i64 %251, %252, !dbg !2238
  %div293 = sdiv i64 %add292, 3, !dbg !2239
  %arrayidx294 = getelementptr inbounds double, double* %250, i64 %div293, !dbg !2234
  %253 = load double, double* %arrayidx294, align 8, !dbg !2240
  %add295 = fadd double %253, %mul290, !dbg !2240
  store double %add295, double* %arrayidx294, align 8, !dbg !2240
  br label %for.inc296, !dbg !2241

for.inc296:                                       ; preds = %for.body284
  %254 = load i64, i64* %u, align 8, !dbg !2242
  %inc297 = add nsw i64 %254, 1, !dbg !2242
  store i64 %inc297, i64* %u, align 8, !dbg !2242
  br label %for.cond281, !dbg !2243, !llvm.loop !2244

for.end298:                                       ; preds = %for.cond281
  br label %if.end307, !dbg !2246

if.else299:                                       ; preds = %if.end260
  %255 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2247
  %values300 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %255, i32 0, i32 5, !dbg !2248
  %256 = load double*, double** %values300, align 8, !dbg !2248
  %257 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2249
  %x301 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %257, i32 0, i32 3, !dbg !2250
  %258 = load i64, i64* %x301, align 8, !dbg !2250
  %259 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2251
  %y302 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %259, i32 0, i32 4, !dbg !2252
  %260 = load i64, i64* %y302, align 8, !dbg !2252
  %261 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2253
  %width303 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %261, i32 0, i32 1, !dbg !2254
  %262 = load i64, i64* %width303, align 8, !dbg !2254
  %mul304 = mul i64 %260, %262, !dbg !2255
  %add305 = add i64 %258, %mul304, !dbg !2256
  %arrayidx306 = getelementptr inbounds double, double* %256, i64 %add305, !dbg !2247
  store double 1.000000e+00, double* %arrayidx306, align 8, !dbg !2257
  br label %if.end307

if.end307:                                        ; preds = %if.else299, %for.end298
  %263 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2258
  call void @CalcKernelMetaData(%struct.KernelInfo* %263), !dbg !2259
  %264 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2260
  call void @ScaleKernelInfo(%struct.KernelInfo* %264, double 1.000000e+00, i32 65536), !dbg !2261
  %265 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2262
  %266 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2263
  %xi308 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %266, i32 0, i32 2, !dbg !2264
  %267 = load double, double* %xi308, align 8, !dbg !2264
  call void @RotateKernelInfo(%struct.KernelInfo* %265, double %267), !dbg !2265
  br label %sw.epilog1834, !dbg !2266

sw.bb309:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata double* %sigma310, metadata !2267, metadata !DIExpression()), !dbg !2269
  %268 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2270
  %sigma311 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %268, i32 0, i32 1, !dbg !2271
  %269 = load double, double* %sigma311, align 8, !dbg !2271
  %270 = call double @llvm.fabs.f64(double %269), !dbg !2272
  store double %270, double* %sigma310, align 8, !dbg !2269
  call void @llvm.dbg.declare(metadata double* %A312, metadata !2273, metadata !DIExpression()), !dbg !2274
  %271 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2275
  %rho313 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %271, i32 0, i32 0, !dbg !2277
  %272 = load double, double* %rho313, align 8, !dbg !2277
  %cmp314 = fcmp olt double %272, 1.000000e+00, !dbg !2278
  br i1 %cmp314, label %if.then316, label %if.else323, !dbg !2279

if.then316:                                       ; preds = %sw.bb309
  %273 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2280
  %rho317 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %273, i32 0, i32 0, !dbg !2281
  %274 = load double, double* %rho317, align 8, !dbg !2281
  %275 = load double, double* %sigma310, align 8, !dbg !2282
  %call318 = call i64 @GetOptimalKernelWidth1D(double %274, double %275), !dbg !2283
  %sub319 = sub i64 %call318, 1, !dbg !2284
  %div320 = udiv i64 %sub319, 2, !dbg !2285
  %add321 = add i64 %div320, 1, !dbg !2286
  %276 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2287
  %width322 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %276, i32 0, i32 1, !dbg !2288
  store i64 %add321, i64* %width322, align 8, !dbg !2289
  br label %if.end327, !dbg !2287

if.else323:                                       ; preds = %sw.bb309
  %277 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2290
  %rho324 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %277, i32 0, i32 0, !dbg !2291
  %278 = load double, double* %rho324, align 8, !dbg !2291
  %conv325 = fptoui double %278 to i64, !dbg !2292
  %279 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2293
  %width326 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %279, i32 0, i32 1, !dbg !2294
  store i64 %conv325, i64* %width326, align 8, !dbg !2295
  br label %if.end327

if.end327:                                        ; preds = %if.else323, %if.then316
  %280 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2296
  %y328 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %280, i32 0, i32 4, !dbg !2297
  store i64 0, i64* %y328, align 8, !dbg !2298
  %281 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2299
  %x329 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %281, i32 0, i32 3, !dbg !2300
  store i64 0, i64* %x329, align 8, !dbg !2301
  %282 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2302
  %height330 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %282, i32 0, i32 2, !dbg !2303
  store i64 1, i64* %height330, align 8, !dbg !2304
  %283 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2305
  %positive_range331 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %283, i32 0, i32 9, !dbg !2306
  store double 0.000000e+00, double* %positive_range331, align 8, !dbg !2307
  %284 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2308
  %negative_range332 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %284, i32 0, i32 8, !dbg !2309
  store double 0.000000e+00, double* %negative_range332, align 8, !dbg !2310
  %285 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2311
  %width333 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %285, i32 0, i32 1, !dbg !2312
  %286 = load i64, i64* %width333, align 8, !dbg !2312
  %287 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2313
  %height334 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %287, i32 0, i32 2, !dbg !2314
  %288 = load i64, i64* %height334, align 8, !dbg !2314
  %mul335 = mul i64 %288, 8, !dbg !2315
  %call336 = call i8* @AcquireAlignedMemory(i64 %286, i64 %mul335) #14, !dbg !2316
  %289 = bitcast i8* %call336 to double*, !dbg !2317
  %290 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2318
  %values337 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %290, i32 0, i32 5, !dbg !2319
  store double* %289, double** %values337, align 8, !dbg !2320
  %291 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2321
  %values338 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %291, i32 0, i32 5, !dbg !2323
  %292 = load double*, double** %values338, align 8, !dbg !2323
  %cmp339 = icmp eq double* %292, null, !dbg !2324
  br i1 %cmp339, label %if.then341, label %if.end343, !dbg !2325

if.then341:                                       ; preds = %if.end327
  %293 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2326
  %call342 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %293), !dbg !2327
  store %struct.KernelInfo* %call342, %struct.KernelInfo** %retval, align 8, !dbg !2328
  br label %return, !dbg !2328

if.end343:                                        ; preds = %if.end327
  %294 = load double, double* %sigma310, align 8, !dbg !2329
  %cmp344 = fcmp ogt double %294, 1.000000e-15, !dbg !2331
  br i1 %cmp344, label %if.then346, label %if.else385, !dbg !2332

if.then346:                                       ; preds = %if.end343
  %295 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2333
  %width347 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %295, i32 0, i32 1, !dbg !2335
  %296 = load i64, i64* %width347, align 8, !dbg !2335
  %mul348 = mul nsw i64 %296, 3, !dbg !2336
  store i64 %mul348, i64* %v, align 8, !dbg !2337
  %297 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2338
  %values349 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %297, i32 0, i32 5, !dbg !2339
  %298 = load double*, double** %values349, align 8, !dbg !2339
  %299 = bitcast double* %298 to i8*, !dbg !2338
  %300 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2340
  %width350 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %300, i32 0, i32 1, !dbg !2341
  %301 = load i64, i64* %width350, align 8, !dbg !2341
  %mul351 = mul i64 %301, 8, !dbg !2342
  %call352 = call i8* @ResetMagickMemory(i8* %299, i32 0, i64 %mul351), !dbg !2343
  %302 = load double, double* %sigma310, align 8, !dbg !2344
  %mul353 = fmul double %302, 3.000000e+00, !dbg !2344
  store double %mul353, double* %sigma310, align 8, !dbg !2344
  %303 = load double, double* %sigma310, align 8, !dbg !2345
  %mul354 = fmul double 2.000000e+00, %303, !dbg !2346
  %304 = load double, double* %sigma310, align 8, !dbg !2347
  %mul355 = fmul double %mul354, %304, !dbg !2348
  %div356 = fdiv double 1.000000e+00, %mul355, !dbg !2349
  store double %div356, double* %A312, align 8, !dbg !2350
  store i64 0, i64* %u, align 8, !dbg !2351
  br label %for.cond357, !dbg !2353

for.cond357:                                      ; preds = %for.inc370, %if.then346
  %305 = load i64, i64* %u, align 8, !dbg !2354
  %306 = load i64, i64* %v, align 8, !dbg !2356
  %cmp358 = icmp slt i64 %305, %306, !dbg !2357
  br i1 %cmp358, label %for.body360, label %for.end372, !dbg !2358

for.body360:                                      ; preds = %for.cond357
  %307 = load i64, i64* %u, align 8, !dbg !2359
  %308 = load i64, i64* %u, align 8, !dbg !2361
  %mul361 = mul nsw i64 %307, %308, !dbg !2362
  %conv362 = sitofp i64 %mul361 to double, !dbg !2363
  %fneg363 = fneg double %conv362, !dbg !2364
  %309 = load double, double* %A312, align 8, !dbg !2365
  %mul364 = fmul double %fneg363, %309, !dbg !2366
  %call365 = call double @exp(double %mul364) #12, !dbg !2367
  %310 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2368
  %values366 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %310, i32 0, i32 5, !dbg !2369
  %311 = load double*, double** %values366, align 8, !dbg !2369
  %312 = load i64, i64* %u, align 8, !dbg !2370
  %div367 = sdiv i64 %312, 3, !dbg !2371
  %arrayidx368 = getelementptr inbounds double, double* %311, i64 %div367, !dbg !2368
  %313 = load double, double* %arrayidx368, align 8, !dbg !2372
  %add369 = fadd double %313, %call365, !dbg !2372
  store double %add369, double* %arrayidx368, align 8, !dbg !2372
  br label %for.inc370, !dbg !2373

for.inc370:                                       ; preds = %for.body360
  %314 = load i64, i64* %u, align 8, !dbg !2374
  %inc371 = add nsw i64 %314, 1, !dbg !2374
  store i64 %inc371, i64* %u, align 8, !dbg !2374
  br label %for.cond357, !dbg !2375, !llvm.loop !2376

for.end372:                                       ; preds = %for.cond357
  store i64 0, i64* %i, align 8, !dbg !2378
  br label %for.cond373, !dbg !2380

for.cond373:                                      ; preds = %for.inc382, %for.end372
  %315 = load i64, i64* %i, align 8, !dbg !2381
  %316 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2383
  %width374 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %316, i32 0, i32 1, !dbg !2384
  %317 = load i64, i64* %width374, align 8, !dbg !2384
  %cmp375 = icmp slt i64 %315, %317, !dbg !2385
  br i1 %cmp375, label %for.body377, label %for.end384, !dbg !2386

for.body377:                                      ; preds = %for.cond373
  %318 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2387
  %values378 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %318, i32 0, i32 5, !dbg !2388
  %319 = load double*, double** %values378, align 8, !dbg !2388
  %320 = load i64, i64* %i, align 8, !dbg !2389
  %arrayidx379 = getelementptr inbounds double, double* %319, i64 %320, !dbg !2387
  %321 = load double, double* %arrayidx379, align 8, !dbg !2387
  %322 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2390
  %positive_range380 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %322, i32 0, i32 9, !dbg !2391
  %323 = load double, double* %positive_range380, align 8, !dbg !2392
  %add381 = fadd double %323, %321, !dbg !2392
  store double %add381, double* %positive_range380, align 8, !dbg !2392
  br label %for.inc382, !dbg !2390

for.inc382:                                       ; preds = %for.body377
  %324 = load i64, i64* %i, align 8, !dbg !2393
  %inc383 = add nsw i64 %324, 1, !dbg !2393
  store i64 %inc383, i64* %i, align 8, !dbg !2393
  br label %for.cond373, !dbg !2394, !llvm.loop !2395

for.end384:                                       ; preds = %for.cond373
  br label %if.end400, !dbg !2397

if.else385:                                       ; preds = %if.end343
  %325 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2398
  %values386 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %325, i32 0, i32 5, !dbg !2400
  %326 = load double*, double** %values386, align 8, !dbg !2400
  %327 = bitcast double* %326 to i8*, !dbg !2398
  %328 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2401
  %width387 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %328, i32 0, i32 1, !dbg !2402
  %329 = load i64, i64* %width387, align 8, !dbg !2402
  %330 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2403
  %height388 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %330, i32 0, i32 2, !dbg !2404
  %331 = load i64, i64* %height388, align 8, !dbg !2404
  %mul389 = mul i64 %329, %331, !dbg !2405
  %mul390 = mul i64 %mul389, 8, !dbg !2406
  %call391 = call i8* @ResetMagickMemory(i8* %327, i32 0, i64 %mul390), !dbg !2407
  %332 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2408
  %values392 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %332, i32 0, i32 5, !dbg !2409
  %333 = load double*, double** %values392, align 8, !dbg !2409
  %334 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2410
  %x393 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %334, i32 0, i32 3, !dbg !2411
  %335 = load i64, i64* %x393, align 8, !dbg !2411
  %336 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2412
  %y394 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %336, i32 0, i32 4, !dbg !2413
  %337 = load i64, i64* %y394, align 8, !dbg !2413
  %338 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2414
  %width395 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %338, i32 0, i32 1, !dbg !2415
  %339 = load i64, i64* %width395, align 8, !dbg !2415
  %mul396 = mul i64 %337, %339, !dbg !2416
  %add397 = add i64 %335, %mul396, !dbg !2417
  %arrayidx398 = getelementptr inbounds double, double* %333, i64 %add397, !dbg !2408
  store double 1.000000e+00, double* %arrayidx398, align 8, !dbg !2418
  %340 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2419
  %positive_range399 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %340, i32 0, i32 9, !dbg !2420
  store double 1.000000e+00, double* %positive_range399, align 8, !dbg !2421
  br label %if.end400

if.end400:                                        ; preds = %if.else385, %for.end384
  %341 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2422
  %minimum401 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %341, i32 0, i32 6, !dbg !2423
  store double 0.000000e+00, double* %minimum401, align 8, !dbg !2424
  %342 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2425
  %values402 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %342, i32 0, i32 5, !dbg !2426
  %343 = load double*, double** %values402, align 8, !dbg !2426
  %arrayidx403 = getelementptr inbounds double, double* %343, i64 0, !dbg !2425
  %344 = load double, double* %arrayidx403, align 8, !dbg !2425
  %345 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2427
  %maximum404 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %345, i32 0, i32 7, !dbg !2428
  store double %344, double* %maximum404, align 8, !dbg !2429
  %346 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2430
  %negative_range405 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %346, i32 0, i32 8, !dbg !2431
  store double 0.000000e+00, double* %negative_range405, align 8, !dbg !2432
  %347 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2433
  call void @ScaleKernelInfo(%struct.KernelInfo* %347, double 1.000000e+00, i32 8192), !dbg !2434
  %348 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2435
  %349 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2436
  %xi406 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %349, i32 0, i32 2, !dbg !2437
  %350 = load double, double* %xi406, align 8, !dbg !2437
  call void @RotateKernelInfo(%struct.KernelInfo* %348, double %350), !dbg !2438
  br label %sw.epilog1834, !dbg !2439

sw.bb407:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i64* %order_f, metadata !2440, metadata !DIExpression()), !dbg !2442
  %351 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2443
  %rho408 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %351, i32 0, i32 0, !dbg !2445
  %352 = load double, double* %rho408, align 8, !dbg !2445
  %cmp409 = fcmp olt double %352, 1.000000e+00, !dbg !2446
  br i1 %cmp409, label %if.then411, label %if.else414, !dbg !2447

if.then411:                                       ; preds = %sw.bb407
  %353 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2448
  %height412 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %353, i32 0, i32 2, !dbg !2449
  store i64 3, i64* %height412, align 8, !dbg !2450
  %354 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2451
  %width413 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %354, i32 0, i32 1, !dbg !2452
  store i64 3, i64* %width413, align 8, !dbg !2453
  br label %if.end421, !dbg !2451

if.else414:                                       ; preds = %sw.bb407
  %355 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2454
  %rho415 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %355, i32 0, i32 0, !dbg !2455
  %356 = load double, double* %rho415, align 8, !dbg !2455
  %conv416 = fptoui double %356 to i64, !dbg !2456
  %mul417 = mul i64 %conv416, 2, !dbg !2457
  %add418 = add i64 %mul417, 1, !dbg !2458
  %357 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2459
  %height419 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %357, i32 0, i32 2, !dbg !2460
  store i64 %add418, i64* %height419, align 8, !dbg !2461
  %358 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2462
  %width420 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %358, i32 0, i32 1, !dbg !2463
  store i64 %add418, i64* %width420, align 8, !dbg !2464
  br label %if.end421

if.end421:                                        ; preds = %if.else414, %if.then411
  %359 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2465
  %width422 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %359, i32 0, i32 1, !dbg !2466
  %360 = load i64, i64* %width422, align 8, !dbg !2466
  %sub423 = sub i64 %360, 1, !dbg !2467
  %div424 = sdiv i64 %sub423, 2, !dbg !2468
  %361 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2469
  %y425 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %361, i32 0, i32 4, !dbg !2470
  store i64 %div424, i64* %y425, align 8, !dbg !2471
  %362 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2472
  %x426 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %362, i32 0, i32 3, !dbg !2473
  store i64 %div424, i64* %x426, align 8, !dbg !2474
  %363 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2475
  %width427 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %363, i32 0, i32 1, !dbg !2476
  %364 = load i64, i64* %width427, align 8, !dbg !2476
  %sub428 = sub i64 %364, 1, !dbg !2477
  %call429 = call i64 @fact(i64 %sub428), !dbg !2478
  store i64 %call429, i64* %order_f, align 8, !dbg !2479
  %365 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2480
  %width430 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %365, i32 0, i32 1, !dbg !2481
  %366 = load i64, i64* %width430, align 8, !dbg !2481
  %367 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2482
  %height431 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %367, i32 0, i32 2, !dbg !2483
  %368 = load i64, i64* %height431, align 8, !dbg !2483
  %mul432 = mul i64 %368, 8, !dbg !2484
  %call433 = call i8* @AcquireAlignedMemory(i64 %366, i64 %mul432) #14, !dbg !2485
  %369 = bitcast i8* %call433 to double*, !dbg !2486
  %370 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2487
  %values434 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %370, i32 0, i32 5, !dbg !2488
  store double* %369, double** %values434, align 8, !dbg !2489
  %371 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2490
  %values435 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %371, i32 0, i32 5, !dbg !2492
  %372 = load double*, double** %values435, align 8, !dbg !2492
  %cmp436 = icmp eq double* %372, null, !dbg !2493
  br i1 %cmp436, label %if.then438, label %if.end440, !dbg !2494

if.then438:                                       ; preds = %if.end421
  %373 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2495
  %call439 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %373), !dbg !2496
  store %struct.KernelInfo* %call439, %struct.KernelInfo** %retval, align 8, !dbg !2497
  br label %return, !dbg !2497

if.end440:                                        ; preds = %if.end421
  store i64 0, i64* %i, align 8, !dbg !2498
  store i64 0, i64* %v, align 8, !dbg !2500
  br label %for.cond441, !dbg !2501

for.cond441:                                      ; preds = %for.inc476, %if.end440
  %374 = load i64, i64* %v, align 8, !dbg !2502
  %375 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2504
  %height442 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %375, i32 0, i32 2, !dbg !2505
  %376 = load i64, i64* %height442, align 8, !dbg !2505
  %cmp443 = icmp slt i64 %374, %376, !dbg !2506
  br i1 %cmp443, label %for.body445, label %for.end478, !dbg !2507

for.body445:                                      ; preds = %for.cond441
  call void @llvm.dbg.declare(metadata i64* %alpha446, metadata !2508, metadata !DIExpression()), !dbg !2510
  %377 = load i64, i64* %order_f, align 8, !dbg !2511
  %378 = load i64, i64* %v, align 8, !dbg !2512
  %call447 = call i64 @fact(i64 %378), !dbg !2513
  %379 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2514
  %height448 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %379, i32 0, i32 2, !dbg !2515
  %380 = load i64, i64* %height448, align 8, !dbg !2515
  %381 = load i64, i64* %v, align 8, !dbg !2516
  %sub449 = sub i64 %380, %381, !dbg !2517
  %sub450 = sub i64 %sub449, 1, !dbg !2518
  %call451 = call i64 @fact(i64 %sub450), !dbg !2519
  %mul452 = mul i64 %call447, %call451, !dbg !2520
  %div453 = udiv i64 %377, %mul452, !dbg !2521
  store i64 %div453, i64* %alpha446, align 8, !dbg !2510
  store i64 0, i64* %u, align 8, !dbg !2522
  br label %for.cond454, !dbg !2524

for.cond454:                                      ; preds = %for.inc472, %for.body445
  %382 = load i64, i64* %u, align 8, !dbg !2525
  %383 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2527
  %width455 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %383, i32 0, i32 1, !dbg !2528
  %384 = load i64, i64* %width455, align 8, !dbg !2528
  %cmp456 = icmp slt i64 %382, %384, !dbg !2529
  br i1 %cmp456, label %for.body458, label %for.end475, !dbg !2530

for.body458:                                      ; preds = %for.cond454
  %385 = load i64, i64* %alpha446, align 8, !dbg !2531
  %386 = load i64, i64* %order_f, align 8, !dbg !2532
  %mul459 = mul i64 %385, %386, !dbg !2533
  %387 = load i64, i64* %u, align 8, !dbg !2534
  %call460 = call i64 @fact(i64 %387), !dbg !2535
  %388 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2536
  %height461 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %388, i32 0, i32 2, !dbg !2537
  %389 = load i64, i64* %height461, align 8, !dbg !2537
  %390 = load i64, i64* %u, align 8, !dbg !2538
  %sub462 = sub i64 %389, %390, !dbg !2539
  %sub463 = sub i64 %sub462, 1, !dbg !2540
  %call464 = call i64 @fact(i64 %sub463), !dbg !2541
  %mul465 = mul i64 %call460, %call464, !dbg !2542
  %div466 = udiv i64 %mul459, %mul465, !dbg !2543
  %conv467 = uitofp i64 %div466 to double, !dbg !2544
  %391 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2545
  %values468 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %391, i32 0, i32 5, !dbg !2546
  %392 = load double*, double** %values468, align 8, !dbg !2546
  %393 = load i64, i64* %i, align 8, !dbg !2547
  %arrayidx469 = getelementptr inbounds double, double* %392, i64 %393, !dbg !2545
  store double %conv467, double* %arrayidx469, align 8, !dbg !2548
  %394 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2549
  %positive_range470 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %394, i32 0, i32 9, !dbg !2550
  %395 = load double, double* %positive_range470, align 8, !dbg !2551
  %add471 = fadd double %395, %conv467, !dbg !2551
  store double %add471, double* %positive_range470, align 8, !dbg !2551
  br label %for.inc472, !dbg !2549

for.inc472:                                       ; preds = %for.body458
  %396 = load i64, i64* %u, align 8, !dbg !2552
  %inc473 = add nsw i64 %396, 1, !dbg !2552
  store i64 %inc473, i64* %u, align 8, !dbg !2552
  %397 = load i64, i64* %i, align 8, !dbg !2553
  %inc474 = add nsw i64 %397, 1, !dbg !2553
  store i64 %inc474, i64* %i, align 8, !dbg !2553
  br label %for.cond454, !dbg !2554, !llvm.loop !2555

for.end475:                                       ; preds = %for.cond454
  br label %for.inc476, !dbg !2557

for.inc476:                                       ; preds = %for.end475
  %398 = load i64, i64* %v, align 8, !dbg !2558
  %inc477 = add nsw i64 %398, 1, !dbg !2558
  store i64 %inc477, i64* %v, align 8, !dbg !2558
  br label %for.cond441, !dbg !2559, !llvm.loop !2560

for.end478:                                       ; preds = %for.cond441
  %399 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2562
  %minimum479 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %399, i32 0, i32 6, !dbg !2563
  store double 1.000000e+00, double* %minimum479, align 8, !dbg !2564
  %400 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2565
  %values480 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %400, i32 0, i32 5, !dbg !2566
  %401 = load double*, double** %values480, align 8, !dbg !2566
  %402 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2567
  %x481 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %402, i32 0, i32 3, !dbg !2568
  %403 = load i64, i64* %x481, align 8, !dbg !2568
  %404 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2569
  %y482 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %404, i32 0, i32 4, !dbg !2570
  %405 = load i64, i64* %y482, align 8, !dbg !2570
  %406 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2571
  %width483 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %406, i32 0, i32 1, !dbg !2572
  %407 = load i64, i64* %width483, align 8, !dbg !2572
  %mul484 = mul i64 %405, %407, !dbg !2573
  %add485 = add i64 %403, %mul484, !dbg !2574
  %arrayidx486 = getelementptr inbounds double, double* %401, i64 %add485, !dbg !2565
  %408 = load double, double* %arrayidx486, align 8, !dbg !2565
  %409 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2575
  %maximum487 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %409, i32 0, i32 7, !dbg !2576
  store double %408, double* %maximum487, align 8, !dbg !2577
  %410 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2578
  %negative_range488 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %410, i32 0, i32 8, !dbg !2579
  store double 0.000000e+00, double* %negative_range488, align 8, !dbg !2580
  br label %sw.epilog1834, !dbg !2581

sw.bb489:                                         ; preds = %sw.epilog
  %411 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2582
  %rho490 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %411, i32 0, i32 0, !dbg !2584
  %412 = load double, double* %rho490, align 8, !dbg !2584
  %conv491 = fptosi double %412 to i32, !dbg !2585
  switch i32 %conv491, label %sw.default493 [
    i32 0, label %sw.bb492
    i32 1, label %sw.bb495
    i32 2, label %sw.bb497
    i32 3, label %sw.bb499
    i32 5, label %sw.bb501
    i32 7, label %sw.bb503
    i32 15, label %sw.bb505
    i32 19, label %sw.bb507
  ], !dbg !2586

sw.bb492:                                         ; preds = %sw.bb489
  br label %sw.default493, !dbg !2587

sw.default493:                                    ; preds = %sw.bb489, %sw.bb492
  %call494 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)), !dbg !2588
  store %struct.KernelInfo* %call494, %struct.KernelInfo** %kernel, align 8, !dbg !2590
  br label %sw.epilog509, !dbg !2591

sw.bb495:                                         ; preds = %sw.bb489
  %call496 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)), !dbg !2592
  store %struct.KernelInfo* %call496, %struct.KernelInfo** %kernel, align 8, !dbg !2593
  br label %sw.epilog509, !dbg !2594

sw.bb497:                                         ; preds = %sw.bb489
  %call498 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)), !dbg !2595
  store %struct.KernelInfo* %call498, %struct.KernelInfo** %kernel, align 8, !dbg !2596
  br label %sw.epilog509, !dbg !2597

sw.bb499:                                         ; preds = %sw.bb489
  %call500 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)), !dbg !2598
  store %struct.KernelInfo* %call500, %struct.KernelInfo** %kernel, align 8, !dbg !2599
  br label %sw.epilog509, !dbg !2600

sw.bb501:                                         ; preds = %sw.bb489
  %call502 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.4, i64 0, i64 0)), !dbg !2601
  store %struct.KernelInfo* %call502, %struct.KernelInfo** %kernel, align 8, !dbg !2602
  br label %sw.epilog509, !dbg !2603

sw.bb503:                                         ; preds = %sw.bb489
  %call504 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.5, i64 0, i64 0)), !dbg !2604
  store %struct.KernelInfo* %call504, %struct.KernelInfo** %kernel, align 8, !dbg !2605
  br label %sw.epilog509, !dbg !2606

sw.bb505:                                         ; preds = %sw.bb489
  %call506 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0)), !dbg !2607
  store %struct.KernelInfo* %call506, %struct.KernelInfo** %kernel, align 8, !dbg !2608
  br label %sw.epilog509, !dbg !2609

sw.bb507:                                         ; preds = %sw.bb489
  %call508 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([250 x i8], [250 x i8]* @.str.7, i64 0, i64 0)), !dbg !2610
  store %struct.KernelInfo* %call508, %struct.KernelInfo** %kernel, align 8, !dbg !2611
  br label %sw.epilog509, !dbg !2612

sw.epilog509:                                     ; preds = %sw.bb507, %sw.bb505, %sw.bb503, %sw.bb501, %sw.bb499, %sw.bb497, %sw.bb495, %sw.default493
  %413 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2613
  %cmp510 = icmp eq %struct.KernelInfo* %413, null, !dbg !2615
  br i1 %cmp510, label %if.then512, label %if.end513, !dbg !2616

if.then512:                                       ; preds = %sw.epilog509
  %414 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2617
  store %struct.KernelInfo* %414, %struct.KernelInfo** %retval, align 8, !dbg !2618
  br label %return, !dbg !2618

if.end513:                                        ; preds = %sw.epilog509
  %415 = load i32, i32* %type.addr, align 4, !dbg !2619
  %416 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2620
  %type514 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %416, i32 0, i32 0, !dbg !2621
  store i32 %415, i32* %type514, align 8, !dbg !2622
  br label %sw.epilog1834, !dbg !2623

sw.bb515:                                         ; preds = %sw.epilog
  %call516 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)), !dbg !2624
  store %struct.KernelInfo* %call516, %struct.KernelInfo** %kernel, align 8, !dbg !2626
  %417 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2627
  %cmp517 = icmp eq %struct.KernelInfo* %417, null, !dbg !2629
  br i1 %cmp517, label %if.then519, label %if.end520, !dbg !2630

if.then519:                                       ; preds = %sw.bb515
  %418 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2631
  store %struct.KernelInfo* %418, %struct.KernelInfo** %retval, align 8, !dbg !2632
  br label %return, !dbg !2632

if.end520:                                        ; preds = %sw.bb515
  %419 = load i32, i32* %type.addr, align 4, !dbg !2633
  %420 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2634
  %type521 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %420, i32 0, i32 0, !dbg !2635
  store i32 %419, i32* %type521, align 8, !dbg !2636
  %421 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2637
  %422 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2638
  %rho522 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %422, i32 0, i32 0, !dbg !2639
  %423 = load double, double* %rho522, align 8, !dbg !2639
  call void @RotateKernelInfo(%struct.KernelInfo* %421, double %423), !dbg !2640
  br label %sw.epilog1834, !dbg !2641

sw.bb523:                                         ; preds = %sw.epilog
  %call524 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)), !dbg !2642
  store %struct.KernelInfo* %call524, %struct.KernelInfo** %kernel, align 8, !dbg !2644
  %424 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2645
  %cmp525 = icmp eq %struct.KernelInfo* %424, null, !dbg !2647
  br i1 %cmp525, label %if.then527, label %if.end528, !dbg !2648

if.then527:                                       ; preds = %sw.bb523
  %425 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2649
  store %struct.KernelInfo* %425, %struct.KernelInfo** %retval, align 8, !dbg !2650
  br label %return, !dbg !2650

if.end528:                                        ; preds = %sw.bb523
  %426 = load i32, i32* %type.addr, align 4, !dbg !2651
  %427 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2652
  %type529 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %427, i32 0, i32 0, !dbg !2653
  store i32 %426, i32* %type529, align 8, !dbg !2654
  %428 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2655
  %429 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2656
  %rho530 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %429, i32 0, i32 0, !dbg !2657
  %430 = load double, double* %rho530, align 8, !dbg !2657
  call void @RotateKernelInfo(%struct.KernelInfo* %428, double %430), !dbg !2658
  br label %sw.epilog1834, !dbg !2659

sw.bb531:                                         ; preds = %sw.epilog
  %call532 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)), !dbg !2660
  store %struct.KernelInfo* %call532, %struct.KernelInfo** %kernel, align 8, !dbg !2662
  %431 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2663
  %cmp533 = icmp eq %struct.KernelInfo* %431, null, !dbg !2665
  br i1 %cmp533, label %if.then535, label %if.end536, !dbg !2666

if.then535:                                       ; preds = %sw.bb531
  %432 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2667
  store %struct.KernelInfo* %432, %struct.KernelInfo** %retval, align 8, !dbg !2668
  br label %return, !dbg !2668

if.end536:                                        ; preds = %sw.bb531
  %433 = load i32, i32* %type.addr, align 4, !dbg !2669
  %434 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2670
  %type537 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %434, i32 0, i32 0, !dbg !2671
  store i32 %433, i32* %type537, align 8, !dbg !2672
  %435 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2673
  %436 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2674
  %rho538 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %436, i32 0, i32 0, !dbg !2675
  %437 = load double, double* %rho538, align 8, !dbg !2675
  call void @RotateKernelInfo(%struct.KernelInfo* %435, double %437), !dbg !2676
  br label %sw.epilog1834, !dbg !2677

sw.bb539:                                         ; preds = %sw.epilog
  %call540 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)), !dbg !2678
  store %struct.KernelInfo* %call540, %struct.KernelInfo** %kernel, align 8, !dbg !2680
  %438 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2681
  %cmp541 = icmp eq %struct.KernelInfo* %438, null, !dbg !2683
  br i1 %cmp541, label %if.then543, label %if.end544, !dbg !2684

if.then543:                                       ; preds = %sw.bb539
  %439 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2685
  store %struct.KernelInfo* %439, %struct.KernelInfo** %retval, align 8, !dbg !2686
  br label %return, !dbg !2686

if.end544:                                        ; preds = %sw.bb539
  %440 = load i32, i32* %type.addr, align 4, !dbg !2687
  %441 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2688
  %type545 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %441, i32 0, i32 0, !dbg !2689
  store i32 %440, i32* %type545, align 8, !dbg !2690
  %442 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2691
  %443 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2692
  %rho546 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %443, i32 0, i32 0, !dbg !2693
  %444 = load double, double* %rho546, align 8, !dbg !2693
  call void @RotateKernelInfo(%struct.KernelInfo* %442, double %444), !dbg !2694
  br label %sw.epilog1834, !dbg !2695

sw.bb547:                                         ; preds = %sw.epilog
  %call548 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0)), !dbg !2696
  store %struct.KernelInfo* %call548, %struct.KernelInfo** %kernel, align 8, !dbg !2698
  %445 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2699
  %cmp549 = icmp eq %struct.KernelInfo* %445, null, !dbg !2701
  br i1 %cmp549, label %if.then551, label %if.end552, !dbg !2702

if.then551:                                       ; preds = %sw.bb547
  %446 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2703
  store %struct.KernelInfo* %446, %struct.KernelInfo** %retval, align 8, !dbg !2704
  br label %return, !dbg !2704

if.end552:                                        ; preds = %sw.bb547
  %447 = load i32, i32* %type.addr, align 4, !dbg !2705
  %448 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2706
  %type553 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %448, i32 0, i32 0, !dbg !2707
  store i32 %447, i32* %type553, align 8, !dbg !2708
  %449 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2709
  %450 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2710
  %rho554 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %450, i32 0, i32 0, !dbg !2711
  %451 = load double, double* %rho554, align 8, !dbg !2711
  call void @RotateKernelInfo(%struct.KernelInfo* %449, double %451), !dbg !2712
  br label %sw.epilog1834, !dbg !2713

sw.bb555:                                         ; preds = %sw.epilog
  %452 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2714
  %rho556 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %452, i32 0, i32 0, !dbg !2716
  %453 = load double, double* %rho556, align 8, !dbg !2716
  %conv557 = fptosi double %453 to i32, !dbg !2717
  switch i32 %conv557, label %sw.default558 [
    i32 0, label %sw.bb559
    i32 2, label %sw.bb570
    i32 10, label %sw.bb585
    i32 1, label %sw.bb591
    i32 11, label %sw.bb591
    i32 12, label %sw.bb602
    i32 13, label %sw.bb613
    i32 14, label %sw.bb624
    i32 15, label %sw.bb635
    i32 16, label %sw.bb642
    i32 17, label %sw.bb649
    i32 18, label %sw.bb656
    i32 19, label %sw.bb663
  ], !dbg !2718

sw.default558:                                    ; preds = %sw.bb555
  br label %sw.bb559, !dbg !2719

sw.bb559:                                         ; preds = %sw.bb555, %sw.default558
  %call560 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)), !dbg !2720
  store %struct.KernelInfo* %call560, %struct.KernelInfo** %kernel, align 8, !dbg !2722
  %454 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2723
  %cmp561 = icmp eq %struct.KernelInfo* %454, null, !dbg !2725
  br i1 %cmp561, label %if.then563, label %if.end564, !dbg !2726

if.then563:                                       ; preds = %sw.bb559
  %455 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2727
  store %struct.KernelInfo* %455, %struct.KernelInfo** %retval, align 8, !dbg !2728
  br label %return, !dbg !2728

if.end564:                                        ; preds = %sw.bb559
  %456 = load i32, i32* %type.addr, align 4, !dbg !2729
  %457 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2730
  %type565 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %457, i32 0, i32 0, !dbg !2731
  store i32 %456, i32* %type565, align 8, !dbg !2732
  %458 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2733
  %values566 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %458, i32 0, i32 5, !dbg !2734
  %459 = load double*, double** %values566, align 8, !dbg !2734
  %arrayidx567 = getelementptr inbounds double, double* %459, i64 3, !dbg !2733
  store double 0x3FF6A09E667F3BCD, double* %arrayidx567, align 8, !dbg !2735
  %460 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2736
  %values568 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %460, i32 0, i32 5, !dbg !2737
  %461 = load double*, double** %values568, align 8, !dbg !2737
  %arrayidx569 = getelementptr inbounds double, double* %461, i64 5, !dbg !2736
  store double 0xBFF6A09E667F3BCD, double* %arrayidx569, align 8, !dbg !2738
  %462 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2739
  call void @CalcKernelMetaData(%struct.KernelInfo* %462), !dbg !2740
  br label %sw.epilog670, !dbg !2741

sw.bb570:                                         ; preds = %sw.bb555
  %call571 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)), !dbg !2742
  store %struct.KernelInfo* %call571, %struct.KernelInfo** %kernel, align 8, !dbg !2743
  %463 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2744
  %cmp572 = icmp eq %struct.KernelInfo* %463, null, !dbg !2746
  br i1 %cmp572, label %if.then574, label %if.end575, !dbg !2747

if.then574:                                       ; preds = %sw.bb570
  %464 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2748
  store %struct.KernelInfo* %464, %struct.KernelInfo** %retval, align 8, !dbg !2749
  br label %return, !dbg !2749

if.end575:                                        ; preds = %sw.bb570
  %465 = load i32, i32* %type.addr, align 4, !dbg !2750
  %466 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2751
  %type576 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %466, i32 0, i32 0, !dbg !2752
  store i32 %465, i32* %type576, align 8, !dbg !2753
  %467 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2754
  %values577 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %467, i32 0, i32 5, !dbg !2755
  %468 = load double*, double** %values577, align 8, !dbg !2755
  %arrayidx578 = getelementptr inbounds double, double* %468, i64 3, !dbg !2754
  store double 0x3FF6A09E667F3BCD, double* %arrayidx578, align 8, !dbg !2756
  %469 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2757
  %values579 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %469, i32 0, i32 5, !dbg !2758
  %470 = load double*, double** %values579, align 8, !dbg !2758
  %arrayidx580 = getelementptr inbounds double, double* %470, i64 1, !dbg !2757
  store double 0x3FF6A09E667F3BCD, double* %arrayidx580, align 8, !dbg !2759
  %471 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2760
  %values581 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %471, i32 0, i32 5, !dbg !2761
  %472 = load double*, double** %values581, align 8, !dbg !2761
  %arrayidx582 = getelementptr inbounds double, double* %472, i64 7, !dbg !2760
  store double 0xBFF6A09E667F3BCD, double* %arrayidx582, align 8, !dbg !2762
  %473 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2763
  %values583 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %473, i32 0, i32 5, !dbg !2764
  %474 = load double*, double** %values583, align 8, !dbg !2764
  %arrayidx584 = getelementptr inbounds double, double* %474, i64 5, !dbg !2763
  store double 0xBFF6A09E667F3BCD, double* %arrayidx584, align 8, !dbg !2765
  %475 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2766
  call void @CalcKernelMetaData(%struct.KernelInfo* %475), !dbg !2767
  %476 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2768
  call void @ScaleKernelInfo(%struct.KernelInfo* %476, double 0x3FE6A09E667F3BCD, i32 0), !dbg !2769
  br label %sw.epilog670, !dbg !2770

sw.bb585:                                         ; preds = %sw.bb555
  %call586 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.14, i64 0, i64 0)), !dbg !2771
  store %struct.KernelInfo* %call586, %struct.KernelInfo** %kernel, align 8, !dbg !2772
  %477 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2773
  %cmp587 = icmp eq %struct.KernelInfo* %477, null, !dbg !2775
  br i1 %cmp587, label %if.then589, label %if.end590, !dbg !2776

if.then589:                                       ; preds = %sw.bb585
  %478 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2777
  store %struct.KernelInfo* %478, %struct.KernelInfo** %retval, align 8, !dbg !2778
  br label %return, !dbg !2778

if.end590:                                        ; preds = %sw.bb585
  br label %sw.epilog670, !dbg !2779

sw.bb591:                                         ; preds = %sw.bb555, %sw.bb555
  %call592 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)), !dbg !2780
  store %struct.KernelInfo* %call592, %struct.KernelInfo** %kernel, align 8, !dbg !2781
  %479 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2782
  %cmp593 = icmp eq %struct.KernelInfo* %479, null, !dbg !2784
  br i1 %cmp593, label %if.then595, label %if.end596, !dbg !2785

if.then595:                                       ; preds = %sw.bb591
  %480 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2786
  store %struct.KernelInfo* %480, %struct.KernelInfo** %retval, align 8, !dbg !2787
  br label %return, !dbg !2787

if.end596:                                        ; preds = %sw.bb591
  %481 = load i32, i32* %type.addr, align 4, !dbg !2788
  %482 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2789
  %type597 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %482, i32 0, i32 0, !dbg !2790
  store i32 %481, i32* %type597, align 8, !dbg !2791
  %483 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2792
  %values598 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %483, i32 0, i32 5, !dbg !2793
  %484 = load double*, double** %values598, align 8, !dbg !2793
  %arrayidx599 = getelementptr inbounds double, double* %484, i64 3, !dbg !2792
  store double 0x3FF6A09E667F3BCD, double* %arrayidx599, align 8, !dbg !2794
  %485 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2795
  %values600 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %485, i32 0, i32 5, !dbg !2796
  %486 = load double*, double** %values600, align 8, !dbg !2796
  %arrayidx601 = getelementptr inbounds double, double* %486, i64 5, !dbg !2795
  store double 0xBFF6A09E667F3BCD, double* %arrayidx601, align 8, !dbg !2797
  %487 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2798
  call void @CalcKernelMetaData(%struct.KernelInfo* %487), !dbg !2799
  %488 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2800
  call void @ScaleKernelInfo(%struct.KernelInfo* %488, double 0x3FE6A09E667F3BCD, i32 0), !dbg !2801
  br label %sw.epilog670, !dbg !2802

sw.bb602:                                         ; preds = %sw.bb555
  %call603 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)), !dbg !2803
  store %struct.KernelInfo* %call603, %struct.KernelInfo** %kernel, align 8, !dbg !2804
  %489 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2805
  %cmp604 = icmp eq %struct.KernelInfo* %489, null, !dbg !2807
  br i1 %cmp604, label %if.then606, label %if.end607, !dbg !2808

if.then606:                                       ; preds = %sw.bb602
  %490 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2809
  store %struct.KernelInfo* %490, %struct.KernelInfo** %retval, align 8, !dbg !2810
  br label %return, !dbg !2810

if.end607:                                        ; preds = %sw.bb602
  %491 = load i32, i32* %type.addr, align 4, !dbg !2811
  %492 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2812
  %type608 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %492, i32 0, i32 0, !dbg !2813
  store i32 %491, i32* %type608, align 8, !dbg !2814
  %493 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2815
  %values609 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %493, i32 0, i32 5, !dbg !2816
  %494 = load double*, double** %values609, align 8, !dbg !2816
  %arrayidx610 = getelementptr inbounds double, double* %494, i64 1, !dbg !2815
  store double 0x3FF6A09E667F3BCD, double* %arrayidx610, align 8, !dbg !2817
  %495 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2818
  %values611 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %495, i32 0, i32 5, !dbg !2819
  %496 = load double*, double** %values611, align 8, !dbg !2819
  %arrayidx612 = getelementptr inbounds double, double* %496, i64 7, !dbg !2818
  store double 0x3FF6A09E667F3BCD, double* %arrayidx612, align 8, !dbg !2820
  %497 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2821
  call void @CalcKernelMetaData(%struct.KernelInfo* %497), !dbg !2822
  %498 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2823
  call void @ScaleKernelInfo(%struct.KernelInfo* %498, double 0x3FE6A09E667F3BCD, i32 0), !dbg !2824
  br label %sw.epilog670, !dbg !2825

sw.bb613:                                         ; preds = %sw.bb555
  %call614 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)), !dbg !2826
  store %struct.KernelInfo* %call614, %struct.KernelInfo** %kernel, align 8, !dbg !2827
  %499 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2828
  %cmp615 = icmp eq %struct.KernelInfo* %499, null, !dbg !2830
  br i1 %cmp615, label %if.then617, label %if.end618, !dbg !2831

if.then617:                                       ; preds = %sw.bb613
  %500 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2832
  store %struct.KernelInfo* %500, %struct.KernelInfo** %retval, align 8, !dbg !2833
  br label %return, !dbg !2833

if.end618:                                        ; preds = %sw.bb613
  %501 = load i32, i32* %type.addr, align 4, !dbg !2834
  %502 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2835
  %type619 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %502, i32 0, i32 0, !dbg !2836
  store i32 %501, i32* %type619, align 8, !dbg !2837
  %503 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2838
  %values620 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %503, i32 0, i32 5, !dbg !2839
  %504 = load double*, double** %values620, align 8, !dbg !2839
  %arrayidx621 = getelementptr inbounds double, double* %504, i64 0, !dbg !2838
  store double 0x3FF6A09E667F3BCD, double* %arrayidx621, align 8, !dbg !2840
  %505 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2841
  %values622 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %505, i32 0, i32 5, !dbg !2842
  %506 = load double*, double** %values622, align 8, !dbg !2842
  %arrayidx623 = getelementptr inbounds double, double* %506, i64 8, !dbg !2841
  store double 0xBFF6A09E667F3BCD, double* %arrayidx623, align 8, !dbg !2843
  %507 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2844
  call void @CalcKernelMetaData(%struct.KernelInfo* %507), !dbg !2845
  %508 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2846
  call void @ScaleKernelInfo(%struct.KernelInfo* %508, double 0x3FE6A09E667F3BCD, i32 0), !dbg !2847
  br label %sw.epilog670, !dbg !2848

sw.bb624:                                         ; preds = %sw.bb555
  %call625 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0)), !dbg !2849
  store %struct.KernelInfo* %call625, %struct.KernelInfo** %kernel, align 8, !dbg !2850
  %509 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2851
  %cmp626 = icmp eq %struct.KernelInfo* %509, null, !dbg !2853
  br i1 %cmp626, label %if.then628, label %if.end629, !dbg !2854

if.then628:                                       ; preds = %sw.bb624
  %510 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2855
  store %struct.KernelInfo* %510, %struct.KernelInfo** %retval, align 8, !dbg !2856
  br label %return, !dbg !2856

if.end629:                                        ; preds = %sw.bb624
  %511 = load i32, i32* %type.addr, align 4, !dbg !2857
  %512 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2858
  %type630 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %512, i32 0, i32 0, !dbg !2859
  store i32 %511, i32* %type630, align 8, !dbg !2860
  %513 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2861
  %values631 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %513, i32 0, i32 5, !dbg !2862
  %514 = load double*, double** %values631, align 8, !dbg !2862
  %arrayidx632 = getelementptr inbounds double, double* %514, i64 2, !dbg !2861
  store double 0xBFF6A09E667F3BCD, double* %arrayidx632, align 8, !dbg !2863
  %515 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2864
  %values633 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %515, i32 0, i32 5, !dbg !2865
  %516 = load double*, double** %values633, align 8, !dbg !2865
  %arrayidx634 = getelementptr inbounds double, double* %516, i64 6, !dbg !2864
  store double 0x3FF6A09E667F3BCD, double* %arrayidx634, align 8, !dbg !2866
  %517 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2867
  call void @CalcKernelMetaData(%struct.KernelInfo* %517), !dbg !2868
  %518 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2869
  call void @ScaleKernelInfo(%struct.KernelInfo* %518, double 0x3FE6A09E667F3BCD, i32 0), !dbg !2870
  br label %sw.epilog670, !dbg !2871

sw.bb635:                                         ; preds = %sw.bb555
  %call636 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0)), !dbg !2872
  store %struct.KernelInfo* %call636, %struct.KernelInfo** %kernel, align 8, !dbg !2873
  %519 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2874
  %cmp637 = icmp eq %struct.KernelInfo* %519, null, !dbg !2876
  br i1 %cmp637, label %if.then639, label %if.end640, !dbg !2877

if.then639:                                       ; preds = %sw.bb635
  %520 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2878
  store %struct.KernelInfo* %520, %struct.KernelInfo** %retval, align 8, !dbg !2879
  br label %return, !dbg !2879

if.end640:                                        ; preds = %sw.bb635
  %521 = load i32, i32* %type.addr, align 4, !dbg !2880
  %522 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2881
  %type641 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %522, i32 0, i32 0, !dbg !2882
  store i32 %521, i32* %type641, align 8, !dbg !2883
  %523 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2884
  call void @ScaleKernelInfo(%struct.KernelInfo* %523, double 5.000000e-01, i32 0), !dbg !2885
  br label %sw.epilog670, !dbg !2886

sw.bb642:                                         ; preds = %sw.bb555
  %call643 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0)), !dbg !2887
  store %struct.KernelInfo* %call643, %struct.KernelInfo** %kernel, align 8, !dbg !2888
  %524 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2889
  %cmp644 = icmp eq %struct.KernelInfo* %524, null, !dbg !2891
  br i1 %cmp644, label %if.then646, label %if.end647, !dbg !2892

if.then646:                                       ; preds = %sw.bb642
  %525 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2893
  store %struct.KernelInfo* %525, %struct.KernelInfo** %retval, align 8, !dbg !2894
  br label %return, !dbg !2894

if.end647:                                        ; preds = %sw.bb642
  %526 = load i32, i32* %type.addr, align 4, !dbg !2895
  %527 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2896
  %type648 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %527, i32 0, i32 0, !dbg !2897
  store i32 %526, i32* %type648, align 8, !dbg !2898
  %528 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2899
  call void @ScaleKernelInfo(%struct.KernelInfo* %528, double 5.000000e-01, i32 0), !dbg !2900
  br label %sw.epilog670, !dbg !2901

sw.bb649:                                         ; preds = %sw.bb555
  %call650 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0)), !dbg !2902
  store %struct.KernelInfo* %call650, %struct.KernelInfo** %kernel, align 8, !dbg !2903
  %529 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2904
  %cmp651 = icmp eq %struct.KernelInfo* %529, null, !dbg !2906
  br i1 %cmp651, label %if.then653, label %if.end654, !dbg !2907

if.then653:                                       ; preds = %sw.bb649
  %530 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2908
  store %struct.KernelInfo* %530, %struct.KernelInfo** %retval, align 8, !dbg !2909
  br label %return, !dbg !2909

if.end654:                                        ; preds = %sw.bb649
  %531 = load i32, i32* %type.addr, align 4, !dbg !2910
  %532 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2911
  %type655 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %532, i32 0, i32 0, !dbg !2912
  store i32 %531, i32* %type655, align 8, !dbg !2913
  %533 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2914
  call void @ScaleKernelInfo(%struct.KernelInfo* %533, double 0x3FC5555555555555, i32 0), !dbg !2915
  br label %sw.epilog670, !dbg !2916

sw.bb656:                                         ; preds = %sw.bb555
  %call657 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)), !dbg !2917
  store %struct.KernelInfo* %call657, %struct.KernelInfo** %kernel, align 8, !dbg !2918
  %534 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2919
  %cmp658 = icmp eq %struct.KernelInfo* %534, null, !dbg !2921
  br i1 %cmp658, label %if.then660, label %if.end661, !dbg !2922

if.then660:                                       ; preds = %sw.bb656
  %535 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2923
  store %struct.KernelInfo* %535, %struct.KernelInfo** %retval, align 8, !dbg !2924
  br label %return, !dbg !2924

if.end661:                                        ; preds = %sw.bb656
  %536 = load i32, i32* %type.addr, align 4, !dbg !2925
  %537 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2926
  %type662 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %537, i32 0, i32 0, !dbg !2927
  store i32 %536, i32* %type662, align 8, !dbg !2928
  %538 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2929
  call void @ScaleKernelInfo(%struct.KernelInfo* %538, double 0x3FC5555555555555, i32 0), !dbg !2930
  br label %sw.epilog670, !dbg !2931

sw.bb663:                                         ; preds = %sw.bb555
  %call664 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)), !dbg !2932
  store %struct.KernelInfo* %call664, %struct.KernelInfo** %kernel, align 8, !dbg !2933
  %539 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2934
  %cmp665 = icmp eq %struct.KernelInfo* %539, null, !dbg !2936
  br i1 %cmp665, label %if.then667, label %if.end668, !dbg !2937

if.then667:                                       ; preds = %sw.bb663
  %540 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2938
  store %struct.KernelInfo* %540, %struct.KernelInfo** %retval, align 8, !dbg !2939
  br label %return, !dbg !2939

if.end668:                                        ; preds = %sw.bb663
  %541 = load i32, i32* %type.addr, align 4, !dbg !2940
  %542 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2941
  %type669 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %542, i32 0, i32 0, !dbg !2942
  store i32 %541, i32* %type669, align 8, !dbg !2943
  %543 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2944
  call void @ScaleKernelInfo(%struct.KernelInfo* %543, double 0x3FD5555555555555, i32 0), !dbg !2945
  br label %sw.epilog670, !dbg !2946

sw.epilog670:                                     ; preds = %if.end668, %if.end661, %if.end654, %if.end647, %if.end640, %if.end629, %if.end618, %if.end607, %if.end596, %if.end590, %if.end575, %if.end564
  %544 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2947
  %sigma671 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %544, i32 0, i32 1, !dbg !2949
  %545 = load double, double* %sigma671, align 8, !dbg !2949
  %546 = call double @llvm.fabs.f64(double %545), !dbg !2950
  %cmp672 = fcmp oge double %546, 1.000000e-15, !dbg !2951
  br i1 %cmp672, label %if.then674, label %if.else676, !dbg !2952

if.then674:                                       ; preds = %sw.epilog670
  %547 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2953
  %548 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2954
  %sigma675 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %548, i32 0, i32 1, !dbg !2955
  %549 = load double, double* %sigma675, align 8, !dbg !2955
  call void @RotateKernelInfo(%struct.KernelInfo* %547, double %549), !dbg !2956
  br label %if.end687, !dbg !2956

if.else676:                                       ; preds = %sw.epilog670
  %550 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2957
  %rho677 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %550, i32 0, i32 0, !dbg !2959
  %551 = load double, double* %rho677, align 8, !dbg !2959
  %cmp678 = fcmp ogt double %551, 3.000000e+01, !dbg !2960
  br i1 %cmp678, label %if.then684, label %lor.lhs.false680, !dbg !2961

lor.lhs.false680:                                 ; preds = %if.else676
  %552 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2962
  %rho681 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %552, i32 0, i32 0, !dbg !2963
  %553 = load double, double* %rho681, align 8, !dbg !2963
  %cmp682 = fcmp olt double %553, -3.000000e+01, !dbg !2964
  br i1 %cmp682, label %if.then684, label %if.end686, !dbg !2965

if.then684:                                       ; preds = %lor.lhs.false680, %if.else676
  %554 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2966
  %555 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2967
  %rho685 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %555, i32 0, i32 0, !dbg !2968
  %556 = load double, double* %rho685, align 8, !dbg !2968
  call void @RotateKernelInfo(%struct.KernelInfo* %554, double %556), !dbg !2969
  br label %if.end686, !dbg !2969

if.end686:                                        ; preds = %if.then684, %lor.lhs.false680
  br label %if.end687

if.end687:                                        ; preds = %if.end686, %if.then674
  br label %sw.epilog1834, !dbg !2970

sw.bb688:                                         ; preds = %sw.epilog
  %557 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2971
  %rho689 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %557, i32 0, i32 0, !dbg !2974
  %558 = load double, double* %rho689, align 8, !dbg !2974
  %cmp690 = fcmp olt double %558, 1.000000e+00, !dbg !2975
  br i1 %cmp690, label %if.then692, label %if.else695, !dbg !2976

if.then692:                                       ; preds = %sw.bb688
  %559 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2977
  %height693 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %559, i32 0, i32 2, !dbg !2978
  store i64 3, i64* %height693, align 8, !dbg !2979
  %560 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2980
  %width694 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %560, i32 0, i32 1, !dbg !2981
  store i64 3, i64* %width694, align 8, !dbg !2982
  br label %if.end702, !dbg !2980

if.else695:                                       ; preds = %sw.bb688
  %561 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !2983
  %rho696 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %561, i32 0, i32 0, !dbg !2984
  %562 = load double, double* %rho696, align 8, !dbg !2984
  %conv697 = fptoui double %562 to i64, !dbg !2985
  %mul698 = mul i64 %conv697, 2, !dbg !2986
  %add699 = add i64 %mul698, 1, !dbg !2987
  %563 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2988
  %height700 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %563, i32 0, i32 2, !dbg !2989
  store i64 %add699, i64* %height700, align 8, !dbg !2990
  %564 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2991
  %width701 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %564, i32 0, i32 1, !dbg !2992
  store i64 %add699, i64* %width701, align 8, !dbg !2993
  br label %if.end702

if.end702:                                        ; preds = %if.else695, %if.then692
  %565 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2994
  %width703 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %565, i32 0, i32 1, !dbg !2995
  %566 = load i64, i64* %width703, align 8, !dbg !2995
  %sub704 = sub i64 %566, 1, !dbg !2996
  %div705 = sdiv i64 %sub704, 2, !dbg !2997
  %567 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !2998
  %y706 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %567, i32 0, i32 4, !dbg !2999
  store i64 %div705, i64* %y706, align 8, !dbg !3000
  %568 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3001
  %x707 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %568, i32 0, i32 3, !dbg !3002
  store i64 %div705, i64* %x707, align 8, !dbg !3003
  %569 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3004
  %width708 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %569, i32 0, i32 1, !dbg !3005
  %570 = load i64, i64* %width708, align 8, !dbg !3005
  %571 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3006
  %height709 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %571, i32 0, i32 2, !dbg !3007
  %572 = load i64, i64* %height709, align 8, !dbg !3007
  %mul710 = mul i64 %572, 8, !dbg !3008
  %call711 = call i8* @AcquireAlignedMemory(i64 %570, i64 %mul710) #14, !dbg !3009
  %573 = bitcast i8* %call711 to double*, !dbg !3010
  %574 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3011
  %values712 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %574, i32 0, i32 5, !dbg !3012
  store double* %573, double** %values712, align 8, !dbg !3013
  %575 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3014
  %values713 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %575, i32 0, i32 5, !dbg !3016
  %576 = load double*, double** %values713, align 8, !dbg !3016
  %cmp714 = icmp eq double* %576, null, !dbg !3017
  br i1 %cmp714, label %if.then716, label %if.end718, !dbg !3018

if.then716:                                       ; preds = %if.end702
  %577 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3019
  %call717 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %577), !dbg !3020
  store %struct.KernelInfo* %call717, %struct.KernelInfo** %retval, align 8, !dbg !3021
  br label %return, !dbg !3021

if.end718:                                        ; preds = %if.end702
  store i64 0, i64* %i, align 8, !dbg !3022
  %578 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3024
  %y719 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %578, i32 0, i32 4, !dbg !3025
  %579 = load i64, i64* %y719, align 8, !dbg !3025
  %sub720 = sub nsw i64 0, %579, !dbg !3026
  store i64 %sub720, i64* %v, align 8, !dbg !3027
  br label %for.cond721, !dbg !3028

for.cond721:                                      ; preds = %for.inc753, %if.end718
  %580 = load i64, i64* %v, align 8, !dbg !3029
  %581 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3031
  %y722 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %581, i32 0, i32 4, !dbg !3032
  %582 = load i64, i64* %y722, align 8, !dbg !3032
  %cmp723 = icmp sle i64 %580, %582, !dbg !3033
  br i1 %cmp723, label %for.body725, label %for.end755, !dbg !3034

for.body725:                                      ; preds = %for.cond721
  %583 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3035
  %x726 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %583, i32 0, i32 3, !dbg !3037
  %584 = load i64, i64* %x726, align 8, !dbg !3037
  %sub727 = sub nsw i64 0, %584, !dbg !3038
  store i64 %sub727, i64* %u, align 8, !dbg !3039
  br label %for.cond728, !dbg !3040

for.cond728:                                      ; preds = %for.inc749, %for.body725
  %585 = load i64, i64* %u, align 8, !dbg !3041
  %586 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3043
  %x729 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %586, i32 0, i32 3, !dbg !3044
  %587 = load i64, i64* %x729, align 8, !dbg !3044
  %cmp730 = icmp sle i64 %585, %587, !dbg !3045
  br i1 %cmp730, label %for.body732, label %for.end752, !dbg !3046

for.body732:                                      ; preds = %for.cond728
  %588 = load i64, i64* %u, align 8, !dbg !3047
  %call733 = call i64 @labs(i64 %588) #10, !dbg !3049
  %589 = load i64, i64* %v, align 8, !dbg !3050
  %call734 = call i64 @labs(i64 %589) #10, !dbg !3051
  %add735 = add nsw i64 %call733, %call734, !dbg !3052
  %590 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3053
  %x736 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %590, i32 0, i32 3, !dbg !3054
  %591 = load i64, i64* %x736, align 8, !dbg !3054
  %cmp737 = icmp sle i64 %add735, %591, !dbg !3055
  br i1 %cmp737, label %if.then739, label %if.else745, !dbg !3056

if.then739:                                       ; preds = %for.body732
  %592 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3057
  %sigma740 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %592, i32 0, i32 1, !dbg !3058
  %593 = load double, double* %sigma740, align 8, !dbg !3058
  %594 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3059
  %values741 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %594, i32 0, i32 5, !dbg !3060
  %595 = load double*, double** %values741, align 8, !dbg !3060
  %596 = load i64, i64* %i, align 8, !dbg !3061
  %arrayidx742 = getelementptr inbounds double, double* %595, i64 %596, !dbg !3059
  store double %593, double* %arrayidx742, align 8, !dbg !3062
  %597 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3063
  %positive_range743 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %597, i32 0, i32 9, !dbg !3064
  %598 = load double, double* %positive_range743, align 8, !dbg !3065
  %add744 = fadd double %598, %593, !dbg !3065
  store double %add744, double* %positive_range743, align 8, !dbg !3065
  br label %if.end748, !dbg !3063

if.else745:                                       ; preds = %for.body732
  %599 = load double, double* %nan, align 8, !dbg !3066
  %600 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3067
  %values746 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %600, i32 0, i32 5, !dbg !3068
  %601 = load double*, double** %values746, align 8, !dbg !3068
  %602 = load i64, i64* %i, align 8, !dbg !3069
  %arrayidx747 = getelementptr inbounds double, double* %601, i64 %602, !dbg !3067
  store double %599, double* %arrayidx747, align 8, !dbg !3070
  br label %if.end748

if.end748:                                        ; preds = %if.else745, %if.then739
  br label %for.inc749, !dbg !3054

for.inc749:                                       ; preds = %if.end748
  %603 = load i64, i64* %u, align 8, !dbg !3071
  %inc750 = add nsw i64 %603, 1, !dbg !3071
  store i64 %inc750, i64* %u, align 8, !dbg !3071
  %604 = load i64, i64* %i, align 8, !dbg !3072
  %inc751 = add nsw i64 %604, 1, !dbg !3072
  store i64 %inc751, i64* %i, align 8, !dbg !3072
  br label %for.cond728, !dbg !3073, !llvm.loop !3074

for.end752:                                       ; preds = %for.cond728
  br label %for.inc753, !dbg !3075

for.inc753:                                       ; preds = %for.end752
  %605 = load i64, i64* %v, align 8, !dbg !3076
  %inc754 = add nsw i64 %605, 1, !dbg !3076
  store i64 %inc754, i64* %v, align 8, !dbg !3076
  br label %for.cond721, !dbg !3077, !llvm.loop !3078

for.end755:                                       ; preds = %for.cond721
  %606 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3080
  %sigma756 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %606, i32 0, i32 1, !dbg !3081
  %607 = load double, double* %sigma756, align 8, !dbg !3081
  %608 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3082
  %maximum757 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %608, i32 0, i32 7, !dbg !3083
  store double %607, double* %maximum757, align 8, !dbg !3084
  %609 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3085
  %minimum758 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %609, i32 0, i32 6, !dbg !3086
  store double %607, double* %minimum758, align 8, !dbg !3087
  br label %sw.epilog1834, !dbg !3088

sw.bb759:                                         ; preds = %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata double* %scale, metadata !3089, metadata !DIExpression()), !dbg !3091
  %610 = load i32, i32* %type.addr, align 4, !dbg !3092
  %cmp760 = icmp eq i32 %610, 15, !dbg !3094
  br i1 %cmp760, label %if.then762, label %if.else783, !dbg !3095

if.then762:                                       ; preds = %sw.bb759
  %611 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3096
  %rho763 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %611, i32 0, i32 0, !dbg !3099
  %612 = load double, double* %rho763, align 8, !dbg !3099
  %cmp764 = fcmp olt double %612, 1.000000e+00, !dbg !3100
  br i1 %cmp764, label %if.then766, label %if.else769, !dbg !3101

if.then766:                                       ; preds = %if.then762
  %613 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3102
  %height767 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %613, i32 0, i32 2, !dbg !3103
  store i64 3, i64* %height767, align 8, !dbg !3104
  %614 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3105
  %width768 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %614, i32 0, i32 1, !dbg !3106
  store i64 3, i64* %width768, align 8, !dbg !3107
  br label %if.end776, !dbg !3105

if.else769:                                       ; preds = %if.then762
  %615 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3108
  %rho770 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %615, i32 0, i32 0, !dbg !3109
  %616 = load double, double* %rho770, align 8, !dbg !3109
  %mul771 = fmul double 2.000000e+00, %616, !dbg !3110
  %add772 = fadd double %mul771, 1.000000e+00, !dbg !3111
  %conv773 = fptoui double %add772 to i64, !dbg !3112
  %617 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3113
  %height774 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %617, i32 0, i32 2, !dbg !3114
  store i64 %conv773, i64* %height774, align 8, !dbg !3115
  %618 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3116
  %width775 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %618, i32 0, i32 1, !dbg !3117
  store i64 %conv773, i64* %width775, align 8, !dbg !3118
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then766
  %619 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3119
  %width777 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %619, i32 0, i32 1, !dbg !3120
  %620 = load i64, i64* %width777, align 8, !dbg !3120
  %sub778 = sub i64 %620, 1, !dbg !3121
  %div779 = sdiv i64 %sub778, 2, !dbg !3122
  %621 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3123
  %y780 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %621, i32 0, i32 4, !dbg !3124
  store i64 %div779, i64* %y780, align 8, !dbg !3125
  %622 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3126
  %x781 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %622, i32 0, i32 3, !dbg !3127
  store i64 %div779, i64* %x781, align 8, !dbg !3128
  %623 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3129
  %sigma782 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %623, i32 0, i32 1, !dbg !3130
  %624 = load double, double* %sigma782, align 8, !dbg !3130
  store double %624, double* %scale, align 8, !dbg !3131
  br label %if.end827, !dbg !3132

if.else783:                                       ; preds = %sw.bb759
  %625 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3133
  %rho784 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %625, i32 0, i32 0, !dbg !3136
  %626 = load double, double* %rho784, align 8, !dbg !3136
  %cmp785 = fcmp olt double %626, 1.000000e+00, !dbg !3137
  br i1 %cmp785, label %if.then791, label %lor.lhs.false787, !dbg !3138

lor.lhs.false787:                                 ; preds = %if.else783
  %627 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3139
  %sigma788 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %627, i32 0, i32 1, !dbg !3140
  %628 = load double, double* %sigma788, align 8, !dbg !3140
  %cmp789 = fcmp olt double %628, 1.000000e+00, !dbg !3141
  br i1 %cmp789, label %if.then791, label %if.end793, !dbg !3142

if.then791:                                       ; preds = %lor.lhs.false787, %if.else783
  %629 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3143
  %call792 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %629), !dbg !3144
  store %struct.KernelInfo* %call792, %struct.KernelInfo** %retval, align 8, !dbg !3145
  br label %return, !dbg !3145

if.end793:                                        ; preds = %lor.lhs.false787
  %630 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3146
  %rho794 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %630, i32 0, i32 0, !dbg !3147
  %631 = load double, double* %rho794, align 8, !dbg !3147
  %conv795 = fptoui double %631 to i64, !dbg !3148
  %632 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3149
  %width796 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %632, i32 0, i32 1, !dbg !3150
  store i64 %conv795, i64* %width796, align 8, !dbg !3151
  %633 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3152
  %sigma797 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %633, i32 0, i32 1, !dbg !3153
  %634 = load double, double* %sigma797, align 8, !dbg !3153
  %conv798 = fptoui double %634 to i64, !dbg !3154
  %635 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3155
  %height799 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %635, i32 0, i32 2, !dbg !3156
  store i64 %conv798, i64* %height799, align 8, !dbg !3157
  %636 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3158
  %xi800 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %636, i32 0, i32 2, !dbg !3160
  %637 = load double, double* %xi800, align 8, !dbg !3160
  %cmp801 = fcmp olt double %637, 0.000000e+00, !dbg !3161
  br i1 %cmp801, label %if.then818, label %lor.lhs.false803, !dbg !3162

lor.lhs.false803:                                 ; preds = %if.end793
  %638 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3163
  %xi804 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %638, i32 0, i32 2, !dbg !3164
  %639 = load double, double* %xi804, align 8, !dbg !3164
  %640 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3165
  %width805 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %640, i32 0, i32 1, !dbg !3166
  %641 = load i64, i64* %width805, align 8, !dbg !3166
  %conv806 = uitofp i64 %641 to double, !dbg !3167
  %cmp807 = fcmp ogt double %639, %conv806, !dbg !3168
  br i1 %cmp807, label %if.then818, label %lor.lhs.false809, !dbg !3169

lor.lhs.false809:                                 ; preds = %lor.lhs.false803
  %642 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3170
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %642, i32 0, i32 3, !dbg !3171
  %643 = load double, double* %psi, align 8, !dbg !3171
  %cmp810 = fcmp olt double %643, 0.000000e+00, !dbg !3172
  br i1 %cmp810, label %if.then818, label %lor.lhs.false812, !dbg !3173

lor.lhs.false812:                                 ; preds = %lor.lhs.false809
  %644 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3174
  %psi813 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %644, i32 0, i32 3, !dbg !3175
  %645 = load double, double* %psi813, align 8, !dbg !3175
  %646 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3176
  %height814 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %646, i32 0, i32 2, !dbg !3177
  %647 = load i64, i64* %height814, align 8, !dbg !3177
  %conv815 = uitofp i64 %647 to double, !dbg !3178
  %cmp816 = fcmp ogt double %645, %conv815, !dbg !3179
  br i1 %cmp816, label %if.then818, label %if.end820, !dbg !3180

if.then818:                                       ; preds = %lor.lhs.false812, %lor.lhs.false809, %lor.lhs.false803, %if.end793
  %648 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3181
  %call819 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %648), !dbg !3182
  store %struct.KernelInfo* %call819, %struct.KernelInfo** %retval, align 8, !dbg !3183
  br label %return, !dbg !3183

if.end820:                                        ; preds = %lor.lhs.false812
  %649 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3184
  %xi821 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %649, i32 0, i32 2, !dbg !3185
  %650 = load double, double* %xi821, align 8, !dbg !3185
  %conv822 = fptosi double %650 to i64, !dbg !3186
  %651 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3187
  %x823 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %651, i32 0, i32 3, !dbg !3188
  store i64 %conv822, i64* %x823, align 8, !dbg !3189
  %652 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3190
  %psi824 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %652, i32 0, i32 3, !dbg !3191
  %653 = load double, double* %psi824, align 8, !dbg !3191
  %conv825 = fptosi double %653 to i64, !dbg !3192
  %654 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3193
  %y826 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %654, i32 0, i32 4, !dbg !3194
  store i64 %conv825, i64* %y826, align 8, !dbg !3195
  store double 1.000000e+00, double* %scale, align 8, !dbg !3196
  br label %if.end827

if.end827:                                        ; preds = %if.end820, %if.end776
  %655 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3197
  %width828 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %655, i32 0, i32 1, !dbg !3198
  %656 = load i64, i64* %width828, align 8, !dbg !3198
  %657 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3199
  %height829 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %657, i32 0, i32 2, !dbg !3200
  %658 = load i64, i64* %height829, align 8, !dbg !3200
  %mul830 = mul i64 %658, 8, !dbg !3201
  %call831 = call i8* @AcquireAlignedMemory(i64 %656, i64 %mul830) #14, !dbg !3202
  %659 = bitcast i8* %call831 to double*, !dbg !3203
  %660 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3204
  %values832 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %660, i32 0, i32 5, !dbg !3205
  store double* %659, double** %values832, align 8, !dbg !3206
  %661 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3207
  %values833 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %661, i32 0, i32 5, !dbg !3209
  %662 = load double*, double** %values833, align 8, !dbg !3209
  %cmp834 = icmp eq double* %662, null, !dbg !3210
  br i1 %cmp834, label %if.then836, label %if.end838, !dbg !3211

if.then836:                                       ; preds = %if.end827
  %663 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3212
  %call837 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %663), !dbg !3213
  store %struct.KernelInfo* %call837, %struct.KernelInfo** %retval, align 8, !dbg !3214
  br label %return, !dbg !3214

if.end838:                                        ; preds = %if.end827
  %664 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3215
  %width839 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %664, i32 0, i32 1, !dbg !3216
  %665 = load i64, i64* %width839, align 8, !dbg !3216
  %666 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3217
  %height840 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %666, i32 0, i32 2, !dbg !3218
  %667 = load i64, i64* %height840, align 8, !dbg !3218
  %mul841 = mul i64 %665, %667, !dbg !3219
  store i64 %mul841, i64* %u, align 8, !dbg !3220
  store i64 0, i64* %i, align 8, !dbg !3221
  br label %for.cond842, !dbg !3223

for.cond842:                                      ; preds = %for.inc848, %if.end838
  %668 = load i64, i64* %i, align 8, !dbg !3224
  %669 = load i64, i64* %u, align 8, !dbg !3226
  %cmp843 = icmp slt i64 %668, %669, !dbg !3227
  br i1 %cmp843, label %for.body845, label %for.end850, !dbg !3228

for.body845:                                      ; preds = %for.cond842
  %670 = load double, double* %scale, align 8, !dbg !3229
  %671 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3230
  %values846 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %671, i32 0, i32 5, !dbg !3231
  %672 = load double*, double** %values846, align 8, !dbg !3231
  %673 = load i64, i64* %i, align 8, !dbg !3232
  %arrayidx847 = getelementptr inbounds double, double* %672, i64 %673, !dbg !3230
  store double %670, double* %arrayidx847, align 8, !dbg !3233
  br label %for.inc848, !dbg !3230

for.inc848:                                       ; preds = %for.body845
  %674 = load i64, i64* %i, align 8, !dbg !3234
  %inc849 = add nsw i64 %674, 1, !dbg !3234
  store i64 %inc849, i64* %i, align 8, !dbg !3234
  br label %for.cond842, !dbg !3235, !llvm.loop !3236

for.end850:                                       ; preds = %for.cond842
  %675 = load double, double* %scale, align 8, !dbg !3238
  %676 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3239
  %maximum851 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %676, i32 0, i32 7, !dbg !3240
  store double %675, double* %maximum851, align 8, !dbg !3241
  %677 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3242
  %minimum852 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %677, i32 0, i32 6, !dbg !3243
  store double %675, double* %minimum852, align 8, !dbg !3244
  %678 = load double, double* %scale, align 8, !dbg !3245
  %679 = load i64, i64* %u, align 8, !dbg !3246
  %conv853 = sitofp i64 %679 to double, !dbg !3246
  %mul854 = fmul double %678, %conv853, !dbg !3247
  %680 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3248
  %positive_range855 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %680, i32 0, i32 9, !dbg !3249
  store double %mul854, double* %positive_range855, align 8, !dbg !3250
  br label %sw.epilog1834, !dbg !3251

sw.bb856:                                         ; preds = %sw.epilog
  %681 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3252
  %rho857 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %681, i32 0, i32 0, !dbg !3255
  %682 = load double, double* %rho857, align 8, !dbg !3255
  %cmp858 = fcmp olt double %682, 1.000000e+00, !dbg !3256
  br i1 %cmp858, label %if.then860, label %if.else863, !dbg !3257

if.then860:                                       ; preds = %sw.bb856
  %683 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3258
  %height861 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %683, i32 0, i32 2, !dbg !3259
  store i64 5, i64* %height861, align 8, !dbg !3260
  %684 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3261
  %width862 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %684, i32 0, i32 1, !dbg !3262
  store i64 5, i64* %width862, align 8, !dbg !3263
  br label %if.end870, !dbg !3261

if.else863:                                       ; preds = %sw.bb856
  %685 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3264
  %rho864 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %685, i32 0, i32 0, !dbg !3265
  %686 = load double, double* %rho864, align 8, !dbg !3265
  %conv865 = fptoui double %686 to i64, !dbg !3266
  %mul866 = mul i64 %conv865, 2, !dbg !3267
  %add867 = add i64 %mul866, 1, !dbg !3268
  %687 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3269
  %height868 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %687, i32 0, i32 2, !dbg !3270
  store i64 %add867, i64* %height868, align 8, !dbg !3271
  %688 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3272
  %width869 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %688, i32 0, i32 1, !dbg !3273
  store i64 %add867, i64* %width869, align 8, !dbg !3274
  br label %if.end870

if.end870:                                        ; preds = %if.else863, %if.then860
  %689 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3275
  %width871 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %689, i32 0, i32 1, !dbg !3276
  %690 = load i64, i64* %width871, align 8, !dbg !3276
  %sub872 = sub i64 %690, 1, !dbg !3277
  %div873 = sdiv i64 %sub872, 2, !dbg !3278
  %691 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3279
  %y874 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %691, i32 0, i32 4, !dbg !3280
  store i64 %div873, i64* %y874, align 8, !dbg !3281
  %692 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3282
  %x875 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %692, i32 0, i32 3, !dbg !3283
  store i64 %div873, i64* %x875, align 8, !dbg !3284
  %693 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3285
  %width876 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %693, i32 0, i32 1, !dbg !3286
  %694 = load i64, i64* %width876, align 8, !dbg !3286
  %695 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3287
  %height877 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %695, i32 0, i32 2, !dbg !3288
  %696 = load i64, i64* %height877, align 8, !dbg !3288
  %mul878 = mul i64 %696, 8, !dbg !3289
  %call879 = call i8* @AcquireAlignedMemory(i64 %694, i64 %mul878) #14, !dbg !3290
  %697 = bitcast i8* %call879 to double*, !dbg !3291
  %698 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3292
  %values880 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %698, i32 0, i32 5, !dbg !3293
  store double* %697, double** %values880, align 8, !dbg !3294
  %699 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3295
  %values881 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %699, i32 0, i32 5, !dbg !3297
  %700 = load double*, double** %values881, align 8, !dbg !3297
  %cmp882 = icmp eq double* %700, null, !dbg !3298
  br i1 %cmp882, label %if.then884, label %if.end886, !dbg !3299

if.then884:                                       ; preds = %if.end870
  %701 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3300
  %call885 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %701), !dbg !3301
  store %struct.KernelInfo* %call885, %struct.KernelInfo** %retval, align 8, !dbg !3302
  br label %return, !dbg !3302

if.end886:                                        ; preds = %if.end870
  store i64 0, i64* %i, align 8, !dbg !3303
  %702 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3305
  %y887 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %702, i32 0, i32 4, !dbg !3306
  %703 = load i64, i64* %y887, align 8, !dbg !3306
  %sub888 = sub nsw i64 0, %703, !dbg !3307
  store i64 %sub888, i64* %v, align 8, !dbg !3308
  br label %for.cond889, !dbg !3309

for.cond889:                                      ; preds = %for.inc924, %if.end886
  %704 = load i64, i64* %v, align 8, !dbg !3310
  %705 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3312
  %y890 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %705, i32 0, i32 4, !dbg !3313
  %706 = load i64, i64* %y890, align 8, !dbg !3313
  %cmp891 = icmp sle i64 %704, %706, !dbg !3314
  br i1 %cmp891, label %for.body893, label %for.end926, !dbg !3315

for.body893:                                      ; preds = %for.cond889
  %707 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3316
  %x894 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %707, i32 0, i32 3, !dbg !3318
  %708 = load i64, i64* %x894, align 8, !dbg !3318
  %sub895 = sub nsw i64 0, %708, !dbg !3319
  store i64 %sub895, i64* %u, align 8, !dbg !3320
  br label %for.cond896, !dbg !3321

for.cond896:                                      ; preds = %for.inc920, %for.body893
  %709 = load i64, i64* %u, align 8, !dbg !3322
  %710 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3324
  %x897 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %710, i32 0, i32 3, !dbg !3325
  %711 = load i64, i64* %x897, align 8, !dbg !3325
  %cmp898 = icmp sle i64 %709, %711, !dbg !3326
  br i1 %cmp898, label %for.body900, label %for.end923, !dbg !3327

for.body900:                                      ; preds = %for.cond896
  %712 = load i64, i64* %u, align 8, !dbg !3328
  %call901 = call i64 @labs(i64 %712) #10, !dbg !3330
  %713 = load i64, i64* %v, align 8, !dbg !3331
  %call902 = call i64 @labs(i64 %713) #10, !dbg !3332
  %add903 = add nsw i64 %call901, %call902, !dbg !3333
  %714 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3334
  %x904 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %714, i32 0, i32 3, !dbg !3335
  %715 = load i64, i64* %x904, align 8, !dbg !3335
  %716 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3336
  %x905 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %716, i32 0, i32 3, !dbg !3337
  %717 = load i64, i64* %x905, align 8, !dbg !3337
  %div906 = sdiv i64 %717, 2, !dbg !3338
  %add907 = add nsw i64 %715, %div906, !dbg !3339
  %cmp908 = icmp sle i64 %add903, %add907, !dbg !3340
  br i1 %cmp908, label %if.then910, label %if.else916, !dbg !3341

if.then910:                                       ; preds = %for.body900
  %718 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3342
  %sigma911 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %718, i32 0, i32 1, !dbg !3343
  %719 = load double, double* %sigma911, align 8, !dbg !3343
  %720 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3344
  %values912 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %720, i32 0, i32 5, !dbg !3345
  %721 = load double*, double** %values912, align 8, !dbg !3345
  %722 = load i64, i64* %i, align 8, !dbg !3346
  %arrayidx913 = getelementptr inbounds double, double* %721, i64 %722, !dbg !3344
  store double %719, double* %arrayidx913, align 8, !dbg !3347
  %723 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3348
  %positive_range914 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %723, i32 0, i32 9, !dbg !3349
  %724 = load double, double* %positive_range914, align 8, !dbg !3350
  %add915 = fadd double %724, %719, !dbg !3350
  store double %add915, double* %positive_range914, align 8, !dbg !3350
  br label %if.end919, !dbg !3348

if.else916:                                       ; preds = %for.body900
  %725 = load double, double* %nan, align 8, !dbg !3351
  %726 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3352
  %values917 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %726, i32 0, i32 5, !dbg !3353
  %727 = load double*, double** %values917, align 8, !dbg !3353
  %728 = load i64, i64* %i, align 8, !dbg !3354
  %arrayidx918 = getelementptr inbounds double, double* %727, i64 %728, !dbg !3352
  store double %725, double* %arrayidx918, align 8, !dbg !3355
  br label %if.end919

if.end919:                                        ; preds = %if.else916, %if.then910
  br label %for.inc920, !dbg !3356

for.inc920:                                       ; preds = %if.end919
  %729 = load i64, i64* %u, align 8, !dbg !3357
  %inc921 = add nsw i64 %729, 1, !dbg !3357
  store i64 %inc921, i64* %u, align 8, !dbg !3357
  %730 = load i64, i64* %i, align 8, !dbg !3358
  %inc922 = add nsw i64 %730, 1, !dbg !3358
  store i64 %inc922, i64* %i, align 8, !dbg !3358
  br label %for.cond896, !dbg !3359, !llvm.loop !3360

for.end923:                                       ; preds = %for.cond896
  br label %for.inc924, !dbg !3361

for.inc924:                                       ; preds = %for.end923
  %731 = load i64, i64* %v, align 8, !dbg !3362
  %inc925 = add nsw i64 %731, 1, !dbg !3362
  store i64 %inc925, i64* %v, align 8, !dbg !3362
  br label %for.cond889, !dbg !3363, !llvm.loop !3364

for.end926:                                       ; preds = %for.cond889
  %732 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3366
  %sigma927 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %732, i32 0, i32 1, !dbg !3367
  %733 = load double, double* %sigma927, align 8, !dbg !3367
  %734 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3368
  %maximum928 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %734, i32 0, i32 7, !dbg !3369
  store double %733, double* %maximum928, align 8, !dbg !3370
  %735 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3371
  %minimum929 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %735, i32 0, i32 6, !dbg !3372
  store double %733, double* %minimum929, align 8, !dbg !3373
  br label %sw.epilog1834, !dbg !3374

sw.bb930:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !3375, metadata !DIExpression()), !dbg !3377
  %736 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3378
  %rho931 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %736, i32 0, i32 0, !dbg !3379
  %737 = load double, double* %rho931, align 8, !dbg !3379
  %738 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3380
  %rho932 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %738, i32 0, i32 0, !dbg !3381
  %739 = load double, double* %rho932, align 8, !dbg !3381
  %mul933 = fmul double %737, %739, !dbg !3382
  %conv934 = fptosi double %mul933 to i64, !dbg !3383
  store i64 %conv934, i64* %limit, align 8, !dbg !3377
  %740 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3384
  %rho935 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %740, i32 0, i32 0, !dbg !3386
  %741 = load double, double* %rho935, align 8, !dbg !3386
  %cmp936 = fcmp olt double %741, 4.000000e-01, !dbg !3387
  br i1 %cmp936, label %if.then938, label %if.else941, !dbg !3388

if.then938:                                       ; preds = %sw.bb930
  %742 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3389
  %height939 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %742, i32 0, i32 2, !dbg !3390
  store i64 9, i64* %height939, align 8, !dbg !3391
  %743 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3392
  %width940 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %743, i32 0, i32 1, !dbg !3393
  store i64 9, i64* %width940, align 8, !dbg !3394
  store i64 18, i64* %limit, align 8, !dbg !3395
  br label %if.end948, !dbg !3392

if.else941:                                       ; preds = %sw.bb930
  %744 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3396
  %rho942 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %744, i32 0, i32 0, !dbg !3397
  %745 = load double, double* %rho942, align 8, !dbg !3397
  %746 = call double @llvm.fabs.f64(double %745), !dbg !3398
  %conv943 = fptoui double %746 to i64, !dbg !3399
  %mul944 = mul i64 %conv943, 2, !dbg !3400
  %add945 = add i64 %mul944, 1, !dbg !3401
  %747 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3402
  %height946 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %747, i32 0, i32 2, !dbg !3403
  store i64 %add945, i64* %height946, align 8, !dbg !3404
  %748 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3405
  %width947 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %748, i32 0, i32 1, !dbg !3406
  store i64 %add945, i64* %width947, align 8, !dbg !3407
  br label %if.end948

if.end948:                                        ; preds = %if.else941, %if.then938
  %749 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3408
  %width949 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %749, i32 0, i32 1, !dbg !3409
  %750 = load i64, i64* %width949, align 8, !dbg !3409
  %sub950 = sub i64 %750, 1, !dbg !3410
  %div951 = sdiv i64 %sub950, 2, !dbg !3411
  %751 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3412
  %y952 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %751, i32 0, i32 4, !dbg !3413
  store i64 %div951, i64* %y952, align 8, !dbg !3414
  %752 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3415
  %x953 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %752, i32 0, i32 3, !dbg !3416
  store i64 %div951, i64* %x953, align 8, !dbg !3417
  %753 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3418
  %width954 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %753, i32 0, i32 1, !dbg !3419
  %754 = load i64, i64* %width954, align 8, !dbg !3419
  %755 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3420
  %height955 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %755, i32 0, i32 2, !dbg !3421
  %756 = load i64, i64* %height955, align 8, !dbg !3421
  %mul956 = mul i64 %756, 8, !dbg !3422
  %call957 = call i8* @AcquireAlignedMemory(i64 %754, i64 %mul956) #14, !dbg !3423
  %757 = bitcast i8* %call957 to double*, !dbg !3424
  %758 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3425
  %values958 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %758, i32 0, i32 5, !dbg !3426
  store double* %757, double** %values958, align 8, !dbg !3427
  %759 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3428
  %values959 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %759, i32 0, i32 5, !dbg !3430
  %760 = load double*, double** %values959, align 8, !dbg !3430
  %cmp960 = icmp eq double* %760, null, !dbg !3431
  br i1 %cmp960, label %if.then962, label %if.end964, !dbg !3432

if.then962:                                       ; preds = %if.end948
  %761 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3433
  %call963 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %761), !dbg !3434
  store %struct.KernelInfo* %call963, %struct.KernelInfo** %retval, align 8, !dbg !3435
  br label %return, !dbg !3435

if.end964:                                        ; preds = %if.end948
  store i64 0, i64* %i, align 8, !dbg !3436
  %762 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3438
  %y965 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %762, i32 0, i32 4, !dbg !3439
  %763 = load i64, i64* %y965, align 8, !dbg !3439
  %sub966 = sub nsw i64 0, %763, !dbg !3440
  store i64 %sub966, i64* %v, align 8, !dbg !3441
  br label %for.cond967, !dbg !3442

for.cond967:                                      ; preds = %for.inc998, %if.end964
  %764 = load i64, i64* %v, align 8, !dbg !3443
  %765 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3445
  %y968 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %765, i32 0, i32 4, !dbg !3446
  %766 = load i64, i64* %y968, align 8, !dbg !3446
  %cmp969 = icmp sle i64 %764, %766, !dbg !3447
  br i1 %cmp969, label %for.body971, label %for.end1000, !dbg !3448

for.body971:                                      ; preds = %for.cond967
  %767 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3449
  %x972 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %767, i32 0, i32 3, !dbg !3451
  %768 = load i64, i64* %x972, align 8, !dbg !3451
  %sub973 = sub nsw i64 0, %768, !dbg !3452
  store i64 %sub973, i64* %u, align 8, !dbg !3453
  br label %for.cond974, !dbg !3454

for.cond974:                                      ; preds = %for.inc994, %for.body971
  %769 = load i64, i64* %u, align 8, !dbg !3455
  %770 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3457
  %x975 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %770, i32 0, i32 3, !dbg !3458
  %771 = load i64, i64* %x975, align 8, !dbg !3458
  %cmp976 = icmp sle i64 %769, %771, !dbg !3459
  br i1 %cmp976, label %for.body978, label %for.end997, !dbg !3460

for.body978:                                      ; preds = %for.cond974
  %772 = load i64, i64* %u, align 8, !dbg !3461
  %773 = load i64, i64* %u, align 8, !dbg !3463
  %mul979 = mul nsw i64 %772, %773, !dbg !3464
  %774 = load i64, i64* %v, align 8, !dbg !3465
  %775 = load i64, i64* %v, align 8, !dbg !3466
  %mul980 = mul nsw i64 %774, %775, !dbg !3467
  %add981 = add nsw i64 %mul979, %mul980, !dbg !3468
  %776 = load i64, i64* %limit, align 8, !dbg !3469
  %cmp982 = icmp sle i64 %add981, %776, !dbg !3470
  br i1 %cmp982, label %if.then984, label %if.else990, !dbg !3471

if.then984:                                       ; preds = %for.body978
  %777 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3472
  %sigma985 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %777, i32 0, i32 1, !dbg !3473
  %778 = load double, double* %sigma985, align 8, !dbg !3473
  %779 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3474
  %values986 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %779, i32 0, i32 5, !dbg !3475
  %780 = load double*, double** %values986, align 8, !dbg !3475
  %781 = load i64, i64* %i, align 8, !dbg !3476
  %arrayidx987 = getelementptr inbounds double, double* %780, i64 %781, !dbg !3474
  store double %778, double* %arrayidx987, align 8, !dbg !3477
  %782 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3478
  %positive_range988 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %782, i32 0, i32 9, !dbg !3479
  %783 = load double, double* %positive_range988, align 8, !dbg !3480
  %add989 = fadd double %783, %778, !dbg !3480
  store double %add989, double* %positive_range988, align 8, !dbg !3480
  br label %if.end993, !dbg !3478

if.else990:                                       ; preds = %for.body978
  %784 = load double, double* %nan, align 8, !dbg !3481
  %785 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3482
  %values991 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %785, i32 0, i32 5, !dbg !3483
  %786 = load double*, double** %values991, align 8, !dbg !3483
  %787 = load i64, i64* %i, align 8, !dbg !3484
  %arrayidx992 = getelementptr inbounds double, double* %786, i64 %787, !dbg !3482
  store double %784, double* %arrayidx992, align 8, !dbg !3485
  br label %if.end993

if.end993:                                        ; preds = %if.else990, %if.then984
  br label %for.inc994, !dbg !3469

for.inc994:                                       ; preds = %if.end993
  %788 = load i64, i64* %u, align 8, !dbg !3486
  %inc995 = add nsw i64 %788, 1, !dbg !3486
  store i64 %inc995, i64* %u, align 8, !dbg !3486
  %789 = load i64, i64* %i, align 8, !dbg !3487
  %inc996 = add nsw i64 %789, 1, !dbg !3487
  store i64 %inc996, i64* %i, align 8, !dbg !3487
  br label %for.cond974, !dbg !3488, !llvm.loop !3489

for.end997:                                       ; preds = %for.cond974
  br label %for.inc998, !dbg !3490

for.inc998:                                       ; preds = %for.end997
  %790 = load i64, i64* %v, align 8, !dbg !3491
  %inc999 = add nsw i64 %790, 1, !dbg !3491
  store i64 %inc999, i64* %v, align 8, !dbg !3491
  br label %for.cond967, !dbg !3492, !llvm.loop !3493

for.end1000:                                      ; preds = %for.cond967
  %791 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3495
  %sigma1001 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %791, i32 0, i32 1, !dbg !3496
  %792 = load double, double* %sigma1001, align 8, !dbg !3496
  %793 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3497
  %maximum1002 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %793, i32 0, i32 7, !dbg !3498
  store double %792, double* %maximum1002, align 8, !dbg !3499
  %794 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3500
  %minimum1003 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %794, i32 0, i32 6, !dbg !3501
  store double %792, double* %minimum1003, align 8, !dbg !3502
  br label %sw.epilog1834, !dbg !3503

sw.bb1004:                                        ; preds = %sw.epilog
  %795 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3504
  %rho1005 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %795, i32 0, i32 0, !dbg !3507
  %796 = load double, double* %rho1005, align 8, !dbg !3507
  %cmp1006 = fcmp olt double %796, 1.000000e+00, !dbg !3508
  br i1 %cmp1006, label %if.then1008, label %if.else1011, !dbg !3509

if.then1008:                                      ; preds = %sw.bb1004
  %797 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3510
  %height1009 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %797, i32 0, i32 2, !dbg !3511
  store i64 5, i64* %height1009, align 8, !dbg !3512
  %798 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3513
  %width1010 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %798, i32 0, i32 1, !dbg !3514
  store i64 5, i64* %width1010, align 8, !dbg !3515
  br label %if.end1018, !dbg !3513

if.else1011:                                      ; preds = %sw.bb1004
  %799 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3516
  %rho1012 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %799, i32 0, i32 0, !dbg !3517
  %800 = load double, double* %rho1012, align 8, !dbg !3517
  %conv1013 = fptoui double %800 to i64, !dbg !3518
  %mul1014 = mul i64 %conv1013, 2, !dbg !3519
  %add1015 = add i64 %mul1014, 1, !dbg !3520
  %801 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3521
  %height1016 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %801, i32 0, i32 2, !dbg !3522
  store i64 %add1015, i64* %height1016, align 8, !dbg !3523
  %802 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3524
  %width1017 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %802, i32 0, i32 1, !dbg !3525
  store i64 %add1015, i64* %width1017, align 8, !dbg !3526
  br label %if.end1018

if.end1018:                                       ; preds = %if.else1011, %if.then1008
  %803 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3527
  %width1019 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %803, i32 0, i32 1, !dbg !3528
  %804 = load i64, i64* %width1019, align 8, !dbg !3528
  %sub1020 = sub i64 %804, 1, !dbg !3529
  %div1021 = sdiv i64 %sub1020, 2, !dbg !3530
  %805 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3531
  %y1022 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %805, i32 0, i32 4, !dbg !3532
  store i64 %div1021, i64* %y1022, align 8, !dbg !3533
  %806 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3534
  %x1023 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %806, i32 0, i32 3, !dbg !3535
  store i64 %div1021, i64* %x1023, align 8, !dbg !3536
  %807 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3537
  %width1024 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %807, i32 0, i32 1, !dbg !3538
  %808 = load i64, i64* %width1024, align 8, !dbg !3538
  %809 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3539
  %height1025 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %809, i32 0, i32 2, !dbg !3540
  %810 = load i64, i64* %height1025, align 8, !dbg !3540
  %mul1026 = mul i64 %810, 8, !dbg !3541
  %call1027 = call i8* @AcquireAlignedMemory(i64 %808, i64 %mul1026) #14, !dbg !3542
  %811 = bitcast i8* %call1027 to double*, !dbg !3543
  %812 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3544
  %values1028 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %812, i32 0, i32 5, !dbg !3545
  store double* %811, double** %values1028, align 8, !dbg !3546
  %813 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3547
  %values1029 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %813, i32 0, i32 5, !dbg !3549
  %814 = load double*, double** %values1029, align 8, !dbg !3549
  %cmp1030 = icmp eq double* %814, null, !dbg !3550
  br i1 %cmp1030, label %if.then1032, label %if.end1034, !dbg !3551

if.then1032:                                      ; preds = %if.end1018
  %815 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3552
  %call1033 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %815), !dbg !3553
  store %struct.KernelInfo* %call1033, %struct.KernelInfo** %retval, align 8, !dbg !3554
  br label %return, !dbg !3554

if.end1034:                                       ; preds = %if.end1018
  store i64 0, i64* %i, align 8, !dbg !3555
  %816 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3557
  %y1035 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %816, i32 0, i32 4, !dbg !3558
  %817 = load i64, i64* %y1035, align 8, !dbg !3558
  %sub1036 = sub nsw i64 0, %817, !dbg !3559
  store i64 %sub1036, i64* %v, align 8, !dbg !3560
  br label %for.cond1037, !dbg !3561

for.cond1037:                                     ; preds = %for.inc1061, %if.end1034
  %818 = load i64, i64* %v, align 8, !dbg !3562
  %819 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3564
  %y1038 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %819, i32 0, i32 4, !dbg !3565
  %820 = load i64, i64* %y1038, align 8, !dbg !3565
  %cmp1039 = icmp sle i64 %818, %820, !dbg !3566
  br i1 %cmp1039, label %for.body1041, label %for.end1063, !dbg !3567

for.body1041:                                     ; preds = %for.cond1037
  %821 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3568
  %x1042 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %821, i32 0, i32 3, !dbg !3570
  %822 = load i64, i64* %x1042, align 8, !dbg !3570
  %sub1043 = sub nsw i64 0, %822, !dbg !3571
  store i64 %sub1043, i64* %u, align 8, !dbg !3572
  br label %for.cond1044, !dbg !3573

for.cond1044:                                     ; preds = %for.inc1057, %for.body1041
  %823 = load i64, i64* %u, align 8, !dbg !3574
  %824 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3576
  %x1045 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %824, i32 0, i32 3, !dbg !3577
  %825 = load i64, i64* %x1045, align 8, !dbg !3577
  %cmp1046 = icmp sle i64 %823, %825, !dbg !3578
  br i1 %cmp1046, label %for.body1048, label %for.end1060, !dbg !3579

for.body1048:                                     ; preds = %for.cond1044
  %826 = load i64, i64* %u, align 8, !dbg !3580
  %cmp1049 = icmp eq i64 %826, 0, !dbg !3581
  br i1 %cmp1049, label %cond.true, label %lor.lhs.false1051, !dbg !3582

lor.lhs.false1051:                                ; preds = %for.body1048
  %827 = load i64, i64* %v, align 8, !dbg !3583
  %cmp1052 = icmp eq i64 %827, 0, !dbg !3584
  br i1 %cmp1052, label %cond.true, label %cond.false, !dbg !3585

cond.true:                                        ; preds = %lor.lhs.false1051, %for.body1048
  %828 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3586
  %sigma1054 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %828, i32 0, i32 1, !dbg !3587
  %829 = load double, double* %sigma1054, align 8, !dbg !3587
  br label %cond.end, !dbg !3585

cond.false:                                       ; preds = %lor.lhs.false1051
  %830 = load double, double* %nan, align 8, !dbg !3588
  br label %cond.end, !dbg !3585

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %829, %cond.true ], [ %830, %cond.false ], !dbg !3585
  %831 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3589
  %values1055 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %831, i32 0, i32 5, !dbg !3590
  %832 = load double*, double** %values1055, align 8, !dbg !3590
  %833 = load i64, i64* %i, align 8, !dbg !3591
  %arrayidx1056 = getelementptr inbounds double, double* %832, i64 %833, !dbg !3589
  store double %cond, double* %arrayidx1056, align 8, !dbg !3592
  br label %for.inc1057, !dbg !3589

for.inc1057:                                      ; preds = %cond.end
  %834 = load i64, i64* %u, align 8, !dbg !3593
  %inc1058 = add nsw i64 %834, 1, !dbg !3593
  store i64 %inc1058, i64* %u, align 8, !dbg !3593
  %835 = load i64, i64* %i, align 8, !dbg !3594
  %inc1059 = add nsw i64 %835, 1, !dbg !3594
  store i64 %inc1059, i64* %i, align 8, !dbg !3594
  br label %for.cond1044, !dbg !3595, !llvm.loop !3596

for.end1060:                                      ; preds = %for.cond1044
  br label %for.inc1061, !dbg !3597

for.inc1061:                                      ; preds = %for.end1060
  %836 = load i64, i64* %v, align 8, !dbg !3598
  %inc1062 = add nsw i64 %836, 1, !dbg !3598
  store i64 %inc1062, i64* %v, align 8, !dbg !3598
  br label %for.cond1037, !dbg !3599, !llvm.loop !3600

for.end1063:                                      ; preds = %for.cond1037
  %837 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3602
  %sigma1064 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %837, i32 0, i32 1, !dbg !3603
  %838 = load double, double* %sigma1064, align 8, !dbg !3603
  %839 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3604
  %maximum1065 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %839, i32 0, i32 7, !dbg !3605
  store double %838, double* %maximum1065, align 8, !dbg !3606
  %840 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3607
  %minimum1066 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %840, i32 0, i32 6, !dbg !3608
  store double %838, double* %minimum1066, align 8, !dbg !3609
  %841 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3610
  %sigma1067 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %841, i32 0, i32 1, !dbg !3611
  %842 = load double, double* %sigma1067, align 8, !dbg !3611
  %843 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3612
  %width1068 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %843, i32 0, i32 1, !dbg !3613
  %844 = load i64, i64* %width1068, align 8, !dbg !3613
  %conv1069 = uitofp i64 %844 to double, !dbg !3612
  %mul1070 = fmul double %conv1069, 2.000000e+00, !dbg !3614
  %sub1071 = fsub double %mul1070, 1.000000e+00, !dbg !3615
  %mul1072 = fmul double %842, %sub1071, !dbg !3616
  %845 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3617
  %positive_range1073 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %845, i32 0, i32 9, !dbg !3618
  store double %mul1072, double* %positive_range1073, align 8, !dbg !3619
  br label %sw.epilog1834, !dbg !3620

sw.bb1074:                                        ; preds = %sw.epilog
  %846 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3621
  %rho1075 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %846, i32 0, i32 0, !dbg !3624
  %847 = load double, double* %rho1075, align 8, !dbg !3624
  %cmp1076 = fcmp olt double %847, 1.000000e+00, !dbg !3625
  br i1 %cmp1076, label %if.then1078, label %if.else1081, !dbg !3626

if.then1078:                                      ; preds = %sw.bb1074
  %848 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3627
  %height1079 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %848, i32 0, i32 2, !dbg !3628
  store i64 5, i64* %height1079, align 8, !dbg !3629
  %849 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3630
  %width1080 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %849, i32 0, i32 1, !dbg !3631
  store i64 5, i64* %width1080, align 8, !dbg !3632
  br label %if.end1088, !dbg !3630

if.else1081:                                      ; preds = %sw.bb1074
  %850 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3633
  %rho1082 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %850, i32 0, i32 0, !dbg !3634
  %851 = load double, double* %rho1082, align 8, !dbg !3634
  %conv1083 = fptoui double %851 to i64, !dbg !3635
  %mul1084 = mul i64 %conv1083, 2, !dbg !3636
  %add1085 = add i64 %mul1084, 1, !dbg !3637
  %852 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3638
  %height1086 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %852, i32 0, i32 2, !dbg !3639
  store i64 %add1085, i64* %height1086, align 8, !dbg !3640
  %853 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3641
  %width1087 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %853, i32 0, i32 1, !dbg !3642
  store i64 %add1085, i64* %width1087, align 8, !dbg !3643
  br label %if.end1088

if.end1088:                                       ; preds = %if.else1081, %if.then1078
  %854 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3644
  %width1089 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %854, i32 0, i32 1, !dbg !3645
  %855 = load i64, i64* %width1089, align 8, !dbg !3645
  %sub1090 = sub i64 %855, 1, !dbg !3646
  %div1091 = sdiv i64 %sub1090, 2, !dbg !3647
  %856 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3648
  %y1092 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %856, i32 0, i32 4, !dbg !3649
  store i64 %div1091, i64* %y1092, align 8, !dbg !3650
  %857 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3651
  %x1093 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %857, i32 0, i32 3, !dbg !3652
  store i64 %div1091, i64* %x1093, align 8, !dbg !3653
  %858 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3654
  %width1094 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %858, i32 0, i32 1, !dbg !3655
  %859 = load i64, i64* %width1094, align 8, !dbg !3655
  %860 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3656
  %height1095 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %860, i32 0, i32 2, !dbg !3657
  %861 = load i64, i64* %height1095, align 8, !dbg !3657
  %mul1096 = mul i64 %861, 8, !dbg !3658
  %call1097 = call i8* @AcquireAlignedMemory(i64 %859, i64 %mul1096) #14, !dbg !3659
  %862 = bitcast i8* %call1097 to double*, !dbg !3660
  %863 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3661
  %values1098 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %863, i32 0, i32 5, !dbg !3662
  store double* %862, double** %values1098, align 8, !dbg !3663
  %864 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3664
  %values1099 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %864, i32 0, i32 5, !dbg !3666
  %865 = load double*, double** %values1099, align 8, !dbg !3666
  %cmp1100 = icmp eq double* %865, null, !dbg !3667
  br i1 %cmp1100, label %if.then1102, label %if.end1104, !dbg !3668

if.then1102:                                      ; preds = %if.end1088
  %866 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3669
  %call1103 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %866), !dbg !3670
  store %struct.KernelInfo* %call1103, %struct.KernelInfo** %retval, align 8, !dbg !3671
  br label %return, !dbg !3671

if.end1104:                                       ; preds = %if.end1088
  store i64 0, i64* %i, align 8, !dbg !3672
  %867 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3674
  %y1105 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %867, i32 0, i32 4, !dbg !3675
  %868 = load i64, i64* %y1105, align 8, !dbg !3675
  %sub1106 = sub nsw i64 0, %868, !dbg !3676
  store i64 %sub1106, i64* %v, align 8, !dbg !3677
  br label %for.cond1107, !dbg !3678

for.cond1107:                                     ; preds = %for.inc1136, %if.end1104
  %869 = load i64, i64* %v, align 8, !dbg !3679
  %870 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3681
  %y1108 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %870, i32 0, i32 4, !dbg !3682
  %871 = load i64, i64* %y1108, align 8, !dbg !3682
  %cmp1109 = icmp sle i64 %869, %871, !dbg !3683
  br i1 %cmp1109, label %for.body1111, label %for.end1138, !dbg !3684

for.body1111:                                     ; preds = %for.cond1107
  %872 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3685
  %x1112 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %872, i32 0, i32 3, !dbg !3687
  %873 = load i64, i64* %x1112, align 8, !dbg !3687
  %sub1113 = sub nsw i64 0, %873, !dbg !3688
  store i64 %sub1113, i64* %u, align 8, !dbg !3689
  br label %for.cond1114, !dbg !3690

for.cond1114:                                     ; preds = %for.inc1132, %for.body1111
  %874 = load i64, i64* %u, align 8, !dbg !3691
  %875 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3693
  %x1115 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %875, i32 0, i32 3, !dbg !3694
  %876 = load i64, i64* %x1115, align 8, !dbg !3694
  %cmp1116 = icmp sle i64 %874, %876, !dbg !3695
  br i1 %cmp1116, label %for.body1118, label %for.end1135, !dbg !3696

for.body1118:                                     ; preds = %for.cond1114
  %877 = load i64, i64* %u, align 8, !dbg !3697
  %878 = load i64, i64* %v, align 8, !dbg !3698
  %cmp1119 = icmp eq i64 %877, %878, !dbg !3699
  br i1 %cmp1119, label %cond.true1125, label %lor.lhs.false1121, !dbg !3700

lor.lhs.false1121:                                ; preds = %for.body1118
  %879 = load i64, i64* %u, align 8, !dbg !3701
  %880 = load i64, i64* %v, align 8, !dbg !3702
  %sub1122 = sub nsw i64 0, %880, !dbg !3703
  %cmp1123 = icmp eq i64 %879, %sub1122, !dbg !3704
  br i1 %cmp1123, label %cond.true1125, label %cond.false1127, !dbg !3705

cond.true1125:                                    ; preds = %lor.lhs.false1121, %for.body1118
  %881 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3706
  %sigma1126 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %881, i32 0, i32 1, !dbg !3707
  %882 = load double, double* %sigma1126, align 8, !dbg !3707
  br label %cond.end1128, !dbg !3705

cond.false1127:                                   ; preds = %lor.lhs.false1121
  %883 = load double, double* %nan, align 8, !dbg !3708
  br label %cond.end1128, !dbg !3705

cond.end1128:                                     ; preds = %cond.false1127, %cond.true1125
  %cond1129 = phi double [ %882, %cond.true1125 ], [ %883, %cond.false1127 ], !dbg !3705
  %884 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3709
  %values1130 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %884, i32 0, i32 5, !dbg !3710
  %885 = load double*, double** %values1130, align 8, !dbg !3710
  %886 = load i64, i64* %i, align 8, !dbg !3711
  %arrayidx1131 = getelementptr inbounds double, double* %885, i64 %886, !dbg !3709
  store double %cond1129, double* %arrayidx1131, align 8, !dbg !3712
  br label %for.inc1132, !dbg !3709

for.inc1132:                                      ; preds = %cond.end1128
  %887 = load i64, i64* %u, align 8, !dbg !3713
  %inc1133 = add nsw i64 %887, 1, !dbg !3713
  store i64 %inc1133, i64* %u, align 8, !dbg !3713
  %888 = load i64, i64* %i, align 8, !dbg !3714
  %inc1134 = add nsw i64 %888, 1, !dbg !3714
  store i64 %inc1134, i64* %i, align 8, !dbg !3714
  br label %for.cond1114, !dbg !3715, !llvm.loop !3716

for.end1135:                                      ; preds = %for.cond1114
  br label %for.inc1136, !dbg !3717

for.inc1136:                                      ; preds = %for.end1135
  %889 = load i64, i64* %v, align 8, !dbg !3718
  %inc1137 = add nsw i64 %889, 1, !dbg !3718
  store i64 %inc1137, i64* %v, align 8, !dbg !3718
  br label %for.cond1107, !dbg !3719, !llvm.loop !3720

for.end1138:                                      ; preds = %for.cond1107
  %890 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3722
  %sigma1139 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %890, i32 0, i32 1, !dbg !3723
  %891 = load double, double* %sigma1139, align 8, !dbg !3723
  %892 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3724
  %maximum1140 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %892, i32 0, i32 7, !dbg !3725
  store double %891, double* %maximum1140, align 8, !dbg !3726
  %893 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3727
  %minimum1141 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %893, i32 0, i32 6, !dbg !3728
  store double %891, double* %minimum1141, align 8, !dbg !3729
  %894 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3730
  %sigma1142 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %894, i32 0, i32 1, !dbg !3731
  %895 = load double, double* %sigma1142, align 8, !dbg !3731
  %896 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3732
  %width1143 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %896, i32 0, i32 1, !dbg !3733
  %897 = load i64, i64* %width1143, align 8, !dbg !3733
  %conv1144 = uitofp i64 %897 to double, !dbg !3732
  %mul1145 = fmul double %conv1144, 2.000000e+00, !dbg !3734
  %sub1146 = fsub double %mul1145, 1.000000e+00, !dbg !3735
  %mul1147 = fmul double %895, %sub1146, !dbg !3736
  %898 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3737
  %positive_range1148 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %898, i32 0, i32 9, !dbg !3738
  store double %mul1147, double* %positive_range1148, align 8, !dbg !3739
  br label %sw.epilog1834, !dbg !3740

sw.bb1149:                                        ; preds = %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata i64* %limit1, metadata !3741, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.declare(metadata i64* %limit2, metadata !3744, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.declare(metadata i64* %scale1150, metadata !3746, metadata !DIExpression()), !dbg !3747
  %899 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3748
  %rho1151 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %899, i32 0, i32 0, !dbg !3750
  %900 = load double, double* %rho1151, align 8, !dbg !3750
  %901 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3751
  %sigma1152 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %901, i32 0, i32 1, !dbg !3752
  %902 = load double, double* %sigma1152, align 8, !dbg !3752
  %cmp1153 = fcmp olt double %900, %902, !dbg !3753
  br i1 %cmp1153, label %if.then1155, label %if.else1169, !dbg !3754

if.then1155:                                      ; preds = %sw.bb1149
  %903 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3755
  %sigma1156 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %903, i32 0, i32 1, !dbg !3757
  %904 = load double, double* %sigma1156, align 8, !dbg !3757
  %conv1157 = fptoui double %904 to i64, !dbg !3758
  %mul1158 = mul i64 %conv1157, 2, !dbg !3759
  %add1159 = add i64 %mul1158, 1, !dbg !3760
  %905 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3761
  %width1160 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %905, i32 0, i32 1, !dbg !3762
  store i64 %add1159, i64* %width1160, align 8, !dbg !3763
  %906 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3764
  %rho1161 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %906, i32 0, i32 0, !dbg !3765
  %907 = load double, double* %rho1161, align 8, !dbg !3765
  %908 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3766
  %rho1162 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %908, i32 0, i32 0, !dbg !3767
  %909 = load double, double* %rho1162, align 8, !dbg !3767
  %mul1163 = fmul double %907, %909, !dbg !3768
  %conv1164 = fptosi double %mul1163 to i64, !dbg !3769
  store i64 %conv1164, i64* %limit1, align 8, !dbg !3770
  %910 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3771
  %sigma1165 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %910, i32 0, i32 1, !dbg !3772
  %911 = load double, double* %sigma1165, align 8, !dbg !3772
  %912 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3773
  %sigma1166 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %912, i32 0, i32 1, !dbg !3774
  %913 = load double, double* %sigma1166, align 8, !dbg !3774
  %mul1167 = fmul double %911, %913, !dbg !3775
  %conv1168 = fptosi double %mul1167 to i64, !dbg !3776
  store i64 %conv1168, i64* %limit2, align 8, !dbg !3777
  br label %if.end1183, !dbg !3778

if.else1169:                                      ; preds = %sw.bb1149
  %914 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3779
  %rho1170 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %914, i32 0, i32 0, !dbg !3781
  %915 = load double, double* %rho1170, align 8, !dbg !3781
  %conv1171 = fptoui double %915 to i64, !dbg !3782
  %mul1172 = mul i64 %conv1171, 2, !dbg !3783
  %add1173 = add i64 %mul1172, 1, !dbg !3784
  %916 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3785
  %width1174 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %916, i32 0, i32 1, !dbg !3786
  store i64 %add1173, i64* %width1174, align 8, !dbg !3787
  %917 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3788
  %sigma1175 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %917, i32 0, i32 1, !dbg !3789
  %918 = load double, double* %sigma1175, align 8, !dbg !3789
  %919 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3790
  %sigma1176 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %919, i32 0, i32 1, !dbg !3791
  %920 = load double, double* %sigma1176, align 8, !dbg !3791
  %mul1177 = fmul double %918, %920, !dbg !3792
  %conv1178 = fptosi double %mul1177 to i64, !dbg !3793
  store i64 %conv1178, i64* %limit1, align 8, !dbg !3794
  %921 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3795
  %rho1179 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %921, i32 0, i32 0, !dbg !3796
  %922 = load double, double* %rho1179, align 8, !dbg !3796
  %923 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3797
  %rho1180 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %923, i32 0, i32 0, !dbg !3798
  %924 = load double, double* %rho1180, align 8, !dbg !3798
  %mul1181 = fmul double %922, %924, !dbg !3799
  %conv1182 = fptosi double %mul1181 to i64, !dbg !3800
  store i64 %conv1182, i64* %limit2, align 8, !dbg !3801
  br label %if.end1183

if.end1183:                                       ; preds = %if.else1169, %if.then1155
  %925 = load i64, i64* %limit2, align 8, !dbg !3802
  %cmp1184 = icmp sle i64 %925, 0, !dbg !3804
  br i1 %cmp1184, label %if.then1186, label %if.end1188, !dbg !3805

if.then1186:                                      ; preds = %if.end1183
  %926 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3806
  %width1187 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %926, i32 0, i32 1, !dbg !3807
  store i64 7, i64* %width1187, align 8, !dbg !3808
  store i64 7, i64* %limit1, align 8, !dbg !3809
  store i64 11, i64* %limit2, align 8, !dbg !3810
  br label %if.end1188, !dbg !3806

if.end1188:                                       ; preds = %if.then1186, %if.end1183
  %927 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3811
  %width1189 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %927, i32 0, i32 1, !dbg !3812
  %928 = load i64, i64* %width1189, align 8, !dbg !3812
  %929 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3813
  %height1190 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %929, i32 0, i32 2, !dbg !3814
  store i64 %928, i64* %height1190, align 8, !dbg !3815
  %930 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3816
  %width1191 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %930, i32 0, i32 1, !dbg !3817
  %931 = load i64, i64* %width1191, align 8, !dbg !3817
  %sub1192 = sub i64 %931, 1, !dbg !3818
  %div1193 = sdiv i64 %sub1192, 2, !dbg !3819
  %932 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3820
  %y1194 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %932, i32 0, i32 4, !dbg !3821
  store i64 %div1193, i64* %y1194, align 8, !dbg !3822
  %933 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3823
  %x1195 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %933, i32 0, i32 3, !dbg !3824
  store i64 %div1193, i64* %x1195, align 8, !dbg !3825
  %934 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3826
  %width1196 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %934, i32 0, i32 1, !dbg !3827
  %935 = load i64, i64* %width1196, align 8, !dbg !3827
  %936 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3828
  %height1197 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %936, i32 0, i32 2, !dbg !3829
  %937 = load i64, i64* %height1197, align 8, !dbg !3829
  %mul1198 = mul i64 %937, 8, !dbg !3830
  %call1199 = call i8* @AcquireAlignedMemory(i64 %935, i64 %mul1198) #14, !dbg !3831
  %938 = bitcast i8* %call1199 to double*, !dbg !3832
  %939 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3833
  %values1200 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %939, i32 0, i32 5, !dbg !3834
  store double* %938, double** %values1200, align 8, !dbg !3835
  %940 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3836
  %values1201 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %940, i32 0, i32 5, !dbg !3838
  %941 = load double*, double** %values1201, align 8, !dbg !3838
  %cmp1202 = icmp eq double* %941, null, !dbg !3839
  br i1 %cmp1202, label %if.then1204, label %if.end1206, !dbg !3840

if.then1204:                                      ; preds = %if.end1188
  %942 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3841
  %call1205 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %942), !dbg !3842
  store %struct.KernelInfo* %call1205, %struct.KernelInfo** %retval, align 8, !dbg !3843
  br label %return, !dbg !3843

if.end1206:                                       ; preds = %if.end1188
  %943 = load i32, i32* %type.addr, align 4, !dbg !3844
  %cmp1207 = icmp eq i32 %943, 22, !dbg !3845
  br i1 %cmp1207, label %cond.true1209, label %cond.false1210, !dbg !3846

cond.true1209:                                    ; preds = %if.end1206
  br label %cond.end1212, !dbg !3846

cond.false1210:                                   ; preds = %if.end1206
  %944 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3847
  %xi1211 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %944, i32 0, i32 2, !dbg !3848
  %945 = load double, double* %xi1211, align 8, !dbg !3848
  br label %cond.end1212, !dbg !3846

cond.end1212:                                     ; preds = %cond.false1210, %cond.true1209
  %cond1213 = phi double [ 0.000000e+00, %cond.true1209 ], [ %945, %cond.false1210 ], !dbg !3846
  %conv1214 = fptosi double %cond1213 to i64, !dbg !3849
  store i64 %conv1214, i64* %scale1150, align 8, !dbg !3850
  store i64 0, i64* %i, align 8, !dbg !3851
  %946 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3853
  %y1215 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %946, i32 0, i32 4, !dbg !3854
  %947 = load i64, i64* %y1215, align 8, !dbg !3854
  %sub1216 = sub nsw i64 0, %947, !dbg !3855
  store i64 %sub1216, i64* %v, align 8, !dbg !3856
  br label %for.cond1217, !dbg !3857

for.cond1217:                                     ; preds = %for.inc1250, %cond.end1212
  %948 = load i64, i64* %v, align 8, !dbg !3858
  %949 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3860
  %y1218 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %949, i32 0, i32 4, !dbg !3861
  %950 = load i64, i64* %y1218, align 8, !dbg !3861
  %cmp1219 = icmp sle i64 %948, %950, !dbg !3862
  br i1 %cmp1219, label %for.body1221, label %for.end1252, !dbg !3863

for.body1221:                                     ; preds = %for.cond1217
  %951 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3864
  %x1222 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %951, i32 0, i32 3, !dbg !3866
  %952 = load i64, i64* %x1222, align 8, !dbg !3866
  %sub1223 = sub nsw i64 0, %952, !dbg !3867
  store i64 %sub1223, i64* %u, align 8, !dbg !3868
  br label %for.cond1224, !dbg !3869

for.cond1224:                                     ; preds = %for.inc1246, %for.body1221
  %953 = load i64, i64* %u, align 8, !dbg !3870
  %954 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3872
  %x1225 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %954, i32 0, i32 3, !dbg !3873
  %955 = load i64, i64* %x1225, align 8, !dbg !3873
  %cmp1226 = icmp sle i64 %953, %955, !dbg !3874
  br i1 %cmp1226, label %for.body1228, label %for.end1249, !dbg !3875

for.body1228:                                     ; preds = %for.cond1224
  call void @llvm.dbg.declare(metadata i64* %radius, metadata !3876, metadata !DIExpression()), !dbg !3878
  %956 = load i64, i64* %u, align 8, !dbg !3879
  %957 = load i64, i64* %u, align 8, !dbg !3880
  %mul1229 = mul nsw i64 %956, %957, !dbg !3881
  %958 = load i64, i64* %v, align 8, !dbg !3882
  %959 = load i64, i64* %v, align 8, !dbg !3883
  %mul1230 = mul nsw i64 %958, %959, !dbg !3884
  %add1231 = add nsw i64 %mul1229, %mul1230, !dbg !3885
  store i64 %add1231, i64* %radius, align 8, !dbg !3878
  %960 = load i64, i64* %limit1, align 8, !dbg !3886
  %961 = load i64, i64* %radius, align 8, !dbg !3888
  %cmp1232 = icmp slt i64 %960, %961, !dbg !3889
  br i1 %cmp1232, label %land.lhs.true, label %if.else1242, !dbg !3890

land.lhs.true:                                    ; preds = %for.body1228
  %962 = load i64, i64* %radius, align 8, !dbg !3891
  %963 = load i64, i64* %limit2, align 8, !dbg !3892
  %cmp1234 = icmp sle i64 %962, %963, !dbg !3893
  br i1 %cmp1234, label %if.then1236, label %if.else1242, !dbg !3894

if.then1236:                                      ; preds = %land.lhs.true
  %964 = load i64, i64* %scale1150, align 8, !dbg !3895
  %conv1237 = sitofp i64 %964 to double, !dbg !3896
  %965 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3897
  %values1238 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %965, i32 0, i32 5, !dbg !3898
  %966 = load double*, double** %values1238, align 8, !dbg !3898
  %967 = load i64, i64* %i, align 8, !dbg !3899
  %arrayidx1239 = getelementptr inbounds double, double* %966, i64 %967, !dbg !3897
  store double %conv1237, double* %arrayidx1239, align 8, !dbg !3900
  %968 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3901
  %positive_range1240 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %968, i32 0, i32 9, !dbg !3902
  %969 = load double, double* %positive_range1240, align 8, !dbg !3903
  %add1241 = fadd double %969, %conv1237, !dbg !3903
  store double %add1241, double* %positive_range1240, align 8, !dbg !3903
  br label %if.end1245, !dbg !3901

if.else1242:                                      ; preds = %land.lhs.true, %for.body1228
  %970 = load double, double* %nan, align 8, !dbg !3904
  %971 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3905
  %values1243 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %971, i32 0, i32 5, !dbg !3906
  %972 = load double*, double** %values1243, align 8, !dbg !3906
  %973 = load i64, i64* %i, align 8, !dbg !3907
  %arrayidx1244 = getelementptr inbounds double, double* %972, i64 %973, !dbg !3905
  store double %970, double* %arrayidx1244, align 8, !dbg !3908
  br label %if.end1245

if.end1245:                                       ; preds = %if.else1242, %if.then1236
  br label %for.inc1246, !dbg !3909

for.inc1246:                                      ; preds = %if.end1245
  %974 = load i64, i64* %u, align 8, !dbg !3910
  %inc1247 = add nsw i64 %974, 1, !dbg !3910
  store i64 %inc1247, i64* %u, align 8, !dbg !3910
  %975 = load i64, i64* %i, align 8, !dbg !3911
  %inc1248 = add nsw i64 %975, 1, !dbg !3911
  store i64 %inc1248, i64* %i, align 8, !dbg !3911
  br label %for.cond1224, !dbg !3912, !llvm.loop !3913

for.end1249:                                      ; preds = %for.cond1224
  br label %for.inc1250, !dbg !3914

for.inc1250:                                      ; preds = %for.end1249
  %976 = load i64, i64* %v, align 8, !dbg !3915
  %inc1251 = add nsw i64 %976, 1, !dbg !3915
  store i64 %inc1251, i64* %v, align 8, !dbg !3915
  br label %for.cond1217, !dbg !3916, !llvm.loop !3917

for.end1252:                                      ; preds = %for.cond1217
  %977 = load i64, i64* %scale1150, align 8, !dbg !3919
  %conv1253 = sitofp i64 %977 to double, !dbg !3920
  %978 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3921
  %maximum1254 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %978, i32 0, i32 7, !dbg !3922
  store double %conv1253, double* %maximum1254, align 8, !dbg !3923
  %979 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3924
  %minimum1255 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %979, i32 0, i32 6, !dbg !3925
  store double %conv1253, double* %minimum1255, align 8, !dbg !3926
  %980 = load i32, i32* %type.addr, align 4, !dbg !3927
  %cmp1256 = icmp eq i32 %980, 22, !dbg !3929
  br i1 %cmp1256, label %if.then1258, label %if.end1268, !dbg !3930

if.then1258:                                      ; preds = %for.end1252
  %981 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3931
  %values1259 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %981, i32 0, i32 5, !dbg !3933
  %982 = load double*, double** %values1259, align 8, !dbg !3933
  %983 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3934
  %x1260 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %983, i32 0, i32 3, !dbg !3935
  %984 = load i64, i64* %x1260, align 8, !dbg !3935
  %985 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3936
  %y1261 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %985, i32 0, i32 4, !dbg !3937
  %986 = load i64, i64* %y1261, align 8, !dbg !3937
  %987 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3938
  %width1262 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %987, i32 0, i32 1, !dbg !3939
  %988 = load i64, i64* %width1262, align 8, !dbg !3939
  %mul1263 = mul i64 %986, %988, !dbg !3940
  %add1264 = add i64 %984, %mul1263, !dbg !3941
  %arrayidx1265 = getelementptr inbounds double, double* %982, i64 %add1264, !dbg !3931
  store double 1.000000e+00, double* %arrayidx1265, align 8, !dbg !3942
  %989 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3943
  %positive_range1266 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %989, i32 0, i32 9, !dbg !3944
  store double 1.000000e+00, double* %positive_range1266, align 8, !dbg !3945
  %990 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3946
  %maximum1267 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %990, i32 0, i32 7, !dbg !3947
  store double 1.000000e+00, double* %maximum1267, align 8, !dbg !3948
  br label %if.end1268, !dbg !3949

if.end1268:                                       ; preds = %if.then1258, %for.end1252
  br label %sw.epilog1834, !dbg !3950

sw.bb1269:                                        ; preds = %sw.epilog
  %call1270 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)), !dbg !3951
  store %struct.KernelInfo* %call1270, %struct.KernelInfo** %kernel, align 8, !dbg !3953
  %991 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3954
  %cmp1271 = icmp eq %struct.KernelInfo* %991, null, !dbg !3956
  br i1 %cmp1271, label %if.then1273, label %if.end1274, !dbg !3957

if.then1273:                                      ; preds = %sw.bb1269
  %992 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3958
  store %struct.KernelInfo* %992, %struct.KernelInfo** %retval, align 8, !dbg !3959
  br label %return, !dbg !3959

if.end1274:                                       ; preds = %sw.bb1269
  %993 = load i32, i32* %type.addr, align 4, !dbg !3960
  %994 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3961
  %type1275 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %994, i32 0, i32 0, !dbg !3962
  store i32 %993, i32* %type1275, align 8, !dbg !3963
  %995 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3964
  call void @ExpandMirrorKernelInfo(%struct.KernelInfo* %995), !dbg !3965
  br label %sw.epilog1834, !dbg !3966

sw.bb1276:                                        ; preds = %sw.epilog
  %call1277 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)), !dbg !3967
  store %struct.KernelInfo* %call1277, %struct.KernelInfo** %kernel, align 8, !dbg !3969
  %996 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3970
  %cmp1278 = icmp eq %struct.KernelInfo* %996, null, !dbg !3972
  br i1 %cmp1278, label %if.then1280, label %if.end1281, !dbg !3973

if.then1280:                                      ; preds = %sw.bb1276
  %997 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3974
  store %struct.KernelInfo* %997, %struct.KernelInfo** %retval, align 8, !dbg !3975
  br label %return, !dbg !3975

if.end1281:                                       ; preds = %sw.bb1276
  %998 = load i32, i32* %type.addr, align 4, !dbg !3976
  %999 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3977
  %type1282 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %999, i32 0, i32 0, !dbg !3978
  store i32 %998, i32* %type1282, align 8, !dbg !3979
  %1000 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3980
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1000, double 9.000000e+01), !dbg !3981
  br label %sw.epilog1834, !dbg !3982

sw.bb1283:                                        ; preds = %sw.epilog
  %1001 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !3983
  %rho1284 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1001, i32 0, i32 0, !dbg !3985
  %1002 = load double, double* %rho1284, align 8, !dbg !3985
  %conv1285 = fptosi double %1002 to i32, !dbg !3986
  switch i32 %conv1285, label %sw.default1287 [
    i32 0, label %sw.bb1286
    i32 1, label %sw.bb1303
    i32 2, label %sw.bb1305
  ], !dbg !3987

sw.bb1286:                                        ; preds = %sw.bb1283
  br label %sw.default1287, !dbg !3988

sw.default1287:                                   ; preds = %sw.bb1283, %sw.bb1286
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %new_kernel, metadata !3989, metadata !DIExpression()), !dbg !3992
  %call1288 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0)), !dbg !3993
  store %struct.KernelInfo* %call1288, %struct.KernelInfo** %kernel, align 8, !dbg !3994
  %1003 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3995
  %cmp1289 = icmp eq %struct.KernelInfo* %1003, null, !dbg !3997
  br i1 %cmp1289, label %if.then1291, label %if.end1292, !dbg !3998

if.then1291:                                      ; preds = %sw.default1287
  %1004 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !3999
  store %struct.KernelInfo* %1004, %struct.KernelInfo** %retval, align 8, !dbg !4000
  br label %return, !dbg !4000

if.end1292:                                       ; preds = %sw.default1287
  %1005 = load i32, i32* %type.addr, align 4, !dbg !4001
  %1006 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4002
  %type1293 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1006, i32 0, i32 0, !dbg !4003
  store i32 %1005, i32* %type1293, align 8, !dbg !4004
  %call1294 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)), !dbg !4005
  store %struct.KernelInfo* %call1294, %struct.KernelInfo** %new_kernel, align 8, !dbg !4006
  %1007 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !4007
  %cmp1295 = icmp eq %struct.KernelInfo* %1007, null, !dbg !4009
  br i1 %cmp1295, label %if.then1297, label %if.end1299, !dbg !4010

if.then1297:                                      ; preds = %if.end1292
  %1008 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4011
  %call1298 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1008), !dbg !4012
  store %struct.KernelInfo* %call1298, %struct.KernelInfo** %retval, align 8, !dbg !4013
  br label %return, !dbg !4013

if.end1299:                                       ; preds = %if.end1292
  %1009 = load i32, i32* %type.addr, align 4, !dbg !4014
  %1010 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !4015
  %type1300 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1010, i32 0, i32 0, !dbg !4016
  store i32 %1009, i32* %type1300, align 8, !dbg !4017
  %1011 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !4018
  %1012 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4019
  %call1301 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1012), !dbg !4020
  %next1302 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1301, i32 0, i32 11, !dbg !4021
  store %struct.KernelInfo* %1011, %struct.KernelInfo** %next1302, align 8, !dbg !4022
  %1013 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4023
  call void @ExpandMirrorKernelInfo(%struct.KernelInfo* %1013), !dbg !4024
  %1014 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4025
  store %struct.KernelInfo* %1014, %struct.KernelInfo** %retval, align 8, !dbg !4026
  br label %return, !dbg !4026

sw.bb1303:                                        ; preds = %sw.bb1283
  %call1304 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0)), !dbg !4027
  store %struct.KernelInfo* %call1304, %struct.KernelInfo** %kernel, align 8, !dbg !4028
  br label %sw.epilog1307, !dbg !4029

sw.bb1305:                                        ; preds = %sw.bb1283
  %call1306 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)), !dbg !4030
  store %struct.KernelInfo* %call1306, %struct.KernelInfo** %kernel, align 8, !dbg !4031
  br label %sw.epilog1307, !dbg !4032

sw.epilog1307:                                    ; preds = %sw.bb1305, %sw.bb1303
  %1015 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4033
  %cmp1308 = icmp eq %struct.KernelInfo* %1015, null, !dbg !4035
  br i1 %cmp1308, label %if.then1310, label %if.end1311, !dbg !4036

if.then1310:                                      ; preds = %sw.epilog1307
  %1016 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4037
  store %struct.KernelInfo* %1016, %struct.KernelInfo** %retval, align 8, !dbg !4038
  br label %return, !dbg !4038

if.end1311:                                       ; preds = %sw.epilog1307
  %1017 = load i32, i32* %type.addr, align 4, !dbg !4039
  %1018 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4040
  %type1312 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1018, i32 0, i32 0, !dbg !4041
  store i32 %1017, i32* %type1312, align 8, !dbg !4042
  %1019 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4043
  %1020 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4044
  %sigma1313 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1020, i32 0, i32 1, !dbg !4045
  %1021 = load double, double* %sigma1313, align 8, !dbg !4045
  call void @RotateKernelInfo(%struct.KernelInfo* %1019, double %1021), !dbg !4046
  br label %sw.epilog1834, !dbg !4047

sw.bb1314:                                        ; preds = %sw.epilog
  %1022 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4048
  %rho1315 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1022, i32 0, i32 0, !dbg !4050
  %1023 = load double, double* %rho1315, align 8, !dbg !4050
  %conv1316 = fptosi double %1023 to i32, !dbg !4051
  switch i32 %conv1316, label %sw.default1318 [
    i32 0, label %sw.bb1317
    i32 1, label %sw.bb1320
    i32 2, label %sw.bb1322
    i32 3, label %sw.bb1324
    i32 4, label %sw.bb1326
  ], !dbg !4052

sw.bb1317:                                        ; preds = %sw.bb1314
  br label %sw.default1318, !dbg !4053

sw.default1318:                                   ; preds = %sw.bb1314, %sw.bb1317
  %call1319 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0)), !dbg !4054
  store %struct.KernelInfo* %call1319, %struct.KernelInfo** %retval, align 8, !dbg !4056
  br label %return, !dbg !4056

sw.bb1320:                                        ; preds = %sw.bb1314
  %call1321 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0)), !dbg !4057
  store %struct.KernelInfo* %call1321, %struct.KernelInfo** %kernel, align 8, !dbg !4058
  br label %sw.epilog1328, !dbg !4059

sw.bb1322:                                        ; preds = %sw.bb1314
  %call1323 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)), !dbg !4060
  store %struct.KernelInfo* %call1323, %struct.KernelInfo** %kernel, align 8, !dbg !4061
  br label %sw.epilog1328, !dbg !4062

sw.bb1324:                                        ; preds = %sw.bb1314
  %call1325 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0)), !dbg !4063
  store %struct.KernelInfo* %call1325, %struct.KernelInfo** %kernel, align 8, !dbg !4064
  br label %sw.epilog1328, !dbg !4065

sw.bb1326:                                        ; preds = %sw.bb1314
  %call1327 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0)), !dbg !4066
  store %struct.KernelInfo* %call1327, %struct.KernelInfo** %kernel, align 8, !dbg !4067
  br label %sw.epilog1328, !dbg !4068

sw.epilog1328:                                    ; preds = %sw.bb1326, %sw.bb1324, %sw.bb1322, %sw.bb1320
  %1024 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4069
  %cmp1329 = icmp eq %struct.KernelInfo* %1024, null, !dbg !4071
  br i1 %cmp1329, label %if.then1331, label %if.end1332, !dbg !4072

if.then1331:                                      ; preds = %sw.epilog1328
  %1025 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4073
  store %struct.KernelInfo* %1025, %struct.KernelInfo** %retval, align 8, !dbg !4074
  br label %return, !dbg !4074

if.end1332:                                       ; preds = %sw.epilog1328
  %1026 = load i32, i32* %type.addr, align 4, !dbg !4075
  %1027 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4076
  %type1333 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1027, i32 0, i32 0, !dbg !4077
  store i32 %1026, i32* %type1333, align 8, !dbg !4078
  %1028 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4079
  %1029 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4080
  %sigma1334 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1029, i32 0, i32 1, !dbg !4081
  %1030 = load double, double* %sigma1334, align 8, !dbg !4081
  call void @RotateKernelInfo(%struct.KernelInfo* %1028, double %1030), !dbg !4082
  br label %sw.epilog1834, !dbg !4083

sw.bb1335:                                        ; preds = %sw.epilog
  %1031 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4084
  %rho1336 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1031, i32 0, i32 0, !dbg !4086
  %1032 = load double, double* %rho1336, align 8, !dbg !4086
  %conv1337 = fptosi double %1032 to i32, !dbg !4087
  switch i32 %conv1337, label %sw.default1339 [
    i32 0, label %sw.bb1338
    i32 1, label %sw.bb1341
    i32 2, label %sw.bb1343
    i32 3, label %sw.bb1345
    i32 4, label %sw.bb1347
    i32 5, label %sw.bb1349
  ], !dbg !4088

sw.bb1338:                                        ; preds = %sw.bb1335
  br label %sw.default1339, !dbg !4089

sw.default1339:                                   ; preds = %sw.bb1335, %sw.bb1338
  %call1340 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i64 0, i64 0)), !dbg !4090
  store %struct.KernelInfo* %call1340, %struct.KernelInfo** %retval, align 8, !dbg !4092
  br label %return, !dbg !4092

sw.bb1341:                                        ; preds = %sw.bb1335
  %call1342 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)), !dbg !4093
  store %struct.KernelInfo* %call1342, %struct.KernelInfo** %kernel, align 8, !dbg !4094
  br label %sw.epilog1351, !dbg !4095

sw.bb1343:                                        ; preds = %sw.bb1335
  %call1344 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)), !dbg !4096
  store %struct.KernelInfo* %call1344, %struct.KernelInfo** %kernel, align 8, !dbg !4097
  br label %sw.epilog1351, !dbg !4098

sw.bb1345:                                        ; preds = %sw.bb1335
  %call1346 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)), !dbg !4099
  store %struct.KernelInfo* %call1346, %struct.KernelInfo** %kernel, align 8, !dbg !4100
  br label %sw.epilog1351, !dbg !4101

sw.bb1347:                                        ; preds = %sw.bb1335
  %call1348 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)), !dbg !4102
  store %struct.KernelInfo* %call1348, %struct.KernelInfo** %kernel, align 8, !dbg !4103
  br label %sw.epilog1351, !dbg !4104

sw.bb1349:                                        ; preds = %sw.bb1335
  %call1350 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0)), !dbg !4105
  store %struct.KernelInfo* %call1350, %struct.KernelInfo** %kernel, align 8, !dbg !4106
  br label %sw.epilog1351, !dbg !4107

sw.epilog1351:                                    ; preds = %sw.bb1349, %sw.bb1347, %sw.bb1345, %sw.bb1343, %sw.bb1341
  %1033 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4108
  %cmp1352 = icmp eq %struct.KernelInfo* %1033, null, !dbg !4110
  br i1 %cmp1352, label %if.then1354, label %if.end1355, !dbg !4111

if.then1354:                                      ; preds = %sw.epilog1351
  %1034 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4112
  store %struct.KernelInfo* %1034, %struct.KernelInfo** %retval, align 8, !dbg !4113
  br label %return, !dbg !4113

if.end1355:                                       ; preds = %sw.epilog1351
  %1035 = load i32, i32* %type.addr, align 4, !dbg !4114
  %1036 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4115
  %type1356 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1036, i32 0, i32 0, !dbg !4116
  store i32 %1035, i32* %type1356, align 8, !dbg !4117
  %1037 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4118
  %1038 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4119
  %sigma1357 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1038, i32 0, i32 1, !dbg !4120
  %1039 = load double, double* %sigma1357, align 8, !dbg !4120
  call void @RotateKernelInfo(%struct.KernelInfo* %1037, double %1039), !dbg !4121
  br label %sw.epilog1834, !dbg !4122

sw.bb1358:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %new_kernel1359, metadata !4123, metadata !DIExpression()), !dbg !4125
  %1040 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4126
  %rho1360 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1040, i32 0, i32 0, !dbg !4127
  %1041 = load double, double* %rho1360, align 8, !dbg !4127
  %conv1361 = fptosi double %1041 to i32, !dbg !4128
  switch i32 %conv1361, label %sw.default1363 [
    i32 1, label %sw.bb1362
    i32 2, label %sw.bb1370
  ], !dbg !4129

sw.bb1362:                                        ; preds = %sw.bb1358
  br label %sw.default1363, !dbg !4130

sw.default1363:                                   ; preds = %sw.bb1358, %sw.bb1362
  %call1364 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)), !dbg !4131
  store %struct.KernelInfo* %call1364, %struct.KernelInfo** %kernel, align 8, !dbg !4133
  %1042 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4134
  %cmp1365 = icmp eq %struct.KernelInfo* %1042, null, !dbg !4136
  br i1 %cmp1365, label %if.then1367, label %if.end1368, !dbg !4137

if.then1367:                                      ; preds = %sw.default1363
  %1043 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4138
  store %struct.KernelInfo* %1043, %struct.KernelInfo** %retval, align 8, !dbg !4139
  br label %return, !dbg !4139

if.end1368:                                       ; preds = %sw.default1363
  %1044 = load i32, i32* %type.addr, align 4, !dbg !4140
  %1045 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4141
  %type1369 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1045, i32 0, i32 0, !dbg !4142
  store i32 %1044, i32* %type1369, align 8, !dbg !4143
  %1046 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4144
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1046, double 9.000000e+01), !dbg !4145
  br label %sw.epilog1449, !dbg !4146

sw.bb1370:                                        ; preds = %sw.bb1358
  %call1371 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0)), !dbg !4147
  store %struct.KernelInfo* %call1371, %struct.KernelInfo** %kernel, align 8, !dbg !4148
  %1047 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4149
  %cmp1372 = icmp eq %struct.KernelInfo* %1047, null, !dbg !4151
  br i1 %cmp1372, label %if.then1374, label %if.end1375, !dbg !4152

if.then1374:                                      ; preds = %sw.bb1370
  %1048 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4153
  store %struct.KernelInfo* %1048, %struct.KernelInfo** %retval, align 8, !dbg !4154
  br label %return, !dbg !4154

if.end1375:                                       ; preds = %sw.bb1370
  %1049 = load i32, i32* %type.addr, align 4, !dbg !4155
  %1050 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4156
  %type1376 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1050, i32 0, i32 0, !dbg !4157
  store i32 %1049, i32* %type1376, align 8, !dbg !4158
  %1051 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4159
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1051, double 9.000000e+01), !dbg !4160
  %call1377 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0)), !dbg !4161
  store %struct.KernelInfo* %call1377, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4162
  %1052 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4163
  %cmp1378 = icmp eq %struct.KernelInfo* %1052, null, !dbg !4165
  br i1 %cmp1378, label %if.then1380, label %if.end1382, !dbg !4166

if.then1380:                                      ; preds = %if.end1375
  %1053 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4167
  %call1381 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1053), !dbg !4168
  store %struct.KernelInfo* %call1381, %struct.KernelInfo** %retval, align 8, !dbg !4169
  br label %return, !dbg !4169

if.end1382:                                       ; preds = %if.end1375
  %1054 = load i32, i32* %type.addr, align 4, !dbg !4170
  %1055 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4171
  %type1383 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1055, i32 0, i32 0, !dbg !4172
  store i32 %1054, i32* %type1383, align 8, !dbg !4173
  %1056 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4174
  %1057 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4175
  %call1384 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1057), !dbg !4176
  %next1385 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1384, i32 0, i32 11, !dbg !4177
  store %struct.KernelInfo* %1056, %struct.KernelInfo** %next1385, align 8, !dbg !4178
  %call1386 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0)), !dbg !4179
  store %struct.KernelInfo* %call1386, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4180
  %1058 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4181
  %cmp1387 = icmp eq %struct.KernelInfo* %1058, null, !dbg !4183
  br i1 %cmp1387, label %if.then1389, label %if.end1391, !dbg !4184

if.then1389:                                      ; preds = %if.end1382
  %1059 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4185
  %call1390 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1059), !dbg !4186
  store %struct.KernelInfo* %call1390, %struct.KernelInfo** %retval, align 8, !dbg !4187
  br label %return, !dbg !4187

if.end1391:                                       ; preds = %if.end1382
  %1060 = load i32, i32* %type.addr, align 4, !dbg !4188
  %1061 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4189
  %type1392 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1061, i32 0, i32 0, !dbg !4190
  store i32 %1060, i32* %type1392, align 8, !dbg !4191
  %1062 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4192
  %1063 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4193
  %call1393 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1063), !dbg !4194
  %next1394 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1393, i32 0, i32 11, !dbg !4195
  store %struct.KernelInfo* %1062, %struct.KernelInfo** %next1394, align 8, !dbg !4196
  %call1395 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0)), !dbg !4197
  store %struct.KernelInfo* %call1395, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4198
  %1064 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4199
  %cmp1396 = icmp eq %struct.KernelInfo* %1064, null, !dbg !4201
  br i1 %cmp1396, label %if.then1398, label %if.end1400, !dbg !4202

if.then1398:                                      ; preds = %if.end1391
  %1065 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4203
  %call1399 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1065), !dbg !4204
  store %struct.KernelInfo* %call1399, %struct.KernelInfo** %retval, align 8, !dbg !4205
  br label %return, !dbg !4205

if.end1400:                                       ; preds = %if.end1391
  %1066 = load i32, i32* %type.addr, align 4, !dbg !4206
  %1067 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4207
  %type1401 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1067, i32 0, i32 0, !dbg !4208
  store i32 %1066, i32* %type1401, align 8, !dbg !4209
  %1068 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4210
  %1069 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4211
  %call1402 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1069), !dbg !4212
  %next1403 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1402, i32 0, i32 11, !dbg !4213
  store %struct.KernelInfo* %1068, %struct.KernelInfo** %next1403, align 8, !dbg !4214
  %call1404 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0)), !dbg !4215
  store %struct.KernelInfo* %call1404, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4216
  %1070 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4217
  %cmp1405 = icmp eq %struct.KernelInfo* %1070, null, !dbg !4219
  br i1 %cmp1405, label %if.then1407, label %if.end1409, !dbg !4220

if.then1407:                                      ; preds = %if.end1400
  %1071 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4221
  %call1408 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1071), !dbg !4222
  store %struct.KernelInfo* %call1408, %struct.KernelInfo** %retval, align 8, !dbg !4223
  br label %return, !dbg !4223

if.end1409:                                       ; preds = %if.end1400
  %1072 = load i32, i32* %type.addr, align 4, !dbg !4224
  %1073 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4225
  %type1410 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1073, i32 0, i32 0, !dbg !4226
  store i32 %1072, i32* %type1410, align 8, !dbg !4227
  %1074 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4228
  %1075 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4229
  %call1411 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1075), !dbg !4230
  %next1412 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1411, i32 0, i32 11, !dbg !4231
  store %struct.KernelInfo* %1074, %struct.KernelInfo** %next1412, align 8, !dbg !4232
  %call1413 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0)), !dbg !4233
  store %struct.KernelInfo* %call1413, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4234
  %1076 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4235
  %cmp1414 = icmp eq %struct.KernelInfo* %1076, null, !dbg !4237
  br i1 %cmp1414, label %if.then1416, label %if.end1418, !dbg !4238

if.then1416:                                      ; preds = %if.end1409
  %1077 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4239
  %call1417 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1077), !dbg !4240
  store %struct.KernelInfo* %call1417, %struct.KernelInfo** %retval, align 8, !dbg !4241
  br label %return, !dbg !4241

if.end1418:                                       ; preds = %if.end1409
  %1078 = load i32, i32* %type.addr, align 4, !dbg !4242
  %1079 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4243
  %type1419 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1079, i32 0, i32 0, !dbg !4244
  store i32 %1078, i32* %type1419, align 8, !dbg !4245
  %1080 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4246
  %1081 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4247
  %call1420 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1081), !dbg !4248
  %next1421 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1420, i32 0, i32 11, !dbg !4249
  store %struct.KernelInfo* %1080, %struct.KernelInfo** %next1421, align 8, !dbg !4250
  %call1422 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i64 0, i64 0)), !dbg !4251
  store %struct.KernelInfo* %call1422, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4252
  %1082 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4253
  %cmp1423 = icmp eq %struct.KernelInfo* %1082, null, !dbg !4255
  br i1 %cmp1423, label %if.then1425, label %if.end1427, !dbg !4256

if.then1425:                                      ; preds = %if.end1418
  %1083 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4257
  %call1426 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1083), !dbg !4258
  store %struct.KernelInfo* %call1426, %struct.KernelInfo** %retval, align 8, !dbg !4259
  br label %return, !dbg !4259

if.end1427:                                       ; preds = %if.end1418
  %1084 = load i32, i32* %type.addr, align 4, !dbg !4260
  %1085 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4261
  %type1428 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1085, i32 0, i32 0, !dbg !4262
  store i32 %1084, i32* %type1428, align 8, !dbg !4263
  %1086 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4264
  %1087 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4265
  %call1429 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1087), !dbg !4266
  %next1430 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1429, i32 0, i32 11, !dbg !4267
  store %struct.KernelInfo* %1086, %struct.KernelInfo** %next1430, align 8, !dbg !4268
  %call1431 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0)), !dbg !4269
  store %struct.KernelInfo* %call1431, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4270
  %1088 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4271
  %cmp1432 = icmp eq %struct.KernelInfo* %1088, null, !dbg !4273
  br i1 %cmp1432, label %if.then1434, label %if.end1436, !dbg !4274

if.then1434:                                      ; preds = %if.end1427
  %1089 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4275
  %call1435 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1089), !dbg !4276
  store %struct.KernelInfo* %call1435, %struct.KernelInfo** %retval, align 8, !dbg !4277
  br label %return, !dbg !4277

if.end1436:                                       ; preds = %if.end1427
  %1090 = load i32, i32* %type.addr, align 4, !dbg !4278
  %1091 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4279
  %type1437 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1091, i32 0, i32 0, !dbg !4280
  store i32 %1090, i32* %type1437, align 8, !dbg !4281
  %1092 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4282
  %1093 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4283
  %call1438 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1093), !dbg !4284
  %next1439 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1438, i32 0, i32 11, !dbg !4285
  store %struct.KernelInfo* %1092, %struct.KernelInfo** %next1439, align 8, !dbg !4286
  %call1440 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46, i64 0, i64 0)), !dbg !4287
  store %struct.KernelInfo* %call1440, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4288
  %1094 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4289
  %cmp1441 = icmp eq %struct.KernelInfo* %1094, null, !dbg !4291
  br i1 %cmp1441, label %if.then1443, label %if.end1445, !dbg !4292

if.then1443:                                      ; preds = %if.end1436
  %1095 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4293
  %call1444 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1095), !dbg !4294
  store %struct.KernelInfo* %call1444, %struct.KernelInfo** %retval, align 8, !dbg !4295
  br label %return, !dbg !4295

if.end1445:                                       ; preds = %if.end1436
  %1096 = load i32, i32* %type.addr, align 4, !dbg !4296
  %1097 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4297
  %type1446 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1097, i32 0, i32 0, !dbg !4298
  store i32 %1096, i32* %type1446, align 8, !dbg !4299
  %1098 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1359, align 8, !dbg !4300
  %1099 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4301
  %call1447 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1099), !dbg !4302
  %next1448 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1447, i32 0, i32 11, !dbg !4303
  store %struct.KernelInfo* %1098, %struct.KernelInfo** %next1448, align 8, !dbg !4304
  br label %sw.epilog1449, !dbg !4305

sw.epilog1449:                                    ; preds = %if.end1445, %if.end1368
  br label %sw.epilog1834, !dbg !4306

sw.bb1450:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %new_kernel1451, metadata !4307, metadata !DIExpression()), !dbg !4309
  %call1452 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0)), !dbg !4310
  store %struct.KernelInfo* %call1452, %struct.KernelInfo** %kernel, align 8, !dbg !4311
  %1100 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4312
  %cmp1453 = icmp eq %struct.KernelInfo* %1100, null, !dbg !4314
  br i1 %cmp1453, label %if.then1455, label %if.end1456, !dbg !4315

if.then1455:                                      ; preds = %sw.bb1450
  %1101 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4316
  store %struct.KernelInfo* %1101, %struct.KernelInfo** %retval, align 8, !dbg !4317
  br label %return, !dbg !4317

if.end1456:                                       ; preds = %sw.bb1450
  %1102 = load i32, i32* %type.addr, align 4, !dbg !4318
  %1103 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4319
  %type1457 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1103, i32 0, i32 0, !dbg !4320
  store i32 %1102, i32* %type1457, align 8, !dbg !4321
  %1104 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4322
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1104, double 9.000000e+01), !dbg !4323
  %call1458 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0)), !dbg !4324
  store %struct.KernelInfo* %call1458, %struct.KernelInfo** %new_kernel1451, align 8, !dbg !4325
  %1105 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1451, align 8, !dbg !4326
  %cmp1459 = icmp eq %struct.KernelInfo* %1105, null, !dbg !4328
  br i1 %cmp1459, label %if.then1461, label %if.end1463, !dbg !4329

if.then1461:                                      ; preds = %if.end1456
  %1106 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4330
  %call1462 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1106), !dbg !4331
  store %struct.KernelInfo* %call1462, %struct.KernelInfo** %retval, align 8, !dbg !4332
  br label %return, !dbg !4332

if.end1463:                                       ; preds = %if.end1456
  %1107 = load i32, i32* %type.addr, align 4, !dbg !4333
  %1108 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1451, align 8, !dbg !4334
  %type1464 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1108, i32 0, i32 0, !dbg !4335
  store i32 %1107, i32* %type1464, align 8, !dbg !4336
  %1109 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1451, align 8, !dbg !4337
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1109, double 9.000000e+01), !dbg !4338
  %1110 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel1451, align 8, !dbg !4339
  %1111 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4340
  %call1465 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %1111), !dbg !4341
  %next1466 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1465, i32 0, i32 11, !dbg !4342
  store %struct.KernelInfo* %1110, %struct.KernelInfo** %next1466, align 8, !dbg !4343
  br label %sw.epilog1834, !dbg !4344

sw.bb1467:                                        ; preds = %sw.epilog
  %1112 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4345
  %rho1468 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1112, i32 0, i32 0, !dbg !4347
  %1113 = load double, double* %rho1468, align 8, !dbg !4347
  %conv1469 = fptosi double %1113 to i32, !dbg !4348
  switch i32 %conv1469, label %sw.default1471 [
    i32 1, label %sw.bb1470
    i32 2, label %sw.bb1478
    i32 3, label %sw.bb1493
  ], !dbg !4349

sw.bb1470:                                        ; preds = %sw.bb1467
  br label %sw.default1471, !dbg !4350

sw.default1471:                                   ; preds = %sw.bb1467, %sw.bb1470
  %call1472 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)), !dbg !4351
  store %struct.KernelInfo* %call1472, %struct.KernelInfo** %kernel, align 8, !dbg !4353
  %1114 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4354
  %cmp1473 = icmp eq %struct.KernelInfo* %1114, null, !dbg !4356
  br i1 %cmp1473, label %if.then1475, label %if.end1476, !dbg !4357

if.then1475:                                      ; preds = %sw.default1471
  %1115 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4358
  store %struct.KernelInfo* %1115, %struct.KernelInfo** %retval, align 8, !dbg !4359
  br label %return, !dbg !4359

if.end1476:                                       ; preds = %sw.default1471
  %1116 = load i32, i32* %type.addr, align 4, !dbg !4360
  %1117 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4361
  %type1477 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1117, i32 0, i32 0, !dbg !4362
  store i32 %1116, i32* %type1477, align 8, !dbg !4363
  %1118 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4364
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1118, double 4.500000e+01), !dbg !4365
  br label %sw.epilog1505, !dbg !4366

sw.bb1478:                                        ; preds = %sw.bb1467
  %call1479 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0)), !dbg !4367
  store %struct.KernelInfo* %call1479, %struct.KernelInfo** %kernel, align 8, !dbg !4368
  %1119 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4369
  %cmp1480 = icmp eq %struct.KernelInfo* %1119, null, !dbg !4371
  br i1 %cmp1480, label %if.then1482, label %if.end1483, !dbg !4372

if.then1482:                                      ; preds = %sw.bb1478
  %1120 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4373
  store %struct.KernelInfo* %1120, %struct.KernelInfo** %retval, align 8, !dbg !4374
  br label %return, !dbg !4374

if.end1483:                                       ; preds = %sw.bb1478
  %1121 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4375
  %next1484 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1121, i32 0, i32 11, !dbg !4377
  %1122 = load %struct.KernelInfo*, %struct.KernelInfo** %next1484, align 8, !dbg !4377
  %cmp1485 = icmp eq %struct.KernelInfo* %1122, null, !dbg !4378
  br i1 %cmp1485, label %if.then1487, label %if.end1489, !dbg !4379

if.then1487:                                      ; preds = %if.end1483
  %1123 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4380
  %call1488 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1123), !dbg !4381
  store %struct.KernelInfo* %call1488, %struct.KernelInfo** %retval, align 8, !dbg !4382
  br label %return, !dbg !4382

if.end1489:                                       ; preds = %if.end1483
  %1124 = load i32, i32* %type.addr, align 4, !dbg !4383
  %1125 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4384
  %type1490 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1125, i32 0, i32 0, !dbg !4385
  store i32 %1124, i32* %type1490, align 8, !dbg !4386
  %1126 = load i32, i32* %type.addr, align 4, !dbg !4387
  %1127 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4388
  %next1491 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1127, i32 0, i32 11, !dbg !4389
  %1128 = load %struct.KernelInfo*, %struct.KernelInfo** %next1491, align 8, !dbg !4389
  %type1492 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1128, i32 0, i32 0, !dbg !4390
  store i32 %1126, i32* %type1492, align 8, !dbg !4391
  %1129 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4392
  call void @ExpandRotateKernelInfo(%struct.KernelInfo* %1129, double 9.000000e+01), !dbg !4393
  br label %sw.epilog1505, !dbg !4394

sw.bb1493:                                        ; preds = %sw.bb1467
  %call1494 = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i64 0, i64 0)), !dbg !4395
  store %struct.KernelInfo* %call1494, %struct.KernelInfo** %kernel, align 8, !dbg !4396
  %1130 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4397
  %cmp1495 = icmp eq %struct.KernelInfo* %1130, null, !dbg !4399
  br i1 %cmp1495, label %if.then1497, label %if.end1498, !dbg !4400

if.then1497:                                      ; preds = %sw.bb1493
  %1131 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4401
  store %struct.KernelInfo* %1131, %struct.KernelInfo** %retval, align 8, !dbg !4402
  br label %return, !dbg !4402

if.end1498:                                       ; preds = %sw.bb1493
  %1132 = load i32, i32* %type.addr, align 4, !dbg !4403
  %1133 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4404
  %type1499 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1133, i32 0, i32 0, !dbg !4405
  store i32 %1132, i32* %type1499, align 8, !dbg !4406
  %1134 = load i32, i32* %type.addr, align 4, !dbg !4407
  %1135 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4408
  %next1500 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1135, i32 0, i32 11, !dbg !4409
  %1136 = load %struct.KernelInfo*, %struct.KernelInfo** %next1500, align 8, !dbg !4409
  %type1501 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1136, i32 0, i32 0, !dbg !4410
  store i32 %1134, i32* %type1501, align 8, !dbg !4411
  %1137 = load i32, i32* %type.addr, align 4, !dbg !4412
  %1138 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4413
  %next1502 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1138, i32 0, i32 11, !dbg !4414
  %1139 = load %struct.KernelInfo*, %struct.KernelInfo** %next1502, align 8, !dbg !4414
  %next1503 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1139, i32 0, i32 11, !dbg !4415
  %1140 = load %struct.KernelInfo*, %struct.KernelInfo** %next1503, align 8, !dbg !4415
  %type1504 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1140, i32 0, i32 0, !dbg !4416
  store i32 %1137, i32* %type1504, align 8, !dbg !4417
  %1141 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4418
  call void @ExpandMirrorKernelInfo(%struct.KernelInfo* %1141), !dbg !4419
  br label %sw.epilog1505, !dbg !4420

sw.epilog1505:                                    ; preds = %if.end1498, %if.end1489, %if.end1476
  br label %sw.epilog1834, !dbg !4421

sw.bb1506:                                        ; preds = %sw.epilog
  %1142 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4422
  %rho1507 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1142, i32 0, i32 0, !dbg !4424
  %1143 = load double, double* %rho1507, align 8, !dbg !4424
  %conv1508 = fptosi double %1143 to i32, !dbg !4425
  switch i32 %conv1508, label %sw.default1551 [
    i32 41, label %sw.bb1509
    i32 42, label %sw.bb1511
    i32 43, label %sw.bb1513
    i32 44, label %sw.bb1515
    i32 45, label %sw.bb1517
    i32 46, label %sw.bb1519
    i32 47, label %sw.bb1521
    i32 48, label %sw.bb1523
    i32 49, label %sw.bb1525
    i32 81, label %sw.bb1527
    i32 82, label %sw.bb1529
    i32 83, label %sw.bb1531
    i32 84, label %sw.bb1533
    i32 85, label %sw.bb1535
    i32 86, label %sw.bb1537
    i32 87, label %sw.bb1539
    i32 88, label %sw.bb1541
    i32 89, label %sw.bb1543
    i32 423, label %sw.bb1545
    i32 823, label %sw.bb1547
    i32 481, label %sw.bb1549
    i32 482, label %sw.bb1552
  ], !dbg !4426

sw.bb1509:                                        ; preds = %sw.bb1506
  %call1510 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0)), !dbg !4427
  store %struct.KernelInfo* %call1510, %struct.KernelInfo** %kernel, align 8, !dbg !4429
  br label %sw.epilog1554, !dbg !4430

sw.bb1511:                                        ; preds = %sw.bb1506
  %call1512 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i64 0, i64 0)), !dbg !4431
  store %struct.KernelInfo* %call1512, %struct.KernelInfo** %kernel, align 8, !dbg !4432
  br label %sw.epilog1554, !dbg !4433

sw.bb1513:                                        ; preds = %sw.bb1506
  %call1514 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)), !dbg !4434
  store %struct.KernelInfo* %call1514, %struct.KernelInfo** %kernel, align 8, !dbg !4435
  br label %sw.epilog1554, !dbg !4436

sw.bb1515:                                        ; preds = %sw.bb1506
  %call1516 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0)), !dbg !4437
  store %struct.KernelInfo* %call1516, %struct.KernelInfo** %kernel, align 8, !dbg !4438
  br label %sw.epilog1554, !dbg !4439

sw.bb1517:                                        ; preds = %sw.bb1506
  %call1518 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)), !dbg !4440
  store %struct.KernelInfo* %call1518, %struct.KernelInfo** %kernel, align 8, !dbg !4441
  br label %sw.epilog1554, !dbg !4442

sw.bb1519:                                        ; preds = %sw.bb1506
  %call1520 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0)), !dbg !4443
  store %struct.KernelInfo* %call1520, %struct.KernelInfo** %kernel, align 8, !dbg !4444
  br label %sw.epilog1554, !dbg !4445

sw.bb1521:                                        ; preds = %sw.bb1506
  %call1522 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0)), !dbg !4446
  store %struct.KernelInfo* %call1522, %struct.KernelInfo** %kernel, align 8, !dbg !4447
  br label %sw.epilog1554, !dbg !4448

sw.bb1523:                                        ; preds = %sw.bb1506
  %call1524 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0)), !dbg !4449
  store %struct.KernelInfo* %call1524, %struct.KernelInfo** %kernel, align 8, !dbg !4450
  br label %sw.epilog1554, !dbg !4451

sw.bb1525:                                        ; preds = %sw.bb1506
  %call1526 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.59, i64 0, i64 0)), !dbg !4452
  store %struct.KernelInfo* %call1526, %struct.KernelInfo** %kernel, align 8, !dbg !4453
  br label %sw.epilog1554, !dbg !4454

sw.bb1527:                                        ; preds = %sw.bb1506
  %call1528 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i64 0, i64 0)), !dbg !4455
  store %struct.KernelInfo* %call1528, %struct.KernelInfo** %kernel, align 8, !dbg !4456
  br label %sw.epilog1554, !dbg !4457

sw.bb1529:                                        ; preds = %sw.bb1506
  %call1530 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0)), !dbg !4458
  store %struct.KernelInfo* %call1530, %struct.KernelInfo** %kernel, align 8, !dbg !4459
  br label %sw.epilog1554, !dbg !4460

sw.bb1531:                                        ; preds = %sw.bb1506
  %call1532 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0)), !dbg !4461
  store %struct.KernelInfo* %call1532, %struct.KernelInfo** %kernel, align 8, !dbg !4462
  br label %sw.epilog1554, !dbg !4463

sw.bb1533:                                        ; preds = %sw.bb1506
  %call1534 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i64 0, i64 0)), !dbg !4464
  store %struct.KernelInfo* %call1534, %struct.KernelInfo** %kernel, align 8, !dbg !4465
  br label %sw.epilog1554, !dbg !4466

sw.bb1535:                                        ; preds = %sw.bb1506
  %call1536 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0)), !dbg !4467
  store %struct.KernelInfo* %call1536, %struct.KernelInfo** %kernel, align 8, !dbg !4468
  br label %sw.epilog1554, !dbg !4469

sw.bb1537:                                        ; preds = %sw.bb1506
  %call1538 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0)), !dbg !4470
  store %struct.KernelInfo* %call1538, %struct.KernelInfo** %kernel, align 8, !dbg !4471
  br label %sw.epilog1554, !dbg !4472

sw.bb1539:                                        ; preds = %sw.bb1506
  %call1540 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0)), !dbg !4473
  store %struct.KernelInfo* %call1540, %struct.KernelInfo** %kernel, align 8, !dbg !4474
  br label %sw.epilog1554, !dbg !4475

sw.bb1541:                                        ; preds = %sw.bb1506
  %call1542 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0)), !dbg !4476
  store %struct.KernelInfo* %call1542, %struct.KernelInfo** %kernel, align 8, !dbg !4477
  br label %sw.epilog1554, !dbg !4478

sw.bb1543:                                        ; preds = %sw.bb1506
  %call1544 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0)), !dbg !4479
  store %struct.KernelInfo* %call1544, %struct.KernelInfo** %kernel, align 8, !dbg !4480
  br label %sw.epilog1554, !dbg !4481

sw.bb1545:                                        ; preds = %sw.bb1506
  %call1546 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0)), !dbg !4482
  store %struct.KernelInfo* %call1546, %struct.KernelInfo** %kernel, align 8, !dbg !4483
  br label %sw.epilog1554, !dbg !4484

sw.bb1547:                                        ; preds = %sw.bb1506
  %call1548 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i64 0, i64 0)), !dbg !4485
  store %struct.KernelInfo* %call1548, %struct.KernelInfo** %kernel, align 8, !dbg !4486
  br label %sw.epilog1554, !dbg !4487

sw.bb1549:                                        ; preds = %sw.bb1506
  %call1550 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i64 0, i64 0)), !dbg !4488
  store %struct.KernelInfo* %call1550, %struct.KernelInfo** %kernel, align 8, !dbg !4489
  br label %sw.epilog1554, !dbg !4490

sw.default1551:                                   ; preds = %sw.bb1506
  br label %sw.bb1552, !dbg !4490

sw.bb1552:                                        ; preds = %sw.bb1506, %sw.default1551
  %call1553 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0)), !dbg !4491
  store %struct.KernelInfo* %call1553, %struct.KernelInfo** %kernel, align 8, !dbg !4492
  br label %sw.epilog1554, !dbg !4493

sw.epilog1554:                                    ; preds = %sw.bb1552, %sw.bb1549, %sw.bb1547, %sw.bb1545, %sw.bb1543, %sw.bb1541, %sw.bb1539, %sw.bb1537, %sw.bb1535, %sw.bb1533, %sw.bb1531, %sw.bb1529, %sw.bb1527, %sw.bb1525, %sw.bb1523, %sw.bb1521, %sw.bb1519, %sw.bb1517, %sw.bb1515, %sw.bb1513, %sw.bb1511, %sw.bb1509
  %1144 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4494
  %cmp1555 = icmp eq %struct.KernelInfo* %1144, null, !dbg !4496
  br i1 %cmp1555, label %if.then1557, label %if.end1558, !dbg !4497

if.then1557:                                      ; preds = %sw.epilog1554
  %1145 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4498
  store %struct.KernelInfo* %1145, %struct.KernelInfo** %retval, align 8, !dbg !4499
  br label %return, !dbg !4499

if.end1558:                                       ; preds = %sw.epilog1554
  %1146 = load i32, i32* %type.addr, align 4, !dbg !4500
  %1147 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4501
  %type1559 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1147, i32 0, i32 0, !dbg !4502
  store i32 %1146, i32* %type1559, align 8, !dbg !4503
  %1148 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4504
  %1149 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4505
  %sigma1560 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1149, i32 0, i32 1, !dbg !4506
  %1150 = load double, double* %sigma1560, align 8, !dbg !4506
  call void @RotateKernelInfo(%struct.KernelInfo* %1148, double %1150), !dbg !4507
  br label %sw.epilog1834, !dbg !4508

sw.bb1561:                                        ; preds = %sw.epilog
  %1151 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4509
  %rho1562 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1151, i32 0, i32 0, !dbg !4512
  %1152 = load double, double* %rho1562, align 8, !dbg !4512
  %cmp1563 = fcmp olt double %1152, 1.000000e+00, !dbg !4513
  br i1 %cmp1563, label %if.then1565, label %if.else1568, !dbg !4514

if.then1565:                                      ; preds = %sw.bb1561
  %1153 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4515
  %height1566 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1153, i32 0, i32 2, !dbg !4516
  store i64 3, i64* %height1566, align 8, !dbg !4517
  %1154 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4518
  %width1567 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1154, i32 0, i32 1, !dbg !4519
  store i64 3, i64* %width1567, align 8, !dbg !4520
  br label %if.end1575, !dbg !4518

if.else1568:                                      ; preds = %sw.bb1561
  %1155 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4521
  %rho1569 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1155, i32 0, i32 0, !dbg !4522
  %1156 = load double, double* %rho1569, align 8, !dbg !4522
  %conv1570 = fptoui double %1156 to i64, !dbg !4523
  %mul1571 = mul i64 %conv1570, 2, !dbg !4524
  %add1572 = add i64 %mul1571, 1, !dbg !4525
  %1157 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4526
  %height1573 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1157, i32 0, i32 2, !dbg !4527
  store i64 %add1572, i64* %height1573, align 8, !dbg !4528
  %1158 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4529
  %width1574 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1158, i32 0, i32 1, !dbg !4530
  store i64 %add1572, i64* %width1574, align 8, !dbg !4531
  br label %if.end1575

if.end1575:                                       ; preds = %if.else1568, %if.then1565
  %1159 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4532
  %width1576 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1159, i32 0, i32 1, !dbg !4533
  %1160 = load i64, i64* %width1576, align 8, !dbg !4533
  %sub1577 = sub i64 %1160, 1, !dbg !4534
  %div1578 = sdiv i64 %sub1577, 2, !dbg !4535
  %1161 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4536
  %y1579 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1161, i32 0, i32 4, !dbg !4537
  store i64 %div1578, i64* %y1579, align 8, !dbg !4538
  %1162 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4539
  %x1580 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1162, i32 0, i32 3, !dbg !4540
  store i64 %div1578, i64* %x1580, align 8, !dbg !4541
  %1163 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4542
  %width1581 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1163, i32 0, i32 1, !dbg !4543
  %1164 = load i64, i64* %width1581, align 8, !dbg !4543
  %1165 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4544
  %height1582 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1165, i32 0, i32 2, !dbg !4545
  %1166 = load i64, i64* %height1582, align 8, !dbg !4545
  %mul1583 = mul i64 %1166, 8, !dbg !4546
  %call1584 = call i8* @AcquireAlignedMemory(i64 %1164, i64 %mul1583) #14, !dbg !4547
  %1167 = bitcast i8* %call1584 to double*, !dbg !4548
  %1168 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4549
  %values1585 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1168, i32 0, i32 5, !dbg !4550
  store double* %1167, double** %values1585, align 8, !dbg !4551
  %1169 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4552
  %values1586 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1169, i32 0, i32 5, !dbg !4554
  %1170 = load double*, double** %values1586, align 8, !dbg !4554
  %cmp1587 = icmp eq double* %1170, null, !dbg !4555
  br i1 %cmp1587, label %if.then1589, label %if.end1591, !dbg !4556

if.then1589:                                      ; preds = %if.end1575
  %1171 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4557
  %call1590 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1171), !dbg !4558
  store %struct.KernelInfo* %call1590, %struct.KernelInfo** %retval, align 8, !dbg !4559
  br label %return, !dbg !4559

if.end1591:                                       ; preds = %if.end1575
  store i64 0, i64* %i, align 8, !dbg !4560
  %1172 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4562
  %y1592 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1172, i32 0, i32 4, !dbg !4563
  %1173 = load i64, i64* %y1592, align 8, !dbg !4563
  %sub1593 = sub nsw i64 0, %1173, !dbg !4564
  store i64 %sub1593, i64* %v, align 8, !dbg !4565
  br label %for.cond1594, !dbg !4566

for.cond1594:                                     ; preds = %for.inc1619, %if.end1591
  %1174 = load i64, i64* %v, align 8, !dbg !4567
  %1175 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4569
  %y1595 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1175, i32 0, i32 4, !dbg !4570
  %1176 = load i64, i64* %y1595, align 8, !dbg !4570
  %cmp1596 = icmp sle i64 %1174, %1176, !dbg !4571
  br i1 %cmp1596, label %for.body1598, label %for.end1621, !dbg !4572

for.body1598:                                     ; preds = %for.cond1594
  %1177 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4573
  %x1599 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1177, i32 0, i32 3, !dbg !4575
  %1178 = load i64, i64* %x1599, align 8, !dbg !4575
  %sub1600 = sub nsw i64 0, %1178, !dbg !4576
  store i64 %sub1600, i64* %u, align 8, !dbg !4577
  br label %for.cond1601, !dbg !4578

for.cond1601:                                     ; preds = %for.inc1615, %for.body1598
  %1179 = load i64, i64* %u, align 8, !dbg !4579
  %1180 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4581
  %x1602 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1180, i32 0, i32 3, !dbg !4582
  %1181 = load i64, i64* %x1602, align 8, !dbg !4582
  %cmp1603 = icmp sle i64 %1179, %1181, !dbg !4583
  br i1 %cmp1603, label %for.body1605, label %for.end1618, !dbg !4584

for.body1605:                                     ; preds = %for.cond1601
  %1182 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4585
  %sigma1606 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1182, i32 0, i32 1, !dbg !4586
  %1183 = load double, double* %sigma1606, align 8, !dbg !4586
  %1184 = load i64, i64* %u, align 8, !dbg !4587
  %conv1607 = sitofp i64 %1184 to double, !dbg !4588
  %1185 = call double @llvm.fabs.f64(double %conv1607), !dbg !4589
  %1186 = load i64, i64* %v, align 8, !dbg !4590
  %conv1608 = sitofp i64 %1186 to double, !dbg !4591
  %1187 = call double @llvm.fabs.f64(double %conv1608), !dbg !4592
  %call1609 = call double @MagickMax(double %1185, double %1187), !dbg !4593
  %mul1610 = fmul double %1183, %call1609, !dbg !4594
  %1188 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4595
  %values1611 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1188, i32 0, i32 5, !dbg !4596
  %1189 = load double*, double** %values1611, align 8, !dbg !4596
  %1190 = load i64, i64* %i, align 8, !dbg !4597
  %arrayidx1612 = getelementptr inbounds double, double* %1189, i64 %1190, !dbg !4595
  store double %mul1610, double* %arrayidx1612, align 8, !dbg !4598
  %1191 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4599
  %positive_range1613 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1191, i32 0, i32 9, !dbg !4600
  %1192 = load double, double* %positive_range1613, align 8, !dbg !4601
  %add1614 = fadd double %1192, %mul1610, !dbg !4601
  store double %add1614, double* %positive_range1613, align 8, !dbg !4601
  br label %for.inc1615, !dbg !4599

for.inc1615:                                      ; preds = %for.body1605
  %1193 = load i64, i64* %u, align 8, !dbg !4602
  %inc1616 = add nsw i64 %1193, 1, !dbg !4602
  store i64 %inc1616, i64* %u, align 8, !dbg !4602
  %1194 = load i64, i64* %i, align 8, !dbg !4603
  %inc1617 = add nsw i64 %1194, 1, !dbg !4603
  store i64 %inc1617, i64* %i, align 8, !dbg !4603
  br label %for.cond1601, !dbg !4604, !llvm.loop !4605

for.end1618:                                      ; preds = %for.cond1601
  br label %for.inc1619, !dbg !4606

for.inc1619:                                      ; preds = %for.end1618
  %1195 = load i64, i64* %v, align 8, !dbg !4607
  %inc1620 = add nsw i64 %1195, 1, !dbg !4607
  store i64 %inc1620, i64* %v, align 8, !dbg !4607
  br label %for.cond1594, !dbg !4608, !llvm.loop !4609

for.end1621:                                      ; preds = %for.cond1594
  %1196 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4611
  %values1622 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1196, i32 0, i32 5, !dbg !4612
  %1197 = load double*, double** %values1622, align 8, !dbg !4612
  %arrayidx1623 = getelementptr inbounds double, double* %1197, i64 0, !dbg !4611
  %1198 = load double, double* %arrayidx1623, align 8, !dbg !4611
  %1199 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4613
  %maximum1624 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1199, i32 0, i32 7, !dbg !4614
  store double %1198, double* %maximum1624, align 8, !dbg !4615
  br label %sw.epilog1834, !dbg !4616

sw.bb1625:                                        ; preds = %sw.epilog
  %1200 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4617
  %rho1626 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1200, i32 0, i32 0, !dbg !4620
  %1201 = load double, double* %rho1626, align 8, !dbg !4620
  %cmp1627 = fcmp olt double %1201, 1.000000e+00, !dbg !4621
  br i1 %cmp1627, label %if.then1629, label %if.else1632, !dbg !4622

if.then1629:                                      ; preds = %sw.bb1625
  %1202 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4623
  %height1630 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1202, i32 0, i32 2, !dbg !4624
  store i64 3, i64* %height1630, align 8, !dbg !4625
  %1203 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4626
  %width1631 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1203, i32 0, i32 1, !dbg !4627
  store i64 3, i64* %width1631, align 8, !dbg !4628
  br label %if.end1639, !dbg !4626

if.else1632:                                      ; preds = %sw.bb1625
  %1204 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4629
  %rho1633 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1204, i32 0, i32 0, !dbg !4630
  %1205 = load double, double* %rho1633, align 8, !dbg !4630
  %conv1634 = fptoui double %1205 to i64, !dbg !4631
  %mul1635 = mul i64 %conv1634, 2, !dbg !4632
  %add1636 = add i64 %mul1635, 1, !dbg !4633
  %1206 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4634
  %height1637 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1206, i32 0, i32 2, !dbg !4635
  store i64 %add1636, i64* %height1637, align 8, !dbg !4636
  %1207 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4637
  %width1638 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1207, i32 0, i32 1, !dbg !4638
  store i64 %add1636, i64* %width1638, align 8, !dbg !4639
  br label %if.end1639

if.end1639:                                       ; preds = %if.else1632, %if.then1629
  %1208 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4640
  %width1640 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1208, i32 0, i32 1, !dbg !4641
  %1209 = load i64, i64* %width1640, align 8, !dbg !4641
  %sub1641 = sub i64 %1209, 1, !dbg !4642
  %div1642 = sdiv i64 %sub1641, 2, !dbg !4643
  %1210 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4644
  %y1643 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1210, i32 0, i32 4, !dbg !4645
  store i64 %div1642, i64* %y1643, align 8, !dbg !4646
  %1211 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4647
  %x1644 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1211, i32 0, i32 3, !dbg !4648
  store i64 %div1642, i64* %x1644, align 8, !dbg !4649
  %1212 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4650
  %width1645 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1212, i32 0, i32 1, !dbg !4651
  %1213 = load i64, i64* %width1645, align 8, !dbg !4651
  %1214 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4652
  %height1646 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1214, i32 0, i32 2, !dbg !4653
  %1215 = load i64, i64* %height1646, align 8, !dbg !4653
  %mul1647 = mul i64 %1215, 8, !dbg !4654
  %call1648 = call i8* @AcquireAlignedMemory(i64 %1213, i64 %mul1647) #14, !dbg !4655
  %1216 = bitcast i8* %call1648 to double*, !dbg !4656
  %1217 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4657
  %values1649 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1217, i32 0, i32 5, !dbg !4658
  store double* %1216, double** %values1649, align 8, !dbg !4659
  %1218 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4660
  %values1650 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1218, i32 0, i32 5, !dbg !4662
  %1219 = load double*, double** %values1650, align 8, !dbg !4662
  %cmp1651 = icmp eq double* %1219, null, !dbg !4663
  br i1 %cmp1651, label %if.then1653, label %if.end1655, !dbg !4664

if.then1653:                                      ; preds = %if.end1639
  %1220 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4665
  %call1654 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1220), !dbg !4666
  store %struct.KernelInfo* %call1654, %struct.KernelInfo** %retval, align 8, !dbg !4667
  br label %return, !dbg !4667

if.end1655:                                       ; preds = %if.end1639
  store i64 0, i64* %i, align 8, !dbg !4668
  %1221 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4670
  %y1656 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1221, i32 0, i32 4, !dbg !4671
  %1222 = load i64, i64* %y1656, align 8, !dbg !4671
  %sub1657 = sub nsw i64 0, %1222, !dbg !4672
  store i64 %sub1657, i64* %v, align 8, !dbg !4673
  br label %for.cond1658, !dbg !4674

for.cond1658:                                     ; preds = %for.inc1684, %if.end1655
  %1223 = load i64, i64* %v, align 8, !dbg !4675
  %1224 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4677
  %y1659 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1224, i32 0, i32 4, !dbg !4678
  %1225 = load i64, i64* %y1659, align 8, !dbg !4678
  %cmp1660 = icmp sle i64 %1223, %1225, !dbg !4679
  br i1 %cmp1660, label %for.body1662, label %for.end1686, !dbg !4680

for.body1662:                                     ; preds = %for.cond1658
  %1226 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4681
  %x1663 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1226, i32 0, i32 3, !dbg !4683
  %1227 = load i64, i64* %x1663, align 8, !dbg !4683
  %sub1664 = sub nsw i64 0, %1227, !dbg !4684
  store i64 %sub1664, i64* %u, align 8, !dbg !4685
  br label %for.cond1665, !dbg !4686

for.cond1665:                                     ; preds = %for.inc1680, %for.body1662
  %1228 = load i64, i64* %u, align 8, !dbg !4687
  %1229 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4689
  %x1666 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1229, i32 0, i32 3, !dbg !4690
  %1230 = load i64, i64* %x1666, align 8, !dbg !4690
  %cmp1667 = icmp sle i64 %1228, %1230, !dbg !4691
  br i1 %cmp1667, label %for.body1669, label %for.end1683, !dbg !4692

for.body1669:                                     ; preds = %for.cond1665
  %1231 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4693
  %sigma1670 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1231, i32 0, i32 1, !dbg !4694
  %1232 = load double, double* %sigma1670, align 8, !dbg !4694
  %1233 = load i64, i64* %u, align 8, !dbg !4695
  %call1671 = call i64 @labs(i64 %1233) #10, !dbg !4696
  %1234 = load i64, i64* %v, align 8, !dbg !4697
  %call1672 = call i64 @labs(i64 %1234) #10, !dbg !4698
  %add1673 = add nsw i64 %call1671, %call1672, !dbg !4699
  %conv1674 = sitofp i64 %add1673 to double, !dbg !4700
  %mul1675 = fmul double %1232, %conv1674, !dbg !4701
  %1235 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4702
  %values1676 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1235, i32 0, i32 5, !dbg !4703
  %1236 = load double*, double** %values1676, align 8, !dbg !4703
  %1237 = load i64, i64* %i, align 8, !dbg !4704
  %arrayidx1677 = getelementptr inbounds double, double* %1236, i64 %1237, !dbg !4702
  store double %mul1675, double* %arrayidx1677, align 8, !dbg !4705
  %1238 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4706
  %positive_range1678 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1238, i32 0, i32 9, !dbg !4707
  %1239 = load double, double* %positive_range1678, align 8, !dbg !4708
  %add1679 = fadd double %1239, %mul1675, !dbg !4708
  store double %add1679, double* %positive_range1678, align 8, !dbg !4708
  br label %for.inc1680, !dbg !4706

for.inc1680:                                      ; preds = %for.body1669
  %1240 = load i64, i64* %u, align 8, !dbg !4709
  %inc1681 = add nsw i64 %1240, 1, !dbg !4709
  store i64 %inc1681, i64* %u, align 8, !dbg !4709
  %1241 = load i64, i64* %i, align 8, !dbg !4710
  %inc1682 = add nsw i64 %1241, 1, !dbg !4710
  store i64 %inc1682, i64* %i, align 8, !dbg !4710
  br label %for.cond1665, !dbg !4711, !llvm.loop !4712

for.end1683:                                      ; preds = %for.cond1665
  br label %for.inc1684, !dbg !4713

for.inc1684:                                      ; preds = %for.end1683
  %1242 = load i64, i64* %v, align 8, !dbg !4714
  %inc1685 = add nsw i64 %1242, 1, !dbg !4714
  store i64 %inc1685, i64* %v, align 8, !dbg !4714
  br label %for.cond1658, !dbg !4715, !llvm.loop !4716

for.end1686:                                      ; preds = %for.cond1658
  %1243 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4718
  %values1687 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1243, i32 0, i32 5, !dbg !4719
  %1244 = load double*, double** %values1687, align 8, !dbg !4719
  %arrayidx1688 = getelementptr inbounds double, double* %1244, i64 0, !dbg !4718
  %1245 = load double, double* %arrayidx1688, align 8, !dbg !4718
  %1246 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4720
  %maximum1689 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1246, i32 0, i32 7, !dbg !4721
  store double %1245, double* %maximum1689, align 8, !dbg !4722
  br label %sw.epilog1834, !dbg !4723

sw.bb1690:                                        ; preds = %sw.epilog
  %1247 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4724
  %rho1691 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1247, i32 0, i32 0, !dbg !4727
  %1248 = load double, double* %rho1691, align 8, !dbg !4727
  %cmp1692 = fcmp olt double %1248, 2.000000e+00, !dbg !4728
  br i1 %cmp1692, label %if.then1694, label %if.else1697, !dbg !4729

if.then1694:                                      ; preds = %sw.bb1690
  %1249 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4730
  %height1695 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1249, i32 0, i32 2, !dbg !4731
  store i64 5, i64* %height1695, align 8, !dbg !4732
  %1250 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4733
  %width1696 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1250, i32 0, i32 1, !dbg !4734
  store i64 5, i64* %width1696, align 8, !dbg !4735
  br label %if.end1704, !dbg !4733

if.else1697:                                      ; preds = %sw.bb1690
  %1251 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4736
  %rho1698 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1251, i32 0, i32 0, !dbg !4737
  %1252 = load double, double* %rho1698, align 8, !dbg !4737
  %conv1699 = fptoui double %1252 to i64, !dbg !4738
  %mul1700 = mul i64 %conv1699, 2, !dbg !4739
  %add1701 = add i64 %mul1700, 1, !dbg !4740
  %1253 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4741
  %height1702 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1253, i32 0, i32 2, !dbg !4742
  store i64 %add1701, i64* %height1702, align 8, !dbg !4743
  %1254 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4744
  %width1703 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1254, i32 0, i32 1, !dbg !4745
  store i64 %add1701, i64* %width1703, align 8, !dbg !4746
  br label %if.end1704

if.end1704:                                       ; preds = %if.else1697, %if.then1694
  %1255 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4747
  %width1705 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1255, i32 0, i32 1, !dbg !4748
  %1256 = load i64, i64* %width1705, align 8, !dbg !4748
  %sub1706 = sub i64 %1256, 1, !dbg !4749
  %div1707 = sdiv i64 %sub1706, 2, !dbg !4750
  %1257 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4751
  %y1708 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1257, i32 0, i32 4, !dbg !4752
  store i64 %div1707, i64* %y1708, align 8, !dbg !4753
  %1258 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4754
  %x1709 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1258, i32 0, i32 3, !dbg !4755
  store i64 %div1707, i64* %x1709, align 8, !dbg !4756
  %1259 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4757
  %width1710 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1259, i32 0, i32 1, !dbg !4758
  %1260 = load i64, i64* %width1710, align 8, !dbg !4758
  %1261 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4759
  %height1711 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1261, i32 0, i32 2, !dbg !4760
  %1262 = load i64, i64* %height1711, align 8, !dbg !4760
  %mul1712 = mul i64 %1262, 8, !dbg !4761
  %call1713 = call i8* @AcquireAlignedMemory(i64 %1260, i64 %mul1712) #14, !dbg !4762
  %1263 = bitcast i8* %call1713 to double*, !dbg !4763
  %1264 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4764
  %values1714 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1264, i32 0, i32 5, !dbg !4765
  store double* %1263, double** %values1714, align 8, !dbg !4766
  %1265 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4767
  %values1715 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1265, i32 0, i32 5, !dbg !4769
  %1266 = load double*, double** %values1715, align 8, !dbg !4769
  %cmp1716 = icmp eq double* %1266, null, !dbg !4770
  br i1 %cmp1716, label %if.then1718, label %if.end1720, !dbg !4771

if.then1718:                                      ; preds = %if.end1704
  %1267 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4772
  %call1719 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1267), !dbg !4773
  store %struct.KernelInfo* %call1719, %struct.KernelInfo** %retval, align 8, !dbg !4774
  br label %return, !dbg !4774

if.end1720:                                       ; preds = %if.end1704
  store i64 0, i64* %i, align 8, !dbg !4775
  %1268 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4777
  %y1721 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1268, i32 0, i32 4, !dbg !4778
  %1269 = load i64, i64* %y1721, align 8, !dbg !4778
  %sub1722 = sub nsw i64 0, %1269, !dbg !4779
  store i64 %sub1722, i64* %v, align 8, !dbg !4780
  br label %for.cond1723, !dbg !4781

for.cond1723:                                     ; preds = %for.inc1755, %if.end1720
  %1270 = load i64, i64* %v, align 8, !dbg !4782
  %1271 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4784
  %y1724 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1271, i32 0, i32 4, !dbg !4785
  %1272 = load i64, i64* %y1724, align 8, !dbg !4785
  %cmp1725 = icmp sle i64 %1270, %1272, !dbg !4786
  br i1 %cmp1725, label %for.body1727, label %for.end1757, !dbg !4787

for.body1727:                                     ; preds = %for.cond1723
  %1273 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4788
  %x1728 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1273, i32 0, i32 3, !dbg !4790
  %1274 = load i64, i64* %x1728, align 8, !dbg !4790
  %sub1729 = sub nsw i64 0, %1274, !dbg !4791
  store i64 %sub1729, i64* %u, align 8, !dbg !4792
  br label %for.cond1730, !dbg !4793

for.cond1730:                                     ; preds = %for.inc1751, %for.body1727
  %1275 = load i64, i64* %u, align 8, !dbg !4794
  %1276 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4796
  %x1731 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1276, i32 0, i32 3, !dbg !4797
  %1277 = load i64, i64* %x1731, align 8, !dbg !4797
  %cmp1732 = icmp sle i64 %1275, %1277, !dbg !4798
  br i1 %cmp1732, label %for.body1734, label %for.end1754, !dbg !4799

for.body1734:                                     ; preds = %for.cond1730
  call void @llvm.dbg.declare(metadata double* %r1, metadata !4800, metadata !DIExpression()), !dbg !4802
  %1278 = load i64, i64* %u, align 8, !dbg !4803
  %conv1735 = sitofp i64 %1278 to double, !dbg !4804
  %1279 = call double @llvm.fabs.f64(double %conv1735), !dbg !4805
  %1280 = load i64, i64* %v, align 8, !dbg !4806
  %conv1736 = sitofp i64 %1280 to double, !dbg !4807
  %1281 = call double @llvm.fabs.f64(double %conv1736), !dbg !4808
  %call1737 = call double @MagickMax(double %1279, double %1281), !dbg !4809
  store double %call1737, double* %r1, align 8, !dbg !4802
  call void @llvm.dbg.declare(metadata double* %r2, metadata !4810, metadata !DIExpression()), !dbg !4811
  %1282 = load i64, i64* %u, align 8, !dbg !4812
  %call1738 = call i64 @labs(i64 %1282) #10, !dbg !4813
  %1283 = load i64, i64* %v, align 8, !dbg !4814
  %call1739 = call i64 @labs(i64 %1283) #10, !dbg !4815
  %add1740 = add nsw i64 %call1738, %call1739, !dbg !4816
  %add1741 = add nsw i64 %add1740, 1, !dbg !4817
  %conv1742 = sitofp i64 %add1741 to double, !dbg !4818
  %div1743 = fdiv double %conv1742, 1.500000e+00, !dbg !4819
  %1284 = call double @llvm.floor.f64(double %div1743), !dbg !4820
  store double %1284, double* %r2, align 8, !dbg !4811
  %1285 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4821
  %sigma1744 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1285, i32 0, i32 1, !dbg !4822
  %1286 = load double, double* %sigma1744, align 8, !dbg !4822
  %1287 = load double, double* %r1, align 8, !dbg !4823
  %1288 = load double, double* %r2, align 8, !dbg !4824
  %call1745 = call double @MagickMax(double %1287, double %1288), !dbg !4825
  %mul1746 = fmul double %1286, %call1745, !dbg !4826
  %1289 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4827
  %values1747 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1289, i32 0, i32 5, !dbg !4828
  %1290 = load double*, double** %values1747, align 8, !dbg !4828
  %1291 = load i64, i64* %i, align 8, !dbg !4829
  %arrayidx1748 = getelementptr inbounds double, double* %1290, i64 %1291, !dbg !4827
  store double %mul1746, double* %arrayidx1748, align 8, !dbg !4830
  %1292 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4831
  %positive_range1749 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1292, i32 0, i32 9, !dbg !4832
  %1293 = load double, double* %positive_range1749, align 8, !dbg !4833
  %add1750 = fadd double %1293, %mul1746, !dbg !4833
  store double %add1750, double* %positive_range1749, align 8, !dbg !4833
  br label %for.inc1751, !dbg !4834

for.inc1751:                                      ; preds = %for.body1734
  %1294 = load i64, i64* %u, align 8, !dbg !4835
  %inc1752 = add nsw i64 %1294, 1, !dbg !4835
  store i64 %inc1752, i64* %u, align 8, !dbg !4835
  %1295 = load i64, i64* %i, align 8, !dbg !4836
  %inc1753 = add nsw i64 %1295, 1, !dbg !4836
  store i64 %inc1753, i64* %i, align 8, !dbg !4836
  br label %for.cond1730, !dbg !4837, !llvm.loop !4838

for.end1754:                                      ; preds = %for.cond1730
  br label %for.inc1755, !dbg !4839

for.inc1755:                                      ; preds = %for.end1754
  %1296 = load i64, i64* %v, align 8, !dbg !4840
  %inc1756 = add nsw i64 %1296, 1, !dbg !4840
  store i64 %inc1756, i64* %v, align 8, !dbg !4840
  br label %for.cond1723, !dbg !4841, !llvm.loop !4842

for.end1757:                                      ; preds = %for.cond1723
  %1297 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4844
  %values1758 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1297, i32 0, i32 5, !dbg !4845
  %1298 = load double*, double** %values1758, align 8, !dbg !4845
  %arrayidx1759 = getelementptr inbounds double, double* %1298, i64 0, !dbg !4844
  %1299 = load double, double* %arrayidx1759, align 8, !dbg !4844
  %1300 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4846
  %maximum1760 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1300, i32 0, i32 7, !dbg !4847
  store double %1299, double* %maximum1760, align 8, !dbg !4848
  br label %sw.epilog1834, !dbg !4849

sw.bb1761:                                        ; preds = %sw.epilog
  %1301 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4850
  %rho1762 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1301, i32 0, i32 0, !dbg !4853
  %1302 = load double, double* %rho1762, align 8, !dbg !4853
  %cmp1763 = fcmp olt double %1302, 1.000000e+00, !dbg !4854
  br i1 %cmp1763, label %if.then1765, label %if.else1768, !dbg !4855

if.then1765:                                      ; preds = %sw.bb1761
  %1303 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4856
  %height1766 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1303, i32 0, i32 2, !dbg !4857
  store i64 3, i64* %height1766, align 8, !dbg !4858
  %1304 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4859
  %width1767 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1304, i32 0, i32 1, !dbg !4860
  store i64 3, i64* %width1767, align 8, !dbg !4861
  br label %if.end1775, !dbg !4859

if.else1768:                                      ; preds = %sw.bb1761
  %1305 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4862
  %rho1769 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1305, i32 0, i32 0, !dbg !4863
  %1306 = load double, double* %rho1769, align 8, !dbg !4863
  %conv1770 = fptoui double %1306 to i64, !dbg !4864
  %mul1771 = mul i64 %conv1770, 2, !dbg !4865
  %add1772 = add i64 %mul1771, 1, !dbg !4866
  %1307 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4867
  %height1773 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1307, i32 0, i32 2, !dbg !4868
  store i64 %add1772, i64* %height1773, align 8, !dbg !4869
  %1308 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4870
  %width1774 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1308, i32 0, i32 1, !dbg !4871
  store i64 %add1772, i64* %width1774, align 8, !dbg !4872
  br label %if.end1775

if.end1775:                                       ; preds = %if.else1768, %if.then1765
  %1309 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4873
  %width1776 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1309, i32 0, i32 1, !dbg !4874
  %1310 = load i64, i64* %width1776, align 8, !dbg !4874
  %sub1777 = sub i64 %1310, 1, !dbg !4875
  %div1778 = sdiv i64 %sub1777, 2, !dbg !4876
  %1311 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4877
  %y1779 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1311, i32 0, i32 4, !dbg !4878
  store i64 %div1778, i64* %y1779, align 8, !dbg !4879
  %1312 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4880
  %x1780 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1312, i32 0, i32 3, !dbg !4881
  store i64 %div1778, i64* %x1780, align 8, !dbg !4882
  %1313 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4883
  %width1781 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1313, i32 0, i32 1, !dbg !4884
  %1314 = load i64, i64* %width1781, align 8, !dbg !4884
  %1315 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4885
  %height1782 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1315, i32 0, i32 2, !dbg !4886
  %1316 = load i64, i64* %height1782, align 8, !dbg !4886
  %mul1783 = mul i64 %1316, 8, !dbg !4887
  %call1784 = call i8* @AcquireAlignedMemory(i64 %1314, i64 %mul1783) #14, !dbg !4888
  %1317 = bitcast i8* %call1784 to double*, !dbg !4889
  %1318 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4890
  %values1785 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1318, i32 0, i32 5, !dbg !4891
  store double* %1317, double** %values1785, align 8, !dbg !4892
  %1319 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4893
  %values1786 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1319, i32 0, i32 5, !dbg !4895
  %1320 = load double*, double** %values1786, align 8, !dbg !4895
  %cmp1787 = icmp eq double* %1320, null, !dbg !4896
  br i1 %cmp1787, label %if.then1789, label %if.end1791, !dbg !4897

if.then1789:                                      ; preds = %if.end1775
  %1321 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4898
  %call1790 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %1321), !dbg !4899
  store %struct.KernelInfo* %call1790, %struct.KernelInfo** %retval, align 8, !dbg !4900
  br label %return, !dbg !4900

if.end1791:                                       ; preds = %if.end1775
  store i64 0, i64* %i, align 8, !dbg !4901
  %1322 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4903
  %y1792 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1322, i32 0, i32 4, !dbg !4904
  %1323 = load i64, i64* %y1792, align 8, !dbg !4904
  %sub1793 = sub nsw i64 0, %1323, !dbg !4905
  store i64 %sub1793, i64* %v, align 8, !dbg !4906
  br label %for.cond1794, !dbg !4907

for.cond1794:                                     ; preds = %for.inc1821, %if.end1791
  %1324 = load i64, i64* %v, align 8, !dbg !4908
  %1325 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4910
  %y1795 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1325, i32 0, i32 4, !dbg !4911
  %1326 = load i64, i64* %y1795, align 8, !dbg !4911
  %cmp1796 = icmp sle i64 %1324, %1326, !dbg !4912
  br i1 %cmp1796, label %for.body1798, label %for.end1823, !dbg !4913

for.body1798:                                     ; preds = %for.cond1794
  %1327 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4914
  %x1799 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1327, i32 0, i32 3, !dbg !4916
  %1328 = load i64, i64* %x1799, align 8, !dbg !4916
  %sub1800 = sub nsw i64 0, %1328, !dbg !4917
  store i64 %sub1800, i64* %u, align 8, !dbg !4918
  br label %for.cond1801, !dbg !4919

for.cond1801:                                     ; preds = %for.inc1817, %for.body1798
  %1329 = load i64, i64* %u, align 8, !dbg !4920
  %1330 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4922
  %x1802 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1330, i32 0, i32 3, !dbg !4923
  %1331 = load i64, i64* %x1802, align 8, !dbg !4923
  %cmp1803 = icmp sle i64 %1329, %1331, !dbg !4924
  br i1 %cmp1803, label %for.body1805, label %for.end1820, !dbg !4925

for.body1805:                                     ; preds = %for.cond1801
  %1332 = load %struct._GeometryInfo*, %struct._GeometryInfo** %args.addr, align 8, !dbg !4926
  %sigma1806 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %1332, i32 0, i32 1, !dbg !4927
  %1333 = load double, double* %sigma1806, align 8, !dbg !4927
  %1334 = load i64, i64* %u, align 8, !dbg !4928
  %1335 = load i64, i64* %u, align 8, !dbg !4929
  %mul1807 = mul nsw i64 %1334, %1335, !dbg !4930
  %1336 = load i64, i64* %v, align 8, !dbg !4931
  %1337 = load i64, i64* %v, align 8, !dbg !4932
  %mul1808 = mul nsw i64 %1336, %1337, !dbg !4933
  %add1809 = add nsw i64 %mul1807, %mul1808, !dbg !4934
  %conv1810 = sitofp i64 %add1809 to double, !dbg !4935
  %call1811 = call double @sqrt(double %conv1810) #12, !dbg !4936
  %mul1812 = fmul double %1333, %call1811, !dbg !4937
  %1338 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4938
  %values1813 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1338, i32 0, i32 5, !dbg !4939
  %1339 = load double*, double** %values1813, align 8, !dbg !4939
  %1340 = load i64, i64* %i, align 8, !dbg !4940
  %arrayidx1814 = getelementptr inbounds double, double* %1339, i64 %1340, !dbg !4938
  store double %mul1812, double* %arrayidx1814, align 8, !dbg !4941
  %1341 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4942
  %positive_range1815 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1341, i32 0, i32 9, !dbg !4943
  %1342 = load double, double* %positive_range1815, align 8, !dbg !4944
  %add1816 = fadd double %1342, %mul1812, !dbg !4944
  store double %add1816, double* %positive_range1815, align 8, !dbg !4944
  br label %for.inc1817, !dbg !4942

for.inc1817:                                      ; preds = %for.body1805
  %1343 = load i64, i64* %u, align 8, !dbg !4945
  %inc1818 = add nsw i64 %1343, 1, !dbg !4945
  store i64 %inc1818, i64* %u, align 8, !dbg !4945
  %1344 = load i64, i64* %i, align 8, !dbg !4946
  %inc1819 = add nsw i64 %1344, 1, !dbg !4946
  store i64 %inc1819, i64* %i, align 8, !dbg !4946
  br label %for.cond1801, !dbg !4947, !llvm.loop !4948

for.end1820:                                      ; preds = %for.cond1801
  br label %for.inc1821, !dbg !4949

for.inc1821:                                      ; preds = %for.end1820
  %1345 = load i64, i64* %v, align 8, !dbg !4950
  %inc1822 = add nsw i64 %1345, 1, !dbg !4950
  store i64 %inc1822, i64* %v, align 8, !dbg !4950
  br label %for.cond1794, !dbg !4951, !llvm.loop !4952

for.end1823:                                      ; preds = %for.cond1794
  %1346 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4954
  %values1824 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1346, i32 0, i32 5, !dbg !4955
  %1347 = load double*, double** %values1824, align 8, !dbg !4955
  %arrayidx1825 = getelementptr inbounds double, double* %1347, i64 0, !dbg !4954
  %1348 = load double, double* %arrayidx1825, align 8, !dbg !4954
  %1349 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4956
  %maximum1826 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1349, i32 0, i32 7, !dbg !4957
  store double %1348, double* %maximum1826, align 8, !dbg !4958
  br label %sw.epilog1834, !dbg !4959

sw.default1827:                                   ; preds = %sw.epilog
  %call1828 = call %struct.KernelInfo* @ParseKernelArray(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0)), !dbg !4960
  store %struct.KernelInfo* %call1828, %struct.KernelInfo** %kernel, align 8, !dbg !4962
  %1350 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4963
  %cmp1829 = icmp eq %struct.KernelInfo* %1350, null, !dbg !4965
  br i1 %cmp1829, label %if.then1831, label %if.end1832, !dbg !4966

if.then1831:                                      ; preds = %sw.default1827
  %1351 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4967
  store %struct.KernelInfo* %1351, %struct.KernelInfo** %retval, align 8, !dbg !4968
  br label %return, !dbg !4968

if.end1832:                                       ; preds = %sw.default1827
  %1352 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4969
  %type1833 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1352, i32 0, i32 0, !dbg !4970
  store i32 0, i32* %type1833, align 8, !dbg !4971
  br label %sw.epilog1834, !dbg !4972

sw.epilog1834:                                    ; preds = %if.end1832, %for.end1823, %for.end1757, %for.end1686, %for.end1621, %if.end1558, %sw.epilog1505, %if.end1463, %sw.epilog1449, %if.end1355, %if.end1332, %if.end1311, %if.end1281, %if.end1274, %if.end1268, %for.end1138, %for.end1063, %for.end1000, %for.end926, %for.end850, %for.end755, %if.end687, %if.end552, %if.end544, %if.end536, %if.end528, %if.end520, %if.end513, %for.end478, %if.end400, %if.end307, %if.end224, %if.end11
  %1353 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel, align 8, !dbg !4973
  store %struct.KernelInfo* %1353, %struct.KernelInfo** %retval, align 8, !dbg !4974
  br label %return, !dbg !4974

return:                                           ; preds = %sw.epilog1834, %if.then1831, %if.then1789, %if.then1718, %if.then1653, %if.then1589, %if.then1557, %if.then1497, %if.then1487, %if.then1482, %if.then1475, %if.then1461, %if.then1455, %if.then1443, %if.then1434, %if.then1425, %if.then1416, %if.then1407, %if.then1398, %if.then1389, %if.then1380, %if.then1374, %if.then1367, %if.then1354, %sw.default1339, %if.then1331, %sw.default1318, %if.then1310, %if.end1299, %if.then1297, %if.then1291, %if.then1280, %if.then1273, %if.then1204, %if.then1102, %if.then1032, %if.then962, %if.then884, %if.then836, %if.then818, %if.then791, %if.then716, %if.then667, %if.then660, %if.then653, %if.then646, %if.then639, %if.then628, %if.then617, %if.then606, %if.then595, %if.then589, %if.then574, %if.then563, %if.then551, %if.then543, %if.then535, %if.then527, %if.then519, %if.then512, %if.then438, %if.then341, %if.then258, %if.then48, %if.then9, %if.then
  %1354 = load %struct.KernelInfo*, %struct.KernelInfo** %retval, align 8, !dbg !4975
  ret %struct.KernelInfo* %1354, !dbg !4975
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #5

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #6

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #7

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

declare dso_local i64 @GetOptimalKernelWidth2D(double, double) #2

; Function Attrs: nounwind
declare dso_local double @exp(double) #5

; Function Attrs: noinline nounwind uwtable
define internal void @CalcKernelMetaData(%struct.KernelInfo* %kernel) #0 !dbg !4976 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %i = alloca i64, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4981, metadata !DIExpression()), !dbg !4982
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4983
  %maximum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 7, !dbg !4984
  store double 0.000000e+00, double* %maximum, align 8, !dbg !4985
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4986
  %minimum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %1, i32 0, i32 6, !dbg !4987
  store double 0.000000e+00, double* %minimum, align 8, !dbg !4988
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4989
  %positive_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 9, !dbg !4990
  store double 0.000000e+00, double* %positive_range, align 8, !dbg !4991
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4992
  %negative_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %3, i32 0, i32 8, !dbg !4993
  store double 0.000000e+00, double* %negative_range, align 8, !dbg !4994
  store i64 0, i64* %i, align 8, !dbg !4995
  br label %for.cond, !dbg !4997

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !4998
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5000
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %5, i32 0, i32 1, !dbg !5001
  %6 = load i64, i64* %width, align 8, !dbg !5001
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5002
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 2, !dbg !5003
  %8 = load i64, i64* %height, align 8, !dbg !5003
  %mul = mul i64 %6, %8, !dbg !5004
  %cmp = icmp ult i64 %4, %mul, !dbg !5005
  br i1 %cmp, label %for.body, label %for.end, !dbg !5006

for.body:                                         ; preds = %for.cond
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5007
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 5, !dbg !5010
  %10 = load double*, double** %values, align 8, !dbg !5010
  %11 = load i64, i64* %i, align 8, !dbg !5011
  %arrayidx = getelementptr inbounds double, double* %10, i64 %11, !dbg !5007
  %12 = load double, double* %arrayidx, align 8, !dbg !5007
  %13 = call double @llvm.fabs.f64(double %12), !dbg !5012
  %cmp1 = fcmp olt double %13, 1.000000e-15, !dbg !5013
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5014

if.then:                                          ; preds = %for.body
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5015
  %values2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %14, i32 0, i32 5, !dbg !5016
  %15 = load double*, double** %values2, align 8, !dbg !5016
  %16 = load i64, i64* %i, align 8, !dbg !5017
  %arrayidx3 = getelementptr inbounds double, double* %15, i64 %16, !dbg !5015
  store double 0.000000e+00, double* %arrayidx3, align 8, !dbg !5018
  br label %if.end, !dbg !5015

if.end:                                           ; preds = %if.then, %for.body
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5019
  %values4 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 5, !dbg !5020
  %18 = load double*, double** %values4, align 8, !dbg !5020
  %19 = load i64, i64* %i, align 8, !dbg !5021
  %arrayidx5 = getelementptr inbounds double, double* %18, i64 %19, !dbg !5019
  %20 = load double, double* %arrayidx5, align 8, !dbg !5019
  %cmp6 = fcmp olt double %20, 0.000000e+00, !dbg !5022
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !5023

cond.true:                                        ; preds = %if.end
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5024
  %values7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 5, !dbg !5025
  %22 = load double*, double** %values7, align 8, !dbg !5025
  %23 = load i64, i64* %i, align 8, !dbg !5026
  %arrayidx8 = getelementptr inbounds double, double* %22, i64 %23, !dbg !5024
  %24 = load double, double* %arrayidx8, align 8, !dbg !5024
  %25 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5027
  %negative_range9 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %25, i32 0, i32 8, !dbg !5028
  %26 = load double, double* %negative_range9, align 8, !dbg !5029
  %add = fadd double %26, %24, !dbg !5029
  store double %add, double* %negative_range9, align 8, !dbg !5029
  br label %cond.end, !dbg !5023

cond.false:                                       ; preds = %if.end
  %27 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5030
  %values10 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %27, i32 0, i32 5, !dbg !5031
  %28 = load double*, double** %values10, align 8, !dbg !5031
  %29 = load i64, i64* %i, align 8, !dbg !5032
  %arrayidx11 = getelementptr inbounds double, double* %28, i64 %29, !dbg !5030
  %30 = load double, double* %arrayidx11, align 8, !dbg !5030
  %31 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5033
  %positive_range12 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %31, i32 0, i32 9, !dbg !5034
  %32 = load double, double* %positive_range12, align 8, !dbg !5035
  %add13 = fadd double %32, %30, !dbg !5035
  store double %add13, double* %positive_range12, align 8, !dbg !5035
  br label %cond.end, !dbg !5023

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %add, %cond.true ], [ %add13, %cond.false ], !dbg !5023
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5036
  %minimum14 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %33, i32 0, i32 6, !dbg !5036
  %34 = load double, double* %minimum14, align 8, !dbg !5036
  %35 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5036
  %values15 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %35, i32 0, i32 5, !dbg !5036
  %36 = load double*, double** %values15, align 8, !dbg !5036
  %37 = load i64, i64* %i, align 8, !dbg !5036
  %arrayidx16 = getelementptr inbounds double, double* %36, i64 %37, !dbg !5036
  %38 = load double, double* %arrayidx16, align 8, !dbg !5036
  %call = call double @MagickMin(double %34, double %38), !dbg !5036
  %39 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5036
  %minimum17 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %39, i32 0, i32 6, !dbg !5036
  store double %call, double* %minimum17, align 8, !dbg !5036
  %40 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5037
  %maximum18 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %40, i32 0, i32 7, !dbg !5037
  %41 = load double, double* %maximum18, align 8, !dbg !5037
  %42 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5037
  %values19 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %42, i32 0, i32 5, !dbg !5037
  %43 = load double*, double** %values19, align 8, !dbg !5037
  %44 = load i64, i64* %i, align 8, !dbg !5037
  %arrayidx20 = getelementptr inbounds double, double* %43, i64 %44, !dbg !5037
  %45 = load double, double* %arrayidx20, align 8, !dbg !5037
  %call21 = call double @MagickMax(double %41, double %45), !dbg !5037
  %46 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5037
  %maximum22 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %46, i32 0, i32 7, !dbg !5037
  store double %call21, double* %maximum22, align 8, !dbg !5037
  br label %for.inc, !dbg !5038

for.inc:                                          ; preds = %cond.end
  %47 = load i64, i64* %i, align 8, !dbg !5039
  %inc = add i64 %47, 1, !dbg !5039
  store i64 %inc, i64* %i, align 8, !dbg !5039
  br label %for.cond, !dbg !5040, !llvm.loop !5041

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5043
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ScaleKernelInfo(%struct.KernelInfo* %kernel, double %scaling_factor, i32 %normalize_flags) #0 !dbg !5044 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %scaling_factor.addr = alloca double, align 8
  %normalize_flags.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %pos_scale = alloca double, align 8
  %neg_scale = alloca double, align 8
  %t = alloca double, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  store double %scaling_factor, double* %scaling_factor.addr, align 8
  call void @llvm.dbg.declare(metadata double* %scaling_factor.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i32 %normalize_flags, i32* %normalize_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normalize_flags.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5055, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata double* %pos_scale, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata double* %neg_scale, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5061
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !5063
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !5063
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !5064
  br i1 %cmp, label %if.then, label %if.end, !dbg !5065

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5066
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !5067
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !5067
  %4 = load double, double* %scaling_factor.addr, align 8, !dbg !5068
  %5 = load i32, i32* %normalize_flags.addr, align 4, !dbg !5069
  call void @ScaleKernelInfo(%struct.KernelInfo* %3, double %4, i32 %5), !dbg !5070
  br label %if.end, !dbg !5070

if.end:                                           ; preds = %if.then, %entry
  store double 1.000000e+00, double* %pos_scale, align 8, !dbg !5071
  %6 = load i32, i32* %normalize_flags.addr, align 4, !dbg !5072
  %and = and i32 %6, 8192, !dbg !5074
  %cmp2 = icmp ne i32 %and, 0, !dbg !5075
  br i1 %cmp2, label %if.then3, label %if.end11, !dbg !5076

if.then3:                                         ; preds = %if.end
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5077
  %positive_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 9, !dbg !5080
  %8 = load double, double* %positive_range, align 8, !dbg !5080
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5081
  %negative_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 8, !dbg !5082
  %10 = load double, double* %negative_range, align 8, !dbg !5082
  %add = fadd double %8, %10, !dbg !5083
  %11 = call double @llvm.fabs.f64(double %add), !dbg !5084
  %cmp4 = fcmp oge double %11, 1.000000e-15, !dbg !5085
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5086

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5087
  %positive_range6 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 9, !dbg !5088
  %13 = load double, double* %positive_range6, align 8, !dbg !5088
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5089
  %negative_range7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %14, i32 0, i32 8, !dbg !5090
  %15 = load double, double* %negative_range7, align 8, !dbg !5090
  %add8 = fadd double %13, %15, !dbg !5091
  %16 = call double @llvm.fabs.f64(double %add8), !dbg !5092
  store double %16, double* %pos_scale, align 8, !dbg !5093
  br label %if.end10, !dbg !5094

if.else:                                          ; preds = %if.then3
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5095
  %positive_range9 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 9, !dbg !5096
  %18 = load double, double* %positive_range9, align 8, !dbg !5096
  store double %18, double* %pos_scale, align 8, !dbg !5097
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then5
  br label %if.end11, !dbg !5098

if.end11:                                         ; preds = %if.end10, %if.end
  %19 = load i32, i32* %normalize_flags.addr, align 4, !dbg !5099
  %and12 = and i32 %19, 65536, !dbg !5101
  %cmp13 = icmp ne i32 %and12, 0, !dbg !5102
  br i1 %cmp13, label %if.then14, label %if.else25, !dbg !5103

if.then14:                                        ; preds = %if.end11
  %20 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5104
  %positive_range15 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %20, i32 0, i32 9, !dbg !5106
  %21 = load double, double* %positive_range15, align 8, !dbg !5106
  %22 = call double @llvm.fabs.f64(double %21), !dbg !5107
  %cmp16 = fcmp oge double %22, 1.000000e-15, !dbg !5108
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5109

cond.true:                                        ; preds = %if.then14
  %23 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5110
  %positive_range17 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %23, i32 0, i32 9, !dbg !5111
  %24 = load double, double* %positive_range17, align 8, !dbg !5111
  br label %cond.end, !dbg !5109

cond.false:                                       ; preds = %if.then14
  br label %cond.end, !dbg !5109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %24, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !5109
  store double %cond, double* %pos_scale, align 8, !dbg !5112
  %25 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5113
  %negative_range18 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %25, i32 0, i32 8, !dbg !5114
  %26 = load double, double* %negative_range18, align 8, !dbg !5114
  %27 = call double @llvm.fabs.f64(double %26), !dbg !5115
  %cmp19 = fcmp oge double %27, 1.000000e-15, !dbg !5116
  br i1 %cmp19, label %cond.true20, label %cond.false22, !dbg !5117

cond.true20:                                      ; preds = %cond.end
  %28 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5118
  %negative_range21 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %28, i32 0, i32 8, !dbg !5119
  %29 = load double, double* %negative_range21, align 8, !dbg !5119
  %fneg = fneg double %29, !dbg !5120
  br label %cond.end23, !dbg !5117

cond.false22:                                     ; preds = %cond.end
  br label %cond.end23, !dbg !5117

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi double [ %fneg, %cond.true20 ], [ 1.000000e+00, %cond.false22 ], !dbg !5117
  store double %cond24, double* %neg_scale, align 8, !dbg !5121
  br label %if.end26, !dbg !5122

if.else25:                                        ; preds = %if.end11
  %30 = load double, double* %pos_scale, align 8, !dbg !5123
  store double %30, double* %neg_scale, align 8, !dbg !5124
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %cond.end23
  %31 = load double, double* %scaling_factor.addr, align 8, !dbg !5125
  %32 = load double, double* %pos_scale, align 8, !dbg !5126
  %div = fdiv double %31, %32, !dbg !5127
  store double %div, double* %pos_scale, align 8, !dbg !5128
  %33 = load double, double* %scaling_factor.addr, align 8, !dbg !5129
  %34 = load double, double* %neg_scale, align 8, !dbg !5130
  %div27 = fdiv double %33, %34, !dbg !5131
  store double %div27, double* %neg_scale, align 8, !dbg !5132
  store i64 0, i64* %i, align 8, !dbg !5133
  br label %for.cond, !dbg !5135

for.cond:                                         ; preds = %for.inc, %if.end26
  %35 = load i64, i64* %i, align 8, !dbg !5136
  %36 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5138
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %36, i32 0, i32 1, !dbg !5139
  %37 = load i64, i64* %width, align 8, !dbg !5139
  %38 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5140
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %38, i32 0, i32 2, !dbg !5141
  %39 = load i64, i64* %height, align 8, !dbg !5141
  %mul = mul i64 %37, %39, !dbg !5142
  %cmp28 = icmp slt i64 %35, %mul, !dbg !5143
  br i1 %cmp28, label %for.body, label %for.end, !dbg !5144

for.body:                                         ; preds = %for.cond
  %40 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5145
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %40, i32 0, i32 5, !dbg !5145
  %41 = load double*, double** %values, align 8, !dbg !5145
  %42 = load i64, i64* %i, align 8, !dbg !5145
  %arrayidx = getelementptr inbounds double, double* %41, i64 %42, !dbg !5145
  %43 = load double, double* %arrayidx, align 8, !dbg !5145
  %44 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5145
  %values29 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %44, i32 0, i32 5, !dbg !5145
  %45 = load double*, double** %values29, align 8, !dbg !5145
  %46 = load i64, i64* %i, align 8, !dbg !5145
  %arrayidx30 = getelementptr inbounds double, double* %45, i64 %46, !dbg !5145
  %47 = load double, double* %arrayidx30, align 8, !dbg !5145
  %cmp31 = fcmp une double %43, %47, !dbg !5145
  br i1 %cmp31, label %cond.true32, label %cond.false33, !dbg !5147

cond.true32:                                      ; preds = %for.body
  br i1 true, label %if.end45, label %if.then34, !dbg !5145

cond.false33:                                     ; preds = %for.body
  br i1 false, label %if.end45, label %if.then34, !dbg !5147

if.then34:                                        ; preds = %cond.false33, %cond.true32
  %48 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5148
  %values35 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %48, i32 0, i32 5, !dbg !5149
  %49 = load double*, double** %values35, align 8, !dbg !5149
  %50 = load i64, i64* %i, align 8, !dbg !5150
  %arrayidx36 = getelementptr inbounds double, double* %49, i64 %50, !dbg !5148
  %51 = load double, double* %arrayidx36, align 8, !dbg !5148
  %cmp37 = fcmp oge double %51, 0.000000e+00, !dbg !5151
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !5152

cond.true38:                                      ; preds = %if.then34
  %52 = load double, double* %pos_scale, align 8, !dbg !5153
  br label %cond.end40, !dbg !5152

cond.false39:                                     ; preds = %if.then34
  %53 = load double, double* %neg_scale, align 8, !dbg !5154
  br label %cond.end40, !dbg !5152

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi double [ %52, %cond.true38 ], [ %53, %cond.false39 ], !dbg !5152
  %54 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5155
  %values42 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %54, i32 0, i32 5, !dbg !5156
  %55 = load double*, double** %values42, align 8, !dbg !5156
  %56 = load i64, i64* %i, align 8, !dbg !5157
  %arrayidx43 = getelementptr inbounds double, double* %55, i64 %56, !dbg !5155
  %57 = load double, double* %arrayidx43, align 8, !dbg !5158
  %mul44 = fmul double %57, %cond41, !dbg !5158
  store double %mul44, double* %arrayidx43, align 8, !dbg !5158
  br label %if.end45, !dbg !5155

if.end45:                                         ; preds = %cond.end40, %cond.false33, %cond.true32
  br label %for.inc, !dbg !5145

for.inc:                                          ; preds = %if.end45
  %58 = load i64, i64* %i, align 8, !dbg !5159
  %inc = add nsw i64 %58, 1, !dbg !5159
  store i64 %inc, i64* %i, align 8, !dbg !5159
  br label %for.cond, !dbg !5160, !llvm.loop !5161

for.end:                                          ; preds = %for.cond
  %59 = load double, double* %pos_scale, align 8, !dbg !5163
  %60 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5164
  %positive_range46 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %60, i32 0, i32 9, !dbg !5165
  %61 = load double, double* %positive_range46, align 8, !dbg !5166
  %mul47 = fmul double %61, %59, !dbg !5166
  store double %mul47, double* %positive_range46, align 8, !dbg !5166
  %62 = load double, double* %neg_scale, align 8, !dbg !5167
  %63 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5168
  %negative_range48 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %63, i32 0, i32 8, !dbg !5169
  %64 = load double, double* %negative_range48, align 8, !dbg !5170
  %mul49 = fmul double %64, %62, !dbg !5170
  store double %mul49, double* %negative_range48, align 8, !dbg !5170
  %65 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5171
  %maximum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %65, i32 0, i32 7, !dbg !5172
  %66 = load double, double* %maximum, align 8, !dbg !5172
  %cmp50 = fcmp oge double %66, 0.000000e+00, !dbg !5173
  br i1 %cmp50, label %cond.true51, label %cond.false52, !dbg !5174

cond.true51:                                      ; preds = %for.end
  %67 = load double, double* %pos_scale, align 8, !dbg !5175
  br label %cond.end53, !dbg !5174

cond.false52:                                     ; preds = %for.end
  %68 = load double, double* %neg_scale, align 8, !dbg !5176
  br label %cond.end53, !dbg !5174

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi double [ %67, %cond.true51 ], [ %68, %cond.false52 ], !dbg !5174
  %69 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5177
  %maximum55 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %69, i32 0, i32 7, !dbg !5178
  %70 = load double, double* %maximum55, align 8, !dbg !5179
  %mul56 = fmul double %70, %cond54, !dbg !5179
  store double %mul56, double* %maximum55, align 8, !dbg !5179
  %71 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5180
  %minimum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %71, i32 0, i32 6, !dbg !5181
  %72 = load double, double* %minimum, align 8, !dbg !5181
  %cmp57 = fcmp oge double %72, 0.000000e+00, !dbg !5182
  br i1 %cmp57, label %cond.true58, label %cond.false59, !dbg !5183

cond.true58:                                      ; preds = %cond.end53
  %73 = load double, double* %pos_scale, align 8, !dbg !5184
  br label %cond.end60, !dbg !5183

cond.false59:                                     ; preds = %cond.end53
  %74 = load double, double* %neg_scale, align 8, !dbg !5185
  br label %cond.end60, !dbg !5183

cond.end60:                                       ; preds = %cond.false59, %cond.true58
  %cond61 = phi double [ %73, %cond.true58 ], [ %74, %cond.false59 ], !dbg !5183
  %75 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5186
  %minimum62 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %75, i32 0, i32 6, !dbg !5187
  %76 = load double, double* %minimum62, align 8, !dbg !5188
  %mul63 = fmul double %76, %cond61, !dbg !5188
  store double %mul63, double* %minimum62, align 8, !dbg !5188
  %77 = load double, double* %scaling_factor.addr, align 8, !dbg !5189
  %cmp64 = fcmp olt double %77, 1.000000e-15, !dbg !5191
  br i1 %cmp64, label %if.then65, label %if.end74, !dbg !5192

if.then65:                                        ; preds = %cond.end60
  call void @llvm.dbg.declare(metadata double* %t, metadata !5193, metadata !DIExpression()), !dbg !5195
  %78 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5196
  %positive_range66 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %78, i32 0, i32 9, !dbg !5197
  %79 = load double, double* %positive_range66, align 8, !dbg !5197
  store double %79, double* %t, align 8, !dbg !5198
  %80 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5199
  %negative_range67 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %80, i32 0, i32 8, !dbg !5200
  %81 = load double, double* %negative_range67, align 8, !dbg !5200
  %82 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5201
  %positive_range68 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %82, i32 0, i32 9, !dbg !5202
  store double %81, double* %positive_range68, align 8, !dbg !5203
  %83 = load double, double* %t, align 8, !dbg !5204
  %84 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5205
  %negative_range69 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %84, i32 0, i32 8, !dbg !5206
  store double %83, double* %negative_range69, align 8, !dbg !5207
  %85 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5208
  %maximum70 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %85, i32 0, i32 7, !dbg !5209
  %86 = load double, double* %maximum70, align 8, !dbg !5209
  store double %86, double* %t, align 8, !dbg !5210
  %87 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5211
  %minimum71 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %87, i32 0, i32 6, !dbg !5212
  %88 = load double, double* %minimum71, align 8, !dbg !5212
  %89 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5213
  %maximum72 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %89, i32 0, i32 7, !dbg !5214
  store double %88, double* %maximum72, align 8, !dbg !5215
  %90 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5216
  %minimum73 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %90, i32 0, i32 6, !dbg !5217
  store double 1.000000e+00, double* %minimum73, align 8, !dbg !5218
  br label %if.end74, !dbg !5219

if.end74:                                         ; preds = %if.then65, %cond.end60
  ret void, !dbg !5220
}

declare dso_local i64 @GetOptimalKernelWidth1D(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RotateKernelInfo(%struct.KernelInfo* %kernel, double %angle) #0 !dbg !5221 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %angle.addr = alloca double, align 8
  %t = alloca double, align 8
  %x64 = alloca i64, align 8
  %y65 = alloca i64, align 8
  %t112 = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %x143 = alloca i64, align 8
  %y144 = alloca i64, align 8
  %k = alloca double*, align 8
  %t145 = alloca double, align 8
  %x190 = alloca i64, align 8
  %y191 = alloca i64, align 8
  %t226 = alloca double, align 8
  %k227 = alloca double*, align 8
  %i228 = alloca i64, align 8
  %j229 = alloca i64, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5224, metadata !DIExpression()), !dbg !5225
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5228
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !5230
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !5230
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !5231
  br i1 %cmp, label %if.then, label %if.end, !dbg !5232

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5233
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !5234
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !5234
  %4 = load double, double* %angle.addr, align 8, !dbg !5235
  call void @RotateKernelInfo(%struct.KernelInfo* %3, double %4), !dbg !5236
  br label %if.end, !dbg !5236

if.end:                                           ; preds = %if.then, %entry
  %5 = load double, double* %angle.addr, align 8, !dbg !5237
  %call = call double @fmod(double %5, double 3.600000e+02) #12, !dbg !5238
  store double %call, double* %angle.addr, align 8, !dbg !5239
  %6 = load double, double* %angle.addr, align 8, !dbg !5240
  %cmp2 = fcmp olt double %6, 0.000000e+00, !dbg !5242
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5243

if.then3:                                         ; preds = %if.end
  %7 = load double, double* %angle.addr, align 8, !dbg !5244
  %add = fadd double %7, 3.600000e+02, !dbg !5244
  store double %add, double* %angle.addr, align 8, !dbg !5244
  br label %if.end4, !dbg !5245

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load double, double* %angle.addr, align 8, !dbg !5246
  %cmp5 = fcmp olt double 3.375000e+02, %8, !dbg !5248
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !5249

lor.lhs.false:                                    ; preds = %if.end4
  %9 = load double, double* %angle.addr, align 8, !dbg !5250
  %cmp6 = fcmp ole double %9, 2.250000e+01, !dbg !5251
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5252

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  br label %return, !dbg !5253

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5254
  %type = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 0, !dbg !5255
  %11 = load i32, i32* %type, align 8, !dbg !5255
  switch i32 %11, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 18, label %sw.bb
    i32 22, label %sw.bb
    i32 7, label %sw.bb
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 15, label %sw.bb9
    i32 14, label %sw.bb9
    i32 19, label %sw.bb9
    i32 20, label %sw.bb9
    i32 5, label %sw.bb10
  ], !dbg !5256

sw.bb:                                            ; preds = %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8
  br label %return, !dbg !5257

sw.bb9:                                           ; preds = %if.end8, %if.end8, %if.end8, %if.end8
  br label %return, !dbg !5259

sw.bb10:                                          ; preds = %if.end8
  %12 = load double, double* %angle.addr, align 8, !dbg !5260
  %cmp11 = fcmp olt double 1.350000e+02, %12, !dbg !5262
  br i1 %cmp11, label %land.lhs.true, label %if.end14, !dbg !5263

land.lhs.true:                                    ; preds = %sw.bb10
  %13 = load double, double* %angle.addr, align 8, !dbg !5264
  %cmp12 = fcmp ole double %13, 2.250000e+02, !dbg !5265
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5266

if.then13:                                        ; preds = %land.lhs.true
  br label %return, !dbg !5267

if.end14:                                         ; preds = %land.lhs.true, %sw.bb10
  %14 = load double, double* %angle.addr, align 8, !dbg !5268
  %cmp15 = fcmp olt double 2.250000e+02, %14, !dbg !5270
  br i1 %cmp15, label %land.lhs.true16, label %if.end19, !dbg !5271

land.lhs.true16:                                  ; preds = %if.end14
  %15 = load double, double* %angle.addr, align 8, !dbg !5272
  %cmp17 = fcmp ole double %15, 3.150000e+02, !dbg !5273
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5274

if.then18:                                        ; preds = %land.lhs.true16
  %16 = load double, double* %angle.addr, align 8, !dbg !5275
  %sub = fsub double %16, 1.800000e+02, !dbg !5275
  store double %sub, double* %angle.addr, align 8, !dbg !5275
  br label %if.end19, !dbg !5276

if.end19:                                         ; preds = %if.then18, %land.lhs.true16, %if.end14
  br label %sw.epilog, !dbg !5277

sw.default:                                       ; preds = %if.end8
  br label %sw.epilog, !dbg !5278

sw.epilog:                                        ; preds = %sw.default, %if.end19
  %17 = load double, double* %angle.addr, align 8, !dbg !5279
  %call20 = call double @fmod(double %17, double 9.000000e+01) #12, !dbg !5281
  %cmp21 = fcmp olt double 2.250000e+01, %call20, !dbg !5282
  br i1 %cmp21, label %land.lhs.true22, label %if.end99, !dbg !5283

land.lhs.true22:                                  ; preds = %sw.epilog
  %18 = load double, double* %angle.addr, align 8, !dbg !5284
  %call23 = call double @fmod(double %18, double 9.000000e+01) #12, !dbg !5285
  %cmp24 = fcmp ole double %call23, 6.750000e+01, !dbg !5286
  br i1 %cmp24, label %if.then25, label %if.end99, !dbg !5287

if.then25:                                        ; preds = %land.lhs.true22
  %19 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5288
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %19, i32 0, i32 1, !dbg !5291
  %20 = load i64, i64* %width, align 8, !dbg !5291
  %cmp26 = icmp eq i64 %20, 3, !dbg !5292
  br i1 %cmp26, label %land.lhs.true27, label %if.else97, !dbg !5293

land.lhs.true27:                                  ; preds = %if.then25
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5294
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 2, !dbg !5295
  %22 = load i64, i64* %height, align 8, !dbg !5295
  %cmp28 = icmp eq i64 %22, 3, !dbg !5296
  br i1 %cmp28, label %if.then29, label %if.else97, !dbg !5297

if.then29:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata double* %t, metadata !5298, metadata !DIExpression()), !dbg !5300
  %23 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5301
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %23, i32 0, i32 5, !dbg !5302
  %24 = load double*, double** %values, align 8, !dbg !5302
  %arrayidx = getelementptr inbounds double, double* %24, i64 0, !dbg !5301
  %25 = load double, double* %arrayidx, align 8, !dbg !5301
  store double %25, double* %t, align 8, !dbg !5300
  %26 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5303
  %values30 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %26, i32 0, i32 5, !dbg !5304
  %27 = load double*, double** %values30, align 8, !dbg !5304
  %arrayidx31 = getelementptr inbounds double, double* %27, i64 3, !dbg !5303
  %28 = load double, double* %arrayidx31, align 8, !dbg !5303
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5305
  %values32 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %29, i32 0, i32 5, !dbg !5306
  %30 = load double*, double** %values32, align 8, !dbg !5306
  %arrayidx33 = getelementptr inbounds double, double* %30, i64 0, !dbg !5305
  store double %28, double* %arrayidx33, align 8, !dbg !5307
  %31 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5308
  %values34 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %31, i32 0, i32 5, !dbg !5309
  %32 = load double*, double** %values34, align 8, !dbg !5309
  %arrayidx35 = getelementptr inbounds double, double* %32, i64 6, !dbg !5308
  %33 = load double, double* %arrayidx35, align 8, !dbg !5308
  %34 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5310
  %values36 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %34, i32 0, i32 5, !dbg !5311
  %35 = load double*, double** %values36, align 8, !dbg !5311
  %arrayidx37 = getelementptr inbounds double, double* %35, i64 3, !dbg !5310
  store double %33, double* %arrayidx37, align 8, !dbg !5312
  %36 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5313
  %values38 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %36, i32 0, i32 5, !dbg !5314
  %37 = load double*, double** %values38, align 8, !dbg !5314
  %arrayidx39 = getelementptr inbounds double, double* %37, i64 7, !dbg !5313
  %38 = load double, double* %arrayidx39, align 8, !dbg !5313
  %39 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5315
  %values40 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %39, i32 0, i32 5, !dbg !5316
  %40 = load double*, double** %values40, align 8, !dbg !5316
  %arrayidx41 = getelementptr inbounds double, double* %40, i64 6, !dbg !5315
  store double %38, double* %arrayidx41, align 8, !dbg !5317
  %41 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5318
  %values42 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %41, i32 0, i32 5, !dbg !5319
  %42 = load double*, double** %values42, align 8, !dbg !5319
  %arrayidx43 = getelementptr inbounds double, double* %42, i64 8, !dbg !5318
  %43 = load double, double* %arrayidx43, align 8, !dbg !5318
  %44 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5320
  %values44 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %44, i32 0, i32 5, !dbg !5321
  %45 = load double*, double** %values44, align 8, !dbg !5321
  %arrayidx45 = getelementptr inbounds double, double* %45, i64 7, !dbg !5320
  store double %43, double* %arrayidx45, align 8, !dbg !5322
  %46 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5323
  %values46 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %46, i32 0, i32 5, !dbg !5324
  %47 = load double*, double** %values46, align 8, !dbg !5324
  %arrayidx47 = getelementptr inbounds double, double* %47, i64 5, !dbg !5323
  %48 = load double, double* %arrayidx47, align 8, !dbg !5323
  %49 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5325
  %values48 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %49, i32 0, i32 5, !dbg !5326
  %50 = load double*, double** %values48, align 8, !dbg !5326
  %arrayidx49 = getelementptr inbounds double, double* %50, i64 8, !dbg !5325
  store double %48, double* %arrayidx49, align 8, !dbg !5327
  %51 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5328
  %values50 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %51, i32 0, i32 5, !dbg !5329
  %52 = load double*, double** %values50, align 8, !dbg !5329
  %arrayidx51 = getelementptr inbounds double, double* %52, i64 2, !dbg !5328
  %53 = load double, double* %arrayidx51, align 8, !dbg !5328
  %54 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5330
  %values52 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %54, i32 0, i32 5, !dbg !5331
  %55 = load double*, double** %values52, align 8, !dbg !5331
  %arrayidx53 = getelementptr inbounds double, double* %55, i64 5, !dbg !5330
  store double %53, double* %arrayidx53, align 8, !dbg !5332
  %56 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5333
  %values54 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %56, i32 0, i32 5, !dbg !5334
  %57 = load double*, double** %values54, align 8, !dbg !5334
  %arrayidx55 = getelementptr inbounds double, double* %57, i64 1, !dbg !5333
  %58 = load double, double* %arrayidx55, align 8, !dbg !5333
  %59 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5335
  %values56 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %59, i32 0, i32 5, !dbg !5336
  %60 = load double*, double** %values56, align 8, !dbg !5336
  %arrayidx57 = getelementptr inbounds double, double* %60, i64 2, !dbg !5335
  store double %58, double* %arrayidx57, align 8, !dbg !5337
  %61 = load double, double* %t, align 8, !dbg !5338
  %62 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5339
  %values58 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %62, i32 0, i32 5, !dbg !5340
  %63 = load double*, double** %values58, align 8, !dbg !5340
  %arrayidx59 = getelementptr inbounds double, double* %63, i64 1, !dbg !5339
  store double %61, double* %arrayidx59, align 8, !dbg !5341
  %64 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5342
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %64, i32 0, i32 3, !dbg !5344
  %65 = load i64, i64* %x, align 8, !dbg !5344
  %cmp60 = icmp ne i64 %65, 1, !dbg !5345
  br i1 %cmp60, label %if.then63, label %lor.lhs.false61, !dbg !5346

lor.lhs.false61:                                  ; preds = %if.then29
  %66 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5347
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %66, i32 0, i32 4, !dbg !5348
  %67 = load i64, i64* %y, align 8, !dbg !5348
  %cmp62 = icmp ne i64 %67, 1, !dbg !5349
  br i1 %cmp62, label %if.then63, label %if.end90, !dbg !5350

if.then63:                                        ; preds = %lor.lhs.false61, %if.then29
  call void @llvm.dbg.declare(metadata i64* %x64, metadata !5351, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.declare(metadata i64* %y65, metadata !5354, metadata !DIExpression()), !dbg !5355
  %68 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5356
  %x66 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %68, i32 0, i32 3, !dbg !5357
  %69 = load i64, i64* %x66, align 8, !dbg !5357
  %sub67 = sub nsw i64 %69, 1, !dbg !5358
  store i64 %sub67, i64* %x64, align 8, !dbg !5359
  %70 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5360
  %y68 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %70, i32 0, i32 4, !dbg !5361
  %71 = load i64, i64* %y68, align 8, !dbg !5361
  %sub69 = sub nsw i64 %71, 1, !dbg !5362
  store i64 %sub69, i64* %y65, align 8, !dbg !5363
  %72 = load i64, i64* %x64, align 8, !dbg !5364
  %73 = load i64, i64* %y65, align 8, !dbg !5366
  %cmp70 = icmp eq i64 %72, %73, !dbg !5367
  br i1 %cmp70, label %if.then71, label %if.else, !dbg !5368

if.then71:                                        ; preds = %if.then63
  store i64 0, i64* %x64, align 8, !dbg !5369
  br label %if.end85, !dbg !5370

if.else:                                          ; preds = %if.then63
  %74 = load i64, i64* %x64, align 8, !dbg !5371
  %cmp72 = icmp eq i64 %74, 0, !dbg !5373
  br i1 %cmp72, label %if.then73, label %if.else75, !dbg !5374

if.then73:                                        ; preds = %if.else
  %75 = load i64, i64* %y65, align 8, !dbg !5375
  %sub74 = sub nsw i64 0, %75, !dbg !5376
  store i64 %sub74, i64* %x64, align 8, !dbg !5377
  br label %if.end84, !dbg !5378

if.else75:                                        ; preds = %if.else
  %76 = load i64, i64* %x64, align 8, !dbg !5379
  %77 = load i64, i64* %y65, align 8, !dbg !5381
  %sub76 = sub nsw i64 0, %77, !dbg !5382
  %cmp77 = icmp eq i64 %76, %sub76, !dbg !5383
  br i1 %cmp77, label %if.then78, label %if.else79, !dbg !5384

if.then78:                                        ; preds = %if.else75
  store i64 0, i64* %y65, align 8, !dbg !5385
  br label %if.end83, !dbg !5386

if.else79:                                        ; preds = %if.else75
  %78 = load i64, i64* %y65, align 8, !dbg !5387
  %cmp80 = icmp eq i64 %78, 0, !dbg !5389
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !5390

if.then81:                                        ; preds = %if.else79
  %79 = load i64, i64* %x64, align 8, !dbg !5391
  store i64 %79, i64* %y65, align 8, !dbg !5392
  br label %if.end82, !dbg !5393

if.end82:                                         ; preds = %if.then81, %if.else79
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then78
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then73
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then71
  %80 = load i64, i64* %x64, align 8, !dbg !5394
  %add86 = add nsw i64 %80, 1, !dbg !5395
  %81 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5396
  %x87 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %81, i32 0, i32 3, !dbg !5397
  store i64 %add86, i64* %x87, align 8, !dbg !5398
  %82 = load i64, i64* %y65, align 8, !dbg !5399
  %add88 = add nsw i64 %82, 1, !dbg !5400
  %83 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5401
  %y89 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %83, i32 0, i32 4, !dbg !5402
  store i64 %add88, i64* %y89, align 8, !dbg !5403
  br label %if.end90, !dbg !5404

if.end90:                                         ; preds = %if.end85, %lor.lhs.false61
  %84 = load double, double* %angle.addr, align 8, !dbg !5405
  %add91 = fadd double %84, 3.150000e+02, !dbg !5406
  %call92 = call double @fmod(double %add91, double 3.600000e+02) #12, !dbg !5407
  store double %call92, double* %angle.addr, align 8, !dbg !5408
  %85 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5409
  %angle93 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %85, i32 0, i32 10, !dbg !5410
  %86 = load double, double* %angle93, align 8, !dbg !5410
  %add94 = fadd double %86, 4.500000e+01, !dbg !5411
  %call95 = call double @fmod(double %add94, double 3.600000e+02) #12, !dbg !5412
  %87 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5413
  %angle96 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %87, i32 0, i32 10, !dbg !5414
  store double %call95, double* %angle96, align 8, !dbg !5415
  br label %if.end98, !dbg !5416

if.else97:                                        ; preds = %land.lhs.true27, %if.then25
  call void @perror(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i64 0, i64 0)), !dbg !5417
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.end90
  br label %if.end99, !dbg !5418

if.end99:                                         ; preds = %if.end98, %land.lhs.true22, %sw.epilog
  %88 = load double, double* %angle.addr, align 8, !dbg !5419
  %call100 = call double @fmod(double %88, double 1.800000e+02) #12, !dbg !5421
  %cmp101 = fcmp olt double 4.500000e+01, %call100, !dbg !5422
  br i1 %cmp101, label %land.lhs.true102, label %if.end221, !dbg !5423

land.lhs.true102:                                 ; preds = %if.end99
  %89 = load double, double* %angle.addr, align 8, !dbg !5424
  %call103 = call double @fmod(double %89, double 1.800000e+02) #12, !dbg !5425
  %cmp104 = fcmp ole double %call103, 1.350000e+02, !dbg !5426
  br i1 %cmp104, label %if.then105, label %if.end221, !dbg !5427

if.then105:                                       ; preds = %land.lhs.true102
  %90 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5428
  %width106 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %90, i32 0, i32 1, !dbg !5431
  %91 = load i64, i64* %width106, align 8, !dbg !5431
  %cmp107 = icmp eq i64 %91, 1, !dbg !5432
  br i1 %cmp107, label %if.then111, label %lor.lhs.false108, !dbg !5433

lor.lhs.false108:                                 ; preds = %if.then105
  %92 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5434
  %height109 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %92, i32 0, i32 2, !dbg !5435
  %93 = load i64, i64* %height109, align 8, !dbg !5435
  %cmp110 = icmp eq i64 %93, 1, !dbg !5436
  br i1 %cmp110, label %if.then111, label %if.else138, !dbg !5437

if.then111:                                       ; preds = %lor.lhs.false108, %if.then105
  call void @llvm.dbg.declare(metadata i64* %t112, metadata !5438, metadata !DIExpression()), !dbg !5440
  %94 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5441
  %width113 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %94, i32 0, i32 1, !dbg !5442
  %95 = load i64, i64* %width113, align 8, !dbg !5442
  store i64 %95, i64* %t112, align 8, !dbg !5443
  %96 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5444
  %height114 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %96, i32 0, i32 2, !dbg !5445
  %97 = load i64, i64* %height114, align 8, !dbg !5445
  %98 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5446
  %width115 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %98, i32 0, i32 1, !dbg !5447
  store i64 %97, i64* %width115, align 8, !dbg !5448
  %99 = load i64, i64* %t112, align 8, !dbg !5449
  %100 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5450
  %height116 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %100, i32 0, i32 2, !dbg !5451
  store i64 %99, i64* %height116, align 8, !dbg !5452
  %101 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5453
  %x117 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %101, i32 0, i32 3, !dbg !5454
  %102 = load i64, i64* %x117, align 8, !dbg !5454
  store i64 %102, i64* %t112, align 8, !dbg !5455
  %103 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5456
  %y118 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %103, i32 0, i32 4, !dbg !5457
  %104 = load i64, i64* %y118, align 8, !dbg !5457
  %105 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5458
  %x119 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %105, i32 0, i32 3, !dbg !5459
  store i64 %104, i64* %x119, align 8, !dbg !5460
  %106 = load i64, i64* %t112, align 8, !dbg !5461
  %107 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5462
  %y120 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %107, i32 0, i32 4, !dbg !5463
  store i64 %106, i64* %y120, align 8, !dbg !5464
  %108 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5465
  %width121 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %108, i32 0, i32 1, !dbg !5467
  %109 = load i64, i64* %width121, align 8, !dbg !5467
  %cmp122 = icmp eq i64 %109, 1, !dbg !5468
  br i1 %cmp122, label %if.then123, label %if.else130, !dbg !5469

if.then123:                                       ; preds = %if.then111
  %110 = load double, double* %angle.addr, align 8, !dbg !5470
  %add124 = fadd double %110, 2.700000e+02, !dbg !5472
  %call125 = call double @fmod(double %add124, double 3.600000e+02) #12, !dbg !5473
  store double %call125, double* %angle.addr, align 8, !dbg !5474
  %111 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5475
  %angle126 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %111, i32 0, i32 10, !dbg !5476
  %112 = load double, double* %angle126, align 8, !dbg !5476
  %add127 = fadd double %112, 9.000000e+01, !dbg !5477
  %call128 = call double @fmod(double %add127, double 3.600000e+02) #12, !dbg !5478
  %113 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5479
  %angle129 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %113, i32 0, i32 10, !dbg !5480
  store double %call128, double* %angle129, align 8, !dbg !5481
  br label %if.end137, !dbg !5482

if.else130:                                       ; preds = %if.then111
  %114 = load double, double* %angle.addr, align 8, !dbg !5483
  %add131 = fadd double %114, 9.000000e+01, !dbg !5485
  %call132 = call double @fmod(double %add131, double 3.600000e+02) #12, !dbg !5486
  store double %call132, double* %angle.addr, align 8, !dbg !5487
  %115 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5488
  %angle133 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %115, i32 0, i32 10, !dbg !5489
  %116 = load double, double* %angle133, align 8, !dbg !5489
  %add134 = fadd double %116, 2.700000e+02, !dbg !5490
  %call135 = call double @fmod(double %add134, double 3.600000e+02) #12, !dbg !5491
  %117 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5492
  %angle136 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %117, i32 0, i32 10, !dbg !5493
  store double %call135, double* %angle136, align 8, !dbg !5494
  br label %if.end137

if.end137:                                        ; preds = %if.else130, %if.then123
  br label %if.end220, !dbg !5495

if.else138:                                       ; preds = %lor.lhs.false108
  %118 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5496
  %width139 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %118, i32 0, i32 1, !dbg !5498
  %119 = load i64, i64* %width139, align 8, !dbg !5498
  %120 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5499
  %height140 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %120, i32 0, i32 2, !dbg !5500
  %121 = load i64, i64* %height140, align 8, !dbg !5500
  %cmp141 = icmp eq i64 %119, %121, !dbg !5501
  br i1 %cmp141, label %if.then142, label %if.else218, !dbg !5502

if.then142:                                       ; preds = %if.else138
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5503, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata i64* %j, metadata !5507, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.declare(metadata i64* %x143, metadata !5509, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.declare(metadata i64* %y144, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.declare(metadata double** %k, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata double* %t145, metadata !5515, metadata !DIExpression()), !dbg !5516
  %122 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5517
  %values146 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %122, i32 0, i32 5, !dbg !5518
  %123 = load double*, double** %values146, align 8, !dbg !5518
  store double* %123, double** %k, align 8, !dbg !5519
  store i64 0, i64* %i, align 8, !dbg !5520
  %124 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5522
  %width147 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %124, i32 0, i32 1, !dbg !5523
  %125 = load i64, i64* %width147, align 8, !dbg !5523
  %sub148 = sub i64 %125, 1, !dbg !5524
  store i64 %sub148, i64* %x143, align 8, !dbg !5525
  br label %for.cond, !dbg !5526

for.cond:                                         ; preds = %for.inc186, %if.then142
  %126 = load i64, i64* %i, align 8, !dbg !5527
  %127 = load i64, i64* %x143, align 8, !dbg !5529
  %cmp149 = icmp ule i64 %126, %127, !dbg !5530
  br i1 %cmp149, label %for.body, label %for.end189, !dbg !5531

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %j, align 8, !dbg !5532
  %128 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5534
  %height150 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %128, i32 0, i32 2, !dbg !5535
  %129 = load i64, i64* %height150, align 8, !dbg !5535
  %sub151 = sub i64 %129, 1, !dbg !5536
  store i64 %sub151, i64* %y144, align 8, !dbg !5537
  br label %for.cond152, !dbg !5538

for.cond152:                                      ; preds = %for.inc, %for.body
  %130 = load i64, i64* %j, align 8, !dbg !5539
  %131 = load i64, i64* %y144, align 8, !dbg !5541
  %cmp153 = icmp ult i64 %130, %131, !dbg !5542
  br i1 %cmp153, label %for.body154, label %for.end, !dbg !5543

for.body154:                                      ; preds = %for.cond152
  %132 = load double*, double** %k, align 8, !dbg !5544
  %133 = load i64, i64* %i, align 8, !dbg !5546
  %134 = load i64, i64* %j, align 8, !dbg !5547
  %135 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5548
  %width155 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %135, i32 0, i32 1, !dbg !5549
  %136 = load i64, i64* %width155, align 8, !dbg !5549
  %mul = mul i64 %134, %136, !dbg !5550
  %add156 = add i64 %133, %mul, !dbg !5551
  %arrayidx157 = getelementptr inbounds double, double* %132, i64 %add156, !dbg !5544
  %137 = load double, double* %arrayidx157, align 8, !dbg !5544
  store double %137, double* %t145, align 8, !dbg !5552
  %138 = load double*, double** %k, align 8, !dbg !5553
  %139 = load i64, i64* %j, align 8, !dbg !5554
  %140 = load i64, i64* %x143, align 8, !dbg !5555
  %141 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5556
  %width158 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %141, i32 0, i32 1, !dbg !5557
  %142 = load i64, i64* %width158, align 8, !dbg !5557
  %mul159 = mul i64 %140, %142, !dbg !5558
  %add160 = add i64 %139, %mul159, !dbg !5559
  %arrayidx161 = getelementptr inbounds double, double* %138, i64 %add160, !dbg !5553
  %143 = load double, double* %arrayidx161, align 8, !dbg !5553
  %144 = load double*, double** %k, align 8, !dbg !5560
  %145 = load i64, i64* %i, align 8, !dbg !5561
  %146 = load i64, i64* %j, align 8, !dbg !5562
  %147 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5563
  %width162 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %147, i32 0, i32 1, !dbg !5564
  %148 = load i64, i64* %width162, align 8, !dbg !5564
  %mul163 = mul i64 %146, %148, !dbg !5565
  %add164 = add i64 %145, %mul163, !dbg !5566
  %arrayidx165 = getelementptr inbounds double, double* %144, i64 %add164, !dbg !5560
  store double %143, double* %arrayidx165, align 8, !dbg !5567
  %149 = load double*, double** %k, align 8, !dbg !5568
  %150 = load i64, i64* %x143, align 8, !dbg !5569
  %151 = load i64, i64* %y144, align 8, !dbg !5570
  %152 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5571
  %width166 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %152, i32 0, i32 1, !dbg !5572
  %153 = load i64, i64* %width166, align 8, !dbg !5572
  %mul167 = mul i64 %151, %153, !dbg !5573
  %add168 = add i64 %150, %mul167, !dbg !5574
  %arrayidx169 = getelementptr inbounds double, double* %149, i64 %add168, !dbg !5568
  %154 = load double, double* %arrayidx169, align 8, !dbg !5568
  %155 = load double*, double** %k, align 8, !dbg !5575
  %156 = load i64, i64* %j, align 8, !dbg !5576
  %157 = load i64, i64* %x143, align 8, !dbg !5577
  %158 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5578
  %width170 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %158, i32 0, i32 1, !dbg !5579
  %159 = load i64, i64* %width170, align 8, !dbg !5579
  %mul171 = mul i64 %157, %159, !dbg !5580
  %add172 = add i64 %156, %mul171, !dbg !5581
  %arrayidx173 = getelementptr inbounds double, double* %155, i64 %add172, !dbg !5575
  store double %154, double* %arrayidx173, align 8, !dbg !5582
  %160 = load double*, double** %k, align 8, !dbg !5583
  %161 = load i64, i64* %y144, align 8, !dbg !5584
  %162 = load i64, i64* %i, align 8, !dbg !5585
  %163 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5586
  %width174 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %163, i32 0, i32 1, !dbg !5587
  %164 = load i64, i64* %width174, align 8, !dbg !5587
  %mul175 = mul i64 %162, %164, !dbg !5588
  %add176 = add i64 %161, %mul175, !dbg !5589
  %arrayidx177 = getelementptr inbounds double, double* %160, i64 %add176, !dbg !5583
  %165 = load double, double* %arrayidx177, align 8, !dbg !5583
  %166 = load double*, double** %k, align 8, !dbg !5590
  %167 = load i64, i64* %x143, align 8, !dbg !5591
  %168 = load i64, i64* %y144, align 8, !dbg !5592
  %169 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5593
  %width178 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %169, i32 0, i32 1, !dbg !5594
  %170 = load i64, i64* %width178, align 8, !dbg !5594
  %mul179 = mul i64 %168, %170, !dbg !5595
  %add180 = add i64 %167, %mul179, !dbg !5596
  %arrayidx181 = getelementptr inbounds double, double* %166, i64 %add180, !dbg !5590
  store double %165, double* %arrayidx181, align 8, !dbg !5597
  %171 = load double, double* %t145, align 8, !dbg !5598
  %172 = load double*, double** %k, align 8, !dbg !5599
  %173 = load i64, i64* %y144, align 8, !dbg !5600
  %174 = load i64, i64* %i, align 8, !dbg !5601
  %175 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5602
  %width182 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %175, i32 0, i32 1, !dbg !5603
  %176 = load i64, i64* %width182, align 8, !dbg !5603
  %mul183 = mul i64 %174, %176, !dbg !5604
  %add184 = add i64 %173, %mul183, !dbg !5605
  %arrayidx185 = getelementptr inbounds double, double* %172, i64 %add184, !dbg !5599
  store double %171, double* %arrayidx185, align 8, !dbg !5606
  br label %for.inc, !dbg !5607

for.inc:                                          ; preds = %for.body154
  %177 = load i64, i64* %j, align 8, !dbg !5608
  %inc = add i64 %177, 1, !dbg !5608
  store i64 %inc, i64* %j, align 8, !dbg !5608
  %178 = load i64, i64* %y144, align 8, !dbg !5609
  %dec = add i64 %178, -1, !dbg !5609
  store i64 %dec, i64* %y144, align 8, !dbg !5609
  br label %for.cond152, !dbg !5610, !llvm.loop !5611

for.end:                                          ; preds = %for.cond152
  br label %for.inc186, !dbg !5612

for.inc186:                                       ; preds = %for.end
  %179 = load i64, i64* %i, align 8, !dbg !5613
  %inc187 = add i64 %179, 1, !dbg !5613
  store i64 %inc187, i64* %i, align 8, !dbg !5613
  %180 = load i64, i64* %x143, align 8, !dbg !5614
  %dec188 = add i64 %180, -1, !dbg !5614
  store i64 %dec188, i64* %x143, align 8, !dbg !5614
  br label %for.cond, !dbg !5615, !llvm.loop !5616

for.end189:                                       ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %x190, metadata !5618, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.declare(metadata i64* %y191, metadata !5621, metadata !DIExpression()), !dbg !5622
  %181 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5623
  %x192 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %181, i32 0, i32 3, !dbg !5624
  %182 = load i64, i64* %x192, align 8, !dbg !5624
  %mul193 = mul nsw i64 %182, 2, !dbg !5625
  %183 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5626
  %width194 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %183, i32 0, i32 1, !dbg !5627
  %184 = load i64, i64* %width194, align 8, !dbg !5627
  %sub195 = sub i64 %mul193, %184, !dbg !5628
  %add196 = add i64 %sub195, 1, !dbg !5629
  store i64 %add196, i64* %x190, align 8, !dbg !5630
  %185 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5631
  %y197 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %185, i32 0, i32 4, !dbg !5632
  %186 = load i64, i64* %y197, align 8, !dbg !5632
  %mul198 = mul nsw i64 %186, 2, !dbg !5633
  %187 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5634
  %height199 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %187, i32 0, i32 2, !dbg !5635
  %188 = load i64, i64* %height199, align 8, !dbg !5635
  %sub200 = sub i64 %mul198, %188, !dbg !5636
  %add201 = add i64 %sub200, 1, !dbg !5637
  store i64 %add201, i64* %y191, align 8, !dbg !5638
  %189 = load i64, i64* %y191, align 8, !dbg !5639
  %sub202 = sub nsw i64 0, %189, !dbg !5640
  %190 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5641
  %width203 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %190, i32 0, i32 1, !dbg !5642
  %191 = load i64, i64* %width203, align 8, !dbg !5642
  %add204 = add nsw i64 %sub202, %191, !dbg !5643
  %sub205 = sub nsw i64 %add204, 1, !dbg !5644
  %div = sdiv i64 %sub205, 2, !dbg !5645
  %192 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5646
  %x206 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %192, i32 0, i32 3, !dbg !5647
  store i64 %div, i64* %x206, align 8, !dbg !5648
  %193 = load i64, i64* %x190, align 8, !dbg !5649
  %194 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5650
  %height207 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %194, i32 0, i32 2, !dbg !5651
  %195 = load i64, i64* %height207, align 8, !dbg !5651
  %add208 = add nsw i64 %193, %195, !dbg !5652
  %sub209 = sub nsw i64 %add208, 1, !dbg !5653
  %div210 = sdiv i64 %sub209, 2, !dbg !5654
  %196 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5655
  %y211 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %196, i32 0, i32 4, !dbg !5656
  store i64 %div210, i64* %y211, align 8, !dbg !5657
  %197 = load double, double* %angle.addr, align 8, !dbg !5658
  %add212 = fadd double %197, 2.700000e+02, !dbg !5659
  %call213 = call double @fmod(double %add212, double 3.600000e+02) #12, !dbg !5660
  store double %call213, double* %angle.addr, align 8, !dbg !5661
  %198 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5662
  %angle214 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %198, i32 0, i32 10, !dbg !5663
  %199 = load double, double* %angle214, align 8, !dbg !5663
  %add215 = fadd double %199, 9.000000e+01, !dbg !5664
  %call216 = call double @fmod(double %add215, double 3.600000e+02) #12, !dbg !5665
  %200 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5666
  %angle217 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %200, i32 0, i32 10, !dbg !5667
  store double %call216, double* %angle217, align 8, !dbg !5668
  br label %if.end219, !dbg !5669

if.else218:                                       ; preds = %if.else138
  call void @perror(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i64 0, i64 0)), !dbg !5670
  br label %if.end219

if.end219:                                        ; preds = %if.else218, %for.end189
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end137
  br label %if.end221, !dbg !5671

if.end221:                                        ; preds = %if.end220, %land.lhs.true102, %if.end99
  %201 = load double, double* %angle.addr, align 8, !dbg !5672
  %cmp222 = fcmp olt double 1.350000e+02, %201, !dbg !5674
  br i1 %cmp222, label %land.lhs.true223, label %if.end262, !dbg !5675

land.lhs.true223:                                 ; preds = %if.end221
  %202 = load double, double* %angle.addr, align 8, !dbg !5676
  %cmp224 = fcmp ole double %202, 2.250000e+02, !dbg !5677
  br i1 %cmp224, label %if.then225, label %if.end262, !dbg !5678

if.then225:                                       ; preds = %land.lhs.true223
  call void @llvm.dbg.declare(metadata double* %t226, metadata !5679, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata double** %k227, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata i64* %i228, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata i64* %j229, metadata !5686, metadata !DIExpression()), !dbg !5687
  %203 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5688
  %values230 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %203, i32 0, i32 5, !dbg !5689
  %204 = load double*, double** %values230, align 8, !dbg !5689
  store double* %204, double** %k227, align 8, !dbg !5690
  store i64 0, i64* %i228, align 8, !dbg !5691
  %205 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5693
  %width231 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %205, i32 0, i32 1, !dbg !5694
  %206 = load i64, i64* %width231, align 8, !dbg !5694
  %207 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5695
  %height232 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %207, i32 0, i32 2, !dbg !5696
  %208 = load i64, i64* %height232, align 8, !dbg !5696
  %mul233 = mul i64 %206, %208, !dbg !5697
  %sub234 = sub i64 %mul233, 1, !dbg !5698
  store i64 %sub234, i64* %j229, align 8, !dbg !5699
  br label %for.cond235, !dbg !5700

for.cond235:                                      ; preds = %for.inc242, %if.then225
  %209 = load i64, i64* %i228, align 8, !dbg !5701
  %210 = load i64, i64* %j229, align 8, !dbg !5703
  %cmp236 = icmp ult i64 %209, %210, !dbg !5704
  br i1 %cmp236, label %for.body237, label %for.end245, !dbg !5705

for.body237:                                      ; preds = %for.cond235
  %211 = load double*, double** %k227, align 8, !dbg !5706
  %212 = load i64, i64* %i228, align 8, !dbg !5707
  %arrayidx238 = getelementptr inbounds double, double* %211, i64 %212, !dbg !5706
  %213 = load double, double* %arrayidx238, align 8, !dbg !5706
  store double %213, double* %t226, align 8, !dbg !5708
  %214 = load double*, double** %k227, align 8, !dbg !5709
  %215 = load i64, i64* %j229, align 8, !dbg !5710
  %arrayidx239 = getelementptr inbounds double, double* %214, i64 %215, !dbg !5709
  %216 = load double, double* %arrayidx239, align 8, !dbg !5709
  %217 = load double*, double** %k227, align 8, !dbg !5711
  %218 = load i64, i64* %i228, align 8, !dbg !5712
  %arrayidx240 = getelementptr inbounds double, double* %217, i64 %218, !dbg !5711
  store double %216, double* %arrayidx240, align 8, !dbg !5713
  %219 = load double, double* %t226, align 8, !dbg !5714
  %220 = load double*, double** %k227, align 8, !dbg !5715
  %221 = load i64, i64* %j229, align 8, !dbg !5716
  %arrayidx241 = getelementptr inbounds double, double* %220, i64 %221, !dbg !5715
  store double %219, double* %arrayidx241, align 8, !dbg !5717
  br label %for.inc242, !dbg !5718

for.inc242:                                       ; preds = %for.body237
  %222 = load i64, i64* %i228, align 8, !dbg !5719
  %inc243 = add i64 %222, 1, !dbg !5719
  store i64 %inc243, i64* %i228, align 8, !dbg !5719
  %223 = load i64, i64* %j229, align 8, !dbg !5720
  %dec244 = add i64 %223, -1, !dbg !5720
  store i64 %dec244, i64* %j229, align 8, !dbg !5720
  br label %for.cond235, !dbg !5721, !llvm.loop !5722

for.end245:                                       ; preds = %for.cond235
  %224 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5724
  %width246 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %224, i32 0, i32 1, !dbg !5725
  %225 = load i64, i64* %width246, align 8, !dbg !5725
  %226 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5726
  %x247 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %226, i32 0, i32 3, !dbg !5727
  %227 = load i64, i64* %x247, align 8, !dbg !5727
  %sub248 = sub nsw i64 %225, %227, !dbg !5728
  %sub249 = sub nsw i64 %sub248, 1, !dbg !5729
  %228 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5730
  %x250 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %228, i32 0, i32 3, !dbg !5731
  store i64 %sub249, i64* %x250, align 8, !dbg !5732
  %229 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5733
  %height251 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %229, i32 0, i32 2, !dbg !5734
  %230 = load i64, i64* %height251, align 8, !dbg !5734
  %231 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5735
  %y252 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %231, i32 0, i32 4, !dbg !5736
  %232 = load i64, i64* %y252, align 8, !dbg !5736
  %sub253 = sub nsw i64 %230, %232, !dbg !5737
  %sub254 = sub nsw i64 %sub253, 1, !dbg !5738
  %233 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5739
  %y255 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %233, i32 0, i32 4, !dbg !5740
  store i64 %sub254, i64* %y255, align 8, !dbg !5741
  %234 = load double, double* %angle.addr, align 8, !dbg !5742
  %sub256 = fsub double %234, 1.800000e+02, !dbg !5743
  %call257 = call double @fmod(double %sub256, double 3.600000e+02) #12, !dbg !5744
  store double %call257, double* %angle.addr, align 8, !dbg !5745
  %235 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5746
  %angle258 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %235, i32 0, i32 10, !dbg !5747
  %236 = load double, double* %angle258, align 8, !dbg !5747
  %add259 = fadd double %236, 1.800000e+02, !dbg !5748
  %call260 = call double @fmod(double %add259, double 3.600000e+02) #12, !dbg !5749
  %237 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5750
  %angle261 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %237, i32 0, i32 10, !dbg !5751
  store double %call260, double* %angle261, align 8, !dbg !5752
  br label %if.end262, !dbg !5753

if.end262:                                        ; preds = %for.end245, %land.lhs.true223, %if.end221
  br label %return, !dbg !5754

return:                                           ; preds = %if.end262, %if.then13, %sw.bb9, %sw.bb, %if.then7
  ret void, !dbg !5755
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @fact(i64 %n) #0 !dbg !5756 {
entry:
  %n.addr = alloca i64, align 8
  %l = alloca i64, align 8
  %f = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata i64* %l, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i64* %f, metadata !5763, metadata !DIExpression()), !dbg !5764
  store i64 1, i64* %f, align 8, !dbg !5765
  store i64 2, i64* %l, align 8, !dbg !5767
  br label %for.cond, !dbg !5768

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %l, align 8, !dbg !5769
  %1 = load i64, i64* %n.addr, align 8, !dbg !5771
  %cmp = icmp ule i64 %0, %1, !dbg !5772
  br i1 %cmp, label %for.body, label %for.end, !dbg !5773

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !5773

for.inc:                                          ; preds = %for.body
  %2 = load i64, i64* %f, align 8, !dbg !5774
  %3 = load i64, i64* %l, align 8, !dbg !5775
  %mul = mul i64 %2, %3, !dbg !5776
  store i64 %mul, i64* %f, align 8, !dbg !5777
  %4 = load i64, i64* %l, align 8, !dbg !5778
  %inc = add i64 %4, 1, !dbg !5778
  store i64 %inc, i64* %l, align 8, !dbg !5778
  br label %for.cond, !dbg !5779, !llvm.loop !5780

for.end:                                          ; preds = %for.cond
  %5 = load i64, i64* %f, align 8, !dbg !5782
  ret i64 %5, !dbg !5783
}

; Function Attrs: nounwind readnone
declare dso_local i64 @labs(i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ExpandMirrorKernelInfo(%struct.KernelInfo* %kernel) #0 !dbg !5784 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %clone = alloca %struct.KernelInfo*, align 8
  %last = alloca %struct.KernelInfo*, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %clone, metadata !5787, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %last, metadata !5789, metadata !DIExpression()), !dbg !5790
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5791
  store %struct.KernelInfo* %0, %struct.KernelInfo** %last, align 8, !dbg !5792
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5793
  %call = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %1), !dbg !5794
  store %struct.KernelInfo* %call, %struct.KernelInfo** %clone, align 8, !dbg !5795
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5796
  call void @RotateKernelInfo(%struct.KernelInfo* %2, double 1.800000e+02), !dbg !5797
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5798
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5799
  %call1 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %4), !dbg !5800
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call1, i32 0, i32 11, !dbg !5801
  store %struct.KernelInfo* %3, %struct.KernelInfo** %next, align 8, !dbg !5802
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5803
  store %struct.KernelInfo* %5, %struct.KernelInfo** %last, align 8, !dbg !5804
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5805
  %call2 = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %6), !dbg !5806
  store %struct.KernelInfo* %call2, %struct.KernelInfo** %clone, align 8, !dbg !5807
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5808
  call void @RotateKernelInfo(%struct.KernelInfo* %7, double 9.000000e+01), !dbg !5809
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5810
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5811
  %call3 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %9), !dbg !5812
  %next4 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call3, i32 0, i32 11, !dbg !5813
  store %struct.KernelInfo* %8, %struct.KernelInfo** %next4, align 8, !dbg !5814
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5815
  store %struct.KernelInfo* %10, %struct.KernelInfo** %last, align 8, !dbg !5816
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5817
  %call5 = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %11), !dbg !5818
  store %struct.KernelInfo* %call5, %struct.KernelInfo** %clone, align 8, !dbg !5819
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5820
  call void @RotateKernelInfo(%struct.KernelInfo* %12, double 1.800000e+02), !dbg !5821
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5822
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5823
  %call6 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %14), !dbg !5824
  %next7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call6, i32 0, i32 11, !dbg !5825
  store %struct.KernelInfo* %13, %struct.KernelInfo** %next7, align 8, !dbg !5826
  ret void, !dbg !5827
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExpandRotateKernelInfo(%struct.KernelInfo* %kernel, double %angle) #0 !dbg !5828 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %angle.addr = alloca double, align 8
  %clone = alloca %struct.KernelInfo*, align 8
  %last = alloca %struct.KernelInfo*, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %clone, metadata !5835, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %last, metadata !5837, metadata !DIExpression()), !dbg !5838
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5839
  store %struct.KernelInfo* %0, %struct.KernelInfo** %last, align 8, !dbg !5840
  br label %while.body, !dbg !5841

while.body:                                       ; preds = %entry, %if.end
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5842
  %call = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %1), !dbg !5844
  store %struct.KernelInfo* %call, %struct.KernelInfo** %clone, align 8, !dbg !5845
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5846
  %3 = load double, double* %angle.addr, align 8, !dbg !5847
  call void @RotateKernelInfo(%struct.KernelInfo* %2, double %3), !dbg !5848
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5849
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5851
  %call1 = call i32 @SameKernelInfo(%struct.KernelInfo* %4, %struct.KernelInfo* %5), !dbg !5852
  %cmp = icmp ne i32 %call1, 0, !dbg !5853
  br i1 %cmp, label %if.then, label %if.end, !dbg !5854

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5855

if.end:                                           ; preds = %while.body
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5856
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %last, align 8, !dbg !5857
  %call2 = call %struct.KernelInfo* @LastKernelInfo(%struct.KernelInfo* %7), !dbg !5858
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %call2, i32 0, i32 11, !dbg !5859
  store %struct.KernelInfo* %6, %struct.KernelInfo** %next, align 8, !dbg !5860
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5861
  store %struct.KernelInfo* %8, %struct.KernelInfo** %last, align 8, !dbg !5862
  br label %while.body, !dbg !5841, !llvm.loop !5863

while.end:                                        ; preds = %if.then
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %clone, align 8, !dbg !5865
  %call3 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %9), !dbg !5866
  store %struct.KernelInfo* %call3, %struct.KernelInfo** %clone, align 8, !dbg !5867
  ret void, !dbg !5868
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !5869 {
entry:
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load double, double* %x.addr, align 8, !dbg !5876
  %1 = load double, double* %y.addr, align 8, !dbg !5877
  %cmp = fcmp ogt double %0, %1, !dbg !5878
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5876

cond.true:                                        ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !5879
  br label %cond.end, !dbg !5876

cond.false:                                       ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !5880
  br label %cond.end, !dbg !5876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5876
  ret double %cond, !dbg !5881
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %kernel) #0 !dbg !5882 {
entry:
  %retval = alloca %struct.KernelInfo*, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %i = alloca i64, align 8
  %new_kernel = alloca %struct.KernelInfo*, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %new_kernel, metadata !5891, metadata !DIExpression()), !dbg !5892
  %call = call i8* @AcquireMagickMemory(i64 104) #13, !dbg !5893
  %0 = bitcast i8* %call to %struct.KernelInfo*, !dbg !5894
  store %struct.KernelInfo* %0, %struct.KernelInfo** %new_kernel, align 8, !dbg !5895
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5896
  %cmp = icmp eq %struct.KernelInfo* %1, null, !dbg !5898
  br i1 %cmp, label %if.then, label %if.end, !dbg !5899

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5900
  store %struct.KernelInfo* %2, %struct.KernelInfo** %retval, align 8, !dbg !5901
  br label %return, !dbg !5901

if.end:                                           ; preds = %entry
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5902
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5903
  %5 = bitcast %struct.KernelInfo* %3 to i8*, !dbg !5904
  %6 = bitcast %struct.KernelInfo* %4 to i8*, !dbg !5904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 104, i1 false), !dbg !5904
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5905
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 1, !dbg !5906
  %8 = load i64, i64* %width, align 8, !dbg !5906
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5907
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 2, !dbg !5908
  %10 = load i64, i64* %height, align 8, !dbg !5908
  %mul = mul i64 %10, 8, !dbg !5909
  %call1 = call i8* @AcquireAlignedMemory(i64 %8, i64 %mul) #14, !dbg !5910
  %11 = bitcast i8* %call1 to double*, !dbg !5911
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5912
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 5, !dbg !5913
  store double* %11, double** %values, align 8, !dbg !5914
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5915
  %values2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %13, i32 0, i32 5, !dbg !5917
  %14 = load double*, double** %values2, align 8, !dbg !5917
  %cmp3 = icmp eq double* %14, null, !dbg !5918
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5919

if.then4:                                         ; preds = %if.end
  %15 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5920
  %call5 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %15), !dbg !5921
  store %struct.KernelInfo* %call5, %struct.KernelInfo** %retval, align 8, !dbg !5922
  br label %return, !dbg !5922

if.end6:                                          ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !5923
  br label %for.cond, !dbg !5925

for.cond:                                         ; preds = %for.inc, %if.end6
  %16 = load i64, i64* %i, align 8, !dbg !5926
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5928
  %width7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 1, !dbg !5929
  %18 = load i64, i64* %width7, align 8, !dbg !5929
  %19 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5930
  %height8 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %19, i32 0, i32 2, !dbg !5931
  %20 = load i64, i64* %height8, align 8, !dbg !5931
  %mul9 = mul i64 %18, %20, !dbg !5932
  %cmp10 = icmp slt i64 %16, %mul9, !dbg !5933
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5934

for.body:                                         ; preds = %for.cond
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5935
  %values11 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 5, !dbg !5936
  %22 = load double*, double** %values11, align 8, !dbg !5936
  %23 = load i64, i64* %i, align 8, !dbg !5937
  %arrayidx = getelementptr inbounds double, double* %22, i64 %23, !dbg !5935
  %24 = load double, double* %arrayidx, align 8, !dbg !5935
  %25 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5938
  %values12 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %25, i32 0, i32 5, !dbg !5939
  %26 = load double*, double** %values12, align 8, !dbg !5939
  %27 = load i64, i64* %i, align 8, !dbg !5940
  %arrayidx13 = getelementptr inbounds double, double* %26, i64 %27, !dbg !5938
  store double %24, double* %arrayidx13, align 8, !dbg !5941
  br label %for.inc, !dbg !5938

for.inc:                                          ; preds = %for.body
  %28 = load i64, i64* %i, align 8, !dbg !5942
  %inc = add nsw i64 %28, 1, !dbg !5942
  store i64 %inc, i64* %i, align 8, !dbg !5942
  br label %for.cond, !dbg !5943, !llvm.loop !5944

for.end:                                          ; preds = %for.cond
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5946
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %29, i32 0, i32 11, !dbg !5948
  %30 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !5948
  %cmp14 = icmp ne %struct.KernelInfo* %30, null, !dbg !5949
  br i1 %cmp14, label %if.then15, label %if.end24, !dbg !5950

if.then15:                                        ; preds = %for.end
  %31 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !5951
  %next16 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %31, i32 0, i32 11, !dbg !5953
  %32 = load %struct.KernelInfo*, %struct.KernelInfo** %next16, align 8, !dbg !5953
  %call17 = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %32), !dbg !5954
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5955
  %next18 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %33, i32 0, i32 11, !dbg !5956
  store %struct.KernelInfo* %call17, %struct.KernelInfo** %next18, align 8, !dbg !5957
  %34 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5958
  %next19 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %34, i32 0, i32 11, !dbg !5960
  %35 = load %struct.KernelInfo*, %struct.KernelInfo** %next19, align 8, !dbg !5960
  %cmp20 = icmp eq %struct.KernelInfo* %35, null, !dbg !5961
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !5962

if.then21:                                        ; preds = %if.then15
  %36 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5963
  %call22 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %36), !dbg !5964
  store %struct.KernelInfo* %call22, %struct.KernelInfo** %retval, align 8, !dbg !5965
  br label %return, !dbg !5965

if.end23:                                         ; preds = %if.then15
  br label %if.end24, !dbg !5966

if.end24:                                         ; preds = %if.end23, %for.end
  %37 = load %struct.KernelInfo*, %struct.KernelInfo** %new_kernel, align 8, !dbg !5967
  store %struct.KernelInfo* %37, %struct.KernelInfo** %retval, align 8, !dbg !5968
  br label %return, !dbg !5968

return:                                           ; preds = %if.end24, %if.then21, %if.then4, %if.then
  %38 = load %struct.KernelInfo*, %struct.KernelInfo** %retval, align 8, !dbg !5969
  ret %struct.KernelInfo* %38, !dbg !5969
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

declare dso_local i8* @RelinquishAlignedMemory(i8*) #2

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MorphologyApply(%struct._Image* %image, i32 %channel, i32 %method, i64 %iterations, %struct.KernelInfo* %kernel, i32 %compose, double %bias, %struct._ExceptionInfo* %exception) #0 !dbg !5970 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %iterations.addr = alloca i64, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %compose.addr = alloca i32, align 4
  %bias.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %curr_compose = alloca i32, align 4
  %curr_image = alloca %struct._Image*, align 8
  %work_image = alloca %struct._Image*, align 8
  %save_image = alloca %struct._Image*, align 8
  %rslt_image = alloca %struct._Image*, align 8
  %reflected_kernel = alloca %struct.KernelInfo*, align 8
  %norm_kernel = alloca %struct.KernelInfo*, align 8
  %rflt_kernel = alloca %struct.KernelInfo*, align 8
  %this_kernel = alloca %struct.KernelInfo*, align 8
  %primitive = alloca i32, align 4
  %rslt_compose = alloca i32, align 4
  %special = alloca i32, align 4
  %verbose = alloca i32, align 4
  %method_loop = alloca i64, align 8
  %method_limit = alloca i64, align 8
  %kernel_number = alloca i64, align 8
  %stage_loop = alloca i64, align 8
  %stage_limit = alloca i64, align 8
  %kernel_loop = alloca i64, align 8
  %kernel_limit = alloca i64, align 8
  %count = alloca i64, align 8
  %kernel_changed = alloca i64, align 8
  %method_changed = alloca i64, align 8
  %changed = alloca i64, align 8
  %v_info = alloca [4096 x i8], align 16
  %tmp = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !5985, metadata !DIExpression()), !dbg !5986
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !5991, metadata !DIExpression()), !dbg !5992
  store double %bias, double* %bias.addr, align 8
  call void @llvm.dbg.declare(metadata double* %bias.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5995, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.declare(metadata i32* %curr_compose, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.declare(metadata %struct._Image** %curr_image, metadata !5999, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.declare(metadata %struct._Image** %work_image, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.declare(metadata %struct._Image** %save_image, metadata !6003, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata %struct._Image** %rslt_image, metadata !6005, metadata !DIExpression()), !dbg !6006
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %reflected_kernel, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %norm_kernel, metadata !6009, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %rflt_kernel, metadata !6011, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %this_kernel, metadata !6013, metadata !DIExpression()), !dbg !6014
  call void @llvm.dbg.declare(metadata i32* %primitive, metadata !6015, metadata !DIExpression()), !dbg !6016
  call void @llvm.dbg.declare(metadata i32* %rslt_compose, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.declare(metadata i32* %special, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.declare(metadata i32* %verbose, metadata !6021, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.declare(metadata i64* %method_loop, metadata !6023, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.declare(metadata i64* %method_limit, metadata !6025, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.declare(metadata i64* %kernel_number, metadata !6027, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.declare(metadata i64* %stage_loop, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.declare(metadata i64* %stage_limit, metadata !6031, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.declare(metadata i64* %kernel_loop, metadata !6033, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata i64* %kernel_limit, metadata !6035, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.declare(metadata i64* %count, metadata !6037, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.declare(metadata i64* %kernel_changed, metadata !6039, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.declare(metadata i64* %method_changed, metadata !6041, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !6043, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.declare(metadata [4096 x i8]* %v_info, metadata !6045, metadata !DIExpression()), !dbg !6046
  store i64 0, i64* %count, align 8, !dbg !6047
  %0 = load i64, i64* %iterations.addr, align 8, !dbg !6048
  %cmp = icmp eq i64 %0, 0, !dbg !6050
  br i1 %cmp, label %if.then, label %if.end, !dbg !6051

if.then:                                          ; preds = %entry
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6052
  br label %return, !dbg !6052

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %iterations.addr, align 8, !dbg !6053
  store i64 %1, i64* %kernel_limit, align 8, !dbg !6054
  %2 = load i64, i64* %iterations.addr, align 8, !dbg !6055
  %cmp1 = icmp slt i64 %2, 0, !dbg !6057
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6058

if.then2:                                         ; preds = %if.end
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6059
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 7, !dbg !6060
  %4 = load i64, i64* %columns, align 8, !dbg !6060
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6061
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 8, !dbg !6062
  %6 = load i64, i64* %rows, align 8, !dbg !6062
  %cmp3 = icmp ugt i64 %4, %6, !dbg !6063
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !6059

cond.true:                                        ; preds = %if.then2
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6064
  %columns4 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 7, !dbg !6065
  %8 = load i64, i64* %columns4, align 8, !dbg !6065
  br label %cond.end, !dbg !6059

cond.false:                                       ; preds = %if.then2
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6066
  %rows5 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !6067
  %10 = load i64, i64* %rows5, align 8, !dbg !6067
  br label %cond.end, !dbg !6059

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ %10, %cond.false ], !dbg !6059
  store i64 %cond, i64* %kernel_limit, align 8, !dbg !6068
  br label %if.end6, !dbg !6069

if.end6:                                          ; preds = %cond.end, %if.end
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6070
  %call = call i8* @GetImageArtifact(%struct._Image* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0)), !dbg !6071
  %call7 = call i32 @IsMagickTrue(i8* %call), !dbg !6072
  store i32 %call7, i32* %verbose, align 4, !dbg !6073
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6074
  store %struct._Image* %12, %struct._Image** %curr_image, align 8, !dbg !6075
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6076
  %compose8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 36, !dbg !6077
  %14 = load i32, i32* %compose8, align 8, !dbg !6077
  store i32 %14, i32* %curr_compose, align 4, !dbg !6078
  %15 = load i32, i32* %curr_compose, align 4, !dbg !6079
  store %struct._Image* null, %struct._Image** %rslt_image, align 8, !dbg !6080
  store %struct._Image* null, %struct._Image** %save_image, align 8, !dbg !6081
  store %struct._Image* null, %struct._Image** %work_image, align 8, !dbg !6082
  store %struct.KernelInfo* null, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6083
  store i64 1, i64* %method_limit, align 8, !dbg !6084
  store i64 1, i64* %stage_limit, align 8, !dbg !6085
  store i32 0, i32* %special, align 4, !dbg !6086
  %16 = load i32, i32* %compose.addr, align 4, !dbg !6087
  store i32 %16, i32* %rslt_compose, align 4, !dbg !6088
  %17 = load i32, i32* %method.addr, align 4, !dbg !6089
  switch i32 %17, label %sw.default [
    i32 12, label %sw.bb
    i32 8, label %sw.bb9
    i32 10, label %sw.bb9
    i32 16, label %sw.bb9
    i32 9, label %sw.bb9
    i32 11, label %sw.bb9
    i32 17, label %sw.bb9
    i32 15, label %sw.bb9
    i32 18, label %sw.bb10
    i32 19, label %sw.bb11
    i32 20, label %sw.bb11
    i32 7, label %sw.bb12
    i32 21, label %sw.bb12
  ], !dbg !6090

sw.bb:                                            ; preds = %if.end6
  store i64 4, i64* %stage_limit, align 8, !dbg !6091
  br label %sw.epilog, !dbg !6093

sw.bb9:                                           ; preds = %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6
  store i64 2, i64* %stage_limit, align 8, !dbg !6094
  br label %sw.epilog, !dbg !6095

sw.bb10:                                          ; preds = %if.end6
  store i32 33, i32* %rslt_compose, align 4, !dbg !6096
  br label %sw.bb11, !dbg !6097

sw.bb11:                                          ; preds = %if.end6, %if.end6, %sw.bb10
  %18 = load i64, i64* %kernel_limit, align 8, !dbg !6098
  store i64 %18, i64* %method_limit, align 8, !dbg !6099
  store i64 1, i64* %kernel_limit, align 8, !dbg !6100
  br label %sw.epilog, !dbg !6101

sw.bb12:                                          ; preds = %if.end6, %if.end6
  store i32 1, i32* %special, align 4, !dbg !6102
  br label %sw.epilog, !dbg !6103

sw.default:                                       ; preds = %if.end6
  br label %sw.epilog, !dbg !6104

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb9, %sw.bb
  %19 = load i32, i32* %special, align 4, !dbg !6105
  %cmp13 = icmp ne i32 %19, 0, !dbg !6107
  br i1 %cmp13, label %if.then14, label %if.end42, !dbg !6108

if.then14:                                        ; preds = %sw.epilog
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6109
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6111
  %call15 = call %struct._Image* @CloneImage(%struct._Image* %20, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %21), !dbg !6112
  store %struct._Image* %call15, %struct._Image** %rslt_image, align 8, !dbg !6113
  %22 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6114
  %cmp16 = icmp eq %struct._Image* %22, null, !dbg !6116
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6117

if.then17:                                        ; preds = %if.then14
  br label %error_cleanup, !dbg !6118

if.end18:                                         ; preds = %if.then14
  %23 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6119
  %call19 = call i32 @SetImageStorageClass(%struct._Image* %23, i32 1), !dbg !6121
  %cmp20 = icmp eq i32 %call19, 0, !dbg !6122
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !6123

if.then21:                                        ; preds = %if.end18
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6124
  %25 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6126
  %exception22 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 58, !dbg !6127
  call void @InheritException(%struct._ExceptionInfo* %24, %struct._ExceptionInfo* %exception22), !dbg !6128
  br label %error_cleanup, !dbg !6129

if.end23:                                         ; preds = %if.end18
  %26 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6130
  %27 = load i32, i32* %method.addr, align 4, !dbg !6131
  %28 = load i32, i32* %channel.addr, align 4, !dbg !6132
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6133
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6134
  %call24 = call i64 @MorphologyPrimitiveDirect(%struct._Image* %26, i32 %27, i32 %28, %struct.KernelInfo* %29, %struct._ExceptionInfo* %30), !dbg !6135
  store i64 %call24, i64* %changed, align 8, !dbg !6136
  %31 = load i32, i32* %verbose, align 4, !dbg !6137
  %cmp25 = icmp ne i32 %31, 0, !dbg !6139
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !6140

if.then26:                                        ; preds = %if.end23
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6141
  %33 = load i32, i32* %method.addr, align 4, !dbg !6142
  %conv = zext i32 %33 to i64, !dbg !6142
  %call27 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv), !dbg !6143
  %34 = load i64, i64* %changed, align 8, !dbg !6144
  %conv28 = sitofp i64 %34 to double, !dbg !6145
  %call29 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75, i64 0, i64 0), i8* %call27, double 1.000000e+00, double 0.000000e+00, double 1.000000e+00, double %conv28), !dbg !6146
  br label %if.end30, !dbg !6147

if.end30:                                         ; preds = %if.then26, %if.end23
  %35 = load i64, i64* %changed, align 8, !dbg !6148
  %cmp31 = icmp slt i64 %35, 0, !dbg !6150
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !6151

if.then33:                                        ; preds = %if.end30
  br label %error_cleanup, !dbg !6152

if.end34:                                         ; preds = %if.end30
  %36 = load i32, i32* %method.addr, align 4, !dbg !6153
  %cmp35 = icmp eq i32 %36, 21, !dbg !6155
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !6156

if.then37:                                        ; preds = %if.end34
  %37 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6157
  %call38 = call i32 @SetImageAlphaChannel(%struct._Image* %37, i32 4), !dbg !6159
  %38 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6160
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6161
  %call39 = call i32 @CompositeImageChannel(%struct._Image* %38, i32 134217719, i32 17, %struct._Image* %39, i64 0, i64 0), !dbg !6162
  %40 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6163
  %call40 = call i32 @SetImageAlphaChannel(%struct._Image* %40, i32 4), !dbg !6164
  br label %if.end41, !dbg !6165

if.end41:                                         ; preds = %if.then37, %if.end34
  br label %exit_cleanup, !dbg !6166

if.end42:                                         ; preds = %sw.epilog
  %41 = load i32, i32* %compose.addr, align 4, !dbg !6167
  %cmp43 = icmp ne i32 %41, 0, !dbg !6169
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !6170

if.then45:                                        ; preds = %if.end42
  %42 = load i32, i32* %compose.addr, align 4, !dbg !6171
  store i32 %42, i32* %rslt_compose, align 4, !dbg !6172
  br label %if.end46, !dbg !6173

if.end46:                                         ; preds = %if.then45, %if.end42
  %43 = load i32, i32* %rslt_compose, align 4, !dbg !6174
  %cmp47 = icmp eq i32 %43, 0, !dbg !6176
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !6177

if.then49:                                        ; preds = %if.end46
  store i32 1, i32* %rslt_compose, align 4, !dbg !6178
  br label %if.end50, !dbg !6179

if.end50:                                         ; preds = %if.then49, %if.end46
  %44 = load i32, i32* %method.addr, align 4, !dbg !6180
  switch i32 %44, label %sw.default57 [
    i32 2, label %sw.bb51
    i32 9, label %sw.bb51
    i32 11, label %sw.bb51
    i32 17, label %sw.bb51
    i32 12, label %sw.bb51
  ], !dbg !6181

sw.bb51:                                          ; preds = %if.end50, %if.end50, %if.end50, %if.end50, %if.end50
  %45 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6182
  %call52 = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %45), !dbg !6184
  store %struct.KernelInfo* %call52, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6185
  %46 = load %struct.KernelInfo*, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6186
  %cmp53 = icmp eq %struct.KernelInfo* %46, null, !dbg !6188
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !6189

if.then55:                                        ; preds = %sw.bb51
  br label %error_cleanup, !dbg !6190

if.end56:                                         ; preds = %sw.bb51
  %47 = load %struct.KernelInfo*, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6191
  call void @RotateKernelInfo(%struct.KernelInfo* %47, double 1.800000e+02), !dbg !6192
  br label %sw.epilog58, !dbg !6193

sw.default57:                                     ; preds = %if.end50
  br label %sw.epilog58, !dbg !6194

sw.epilog58:                                      ; preds = %sw.default57, %if.end56
  store i64 0, i64* %method_loop, align 8, !dbg !6195
  store i64 1, i64* %method_changed, align 8, !dbg !6196
  br label %while.cond, !dbg !6197

while.cond:                                       ; preds = %while.end280, %sw.epilog58
  %48 = load i64, i64* %method_loop, align 8, !dbg !6198
  %49 = load i64, i64* %method_limit, align 8, !dbg !6199
  %cmp59 = icmp ult i64 %48, %49, !dbg !6200
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !6201

land.rhs:                                         ; preds = %while.cond
  %50 = load i64, i64* %method_changed, align 8, !dbg !6202
  %cmp61 = icmp ugt i64 %50, 0, !dbg !6203
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %51 = phi i1 [ false, %while.cond ], [ %cmp61, %land.rhs ], !dbg !6204
  br i1 %51, label %while.body, label %while.end281, !dbg !6197

while.body:                                       ; preds = %land.end
  %52 = load i64, i64* %method_loop, align 8, !dbg !6205
  %inc = add i64 %52, 1, !dbg !6205
  store i64 %inc, i64* %method_loop, align 8, !dbg !6205
  store i64 0, i64* %method_changed, align 8, !dbg !6207
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6208
  store %struct.KernelInfo* %53, %struct.KernelInfo** %norm_kernel, align 8, !dbg !6209
  %54 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6210
  store %struct.KernelInfo* %54, %struct.KernelInfo** %this_kernel, align 8, !dbg !6211
  %55 = load %struct.KernelInfo*, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6212
  store %struct.KernelInfo* %55, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6213
  store i64 0, i64* %kernel_number, align 8, !dbg !6214
  br label %while.cond63, !dbg !6215

while.cond63:                                     ; preds = %if.end278, %while.body
  %56 = load %struct.KernelInfo*, %struct.KernelInfo** %norm_kernel, align 8, !dbg !6216
  %cmp64 = icmp ne %struct.KernelInfo* %56, null, !dbg !6217
  br i1 %cmp64, label %while.body66, label %while.end280, !dbg !6215

while.body66:                                     ; preds = %while.cond63
  store i64 0, i64* %stage_loop, align 8, !dbg !6218
  br label %while.cond67, !dbg !6220

while.cond67:                                     ; preds = %if.end202, %while.body66
  %57 = load i64, i64* %stage_loop, align 8, !dbg !6221
  %58 = load i64, i64* %stage_limit, align 8, !dbg !6222
  %cmp68 = icmp ult i64 %57, %58, !dbg !6223
  br i1 %cmp68, label %while.body70, label %while.end203, !dbg !6220

while.body70:                                     ; preds = %while.cond67
  %59 = load i64, i64* %stage_loop, align 8, !dbg !6224
  %inc71 = add i64 %59, 1, !dbg !6224
  store i64 %inc71, i64* %stage_loop, align 8, !dbg !6224
  %60 = load %struct.KernelInfo*, %struct.KernelInfo** %norm_kernel, align 8, !dbg !6226
  store %struct.KernelInfo* %60, %struct.KernelInfo** %this_kernel, align 8, !dbg !6227
  %61 = load i32, i32* %method.addr, align 4, !dbg !6228
  store i32 %61, i32* %primitive, align 4, !dbg !6229
  %62 = load i32, i32* %method.addr, align 4, !dbg !6230
  switch i32 %62, label %sw.default106 [
    i32 3, label %sw.bb72
    i32 13, label %sw.bb72
    i32 4, label %sw.bb73
    i32 14, label %sw.bb73
    i32 8, label %sw.bb74
    i32 16, label %sw.bb74
    i32 10, label %sw.bb79
    i32 9, label %sw.bb84
    i32 17, label %sw.bb84
    i32 11, label %sw.bb89
    i32 12, label %sw.bb94
    i32 15, label %sw.bb100
    i32 2, label %sw.bb105
  ], !dbg !6231

sw.bb72:                                          ; preds = %while.body70, %while.body70
  store i32 3, i32* %primitive, align 4, !dbg !6232
  br label %sw.epilog107, !dbg !6234

sw.bb73:                                          ; preds = %while.body70, %while.body70
  store i32 4, i32* %primitive, align 4, !dbg !6235
  br label %sw.epilog107, !dbg !6236

sw.bb74:                                          ; preds = %while.body70, %while.body70
  store i32 3, i32* %primitive, align 4, !dbg !6237
  %63 = load i64, i64* %stage_loop, align 8, !dbg !6238
  %cmp75 = icmp eq i64 %63, 2, !dbg !6240
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !6241

if.then77:                                        ; preds = %sw.bb74
  store i32 4, i32* %primitive, align 4, !dbg !6242
  br label %if.end78, !dbg !6243

if.end78:                                         ; preds = %if.then77, %sw.bb74
  br label %sw.epilog107, !dbg !6244

sw.bb79:                                          ; preds = %while.body70
  store i32 5, i32* %primitive, align 4, !dbg !6245
  %64 = load i64, i64* %stage_loop, align 8, !dbg !6246
  %cmp80 = icmp eq i64 %64, 2, !dbg !6248
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !6249

if.then82:                                        ; preds = %sw.bb79
  store i32 6, i32* %primitive, align 4, !dbg !6250
  br label %if.end83, !dbg !6251

if.end83:                                         ; preds = %if.then82, %sw.bb79
  br label %sw.epilog107, !dbg !6252

sw.bb84:                                          ; preds = %while.body70, %while.body70
  %65 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6253
  store %struct.KernelInfo* %65, %struct.KernelInfo** %this_kernel, align 8, !dbg !6254
  store i32 4, i32* %primitive, align 4, !dbg !6255
  %66 = load i64, i64* %stage_loop, align 8, !dbg !6256
  %cmp85 = icmp eq i64 %66, 2, !dbg !6258
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !6259

if.then87:                                        ; preds = %sw.bb84
  store i32 3, i32* %primitive, align 4, !dbg !6260
  br label %if.end88, !dbg !6261

if.end88:                                         ; preds = %if.then87, %sw.bb84
  br label %sw.epilog107, !dbg !6262

sw.bb89:                                          ; preds = %while.body70
  %67 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6263
  store %struct.KernelInfo* %67, %struct.KernelInfo** %this_kernel, align 8, !dbg !6264
  store i32 6, i32* %primitive, align 4, !dbg !6265
  %68 = load i64, i64* %stage_loop, align 8, !dbg !6266
  %cmp90 = icmp eq i64 %68, 2, !dbg !6268
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !6269

if.then92:                                        ; preds = %sw.bb89
  store i32 5, i32* %primitive, align 4, !dbg !6270
  br label %if.end93, !dbg !6271

if.end93:                                         ; preds = %if.then92, %sw.bb89
  br label %sw.epilog107, !dbg !6272

sw.bb94:                                          ; preds = %while.body70
  %69 = load i64, i64* %stage_loop, align 8, !dbg !6273
  switch i64 %69, label %sw.epilog99 [
    i64 1, label %sw.bb95
    i64 2, label %sw.bb96
    i64 3, label %sw.bb97
    i64 4, label %sw.bb98
  ], !dbg !6274

sw.bb95:                                          ; preds = %sw.bb94
  store i32 3, i32* %primitive, align 4, !dbg !6275
  br label %sw.epilog99, !dbg !6277

sw.bb96:                                          ; preds = %sw.bb94
  store i32 4, i32* %primitive, align 4, !dbg !6278
  br label %sw.epilog99, !dbg !6279

sw.bb97:                                          ; preds = %sw.bb94
  %70 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6280
  store %struct.KernelInfo* %70, %struct.KernelInfo** %this_kernel, align 8, !dbg !6281
  store i32 4, i32* %primitive, align 4, !dbg !6282
  br label %sw.epilog99, !dbg !6283

sw.bb98:                                          ; preds = %sw.bb94
  %71 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6284
  store %struct.KernelInfo* %71, %struct.KernelInfo** %this_kernel, align 8, !dbg !6285
  store i32 3, i32* %primitive, align 4, !dbg !6286
  br label %sw.epilog99, !dbg !6287

sw.epilog99:                                      ; preds = %sw.bb94, %sw.bb98, %sw.bb97, %sw.bb96, %sw.bb95
  br label %sw.epilog107, !dbg !6288

sw.bb100:                                         ; preds = %while.body70
  store i32 4, i32* %primitive, align 4, !dbg !6289
  %72 = load i64, i64* %stage_loop, align 8, !dbg !6290
  %cmp101 = icmp eq i64 %72, 2, !dbg !6292
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !6293

if.then103:                                       ; preds = %sw.bb100
  %73 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6294
  store %struct._Image* %73, %struct._Image** %save_image, align 8, !dbg !6296
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6297
  store %struct._Image* %74, %struct._Image** %curr_image, align 8, !dbg !6298
  store i32 3, i32* %primitive, align 4, !dbg !6299
  br label %if.end104, !dbg !6300

if.end104:                                        ; preds = %if.then103, %sw.bb100
  br label %sw.epilog107, !dbg !6301

sw.bb105:                                         ; preds = %while.body70
  %75 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6302
  store %struct.KernelInfo* %75, %struct.KernelInfo** %this_kernel, align 8, !dbg !6303
  store i32 1, i32* %primitive, align 4, !dbg !6304
  br label %sw.epilog107, !dbg !6305

sw.default106:                                    ; preds = %while.body70
  br label %sw.epilog107, !dbg !6306

sw.epilog107:                                     ; preds = %sw.default106, %sw.bb105, %if.end104, %sw.epilog99, %if.end93, %if.end88, %if.end83, %if.end78, %sw.bb73, %sw.bb72
  %76 = load i32, i32* %verbose, align 4, !dbg !6307
  %cmp108 = icmp ne i32 %76, 0, !dbg !6309
  br i1 %cmp108, label %if.then110, label %if.end130, !dbg !6310

if.then110:                                       ; preds = %sw.epilog107
  %77 = load i64, i64* %stage_limit, align 8, !dbg !6311
  %cmp111 = icmp ugt i64 %77, 1, !dbg !6314
  br i1 %cmp111, label %if.then113, label %if.else, !dbg !6315

if.then113:                                       ; preds = %if.then110
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %v_info, i64 0, i64 0, !dbg !6316
  %78 = load i32, i32* %method.addr, align 4, !dbg !6317
  %conv114 = zext i32 %78 to i64, !dbg !6317
  %call115 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv114), !dbg !6318
  %79 = load i64, i64* %method_loop, align 8, !dbg !6319
  %conv116 = uitofp i64 %79 to double, !dbg !6320
  %80 = load i64, i64* %stage_loop, align 8, !dbg !6321
  %conv117 = uitofp i64 %80 to double, !dbg !6322
  %call118 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i64 0, i64 0), i8* %call115, double %conv116, double %conv117), !dbg !6323
  br label %if.end129, !dbg !6324

if.else:                                          ; preds = %if.then110
  %81 = load i32, i32* %primitive, align 4, !dbg !6325
  %82 = load i32, i32* %method.addr, align 4, !dbg !6327
  %cmp119 = icmp ne i32 %81, %82, !dbg !6328
  br i1 %cmp119, label %if.then121, label %if.else127, !dbg !6329

if.then121:                                       ; preds = %if.else
  %arraydecay122 = getelementptr inbounds [4096 x i8], [4096 x i8]* %v_info, i64 0, i64 0, !dbg !6330
  %83 = load i32, i32* %method.addr, align 4, !dbg !6331
  %conv123 = zext i32 %83 to i64, !dbg !6331
  %call124 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv123), !dbg !6332
  %84 = load i64, i64* %method_loop, align 8, !dbg !6333
  %conv125 = uitofp i64 %84 to double, !dbg !6334
  %call126 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay122, i64 4096, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8* %call124, double %conv125), !dbg !6335
  br label %if.end128, !dbg !6336

if.else127:                                       ; preds = %if.else
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %v_info, i64 0, i64 0, !dbg !6337
  store i8 0, i8* %arrayidx, align 16, !dbg !6338
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then121
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then113
  br label %if.end130, !dbg !6339

if.end130:                                        ; preds = %if.end129, %sw.epilog107
  store i64 0, i64* %kernel_loop, align 8, !dbg !6340
  store i64 0, i64* %kernel_changed, align 8, !dbg !6341
  store i64 1, i64* %changed, align 8, !dbg !6342
  br label %while.cond131, !dbg !6343

while.cond131:                                    ; preds = %if.end186, %if.end130
  %85 = load i64, i64* %kernel_loop, align 8, !dbg !6344
  %86 = load i64, i64* %kernel_limit, align 8, !dbg !6345
  %cmp132 = icmp ult i64 %85, %86, !dbg !6346
  br i1 %cmp132, label %land.rhs134, label %land.end137, !dbg !6347

land.rhs134:                                      ; preds = %while.cond131
  %87 = load i64, i64* %changed, align 8, !dbg !6348
  %cmp135 = icmp sgt i64 %87, 0, !dbg !6349
  br label %land.end137

land.end137:                                      ; preds = %land.rhs134, %while.cond131
  %88 = phi i1 [ false, %while.cond131 ], [ %cmp135, %land.rhs134 ], !dbg !6350
  br i1 %88, label %while.body138, label %while.end, !dbg !6343

while.body138:                                    ; preds = %land.end137
  %89 = load i64, i64* %kernel_loop, align 8, !dbg !6351
  %inc139 = add i64 %89, 1, !dbg !6351
  store i64 %inc139, i64* %kernel_loop, align 8, !dbg !6351
  %90 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6353
  %cmp140 = icmp eq %struct._Image* %90, null, !dbg !6355
  br i1 %cmp140, label %if.then142, label %if.end154, !dbg !6356

if.then142:                                       ; preds = %while.body138
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6357
  %92 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6359
  %call143 = call %struct._Image* @CloneImage(%struct._Image* %91, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %92), !dbg !6360
  store %struct._Image* %call143, %struct._Image** %work_image, align 8, !dbg !6361
  %93 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6362
  %cmp144 = icmp eq %struct._Image* %93, null, !dbg !6364
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !6365

if.then146:                                       ; preds = %if.then142
  br label %error_cleanup, !dbg !6366

if.end147:                                        ; preds = %if.then142
  %94 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6367
  %call148 = call i32 @SetImageStorageClass(%struct._Image* %94, i32 1), !dbg !6369
  %cmp149 = icmp eq i32 %call148, 0, !dbg !6370
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !6371

if.then151:                                       ; preds = %if.end147
  %95 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6372
  %96 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6374
  %exception152 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 58, !dbg !6375
  call void @InheritException(%struct._ExceptionInfo* %95, %struct._ExceptionInfo* %exception152), !dbg !6376
  br label %error_cleanup, !dbg !6377

if.end153:                                        ; preds = %if.end147
  br label %if.end154, !dbg !6378

if.end154:                                        ; preds = %if.end153, %while.body138
  %97 = load i64, i64* %count, align 8, !dbg !6379
  %inc155 = add i64 %97, 1, !dbg !6379
  store i64 %inc155, i64* %count, align 8, !dbg !6379
  %98 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6380
  %99 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6381
  %100 = load i32, i32* %primitive, align 4, !dbg !6382
  %101 = load i32, i32* %channel.addr, align 4, !dbg !6383
  %102 = load %struct.KernelInfo*, %struct.KernelInfo** %this_kernel, align 8, !dbg !6384
  %103 = load double, double* %bias.addr, align 8, !dbg !6385
  %104 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6386
  %call156 = call i64 @MorphologyPrimitive(%struct._Image* %98, %struct._Image* %99, i32 %100, i32 %101, %struct.KernelInfo* %102, double %103, %struct._ExceptionInfo* %104), !dbg !6387
  store i64 %call156, i64* %changed, align 8, !dbg !6388
  %105 = load i32, i32* %verbose, align 4, !dbg !6389
  %cmp157 = icmp ne i32 %105, 0, !dbg !6391
  br i1 %cmp157, label %if.then159, label %if.end176, !dbg !6392

if.then159:                                       ; preds = %if.end154
  %106 = load i64, i64* %kernel_loop, align 8, !dbg !6393
  %cmp160 = icmp ugt i64 %106, 1, !dbg !6396
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !6397

if.then162:                                       ; preds = %if.then159
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6398
  %call163 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !6399
  br label %if.end164, !dbg !6400

if.end164:                                        ; preds = %if.then162, %if.then159
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6401
  %arraydecay165 = getelementptr inbounds [4096 x i8], [4096 x i8]* %v_info, i64 0, i64 0, !dbg !6402
  %109 = load i32, i32* %primitive, align 4, !dbg !6403
  %conv166 = zext i32 %109 to i64, !dbg !6403
  %call167 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv166), !dbg !6404
  %110 = load %struct.KernelInfo*, %struct.KernelInfo** %this_kernel, align 8, !dbg !6405
  %111 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6406
  %cmp168 = icmp eq %struct.KernelInfo* %110, %111, !dbg !6407
  %112 = zext i1 %cmp168 to i64, !dbg !6408
  %cond170 = select i1 %cmp168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.81, i64 0, i64 0), !dbg !6408
  %113 = load i64, i64* %method_loop, align 8, !dbg !6409
  %114 = load i64, i64* %kernel_loop, align 8, !dbg !6410
  %add = add i64 %113, %114, !dbg !6411
  %sub = sub i64 %add, 1, !dbg !6412
  %conv171 = uitofp i64 %sub to double, !dbg !6413
  %115 = load i64, i64* %kernel_number, align 8, !dbg !6414
  %conv172 = uitofp i64 %115 to double, !dbg !6415
  %116 = load i64, i64* %count, align 8, !dbg !6416
  %conv173 = uitofp i64 %116 to double, !dbg !6417
  %117 = load i64, i64* %changed, align 8, !dbg !6418
  %conv174 = sitofp i64 %117 to double, !dbg !6419
  %call175 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %108, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay165, i8* %call167, i8* %cond170, double %conv171, double %conv172, double %conv173, double %conv174), !dbg !6420
  br label %if.end176, !dbg !6421

if.end176:                                        ; preds = %if.end164, %if.end154
  %118 = load i64, i64* %changed, align 8, !dbg !6422
  %cmp177 = icmp slt i64 %118, 0, !dbg !6424
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !6425

if.then179:                                       ; preds = %if.end176
  br label %error_cleanup, !dbg !6426

if.end180:                                        ; preds = %if.end176
  %119 = load i64, i64* %changed, align 8, !dbg !6427
  %120 = load i64, i64* %kernel_changed, align 8, !dbg !6428
  %add181 = add i64 %120, %119, !dbg !6428
  store i64 %add181, i64* %kernel_changed, align 8, !dbg !6428
  %121 = load i64, i64* %changed, align 8, !dbg !6429
  %122 = load i64, i64* %method_changed, align 8, !dbg !6430
  %add182 = add i64 %122, %121, !dbg !6430
  store i64 %add182, i64* %method_changed, align 8, !dbg !6430
  call void @llvm.dbg.declare(metadata %struct._Image** %tmp, metadata !6431, metadata !DIExpression()), !dbg !6433
  %123 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6434
  store %struct._Image* %123, %struct._Image** %tmp, align 8, !dbg !6433
  %124 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6435
  store %struct._Image* %124, %struct._Image** %work_image, align 8, !dbg !6436
  %125 = load %struct._Image*, %struct._Image** %tmp, align 8, !dbg !6437
  store %struct._Image* %125, %struct._Image** %curr_image, align 8, !dbg !6438
  %126 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6439
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6441
  %cmp183 = icmp eq %struct._Image* %126, %127, !dbg !6442
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !6443

if.then185:                                       ; preds = %if.end180
  store %struct._Image* null, %struct._Image** %work_image, align 8, !dbg !6444
  br label %if.end186, !dbg !6445

if.end186:                                        ; preds = %if.then185, %if.end180
  br label %while.cond131, !dbg !6343, !llvm.loop !6446

while.end:                                        ; preds = %land.end137
  %128 = load i32, i32* %verbose, align 4, !dbg !6448
  %cmp187 = icmp ne i32 %128, 0, !dbg !6450
  br i1 %cmp187, label %land.lhs.true, label %if.end194, !dbg !6451

land.lhs.true:                                    ; preds = %while.end
  %129 = load i64, i64* %kernel_changed, align 8, !dbg !6452
  %130 = load i64, i64* %changed, align 8, !dbg !6453
  %cmp189 = icmp ne i64 %129, %130, !dbg !6454
  br i1 %cmp189, label %if.then191, label %if.end194, !dbg !6455

if.then191:                                       ; preds = %land.lhs.true
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6456
  %132 = load i64, i64* %kernel_changed, align 8, !dbg !6457
  %conv192 = uitofp i64 %132 to double, !dbg !6458
  %call193 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %131, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i64 0, i64 0), double %conv192), !dbg !6459
  br label %if.end194, !dbg !6460

if.end194:                                        ; preds = %if.then191, %land.lhs.true, %while.end
  %133 = load i32, i32* %verbose, align 4, !dbg !6461
  %cmp195 = icmp ne i32 %133, 0, !dbg !6463
  br i1 %cmp195, label %land.lhs.true197, label %if.end202, !dbg !6464

land.lhs.true197:                                 ; preds = %if.end194
  %134 = load i64, i64* %stage_loop, align 8, !dbg !6465
  %135 = load i64, i64* %stage_limit, align 8, !dbg !6466
  %cmp198 = icmp ult i64 %134, %135, !dbg !6467
  br i1 %cmp198, label %if.then200, label %if.end202, !dbg !6468

if.then200:                                       ; preds = %land.lhs.true197
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6469
  %call201 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !6470
  br label %if.end202, !dbg !6471

if.end202:                                        ; preds = %if.then200, %land.lhs.true197, %if.end194
  br label %while.cond67, !dbg !6220, !llvm.loop !6472

while.end203:                                     ; preds = %while.cond67
  %137 = load i32, i32* %method.addr, align 4, !dbg !6474
  switch i32 %137, label %sw.default224 [
    i32 14, label %sw.bb204
    i32 13, label %sw.bb204
    i32 16, label %sw.bb204
    i32 17, label %sw.bb204
    i32 15, label %sw.bb213
  ], !dbg !6475

sw.bb204:                                         ; preds = %while.end203, %while.end203, %while.end203, %while.end203
  %138 = load i32, i32* %verbose, align 4, !dbg !6476
  %cmp205 = icmp ne i32 %138, 0, !dbg !6479
  br i1 %cmp205, label %if.then207, label %if.end211, !dbg !6480

if.then207:                                       ; preds = %sw.bb204
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6481
  %140 = load i32, i32* %method.addr, align 4, !dbg !6482
  %conv208 = zext i32 %140 to i64, !dbg !6482
  %call209 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv208), !dbg !6483
  %call210 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %139, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.83, i64 0, i64 0), i8* %call209), !dbg !6484
  br label %if.end211, !dbg !6485

if.end211:                                        ; preds = %if.then207, %sw.bb204
  %141 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6486
  %142 = load i32, i32* %channel.addr, align 4, !dbg !6487
  %and = and i32 %142, -257, !dbg !6488
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6489
  %call212 = call i32 @CompositeImageChannel(%struct._Image* %141, i32 %and, i32 26, %struct._Image* %143, i64 0, i64 0), !dbg !6490
  br label %sw.epilog225, !dbg !6491

sw.bb213:                                         ; preds = %while.end203
  %144 = load i32, i32* %verbose, align 4, !dbg !6492
  %cmp214 = icmp ne i32 %144, 0, !dbg !6494
  br i1 %cmp214, label %if.then216, label %if.end220, !dbg !6495

if.then216:                                       ; preds = %sw.bb213
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6496
  %146 = load i32, i32* %method.addr, align 4, !dbg !6497
  %conv217 = zext i32 %146 to i64, !dbg !6497
  %call218 = call i8* @CommandOptionToMnemonic(i32 48, i64 %conv217), !dbg !6498
  %call219 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %145, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i64 0, i64 0), i8* %call218), !dbg !6499
  br label %if.end220, !dbg !6500

if.end220:                                        ; preds = %if.then216, %sw.bb213
  %147 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6501
  %148 = load i32, i32* %channel.addr, align 4, !dbg !6502
  %and221 = and i32 %148, -257, !dbg !6503
  %149 = load %struct._Image*, %struct._Image** %save_image, align 8, !dbg !6504
  %call222 = call i32 @CompositeImageChannel(%struct._Image* %147, i32 %and221, i32 26, %struct._Image* %149, i64 0, i64 0), !dbg !6505
  %150 = load %struct._Image*, %struct._Image** %save_image, align 8, !dbg !6506
  %call223 = call %struct._Image* @DestroyImage(%struct._Image* %150), !dbg !6507
  store %struct._Image* %call223, %struct._Image** %save_image, align 8, !dbg !6508
  br label %sw.epilog225, !dbg !6509

sw.default224:                                    ; preds = %while.end203
  br label %sw.epilog225, !dbg !6510

sw.epilog225:                                     ; preds = %sw.default224, %if.end220, %if.end211
  %151 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6511
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %151, i32 0, i32 11, !dbg !6513
  %152 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !6513
  %cmp226 = icmp eq %struct.KernelInfo* %152, null, !dbg !6514
  br i1 %cmp226, label %if.then228, label %if.else229, !dbg !6515

if.then228:                                       ; preds = %sw.epilog225
  %153 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6516
  store %struct._Image* %153, %struct._Image** %rslt_image, align 8, !dbg !6517
  br label %if.end267, !dbg !6518

if.else229:                                       ; preds = %sw.epilog225
  %154 = load i32, i32* %rslt_compose, align 4, !dbg !6519
  %cmp230 = icmp eq i32 %154, 1, !dbg !6521
  br i1 %cmp230, label %if.then232, label %if.else245, !dbg !6522

if.then232:                                       ; preds = %if.else229
  %155 = load i32, i32* %verbose, align 4, !dbg !6523
  %cmp233 = icmp ne i32 %155, 0, !dbg !6526
  br i1 %cmp233, label %if.then235, label %if.end244, !dbg !6527

if.then235:                                       ; preds = %if.then232
  %156 = load %struct.KernelInfo*, %struct.KernelInfo** %this_kernel, align 8, !dbg !6528
  %next236 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %156, i32 0, i32 11, !dbg !6531
  %157 = load %struct.KernelInfo*, %struct.KernelInfo** %next236, align 8, !dbg !6531
  %cmp237 = icmp ne %struct.KernelInfo* %157, null, !dbg !6532
  br i1 %cmp237, label %if.then239, label %if.else241, !dbg !6533

if.then239:                                       ; preds = %if.then235
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6534
  %call240 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85, i64 0, i64 0)), !dbg !6535
  br label %if.end243, !dbg !6536

if.else241:                                       ; preds = %if.then235
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6537
  %call242 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %159, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0)), !dbg !6538
  br label %if.end243

if.end243:                                        ; preds = %if.else241, %if.then239
  br label %if.end244, !dbg !6539

if.end244:                                        ; preds = %if.end243, %if.then232
  %160 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6540
  store %struct._Image* %160, %struct._Image** %rslt_image, align 8, !dbg !6541
  br label %if.end266, !dbg !6542

if.else245:                                       ; preds = %if.else229
  %161 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6543
  %cmp246 = icmp eq %struct._Image* %161, null, !dbg !6545
  br i1 %cmp246, label %if.then248, label %if.else254, !dbg !6546

if.then248:                                       ; preds = %if.else245
  %162 = load i32, i32* %verbose, align 4, !dbg !6547
  %cmp249 = icmp ne i32 %162, 0, !dbg !6550
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !6551

if.then251:                                       ; preds = %if.then248
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6552
  %call252 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %163, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0)), !dbg !6553
  br label %if.end253, !dbg !6554

if.end253:                                        ; preds = %if.then251, %if.then248
  %164 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6555
  store %struct._Image* %164, %struct._Image** %rslt_image, align 8, !dbg !6556
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6557
  store %struct._Image* %165, %struct._Image** %curr_image, align 8, !dbg !6558
  br label %if.end265, !dbg !6559

if.else254:                                       ; preds = %if.else245
  %166 = load i32, i32* %verbose, align 4, !dbg !6560
  %cmp255 = icmp ne i32 %166, 0, !dbg !6563
  br i1 %cmp255, label %if.then257, label %if.end261, !dbg !6564

if.then257:                                       ; preds = %if.else254
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6565
  %168 = load i32, i32* %rslt_compose, align 4, !dbg !6566
  %conv258 = zext i32 %168 to i64, !dbg !6566
  %call259 = call i8* @CommandOptionToMnemonic(i32 11, i64 %conv258), !dbg !6567
  %call260 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %167, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i8* %call259), !dbg !6568
  br label %if.end261, !dbg !6569

if.end261:                                        ; preds = %if.then257, %if.else254
  %169 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6570
  %170 = load i32, i32* %channel.addr, align 4, !dbg !6571
  %and262 = and i32 %170, -257, !dbg !6572
  %171 = load i32, i32* %rslt_compose, align 4, !dbg !6573
  %172 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6574
  %call263 = call i32 @CompositeImageChannel(%struct._Image* %169, i32 %and262, i32 %171, %struct._Image* %172, i64 0, i64 0), !dbg !6575
  %173 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6576
  %call264 = call %struct._Image* @DestroyImage(%struct._Image* %173), !dbg !6577
  store %struct._Image* %call264, %struct._Image** %curr_image, align 8, !dbg !6578
  %174 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6579
  store %struct._Image* %174, %struct._Image** %curr_image, align 8, !dbg !6580
  br label %if.end265

if.end265:                                        ; preds = %if.end261, %if.end253
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end244
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then228
  %175 = load i32, i32* %verbose, align 4, !dbg !6581
  %cmp268 = icmp ne i32 %175, 0, !dbg !6583
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !6584

if.then270:                                       ; preds = %if.end267
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6585
  %call271 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !6586
  br label %if.end272, !dbg !6587

if.end272:                                        ; preds = %if.then270, %if.end267
  %177 = load %struct.KernelInfo*, %struct.KernelInfo** %norm_kernel, align 8, !dbg !6588
  %next273 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %177, i32 0, i32 11, !dbg !6589
  %178 = load %struct.KernelInfo*, %struct.KernelInfo** %next273, align 8, !dbg !6589
  store %struct.KernelInfo* %178, %struct.KernelInfo** %norm_kernel, align 8, !dbg !6590
  %179 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6591
  %cmp274 = icmp ne %struct.KernelInfo* %179, null, !dbg !6593
  br i1 %cmp274, label %if.then276, label %if.end278, !dbg !6594

if.then276:                                       ; preds = %if.end272
  %180 = load %struct.KernelInfo*, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6595
  %next277 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %180, i32 0, i32 11, !dbg !6596
  %181 = load %struct.KernelInfo*, %struct.KernelInfo** %next277, align 8, !dbg !6596
  store %struct.KernelInfo* %181, %struct.KernelInfo** %rflt_kernel, align 8, !dbg !6597
  br label %if.end278, !dbg !6598

if.end278:                                        ; preds = %if.then276, %if.end272
  %182 = load i64, i64* %kernel_number, align 8, !dbg !6599
  %inc279 = add i64 %182, 1, !dbg !6599
  store i64 %inc279, i64* %kernel_number, align 8, !dbg !6599
  br label %while.cond63, !dbg !6215, !llvm.loop !6600

while.end280:                                     ; preds = %while.cond63
  br label %while.cond, !dbg !6197, !llvm.loop !6602

while.end281:                                     ; preds = %land.end
  br label %exit_cleanup, !dbg !6604

error_cleanup:                                    ; preds = %if.then179, %if.then151, %if.then146, %if.then55, %if.then33, %if.then21, %if.then17
  call void @llvm.dbg.label(metadata !6605), !dbg !6606
  %183 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6607
  %184 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6609
  %cmp282 = icmp eq %struct._Image* %183, %184, !dbg !6610
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !6611

if.then284:                                       ; preds = %error_cleanup
  store %struct._Image* null, %struct._Image** %curr_image, align 8, !dbg !6612
  br label %if.end285, !dbg !6613

if.end285:                                        ; preds = %if.then284, %error_cleanup
  %185 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6614
  %cmp286 = icmp ne %struct._Image* %185, null, !dbg !6616
  br i1 %cmp286, label %if.then288, label %if.end290, !dbg !6617

if.then288:                                       ; preds = %if.end285
  %186 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6618
  %call289 = call %struct._Image* @DestroyImage(%struct._Image* %186), !dbg !6619
  store %struct._Image* %call289, %struct._Image** %rslt_image, align 8, !dbg !6620
  br label %if.end290, !dbg !6621

if.end290:                                        ; preds = %if.then288, %if.end285
  br label %exit_cleanup, !dbg !6622

exit_cleanup:                                     ; preds = %if.end290, %while.end281, %if.end41
  call void @llvm.dbg.label(metadata !6623), !dbg !6624
  %187 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6625
  %188 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6627
  %cmp291 = icmp eq %struct._Image* %187, %188, !dbg !6628
  br i1 %cmp291, label %if.then295, label %lor.lhs.false, !dbg !6629

lor.lhs.false:                                    ; preds = %exit_cleanup
  %189 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6630
  %190 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6631
  %cmp293 = icmp eq %struct._Image* %189, %190, !dbg !6632
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !6633

if.then295:                                       ; preds = %lor.lhs.false, %exit_cleanup
  store %struct._Image* null, %struct._Image** %curr_image, align 8, !dbg !6634
  br label %if.end296, !dbg !6635

if.end296:                                        ; preds = %if.then295, %lor.lhs.false
  %191 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6636
  %cmp297 = icmp ne %struct._Image* %191, null, !dbg !6638
  br i1 %cmp297, label %if.then299, label %if.end301, !dbg !6639

if.then299:                                       ; preds = %if.end296
  %192 = load %struct._Image*, %struct._Image** %curr_image, align 8, !dbg !6640
  %call300 = call %struct._Image* @DestroyImage(%struct._Image* %192), !dbg !6641
  store %struct._Image* %call300, %struct._Image** %curr_image, align 8, !dbg !6642
  br label %if.end301, !dbg !6643

if.end301:                                        ; preds = %if.then299, %if.end296
  %193 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6644
  %cmp302 = icmp ne %struct._Image* %193, null, !dbg !6646
  br i1 %cmp302, label %if.then304, label %if.end306, !dbg !6647

if.then304:                                       ; preds = %if.end301
  %194 = load %struct._Image*, %struct._Image** %work_image, align 8, !dbg !6648
  %call305 = call %struct._Image* @DestroyImage(%struct._Image* %194), !dbg !6649
  store %struct._Image* %call305, %struct._Image** %work_image, align 8, !dbg !6650
  br label %if.end306, !dbg !6651

if.end306:                                        ; preds = %if.then304, %if.end301
  %195 = load %struct._Image*, %struct._Image** %save_image, align 8, !dbg !6652
  %cmp307 = icmp ne %struct._Image* %195, null, !dbg !6654
  br i1 %cmp307, label %if.then309, label %if.end311, !dbg !6655

if.then309:                                       ; preds = %if.end306
  %196 = load %struct._Image*, %struct._Image** %save_image, align 8, !dbg !6656
  %call310 = call %struct._Image* @DestroyImage(%struct._Image* %196), !dbg !6657
  store %struct._Image* %call310, %struct._Image** %save_image, align 8, !dbg !6658
  br label %if.end311, !dbg !6659

if.end311:                                        ; preds = %if.then309, %if.end306
  %197 = load %struct.KernelInfo*, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6660
  %cmp312 = icmp ne %struct.KernelInfo* %197, null, !dbg !6662
  br i1 %cmp312, label %if.then314, label %if.end316, !dbg !6663

if.then314:                                       ; preds = %if.end311
  %198 = load %struct.KernelInfo*, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6664
  %call315 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %198), !dbg !6665
  store %struct.KernelInfo* %call315, %struct.KernelInfo** %reflected_kernel, align 8, !dbg !6666
  br label %if.end316, !dbg !6667

if.end316:                                        ; preds = %if.then314, %if.end311
  %199 = load %struct._Image*, %struct._Image** %rslt_image, align 8, !dbg !6668
  store %struct._Image* %199, %struct._Image** %retval, align 8, !dbg !6669
  br label %return, !dbg !6669

return:                                           ; preds = %if.end316, %if.then
  %200 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !6670
  ret %struct._Image* %200, !dbg !6670
}

declare dso_local i32 @IsMagickTrue(i8*) #2

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #2

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @MorphologyPrimitiveDirect(%struct._Image* %image, i32 %method, i32 %channel, %struct.KernelInfo* %kernel, %struct._ExceptionInfo* %exception) #0 !dbg !6671 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %channel.addr = alloca i32, align 4
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %auth_view = alloca %struct._CacheView*, align 8
  %virt_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %offx = alloca i64, align 8
  %offy = alloca i64, align 8
  %changed = alloca i64, align 8
  %virt_width = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %p_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %q_indexes = alloca i16*, align 8
  %x8 = alloca i64, align 8
  %r = alloca i64, align 8
  %v = alloca i64, align 8
  %u = alloca i64, align 8
  %k = alloca double*, align 8
  %k_pixels = alloca %struct._PixelPacket*, align 8
  %k_indexes = alloca i16*, align 8
  %result = alloca %struct._MagickPixelPacket, align 8
  %p443 = alloca %struct._PixelPacket*, align 8
  %p_indexes444 = alloca i16*, align 8
  %q445 = alloca %struct._PixelPacket*, align 8
  %q_indexes446 = alloca i16*, align 8
  %x447 = alloca i64, align 8
  %r448 = alloca i64, align 8
  %v484 = alloca i64, align 8
  %u485 = alloca i64, align 8
  %k486 = alloca double*, align 8
  %k_pixels487 = alloca %struct._PixelPacket*, align 8
  %k_indexes488 = alloca i16*, align 8
  %result489 = alloca %struct._MagickPixelPacket, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !6680, metadata !DIExpression()), !dbg !6681
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.declare(metadata %struct._CacheView** %auth_view, metadata !6684, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.declare(metadata %struct._CacheView** %virt_view, metadata !6690, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !6694, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.declare(metadata i64* %offx, metadata !6698, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.declare(metadata i64* %offy, metadata !6700, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i64* %virt_width, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i32 1, i32* %status, align 4, !dbg !6706
  store i64 0, i64* %changed, align 8, !dbg !6707
  store i64 0, i64* %progress, align 8, !dbg !6708
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6709
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 3, !dbg !6710
  %1 = load i64, i64* %x, align 8, !dbg !6710
  store i64 %1, i64* %offx, align 8, !dbg !6711
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6712
  %y1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 4, !dbg !6713
  %3 = load i64, i64* %y1, align 8, !dbg !6713
  store i64 %3, i64* %offy, align 8, !dbg !6714
  %4 = load i32, i32* %method.addr, align 4, !dbg !6715
  switch i32 %4, label %sw.default [
    i32 7, label %sw.bb
    i32 21, label %sw.bb
  ], !dbg !6716

sw.bb:                                            ; preds = %entry, %entry
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6717
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %5, i32 0, i32 1, !dbg !6719
  %6 = load i64, i64* %width, align 8, !dbg !6719
  %7 = load i64, i64* %offx, align 8, !dbg !6720
  %sub = sub nsw i64 %6, %7, !dbg !6721
  %sub2 = sub nsw i64 %sub, 1, !dbg !6722
  store i64 %sub2, i64* %offx, align 8, !dbg !6723
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6724
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 2, !dbg !6725
  %9 = load i64, i64* %height, align 8, !dbg !6725
  %10 = load i64, i64* %offy, align 8, !dbg !6726
  %sub3 = sub nsw i64 %9, %10, !dbg !6727
  %sub4 = sub nsw i64 %sub3, 1, !dbg !6728
  store i64 %sub4, i64* %offy, align 8, !dbg !6729
  br label %sw.epilog, !dbg !6730

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !6731

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6732
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6733
  %call = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %11, %struct._ExceptionInfo* %12), !dbg !6734
  store %struct._CacheView* %call, %struct._CacheView** %virt_view, align 8, !dbg !6735
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6736
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6737
  %call5 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %13, %struct._ExceptionInfo* %14), !dbg !6738
  store %struct._CacheView* %call5, %struct._CacheView** %auth_view, align 8, !dbg !6739
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6740
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 7, !dbg !6741
  %16 = load i64, i64* %columns, align 8, !dbg !6741
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6742
  %width6 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 1, !dbg !6743
  %18 = load i64, i64* %width6, align 8, !dbg !6743
  %add = add i64 %16, %18, !dbg !6744
  %sub7 = sub i64 %add, 1, !dbg !6745
  store i64 %sub7, i64* %virt_width, align 8, !dbg !6746
  store i64 0, i64* %y, align 8, !dbg !6747
  br label %for.cond, !dbg !6749

for.cond:                                         ; preds = %for.inc434, %sw.epilog
  %19 = load i64, i64* %y, align 8, !dbg !6750
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6752
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 8, !dbg !6753
  %21 = load i64, i64* %rows, align 8, !dbg !6753
  %cmp = icmp slt i64 %19, %21, !dbg !6754
  br i1 %cmp, label %for.body, label %for.end436, !dbg !6755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !6756, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.declare(metadata i16** %p_indexes, metadata !6760, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6763, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.declare(metadata i16** %q_indexes, metadata !6766, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %x8, metadata !6769, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.declare(metadata i64* %r, metadata !6771, metadata !DIExpression()), !dbg !6772
  %22 = load i32, i32* %status, align 4, !dbg !6773
  %cmp9 = icmp eq i32 %22, 0, !dbg !6775
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6776

if.then:                                          ; preds = %for.body
  br label %for.end436, !dbg !6777

if.end:                                           ; preds = %for.body
  %23 = load %struct._CacheView*, %struct._CacheView** %virt_view, align 8, !dbg !6778
  %24 = load i64, i64* %offx, align 8, !dbg !6779
  %sub10 = sub nsw i64 0, %24, !dbg !6780
  %25 = load i64, i64* %y, align 8, !dbg !6781
  %26 = load i64, i64* %offy, align 8, !dbg !6782
  %sub11 = sub nsw i64 %25, %26, !dbg !6783
  %27 = load i64, i64* %virt_width, align 8, !dbg !6784
  %28 = load i64, i64* %offy, align 8, !dbg !6785
  %add12 = add i64 %28, 1, !dbg !6786
  %29 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6787
  %call13 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %23, i64 %sub10, i64 %sub11, i64 %27, i64 %add12, %struct._ExceptionInfo* %29), !dbg !6788
  store %struct._PixelPacket* %call13, %struct._PixelPacket** %p, align 8, !dbg !6789
  %30 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !6790
  %31 = load i64, i64* %y, align 8, !dbg !6791
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6792
  %columns14 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 7, !dbg !6793
  %33 = load i64, i64* %columns14, align 8, !dbg !6793
  %34 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6794
  %call15 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %30, i64 0, i64 %31, i64 %33, i64 1, %struct._ExceptionInfo* %34), !dbg !6795
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %q, align 8, !dbg !6796
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6797
  %cmp16 = icmp eq %struct._PixelPacket* %35, null, !dbg !6799
  br i1 %cmp16, label %if.then18, label %lor.lhs.false, !dbg !6800

lor.lhs.false:                                    ; preds = %if.end
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6801
  %cmp17 = icmp eq %struct._PixelPacket* %36, null, !dbg !6802
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6803

if.then18:                                        ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %status, align 4, !dbg !6804
  br label %if.end19, !dbg !6805

if.end19:                                         ; preds = %if.then18, %lor.lhs.false
  %37 = load i32, i32* %status, align 4, !dbg !6806
  %cmp20 = icmp eq i32 %37, 0, !dbg !6808
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6809

if.then21:                                        ; preds = %if.end19
  br label %for.end436, !dbg !6810

if.end22:                                         ; preds = %if.end19
  %38 = load %struct._CacheView*, %struct._CacheView** %virt_view, align 8, !dbg !6811
  %call23 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %38), !dbg !6812
  store i16* %call23, i16** %p_indexes, align 8, !dbg !6813
  %39 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !6814
  %call24 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %39), !dbg !6815
  store i16* %call24, i16** %q_indexes, align 8, !dbg !6816
  %40 = load i64, i64* %virt_width, align 8, !dbg !6817
  %41 = load i64, i64* %offy, align 8, !dbg !6818
  %mul = mul nsw i64 %40, %41, !dbg !6819
  %42 = load i64, i64* %offx, align 8, !dbg !6820
  %add25 = add nsw i64 %mul, %42, !dbg !6821
  store i64 %add25, i64* %r, align 8, !dbg !6822
  store i64 0, i64* %x8, align 8, !dbg !6823
  br label %for.cond26, !dbg !6825

for.cond26:                                       ; preds = %for.inc415, %if.end22
  %43 = load i64, i64* %x8, align 8, !dbg !6826
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6828
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 7, !dbg !6829
  %45 = load i64, i64* %columns27, align 8, !dbg !6829
  %cmp28 = icmp slt i64 %43, %45, !dbg !6830
  br i1 %cmp28, label %for.body29, label %for.end417, !dbg !6831

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i64* %v, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.declare(metadata i64* %u, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata double** %k, metadata !6837, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %k_pixels, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata i16** %k_indexes, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %result, metadata !6845, metadata !DIExpression()), !dbg !6859
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6860
  call void @GetMagickPixelPacket(%struct._Image* %46, %struct._MagickPixelPacket* %result), !dbg !6861
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6862
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6863
  %49 = load i16*, i16** %q_indexes, align 8, !dbg !6864
  call void @SetMagickPixelPacket(%struct._Image* %47, %struct._PixelPacket* %48, i16* %49, %struct._MagickPixelPacket* %result), !dbg !6865
  %50 = load i32, i32* %method.addr, align 4, !dbg !6866
  %cmp30 = icmp ne i32 %50, 21, !dbg !6868
  br i1 %cmp30, label %if.then31, label %if.end34, !dbg !6869

if.then31:                                        ; preds = %for.body29
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6870
  %51 = load float, float* %opacity, align 4, !dbg !6870
  %sub32 = fsub float 6.553500e+04, %51, !dbg !6871
  %opacity33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6872
  store float %sub32, float* %opacity33, align 4, !dbg !6873
  br label %if.end34, !dbg !6874

if.end34:                                         ; preds = %if.then31, %for.body29
  %52 = load i32, i32* %method.addr, align 4, !dbg !6875
  switch i32 %52, label %sw.default296 [
    i32 7, label %sw.bb35
    i32 21, label %sw.bb200
  ], !dbg !6876

sw.bb35:                                          ; preds = %if.end34
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6877
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %53, i32 0, i32 5, !dbg !6879
  %54 = load double*, double** %values, align 8, !dbg !6879
  %55 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6880
  %width36 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %55, i32 0, i32 1, !dbg !6881
  %56 = load i64, i64* %width36, align 8, !dbg !6881
  %57 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6882
  %height37 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %57, i32 0, i32 2, !dbg !6883
  %58 = load i64, i64* %height37, align 8, !dbg !6883
  %mul38 = mul i64 %56, %58, !dbg !6884
  %sub39 = sub i64 %mul38, 1, !dbg !6885
  %arrayidx = getelementptr inbounds double, double* %54, i64 %sub39, !dbg !6877
  store double* %arrayidx, double** %k, align 8, !dbg !6886
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6887
  store %struct._PixelPacket* %59, %struct._PixelPacket** %k_pixels, align 8, !dbg !6888
  %60 = load i16*, i16** %p_indexes, align 8, !dbg !6889
  store i16* %60, i16** %k_indexes, align 8, !dbg !6890
  store i64 0, i64* %v, align 8, !dbg !6891
  br label %for.cond40, !dbg !6893

for.cond40:                                       ; preds = %for.inc105, %sw.bb35
  %61 = load i64, i64* %v, align 8, !dbg !6894
  %62 = load i64, i64* %offy, align 8, !dbg !6896
  %cmp41 = icmp sle i64 %61, %62, !dbg !6897
  br i1 %cmp41, label %for.body42, label %for.end107, !dbg !6898

for.body42:                                       ; preds = %for.cond40
  store i64 0, i64* %u, align 8, !dbg !6899
  br label %for.cond43, !dbg !6902

for.cond43:                                       ; preds = %for.inc, %for.body42
  %63 = load i64, i64* %u, align 8, !dbg !6903
  %64 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6905
  %width44 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %64, i32 0, i32 1, !dbg !6906
  %65 = load i64, i64* %width44, align 8, !dbg !6906
  %cmp45 = icmp slt i64 %63, %65, !dbg !6907
  br i1 %cmp45, label %for.body46, label %for.end, !dbg !6908

for.body46:                                       ; preds = %for.cond43
  %66 = load double*, double** %k, align 8, !dbg !6909
  %67 = load double, double* %66, align 8, !dbg !6909
  %68 = load double*, double** %k, align 8, !dbg !6909
  %69 = load double, double* %68, align 8, !dbg !6909
  %cmp47 = fcmp une double %67, %69, !dbg !6909
  br i1 %cmp47, label %cond.true, label %cond.false, !dbg !6912

cond.true:                                        ; preds = %for.body46
  br i1 true, label %if.then48, label %if.end49, !dbg !6909

cond.false:                                       ; preds = %for.body46
  br i1 false, label %if.then48, label %if.end49, !dbg !6912

if.then48:                                        ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !6913

if.end49:                                         ; preds = %cond.false, %cond.true
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 5, !dbg !6914
  %70 = load float, float* %red, align 8, !dbg !6914
  %conv = fpext float %70 to double, !dbg !6914
  %71 = load double*, double** %k, align 8, !dbg !6914
  %72 = load double, double* %71, align 8, !dbg !6914
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6914
  %74 = load i64, i64* %u, align 8, !dbg !6914
  %arrayidx50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i64 %74, !dbg !6914
  %red51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx50, i32 0, i32 2, !dbg !6914
  %75 = load i16, i16* %red51, align 2, !dbg !6914
  %conv52 = zext i16 %75 to i32, !dbg !6914
  %conv53 = sitofp i32 %conv52 to double, !dbg !6914
  %add54 = fadd double %72, %conv53, !dbg !6914
  %call55 = call double @MagickMin(double %conv, double %add54), !dbg !6914
  %conv56 = fptrunc double %call55 to float, !dbg !6914
  %red57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 5, !dbg !6914
  store float %conv56, float* %red57, align 8, !dbg !6914
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 6, !dbg !6915
  %76 = load float, float* %green, align 4, !dbg !6915
  %conv58 = fpext float %76 to double, !dbg !6915
  %77 = load double*, double** %k, align 8, !dbg !6915
  %78 = load double, double* %77, align 8, !dbg !6915
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6915
  %80 = load i64, i64* %u, align 8, !dbg !6915
  %arrayidx59 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i64 %80, !dbg !6915
  %green60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx59, i32 0, i32 1, !dbg !6915
  %81 = load i16, i16* %green60, align 2, !dbg !6915
  %conv61 = zext i16 %81 to i32, !dbg !6915
  %conv62 = sitofp i32 %conv61 to double, !dbg !6915
  %add63 = fadd double %78, %conv62, !dbg !6915
  %call64 = call double @MagickMin(double %conv58, double %add63), !dbg !6915
  %conv65 = fptrunc double %call64 to float, !dbg !6915
  %green66 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 6, !dbg !6915
  store float %conv65, float* %green66, align 4, !dbg !6915
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 7, !dbg !6916
  %82 = load float, float* %blue, align 8, !dbg !6916
  %conv67 = fpext float %82 to double, !dbg !6916
  %83 = load double*, double** %k, align 8, !dbg !6916
  %84 = load double, double* %83, align 8, !dbg !6916
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6916
  %86 = load i64, i64* %u, align 8, !dbg !6916
  %arrayidx68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i64 %86, !dbg !6916
  %blue69 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx68, i32 0, i32 0, !dbg !6916
  %87 = load i16, i16* %blue69, align 2, !dbg !6916
  %conv70 = zext i16 %87 to i32, !dbg !6916
  %conv71 = sitofp i32 %conv70 to double, !dbg !6916
  %add72 = fadd double %84, %conv71, !dbg !6916
  %call73 = call double @MagickMin(double %conv67, double %add72), !dbg !6916
  %conv74 = fptrunc double %call73 to float, !dbg !6916
  %blue75 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 7, !dbg !6916
  store float %conv74, float* %blue75, align 8, !dbg !6916
  %opacity76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6917
  %88 = load float, float* %opacity76, align 4, !dbg !6917
  %conv77 = fpext float %88 to double, !dbg !6917
  %89 = load double*, double** %k, align 8, !dbg !6917
  %90 = load double, double* %89, align 8, !dbg !6917
  %add78 = fadd double %90, 6.553500e+04, !dbg !6917
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6917
  %92 = load i64, i64* %u, align 8, !dbg !6917
  %arrayidx79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i64 %92, !dbg !6917
  %opacity80 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx79, i32 0, i32 3, !dbg !6917
  %93 = load i16, i16* %opacity80, align 2, !dbg !6917
  %conv81 = zext i16 %93 to i32, !dbg !6917
  %conv82 = sitofp i32 %conv81 to double, !dbg !6917
  %sub83 = fsub double %add78, %conv82, !dbg !6917
  %call84 = call double @MagickMin(double %conv77, double %sub83), !dbg !6917
  %conv85 = fptrunc double %call84 to float, !dbg !6917
  %opacity86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6917
  store float %conv85, float* %opacity86, align 4, !dbg !6917
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6918
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 1, !dbg !6920
  %95 = load i32, i32* %colorspace, align 4, !dbg !6920
  %cmp87 = icmp eq i32 %95, 12, !dbg !6921
  br i1 %cmp87, label %if.then89, label %if.end102, !dbg !6922

if.then89:                                        ; preds = %if.end49
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 9, !dbg !6923
  %96 = load float, float* %index, align 8, !dbg !6923
  %conv90 = fpext float %96 to double, !dbg !6923
  %97 = load double*, double** %k, align 8, !dbg !6923
  %98 = load double, double* %97, align 8, !dbg !6923
  %99 = load i16*, i16** %k_indexes, align 8, !dbg !6923
  %100 = load i64, i64* %u, align 8, !dbg !6923
  %add.ptr = getelementptr inbounds i16, i16* %99, i64 %100, !dbg !6923
  %cmp91 = icmp eq i16* %add.ptr, null, !dbg !6923
  br i1 %cmp91, label %cond.true93, label %cond.false94, !dbg !6923

cond.true93:                                      ; preds = %if.then89
  br label %cond.end, !dbg !6923

cond.false94:                                     ; preds = %if.then89
  %101 = load i16*, i16** %k_indexes, align 8, !dbg !6923
  %102 = load i64, i64* %u, align 8, !dbg !6923
  %add.ptr95 = getelementptr inbounds i16, i16* %101, i64 %102, !dbg !6923
  %103 = load i16, i16* %add.ptr95, align 2, !dbg !6923
  %conv96 = zext i16 %103 to i32, !dbg !6923
  br label %cond.end, !dbg !6923

cond.end:                                         ; preds = %cond.false94, %cond.true93
  %cond = phi i32 [ 0, %cond.true93 ], [ %conv96, %cond.false94 ], !dbg !6923
  %conv97 = sitofp i32 %cond to double, !dbg !6923
  %add98 = fadd double %98, %conv97, !dbg !6923
  %call99 = call double @MagickMin(double %conv90, double %add98), !dbg !6923
  %conv100 = fptrunc double %call99 to float, !dbg !6923
  %index101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 9, !dbg !6923
  store float %conv100, float* %index101, align 8, !dbg !6923
  br label %if.end102, !dbg !6923

if.end102:                                        ; preds = %cond.end, %if.end49
  br label %for.inc, !dbg !6924

for.inc:                                          ; preds = %if.end102, %if.then48
  %104 = load i64, i64* %u, align 8, !dbg !6925
  %inc = add nsw i64 %104, 1, !dbg !6925
  store i64 %inc, i64* %u, align 8, !dbg !6925
  %105 = load double*, double** %k, align 8, !dbg !6926
  %incdec.ptr = getelementptr inbounds double, double* %105, i32 -1, !dbg !6926
  store double* %incdec.ptr, double** %k, align 8, !dbg !6926
  br label %for.cond43, !dbg !6927, !llvm.loop !6928

for.end:                                          ; preds = %for.cond43
  %106 = load i64, i64* %virt_width, align 8, !dbg !6930
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6931
  %add.ptr103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i64 %106, !dbg !6931
  store %struct._PixelPacket* %add.ptr103, %struct._PixelPacket** %k_pixels, align 8, !dbg !6931
  %108 = load i64, i64* %virt_width, align 8, !dbg !6932
  %109 = load i16*, i16** %k_indexes, align 8, !dbg !6933
  %add.ptr104 = getelementptr inbounds i16, i16* %109, i64 %108, !dbg !6933
  store i16* %add.ptr104, i16** %k_indexes, align 8, !dbg !6933
  br label %for.inc105, !dbg !6934

for.inc105:                                       ; preds = %for.end
  %110 = load i64, i64* %v, align 8, !dbg !6935
  %inc106 = add nsw i64 %110, 1, !dbg !6935
  store i64 %inc106, i64* %v, align 8, !dbg !6935
  br label %for.cond40, !dbg !6936, !llvm.loop !6937

for.end107:                                       ; preds = %for.cond40
  %111 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6939
  %values108 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %111, i32 0, i32 5, !dbg !6940
  %112 = load double*, double** %values108, align 8, !dbg !6940
  %113 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6941
  %width109 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %113, i32 0, i32 1, !dbg !6942
  %114 = load i64, i64* %width109, align 8, !dbg !6942
  %115 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6943
  %y110 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %115, i32 0, i32 4, !dbg !6944
  %116 = load i64, i64* %y110, align 8, !dbg !6944
  %add111 = add nsw i64 %116, 1, !dbg !6945
  %mul112 = mul i64 %114, %add111, !dbg !6946
  %sub113 = sub i64 %mul112, 1, !dbg !6947
  %arrayidx114 = getelementptr inbounds double, double* %112, i64 %sub113, !dbg !6939
  store double* %arrayidx114, double** %k, align 8, !dbg !6948
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6949
  %118 = load i64, i64* %offx, align 8, !dbg !6950
  %idx.neg = sub i64 0, %118, !dbg !6951
  %add.ptr115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i64 %idx.neg, !dbg !6951
  store %struct._PixelPacket* %add.ptr115, %struct._PixelPacket** %k_pixels, align 8, !dbg !6952
  %119 = load i16*, i16** %q_indexes, align 8, !dbg !6953
  %120 = load i64, i64* %offx, align 8, !dbg !6954
  %idx.neg116 = sub i64 0, %120, !dbg !6955
  %add.ptr117 = getelementptr inbounds i16, i16* %119, i64 %idx.neg116, !dbg !6955
  store i16* %add.ptr117, i16** %k_indexes, align 8, !dbg !6956
  store i64 0, i64* %u, align 8, !dbg !6957
  br label %for.cond118, !dbg !6959

for.cond118:                                      ; preds = %for.inc196, %for.end107
  %121 = load i64, i64* %u, align 8, !dbg !6960
  %122 = load i64, i64* %offx, align 8, !dbg !6962
  %cmp119 = icmp slt i64 %121, %122, !dbg !6963
  br i1 %cmp119, label %for.body121, label %for.end199, !dbg !6964

for.body121:                                      ; preds = %for.cond118
  %123 = load i64, i64* %x8, align 8, !dbg !6965
  %124 = load i64, i64* %u, align 8, !dbg !6968
  %add122 = add nsw i64 %123, %124, !dbg !6969
  %125 = load i64, i64* %offx, align 8, !dbg !6970
  %sub123 = sub nsw i64 %add122, %125, !dbg !6971
  %cmp124 = icmp slt i64 %sub123, 0, !dbg !6972
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !6973

if.then126:                                       ; preds = %for.body121
  br label %for.inc196, !dbg !6974

if.end127:                                        ; preds = %for.body121
  %126 = load double*, double** %k, align 8, !dbg !6975
  %127 = load double, double* %126, align 8, !dbg !6975
  %128 = load double*, double** %k, align 8, !dbg !6975
  %129 = load double, double* %128, align 8, !dbg !6975
  %cmp128 = fcmp une double %127, %129, !dbg !6975
  br i1 %cmp128, label %cond.true130, label %cond.false131, !dbg !6977

cond.true130:                                     ; preds = %if.end127
  br i1 true, label %if.then132, label %if.end133, !dbg !6975

cond.false131:                                    ; preds = %if.end127
  br i1 false, label %if.then132, label %if.end133, !dbg !6977

if.then132:                                       ; preds = %cond.false131, %cond.true130
  br label %for.inc196, !dbg !6978

if.end133:                                        ; preds = %cond.false131, %cond.true130
  %red134 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 5, !dbg !6979
  %130 = load float, float* %red134, align 8, !dbg !6979
  %conv135 = fpext float %130 to double, !dbg !6979
  %131 = load double*, double** %k, align 8, !dbg !6979
  %132 = load double, double* %131, align 8, !dbg !6979
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6979
  %134 = load i64, i64* %u, align 8, !dbg !6979
  %arrayidx136 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i64 %134, !dbg !6979
  %red137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx136, i32 0, i32 2, !dbg !6979
  %135 = load i16, i16* %red137, align 2, !dbg !6979
  %conv138 = zext i16 %135 to i32, !dbg !6979
  %conv139 = sitofp i32 %conv138 to double, !dbg !6979
  %add140 = fadd double %132, %conv139, !dbg !6979
  %call141 = call double @MagickMin(double %conv135, double %add140), !dbg !6979
  %conv142 = fptrunc double %call141 to float, !dbg !6979
  %red143 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 5, !dbg !6979
  store float %conv142, float* %red143, align 8, !dbg !6979
  %green144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 6, !dbg !6980
  %136 = load float, float* %green144, align 4, !dbg !6980
  %conv145 = fpext float %136 to double, !dbg !6980
  %137 = load double*, double** %k, align 8, !dbg !6980
  %138 = load double, double* %137, align 8, !dbg !6980
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6980
  %140 = load i64, i64* %u, align 8, !dbg !6980
  %arrayidx146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i64 %140, !dbg !6980
  %green147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx146, i32 0, i32 1, !dbg !6980
  %141 = load i16, i16* %green147, align 2, !dbg !6980
  %conv148 = zext i16 %141 to i32, !dbg !6980
  %conv149 = sitofp i32 %conv148 to double, !dbg !6980
  %add150 = fadd double %138, %conv149, !dbg !6980
  %call151 = call double @MagickMin(double %conv145, double %add150), !dbg !6980
  %conv152 = fptrunc double %call151 to float, !dbg !6980
  %green153 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 6, !dbg !6980
  store float %conv152, float* %green153, align 4, !dbg !6980
  %blue154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 7, !dbg !6981
  %142 = load float, float* %blue154, align 8, !dbg !6981
  %conv155 = fpext float %142 to double, !dbg !6981
  %143 = load double*, double** %k, align 8, !dbg !6981
  %144 = load double, double* %143, align 8, !dbg !6981
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6981
  %146 = load i64, i64* %u, align 8, !dbg !6981
  %arrayidx156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %145, i64 %146, !dbg !6981
  %blue157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx156, i32 0, i32 0, !dbg !6981
  %147 = load i16, i16* %blue157, align 2, !dbg !6981
  %conv158 = zext i16 %147 to i32, !dbg !6981
  %conv159 = sitofp i32 %conv158 to double, !dbg !6981
  %add160 = fadd double %144, %conv159, !dbg !6981
  %call161 = call double @MagickMin(double %conv155, double %add160), !dbg !6981
  %conv162 = fptrunc double %call161 to float, !dbg !6981
  %blue163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 7, !dbg !6981
  store float %conv162, float* %blue163, align 8, !dbg !6981
  %opacity164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6982
  %148 = load float, float* %opacity164, align 4, !dbg !6982
  %conv165 = fpext float %148 to double, !dbg !6982
  %149 = load double*, double** %k, align 8, !dbg !6982
  %150 = load double, double* %149, align 8, !dbg !6982
  %add166 = fadd double %150, 6.553500e+04, !dbg !6982
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !6982
  %152 = load i64, i64* %u, align 8, !dbg !6982
  %arrayidx167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i64 %152, !dbg !6982
  %opacity168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx167, i32 0, i32 3, !dbg !6982
  %153 = load i16, i16* %opacity168, align 2, !dbg !6982
  %conv169 = zext i16 %153 to i32, !dbg !6982
  %conv170 = sitofp i32 %conv169 to double, !dbg !6982
  %sub171 = fsub double %add166, %conv170, !dbg !6982
  %call172 = call double @MagickMin(double %conv165, double %sub171), !dbg !6982
  %conv173 = fptrunc double %call172 to float, !dbg !6982
  %opacity174 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !6982
  store float %conv173, float* %opacity174, align 4, !dbg !6982
  %154 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6983
  %colorspace175 = getelementptr inbounds %struct._Image, %struct._Image* %154, i32 0, i32 1, !dbg !6985
  %155 = load i32, i32* %colorspace175, align 4, !dbg !6985
  %cmp176 = icmp eq i32 %155, 12, !dbg !6986
  br i1 %cmp176, label %if.then178, label %if.end195, !dbg !6987

if.then178:                                       ; preds = %if.end133
  %index179 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 9, !dbg !6988
  %156 = load float, float* %index179, align 8, !dbg !6988
  %conv180 = fpext float %156 to double, !dbg !6988
  %157 = load double*, double** %k, align 8, !dbg !6988
  %158 = load double, double* %157, align 8, !dbg !6988
  %159 = load i16*, i16** %k_indexes, align 8, !dbg !6988
  %160 = load i64, i64* %u, align 8, !dbg !6988
  %add.ptr181 = getelementptr inbounds i16, i16* %159, i64 %160, !dbg !6988
  %cmp182 = icmp eq i16* %add.ptr181, null, !dbg !6988
  br i1 %cmp182, label %cond.true184, label %cond.false185, !dbg !6988

cond.true184:                                     ; preds = %if.then178
  br label %cond.end188, !dbg !6988

cond.false185:                                    ; preds = %if.then178
  %161 = load i16*, i16** %k_indexes, align 8, !dbg !6988
  %162 = load i64, i64* %u, align 8, !dbg !6988
  %add.ptr186 = getelementptr inbounds i16, i16* %161, i64 %162, !dbg !6988
  %163 = load i16, i16* %add.ptr186, align 2, !dbg !6988
  %conv187 = zext i16 %163 to i32, !dbg !6988
  br label %cond.end188, !dbg !6988

cond.end188:                                      ; preds = %cond.false185, %cond.true184
  %cond189 = phi i32 [ 0, %cond.true184 ], [ %conv187, %cond.false185 ], !dbg !6988
  %conv190 = sitofp i32 %cond189 to double, !dbg !6988
  %add191 = fadd double %158, %conv190, !dbg !6988
  %call192 = call double @MagickMin(double %conv180, double %add191), !dbg !6988
  %conv193 = fptrunc double %call192 to float, !dbg !6988
  %index194 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 9, !dbg !6988
  store float %conv193, float* %index194, align 8, !dbg !6988
  br label %if.end195, !dbg !6988

if.end195:                                        ; preds = %cond.end188, %if.end133
  br label %for.inc196, !dbg !6989

for.inc196:                                       ; preds = %if.end195, %if.then132, %if.then126
  %164 = load i64, i64* %u, align 8, !dbg !6990
  %inc197 = add nsw i64 %164, 1, !dbg !6990
  store i64 %inc197, i64* %u, align 8, !dbg !6990
  %165 = load double*, double** %k, align 8, !dbg !6991
  %incdec.ptr198 = getelementptr inbounds double, double* %165, i32 -1, !dbg !6991
  store double* %incdec.ptr198, double** %k, align 8, !dbg !6991
  br label %for.cond118, !dbg !6992, !llvm.loop !6993

for.end199:                                       ; preds = %for.cond118
  br label %sw.epilog297, !dbg !6995

sw.bb200:                                         ; preds = %if.end34
  %166 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6996
  %values201 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %166, i32 0, i32 5, !dbg !6997
  %167 = load double*, double** %values201, align 8, !dbg !6997
  %168 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !6998
  %width202 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %168, i32 0, i32 1, !dbg !6999
  %169 = load i64, i64* %width202, align 8, !dbg !6999
  %170 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7000
  %height203 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %170, i32 0, i32 2, !dbg !7001
  %171 = load i64, i64* %height203, align 8, !dbg !7001
  %mul204 = mul i64 %169, %171, !dbg !7002
  %sub205 = sub i64 %mul204, 1, !dbg !7003
  %arrayidx206 = getelementptr inbounds double, double* %167, i64 %sub205, !dbg !6996
  store double* %arrayidx206, double** %k, align 8, !dbg !7004
  %172 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7005
  store %struct._PixelPacket* %172, %struct._PixelPacket** %k_pixels, align 8, !dbg !7006
  %173 = load i16*, i16** %p_indexes, align 8, !dbg !7007
  store i16* %173, i16** %k_indexes, align 8, !dbg !7008
  store i64 0, i64* %v, align 8, !dbg !7009
  br label %for.cond207, !dbg !7011

for.cond207:                                      ; preds = %for.inc245, %sw.bb200
  %174 = load i64, i64* %v, align 8, !dbg !7012
  %175 = load i64, i64* %offy, align 8, !dbg !7014
  %cmp208 = icmp sle i64 %174, %175, !dbg !7015
  br i1 %cmp208, label %for.body210, label %for.end247, !dbg !7016

for.body210:                                      ; preds = %for.cond207
  store i64 0, i64* %u, align 8, !dbg !7017
  br label %for.cond211, !dbg !7020

for.cond211:                                      ; preds = %for.inc239, %for.body210
  %176 = load i64, i64* %u, align 8, !dbg !7021
  %177 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7023
  %width212 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %177, i32 0, i32 1, !dbg !7024
  %178 = load i64, i64* %width212, align 8, !dbg !7024
  %cmp213 = icmp slt i64 %176, %178, !dbg !7025
  br i1 %cmp213, label %for.body215, label %for.end242, !dbg !7026

for.body215:                                      ; preds = %for.cond211
  %179 = load double*, double** %k, align 8, !dbg !7027
  %180 = load double, double* %179, align 8, !dbg !7027
  %181 = load double*, double** %k, align 8, !dbg !7027
  %182 = load double, double* %181, align 8, !dbg !7027
  %cmp216 = fcmp une double %180, %182, !dbg !7027
  br i1 %cmp216, label %cond.true218, label %cond.false219, !dbg !7030

cond.true218:                                     ; preds = %for.body215
  br i1 true, label %if.then220, label %if.end221, !dbg !7027

cond.false219:                                    ; preds = %for.body215
  br i1 false, label %if.then220, label %if.end221, !dbg !7030

if.then220:                                       ; preds = %cond.false219, %cond.true218
  br label %for.inc239, !dbg !7031

if.end221:                                        ; preds = %cond.false219, %cond.true218
  %opacity222 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !7032
  %183 = load float, float* %opacity222, align 4, !dbg !7032
  %conv223 = fpext float %183 to double, !dbg !7034
  %184 = load double*, double** %k, align 8, !dbg !7035
  %185 = load double, double* %184, align 8, !dbg !7036
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !7037
  %187 = load i64, i64* %u, align 8, !dbg !7038
  %arrayidx224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i64 %187, !dbg !7037
  %opacity225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx224, i32 0, i32 3, !dbg !7039
  %188 = load i16, i16* %opacity225, align 2, !dbg !7039
  %conv226 = zext i16 %188 to i32, !dbg !7037
  %conv227 = sitofp i32 %conv226 to double, !dbg !7037
  %add228 = fadd double %185, %conv227, !dbg !7040
  %cmp229 = fcmp ogt double %conv223, %add228, !dbg !7041
  br i1 %cmp229, label %if.then231, label %if.end238, !dbg !7042

if.then231:                                       ; preds = %if.end221
  %189 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7043
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !7045
  %191 = load i64, i64* %u, align 8, !dbg !7046
  %arrayidx232 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i64 %191, !dbg !7045
  %192 = load i16*, i16** %k_indexes, align 8, !dbg !7047
  %193 = load i64, i64* %u, align 8, !dbg !7048
  %arrayidx233 = getelementptr inbounds i16, i16* %192, i64 %193, !dbg !7047
  call void @SetMagickPixelPacket(%struct._Image* %189, %struct._PixelPacket* %arrayidx232, i16* %arrayidx233, %struct._MagickPixelPacket* %result), !dbg !7049
  %194 = load double*, double** %k, align 8, !dbg !7050
  %195 = load double, double* %194, align 8, !dbg !7051
  %opacity234 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !7052
  %196 = load float, float* %opacity234, align 4, !dbg !7053
  %conv235 = fpext float %196 to double, !dbg !7053
  %add236 = fadd double %conv235, %195, !dbg !7053
  %conv237 = fptrunc double %add236 to float, !dbg !7053
  store float %conv237, float* %opacity234, align 4, !dbg !7053
  br label %if.end238, !dbg !7054

if.end238:                                        ; preds = %if.then231, %if.end221
  br label %for.inc239, !dbg !7055

for.inc239:                                       ; preds = %if.end238, %if.then220
  %197 = load i64, i64* %u, align 8, !dbg !7056
  %inc240 = add nsw i64 %197, 1, !dbg !7056
  store i64 %inc240, i64* %u, align 8, !dbg !7056
  %198 = load double*, double** %k, align 8, !dbg !7057
  %incdec.ptr241 = getelementptr inbounds double, double* %198, i32 -1, !dbg !7057
  store double* %incdec.ptr241, double** %k, align 8, !dbg !7057
  br label %for.cond211, !dbg !7058, !llvm.loop !7059

for.end242:                                       ; preds = %for.cond211
  %199 = load i64, i64* %virt_width, align 8, !dbg !7061
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !7062
  %add.ptr243 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i64 %199, !dbg !7062
  store %struct._PixelPacket* %add.ptr243, %struct._PixelPacket** %k_pixels, align 8, !dbg !7062
  %201 = load i64, i64* %virt_width, align 8, !dbg !7063
  %202 = load i16*, i16** %k_indexes, align 8, !dbg !7064
  %add.ptr244 = getelementptr inbounds i16, i16* %202, i64 %201, !dbg !7064
  store i16* %add.ptr244, i16** %k_indexes, align 8, !dbg !7064
  br label %for.inc245, !dbg !7065

for.inc245:                                       ; preds = %for.end242
  %203 = load i64, i64* %v, align 8, !dbg !7066
  %inc246 = add nsw i64 %203, 1, !dbg !7066
  store i64 %inc246, i64* %v, align 8, !dbg !7066
  br label %for.cond207, !dbg !7067, !llvm.loop !7068

for.end247:                                       ; preds = %for.cond207
  %204 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7070
  %values248 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %204, i32 0, i32 5, !dbg !7071
  %205 = load double*, double** %values248, align 8, !dbg !7071
  %206 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7072
  %width249 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %206, i32 0, i32 1, !dbg !7073
  %207 = load i64, i64* %width249, align 8, !dbg !7073
  %208 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7074
  %y250 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %208, i32 0, i32 4, !dbg !7075
  %209 = load i64, i64* %y250, align 8, !dbg !7075
  %add251 = add nsw i64 %209, 1, !dbg !7076
  %mul252 = mul i64 %207, %add251, !dbg !7077
  %sub253 = sub i64 %mul252, 1, !dbg !7078
  %arrayidx254 = getelementptr inbounds double, double* %205, i64 %sub253, !dbg !7070
  store double* %arrayidx254, double** %k, align 8, !dbg !7079
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7080
  %211 = load i64, i64* %offx, align 8, !dbg !7081
  %idx.neg255 = sub i64 0, %211, !dbg !7082
  %add.ptr256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i64 %idx.neg255, !dbg !7082
  store %struct._PixelPacket* %add.ptr256, %struct._PixelPacket** %k_pixels, align 8, !dbg !7083
  %212 = load i16*, i16** %q_indexes, align 8, !dbg !7084
  %213 = load i64, i64* %offx, align 8, !dbg !7085
  %idx.neg257 = sub i64 0, %213, !dbg !7086
  %add.ptr258 = getelementptr inbounds i16, i16* %212, i64 %idx.neg257, !dbg !7086
  store i16* %add.ptr258, i16** %k_indexes, align 8, !dbg !7087
  store i64 0, i64* %u, align 8, !dbg !7088
  br label %for.cond259, !dbg !7090

for.cond259:                                      ; preds = %for.inc292, %for.end247
  %214 = load i64, i64* %u, align 8, !dbg !7091
  %215 = load i64, i64* %offx, align 8, !dbg !7093
  %cmp260 = icmp slt i64 %214, %215, !dbg !7094
  br i1 %cmp260, label %for.body262, label %for.end295, !dbg !7095

for.body262:                                      ; preds = %for.cond259
  %216 = load i64, i64* %x8, align 8, !dbg !7096
  %217 = load i64, i64* %u, align 8, !dbg !7099
  %add263 = add nsw i64 %216, %217, !dbg !7100
  %218 = load i64, i64* %offx, align 8, !dbg !7101
  %sub264 = sub nsw i64 %add263, %218, !dbg !7102
  %cmp265 = icmp slt i64 %sub264, 0, !dbg !7103
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !7104

if.then267:                                       ; preds = %for.body262
  br label %for.inc292, !dbg !7105

if.end268:                                        ; preds = %for.body262
  %219 = load double*, double** %k, align 8, !dbg !7106
  %220 = load double, double* %219, align 8, !dbg !7106
  %221 = load double*, double** %k, align 8, !dbg !7106
  %222 = load double, double* %221, align 8, !dbg !7106
  %cmp269 = fcmp une double %220, %222, !dbg !7106
  br i1 %cmp269, label %cond.true271, label %cond.false272, !dbg !7108

cond.true271:                                     ; preds = %if.end268
  br i1 true, label %if.then273, label %if.end274, !dbg !7106

cond.false272:                                    ; preds = %if.end268
  br i1 false, label %if.then273, label %if.end274, !dbg !7108

if.then273:                                       ; preds = %cond.false272, %cond.true271
  br label %for.inc292, !dbg !7109

if.end274:                                        ; preds = %cond.false272, %cond.true271
  %opacity275 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !7110
  %223 = load float, float* %opacity275, align 4, !dbg !7110
  %conv276 = fpext float %223 to double, !dbg !7112
  %224 = load double*, double** %k, align 8, !dbg !7113
  %225 = load double, double* %224, align 8, !dbg !7114
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !7115
  %227 = load i64, i64* %u, align 8, !dbg !7116
  %arrayidx277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i64 %227, !dbg !7115
  %opacity278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx277, i32 0, i32 3, !dbg !7117
  %228 = load i16, i16* %opacity278, align 2, !dbg !7117
  %conv279 = zext i16 %228 to i32, !dbg !7115
  %conv280 = sitofp i32 %conv279 to double, !dbg !7115
  %add281 = fadd double %225, %conv280, !dbg !7118
  %cmp282 = fcmp ogt double %conv276, %add281, !dbg !7119
  br i1 %cmp282, label %if.then284, label %if.end291, !dbg !7120

if.then284:                                       ; preds = %if.end274
  %229 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7121
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !7123
  %231 = load i64, i64* %u, align 8, !dbg !7124
  %arrayidx285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %230, i64 %231, !dbg !7123
  %232 = load i16*, i16** %k_indexes, align 8, !dbg !7125
  %233 = load i64, i64* %u, align 8, !dbg !7126
  %arrayidx286 = getelementptr inbounds i16, i16* %232, i64 %233, !dbg !7125
  call void @SetMagickPixelPacket(%struct._Image* %229, %struct._PixelPacket* %arrayidx285, i16* %arrayidx286, %struct._MagickPixelPacket* %result), !dbg !7127
  %234 = load double*, double** %k, align 8, !dbg !7128
  %235 = load double, double* %234, align 8, !dbg !7129
  %opacity287 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !7130
  %236 = load float, float* %opacity287, align 4, !dbg !7131
  %conv288 = fpext float %236 to double, !dbg !7131
  %add289 = fadd double %conv288, %235, !dbg !7131
  %conv290 = fptrunc double %add289 to float, !dbg !7131
  store float %conv290, float* %opacity287, align 4, !dbg !7131
  br label %if.end291, !dbg !7132

if.end291:                                        ; preds = %if.then284, %if.end274
  br label %for.inc292, !dbg !7133

for.inc292:                                       ; preds = %if.end291, %if.then273, %if.then267
  %237 = load i64, i64* %u, align 8, !dbg !7134
  %inc293 = add nsw i64 %237, 1, !dbg !7134
  store i64 %inc293, i64* %u, align 8, !dbg !7134
  %238 = load double*, double** %k, align 8, !dbg !7135
  %incdec.ptr294 = getelementptr inbounds double, double* %238, i32 -1, !dbg !7135
  store double* %incdec.ptr294, double** %k, align 8, !dbg !7135
  br label %for.cond259, !dbg !7136, !llvm.loop !7137

for.end295:                                       ; preds = %for.cond259
  br label %sw.epilog297, !dbg !7139

sw.default296:                                    ; preds = %if.end34
  br label %sw.epilog297, !dbg !7140

sw.epilog297:                                     ; preds = %sw.default296, %for.end295, %for.end199
  %239 = load i32, i32* %method.addr, align 4, !dbg !7141
  switch i32 %239, label %sw.default299 [
    i32 21, label %sw.bb298
  ], !dbg !7142

sw.bb298:                                         ; preds = %sw.epilog297
  %240 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7143
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7145
  %242 = load i16*, i16** %q_indexes, align 8, !dbg !7146
  call void @SetPixelPacket(%struct._Image* %240, %struct._MagickPixelPacket* %result, %struct._PixelPacket* %241, i16* %242), !dbg !7147
  br label %sw.epilog353, !dbg !7148

sw.default299:                                    ; preds = %sw.epilog297
  %243 = load i32, i32* %channel.addr, align 4, !dbg !7149
  %and = and i32 %243, 1, !dbg !7151
  %cmp300 = icmp ne i32 %and, 0, !dbg !7152
  br i1 %cmp300, label %if.then302, label %if.end306, !dbg !7153

if.then302:                                       ; preds = %sw.default299
  %red303 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 5, !dbg !7154
  %244 = load float, float* %red303, align 8, !dbg !7154
  %call304 = call zeroext i16 @ClampToQuantum(float %244), !dbg !7154
  %245 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7154
  %red305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %245, i32 0, i32 2, !dbg !7154
  store i16 %call304, i16* %red305, align 2, !dbg !7154
  br label %if.end306, !dbg !7154

if.end306:                                        ; preds = %if.then302, %sw.default299
  %246 = load i32, i32* %channel.addr, align 4, !dbg !7155
  %and307 = and i32 %246, 2, !dbg !7157
  %cmp308 = icmp ne i32 %and307, 0, !dbg !7158
  br i1 %cmp308, label %if.then310, label %if.end314, !dbg !7159

if.then310:                                       ; preds = %if.end306
  %green311 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 6, !dbg !7160
  %247 = load float, float* %green311, align 4, !dbg !7160
  %call312 = call zeroext i16 @ClampToQuantum(float %247), !dbg !7160
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7160
  %green313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i32 0, i32 1, !dbg !7160
  store i16 %call312, i16* %green313, align 2, !dbg !7160
  br label %if.end314, !dbg !7160

if.end314:                                        ; preds = %if.then310, %if.end306
  %249 = load i32, i32* %channel.addr, align 4, !dbg !7161
  %and315 = and i32 %249, 4, !dbg !7163
  %cmp316 = icmp ne i32 %and315, 0, !dbg !7164
  br i1 %cmp316, label %if.then318, label %if.end322, !dbg !7165

if.then318:                                       ; preds = %if.end314
  %blue319 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 7, !dbg !7166
  %250 = load float, float* %blue319, align 8, !dbg !7166
  %call320 = call zeroext i16 @ClampToQuantum(float %250), !dbg !7166
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7166
  %blue321 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 0, !dbg !7166
  store i16 %call320, i16* %blue321, align 2, !dbg !7166
  br label %if.end322, !dbg !7166

if.end322:                                        ; preds = %if.then318, %if.end314
  %252 = load i32, i32* %channel.addr, align 4, !dbg !7167
  %and323 = and i32 %252, 8, !dbg !7169
  %cmp324 = icmp ne i32 %and323, 0, !dbg !7170
  br i1 %cmp324, label %land.lhs.true, label %if.end335, !dbg !7171

land.lhs.true:                                    ; preds = %if.end322
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7172
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %253, i32 0, i32 6, !dbg !7173
  %254 = load i32, i32* %matte, align 8, !dbg !7173
  %cmp326 = icmp ne i32 %254, 0, !dbg !7174
  br i1 %cmp326, label %if.then328, label %if.end335, !dbg !7175

if.then328:                                       ; preds = %land.lhs.true
  %opacity329 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 8, !dbg !7176
  %255 = load float, float* %opacity329, align 4, !dbg !7176
  %call330 = call zeroext i16 @ClampToQuantum(float %255), !dbg !7176
  %conv331 = zext i16 %call330 to i32, !dbg !7176
  %sub332 = sub nsw i32 65535, %conv331, !dbg !7176
  %conv333 = trunc i32 %sub332 to i16, !dbg !7176
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7176
  %opacity334 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 3, !dbg !7176
  store i16 %conv333, i16* %opacity334, align 2, !dbg !7176
  br label %if.end335, !dbg !7176

if.end335:                                        ; preds = %if.then328, %land.lhs.true, %if.end322
  %257 = load i32, i32* %channel.addr, align 4, !dbg !7177
  %and336 = and i32 %257, 32, !dbg !7179
  %cmp337 = icmp ne i32 %and336, 0, !dbg !7180
  br i1 %cmp337, label %land.lhs.true339, label %if.end352, !dbg !7181

land.lhs.true339:                                 ; preds = %if.end335
  %258 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7182
  %colorspace340 = getelementptr inbounds %struct._Image, %struct._Image* %258, i32 0, i32 1, !dbg !7183
  %259 = load i32, i32* %colorspace340, align 4, !dbg !7183
  %cmp341 = icmp eq i32 %259, 12, !dbg !7184
  br i1 %cmp341, label %if.then343, label %if.end352, !dbg !7185

if.then343:                                       ; preds = %land.lhs.true339
  %260 = load i16*, i16** %q_indexes, align 8, !dbg !7186
  %261 = load i64, i64* %x8, align 8, !dbg !7186
  %add.ptr344 = getelementptr inbounds i16, i16* %260, i64 %261, !dbg !7186
  %cmp345 = icmp ne i16* %add.ptr344, null, !dbg !7186
  br i1 %cmp345, label %if.then347, label %if.end351, !dbg !7189

if.then347:                                       ; preds = %if.then343
  %index348 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result, i32 0, i32 9, !dbg !7186
  %262 = load float, float* %index348, align 8, !dbg !7186
  %call349 = call zeroext i16 @ClampToQuantum(float %262), !dbg !7186
  %263 = load i16*, i16** %q_indexes, align 8, !dbg !7186
  %264 = load i64, i64* %x8, align 8, !dbg !7186
  %add.ptr350 = getelementptr inbounds i16, i16* %263, i64 %264, !dbg !7186
  store i16 %call349, i16* %add.ptr350, align 2, !dbg !7186
  br label %if.end351, !dbg !7186

if.end351:                                        ; preds = %if.then347, %if.then343
  br label %if.end352, !dbg !7189

if.end352:                                        ; preds = %if.end351, %land.lhs.true339, %if.end335
  br label %sw.epilog353, !dbg !7190

sw.epilog353:                                     ; preds = %if.end352, %sw.bb298
  %265 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7191
  %266 = load i64, i64* %r, align 8, !dbg !7193
  %arrayidx354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %265, i64 %266, !dbg !7191
  %red355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx354, i32 0, i32 2, !dbg !7194
  %267 = load i16, i16* %red355, align 2, !dbg !7194
  %conv356 = zext i16 %267 to i32, !dbg !7191
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7195
  %red357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 0, i32 2, !dbg !7195
  %269 = load i16, i16* %red357, align 2, !dbg !7195
  %conv358 = zext i16 %269 to i32, !dbg !7195
  %cmp359 = icmp ne i32 %conv356, %conv358, !dbg !7196
  br i1 %cmp359, label %if.then410, label %lor.lhs.false361, !dbg !7197

lor.lhs.false361:                                 ; preds = %sw.epilog353
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7198
  %271 = load i64, i64* %r, align 8, !dbg !7199
  %arrayidx362 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i64 %271, !dbg !7198
  %green363 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx362, i32 0, i32 1, !dbg !7200
  %272 = load i16, i16* %green363, align 2, !dbg !7200
  %conv364 = zext i16 %272 to i32, !dbg !7198
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7201
  %green365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 1, !dbg !7201
  %274 = load i16, i16* %green365, align 2, !dbg !7201
  %conv366 = zext i16 %274 to i32, !dbg !7201
  %cmp367 = icmp ne i32 %conv364, %conv366, !dbg !7202
  br i1 %cmp367, label %if.then410, label %lor.lhs.false369, !dbg !7203

lor.lhs.false369:                                 ; preds = %lor.lhs.false361
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7204
  %276 = load i64, i64* %r, align 8, !dbg !7205
  %arrayidx370 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i64 %276, !dbg !7204
  %blue371 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx370, i32 0, i32 0, !dbg !7206
  %277 = load i16, i16* %blue371, align 2, !dbg !7206
  %conv372 = zext i16 %277 to i32, !dbg !7204
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7207
  %blue373 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 0, i32 0, !dbg !7207
  %279 = load i16, i16* %blue373, align 2, !dbg !7207
  %conv374 = zext i16 %279 to i32, !dbg !7207
  %cmp375 = icmp ne i32 %conv372, %conv374, !dbg !7208
  br i1 %cmp375, label %if.then410, label %lor.lhs.false377, !dbg !7209

lor.lhs.false377:                                 ; preds = %lor.lhs.false369
  %280 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7210
  %281 = load i64, i64* %r, align 8, !dbg !7211
  %arrayidx378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %280, i64 %281, !dbg !7210
  %opacity379 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx378, i32 0, i32 3, !dbg !7212
  %282 = load i16, i16* %opacity379, align 2, !dbg !7212
  %conv380 = zext i16 %282 to i32, !dbg !7210
  %283 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7213
  %opacity381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %283, i32 0, i32 3, !dbg !7213
  %284 = load i16, i16* %opacity381, align 2, !dbg !7213
  %conv382 = zext i16 %284 to i32, !dbg !7213
  %cmp383 = icmp ne i32 %conv380, %conv382, !dbg !7214
  br i1 %cmp383, label %if.then410, label %lor.lhs.false385, !dbg !7215

lor.lhs.false385:                                 ; preds = %lor.lhs.false377
  %285 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7216
  %colorspace386 = getelementptr inbounds %struct._Image, %struct._Image* %285, i32 0, i32 1, !dbg !7217
  %286 = load i32, i32* %colorspace386, align 4, !dbg !7217
  %cmp387 = icmp eq i32 %286, 12, !dbg !7218
  br i1 %cmp387, label %land.lhs.true389, label %if.end412, !dbg !7219

land.lhs.true389:                                 ; preds = %lor.lhs.false385
  %287 = load i16*, i16** %p_indexes, align 8, !dbg !7220
  %288 = load i64, i64* %r, align 8, !dbg !7220
  %add.ptr390 = getelementptr inbounds i16, i16* %287, i64 %288, !dbg !7220
  %cmp391 = icmp eq i16* %add.ptr390, null, !dbg !7220
  br i1 %cmp391, label %cond.true393, label %cond.false394, !dbg !7220

cond.true393:                                     ; preds = %land.lhs.true389
  br label %cond.end397, !dbg !7220

cond.false394:                                    ; preds = %land.lhs.true389
  %289 = load i16*, i16** %p_indexes, align 8, !dbg !7220
  %290 = load i64, i64* %r, align 8, !dbg !7220
  %add.ptr395 = getelementptr inbounds i16, i16* %289, i64 %290, !dbg !7220
  %291 = load i16, i16* %add.ptr395, align 2, !dbg !7220
  %conv396 = zext i16 %291 to i32, !dbg !7220
  br label %cond.end397, !dbg !7220

cond.end397:                                      ; preds = %cond.false394, %cond.true393
  %cond398 = phi i32 [ 0, %cond.true393 ], [ %conv396, %cond.false394 ], !dbg !7220
  %292 = load i16*, i16** %q_indexes, align 8, !dbg !7221
  %293 = load i64, i64* %x8, align 8, !dbg !7221
  %add.ptr399 = getelementptr inbounds i16, i16* %292, i64 %293, !dbg !7221
  %cmp400 = icmp eq i16* %add.ptr399, null, !dbg !7221
  br i1 %cmp400, label %cond.true402, label %cond.false403, !dbg !7221

cond.true402:                                     ; preds = %cond.end397
  br label %cond.end406, !dbg !7221

cond.false403:                                    ; preds = %cond.end397
  %294 = load i16*, i16** %q_indexes, align 8, !dbg !7221
  %295 = load i64, i64* %x8, align 8, !dbg !7221
  %add.ptr404 = getelementptr inbounds i16, i16* %294, i64 %295, !dbg !7221
  %296 = load i16, i16* %add.ptr404, align 2, !dbg !7221
  %conv405 = zext i16 %296 to i32, !dbg !7221
  br label %cond.end406, !dbg !7221

cond.end406:                                      ; preds = %cond.false403, %cond.true402
  %cond407 = phi i32 [ 0, %cond.true402 ], [ %conv405, %cond.false403 ], !dbg !7221
  %cmp408 = icmp ne i32 %cond398, %cond407, !dbg !7222
  br i1 %cmp408, label %if.then410, label %if.end412, !dbg !7223

if.then410:                                       ; preds = %cond.end406, %lor.lhs.false377, %lor.lhs.false369, %lor.lhs.false361, %sw.epilog353
  %297 = load i64, i64* %changed, align 8, !dbg !7224
  %inc411 = add i64 %297, 1, !dbg !7224
  store i64 %inc411, i64* %changed, align 8, !dbg !7224
  br label %if.end412, !dbg !7225

if.end412:                                        ; preds = %if.then410, %cond.end406, %lor.lhs.false385
  %298 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7226
  %incdec.ptr413 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %298, i32 1, !dbg !7226
  store %struct._PixelPacket* %incdec.ptr413, %struct._PixelPacket** %p, align 8, !dbg !7226
  %299 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7227
  %incdec.ptr414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %299, i32 1, !dbg !7227
  store %struct._PixelPacket* %incdec.ptr414, %struct._PixelPacket** %q, align 8, !dbg !7227
  br label %for.inc415, !dbg !7228

for.inc415:                                       ; preds = %if.end412
  %300 = load i64, i64* %x8, align 8, !dbg !7229
  %inc416 = add nsw i64 %300, 1, !dbg !7229
  store i64 %inc416, i64* %x8, align 8, !dbg !7229
  br label %for.cond26, !dbg !7230, !llvm.loop !7231

for.end417:                                       ; preds = %for.cond26
  %301 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !7233
  %302 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7235
  %call418 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %301, %struct._ExceptionInfo* %302), !dbg !7236
  %cmp419 = icmp eq i32 %call418, 0, !dbg !7237
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !7238

if.then421:                                       ; preds = %for.end417
  store i32 0, i32* %status, align 4, !dbg !7239
  br label %if.end422, !dbg !7240

if.end422:                                        ; preds = %if.then421, %for.end417
  %303 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7241
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %303, i32 0, i32 47, !dbg !7243
  %304 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7243
  %cmp423 = icmp ne i32 (i8*, i64, i64, i8*)* %304, null, !dbg !7244
  br i1 %cmp423, label %if.then425, label %if.end433, !dbg !7245

if.then425:                                       ; preds = %if.end422
  %305 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7246
  %306 = load i64, i64* %progress, align 8, !dbg !7248
  %inc426 = add nsw i64 %306, 1, !dbg !7248
  store i64 %inc426, i64* %progress, align 8, !dbg !7248
  %307 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7249
  %rows427 = getelementptr inbounds %struct._Image, %struct._Image* %307, i32 0, i32 8, !dbg !7250
  %308 = load i64, i64* %rows427, align 8, !dbg !7250
  %call428 = call i32 @SetImageProgress(%struct._Image* %305, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i64 0, i64 0), i64 %306, i64 %308), !dbg !7251
  %cmp429 = icmp eq i32 %call428, 0, !dbg !7252
  br i1 %cmp429, label %if.then431, label %if.end432, !dbg !7253

if.then431:                                       ; preds = %if.then425
  store i32 0, i32* %status, align 4, !dbg !7254
  br label %if.end432, !dbg !7255

if.end432:                                        ; preds = %if.then431, %if.then425
  br label %if.end433, !dbg !7256

if.end433:                                        ; preds = %if.end432, %if.end422
  br label %for.inc434, !dbg !7257

for.inc434:                                       ; preds = %if.end433
  %309 = load i64, i64* %y, align 8, !dbg !7258
  %inc435 = add nsw i64 %309, 1, !dbg !7258
  store i64 %inc435, i64* %y, align 8, !dbg !7258
  br label %for.cond, !dbg !7259, !llvm.loop !7260

for.end436:                                       ; preds = %if.then21, %if.then, %for.cond
  %310 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7262
  %rows437 = getelementptr inbounds %struct._Image, %struct._Image* %310, i32 0, i32 8, !dbg !7264
  %311 = load i64, i64* %rows437, align 8, !dbg !7264
  %sub438 = sub nsw i64 %311, 1, !dbg !7265
  store i64 %sub438, i64* %y, align 8, !dbg !7266
  br label %for.cond439, !dbg !7267

for.cond439:                                      ; preds = %for.inc932, %for.end436
  %312 = load i64, i64* %y, align 8, !dbg !7268
  %cmp440 = icmp sge i64 %312, 0, !dbg !7270
  br i1 %cmp440, label %for.body442, label %for.end934, !dbg !7271

for.body442:                                      ; preds = %for.cond439
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p443, metadata !7272, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.declare(metadata i16** %p_indexes444, metadata !7275, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q445, metadata !7277, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.declare(metadata i16** %q_indexes446, metadata !7279, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.declare(metadata i64* %x447, metadata !7281, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.declare(metadata i64* %r448, metadata !7283, metadata !DIExpression()), !dbg !7284
  %313 = load i32, i32* %status, align 4, !dbg !7285
  %cmp449 = icmp eq i32 %313, 0, !dbg !7287
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !7288

if.then451:                                       ; preds = %for.body442
  br label %for.end934, !dbg !7289

if.end452:                                        ; preds = %for.body442
  %314 = load %struct._CacheView*, %struct._CacheView** %virt_view, align 8, !dbg !7290
  %315 = load i64, i64* %offx, align 8, !dbg !7291
  %sub453 = sub nsw i64 0, %315, !dbg !7292
  %316 = load i64, i64* %y, align 8, !dbg !7293
  %317 = load i64, i64* %virt_width, align 8, !dbg !7294
  %318 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7295
  %y454 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %318, i32 0, i32 4, !dbg !7296
  %319 = load i64, i64* %y454, align 8, !dbg !7296
  %add455 = add i64 %319, 1, !dbg !7297
  %320 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7298
  %call456 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %314, i64 %sub453, i64 %316, i64 %317, i64 %add455, %struct._ExceptionInfo* %320), !dbg !7299
  store %struct._PixelPacket* %call456, %struct._PixelPacket** %p443, align 8, !dbg !7300
  %321 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !7301
  %322 = load i64, i64* %y, align 8, !dbg !7302
  %323 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7303
  %columns457 = getelementptr inbounds %struct._Image, %struct._Image* %323, i32 0, i32 7, !dbg !7304
  %324 = load i64, i64* %columns457, align 8, !dbg !7304
  %325 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7305
  %call458 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %321, i64 0, i64 %322, i64 %324, i64 1, %struct._ExceptionInfo* %325), !dbg !7306
  store %struct._PixelPacket* %call458, %struct._PixelPacket** %q445, align 8, !dbg !7307
  %326 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7308
  %cmp459 = icmp eq %struct._PixelPacket* %326, null, !dbg !7310
  br i1 %cmp459, label %if.then464, label %lor.lhs.false461, !dbg !7311

lor.lhs.false461:                                 ; preds = %if.end452
  %327 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7312
  %cmp462 = icmp eq %struct._PixelPacket* %327, null, !dbg !7313
  br i1 %cmp462, label %if.then464, label %if.end465, !dbg !7314

if.then464:                                       ; preds = %lor.lhs.false461, %if.end452
  store i32 0, i32* %status, align 4, !dbg !7315
  br label %if.end465, !dbg !7316

if.end465:                                        ; preds = %if.then464, %lor.lhs.false461
  %328 = load i32, i32* %status, align 4, !dbg !7317
  %cmp466 = icmp eq i32 %328, 0, !dbg !7319
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !7320

if.then468:                                       ; preds = %if.end465
  br label %for.end934, !dbg !7321

if.end469:                                        ; preds = %if.end465
  %329 = load %struct._CacheView*, %struct._CacheView** %virt_view, align 8, !dbg !7322
  %call470 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %329), !dbg !7323
  store i16* %call470, i16** %p_indexes444, align 8, !dbg !7324
  %330 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !7325
  %call471 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %330), !dbg !7326
  store i16* %call471, i16** %q_indexes446, align 8, !dbg !7327
  %331 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7328
  %columns472 = getelementptr inbounds %struct._Image, %struct._Image* %331, i32 0, i32 7, !dbg !7329
  %332 = load i64, i64* %columns472, align 8, !dbg !7329
  %sub473 = sub i64 %332, 1, !dbg !7330
  %333 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7331
  %add.ptr474 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %333, i64 %sub473, !dbg !7331
  store %struct._PixelPacket* %add.ptr474, %struct._PixelPacket** %p443, align 8, !dbg !7331
  %334 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7332
  %columns475 = getelementptr inbounds %struct._Image, %struct._Image* %334, i32 0, i32 7, !dbg !7333
  %335 = load i64, i64* %columns475, align 8, !dbg !7333
  %sub476 = sub i64 %335, 1, !dbg !7334
  %336 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7335
  %add.ptr477 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %336, i64 %sub476, !dbg !7335
  store %struct._PixelPacket* %add.ptr477, %struct._PixelPacket** %q445, align 8, !dbg !7335
  %337 = load i64, i64* %offx, align 8, !dbg !7336
  store i64 %337, i64* %r448, align 8, !dbg !7337
  %338 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7338
  %columns478 = getelementptr inbounds %struct._Image, %struct._Image* %338, i32 0, i32 7, !dbg !7340
  %339 = load i64, i64* %columns478, align 8, !dbg !7340
  %sub479 = sub nsw i64 %339, 1, !dbg !7341
  store i64 %sub479, i64* %x447, align 8, !dbg !7342
  br label %for.cond480, !dbg !7343

for.cond480:                                      ; preds = %for.inc913, %if.end469
  %340 = load i64, i64* %x447, align 8, !dbg !7344
  %cmp481 = icmp sge i64 %340, 0, !dbg !7346
  br i1 %cmp481, label %for.body483, label %for.end914, !dbg !7347

for.body483:                                      ; preds = %for.cond480
  call void @llvm.dbg.declare(metadata i64* %v484, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.declare(metadata i64* %u485, metadata !7351, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.declare(metadata double** %k486, metadata !7353, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %k_pixels487, metadata !7355, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.declare(metadata i16** %k_indexes488, metadata !7357, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %result489, metadata !7359, metadata !DIExpression()), !dbg !7360
  %341 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7361
  call void @GetMagickPixelPacket(%struct._Image* %341, %struct._MagickPixelPacket* %result489), !dbg !7362
  %342 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7363
  %343 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7364
  %344 = load i16*, i16** %q_indexes446, align 8, !dbg !7365
  call void @SetMagickPixelPacket(%struct._Image* %342, %struct._PixelPacket* %343, i16* %344, %struct._MagickPixelPacket* %result489), !dbg !7366
  %345 = load i32, i32* %method.addr, align 4, !dbg !7367
  %cmp490 = icmp ne i32 %345, 21, !dbg !7369
  br i1 %cmp490, label %if.then492, label %if.end496, !dbg !7370

if.then492:                                       ; preds = %for.body483
  %opacity493 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7371
  %346 = load float, float* %opacity493, align 4, !dbg !7371
  %sub494 = fsub float 6.553500e+04, %346, !dbg !7372
  %opacity495 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7373
  store float %sub494, float* %opacity495, align 4, !dbg !7374
  br label %if.end496, !dbg !7375

if.end496:                                        ; preds = %if.then492, %for.body483
  %347 = load i32, i32* %method.addr, align 4, !dbg !7376
  switch i32 %347, label %sw.default791 [
    i32 7, label %sw.bb497
    i32 21, label %sw.bb689
  ], !dbg !7377

sw.bb497:                                         ; preds = %if.end496
  %348 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7378
  %values498 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %348, i32 0, i32 5, !dbg !7380
  %349 = load double*, double** %values498, align 8, !dbg !7380
  %350 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7381
  %width499 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %350, i32 0, i32 1, !dbg !7382
  %351 = load i64, i64* %width499, align 8, !dbg !7382
  %352 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7383
  %y500 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %352, i32 0, i32 4, !dbg !7384
  %353 = load i64, i64* %y500, align 8, !dbg !7384
  %add501 = add nsw i64 %353, 1, !dbg !7385
  %mul502 = mul i64 %351, %add501, !dbg !7386
  %sub503 = sub i64 %mul502, 1, !dbg !7387
  %arrayidx504 = getelementptr inbounds double, double* %349, i64 %sub503, !dbg !7378
  store double* %arrayidx504, double** %k486, align 8, !dbg !7388
  %354 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7389
  store %struct._PixelPacket* %354, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7390
  %355 = load i16*, i16** %p_indexes444, align 8, !dbg !7391
  store i16* %355, i16** %k_indexes488, align 8, !dbg !7392
  %356 = load i64, i64* %offy, align 8, !dbg !7393
  store i64 %356, i64* %v484, align 8, !dbg !7395
  br label %for.cond505, !dbg !7396

for.cond505:                                      ; preds = %for.inc589, %sw.bb497
  %357 = load i64, i64* %v484, align 8, !dbg !7397
  %358 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7399
  %height506 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %358, i32 0, i32 2, !dbg !7400
  %359 = load i64, i64* %height506, align 8, !dbg !7400
  %cmp507 = icmp slt i64 %357, %359, !dbg !7401
  br i1 %cmp507, label %for.body509, label %for.end591, !dbg !7402

for.body509:                                      ; preds = %for.cond505
  store i64 0, i64* %u485, align 8, !dbg !7403
  br label %for.cond510, !dbg !7406

for.cond510:                                      ; preds = %for.inc583, %for.body509
  %360 = load i64, i64* %u485, align 8, !dbg !7407
  %361 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7409
  %width511 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %361, i32 0, i32 1, !dbg !7410
  %362 = load i64, i64* %width511, align 8, !dbg !7410
  %cmp512 = icmp slt i64 %360, %362, !dbg !7411
  br i1 %cmp512, label %for.body514, label %for.end586, !dbg !7412

for.body514:                                      ; preds = %for.cond510
  %363 = load double*, double** %k486, align 8, !dbg !7413
  %364 = load double, double* %363, align 8, !dbg !7413
  %365 = load double*, double** %k486, align 8, !dbg !7413
  %366 = load double, double* %365, align 8, !dbg !7413
  %cmp515 = fcmp une double %364, %366, !dbg !7413
  br i1 %cmp515, label %cond.true517, label %cond.false518, !dbg !7416

cond.true517:                                     ; preds = %for.body514
  br i1 true, label %if.then519, label %if.end520, !dbg !7413

cond.false518:                                    ; preds = %for.body514
  br i1 false, label %if.then519, label %if.end520, !dbg !7416

if.then519:                                       ; preds = %cond.false518, %cond.true517
  br label %for.inc583, !dbg !7417

if.end520:                                        ; preds = %cond.false518, %cond.true517
  %red521 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 5, !dbg !7418
  %367 = load float, float* %red521, align 8, !dbg !7418
  %conv522 = fpext float %367 to double, !dbg !7418
  %368 = load double*, double** %k486, align 8, !dbg !7418
  %369 = load double, double* %368, align 8, !dbg !7418
  %370 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7418
  %371 = load i64, i64* %u485, align 8, !dbg !7418
  %arrayidx523 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %370, i64 %371, !dbg !7418
  %red524 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx523, i32 0, i32 2, !dbg !7418
  %372 = load i16, i16* %red524, align 2, !dbg !7418
  %conv525 = zext i16 %372 to i32, !dbg !7418
  %conv526 = sitofp i32 %conv525 to double, !dbg !7418
  %add527 = fadd double %369, %conv526, !dbg !7418
  %call528 = call double @MagickMin(double %conv522, double %add527), !dbg !7418
  %conv529 = fptrunc double %call528 to float, !dbg !7418
  %red530 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 5, !dbg !7418
  store float %conv529, float* %red530, align 8, !dbg !7418
  %green531 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 6, !dbg !7419
  %373 = load float, float* %green531, align 4, !dbg !7419
  %conv532 = fpext float %373 to double, !dbg !7419
  %374 = load double*, double** %k486, align 8, !dbg !7419
  %375 = load double, double* %374, align 8, !dbg !7419
  %376 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7419
  %377 = load i64, i64* %u485, align 8, !dbg !7419
  %arrayidx533 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %376, i64 %377, !dbg !7419
  %green534 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx533, i32 0, i32 1, !dbg !7419
  %378 = load i16, i16* %green534, align 2, !dbg !7419
  %conv535 = zext i16 %378 to i32, !dbg !7419
  %conv536 = sitofp i32 %conv535 to double, !dbg !7419
  %add537 = fadd double %375, %conv536, !dbg !7419
  %call538 = call double @MagickMin(double %conv532, double %add537), !dbg !7419
  %conv539 = fptrunc double %call538 to float, !dbg !7419
  %green540 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 6, !dbg !7419
  store float %conv539, float* %green540, align 4, !dbg !7419
  %blue541 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 7, !dbg !7420
  %379 = load float, float* %blue541, align 8, !dbg !7420
  %conv542 = fpext float %379 to double, !dbg !7420
  %380 = load double*, double** %k486, align 8, !dbg !7420
  %381 = load double, double* %380, align 8, !dbg !7420
  %382 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7420
  %383 = load i64, i64* %u485, align 8, !dbg !7420
  %arrayidx543 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %382, i64 %383, !dbg !7420
  %blue544 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx543, i32 0, i32 0, !dbg !7420
  %384 = load i16, i16* %blue544, align 2, !dbg !7420
  %conv545 = zext i16 %384 to i32, !dbg !7420
  %conv546 = sitofp i32 %conv545 to double, !dbg !7420
  %add547 = fadd double %381, %conv546, !dbg !7420
  %call548 = call double @MagickMin(double %conv542, double %add547), !dbg !7420
  %conv549 = fptrunc double %call548 to float, !dbg !7420
  %blue550 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 7, !dbg !7420
  store float %conv549, float* %blue550, align 8, !dbg !7420
  %opacity551 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7421
  %385 = load float, float* %opacity551, align 4, !dbg !7421
  %conv552 = fpext float %385 to double, !dbg !7421
  %386 = load double*, double** %k486, align 8, !dbg !7421
  %387 = load double, double* %386, align 8, !dbg !7421
  %add553 = fadd double %387, 6.553500e+04, !dbg !7421
  %388 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7421
  %389 = load i64, i64* %u485, align 8, !dbg !7421
  %arrayidx554 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %388, i64 %389, !dbg !7421
  %opacity555 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx554, i32 0, i32 3, !dbg !7421
  %390 = load i16, i16* %opacity555, align 2, !dbg !7421
  %conv556 = zext i16 %390 to i32, !dbg !7421
  %conv557 = sitofp i32 %conv556 to double, !dbg !7421
  %sub558 = fsub double %add553, %conv557, !dbg !7421
  %call559 = call double @MagickMin(double %conv552, double %sub558), !dbg !7421
  %conv560 = fptrunc double %call559 to float, !dbg !7421
  %opacity561 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7421
  store float %conv560, float* %opacity561, align 4, !dbg !7421
  %391 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7422
  %colorspace562 = getelementptr inbounds %struct._Image, %struct._Image* %391, i32 0, i32 1, !dbg !7424
  %392 = load i32, i32* %colorspace562, align 4, !dbg !7424
  %cmp563 = icmp eq i32 %392, 12, !dbg !7425
  br i1 %cmp563, label %if.then565, label %if.end582, !dbg !7426

if.then565:                                       ; preds = %if.end520
  %index566 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 9, !dbg !7427
  %393 = load float, float* %index566, align 8, !dbg !7427
  %conv567 = fpext float %393 to double, !dbg !7427
  %394 = load double*, double** %k486, align 8, !dbg !7427
  %395 = load double, double* %394, align 8, !dbg !7427
  %396 = load i16*, i16** %k_indexes488, align 8, !dbg !7427
  %397 = load i64, i64* %u485, align 8, !dbg !7427
  %add.ptr568 = getelementptr inbounds i16, i16* %396, i64 %397, !dbg !7427
  %cmp569 = icmp eq i16* %add.ptr568, null, !dbg !7427
  br i1 %cmp569, label %cond.true571, label %cond.false572, !dbg !7427

cond.true571:                                     ; preds = %if.then565
  br label %cond.end575, !dbg !7427

cond.false572:                                    ; preds = %if.then565
  %398 = load i16*, i16** %k_indexes488, align 8, !dbg !7427
  %399 = load i64, i64* %u485, align 8, !dbg !7427
  %add.ptr573 = getelementptr inbounds i16, i16* %398, i64 %399, !dbg !7427
  %400 = load i16, i16* %add.ptr573, align 2, !dbg !7427
  %conv574 = zext i16 %400 to i32, !dbg !7427
  br label %cond.end575, !dbg !7427

cond.end575:                                      ; preds = %cond.false572, %cond.true571
  %cond576 = phi i32 [ 0, %cond.true571 ], [ %conv574, %cond.false572 ], !dbg !7427
  %conv577 = sitofp i32 %cond576 to double, !dbg !7427
  %add578 = fadd double %395, %conv577, !dbg !7427
  %call579 = call double @MagickMin(double %conv567, double %add578), !dbg !7427
  %conv580 = fptrunc double %call579 to float, !dbg !7427
  %index581 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 9, !dbg !7427
  store float %conv580, float* %index581, align 8, !dbg !7427
  br label %if.end582, !dbg !7427

if.end582:                                        ; preds = %cond.end575, %if.end520
  br label %for.inc583, !dbg !7428

for.inc583:                                       ; preds = %if.end582, %if.then519
  %401 = load i64, i64* %u485, align 8, !dbg !7429
  %inc584 = add nsw i64 %401, 1, !dbg !7429
  store i64 %inc584, i64* %u485, align 8, !dbg !7429
  %402 = load double*, double** %k486, align 8, !dbg !7430
  %incdec.ptr585 = getelementptr inbounds double, double* %402, i32 -1, !dbg !7430
  store double* %incdec.ptr585, double** %k486, align 8, !dbg !7430
  br label %for.cond510, !dbg !7431, !llvm.loop !7432

for.end586:                                       ; preds = %for.cond510
  %403 = load i64, i64* %virt_width, align 8, !dbg !7434
  %404 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7435
  %add.ptr587 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %404, i64 %403, !dbg !7435
  store %struct._PixelPacket* %add.ptr587, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7435
  %405 = load i64, i64* %virt_width, align 8, !dbg !7436
  %406 = load i16*, i16** %k_indexes488, align 8, !dbg !7437
  %add.ptr588 = getelementptr inbounds i16, i16* %406, i64 %405, !dbg !7437
  store i16* %add.ptr588, i16** %k_indexes488, align 8, !dbg !7437
  br label %for.inc589, !dbg !7438

for.inc589:                                       ; preds = %for.end586
  %407 = load i64, i64* %v484, align 8, !dbg !7439
  %inc590 = add nsw i64 %407, 1, !dbg !7439
  store i64 %inc590, i64* %v484, align 8, !dbg !7439
  br label %for.cond505, !dbg !7440, !llvm.loop !7441

for.end591:                                       ; preds = %for.cond505
  %408 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7443
  %values592 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %408, i32 0, i32 5, !dbg !7444
  %409 = load double*, double** %values592, align 8, !dbg !7444
  %410 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7445
  %width593 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %410, i32 0, i32 1, !dbg !7446
  %411 = load i64, i64* %width593, align 8, !dbg !7446
  %412 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7447
  %y594 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %412, i32 0, i32 4, !dbg !7448
  %413 = load i64, i64* %y594, align 8, !dbg !7448
  %mul595 = mul i64 %411, %413, !dbg !7449
  %414 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7450
  %x596 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %414, i32 0, i32 3, !dbg !7451
  %415 = load i64, i64* %x596, align 8, !dbg !7451
  %add597 = add i64 %mul595, %415, !dbg !7452
  %sub598 = sub i64 %add597, 1, !dbg !7453
  %arrayidx599 = getelementptr inbounds double, double* %409, i64 %sub598, !dbg !7443
  store double* %arrayidx599, double** %k486, align 8, !dbg !7454
  %416 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7455
  %417 = load i64, i64* %offx, align 8, !dbg !7456
  %idx.neg600 = sub i64 0, %417, !dbg !7457
  %add.ptr601 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %416, i64 %idx.neg600, !dbg !7457
  store %struct._PixelPacket* %add.ptr601, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7458
  %418 = load i16*, i16** %q_indexes446, align 8, !dbg !7459
  %419 = load i64, i64* %offx, align 8, !dbg !7460
  %idx.neg602 = sub i64 0, %419, !dbg !7461
  %add.ptr603 = getelementptr inbounds i16, i16* %418, i64 %idx.neg602, !dbg !7461
  store i16* %add.ptr603, i16** %k_indexes488, align 8, !dbg !7462
  %420 = load i64, i64* %offx, align 8, !dbg !7463
  %add604 = add nsw i64 %420, 1, !dbg !7465
  store i64 %add604, i64* %u485, align 8, !dbg !7466
  br label %for.cond605, !dbg !7467

for.cond605:                                      ; preds = %for.inc685, %for.end591
  %421 = load i64, i64* %u485, align 8, !dbg !7468
  %422 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7470
  %width606 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %422, i32 0, i32 1, !dbg !7471
  %423 = load i64, i64* %width606, align 8, !dbg !7471
  %cmp607 = icmp slt i64 %421, %423, !dbg !7472
  br i1 %cmp607, label %for.body609, label %for.end688, !dbg !7473

for.body609:                                      ; preds = %for.cond605
  %424 = load i64, i64* %x447, align 8, !dbg !7474
  %425 = load i64, i64* %u485, align 8, !dbg !7477
  %add610 = add nsw i64 %424, %425, !dbg !7478
  %426 = load i64, i64* %offx, align 8, !dbg !7479
  %sub611 = sub nsw i64 %add610, %426, !dbg !7480
  %427 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7481
  %columns612 = getelementptr inbounds %struct._Image, %struct._Image* %427, i32 0, i32 7, !dbg !7482
  %428 = load i64, i64* %columns612, align 8, !dbg !7482
  %cmp613 = icmp sge i64 %sub611, %428, !dbg !7483
  br i1 %cmp613, label %if.then615, label %if.end616, !dbg !7484

if.then615:                                       ; preds = %for.body609
  br label %for.inc685, !dbg !7485

if.end616:                                        ; preds = %for.body609
  %429 = load double*, double** %k486, align 8, !dbg !7486
  %430 = load double, double* %429, align 8, !dbg !7486
  %431 = load double*, double** %k486, align 8, !dbg !7486
  %432 = load double, double* %431, align 8, !dbg !7486
  %cmp617 = fcmp une double %430, %432, !dbg !7486
  br i1 %cmp617, label %cond.true619, label %cond.false620, !dbg !7488

cond.true619:                                     ; preds = %if.end616
  br i1 true, label %if.then621, label %if.end622, !dbg !7486

cond.false620:                                    ; preds = %if.end616
  br i1 false, label %if.then621, label %if.end622, !dbg !7488

if.then621:                                       ; preds = %cond.false620, %cond.true619
  br label %for.inc685, !dbg !7489

if.end622:                                        ; preds = %cond.false620, %cond.true619
  %red623 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 5, !dbg !7490
  %433 = load float, float* %red623, align 8, !dbg !7490
  %conv624 = fpext float %433 to double, !dbg !7490
  %434 = load double*, double** %k486, align 8, !dbg !7490
  %435 = load double, double* %434, align 8, !dbg !7490
  %436 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7490
  %437 = load i64, i64* %u485, align 8, !dbg !7490
  %arrayidx625 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %436, i64 %437, !dbg !7490
  %red626 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx625, i32 0, i32 2, !dbg !7490
  %438 = load i16, i16* %red626, align 2, !dbg !7490
  %conv627 = zext i16 %438 to i32, !dbg !7490
  %conv628 = sitofp i32 %conv627 to double, !dbg !7490
  %add629 = fadd double %435, %conv628, !dbg !7490
  %call630 = call double @MagickMin(double %conv624, double %add629), !dbg !7490
  %conv631 = fptrunc double %call630 to float, !dbg !7490
  %red632 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 5, !dbg !7490
  store float %conv631, float* %red632, align 8, !dbg !7490
  %green633 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 6, !dbg !7491
  %439 = load float, float* %green633, align 4, !dbg !7491
  %conv634 = fpext float %439 to double, !dbg !7491
  %440 = load double*, double** %k486, align 8, !dbg !7491
  %441 = load double, double* %440, align 8, !dbg !7491
  %442 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7491
  %443 = load i64, i64* %u485, align 8, !dbg !7491
  %arrayidx635 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %442, i64 %443, !dbg !7491
  %green636 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx635, i32 0, i32 1, !dbg !7491
  %444 = load i16, i16* %green636, align 2, !dbg !7491
  %conv637 = zext i16 %444 to i32, !dbg !7491
  %conv638 = sitofp i32 %conv637 to double, !dbg !7491
  %add639 = fadd double %441, %conv638, !dbg !7491
  %call640 = call double @MagickMin(double %conv634, double %add639), !dbg !7491
  %conv641 = fptrunc double %call640 to float, !dbg !7491
  %green642 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 6, !dbg !7491
  store float %conv641, float* %green642, align 4, !dbg !7491
  %blue643 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 7, !dbg !7492
  %445 = load float, float* %blue643, align 8, !dbg !7492
  %conv644 = fpext float %445 to double, !dbg !7492
  %446 = load double*, double** %k486, align 8, !dbg !7492
  %447 = load double, double* %446, align 8, !dbg !7492
  %448 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7492
  %449 = load i64, i64* %u485, align 8, !dbg !7492
  %arrayidx645 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %448, i64 %449, !dbg !7492
  %blue646 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx645, i32 0, i32 0, !dbg !7492
  %450 = load i16, i16* %blue646, align 2, !dbg !7492
  %conv647 = zext i16 %450 to i32, !dbg !7492
  %conv648 = sitofp i32 %conv647 to double, !dbg !7492
  %add649 = fadd double %447, %conv648, !dbg !7492
  %call650 = call double @MagickMin(double %conv644, double %add649), !dbg !7492
  %conv651 = fptrunc double %call650 to float, !dbg !7492
  %blue652 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 7, !dbg !7492
  store float %conv651, float* %blue652, align 8, !dbg !7492
  %opacity653 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7493
  %451 = load float, float* %opacity653, align 4, !dbg !7493
  %conv654 = fpext float %451 to double, !dbg !7493
  %452 = load double*, double** %k486, align 8, !dbg !7493
  %453 = load double, double* %452, align 8, !dbg !7493
  %add655 = fadd double %453, 6.553500e+04, !dbg !7493
  %454 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7493
  %455 = load i64, i64* %u485, align 8, !dbg !7493
  %arrayidx656 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %454, i64 %455, !dbg !7493
  %opacity657 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx656, i32 0, i32 3, !dbg !7493
  %456 = load i16, i16* %opacity657, align 2, !dbg !7493
  %conv658 = zext i16 %456 to i32, !dbg !7493
  %conv659 = sitofp i32 %conv658 to double, !dbg !7493
  %sub660 = fsub double %add655, %conv659, !dbg !7493
  %call661 = call double @MagickMin(double %conv654, double %sub660), !dbg !7493
  %conv662 = fptrunc double %call661 to float, !dbg !7493
  %opacity663 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7493
  store float %conv662, float* %opacity663, align 4, !dbg !7493
  %457 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7494
  %colorspace664 = getelementptr inbounds %struct._Image, %struct._Image* %457, i32 0, i32 1, !dbg !7496
  %458 = load i32, i32* %colorspace664, align 4, !dbg !7496
  %cmp665 = icmp eq i32 %458, 12, !dbg !7497
  br i1 %cmp665, label %if.then667, label %if.end684, !dbg !7498

if.then667:                                       ; preds = %if.end622
  %index668 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 9, !dbg !7499
  %459 = load float, float* %index668, align 8, !dbg !7499
  %conv669 = fpext float %459 to double, !dbg !7499
  %460 = load double*, double** %k486, align 8, !dbg !7499
  %461 = load double, double* %460, align 8, !dbg !7499
  %462 = load i16*, i16** %k_indexes488, align 8, !dbg !7499
  %463 = load i64, i64* %u485, align 8, !dbg !7499
  %add.ptr670 = getelementptr inbounds i16, i16* %462, i64 %463, !dbg !7499
  %cmp671 = icmp eq i16* %add.ptr670, null, !dbg !7499
  br i1 %cmp671, label %cond.true673, label %cond.false674, !dbg !7499

cond.true673:                                     ; preds = %if.then667
  br label %cond.end677, !dbg !7499

cond.false674:                                    ; preds = %if.then667
  %464 = load i16*, i16** %k_indexes488, align 8, !dbg !7499
  %465 = load i64, i64* %u485, align 8, !dbg !7499
  %add.ptr675 = getelementptr inbounds i16, i16* %464, i64 %465, !dbg !7499
  %466 = load i16, i16* %add.ptr675, align 2, !dbg !7499
  %conv676 = zext i16 %466 to i32, !dbg !7499
  br label %cond.end677, !dbg !7499

cond.end677:                                      ; preds = %cond.false674, %cond.true673
  %cond678 = phi i32 [ 0, %cond.true673 ], [ %conv676, %cond.false674 ], !dbg !7499
  %conv679 = sitofp i32 %cond678 to double, !dbg !7499
  %add680 = fadd double %461, %conv679, !dbg !7499
  %call681 = call double @MagickMin(double %conv669, double %add680), !dbg !7499
  %conv682 = fptrunc double %call681 to float, !dbg !7499
  %index683 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 9, !dbg !7499
  store float %conv682, float* %index683, align 8, !dbg !7499
  br label %if.end684, !dbg !7499

if.end684:                                        ; preds = %cond.end677, %if.end622
  br label %for.inc685, !dbg !7500

for.inc685:                                       ; preds = %if.end684, %if.then621, %if.then615
  %467 = load i64, i64* %u485, align 8, !dbg !7501
  %inc686 = add nsw i64 %467, 1, !dbg !7501
  store i64 %inc686, i64* %u485, align 8, !dbg !7501
  %468 = load double*, double** %k486, align 8, !dbg !7502
  %incdec.ptr687 = getelementptr inbounds double, double* %468, i32 -1, !dbg !7502
  store double* %incdec.ptr687, double** %k486, align 8, !dbg !7502
  br label %for.cond605, !dbg !7503, !llvm.loop !7504

for.end688:                                       ; preds = %for.cond605
  br label %sw.epilog792, !dbg !7506

sw.bb689:                                         ; preds = %if.end496
  %469 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7507
  %values690 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %469, i32 0, i32 5, !dbg !7508
  %470 = load double*, double** %values690, align 8, !dbg !7508
  %471 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7509
  %width691 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %471, i32 0, i32 1, !dbg !7510
  %472 = load i64, i64* %width691, align 8, !dbg !7510
  %473 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7511
  %y692 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %473, i32 0, i32 4, !dbg !7512
  %474 = load i64, i64* %y692, align 8, !dbg !7512
  %add693 = add nsw i64 %474, 1, !dbg !7513
  %mul694 = mul i64 %472, %add693, !dbg !7514
  %sub695 = sub i64 %mul694, 1, !dbg !7515
  %arrayidx696 = getelementptr inbounds double, double* %470, i64 %sub695, !dbg !7507
  store double* %arrayidx696, double** %k486, align 8, !dbg !7516
  %475 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7517
  store %struct._PixelPacket* %475, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7518
  %476 = load i16*, i16** %p_indexes444, align 8, !dbg !7519
  store i16* %476, i16** %k_indexes488, align 8, !dbg !7520
  %477 = load i64, i64* %offy, align 8, !dbg !7521
  store i64 %477, i64* %v484, align 8, !dbg !7523
  br label %for.cond697, !dbg !7524

for.cond697:                                      ; preds = %for.inc736, %sw.bb689
  %478 = load i64, i64* %v484, align 8, !dbg !7525
  %479 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7527
  %height698 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %479, i32 0, i32 2, !dbg !7528
  %480 = load i64, i64* %height698, align 8, !dbg !7528
  %cmp699 = icmp slt i64 %478, %480, !dbg !7529
  br i1 %cmp699, label %for.body701, label %for.end738, !dbg !7530

for.body701:                                      ; preds = %for.cond697
  store i64 0, i64* %u485, align 8, !dbg !7531
  br label %for.cond702, !dbg !7534

for.cond702:                                      ; preds = %for.inc730, %for.body701
  %481 = load i64, i64* %u485, align 8, !dbg !7535
  %482 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7537
  %width703 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %482, i32 0, i32 1, !dbg !7538
  %483 = load i64, i64* %width703, align 8, !dbg !7538
  %cmp704 = icmp slt i64 %481, %483, !dbg !7539
  br i1 %cmp704, label %for.body706, label %for.end733, !dbg !7540

for.body706:                                      ; preds = %for.cond702
  %484 = load double*, double** %k486, align 8, !dbg !7541
  %485 = load double, double* %484, align 8, !dbg !7541
  %486 = load double*, double** %k486, align 8, !dbg !7541
  %487 = load double, double* %486, align 8, !dbg !7541
  %cmp707 = fcmp une double %485, %487, !dbg !7541
  br i1 %cmp707, label %cond.true709, label %cond.false710, !dbg !7544

cond.true709:                                     ; preds = %for.body706
  br i1 true, label %if.then711, label %if.end712, !dbg !7541

cond.false710:                                    ; preds = %for.body706
  br i1 false, label %if.then711, label %if.end712, !dbg !7544

if.then711:                                       ; preds = %cond.false710, %cond.true709
  br label %for.inc730, !dbg !7545

if.end712:                                        ; preds = %cond.false710, %cond.true709
  %opacity713 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7546
  %488 = load float, float* %opacity713, align 4, !dbg !7546
  %conv714 = fpext float %488 to double, !dbg !7548
  %489 = load double*, double** %k486, align 8, !dbg !7549
  %490 = load double, double* %489, align 8, !dbg !7550
  %491 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7551
  %492 = load i64, i64* %u485, align 8, !dbg !7552
  %arrayidx715 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %491, i64 %492, !dbg !7551
  %opacity716 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx715, i32 0, i32 3, !dbg !7553
  %493 = load i16, i16* %opacity716, align 2, !dbg !7553
  %conv717 = zext i16 %493 to i32, !dbg !7551
  %conv718 = sitofp i32 %conv717 to double, !dbg !7551
  %add719 = fadd double %490, %conv718, !dbg !7554
  %cmp720 = fcmp ogt double %conv714, %add719, !dbg !7555
  br i1 %cmp720, label %if.then722, label %if.end729, !dbg !7556

if.then722:                                       ; preds = %if.end712
  %494 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7557
  %495 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7559
  %496 = load i64, i64* %u485, align 8, !dbg !7560
  %arrayidx723 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %495, i64 %496, !dbg !7559
  %497 = load i16*, i16** %k_indexes488, align 8, !dbg !7561
  %498 = load i64, i64* %u485, align 8, !dbg !7562
  %arrayidx724 = getelementptr inbounds i16, i16* %497, i64 %498, !dbg !7561
  call void @SetMagickPixelPacket(%struct._Image* %494, %struct._PixelPacket* %arrayidx723, i16* %arrayidx724, %struct._MagickPixelPacket* %result489), !dbg !7563
  %499 = load double*, double** %k486, align 8, !dbg !7564
  %500 = load double, double* %499, align 8, !dbg !7565
  %opacity725 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7566
  %501 = load float, float* %opacity725, align 4, !dbg !7567
  %conv726 = fpext float %501 to double, !dbg !7567
  %add727 = fadd double %conv726, %500, !dbg !7567
  %conv728 = fptrunc double %add727 to float, !dbg !7567
  store float %conv728, float* %opacity725, align 4, !dbg !7567
  br label %if.end729, !dbg !7568

if.end729:                                        ; preds = %if.then722, %if.end712
  br label %for.inc730, !dbg !7569

for.inc730:                                       ; preds = %if.end729, %if.then711
  %502 = load i64, i64* %u485, align 8, !dbg !7570
  %inc731 = add nsw i64 %502, 1, !dbg !7570
  store i64 %inc731, i64* %u485, align 8, !dbg !7570
  %503 = load double*, double** %k486, align 8, !dbg !7571
  %incdec.ptr732 = getelementptr inbounds double, double* %503, i32 -1, !dbg !7571
  store double* %incdec.ptr732, double** %k486, align 8, !dbg !7571
  br label %for.cond702, !dbg !7572, !llvm.loop !7573

for.end733:                                       ; preds = %for.cond702
  %504 = load i64, i64* %virt_width, align 8, !dbg !7575
  %505 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7576
  %add.ptr734 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %505, i64 %504, !dbg !7576
  store %struct._PixelPacket* %add.ptr734, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7576
  %506 = load i64, i64* %virt_width, align 8, !dbg !7577
  %507 = load i16*, i16** %k_indexes488, align 8, !dbg !7578
  %add.ptr735 = getelementptr inbounds i16, i16* %507, i64 %506, !dbg !7578
  store i16* %add.ptr735, i16** %k_indexes488, align 8, !dbg !7578
  br label %for.inc736, !dbg !7579

for.inc736:                                       ; preds = %for.end733
  %508 = load i64, i64* %v484, align 8, !dbg !7580
  %inc737 = add nsw i64 %508, 1, !dbg !7580
  store i64 %inc737, i64* %v484, align 8, !dbg !7580
  br label %for.cond697, !dbg !7581, !llvm.loop !7582

for.end738:                                       ; preds = %for.cond697
  %509 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7584
  %values739 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %509, i32 0, i32 5, !dbg !7585
  %510 = load double*, double** %values739, align 8, !dbg !7585
  %511 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7586
  %width740 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %511, i32 0, i32 1, !dbg !7587
  %512 = load i64, i64* %width740, align 8, !dbg !7587
  %513 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7588
  %y741 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %513, i32 0, i32 4, !dbg !7589
  %514 = load i64, i64* %y741, align 8, !dbg !7589
  %mul742 = mul i64 %512, %514, !dbg !7590
  %515 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7591
  %x743 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %515, i32 0, i32 3, !dbg !7592
  %516 = load i64, i64* %x743, align 8, !dbg !7592
  %add744 = add i64 %mul742, %516, !dbg !7593
  %sub745 = sub i64 %add744, 1, !dbg !7594
  %arrayidx746 = getelementptr inbounds double, double* %510, i64 %sub745, !dbg !7584
  store double* %arrayidx746, double** %k486, align 8, !dbg !7595
  %517 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7596
  %518 = load i64, i64* %offx, align 8, !dbg !7597
  %idx.neg747 = sub i64 0, %518, !dbg !7598
  %add.ptr748 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %517, i64 %idx.neg747, !dbg !7598
  store %struct._PixelPacket* %add.ptr748, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7599
  %519 = load i16*, i16** %q_indexes446, align 8, !dbg !7600
  %520 = load i64, i64* %offx, align 8, !dbg !7601
  %idx.neg749 = sub i64 0, %520, !dbg !7602
  %add.ptr750 = getelementptr inbounds i16, i16* %519, i64 %idx.neg749, !dbg !7602
  store i16* %add.ptr750, i16** %k_indexes488, align 8, !dbg !7603
  %521 = load i64, i64* %offx, align 8, !dbg !7604
  %add751 = add nsw i64 %521, 1, !dbg !7606
  store i64 %add751, i64* %u485, align 8, !dbg !7607
  br label %for.cond752, !dbg !7608

for.cond752:                                      ; preds = %for.inc787, %for.end738
  %522 = load i64, i64* %u485, align 8, !dbg !7609
  %523 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7611
  %width753 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %523, i32 0, i32 1, !dbg !7612
  %524 = load i64, i64* %width753, align 8, !dbg !7612
  %cmp754 = icmp slt i64 %522, %524, !dbg !7613
  br i1 %cmp754, label %for.body756, label %for.end790, !dbg !7614

for.body756:                                      ; preds = %for.cond752
  %525 = load i64, i64* %x447, align 8, !dbg !7615
  %526 = load i64, i64* %u485, align 8, !dbg !7618
  %add757 = add nsw i64 %525, %526, !dbg !7619
  %527 = load i64, i64* %offx, align 8, !dbg !7620
  %sub758 = sub nsw i64 %add757, %527, !dbg !7621
  %528 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7622
  %columns759 = getelementptr inbounds %struct._Image, %struct._Image* %528, i32 0, i32 7, !dbg !7623
  %529 = load i64, i64* %columns759, align 8, !dbg !7623
  %cmp760 = icmp sge i64 %sub758, %529, !dbg !7624
  br i1 %cmp760, label %if.then762, label %if.end763, !dbg !7625

if.then762:                                       ; preds = %for.body756
  br label %for.inc787, !dbg !7626

if.end763:                                        ; preds = %for.body756
  %530 = load double*, double** %k486, align 8, !dbg !7627
  %531 = load double, double* %530, align 8, !dbg !7627
  %532 = load double*, double** %k486, align 8, !dbg !7627
  %533 = load double, double* %532, align 8, !dbg !7627
  %cmp764 = fcmp une double %531, %533, !dbg !7627
  br i1 %cmp764, label %cond.true766, label %cond.false767, !dbg !7629

cond.true766:                                     ; preds = %if.end763
  br i1 true, label %if.then768, label %if.end769, !dbg !7627

cond.false767:                                    ; preds = %if.end763
  br i1 false, label %if.then768, label %if.end769, !dbg !7629

if.then768:                                       ; preds = %cond.false767, %cond.true766
  br label %for.inc787, !dbg !7630

if.end769:                                        ; preds = %cond.false767, %cond.true766
  %opacity770 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7631
  %534 = load float, float* %opacity770, align 4, !dbg !7631
  %conv771 = fpext float %534 to double, !dbg !7633
  %535 = load double*, double** %k486, align 8, !dbg !7634
  %536 = load double, double* %535, align 8, !dbg !7635
  %537 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7636
  %538 = load i64, i64* %u485, align 8, !dbg !7637
  %arrayidx772 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %537, i64 %538, !dbg !7636
  %opacity773 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx772, i32 0, i32 3, !dbg !7638
  %539 = load i16, i16* %opacity773, align 2, !dbg !7638
  %conv774 = zext i16 %539 to i32, !dbg !7636
  %conv775 = sitofp i32 %conv774 to double, !dbg !7636
  %add776 = fadd double %536, %conv775, !dbg !7639
  %cmp777 = fcmp ogt double %conv771, %add776, !dbg !7640
  br i1 %cmp777, label %if.then779, label %if.end786, !dbg !7641

if.then779:                                       ; preds = %if.end769
  %540 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7642
  %541 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels487, align 8, !dbg !7644
  %542 = load i64, i64* %u485, align 8, !dbg !7645
  %arrayidx780 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %541, i64 %542, !dbg !7644
  %543 = load i16*, i16** %k_indexes488, align 8, !dbg !7646
  %544 = load i64, i64* %u485, align 8, !dbg !7647
  %arrayidx781 = getelementptr inbounds i16, i16* %543, i64 %544, !dbg !7646
  call void @SetMagickPixelPacket(%struct._Image* %540, %struct._PixelPacket* %arrayidx780, i16* %arrayidx781, %struct._MagickPixelPacket* %result489), !dbg !7648
  %545 = load double*, double** %k486, align 8, !dbg !7649
  %546 = load double, double* %545, align 8, !dbg !7650
  %opacity782 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7651
  %547 = load float, float* %opacity782, align 4, !dbg !7652
  %conv783 = fpext float %547 to double, !dbg !7652
  %add784 = fadd double %conv783, %546, !dbg !7652
  %conv785 = fptrunc double %add784 to float, !dbg !7652
  store float %conv785, float* %opacity782, align 4, !dbg !7652
  br label %if.end786, !dbg !7653

if.end786:                                        ; preds = %if.then779, %if.end769
  br label %for.inc787, !dbg !7654

for.inc787:                                       ; preds = %if.end786, %if.then768, %if.then762
  %548 = load i64, i64* %u485, align 8, !dbg !7655
  %inc788 = add nsw i64 %548, 1, !dbg !7655
  store i64 %inc788, i64* %u485, align 8, !dbg !7655
  %549 = load double*, double** %k486, align 8, !dbg !7656
  %incdec.ptr789 = getelementptr inbounds double, double* %549, i32 -1, !dbg !7656
  store double* %incdec.ptr789, double** %k486, align 8, !dbg !7656
  br label %for.cond752, !dbg !7657, !llvm.loop !7658

for.end790:                                       ; preds = %for.cond752
  br label %sw.epilog792, !dbg !7660

sw.default791:                                    ; preds = %if.end496
  br label %sw.epilog792, !dbg !7661

sw.epilog792:                                     ; preds = %sw.default791, %for.end790, %for.end688
  %550 = load i32, i32* %method.addr, align 4, !dbg !7662
  switch i32 %550, label %sw.default794 [
    i32 21, label %sw.bb793
  ], !dbg !7663

sw.bb793:                                         ; preds = %sw.epilog792
  %551 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7664
  %552 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7666
  %553 = load i16*, i16** %q_indexes446, align 8, !dbg !7667
  call void @SetPixelPacket(%struct._Image* %551, %struct._MagickPixelPacket* %result489, %struct._PixelPacket* %552, i16* %553), !dbg !7668
  br label %sw.epilog851, !dbg !7669

sw.default794:                                    ; preds = %sw.epilog792
  %554 = load i32, i32* %channel.addr, align 4, !dbg !7670
  %and795 = and i32 %554, 1, !dbg !7672
  %cmp796 = icmp ne i32 %and795, 0, !dbg !7673
  br i1 %cmp796, label %if.then798, label %if.end802, !dbg !7674

if.then798:                                       ; preds = %sw.default794
  %red799 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 5, !dbg !7675
  %555 = load float, float* %red799, align 8, !dbg !7675
  %call800 = call zeroext i16 @ClampToQuantum(float %555), !dbg !7675
  %556 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7675
  %red801 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %556, i32 0, i32 2, !dbg !7675
  store i16 %call800, i16* %red801, align 2, !dbg !7675
  br label %if.end802, !dbg !7675

if.end802:                                        ; preds = %if.then798, %sw.default794
  %557 = load i32, i32* %channel.addr, align 4, !dbg !7676
  %and803 = and i32 %557, 2, !dbg !7678
  %cmp804 = icmp ne i32 %and803, 0, !dbg !7679
  br i1 %cmp804, label %if.then806, label %if.end810, !dbg !7680

if.then806:                                       ; preds = %if.end802
  %green807 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 6, !dbg !7681
  %558 = load float, float* %green807, align 4, !dbg !7681
  %call808 = call zeroext i16 @ClampToQuantum(float %558), !dbg !7681
  %559 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7681
  %green809 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %559, i32 0, i32 1, !dbg !7681
  store i16 %call808, i16* %green809, align 2, !dbg !7681
  br label %if.end810, !dbg !7681

if.end810:                                        ; preds = %if.then806, %if.end802
  %560 = load i32, i32* %channel.addr, align 4, !dbg !7682
  %and811 = and i32 %560, 4, !dbg !7684
  %cmp812 = icmp ne i32 %and811, 0, !dbg !7685
  br i1 %cmp812, label %if.then814, label %if.end818, !dbg !7686

if.then814:                                       ; preds = %if.end810
  %blue815 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 7, !dbg !7687
  %561 = load float, float* %blue815, align 8, !dbg !7687
  %call816 = call zeroext i16 @ClampToQuantum(float %561), !dbg !7687
  %562 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7687
  %blue817 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %562, i32 0, i32 0, !dbg !7687
  store i16 %call816, i16* %blue817, align 2, !dbg !7687
  br label %if.end818, !dbg !7687

if.end818:                                        ; preds = %if.then814, %if.end810
  %563 = load i32, i32* %channel.addr, align 4, !dbg !7688
  %and819 = and i32 %563, 8, !dbg !7690
  %cmp820 = icmp ne i32 %and819, 0, !dbg !7691
  br i1 %cmp820, label %land.lhs.true822, label %if.end833, !dbg !7692

land.lhs.true822:                                 ; preds = %if.end818
  %564 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7693
  %matte823 = getelementptr inbounds %struct._Image, %struct._Image* %564, i32 0, i32 6, !dbg !7694
  %565 = load i32, i32* %matte823, align 8, !dbg !7694
  %cmp824 = icmp ne i32 %565, 0, !dbg !7695
  br i1 %cmp824, label %if.then826, label %if.end833, !dbg !7696

if.then826:                                       ; preds = %land.lhs.true822
  %opacity827 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 8, !dbg !7697
  %566 = load float, float* %opacity827, align 4, !dbg !7697
  %call828 = call zeroext i16 @ClampToQuantum(float %566), !dbg !7697
  %conv829 = zext i16 %call828 to i32, !dbg !7697
  %sub830 = sub nsw i32 65535, %conv829, !dbg !7697
  %conv831 = trunc i32 %sub830 to i16, !dbg !7697
  %567 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7697
  %opacity832 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %567, i32 0, i32 3, !dbg !7697
  store i16 %conv831, i16* %opacity832, align 2, !dbg !7697
  br label %if.end833, !dbg !7697

if.end833:                                        ; preds = %if.then826, %land.lhs.true822, %if.end818
  %568 = load i32, i32* %channel.addr, align 4, !dbg !7698
  %and834 = and i32 %568, 32, !dbg !7700
  %cmp835 = icmp ne i32 %and834, 0, !dbg !7701
  br i1 %cmp835, label %land.lhs.true837, label %if.end850, !dbg !7702

land.lhs.true837:                                 ; preds = %if.end833
  %569 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7703
  %colorspace838 = getelementptr inbounds %struct._Image, %struct._Image* %569, i32 0, i32 1, !dbg !7704
  %570 = load i32, i32* %colorspace838, align 4, !dbg !7704
  %cmp839 = icmp eq i32 %570, 12, !dbg !7705
  br i1 %cmp839, label %if.then841, label %if.end850, !dbg !7706

if.then841:                                       ; preds = %land.lhs.true837
  %571 = load i16*, i16** %q_indexes446, align 8, !dbg !7707
  %572 = load i64, i64* %x447, align 8, !dbg !7707
  %add.ptr842 = getelementptr inbounds i16, i16* %571, i64 %572, !dbg !7707
  %cmp843 = icmp ne i16* %add.ptr842, null, !dbg !7707
  br i1 %cmp843, label %if.then845, label %if.end849, !dbg !7710

if.then845:                                       ; preds = %if.then841
  %index846 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %result489, i32 0, i32 9, !dbg !7707
  %573 = load float, float* %index846, align 8, !dbg !7707
  %call847 = call zeroext i16 @ClampToQuantum(float %573), !dbg !7707
  %574 = load i16*, i16** %q_indexes446, align 8, !dbg !7707
  %575 = load i64, i64* %x447, align 8, !dbg !7707
  %add.ptr848 = getelementptr inbounds i16, i16* %574, i64 %575, !dbg !7707
  store i16 %call847, i16* %add.ptr848, align 2, !dbg !7707
  br label %if.end849, !dbg !7707

if.end849:                                        ; preds = %if.then845, %if.then841
  br label %if.end850, !dbg !7710

if.end850:                                        ; preds = %if.end849, %land.lhs.true837, %if.end833
  br label %sw.epilog851, !dbg !7711

sw.epilog851:                                     ; preds = %if.end850, %sw.bb793
  %576 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7712
  %577 = load i64, i64* %r448, align 8, !dbg !7714
  %arrayidx852 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %576, i64 %577, !dbg !7712
  %red853 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx852, i32 0, i32 2, !dbg !7715
  %578 = load i16, i16* %red853, align 2, !dbg !7715
  %conv854 = zext i16 %578 to i32, !dbg !7712
  %579 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7716
  %red855 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %579, i32 0, i32 2, !dbg !7716
  %580 = load i16, i16* %red855, align 2, !dbg !7716
  %conv856 = zext i16 %580 to i32, !dbg !7716
  %cmp857 = icmp ne i32 %conv854, %conv856, !dbg !7717
  br i1 %cmp857, label %if.then908, label %lor.lhs.false859, !dbg !7718

lor.lhs.false859:                                 ; preds = %sw.epilog851
  %581 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7719
  %582 = load i64, i64* %r448, align 8, !dbg !7720
  %arrayidx860 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %581, i64 %582, !dbg !7719
  %green861 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx860, i32 0, i32 1, !dbg !7721
  %583 = load i16, i16* %green861, align 2, !dbg !7721
  %conv862 = zext i16 %583 to i32, !dbg !7719
  %584 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7722
  %green863 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %584, i32 0, i32 1, !dbg !7722
  %585 = load i16, i16* %green863, align 2, !dbg !7722
  %conv864 = zext i16 %585 to i32, !dbg !7722
  %cmp865 = icmp ne i32 %conv862, %conv864, !dbg !7723
  br i1 %cmp865, label %if.then908, label %lor.lhs.false867, !dbg !7724

lor.lhs.false867:                                 ; preds = %lor.lhs.false859
  %586 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7725
  %587 = load i64, i64* %r448, align 8, !dbg !7726
  %arrayidx868 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %586, i64 %587, !dbg !7725
  %blue869 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx868, i32 0, i32 0, !dbg !7727
  %588 = load i16, i16* %blue869, align 2, !dbg !7727
  %conv870 = zext i16 %588 to i32, !dbg !7725
  %589 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7728
  %blue871 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %589, i32 0, i32 0, !dbg !7728
  %590 = load i16, i16* %blue871, align 2, !dbg !7728
  %conv872 = zext i16 %590 to i32, !dbg !7728
  %cmp873 = icmp ne i32 %conv870, %conv872, !dbg !7729
  br i1 %cmp873, label %if.then908, label %lor.lhs.false875, !dbg !7730

lor.lhs.false875:                                 ; preds = %lor.lhs.false867
  %591 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7731
  %592 = load i64, i64* %r448, align 8, !dbg !7732
  %arrayidx876 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %591, i64 %592, !dbg !7731
  %opacity877 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx876, i32 0, i32 3, !dbg !7733
  %593 = load i16, i16* %opacity877, align 2, !dbg !7733
  %conv878 = zext i16 %593 to i32, !dbg !7731
  %594 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7734
  %opacity879 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %594, i32 0, i32 3, !dbg !7734
  %595 = load i16, i16* %opacity879, align 2, !dbg !7734
  %conv880 = zext i16 %595 to i32, !dbg !7734
  %cmp881 = icmp ne i32 %conv878, %conv880, !dbg !7735
  br i1 %cmp881, label %if.then908, label %lor.lhs.false883, !dbg !7736

lor.lhs.false883:                                 ; preds = %lor.lhs.false875
  %596 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7737
  %colorspace884 = getelementptr inbounds %struct._Image, %struct._Image* %596, i32 0, i32 1, !dbg !7738
  %597 = load i32, i32* %colorspace884, align 4, !dbg !7738
  %cmp885 = icmp eq i32 %597, 12, !dbg !7739
  br i1 %cmp885, label %land.lhs.true887, label %if.end910, !dbg !7740

land.lhs.true887:                                 ; preds = %lor.lhs.false883
  %598 = load i16*, i16** %p_indexes444, align 8, !dbg !7741
  %599 = load i64, i64* %r448, align 8, !dbg !7741
  %add.ptr888 = getelementptr inbounds i16, i16* %598, i64 %599, !dbg !7741
  %cmp889 = icmp eq i16* %add.ptr888, null, !dbg !7741
  br i1 %cmp889, label %cond.true891, label %cond.false892, !dbg !7741

cond.true891:                                     ; preds = %land.lhs.true887
  br label %cond.end895, !dbg !7741

cond.false892:                                    ; preds = %land.lhs.true887
  %600 = load i16*, i16** %p_indexes444, align 8, !dbg !7741
  %601 = load i64, i64* %r448, align 8, !dbg !7741
  %add.ptr893 = getelementptr inbounds i16, i16* %600, i64 %601, !dbg !7741
  %602 = load i16, i16* %add.ptr893, align 2, !dbg !7741
  %conv894 = zext i16 %602 to i32, !dbg !7741
  br label %cond.end895, !dbg !7741

cond.end895:                                      ; preds = %cond.false892, %cond.true891
  %cond896 = phi i32 [ 0, %cond.true891 ], [ %conv894, %cond.false892 ], !dbg !7741
  %603 = load i16*, i16** %q_indexes446, align 8, !dbg !7742
  %604 = load i64, i64* %x447, align 8, !dbg !7742
  %add.ptr897 = getelementptr inbounds i16, i16* %603, i64 %604, !dbg !7742
  %cmp898 = icmp eq i16* %add.ptr897, null, !dbg !7742
  br i1 %cmp898, label %cond.true900, label %cond.false901, !dbg !7742

cond.true900:                                     ; preds = %cond.end895
  br label %cond.end904, !dbg !7742

cond.false901:                                    ; preds = %cond.end895
  %605 = load i16*, i16** %q_indexes446, align 8, !dbg !7742
  %606 = load i64, i64* %x447, align 8, !dbg !7742
  %add.ptr902 = getelementptr inbounds i16, i16* %605, i64 %606, !dbg !7742
  %607 = load i16, i16* %add.ptr902, align 2, !dbg !7742
  %conv903 = zext i16 %607 to i32, !dbg !7742
  br label %cond.end904, !dbg !7742

cond.end904:                                      ; preds = %cond.false901, %cond.true900
  %cond905 = phi i32 [ 0, %cond.true900 ], [ %conv903, %cond.false901 ], !dbg !7742
  %cmp906 = icmp ne i32 %cond896, %cond905, !dbg !7743
  br i1 %cmp906, label %if.then908, label %if.end910, !dbg !7744

if.then908:                                       ; preds = %cond.end904, %lor.lhs.false875, %lor.lhs.false867, %lor.lhs.false859, %sw.epilog851
  %608 = load i64, i64* %changed, align 8, !dbg !7745
  %inc909 = add i64 %608, 1, !dbg !7745
  store i64 %inc909, i64* %changed, align 8, !dbg !7745
  br label %if.end910, !dbg !7746

if.end910:                                        ; preds = %if.then908, %cond.end904, %lor.lhs.false883
  %609 = load %struct._PixelPacket*, %struct._PixelPacket** %p443, align 8, !dbg !7747
  %incdec.ptr911 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %609, i32 -1, !dbg !7747
  store %struct._PixelPacket* %incdec.ptr911, %struct._PixelPacket** %p443, align 8, !dbg !7747
  %610 = load %struct._PixelPacket*, %struct._PixelPacket** %q445, align 8, !dbg !7748
  %incdec.ptr912 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %610, i32 -1, !dbg !7748
  store %struct._PixelPacket* %incdec.ptr912, %struct._PixelPacket** %q445, align 8, !dbg !7748
  br label %for.inc913, !dbg !7749

for.inc913:                                       ; preds = %if.end910
  %611 = load i64, i64* %x447, align 8, !dbg !7750
  %dec = add nsw i64 %611, -1, !dbg !7750
  store i64 %dec, i64* %x447, align 8, !dbg !7750
  br label %for.cond480, !dbg !7751, !llvm.loop !7752

for.end914:                                       ; preds = %for.cond480
  %612 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !7754
  %613 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7756
  %call915 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %612, %struct._ExceptionInfo* %613), !dbg !7757
  %cmp916 = icmp eq i32 %call915, 0, !dbg !7758
  br i1 %cmp916, label %if.then918, label %if.end919, !dbg !7759

if.then918:                                       ; preds = %for.end914
  store i32 0, i32* %status, align 4, !dbg !7760
  br label %if.end919, !dbg !7761

if.end919:                                        ; preds = %if.then918, %for.end914
  %614 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7762
  %progress_monitor920 = getelementptr inbounds %struct._Image, %struct._Image* %614, i32 0, i32 47, !dbg !7764
  %615 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor920, align 8, !dbg !7764
  %cmp921 = icmp ne i32 (i8*, i64, i64, i8*)* %615, null, !dbg !7765
  br i1 %cmp921, label %if.then923, label %if.end931, !dbg !7766

if.then923:                                       ; preds = %if.end919
  %616 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7767
  %617 = load i64, i64* %progress, align 8, !dbg !7769
  %inc924 = add nsw i64 %617, 1, !dbg !7769
  store i64 %inc924, i64* %progress, align 8, !dbg !7769
  %618 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7770
  %rows925 = getelementptr inbounds %struct._Image, %struct._Image* %618, i32 0, i32 8, !dbg !7771
  %619 = load i64, i64* %rows925, align 8, !dbg !7771
  %call926 = call i32 @SetImageProgress(%struct._Image* %616, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i64 0, i64 0), i64 %617, i64 %619), !dbg !7772
  %cmp927 = icmp eq i32 %call926, 0, !dbg !7773
  br i1 %cmp927, label %if.then929, label %if.end930, !dbg !7774

if.then929:                                       ; preds = %if.then923
  store i32 0, i32* %status, align 4, !dbg !7775
  br label %if.end930, !dbg !7776

if.end930:                                        ; preds = %if.then929, %if.then923
  br label %if.end931, !dbg !7777

if.end931:                                        ; preds = %if.end930, %if.end919
  br label %for.inc932, !dbg !7778

for.inc932:                                       ; preds = %if.end931
  %620 = load i64, i64* %y, align 8, !dbg !7779
  %dec933 = add nsw i64 %620, -1, !dbg !7779
  store i64 %dec933, i64* %y, align 8, !dbg !7779
  br label %for.cond439, !dbg !7780, !llvm.loop !7781

for.end934:                                       ; preds = %if.then468, %if.then451, %for.cond439
  %621 = load %struct._CacheView*, %struct._CacheView** %auth_view, align 8, !dbg !7783
  %call935 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %621), !dbg !7784
  store %struct._CacheView* %call935, %struct._CacheView** %auth_view, align 8, !dbg !7785
  %622 = load %struct._CacheView*, %struct._CacheView** %virt_view, align 8, !dbg !7786
  %call936 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %622), !dbg !7787
  store %struct._CacheView* %call936, %struct._CacheView** %virt_view, align 8, !dbg !7788
  %623 = load i32, i32* %status, align 4, !dbg !7789
  %tobool = icmp ne i32 %623, 0, !dbg !7789
  br i1 %tobool, label %cond.true937, label %cond.false938, !dbg !7789

cond.true937:                                     ; preds = %for.end934
  %624 = load i64, i64* %changed, align 8, !dbg !7790
  br label %cond.end939, !dbg !7789

cond.false938:                                    ; preds = %for.end934
  br label %cond.end939, !dbg !7789

cond.end939:                                      ; preds = %cond.false938, %cond.true937
  %cond940 = phi i64 [ %624, %cond.true937 ], [ -1, %cond.false938 ], !dbg !7789
  ret i64 %cond940, !dbg !7791
}

declare dso_local i64 @FormatLocaleFile(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i8* @CommandOptionToMnemonic(i32, i64) #2

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

declare dso_local i32 @CompositeImageChannel(%struct._Image*, i32, i32, %struct._Image*, i64, i64) #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @MorphologyPrimitive(%struct._Image* %image, %struct._Image* %result_image, i32 %method, i32 %channel, %struct.KernelInfo* %kernel, double %bias, %struct._ExceptionInfo* %exception) #0 !dbg !7792 {
entry:
  %retval = alloca i64, align 8
  %image.addr = alloca %struct._Image*, align 8
  %result_image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %channel.addr = alloca i32, align 4
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %bias.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p_view = alloca %struct._CacheView*, align 8
  %q_view = alloca %struct._CacheView*, align 8
  %i = alloca i64, align 8
  %changes = alloca i64*, align 8
  %changed = alloca i64, align 8
  %virt_width = alloca i64, align 8
  %y = alloca i64, align 8
  %offx = alloca i64, align 8
  %offy = alloca i64, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %message = alloca i8*, align 8
  %exception11 = alloca %struct._ExceptionInfo, align 8
  %x23 = alloca i64, align 8
  %id = alloca i32, align 4
  %p = alloca %struct._PixelPacket*, align 8
  %p_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %q_indexes = alloca i16*, align 8
  %y29 = alloca i64, align 8
  %r = alloca i64, align 8
  %result = alloca %struct._DoublePixelPacket, align 8
  %v = alloca i64, align 8
  %k = alloca double*, align 8
  %k_pixels = alloca %struct._PixelPacket*, align 8
  %k_indexes = alloca i16*, align 8
  %gamma = alloca double, align 8
  %alpha = alloca float, align 4
  %count = alloca i64, align 8
  %proceed = alloca i32, align 4
  %id397 = alloca i32, align 4
  %p399 = alloca %struct._PixelPacket*, align 8
  %p_indexes400 = alloca i16*, align 8
  %q401 = alloca %struct._PixelPacket*, align 8
  %q_indexes402 = alloca i16*, align 8
  %x403 = alloca i64, align 8
  %r404 = alloca i64, align 8
  %v431 = alloca i64, align 8
  %u = alloca i64, align 8
  %k432 = alloca double*, align 8
  %k_pixels433 = alloca %struct._PixelPacket*, align 8
  %k_indexes434 = alloca i16*, align 8
  %result435 = alloca %struct._DoublePixelPacket, align 8
  %min = alloca %struct._DoublePixelPacket, align 8
  %max = alloca %struct._DoublePixelPacket, align 8
  %alpha657 = alloca double, align 8
  %gamma658 = alloca double, align 8
  %count659 = alloca i64, align 8
  %proceed1460 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7795, metadata !DIExpression()), !dbg !7796
  store %struct._Image* %result_image, %struct._Image** %result_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %result_image.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store double %bias, double* %bias.addr, align 8
  call void @llvm.dbg.declare(metadata double* %bias.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata %struct._CacheView** %p_view, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata %struct._CacheView** %q_view, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata i64** %changes, metadata !7815, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata i64* %virt_width, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata i64* %offx, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i64* %offy, metadata !7825, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7829, metadata !DIExpression()), !dbg !7830
  store i32 1, i32* %status, align 4, !dbg !7831
  store i64 0, i64* %progress, align 8, !dbg !7832
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7833
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7834
  %call = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %0, %struct._ExceptionInfo* %1), !dbg !7835
  store %struct._CacheView* %call, %struct._CacheView** %p_view, align 8, !dbg !7836
  %2 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !7837
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7838
  %call1 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %2, %struct._ExceptionInfo* %3), !dbg !7839
  store %struct._CacheView* %call1, %struct._CacheView** %q_view, align 8, !dbg !7840
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7841
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !7842
  %5 = load i64, i64* %columns, align 8, !dbg !7842
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7843
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 1, !dbg !7844
  %7 = load i64, i64* %width, align 8, !dbg !7844
  %add = add i64 %5, %7, !dbg !7845
  %sub = sub i64 %add, 1, !dbg !7846
  store i64 %sub, i64* %virt_width, align 8, !dbg !7847
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7848
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 3, !dbg !7849
  %9 = load i64, i64* %x, align 8, !dbg !7849
  store i64 %9, i64* %offx, align 8, !dbg !7850
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7851
  %y2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 4, !dbg !7852
  %11 = load i64, i64* %y2, align 8, !dbg !7852
  store i64 %11, i64* %offy, align 8, !dbg !7853
  %12 = load i32, i32* %method.addr, align 4, !dbg !7854
  switch i32 %12, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 22, label %sw.bb
    i32 3, label %sw.bb8
    i32 5, label %sw.bb8
    i32 18, label %sw.bb8
    i32 19, label %sw.bb8
    i32 20, label %sw.bb8
  ], !dbg !7855

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7856
  %width3 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %13, i32 0, i32 1, !dbg !7858
  %14 = load i64, i64* %width3, align 8, !dbg !7858
  %15 = load i64, i64* %offx, align 8, !dbg !7859
  %sub4 = sub nsw i64 %14, %15, !dbg !7860
  %sub5 = sub nsw i64 %sub4, 1, !dbg !7861
  store i64 %sub5, i64* %offx, align 8, !dbg !7862
  %16 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7863
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %16, i32 0, i32 2, !dbg !7864
  %17 = load i64, i64* %height, align 8, !dbg !7864
  %18 = load i64, i64* %offy, align 8, !dbg !7865
  %sub6 = sub nsw i64 %17, %18, !dbg !7866
  %sub7 = sub nsw i64 %sub6, 1, !dbg !7867
  store i64 %sub7, i64* %offy, align 8, !dbg !7868
  br label %sw.epilog, !dbg !7869

sw.bb8:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !7870

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !7871

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb
  store i64 0, i64* %changed, align 8, !dbg !7872
  %call9 = call i64 @GetOpenMPMaximumThreads(), !dbg !7873
  %call10 = call i8* @AcquireQuantumMemory(i64 %call9, i64 8) #14, !dbg !7874
  %19 = bitcast i8* %call10 to i64*, !dbg !7875
  store i64* %19, i64** %changes, align 8, !dbg !7876
  %20 = load i64*, i64** %changes, align 8, !dbg !7877
  %cmp = icmp eq i64* %20, null, !dbg !7879
  br i1 %cmp, label %if.then, label %if.end, !dbg !7880

if.then:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %message, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception11, metadata !7884, metadata !DIExpression()), !dbg !7883
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception11), !dbg !7883
  %call12 = call i32* @__errno_location() #10, !dbg !7883
  %21 = load i32, i32* %call12, align 4, !dbg !7883
  %call13 = call i8* @GetExceptionMessage(i32 %21), !dbg !7883
  store i8* %call13, i8** %message, align 8, !dbg !7883
  %22 = load i8*, i8** %message, align 8, !dbg !7883
  %call14 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.81, i64 0, i64 0), i64 2622, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0), i8* %22), !dbg !7883
  %23 = load i8*, i8** %message, align 8, !dbg !7883
  %call15 = call i8* @DestroyString(i8* %23), !dbg !7883
  store i8* %call15, i8** %message, align 8, !dbg !7883
  call void @CatchException(%struct._ExceptionInfo* %exception11), !dbg !7883
  %call16 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception11), !dbg !7883
  call void @MagickCoreTerminus(), !dbg !7883
  call void @_exit(i32 1) #15, !dbg !7883
  unreachable, !dbg !7883

if.end:                                           ; preds = %sw.epilog
  store i64 0, i64* %i, align 8, !dbg !7885
  br label %for.cond, !dbg !7887

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i64, i64* %i, align 8, !dbg !7888
  %call17 = call i64 @GetOpenMPMaximumThreads(), !dbg !7890
  %cmp18 = icmp slt i64 %24, %call17, !dbg !7891
  br i1 %cmp18, label %for.body, label %for.end, !dbg !7892

for.body:                                         ; preds = %for.cond
  %25 = load i64*, i64** %changes, align 8, !dbg !7893
  %26 = load i64, i64* %i, align 8, !dbg !7894
  %arrayidx = getelementptr inbounds i64, i64* %25, i64 %26, !dbg !7893
  store i64 0, i64* %arrayidx, align 8, !dbg !7895
  br label %for.inc, !dbg !7893

for.inc:                                          ; preds = %for.body
  %27 = load i64, i64* %i, align 8, !dbg !7896
  %inc = add nsw i64 %27, 1, !dbg !7896
  store i64 %inc, i64* %i, align 8, !dbg !7896
  br label %for.cond, !dbg !7897, !llvm.loop !7898

for.end:                                          ; preds = %for.cond
  %28 = load i32, i32* %method.addr, align 4, !dbg !7900
  %cmp19 = icmp eq i32 %28, 1, !dbg !7902
  br i1 %cmp19, label %land.lhs.true, label %if.end391, !dbg !7903

land.lhs.true:                                    ; preds = %for.end
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7904
  %width20 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %29, i32 0, i32 1, !dbg !7905
  %30 = load i64, i64* %width20, align 8, !dbg !7905
  %cmp21 = icmp eq i64 %30, 1, !dbg !7906
  br i1 %cmp21, label %if.then22, label %if.end391, !dbg !7907

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %x23, metadata !7908, metadata !DIExpression()), !dbg !7910
  store i64 0, i64* %x23, align 8, !dbg !7911
  br label %for.cond24, !dbg !7913

for.cond24:                                       ; preds = %for.inc370, %if.then22
  %31 = load i64, i64* %x23, align 8, !dbg !7914
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7916
  %columns25 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 7, !dbg !7917
  %33 = load i64, i64* %columns25, align 8, !dbg !7917
  %cmp26 = icmp slt i64 %31, %33, !dbg !7918
  br i1 %cmp26, label %for.body27, label %for.end372, !dbg !7919

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7920, metadata !DIExpression()), !dbg !7923
  %call28 = call i32 @GetOpenMPThreadId(), !dbg !7924
  store i32 %call28, i32* %id, align 4, !dbg !7923
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !7925, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.declare(metadata i16** %p_indexes, metadata !7927, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7929, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.declare(metadata i16** %q_indexes, metadata !7931, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %y29, metadata !7933, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.declare(metadata i64* %r, metadata !7935, metadata !DIExpression()), !dbg !7936
  %34 = load i32, i32* %status, align 4, !dbg !7937
  %cmp30 = icmp eq i32 %34, 0, !dbg !7939
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !7940

if.then31:                                        ; preds = %for.body27
  br label %for.inc370, !dbg !7941

if.end32:                                         ; preds = %for.body27
  %35 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !7942
  %36 = load i64, i64* %x23, align 8, !dbg !7943
  %37 = load i64, i64* %offy, align 8, !dbg !7944
  %sub33 = sub nsw i64 0, %37, !dbg !7945
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7946
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 8, !dbg !7947
  %39 = load i64, i64* %rows, align 8, !dbg !7947
  %40 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !7948
  %height34 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %40, i32 0, i32 2, !dbg !7949
  %41 = load i64, i64* %height34, align 8, !dbg !7949
  %add35 = add i64 %39, %41, !dbg !7950
  %sub36 = sub i64 %add35, 1, !dbg !7951
  %42 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7952
  %call37 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %35, i64 %36, i64 %sub33, i64 1, i64 %sub36, %struct._ExceptionInfo* %42), !dbg !7953
  store %struct._PixelPacket* %call37, %struct._PixelPacket** %p, align 8, !dbg !7954
  %43 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !7955
  %44 = load i64, i64* %x23, align 8, !dbg !7956
  %45 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !7957
  %rows38 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 8, !dbg !7958
  %46 = load i64, i64* %rows38, align 8, !dbg !7958
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7959
  %call39 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %43, i64 %44, i64 0, i64 1, i64 %46, %struct._ExceptionInfo* %47), !dbg !7960
  store %struct._PixelPacket* %call39, %struct._PixelPacket** %q, align 8, !dbg !7961
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7962
  %cmp40 = icmp eq %struct._PixelPacket* %48, null, !dbg !7964
  br i1 %cmp40, label %if.then42, label %lor.lhs.false, !dbg !7965

lor.lhs.false:                                    ; preds = %if.end32
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7966
  %cmp41 = icmp eq %struct._PixelPacket* %49, null, !dbg !7967
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !7968

if.then42:                                        ; preds = %lor.lhs.false, %if.end32
  store i32 0, i32* %status, align 4, !dbg !7969
  br label %for.inc370, !dbg !7971

if.end43:                                         ; preds = %lor.lhs.false
  %50 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !7972
  %call44 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %50), !dbg !7973
  store i16* %call44, i16** %p_indexes, align 8, !dbg !7974
  %51 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !7975
  %call45 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %51), !dbg !7976
  store i16* %call45, i16** %q_indexes, align 8, !dbg !7977
  %52 = load i64, i64* %offy, align 8, !dbg !7978
  store i64 %52, i64* %r, align 8, !dbg !7979
  store i64 0, i64* %y29, align 8, !dbg !7980
  br label %for.cond46, !dbg !7982

for.cond46:                                       ; preds = %for.inc351, %if.end43
  %53 = load i64, i64* %y29, align 8, !dbg !7983
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7985
  %rows47 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 8, !dbg !7986
  %55 = load i64, i64* %rows47, align 8, !dbg !7986
  %cmp48 = icmp slt i64 %53, %55, !dbg !7987
  br i1 %cmp48, label %for.body49, label %for.end353, !dbg !7988

for.body49:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata %struct._DoublePixelPacket* %result, metadata !7989, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata i64* %v, metadata !8000, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.declare(metadata double** %k, metadata !8002, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %k_pixels, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i16** %k_indexes, metadata !8006, metadata !DIExpression()), !dbg !8007
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8008
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8009
  %58 = load i64, i64* %r, align 8, !dbg !8010
  %arrayidx50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i64 %58, !dbg !8009
  %59 = bitcast %struct._PixelPacket* %56 to i8*, !dbg !8009
  %60 = bitcast %struct._PixelPacket* %arrayidx50 to i8*, !dbg !8009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %59, i8* align 2 %60, i64 8, i1 false), !dbg !8009
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8011
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 1, !dbg !8013
  %62 = load i32, i32* %colorspace, align 4, !dbg !8013
  %cmp51 = icmp eq i32 %62, 12, !dbg !8014
  br i1 %cmp51, label %if.then52, label %if.end61, !dbg !8015

if.then52:                                        ; preds = %for.body49
  %63 = load i16*, i16** %q_indexes, align 8, !dbg !8016
  %64 = load i64, i64* %y29, align 8, !dbg !8016
  %add.ptr = getelementptr inbounds i16, i16* %63, i64 %64, !dbg !8016
  %cmp53 = icmp ne i16* %add.ptr, null, !dbg !8016
  br i1 %cmp53, label %if.then54, label %if.end60, !dbg !8019

if.then54:                                        ; preds = %if.then52
  %65 = load i16*, i16** %p_indexes, align 8, !dbg !8016
  %66 = load i64, i64* %r, align 8, !dbg !8016
  %add.ptr55 = getelementptr inbounds i16, i16* %65, i64 %66, !dbg !8016
  %cmp56 = icmp eq i16* %add.ptr55, null, !dbg !8016
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !8016

cond.true:                                        ; preds = %if.then54
  br label %cond.end, !dbg !8016

cond.false:                                       ; preds = %if.then54
  %67 = load i16*, i16** %p_indexes, align 8, !dbg !8016
  %68 = load i64, i64* %r, align 8, !dbg !8016
  %add.ptr57 = getelementptr inbounds i16, i16* %67, i64 %68, !dbg !8016
  %69 = load i16, i16* %add.ptr57, align 2, !dbg !8016
  %conv = zext i16 %69 to i32, !dbg !8016
  br label %cond.end, !dbg !8016

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !8016
  %conv58 = trunc i32 %cond to i16, !dbg !8016
  %70 = load i16*, i16** %q_indexes, align 8, !dbg !8016
  %71 = load i64, i64* %y29, align 8, !dbg !8016
  %add.ptr59 = getelementptr inbounds i16, i16* %70, i64 %71, !dbg !8016
  store i16 %conv58, i16* %add.ptr59, align 2, !dbg !8016
  br label %if.end60, !dbg !8016

if.end60:                                         ; preds = %cond.end, %if.then52
  br label %if.end61, !dbg !8019

if.end61:                                         ; preds = %if.end60, %for.body49
  %72 = load double, double* %bias.addr, align 8, !dbg !8020
  %index = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 4, !dbg !8021
  store double %72, double* %index, align 8, !dbg !8022
  %opacity = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 3, !dbg !8023
  store double %72, double* %opacity, align 8, !dbg !8024
  %blue = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 2, !dbg !8025
  store double %72, double* %blue, align 8, !dbg !8026
  %green = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 1, !dbg !8027
  store double %72, double* %green, align 8, !dbg !8028
  %red = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 0, !dbg !8029
  store double %72, double* %red, align 8, !dbg !8030
  %73 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8031
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %73, i32 0, i32 5, !dbg !8032
  %74 = load double*, double** %values, align 8, !dbg !8032
  %75 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8033
  %height62 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %75, i32 0, i32 2, !dbg !8034
  %76 = load i64, i64* %height62, align 8, !dbg !8034
  %sub63 = sub i64 %76, 1, !dbg !8035
  %arrayidx64 = getelementptr inbounds double, double* %74, i64 %sub63, !dbg !8031
  store double* %arrayidx64, double** %k, align 8, !dbg !8036
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8037
  store %struct._PixelPacket* %77, %struct._PixelPacket** %k_pixels, align 8, !dbg !8038
  %78 = load i16*, i16** %p_indexes, align 8, !dbg !8039
  store i16* %78, i16** %k_indexes, align 8, !dbg !8040
  %79 = load i32, i32* %channel.addr, align 4, !dbg !8041
  %and = and i32 %79, 256, !dbg !8043
  %cmp65 = icmp eq i32 %and, 0, !dbg !8044
  br i1 %cmp65, label %if.then70, label %lor.lhs.false67, !dbg !8045

lor.lhs.false67:                                  ; preds = %if.end61
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8046
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 6, !dbg !8047
  %81 = load i32, i32* %matte, align 8, !dbg !8047
  %cmp68 = icmp eq i32 %81, 0, !dbg !8048
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !8049

if.then70:                                        ; preds = %lor.lhs.false67, %if.end61
  store i64 0, i64* %v, align 8, !dbg !8050
  br label %for.cond71, !dbg !8053

for.cond71:                                       ; preds = %for.inc117, %if.then70
  %82 = load i64, i64* %v, align 8, !dbg !8054
  %83 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8056
  %height72 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %83, i32 0, i32 2, !dbg !8057
  %84 = load i64, i64* %height72, align 8, !dbg !8057
  %cmp73 = icmp slt i64 %82, %84, !dbg !8058
  br i1 %cmp73, label %for.body75, label %for.end119, !dbg !8059

for.body75:                                       ; preds = %for.cond71
  %85 = load double*, double** %k, align 8, !dbg !8060
  %86 = load double, double* %85, align 8, !dbg !8060
  %87 = load double*, double** %k, align 8, !dbg !8060
  %88 = load double, double* %87, align 8, !dbg !8060
  %cmp76 = fcmp une double %86, %88, !dbg !8060
  br i1 %cmp76, label %cond.true78, label %cond.false79, !dbg !8063

cond.true78:                                      ; preds = %for.body75
  br i1 true, label %if.then80, label %if.end81, !dbg !8060

cond.false79:                                     ; preds = %for.body75
  br i1 false, label %if.then80, label %if.end81, !dbg !8063

if.then80:                                        ; preds = %cond.false79, %cond.true78
  br label %for.inc117, !dbg !8064

if.end81:                                         ; preds = %cond.false79, %cond.true78
  %89 = load double*, double** %k, align 8, !dbg !8065
  %90 = load double, double* %89, align 8, !dbg !8066
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8067
  %red82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 2, !dbg !8067
  %92 = load i16, i16* %red82, align 2, !dbg !8067
  %conv83 = zext i16 %92 to i32, !dbg !8067
  %conv84 = sitofp i32 %conv83 to double, !dbg !8067
  %mul = fmul double %90, %conv84, !dbg !8068
  %red85 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 0, !dbg !8069
  %93 = load double, double* %red85, align 8, !dbg !8070
  %add86 = fadd double %93, %mul, !dbg !8070
  store double %add86, double* %red85, align 8, !dbg !8070
  %94 = load double*, double** %k, align 8, !dbg !8071
  %95 = load double, double* %94, align 8, !dbg !8072
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8073
  %green87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 1, !dbg !8073
  %97 = load i16, i16* %green87, align 2, !dbg !8073
  %conv88 = zext i16 %97 to i32, !dbg !8073
  %conv89 = sitofp i32 %conv88 to double, !dbg !8073
  %mul90 = fmul double %95, %conv89, !dbg !8074
  %green91 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 1, !dbg !8075
  %98 = load double, double* %green91, align 8, !dbg !8076
  %add92 = fadd double %98, %mul90, !dbg !8076
  store double %add92, double* %green91, align 8, !dbg !8076
  %99 = load double*, double** %k, align 8, !dbg !8077
  %100 = load double, double* %99, align 8, !dbg !8078
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8079
  %blue93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 0, !dbg !8079
  %102 = load i16, i16* %blue93, align 2, !dbg !8079
  %conv94 = zext i16 %102 to i32, !dbg !8079
  %conv95 = sitofp i32 %conv94 to double, !dbg !8079
  %mul96 = fmul double %100, %conv95, !dbg !8080
  %blue97 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 2, !dbg !8081
  %103 = load double, double* %blue97, align 8, !dbg !8082
  %add98 = fadd double %103, %mul96, !dbg !8082
  store double %add98, double* %blue97, align 8, !dbg !8082
  %104 = load double*, double** %k, align 8, !dbg !8083
  %105 = load double, double* %104, align 8, !dbg !8084
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8085
  %opacity99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 3, !dbg !8085
  %107 = load i16, i16* %opacity99, align 2, !dbg !8085
  %conv100 = zext i16 %107 to i32, !dbg !8085
  %conv101 = sitofp i32 %conv100 to double, !dbg !8085
  %mul102 = fmul double %105, %conv101, !dbg !8086
  %opacity103 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 3, !dbg !8087
  %108 = load double, double* %opacity103, align 8, !dbg !8088
  %add104 = fadd double %108, %mul102, !dbg !8088
  store double %add104, double* %opacity103, align 8, !dbg !8088
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8089
  %colorspace105 = getelementptr inbounds %struct._Image, %struct._Image* %109, i32 0, i32 1, !dbg !8091
  %110 = load i32, i32* %colorspace105, align 4, !dbg !8091
  %cmp106 = icmp eq i32 %110, 12, !dbg !8092
  br i1 %cmp106, label %if.then108, label %if.end114, !dbg !8093

if.then108:                                       ; preds = %if.end81
  %111 = load double*, double** %k, align 8, !dbg !8094
  %112 = load double, double* %111, align 8, !dbg !8095
  %113 = load i16*, i16** %k_indexes, align 8, !dbg !8096
  %114 = load i16, i16* %113, align 2, !dbg !8097
  %conv109 = zext i16 %114 to i32, !dbg !8098
  %conv110 = sitofp i32 %conv109 to double, !dbg !8098
  %mul111 = fmul double %112, %conv110, !dbg !8099
  %index112 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 4, !dbg !8100
  %115 = load double, double* %index112, align 8, !dbg !8101
  %add113 = fadd double %115, %mul111, !dbg !8101
  store double %add113, double* %index112, align 8, !dbg !8101
  br label %if.end114, !dbg !8102

if.end114:                                        ; preds = %if.then108, %if.end81
  %116 = load double*, double** %k, align 8, !dbg !8103
  %incdec.ptr = getelementptr inbounds double, double* %116, i32 -1, !dbg !8103
  store double* %incdec.ptr, double** %k, align 8, !dbg !8103
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8104
  %incdec.ptr115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i32 1, !dbg !8104
  store %struct._PixelPacket* %incdec.ptr115, %struct._PixelPacket** %k_pixels, align 8, !dbg !8104
  %118 = load i16*, i16** %k_indexes, align 8, !dbg !8105
  %incdec.ptr116 = getelementptr inbounds i16, i16* %118, i32 1, !dbg !8105
  store i16* %incdec.ptr116, i16** %k_indexes, align 8, !dbg !8105
  br label %for.inc117, !dbg !8106

for.inc117:                                       ; preds = %if.end114, %if.then80
  %119 = load i64, i64* %v, align 8, !dbg !8107
  %inc118 = add nsw i64 %119, 1, !dbg !8107
  store i64 %inc118, i64* %v, align 8, !dbg !8107
  br label %for.cond71, !dbg !8108, !llvm.loop !8109

for.end119:                                       ; preds = %for.cond71
  %120 = load i32, i32* %channel.addr, align 4, !dbg !8111
  %and120 = and i32 %120, 1, !dbg !8113
  %cmp121 = icmp ne i32 %and120, 0, !dbg !8114
  br i1 %cmp121, label %if.then123, label %if.end128, !dbg !8115

if.then123:                                       ; preds = %for.end119
  %red124 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 0, !dbg !8116
  %121 = load double, double* %red124, align 8, !dbg !8116
  %conv125 = fptrunc double %121 to float, !dbg !8116
  %call126 = call zeroext i16 @ClampToQuantum(float %conv125), !dbg !8116
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8116
  %red127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !8116
  store i16 %call126, i16* %red127, align 2, !dbg !8116
  br label %if.end128, !dbg !8116

if.end128:                                        ; preds = %if.then123, %for.end119
  %123 = load i32, i32* %channel.addr, align 4, !dbg !8117
  %and129 = and i32 %123, 2, !dbg !8119
  %cmp130 = icmp ne i32 %and129, 0, !dbg !8120
  br i1 %cmp130, label %if.then132, label %if.end137, !dbg !8121

if.then132:                                       ; preds = %if.end128
  %green133 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 1, !dbg !8122
  %124 = load double, double* %green133, align 8, !dbg !8122
  %conv134 = fptrunc double %124 to float, !dbg !8122
  %call135 = call zeroext i16 @ClampToQuantum(float %conv134), !dbg !8122
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8122
  %green136 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 0, i32 1, !dbg !8122
  store i16 %call135, i16* %green136, align 2, !dbg !8122
  br label %if.end137, !dbg !8122

if.end137:                                        ; preds = %if.then132, %if.end128
  %126 = load i32, i32* %channel.addr, align 4, !dbg !8123
  %and138 = and i32 %126, 4, !dbg !8125
  %cmp139 = icmp ne i32 %and138, 0, !dbg !8126
  br i1 %cmp139, label %if.then141, label %if.end146, !dbg !8127

if.then141:                                       ; preds = %if.end137
  %blue142 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 2, !dbg !8128
  %127 = load double, double* %blue142, align 8, !dbg !8128
  %conv143 = fptrunc double %127 to float, !dbg !8128
  %call144 = call zeroext i16 @ClampToQuantum(float %conv143), !dbg !8128
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8128
  %blue145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 0, !dbg !8128
  store i16 %call144, i16* %blue145, align 2, !dbg !8128
  br label %if.end146, !dbg !8128

if.end146:                                        ; preds = %if.then141, %if.end137
  %129 = load i32, i32* %channel.addr, align 4, !dbg !8129
  %and147 = and i32 %129, 8, !dbg !8131
  %cmp148 = icmp ne i32 %and147, 0, !dbg !8132
  br i1 %cmp148, label %land.lhs.true150, label %if.end159, !dbg !8133

land.lhs.true150:                                 ; preds = %if.end146
  %130 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8134
  %matte151 = getelementptr inbounds %struct._Image, %struct._Image* %130, i32 0, i32 6, !dbg !8135
  %131 = load i32, i32* %matte151, align 8, !dbg !8135
  %cmp152 = icmp ne i32 %131, 0, !dbg !8136
  br i1 %cmp152, label %if.then154, label %if.end159, !dbg !8137

if.then154:                                       ; preds = %land.lhs.true150
  %opacity155 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 3, !dbg !8138
  %132 = load double, double* %opacity155, align 8, !dbg !8138
  %conv156 = fptrunc double %132 to float, !dbg !8138
  %call157 = call zeroext i16 @ClampToQuantum(float %conv156), !dbg !8138
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8138
  %opacity158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 3, !dbg !8138
  store i16 %call157, i16* %opacity158, align 2, !dbg !8138
  br label %if.end159, !dbg !8138

if.end159:                                        ; preds = %if.then154, %land.lhs.true150, %if.end146
  %134 = load i32, i32* %channel.addr, align 4, !dbg !8139
  %and160 = and i32 %134, 32, !dbg !8141
  %cmp161 = icmp ne i32 %and160, 0, !dbg !8142
  br i1 %cmp161, label %land.lhs.true163, label %if.end177, !dbg !8143

land.lhs.true163:                                 ; preds = %if.end159
  %135 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8144
  %colorspace164 = getelementptr inbounds %struct._Image, %struct._Image* %135, i32 0, i32 1, !dbg !8145
  %136 = load i32, i32* %colorspace164, align 4, !dbg !8145
  %cmp165 = icmp eq i32 %136, 12, !dbg !8146
  br i1 %cmp165, label %if.then167, label %if.end177, !dbg !8147

if.then167:                                       ; preds = %land.lhs.true163
  %137 = load i16*, i16** %q_indexes, align 8, !dbg !8148
  %138 = load i64, i64* %y29, align 8, !dbg !8148
  %add.ptr168 = getelementptr inbounds i16, i16* %137, i64 %138, !dbg !8148
  %cmp169 = icmp ne i16* %add.ptr168, null, !dbg !8148
  br i1 %cmp169, label %if.then171, label %if.end176, !dbg !8151

if.then171:                                       ; preds = %if.then167
  %index172 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 4, !dbg !8148
  %139 = load double, double* %index172, align 8, !dbg !8148
  %conv173 = fptrunc double %139 to float, !dbg !8148
  %call174 = call zeroext i16 @ClampToQuantum(float %conv173), !dbg !8148
  %140 = load i16*, i16** %q_indexes, align 8, !dbg !8148
  %141 = load i64, i64* %y29, align 8, !dbg !8148
  %add.ptr175 = getelementptr inbounds i16, i16* %140, i64 %141, !dbg !8148
  store i16 %call174, i16* %add.ptr175, align 2, !dbg !8148
  br label %if.end176, !dbg !8148

if.end176:                                        ; preds = %if.then171, %if.then167
  br label %if.end177, !dbg !8151

if.end177:                                        ; preds = %if.end176, %land.lhs.true163, %if.end159
  br label %if.end288, !dbg !8152

if.else:                                          ; preds = %lor.lhs.false67
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !8153, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8158, metadata !DIExpression()), !dbg !8159
  store i64 0, i64* %count, align 8, !dbg !8160
  store double 0.000000e+00, double* %gamma, align 8, !dbg !8161
  store i64 0, i64* %v, align 8, !dbg !8162
  br label %for.cond178, !dbg !8164

for.cond178:                                      ; preds = %for.inc242, %if.else
  %142 = load i64, i64* %v, align 8, !dbg !8165
  %143 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8167
  %height179 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %143, i32 0, i32 2, !dbg !8168
  %144 = load i64, i64* %height179, align 8, !dbg !8168
  %cmp180 = icmp slt i64 %142, %144, !dbg !8169
  br i1 %cmp180, label %for.body182, label %for.end244, !dbg !8170

for.body182:                                      ; preds = %for.cond178
  %145 = load double*, double** %k, align 8, !dbg !8171
  %146 = load double, double* %145, align 8, !dbg !8171
  %147 = load double*, double** %k, align 8, !dbg !8171
  %148 = load double, double* %147, align 8, !dbg !8171
  %cmp183 = fcmp une double %146, %148, !dbg !8171
  br i1 %cmp183, label %cond.true185, label %cond.false186, !dbg !8174

cond.true185:                                     ; preds = %for.body182
  br i1 true, label %if.then187, label %if.end188, !dbg !8171

cond.false186:                                    ; preds = %for.body182
  br i1 false, label %if.then187, label %if.end188, !dbg !8174

if.then187:                                       ; preds = %cond.false186, %cond.true185
  br label %for.inc242, !dbg !8175

if.end188:                                        ; preds = %cond.false186, %cond.true185
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8176
  %opacity189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 3, !dbg !8176
  %150 = load i16, i16* %opacity189, align 2, !dbg !8176
  %conv190 = zext i16 %150 to i32, !dbg !8176
  %sub191 = sub nsw i32 65535, %conv190, !dbg !8177
  %conv192 = sitofp i32 %sub191 to double, !dbg !8178
  %mul193 = fmul double 0x3EF0001000100010, %conv192, !dbg !8179
  %conv194 = fptrunc double %mul193 to float, !dbg !8180
  store float %conv194, float* %alpha, align 4, !dbg !8181
  %151 = load i64, i64* %count, align 8, !dbg !8182
  %inc195 = add i64 %151, 1, !dbg !8182
  store i64 %inc195, i64* %count, align 8, !dbg !8182
  %152 = load double*, double** %k, align 8, !dbg !8183
  %153 = load double, double* %152, align 8, !dbg !8184
  %154 = load float, float* %alpha, align 4, !dbg !8185
  %conv196 = fpext float %154 to double, !dbg !8185
  %mul197 = fmul double %conv196, %153, !dbg !8185
  %conv198 = fptrunc double %mul197 to float, !dbg !8185
  store float %conv198, float* %alpha, align 4, !dbg !8185
  %155 = load float, float* %alpha, align 4, !dbg !8186
  %conv199 = fpext float %155 to double, !dbg !8186
  %156 = load double, double* %gamma, align 8, !dbg !8187
  %add200 = fadd double %156, %conv199, !dbg !8187
  store double %add200, double* %gamma, align 8, !dbg !8187
  %157 = load float, float* %alpha, align 4, !dbg !8188
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8189
  %red201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 0, i32 2, !dbg !8189
  %159 = load i16, i16* %red201, align 2, !dbg !8189
  %conv202 = zext i16 %159 to i32, !dbg !8189
  %conv203 = sitofp i32 %conv202 to float, !dbg !8189
  %mul204 = fmul float %157, %conv203, !dbg !8190
  %conv205 = fpext float %mul204 to double, !dbg !8188
  %red206 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 0, !dbg !8191
  %160 = load double, double* %red206, align 8, !dbg !8192
  %add207 = fadd double %160, %conv205, !dbg !8192
  store double %add207, double* %red206, align 8, !dbg !8192
  %161 = load float, float* %alpha, align 4, !dbg !8193
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8194
  %green208 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 1, !dbg !8194
  %163 = load i16, i16* %green208, align 2, !dbg !8194
  %conv209 = zext i16 %163 to i32, !dbg !8194
  %conv210 = sitofp i32 %conv209 to float, !dbg !8194
  %mul211 = fmul float %161, %conv210, !dbg !8195
  %conv212 = fpext float %mul211 to double, !dbg !8193
  %green213 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 1, !dbg !8196
  %164 = load double, double* %green213, align 8, !dbg !8197
  %add214 = fadd double %164, %conv212, !dbg !8197
  store double %add214, double* %green213, align 8, !dbg !8197
  %165 = load float, float* %alpha, align 4, !dbg !8198
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8199
  %blue215 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 0, !dbg !8199
  %167 = load i16, i16* %blue215, align 2, !dbg !8199
  %conv216 = zext i16 %167 to i32, !dbg !8199
  %conv217 = sitofp i32 %conv216 to float, !dbg !8199
  %mul218 = fmul float %165, %conv217, !dbg !8200
  %conv219 = fpext float %mul218 to double, !dbg !8198
  %blue220 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 2, !dbg !8201
  %168 = load double, double* %blue220, align 8, !dbg !8202
  %add221 = fadd double %168, %conv219, !dbg !8202
  store double %add221, double* %blue220, align 8, !dbg !8202
  %169 = load double*, double** %k, align 8, !dbg !8203
  %170 = load double, double* %169, align 8, !dbg !8204
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8205
  %opacity222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !8205
  %172 = load i16, i16* %opacity222, align 2, !dbg !8205
  %conv223 = zext i16 %172 to i32, !dbg !8205
  %conv224 = sitofp i32 %conv223 to double, !dbg !8205
  %mul225 = fmul double %170, %conv224, !dbg !8206
  %opacity226 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 3, !dbg !8207
  %173 = load double, double* %opacity226, align 8, !dbg !8208
  %add227 = fadd double %173, %mul225, !dbg !8208
  store double %add227, double* %opacity226, align 8, !dbg !8208
  %174 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8209
  %colorspace228 = getelementptr inbounds %struct._Image, %struct._Image* %174, i32 0, i32 1, !dbg !8211
  %175 = load i32, i32* %colorspace228, align 4, !dbg !8211
  %cmp229 = icmp eq i32 %175, 12, !dbg !8212
  br i1 %cmp229, label %if.then231, label %if.end238, !dbg !8213

if.then231:                                       ; preds = %if.end188
  %176 = load float, float* %alpha, align 4, !dbg !8214
  %177 = load i16*, i16** %k_indexes, align 8, !dbg !8215
  %178 = load i16, i16* %177, align 2, !dbg !8216
  %conv232 = zext i16 %178 to i32, !dbg !8217
  %conv233 = sitofp i32 %conv232 to float, !dbg !8217
  %mul234 = fmul float %176, %conv233, !dbg !8218
  %conv235 = fpext float %mul234 to double, !dbg !8214
  %index236 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 4, !dbg !8219
  %179 = load double, double* %index236, align 8, !dbg !8220
  %add237 = fadd double %179, %conv235, !dbg !8220
  store double %add237, double* %index236, align 8, !dbg !8220
  br label %if.end238, !dbg !8221

if.end238:                                        ; preds = %if.then231, %if.end188
  %180 = load double*, double** %k, align 8, !dbg !8222
  %incdec.ptr239 = getelementptr inbounds double, double* %180, i32 -1, !dbg !8222
  store double* %incdec.ptr239, double** %k, align 8, !dbg !8222
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels, align 8, !dbg !8223
  %incdec.ptr240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 1, !dbg !8223
  store %struct._PixelPacket* %incdec.ptr240, %struct._PixelPacket** %k_pixels, align 8, !dbg !8223
  %182 = load i16*, i16** %k_indexes, align 8, !dbg !8224
  %incdec.ptr241 = getelementptr inbounds i16, i16* %182, i32 1, !dbg !8224
  store i16* %incdec.ptr241, i16** %k_indexes, align 8, !dbg !8224
  br label %for.inc242, !dbg !8225

for.inc242:                                       ; preds = %if.end238, %if.then187
  %183 = load i64, i64* %v, align 8, !dbg !8226
  %inc243 = add nsw i64 %183, 1, !dbg !8226
  store i64 %inc243, i64* %v, align 8, !dbg !8226
  br label %for.cond178, !dbg !8227, !llvm.loop !8228

for.end244:                                       ; preds = %for.cond178
  %184 = load double, double* %gamma, align 8, !dbg !8230
  %cmp245 = fcmp olt double %184, 0.000000e+00, !dbg !8232
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !8233

if.then247:                                       ; preds = %for.end244
  store double 0.000000e+00, double* %gamma, align 8, !dbg !8234
  br label %if.end248, !dbg !8235

if.end248:                                        ; preds = %if.then247, %for.end244
  %185 = load double, double* %gamma, align 8, !dbg !8236
  %call249 = call double @PerceptibleReciprocal(double %185), !dbg !8237
  store double %call249, double* %gamma, align 8, !dbg !8238
  %186 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8239
  %height250 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %186, i32 0, i32 2, !dbg !8240
  %187 = load i64, i64* %height250, align 8, !dbg !8240
  %conv251 = uitofp i64 %187 to double, !dbg !8241
  %188 = load i64, i64* %count, align 8, !dbg !8242
  %conv252 = uitofp i64 %188 to double, !dbg !8242
  %div = fdiv double %conv251, %conv252, !dbg !8243
  %189 = load double, double* %gamma, align 8, !dbg !8244
  %mul253 = fmul double %189, %div, !dbg !8244
  store double %mul253, double* %gamma, align 8, !dbg !8244
  %190 = load double, double* %gamma, align 8, !dbg !8245
  %red254 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 0, !dbg !8245
  %191 = load double, double* %red254, align 8, !dbg !8245
  %mul255 = fmul double %190, %191, !dbg !8245
  %conv256 = fptrunc double %mul255 to float, !dbg !8245
  %call257 = call zeroext i16 @ClampToQuantum(float %conv256), !dbg !8245
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8245
  %red258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %192, i32 0, i32 2, !dbg !8245
  store i16 %call257, i16* %red258, align 2, !dbg !8245
  %193 = load double, double* %gamma, align 8, !dbg !8246
  %green259 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 1, !dbg !8246
  %194 = load double, double* %green259, align 8, !dbg !8246
  %mul260 = fmul double %193, %194, !dbg !8246
  %conv261 = fptrunc double %mul260 to float, !dbg !8246
  %call262 = call zeroext i16 @ClampToQuantum(float %conv261), !dbg !8246
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8246
  %green263 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i32 0, i32 1, !dbg !8246
  store i16 %call262, i16* %green263, align 2, !dbg !8246
  %196 = load double, double* %gamma, align 8, !dbg !8247
  %blue264 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 2, !dbg !8247
  %197 = load double, double* %blue264, align 8, !dbg !8247
  %mul265 = fmul double %196, %197, !dbg !8247
  %conv266 = fptrunc double %mul265 to float, !dbg !8247
  %call267 = call zeroext i16 @ClampToQuantum(float %conv266), !dbg !8247
  %198 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8247
  %blue268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %198, i32 0, i32 0, !dbg !8247
  store i16 %call267, i16* %blue268, align 2, !dbg !8247
  %opacity269 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 3, !dbg !8248
  %199 = load double, double* %opacity269, align 8, !dbg !8248
  %conv270 = fptrunc double %199 to float, !dbg !8248
  %call271 = call zeroext i16 @ClampToQuantum(float %conv270), !dbg !8248
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8248
  %opacity272 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 3, !dbg !8248
  store i16 %call271, i16* %opacity272, align 2, !dbg !8248
  %201 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8249
  %colorspace273 = getelementptr inbounds %struct._Image, %struct._Image* %201, i32 0, i32 1, !dbg !8251
  %202 = load i32, i32* %colorspace273, align 4, !dbg !8251
  %cmp274 = icmp eq i32 %202, 12, !dbg !8252
  br i1 %cmp274, label %if.then276, label %if.end287, !dbg !8253

if.then276:                                       ; preds = %if.end248
  %203 = load i16*, i16** %q_indexes, align 8, !dbg !8254
  %204 = load i64, i64* %y29, align 8, !dbg !8254
  %add.ptr277 = getelementptr inbounds i16, i16* %203, i64 %204, !dbg !8254
  %cmp278 = icmp ne i16* %add.ptr277, null, !dbg !8254
  br i1 %cmp278, label %if.then280, label %if.end286, !dbg !8257

if.then280:                                       ; preds = %if.then276
  %205 = load double, double* %gamma, align 8, !dbg !8254
  %index281 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result, i32 0, i32 4, !dbg !8254
  %206 = load double, double* %index281, align 8, !dbg !8254
  %mul282 = fmul double %205, %206, !dbg !8254
  %conv283 = fptrunc double %mul282 to float, !dbg !8254
  %call284 = call zeroext i16 @ClampToQuantum(float %conv283), !dbg !8254
  %207 = load i16*, i16** %q_indexes, align 8, !dbg !8254
  %208 = load i64, i64* %y29, align 8, !dbg !8254
  %add.ptr285 = getelementptr inbounds i16, i16* %207, i64 %208, !dbg !8254
  store i16 %call284, i16* %add.ptr285, align 2, !dbg !8254
  br label %if.end286, !dbg !8254

if.end286:                                        ; preds = %if.then280, %if.then276
  br label %if.end287, !dbg !8257

if.end287:                                        ; preds = %if.end286, %if.end248
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end177
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8258
  %210 = load i64, i64* %r, align 8, !dbg !8260
  %arrayidx289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %209, i64 %210, !dbg !8258
  %red290 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx289, i32 0, i32 2, !dbg !8261
  %211 = load i16, i16* %red290, align 2, !dbg !8261
  %conv291 = zext i16 %211 to i32, !dbg !8258
  %212 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8262
  %red292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %212, i32 0, i32 2, !dbg !8262
  %213 = load i16, i16* %red292, align 2, !dbg !8262
  %conv293 = zext i16 %213 to i32, !dbg !8262
  %cmp294 = icmp ne i32 %conv291, %conv293, !dbg !8263
  br i1 %cmp294, label %if.then345, label %lor.lhs.false296, !dbg !8264

lor.lhs.false296:                                 ; preds = %if.end288
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8265
  %215 = load i64, i64* %r, align 8, !dbg !8266
  %arrayidx297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i64 %215, !dbg !8265
  %green298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx297, i32 0, i32 1, !dbg !8267
  %216 = load i16, i16* %green298, align 2, !dbg !8267
  %conv299 = zext i16 %216 to i32, !dbg !8265
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8268
  %green300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !8268
  %218 = load i16, i16* %green300, align 2, !dbg !8268
  %conv301 = zext i16 %218 to i32, !dbg !8268
  %cmp302 = icmp ne i32 %conv299, %conv301, !dbg !8269
  br i1 %cmp302, label %if.then345, label %lor.lhs.false304, !dbg !8270

lor.lhs.false304:                                 ; preds = %lor.lhs.false296
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8271
  %220 = load i64, i64* %r, align 8, !dbg !8272
  %arrayidx305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %219, i64 %220, !dbg !8271
  %blue306 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx305, i32 0, i32 0, !dbg !8273
  %221 = load i16, i16* %blue306, align 2, !dbg !8273
  %conv307 = zext i16 %221 to i32, !dbg !8271
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8274
  %blue308 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 0, !dbg !8274
  %223 = load i16, i16* %blue308, align 2, !dbg !8274
  %conv309 = zext i16 %223 to i32, !dbg !8274
  %cmp310 = icmp ne i32 %conv307, %conv309, !dbg !8275
  br i1 %cmp310, label %if.then345, label %lor.lhs.false312, !dbg !8276

lor.lhs.false312:                                 ; preds = %lor.lhs.false304
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8277
  %225 = load i64, i64* %r, align 8, !dbg !8278
  %arrayidx313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i64 %225, !dbg !8277
  %opacity314 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx313, i32 0, i32 3, !dbg !8279
  %226 = load i16, i16* %opacity314, align 2, !dbg !8279
  %conv315 = zext i16 %226 to i32, !dbg !8277
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8280
  %opacity316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 0, i32 3, !dbg !8280
  %228 = load i16, i16* %opacity316, align 2, !dbg !8280
  %conv317 = zext i16 %228 to i32, !dbg !8280
  %cmp318 = icmp ne i32 %conv315, %conv317, !dbg !8281
  br i1 %cmp318, label %if.then345, label %lor.lhs.false320, !dbg !8282

lor.lhs.false320:                                 ; preds = %lor.lhs.false312
  %229 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8283
  %colorspace321 = getelementptr inbounds %struct._Image, %struct._Image* %229, i32 0, i32 1, !dbg !8284
  %230 = load i32, i32* %colorspace321, align 4, !dbg !8284
  %cmp322 = icmp eq i32 %230, 12, !dbg !8285
  br i1 %cmp322, label %land.lhs.true324, label %if.end348, !dbg !8286

land.lhs.true324:                                 ; preds = %lor.lhs.false320
  %231 = load i16*, i16** %p_indexes, align 8, !dbg !8287
  %232 = load i64, i64* %r, align 8, !dbg !8287
  %add.ptr325 = getelementptr inbounds i16, i16* %231, i64 %232, !dbg !8287
  %cmp326 = icmp eq i16* %add.ptr325, null, !dbg !8287
  br i1 %cmp326, label %cond.true328, label %cond.false329, !dbg !8287

cond.true328:                                     ; preds = %land.lhs.true324
  br label %cond.end332, !dbg !8287

cond.false329:                                    ; preds = %land.lhs.true324
  %233 = load i16*, i16** %p_indexes, align 8, !dbg !8287
  %234 = load i64, i64* %r, align 8, !dbg !8287
  %add.ptr330 = getelementptr inbounds i16, i16* %233, i64 %234, !dbg !8287
  %235 = load i16, i16* %add.ptr330, align 2, !dbg !8287
  %conv331 = zext i16 %235 to i32, !dbg !8287
  br label %cond.end332, !dbg !8287

cond.end332:                                      ; preds = %cond.false329, %cond.true328
  %cond333 = phi i32 [ 0, %cond.true328 ], [ %conv331, %cond.false329 ], !dbg !8287
  %236 = load i16*, i16** %q_indexes, align 8, !dbg !8288
  %237 = load i64, i64* %y29, align 8, !dbg !8288
  %add.ptr334 = getelementptr inbounds i16, i16* %236, i64 %237, !dbg !8288
  %cmp335 = icmp eq i16* %add.ptr334, null, !dbg !8288
  br i1 %cmp335, label %cond.true337, label %cond.false338, !dbg !8288

cond.true337:                                     ; preds = %cond.end332
  br label %cond.end341, !dbg !8288

cond.false338:                                    ; preds = %cond.end332
  %238 = load i16*, i16** %q_indexes, align 8, !dbg !8288
  %239 = load i64, i64* %y29, align 8, !dbg !8288
  %add.ptr339 = getelementptr inbounds i16, i16* %238, i64 %239, !dbg !8288
  %240 = load i16, i16* %add.ptr339, align 2, !dbg !8288
  %conv340 = zext i16 %240 to i32, !dbg !8288
  br label %cond.end341, !dbg !8288

cond.end341:                                      ; preds = %cond.false338, %cond.true337
  %cond342 = phi i32 [ 0, %cond.true337 ], [ %conv340, %cond.false338 ], !dbg !8288
  %cmp343 = icmp ne i32 %cond333, %cond342, !dbg !8289
  br i1 %cmp343, label %if.then345, label %if.end348, !dbg !8290

if.then345:                                       ; preds = %cond.end341, %lor.lhs.false312, %lor.lhs.false304, %lor.lhs.false296, %if.end288
  %241 = load i64*, i64** %changes, align 8, !dbg !8291
  %242 = load i32, i32* %id, align 4, !dbg !8292
  %idxprom = sext i32 %242 to i64, !dbg !8291
  %arrayidx346 = getelementptr inbounds i64, i64* %241, i64 %idxprom, !dbg !8291
  %243 = load i64, i64* %arrayidx346, align 8, !dbg !8293
  %inc347 = add i64 %243, 1, !dbg !8293
  store i64 %inc347, i64* %arrayidx346, align 8, !dbg !8293
  br label %if.end348, !dbg !8291

if.end348:                                        ; preds = %if.then345, %cond.end341, %lor.lhs.false320
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8294
  %incdec.ptr349 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 1, !dbg !8294
  store %struct._PixelPacket* %incdec.ptr349, %struct._PixelPacket** %p, align 8, !dbg !8294
  %245 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8295
  %incdec.ptr350 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %245, i32 1, !dbg !8295
  store %struct._PixelPacket* %incdec.ptr350, %struct._PixelPacket** %q, align 8, !dbg !8295
  br label %for.inc351, !dbg !8296

for.inc351:                                       ; preds = %if.end348
  %246 = load i64, i64* %y29, align 8, !dbg !8297
  %inc352 = add nsw i64 %246, 1, !dbg !8297
  store i64 %inc352, i64* %y29, align 8, !dbg !8297
  br label %for.cond46, !dbg !8298, !llvm.loop !8299

for.end353:                                       ; preds = %for.cond46
  %247 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !8301
  %248 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8303
  %call354 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %247, %struct._ExceptionInfo* %248), !dbg !8304
  %cmp355 = icmp eq i32 %call354, 0, !dbg !8305
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !8306

if.then357:                                       ; preds = %for.end353
  store i32 0, i32* %status, align 4, !dbg !8307
  br label %if.end358, !dbg !8308

if.end358:                                        ; preds = %if.then357, %for.end353
  %249 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8309
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %249, i32 0, i32 47, !dbg !8311
  %250 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8311
  %cmp359 = icmp ne i32 (i8*, i64, i64, i8*)* %250, null, !dbg !8312
  br i1 %cmp359, label %if.then361, label %if.end369, !dbg !8313

if.then361:                                       ; preds = %if.end358
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8314, metadata !DIExpression()), !dbg !8316
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8317
  %252 = load i64, i64* %progress, align 8, !dbg !8318
  %inc362 = add nsw i64 %252, 1, !dbg !8318
  store i64 %inc362, i64* %progress, align 8, !dbg !8318
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8319
  %rows363 = getelementptr inbounds %struct._Image, %struct._Image* %253, i32 0, i32 8, !dbg !8320
  %254 = load i64, i64* %rows363, align 8, !dbg !8320
  %call364 = call i32 @SetImageProgress(%struct._Image* %251, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i64 0, i64 0), i64 %252, i64 %254), !dbg !8321
  store i32 %call364, i32* %proceed, align 4, !dbg !8322
  %255 = load i32, i32* %proceed, align 4, !dbg !8323
  %cmp365 = icmp eq i32 %255, 0, !dbg !8325
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !8326

if.then367:                                       ; preds = %if.then361
  store i32 0, i32* %status, align 4, !dbg !8327
  br label %if.end368, !dbg !8328

if.end368:                                        ; preds = %if.then367, %if.then361
  br label %if.end369, !dbg !8329

if.end369:                                        ; preds = %if.end368, %if.end358
  br label %for.inc370, !dbg !8330

for.inc370:                                       ; preds = %if.end369, %if.then42, %if.then31
  %256 = load i64, i64* %x23, align 8, !dbg !8331
  %inc371 = add nsw i64 %256, 1, !dbg !8331
  store i64 %inc371, i64* %x23, align 8, !dbg !8331
  br label %for.cond24, !dbg !8332, !llvm.loop !8333

for.end372:                                       ; preds = %for.cond24
  %257 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8335
  %type = getelementptr inbounds %struct._Image, %struct._Image* %257, i32 0, i32 77, !dbg !8336
  %258 = load i32, i32* %type, align 8, !dbg !8336
  %259 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !8337
  %type373 = getelementptr inbounds %struct._Image, %struct._Image* %259, i32 0, i32 77, !dbg !8338
  store i32 %258, i32* %type373, align 8, !dbg !8339
  %260 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !8340
  %call374 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %260), !dbg !8341
  store %struct._CacheView* %call374, %struct._CacheView** %q_view, align 8, !dbg !8342
  %261 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !8343
  %call375 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %261), !dbg !8344
  store %struct._CacheView* %call375, %struct._CacheView** %p_view, align 8, !dbg !8345
  store i64 0, i64* %i, align 8, !dbg !8346
  br label %for.cond376, !dbg !8348

for.cond376:                                      ; preds = %for.inc383, %for.end372
  %262 = load i64, i64* %i, align 8, !dbg !8349
  %call377 = call i64 @GetOpenMPMaximumThreads(), !dbg !8351
  %cmp378 = icmp slt i64 %262, %call377, !dbg !8352
  br i1 %cmp378, label %for.body380, label %for.end385, !dbg !8353

for.body380:                                      ; preds = %for.cond376
  %263 = load i64*, i64** %changes, align 8, !dbg !8354
  %264 = load i64, i64* %i, align 8, !dbg !8355
  %arrayidx381 = getelementptr inbounds i64, i64* %263, i64 %264, !dbg !8354
  %265 = load i64, i64* %arrayidx381, align 8, !dbg !8354
  %266 = load i64, i64* %changed, align 8, !dbg !8356
  %add382 = add i64 %266, %265, !dbg !8356
  store i64 %add382, i64* %changed, align 8, !dbg !8356
  br label %for.inc383, !dbg !8357

for.inc383:                                       ; preds = %for.body380
  %267 = load i64, i64* %i, align 8, !dbg !8358
  %inc384 = add nsw i64 %267, 1, !dbg !8358
  store i64 %inc384, i64* %i, align 8, !dbg !8358
  br label %for.cond376, !dbg !8359, !llvm.loop !8360

for.end385:                                       ; preds = %for.cond376
  %268 = load i64*, i64** %changes, align 8, !dbg !8362
  %269 = bitcast i64* %268 to i8*, !dbg !8362
  %call386 = call i8* @RelinquishMagickMemory(i8* %269), !dbg !8363
  %270 = bitcast i8* %call386 to i64*, !dbg !8364
  store i64* %270, i64** %changes, align 8, !dbg !8365
  %271 = load i32, i32* %status, align 4, !dbg !8366
  %tobool = icmp ne i32 %271, 0, !dbg !8366
  br i1 %tobool, label %cond.true387, label %cond.false388, !dbg !8366

cond.true387:                                     ; preds = %for.end385
  %272 = load i64, i64* %changed, align 8, !dbg !8367
  br label %cond.end389, !dbg !8366

cond.false388:                                    ; preds = %for.end385
  br label %cond.end389, !dbg !8366

cond.end389:                                      ; preds = %cond.false388, %cond.true387
  %cond390 = phi i64 [ %272, %cond.true387 ], [ 0, %cond.false388 ], !dbg !8366
  store i64 %cond390, i64* %retval, align 8, !dbg !8368
  br label %return, !dbg !8368

if.end391:                                        ; preds = %land.lhs.true, %for.end
  store i64 0, i64* %y, align 8, !dbg !8369
  br label %for.cond392, !dbg !8371

for.cond392:                                      ; preds = %for.inc1469, %if.end391
  %273 = load i64, i64* %y, align 8, !dbg !8372
  %274 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8374
  %rows393 = getelementptr inbounds %struct._Image, %struct._Image* %274, i32 0, i32 8, !dbg !8375
  %275 = load i64, i64* %rows393, align 8, !dbg !8375
  %cmp394 = icmp slt i64 %273, %275, !dbg !8376
  br i1 %cmp394, label %for.body396, label %for.end1471, !dbg !8377

for.body396:                                      ; preds = %for.cond392
  call void @llvm.dbg.declare(metadata i32* %id397, metadata !8378, metadata !DIExpression()), !dbg !8380
  %call398 = call i32 @GetOpenMPThreadId(), !dbg !8381
  store i32 %call398, i32* %id397, align 4, !dbg !8380
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p399, metadata !8382, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.declare(metadata i16** %p_indexes400, metadata !8384, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q401, metadata !8386, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.declare(metadata i16** %q_indexes402, metadata !8388, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.declare(metadata i64* %x403, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.declare(metadata i64* %r404, metadata !8392, metadata !DIExpression()), !dbg !8393
  %276 = load i32, i32* %status, align 4, !dbg !8394
  %cmp405 = icmp eq i32 %276, 0, !dbg !8396
  br i1 %cmp405, label %if.then407, label %if.end408, !dbg !8397

if.then407:                                       ; preds = %for.body396
  br label %for.inc1469, !dbg !8398

if.end408:                                        ; preds = %for.body396
  %277 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !8399
  %278 = load i64, i64* %offx, align 8, !dbg !8400
  %sub409 = sub nsw i64 0, %278, !dbg !8401
  %279 = load i64, i64* %y, align 8, !dbg !8402
  %280 = load i64, i64* %offy, align 8, !dbg !8403
  %sub410 = sub nsw i64 %279, %280, !dbg !8404
  %281 = load i64, i64* %virt_width, align 8, !dbg !8405
  %282 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8406
  %height411 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %282, i32 0, i32 2, !dbg !8407
  %283 = load i64, i64* %height411, align 8, !dbg !8407
  %284 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8408
  %call412 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %277, i64 %sub409, i64 %sub410, i64 %281, i64 %283, %struct._ExceptionInfo* %284), !dbg !8409
  store %struct._PixelPacket* %call412, %struct._PixelPacket** %p399, align 8, !dbg !8410
  %285 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !8411
  %286 = load i64, i64* %y, align 8, !dbg !8412
  %287 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !8413
  %columns413 = getelementptr inbounds %struct._Image, %struct._Image* %287, i32 0, i32 7, !dbg !8414
  %288 = load i64, i64* %columns413, align 8, !dbg !8414
  %289 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8415
  %call414 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %285, i64 0, i64 %286, i64 %288, i64 1, %struct._ExceptionInfo* %289), !dbg !8416
  store %struct._PixelPacket* %call414, %struct._PixelPacket** %q401, align 8, !dbg !8417
  %290 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8418
  %cmp415 = icmp eq %struct._PixelPacket* %290, null, !dbg !8420
  br i1 %cmp415, label %if.then420, label %lor.lhs.false417, !dbg !8421

lor.lhs.false417:                                 ; preds = %if.end408
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8422
  %cmp418 = icmp eq %struct._PixelPacket* %291, null, !dbg !8423
  br i1 %cmp418, label %if.then420, label %if.end421, !dbg !8424

if.then420:                                       ; preds = %lor.lhs.false417, %if.end408
  store i32 0, i32* %status, align 4, !dbg !8425
  br label %for.inc1469, !dbg !8427

if.end421:                                        ; preds = %lor.lhs.false417
  %292 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !8428
  %call422 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %292), !dbg !8429
  store i16* %call422, i16** %p_indexes400, align 8, !dbg !8430
  %293 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !8431
  %call423 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %293), !dbg !8432
  store i16* %call423, i16** %q_indexes402, align 8, !dbg !8433
  %294 = load i64, i64* %virt_width, align 8, !dbg !8434
  %295 = load i64, i64* %offy, align 8, !dbg !8435
  %mul424 = mul i64 %294, %295, !dbg !8436
  %296 = load i64, i64* %offx, align 8, !dbg !8437
  %add425 = add i64 %mul424, %296, !dbg !8438
  store i64 %add425, i64* %r404, align 8, !dbg !8439
  store i64 0, i64* %x403, align 8, !dbg !8440
  br label %for.cond426, !dbg !8442

for.cond426:                                      ; preds = %for.inc1448, %if.end421
  %297 = load i64, i64* %x403, align 8, !dbg !8443
  %298 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8445
  %columns427 = getelementptr inbounds %struct._Image, %struct._Image* %298, i32 0, i32 7, !dbg !8446
  %299 = load i64, i64* %columns427, align 8, !dbg !8446
  %cmp428 = icmp slt i64 %297, %299, !dbg !8447
  br i1 %cmp428, label %for.body430, label %for.end1450, !dbg !8448

for.body430:                                      ; preds = %for.cond426
  call void @llvm.dbg.declare(metadata i64* %v431, metadata !8449, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata i64* %u, metadata !8452, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.declare(metadata double** %k432, metadata !8454, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %k_pixels433, metadata !8456, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.declare(metadata i16** %k_indexes434, metadata !8458, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.declare(metadata %struct._DoublePixelPacket* %result435, metadata !8460, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.declare(metadata %struct._DoublePixelPacket* %min, metadata !8462, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata %struct._DoublePixelPacket* %max, metadata !8464, metadata !DIExpression()), !dbg !8465
  %300 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8466
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8467
  %302 = load i64, i64* %r404, align 8, !dbg !8468
  %arrayidx436 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i64 %302, !dbg !8467
  %303 = bitcast %struct._PixelPacket* %300 to i8*, !dbg !8467
  %304 = bitcast %struct._PixelPacket* %arrayidx436 to i8*, !dbg !8467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %303, i8* align 2 %304, i64 8, i1 false), !dbg !8467
  %305 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8469
  %colorspace437 = getelementptr inbounds %struct._Image, %struct._Image* %305, i32 0, i32 1, !dbg !8471
  %306 = load i32, i32* %colorspace437, align 4, !dbg !8471
  %cmp438 = icmp eq i32 %306, 12, !dbg !8472
  br i1 %cmp438, label %if.then440, label %if.end457, !dbg !8473

if.then440:                                       ; preds = %for.body430
  %307 = load i16*, i16** %q_indexes402, align 8, !dbg !8474
  %308 = load i64, i64* %x403, align 8, !dbg !8474
  %add.ptr441 = getelementptr inbounds i16, i16* %307, i64 %308, !dbg !8474
  %cmp442 = icmp ne i16* %add.ptr441, null, !dbg !8474
  br i1 %cmp442, label %if.then444, label %if.end456, !dbg !8477

if.then444:                                       ; preds = %if.then440
  %309 = load i16*, i16** %p_indexes400, align 8, !dbg !8474
  %310 = load i64, i64* %r404, align 8, !dbg !8474
  %add.ptr445 = getelementptr inbounds i16, i16* %309, i64 %310, !dbg !8474
  %cmp446 = icmp eq i16* %add.ptr445, null, !dbg !8474
  br i1 %cmp446, label %cond.true448, label %cond.false449, !dbg !8474

cond.true448:                                     ; preds = %if.then444
  br label %cond.end452, !dbg !8474

cond.false449:                                    ; preds = %if.then444
  %311 = load i16*, i16** %p_indexes400, align 8, !dbg !8474
  %312 = load i64, i64* %r404, align 8, !dbg !8474
  %add.ptr450 = getelementptr inbounds i16, i16* %311, i64 %312, !dbg !8474
  %313 = load i16, i16* %add.ptr450, align 2, !dbg !8474
  %conv451 = zext i16 %313 to i32, !dbg !8474
  br label %cond.end452, !dbg !8474

cond.end452:                                      ; preds = %cond.false449, %cond.true448
  %cond453 = phi i32 [ 0, %cond.true448 ], [ %conv451, %cond.false449 ], !dbg !8474
  %conv454 = trunc i32 %cond453 to i16, !dbg !8474
  %314 = load i16*, i16** %q_indexes402, align 8, !dbg !8474
  %315 = load i64, i64* %x403, align 8, !dbg !8474
  %add.ptr455 = getelementptr inbounds i16, i16* %314, i64 %315, !dbg !8474
  store i16 %conv454, i16* %add.ptr455, align 2, !dbg !8474
  br label %if.end456, !dbg !8474

if.end456:                                        ; preds = %cond.end452, %if.then440
  br label %if.end457, !dbg !8477

if.end457:                                        ; preds = %if.end456, %for.body430
  %index458 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !8478
  store double 6.553500e+04, double* %index458, align 8, !dbg !8479
  %opacity459 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !8480
  store double 6.553500e+04, double* %opacity459, align 8, !dbg !8481
  %blue460 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !8482
  store double 6.553500e+04, double* %blue460, align 8, !dbg !8483
  %green461 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !8484
  store double 6.553500e+04, double* %green461, align 8, !dbg !8485
  %red462 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !8486
  store double 6.553500e+04, double* %red462, align 8, !dbg !8487
  %index463 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !8488
  store double 0.000000e+00, double* %index463, align 8, !dbg !8489
  %opacity464 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !8490
  store double 0.000000e+00, double* %opacity464, align 8, !dbg !8491
  %blue465 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !8492
  store double 0.000000e+00, double* %blue465, align 8, !dbg !8493
  %green466 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !8494
  store double 0.000000e+00, double* %green466, align 8, !dbg !8495
  %red467 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !8496
  store double 0.000000e+00, double* %red467, align 8, !dbg !8497
  %316 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8498
  %317 = load i64, i64* %r404, align 8, !dbg !8499
  %arrayidx468 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %316, i64 %317, !dbg !8498
  %red469 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx468, i32 0, i32 2, !dbg !8500
  %318 = load i16, i16* %red469, align 2, !dbg !8500
  %conv470 = uitofp i16 %318 to double, !dbg !8501
  %red471 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8502
  store double %conv470, double* %red471, align 8, !dbg !8503
  %319 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8504
  %320 = load i64, i64* %r404, align 8, !dbg !8505
  %arrayidx472 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %319, i64 %320, !dbg !8504
  %green473 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx472, i32 0, i32 1, !dbg !8506
  %321 = load i16, i16* %green473, align 2, !dbg !8506
  %conv474 = uitofp i16 %321 to double, !dbg !8507
  %green475 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8508
  store double %conv474, double* %green475, align 8, !dbg !8509
  %322 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8510
  %323 = load i64, i64* %r404, align 8, !dbg !8511
  %arrayidx476 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %322, i64 %323, !dbg !8510
  %blue477 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx476, i32 0, i32 0, !dbg !8512
  %324 = load i16, i16* %blue477, align 2, !dbg !8512
  %conv478 = uitofp i16 %324 to double, !dbg !8513
  %blue479 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8514
  store double %conv478, double* %blue479, align 8, !dbg !8515
  %325 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8516
  %326 = load i64, i64* %r404, align 8, !dbg !8517
  %arrayidx480 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %325, i64 %326, !dbg !8516
  %opacity481 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx480, i32 0, i32 3, !dbg !8518
  %327 = load i16, i16* %opacity481, align 2, !dbg !8518
  %conv482 = uitofp i16 %327 to double, !dbg !8519
  %sub483 = fsub double 6.553500e+04, %conv482, !dbg !8520
  %opacity484 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8521
  store double %sub483, double* %opacity484, align 8, !dbg !8522
  %index485 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8523
  store double 0.000000e+00, double* %index485, align 8, !dbg !8524
  %328 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8525
  %colorspace486 = getelementptr inbounds %struct._Image, %struct._Image* %328, i32 0, i32 1, !dbg !8527
  %329 = load i32, i32* %colorspace486, align 4, !dbg !8527
  %cmp487 = icmp eq i32 %329, 12, !dbg !8528
  br i1 %cmp487, label %if.then489, label %if.end501, !dbg !8529

if.then489:                                       ; preds = %if.end457
  %330 = load i16*, i16** %p_indexes400, align 8, !dbg !8530
  %331 = load i64, i64* %r404, align 8, !dbg !8530
  %add.ptr490 = getelementptr inbounds i16, i16* %330, i64 %331, !dbg !8530
  %cmp491 = icmp eq i16* %add.ptr490, null, !dbg !8530
  br i1 %cmp491, label %cond.true493, label %cond.false494, !dbg !8530

cond.true493:                                     ; preds = %if.then489
  br label %cond.end497, !dbg !8530

cond.false494:                                    ; preds = %if.then489
  %332 = load i16*, i16** %p_indexes400, align 8, !dbg !8530
  %333 = load i64, i64* %r404, align 8, !dbg !8530
  %add.ptr495 = getelementptr inbounds i16, i16* %332, i64 %333, !dbg !8530
  %334 = load i16, i16* %add.ptr495, align 2, !dbg !8530
  %conv496 = zext i16 %334 to i32, !dbg !8530
  br label %cond.end497, !dbg !8530

cond.end497:                                      ; preds = %cond.false494, %cond.true493
  %cond498 = phi i32 [ 0, %cond.true493 ], [ %conv496, %cond.false494 ], !dbg !8530
  %conv499 = sitofp i32 %cond498 to double, !dbg !8531
  %index500 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8532
  store double %conv499, double* %index500, align 8, !dbg !8533
  br label %if.end501, !dbg !8534

if.end501:                                        ; preds = %cond.end497, %if.end457
  %335 = load i32, i32* %method.addr, align 4, !dbg !8535
  switch i32 %335, label %sw.default510 [
    i32 1, label %sw.bb502
    i32 6, label %sw.bb508
    i32 5, label %sw.bb508
  ], !dbg !8536

sw.bb502:                                         ; preds = %if.end501
  %336 = load double, double* %bias.addr, align 8, !dbg !8537
  %index503 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8539
  store double %336, double* %index503, align 8, !dbg !8540
  %opacity504 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8541
  store double %336, double* %opacity504, align 8, !dbg !8542
  %blue505 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8543
  store double %336, double* %blue505, align 8, !dbg !8544
  %green506 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8545
  store double %336, double* %green506, align 8, !dbg !8546
  %red507 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8547
  store double %336, double* %red507, align 8, !dbg !8548
  br label %sw.epilog511, !dbg !8549

sw.bb508:                                         ; preds = %if.end501, %if.end501
  %red509 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8550
  store double 0.000000e+00, double* %red509, align 8, !dbg !8551
  br label %sw.epilog511, !dbg !8552

sw.default510:                                    ; preds = %if.end501
  br label %sw.epilog511, !dbg !8553

sw.epilog511:                                     ; preds = %sw.default510, %sw.bb508, %sw.bb502
  %337 = load i32, i32* %method.addr, align 4, !dbg !8554
  switch i32 %337, label %sw.default1283 [
    i32 1, label %sw.bb512
    i32 3, label %sw.bb788
    i32 4, label %sw.bb861
    i32 18, label %sw.bb939
    i32 19, label %sw.bb939
    i32 20, label %sw.bb939
    i32 5, label %sw.bb1091
    i32 6, label %sw.bb1142
    i32 22, label %sw.bb1198
    i32 0, label %sw.bb1282
  ], !dbg !8555

sw.bb512:                                         ; preds = %sw.epilog511
  %338 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8556
  %values513 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %338, i32 0, i32 5, !dbg !8558
  %339 = load double*, double** %values513, align 8, !dbg !8558
  %340 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8559
  %width514 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %340, i32 0, i32 1, !dbg !8560
  %341 = load i64, i64* %width514, align 8, !dbg !8560
  %342 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8561
  %height515 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %342, i32 0, i32 2, !dbg !8562
  %343 = load i64, i64* %height515, align 8, !dbg !8562
  %mul516 = mul i64 %341, %343, !dbg !8563
  %sub517 = sub i64 %mul516, 1, !dbg !8564
  %arrayidx518 = getelementptr inbounds double, double* %339, i64 %sub517, !dbg !8556
  store double* %arrayidx518, double** %k432, align 8, !dbg !8565
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8566
  store %struct._PixelPacket* %344, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8567
  %345 = load i16*, i16** %p_indexes400, align 8, !dbg !8568
  store i16* %345, i16** %k_indexes434, align 8, !dbg !8569
  %346 = load i32, i32* %channel.addr, align 4, !dbg !8570
  %and519 = and i32 %346, 256, !dbg !8572
  %cmp520 = icmp eq i32 %and519, 0, !dbg !8573
  br i1 %cmp520, label %if.then526, label %lor.lhs.false522, !dbg !8574

lor.lhs.false522:                                 ; preds = %sw.bb512
  %347 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8575
  %matte523 = getelementptr inbounds %struct._Image, %struct._Image* %347, i32 0, i32 6, !dbg !8576
  %348 = load i32, i32* %matte523, align 8, !dbg !8576
  %cmp524 = icmp eq i32 %348, 0, !dbg !8577
  br i1 %cmp524, label %if.then526, label %if.else656, !dbg !8578

if.then526:                                       ; preds = %lor.lhs.false522, %sw.bb512
  store i64 0, i64* %v431, align 8, !dbg !8579
  br label %for.cond527, !dbg !8582

for.cond527:                                      ; preds = %for.inc595, %if.then526
  %349 = load i64, i64* %v431, align 8, !dbg !8583
  %350 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8585
  %height528 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %350, i32 0, i32 2, !dbg !8586
  %351 = load i64, i64* %height528, align 8, !dbg !8586
  %cmp529 = icmp slt i64 %349, %351, !dbg !8587
  br i1 %cmp529, label %for.body531, label %for.end597, !dbg !8588

for.body531:                                      ; preds = %for.cond527
  store i64 0, i64* %u, align 8, !dbg !8589
  br label %for.cond532, !dbg !8592

for.cond532:                                      ; preds = %for.inc589, %for.body531
  %352 = load i64, i64* %u, align 8, !dbg !8593
  %353 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8595
  %width533 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %353, i32 0, i32 1, !dbg !8596
  %354 = load i64, i64* %width533, align 8, !dbg !8596
  %cmp534 = icmp slt i64 %352, %354, !dbg !8597
  br i1 %cmp534, label %for.body536, label %for.end592, !dbg !8598

for.body536:                                      ; preds = %for.cond532
  %355 = load double*, double** %k432, align 8, !dbg !8599
  %356 = load double, double* %355, align 8, !dbg !8599
  %357 = load double*, double** %k432, align 8, !dbg !8599
  %358 = load double, double* %357, align 8, !dbg !8599
  %cmp537 = fcmp une double %356, %358, !dbg !8599
  br i1 %cmp537, label %cond.true539, label %cond.false540, !dbg !8602

cond.true539:                                     ; preds = %for.body536
  br i1 true, label %if.then541, label %if.end542, !dbg !8599

cond.false540:                                    ; preds = %for.body536
  br i1 false, label %if.then541, label %if.end542, !dbg !8602

if.then541:                                       ; preds = %cond.false540, %cond.true539
  br label %for.inc589, !dbg !8603

if.end542:                                        ; preds = %cond.false540, %cond.true539
  %359 = load double*, double** %k432, align 8, !dbg !8604
  %360 = load double, double* %359, align 8, !dbg !8605
  %361 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8606
  %362 = load i64, i64* %u, align 8, !dbg !8607
  %arrayidx543 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %361, i64 %362, !dbg !8606
  %red544 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx543, i32 0, i32 2, !dbg !8608
  %363 = load i16, i16* %red544, align 2, !dbg !8608
  %conv545 = zext i16 %363 to i32, !dbg !8606
  %conv546 = sitofp i32 %conv545 to double, !dbg !8606
  %mul547 = fmul double %360, %conv546, !dbg !8609
  %red548 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8610
  %364 = load double, double* %red548, align 8, !dbg !8611
  %add549 = fadd double %364, %mul547, !dbg !8611
  store double %add549, double* %red548, align 8, !dbg !8611
  %365 = load double*, double** %k432, align 8, !dbg !8612
  %366 = load double, double* %365, align 8, !dbg !8613
  %367 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8614
  %368 = load i64, i64* %u, align 8, !dbg !8615
  %arrayidx550 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %367, i64 %368, !dbg !8614
  %green551 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx550, i32 0, i32 1, !dbg !8616
  %369 = load i16, i16* %green551, align 2, !dbg !8616
  %conv552 = zext i16 %369 to i32, !dbg !8614
  %conv553 = sitofp i32 %conv552 to double, !dbg !8614
  %mul554 = fmul double %366, %conv553, !dbg !8617
  %green555 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8618
  %370 = load double, double* %green555, align 8, !dbg !8619
  %add556 = fadd double %370, %mul554, !dbg !8619
  store double %add556, double* %green555, align 8, !dbg !8619
  %371 = load double*, double** %k432, align 8, !dbg !8620
  %372 = load double, double* %371, align 8, !dbg !8621
  %373 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8622
  %374 = load i64, i64* %u, align 8, !dbg !8623
  %arrayidx557 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %373, i64 %374, !dbg !8622
  %blue558 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx557, i32 0, i32 0, !dbg !8624
  %375 = load i16, i16* %blue558, align 2, !dbg !8624
  %conv559 = zext i16 %375 to i32, !dbg !8622
  %conv560 = sitofp i32 %conv559 to double, !dbg !8622
  %mul561 = fmul double %372, %conv560, !dbg !8625
  %blue562 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8626
  %376 = load double, double* %blue562, align 8, !dbg !8627
  %add563 = fadd double %376, %mul561, !dbg !8627
  store double %add563, double* %blue562, align 8, !dbg !8627
  %377 = load double*, double** %k432, align 8, !dbg !8628
  %378 = load double, double* %377, align 8, !dbg !8629
  %379 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8630
  %380 = load i64, i64* %u, align 8, !dbg !8631
  %arrayidx564 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %379, i64 %380, !dbg !8630
  %opacity565 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx564, i32 0, i32 3, !dbg !8632
  %381 = load i16, i16* %opacity565, align 2, !dbg !8632
  %conv566 = zext i16 %381 to i32, !dbg !8630
  %conv567 = sitofp i32 %conv566 to double, !dbg !8630
  %mul568 = fmul double %378, %conv567, !dbg !8633
  %opacity569 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8634
  %382 = load double, double* %opacity569, align 8, !dbg !8635
  %add570 = fadd double %382, %mul568, !dbg !8635
  store double %add570, double* %opacity569, align 8, !dbg !8635
  %383 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8636
  %colorspace571 = getelementptr inbounds %struct._Image, %struct._Image* %383, i32 0, i32 1, !dbg !8638
  %384 = load i32, i32* %colorspace571, align 4, !dbg !8638
  %cmp572 = icmp eq i32 %384, 12, !dbg !8639
  br i1 %cmp572, label %if.then574, label %if.end588, !dbg !8640

if.then574:                                       ; preds = %if.end542
  %385 = load double*, double** %k432, align 8, !dbg !8641
  %386 = load double, double* %385, align 8, !dbg !8642
  %387 = load i16*, i16** %k_indexes434, align 8, !dbg !8643
  %388 = load i64, i64* %u, align 8, !dbg !8643
  %add.ptr575 = getelementptr inbounds i16, i16* %387, i64 %388, !dbg !8643
  %cmp576 = icmp eq i16* %add.ptr575, null, !dbg !8643
  br i1 %cmp576, label %cond.true578, label %cond.false579, !dbg !8643

cond.true578:                                     ; preds = %if.then574
  br label %cond.end582, !dbg !8643

cond.false579:                                    ; preds = %if.then574
  %389 = load i16*, i16** %k_indexes434, align 8, !dbg !8643
  %390 = load i64, i64* %u, align 8, !dbg !8643
  %add.ptr580 = getelementptr inbounds i16, i16* %389, i64 %390, !dbg !8643
  %391 = load i16, i16* %add.ptr580, align 2, !dbg !8643
  %conv581 = zext i16 %391 to i32, !dbg !8643
  br label %cond.end582, !dbg !8643

cond.end582:                                      ; preds = %cond.false579, %cond.true578
  %cond583 = phi i32 [ 0, %cond.true578 ], [ %conv581, %cond.false579 ], !dbg !8643
  %conv584 = sitofp i32 %cond583 to double, !dbg !8643
  %mul585 = fmul double %386, %conv584, !dbg !8644
  %index586 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8645
  %392 = load double, double* %index586, align 8, !dbg !8646
  %add587 = fadd double %392, %mul585, !dbg !8646
  store double %add587, double* %index586, align 8, !dbg !8646
  br label %if.end588, !dbg !8647

if.end588:                                        ; preds = %cond.end582, %if.end542
  br label %for.inc589, !dbg !8648

for.inc589:                                       ; preds = %if.end588, %if.then541
  %393 = load i64, i64* %u, align 8, !dbg !8649
  %inc590 = add nsw i64 %393, 1, !dbg !8649
  store i64 %inc590, i64* %u, align 8, !dbg !8649
  %394 = load double*, double** %k432, align 8, !dbg !8650
  %incdec.ptr591 = getelementptr inbounds double, double* %394, i32 -1, !dbg !8650
  store double* %incdec.ptr591, double** %k432, align 8, !dbg !8650
  br label %for.cond532, !dbg !8651, !llvm.loop !8652

for.end592:                                       ; preds = %for.cond532
  %395 = load i64, i64* %virt_width, align 8, !dbg !8654
  %396 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8655
  %add.ptr593 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %396, i64 %395, !dbg !8655
  store %struct._PixelPacket* %add.ptr593, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8655
  %397 = load i64, i64* %virt_width, align 8, !dbg !8656
  %398 = load i16*, i16** %k_indexes434, align 8, !dbg !8657
  %add.ptr594 = getelementptr inbounds i16, i16* %398, i64 %397, !dbg !8657
  store i16* %add.ptr594, i16** %k_indexes434, align 8, !dbg !8657
  br label %for.inc595, !dbg !8658

for.inc595:                                       ; preds = %for.end592
  %399 = load i64, i64* %v431, align 8, !dbg !8659
  %inc596 = add nsw i64 %399, 1, !dbg !8659
  store i64 %inc596, i64* %v431, align 8, !dbg !8659
  br label %for.cond527, !dbg !8660, !llvm.loop !8661

for.end597:                                       ; preds = %for.cond527
  %400 = load i32, i32* %channel.addr, align 4, !dbg !8663
  %and598 = and i32 %400, 1, !dbg !8665
  %cmp599 = icmp ne i32 %and598, 0, !dbg !8666
  br i1 %cmp599, label %if.then601, label %if.end606, !dbg !8667

if.then601:                                       ; preds = %for.end597
  %red602 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8668
  %401 = load double, double* %red602, align 8, !dbg !8668
  %conv603 = fptrunc double %401 to float, !dbg !8668
  %call604 = call zeroext i16 @ClampToQuantum(float %conv603), !dbg !8668
  %402 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8668
  %red605 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %402, i32 0, i32 2, !dbg !8668
  store i16 %call604, i16* %red605, align 2, !dbg !8668
  br label %if.end606, !dbg !8668

if.end606:                                        ; preds = %if.then601, %for.end597
  %403 = load i32, i32* %channel.addr, align 4, !dbg !8669
  %and607 = and i32 %403, 2, !dbg !8671
  %cmp608 = icmp ne i32 %and607, 0, !dbg !8672
  br i1 %cmp608, label %if.then610, label %if.end615, !dbg !8673

if.then610:                                       ; preds = %if.end606
  %green611 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8674
  %404 = load double, double* %green611, align 8, !dbg !8674
  %conv612 = fptrunc double %404 to float, !dbg !8674
  %call613 = call zeroext i16 @ClampToQuantum(float %conv612), !dbg !8674
  %405 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8674
  %green614 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %405, i32 0, i32 1, !dbg !8674
  store i16 %call613, i16* %green614, align 2, !dbg !8674
  br label %if.end615, !dbg !8674

if.end615:                                        ; preds = %if.then610, %if.end606
  %406 = load i32, i32* %channel.addr, align 4, !dbg !8675
  %and616 = and i32 %406, 4, !dbg !8677
  %cmp617 = icmp ne i32 %and616, 0, !dbg !8678
  br i1 %cmp617, label %if.then619, label %if.end624, !dbg !8679

if.then619:                                       ; preds = %if.end615
  %blue620 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8680
  %407 = load double, double* %blue620, align 8, !dbg !8680
  %conv621 = fptrunc double %407 to float, !dbg !8680
  %call622 = call zeroext i16 @ClampToQuantum(float %conv621), !dbg !8680
  %408 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8680
  %blue623 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %408, i32 0, i32 0, !dbg !8680
  store i16 %call622, i16* %blue623, align 2, !dbg !8680
  br label %if.end624, !dbg !8680

if.end624:                                        ; preds = %if.then619, %if.end615
  %409 = load i32, i32* %channel.addr, align 4, !dbg !8681
  %and625 = and i32 %409, 8, !dbg !8683
  %cmp626 = icmp ne i32 %and625, 0, !dbg !8684
  br i1 %cmp626, label %land.lhs.true628, label %if.end637, !dbg !8685

land.lhs.true628:                                 ; preds = %if.end624
  %410 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8686
  %matte629 = getelementptr inbounds %struct._Image, %struct._Image* %410, i32 0, i32 6, !dbg !8687
  %411 = load i32, i32* %matte629, align 8, !dbg !8687
  %cmp630 = icmp ne i32 %411, 0, !dbg !8688
  br i1 %cmp630, label %if.then632, label %if.end637, !dbg !8689

if.then632:                                       ; preds = %land.lhs.true628
  %opacity633 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8690
  %412 = load double, double* %opacity633, align 8, !dbg !8690
  %conv634 = fptrunc double %412 to float, !dbg !8690
  %call635 = call zeroext i16 @ClampToQuantum(float %conv634), !dbg !8690
  %413 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8690
  %opacity636 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %413, i32 0, i32 3, !dbg !8690
  store i16 %call635, i16* %opacity636, align 2, !dbg !8690
  br label %if.end637, !dbg !8690

if.end637:                                        ; preds = %if.then632, %land.lhs.true628, %if.end624
  %414 = load i32, i32* %channel.addr, align 4, !dbg !8691
  %and638 = and i32 %414, 32, !dbg !8693
  %cmp639 = icmp ne i32 %and638, 0, !dbg !8694
  br i1 %cmp639, label %land.lhs.true641, label %if.end655, !dbg !8695

land.lhs.true641:                                 ; preds = %if.end637
  %415 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8696
  %colorspace642 = getelementptr inbounds %struct._Image, %struct._Image* %415, i32 0, i32 1, !dbg !8697
  %416 = load i32, i32* %colorspace642, align 4, !dbg !8697
  %cmp643 = icmp eq i32 %416, 12, !dbg !8698
  br i1 %cmp643, label %if.then645, label %if.end655, !dbg !8699

if.then645:                                       ; preds = %land.lhs.true641
  %417 = load i16*, i16** %q_indexes402, align 8, !dbg !8700
  %418 = load i64, i64* %x403, align 8, !dbg !8700
  %add.ptr646 = getelementptr inbounds i16, i16* %417, i64 %418, !dbg !8700
  %cmp647 = icmp ne i16* %add.ptr646, null, !dbg !8700
  br i1 %cmp647, label %if.then649, label %if.end654, !dbg !8703

if.then649:                                       ; preds = %if.then645
  %index650 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8700
  %419 = load double, double* %index650, align 8, !dbg !8700
  %conv651 = fptrunc double %419 to float, !dbg !8700
  %call652 = call zeroext i16 @ClampToQuantum(float %conv651), !dbg !8700
  %420 = load i16*, i16** %q_indexes402, align 8, !dbg !8700
  %421 = load i64, i64* %x403, align 8, !dbg !8700
  %add.ptr653 = getelementptr inbounds i16, i16* %420, i64 %421, !dbg !8700
  store i16 %call652, i16* %add.ptr653, align 2, !dbg !8700
  br label %if.end654, !dbg !8700

if.end654:                                        ; preds = %if.then649, %if.then645
  br label %if.end655, !dbg !8703

if.end655:                                        ; preds = %if.end654, %land.lhs.true641, %if.end637
  br label %if.end787, !dbg !8704

if.else656:                                       ; preds = %lor.lhs.false522
  call void @llvm.dbg.declare(metadata double* %alpha657, metadata !8705, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.declare(metadata double* %gamma658, metadata !8708, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.declare(metadata i64* %count659, metadata !8710, metadata !DIExpression()), !dbg !8711
  store i64 0, i64* %count659, align 8, !dbg !8712
  store double 0.000000e+00, double* %gamma658, align 8, !dbg !8713
  store i64 0, i64* %v431, align 8, !dbg !8714
  br label %for.cond660, !dbg !8716

for.cond660:                                      ; preds = %for.inc737, %if.else656
  %422 = load i64, i64* %v431, align 8, !dbg !8717
  %423 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8719
  %height661 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %423, i32 0, i32 2, !dbg !8720
  %424 = load i64, i64* %height661, align 8, !dbg !8720
  %cmp662 = icmp slt i64 %422, %424, !dbg !8721
  br i1 %cmp662, label %for.body664, label %for.end739, !dbg !8722

for.body664:                                      ; preds = %for.cond660
  store i64 0, i64* %u, align 8, !dbg !8723
  br label %for.cond665, !dbg !8726

for.cond665:                                      ; preds = %for.inc731, %for.body664
  %425 = load i64, i64* %u, align 8, !dbg !8727
  %426 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8729
  %width666 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %426, i32 0, i32 1, !dbg !8730
  %427 = load i64, i64* %width666, align 8, !dbg !8730
  %cmp667 = icmp slt i64 %425, %427, !dbg !8731
  br i1 %cmp667, label %for.body669, label %for.end734, !dbg !8732

for.body669:                                      ; preds = %for.cond665
  %428 = load double*, double** %k432, align 8, !dbg !8733
  %429 = load double, double* %428, align 8, !dbg !8733
  %430 = load double*, double** %k432, align 8, !dbg !8733
  %431 = load double, double* %430, align 8, !dbg !8733
  %cmp670 = fcmp une double %429, %431, !dbg !8733
  br i1 %cmp670, label %cond.true672, label %cond.false673, !dbg !8736

cond.true672:                                     ; preds = %for.body669
  br i1 true, label %if.then674, label %if.end675, !dbg !8733

cond.false673:                                    ; preds = %for.body669
  br i1 false, label %if.then674, label %if.end675, !dbg !8736

if.then674:                                       ; preds = %cond.false673, %cond.true672
  br label %for.inc731, !dbg !8737

if.end675:                                        ; preds = %cond.false673, %cond.true672
  %432 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8738
  %433 = load i64, i64* %u, align 8, !dbg !8739
  %arrayidx676 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %432, i64 %433, !dbg !8738
  %opacity677 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx676, i32 0, i32 3, !dbg !8740
  %434 = load i16, i16* %opacity677, align 2, !dbg !8740
  %conv678 = zext i16 %434 to i32, !dbg !8738
  %sub679 = sub nsw i32 65535, %conv678, !dbg !8741
  %conv680 = sitofp i32 %sub679 to double, !dbg !8742
  %mul681 = fmul double 0x3EF0001000100010, %conv680, !dbg !8743
  store double %mul681, double* %alpha657, align 8, !dbg !8744
  %435 = load i64, i64* %count659, align 8, !dbg !8745
  %inc682 = add i64 %435, 1, !dbg !8745
  store i64 %inc682, i64* %count659, align 8, !dbg !8745
  %436 = load double*, double** %k432, align 8, !dbg !8746
  %437 = load double, double* %436, align 8, !dbg !8747
  %438 = load double, double* %alpha657, align 8, !dbg !8748
  %mul683 = fmul double %438, %437, !dbg !8748
  store double %mul683, double* %alpha657, align 8, !dbg !8748
  %439 = load double, double* %alpha657, align 8, !dbg !8749
  %440 = load double, double* %gamma658, align 8, !dbg !8750
  %add684 = fadd double %440, %439, !dbg !8750
  store double %add684, double* %gamma658, align 8, !dbg !8750
  %441 = load double, double* %alpha657, align 8, !dbg !8751
  %442 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8752
  %443 = load i64, i64* %u, align 8, !dbg !8753
  %arrayidx685 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %442, i64 %443, !dbg !8752
  %red686 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx685, i32 0, i32 2, !dbg !8754
  %444 = load i16, i16* %red686, align 2, !dbg !8754
  %conv687 = zext i16 %444 to i32, !dbg !8752
  %conv688 = sitofp i32 %conv687 to double, !dbg !8752
  %mul689 = fmul double %441, %conv688, !dbg !8755
  %red690 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8756
  %445 = load double, double* %red690, align 8, !dbg !8757
  %add691 = fadd double %445, %mul689, !dbg !8757
  store double %add691, double* %red690, align 8, !dbg !8757
  %446 = load double, double* %alpha657, align 8, !dbg !8758
  %447 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8759
  %448 = load i64, i64* %u, align 8, !dbg !8760
  %arrayidx692 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %447, i64 %448, !dbg !8759
  %green693 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx692, i32 0, i32 1, !dbg !8761
  %449 = load i16, i16* %green693, align 2, !dbg !8761
  %conv694 = zext i16 %449 to i32, !dbg !8759
  %conv695 = sitofp i32 %conv694 to double, !dbg !8759
  %mul696 = fmul double %446, %conv695, !dbg !8762
  %green697 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8763
  %450 = load double, double* %green697, align 8, !dbg !8764
  %add698 = fadd double %450, %mul696, !dbg !8764
  store double %add698, double* %green697, align 8, !dbg !8764
  %451 = load double, double* %alpha657, align 8, !dbg !8765
  %452 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8766
  %453 = load i64, i64* %u, align 8, !dbg !8767
  %arrayidx699 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %452, i64 %453, !dbg !8766
  %blue700 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx699, i32 0, i32 0, !dbg !8768
  %454 = load i16, i16* %blue700, align 2, !dbg !8768
  %conv701 = zext i16 %454 to i32, !dbg !8766
  %conv702 = sitofp i32 %conv701 to double, !dbg !8766
  %mul703 = fmul double %451, %conv702, !dbg !8769
  %blue704 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8770
  %455 = load double, double* %blue704, align 8, !dbg !8771
  %add705 = fadd double %455, %mul703, !dbg !8771
  store double %add705, double* %blue704, align 8, !dbg !8771
  %456 = load double*, double** %k432, align 8, !dbg !8772
  %457 = load double, double* %456, align 8, !dbg !8773
  %458 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8774
  %459 = load i64, i64* %u, align 8, !dbg !8775
  %arrayidx706 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %458, i64 %459, !dbg !8774
  %opacity707 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx706, i32 0, i32 3, !dbg !8776
  %460 = load i16, i16* %opacity707, align 2, !dbg !8776
  %conv708 = zext i16 %460 to i32, !dbg !8774
  %conv709 = sitofp i32 %conv708 to double, !dbg !8774
  %mul710 = fmul double %457, %conv709, !dbg !8777
  %opacity711 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8778
  %461 = load double, double* %opacity711, align 8, !dbg !8779
  %add712 = fadd double %461, %mul710, !dbg !8779
  store double %add712, double* %opacity711, align 8, !dbg !8779
  %462 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8780
  %colorspace713 = getelementptr inbounds %struct._Image, %struct._Image* %462, i32 0, i32 1, !dbg !8782
  %463 = load i32, i32* %colorspace713, align 4, !dbg !8782
  %cmp714 = icmp eq i32 %463, 12, !dbg !8783
  br i1 %cmp714, label %if.then716, label %if.end730, !dbg !8784

if.then716:                                       ; preds = %if.end675
  %464 = load double, double* %alpha657, align 8, !dbg !8785
  %465 = load i16*, i16** %k_indexes434, align 8, !dbg !8786
  %466 = load i64, i64* %u, align 8, !dbg !8786
  %add.ptr717 = getelementptr inbounds i16, i16* %465, i64 %466, !dbg !8786
  %cmp718 = icmp eq i16* %add.ptr717, null, !dbg !8786
  br i1 %cmp718, label %cond.true720, label %cond.false721, !dbg !8786

cond.true720:                                     ; preds = %if.then716
  br label %cond.end724, !dbg !8786

cond.false721:                                    ; preds = %if.then716
  %467 = load i16*, i16** %k_indexes434, align 8, !dbg !8786
  %468 = load i64, i64* %u, align 8, !dbg !8786
  %add.ptr722 = getelementptr inbounds i16, i16* %467, i64 %468, !dbg !8786
  %469 = load i16, i16* %add.ptr722, align 2, !dbg !8786
  %conv723 = zext i16 %469 to i32, !dbg !8786
  br label %cond.end724, !dbg !8786

cond.end724:                                      ; preds = %cond.false721, %cond.true720
  %cond725 = phi i32 [ 0, %cond.true720 ], [ %conv723, %cond.false721 ], !dbg !8786
  %conv726 = sitofp i32 %cond725 to double, !dbg !8786
  %mul727 = fmul double %464, %conv726, !dbg !8787
  %index728 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8788
  %470 = load double, double* %index728, align 8, !dbg !8789
  %add729 = fadd double %470, %mul727, !dbg !8789
  store double %add729, double* %index728, align 8, !dbg !8789
  br label %if.end730, !dbg !8790

if.end730:                                        ; preds = %cond.end724, %if.end675
  br label %for.inc731, !dbg !8791

for.inc731:                                       ; preds = %if.end730, %if.then674
  %471 = load i64, i64* %u, align 8, !dbg !8792
  %inc732 = add nsw i64 %471, 1, !dbg !8792
  store i64 %inc732, i64* %u, align 8, !dbg !8792
  %472 = load double*, double** %k432, align 8, !dbg !8793
  %incdec.ptr733 = getelementptr inbounds double, double* %472, i32 -1, !dbg !8793
  store double* %incdec.ptr733, double** %k432, align 8, !dbg !8793
  br label %for.cond665, !dbg !8794, !llvm.loop !8795

for.end734:                                       ; preds = %for.cond665
  %473 = load i64, i64* %virt_width, align 8, !dbg !8797
  %474 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8798
  %add.ptr735 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %474, i64 %473, !dbg !8798
  store %struct._PixelPacket* %add.ptr735, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8798
  %475 = load i64, i64* %virt_width, align 8, !dbg !8799
  %476 = load i16*, i16** %k_indexes434, align 8, !dbg !8800
  %add.ptr736 = getelementptr inbounds i16, i16* %476, i64 %475, !dbg !8800
  store i16* %add.ptr736, i16** %k_indexes434, align 8, !dbg !8800
  br label %for.inc737, !dbg !8801

for.inc737:                                       ; preds = %for.end734
  %477 = load i64, i64* %v431, align 8, !dbg !8802
  %inc738 = add nsw i64 %477, 1, !dbg !8802
  store i64 %inc738, i64* %v431, align 8, !dbg !8802
  br label %for.cond660, !dbg !8803, !llvm.loop !8804

for.end739:                                       ; preds = %for.cond660
  %478 = load double, double* %gamma658, align 8, !dbg !8806
  %cmp740 = fcmp olt double %478, 0.000000e+00, !dbg !8808
  br i1 %cmp740, label %if.then742, label %if.end743, !dbg !8809

if.then742:                                       ; preds = %for.end739
  store double 0.000000e+00, double* %gamma658, align 8, !dbg !8810
  br label %if.end743, !dbg !8811

if.end743:                                        ; preds = %if.then742, %for.end739
  %479 = load double, double* %gamma658, align 8, !dbg !8812
  %call744 = call double @PerceptibleReciprocal(double %479), !dbg !8813
  store double %call744, double* %gamma658, align 8, !dbg !8814
  %480 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8815
  %height745 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %480, i32 0, i32 2, !dbg !8816
  %481 = load i64, i64* %height745, align 8, !dbg !8816
  %conv746 = uitofp i64 %481 to double, !dbg !8817
  %482 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8818
  %width747 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %482, i32 0, i32 1, !dbg !8819
  %483 = load i64, i64* %width747, align 8, !dbg !8819
  %conv748 = uitofp i64 %483 to double, !dbg !8818
  %mul749 = fmul double %conv746, %conv748, !dbg !8820
  %484 = load i64, i64* %count659, align 8, !dbg !8821
  %conv750 = uitofp i64 %484 to double, !dbg !8821
  %div751 = fdiv double %mul749, %conv750, !dbg !8822
  %485 = load double, double* %gamma658, align 8, !dbg !8823
  %mul752 = fmul double %485, %div751, !dbg !8823
  store double %mul752, double* %gamma658, align 8, !dbg !8823
  %486 = load double, double* %gamma658, align 8, !dbg !8824
  %red753 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !8824
  %487 = load double, double* %red753, align 8, !dbg !8824
  %mul754 = fmul double %486, %487, !dbg !8824
  %conv755 = fptrunc double %mul754 to float, !dbg !8824
  %call756 = call zeroext i16 @ClampToQuantum(float %conv755), !dbg !8824
  %488 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8824
  %red757 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %488, i32 0, i32 2, !dbg !8824
  store i16 %call756, i16* %red757, align 2, !dbg !8824
  %489 = load double, double* %gamma658, align 8, !dbg !8825
  %green758 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !8825
  %490 = load double, double* %green758, align 8, !dbg !8825
  %mul759 = fmul double %489, %490, !dbg !8825
  %conv760 = fptrunc double %mul759 to float, !dbg !8825
  %call761 = call zeroext i16 @ClampToQuantum(float %conv760), !dbg !8825
  %491 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8825
  %green762 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %491, i32 0, i32 1, !dbg !8825
  store i16 %call761, i16* %green762, align 2, !dbg !8825
  %492 = load double, double* %gamma658, align 8, !dbg !8826
  %blue763 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !8826
  %493 = load double, double* %blue763, align 8, !dbg !8826
  %mul764 = fmul double %492, %493, !dbg !8826
  %conv765 = fptrunc double %mul764 to float, !dbg !8826
  %call766 = call zeroext i16 @ClampToQuantum(float %conv765), !dbg !8826
  %494 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8826
  %blue767 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %494, i32 0, i32 0, !dbg !8826
  store i16 %call766, i16* %blue767, align 2, !dbg !8826
  %opacity768 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !8827
  %495 = load double, double* %opacity768, align 8, !dbg !8827
  %conv769 = fptrunc double %495 to float, !dbg !8827
  %call770 = call zeroext i16 @ClampToQuantum(float %conv769), !dbg !8827
  %496 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !8827
  %opacity771 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %496, i32 0, i32 3, !dbg !8827
  store i16 %call770, i16* %opacity771, align 2, !dbg !8827
  %497 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8828
  %colorspace772 = getelementptr inbounds %struct._Image, %struct._Image* %497, i32 0, i32 1, !dbg !8830
  %498 = load i32, i32* %colorspace772, align 4, !dbg !8830
  %cmp773 = icmp eq i32 %498, 12, !dbg !8831
  br i1 %cmp773, label %if.then775, label %if.end786, !dbg !8832

if.then775:                                       ; preds = %if.end743
  %499 = load i16*, i16** %q_indexes402, align 8, !dbg !8833
  %500 = load i64, i64* %x403, align 8, !dbg !8833
  %add.ptr776 = getelementptr inbounds i16, i16* %499, i64 %500, !dbg !8833
  %cmp777 = icmp ne i16* %add.ptr776, null, !dbg !8833
  br i1 %cmp777, label %if.then779, label %if.end785, !dbg !8836

if.then779:                                       ; preds = %if.then775
  %501 = load double, double* %gamma658, align 8, !dbg !8833
  %index780 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !8833
  %502 = load double, double* %index780, align 8, !dbg !8833
  %mul781 = fmul double %501, %502, !dbg !8833
  %conv782 = fptrunc double %mul781 to float, !dbg !8833
  %call783 = call zeroext i16 @ClampToQuantum(float %conv782), !dbg !8833
  %503 = load i16*, i16** %q_indexes402, align 8, !dbg !8833
  %504 = load i64, i64* %x403, align 8, !dbg !8833
  %add.ptr784 = getelementptr inbounds i16, i16* %503, i64 %504, !dbg !8833
  store i16 %call783, i16* %add.ptr784, align 2, !dbg !8833
  br label %if.end785, !dbg !8833

if.end785:                                        ; preds = %if.then779, %if.then775
  br label %if.end786, !dbg !8836

if.end786:                                        ; preds = %if.end785, %if.end743
  br label %if.end787

if.end787:                                        ; preds = %if.end786, %if.end655
  br label %sw.epilog1284, !dbg !8837

sw.bb788:                                         ; preds = %sw.epilog511
  %505 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8838
  %values789 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %505, i32 0, i32 5, !dbg !8839
  %506 = load double*, double** %values789, align 8, !dbg !8839
  store double* %506, double** %k432, align 8, !dbg !8840
  %507 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8841
  store %struct._PixelPacket* %507, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8842
  %508 = load i16*, i16** %p_indexes400, align 8, !dbg !8843
  store i16* %508, i16** %k_indexes434, align 8, !dbg !8844
  store i64 0, i64* %v431, align 8, !dbg !8845
  br label %for.cond790, !dbg !8847

for.cond790:                                      ; preds = %for.inc858, %sw.bb788
  %509 = load i64, i64* %v431, align 8, !dbg !8848
  %510 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8850
  %height791 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %510, i32 0, i32 2, !dbg !8851
  %511 = load i64, i64* %height791, align 8, !dbg !8851
  %cmp792 = icmp slt i64 %509, %511, !dbg !8852
  br i1 %cmp792, label %for.body794, label %for.end860, !dbg !8853

for.body794:                                      ; preds = %for.cond790
  store i64 0, i64* %u, align 8, !dbg !8854
  br label %for.cond795, !dbg !8857

for.cond795:                                      ; preds = %for.inc852, %for.body794
  %512 = load i64, i64* %u, align 8, !dbg !8858
  %513 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8860
  %width796 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %513, i32 0, i32 1, !dbg !8861
  %514 = load i64, i64* %width796, align 8, !dbg !8861
  %cmp797 = icmp slt i64 %512, %514, !dbg !8862
  br i1 %cmp797, label %for.body799, label %for.end855, !dbg !8863

for.body799:                                      ; preds = %for.cond795
  %515 = load double*, double** %k432, align 8, !dbg !8864
  %516 = load double, double* %515, align 8, !dbg !8864
  %517 = load double*, double** %k432, align 8, !dbg !8864
  %518 = load double, double* %517, align 8, !dbg !8864
  %cmp800 = fcmp une double %516, %518, !dbg !8864
  br i1 %cmp800, label %cond.true802, label %cond.false803, !dbg !8867

cond.true802:                                     ; preds = %for.body799
  br i1 true, label %if.then807, label %lor.lhs.false804, !dbg !8864

cond.false803:                                    ; preds = %for.body799
  br i1 false, label %if.then807, label %lor.lhs.false804, !dbg !8867

lor.lhs.false804:                                 ; preds = %cond.false803, %cond.true802
  %519 = load double*, double** %k432, align 8, !dbg !8868
  %520 = load double, double* %519, align 8, !dbg !8869
  %cmp805 = fcmp olt double %520, 5.000000e-01, !dbg !8870
  br i1 %cmp805, label %if.then807, label %if.end808, !dbg !8871

if.then807:                                       ; preds = %lor.lhs.false804, %cond.false803, %cond.true802
  br label %for.inc852, !dbg !8872

if.end808:                                        ; preds = %lor.lhs.false804
  %red809 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !8873
  %521 = load double, double* %red809, align 8, !dbg !8873
  %522 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8873
  %523 = load i64, i64* %u, align 8, !dbg !8873
  %arrayidx810 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %522, i64 %523, !dbg !8873
  %red811 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx810, i32 0, i32 2, !dbg !8873
  %524 = load i16, i16* %red811, align 2, !dbg !8873
  %conv812 = uitofp i16 %524 to double, !dbg !8873
  %call813 = call double @MagickMin(double %521, double %conv812), !dbg !8873
  %red814 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !8873
  store double %call813, double* %red814, align 8, !dbg !8873
  %green815 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !8874
  %525 = load double, double* %green815, align 8, !dbg !8874
  %526 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8874
  %527 = load i64, i64* %u, align 8, !dbg !8874
  %arrayidx816 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %526, i64 %527, !dbg !8874
  %green817 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx816, i32 0, i32 1, !dbg !8874
  %528 = load i16, i16* %green817, align 2, !dbg !8874
  %conv818 = uitofp i16 %528 to double, !dbg !8874
  %call819 = call double @MagickMin(double %525, double %conv818), !dbg !8874
  %green820 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !8874
  store double %call819, double* %green820, align 8, !dbg !8874
  %blue821 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !8875
  %529 = load double, double* %blue821, align 8, !dbg !8875
  %530 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8875
  %531 = load i64, i64* %u, align 8, !dbg !8875
  %arrayidx822 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %530, i64 %531, !dbg !8875
  %blue823 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx822, i32 0, i32 0, !dbg !8875
  %532 = load i16, i16* %blue823, align 2, !dbg !8875
  %conv824 = uitofp i16 %532 to double, !dbg !8875
  %call825 = call double @MagickMin(double %529, double %conv824), !dbg !8875
  %blue826 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !8875
  store double %call825, double* %blue826, align 8, !dbg !8875
  %opacity827 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !8876
  %533 = load double, double* %opacity827, align 8, !dbg !8876
  %534 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8876
  %535 = load i64, i64* %u, align 8, !dbg !8876
  %arrayidx828 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %534, i64 %535, !dbg !8876
  %opacity829 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx828, i32 0, i32 3, !dbg !8876
  %536 = load i16, i16* %opacity829, align 2, !dbg !8876
  %conv830 = uitofp i16 %536 to double, !dbg !8876
  %sub831 = fsub double 6.553500e+04, %conv830, !dbg !8876
  %call832 = call double @MagickMin(double %533, double %sub831), !dbg !8876
  %opacity833 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !8876
  store double %call832, double* %opacity833, align 8, !dbg !8876
  %537 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8877
  %colorspace834 = getelementptr inbounds %struct._Image, %struct._Image* %537, i32 0, i32 1, !dbg !8879
  %538 = load i32, i32* %colorspace834, align 4, !dbg !8879
  %cmp835 = icmp eq i32 %538, 12, !dbg !8880
  br i1 %cmp835, label %if.then837, label %if.end851, !dbg !8881

if.then837:                                       ; preds = %if.end808
  %index838 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !8882
  %539 = load double, double* %index838, align 8, !dbg !8882
  %540 = load i16*, i16** %k_indexes434, align 8, !dbg !8882
  %541 = load i64, i64* %u, align 8, !dbg !8882
  %add.ptr839 = getelementptr inbounds i16, i16* %540, i64 %541, !dbg !8882
  %cmp840 = icmp eq i16* %add.ptr839, null, !dbg !8882
  br i1 %cmp840, label %cond.true842, label %cond.false843, !dbg !8882

cond.true842:                                     ; preds = %if.then837
  br label %cond.end846, !dbg !8882

cond.false843:                                    ; preds = %if.then837
  %542 = load i16*, i16** %k_indexes434, align 8, !dbg !8882
  %543 = load i64, i64* %u, align 8, !dbg !8882
  %add.ptr844 = getelementptr inbounds i16, i16* %542, i64 %543, !dbg !8882
  %544 = load i16, i16* %add.ptr844, align 2, !dbg !8882
  %conv845 = zext i16 %544 to i32, !dbg !8882
  br label %cond.end846, !dbg !8882

cond.end846:                                      ; preds = %cond.false843, %cond.true842
  %cond847 = phi i32 [ 0, %cond.true842 ], [ %conv845, %cond.false843 ], !dbg !8882
  %conv848 = sitofp i32 %cond847 to double, !dbg !8882
  %call849 = call double @MagickMin(double %539, double %conv848), !dbg !8882
  %index850 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !8882
  store double %call849, double* %index850, align 8, !dbg !8882
  br label %if.end851, !dbg !8882

if.end851:                                        ; preds = %cond.end846, %if.end808
  br label %for.inc852, !dbg !8883

for.inc852:                                       ; preds = %if.end851, %if.then807
  %545 = load i64, i64* %u, align 8, !dbg !8884
  %inc853 = add nsw i64 %545, 1, !dbg !8884
  store i64 %inc853, i64* %u, align 8, !dbg !8884
  %546 = load double*, double** %k432, align 8, !dbg !8885
  %incdec.ptr854 = getelementptr inbounds double, double* %546, i32 1, !dbg !8885
  store double* %incdec.ptr854, double** %k432, align 8, !dbg !8885
  br label %for.cond795, !dbg !8886, !llvm.loop !8887

for.end855:                                       ; preds = %for.cond795
  %547 = load i64, i64* %virt_width, align 8, !dbg !8889
  %548 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8890
  %add.ptr856 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %548, i64 %547, !dbg !8890
  store %struct._PixelPacket* %add.ptr856, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8890
  %549 = load i64, i64* %virt_width, align 8, !dbg !8891
  %550 = load i16*, i16** %k_indexes434, align 8, !dbg !8892
  %add.ptr857 = getelementptr inbounds i16, i16* %550, i64 %549, !dbg !8892
  store i16* %add.ptr857, i16** %k_indexes434, align 8, !dbg !8892
  br label %for.inc858, !dbg !8893

for.inc858:                                       ; preds = %for.end855
  %551 = load i64, i64* %v431, align 8, !dbg !8894
  %inc859 = add nsw i64 %551, 1, !dbg !8894
  store i64 %inc859, i64* %v431, align 8, !dbg !8894
  br label %for.cond790, !dbg !8895, !llvm.loop !8896

for.end860:                                       ; preds = %for.cond790
  br label %sw.epilog1284, !dbg !8898

sw.bb861:                                         ; preds = %sw.epilog511
  %552 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8899
  %values862 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %552, i32 0, i32 5, !dbg !8900
  %553 = load double*, double** %values862, align 8, !dbg !8900
  %554 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8901
  %width863 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %554, i32 0, i32 1, !dbg !8902
  %555 = load i64, i64* %width863, align 8, !dbg !8902
  %556 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8903
  %height864 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %556, i32 0, i32 2, !dbg !8904
  %557 = load i64, i64* %height864, align 8, !dbg !8904
  %mul865 = mul i64 %555, %557, !dbg !8905
  %sub866 = sub i64 %mul865, 1, !dbg !8906
  %arrayidx867 = getelementptr inbounds double, double* %553, i64 %sub866, !dbg !8899
  store double* %arrayidx867, double** %k432, align 8, !dbg !8907
  %558 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8908
  store %struct._PixelPacket* %558, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8909
  %559 = load i16*, i16** %p_indexes400, align 8, !dbg !8910
  store i16* %559, i16** %k_indexes434, align 8, !dbg !8911
  store i64 0, i64* %v431, align 8, !dbg !8912
  br label %for.cond868, !dbg !8914

for.cond868:                                      ; preds = %for.inc936, %sw.bb861
  %560 = load i64, i64* %v431, align 8, !dbg !8915
  %561 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8917
  %height869 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %561, i32 0, i32 2, !dbg !8918
  %562 = load i64, i64* %height869, align 8, !dbg !8918
  %cmp870 = icmp slt i64 %560, %562, !dbg !8919
  br i1 %cmp870, label %for.body872, label %for.end938, !dbg !8920

for.body872:                                      ; preds = %for.cond868
  store i64 0, i64* %u, align 8, !dbg !8921
  br label %for.cond873, !dbg !8924

for.cond873:                                      ; preds = %for.inc930, %for.body872
  %563 = load i64, i64* %u, align 8, !dbg !8925
  %564 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8927
  %width874 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %564, i32 0, i32 1, !dbg !8928
  %565 = load i64, i64* %width874, align 8, !dbg !8928
  %cmp875 = icmp slt i64 %563, %565, !dbg !8929
  br i1 %cmp875, label %for.body877, label %for.end933, !dbg !8930

for.body877:                                      ; preds = %for.cond873
  %566 = load double*, double** %k432, align 8, !dbg !8931
  %567 = load double, double* %566, align 8, !dbg !8931
  %568 = load double*, double** %k432, align 8, !dbg !8931
  %569 = load double, double* %568, align 8, !dbg !8931
  %cmp878 = fcmp une double %567, %569, !dbg !8931
  br i1 %cmp878, label %cond.true880, label %cond.false881, !dbg !8934

cond.true880:                                     ; preds = %for.body877
  br i1 true, label %if.then885, label %lor.lhs.false882, !dbg !8931

cond.false881:                                    ; preds = %for.body877
  br i1 false, label %if.then885, label %lor.lhs.false882, !dbg !8934

lor.lhs.false882:                                 ; preds = %cond.false881, %cond.true880
  %570 = load double*, double** %k432, align 8, !dbg !8935
  %571 = load double, double* %570, align 8, !dbg !8936
  %cmp883 = fcmp olt double %571, 5.000000e-01, !dbg !8937
  br i1 %cmp883, label %if.then885, label %if.end886, !dbg !8938

if.then885:                                       ; preds = %lor.lhs.false882, %cond.false881, %cond.true880
  br label %for.inc930, !dbg !8939

if.end886:                                        ; preds = %lor.lhs.false882
  %red887 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !8940
  %572 = load double, double* %red887, align 8, !dbg !8940
  %573 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8940
  %574 = load i64, i64* %u, align 8, !dbg !8940
  %arrayidx888 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %573, i64 %574, !dbg !8940
  %red889 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx888, i32 0, i32 2, !dbg !8940
  %575 = load i16, i16* %red889, align 2, !dbg !8940
  %conv890 = uitofp i16 %575 to double, !dbg !8940
  %call891 = call double @MagickMax(double %572, double %conv890), !dbg !8940
  %red892 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !8940
  store double %call891, double* %red892, align 8, !dbg !8940
  %green893 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !8941
  %576 = load double, double* %green893, align 8, !dbg !8941
  %577 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8941
  %578 = load i64, i64* %u, align 8, !dbg !8941
  %arrayidx894 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %577, i64 %578, !dbg !8941
  %green895 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx894, i32 0, i32 1, !dbg !8941
  %579 = load i16, i16* %green895, align 2, !dbg !8941
  %conv896 = uitofp i16 %579 to double, !dbg !8941
  %call897 = call double @MagickMax(double %576, double %conv896), !dbg !8941
  %green898 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !8941
  store double %call897, double* %green898, align 8, !dbg !8941
  %blue899 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !8942
  %580 = load double, double* %blue899, align 8, !dbg !8942
  %581 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8942
  %582 = load i64, i64* %u, align 8, !dbg !8942
  %arrayidx900 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %581, i64 %582, !dbg !8942
  %blue901 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx900, i32 0, i32 0, !dbg !8942
  %583 = load i16, i16* %blue901, align 2, !dbg !8942
  %conv902 = uitofp i16 %583 to double, !dbg !8942
  %call903 = call double @MagickMax(double %580, double %conv902), !dbg !8942
  %blue904 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !8942
  store double %call903, double* %blue904, align 8, !dbg !8942
  %opacity905 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !8943
  %584 = load double, double* %opacity905, align 8, !dbg !8943
  %585 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8943
  %586 = load i64, i64* %u, align 8, !dbg !8943
  %arrayidx906 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %585, i64 %586, !dbg !8943
  %opacity907 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx906, i32 0, i32 3, !dbg !8943
  %587 = load i16, i16* %opacity907, align 2, !dbg !8943
  %conv908 = uitofp i16 %587 to double, !dbg !8943
  %sub909 = fsub double 6.553500e+04, %conv908, !dbg !8943
  %call910 = call double @MagickMax(double %584, double %sub909), !dbg !8943
  %opacity911 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !8943
  store double %call910, double* %opacity911, align 8, !dbg !8943
  %588 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8944
  %colorspace912 = getelementptr inbounds %struct._Image, %struct._Image* %588, i32 0, i32 1, !dbg !8946
  %589 = load i32, i32* %colorspace912, align 4, !dbg !8946
  %cmp913 = icmp eq i32 %589, 12, !dbg !8947
  br i1 %cmp913, label %if.then915, label %if.end929, !dbg !8948

if.then915:                                       ; preds = %if.end886
  %index916 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !8949
  %590 = load double, double* %index916, align 8, !dbg !8949
  %591 = load i16*, i16** %k_indexes434, align 8, !dbg !8949
  %592 = load i64, i64* %u, align 8, !dbg !8949
  %add.ptr917 = getelementptr inbounds i16, i16* %591, i64 %592, !dbg !8949
  %cmp918 = icmp eq i16* %add.ptr917, null, !dbg !8949
  br i1 %cmp918, label %cond.true920, label %cond.false921, !dbg !8949

cond.true920:                                     ; preds = %if.then915
  br label %cond.end924, !dbg !8949

cond.false921:                                    ; preds = %if.then915
  %593 = load i16*, i16** %k_indexes434, align 8, !dbg !8949
  %594 = load i64, i64* %u, align 8, !dbg !8949
  %add.ptr922 = getelementptr inbounds i16, i16* %593, i64 %594, !dbg !8949
  %595 = load i16, i16* %add.ptr922, align 2, !dbg !8949
  %conv923 = zext i16 %595 to i32, !dbg !8949
  br label %cond.end924, !dbg !8949

cond.end924:                                      ; preds = %cond.false921, %cond.true920
  %cond925 = phi i32 [ 0, %cond.true920 ], [ %conv923, %cond.false921 ], !dbg !8949
  %conv926 = sitofp i32 %cond925 to double, !dbg !8949
  %call927 = call double @MagickMax(double %590, double %conv926), !dbg !8949
  %index928 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !8949
  store double %call927, double* %index928, align 8, !dbg !8949
  br label %if.end929, !dbg !8949

if.end929:                                        ; preds = %cond.end924, %if.end886
  br label %for.inc930, !dbg !8950

for.inc930:                                       ; preds = %if.end929, %if.then885
  %596 = load i64, i64* %u, align 8, !dbg !8951
  %inc931 = add nsw i64 %596, 1, !dbg !8951
  store i64 %inc931, i64* %u, align 8, !dbg !8951
  %597 = load double*, double** %k432, align 8, !dbg !8952
  %incdec.ptr932 = getelementptr inbounds double, double* %597, i32 -1, !dbg !8952
  store double* %incdec.ptr932, double** %k432, align 8, !dbg !8952
  br label %for.cond873, !dbg !8953, !llvm.loop !8954

for.end933:                                       ; preds = %for.cond873
  %598 = load i64, i64* %virt_width, align 8, !dbg !8956
  %599 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8957
  %add.ptr934 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %599, i64 %598, !dbg !8957
  store %struct._PixelPacket* %add.ptr934, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8957
  %600 = load i64, i64* %virt_width, align 8, !dbg !8958
  %601 = load i16*, i16** %k_indexes434, align 8, !dbg !8959
  %add.ptr935 = getelementptr inbounds i16, i16* %601, i64 %600, !dbg !8959
  store i16* %add.ptr935, i16** %k_indexes434, align 8, !dbg !8959
  br label %for.inc936, !dbg !8960

for.inc936:                                       ; preds = %for.end933
  %602 = load i64, i64* %v431, align 8, !dbg !8961
  %inc937 = add nsw i64 %602, 1, !dbg !8961
  store i64 %inc937, i64* %v431, align 8, !dbg !8961
  br label %for.cond868, !dbg !8962, !llvm.loop !8963

for.end938:                                       ; preds = %for.cond868
  br label %sw.epilog1284, !dbg !8965

sw.bb939:                                         ; preds = %sw.epilog511, %sw.epilog511, %sw.epilog511
  %603 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8966
  %values940 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %603, i32 0, i32 5, !dbg !8967
  %604 = load double*, double** %values940, align 8, !dbg !8967
  store double* %604, double** %k432, align 8, !dbg !8968
  %605 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !8969
  store %struct._PixelPacket* %605, %struct._PixelPacket** %k_pixels433, align 8, !dbg !8970
  %606 = load i16*, i16** %p_indexes400, align 8, !dbg !8971
  store i16* %606, i16** %k_indexes434, align 8, !dbg !8972
  store i64 0, i64* %v431, align 8, !dbg !8973
  br label %for.cond941, !dbg !8975

for.cond941:                                      ; preds = %for.inc1058, %sw.bb939
  %607 = load i64, i64* %v431, align 8, !dbg !8976
  %608 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8978
  %height942 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %608, i32 0, i32 2, !dbg !8979
  %609 = load i64, i64* %height942, align 8, !dbg !8979
  %cmp943 = icmp slt i64 %607, %609, !dbg !8980
  br i1 %cmp943, label %for.body945, label %for.end1060, !dbg !8981

for.body945:                                      ; preds = %for.cond941
  store i64 0, i64* %u, align 8, !dbg !8982
  br label %for.cond946, !dbg !8985

for.cond946:                                      ; preds = %for.inc1052, %for.body945
  %610 = load i64, i64* %u, align 8, !dbg !8986
  %611 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8988
  %width947 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %611, i32 0, i32 1, !dbg !8989
  %612 = load i64, i64* %width947, align 8, !dbg !8989
  %cmp948 = icmp slt i64 %610, %612, !dbg !8990
  br i1 %cmp948, label %for.body950, label %for.end1055, !dbg !8991

for.body950:                                      ; preds = %for.cond946
  %613 = load double*, double** %k432, align 8, !dbg !8992
  %614 = load double, double* %613, align 8, !dbg !8992
  %615 = load double*, double** %k432, align 8, !dbg !8992
  %616 = load double, double* %615, align 8, !dbg !8992
  %cmp951 = fcmp une double %614, %616, !dbg !8992
  br i1 %cmp951, label %cond.true953, label %cond.false954, !dbg !8995

cond.true953:                                     ; preds = %for.body950
  br i1 true, label %if.then955, label %if.end956, !dbg !8992

cond.false954:                                    ; preds = %for.body950
  br i1 false, label %if.then955, label %if.end956, !dbg !8995

if.then955:                                       ; preds = %cond.false954, %cond.true953
  br label %for.inc1052, !dbg !8996

if.end956:                                        ; preds = %cond.false954, %cond.true953
  %617 = load double*, double** %k432, align 8, !dbg !8997
  %618 = load double, double* %617, align 8, !dbg !8999
  %cmp957 = fcmp ogt double %618, 0x3FE6666666666666, !dbg !9000
  br i1 %cmp957, label %if.then959, label %if.else1003, !dbg !9001

if.then959:                                       ; preds = %if.end956
  %red960 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9002
  %619 = load double, double* %red960, align 8, !dbg !9002
  %620 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9002
  %621 = load i64, i64* %u, align 8, !dbg !9002
  %arrayidx961 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %620, i64 %621, !dbg !9002
  %red962 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx961, i32 0, i32 2, !dbg !9002
  %622 = load i16, i16* %red962, align 2, !dbg !9002
  %conv963 = uitofp i16 %622 to double, !dbg !9002
  %call964 = call double @MagickMin(double %619, double %conv963), !dbg !9002
  %red965 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9002
  store double %call964, double* %red965, align 8, !dbg !9002
  %green966 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9004
  %623 = load double, double* %green966, align 8, !dbg !9004
  %624 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9004
  %625 = load i64, i64* %u, align 8, !dbg !9004
  %arrayidx967 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %624, i64 %625, !dbg !9004
  %green968 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx967, i32 0, i32 1, !dbg !9004
  %626 = load i16, i16* %green968, align 2, !dbg !9004
  %conv969 = uitofp i16 %626 to double, !dbg !9004
  %call970 = call double @MagickMin(double %623, double %conv969), !dbg !9004
  %green971 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9004
  store double %call970, double* %green971, align 8, !dbg !9004
  %blue972 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9005
  %627 = load double, double* %blue972, align 8, !dbg !9005
  %628 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9005
  %629 = load i64, i64* %u, align 8, !dbg !9005
  %arrayidx973 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %628, i64 %629, !dbg !9005
  %blue974 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx973, i32 0, i32 0, !dbg !9005
  %630 = load i16, i16* %blue974, align 2, !dbg !9005
  %conv975 = uitofp i16 %630 to double, !dbg !9005
  %call976 = call double @MagickMin(double %627, double %conv975), !dbg !9005
  %blue977 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9005
  store double %call976, double* %blue977, align 8, !dbg !9005
  %opacity978 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9006
  %631 = load double, double* %opacity978, align 8, !dbg !9006
  %632 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9006
  %633 = load i64, i64* %u, align 8, !dbg !9006
  %arrayidx979 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %632, i64 %633, !dbg !9006
  %opacity980 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx979, i32 0, i32 3, !dbg !9006
  %634 = load i16, i16* %opacity980, align 2, !dbg !9006
  %conv981 = uitofp i16 %634 to double, !dbg !9006
  %sub982 = fsub double 6.553500e+04, %conv981, !dbg !9006
  %call983 = call double @MagickMin(double %631, double %sub982), !dbg !9006
  %opacity984 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9006
  store double %call983, double* %opacity984, align 8, !dbg !9006
  %635 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9007
  %colorspace985 = getelementptr inbounds %struct._Image, %struct._Image* %635, i32 0, i32 1, !dbg !9009
  %636 = load i32, i32* %colorspace985, align 4, !dbg !9009
  %cmp986 = icmp eq i32 %636, 12, !dbg !9010
  br i1 %cmp986, label %if.then988, label %if.end1002, !dbg !9011

if.then988:                                       ; preds = %if.then959
  %index989 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9012
  %637 = load double, double* %index989, align 8, !dbg !9012
  %638 = load i16*, i16** %k_indexes434, align 8, !dbg !9012
  %639 = load i64, i64* %u, align 8, !dbg !9012
  %add.ptr990 = getelementptr inbounds i16, i16* %638, i64 %639, !dbg !9012
  %cmp991 = icmp eq i16* %add.ptr990, null, !dbg !9012
  br i1 %cmp991, label %cond.true993, label %cond.false994, !dbg !9012

cond.true993:                                     ; preds = %if.then988
  br label %cond.end997, !dbg !9012

cond.false994:                                    ; preds = %if.then988
  %640 = load i16*, i16** %k_indexes434, align 8, !dbg !9012
  %641 = load i64, i64* %u, align 8, !dbg !9012
  %add.ptr995 = getelementptr inbounds i16, i16* %640, i64 %641, !dbg !9012
  %642 = load i16, i16* %add.ptr995, align 2, !dbg !9012
  %conv996 = zext i16 %642 to i32, !dbg !9012
  br label %cond.end997, !dbg !9012

cond.end997:                                      ; preds = %cond.false994, %cond.true993
  %cond998 = phi i32 [ 0, %cond.true993 ], [ %conv996, %cond.false994 ], !dbg !9012
  %conv999 = sitofp i32 %cond998 to double, !dbg !9012
  %call1000 = call double @MagickMin(double %637, double %conv999), !dbg !9012
  %index1001 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9012
  store double %call1000, double* %index1001, align 8, !dbg !9012
  br label %if.end1002, !dbg !9012

if.end1002:                                       ; preds = %cond.end997, %if.then959
  br label %if.end1051, !dbg !9013

if.else1003:                                      ; preds = %if.end956
  %643 = load double*, double** %k432, align 8, !dbg !9014
  %644 = load double, double* %643, align 8, !dbg !9016
  %cmp1004 = fcmp olt double %644, 3.000000e-01, !dbg !9017
  br i1 %cmp1004, label %if.then1006, label %if.end1050, !dbg !9018

if.then1006:                                      ; preds = %if.else1003
  %red1007 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !9019
  %645 = load double, double* %red1007, align 8, !dbg !9019
  %646 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9019
  %647 = load i64, i64* %u, align 8, !dbg !9019
  %arrayidx1008 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %646, i64 %647, !dbg !9019
  %red1009 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1008, i32 0, i32 2, !dbg !9019
  %648 = load i16, i16* %red1009, align 2, !dbg !9019
  %conv1010 = uitofp i16 %648 to double, !dbg !9019
  %call1011 = call double @MagickMax(double %645, double %conv1010), !dbg !9019
  %red1012 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !9019
  store double %call1011, double* %red1012, align 8, !dbg !9019
  %green1013 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !9021
  %649 = load double, double* %green1013, align 8, !dbg !9021
  %650 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9021
  %651 = load i64, i64* %u, align 8, !dbg !9021
  %arrayidx1014 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %650, i64 %651, !dbg !9021
  %green1015 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1014, i32 0, i32 1, !dbg !9021
  %652 = load i16, i16* %green1015, align 2, !dbg !9021
  %conv1016 = uitofp i16 %652 to double, !dbg !9021
  %call1017 = call double @MagickMax(double %649, double %conv1016), !dbg !9021
  %green1018 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !9021
  store double %call1017, double* %green1018, align 8, !dbg !9021
  %blue1019 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !9022
  %653 = load double, double* %blue1019, align 8, !dbg !9022
  %654 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9022
  %655 = load i64, i64* %u, align 8, !dbg !9022
  %arrayidx1020 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %654, i64 %655, !dbg !9022
  %blue1021 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1020, i32 0, i32 0, !dbg !9022
  %656 = load i16, i16* %blue1021, align 2, !dbg !9022
  %conv1022 = uitofp i16 %656 to double, !dbg !9022
  %call1023 = call double @MagickMax(double %653, double %conv1022), !dbg !9022
  %blue1024 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !9022
  store double %call1023, double* %blue1024, align 8, !dbg !9022
  %opacity1025 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !9023
  %657 = load double, double* %opacity1025, align 8, !dbg !9023
  %658 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9023
  %659 = load i64, i64* %u, align 8, !dbg !9023
  %arrayidx1026 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %658, i64 %659, !dbg !9023
  %opacity1027 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1026, i32 0, i32 3, !dbg !9023
  %660 = load i16, i16* %opacity1027, align 2, !dbg !9023
  %conv1028 = uitofp i16 %660 to double, !dbg !9023
  %sub1029 = fsub double 6.553500e+04, %conv1028, !dbg !9023
  %call1030 = call double @MagickMax(double %657, double %sub1029), !dbg !9023
  %opacity1031 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !9023
  store double %call1030, double* %opacity1031, align 8, !dbg !9023
  %661 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9024
  %colorspace1032 = getelementptr inbounds %struct._Image, %struct._Image* %661, i32 0, i32 1, !dbg !9026
  %662 = load i32, i32* %colorspace1032, align 4, !dbg !9026
  %cmp1033 = icmp eq i32 %662, 12, !dbg !9027
  br i1 %cmp1033, label %if.then1035, label %if.end1049, !dbg !9028

if.then1035:                                      ; preds = %if.then1006
  %index1036 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !9029
  %663 = load double, double* %index1036, align 8, !dbg !9029
  %664 = load i16*, i16** %k_indexes434, align 8, !dbg !9029
  %665 = load i64, i64* %u, align 8, !dbg !9029
  %add.ptr1037 = getelementptr inbounds i16, i16* %664, i64 %665, !dbg !9029
  %cmp1038 = icmp eq i16* %add.ptr1037, null, !dbg !9029
  br i1 %cmp1038, label %cond.true1040, label %cond.false1041, !dbg !9029

cond.true1040:                                    ; preds = %if.then1035
  br label %cond.end1044, !dbg !9029

cond.false1041:                                   ; preds = %if.then1035
  %666 = load i16*, i16** %k_indexes434, align 8, !dbg !9029
  %667 = load i64, i64* %u, align 8, !dbg !9029
  %add.ptr1042 = getelementptr inbounds i16, i16* %666, i64 %667, !dbg !9029
  %668 = load i16, i16* %add.ptr1042, align 2, !dbg !9029
  %conv1043 = zext i16 %668 to i32, !dbg !9029
  br label %cond.end1044, !dbg !9029

cond.end1044:                                     ; preds = %cond.false1041, %cond.true1040
  %cond1045 = phi i32 [ 0, %cond.true1040 ], [ %conv1043, %cond.false1041 ], !dbg !9029
  %conv1046 = sitofp i32 %cond1045 to double, !dbg !9029
  %call1047 = call double @MagickMax(double %663, double %conv1046), !dbg !9029
  %index1048 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !9029
  store double %call1047, double* %index1048, align 8, !dbg !9029
  br label %if.end1049, !dbg !9029

if.end1049:                                       ; preds = %cond.end1044, %if.then1006
  br label %if.end1050, !dbg !9030

if.end1050:                                       ; preds = %if.end1049, %if.else1003
  br label %if.end1051

if.end1051:                                       ; preds = %if.end1050, %if.end1002
  br label %for.inc1052, !dbg !9031

for.inc1052:                                      ; preds = %if.end1051, %if.then955
  %669 = load i64, i64* %u, align 8, !dbg !9032
  %inc1053 = add nsw i64 %669, 1, !dbg !9032
  store i64 %inc1053, i64* %u, align 8, !dbg !9032
  %670 = load double*, double** %k432, align 8, !dbg !9033
  %incdec.ptr1054 = getelementptr inbounds double, double* %670, i32 1, !dbg !9033
  store double* %incdec.ptr1054, double** %k432, align 8, !dbg !9033
  br label %for.cond946, !dbg !9034, !llvm.loop !9035

for.end1055:                                      ; preds = %for.cond946
  %671 = load i64, i64* %virt_width, align 8, !dbg !9037
  %672 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9038
  %add.ptr1056 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %672, i64 %671, !dbg !9038
  store %struct._PixelPacket* %add.ptr1056, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9038
  %673 = load i64, i64* %virt_width, align 8, !dbg !9039
  %674 = load i16*, i16** %k_indexes434, align 8, !dbg !9040
  %add.ptr1057 = getelementptr inbounds i16, i16* %674, i64 %673, !dbg !9040
  store i16* %add.ptr1057, i16** %k_indexes434, align 8, !dbg !9040
  br label %for.inc1058, !dbg !9041

for.inc1058:                                      ; preds = %for.end1055
  %675 = load i64, i64* %v431, align 8, !dbg !9042
  %inc1059 = add nsw i64 %675, 1, !dbg !9042
  store i64 %inc1059, i64* %v431, align 8, !dbg !9042
  br label %for.cond941, !dbg !9043, !llvm.loop !9044

for.end1060:                                      ; preds = %for.cond941
  %red1061 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 0, !dbg !9046
  %676 = load double, double* %red1061, align 8, !dbg !9046
  %red1062 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9047
  %677 = load double, double* %red1062, align 8, !dbg !9048
  %sub1063 = fsub double %677, %676, !dbg !9048
  store double %sub1063, double* %red1062, align 8, !dbg !9048
  %red1064 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9049
  %678 = load double, double* %red1064, align 8, !dbg !9049
  %call1065 = call double @MagickMax(double %678, double 0.000000e+00), !dbg !9049
  %red1066 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9049
  store double %call1065, double* %red1066, align 8, !dbg !9049
  %green1067 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 1, !dbg !9050
  %679 = load double, double* %green1067, align 8, !dbg !9050
  %green1068 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9051
  %680 = load double, double* %green1068, align 8, !dbg !9052
  %sub1069 = fsub double %680, %679, !dbg !9052
  store double %sub1069, double* %green1068, align 8, !dbg !9052
  %green1070 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9053
  %681 = load double, double* %green1070, align 8, !dbg !9053
  %call1071 = call double @MagickMax(double %681, double 0.000000e+00), !dbg !9053
  %green1072 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9053
  store double %call1071, double* %green1072, align 8, !dbg !9053
  %blue1073 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 2, !dbg !9054
  %682 = load double, double* %blue1073, align 8, !dbg !9054
  %blue1074 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9055
  %683 = load double, double* %blue1074, align 8, !dbg !9056
  %sub1075 = fsub double %683, %682, !dbg !9056
  store double %sub1075, double* %blue1074, align 8, !dbg !9056
  %blue1076 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9057
  %684 = load double, double* %blue1076, align 8, !dbg !9057
  %call1077 = call double @MagickMax(double %684, double 0.000000e+00), !dbg !9057
  %blue1078 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9057
  store double %call1077, double* %blue1078, align 8, !dbg !9057
  %opacity1079 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 3, !dbg !9058
  %685 = load double, double* %opacity1079, align 8, !dbg !9058
  %opacity1080 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9059
  %686 = load double, double* %opacity1080, align 8, !dbg !9060
  %sub1081 = fsub double %686, %685, !dbg !9060
  store double %sub1081, double* %opacity1080, align 8, !dbg !9060
  %opacity1082 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9061
  %687 = load double, double* %opacity1082, align 8, !dbg !9061
  %call1083 = call double @MagickMax(double %687, double 0.000000e+00), !dbg !9061
  %opacity1084 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9061
  store double %call1083, double* %opacity1084, align 8, !dbg !9061
  %index1085 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %max, i32 0, i32 4, !dbg !9062
  %688 = load double, double* %index1085, align 8, !dbg !9062
  %index1086 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9063
  %689 = load double, double* %index1086, align 8, !dbg !9064
  %sub1087 = fsub double %689, %688, !dbg !9064
  store double %sub1087, double* %index1086, align 8, !dbg !9064
  %index1088 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9065
  %690 = load double, double* %index1088, align 8, !dbg !9065
  %call1089 = call double @MagickMax(double %690, double 0.000000e+00), !dbg !9065
  %index1090 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9065
  store double %call1089, double* %index1090, align 8, !dbg !9065
  br label %sw.epilog1284, !dbg !9066

sw.bb1091:                                        ; preds = %sw.epilog511
  %691 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9067
  %values1092 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %691, i32 0, i32 5, !dbg !9068
  %692 = load double*, double** %values1092, align 8, !dbg !9068
  store double* %692, double** %k432, align 8, !dbg !9069
  %693 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9070
  store %struct._PixelPacket* %693, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9071
  %694 = load i16*, i16** %p_indexes400, align 8, !dbg !9072
  store i16* %694, i16** %k_indexes434, align 8, !dbg !9073
  store i64 0, i64* %v431, align 8, !dbg !9074
  br label %for.cond1093, !dbg !9076

for.cond1093:                                     ; preds = %for.inc1139, %sw.bb1091
  %695 = load i64, i64* %v431, align 8, !dbg !9077
  %696 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9079
  %height1094 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %696, i32 0, i32 2, !dbg !9080
  %697 = load i64, i64* %height1094, align 8, !dbg !9080
  %cmp1095 = icmp slt i64 %695, %697, !dbg !9081
  br i1 %cmp1095, label %for.body1097, label %for.end1141, !dbg !9082

for.body1097:                                     ; preds = %for.cond1093
  store i64 0, i64* %u, align 8, !dbg !9083
  br label %for.cond1098, !dbg !9086

for.cond1098:                                     ; preds = %for.inc1133, %for.body1097
  %698 = load i64, i64* %u, align 8, !dbg !9087
  %699 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9089
  %width1099 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %699, i32 0, i32 1, !dbg !9090
  %700 = load i64, i64* %width1099, align 8, !dbg !9090
  %cmp1100 = icmp slt i64 %698, %700, !dbg !9091
  br i1 %cmp1100, label %for.body1102, label %for.end1136, !dbg !9092

for.body1102:                                     ; preds = %for.cond1098
  %701 = load double*, double** %k432, align 8, !dbg !9093
  %702 = load double, double* %701, align 8, !dbg !9093
  %703 = load double*, double** %k432, align 8, !dbg !9093
  %704 = load double, double* %703, align 8, !dbg !9093
  %cmp1103 = fcmp une double %702, %704, !dbg !9093
  br i1 %cmp1103, label %cond.true1105, label %cond.false1106, !dbg !9096

cond.true1105:                                    ; preds = %for.body1102
  br i1 true, label %if.then1110, label %lor.lhs.false1107, !dbg !9093

cond.false1106:                                   ; preds = %for.body1102
  br i1 false, label %if.then1110, label %lor.lhs.false1107, !dbg !9096

lor.lhs.false1107:                                ; preds = %cond.false1106, %cond.true1105
  %705 = load double*, double** %k432, align 8, !dbg !9097
  %706 = load double, double* %705, align 8, !dbg !9098
  %cmp1108 = fcmp olt double %706, 5.000000e-01, !dbg !9099
  br i1 %cmp1108, label %if.then1110, label %if.end1111, !dbg !9100

if.then1110:                                      ; preds = %lor.lhs.false1107, %cond.false1106, %cond.true1105
  br label %for.inc1133, !dbg !9101

if.end1111:                                       ; preds = %lor.lhs.false1107
  %red1112 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9102
  %707 = load double, double* %red1112, align 8, !dbg !9102
  %cmp1113 = fcmp oeq double %707, 0.000000e+00, !dbg !9104
  br i1 %cmp1113, label %if.then1121, label %lor.lhs.false1115, !dbg !9105

lor.lhs.false1115:                                ; preds = %if.end1111
  %708 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9106
  %709 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9107
  %710 = load i64, i64* %u, align 8, !dbg !9108
  %arrayidx1116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %709, i64 %710, !dbg !9107
  %call1117 = call float @GetPixelIntensity(%struct._Image* %708, %struct._PixelPacket* %arrayidx1116), !dbg !9109
  %711 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !9110
  %712 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9111
  %call1118 = call float @GetPixelIntensity(%struct._Image* %711, %struct._PixelPacket* %712), !dbg !9112
  %cmp1119 = fcmp olt float %call1117, %call1118, !dbg !9113
  br i1 %cmp1119, label %if.then1121, label %if.end1132, !dbg !9114

if.then1121:                                      ; preds = %lor.lhs.false1115, %if.end1111
  %713 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9115
  %714 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9117
  %715 = load i64, i64* %u, align 8, !dbg !9118
  %arrayidx1122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %714, i64 %715, !dbg !9117
  %716 = bitcast %struct._PixelPacket* %713 to i8*, !dbg !9117
  %717 = bitcast %struct._PixelPacket* %arrayidx1122 to i8*, !dbg !9117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %716, i8* align 2 %717, i64 8, i1 false), !dbg !9117
  %red1123 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9119
  %718 = load double, double* %red1123, align 8, !dbg !9119
  %cmp1124 = fcmp ogt double %718, 0.000000e+00, !dbg !9121
  br i1 %cmp1124, label %if.then1126, label %if.end1130, !dbg !9122

if.then1126:                                      ; preds = %if.then1121
  %719 = load i64*, i64** %changes, align 8, !dbg !9123
  %720 = load i32, i32* %id397, align 4, !dbg !9124
  %idxprom1127 = sext i32 %720 to i64, !dbg !9123
  %arrayidx1128 = getelementptr inbounds i64, i64* %719, i64 %idxprom1127, !dbg !9123
  %721 = load i64, i64* %arrayidx1128, align 8, !dbg !9125
  %inc1129 = add i64 %721, 1, !dbg !9125
  store i64 %inc1129, i64* %arrayidx1128, align 8, !dbg !9125
  br label %if.end1130, !dbg !9123

if.end1130:                                       ; preds = %if.then1126, %if.then1121
  %red1131 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9126
  store double 1.000000e+00, double* %red1131, align 8, !dbg !9127
  br label %if.end1132, !dbg !9128

if.end1132:                                       ; preds = %if.end1130, %lor.lhs.false1115
  br label %for.inc1133, !dbg !9129

for.inc1133:                                      ; preds = %if.end1132, %if.then1110
  %722 = load i64, i64* %u, align 8, !dbg !9130
  %inc1134 = add nsw i64 %722, 1, !dbg !9130
  store i64 %inc1134, i64* %u, align 8, !dbg !9130
  %723 = load double*, double** %k432, align 8, !dbg !9131
  %incdec.ptr1135 = getelementptr inbounds double, double* %723, i32 1, !dbg !9131
  store double* %incdec.ptr1135, double** %k432, align 8, !dbg !9131
  br label %for.cond1098, !dbg !9132, !llvm.loop !9133

for.end1136:                                      ; preds = %for.cond1098
  %724 = load i64, i64* %virt_width, align 8, !dbg !9135
  %725 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9136
  %add.ptr1137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %725, i64 %724, !dbg !9136
  store %struct._PixelPacket* %add.ptr1137, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9136
  %726 = load i64, i64* %virt_width, align 8, !dbg !9137
  %727 = load i16*, i16** %k_indexes434, align 8, !dbg !9138
  %add.ptr1138 = getelementptr inbounds i16, i16* %727, i64 %726, !dbg !9138
  store i16* %add.ptr1138, i16** %k_indexes434, align 8, !dbg !9138
  br label %for.inc1139, !dbg !9139

for.inc1139:                                      ; preds = %for.end1136
  %728 = load i64, i64* %v431, align 8, !dbg !9140
  %inc1140 = add nsw i64 %728, 1, !dbg !9140
  store i64 %inc1140, i64* %v431, align 8, !dbg !9140
  br label %for.cond1093, !dbg !9141, !llvm.loop !9142

for.end1141:                                      ; preds = %for.cond1093
  br label %sw.epilog1284, !dbg !9144

sw.bb1142:                                        ; preds = %sw.epilog511
  %729 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9145
  %values1143 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %729, i32 0, i32 5, !dbg !9146
  %730 = load double*, double** %values1143, align 8, !dbg !9146
  %731 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9147
  %width1144 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %731, i32 0, i32 1, !dbg !9148
  %732 = load i64, i64* %width1144, align 8, !dbg !9148
  %733 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9149
  %height1145 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %733, i32 0, i32 2, !dbg !9150
  %734 = load i64, i64* %height1145, align 8, !dbg !9150
  %mul1146 = mul i64 %732, %734, !dbg !9151
  %sub1147 = sub i64 %mul1146, 1, !dbg !9152
  %arrayidx1148 = getelementptr inbounds double, double* %730, i64 %sub1147, !dbg !9145
  store double* %arrayidx1148, double** %k432, align 8, !dbg !9153
  %735 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9154
  store %struct._PixelPacket* %735, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9155
  %736 = load i16*, i16** %p_indexes400, align 8, !dbg !9156
  store i16* %736, i16** %k_indexes434, align 8, !dbg !9157
  store i64 0, i64* %v431, align 8, !dbg !9158
  br label %for.cond1149, !dbg !9160

for.cond1149:                                     ; preds = %for.inc1195, %sw.bb1142
  %737 = load i64, i64* %v431, align 8, !dbg !9161
  %738 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9163
  %height1150 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %738, i32 0, i32 2, !dbg !9164
  %739 = load i64, i64* %height1150, align 8, !dbg !9164
  %cmp1151 = icmp slt i64 %737, %739, !dbg !9165
  br i1 %cmp1151, label %for.body1153, label %for.end1197, !dbg !9166

for.body1153:                                     ; preds = %for.cond1149
  store i64 0, i64* %u, align 8, !dbg !9167
  br label %for.cond1154, !dbg !9170

for.cond1154:                                     ; preds = %for.inc1189, %for.body1153
  %740 = load i64, i64* %u, align 8, !dbg !9171
  %741 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9173
  %width1155 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %741, i32 0, i32 1, !dbg !9174
  %742 = load i64, i64* %width1155, align 8, !dbg !9174
  %cmp1156 = icmp slt i64 %740, %742, !dbg !9175
  br i1 %cmp1156, label %for.body1158, label %for.end1192, !dbg !9176

for.body1158:                                     ; preds = %for.cond1154
  %743 = load double*, double** %k432, align 8, !dbg !9177
  %744 = load double, double* %743, align 8, !dbg !9177
  %745 = load double*, double** %k432, align 8, !dbg !9177
  %746 = load double, double* %745, align 8, !dbg !9177
  %cmp1159 = fcmp une double %744, %746, !dbg !9177
  br i1 %cmp1159, label %cond.true1161, label %cond.false1162, !dbg !9180

cond.true1161:                                    ; preds = %for.body1158
  br i1 true, label %if.then1166, label %lor.lhs.false1163, !dbg !9177

cond.false1162:                                   ; preds = %for.body1158
  br i1 false, label %if.then1166, label %lor.lhs.false1163, !dbg !9180

lor.lhs.false1163:                                ; preds = %cond.false1162, %cond.true1161
  %747 = load double*, double** %k432, align 8, !dbg !9181
  %748 = load double, double* %747, align 8, !dbg !9182
  %cmp1164 = fcmp olt double %748, 5.000000e-01, !dbg !9183
  br i1 %cmp1164, label %if.then1166, label %if.end1167, !dbg !9184

if.then1166:                                      ; preds = %lor.lhs.false1163, %cond.false1162, %cond.true1161
  br label %for.inc1189, !dbg !9185

if.end1167:                                       ; preds = %lor.lhs.false1163
  %red1168 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9186
  %749 = load double, double* %red1168, align 8, !dbg !9186
  %cmp1169 = fcmp oeq double %749, 0.000000e+00, !dbg !9188
  br i1 %cmp1169, label %if.then1177, label %lor.lhs.false1171, !dbg !9189

lor.lhs.false1171:                                ; preds = %if.end1167
  %750 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9190
  %751 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9191
  %752 = load i64, i64* %u, align 8, !dbg !9192
  %arrayidx1172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %751, i64 %752, !dbg !9191
  %call1173 = call float @GetPixelIntensity(%struct._Image* %750, %struct._PixelPacket* %arrayidx1172), !dbg !9193
  %753 = load %struct._Image*, %struct._Image** %result_image.addr, align 8, !dbg !9194
  %754 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9195
  %call1174 = call float @GetPixelIntensity(%struct._Image* %753, %struct._PixelPacket* %754), !dbg !9196
  %cmp1175 = fcmp ogt float %call1173, %call1174, !dbg !9197
  br i1 %cmp1175, label %if.then1177, label %if.end1188, !dbg !9198

if.then1177:                                      ; preds = %lor.lhs.false1171, %if.end1167
  %755 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9199
  %756 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9201
  %757 = load i64, i64* %u, align 8, !dbg !9202
  %arrayidx1178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %756, i64 %757, !dbg !9201
  %758 = bitcast %struct._PixelPacket* %755 to i8*, !dbg !9201
  %759 = bitcast %struct._PixelPacket* %arrayidx1178 to i8*, !dbg !9201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %758, i8* align 2 %759, i64 8, i1 false), !dbg !9201
  %red1179 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9203
  %760 = load double, double* %red1179, align 8, !dbg !9203
  %cmp1180 = fcmp ogt double %760, 0.000000e+00, !dbg !9205
  br i1 %cmp1180, label %if.then1182, label %if.end1186, !dbg !9206

if.then1182:                                      ; preds = %if.then1177
  %761 = load i64*, i64** %changes, align 8, !dbg !9207
  %762 = load i32, i32* %id397, align 4, !dbg !9208
  %idxprom1183 = sext i32 %762 to i64, !dbg !9207
  %arrayidx1184 = getelementptr inbounds i64, i64* %761, i64 %idxprom1183, !dbg !9207
  %763 = load i64, i64* %arrayidx1184, align 8, !dbg !9209
  %inc1185 = add i64 %763, 1, !dbg !9209
  store i64 %inc1185, i64* %arrayidx1184, align 8, !dbg !9209
  br label %if.end1186, !dbg !9207

if.end1186:                                       ; preds = %if.then1182, %if.then1177
  %red1187 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9210
  store double 1.000000e+00, double* %red1187, align 8, !dbg !9211
  br label %if.end1188, !dbg !9212

if.end1188:                                       ; preds = %if.end1186, %lor.lhs.false1171
  br label %for.inc1189, !dbg !9213

for.inc1189:                                      ; preds = %if.end1188, %if.then1166
  %764 = load i64, i64* %u, align 8, !dbg !9214
  %inc1190 = add nsw i64 %764, 1, !dbg !9214
  store i64 %inc1190, i64* %u, align 8, !dbg !9214
  %765 = load double*, double** %k432, align 8, !dbg !9215
  %incdec.ptr1191 = getelementptr inbounds double, double* %765, i32 -1, !dbg !9215
  store double* %incdec.ptr1191, double** %k432, align 8, !dbg !9215
  br label %for.cond1154, !dbg !9216, !llvm.loop !9217

for.end1192:                                      ; preds = %for.cond1154
  %766 = load i64, i64* %virt_width, align 8, !dbg !9219
  %767 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9220
  %add.ptr1193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %767, i64 %766, !dbg !9220
  store %struct._PixelPacket* %add.ptr1193, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9220
  %768 = load i64, i64* %virt_width, align 8, !dbg !9221
  %769 = load i16*, i16** %k_indexes434, align 8, !dbg !9222
  %add.ptr1194 = getelementptr inbounds i16, i16* %769, i64 %768, !dbg !9222
  store i16* %add.ptr1194, i16** %k_indexes434, align 8, !dbg !9222
  br label %for.inc1195, !dbg !9223

for.inc1195:                                      ; preds = %for.end1192
  %770 = load i64, i64* %v431, align 8, !dbg !9224
  %inc1196 = add nsw i64 %770, 1, !dbg !9224
  store i64 %inc1196, i64* %v431, align 8, !dbg !9224
  br label %for.cond1149, !dbg !9225, !llvm.loop !9226

for.end1197:                                      ; preds = %for.cond1149
  br label %sw.epilog1284, !dbg !9228

sw.bb1198:                                        ; preds = %sw.epilog511
  %771 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9229
  %values1199 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %771, i32 0, i32 5, !dbg !9230
  %772 = load double*, double** %values1199, align 8, !dbg !9230
  %773 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9231
  %width1200 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %773, i32 0, i32 1, !dbg !9232
  %774 = load i64, i64* %width1200, align 8, !dbg !9232
  %775 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9233
  %height1201 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %775, i32 0, i32 2, !dbg !9234
  %776 = load i64, i64* %height1201, align 8, !dbg !9234
  %mul1202 = mul i64 %774, %776, !dbg !9235
  %sub1203 = sub i64 %mul1202, 1, !dbg !9236
  %arrayidx1204 = getelementptr inbounds double, double* %772, i64 %sub1203, !dbg !9229
  store double* %arrayidx1204, double** %k432, align 8, !dbg !9237
  %777 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9238
  store %struct._PixelPacket* %777, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9239
  %778 = load i16*, i16** %p_indexes400, align 8, !dbg !9240
  store i16* %778, i16** %k_indexes434, align 8, !dbg !9241
  store i64 0, i64* %v431, align 8, !dbg !9242
  br label %for.cond1205, !dbg !9244

for.cond1205:                                     ; preds = %for.inc1279, %sw.bb1198
  %779 = load i64, i64* %v431, align 8, !dbg !9245
  %780 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9247
  %height1206 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %780, i32 0, i32 2, !dbg !9248
  %781 = load i64, i64* %height1206, align 8, !dbg !9248
  %cmp1207 = icmp slt i64 %779, %781, !dbg !9249
  br i1 %cmp1207, label %for.body1209, label %for.end1281, !dbg !9250

for.body1209:                                     ; preds = %for.cond1205
  store i64 0, i64* %u, align 8, !dbg !9251
  br label %for.cond1210, !dbg !9254

for.cond1210:                                     ; preds = %for.inc1273, %for.body1209
  %782 = load i64, i64* %u, align 8, !dbg !9255
  %783 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9257
  %width1211 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %783, i32 0, i32 1, !dbg !9258
  %784 = load i64, i64* %width1211, align 8, !dbg !9258
  %cmp1212 = icmp slt i64 %782, %784, !dbg !9259
  br i1 %cmp1212, label %for.body1214, label %for.end1276, !dbg !9260

for.body1214:                                     ; preds = %for.cond1210
  %785 = load double*, double** %k432, align 8, !dbg !9261
  %786 = load double, double* %785, align 8, !dbg !9261
  %787 = load double*, double** %k432, align 8, !dbg !9261
  %788 = load double, double* %787, align 8, !dbg !9261
  %cmp1215 = fcmp une double %786, %788, !dbg !9261
  br i1 %cmp1215, label %cond.true1217, label %cond.false1218, !dbg !9264

cond.true1217:                                    ; preds = %for.body1214
  br i1 true, label %if.then1219, label %if.end1220, !dbg !9261

cond.false1218:                                   ; preds = %for.body1214
  br i1 false, label %if.then1219, label %if.end1220, !dbg !9264

if.then1219:                                      ; preds = %cond.false1218, %cond.true1217
  br label %for.inc1273, !dbg !9265

if.end1220:                                       ; preds = %cond.false1218, %cond.true1217
  %red1221 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9266
  %789 = load double, double* %red1221, align 8, !dbg !9266
  %790 = load double*, double** %k432, align 8, !dbg !9266
  %791 = load double, double* %790, align 8, !dbg !9266
  %792 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9266
  %793 = load i64, i64* %u, align 8, !dbg !9266
  %arrayidx1222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %792, i64 %793, !dbg !9266
  %red1223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1222, i32 0, i32 2, !dbg !9266
  %794 = load i16, i16* %red1223, align 2, !dbg !9266
  %conv1224 = zext i16 %794 to i32, !dbg !9266
  %conv1225 = sitofp i32 %conv1224 to double, !dbg !9266
  %add1226 = fadd double %791, %conv1225, !dbg !9266
  %call1227 = call double @MagickMin(double %789, double %add1226), !dbg !9266
  %red1228 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9266
  store double %call1227, double* %red1228, align 8, !dbg !9266
  %green1229 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !9267
  %795 = load double, double* %green1229, align 8, !dbg !9267
  %796 = load double*, double** %k432, align 8, !dbg !9267
  %797 = load double, double* %796, align 8, !dbg !9267
  %798 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9267
  %799 = load i64, i64* %u, align 8, !dbg !9267
  %arrayidx1230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %798, i64 %799, !dbg !9267
  %green1231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1230, i32 0, i32 1, !dbg !9267
  %800 = load i16, i16* %green1231, align 2, !dbg !9267
  %conv1232 = zext i16 %800 to i32, !dbg !9267
  %conv1233 = sitofp i32 %conv1232 to double, !dbg !9267
  %add1234 = fadd double %797, %conv1233, !dbg !9267
  %call1235 = call double @MagickMin(double %795, double %add1234), !dbg !9267
  %green1236 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !9267
  store double %call1235, double* %green1236, align 8, !dbg !9267
  %blue1237 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !9268
  %801 = load double, double* %blue1237, align 8, !dbg !9268
  %802 = load double*, double** %k432, align 8, !dbg !9268
  %803 = load double, double* %802, align 8, !dbg !9268
  %804 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9268
  %805 = load i64, i64* %u, align 8, !dbg !9268
  %arrayidx1238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %804, i64 %805, !dbg !9268
  %blue1239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1238, i32 0, i32 0, !dbg !9268
  %806 = load i16, i16* %blue1239, align 2, !dbg !9268
  %conv1240 = zext i16 %806 to i32, !dbg !9268
  %conv1241 = sitofp i32 %conv1240 to double, !dbg !9268
  %add1242 = fadd double %803, %conv1241, !dbg !9268
  %call1243 = call double @MagickMin(double %801, double %add1242), !dbg !9268
  %blue1244 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !9268
  store double %call1243, double* %blue1244, align 8, !dbg !9268
  %opacity1245 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !9269
  %807 = load double, double* %opacity1245, align 8, !dbg !9269
  %808 = load double*, double** %k432, align 8, !dbg !9269
  %809 = load double, double* %808, align 8, !dbg !9269
  %add1246 = fadd double %809, 6.553500e+04, !dbg !9269
  %810 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9269
  %811 = load i64, i64* %u, align 8, !dbg !9269
  %arrayidx1247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %810, i64 %811, !dbg !9269
  %opacity1248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1247, i32 0, i32 3, !dbg !9269
  %812 = load i16, i16* %opacity1248, align 2, !dbg !9269
  %conv1249 = zext i16 %812 to i32, !dbg !9269
  %conv1250 = sitofp i32 %conv1249 to double, !dbg !9269
  %sub1251 = fsub double %add1246, %conv1250, !dbg !9269
  %call1252 = call double @MagickMin(double %807, double %sub1251), !dbg !9269
  %opacity1253 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !9269
  store double %call1252, double* %opacity1253, align 8, !dbg !9269
  %813 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9270
  %colorspace1254 = getelementptr inbounds %struct._Image, %struct._Image* %813, i32 0, i32 1, !dbg !9272
  %814 = load i32, i32* %colorspace1254, align 4, !dbg !9272
  %cmp1255 = icmp eq i32 %814, 12, !dbg !9273
  br i1 %cmp1255, label %if.then1257, label %if.end1272, !dbg !9274

if.then1257:                                      ; preds = %if.end1220
  %index1258 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !9275
  %815 = load double, double* %index1258, align 8, !dbg !9275
  %816 = load double*, double** %k432, align 8, !dbg !9275
  %817 = load double, double* %816, align 8, !dbg !9275
  %818 = load i16*, i16** %k_indexes434, align 8, !dbg !9275
  %819 = load i64, i64* %u, align 8, !dbg !9275
  %add.ptr1259 = getelementptr inbounds i16, i16* %818, i64 %819, !dbg !9275
  %cmp1260 = icmp eq i16* %add.ptr1259, null, !dbg !9275
  br i1 %cmp1260, label %cond.true1262, label %cond.false1263, !dbg !9275

cond.true1262:                                    ; preds = %if.then1257
  br label %cond.end1266, !dbg !9275

cond.false1263:                                   ; preds = %if.then1257
  %820 = load i16*, i16** %k_indexes434, align 8, !dbg !9275
  %821 = load i64, i64* %u, align 8, !dbg !9275
  %add.ptr1264 = getelementptr inbounds i16, i16* %820, i64 %821, !dbg !9275
  %822 = load i16, i16* %add.ptr1264, align 2, !dbg !9275
  %conv1265 = zext i16 %822 to i32, !dbg !9275
  br label %cond.end1266, !dbg !9275

cond.end1266:                                     ; preds = %cond.false1263, %cond.true1262
  %cond1267 = phi i32 [ 0, %cond.true1262 ], [ %conv1265, %cond.false1263 ], !dbg !9275
  %conv1268 = sitofp i32 %cond1267 to double, !dbg !9275
  %add1269 = fadd double %817, %conv1268, !dbg !9275
  %call1270 = call double @MagickMin(double %815, double %add1269), !dbg !9275
  %index1271 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !9275
  store double %call1270, double* %index1271, align 8, !dbg !9275
  br label %if.end1272, !dbg !9275

if.end1272:                                       ; preds = %cond.end1266, %if.end1220
  br label %for.inc1273, !dbg !9276

for.inc1273:                                      ; preds = %if.end1272, %if.then1219
  %823 = load i64, i64* %u, align 8, !dbg !9277
  %inc1274 = add nsw i64 %823, 1, !dbg !9277
  store i64 %inc1274, i64* %u, align 8, !dbg !9277
  %824 = load double*, double** %k432, align 8, !dbg !9278
  %incdec.ptr1275 = getelementptr inbounds double, double* %824, i32 -1, !dbg !9278
  store double* %incdec.ptr1275, double** %k432, align 8, !dbg !9278
  br label %for.cond1210, !dbg !9279, !llvm.loop !9280

for.end1276:                                      ; preds = %for.cond1210
  %825 = load i64, i64* %virt_width, align 8, !dbg !9282
  %826 = load %struct._PixelPacket*, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9283
  %add.ptr1277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %826, i64 %825, !dbg !9283
  store %struct._PixelPacket* %add.ptr1277, %struct._PixelPacket** %k_pixels433, align 8, !dbg !9283
  %827 = load i64, i64* %virt_width, align 8, !dbg !9284
  %828 = load i16*, i16** %k_indexes434, align 8, !dbg !9285
  %add.ptr1278 = getelementptr inbounds i16, i16* %828, i64 %827, !dbg !9285
  store i16* %add.ptr1278, i16** %k_indexes434, align 8, !dbg !9285
  br label %for.inc1279, !dbg !9286

for.inc1279:                                      ; preds = %for.end1276
  %829 = load i64, i64* %v431, align 8, !dbg !9287
  %inc1280 = add nsw i64 %829, 1, !dbg !9287
  store i64 %inc1280, i64* %v431, align 8, !dbg !9287
  br label %for.cond1205, !dbg !9288, !llvm.loop !9289

for.end1281:                                      ; preds = %for.cond1205
  br label %sw.epilog1284, !dbg !9291

sw.bb1282:                                        ; preds = %sw.epilog511
  br label %sw.default1283, !dbg !9291

sw.default1283:                                   ; preds = %sw.epilog511, %sw.bb1282
  br label %sw.epilog1284, !dbg !9292

sw.epilog1284:                                    ; preds = %sw.default1283, %for.end1281, %for.end1197, %for.end1141, %for.end1060, %for.end938, %for.end860, %if.end787
  %830 = load i32, i32* %method.addr, align 4, !dbg !9293
  switch i32 %830, label %sw.default1319 [
    i32 18, label %sw.bb1285
    i32 3, label %sw.bb1285
    i32 4, label %sw.bb1286
    i32 19, label %sw.bb1287
    i32 20, label %sw.bb1303
  ], !dbg !9294

sw.bb1285:                                        ; preds = %sw.epilog1284, %sw.epilog1284
  %831 = bitcast %struct._DoublePixelPacket* %result435 to i8*, !dbg !9295
  %832 = bitcast %struct._DoublePixelPacket* %min to i8*, !dbg !9295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %831, i8* align 8 %832, i64 40, i1 false), !dbg !9295
  br label %sw.epilog1320, !dbg !9297

sw.bb1286:                                        ; preds = %sw.epilog1284
  %833 = bitcast %struct._DoublePixelPacket* %result435 to i8*, !dbg !9298
  %834 = bitcast %struct._DoublePixelPacket* %max to i8*, !dbg !9298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %833, i8* align 8 %834, i64 40, i1 false), !dbg !9298
  br label %sw.epilog1320, !dbg !9299

sw.bb1287:                                        ; preds = %sw.epilog1284
  %red1288 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9300
  %835 = load double, double* %red1288, align 8, !dbg !9300
  %red1289 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9301
  %836 = load double, double* %red1289, align 8, !dbg !9302
  %sub1290 = fsub double %836, %835, !dbg !9302
  store double %sub1290, double* %red1289, align 8, !dbg !9302
  %green1291 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9303
  %837 = load double, double* %green1291, align 8, !dbg !9303
  %green1292 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !9304
  %838 = load double, double* %green1292, align 8, !dbg !9305
  %sub1293 = fsub double %838, %837, !dbg !9305
  store double %sub1293, double* %green1292, align 8, !dbg !9305
  %blue1294 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9306
  %839 = load double, double* %blue1294, align 8, !dbg !9306
  %blue1295 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !9307
  %840 = load double, double* %blue1295, align 8, !dbg !9308
  %sub1296 = fsub double %840, %839, !dbg !9308
  store double %sub1296, double* %blue1295, align 8, !dbg !9308
  %opacity1297 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9309
  %841 = load double, double* %opacity1297, align 8, !dbg !9309
  %opacity1298 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !9310
  %842 = load double, double* %opacity1298, align 8, !dbg !9311
  %sub1299 = fsub double %842, %841, !dbg !9311
  store double %sub1299, double* %opacity1298, align 8, !dbg !9311
  %index1300 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9312
  %843 = load double, double* %index1300, align 8, !dbg !9312
  %index1301 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !9313
  %844 = load double, double* %index1301, align 8, !dbg !9314
  %sub1302 = fsub double %844, %843, !dbg !9314
  store double %sub1302, double* %index1301, align 8, !dbg !9314
  br label %sw.epilog1320, !dbg !9315

sw.bb1303:                                        ; preds = %sw.epilog1284
  %red1304 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 0, !dbg !9316
  %845 = load double, double* %red1304, align 8, !dbg !9316
  %red1305 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9317
  %846 = load double, double* %red1305, align 8, !dbg !9318
  %add1306 = fadd double %846, %845, !dbg !9318
  store double %add1306, double* %red1305, align 8, !dbg !9318
  %green1307 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 1, !dbg !9319
  %847 = load double, double* %green1307, align 8, !dbg !9319
  %green1308 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !9320
  %848 = load double, double* %green1308, align 8, !dbg !9321
  %add1309 = fadd double %848, %847, !dbg !9321
  store double %add1309, double* %green1308, align 8, !dbg !9321
  %blue1310 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 2, !dbg !9322
  %849 = load double, double* %blue1310, align 8, !dbg !9322
  %blue1311 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !9323
  %850 = load double, double* %blue1311, align 8, !dbg !9324
  %add1312 = fadd double %850, %849, !dbg !9324
  store double %add1312, double* %blue1311, align 8, !dbg !9324
  %opacity1313 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 3, !dbg !9325
  %851 = load double, double* %opacity1313, align 8, !dbg !9325
  %opacity1314 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !9326
  %852 = load double, double* %opacity1314, align 8, !dbg !9327
  %add1315 = fadd double %852, %851, !dbg !9327
  store double %add1315, double* %opacity1314, align 8, !dbg !9327
  %index1316 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %min, i32 0, i32 4, !dbg !9328
  %853 = load double, double* %index1316, align 8, !dbg !9328
  %index1317 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !9329
  %854 = load double, double* %index1317, align 8, !dbg !9330
  %add1318 = fadd double %854, %853, !dbg !9330
  store double %add1318, double* %index1317, align 8, !dbg !9330
  br label %sw.epilog1320, !dbg !9331

sw.default1319:                                   ; preds = %sw.epilog1284
  br label %sw.epilog1320, !dbg !9332

sw.epilog1320:                                    ; preds = %sw.default1319, %sw.bb1303, %sw.bb1287, %sw.bb1286, %sw.bb1285
  %855 = load i32, i32* %method.addr, align 4, !dbg !9333
  switch i32 %855, label %sw.default1322 [
    i32 0, label %sw.bb1321
    i32 1, label %sw.bb1321
    i32 6, label %sw.bb1321
    i32 5, label %sw.bb1321
  ], !dbg !9334

sw.bb1321:                                        ; preds = %sw.epilog1320, %sw.epilog1320, %sw.epilog1320, %sw.epilog1320
  br label %sw.epilog1384, !dbg !9335

sw.default1322:                                   ; preds = %sw.epilog1320
  %856 = load i32, i32* %channel.addr, align 4, !dbg !9337
  %and1323 = and i32 %856, 1, !dbg !9339
  %cmp1324 = icmp ne i32 %and1323, 0, !dbg !9340
  br i1 %cmp1324, label %if.then1326, label %if.end1331, !dbg !9341

if.then1326:                                      ; preds = %sw.default1322
  %red1327 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 0, !dbg !9342
  %857 = load double, double* %red1327, align 8, !dbg !9342
  %conv1328 = fptrunc double %857 to float, !dbg !9342
  %call1329 = call zeroext i16 @ClampToQuantum(float %conv1328), !dbg !9342
  %858 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9342
  %red1330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %858, i32 0, i32 2, !dbg !9342
  store i16 %call1329, i16* %red1330, align 2, !dbg !9342
  br label %if.end1331, !dbg !9342

if.end1331:                                       ; preds = %if.then1326, %sw.default1322
  %859 = load i32, i32* %channel.addr, align 4, !dbg !9343
  %and1332 = and i32 %859, 2, !dbg !9345
  %cmp1333 = icmp ne i32 %and1332, 0, !dbg !9346
  br i1 %cmp1333, label %if.then1335, label %if.end1340, !dbg !9347

if.then1335:                                      ; preds = %if.end1331
  %green1336 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 1, !dbg !9348
  %860 = load double, double* %green1336, align 8, !dbg !9348
  %conv1337 = fptrunc double %860 to float, !dbg !9348
  %call1338 = call zeroext i16 @ClampToQuantum(float %conv1337), !dbg !9348
  %861 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9348
  %green1339 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %861, i32 0, i32 1, !dbg !9348
  store i16 %call1338, i16* %green1339, align 2, !dbg !9348
  br label %if.end1340, !dbg !9348

if.end1340:                                       ; preds = %if.then1335, %if.end1331
  %862 = load i32, i32* %channel.addr, align 4, !dbg !9349
  %and1341 = and i32 %862, 4, !dbg !9351
  %cmp1342 = icmp ne i32 %and1341, 0, !dbg !9352
  br i1 %cmp1342, label %if.then1344, label %if.end1349, !dbg !9353

if.then1344:                                      ; preds = %if.end1340
  %blue1345 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 2, !dbg !9354
  %863 = load double, double* %blue1345, align 8, !dbg !9354
  %conv1346 = fptrunc double %863 to float, !dbg !9354
  %call1347 = call zeroext i16 @ClampToQuantum(float %conv1346), !dbg !9354
  %864 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9354
  %blue1348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %864, i32 0, i32 0, !dbg !9354
  store i16 %call1347, i16* %blue1348, align 2, !dbg !9354
  br label %if.end1349, !dbg !9354

if.end1349:                                       ; preds = %if.then1344, %if.end1340
  %865 = load i32, i32* %channel.addr, align 4, !dbg !9355
  %and1350 = and i32 %865, 8, !dbg !9357
  %cmp1351 = icmp ne i32 %and1350, 0, !dbg !9358
  br i1 %cmp1351, label %land.lhs.true1353, label %if.end1365, !dbg !9359

land.lhs.true1353:                                ; preds = %if.end1349
  %866 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9360
  %matte1354 = getelementptr inbounds %struct._Image, %struct._Image* %866, i32 0, i32 6, !dbg !9361
  %867 = load i32, i32* %matte1354, align 8, !dbg !9361
  %cmp1355 = icmp ne i32 %867, 0, !dbg !9362
  br i1 %cmp1355, label %if.then1357, label %if.end1365, !dbg !9363

if.then1357:                                      ; preds = %land.lhs.true1353
  %opacity1358 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 3, !dbg !9364
  %868 = load double, double* %opacity1358, align 8, !dbg !9364
  %conv1359 = fptrunc double %868 to float, !dbg !9364
  %call1360 = call zeroext i16 @ClampToQuantum(float %conv1359), !dbg !9364
  %conv1361 = zext i16 %call1360 to i32, !dbg !9364
  %sub1362 = sub nsw i32 65535, %conv1361, !dbg !9364
  %conv1363 = trunc i32 %sub1362 to i16, !dbg !9364
  %869 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9364
  %opacity1364 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %869, i32 0, i32 3, !dbg !9364
  store i16 %conv1363, i16* %opacity1364, align 2, !dbg !9364
  br label %if.end1365, !dbg !9364

if.end1365:                                       ; preds = %if.then1357, %land.lhs.true1353, %if.end1349
  %870 = load i32, i32* %channel.addr, align 4, !dbg !9365
  %and1366 = and i32 %870, 32, !dbg !9367
  %cmp1367 = icmp ne i32 %and1366, 0, !dbg !9368
  br i1 %cmp1367, label %land.lhs.true1369, label %if.end1383, !dbg !9369

land.lhs.true1369:                                ; preds = %if.end1365
  %871 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9370
  %colorspace1370 = getelementptr inbounds %struct._Image, %struct._Image* %871, i32 0, i32 1, !dbg !9371
  %872 = load i32, i32* %colorspace1370, align 4, !dbg !9371
  %cmp1371 = icmp eq i32 %872, 12, !dbg !9372
  br i1 %cmp1371, label %if.then1373, label %if.end1383, !dbg !9373

if.then1373:                                      ; preds = %land.lhs.true1369
  %873 = load i16*, i16** %q_indexes402, align 8, !dbg !9374
  %874 = load i64, i64* %x403, align 8, !dbg !9374
  %add.ptr1374 = getelementptr inbounds i16, i16* %873, i64 %874, !dbg !9374
  %cmp1375 = icmp ne i16* %add.ptr1374, null, !dbg !9374
  br i1 %cmp1375, label %if.then1377, label %if.end1382, !dbg !9377

if.then1377:                                      ; preds = %if.then1373
  %index1378 = getelementptr inbounds %struct._DoublePixelPacket, %struct._DoublePixelPacket* %result435, i32 0, i32 4, !dbg !9374
  %875 = load double, double* %index1378, align 8, !dbg !9374
  %conv1379 = fptrunc double %875 to float, !dbg !9374
  %call1380 = call zeroext i16 @ClampToQuantum(float %conv1379), !dbg !9374
  %876 = load i16*, i16** %q_indexes402, align 8, !dbg !9374
  %877 = load i64, i64* %x403, align 8, !dbg !9374
  %add.ptr1381 = getelementptr inbounds i16, i16* %876, i64 %877, !dbg !9374
  store i16 %call1380, i16* %add.ptr1381, align 2, !dbg !9374
  br label %if.end1382, !dbg !9374

if.end1382:                                       ; preds = %if.then1377, %if.then1373
  br label %if.end1383, !dbg !9377

if.end1383:                                       ; preds = %if.end1382, %land.lhs.true1369, %if.end1365
  br label %sw.epilog1384, !dbg !9378

sw.epilog1384:                                    ; preds = %if.end1383, %sw.bb1321
  %878 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9379
  %879 = load i64, i64* %r404, align 8, !dbg !9381
  %arrayidx1385 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %878, i64 %879, !dbg !9379
  %red1386 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1385, i32 0, i32 2, !dbg !9382
  %880 = load i16, i16* %red1386, align 2, !dbg !9382
  %conv1387 = zext i16 %880 to i32, !dbg !9379
  %881 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9383
  %red1388 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %881, i32 0, i32 2, !dbg !9383
  %882 = load i16, i16* %red1388, align 2, !dbg !9383
  %conv1389 = zext i16 %882 to i32, !dbg !9383
  %cmp1390 = icmp ne i32 %conv1387, %conv1389, !dbg !9384
  br i1 %cmp1390, label %if.then1441, label %lor.lhs.false1392, !dbg !9385

lor.lhs.false1392:                                ; preds = %sw.epilog1384
  %883 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9386
  %884 = load i64, i64* %r404, align 8, !dbg !9387
  %arrayidx1393 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %883, i64 %884, !dbg !9386
  %green1394 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1393, i32 0, i32 1, !dbg !9388
  %885 = load i16, i16* %green1394, align 2, !dbg !9388
  %conv1395 = zext i16 %885 to i32, !dbg !9386
  %886 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9389
  %green1396 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %886, i32 0, i32 1, !dbg !9389
  %887 = load i16, i16* %green1396, align 2, !dbg !9389
  %conv1397 = zext i16 %887 to i32, !dbg !9389
  %cmp1398 = icmp ne i32 %conv1395, %conv1397, !dbg !9390
  br i1 %cmp1398, label %if.then1441, label %lor.lhs.false1400, !dbg !9391

lor.lhs.false1400:                                ; preds = %lor.lhs.false1392
  %888 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9392
  %889 = load i64, i64* %r404, align 8, !dbg !9393
  %arrayidx1401 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %888, i64 %889, !dbg !9392
  %blue1402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1401, i32 0, i32 0, !dbg !9394
  %890 = load i16, i16* %blue1402, align 2, !dbg !9394
  %conv1403 = zext i16 %890 to i32, !dbg !9392
  %891 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9395
  %blue1404 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %891, i32 0, i32 0, !dbg !9395
  %892 = load i16, i16* %blue1404, align 2, !dbg !9395
  %conv1405 = zext i16 %892 to i32, !dbg !9395
  %cmp1406 = icmp ne i32 %conv1403, %conv1405, !dbg !9396
  br i1 %cmp1406, label %if.then1441, label %lor.lhs.false1408, !dbg !9397

lor.lhs.false1408:                                ; preds = %lor.lhs.false1400
  %893 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9398
  %894 = load i64, i64* %r404, align 8, !dbg !9399
  %arrayidx1409 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %893, i64 %894, !dbg !9398
  %opacity1410 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1409, i32 0, i32 3, !dbg !9400
  %895 = load i16, i16* %opacity1410, align 2, !dbg !9400
  %conv1411 = zext i16 %895 to i32, !dbg !9398
  %896 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9401
  %opacity1412 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %896, i32 0, i32 3, !dbg !9401
  %897 = load i16, i16* %opacity1412, align 2, !dbg !9401
  %conv1413 = zext i16 %897 to i32, !dbg !9401
  %cmp1414 = icmp ne i32 %conv1411, %conv1413, !dbg !9402
  br i1 %cmp1414, label %if.then1441, label %lor.lhs.false1416, !dbg !9403

lor.lhs.false1416:                                ; preds = %lor.lhs.false1408
  %898 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9404
  %colorspace1417 = getelementptr inbounds %struct._Image, %struct._Image* %898, i32 0, i32 1, !dbg !9405
  %899 = load i32, i32* %colorspace1417, align 4, !dbg !9405
  %cmp1418 = icmp eq i32 %899, 12, !dbg !9406
  br i1 %cmp1418, label %land.lhs.true1420, label %if.end1445, !dbg !9407

land.lhs.true1420:                                ; preds = %lor.lhs.false1416
  %900 = load i16*, i16** %p_indexes400, align 8, !dbg !9408
  %901 = load i64, i64* %r404, align 8, !dbg !9408
  %add.ptr1421 = getelementptr inbounds i16, i16* %900, i64 %901, !dbg !9408
  %cmp1422 = icmp eq i16* %add.ptr1421, null, !dbg !9408
  br i1 %cmp1422, label %cond.true1424, label %cond.false1425, !dbg !9408

cond.true1424:                                    ; preds = %land.lhs.true1420
  br label %cond.end1428, !dbg !9408

cond.false1425:                                   ; preds = %land.lhs.true1420
  %902 = load i16*, i16** %p_indexes400, align 8, !dbg !9408
  %903 = load i64, i64* %r404, align 8, !dbg !9408
  %add.ptr1426 = getelementptr inbounds i16, i16* %902, i64 %903, !dbg !9408
  %904 = load i16, i16* %add.ptr1426, align 2, !dbg !9408
  %conv1427 = zext i16 %904 to i32, !dbg !9408
  br label %cond.end1428, !dbg !9408

cond.end1428:                                     ; preds = %cond.false1425, %cond.true1424
  %cond1429 = phi i32 [ 0, %cond.true1424 ], [ %conv1427, %cond.false1425 ], !dbg !9408
  %905 = load i16*, i16** %q_indexes402, align 8, !dbg !9409
  %906 = load i64, i64* %x403, align 8, !dbg !9409
  %add.ptr1430 = getelementptr inbounds i16, i16* %905, i64 %906, !dbg !9409
  %cmp1431 = icmp eq i16* %add.ptr1430, null, !dbg !9409
  br i1 %cmp1431, label %cond.true1433, label %cond.false1434, !dbg !9409

cond.true1433:                                    ; preds = %cond.end1428
  br label %cond.end1437, !dbg !9409

cond.false1434:                                   ; preds = %cond.end1428
  %907 = load i16*, i16** %q_indexes402, align 8, !dbg !9409
  %908 = load i64, i64* %x403, align 8, !dbg !9409
  %add.ptr1435 = getelementptr inbounds i16, i16* %907, i64 %908, !dbg !9409
  %909 = load i16, i16* %add.ptr1435, align 2, !dbg !9409
  %conv1436 = zext i16 %909 to i32, !dbg !9409
  br label %cond.end1437, !dbg !9409

cond.end1437:                                     ; preds = %cond.false1434, %cond.true1433
  %cond1438 = phi i32 [ 0, %cond.true1433 ], [ %conv1436, %cond.false1434 ], !dbg !9409
  %cmp1439 = icmp ne i32 %cond1429, %cond1438, !dbg !9410
  br i1 %cmp1439, label %if.then1441, label %if.end1445, !dbg !9411

if.then1441:                                      ; preds = %cond.end1437, %lor.lhs.false1408, %lor.lhs.false1400, %lor.lhs.false1392, %sw.epilog1384
  %910 = load i64*, i64** %changes, align 8, !dbg !9412
  %911 = load i32, i32* %id397, align 4, !dbg !9413
  %idxprom1442 = sext i32 %911 to i64, !dbg !9412
  %arrayidx1443 = getelementptr inbounds i64, i64* %910, i64 %idxprom1442, !dbg !9412
  %912 = load i64, i64* %arrayidx1443, align 8, !dbg !9414
  %inc1444 = add i64 %912, 1, !dbg !9414
  store i64 %inc1444, i64* %arrayidx1443, align 8, !dbg !9414
  br label %if.end1445, !dbg !9412

if.end1445:                                       ; preds = %if.then1441, %cond.end1437, %lor.lhs.false1416
  %913 = load %struct._PixelPacket*, %struct._PixelPacket** %p399, align 8, !dbg !9415
  %incdec.ptr1446 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %913, i32 1, !dbg !9415
  store %struct._PixelPacket* %incdec.ptr1446, %struct._PixelPacket** %p399, align 8, !dbg !9415
  %914 = load %struct._PixelPacket*, %struct._PixelPacket** %q401, align 8, !dbg !9416
  %incdec.ptr1447 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %914, i32 1, !dbg !9416
  store %struct._PixelPacket* %incdec.ptr1447, %struct._PixelPacket** %q401, align 8, !dbg !9416
  br label %for.inc1448, !dbg !9417

for.inc1448:                                      ; preds = %if.end1445
  %915 = load i64, i64* %x403, align 8, !dbg !9418
  %inc1449 = add nsw i64 %915, 1, !dbg !9418
  store i64 %inc1449, i64* %x403, align 8, !dbg !9418
  br label %for.cond426, !dbg !9419, !llvm.loop !9420

for.end1450:                                      ; preds = %for.cond426
  %916 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !9422
  %917 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9424
  %call1451 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %916, %struct._ExceptionInfo* %917), !dbg !9425
  %cmp1452 = icmp eq i32 %call1451, 0, !dbg !9426
  br i1 %cmp1452, label %if.then1454, label %if.end1455, !dbg !9427

if.then1454:                                      ; preds = %for.end1450
  store i32 0, i32* %status, align 4, !dbg !9428
  br label %if.end1455, !dbg !9429

if.end1455:                                       ; preds = %if.then1454, %for.end1450
  %918 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9430
  %progress_monitor1456 = getelementptr inbounds %struct._Image, %struct._Image* %918, i32 0, i32 47, !dbg !9432
  %919 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor1456, align 8, !dbg !9432
  %cmp1457 = icmp ne i32 (i8*, i64, i64, i8*)* %919, null, !dbg !9433
  br i1 %cmp1457, label %if.then1459, label %if.end1468, !dbg !9434

if.then1459:                                      ; preds = %if.end1455
  call void @llvm.dbg.declare(metadata i32* %proceed1460, metadata !9435, metadata !DIExpression()), !dbg !9437
  %920 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9438
  %921 = load i64, i64* %progress, align 8, !dbg !9439
  %inc1461 = add nsw i64 %921, 1, !dbg !9439
  store i64 %inc1461, i64* %progress, align 8, !dbg !9439
  %922 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9440
  %rows1462 = getelementptr inbounds %struct._Image, %struct._Image* %922, i32 0, i32 8, !dbg !9441
  %923 = load i64, i64* %rows1462, align 8, !dbg !9441
  %call1463 = call i32 @SetImageProgress(%struct._Image* %920, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i64 0, i64 0), i64 %921, i64 %923), !dbg !9442
  store i32 %call1463, i32* %proceed1460, align 4, !dbg !9443
  %924 = load i32, i32* %proceed1460, align 4, !dbg !9444
  %cmp1464 = icmp eq i32 %924, 0, !dbg !9446
  br i1 %cmp1464, label %if.then1466, label %if.end1467, !dbg !9447

if.then1466:                                      ; preds = %if.then1459
  store i32 0, i32* %status, align 4, !dbg !9448
  br label %if.end1467, !dbg !9449

if.end1467:                                       ; preds = %if.then1466, %if.then1459
  br label %if.end1468, !dbg !9450

if.end1468:                                       ; preds = %if.end1467, %if.end1455
  br label %for.inc1469, !dbg !9451

for.inc1469:                                      ; preds = %if.end1468, %if.then420, %if.then407
  %925 = load i64, i64* %y, align 8, !dbg !9452
  %inc1470 = add nsw i64 %925, 1, !dbg !9452
  store i64 %inc1470, i64* %y, align 8, !dbg !9452
  br label %for.cond392, !dbg !9453, !llvm.loop !9454

for.end1471:                                      ; preds = %for.cond392
  %926 = load %struct._CacheView*, %struct._CacheView** %q_view, align 8, !dbg !9456
  %call1472 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %926), !dbg !9457
  store %struct._CacheView* %call1472, %struct._CacheView** %q_view, align 8, !dbg !9458
  %927 = load %struct._CacheView*, %struct._CacheView** %p_view, align 8, !dbg !9459
  %call1473 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %927), !dbg !9460
  store %struct._CacheView* %call1473, %struct._CacheView** %p_view, align 8, !dbg !9461
  store i64 0, i64* %i, align 8, !dbg !9462
  br label %for.cond1474, !dbg !9464

for.cond1474:                                     ; preds = %for.inc1481, %for.end1471
  %928 = load i64, i64* %i, align 8, !dbg !9465
  %call1475 = call i64 @GetOpenMPMaximumThreads(), !dbg !9467
  %cmp1476 = icmp slt i64 %928, %call1475, !dbg !9468
  br i1 %cmp1476, label %for.body1478, label %for.end1483, !dbg !9469

for.body1478:                                     ; preds = %for.cond1474
  %929 = load i64*, i64** %changes, align 8, !dbg !9470
  %930 = load i64, i64* %i, align 8, !dbg !9471
  %arrayidx1479 = getelementptr inbounds i64, i64* %929, i64 %930, !dbg !9470
  %931 = load i64, i64* %arrayidx1479, align 8, !dbg !9470
  %932 = load i64, i64* %changed, align 8, !dbg !9472
  %add1480 = add i64 %932, %931, !dbg !9472
  store i64 %add1480, i64* %changed, align 8, !dbg !9472
  br label %for.inc1481, !dbg !9473

for.inc1481:                                      ; preds = %for.body1478
  %933 = load i64, i64* %i, align 8, !dbg !9474
  %inc1482 = add nsw i64 %933, 1, !dbg !9474
  store i64 %inc1482, i64* %i, align 8, !dbg !9474
  br label %for.cond1474, !dbg !9475, !llvm.loop !9476

for.end1483:                                      ; preds = %for.cond1474
  %934 = load i64*, i64** %changes, align 8, !dbg !9478
  %935 = bitcast i64* %934 to i8*, !dbg !9478
  %call1484 = call i8* @RelinquishMagickMemory(i8* %935), !dbg !9479
  %936 = bitcast i8* %call1484 to i64*, !dbg !9480
  store i64* %936, i64** %changes, align 8, !dbg !9481
  %937 = load i32, i32* %status, align 4, !dbg !9482
  %tobool1485 = icmp ne i32 %937, 0, !dbg !9482
  br i1 %tobool1485, label %cond.true1486, label %cond.false1487, !dbg !9482

cond.true1486:                                    ; preds = %for.end1483
  %938 = load i64, i64* %changed, align 8, !dbg !9483
  br label %cond.end1488, !dbg !9482

cond.false1487:                                   ; preds = %for.end1483
  br label %cond.end1488, !dbg !9482

cond.end1488:                                     ; preds = %cond.false1487, %cond.true1486
  %cond1489 = phi i64 [ %938, %cond.true1486 ], [ -1, %cond.false1487 ], !dbg !9482
  store i64 %cond1489, i64* %retval, align 8, !dbg !9484
  br label %return, !dbg !9484

return:                                           ; preds = %cond.end1488, %cond.end389
  %939 = load i64, i64* %retval, align 8, !dbg !9485
  ret i64 %939, !dbg !9485
}

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MorphologyImageChannel(%struct._Image* %image, i32 %channel, i32 %method, i64 %iterations, %struct.KernelInfo* %kernel, %struct._ExceptionInfo* %exception) #0 !dbg !9486 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %iterations.addr = alloca i64, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %curr_kernel = alloca %struct.KernelInfo*, align 8
  %compose = alloca i32, align 4
  %bias = alloca double, align 8
  %morphology_image = alloca %struct._Image*, align 8
  %artifact = alloca i8*, align 8
  %artifact31 = alloca i8*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %curr_kernel, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata i32* %compose, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata double* %bias, metadata !9505, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.declare(metadata %struct._Image** %morphology_image, metadata !9507, metadata !DIExpression()), !dbg !9508
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9509
  store %struct.KernelInfo* %0, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9510
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9511
  %bias1 = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 29, !dbg !9512
  %2 = load double, double* %bias1, align 8, !dbg !9512
  store double %2, double* %bias, align 8, !dbg !9513
  %3 = load i32, i32* %method.addr, align 4, !dbg !9514
  %cmp = icmp eq i32 %3, 1, !dbg !9516
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9517

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %method.addr, align 4, !dbg !9518
  %cmp2 = icmp eq i32 %4, 2, !dbg !9519
  br i1 %cmp2, label %if.then, label %if.end18, !dbg !9520

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8** %artifact, metadata !9521, metadata !DIExpression()), !dbg !9523
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9524
  %call = call i8* @GetImageArtifact(%struct._Image* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i64 0, i64 0)), !dbg !9525
  store i8* %call, i8** %artifact, align 8, !dbg !9526
  %6 = load i8*, i8** %artifact, align 8, !dbg !9527
  %cmp3 = icmp ne i8* %6, null, !dbg !9529
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !9530

if.then4:                                         ; preds = %if.then
  %7 = load i8*, i8** %artifact, align 8, !dbg !9531
  %call5 = call double @StringToDoubleInterval(i8* %7, double 6.553600e+04), !dbg !9532
  store double %call5, double* %bias, align 8, !dbg !9533
  br label %if.end, !dbg !9534

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9535
  %call6 = call i8* @GetImageArtifact(%struct._Image* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i64 0, i64 0)), !dbg !9536
  store i8* %call6, i8** %artifact, align 8, !dbg !9537
  %9 = load i8*, i8** %artifact, align 8, !dbg !9538
  %cmp7 = icmp ne i8* %9, null, !dbg !9540
  br i1 %cmp7, label %if.then8, label %if.end17, !dbg !9541

if.then8:                                         ; preds = %if.end
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9542
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9545
  %cmp9 = icmp eq %struct.KernelInfo* %10, %11, !dbg !9546
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !9547

if.then10:                                        ; preds = %if.then8
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9548
  %call11 = call %struct.KernelInfo* @CloneKernelInfo(%struct.KernelInfo* %12), !dbg !9549
  store %struct.KernelInfo* %call11, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9550
  br label %if.end12, !dbg !9551

if.end12:                                         ; preds = %if.then10, %if.then8
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9552
  %cmp13 = icmp eq %struct.KernelInfo* %13, null, !dbg !9554
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !9555

if.then14:                                        ; preds = %if.end12
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9556
  %call15 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %14), !dbg !9558
  store %struct.KernelInfo* %call15, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9559
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9560
  br label %return, !dbg !9560

if.end16:                                         ; preds = %if.end12
  %15 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9561
  %16 = load i8*, i8** %artifact, align 8, !dbg !9562
  call void @ScaleGeometryKernelInfo(%struct.KernelInfo* %15, i8* %16), !dbg !9563
  br label %if.end17, !dbg !9564

if.end17:                                         ; preds = %if.end16, %if.end
  br label %if.end18, !dbg !9565

if.end18:                                         ; preds = %if.end17, %lor.lhs.false
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9566
  %call19 = call i8* @GetImageArtifact(%struct._Image* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.91, i64 0, i64 0)), !dbg !9568
  %call20 = call i32 @IsMagickTrue(i8* %call19), !dbg !9569
  %tobool = icmp ne i32 %call20, 0, !dbg !9569
  br i1 %tobool, label %if.then29, label %lor.lhs.false21, !dbg !9570

lor.lhs.false21:                                  ; preds = %if.end18
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9571
  %call22 = call i8* @GetImageArtifact(%struct._Image* %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0)), !dbg !9572
  %call23 = call i32 @IsMagickTrue(i8* %call22), !dbg !9573
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9573
  br i1 %tobool24, label %if.then29, label %lor.lhs.false25, !dbg !9574

lor.lhs.false25:                                  ; preds = %lor.lhs.false21
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9575
  %call26 = call i8* @GetImageArtifact(%struct._Image* %19, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i64 0, i64 0)), !dbg !9576
  %call27 = call i32 @IsMagickTrue(i8* %call26), !dbg !9577
  %tobool28 = icmp ne i32 %call27, 0, !dbg !9577
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9578

if.then29:                                        ; preds = %lor.lhs.false25, %lor.lhs.false21, %if.end18
  %20 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9579
  call void @ShowKernelInfo(%struct.KernelInfo* %20), !dbg !9580
  br label %if.end30, !dbg !9580

if.end30:                                         ; preds = %if.then29, %lor.lhs.false25
  call void @llvm.dbg.declare(metadata i8** %artifact31, metadata !9581, metadata !DIExpression()), !dbg !9583
  store i32 0, i32* %compose, align 4, !dbg !9584
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9585
  %call32 = call i8* @GetImageArtifact(%struct._Image* %21, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i64 0, i64 0)), !dbg !9586
  store i8* %call32, i8** %artifact31, align 8, !dbg !9587
  %22 = load i8*, i8** %artifact31, align 8, !dbg !9588
  %cmp33 = icmp ne i8* %22, null, !dbg !9590
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !9591

if.then34:                                        ; preds = %if.end30
  %23 = load i8*, i8** %artifact31, align 8, !dbg !9592
  %call35 = call i64 @ParseCommandOption(i32 11, i32 0, i8* %23), !dbg !9593
  %conv = trunc i64 %call35 to i32, !dbg !9594
  store i32 %conv, i32* %compose, align 4, !dbg !9595
  br label %if.end36, !dbg !9596

if.end36:                                         ; preds = %if.then34, %if.end30
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9597
  %25 = load i32, i32* %channel.addr, align 4, !dbg !9598
  %26 = load i32, i32* %method.addr, align 4, !dbg !9599
  %27 = load i64, i64* %iterations.addr, align 8, !dbg !9600
  %28 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9601
  %29 = load i32, i32* %compose, align 4, !dbg !9602
  %30 = load double, double* %bias, align 8, !dbg !9603
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9604
  %call37 = call %struct._Image* @MorphologyApply(%struct._Image* %24, i32 %25, i32 %26, i64 %27, %struct.KernelInfo* %28, i32 %29, double %30, %struct._ExceptionInfo* %31), !dbg !9605
  store %struct._Image* %call37, %struct._Image** %morphology_image, align 8, !dbg !9606
  %32 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9607
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9609
  %cmp38 = icmp ne %struct.KernelInfo* %32, %33, !dbg !9610
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !9611

if.then40:                                        ; preds = %if.end36
  %34 = load %struct.KernelInfo*, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9612
  %call41 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %34), !dbg !9613
  store %struct.KernelInfo* %call41, %struct.KernelInfo** %curr_kernel, align 8, !dbg !9614
  br label %if.end42, !dbg !9615

if.end42:                                         ; preds = %if.then40, %if.end36
  %35 = load %struct._Image*, %struct._Image** %morphology_image, align 8, !dbg !9616
  store %struct._Image* %35, %struct._Image** %retval, align 8, !dbg !9617
  br label %return, !dbg !9617

return:                                           ; preds = %if.end42, %if.then14
  %36 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !9618
  ret %struct._Image* %36, !dbg !9618
}

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDoubleInterval(i8* %string, double %interval) #0 !dbg !9619 {
entry:
  %string.addr = alloca i8*, align 8
  %interval.addr = alloca double, align 8
  %q = alloca i8*, align 8
  %value = alloca double, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !9623, metadata !DIExpression()), !dbg !9624
  store double %interval, double* %interval.addr, align 8
  call void @llvm.dbg.declare(metadata double* %interval.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9627, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.declare(metadata double* %value, metadata !9629, metadata !DIExpression()), !dbg !9630
  %0 = load i8*, i8** %string.addr, align 8, !dbg !9631
  %call = call double @InterpretLocaleValue(i8* %0, i8** %q), !dbg !9632
  store double %call, double* %value, align 8, !dbg !9633
  %1 = load i8*, i8** %q, align 8, !dbg !9634
  %2 = load i8, i8* %1, align 1, !dbg !9636
  %conv = sext i8 %2 to i32, !dbg !9636
  %cmp = icmp eq i32 %conv, 37, !dbg !9637
  br i1 %cmp, label %if.then, label %if.end, !dbg !9638

if.then:                                          ; preds = %entry
  %3 = load double, double* %interval.addr, align 8, !dbg !9639
  %div = fdiv double %3, 1.000000e+02, !dbg !9640
  %4 = load double, double* %value, align 8, !dbg !9641
  %mul = fmul double %4, %div, !dbg !9641
  store double %mul, double* %value, align 8, !dbg !9641
  br label %if.end, !dbg !9642

if.end:                                           ; preds = %if.then, %entry
  %5 = load double, double* %value, align 8, !dbg !9643
  ret double %5, !dbg !9644
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ScaleGeometryKernelInfo(%struct.KernelInfo* %kernel, i8* %geometry) #0 !dbg !9645 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %geometry.addr = alloca i8*, align 8
  %flags = alloca i32, align 4
  %args = alloca %struct._GeometryInfo, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !9650, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9652, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %args, metadata !9654, metadata !DIExpression()), !dbg !9655
  call void @SetGeometryInfo(%struct._GeometryInfo* %args), !dbg !9656
  %0 = load i8*, i8** %geometry.addr, align 8, !dbg !9657
  %call = call i32 @ParseGeometry(i8* %0, %struct._GeometryInfo* %args), !dbg !9658
  store i32 %call, i32* %flags, align 4, !dbg !9659
  %1 = load i32, i32* %flags, align 4, !dbg !9660
  %and = and i32 %1, 4096, !dbg !9662
  %cmp = icmp ne i32 %and, 0, !dbg !9663
  br i1 %cmp, label %if.then, label %if.end, !dbg !9664

if.then:                                          ; preds = %entry
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !9665
  %2 = load double, double* %rho, align 8, !dbg !9666
  %mul = fmul double %2, 1.000000e-02, !dbg !9666
  store double %mul, double* %rho, align 8, !dbg !9666
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !9667
  %3 = load double, double* %sigma, align 8, !dbg !9668
  %mul1 = fmul double %3, 1.000000e-02, !dbg !9668
  store double %mul1, double* %sigma, align 8, !dbg !9668
  br label %if.end, !dbg !9669

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %flags, align 4, !dbg !9670
  %and2 = and i32 %4, 4, !dbg !9672
  %cmp3 = icmp eq i32 %and2, 0, !dbg !9673
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9674

if.then4:                                         ; preds = %if.end
  %rho5 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !9675
  store double 1.000000e+00, double* %rho5, align 8, !dbg !9676
  br label %if.end6, !dbg !9677

if.end6:                                          ; preds = %if.then4, %if.end
  %5 = load i32, i32* %flags, align 4, !dbg !9678
  %and7 = and i32 %5, 8, !dbg !9680
  %cmp8 = icmp eq i32 %and7, 0, !dbg !9681
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !9682

if.then9:                                         ; preds = %if.end6
  %sigma10 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !9683
  store double 0.000000e+00, double* %sigma10, align 8, !dbg !9684
  br label %if.end11, !dbg !9685

if.end11:                                         ; preds = %if.then9, %if.end6
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9686
  %rho12 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 0, !dbg !9687
  %7 = load double, double* %rho12, align 8, !dbg !9687
  %8 = load i32, i32* %flags, align 4, !dbg !9688
  call void @ScaleKernelInfo(%struct.KernelInfo* %6, double %7, i32 %8), !dbg !9689
  %9 = load i32, i32* %flags, align 4, !dbg !9690
  %and13 = and i32 %9, 8, !dbg !9692
  %cmp14 = icmp ne i32 %and13, 0, !dbg !9693
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !9694

if.then15:                                        ; preds = %if.end11
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9695
  %sigma16 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %args, i32 0, i32 1, !dbg !9696
  %11 = load double, double* %sigma16, align 8, !dbg !9696
  call void @UnityAddKernelInfo(%struct.KernelInfo* %10, double %11), !dbg !9697
  br label %if.end17, !dbg !9697

if.end17:                                         ; preds = %if.then15, %if.end11
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ShowKernelInfo(%struct.KernelInfo* %kernel) #0 !dbg !9699 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %k = alloca %struct.KernelInfo*, align 8
  %c = alloca i64, align 8
  %i = alloca i64, align 8
  %u = alloca i64, align 8
  %v = alloca i64, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %k, metadata !9704, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.declare(metadata i64* %c, metadata !9706, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9708, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.declare(metadata i64* %u, metadata !9710, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.declare(metadata i64* %v, metadata !9712, metadata !DIExpression()), !dbg !9713
  store i64 0, i64* %c, align 8, !dbg !9714
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9716
  store %struct.KernelInfo* %0, %struct.KernelInfo** %k, align 8, !dbg !9717
  br label %for.cond, !dbg !9718

for.cond:                                         ; preds = %for.inc71, %entry
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9719
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !9721
  br i1 %cmp, label %for.body, label %for.end74, !dbg !9722

for.body:                                         ; preds = %for.cond
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9723
  %call = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i64 0, i64 0)), !dbg !9725
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9726
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %3, i32 0, i32 11, !dbg !9728
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !9728
  %cmp1 = icmp ne %struct.KernelInfo* %4, null, !dbg !9729
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9730

if.then:                                          ; preds = %for.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9731
  %6 = load i64, i64* %c, align 8, !dbg !9732
  %call2 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0), i64 %6), !dbg !9733
  br label %if.end, !dbg !9734

if.end:                                           ; preds = %if.then, %for.body
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9735
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9736
  %type = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 0, !dbg !9737
  %9 = load i32, i32* %type, align 8, !dbg !9737
  %conv = zext i32 %9 to i64, !dbg !9736
  %call3 = call i8* @CommandOptionToMnemonic(i32 34, i64 %conv), !dbg !9738
  %call4 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), i8* %call3), !dbg !9739
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9740
  %angle = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 10, !dbg !9742
  %11 = load double, double* %angle, align 8, !dbg !9742
  %12 = call double @llvm.fabs.f64(double %11), !dbg !9743
  %cmp5 = fcmp oge double %12, 1.000000e-15, !dbg !9744
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !9745

if.then7:                                         ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9746
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9747
  %angle8 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %14, i32 0, i32 10, !dbg !9748
  %15 = load double, double* %angle8, align 8, !dbg !9748
  %call9 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i64 0, i64 0), double %15), !dbg !9749
  br label %if.end10, !dbg !9750

if.end10:                                         ; preds = %if.then7, %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9751
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9752
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 1, !dbg !9753
  %18 = load i64, i64* %width, align 8, !dbg !9753
  %19 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9754
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %19, i32 0, i32 2, !dbg !9755
  %20 = load i64, i64* %height, align 8, !dbg !9755
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9756
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 3, !dbg !9757
  %22 = load i64, i64* %x, align 8, !dbg !9757
  %23 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9758
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %23, i32 0, i32 4, !dbg !9759
  %24 = load i64, i64* %y, align 8, !dbg !9759
  %call11 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.99, i64 0, i64 0), i64 %18, i64 %20, i64 %22, i64 %24), !dbg !9760
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9761
  %call12 = call i32 @GetMagickPrecision(), !dbg !9762
  %26 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9763
  %minimum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %26, i32 0, i32 6, !dbg !9764
  %27 = load double, double* %minimum, align 8, !dbg !9764
  %call13 = call i32 @GetMagickPrecision(), !dbg !9765
  %28 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9766
  %maximum = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %28, i32 0, i32 7, !dbg !9767
  %29 = load double, double* %maximum, align 8, !dbg !9767
  %call14 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.100, i64 0, i64 0), i32 %call12, double %27, i32 %call13, double %29), !dbg !9768
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9769
  %call15 = call i32 @GetMagickPrecision(), !dbg !9770
  %31 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9771
  %negative_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %31, i32 0, i32 8, !dbg !9772
  %32 = load double, double* %negative_range, align 8, !dbg !9772
  %call16 = call i32 @GetMagickPrecision(), !dbg !9773
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9774
  %positive_range = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %33, i32 0, i32 9, !dbg !9775
  %34 = load double, double* %positive_range, align 8, !dbg !9775
  %call17 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %30, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.101, i64 0, i64 0), i32 %call15, double %32, i32 %call16, double %34), !dbg !9776
  %35 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9777
  %positive_range18 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %35, i32 0, i32 9, !dbg !9779
  %36 = load double, double* %positive_range18, align 8, !dbg !9779
  %37 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9780
  %negative_range19 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %37, i32 0, i32 8, !dbg !9781
  %38 = load double, double* %negative_range19, align 8, !dbg !9781
  %add = fadd double %36, %38, !dbg !9782
  %39 = call double @llvm.fabs.f64(double %add), !dbg !9783
  %cmp20 = fcmp olt double %39, 1.000000e-15, !dbg !9784
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !9785

if.then22:                                        ; preds = %if.end10
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9786
  %call23 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i64 0, i64 0)), !dbg !9787
  br label %if.end38, !dbg !9788

if.else:                                          ; preds = %if.end10
  %41 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9789
  %positive_range24 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %41, i32 0, i32 9, !dbg !9791
  %42 = load double, double* %positive_range24, align 8, !dbg !9791
  %43 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9792
  %negative_range25 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %43, i32 0, i32 8, !dbg !9793
  %44 = load double, double* %negative_range25, align 8, !dbg !9793
  %add26 = fadd double %42, %44, !dbg !9794
  %sub = fsub double %add26, 1.000000e+00, !dbg !9795
  %45 = call double @llvm.fabs.f64(double %sub), !dbg !9796
  %cmp27 = fcmp olt double %45, 1.000000e-15, !dbg !9797
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !9798

if.then29:                                        ; preds = %if.else
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9799
  %call30 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.103, i64 0, i64 0)), !dbg !9800
  br label %if.end37, !dbg !9801

if.else31:                                        ; preds = %if.else
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9802
  %call32 = call i32 @GetMagickPrecision(), !dbg !9803
  %48 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9804
  %positive_range33 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %48, i32 0, i32 9, !dbg !9805
  %49 = load double, double* %positive_range33, align 8, !dbg !9805
  %50 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9806
  %negative_range34 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %50, i32 0, i32 8, !dbg !9807
  %51 = load double, double* %negative_range34, align 8, !dbg !9807
  %add35 = fadd double %49, %51, !dbg !9808
  %call36 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i64 0, i64 0), i32 %call32, double %add35), !dbg !9809
  br label %if.end37

if.end37:                                         ; preds = %if.else31, %if.then29
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then22
  store i64 0, i64* %v, align 8, !dbg !9810
  store i64 0, i64* %i, align 8, !dbg !9812
  br label %for.cond39, !dbg !9813

for.cond39:                                       ; preds = %for.inc68, %if.end38
  %52 = load i64, i64* %v, align 8, !dbg !9814
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9816
  %height40 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %53, i32 0, i32 2, !dbg !9817
  %54 = load i64, i64* %height40, align 8, !dbg !9817
  %cmp41 = icmp ult i64 %52, %54, !dbg !9818
  br i1 %cmp41, label %for.body43, label %for.end70, !dbg !9819

for.body43:                                       ; preds = %for.cond39
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9820
  %56 = load i64, i64* %v, align 8, !dbg !9822
  %call44 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i64 %56), !dbg !9823
  store i64 0, i64* %u, align 8, !dbg !9824
  br label %for.cond45, !dbg !9826

for.cond45:                                       ; preds = %for.inc, %for.body43
  %57 = load i64, i64* %u, align 8, !dbg !9827
  %58 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9829
  %width46 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %58, i32 0, i32 1, !dbg !9830
  %59 = load i64, i64* %width46, align 8, !dbg !9830
  %cmp47 = icmp ult i64 %57, %59, !dbg !9831
  br i1 %cmp47, label %for.body49, label %for.end, !dbg !9832

for.body49:                                       ; preds = %for.cond45
  %60 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9833
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %60, i32 0, i32 5, !dbg !9833
  %61 = load double*, double** %values, align 8, !dbg !9833
  %62 = load i64, i64* %i, align 8, !dbg !9833
  %arrayidx = getelementptr inbounds double, double* %61, i64 %62, !dbg !9833
  %63 = load double, double* %arrayidx, align 8, !dbg !9833
  %64 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9833
  %values50 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %64, i32 0, i32 5, !dbg !9833
  %65 = load double*, double** %values50, align 8, !dbg !9833
  %66 = load i64, i64* %i, align 8, !dbg !9833
  %arrayidx51 = getelementptr inbounds double, double* %65, i64 %66, !dbg !9833
  %67 = load double, double* %arrayidx51, align 8, !dbg !9833
  %cmp52 = fcmp une double %63, %67, !dbg !9833
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !9835

cond.true:                                        ; preds = %for.body49
  br i1 true, label %if.then54, label %if.else58, !dbg !9833

cond.false:                                       ; preds = %for.body49
  br i1 false, label %if.then54, label %if.else58, !dbg !9835

if.then54:                                        ; preds = %cond.false, %cond.true
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9836
  %call55 = call i32 @GetMagickPrecision(), !dbg !9837
  %add56 = add nsw i32 %call55, 3, !dbg !9838
  %call57 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i64 0, i64 0), i32 %add56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0)), !dbg !9839
  br label %if.end65, !dbg !9840

if.else58:                                        ; preds = %cond.false, %cond.true
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9841
  %call59 = call i32 @GetMagickPrecision(), !dbg !9842
  %add60 = add nsw i32 %call59, 3, !dbg !9843
  %call61 = call i32 @GetMagickPrecision(), !dbg !9844
  %70 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9845
  %values62 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %70, i32 0, i32 5, !dbg !9846
  %71 = load double*, double** %values62, align 8, !dbg !9846
  %72 = load i64, i64* %i, align 8, !dbg !9847
  %arrayidx63 = getelementptr inbounds double, double* %71, i64 %72, !dbg !9845
  %73 = load double, double* %arrayidx63, align 8, !dbg !9845
  %call64 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i64 0, i64 0), i32 %add60, i32 %call61, double %73), !dbg !9848
  br label %if.end65

if.end65:                                         ; preds = %if.else58, %if.then54
  br label %for.inc, !dbg !9833

for.inc:                                          ; preds = %if.end65
  %74 = load i64, i64* %u, align 8, !dbg !9849
  %inc = add i64 %74, 1, !dbg !9849
  store i64 %inc, i64* %u, align 8, !dbg !9849
  %75 = load i64, i64* %i, align 8, !dbg !9850
  %inc66 = add i64 %75, 1, !dbg !9850
  store i64 %inc66, i64* %i, align 8, !dbg !9850
  br label %for.cond45, !dbg !9851, !llvm.loop !9852

for.end:                                          ; preds = %for.cond45
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9854
  %call67 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !9855
  br label %for.inc68, !dbg !9856

for.inc68:                                        ; preds = %for.end
  %77 = load i64, i64* %v, align 8, !dbg !9857
  %inc69 = add i64 %77, 1, !dbg !9857
  store i64 %inc69, i64* %v, align 8, !dbg !9857
  br label %for.cond39, !dbg !9858, !llvm.loop !9859

for.end70:                                        ; preds = %for.cond39
  br label %for.inc71, !dbg !9861

for.inc71:                                        ; preds = %for.end70
  %78 = load i64, i64* %c, align 8, !dbg !9862
  %inc72 = add i64 %78, 1, !dbg !9862
  store i64 %inc72, i64* %c, align 8, !dbg !9862
  %79 = load %struct.KernelInfo*, %struct.KernelInfo** %k, align 8, !dbg !9863
  %next73 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %79, i32 0, i32 11, !dbg !9864
  %80 = load %struct.KernelInfo*, %struct.KernelInfo** %next73, align 8, !dbg !9864
  store %struct.KernelInfo* %80, %struct.KernelInfo** %k, align 8, !dbg !9865
  br label %for.cond, !dbg !9866, !llvm.loop !9867

for.end74:                                        ; preds = %for.cond
  ret void, !dbg !9869
}

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MorphologyImage(%struct._Image* %image, i32 %method, i64 %iterations, %struct.KernelInfo* %kernel, %struct._ExceptionInfo* %exception) #0 !dbg !9870 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %iterations.addr = alloca i64, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %morphology_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9873, metadata !DIExpression()), !dbg !9874
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !9875, metadata !DIExpression()), !dbg !9876
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9879, metadata !DIExpression()), !dbg !9880
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.declare(metadata %struct._Image** %morphology_image, metadata !9883, metadata !DIExpression()), !dbg !9884
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9885
  %1 = load i32, i32* %method.addr, align 4, !dbg !9886
  %2 = load i64, i64* %iterations.addr, align 8, !dbg !9887
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9888
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9889
  %call = call %struct._Image* @MorphologyImageChannel(%struct._Image* %0, i32 134217719, i32 %1, i64 %2, %struct.KernelInfo* %3, %struct._ExceptionInfo* %4), !dbg !9890
  store %struct._Image* %call, %struct._Image** %morphology_image, align 8, !dbg !9891
  %5 = load %struct._Image*, %struct._Image** %morphology_image, align 8, !dbg !9892
  ret %struct._Image* %5, !dbg !9893
}

declare dso_local void @SetGeometryInfo(%struct._GeometryInfo*) #2

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @UnityAddKernelInfo(%struct.KernelInfo* %kernel, double %scale) #0 !dbg !9894 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %scale.addr = alloca double, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  store double %scale, double* %scale.addr, align 8
  call void @llvm.dbg.declare(metadata double* %scale.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9899
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !9901
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !9901
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !9902
  br i1 %cmp, label %if.then, label %if.end, !dbg !9903

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9904
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !9905
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !9905
  %4 = load double, double* %scale.addr, align 8, !dbg !9906
  call void @UnityAddKernelInfo(%struct.KernelInfo* %3, double %4), !dbg !9907
  br label %if.end, !dbg !9907

if.end:                                           ; preds = %if.then, %entry
  %5 = load double, double* %scale.addr, align 8, !dbg !9908
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9909
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 5, !dbg !9910
  %7 = load double*, double** %values, align 8, !dbg !9910
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9911
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 3, !dbg !9912
  %9 = load i64, i64* %x, align 8, !dbg !9912
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9913
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 4, !dbg !9914
  %11 = load i64, i64* %y, align 8, !dbg !9914
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9915
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 1, !dbg !9916
  %13 = load i64, i64* %width, align 8, !dbg !9916
  %mul = mul i64 %11, %13, !dbg !9917
  %add = add i64 %9, %mul, !dbg !9918
  %arrayidx = getelementptr inbounds double, double* %7, i64 %add, !dbg !9909
  %14 = load double, double* %arrayidx, align 8, !dbg !9919
  %add2 = fadd double %14, %5, !dbg !9919
  store double %add2, double* %arrayidx, align 8, !dbg !9919
  %15 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9920
  call void @CalcKernelMetaData(%struct.KernelInfo* %15), !dbg !9921
  ret void, !dbg !9922
}

declare dso_local i32 @GetMagickPrecision() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ZeroKernelNans(%struct.KernelInfo* %kernel) #0 !dbg !9923 {
entry:
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %i = alloca i64, align 8
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !9924, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9926, metadata !DIExpression()), !dbg !9927
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9928
  %next = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 11, !dbg !9930
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %next, align 8, !dbg !9930
  %cmp = icmp ne %struct.KernelInfo* %1, null, !dbg !9931
  br i1 %cmp, label %if.then, label %if.end, !dbg !9932

if.then:                                          ; preds = %entry
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9933
  %next1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 11, !dbg !9934
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %next1, align 8, !dbg !9934
  call void @ZeroKernelNans(%struct.KernelInfo* %3), !dbg !9935
  br label %if.end, !dbg !9935

if.end:                                           ; preds = %if.then, %entry
  store i64 0, i64* %i, align 8, !dbg !9936
  br label %for.cond, !dbg !9938

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i64, i64* %i, align 8, !dbg !9939
  %5 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9941
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %5, i32 0, i32 1, !dbg !9942
  %6 = load i64, i64* %width, align 8, !dbg !9942
  %7 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9943
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %7, i32 0, i32 2, !dbg !9944
  %8 = load i64, i64* %height, align 8, !dbg !9944
  %mul = mul i64 %6, %8, !dbg !9945
  %cmp2 = icmp ult i64 %4, %mul, !dbg !9946
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9947

for.body:                                         ; preds = %for.cond
  %9 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9948
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %9, i32 0, i32 5, !dbg !9948
  %10 = load double*, double** %values, align 8, !dbg !9948
  %11 = load i64, i64* %i, align 8, !dbg !9948
  %arrayidx = getelementptr inbounds double, double* %10, i64 %11, !dbg !9948
  %12 = load double, double* %arrayidx, align 8, !dbg !9948
  %13 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9948
  %values3 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %13, i32 0, i32 5, !dbg !9948
  %14 = load double*, double** %values3, align 8, !dbg !9948
  %15 = load i64, i64* %i, align 8, !dbg !9948
  %arrayidx4 = getelementptr inbounds double, double* %14, i64 %15, !dbg !9948
  %16 = load double, double* %arrayidx4, align 8, !dbg !9948
  %cmp5 = fcmp une double %12, %16, !dbg !9948
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !9950

cond.true:                                        ; preds = %for.body
  br i1 true, label %if.then6, label %if.end9, !dbg !9948

cond.false:                                       ; preds = %for.body
  br i1 false, label %if.then6, label %if.end9, !dbg !9950

if.then6:                                         ; preds = %cond.false, %cond.true
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !9951
  %values7 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 5, !dbg !9952
  %18 = load double*, double** %values7, align 8, !dbg !9952
  %19 = load i64, i64* %i, align 8, !dbg !9953
  %arrayidx8 = getelementptr inbounds double, double* %18, i64 %19, !dbg !9951
  store double 0.000000e+00, double* %arrayidx8, align 8, !dbg !9954
  br label %if.end9, !dbg !9951

if.end9:                                          ; preds = %if.then6, %cond.false, %cond.true
  br label %for.inc, !dbg !9948

for.inc:                                          ; preds = %if.end9
  %20 = load i64, i64* %i, align 8, !dbg !9955
  %inc = add i64 %20, 1, !dbg !9955
  store i64 %inc, i64* %i, align 8, !dbg !9955
  br label %for.cond, !dbg !9956, !llvm.loop !9957

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9959
}

declare dso_local i32 @LocaleCompare(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !9960 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  %0 = load i8*, i8** %string.addr, align 8, !dbg !9969
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !9970
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !9971
  ret double %call, !dbg !9972
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !9973 {
entry:
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9974, metadata !DIExpression()), !dbg !9975
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  %0 = load double, double* %x.addr, align 8, !dbg !9978
  %1 = load double, double* %y.addr, align 8, !dbg !9979
  %cmp = fcmp olt double %0, %1, !dbg !9980
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9978

cond.true:                                        ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !9981
  br label %cond.end, !dbg !9978

cond.false:                                       ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !9982
  br label %cond.end, !dbg !9978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9978
  ret double %cond, !dbg !9983
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SameKernelInfo(%struct.KernelInfo* %kernel1, %struct.KernelInfo* %kernel2) #0 !dbg !9984 {
entry:
  %retval = alloca i32, align 4
  %kernel1.addr = alloca %struct.KernelInfo*, align 8
  %kernel2.addr = alloca %struct.KernelInfo*, align 8
  %i = alloca i64, align 8
  store %struct.KernelInfo* %kernel1, %struct.KernelInfo** %kernel1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel1.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store %struct.KernelInfo* %kernel2, %struct.KernelInfo** %kernel2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel2.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9991, metadata !DIExpression()), !dbg !9992
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !9993
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %0, i32 0, i32 1, !dbg !9995
  %1 = load i64, i64* %width, align 8, !dbg !9995
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !9996
  %width1 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 1, !dbg !9997
  %3 = load i64, i64* %width1, align 8, !dbg !9997
  %cmp = icmp ne i64 %1, %3, !dbg !9998
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9999

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10000
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %4, i32 0, i32 2, !dbg !10001
  %5 = load i64, i64* %height, align 8, !dbg !10001
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10002
  %height2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 2, !dbg !10003
  %7 = load i64, i64* %height2, align 8, !dbg !10003
  %cmp3 = icmp ne i64 %5, %7, !dbg !10004
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !10005

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10006
  %x = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %8, i32 0, i32 3, !dbg !10007
  %9 = load i64, i64* %x, align 8, !dbg !10007
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10008
  %x5 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 3, !dbg !10009
  %11 = load i64, i64* %x5, align 8, !dbg !10009
  %cmp6 = icmp ne i64 %9, %11, !dbg !10010
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !10011

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10012
  %y = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %12, i32 0, i32 4, !dbg !10013
  %13 = load i64, i64* %y, align 8, !dbg !10013
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10014
  %y8 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %14, i32 0, i32 4, !dbg !10015
  %15 = load i64, i64* %y8, align 8, !dbg !10015
  %cmp9 = icmp ne i64 %13, %15, !dbg !10016
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10017

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10018
  br label %return, !dbg !10018

if.end:                                           ; preds = %lor.lhs.false7
  store i64 0, i64* %i, align 8, !dbg !10019
  br label %for.cond, !dbg !10021

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i64, i64* %i, align 8, !dbg !10022
  %17 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10024
  %width10 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %17, i32 0, i32 1, !dbg !10025
  %18 = load i64, i64* %width10, align 8, !dbg !10025
  %19 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10026
  %height11 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %19, i32 0, i32 2, !dbg !10027
  %20 = load i64, i64* %height11, align 8, !dbg !10027
  %mul = mul i64 %18, %20, !dbg !10028
  %cmp12 = icmp ult i64 %16, %mul, !dbg !10029
  br i1 %cmp12, label %for.body, label %for.end, !dbg !10030

for.body:                                         ; preds = %for.cond
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10031
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 5, !dbg !10031
  %22 = load double*, double** %values, align 8, !dbg !10031
  %23 = load i64, i64* %i, align 8, !dbg !10031
  %arrayidx = getelementptr inbounds double, double* %22, i64 %23, !dbg !10031
  %24 = load double, double* %arrayidx, align 8, !dbg !10031
  %25 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10031
  %values13 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %25, i32 0, i32 5, !dbg !10031
  %26 = load double*, double** %values13, align 8, !dbg !10031
  %27 = load i64, i64* %i, align 8, !dbg !10031
  %arrayidx14 = getelementptr inbounds double, double* %26, i64 %27, !dbg !10031
  %28 = load double, double* %arrayidx14, align 8, !dbg !10031
  %cmp15 = fcmp une double %24, %28, !dbg !10031
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !10034

cond.true:                                        ; preds = %for.body
  br i1 true, label %land.lhs.true, label %if.end24, !dbg !10031

cond.false:                                       ; preds = %for.body
  br i1 false, label %land.lhs.true, label %if.end24, !dbg !10034

land.lhs.true:                                    ; preds = %cond.false, %cond.true
  %29 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10035
  %values16 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %29, i32 0, i32 5, !dbg !10035
  %30 = load double*, double** %values16, align 8, !dbg !10035
  %31 = load i64, i64* %i, align 8, !dbg !10035
  %arrayidx17 = getelementptr inbounds double, double* %30, i64 %31, !dbg !10035
  %32 = load double, double* %arrayidx17, align 8, !dbg !10035
  %33 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10035
  %values18 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %33, i32 0, i32 5, !dbg !10035
  %34 = load double*, double** %values18, align 8, !dbg !10035
  %35 = load i64, i64* %i, align 8, !dbg !10035
  %arrayidx19 = getelementptr inbounds double, double* %34, i64 %35, !dbg !10035
  %36 = load double, double* %arrayidx19, align 8, !dbg !10035
  %cmp20 = fcmp une double %32, %36, !dbg !10035
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !10036

cond.true21:                                      ; preds = %land.lhs.true
  br i1 true, label %if.end24, label %if.then23, !dbg !10035

cond.false22:                                     ; preds = %land.lhs.true
  br i1 false, label %if.end24, label %if.then23, !dbg !10036

if.then23:                                        ; preds = %cond.false22, %cond.true21
  store i32 0, i32* %retval, align 4, !dbg !10037
  br label %return, !dbg !10037

if.end24:                                         ; preds = %cond.false22, %cond.true21, %cond.false, %cond.true
  %37 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10038
  %values25 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %37, i32 0, i32 5, !dbg !10038
  %38 = load double*, double** %values25, align 8, !dbg !10038
  %39 = load i64, i64* %i, align 8, !dbg !10038
  %arrayidx26 = getelementptr inbounds double, double* %38, i64 %39, !dbg !10038
  %40 = load double, double* %arrayidx26, align 8, !dbg !10038
  %41 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10038
  %values27 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %41, i32 0, i32 5, !dbg !10038
  %42 = load double*, double** %values27, align 8, !dbg !10038
  %43 = load i64, i64* %i, align 8, !dbg !10038
  %arrayidx28 = getelementptr inbounds double, double* %42, i64 %43, !dbg !10038
  %44 = load double, double* %arrayidx28, align 8, !dbg !10038
  %cmp29 = fcmp une double %40, %44, !dbg !10038
  br i1 %cmp29, label %cond.true30, label %cond.false31, !dbg !10040

cond.true30:                                      ; preds = %if.end24
  br i1 true, label %land.lhs.true32, label %if.end41, !dbg !10038

cond.false31:                                     ; preds = %if.end24
  br i1 false, label %land.lhs.true32, label %if.end41, !dbg !10040

land.lhs.true32:                                  ; preds = %cond.false31, %cond.true30
  %45 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10041
  %values33 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %45, i32 0, i32 5, !dbg !10041
  %46 = load double*, double** %values33, align 8, !dbg !10041
  %47 = load i64, i64* %i, align 8, !dbg !10041
  %arrayidx34 = getelementptr inbounds double, double* %46, i64 %47, !dbg !10041
  %48 = load double, double* %arrayidx34, align 8, !dbg !10041
  %49 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10041
  %values35 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %49, i32 0, i32 5, !dbg !10041
  %50 = load double*, double** %values35, align 8, !dbg !10041
  %51 = load i64, i64* %i, align 8, !dbg !10041
  %arrayidx36 = getelementptr inbounds double, double* %50, i64 %51, !dbg !10041
  %52 = load double, double* %arrayidx36, align 8, !dbg !10041
  %cmp37 = fcmp une double %48, %52, !dbg !10041
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !10042

cond.true38:                                      ; preds = %land.lhs.true32
  br i1 true, label %if.end41, label %if.then40, !dbg !10041

cond.false39:                                     ; preds = %land.lhs.true32
  br i1 false, label %if.end41, label %if.then40, !dbg !10042

if.then40:                                        ; preds = %cond.false39, %cond.true38
  store i32 0, i32* %retval, align 4, !dbg !10043
  br label %return, !dbg !10043

if.end41:                                         ; preds = %cond.false39, %cond.true38, %cond.false31, %cond.true30
  %53 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel1.addr, align 8, !dbg !10044
  %values42 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %53, i32 0, i32 5, !dbg !10046
  %54 = load double*, double** %values42, align 8, !dbg !10046
  %55 = load i64, i64* %i, align 8, !dbg !10047
  %arrayidx43 = getelementptr inbounds double, double* %54, i64 %55, !dbg !10044
  %56 = load double, double* %arrayidx43, align 8, !dbg !10044
  %57 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel2.addr, align 8, !dbg !10048
  %values44 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %57, i32 0, i32 5, !dbg !10049
  %58 = load double*, double** %values44, align 8, !dbg !10049
  %59 = load i64, i64* %i, align 8, !dbg !10050
  %arrayidx45 = getelementptr inbounds double, double* %58, i64 %59, !dbg !10048
  %60 = load double, double* %arrayidx45, align 8, !dbg !10048
  %sub = fsub double %56, %60, !dbg !10051
  %61 = call double @llvm.fabs.f64(double %sub), !dbg !10052
  %cmp46 = fcmp oge double %61, 1.000000e-15, !dbg !10053
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !10054

if.then47:                                        ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !10055
  br label %return, !dbg !10055

if.end48:                                         ; preds = %if.end41
  br label %for.inc, !dbg !10056

for.inc:                                          ; preds = %if.end48
  %62 = load i64, i64* %i, align 8, !dbg !10057
  %inc = add i64 %62, 1, !dbg !10057
  store i64 %inc, i64* %i, align 8, !dbg !10057
  br label %for.cond, !dbg !10058, !llvm.loop !10059

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !10061
  br label %return, !dbg !10061

return:                                           ; preds = %for.end, %if.then47, %if.then40, %if.then23, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !10062
  ret i32 %63, !dbg !10062
}

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !10063 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10068, metadata !DIExpression()), !dbg !10069
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !10070, metadata !DIExpression()), !dbg !10071
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10076
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !10076
  %1 = load i16, i16* %red, align 2, !dbg !10076
  %conv = uitofp i16 %1 to float, !dbg !10077
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10078
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !10079
  store float %conv, float* %red1, align 8, !dbg !10080
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10081
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !10081
  %4 = load i16, i16* %green, align 2, !dbg !10081
  %conv2 = uitofp i16 %4 to float, !dbg !10082
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10083
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !10084
  store float %conv2, float* %green3, align 4, !dbg !10085
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10086
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !10086
  %7 = load i16, i16* %blue, align 2, !dbg !10086
  %conv4 = uitofp i16 %7 to float, !dbg !10087
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10088
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !10089
  store float %conv4, float* %blue5, align 8, !dbg !10090
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10091
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !10091
  %10 = load i16, i16* %opacity, align 2, !dbg !10091
  %conv6 = uitofp i16 %10 to float, !dbg !10092
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10093
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !10094
  store float %conv6, float* %opacity7, align 4, !dbg !10095
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10096
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !10098
  %13 = load i32, i32* %colorspace, align 4, !dbg !10098
  %cmp = icmp eq i32 %13, 12, !dbg !10099
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10100

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !10101
  %cmp9 = icmp ne i16* %14, null, !dbg !10102
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10103

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !10104
  %cmp11 = icmp eq i16* %15, null, !dbg !10104
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !10104

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !10104

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !10104
  %17 = load i16, i16* %16, align 2, !dbg !10104
  %conv13 = zext i16 %17 to i32, !dbg !10104
  br label %cond.end, !dbg !10104

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !10104
  %conv14 = sitofp i32 %cond to float, !dbg !10105
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10106
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !10107
  store float %conv14, float* %index15, align 8, !dbg !10108
  br label %if.end, !dbg !10106

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !10109
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !10110 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10115, metadata !DIExpression()), !dbg !10116
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !10119, metadata !DIExpression()), !dbg !10120
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !10121, metadata !DIExpression()), !dbg !10122
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10123
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !10123
  %1 = load float, float* %red, align 8, !dbg !10123
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !10123
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10123
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !10123
  store i16 %call, i16* %red1, align 2, !dbg !10123
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10124
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !10124
  %4 = load float, float* %green, align 4, !dbg !10124
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !10124
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10124
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !10124
  store i16 %call2, i16* %green3, align 2, !dbg !10124
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10125
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !10125
  %7 = load float, float* %blue, align 8, !dbg !10125
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !10125
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10125
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !10125
  store i16 %call4, i16* %blue5, align 2, !dbg !10125
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10126
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !10126
  %10 = load float, float* %opacity, align 4, !dbg !10126
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !10126
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !10126
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !10126
  store i16 %call6, i16* %opacity7, align 2, !dbg !10126
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10127
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !10129
  %13 = load i32, i32* %colorspace, align 4, !dbg !10129
  %cmp = icmp eq i32 %13, 12, !dbg !10130
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10131

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10132
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !10133
  %15 = load i32, i32* %storage_class, align 8, !dbg !10133
  %cmp8 = icmp eq i32 %15, 2, !dbg !10134
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !10135

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !10136
  %cmp9 = icmp ne i16* %16, null, !dbg !10136
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !10139

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10136
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !10136
  %18 = load float, float* %index11, align 8, !dbg !10136
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !10136
  %19 = load i16*, i16** %index.addr, align 8, !dbg !10136
  store i16 %call12, i16* %19, align 2, !dbg !10136
  br label %if.end, !dbg !10136

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !10139

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !10140
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !10141 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !10145, metadata !DIExpression()), !dbg !10146
  %0 = load float, float* %value.addr, align 4, !dbg !10147
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !10149
  br i1 %cmp, label %if.then, label %if.end, !dbg !10150

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !10151
  br label %return, !dbg !10151

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !10152
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !10154
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10155

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !10156
  br label %return, !dbg !10156

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !10157
  %add = fadd float %2, 5.000000e-01, !dbg !10158
  %conv = fptoui float %add to i16, !dbg !10159
  store i16 %conv, i16* %retval, align 2, !dbg !10160
  br label %return, !dbg !10160

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !10161
  ret i16 %3, !dbg !10161
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !10162 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !10174, metadata !DIExpression()), !dbg !10175
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10176
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !10178
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !10178
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !10179
  br i1 %cmp, label %if.then, label %if.end, !dbg !10180

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10181
  br label %return, !dbg !10181

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !10182
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !10183
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10184
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !10185
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !10184
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !10186
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10187
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !10188
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !10188
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !10189
  %6 = load i64, i64* %offset.addr, align 8, !dbg !10190
  %7 = load i64, i64* %extent.addr, align 8, !dbg !10191
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10192
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !10193
  %9 = load i8*, i8** %client_data, align 8, !dbg !10193
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !10187
  store i32 %call4, i32* %retval, align 4, !dbg !10194
  br label %return, !dbg !10194

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10195
  ret i32 %10, !dbg !10195
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #7

; Function Attrs: noinline nounwind uwtable
define internal i64 @GetOpenMPMaximumThreads() #0 !dbg !10196 {
entry:
  ret i64 1, !dbg !10200
}

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local i8* @GetExceptionMessage(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #3

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

declare dso_local i8* @DestroyString(i8*) #2

declare dso_local void @CatchException(%struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @MagickCoreTerminus() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !10201 {
entry:
  ret i32 0, !dbg !10204
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !10205 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.declare(metadata double* %sign, metadata !10210, metadata !DIExpression()), !dbg !10211
  %0 = load double, double* %x.addr, align 8, !dbg !10212
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !10213
  %1 = zext i1 %cmp to i64, !dbg !10212
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !10212
  store double %cond, double* %sign, align 8, !dbg !10214
  %2 = load double, double* %sign, align 8, !dbg !10215
  %3 = load double, double* %x.addr, align 8, !dbg !10217
  %mul = fmul double %2, %3, !dbg !10218
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !10219
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10220

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !10221
  %div = fdiv double 1.000000e+00, %4, !dbg !10222
  store double %div, double* %retval, align 8, !dbg !10223
  br label %return, !dbg !10223

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !10224
  %div2 = fdiv double %5, 1.000000e-15, !dbg !10225
  store double %div2, double* %retval, align 8, !dbg !10226
  br label %return, !dbg !10226

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !10227
  ret double %6, !dbg !10227
}

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #2

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #5

declare dso_local void @perror(i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { allocsize(0) }
attributes #14 = { allocsize(0,1) }
attributes #15 = { noreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!844, !845, !846}
!llvm.ident = !{!847}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !590, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/morphology.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !45, !60, !89, !95, !132, !157, !169, !173, !181, !186, !221, !231, !237, !251, !322, !330, !336, !409, !426, !440, !452, !474, !499, !575}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 27, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/morphology.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44}
!7 = !DIEnumerator(name: "UndefinedKernel", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "UnityKernel", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "GaussianKernel", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "DoGKernel", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "LoGKernel", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "BlurKernel", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "CometKernel", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "LaplacianKernel", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "SobelKernel", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "FreiChenKernel", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "RobertsKernel", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "PrewittKernel", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "CompassKernel", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "KirschKernel", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "DiamondKernel", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "SquareKernel", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "RectangleKernel", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "OctagonKernel", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "DiskKernel", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "PlusKernel", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "CrossKernel", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "RingKernel", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "PeaksKernel", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "EdgesKernel", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "CornersKernel", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "DiagonalsKernel", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "LineEndsKernel", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "LineJunctionsKernel", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "RidgesKernel", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "ConvexHullKernel", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "ThinSEKernel", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "SkeletonKernel", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "ChebyshevKernel", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "ManhattanKernel", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "OctagonalKernel", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "EuclideanKernel", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "UserDefinedKernel", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "BinomialKernel", value: 37, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !46, line: 46, baseType: !5, size: 32, elements: !47)
!46 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59}
!48 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!49 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!50 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!51 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!52 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!53 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!54 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!55 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!56 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 25, baseType: !5, size: 32, elements: !62)
!61 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88}
!63 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!69 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!71 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!72 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!73 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!74 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!75 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!76 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!77 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!78 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!79 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!80 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!81 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!82 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!83 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!84 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!85 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!86 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!87 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!88 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 204, baseType: !5, size: 32, elements: !91)
!90 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 25, baseType: !5, size: 32, elements: !97)
!96 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!98 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!129 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!130 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!131 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !133, line: 25, baseType: !5, size: 32, elements: !134)
!133 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!135 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!141 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!142 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!143 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!145 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!146 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!147 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!148 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!149 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!150 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!151 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!152 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!153 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!154 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!155 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!156 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !5, size: 32, elements: !159)
!158 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168}
!160 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 211, baseType: !5, size: 32, elements: !170)
!170 = !{!171, !172}
!171 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !174, line: 42, baseType: !5, size: 32, elements: !175)
!174 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!175 = !{!176, !177, !178, !179, !180}
!176 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 88, baseType: !5, size: 32, elements: !182)
!182 = !{!183, !184, !185}
!183 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !187, line: 32, baseType: !5, size: 32, elements: !188)
!187 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!188 = !{!189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!189 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!190 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!192 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!193 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!194 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!195 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!196 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!197 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!198 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!199 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!200 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!201 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!202 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!203 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!204 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!205 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!206 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!207 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!208 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!209 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!210 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!211 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!212 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!213 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!214 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!215 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!216 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!217 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!218 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!219 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!220 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 63, baseType: !5, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228, !229, !230}
!223 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!224 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!225 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!226 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!227 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!228 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!229 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!230 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !232, line: 30, baseType: !5, size: 32, elements: !233)
!232 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!233 = !{!234, !235, !236}
!234 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 77, baseType: !5, size: 32, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250}
!239 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!241 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!242 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!243 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!244 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!245 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!246 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!247 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!248 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!249 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!250 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !252, line: 25, baseType: !5, size: 32, elements: !253)
!252 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!253 = !{!254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321}
!254 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!255 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!256 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!257 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!258 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!259 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!260 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!261 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!262 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!263 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!264 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!265 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!266 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!267 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!268 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!269 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!270 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!271 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!272 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!273 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!274 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!275 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!276 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!277 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!278 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!279 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!280 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!281 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!282 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!283 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!284 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!285 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!286 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!287 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!288 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!289 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!290 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!291 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!292 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!293 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!294 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!295 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!296 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!297 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!298 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!299 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!300 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!301 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!302 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!303 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!304 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!305 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!306 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!307 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!308 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!309 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!310 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!311 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!312 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!313 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!314 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!315 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!316 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!317 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!318 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!319 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!320 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!321 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!322 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !323, line: 25, baseType: !5, size: 32, elements: !324)
!323 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!324 = !{!325, !326, !327, !328, !329}
!325 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!327 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!328 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!329 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!330 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !331, line: 25, baseType: !5, size: 32, elements: !332)
!331 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!332 = !{!333, !334, !335}
!333 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!334 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!335 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !337, line: 28, baseType: !5, size: 32, elements: !338)
!337 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!338 = !{!339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408}
!339 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!341 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!342 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!343 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!344 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!345 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!346 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!347 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!348 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!349 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!350 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!351 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!352 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!353 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!354 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!355 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!356 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!357 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!358 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!359 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!360 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!361 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!362 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!363 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!364 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!365 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!366 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!367 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!368 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!369 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!370 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!371 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!372 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!373 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!374 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!375 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!376 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!377 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!378 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!379 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!380 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!381 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!382 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!383 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!384 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!385 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!386 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!387 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!388 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!389 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!390 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!391 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!392 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!393 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!394 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!395 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!396 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!397 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!398 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!399 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!400 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!401 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!402 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!403 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!404 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!405 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!406 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!407 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!408 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !410, line: 31, baseType: !5, size: 32, elements: !411)
!410 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!411 = !{!412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425}
!412 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!413 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!414 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!415 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!416 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!417 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!418 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!419 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!420 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!421 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!422 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!423 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!424 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!425 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!426 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 47, baseType: !5, size: 32, elements: !427)
!427 = !{!428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!428 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!429 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!430 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!431 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!432 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!433 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!434 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!435 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!436 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!437 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!438 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!439 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !410, line: 67, baseType: !5, size: 32, elements: !441)
!441 = !{!442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!442 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!443 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!444 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!445 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!446 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!447 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!448 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!449 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!450 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!451 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!452 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 177, baseType: !5, size: 32, elements: !453)
!453 = !{!454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473}
!454 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!455 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!456 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!457 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!458 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!459 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!460 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!461 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!462 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!463 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!464 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!465 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!466 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!467 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!468 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!469 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!470 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!471 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!472 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!473 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!474 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 69, baseType: !5, size: 32, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498}
!476 = !DIEnumerator(name: "UndefinedMorphology", value: 0, isUnsigned: true)
!477 = !DIEnumerator(name: "ConvolveMorphology", value: 1, isUnsigned: true)
!478 = !DIEnumerator(name: "CorrelateMorphology", value: 2, isUnsigned: true)
!479 = !DIEnumerator(name: "ErodeMorphology", value: 3, isUnsigned: true)
!480 = !DIEnumerator(name: "DilateMorphology", value: 4, isUnsigned: true)
!481 = !DIEnumerator(name: "ErodeIntensityMorphology", value: 5, isUnsigned: true)
!482 = !DIEnumerator(name: "DilateIntensityMorphology", value: 6, isUnsigned: true)
!483 = !DIEnumerator(name: "DistanceMorphology", value: 7, isUnsigned: true)
!484 = !DIEnumerator(name: "OpenMorphology", value: 8, isUnsigned: true)
!485 = !DIEnumerator(name: "CloseMorphology", value: 9, isUnsigned: true)
!486 = !DIEnumerator(name: "OpenIntensityMorphology", value: 10, isUnsigned: true)
!487 = !DIEnumerator(name: "CloseIntensityMorphology", value: 11, isUnsigned: true)
!488 = !DIEnumerator(name: "SmoothMorphology", value: 12, isUnsigned: true)
!489 = !DIEnumerator(name: "EdgeInMorphology", value: 13, isUnsigned: true)
!490 = !DIEnumerator(name: "EdgeOutMorphology", value: 14, isUnsigned: true)
!491 = !DIEnumerator(name: "EdgeMorphology", value: 15, isUnsigned: true)
!492 = !DIEnumerator(name: "TopHatMorphology", value: 16, isUnsigned: true)
!493 = !DIEnumerator(name: "BottomHatMorphology", value: 17, isUnsigned: true)
!494 = !DIEnumerator(name: "HitAndMissMorphology", value: 18, isUnsigned: true)
!495 = !DIEnumerator(name: "ThinningMorphology", value: 19, isUnsigned: true)
!496 = !DIEnumerator(name: "ThickenMorphology", value: 20, isUnsigned: true)
!497 = !DIEnumerator(name: "VoronoiMorphology", value: 21, isUnsigned: true)
!498 = !DIEnumerator(name: "IterativeDistanceMorphology", value: 22, isUnsigned: true)
!499 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !500, line: 25, baseType: !501, size: 32, elements: !502)
!500 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!501 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574}
!503 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!504 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!505 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!506 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!507 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!508 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!509 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!510 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!511 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!512 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!513 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!514 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!515 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!516 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!517 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!518 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!519 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!520 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!521 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!522 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!523 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!524 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!525 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!526 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!527 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!528 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!529 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!530 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!531 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!532 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!533 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!534 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!535 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!536 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!537 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!538 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!539 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!540 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!541 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!542 = !DIEnumerator(name: "MagickListOptions", value: 38)
!543 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!544 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!545 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!546 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!547 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!548 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!549 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!550 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!551 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!552 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!553 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!554 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!555 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!556 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!557 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!558 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!559 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!560 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!561 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!562 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!563 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!564 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!565 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!566 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!567 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!568 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!569 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!570 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!571 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!572 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!573 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!574 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!575 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 30, baseType: !5, size: 32, elements: !576)
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589}
!577 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!578 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!579 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!580 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!581 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!582 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!583 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!584 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!585 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!586 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!587 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!588 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!589 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!590 = !{!591, !594, !501, !595, !596, !597, !626, !617, !604, !609, !616, !613, !627, !832, !653, !708, !833, !606, !834, !602, !835, !648, !837, !840, !839, !743, !841, !843}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!593 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!595 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!596 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfo", file: !4, line: 128, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KernelInfo", file: !4, line: 102, size: 832, elements: !600)
!600 = !{!601, !603, !607, !608, !614, !615, !618, !619, !620, !621, !622, !623, !625}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !599, file: !4, line: 105, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfoType", file: !4, line: 67, baseType: !3)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !599, file: !4, line: 108, baseType: !604, size: 64, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !605, line: 46, baseType: !606)
!605 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!606 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !599, file: !4, line: 109, baseType: !604, size: 64, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !599, file: !4, line: 112, baseType: !609, size: 64, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !610, line: 77, baseType: !611)
!610 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !612, line: 193, baseType: !613)
!612 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!613 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !599, file: !4, line: 113, baseType: !609, size: 64, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !599, file: !4, line: 116, baseType: !616, size: 64, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !599, file: !4, line: 117, baseType: !617, size: 64, offset: 384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !599, file: !4, line: 118, baseType: !617, size: 64, offset: 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "negative_range", scope: !599, file: !4, line: 119, baseType: !617, size: 64, offset: 512)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "positive_range", scope: !599, file: !4, line: 120, baseType: !617, size: 64, offset: 576)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !599, file: !4, line: 121, baseType: !617, size: 64, offset: 640)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !4, line: 124, baseType: !624, size: 64, offset: 704)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !599, file: !4, line: 127, baseType: !604, size: 64, offset: 768)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !90, line: 221, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !158, line: 150, size: 105920, elements: !630)
!630 = !{!631, !633, !635, !637, !638, !640, !642, !643, !644, !645, !646, !647, !657, !658, !659, !660, !661, !675, !677, !678, !680, !681, !682, !683, !684, !685, !686, !694, !695, !696, !697, !698, !699, !701, !703, !705, !707, !709, !711, !713, !714, !715, !716, !717, !718, !719, !727, !742, !754, !755, !756, !757, !761, !765, !769, !770, !771, !772, !773, !790, !791, !793, !794, !803, !804, !806, !807, !808, !809, !810, !811, !813, !814, !815, !816, !817, !818, !819, !821, !822, !823, !824, !825, !829, !831}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !629, file: !158, line: 153, baseType: !632, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !90, line: 209, baseType: !89)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !629, file: !158, line: 156, baseType: !634, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !96, line: 61, baseType: !95)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !629, file: !158, line: 159, baseType: !636, size: 32, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !133, line: 49, baseType: !132)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !629, file: !158, line: 162, baseType: !604, size: 64, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !629, file: !158, line: 165, baseType: !639, size: 32, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !158, line: 86, baseType: !157)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !629, file: !158, line: 168, baseType: !641, size: 32, offset: 224)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !90, line: 215, baseType: !169)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !629, file: !158, line: 169, baseType: !641, size: 32, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !629, file: !158, line: 172, baseType: !604, size: 64, offset: 320)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !629, file: !158, line: 173, baseType: !604, size: 64, offset: 384)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !629, file: !158, line: 174, baseType: !604, size: 64, offset: 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !629, file: !158, line: 175, baseType: !604, size: 64, offset: 512)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !629, file: !158, line: 178, baseType: !648, size: 64, offset: 576)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !410, line: 148, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !410, line: 131, size: 64, elements: !651)
!651 = !{!652, !654, !655, !656}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !650, file: !410, line: 143, baseType: !653, size: 16)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !90, line: 93, baseType: !596)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !650, file: !410, line: 144, baseType: !653, size: 16, offset: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !650, file: !410, line: 145, baseType: !653, size: 16, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !650, file: !410, line: 146, baseType: !653, size: 16, offset: 48)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !629, file: !158, line: 179, baseType: !649, size: 64, offset: 640)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !629, file: !158, line: 180, baseType: !649, size: 64, offset: 704)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !629, file: !158, line: 181, baseType: !649, size: 64, offset: 768)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !629, file: !158, line: 184, baseType: !617, size: 64, offset: 832)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !629, file: !158, line: 187, baseType: !662, size: 768, offset: 896)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !158, line: 128, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !158, line: 121, size: 768, elements: !664)
!664 = !{!665, !672, !673, !674}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !663, file: !158, line: 124, baseType: !666, size: 192)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !158, line: 101, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !158, line: 95, size: 192, elements: !668)
!668 = !{!669, !670, !671}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !667, file: !158, line: 98, baseType: !617, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !667, file: !158, line: 99, baseType: !617, size: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !667, file: !158, line: 100, baseType: !617, size: 64, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !663, file: !158, line: 125, baseType: !666, size: 192, offset: 192)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !663, file: !158, line: 126, baseType: !666, size: 192, offset: 384)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !663, file: !158, line: 127, baseType: !666, size: 192, offset: 576)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !629, file: !158, line: 190, baseType: !676, size: 32, offset: 1664)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !174, line: 49, baseType: !173)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !629, file: !158, line: 193, baseType: !594, size: 64, offset: 1728)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !629, file: !158, line: 196, baseType: !679, size: 32, offset: 1792)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !158, line: 93, baseType: !181)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !629, file: !158, line: 199, baseType: !626, size: 64, offset: 1856)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !629, file: !158, line: 200, baseType: !626, size: 64, offset: 1920)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !629, file: !158, line: 201, baseType: !626, size: 64, offset: 1984)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !629, file: !158, line: 204, baseType: !609, size: 64, offset: 2048)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !629, file: !158, line: 207, baseType: !617, size: 64, offset: 2112)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !629, file: !158, line: 208, baseType: !617, size: 64, offset: 2176)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !629, file: !158, line: 211, baseType: !687, size: 256, offset: 2240)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !61, line: 130, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !61, line: 121, size: 256, elements: !689)
!689 = !{!690, !691, !692, !693}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !688, file: !61, line: 124, baseType: !604, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !688, file: !61, line: 125, baseType: !604, size: 64, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !688, file: !61, line: 128, baseType: !609, size: 64, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !688, file: !61, line: 129, baseType: !609, size: 64, offset: 192)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !629, file: !158, line: 212, baseType: !687, size: 256, offset: 2496)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !629, file: !158, line: 213, baseType: !687, size: 256, offset: 2752)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !629, file: !158, line: 216, baseType: !617, size: 64, offset: 3008)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !629, file: !158, line: 217, baseType: !617, size: 64, offset: 3072)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !629, file: !158, line: 218, baseType: !617, size: 64, offset: 3136)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !629, file: !158, line: 221, baseType: !700, size: 32, offset: 3200)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !187, line: 66, baseType: !186)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !629, file: !158, line: 224, baseType: !702, size: 32, offset: 3232)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !158, line: 73, baseType: !221)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !629, file: !158, line: 227, baseType: !704, size: 32, offset: 3264)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !232, line: 35, baseType: !231)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !629, file: !158, line: 230, baseType: !706, size: 32, offset: 3296)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !61, line: 91, baseType: !237)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !629, file: !158, line: 233, baseType: !708, size: 32, offset: 3328)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !252, line: 99, baseType: !251)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !629, file: !158, line: 236, baseType: !710, size: 32, offset: 3360)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !323, line: 32, baseType: !322)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !629, file: !158, line: 239, baseType: !712, size: 64, offset: 3392)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !629, file: !158, line: 242, baseType: !604, size: 64, offset: 3456)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !629, file: !158, line: 243, baseType: !604, size: 64, offset: 3520)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !629, file: !158, line: 246, baseType: !609, size: 64, offset: 3584)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !629, file: !158, line: 249, baseType: !604, size: 64, offset: 3648)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !629, file: !158, line: 250, baseType: !604, size: 64, offset: 3712)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !629, file: !158, line: 253, baseType: !609, size: 64, offset: 3776)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !629, file: !158, line: 256, baseType: !720, size: 192, offset: 3840)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !721, line: 68, baseType: !722)
!721 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !721, line: 62, size: 192, elements: !723)
!723 = !{!724, !725, !726}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !722, file: !721, line: 65, baseType: !617, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !722, file: !721, line: 66, baseType: !617, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !722, file: !721, line: 67, baseType: !617, size: 64, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !629, file: !158, line: 259, baseType: !728, size: 512, offset: 4032)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !331, line: 51, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !331, line: 40, size: 512, elements: !730)
!730 = !{!731, !738, !739, !741}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !729, file: !331, line: 43, baseType: !732, size: 192)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !331, line: 38, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !331, line: 32, size: 192, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !733, file: !331, line: 35, baseType: !617, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !733, file: !331, line: 36, baseType: !617, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !733, file: !331, line: 37, baseType: !617, size: 64, offset: 128)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !729, file: !331, line: 44, baseType: !732, size: 192, offset: 192)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !729, file: !331, line: 47, baseType: !740, size: 32, offset: 384)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !331, line: 30, baseType: !330)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !729, file: !331, line: 50, baseType: !604, size: 64, offset: 448)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !629, file: !158, line: 262, baseType: !743, size: 64, offset: 4544)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !744, line: 26, baseType: !745)
!744 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!641, !591, !748, !751, !594}
!748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !90, line: 150, baseType: !750)
!750 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !90, line: 151, baseType: !753)
!753 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !629, file: !158, line: 265, baseType: !594, size: 64, offset: 4608)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !629, file: !158, line: 266, baseType: !594, size: 64, offset: 4672)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !629, file: !158, line: 267, baseType: !594, size: 64, offset: 4736)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !629, file: !158, line: 270, baseType: !758, size: 64, offset: 4800)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !133, line: 52, baseType: !760)
!760 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !133, line: 51, flags: DIFlagFwdDecl)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !629, file: !158, line: 273, baseType: !762, size: 64, offset: 4864)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !90, line: 217, baseType: !764)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !90, line: 217, flags: DIFlagFwdDecl)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !629, file: !158, line: 276, baseType: !766, size: 32768, offset: 4928)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 32768, elements: !767)
!767 = !{!768}
!768 = !DISubrange(count: 4096)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !629, file: !158, line: 277, baseType: !766, size: 32768, offset: 37696)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !629, file: !158, line: 278, baseType: !766, size: 32768, offset: 70464)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !629, file: !158, line: 281, baseType: !604, size: 64, offset: 103232)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !629, file: !158, line: 282, baseType: !604, size: 64, offset: 103296)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !629, file: !158, line: 285, baseType: !774, size: 448, offset: 103360)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !90, line: 219, baseType: !775)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !337, line: 102, size: 448, elements: !776)
!776 = !{!777, !779, !780, !781, !782, !783, !784, !789}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !775, file: !337, line: 105, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !337, line: 100, baseType: !336)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !775, file: !337, line: 108, baseType: !501, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !775, file: !337, line: 111, baseType: !626, size: 64, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !775, file: !337, line: 112, baseType: !626, size: 64, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !775, file: !337, line: 115, baseType: !594, size: 64, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !775, file: !337, line: 118, baseType: !641, size: 32, offset: 256)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !775, file: !337, line: 121, baseType: !785, size: 64, offset: 320)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !787, line: 26, baseType: !788)
!787 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !787, line: 25, flags: DIFlagFwdDecl)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !775, file: !337, line: 124, baseType: !604, size: 64, offset: 384)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !629, file: !158, line: 288, baseType: !641, size: 32, offset: 103808)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !629, file: !158, line: 291, baseType: !792, size: 64, offset: 103872)
!792 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !609)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !629, file: !158, line: 294, baseType: !785, size: 64, offset: 103936)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !629, file: !158, line: 297, baseType: !795, size: 256, offset: 104000)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !174, line: 40, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !174, line: 27, size: 256, elements: !797)
!797 = !{!798, !799, !800, !802}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !796, file: !174, line: 30, baseType: !626, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !796, file: !174, line: 33, baseType: !604, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !796, file: !174, line: 36, baseType: !801, size: 64, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !796, file: !174, line: 39, baseType: !604, size: 64, offset: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !629, file: !158, line: 298, baseType: !795, size: 256, offset: 104256)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !629, file: !158, line: 299, baseType: !805, size: 64, offset: 104512)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !629, file: !158, line: 302, baseType: !604, size: 64, offset: 104576)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !629, file: !158, line: 305, baseType: !604, size: 64, offset: 104640)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !629, file: !158, line: 308, baseType: !712, size: 64, offset: 104704)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !629, file: !158, line: 309, baseType: !712, size: 64, offset: 104768)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !629, file: !158, line: 310, baseType: !712, size: 64, offset: 104832)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !629, file: !158, line: 313, baseType: !812, size: 32, offset: 104896)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !410, line: 47, baseType: !409)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !629, file: !158, line: 316, baseType: !641, size: 32, offset: 104928)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !629, file: !158, line: 319, baseType: !649, size: 64, offset: 104960)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !629, file: !158, line: 322, baseType: !712, size: 64, offset: 105024)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !629, file: !158, line: 325, baseType: !687, size: 256, offset: 105088)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !629, file: !158, line: 328, baseType: !594, size: 64, offset: 105344)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !629, file: !158, line: 329, baseType: !594, size: 64, offset: 105408)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !629, file: !158, line: 332, baseType: !820, size: 32, offset: 105472)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !158, line: 61, baseType: !426)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !629, file: !158, line: 335, baseType: !641, size: 32, offset: 105504)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !629, file: !158, line: 338, baseType: !752, size: 64, offset: 105536)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !629, file: !158, line: 341, baseType: !641, size: 32, offset: 105600)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !629, file: !158, line: 344, baseType: !604, size: 64, offset: 105664)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !629, file: !158, line: 347, baseType: !826, size: 64, offset: 105728)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !827, line: 7, baseType: !828)
!827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !612, line: 160, baseType: !613)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !629, file: !158, line: 350, baseType: !830, size: 32, offset: 105792)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !410, line: 79, baseType: !440)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !629, file: !158, line: 353, baseType: !604, size: 64, offset: 105856)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !90, line: 202, baseType: !452)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryFlags", file: !61, line: 61, baseType: !60)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !649)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !410, line: 129, baseType: !653)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !90, line: 78, baseType: !842)
!842 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!844 = !{i32 7, !"Dwarf Version", i32 4}
!845 = !{i32 2, !"Debug Info Version", i32 3}
!846 = !{i32 1, !"wchar_size", i32 4}
!847 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!848 = distinct !DISubprogram(name: "AcquireKernelInfo", scope: !1, file: !1, line: 492, type: !849, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!849 = !DISubroutineType(types: !850)
!850 = !{!597, !591}
!851 = !{}
!852 = !DILocalVariable(name: "kernel_string", arg: 1, scope: !848, file: !1, line: 492, type: !591)
!853 = !DILocation(line: 492, column: 56, scope: !848)
!854 = !DILocalVariable(name: "kernel", scope: !848, file: !1, line: 495, type: !597)
!855 = !DILocation(line: 495, column: 6, scope: !848)
!856 = !DILocalVariable(name: "new_kernel", scope: !848, file: !1, line: 496, type: !597)
!857 = !DILocation(line: 496, column: 6, scope: !848)
!858 = !DILocalVariable(name: "token", scope: !848, file: !1, line: 499, type: !766)
!859 = !DILocation(line: 499, column: 5, scope: !848)
!860 = !DILocalVariable(name: "p", scope: !848, file: !1, line: 502, type: !591)
!861 = !DILocation(line: 502, column: 6, scope: !848)
!862 = !DILocation(line: 504, column: 7, scope: !863)
!863 = distinct !DILexicalBlock(scope: !848, file: !1, line: 504, column: 7)
!864 = !DILocation(line: 504, column: 21, scope: !863)
!865 = !DILocation(line: 504, column: 7, scope: !848)
!866 = !DILocation(line: 505, column: 29, scope: !863)
!867 = !DILocation(line: 505, column: 12, scope: !863)
!868 = !DILocation(line: 505, column: 5, scope: !863)
!869 = !DILocation(line: 506, column: 5, scope: !848)
!870 = !DILocation(line: 506, column: 4, scope: !848)
!871 = !DILocation(line: 507, column: 9, scope: !848)
!872 = !DILocation(line: 509, column: 3, scope: !848)
!873 = !DILocation(line: 509, column: 25, scope: !848)
!874 = !DILocation(line: 509, column: 32, scope: !848)
!875 = !DILocation(line: 509, column: 10, scope: !848)
!876 = !DILocation(line: 509, column: 40, scope: !848)
!877 = !DILocation(line: 509, column: 47, scope: !848)
!878 = !DILocation(line: 512, column: 9, scope: !879)
!879 = distinct !DILexicalBlock(scope: !880, file: !1, line: 512, column: 9)
!880 = distinct !DILexicalBlock(scope: !848, file: !1, line: 510, column: 3)
!881 = !DILocation(line: 512, column: 16, scope: !879)
!882 = !DILocation(line: 512, column: 9, scope: !880)
!883 = !DILocation(line: 515, column: 13, scope: !884)
!884 = distinct !DILexicalBlock(scope: !885, file: !1, line: 515, column: 13)
!885 = distinct !DILexicalBlock(scope: !879, file: !1, line: 513, column: 7)
!886 = !DILocation(line: 515, column: 53, scope: !884)
!887 = !DILocation(line: 515, column: 13, scope: !885)
!888 = !DILocation(line: 516, column: 38, scope: !884)
!889 = !DILocation(line: 516, column: 22, scope: !884)
!890 = !DILocation(line: 516, column: 21, scope: !884)
!891 = !DILocation(line: 516, column: 11, scope: !884)
!892 = !DILocation(line: 518, column: 39, scope: !884)
!893 = !DILocation(line: 518, column: 22, scope: !884)
!894 = !DILocation(line: 518, column: 21, scope: !884)
!895 = !DILocation(line: 521, column: 13, scope: !896)
!896 = distinct !DILexicalBlock(scope: !885, file: !1, line: 521, column: 13)
!897 = !DILocation(line: 521, column: 24, scope: !896)
!898 = !DILocation(line: 521, column: 13, scope: !885)
!899 = !DILocation(line: 523, column: 17, scope: !900)
!900 = distinct !DILexicalBlock(scope: !901, file: !1, line: 523, column: 17)
!901 = distinct !DILexicalBlock(scope: !896, file: !1, line: 522, column: 11)
!902 = !DILocation(line: 523, column: 24, scope: !900)
!903 = !DILocation(line: 523, column: 17, scope: !901)
!904 = !DILocation(line: 524, column: 40, scope: !900)
!905 = !DILocation(line: 524, column: 22, scope: !900)
!906 = !DILocation(line: 524, column: 21, scope: !900)
!907 = !DILocation(line: 524, column: 15, scope: !900)
!908 = !DILocation(line: 525, column: 13, scope: !901)
!909 = !DILocation(line: 529, column: 13, scope: !910)
!910 = distinct !DILexicalBlock(scope: !885, file: !1, line: 529, column: 13)
!911 = !DILocation(line: 529, column: 20, scope: !910)
!912 = !DILocation(line: 529, column: 13, scope: !885)
!913 = !DILocation(line: 530, column: 18, scope: !910)
!914 = !DILocation(line: 530, column: 17, scope: !910)
!915 = !DILocation(line: 530, column: 11, scope: !910)
!916 = !DILocation(line: 532, column: 40, scope: !910)
!917 = !DILocation(line: 532, column: 26, scope: !910)
!918 = !DILocation(line: 532, column: 11, scope: !910)
!919 = !DILocation(line: 532, column: 35, scope: !910)
!920 = !DILocation(line: 532, column: 39, scope: !910)
!921 = !DILocation(line: 533, column: 7, scope: !885)
!922 = !DILocation(line: 536, column: 14, scope: !880)
!923 = !DILocation(line: 536, column: 7, scope: !880)
!924 = !DILocation(line: 536, column: 6, scope: !880)
!925 = !DILocation(line: 537, column: 9, scope: !926)
!926 = distinct !DILexicalBlock(scope: !880, file: !1, line: 537, column: 9)
!927 = !DILocation(line: 537, column: 11, scope: !926)
!928 = !DILocation(line: 537, column: 9, scope: !880)
!929 = !DILocation(line: 538, column: 7, scope: !926)
!930 = !DILocation(line: 539, column: 6, scope: !880)
!931 = distinct !{!931, !872, !932}
!932 = !DILocation(line: 540, column: 3, scope: !848)
!933 = !DILocation(line: 541, column: 10, scope: !848)
!934 = !DILocation(line: 541, column: 3, scope: !848)
!935 = !DILocation(line: 542, column: 1, scope: !848)
!936 = distinct !DISubprogram(name: "ParseKernelArray", scope: !1, file: !1, line: 221, type: !849, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!937 = !DILocalVariable(name: "kernel_string", arg: 1, scope: !936, file: !1, line: 221, type: !591)
!938 = !DILocation(line: 221, column: 49, scope: !936)
!939 = !DILocalVariable(name: "kernel", scope: !936, file: !1, line: 224, type: !597)
!940 = !DILocation(line: 224, column: 6, scope: !936)
!941 = !DILocalVariable(name: "token", scope: !936, file: !1, line: 227, type: !766)
!942 = !DILocation(line: 227, column: 5, scope: !936)
!943 = !DILocalVariable(name: "p", scope: !936, file: !1, line: 230, type: !591)
!944 = !DILocation(line: 230, column: 6, scope: !936)
!945 = !DILocalVariable(name: "end", scope: !936, file: !1, line: 231, type: !591)
!946 = !DILocation(line: 231, column: 6, scope: !936)
!947 = !DILocalVariable(name: "i", scope: !936, file: !1, line: 234, type: !609)
!948 = !DILocation(line: 234, column: 5, scope: !936)
!949 = !DILocalVariable(name: "nan", scope: !936, file: !1, line: 237, type: !617)
!950 = !DILocation(line: 237, column: 5, scope: !936)
!951 = !DILocation(line: 237, column: 11, scope: !936)
!952 = !DILocalVariable(name: "flags", scope: !936, file: !1, line: 240, type: !953)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !90, line: 147, baseType: !5)
!954 = !DILocation(line: 240, column: 5, scope: !936)
!955 = !DILocalVariable(name: "args", scope: !936, file: !1, line: 243, type: !956)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !61, line: 112, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !61, line: 104, size: 320, elements: !958)
!958 = !{!959, !960, !961, !962, !963}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !957, file: !61, line: 107, baseType: !617, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !957, file: !61, line: 108, baseType: !617, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !957, file: !61, line: 109, baseType: !617, size: 64, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !957, file: !61, line: 110, baseType: !617, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !957, file: !61, line: 111, baseType: !617, size: 64, offset: 256)
!964 = !DILocation(line: 243, column: 5, scope: !936)
!965 = !DILocation(line: 245, column: 25, scope: !936)
!966 = !DILocation(line: 245, column: 10, scope: !936)
!967 = !DILocation(line: 245, column: 9, scope: !936)
!968 = !DILocation(line: 246, column: 7, scope: !969)
!969 = distinct !DILexicalBlock(scope: !936, file: !1, line: 246, column: 7)
!970 = !DILocation(line: 246, column: 14, scope: !969)
!971 = !DILocation(line: 246, column: 7, scope: !936)
!972 = !DILocation(line: 247, column: 12, scope: !969)
!973 = !DILocation(line: 247, column: 5, scope: !969)
!974 = !DILocation(line: 248, column: 28, scope: !936)
!975 = !DILocation(line: 248, column: 10, scope: !936)
!976 = !DILocation(line: 249, column: 39, scope: !936)
!977 = !DILocation(line: 249, column: 47, scope: !936)
!978 = !DILocation(line: 249, column: 53, scope: !936)
!979 = !DILocation(line: 249, column: 21, scope: !936)
!980 = !DILocation(line: 249, column: 29, scope: !936)
!981 = !DILocation(line: 249, column: 37, scope: !936)
!982 = !DILocation(line: 249, column: 3, scope: !936)
!983 = !DILocation(line: 249, column: 11, scope: !936)
!984 = !DILocation(line: 249, column: 19, scope: !936)
!985 = !DILocation(line: 250, column: 28, scope: !936)
!986 = !DILocation(line: 250, column: 36, scope: !936)
!987 = !DILocation(line: 250, column: 51, scope: !936)
!988 = !DILocation(line: 250, column: 3, scope: !936)
!989 = !DILocation(line: 250, column: 11, scope: !936)
!990 = !DILocation(line: 250, column: 26, scope: !936)
!991 = !DILocation(line: 251, column: 3, scope: !936)
!992 = !DILocation(line: 251, column: 11, scope: !936)
!993 = !DILocation(line: 251, column: 16, scope: !936)
!994 = !DILocation(line: 252, column: 3, scope: !936)
!995 = !DILocation(line: 252, column: 11, scope: !936)
!996 = !DILocation(line: 252, column: 16, scope: !936)
!997 = !DILocation(line: 253, column: 3, scope: !936)
!998 = !DILocation(line: 253, column: 11, scope: !936)
!999 = !DILocation(line: 253, column: 21, scope: !936)
!1000 = !DILocation(line: 254, column: 7, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !936, file: !1, line: 254, column: 7)
!1002 = !DILocation(line: 254, column: 21, scope: !1001)
!1003 = !DILocation(line: 254, column: 7, scope: !936)
!1004 = !DILocation(line: 255, column: 12, scope: !1001)
!1005 = !DILocation(line: 255, column: 5, scope: !1001)
!1006 = !DILocation(line: 258, column: 16, scope: !936)
!1007 = !DILocation(line: 258, column: 9, scope: !936)
!1008 = !DILocation(line: 258, column: 7, scope: !936)
!1009 = !DILocation(line: 259, column: 8, scope: !1010)
!1010 = distinct !DILexicalBlock(scope: !936, file: !1, line: 259, column: 8)
!1011 = !DILocation(line: 259, column: 12, scope: !1010)
!1012 = !DILocation(line: 259, column: 8, scope: !936)
!1013 = !DILocation(line: 260, column: 18, scope: !1010)
!1014 = !DILocation(line: 260, column: 11, scope: !1010)
!1015 = !DILocation(line: 260, column: 9, scope: !1010)
!1016 = !DILocation(line: 260, column: 5, scope: !1010)
!1017 = !DILocation(line: 263, column: 10, scope: !936)
!1018 = !DILocation(line: 268, column: 14, scope: !936)
!1019 = !DILocation(line: 268, column: 7, scope: !936)
!1020 = !DILocation(line: 268, column: 5, scope: !936)
!1021 = !DILocation(line: 269, column: 8, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !936, file: !1, line: 269, column: 8)
!1023 = !DILocation(line: 269, column: 10, scope: !1022)
!1024 = !DILocation(line: 269, column: 27, scope: !1022)
!1025 = !DILocation(line: 269, column: 30, scope: !1022)
!1026 = !DILocation(line: 269, column: 34, scope: !1022)
!1027 = !DILocation(line: 269, column: 32, scope: !1022)
!1028 = !DILocation(line: 269, column: 8, scope: !936)
!1029 = !DILocation(line: 272, column: 7, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1022, file: !1, line: 270, column: 5)
!1031 = !DILocation(line: 272, column: 21, scope: !1030)
!1032 = !DILocation(line: 272, column: 46, scope: !1030)
!1033 = !DILocation(line: 272, column: 48, scope: !1030)
!1034 = !DILocation(line: 272, column: 47, scope: !1030)
!1035 = !DILocation(line: 273, column: 13, scope: !1030)
!1036 = !DILocation(line: 273, column: 15, scope: !1030)
!1037 = !DILocation(line: 273, column: 14, scope: !1030)
!1038 = !DILocation(line: 273, column: 7, scope: !1030)
!1039 = !DILocation(line: 273, column: 30, scope: !1030)
!1040 = !DILocation(line: 274, column: 7, scope: !1030)
!1041 = !DILocation(line: 275, column: 29, scope: !1030)
!1042 = !DILocation(line: 275, column: 15, scope: !1030)
!1043 = !DILocation(line: 275, column: 13, scope: !1030)
!1044 = !DILocation(line: 278, column: 13, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1030, file: !1, line: 278, column: 12)
!1046 = !DILocation(line: 278, column: 19, scope: !1045)
!1047 = !DILocation(line: 278, column: 33, scope: !1045)
!1048 = !DILocation(line: 278, column: 12, scope: !1030)
!1049 = !DILocation(line: 279, column: 25, scope: !1045)
!1050 = !DILocation(line: 279, column: 14, scope: !1045)
!1051 = !DILocation(line: 279, column: 18, scope: !1045)
!1052 = !DILocation(line: 279, column: 9, scope: !1045)
!1053 = !DILocation(line: 280, column: 17, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1030, file: !1, line: 280, column: 12)
!1055 = !DILocation(line: 280, column: 21, scope: !1054)
!1056 = !DILocation(line: 280, column: 12, scope: !1030)
!1057 = !DILocation(line: 281, column: 15, scope: !1054)
!1058 = !DILocation(line: 281, column: 19, scope: !1054)
!1059 = !DILocation(line: 281, column: 10, scope: !1054)
!1060 = !DILocation(line: 282, column: 17, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1030, file: !1, line: 282, column: 12)
!1062 = !DILocation(line: 282, column: 23, scope: !1061)
!1063 = !DILocation(line: 282, column: 12, scope: !1030)
!1064 = !DILocation(line: 283, column: 27, scope: !1061)
!1065 = !DILocation(line: 283, column: 14, scope: !1061)
!1066 = !DILocation(line: 283, column: 20, scope: !1061)
!1067 = !DILocation(line: 283, column: 9, scope: !1061)
!1068 = !DILocation(line: 284, column: 36, scope: !1030)
!1069 = !DILocation(line: 284, column: 23, scope: !1030)
!1070 = !DILocation(line: 284, column: 7, scope: !1030)
!1071 = !DILocation(line: 284, column: 15, scope: !1030)
!1072 = !DILocation(line: 284, column: 21, scope: !1030)
!1073 = !DILocation(line: 285, column: 37, scope: !1030)
!1074 = !DILocation(line: 285, column: 24, scope: !1030)
!1075 = !DILocation(line: 285, column: 7, scope: !1030)
!1076 = !DILocation(line: 285, column: 15, scope: !1030)
!1077 = !DILocation(line: 285, column: 22, scope: !1030)
!1078 = !DILocation(line: 288, column: 17, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1030, file: !1, line: 288, column: 12)
!1080 = !DILocation(line: 288, column: 21, scope: !1079)
!1081 = !DILocation(line: 288, column: 27, scope: !1079)
!1082 = !DILocation(line: 288, column: 35, scope: !1079)
!1083 = !DILocation(line: 288, column: 39, scope: !1079)
!1084 = !DILocation(line: 288, column: 12, scope: !1030)
!1085 = !DILocation(line: 289, column: 34, scope: !1079)
!1086 = !DILocation(line: 289, column: 16, scope: !1079)
!1087 = !DILocation(line: 289, column: 9, scope: !1079)
!1088 = !DILocation(line: 290, column: 21, scope: !1030)
!1089 = !DILocation(line: 290, column: 27, scope: !1030)
!1090 = !DILocation(line: 290, column: 36, scope: !1030)
!1091 = !DILocation(line: 290, column: 19, scope: !1030)
!1092 = !DILocation(line: 290, column: 57, scope: !1030)
!1093 = !DILocation(line: 290, column: 43, scope: !1030)
!1094 = !DILocation(line: 291, column: 54, scope: !1030)
!1095 = !DILocation(line: 291, column: 62, scope: !1030)
!1096 = !DILocation(line: 291, column: 67, scope: !1030)
!1097 = !DILocation(line: 291, column: 70, scope: !1030)
!1098 = !DILocation(line: 290, column: 7, scope: !1030)
!1099 = !DILocation(line: 290, column: 15, scope: !1030)
!1100 = !DILocation(line: 290, column: 17, scope: !1030)
!1101 = !DILocation(line: 292, column: 21, scope: !1030)
!1102 = !DILocation(line: 292, column: 27, scope: !1030)
!1103 = !DILocation(line: 292, column: 36, scope: !1030)
!1104 = !DILocation(line: 292, column: 19, scope: !1030)
!1105 = !DILocation(line: 292, column: 57, scope: !1030)
!1106 = !DILocation(line: 292, column: 43, scope: !1030)
!1107 = !DILocation(line: 293, column: 54, scope: !1030)
!1108 = !DILocation(line: 293, column: 62, scope: !1030)
!1109 = !DILocation(line: 293, column: 68, scope: !1030)
!1110 = !DILocation(line: 293, column: 71, scope: !1030)
!1111 = !DILocation(line: 292, column: 7, scope: !1030)
!1112 = !DILocation(line: 292, column: 15, scope: !1030)
!1113 = !DILocation(line: 292, column: 17, scope: !1030)
!1114 = !DILocation(line: 294, column: 12, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1030, file: !1, line: 294, column: 12)
!1116 = !DILocation(line: 294, column: 20, scope: !1115)
!1117 = !DILocation(line: 294, column: 35, scope: !1115)
!1118 = !DILocation(line: 294, column: 43, scope: !1115)
!1119 = !DILocation(line: 294, column: 22, scope: !1115)
!1120 = !DILocation(line: 294, column: 49, scope: !1115)
!1121 = !DILocation(line: 295, column: 12, scope: !1115)
!1122 = !DILocation(line: 295, column: 20, scope: !1115)
!1123 = !DILocation(line: 295, column: 35, scope: !1115)
!1124 = !DILocation(line: 295, column: 43, scope: !1115)
!1125 = !DILocation(line: 295, column: 22, scope: !1115)
!1126 = !DILocation(line: 294, column: 12, scope: !1030)
!1127 = !DILocation(line: 296, column: 34, scope: !1115)
!1128 = !DILocation(line: 296, column: 16, scope: !1115)
!1129 = !DILocation(line: 296, column: 9, scope: !1115)
!1130 = !DILocation(line: 298, column: 8, scope: !1030)
!1131 = !DILocation(line: 299, column: 5, scope: !1030)
!1132 = !DILocation(line: 303, column: 24, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1022, file: !1, line: 301, column: 5)
!1134 = !DILocation(line: 303, column: 8, scope: !1133)
!1135 = !DILocation(line: 304, column: 7, scope: !1133)
!1136 = !DILocation(line: 304, column: 15, scope: !1133)
!1137 = !DILocation(line: 304, column: 51, scope: !1133)
!1138 = !DILocation(line: 304, column: 57, scope: !1133)
!1139 = !DILocation(line: 304, column: 62, scope: !1133)
!1140 = !DILocation(line: 304, column: 61, scope: !1133)
!1141 = !DILocation(line: 304, column: 64, scope: !1133)
!1142 = !DILocation(line: 305, column: 10, scope: !1133)
!1143 = distinct !{!1143, !1135, !1142}
!1144 = !DILocation(line: 306, column: 13, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 306, column: 7)
!1146 = !DILocation(line: 306, column: 12, scope: !1145)
!1147 = !DILocation(line: 306, column: 17, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 306, column: 7)
!1149 = !DILocation(line: 306, column: 21, scope: !1148)
!1150 = !DILocation(line: 306, column: 19, scope: !1148)
!1151 = !DILocation(line: 306, column: 7, scope: !1145)
!1152 = !DILocation(line: 308, column: 24, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1148, file: !1, line: 307, column: 7)
!1154 = !DILocation(line: 308, column: 29, scope: !1153)
!1155 = !DILocation(line: 308, column: 9, scope: !1153)
!1156 = !DILocation(line: 309, column: 13, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1153, file: !1, line: 309, column: 13)
!1158 = !DILocation(line: 309, column: 20, scope: !1157)
!1159 = !DILocation(line: 309, column: 13, scope: !1153)
!1160 = !DILocation(line: 310, column: 26, scope: !1157)
!1161 = !DILocation(line: 310, column: 31, scope: !1157)
!1162 = !DILocation(line: 310, column: 11, scope: !1157)
!1163 = !DILocation(line: 311, column: 7, scope: !1153)
!1164 = !DILocation(line: 306, column: 27, scope: !1148)
!1165 = !DILocation(line: 306, column: 7, scope: !1148)
!1166 = distinct !{!1166, !1151, !1167}
!1167 = !DILocation(line: 311, column: 7, scope: !1145)
!1168 = !DILocation(line: 313, column: 62, scope: !1133)
!1169 = !DILocation(line: 313, column: 53, scope: !1133)
!1170 = !DILocation(line: 313, column: 63, scope: !1133)
!1171 = !DILocation(line: 313, column: 48, scope: !1133)
!1172 = !DILocation(line: 313, column: 39, scope: !1133)
!1173 = !DILocation(line: 313, column: 23, scope: !1133)
!1174 = !DILocation(line: 313, column: 31, scope: !1133)
!1175 = !DILocation(line: 313, column: 37, scope: !1133)
!1176 = !DILocation(line: 313, column: 7, scope: !1133)
!1177 = !DILocation(line: 313, column: 15, scope: !1133)
!1178 = !DILocation(line: 313, column: 21, scope: !1133)
!1179 = !DILocation(line: 314, column: 42, scope: !1133)
!1180 = !DILocation(line: 314, column: 50, scope: !1133)
!1181 = !DILocation(line: 314, column: 55, scope: !1133)
!1182 = !DILocation(line: 314, column: 58, scope: !1133)
!1183 = !DILocation(line: 314, column: 19, scope: !1133)
!1184 = !DILocation(line: 314, column: 27, scope: !1133)
!1185 = !DILocation(line: 314, column: 29, scope: !1133)
!1186 = !DILocation(line: 314, column: 7, scope: !1133)
!1187 = !DILocation(line: 314, column: 15, scope: !1133)
!1188 = !DILocation(line: 314, column: 17, scope: !1133)
!1189 = !DILocation(line: 315, column: 24, scope: !1133)
!1190 = !DILocation(line: 315, column: 8, scope: !1133)
!1191 = !DILocation(line: 316, column: 7, scope: !1133)
!1192 = !DILocation(line: 316, column: 15, scope: !1133)
!1193 = !DILocation(line: 316, column: 51, scope: !1133)
!1194 = !DILocation(line: 316, column: 57, scope: !1133)
!1195 = !DILocation(line: 316, column: 62, scope: !1133)
!1196 = !DILocation(line: 316, column: 61, scope: !1133)
!1197 = !DILocation(line: 316, column: 64, scope: !1133)
!1198 = !DILocation(line: 317, column: 10, scope: !1133)
!1199 = distinct !{!1199, !1191, !1198}
!1200 = !DILocation(line: 321, column: 29, scope: !936)
!1201 = !DILocation(line: 321, column: 18, scope: !936)
!1202 = !DILocation(line: 321, column: 3, scope: !936)
!1203 = !DILocation(line: 321, column: 11, scope: !936)
!1204 = !DILocation(line: 321, column: 17, scope: !936)
!1205 = !DILocation(line: 323, column: 7, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !936, file: !1, line: 323, column: 7)
!1207 = !DILocation(line: 323, column: 15, scope: !1206)
!1208 = !DILocation(line: 323, column: 22, scope: !1206)
!1209 = !DILocation(line: 323, column: 7, scope: !936)
!1210 = !DILocation(line: 324, column: 30, scope: !1206)
!1211 = !DILocation(line: 324, column: 12, scope: !1206)
!1212 = !DILocation(line: 324, column: 5, scope: !1206)
!1213 = !DILocation(line: 325, column: 3, scope: !936)
!1214 = !DILocation(line: 325, column: 11, scope: !936)
!1215 = !DILocation(line: 325, column: 18, scope: !936)
!1216 = !DILocation(line: 326, column: 3, scope: !936)
!1217 = !DILocation(line: 326, column: 11, scope: !936)
!1218 = !DILocation(line: 326, column: 18, scope: !936)
!1219 = !DILocation(line: 327, column: 28, scope: !936)
!1220 = !DILocation(line: 327, column: 36, scope: !936)
!1221 = !DILocation(line: 327, column: 51, scope: !936)
!1222 = !DILocation(line: 327, column: 3, scope: !936)
!1223 = !DILocation(line: 327, column: 11, scope: !936)
!1224 = !DILocation(line: 327, column: 26, scope: !936)
!1225 = !DILocation(line: 328, column: 9, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !936, file: !1, line: 328, column: 3)
!1227 = !DILocation(line: 328, column: 8, scope: !1226)
!1228 = !DILocation(line: 328, column: 14, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1226, file: !1, line: 328, column: 3)
!1230 = !DILocation(line: 328, column: 29, scope: !1229)
!1231 = !DILocation(line: 328, column: 37, scope: !1229)
!1232 = !DILocation(line: 328, column: 43, scope: !1229)
!1233 = !DILocation(line: 328, column: 51, scope: !1229)
!1234 = !DILocation(line: 328, column: 42, scope: !1229)
!1235 = !DILocation(line: 328, column: 16, scope: !1229)
!1236 = !DILocation(line: 328, column: 60, scope: !1229)
!1237 = !DILocation(line: 328, column: 64, scope: !1229)
!1238 = !DILocation(line: 328, column: 68, scope: !1229)
!1239 = !DILocation(line: 328, column: 66, scope: !1229)
!1240 = !DILocation(line: 0, scope: !1229)
!1241 = !DILocation(line: 328, column: 3, scope: !1226)
!1242 = !DILocation(line: 330, column: 20, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 329, column: 3)
!1244 = !DILocation(line: 330, column: 25, scope: !1243)
!1245 = !DILocation(line: 330, column: 5, scope: !1243)
!1246 = !DILocation(line: 331, column: 9, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 331, column: 9)
!1248 = !DILocation(line: 331, column: 16, scope: !1247)
!1249 = !DILocation(line: 331, column: 9, scope: !1243)
!1250 = !DILocation(line: 332, column: 22, scope: !1247)
!1251 = !DILocation(line: 332, column: 27, scope: !1247)
!1252 = !DILocation(line: 332, column: 7, scope: !1247)
!1253 = !DILocation(line: 333, column: 33, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 333, column: 13)
!1255 = !DILocation(line: 333, column: 13, scope: !1254)
!1256 = !DILocation(line: 333, column: 40, scope: !1254)
!1257 = !DILocation(line: 334, column: 9, scope: !1254)
!1258 = !DILocation(line: 334, column: 30, scope: !1254)
!1259 = !DILocation(line: 334, column: 12, scope: !1254)
!1260 = !DILocation(line: 334, column: 37, scope: !1254)
!1261 = !DILocation(line: 333, column: 13, scope: !1243)
!1262 = !DILocation(line: 335, column: 27, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 334, column: 44)
!1264 = !DILocation(line: 335, column: 7, scope: !1263)
!1265 = !DILocation(line: 335, column: 15, scope: !1263)
!1266 = !DILocation(line: 335, column: 22, scope: !1263)
!1267 = !DILocation(line: 335, column: 25, scope: !1263)
!1268 = !DILocation(line: 336, column: 5, scope: !1263)
!1269 = !DILocation(line: 338, column: 42, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 337, column: 10)
!1271 = !DILocation(line: 338, column: 27, scope: !1270)
!1272 = !DILocation(line: 338, column: 7, scope: !1270)
!1273 = !DILocation(line: 338, column: 15, scope: !1270)
!1274 = !DILocation(line: 338, column: 22, scope: !1270)
!1275 = !DILocation(line: 338, column: 25, scope: !1270)
!1276 = !DILocation(line: 339, column: 9, scope: !1270)
!1277 = !DILocation(line: 339, column: 17, scope: !1270)
!1278 = !DILocation(line: 339, column: 24, scope: !1270)
!1279 = !DILocation(line: 339, column: 27, scope: !1270)
!1280 = !DILocation(line: 339, column: 7, scope: !1270)
!1281 = !DILocation(line: 340, column: 42, scope: !1270)
!1282 = !DILocation(line: 340, column: 50, scope: !1270)
!1283 = !DILocation(line: 340, column: 57, scope: !1270)
!1284 = !DILocation(line: 340, column: 16, scope: !1270)
!1285 = !DILocation(line: 340, column: 24, scope: !1270)
!1286 = !DILocation(line: 340, column: 39, scope: !1270)
!1287 = !DILocation(line: 341, column: 42, scope: !1270)
!1288 = !DILocation(line: 341, column: 50, scope: !1270)
!1289 = !DILocation(line: 341, column: 57, scope: !1270)
!1290 = !DILocation(line: 341, column: 16, scope: !1270)
!1291 = !DILocation(line: 341, column: 24, scope: !1270)
!1292 = !DILocation(line: 341, column: 39, scope: !1270)
!1293 = !DILocation(line: 342, column: 7, scope: !1270)
!1294 = !DILocation(line: 343, column: 7, scope: !1270)
!1295 = !DILocation(line: 345, column: 3, scope: !1243)
!1296 = !DILocation(line: 328, column: 75, scope: !1229)
!1297 = !DILocation(line: 328, column: 3, scope: !1229)
!1298 = distinct !{!1298, !1241, !1299}
!1299 = !DILocation(line: 345, column: 3, scope: !1226)
!1300 = !DILocation(line: 348, column: 18, scope: !936)
!1301 = !DILocation(line: 348, column: 23, scope: !936)
!1302 = !DILocation(line: 348, column: 3, scope: !936)
!1303 = !DILocation(line: 349, column: 8, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !936, file: !1, line: 349, column: 8)
!1305 = !DILocation(line: 349, column: 15, scope: !1304)
!1306 = !DILocation(line: 349, column: 23, scope: !1304)
!1307 = !DILocation(line: 349, column: 26, scope: !1304)
!1308 = !DILocation(line: 349, column: 33, scope: !1304)
!1309 = !DILocation(line: 349, column: 40, scope: !1304)
!1310 = !DILocation(line: 349, column: 43, scope: !1304)
!1311 = !DILocation(line: 349, column: 50, scope: !1304)
!1312 = !DILocation(line: 349, column: 8, scope: !936)
!1313 = !DILocation(line: 350, column: 30, scope: !1304)
!1314 = !DILocation(line: 350, column: 12, scope: !1304)
!1315 = !DILocation(line: 350, column: 5, scope: !1304)
!1316 = !DILocation(line: 362, column: 8, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !936, file: !1, line: 362, column: 8)
!1318 = !DILocation(line: 362, column: 23, scope: !1317)
!1319 = !DILocation(line: 362, column: 31, scope: !1317)
!1320 = !DILocation(line: 362, column: 37, scope: !1317)
!1321 = !DILocation(line: 362, column: 45, scope: !1317)
!1322 = !DILocation(line: 362, column: 36, scope: !1317)
!1323 = !DILocation(line: 362, column: 10, scope: !1317)
!1324 = !DILocation(line: 362, column: 8, scope: !936)
!1325 = !DILocation(line: 363, column: 30, scope: !1317)
!1326 = !DILocation(line: 363, column: 12, scope: !1317)
!1327 = !DILocation(line: 363, column: 5, scope: !1317)
!1328 = !DILocation(line: 367, column: 7, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !936, file: !1, line: 367, column: 7)
!1330 = !DILocation(line: 367, column: 15, scope: !1329)
!1331 = !DILocation(line: 367, column: 23, scope: !1329)
!1332 = !DILocation(line: 367, column: 7, scope: !936)
!1333 = !DILocation(line: 368, column: 30, scope: !1329)
!1334 = !DILocation(line: 368, column: 12, scope: !1329)
!1335 = !DILocation(line: 368, column: 5, scope: !1329)
!1336 = !DILocation(line: 370, column: 9, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !936, file: !1, line: 370, column: 8)
!1338 = !DILocation(line: 370, column: 15, scope: !1337)
!1339 = !DILocation(line: 370, column: 28, scope: !1337)
!1340 = !DILocation(line: 370, column: 8, scope: !936)
!1341 = !DILocation(line: 371, column: 28, scope: !1337)
!1342 = !DILocation(line: 371, column: 5, scope: !1337)
!1343 = !DILocation(line: 372, column: 14, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1337, file: !1, line: 372, column: 13)
!1345 = !DILocation(line: 372, column: 20, scope: !1344)
!1346 = !DILocation(line: 372, column: 36, scope: !1344)
!1347 = !DILocation(line: 372, column: 13, scope: !1337)
!1348 = !DILocation(line: 373, column: 28, scope: !1344)
!1349 = !DILocation(line: 373, column: 5, scope: !1344)
!1350 = !DILocation(line: 374, column: 14, scope: !1351)
!1351 = distinct !DILexicalBlock(scope: !1344, file: !1, line: 374, column: 13)
!1352 = !DILocation(line: 374, column: 20, scope: !1351)
!1353 = !DILocation(line: 374, column: 33, scope: !1351)
!1354 = !DILocation(line: 374, column: 13, scope: !1344)
!1355 = !DILocation(line: 375, column: 28, scope: !1351)
!1356 = !DILocation(line: 375, column: 5, scope: !1351)
!1357 = !DILocation(line: 377, column: 10, scope: !936)
!1358 = !DILocation(line: 377, column: 3, scope: !936)
!1359 = !DILocation(line: 378, column: 1, scope: !936)
!1360 = distinct !DISubprogram(name: "ParseKernelName", scope: !1, file: !1, line: 380, type: !849, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!1361 = !DILocalVariable(name: "kernel_string", arg: 1, scope: !1360, file: !1, line: 380, type: !591)
!1362 = !DILocation(line: 380, column: 48, scope: !1360)
!1363 = !DILocalVariable(name: "token", scope: !1360, file: !1, line: 383, type: !766)
!1364 = !DILocation(line: 383, column: 5, scope: !1360)
!1365 = !DILocalVariable(name: "p", scope: !1360, file: !1, line: 386, type: !591)
!1366 = !DILocation(line: 386, column: 6, scope: !1360)
!1367 = !DILocalVariable(name: "end", scope: !1360, file: !1, line: 387, type: !591)
!1368 = !DILocation(line: 387, column: 6, scope: !1360)
!1369 = !DILocalVariable(name: "args", scope: !1360, file: !1, line: 390, type: !956)
!1370 = !DILocation(line: 390, column: 5, scope: !1360)
!1371 = !DILocalVariable(name: "kernel", scope: !1360, file: !1, line: 393, type: !597)
!1372 = !DILocation(line: 393, column: 6, scope: !1360)
!1373 = !DILocalVariable(name: "flags", scope: !1360, file: !1, line: 396, type: !953)
!1374 = !DILocation(line: 396, column: 5, scope: !1360)
!1375 = !DILocalVariable(name: "type", scope: !1360, file: !1, line: 399, type: !609)
!1376 = !DILocation(line: 399, column: 5, scope: !1360)
!1377 = !DILocation(line: 402, column: 18, scope: !1360)
!1378 = !DILocation(line: 402, column: 35, scope: !1360)
!1379 = !DILocation(line: 402, column: 3, scope: !1360)
!1380 = !DILocation(line: 403, column: 59, scope: !1360)
!1381 = !DILocation(line: 403, column: 8, scope: !1360)
!1382 = !DILocation(line: 403, column: 7, scope: !1360)
!1383 = !DILocation(line: 404, column: 8, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1360, file: !1, line: 404, column: 8)
!1385 = !DILocation(line: 404, column: 13, scope: !1384)
!1386 = !DILocation(line: 404, column: 17, scope: !1384)
!1387 = !DILocation(line: 404, column: 20, scope: !1384)
!1388 = !DILocation(line: 404, column: 25, scope: !1384)
!1389 = !DILocation(line: 404, column: 8, scope: !1360)
!1390 = !DILocation(line: 405, column: 5, scope: !1384)
!1391 = !DILocation(line: 407, column: 3, scope: !1360)
!1392 = !DILocation(line: 407, column: 12, scope: !1360)
!1393 = !DILocation(line: 407, column: 48, scope: !1360)
!1394 = !DILocation(line: 407, column: 54, scope: !1360)
!1395 = !DILocation(line: 408, column: 13, scope: !1360)
!1396 = !DILocation(line: 408, column: 12, scope: !1360)
!1397 = !DILocation(line: 408, column: 15, scope: !1360)
!1398 = !DILocation(line: 408, column: 23, scope: !1360)
!1399 = !DILocation(line: 408, column: 28, scope: !1360)
!1400 = !DILocation(line: 408, column: 27, scope: !1360)
!1401 = !DILocation(line: 408, column: 30, scope: !1360)
!1402 = !DILocation(line: 408, column: 40, scope: !1360)
!1403 = !DILocation(line: 408, column: 45, scope: !1360)
!1404 = !DILocation(line: 408, column: 44, scope: !1360)
!1405 = !DILocation(line: 408, column: 47, scope: !1360)
!1406 = !DILocation(line: 408, column: 56, scope: !1360)
!1407 = !DILocation(line: 408, column: 61, scope: !1360)
!1408 = !DILocation(line: 408, column: 60, scope: !1360)
!1409 = !DILocation(line: 408, column: 63, scope: !1360)
!1410 = !DILocation(line: 0, scope: !1360)
!1411 = !DILocation(line: 409, column: 6, scope: !1360)
!1412 = distinct !{!1412, !1391, !1411}
!1413 = !DILocation(line: 411, column: 16, scope: !1360)
!1414 = !DILocation(line: 411, column: 9, scope: !1360)
!1415 = !DILocation(line: 411, column: 7, scope: !1360)
!1416 = !DILocation(line: 412, column: 8, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1360, file: !1, line: 412, column: 8)
!1418 = !DILocation(line: 412, column: 12, scope: !1417)
!1419 = !DILocation(line: 412, column: 8, scope: !1360)
!1420 = !DILocation(line: 413, column: 18, scope: !1417)
!1421 = !DILocation(line: 413, column: 11, scope: !1417)
!1422 = !DILocation(line: 413, column: 9, scope: !1417)
!1423 = !DILocation(line: 413, column: 5, scope: !1417)
!1424 = !DILocation(line: 416, column: 3, scope: !1360)
!1425 = !DILocation(line: 416, column: 17, scope: !1360)
!1426 = !DILocation(line: 416, column: 30, scope: !1360)
!1427 = !DILocation(line: 416, column: 34, scope: !1360)
!1428 = !DILocation(line: 416, column: 33, scope: !1360)
!1429 = !DILocation(line: 417, column: 9, scope: !1360)
!1430 = !DILocation(line: 417, column: 13, scope: !1360)
!1431 = !DILocation(line: 417, column: 12, scope: !1360)
!1432 = !DILocation(line: 417, column: 3, scope: !1360)
!1433 = !DILocation(line: 417, column: 16, scope: !1360)
!1434 = !DILocation(line: 418, column: 3, scope: !1360)
!1435 = !DILocation(line: 419, column: 25, scope: !1360)
!1436 = !DILocation(line: 419, column: 11, scope: !1360)
!1437 = !DILocation(line: 419, column: 9, scope: !1360)
!1438 = !DILocation(line: 428, column: 11, scope: !1360)
!1439 = !DILocation(line: 428, column: 3, scope: !1360)
!1440 = !DILocation(line: 431, column: 13, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 431, column: 12)
!1442 = distinct !DILexicalBlock(scope: !1360, file: !1, line: 428, column: 18)
!1443 = !DILocation(line: 431, column: 19, scope: !1441)
!1444 = !DILocation(line: 431, column: 33, scope: !1441)
!1445 = !DILocation(line: 431, column: 12, scope: !1442)
!1446 = !DILocation(line: 432, column: 14, scope: !1441)
!1447 = !DILocation(line: 432, column: 18, scope: !1441)
!1448 = !DILocation(line: 432, column: 9, scope: !1441)
!1449 = !DILocation(line: 433, column: 7, scope: !1442)
!1450 = !DILocation(line: 440, column: 13, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 440, column: 12)
!1452 = !DILocation(line: 440, column: 19, scope: !1451)
!1453 = !DILocation(line: 440, column: 34, scope: !1451)
!1454 = !DILocation(line: 440, column: 12, scope: !1442)
!1455 = !DILocation(line: 441, column: 14, scope: !1451)
!1456 = !DILocation(line: 441, column: 20, scope: !1451)
!1457 = !DILocation(line: 441, column: 9, scope: !1451)
!1458 = !DILocation(line: 442, column: 7, scope: !1442)
!1459 = !DILocation(line: 444, column: 13, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 444, column: 12)
!1461 = !DILocation(line: 444, column: 19, scope: !1460)
!1462 = !DILocation(line: 444, column: 29, scope: !1460)
!1463 = !DILocation(line: 444, column: 12, scope: !1442)
!1464 = !DILocation(line: 445, column: 14, scope: !1460)
!1465 = !DILocation(line: 445, column: 17, scope: !1460)
!1466 = !DILocation(line: 445, column: 9, scope: !1460)
!1467 = !DILocation(line: 446, column: 7, scope: !1442)
!1468 = !DILocation(line: 448, column: 13, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 448, column: 12)
!1470 = !DILocation(line: 448, column: 19, scope: !1469)
!1471 = !DILocation(line: 448, column: 33, scope: !1469)
!1472 = !DILocation(line: 448, column: 12, scope: !1442)
!1473 = !DILocation(line: 449, column: 25, scope: !1469)
!1474 = !DILocation(line: 449, column: 14, scope: !1469)
!1475 = !DILocation(line: 449, column: 18, scope: !1469)
!1476 = !DILocation(line: 449, column: 9, scope: !1469)
!1477 = !DILocation(line: 450, column: 17, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 450, column: 12)
!1479 = !DILocation(line: 450, column: 21, scope: !1478)
!1480 = !DILocation(line: 450, column: 12, scope: !1442)
!1481 = !DILocation(line: 451, column: 16, scope: !1478)
!1482 = !DILocation(line: 451, column: 20, scope: !1478)
!1483 = !DILocation(line: 451, column: 11, scope: !1478)
!1484 = !DILocation(line: 452, column: 17, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 452, column: 12)
!1486 = !DILocation(line: 452, column: 23, scope: !1485)
!1487 = !DILocation(line: 452, column: 12, scope: !1442)
!1488 = !DILocation(line: 453, column: 27, scope: !1485)
!1489 = !DILocation(line: 453, column: 14, scope: !1485)
!1490 = !DILocation(line: 453, column: 20, scope: !1485)
!1491 = !DILocation(line: 453, column: 9, scope: !1485)
!1492 = !DILocation(line: 454, column: 13, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 454, column: 12)
!1494 = !DILocation(line: 454, column: 19, scope: !1493)
!1495 = !DILocation(line: 454, column: 29, scope: !1493)
!1496 = !DILocation(line: 454, column: 12, scope: !1442)
!1497 = !DILocation(line: 455, column: 43, scope: !1493)
!1498 = !DILocation(line: 455, column: 29, scope: !1493)
!1499 = !DILocation(line: 455, column: 46, scope: !1493)
!1500 = !DILocation(line: 455, column: 49, scope: !1493)
!1501 = !DILocation(line: 455, column: 19, scope: !1493)
!1502 = !DILocation(line: 455, column: 14, scope: !1493)
!1503 = !DILocation(line: 455, column: 17, scope: !1493)
!1504 = !DILocation(line: 455, column: 9, scope: !1493)
!1505 = !DILocation(line: 456, column: 13, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 456, column: 12)
!1507 = !DILocation(line: 456, column: 19, scope: !1506)
!1508 = !DILocation(line: 456, column: 29, scope: !1506)
!1509 = !DILocation(line: 456, column: 12, scope: !1442)
!1510 = !DILocation(line: 457, column: 44, scope: !1506)
!1511 = !DILocation(line: 457, column: 30, scope: !1506)
!1512 = !DILocation(line: 457, column: 49, scope: !1506)
!1513 = !DILocation(line: 457, column: 52, scope: !1506)
!1514 = !DILocation(line: 457, column: 20, scope: !1506)
!1515 = !DILocation(line: 457, column: 14, scope: !1506)
!1516 = !DILocation(line: 457, column: 18, scope: !1506)
!1517 = !DILocation(line: 457, column: 9, scope: !1506)
!1518 = !DILocation(line: 458, column: 7, scope: !1442)
!1519 = !DILocation(line: 464, column: 13, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1442, file: !1, line: 464, column: 12)
!1521 = !DILocation(line: 464, column: 19, scope: !1520)
!1522 = !DILocation(line: 464, column: 34, scope: !1520)
!1523 = !DILocation(line: 464, column: 12, scope: !1442)
!1524 = !DILocation(line: 465, column: 14, scope: !1520)
!1525 = !DILocation(line: 465, column: 20, scope: !1520)
!1526 = !DILocation(line: 465, column: 9, scope: !1520)
!1527 = !DILocation(line: 466, column: 18, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 466, column: 17)
!1529 = !DILocation(line: 466, column: 24, scope: !1528)
!1530 = !DILocation(line: 466, column: 40, scope: !1528)
!1531 = !DILocation(line: 466, column: 17, scope: !1520)
!1532 = !DILocation(line: 467, column: 41, scope: !1528)
!1533 = !DILocation(line: 467, column: 46, scope: !1528)
!1534 = !DILocation(line: 467, column: 34, scope: !1528)
!1535 = !DILocation(line: 467, column: 14, scope: !1528)
!1536 = !DILocation(line: 467, column: 20, scope: !1528)
!1537 = !DILocation(line: 467, column: 9, scope: !1528)
!1538 = !DILocation(line: 468, column: 18, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1528, file: !1, line: 468, column: 17)
!1540 = !DILocation(line: 468, column: 24, scope: !1539)
!1541 = !DILocation(line: 468, column: 41, scope: !1539)
!1542 = !DILocation(line: 468, column: 17, scope: !1528)
!1543 = !DILocation(line: 469, column: 14, scope: !1539)
!1544 = !DILocation(line: 469, column: 20, scope: !1539)
!1545 = !DILocation(line: 469, column: 9, scope: !1539)
!1546 = !DILocation(line: 470, column: 7, scope: !1442)
!1547 = !DILocation(line: 472, column: 7, scope: !1442)
!1548 = !DILocation(line: 475, column: 49, scope: !1360)
!1549 = !DILocation(line: 475, column: 33, scope: !1360)
!1550 = !DILocation(line: 475, column: 12, scope: !1360)
!1551 = !DILocation(line: 475, column: 10, scope: !1360)
!1552 = !DILocation(line: 476, column: 8, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1360, file: !1, line: 476, column: 8)
!1554 = !DILocation(line: 476, column: 15, scope: !1553)
!1555 = !DILocation(line: 476, column: 8, scope: !1360)
!1556 = !DILocation(line: 477, column: 12, scope: !1553)
!1557 = !DILocation(line: 477, column: 5, scope: !1553)
!1558 = !DILocation(line: 480, column: 8, scope: !1559)
!1559 = distinct !DILexicalBlock(scope: !1360, file: !1, line: 480, column: 8)
!1560 = !DILocation(line: 480, column: 16, scope: !1559)
!1561 = !DILocation(line: 480, column: 21, scope: !1559)
!1562 = !DILocation(line: 480, column: 8, scope: !1360)
!1563 = !DILocation(line: 481, column: 11, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 481, column: 10)
!1565 = distinct !DILexicalBlock(scope: !1559, file: !1, line: 480, column: 46)
!1566 = !DILocation(line: 481, column: 17, scope: !1564)
!1567 = !DILocation(line: 481, column: 30, scope: !1564)
!1568 = !DILocation(line: 481, column: 10, scope: !1565)
!1569 = !DILocation(line: 482, column: 30, scope: !1564)
!1570 = !DILocation(line: 482, column: 7, scope: !1564)
!1571 = !DILocation(line: 483, column: 16, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 483, column: 15)
!1573 = !DILocation(line: 483, column: 22, scope: !1572)
!1574 = !DILocation(line: 483, column: 38, scope: !1572)
!1575 = !DILocation(line: 483, column: 15, scope: !1564)
!1576 = !DILocation(line: 484, column: 30, scope: !1572)
!1577 = !DILocation(line: 484, column: 7, scope: !1572)
!1578 = !DILocation(line: 485, column: 16, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1572, file: !1, line: 485, column: 15)
!1580 = !DILocation(line: 485, column: 22, scope: !1579)
!1581 = !DILocation(line: 485, column: 35, scope: !1579)
!1582 = !DILocation(line: 485, column: 15, scope: !1572)
!1583 = !DILocation(line: 486, column: 30, scope: !1579)
!1584 = !DILocation(line: 486, column: 7, scope: !1579)
!1585 = !DILocation(line: 487, column: 3, scope: !1565)
!1586 = !DILocation(line: 489, column: 10, scope: !1360)
!1587 = !DILocation(line: 489, column: 3, scope: !1360)
!1588 = !DILocation(line: 490, column: 1, scope: !1360)
!1589 = distinct !DISubprogram(name: "DestroyKernelInfo", scope: !1, file: !1, line: 2250, type: !1590, scopeLine: 2251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!597, !597}
!1592 = !DILocalVariable(name: "kernel", arg: 1, scope: !1589, file: !1, line: 2250, type: !597)
!1593 = !DILocation(line: 2250, column: 56, scope: !1589)
!1594 = !DILocation(line: 2253, column: 7, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1589, file: !1, line: 2253, column: 7)
!1596 = !DILocation(line: 2253, column: 15, scope: !1595)
!1597 = !DILocation(line: 2253, column: 20, scope: !1595)
!1598 = !DILocation(line: 2253, column: 7, scope: !1589)
!1599 = !DILocation(line: 2254, column: 36, scope: !1595)
!1600 = !DILocation(line: 2254, column: 44, scope: !1595)
!1601 = !DILocation(line: 2254, column: 18, scope: !1595)
!1602 = !DILocation(line: 2254, column: 5, scope: !1595)
!1603 = !DILocation(line: 2254, column: 13, scope: !1595)
!1604 = !DILocation(line: 2254, column: 17, scope: !1595)
!1605 = !DILocation(line: 2255, column: 53, scope: !1589)
!1606 = !DILocation(line: 2255, column: 61, scope: !1589)
!1607 = !DILocation(line: 2255, column: 29, scope: !1589)
!1608 = !DILocation(line: 2255, column: 18, scope: !1589)
!1609 = !DILocation(line: 2255, column: 3, scope: !1589)
!1610 = !DILocation(line: 2255, column: 11, scope: !1589)
!1611 = !DILocation(line: 2255, column: 17, scope: !1589)
!1612 = !DILocation(line: 2256, column: 48, scope: !1589)
!1613 = !DILocation(line: 2256, column: 25, scope: !1589)
!1614 = !DILocation(line: 2256, column: 10, scope: !1589)
!1615 = !DILocation(line: 2256, column: 9, scope: !1589)
!1616 = !DILocation(line: 2257, column: 10, scope: !1589)
!1617 = !DILocation(line: 2257, column: 3, scope: !1589)
!1618 = distinct !DISubprogram(name: "LastKernelInfo", scope: !1, file: !1, line: 126, type: !1590, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!1619 = !DILocalVariable(name: "kernel", arg: 1, scope: !1618, file: !1, line: 126, type: !597)
!1620 = !DILocation(line: 126, column: 54, scope: !1618)
!1621 = !DILocation(line: 128, column: 3, scope: !1618)
!1622 = !DILocation(line: 128, column: 10, scope: !1618)
!1623 = !DILocation(line: 128, column: 18, scope: !1618)
!1624 = !DILocation(line: 128, column: 23, scope: !1618)
!1625 = !DILocation(line: 129, column: 12, scope: !1618)
!1626 = !DILocation(line: 129, column: 20, scope: !1618)
!1627 = !DILocation(line: 129, column: 11, scope: !1618)
!1628 = distinct !{!1628, !1621, !1626}
!1629 = !DILocation(line: 130, column: 10, scope: !1618)
!1630 = !DILocation(line: 130, column: 3, scope: !1618)
!1631 = distinct !DISubprogram(name: "AcquireKernelBuiltIn", scope: !1, file: !1, line: 948, type: !1632, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!597, !1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!1637 = !DILocalVariable(name: "type", arg: 1, scope: !1631, file: !1, line: 948, type: !1634)
!1638 = !DILocation(line: 948, column: 68, scope: !1631)
!1639 = !DILocalVariable(name: "args", arg: 2, scope: !1631, file: !1, line: 949, type: !1635)
!1640 = !DILocation(line: 949, column: 24, scope: !1631)
!1641 = !DILocalVariable(name: "kernel", scope: !1631, file: !1, line: 952, type: !597)
!1642 = !DILocation(line: 952, column: 6, scope: !1631)
!1643 = !DILocalVariable(name: "i", scope: !1631, file: !1, line: 955, type: !609)
!1644 = !DILocation(line: 955, column: 5, scope: !1631)
!1645 = !DILocalVariable(name: "u", scope: !1631, file: !1, line: 958, type: !609)
!1646 = !DILocation(line: 958, column: 5, scope: !1631)
!1647 = !DILocalVariable(name: "v", scope: !1631, file: !1, line: 959, type: !609)
!1648 = !DILocation(line: 959, column: 5, scope: !1631)
!1649 = !DILocalVariable(name: "nan", scope: !1631, file: !1, line: 962, type: !617)
!1650 = !DILocation(line: 962, column: 5, scope: !1631)
!1651 = !DILocation(line: 962, column: 11, scope: !1631)
!1652 = !DILocation(line: 965, column: 9, scope: !1631)
!1653 = !DILocation(line: 966, column: 10, scope: !1631)
!1654 = !DILocation(line: 966, column: 3, scope: !1631)
!1655 = !DILocation(line: 970, column: 7, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1631, file: !1, line: 966, column: 16)
!1657 = !DILocation(line: 987, column: 7, scope: !1656)
!1658 = !DILocation(line: 1014, column: 29, scope: !1656)
!1659 = !DILocation(line: 1014, column: 14, scope: !1656)
!1660 = !DILocation(line: 1014, column: 13, scope: !1656)
!1661 = !DILocation(line: 1015, column: 11, scope: !1662)
!1662 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 1015, column: 11)
!1663 = !DILocation(line: 1015, column: 18, scope: !1662)
!1664 = !DILocation(line: 1015, column: 11, scope: !1656)
!1665 = !DILocation(line: 1016, column: 16, scope: !1662)
!1666 = !DILocation(line: 1016, column: 9, scope: !1662)
!1667 = !DILocation(line: 1017, column: 32, scope: !1656)
!1668 = !DILocation(line: 1017, column: 14, scope: !1656)
!1669 = !DILocation(line: 1018, column: 43, scope: !1656)
!1670 = !DILocation(line: 1018, column: 51, scope: !1656)
!1671 = !DILocation(line: 1018, column: 57, scope: !1656)
!1672 = !DILocation(line: 1018, column: 25, scope: !1656)
!1673 = !DILocation(line: 1018, column: 33, scope: !1656)
!1674 = !DILocation(line: 1018, column: 41, scope: !1656)
!1675 = !DILocation(line: 1018, column: 7, scope: !1656)
!1676 = !DILocation(line: 1018, column: 15, scope: !1656)
!1677 = !DILocation(line: 1018, column: 23, scope: !1656)
!1678 = !DILocation(line: 1019, column: 32, scope: !1656)
!1679 = !DILocation(line: 1019, column: 40, scope: !1656)
!1680 = !DILocation(line: 1019, column: 55, scope: !1656)
!1681 = !DILocation(line: 1019, column: 7, scope: !1656)
!1682 = !DILocation(line: 1019, column: 15, scope: !1656)
!1683 = !DILocation(line: 1019, column: 30, scope: !1656)
!1684 = !DILocation(line: 1020, column: 22, scope: !1656)
!1685 = !DILocation(line: 1020, column: 7, scope: !1656)
!1686 = !DILocation(line: 1020, column: 15, scope: !1656)
!1687 = !DILocation(line: 1020, column: 20, scope: !1656)
!1688 = !DILocation(line: 1021, column: 7, scope: !1656)
!1689 = !DILocation(line: 1021, column: 15, scope: !1656)
!1690 = !DILocation(line: 1021, column: 20, scope: !1656)
!1691 = !DILocation(line: 1022, column: 7, scope: !1656)
!1692 = !DILocation(line: 1022, column: 15, scope: !1656)
!1693 = !DILocation(line: 1022, column: 25, scope: !1656)
!1694 = !DILocation(line: 1023, column: 7, scope: !1656)
!1695 = !DILocation(line: 1026, column: 10, scope: !1631)
!1696 = !DILocation(line: 1026, column: 3, scope: !1631)
!1697 = !DILocation(line: 1032, column: 26, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1031, column: 7)
!1699 = distinct !DILexicalBlock(scope: !1631, file: !1, line: 1026, column: 16)
!1700 = !DILocation(line: 1032, column: 34, scope: !1698)
!1701 = !DILocation(line: 1032, column: 40, scope: !1698)
!1702 = !DILocation(line: 1032, column: 9, scope: !1698)
!1703 = !DILocation(line: 1032, column: 17, scope: !1698)
!1704 = !DILocation(line: 1032, column: 24, scope: !1698)
!1705 = !DILocation(line: 1033, column: 21, scope: !1698)
!1706 = !DILocation(line: 1033, column: 29, scope: !1698)
!1707 = !DILocation(line: 1033, column: 31, scope: !1698)
!1708 = !DILocation(line: 1033, column: 9, scope: !1698)
!1709 = !DILocation(line: 1033, column: 17, scope: !1698)
!1710 = !DILocation(line: 1033, column: 19, scope: !1698)
!1711 = !DILocation(line: 1034, column: 35, scope: !1698)
!1712 = !DILocation(line: 1034, column: 24, scope: !1698)
!1713 = !DILocation(line: 1034, column: 9, scope: !1698)
!1714 = !DILocation(line: 1034, column: 17, scope: !1698)
!1715 = !DILocation(line: 1034, column: 23, scope: !1698)
!1716 = !DILocation(line: 1036, column: 13, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1698, file: !1, line: 1036, column: 13)
!1718 = !DILocation(line: 1036, column: 21, scope: !1717)
!1719 = !DILocation(line: 1036, column: 28, scope: !1717)
!1720 = !DILocation(line: 1036, column: 13, scope: !1698)
!1721 = !DILocation(line: 1037, column: 36, scope: !1717)
!1722 = !DILocation(line: 1037, column: 18, scope: !1717)
!1723 = !DILocation(line: 1037, column: 11, scope: !1717)
!1724 = !DILocation(line: 1038, column: 47, scope: !1698)
!1725 = !DILocation(line: 1038, column: 53, scope: !1698)
!1726 = !DILocation(line: 1038, column: 27, scope: !1698)
!1727 = !DILocation(line: 1038, column: 35, scope: !1698)
!1728 = !DILocation(line: 1038, column: 45, scope: !1698)
!1729 = !DILocation(line: 1038, column: 9, scope: !1698)
!1730 = !DILocation(line: 1038, column: 17, scope: !1698)
!1731 = !DILocation(line: 1038, column: 25, scope: !1698)
!1732 = !DILocation(line: 1039, column: 9, scope: !1698)
!1733 = !DILocalVariable(name: "sigma", scope: !1734, file: !1, line: 1046, type: !617)
!1734 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1045, column: 7)
!1735 = !DILocation(line: 1046, column: 11, scope: !1734)
!1736 = !DILocation(line: 1046, column: 24, scope: !1734)
!1737 = !DILocation(line: 1046, column: 30, scope: !1734)
!1738 = !DILocation(line: 1046, column: 19, scope: !1734)
!1739 = !DILocalVariable(name: "sigma2", scope: !1734, file: !1, line: 1047, type: !617)
!1740 = !DILocation(line: 1047, column: 11, scope: !1734)
!1741 = !DILocation(line: 1047, column: 25, scope: !1734)
!1742 = !DILocation(line: 1047, column: 31, scope: !1734)
!1743 = !DILocation(line: 1047, column: 20, scope: !1734)
!1744 = !DILocalVariable(name: "A", scope: !1734, file: !1, line: 1048, type: !617)
!1745 = !DILocation(line: 1048, column: 11, scope: !1734)
!1746 = !DILocalVariable(name: "B", scope: !1734, file: !1, line: 1048, type: !617)
!1747 = !DILocation(line: 1048, column: 14, scope: !1734)
!1748 = !DILocalVariable(name: "R", scope: !1734, file: !1, line: 1048, type: !617)
!1749 = !DILocation(line: 1048, column: 17, scope: !1734)
!1750 = !DILocation(line: 1050, column: 14, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 1050, column: 14)
!1752 = !DILocation(line: 1050, column: 20, scope: !1751)
!1753 = !DILocation(line: 1050, column: 24, scope: !1751)
!1754 = !DILocation(line: 1050, column: 14, scope: !1734)
!1755 = !DILocation(line: 1051, column: 35, scope: !1751)
!1756 = !DILocation(line: 1051, column: 41, scope: !1751)
!1757 = !DILocation(line: 1051, column: 27, scope: !1751)
!1758 = !DILocation(line: 1051, column: 44, scope: !1751)
!1759 = !DILocation(line: 1051, column: 46, scope: !1751)
!1760 = !DILocation(line: 1051, column: 11, scope: !1751)
!1761 = !DILocation(line: 1051, column: 19, scope: !1751)
!1762 = !DILocation(line: 1051, column: 25, scope: !1751)
!1763 = !DILocation(line: 1052, column: 20, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1751, file: !1, line: 1052, column: 19)
!1765 = !DILocation(line: 1052, column: 25, scope: !1764)
!1766 = !DILocation(line: 1052, column: 39, scope: !1764)
!1767 = !DILocation(line: 1052, column: 43, scope: !1764)
!1768 = !DILocation(line: 1052, column: 52, scope: !1764)
!1769 = !DILocation(line: 1052, column: 49, scope: !1764)
!1770 = !DILocation(line: 1052, column: 19, scope: !1751)
!1771 = !DILocation(line: 1053, column: 51, scope: !1764)
!1772 = !DILocation(line: 1053, column: 57, scope: !1764)
!1773 = !DILocation(line: 1053, column: 61, scope: !1764)
!1774 = !DILocation(line: 1053, column: 27, scope: !1764)
!1775 = !DILocation(line: 1053, column: 11, scope: !1764)
!1776 = !DILocation(line: 1053, column: 19, scope: !1764)
!1777 = !DILocation(line: 1053, column: 25, scope: !1764)
!1778 = !DILocation(line: 1055, column: 51, scope: !1764)
!1779 = !DILocation(line: 1055, column: 57, scope: !1764)
!1780 = !DILocation(line: 1055, column: 61, scope: !1764)
!1781 = !DILocation(line: 1055, column: 27, scope: !1764)
!1782 = !DILocation(line: 1055, column: 11, scope: !1764)
!1783 = !DILocation(line: 1055, column: 19, scope: !1764)
!1784 = !DILocation(line: 1055, column: 25, scope: !1764)
!1785 = !DILocation(line: 1056, column: 26, scope: !1734)
!1786 = !DILocation(line: 1056, column: 34, scope: !1734)
!1787 = !DILocation(line: 1056, column: 9, scope: !1734)
!1788 = !DILocation(line: 1056, column: 17, scope: !1734)
!1789 = !DILocation(line: 1056, column: 24, scope: !1734)
!1790 = !DILocation(line: 1057, column: 44, scope: !1734)
!1791 = !DILocation(line: 1057, column: 52, scope: !1734)
!1792 = !DILocation(line: 1057, column: 57, scope: !1734)
!1793 = !DILocation(line: 1057, column: 60, scope: !1734)
!1794 = !DILocation(line: 1057, column: 21, scope: !1734)
!1795 = !DILocation(line: 1057, column: 29, scope: !1734)
!1796 = !DILocation(line: 1057, column: 31, scope: !1734)
!1797 = !DILocation(line: 1057, column: 9, scope: !1734)
!1798 = !DILocation(line: 1057, column: 17, scope: !1734)
!1799 = !DILocation(line: 1057, column: 19, scope: !1734)
!1800 = !DILocation(line: 1058, column: 35, scope: !1734)
!1801 = !DILocation(line: 1058, column: 24, scope: !1734)
!1802 = !DILocation(line: 1058, column: 9, scope: !1734)
!1803 = !DILocation(line: 1058, column: 17, scope: !1734)
!1804 = !DILocation(line: 1058, column: 23, scope: !1734)
!1805 = !DILocation(line: 1060, column: 13, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 1060, column: 13)
!1807 = !DILocation(line: 1060, column: 21, scope: !1806)
!1808 = !DILocation(line: 1060, column: 28, scope: !1806)
!1809 = !DILocation(line: 1060, column: 13, scope: !1734)
!1810 = !DILocation(line: 1061, column: 36, scope: !1806)
!1811 = !DILocation(line: 1061, column: 18, scope: !1806)
!1812 = !DILocation(line: 1061, column: 11, scope: !1806)
!1813 = !DILocation(line: 1070, column: 14, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 1070, column: 14)
!1815 = !DILocation(line: 1070, column: 19, scope: !1814)
!1816 = !DILocation(line: 1070, column: 37, scope: !1814)
!1817 = !DILocation(line: 1070, column: 40, scope: !1814)
!1818 = !DILocation(line: 1070, column: 45, scope: !1814)
!1819 = !DILocation(line: 1070, column: 14, scope: !1734)
!1820 = !DILocation(line: 1072, column: 18, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 1072, column: 18)
!1822 = distinct !DILexicalBlock(scope: !1814, file: !1, line: 1071, column: 11)
!1823 = !DILocation(line: 1072, column: 24, scope: !1821)
!1824 = !DILocation(line: 1072, column: 18, scope: !1822)
!1825 = !DILocation(line: 1073, column: 30, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1821, file: !1, line: 1073, column: 15)
!1827 = !DILocation(line: 1073, column: 29, scope: !1826)
!1828 = !DILocation(line: 1073, column: 36, scope: !1826)
!1829 = !DILocation(line: 1073, column: 35, scope: !1826)
!1830 = !DILocation(line: 1073, column: 24, scope: !1826)
!1831 = !DILocation(line: 1073, column: 19, scope: !1826)
!1832 = !DILocation(line: 1074, column: 46, scope: !1826)
!1833 = !DILocation(line: 1074, column: 45, scope: !1826)
!1834 = !DILocation(line: 1074, column: 52, scope: !1826)
!1835 = !DILocation(line: 1074, column: 51, scope: !1826)
!1836 = !DILocation(line: 1074, column: 34, scope: !1826)
!1837 = !DILocation(line: 1074, column: 19, scope: !1826)
!1838 = !DILocation(line: 1075, column: 24, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 1075, column: 17)
!1840 = !DILocation(line: 1075, column: 31, scope: !1839)
!1841 = !DILocation(line: 1075, column: 39, scope: !1839)
!1842 = !DILocation(line: 1075, column: 30, scope: !1839)
!1843 = !DILocation(line: 1075, column: 29, scope: !1839)
!1844 = !DILocation(line: 1075, column: 23, scope: !1839)
!1845 = !DILocation(line: 1075, column: 42, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1839, file: !1, line: 1075, column: 17)
!1847 = !DILocation(line: 1075, column: 56, scope: !1846)
!1848 = !DILocation(line: 1075, column: 64, scope: !1846)
!1849 = !DILocation(line: 1075, column: 44, scope: !1846)
!1850 = !DILocation(line: 1075, column: 17, scope: !1839)
!1851 = !DILocation(line: 1076, column: 28, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 1076, column: 19)
!1853 = !DILocation(line: 1076, column: 36, scope: !1852)
!1854 = !DILocation(line: 1076, column: 27, scope: !1852)
!1855 = !DILocation(line: 1076, column: 26, scope: !1852)
!1856 = !DILocation(line: 1076, column: 25, scope: !1852)
!1857 = !DILocation(line: 1076, column: 39, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1852, file: !1, line: 1076, column: 19)
!1859 = !DILocation(line: 1076, column: 53, scope: !1858)
!1860 = !DILocation(line: 1076, column: 61, scope: !1858)
!1861 = !DILocation(line: 1076, column: 41, scope: !1858)
!1862 = !DILocation(line: 1076, column: 19, scope: !1852)
!1863 = !DILocation(line: 1077, column: 58, scope: !1858)
!1864 = !DILocation(line: 1077, column: 60, scope: !1858)
!1865 = !DILocation(line: 1077, column: 59, scope: !1858)
!1866 = !DILocation(line: 1077, column: 62, scope: !1858)
!1867 = !DILocation(line: 1077, column: 64, scope: !1858)
!1868 = !DILocation(line: 1077, column: 63, scope: !1858)
!1869 = !DILocation(line: 1077, column: 61, scope: !1858)
!1870 = !DILocation(line: 1077, column: 49, scope: !1858)
!1871 = !DILocation(line: 1077, column: 47, scope: !1858)
!1872 = !DILocation(line: 1077, column: 68, scope: !1858)
!1873 = !DILocation(line: 1077, column: 67, scope: !1858)
!1874 = !DILocation(line: 1077, column: 43, scope: !1858)
!1875 = !DILocation(line: 1077, column: 71, scope: !1858)
!1876 = !DILocation(line: 1077, column: 70, scope: !1858)
!1877 = !DILocation(line: 1077, column: 23, scope: !1858)
!1878 = !DILocation(line: 1077, column: 31, scope: !1858)
!1879 = !DILocation(line: 1077, column: 38, scope: !1858)
!1880 = !DILocation(line: 1077, column: 41, scope: !1858)
!1881 = !DILocation(line: 1076, column: 65, scope: !1858)
!1882 = !DILocation(line: 1076, column: 70, scope: !1858)
!1883 = !DILocation(line: 1076, column: 19, scope: !1858)
!1884 = distinct !{!1884, !1862, !1885}
!1885 = !DILocation(line: 1077, column: 71, scope: !1852)
!1886 = !DILocation(line: 1075, column: 68, scope: !1846)
!1887 = !DILocation(line: 1075, column: 17, scope: !1846)
!1888 = distinct !{!1888, !1850, !1889}
!1889 = !DILocation(line: 1077, column: 71, scope: !1839)
!1890 = !DILocation(line: 1078, column: 15, scope: !1826)
!1891 = !DILocation(line: 1080, column: 42, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1821, file: !1, line: 1080, column: 15)
!1893 = !DILocation(line: 1080, column: 50, scope: !1892)
!1894 = !DILocation(line: 1081, column: 19, scope: !1892)
!1895 = !DILocation(line: 1081, column: 27, scope: !1892)
!1896 = !DILocation(line: 1081, column: 33, scope: !1892)
!1897 = !DILocation(line: 1081, column: 41, scope: !1892)
!1898 = !DILocation(line: 1081, column: 32, scope: !1892)
!1899 = !DILocation(line: 1081, column: 47, scope: !1892)
!1900 = !DILocation(line: 1080, column: 24, scope: !1892)
!1901 = !DILocation(line: 1082, column: 17, scope: !1892)
!1902 = !DILocation(line: 1082, column: 25, scope: !1892)
!1903 = !DILocation(line: 1082, column: 32, scope: !1892)
!1904 = !DILocation(line: 1082, column: 40, scope: !1892)
!1905 = !DILocation(line: 1082, column: 42, scope: !1892)
!1906 = !DILocation(line: 1082, column: 50, scope: !1892)
!1907 = !DILocation(line: 1082, column: 52, scope: !1892)
!1908 = !DILocation(line: 1082, column: 60, scope: !1892)
!1909 = !DILocation(line: 1082, column: 51, scope: !1892)
!1910 = !DILocation(line: 1082, column: 41, scope: !1892)
!1911 = !DILocation(line: 1082, column: 67, scope: !1892)
!1912 = !DILocation(line: 1084, column: 11, scope: !1822)
!1913 = !DILocation(line: 1086, column: 14, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 1086, column: 14)
!1915 = !DILocation(line: 1086, column: 19, scope: !1914)
!1916 = !DILocation(line: 1086, column: 14, scope: !1734)
!1917 = !DILocation(line: 1088, column: 18, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 1088, column: 18)
!1919 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 1087, column: 11)
!1920 = !DILocation(line: 1088, column: 25, scope: !1918)
!1921 = !DILocation(line: 1088, column: 18, scope: !1919)
!1922 = !DILocation(line: 1089, column: 25, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1918, file: !1, line: 1089, column: 15)
!1924 = !DILocation(line: 1089, column: 23, scope: !1923)
!1925 = !DILocation(line: 1090, column: 30, scope: !1923)
!1926 = !DILocation(line: 1090, column: 29, scope: !1923)
!1927 = !DILocation(line: 1090, column: 36, scope: !1923)
!1928 = !DILocation(line: 1090, column: 35, scope: !1923)
!1929 = !DILocation(line: 1090, column: 24, scope: !1923)
!1930 = !DILocation(line: 1090, column: 19, scope: !1923)
!1931 = !DILocation(line: 1091, column: 46, scope: !1923)
!1932 = !DILocation(line: 1091, column: 45, scope: !1923)
!1933 = !DILocation(line: 1091, column: 52, scope: !1923)
!1934 = !DILocation(line: 1091, column: 51, scope: !1923)
!1935 = !DILocation(line: 1091, column: 34, scope: !1923)
!1936 = !DILocation(line: 1091, column: 19, scope: !1923)
!1937 = !DILocation(line: 1092, column: 24, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1923, file: !1, line: 1092, column: 17)
!1939 = !DILocation(line: 1092, column: 31, scope: !1938)
!1940 = !DILocation(line: 1092, column: 39, scope: !1938)
!1941 = !DILocation(line: 1092, column: 30, scope: !1938)
!1942 = !DILocation(line: 1092, column: 29, scope: !1938)
!1943 = !DILocation(line: 1092, column: 23, scope: !1938)
!1944 = !DILocation(line: 1092, column: 42, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1938, file: !1, line: 1092, column: 17)
!1946 = !DILocation(line: 1092, column: 56, scope: !1945)
!1947 = !DILocation(line: 1092, column: 64, scope: !1945)
!1948 = !DILocation(line: 1092, column: 44, scope: !1945)
!1949 = !DILocation(line: 1092, column: 17, scope: !1938)
!1950 = !DILocation(line: 1093, column: 28, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 1093, column: 19)
!1952 = !DILocation(line: 1093, column: 36, scope: !1951)
!1953 = !DILocation(line: 1093, column: 27, scope: !1951)
!1954 = !DILocation(line: 1093, column: 26, scope: !1951)
!1955 = !DILocation(line: 1093, column: 25, scope: !1951)
!1956 = !DILocation(line: 1093, column: 39, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1951, file: !1, line: 1093, column: 19)
!1958 = !DILocation(line: 1093, column: 53, scope: !1957)
!1959 = !DILocation(line: 1093, column: 61, scope: !1957)
!1960 = !DILocation(line: 1093, column: 41, scope: !1957)
!1961 = !DILocation(line: 1093, column: 19, scope: !1951)
!1962 = !DILocation(line: 1094, column: 57, scope: !1957)
!1963 = !DILocation(line: 1094, column: 59, scope: !1957)
!1964 = !DILocation(line: 1094, column: 58, scope: !1957)
!1965 = !DILocation(line: 1094, column: 61, scope: !1957)
!1966 = !DILocation(line: 1094, column: 63, scope: !1957)
!1967 = !DILocation(line: 1094, column: 62, scope: !1957)
!1968 = !DILocation(line: 1094, column: 60, scope: !1957)
!1969 = !DILocation(line: 1094, column: 48, scope: !1957)
!1970 = !DILocation(line: 1094, column: 46, scope: !1957)
!1971 = !DILocation(line: 1094, column: 67, scope: !1957)
!1972 = !DILocation(line: 1094, column: 66, scope: !1957)
!1973 = !DILocation(line: 1094, column: 42, scope: !1957)
!1974 = !DILocation(line: 1094, column: 70, scope: !1957)
!1975 = !DILocation(line: 1094, column: 69, scope: !1957)
!1976 = !DILocation(line: 1094, column: 21, scope: !1957)
!1977 = !DILocation(line: 1094, column: 29, scope: !1957)
!1978 = !DILocation(line: 1094, column: 36, scope: !1957)
!1979 = !DILocation(line: 1094, column: 39, scope: !1957)
!1980 = !DILocation(line: 1093, column: 65, scope: !1957)
!1981 = !DILocation(line: 1093, column: 70, scope: !1957)
!1982 = !DILocation(line: 1093, column: 19, scope: !1957)
!1983 = distinct !{!1983, !1961, !1984}
!1984 = !DILocation(line: 1094, column: 70, scope: !1951)
!1985 = !DILocation(line: 1092, column: 68, scope: !1945)
!1986 = !DILocation(line: 1092, column: 17, scope: !1945)
!1987 = distinct !{!1987, !1949, !1988}
!1988 = !DILocation(line: 1094, column: 70, scope: !1938)
!1989 = !DILocation(line: 1095, column: 15, scope: !1923)
!1990 = !DILocation(line: 1097, column: 15, scope: !1918)
!1991 = !DILocation(line: 1097, column: 23, scope: !1918)
!1992 = !DILocation(line: 1097, column: 30, scope: !1918)
!1993 = !DILocation(line: 1097, column: 38, scope: !1918)
!1994 = !DILocation(line: 1097, column: 40, scope: !1918)
!1995 = !DILocation(line: 1097, column: 48, scope: !1918)
!1996 = !DILocation(line: 1097, column: 50, scope: !1918)
!1997 = !DILocation(line: 1097, column: 58, scope: !1918)
!1998 = !DILocation(line: 1097, column: 49, scope: !1918)
!1999 = !DILocation(line: 1097, column: 39, scope: !1918)
!2000 = !DILocation(line: 1097, column: 65, scope: !1918)
!2001 = !DILocation(line: 1098, column: 11, scope: !1919)
!2002 = !DILocation(line: 1100, column: 14, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 1100, column: 14)
!2004 = !DILocation(line: 1100, column: 19, scope: !2003)
!2005 = !DILocation(line: 1100, column: 14, scope: !1734)
!2006 = !DILocation(line: 1102, column: 18, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2008, file: !1, line: 1102, column: 18)
!2008 = distinct !DILexicalBlock(scope: !2003, file: !1, line: 1101, column: 11)
!2009 = !DILocation(line: 1102, column: 24, scope: !2007)
!2010 = !DILocation(line: 1102, column: 18, scope: !2008)
!2011 = !DILocation(line: 1103, column: 30, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2007, file: !1, line: 1103, column: 15)
!2013 = !DILocation(line: 1103, column: 29, scope: !2012)
!2014 = !DILocation(line: 1103, column: 36, scope: !2012)
!2015 = !DILocation(line: 1103, column: 35, scope: !2012)
!2016 = !DILocation(line: 1103, column: 24, scope: !2012)
!2017 = !DILocation(line: 1103, column: 19, scope: !2012)
!2018 = !DILocation(line: 1104, column: 45, scope: !2012)
!2019 = !DILocation(line: 1104, column: 44, scope: !2012)
!2020 = !DILocation(line: 1104, column: 51, scope: !2012)
!2021 = !DILocation(line: 1104, column: 50, scope: !2012)
!2022 = !DILocation(line: 1104, column: 57, scope: !2012)
!2023 = !DILocation(line: 1104, column: 56, scope: !2012)
!2024 = !DILocation(line: 1104, column: 63, scope: !2012)
!2025 = !DILocation(line: 1104, column: 62, scope: !2012)
!2026 = !DILocation(line: 1104, column: 34, scope: !2012)
!2027 = !DILocation(line: 1104, column: 19, scope: !2012)
!2028 = !DILocation(line: 1105, column: 24, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2012, file: !1, line: 1105, column: 17)
!2030 = !DILocation(line: 1105, column: 31, scope: !2029)
!2031 = !DILocation(line: 1105, column: 39, scope: !2029)
!2032 = !DILocation(line: 1105, column: 30, scope: !2029)
!2033 = !DILocation(line: 1105, column: 29, scope: !2029)
!2034 = !DILocation(line: 1105, column: 23, scope: !2029)
!2035 = !DILocation(line: 1105, column: 42, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2029, file: !1, line: 1105, column: 17)
!2037 = !DILocation(line: 1105, column: 56, scope: !2036)
!2038 = !DILocation(line: 1105, column: 64, scope: !2036)
!2039 = !DILocation(line: 1105, column: 44, scope: !2036)
!2040 = !DILocation(line: 1105, column: 17, scope: !2029)
!2041 = !DILocation(line: 1106, column: 28, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2036, file: !1, line: 1106, column: 19)
!2043 = !DILocation(line: 1106, column: 36, scope: !2042)
!2044 = !DILocation(line: 1106, column: 27, scope: !2042)
!2045 = !DILocation(line: 1106, column: 26, scope: !2042)
!2046 = !DILocation(line: 1106, column: 25, scope: !2042)
!2047 = !DILocation(line: 1106, column: 39, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2042, file: !1, line: 1106, column: 19)
!2049 = !DILocation(line: 1106, column: 53, scope: !2048)
!2050 = !DILocation(line: 1106, column: 61, scope: !2048)
!2051 = !DILocation(line: 1106, column: 41, scope: !2048)
!2052 = !DILocation(line: 1106, column: 19, scope: !2042)
!2053 = !DILocation(line: 1107, column: 37, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2048, file: !1, line: 1107, column: 21)
!2055 = !DILocation(line: 1107, column: 39, scope: !2054)
!2056 = !DILocation(line: 1107, column: 38, scope: !2054)
!2057 = !DILocation(line: 1107, column: 41, scope: !2054)
!2058 = !DILocation(line: 1107, column: 43, scope: !2054)
!2059 = !DILocation(line: 1107, column: 42, scope: !2054)
!2060 = !DILocation(line: 1107, column: 40, scope: !2054)
!2061 = !DILocation(line: 1107, column: 28, scope: !2054)
!2062 = !DILocation(line: 1107, column: 47, scope: !2054)
!2063 = !DILocation(line: 1107, column: 46, scope: !2054)
!2064 = !DILocation(line: 1107, column: 25, scope: !2054)
!2065 = !DILocation(line: 1108, column: 46, scope: !2054)
!2066 = !DILocation(line: 1108, column: 45, scope: !2054)
!2067 = !DILocation(line: 1108, column: 54, scope: !2054)
!2068 = !DILocation(line: 1108, column: 53, scope: !2054)
!2069 = !DILocation(line: 1108, column: 49, scope: !2054)
!2070 = !DILocation(line: 1108, column: 48, scope: !2054)
!2071 = !DILocation(line: 1108, column: 57, scope: !2054)
!2072 = !DILocation(line: 1108, column: 56, scope: !2054)
!2073 = !DILocation(line: 1108, column: 23, scope: !2054)
!2074 = !DILocation(line: 1108, column: 31, scope: !2054)
!2075 = !DILocation(line: 1108, column: 38, scope: !2054)
!2076 = !DILocation(line: 1108, column: 41, scope: !2054)
!2077 = !DILocation(line: 1109, column: 21, scope: !2054)
!2078 = !DILocation(line: 1106, column: 65, scope: !2048)
!2079 = !DILocation(line: 1106, column: 70, scope: !2048)
!2080 = !DILocation(line: 1106, column: 19, scope: !2048)
!2081 = distinct !{!2081, !2052, !2082}
!2082 = !DILocation(line: 1109, column: 21, scope: !2042)
!2083 = !DILocation(line: 1105, column: 68, scope: !2036)
!2084 = !DILocation(line: 1105, column: 17, scope: !2036)
!2085 = distinct !{!2085, !2040, !2086}
!2086 = !DILocation(line: 1109, column: 21, scope: !2029)
!2087 = !DILocation(line: 1110, column: 15, scope: !2012)
!2088 = !DILocation(line: 1112, column: 42, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2007, file: !1, line: 1112, column: 15)
!2090 = !DILocation(line: 1112, column: 50, scope: !2089)
!2091 = !DILocation(line: 1113, column: 19, scope: !2089)
!2092 = !DILocation(line: 1113, column: 27, scope: !2089)
!2093 = !DILocation(line: 1113, column: 33, scope: !2089)
!2094 = !DILocation(line: 1113, column: 41, scope: !2089)
!2095 = !DILocation(line: 1113, column: 32, scope: !2089)
!2096 = !DILocation(line: 1113, column: 47, scope: !2089)
!2097 = !DILocation(line: 1112, column: 24, scope: !2089)
!2098 = !DILocation(line: 1114, column: 17, scope: !2089)
!2099 = !DILocation(line: 1114, column: 25, scope: !2089)
!2100 = !DILocation(line: 1114, column: 32, scope: !2089)
!2101 = !DILocation(line: 1114, column: 40, scope: !2089)
!2102 = !DILocation(line: 1114, column: 42, scope: !2089)
!2103 = !DILocation(line: 1114, column: 50, scope: !2089)
!2104 = !DILocation(line: 1114, column: 52, scope: !2089)
!2105 = !DILocation(line: 1114, column: 60, scope: !2089)
!2106 = !DILocation(line: 1114, column: 51, scope: !2089)
!2107 = !DILocation(line: 1114, column: 41, scope: !2089)
!2108 = !DILocation(line: 1114, column: 67, scope: !2089)
!2109 = !DILocation(line: 1116, column: 11, scope: !2008)
!2110 = !DILocation(line: 1131, column: 28, scope: !1734)
!2111 = !DILocation(line: 1131, column: 9, scope: !1734)
!2112 = !DILocation(line: 1132, column: 25, scope: !1734)
!2113 = !DILocation(line: 1132, column: 9, scope: !1734)
!2114 = !DILocation(line: 1134, column: 9, scope: !1734)
!2115 = !DILocalVariable(name: "sigma", scope: !2116, file: !1, line: 1138, type: !617)
!2116 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1137, column: 7)
!2117 = !DILocation(line: 1138, column: 11, scope: !2116)
!2118 = !DILocation(line: 1138, column: 24, scope: !2116)
!2119 = !DILocation(line: 1138, column: 30, scope: !2116)
!2120 = !DILocation(line: 1138, column: 19, scope: !2116)
!2121 = !DILocalVariable(name: "alpha", scope: !2116, file: !1, line: 1139, type: !617)
!2122 = !DILocation(line: 1139, column: 11, scope: !2116)
!2123 = !DILocalVariable(name: "beta", scope: !2116, file: !1, line: 1139, type: !617)
!2124 = !DILocation(line: 1139, column: 18, scope: !2116)
!2125 = !DILocation(line: 1141, column: 14, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2116, file: !1, line: 1141, column: 14)
!2127 = !DILocation(line: 1141, column: 20, scope: !2126)
!2128 = !DILocation(line: 1141, column: 24, scope: !2126)
!2129 = !DILocation(line: 1141, column: 14, scope: !2116)
!2130 = !DILocation(line: 1142, column: 35, scope: !2126)
!2131 = !DILocation(line: 1142, column: 41, scope: !2126)
!2132 = !DILocation(line: 1142, column: 27, scope: !2126)
!2133 = !DILocation(line: 1142, column: 44, scope: !2126)
!2134 = !DILocation(line: 1142, column: 46, scope: !2126)
!2135 = !DILocation(line: 1142, column: 11, scope: !2126)
!2136 = !DILocation(line: 1142, column: 19, scope: !2126)
!2137 = !DILocation(line: 1142, column: 25, scope: !2126)
!2138 = !DILocation(line: 1144, column: 51, scope: !2126)
!2139 = !DILocation(line: 1144, column: 57, scope: !2126)
!2140 = !DILocation(line: 1144, column: 61, scope: !2126)
!2141 = !DILocation(line: 1144, column: 27, scope: !2126)
!2142 = !DILocation(line: 1144, column: 11, scope: !2126)
!2143 = !DILocation(line: 1144, column: 19, scope: !2126)
!2144 = !DILocation(line: 1144, column: 25, scope: !2126)
!2145 = !DILocation(line: 1145, column: 9, scope: !2116)
!2146 = !DILocation(line: 1145, column: 17, scope: !2116)
!2147 = !DILocation(line: 1145, column: 24, scope: !2116)
!2148 = !DILocation(line: 1146, column: 32, scope: !2116)
!2149 = !DILocation(line: 1146, column: 40, scope: !2116)
!2150 = !DILocation(line: 1146, column: 45, scope: !2116)
!2151 = !DILocation(line: 1146, column: 48, scope: !2116)
!2152 = !DILocation(line: 1146, column: 9, scope: !2116)
!2153 = !DILocation(line: 1146, column: 17, scope: !2116)
!2154 = !DILocation(line: 1146, column: 19, scope: !2116)
!2155 = !DILocation(line: 1147, column: 9, scope: !2116)
!2156 = !DILocation(line: 1147, column: 17, scope: !2116)
!2157 = !DILocation(line: 1147, column: 19, scope: !2116)
!2158 = !DILocation(line: 1148, column: 34, scope: !2116)
!2159 = !DILocation(line: 1148, column: 42, scope: !2116)
!2160 = !DILocation(line: 1148, column: 57, scope: !2116)
!2161 = !DILocation(line: 1148, column: 9, scope: !2116)
!2162 = !DILocation(line: 1148, column: 17, scope: !2116)
!2163 = !DILocation(line: 1148, column: 32, scope: !2116)
!2164 = !DILocation(line: 1149, column: 56, scope: !2116)
!2165 = !DILocation(line: 1149, column: 64, scope: !2116)
!2166 = !DILocation(line: 1150, column: 11, scope: !2116)
!2167 = !DILocation(line: 1150, column: 19, scope: !2116)
!2168 = !DILocation(line: 1150, column: 25, scope: !2116)
!2169 = !DILocation(line: 1149, column: 35, scope: !2116)
!2170 = !DILocation(line: 1149, column: 24, scope: !2116)
!2171 = !DILocation(line: 1149, column: 9, scope: !2116)
!2172 = !DILocation(line: 1149, column: 17, scope: !2116)
!2173 = !DILocation(line: 1149, column: 23, scope: !2116)
!2174 = !DILocation(line: 1151, column: 13, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2116, file: !1, line: 1151, column: 13)
!2176 = !DILocation(line: 1151, column: 21, scope: !2175)
!2177 = !DILocation(line: 1151, column: 28, scope: !2175)
!2178 = !DILocation(line: 1151, column: 13, scope: !2116)
!2179 = !DILocation(line: 1152, column: 36, scope: !2175)
!2180 = !DILocation(line: 1152, column: 18, scope: !2175)
!2181 = !DILocation(line: 1152, column: 11, scope: !2175)
!2182 = !DILocation(line: 1170, column: 24, scope: !2116)
!2183 = !DILocation(line: 1170, column: 32, scope: !2116)
!2184 = !DILocation(line: 1170, column: 37, scope: !2116)
!2185 = !DILocation(line: 1170, column: 48, scope: !2116)
!2186 = !DILocation(line: 1170, column: 51, scope: !2116)
!2187 = !DILocation(line: 1170, column: 11, scope: !2116)
!2188 = !DILocation(line: 1171, column: 34, scope: !2116)
!2189 = !DILocation(line: 1171, column: 42, scope: !2116)
!2190 = !DILocation(line: 1172, column: 12, scope: !2116)
!2191 = !DILocation(line: 1172, column: 20, scope: !2116)
!2192 = !DILocation(line: 1172, column: 26, scope: !2116)
!2193 = !DILocation(line: 1172, column: 34, scope: !2116)
!2194 = !DILocation(line: 1172, column: 25, scope: !2116)
!2195 = !DILocation(line: 1172, column: 40, scope: !2116)
!2196 = !DILocation(line: 1171, column: 16, scope: !2116)
!2197 = !DILocation(line: 1174, column: 14, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2116, file: !1, line: 1174, column: 14)
!2199 = !DILocation(line: 1174, column: 20, scope: !2198)
!2200 = !DILocation(line: 1174, column: 14, scope: !2116)
!2201 = !DILocation(line: 1175, column: 19, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2198, file: !1, line: 1175, column: 11)
!2203 = !DILocation(line: 1176, column: 30, scope: !2202)
!2204 = !DILocation(line: 1176, column: 29, scope: !2202)
!2205 = !DILocation(line: 1176, column: 36, scope: !2202)
!2206 = !DILocation(line: 1176, column: 35, scope: !2202)
!2207 = !DILocation(line: 1176, column: 24, scope: !2202)
!2208 = !DILocation(line: 1176, column: 19, scope: !2202)
!2209 = !DILocation(line: 1177, column: 46, scope: !2202)
!2210 = !DILocation(line: 1177, column: 45, scope: !2202)
!2211 = !DILocation(line: 1177, column: 32, scope: !2202)
!2212 = !DILocation(line: 1177, column: 17, scope: !2202)
!2213 = !DILocation(line: 1178, column: 22, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 1178, column: 13)
!2215 = !DILocation(line: 1178, column: 21, scope: !2214)
!2216 = !DILocation(line: 1178, column: 20, scope: !2214)
!2217 = !DILocation(line: 1178, column: 19, scope: !2214)
!2218 = !DILocation(line: 1178, column: 25, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 1178, column: 13)
!2220 = !DILocation(line: 1178, column: 30, scope: !2219)
!2221 = !DILocation(line: 1178, column: 27, scope: !2219)
!2222 = !DILocation(line: 1178, column: 13, scope: !2214)
!2223 = !DILocation(line: 1180, column: 46, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2219, file: !1, line: 1178, column: 38)
!2225 = !DILocation(line: 1180, column: 48, scope: !2224)
!2226 = !DILocation(line: 1180, column: 47, scope: !2224)
!2227 = !DILocation(line: 1180, column: 37, scope: !2224)
!2228 = !DILocation(line: 1180, column: 35, scope: !2224)
!2229 = !DILocation(line: 1180, column: 52, scope: !2224)
!2230 = !DILocation(line: 1180, column: 51, scope: !2224)
!2231 = !DILocation(line: 1180, column: 31, scope: !2224)
!2232 = !DILocation(line: 1180, column: 59, scope: !2224)
!2233 = !DILocation(line: 1180, column: 58, scope: !2224)
!2234 = !DILocation(line: 1179, column: 15, scope: !2224)
!2235 = !DILocation(line: 1179, column: 23, scope: !2224)
!2236 = !DILocation(line: 1179, column: 31, scope: !2224)
!2237 = !DILocation(line: 1179, column: 33, scope: !2224)
!2238 = !DILocation(line: 1179, column: 32, scope: !2224)
!2239 = !DILocation(line: 1179, column: 35, scope: !2224)
!2240 = !DILocation(line: 1179, column: 48, scope: !2224)
!2241 = !DILocation(line: 1181, column: 13, scope: !2224)
!2242 = !DILocation(line: 1178, column: 34, scope: !2219)
!2243 = !DILocation(line: 1178, column: 13, scope: !2219)
!2244 = distinct !{!2244, !2222, !2245}
!2245 = !DILocation(line: 1181, column: 13, scope: !2214)
!2246 = !DILocation(line: 1182, column: 11, scope: !2202)
!2247 = !DILocation(line: 1184, column: 11, scope: !2198)
!2248 = !DILocation(line: 1184, column: 19, scope: !2198)
!2249 = !DILocation(line: 1184, column: 26, scope: !2198)
!2250 = !DILocation(line: 1184, column: 34, scope: !2198)
!2251 = !DILocation(line: 1184, column: 36, scope: !2198)
!2252 = !DILocation(line: 1184, column: 44, scope: !2198)
!2253 = !DILocation(line: 1184, column: 46, scope: !2198)
!2254 = !DILocation(line: 1184, column: 54, scope: !2198)
!2255 = !DILocation(line: 1184, column: 45, scope: !2198)
!2256 = !DILocation(line: 1184, column: 35, scope: !2198)
!2257 = !DILocation(line: 1184, column: 61, scope: !2198)
!2258 = !DILocation(line: 1216, column: 28, scope: !2116)
!2259 = !DILocation(line: 1216, column: 9, scope: !2116)
!2260 = !DILocation(line: 1217, column: 25, scope: !2116)
!2261 = !DILocation(line: 1217, column: 9, scope: !2116)
!2262 = !DILocation(line: 1220, column: 26, scope: !2116)
!2263 = !DILocation(line: 1220, column: 34, scope: !2116)
!2264 = !DILocation(line: 1220, column: 40, scope: !2116)
!2265 = !DILocation(line: 1220, column: 9, scope: !2116)
!2266 = !DILocation(line: 1221, column: 9, scope: !2116)
!2267 = !DILocalVariable(name: "sigma", scope: !2268, file: !1, line: 1225, type: !617)
!2268 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1224, column: 7)
!2269 = !DILocation(line: 1225, column: 11, scope: !2268)
!2270 = !DILocation(line: 1225, column: 24, scope: !2268)
!2271 = !DILocation(line: 1225, column: 30, scope: !2268)
!2272 = !DILocation(line: 1225, column: 19, scope: !2268)
!2273 = !DILocalVariable(name: "A", scope: !2268, file: !1, line: 1226, type: !617)
!2274 = !DILocation(line: 1226, column: 11, scope: !2268)
!2275 = !DILocation(line: 1228, column: 14, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 1228, column: 14)
!2277 = !DILocation(line: 1228, column: 20, scope: !2276)
!2278 = !DILocation(line: 1228, column: 24, scope: !2276)
!2279 = !DILocation(line: 1228, column: 14, scope: !2268)
!2280 = !DILocation(line: 1229, column: 52, scope: !2276)
!2281 = !DILocation(line: 1229, column: 58, scope: !2276)
!2282 = !DILocation(line: 1229, column: 62, scope: !2276)
!2283 = !DILocation(line: 1229, column: 28, scope: !2276)
!2284 = !DILocation(line: 1229, column: 68, scope: !2276)
!2285 = !DILocation(line: 1229, column: 71, scope: !2276)
!2286 = !DILocation(line: 1229, column: 73, scope: !2276)
!2287 = !DILocation(line: 1229, column: 11, scope: !2276)
!2288 = !DILocation(line: 1229, column: 19, scope: !2276)
!2289 = !DILocation(line: 1229, column: 25, scope: !2276)
!2290 = !DILocation(line: 1231, column: 35, scope: !2276)
!2291 = !DILocation(line: 1231, column: 41, scope: !2276)
!2292 = !DILocation(line: 1231, column: 27, scope: !2276)
!2293 = !DILocation(line: 1231, column: 11, scope: !2276)
!2294 = !DILocation(line: 1231, column: 19, scope: !2276)
!2295 = !DILocation(line: 1231, column: 25, scope: !2276)
!2296 = !DILocation(line: 1232, column: 21, scope: !2268)
!2297 = !DILocation(line: 1232, column: 29, scope: !2268)
!2298 = !DILocation(line: 1232, column: 31, scope: !2268)
!2299 = !DILocation(line: 1232, column: 9, scope: !2268)
!2300 = !DILocation(line: 1232, column: 17, scope: !2268)
!2301 = !DILocation(line: 1232, column: 19, scope: !2268)
!2302 = !DILocation(line: 1233, column: 9, scope: !2268)
!2303 = !DILocation(line: 1233, column: 17, scope: !2268)
!2304 = !DILocation(line: 1233, column: 24, scope: !2268)
!2305 = !DILocation(line: 1234, column: 34, scope: !2268)
!2306 = !DILocation(line: 1234, column: 42, scope: !2268)
!2307 = !DILocation(line: 1234, column: 57, scope: !2268)
!2308 = !DILocation(line: 1234, column: 9, scope: !2268)
!2309 = !DILocation(line: 1234, column: 17, scope: !2268)
!2310 = !DILocation(line: 1234, column: 32, scope: !2268)
!2311 = !DILocation(line: 1235, column: 56, scope: !2268)
!2312 = !DILocation(line: 1235, column: 64, scope: !2268)
!2313 = !DILocation(line: 1236, column: 11, scope: !2268)
!2314 = !DILocation(line: 1236, column: 19, scope: !2268)
!2315 = !DILocation(line: 1236, column: 25, scope: !2268)
!2316 = !DILocation(line: 1235, column: 35, scope: !2268)
!2317 = !DILocation(line: 1235, column: 24, scope: !2268)
!2318 = !DILocation(line: 1235, column: 9, scope: !2268)
!2319 = !DILocation(line: 1235, column: 17, scope: !2268)
!2320 = !DILocation(line: 1235, column: 23, scope: !2268)
!2321 = !DILocation(line: 1237, column: 13, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 1237, column: 13)
!2323 = !DILocation(line: 1237, column: 21, scope: !2322)
!2324 = !DILocation(line: 1237, column: 28, scope: !2322)
!2325 = !DILocation(line: 1237, column: 13, scope: !2268)
!2326 = !DILocation(line: 1238, column: 36, scope: !2322)
!2327 = !DILocation(line: 1238, column: 18, scope: !2322)
!2328 = !DILocation(line: 1238, column: 11, scope: !2322)
!2329 = !DILocation(line: 1250, column: 14, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 1250, column: 14)
!2331 = !DILocation(line: 1250, column: 20, scope: !2330)
!2332 = !DILocation(line: 1250, column: 14, scope: !2268)
!2333 = !DILocation(line: 1254, column: 27, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !1, line: 1251, column: 11)
!2335 = !DILocation(line: 1254, column: 35, scope: !2334)
!2336 = !DILocation(line: 1254, column: 40, scope: !2334)
!2337 = !DILocation(line: 1254, column: 15, scope: !2334)
!2338 = !DILocation(line: 1255, column: 38, scope: !2334)
!2339 = !DILocation(line: 1255, column: 46, scope: !2334)
!2340 = !DILocation(line: 1256, column: 15, scope: !2334)
!2341 = !DILocation(line: 1256, column: 23, scope: !2334)
!2342 = !DILocation(line: 1256, column: 28, scope: !2334)
!2343 = !DILocation(line: 1255, column: 20, scope: !2334)
!2344 = !DILocation(line: 1257, column: 19, scope: !2334)
!2345 = !DILocation(line: 1258, column: 26, scope: !2334)
!2346 = !DILocation(line: 1258, column: 25, scope: !2334)
!2347 = !DILocation(line: 1258, column: 32, scope: !2334)
!2348 = !DILocation(line: 1258, column: 31, scope: !2334)
!2349 = !DILocation(line: 1258, column: 20, scope: !2334)
!2350 = !DILocation(line: 1258, column: 15, scope: !2334)
!2351 = !DILocation(line: 1260, column: 20, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2334, file: !1, line: 1260, column: 13)
!2353 = !DILocation(line: 1260, column: 19, scope: !2352)
!2354 = !DILocation(line: 1260, column: 24, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2352, file: !1, line: 1260, column: 13)
!2356 = !DILocation(line: 1260, column: 28, scope: !2355)
!2357 = !DILocation(line: 1260, column: 26, scope: !2355)
!2358 = !DILocation(line: 1260, column: 13, scope: !2352)
!2359 = !DILocation(line: 1262, column: 34, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !1, line: 1260, column: 36)
!2361 = !DILocation(line: 1262, column: 36, scope: !2360)
!2362 = !DILocation(line: 1262, column: 35, scope: !2360)
!2363 = !DILocation(line: 1262, column: 25, scope: !2360)
!2364 = !DILocation(line: 1262, column: 23, scope: !2360)
!2365 = !DILocation(line: 1262, column: 40, scope: !2360)
!2366 = !DILocation(line: 1262, column: 39, scope: !2360)
!2367 = !DILocation(line: 1262, column: 19, scope: !2360)
!2368 = !DILocation(line: 1261, column: 15, scope: !2360)
!2369 = !DILocation(line: 1261, column: 23, scope: !2360)
!2370 = !DILocation(line: 1261, column: 30, scope: !2360)
!2371 = !DILocation(line: 1261, column: 31, scope: !2360)
!2372 = !DILocation(line: 1261, column: 44, scope: !2360)
!2373 = !DILocation(line: 1264, column: 13, scope: !2360)
!2374 = !DILocation(line: 1260, column: 32, scope: !2355)
!2375 = !DILocation(line: 1260, column: 13, scope: !2355)
!2376 = distinct !{!2376, !2358, !2377}
!2377 = !DILocation(line: 1264, column: 13, scope: !2352)
!2378 = !DILocation(line: 1265, column: 19, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2334, file: !1, line: 1265, column: 13)
!2380 = !DILocation(line: 1265, column: 18, scope: !2379)
!2381 = !DILocation(line: 1265, column: 23, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2379, file: !1, line: 1265, column: 13)
!2383 = !DILocation(line: 1265, column: 37, scope: !2382)
!2384 = !DILocation(line: 1265, column: 45, scope: !2382)
!2385 = !DILocation(line: 1265, column: 25, scope: !2382)
!2386 = !DILocation(line: 1265, column: 13, scope: !2379)
!2387 = !DILocation(line: 1266, column: 41, scope: !2382)
!2388 = !DILocation(line: 1266, column: 49, scope: !2382)
!2389 = !DILocation(line: 1266, column: 56, scope: !2382)
!2390 = !DILocation(line: 1266, column: 15, scope: !2382)
!2391 = !DILocation(line: 1266, column: 23, scope: !2382)
!2392 = !DILocation(line: 1266, column: 38, scope: !2382)
!2393 = !DILocation(line: 1265, column: 53, scope: !2382)
!2394 = !DILocation(line: 1265, column: 13, scope: !2382)
!2395 = distinct !{!2395, !2386, !2396}
!2396 = !DILocation(line: 1266, column: 57, scope: !2379)
!2397 = !DILocation(line: 1275, column: 11, scope: !2334)
!2398 = !DILocation(line: 1277, column: 38, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2330, file: !1, line: 1277, column: 11)
!2400 = !DILocation(line: 1277, column: 46, scope: !2399)
!2401 = !DILocation(line: 1278, column: 15, scope: !2399)
!2402 = !DILocation(line: 1278, column: 23, scope: !2399)
!2403 = !DILocation(line: 1278, column: 29, scope: !2399)
!2404 = !DILocation(line: 1278, column: 37, scope: !2399)
!2405 = !DILocation(line: 1278, column: 28, scope: !2399)
!2406 = !DILocation(line: 1278, column: 43, scope: !2399)
!2407 = !DILocation(line: 1277, column: 20, scope: !2399)
!2408 = !DILocation(line: 1279, column: 13, scope: !2399)
!2409 = !DILocation(line: 1279, column: 21, scope: !2399)
!2410 = !DILocation(line: 1279, column: 28, scope: !2399)
!2411 = !DILocation(line: 1279, column: 36, scope: !2399)
!2412 = !DILocation(line: 1279, column: 38, scope: !2399)
!2413 = !DILocation(line: 1279, column: 46, scope: !2399)
!2414 = !DILocation(line: 1279, column: 48, scope: !2399)
!2415 = !DILocation(line: 1279, column: 56, scope: !2399)
!2416 = !DILocation(line: 1279, column: 47, scope: !2399)
!2417 = !DILocation(line: 1279, column: 37, scope: !2399)
!2418 = !DILocation(line: 1279, column: 63, scope: !2399)
!2419 = !DILocation(line: 1280, column: 13, scope: !2399)
!2420 = !DILocation(line: 1280, column: 21, scope: !2399)
!2421 = !DILocation(line: 1280, column: 36, scope: !2399)
!2422 = !DILocation(line: 1283, column: 9, scope: !2268)
!2423 = !DILocation(line: 1283, column: 17, scope: !2268)
!2424 = !DILocation(line: 1283, column: 25, scope: !2268)
!2425 = !DILocation(line: 1284, column: 27, scope: !2268)
!2426 = !DILocation(line: 1284, column: 35, scope: !2268)
!2427 = !DILocation(line: 1284, column: 9, scope: !2268)
!2428 = !DILocation(line: 1284, column: 17, scope: !2268)
!2429 = !DILocation(line: 1284, column: 25, scope: !2268)
!2430 = !DILocation(line: 1285, column: 9, scope: !2268)
!2431 = !DILocation(line: 1285, column: 17, scope: !2268)
!2432 = !DILocation(line: 1285, column: 32, scope: !2268)
!2433 = !DILocation(line: 1287, column: 25, scope: !2268)
!2434 = !DILocation(line: 1287, column: 9, scope: !2268)
!2435 = !DILocation(line: 1288, column: 26, scope: !2268)
!2436 = !DILocation(line: 1288, column: 34, scope: !2268)
!2437 = !DILocation(line: 1288, column: 40, scope: !2268)
!2438 = !DILocation(line: 1288, column: 9, scope: !2268)
!2439 = !DILocation(line: 1289, column: 9, scope: !2268)
!2440 = !DILocalVariable(name: "order_f", scope: !2441, file: !1, line: 1294, type: !604)
!2441 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1292, column: 7)
!2442 = !DILocation(line: 1294, column: 11, scope: !2441)
!2443 = !DILocation(line: 1296, column: 13, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2441, file: !1, line: 1296, column: 13)
!2445 = !DILocation(line: 1296, column: 19, scope: !2444)
!2446 = !DILocation(line: 1296, column: 23, scope: !2444)
!2447 = !DILocation(line: 1296, column: 13, scope: !2441)
!2448 = !DILocation(line: 1297, column: 27, scope: !2444)
!2449 = !DILocation(line: 1297, column: 35, scope: !2444)
!2450 = !DILocation(line: 1297, column: 42, scope: !2444)
!2451 = !DILocation(line: 1297, column: 11, scope: !2444)
!2452 = !DILocation(line: 1297, column: 19, scope: !2444)
!2453 = !DILocation(line: 1297, column: 25, scope: !2444)
!2454 = !DILocation(line: 1299, column: 53, scope: !2444)
!2455 = !DILocation(line: 1299, column: 59, scope: !2444)
!2456 = !DILocation(line: 1299, column: 45, scope: !2444)
!2457 = !DILocation(line: 1299, column: 63, scope: !2444)
!2458 = !DILocation(line: 1299, column: 65, scope: !2444)
!2459 = !DILocation(line: 1299, column: 27, scope: !2444)
!2460 = !DILocation(line: 1299, column: 35, scope: !2444)
!2461 = !DILocation(line: 1299, column: 42, scope: !2444)
!2462 = !DILocation(line: 1299, column: 11, scope: !2444)
!2463 = !DILocation(line: 1299, column: 19, scope: !2444)
!2464 = !DILocation(line: 1299, column: 25, scope: !2444)
!2465 = !DILocation(line: 1300, column: 44, scope: !2441)
!2466 = !DILocation(line: 1300, column: 52, scope: !2441)
!2467 = !DILocation(line: 1300, column: 57, scope: !2441)
!2468 = !DILocation(line: 1300, column: 60, scope: !2441)
!2469 = !DILocation(line: 1300, column: 21, scope: !2441)
!2470 = !DILocation(line: 1300, column: 29, scope: !2441)
!2471 = !DILocation(line: 1300, column: 31, scope: !2441)
!2472 = !DILocation(line: 1300, column: 9, scope: !2441)
!2473 = !DILocation(line: 1300, column: 17, scope: !2441)
!2474 = !DILocation(line: 1300, column: 19, scope: !2441)
!2475 = !DILocation(line: 1302, column: 24, scope: !2441)
!2476 = !DILocation(line: 1302, column: 32, scope: !2441)
!2477 = !DILocation(line: 1302, column: 37, scope: !2441)
!2478 = !DILocation(line: 1302, column: 19, scope: !2441)
!2479 = !DILocation(line: 1302, column: 17, scope: !2441)
!2480 = !DILocation(line: 1304, column: 56, scope: !2441)
!2481 = !DILocation(line: 1304, column: 64, scope: !2441)
!2482 = !DILocation(line: 1305, column: 11, scope: !2441)
!2483 = !DILocation(line: 1305, column: 19, scope: !2441)
!2484 = !DILocation(line: 1305, column: 25, scope: !2441)
!2485 = !DILocation(line: 1304, column: 35, scope: !2441)
!2486 = !DILocation(line: 1304, column: 24, scope: !2441)
!2487 = !DILocation(line: 1304, column: 9, scope: !2441)
!2488 = !DILocation(line: 1304, column: 17, scope: !2441)
!2489 = !DILocation(line: 1304, column: 23, scope: !2441)
!2490 = !DILocation(line: 1306, column: 13, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2441, file: !1, line: 1306, column: 13)
!2492 = !DILocation(line: 1306, column: 21, scope: !2491)
!2493 = !DILocation(line: 1306, column: 28, scope: !2491)
!2494 = !DILocation(line: 1306, column: 13, scope: !2441)
!2495 = !DILocation(line: 1307, column: 36, scope: !2491)
!2496 = !DILocation(line: 1307, column: 18, scope: !2491)
!2497 = !DILocation(line: 1307, column: 11, scope: !2491)
!2498 = !DILocation(line: 1310, column: 16, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2441, file: !1, line: 1310, column: 9)
!2500 = !DILocation(line: 1310, column: 21, scope: !2499)
!2501 = !DILocation(line: 1310, column: 15, scope: !2499)
!2502 = !DILocation(line: 1310, column: 25, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2499, file: !1, line: 1310, column: 9)
!2504 = !DILocation(line: 1310, column: 38, scope: !2503)
!2505 = !DILocation(line: 1310, column: 46, scope: !2503)
!2506 = !DILocation(line: 1310, column: 27, scope: !2503)
!2507 = !DILocation(line: 1310, column: 9, scope: !2499)
!2508 = !DILocalVariable(name: "alpha", scope: !2509, file: !1, line: 1312, type: !604)
!2509 = distinct !DILexicalBlock(scope: !2503, file: !1, line: 1311, column: 11)
!2510 = !DILocation(line: 1312, column: 15, scope: !2509)
!2511 = !DILocation(line: 1312, column: 23, scope: !2509)
!2512 = !DILocation(line: 1312, column: 49, scope: !2509)
!2513 = !DILocation(line: 1312, column: 35, scope: !2509)
!2514 = !DILocation(line: 1312, column: 59, scope: !2509)
!2515 = !DILocation(line: 1312, column: 67, scope: !2509)
!2516 = !DILocation(line: 1312, column: 74, scope: !2509)
!2517 = !DILocation(line: 1312, column: 73, scope: !2509)
!2518 = !DILocation(line: 1312, column: 75, scope: !2509)
!2519 = !DILocation(line: 1312, column: 54, scope: !2509)
!2520 = !DILocation(line: 1312, column: 52, scope: !2509)
!2521 = !DILocation(line: 1312, column: 31, scope: !2509)
!2522 = !DILocation(line: 1313, column: 20, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2509, file: !1, line: 1313, column: 13)
!2524 = !DILocation(line: 1313, column: 19, scope: !2523)
!2525 = !DILocation(line: 1313, column: 24, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 1313, column: 13)
!2527 = !DILocation(line: 1313, column: 37, scope: !2526)
!2528 = !DILocation(line: 1313, column: 45, scope: !2526)
!2529 = !DILocation(line: 1313, column: 26, scope: !2526)
!2530 = !DILocation(line: 1313, column: 13, scope: !2523)
!2531 = !DILocation(line: 1315, column: 18, scope: !2526)
!2532 = !DILocation(line: 1315, column: 26, scope: !2526)
!2533 = !DILocation(line: 1315, column: 24, scope: !2526)
!2534 = !DILocation(line: 1315, column: 52, scope: !2526)
!2535 = !DILocation(line: 1315, column: 38, scope: !2526)
!2536 = !DILocation(line: 1315, column: 62, scope: !2526)
!2537 = !DILocation(line: 1315, column: 70, scope: !2526)
!2538 = !DILocation(line: 1315, column: 77, scope: !2526)
!2539 = !DILocation(line: 1315, column: 76, scope: !2526)
!2540 = !DILocation(line: 1315, column: 78, scope: !2526)
!2541 = !DILocation(line: 1315, column: 57, scope: !2526)
!2542 = !DILocation(line: 1315, column: 55, scope: !2526)
!2543 = !DILocation(line: 1315, column: 34, scope: !2526)
!2544 = !DILocation(line: 1314, column: 61, scope: !2526)
!2545 = !DILocation(line: 1314, column: 41, scope: !2526)
!2546 = !DILocation(line: 1314, column: 49, scope: !2526)
!2547 = !DILocation(line: 1314, column: 56, scope: !2526)
!2548 = !DILocation(line: 1314, column: 59, scope: !2526)
!2549 = !DILocation(line: 1314, column: 15, scope: !2526)
!2550 = !DILocation(line: 1314, column: 23, scope: !2526)
!2551 = !DILocation(line: 1314, column: 38, scope: !2526)
!2552 = !DILocation(line: 1313, column: 53, scope: !2526)
!2553 = !DILocation(line: 1313, column: 58, scope: !2526)
!2554 = !DILocation(line: 1313, column: 13, scope: !2526)
!2555 = distinct !{!2555, !2530, !2556}
!2556 = !DILocation(line: 1315, column: 83, scope: !2523)
!2557 = !DILocation(line: 1316, column: 11, scope: !2509)
!2558 = !DILocation(line: 1310, column: 55, scope: !2503)
!2559 = !DILocation(line: 1310, column: 9, scope: !2503)
!2560 = distinct !{!2560, !2507, !2561}
!2561 = !DILocation(line: 1316, column: 11, scope: !2499)
!2562 = !DILocation(line: 1317, column: 9, scope: !2441)
!2563 = !DILocation(line: 1317, column: 17, scope: !2441)
!2564 = !DILocation(line: 1317, column: 25, scope: !2441)
!2565 = !DILocation(line: 1318, column: 27, scope: !2441)
!2566 = !DILocation(line: 1318, column: 35, scope: !2441)
!2567 = !DILocation(line: 1318, column: 42, scope: !2441)
!2568 = !DILocation(line: 1318, column: 50, scope: !2441)
!2569 = !DILocation(line: 1318, column: 52, scope: !2441)
!2570 = !DILocation(line: 1318, column: 60, scope: !2441)
!2571 = !DILocation(line: 1318, column: 62, scope: !2441)
!2572 = !DILocation(line: 1318, column: 70, scope: !2441)
!2573 = !DILocation(line: 1318, column: 61, scope: !2441)
!2574 = !DILocation(line: 1318, column: 51, scope: !2441)
!2575 = !DILocation(line: 1318, column: 9, scope: !2441)
!2576 = !DILocation(line: 1318, column: 17, scope: !2441)
!2577 = !DILocation(line: 1318, column: 25, scope: !2441)
!2578 = !DILocation(line: 1319, column: 9, scope: !2441)
!2579 = !DILocation(line: 1319, column: 17, scope: !2441)
!2580 = !DILocation(line: 1319, column: 32, scope: !2441)
!2581 = !DILocation(line: 1320, column: 9, scope: !2441)
!2582 = !DILocation(line: 1327, column: 24, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1327, column: 7)
!2584 = !DILocation(line: 1327, column: 30, scope: !2583)
!2585 = !DILocation(line: 1327, column: 18, scope: !2583)
!2586 = !DILocation(line: 1327, column: 9, scope: !2583)
!2587 = !DILocation(line: 1327, column: 36, scope: !2583)
!2588 = !DILocation(line: 1330, column: 20, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2583, file: !1, line: 1327, column: 36)
!2590 = !DILocation(line: 1330, column: 19, scope: !2589)
!2591 = !DILocation(line: 1331, column: 13, scope: !2589)
!2592 = !DILocation(line: 1333, column: 20, scope: !2589)
!2593 = !DILocation(line: 1333, column: 19, scope: !2589)
!2594 = !DILocation(line: 1334, column: 13, scope: !2589)
!2595 = !DILocation(line: 1336, column: 20, scope: !2589)
!2596 = !DILocation(line: 1336, column: 19, scope: !2589)
!2597 = !DILocation(line: 1337, column: 13, scope: !2589)
!2598 = !DILocation(line: 1339, column: 20, scope: !2589)
!2599 = !DILocation(line: 1339, column: 19, scope: !2589)
!2600 = !DILocation(line: 1340, column: 13, scope: !2589)
!2601 = !DILocation(line: 1342, column: 20, scope: !2589)
!2602 = !DILocation(line: 1342, column: 19, scope: !2589)
!2603 = !DILocation(line: 1344, column: 13, scope: !2589)
!2604 = !DILocation(line: 1346, column: 20, scope: !2589)
!2605 = !DILocation(line: 1346, column: 19, scope: !2589)
!2606 = !DILocation(line: 1348, column: 13, scope: !2589)
!2607 = !DILocation(line: 1350, column: 20, scope: !2589)
!2608 = !DILocation(line: 1350, column: 19, scope: !2589)
!2609 = !DILocation(line: 1352, column: 13, scope: !2589)
!2610 = !DILocation(line: 1355, column: 20, scope: !2589)
!2611 = !DILocation(line: 1355, column: 19, scope: !2589)
!2612 = !DILocation(line: 1357, column: 13, scope: !2589)
!2613 = !DILocation(line: 1359, column: 13, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2583, file: !1, line: 1359, column: 13)
!2615 = !DILocation(line: 1359, column: 20, scope: !2614)
!2616 = !DILocation(line: 1359, column: 13, scope: !2583)
!2617 = !DILocation(line: 1360, column: 18, scope: !2614)
!2618 = !DILocation(line: 1360, column: 11, scope: !2614)
!2619 = !DILocation(line: 1361, column: 24, scope: !2583)
!2620 = !DILocation(line: 1361, column: 9, scope: !2583)
!2621 = !DILocation(line: 1361, column: 17, scope: !2583)
!2622 = !DILocation(line: 1361, column: 22, scope: !2583)
!2623 = !DILocation(line: 1362, column: 9, scope: !2583)
!2624 = !DILocation(line: 1366, column: 16, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1365, column: 7)
!2626 = !DILocation(line: 1366, column: 15, scope: !2625)
!2627 = !DILocation(line: 1367, column: 13, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2625, file: !1, line: 1367, column: 13)
!2629 = !DILocation(line: 1367, column: 20, scope: !2628)
!2630 = !DILocation(line: 1367, column: 13, scope: !2625)
!2631 = !DILocation(line: 1368, column: 18, scope: !2628)
!2632 = !DILocation(line: 1368, column: 11, scope: !2628)
!2633 = !DILocation(line: 1369, column: 24, scope: !2625)
!2634 = !DILocation(line: 1369, column: 9, scope: !2625)
!2635 = !DILocation(line: 1369, column: 17, scope: !2625)
!2636 = !DILocation(line: 1369, column: 22, scope: !2625)
!2637 = !DILocation(line: 1370, column: 26, scope: !2625)
!2638 = !DILocation(line: 1370, column: 34, scope: !2625)
!2639 = !DILocation(line: 1370, column: 40, scope: !2625)
!2640 = !DILocation(line: 1370, column: 9, scope: !2625)
!2641 = !DILocation(line: 1371, column: 9, scope: !2625)
!2642 = !DILocation(line: 1375, column: 16, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1374, column: 7)
!2644 = !DILocation(line: 1375, column: 15, scope: !2643)
!2645 = !DILocation(line: 1376, column: 13, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2643, file: !1, line: 1376, column: 13)
!2647 = !DILocation(line: 1376, column: 20, scope: !2646)
!2648 = !DILocation(line: 1376, column: 13, scope: !2643)
!2649 = !DILocation(line: 1377, column: 18, scope: !2646)
!2650 = !DILocation(line: 1377, column: 11, scope: !2646)
!2651 = !DILocation(line: 1378, column: 24, scope: !2643)
!2652 = !DILocation(line: 1378, column: 9, scope: !2643)
!2653 = !DILocation(line: 1378, column: 17, scope: !2643)
!2654 = !DILocation(line: 1378, column: 22, scope: !2643)
!2655 = !DILocation(line: 1379, column: 26, scope: !2643)
!2656 = !DILocation(line: 1379, column: 34, scope: !2643)
!2657 = !DILocation(line: 1379, column: 40, scope: !2643)
!2658 = !DILocation(line: 1379, column: 9, scope: !2643)
!2659 = !DILocation(line: 1380, column: 9, scope: !2643)
!2660 = !DILocation(line: 1384, column: 16, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1383, column: 7)
!2662 = !DILocation(line: 1384, column: 15, scope: !2661)
!2663 = !DILocation(line: 1385, column: 13, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !1, line: 1385, column: 13)
!2665 = !DILocation(line: 1385, column: 20, scope: !2664)
!2666 = !DILocation(line: 1385, column: 13, scope: !2661)
!2667 = !DILocation(line: 1386, column: 18, scope: !2664)
!2668 = !DILocation(line: 1386, column: 11, scope: !2664)
!2669 = !DILocation(line: 1387, column: 24, scope: !2661)
!2670 = !DILocation(line: 1387, column: 9, scope: !2661)
!2671 = !DILocation(line: 1387, column: 17, scope: !2661)
!2672 = !DILocation(line: 1387, column: 22, scope: !2661)
!2673 = !DILocation(line: 1388, column: 26, scope: !2661)
!2674 = !DILocation(line: 1388, column: 34, scope: !2661)
!2675 = !DILocation(line: 1388, column: 40, scope: !2661)
!2676 = !DILocation(line: 1388, column: 9, scope: !2661)
!2677 = !DILocation(line: 1389, column: 9, scope: !2661)
!2678 = !DILocation(line: 1393, column: 16, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1392, column: 7)
!2680 = !DILocation(line: 1393, column: 15, scope: !2679)
!2681 = !DILocation(line: 1394, column: 13, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 1394, column: 13)
!2683 = !DILocation(line: 1394, column: 20, scope: !2682)
!2684 = !DILocation(line: 1394, column: 13, scope: !2679)
!2685 = !DILocation(line: 1395, column: 18, scope: !2682)
!2686 = !DILocation(line: 1395, column: 11, scope: !2682)
!2687 = !DILocation(line: 1396, column: 24, scope: !2679)
!2688 = !DILocation(line: 1396, column: 9, scope: !2679)
!2689 = !DILocation(line: 1396, column: 17, scope: !2679)
!2690 = !DILocation(line: 1396, column: 22, scope: !2679)
!2691 = !DILocation(line: 1397, column: 26, scope: !2679)
!2692 = !DILocation(line: 1397, column: 34, scope: !2679)
!2693 = !DILocation(line: 1397, column: 40, scope: !2679)
!2694 = !DILocation(line: 1397, column: 9, scope: !2679)
!2695 = !DILocation(line: 1398, column: 9, scope: !2679)
!2696 = !DILocation(line: 1402, column: 16, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1401, column: 7)
!2698 = !DILocation(line: 1402, column: 15, scope: !2697)
!2699 = !DILocation(line: 1403, column: 13, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1403, column: 13)
!2701 = !DILocation(line: 1403, column: 20, scope: !2700)
!2702 = !DILocation(line: 1403, column: 13, scope: !2697)
!2703 = !DILocation(line: 1404, column: 18, scope: !2700)
!2704 = !DILocation(line: 1404, column: 11, scope: !2700)
!2705 = !DILocation(line: 1405, column: 24, scope: !2697)
!2706 = !DILocation(line: 1405, column: 9, scope: !2697)
!2707 = !DILocation(line: 1405, column: 17, scope: !2697)
!2708 = !DILocation(line: 1405, column: 22, scope: !2697)
!2709 = !DILocation(line: 1406, column: 26, scope: !2697)
!2710 = !DILocation(line: 1406, column: 34, scope: !2697)
!2711 = !DILocation(line: 1406, column: 40, scope: !2697)
!2712 = !DILocation(line: 1406, column: 9, scope: !2697)
!2713 = !DILocation(line: 1407, column: 9, scope: !2697)
!2714 = !DILocation(line: 1413, column: 24, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1413, column: 7)
!2716 = !DILocation(line: 1413, column: 30, scope: !2715)
!2717 = !DILocation(line: 1413, column: 18, scope: !2715)
!2718 = !DILocation(line: 1413, column: 9, scope: !2715)
!2719 = !DILocation(line: 1413, column: 36, scope: !2715)
!2720 = !DILocation(line: 1416, column: 20, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2715, file: !1, line: 1413, column: 36)
!2722 = !DILocation(line: 1416, column: 19, scope: !2721)
!2723 = !DILocation(line: 1417, column: 17, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1417, column: 17)
!2725 = !DILocation(line: 1417, column: 24, scope: !2724)
!2726 = !DILocation(line: 1417, column: 17, scope: !2721)
!2727 = !DILocation(line: 1418, column: 22, scope: !2724)
!2728 = !DILocation(line: 1418, column: 15, scope: !2724)
!2729 = !DILocation(line: 1419, column: 28, scope: !2721)
!2730 = !DILocation(line: 1419, column: 13, scope: !2721)
!2731 = !DILocation(line: 1419, column: 21, scope: !2721)
!2732 = !DILocation(line: 1419, column: 26, scope: !2721)
!2733 = !DILocation(line: 1420, column: 13, scope: !2721)
!2734 = !DILocation(line: 1420, column: 21, scope: !2721)
!2735 = !DILocation(line: 1420, column: 31, scope: !2721)
!2736 = !DILocation(line: 1421, column: 13, scope: !2721)
!2737 = !DILocation(line: 1421, column: 21, scope: !2721)
!2738 = !DILocation(line: 1421, column: 31, scope: !2721)
!2739 = !DILocation(line: 1422, column: 32, scope: !2721)
!2740 = !DILocation(line: 1422, column: 13, scope: !2721)
!2741 = !DILocation(line: 1423, column: 13, scope: !2721)
!2742 = !DILocation(line: 1425, column: 20, scope: !2721)
!2743 = !DILocation(line: 1425, column: 19, scope: !2721)
!2744 = !DILocation(line: 1426, column: 17, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1426, column: 17)
!2746 = !DILocation(line: 1426, column: 24, scope: !2745)
!2747 = !DILocation(line: 1426, column: 17, scope: !2721)
!2748 = !DILocation(line: 1427, column: 22, scope: !2745)
!2749 = !DILocation(line: 1427, column: 15, scope: !2745)
!2750 = !DILocation(line: 1428, column: 28, scope: !2721)
!2751 = !DILocation(line: 1428, column: 13, scope: !2721)
!2752 = !DILocation(line: 1428, column: 21, scope: !2721)
!2753 = !DILocation(line: 1428, column: 26, scope: !2721)
!2754 = !DILocation(line: 1429, column: 33, scope: !2721)
!2755 = !DILocation(line: 1429, column: 41, scope: !2721)
!2756 = !DILocation(line: 1429, column: 50, scope: !2721)
!2757 = !DILocation(line: 1429, column: 13, scope: !2721)
!2758 = !DILocation(line: 1429, column: 21, scope: !2721)
!2759 = !DILocation(line: 1429, column: 31, scope: !2721)
!2760 = !DILocation(line: 1430, column: 33, scope: !2721)
!2761 = !DILocation(line: 1430, column: 41, scope: !2721)
!2762 = !DILocation(line: 1430, column: 50, scope: !2721)
!2763 = !DILocation(line: 1430, column: 13, scope: !2721)
!2764 = !DILocation(line: 1430, column: 21, scope: !2721)
!2765 = !DILocation(line: 1430, column: 31, scope: !2721)
!2766 = !DILocation(line: 1431, column: 32, scope: !2721)
!2767 = !DILocation(line: 1431, column: 13, scope: !2721)
!2768 = !DILocation(line: 1432, column: 29, scope: !2721)
!2769 = !DILocation(line: 1432, column: 13, scope: !2721)
!2770 = !DILocation(line: 1433, column: 13, scope: !2721)
!2771 = !DILocation(line: 1435, column: 20, scope: !2721)
!2772 = !DILocation(line: 1435, column: 19, scope: !2721)
!2773 = !DILocation(line: 1436, column: 17, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1436, column: 17)
!2775 = !DILocation(line: 1436, column: 24, scope: !2774)
!2776 = !DILocation(line: 1436, column: 17, scope: !2721)
!2777 = !DILocation(line: 1437, column: 22, scope: !2774)
!2778 = !DILocation(line: 1437, column: 15, scope: !2774)
!2779 = !DILocation(line: 1438, column: 13, scope: !2721)
!2780 = !DILocation(line: 1441, column: 20, scope: !2721)
!2781 = !DILocation(line: 1441, column: 19, scope: !2721)
!2782 = !DILocation(line: 1442, column: 17, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1442, column: 17)
!2784 = !DILocation(line: 1442, column: 24, scope: !2783)
!2785 = !DILocation(line: 1442, column: 17, scope: !2721)
!2786 = !DILocation(line: 1443, column: 22, scope: !2783)
!2787 = !DILocation(line: 1443, column: 15, scope: !2783)
!2788 = !DILocation(line: 1444, column: 28, scope: !2721)
!2789 = !DILocation(line: 1444, column: 13, scope: !2721)
!2790 = !DILocation(line: 1444, column: 21, scope: !2721)
!2791 = !DILocation(line: 1444, column: 26, scope: !2721)
!2792 = !DILocation(line: 1445, column: 13, scope: !2721)
!2793 = !DILocation(line: 1445, column: 21, scope: !2721)
!2794 = !DILocation(line: 1445, column: 31, scope: !2721)
!2795 = !DILocation(line: 1446, column: 13, scope: !2721)
!2796 = !DILocation(line: 1446, column: 21, scope: !2721)
!2797 = !DILocation(line: 1446, column: 31, scope: !2721)
!2798 = !DILocation(line: 1447, column: 32, scope: !2721)
!2799 = !DILocation(line: 1447, column: 13, scope: !2721)
!2800 = !DILocation(line: 1448, column: 29, scope: !2721)
!2801 = !DILocation(line: 1448, column: 13, scope: !2721)
!2802 = !DILocation(line: 1449, column: 13, scope: !2721)
!2803 = !DILocation(line: 1451, column: 20, scope: !2721)
!2804 = !DILocation(line: 1451, column: 19, scope: !2721)
!2805 = !DILocation(line: 1452, column: 17, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1452, column: 17)
!2807 = !DILocation(line: 1452, column: 24, scope: !2806)
!2808 = !DILocation(line: 1452, column: 17, scope: !2721)
!2809 = !DILocation(line: 1453, column: 22, scope: !2806)
!2810 = !DILocation(line: 1453, column: 15, scope: !2806)
!2811 = !DILocation(line: 1454, column: 28, scope: !2721)
!2812 = !DILocation(line: 1454, column: 13, scope: !2721)
!2813 = !DILocation(line: 1454, column: 21, scope: !2721)
!2814 = !DILocation(line: 1454, column: 26, scope: !2721)
!2815 = !DILocation(line: 1455, column: 13, scope: !2721)
!2816 = !DILocation(line: 1455, column: 21, scope: !2721)
!2817 = !DILocation(line: 1455, column: 31, scope: !2721)
!2818 = !DILocation(line: 1456, column: 13, scope: !2721)
!2819 = !DILocation(line: 1456, column: 21, scope: !2721)
!2820 = !DILocation(line: 1456, column: 31, scope: !2721)
!2821 = !DILocation(line: 1457, column: 32, scope: !2721)
!2822 = !DILocation(line: 1457, column: 13, scope: !2721)
!2823 = !DILocation(line: 1458, column: 29, scope: !2721)
!2824 = !DILocation(line: 1458, column: 13, scope: !2721)
!2825 = !DILocation(line: 1459, column: 13, scope: !2721)
!2826 = !DILocation(line: 1461, column: 20, scope: !2721)
!2827 = !DILocation(line: 1461, column: 19, scope: !2721)
!2828 = !DILocation(line: 1462, column: 17, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1462, column: 17)
!2830 = !DILocation(line: 1462, column: 24, scope: !2829)
!2831 = !DILocation(line: 1462, column: 17, scope: !2721)
!2832 = !DILocation(line: 1463, column: 22, scope: !2829)
!2833 = !DILocation(line: 1463, column: 15, scope: !2829)
!2834 = !DILocation(line: 1464, column: 28, scope: !2721)
!2835 = !DILocation(line: 1464, column: 13, scope: !2721)
!2836 = !DILocation(line: 1464, column: 21, scope: !2721)
!2837 = !DILocation(line: 1464, column: 26, scope: !2721)
!2838 = !DILocation(line: 1465, column: 13, scope: !2721)
!2839 = !DILocation(line: 1465, column: 21, scope: !2721)
!2840 = !DILocation(line: 1465, column: 31, scope: !2721)
!2841 = !DILocation(line: 1466, column: 13, scope: !2721)
!2842 = !DILocation(line: 1466, column: 21, scope: !2721)
!2843 = !DILocation(line: 1466, column: 31, scope: !2721)
!2844 = !DILocation(line: 1467, column: 32, scope: !2721)
!2845 = !DILocation(line: 1467, column: 13, scope: !2721)
!2846 = !DILocation(line: 1468, column: 29, scope: !2721)
!2847 = !DILocation(line: 1468, column: 13, scope: !2721)
!2848 = !DILocation(line: 1469, column: 13, scope: !2721)
!2849 = !DILocation(line: 1471, column: 20, scope: !2721)
!2850 = !DILocation(line: 1471, column: 19, scope: !2721)
!2851 = !DILocation(line: 1472, column: 17, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1472, column: 17)
!2853 = !DILocation(line: 1472, column: 24, scope: !2852)
!2854 = !DILocation(line: 1472, column: 17, scope: !2721)
!2855 = !DILocation(line: 1473, column: 22, scope: !2852)
!2856 = !DILocation(line: 1473, column: 15, scope: !2852)
!2857 = !DILocation(line: 1474, column: 28, scope: !2721)
!2858 = !DILocation(line: 1474, column: 13, scope: !2721)
!2859 = !DILocation(line: 1474, column: 21, scope: !2721)
!2860 = !DILocation(line: 1474, column: 26, scope: !2721)
!2861 = !DILocation(line: 1475, column: 13, scope: !2721)
!2862 = !DILocation(line: 1475, column: 21, scope: !2721)
!2863 = !DILocation(line: 1475, column: 31, scope: !2721)
!2864 = !DILocation(line: 1476, column: 13, scope: !2721)
!2865 = !DILocation(line: 1476, column: 21, scope: !2721)
!2866 = !DILocation(line: 1476, column: 31, scope: !2721)
!2867 = !DILocation(line: 1477, column: 32, scope: !2721)
!2868 = !DILocation(line: 1477, column: 13, scope: !2721)
!2869 = !DILocation(line: 1478, column: 29, scope: !2721)
!2870 = !DILocation(line: 1478, column: 13, scope: !2721)
!2871 = !DILocation(line: 1479, column: 13, scope: !2721)
!2872 = !DILocation(line: 1481, column: 20, scope: !2721)
!2873 = !DILocation(line: 1481, column: 19, scope: !2721)
!2874 = !DILocation(line: 1482, column: 17, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1482, column: 17)
!2876 = !DILocation(line: 1482, column: 24, scope: !2875)
!2877 = !DILocation(line: 1482, column: 17, scope: !2721)
!2878 = !DILocation(line: 1483, column: 22, scope: !2875)
!2879 = !DILocation(line: 1483, column: 15, scope: !2875)
!2880 = !DILocation(line: 1484, column: 28, scope: !2721)
!2881 = !DILocation(line: 1484, column: 13, scope: !2721)
!2882 = !DILocation(line: 1484, column: 21, scope: !2721)
!2883 = !DILocation(line: 1484, column: 26, scope: !2721)
!2884 = !DILocation(line: 1485, column: 29, scope: !2721)
!2885 = !DILocation(line: 1485, column: 13, scope: !2721)
!2886 = !DILocation(line: 1486, column: 13, scope: !2721)
!2887 = !DILocation(line: 1488, column: 20, scope: !2721)
!2888 = !DILocation(line: 1488, column: 19, scope: !2721)
!2889 = !DILocation(line: 1489, column: 17, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1489, column: 17)
!2891 = !DILocation(line: 1489, column: 24, scope: !2890)
!2892 = !DILocation(line: 1489, column: 17, scope: !2721)
!2893 = !DILocation(line: 1490, column: 22, scope: !2890)
!2894 = !DILocation(line: 1490, column: 15, scope: !2890)
!2895 = !DILocation(line: 1491, column: 28, scope: !2721)
!2896 = !DILocation(line: 1491, column: 13, scope: !2721)
!2897 = !DILocation(line: 1491, column: 21, scope: !2721)
!2898 = !DILocation(line: 1491, column: 26, scope: !2721)
!2899 = !DILocation(line: 1492, column: 29, scope: !2721)
!2900 = !DILocation(line: 1492, column: 13, scope: !2721)
!2901 = !DILocation(line: 1493, column: 13, scope: !2721)
!2902 = !DILocation(line: 1495, column: 20, scope: !2721)
!2903 = !DILocation(line: 1495, column: 19, scope: !2721)
!2904 = !DILocation(line: 1496, column: 17, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1496, column: 17)
!2906 = !DILocation(line: 1496, column: 24, scope: !2905)
!2907 = !DILocation(line: 1496, column: 17, scope: !2721)
!2908 = !DILocation(line: 1497, column: 22, scope: !2905)
!2909 = !DILocation(line: 1497, column: 15, scope: !2905)
!2910 = !DILocation(line: 1498, column: 28, scope: !2721)
!2911 = !DILocation(line: 1498, column: 13, scope: !2721)
!2912 = !DILocation(line: 1498, column: 21, scope: !2721)
!2913 = !DILocation(line: 1498, column: 26, scope: !2721)
!2914 = !DILocation(line: 1499, column: 29, scope: !2721)
!2915 = !DILocation(line: 1499, column: 13, scope: !2721)
!2916 = !DILocation(line: 1500, column: 13, scope: !2721)
!2917 = !DILocation(line: 1502, column: 20, scope: !2721)
!2918 = !DILocation(line: 1502, column: 19, scope: !2721)
!2919 = !DILocation(line: 1503, column: 17, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1503, column: 17)
!2921 = !DILocation(line: 1503, column: 24, scope: !2920)
!2922 = !DILocation(line: 1503, column: 17, scope: !2721)
!2923 = !DILocation(line: 1504, column: 22, scope: !2920)
!2924 = !DILocation(line: 1504, column: 15, scope: !2920)
!2925 = !DILocation(line: 1505, column: 28, scope: !2721)
!2926 = !DILocation(line: 1505, column: 13, scope: !2721)
!2927 = !DILocation(line: 1505, column: 21, scope: !2721)
!2928 = !DILocation(line: 1505, column: 26, scope: !2721)
!2929 = !DILocation(line: 1506, column: 29, scope: !2721)
!2930 = !DILocation(line: 1506, column: 13, scope: !2721)
!2931 = !DILocation(line: 1507, column: 13, scope: !2721)
!2932 = !DILocation(line: 1509, column: 20, scope: !2721)
!2933 = !DILocation(line: 1509, column: 19, scope: !2721)
!2934 = !DILocation(line: 1510, column: 17, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 1510, column: 17)
!2936 = !DILocation(line: 1510, column: 24, scope: !2935)
!2937 = !DILocation(line: 1510, column: 17, scope: !2721)
!2938 = !DILocation(line: 1511, column: 22, scope: !2935)
!2939 = !DILocation(line: 1511, column: 15, scope: !2935)
!2940 = !DILocation(line: 1512, column: 28, scope: !2721)
!2941 = !DILocation(line: 1512, column: 13, scope: !2721)
!2942 = !DILocation(line: 1512, column: 21, scope: !2721)
!2943 = !DILocation(line: 1512, column: 26, scope: !2721)
!2944 = !DILocation(line: 1513, column: 29, scope: !2721)
!2945 = !DILocation(line: 1513, column: 13, scope: !2721)
!2946 = !DILocation(line: 1514, column: 13, scope: !2721)
!2947 = !DILocation(line: 1516, column: 19, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2715, file: !1, line: 1516, column: 14)
!2949 = !DILocation(line: 1516, column: 25, scope: !2948)
!2950 = !DILocation(line: 1516, column: 14, scope: !2948)
!2951 = !DILocation(line: 1516, column: 32, scope: !2948)
!2952 = !DILocation(line: 1516, column: 14, scope: !2715)
!2953 = !DILocation(line: 1518, column: 28, scope: !2948)
!2954 = !DILocation(line: 1518, column: 36, scope: !2948)
!2955 = !DILocation(line: 1518, column: 42, scope: !2948)
!2956 = !DILocation(line: 1518, column: 11, scope: !2948)
!2957 = !DILocation(line: 1519, column: 19, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2948, file: !1, line: 1519, column: 19)
!2959 = !DILocation(line: 1519, column: 25, scope: !2958)
!2960 = !DILocation(line: 1519, column: 29, scope: !2958)
!2961 = !DILocation(line: 1519, column: 36, scope: !2958)
!2962 = !DILocation(line: 1519, column: 39, scope: !2958)
!2963 = !DILocation(line: 1519, column: 45, scope: !2958)
!2964 = !DILocation(line: 1519, column: 49, scope: !2958)
!2965 = !DILocation(line: 1519, column: 19, scope: !2948)
!2966 = !DILocation(line: 1521, column: 28, scope: !2958)
!2967 = !DILocation(line: 1521, column: 36, scope: !2958)
!2968 = !DILocation(line: 1521, column: 42, scope: !2958)
!2969 = !DILocation(line: 1521, column: 11, scope: !2958)
!2970 = !DILocation(line: 1522, column: 9, scope: !2715)
!2971 = !DILocation(line: 1530, column: 13, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 1530, column: 13)
!2973 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1529, column: 7)
!2974 = !DILocation(line: 1530, column: 19, scope: !2972)
!2975 = !DILocation(line: 1530, column: 23, scope: !2972)
!2976 = !DILocation(line: 1530, column: 13, scope: !2973)
!2977 = !DILocation(line: 1531, column: 27, scope: !2972)
!2978 = !DILocation(line: 1531, column: 35, scope: !2972)
!2979 = !DILocation(line: 1531, column: 42, scope: !2972)
!2980 = !DILocation(line: 1531, column: 11, scope: !2972)
!2981 = !DILocation(line: 1531, column: 19, scope: !2972)
!2982 = !DILocation(line: 1531, column: 25, scope: !2972)
!2983 = !DILocation(line: 1533, column: 53, scope: !2972)
!2984 = !DILocation(line: 1533, column: 59, scope: !2972)
!2985 = !DILocation(line: 1533, column: 45, scope: !2972)
!2986 = !DILocation(line: 1533, column: 63, scope: !2972)
!2987 = !DILocation(line: 1533, column: 65, scope: !2972)
!2988 = !DILocation(line: 1533, column: 27, scope: !2972)
!2989 = !DILocation(line: 1533, column: 35, scope: !2972)
!2990 = !DILocation(line: 1533, column: 42, scope: !2972)
!2991 = !DILocation(line: 1533, column: 11, scope: !2972)
!2992 = !DILocation(line: 1533, column: 19, scope: !2972)
!2993 = !DILocation(line: 1533, column: 25, scope: !2972)
!2994 = !DILocation(line: 1534, column: 44, scope: !2973)
!2995 = !DILocation(line: 1534, column: 52, scope: !2973)
!2996 = !DILocation(line: 1534, column: 57, scope: !2973)
!2997 = !DILocation(line: 1534, column: 60, scope: !2973)
!2998 = !DILocation(line: 1534, column: 21, scope: !2973)
!2999 = !DILocation(line: 1534, column: 29, scope: !2973)
!3000 = !DILocation(line: 1534, column: 31, scope: !2973)
!3001 = !DILocation(line: 1534, column: 9, scope: !2973)
!3002 = !DILocation(line: 1534, column: 17, scope: !2973)
!3003 = !DILocation(line: 1534, column: 19, scope: !2973)
!3004 = !DILocation(line: 1536, column: 56, scope: !2973)
!3005 = !DILocation(line: 1536, column: 64, scope: !2973)
!3006 = !DILocation(line: 1537, column: 11, scope: !2973)
!3007 = !DILocation(line: 1537, column: 19, scope: !2973)
!3008 = !DILocation(line: 1537, column: 25, scope: !2973)
!3009 = !DILocation(line: 1536, column: 35, scope: !2973)
!3010 = !DILocation(line: 1536, column: 24, scope: !2973)
!3011 = !DILocation(line: 1536, column: 9, scope: !2973)
!3012 = !DILocation(line: 1536, column: 17, scope: !2973)
!3013 = !DILocation(line: 1536, column: 23, scope: !2973)
!3014 = !DILocation(line: 1538, column: 13, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 1538, column: 13)
!3016 = !DILocation(line: 1538, column: 21, scope: !3015)
!3017 = !DILocation(line: 1538, column: 28, scope: !3015)
!3018 = !DILocation(line: 1538, column: 13, scope: !2973)
!3019 = !DILocation(line: 1539, column: 36, scope: !3015)
!3020 = !DILocation(line: 1539, column: 18, scope: !3015)
!3021 = !DILocation(line: 1539, column: 11, scope: !3015)
!3022 = !DILocation(line: 1542, column: 16, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 1542, column: 9)
!3024 = !DILocation(line: 1542, column: 23, scope: !3023)
!3025 = !DILocation(line: 1542, column: 31, scope: !3023)
!3026 = !DILocation(line: 1542, column: 22, scope: !3023)
!3027 = !DILocation(line: 1542, column: 21, scope: !3023)
!3028 = !DILocation(line: 1542, column: 15, scope: !3023)
!3029 = !DILocation(line: 1542, column: 34, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3023, file: !1, line: 1542, column: 9)
!3031 = !DILocation(line: 1542, column: 48, scope: !3030)
!3032 = !DILocation(line: 1542, column: 56, scope: !3030)
!3033 = !DILocation(line: 1542, column: 36, scope: !3030)
!3034 = !DILocation(line: 1542, column: 9, scope: !3023)
!3035 = !DILocation(line: 1543, column: 20, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3030, file: !1, line: 1543, column: 11)
!3037 = !DILocation(line: 1543, column: 28, scope: !3036)
!3038 = !DILocation(line: 1543, column: 19, scope: !3036)
!3039 = !DILocation(line: 1543, column: 18, scope: !3036)
!3040 = !DILocation(line: 1543, column: 17, scope: !3036)
!3041 = !DILocation(line: 1543, column: 31, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 1543, column: 11)
!3043 = !DILocation(line: 1543, column: 45, scope: !3042)
!3044 = !DILocation(line: 1543, column: 53, scope: !3042)
!3045 = !DILocation(line: 1543, column: 33, scope: !3042)
!3046 = !DILocation(line: 1543, column: 11, scope: !3036)
!3047 = !DILocation(line: 1544, column: 31, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3042, file: !1, line: 1544, column: 18)
!3049 = !DILocation(line: 1544, column: 19, scope: !3048)
!3050 = !DILocation(line: 1544, column: 46, scope: !3048)
!3051 = !DILocation(line: 1544, column: 34, scope: !3048)
!3052 = !DILocation(line: 1544, column: 33, scope: !3048)
!3053 = !DILocation(line: 1544, column: 60, scope: !3048)
!3054 = !DILocation(line: 1544, column: 68, scope: !3048)
!3055 = !DILocation(line: 1544, column: 50, scope: !3048)
!3056 = !DILocation(line: 1544, column: 18, scope: !3042)
!3057 = !DILocation(line: 1545, column: 61, scope: !3048)
!3058 = !DILocation(line: 1545, column: 67, scope: !3048)
!3059 = !DILocation(line: 1545, column: 41, scope: !3048)
!3060 = !DILocation(line: 1545, column: 49, scope: !3048)
!3061 = !DILocation(line: 1545, column: 56, scope: !3048)
!3062 = !DILocation(line: 1545, column: 59, scope: !3048)
!3063 = !DILocation(line: 1545, column: 15, scope: !3048)
!3064 = !DILocation(line: 1545, column: 23, scope: !3048)
!3065 = !DILocation(line: 1545, column: 38, scope: !3048)
!3066 = !DILocation(line: 1547, column: 35, scope: !3048)
!3067 = !DILocation(line: 1547, column: 15, scope: !3048)
!3068 = !DILocation(line: 1547, column: 23, scope: !3048)
!3069 = !DILocation(line: 1547, column: 30, scope: !3048)
!3070 = !DILocation(line: 1547, column: 33, scope: !3048)
!3071 = !DILocation(line: 1543, column: 57, scope: !3042)
!3072 = !DILocation(line: 1543, column: 62, scope: !3042)
!3073 = !DILocation(line: 1543, column: 11, scope: !3042)
!3074 = distinct !{!3074, !3046, !3075}
!3075 = !DILocation(line: 1547, column: 35, scope: !3036)
!3076 = !DILocation(line: 1542, column: 60, scope: !3030)
!3077 = !DILocation(line: 1542, column: 9, scope: !3030)
!3078 = distinct !{!3078, !3034, !3079}
!3079 = !DILocation(line: 1547, column: 35, scope: !3023)
!3080 = !DILocation(line: 1548, column: 45, scope: !2973)
!3081 = !DILocation(line: 1548, column: 51, scope: !2973)
!3082 = !DILocation(line: 1548, column: 27, scope: !2973)
!3083 = !DILocation(line: 1548, column: 35, scope: !2973)
!3084 = !DILocation(line: 1548, column: 43, scope: !2973)
!3085 = !DILocation(line: 1548, column: 9, scope: !2973)
!3086 = !DILocation(line: 1548, column: 17, scope: !2973)
!3087 = !DILocation(line: 1548, column: 25, scope: !2973)
!3088 = !DILocation(line: 1549, column: 9, scope: !2973)
!3089 = !DILocalVariable(name: "scale", scope: !3090, file: !1, line: 1554, type: !617)
!3090 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1553, column: 7)
!3091 = !DILocation(line: 1554, column: 11, scope: !3090)
!3092 = !DILocation(line: 1555, column: 14, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3090, file: !1, line: 1555, column: 14)
!3094 = !DILocation(line: 1555, column: 19, scope: !3093)
!3095 = !DILocation(line: 1555, column: 14, scope: !3090)
!3096 = !DILocation(line: 1557, column: 17, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 1557, column: 17)
!3098 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 1556, column: 11)
!3099 = !DILocation(line: 1557, column: 23, scope: !3097)
!3100 = !DILocation(line: 1557, column: 27, scope: !3097)
!3101 = !DILocation(line: 1557, column: 17, scope: !3098)
!3102 = !DILocation(line: 1558, column: 31, scope: !3097)
!3103 = !DILocation(line: 1558, column: 39, scope: !3097)
!3104 = !DILocation(line: 1558, column: 46, scope: !3097)
!3105 = !DILocation(line: 1558, column: 15, scope: !3097)
!3106 = !DILocation(line: 1558, column: 23, scope: !3097)
!3107 = !DILocation(line: 1558, column: 29, scope: !3097)
!3108 = !DILocation(line: 1560, column: 60, scope: !3097)
!3109 = !DILocation(line: 1560, column: 66, scope: !3097)
!3110 = !DILocation(line: 1560, column: 59, scope: !3097)
!3111 = !DILocation(line: 1560, column: 69, scope: !3097)
!3112 = !DILocation(line: 1560, column: 48, scope: !3097)
!3113 = !DILocation(line: 1560, column: 31, scope: !3097)
!3114 = !DILocation(line: 1560, column: 39, scope: !3097)
!3115 = !DILocation(line: 1560, column: 46, scope: !3097)
!3116 = !DILocation(line: 1560, column: 15, scope: !3097)
!3117 = !DILocation(line: 1560, column: 23, scope: !3097)
!3118 = !DILocation(line: 1560, column: 29, scope: !3097)
!3119 = !DILocation(line: 1561, column: 48, scope: !3098)
!3120 = !DILocation(line: 1561, column: 56, scope: !3098)
!3121 = !DILocation(line: 1561, column: 61, scope: !3098)
!3122 = !DILocation(line: 1561, column: 64, scope: !3098)
!3123 = !DILocation(line: 1561, column: 25, scope: !3098)
!3124 = !DILocation(line: 1561, column: 33, scope: !3098)
!3125 = !DILocation(line: 1561, column: 35, scope: !3098)
!3126 = !DILocation(line: 1561, column: 13, scope: !3098)
!3127 = !DILocation(line: 1561, column: 21, scope: !3098)
!3128 = !DILocation(line: 1561, column: 23, scope: !3098)
!3129 = !DILocation(line: 1562, column: 21, scope: !3098)
!3130 = !DILocation(line: 1562, column: 27, scope: !3098)
!3131 = !DILocation(line: 1562, column: 19, scope: !3098)
!3132 = !DILocation(line: 1563, column: 11, scope: !3098)
!3133 = !DILocation(line: 1566, column: 18, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !1, line: 1566, column: 18)
!3135 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 1564, column: 14)
!3136 = !DILocation(line: 1566, column: 24, scope: !3134)
!3137 = !DILocation(line: 1566, column: 28, scope: !3134)
!3138 = !DILocation(line: 1566, column: 34, scope: !3134)
!3139 = !DILocation(line: 1566, column: 37, scope: !3134)
!3140 = !DILocation(line: 1566, column: 43, scope: !3134)
!3141 = !DILocation(line: 1566, column: 49, scope: !3134)
!3142 = !DILocation(line: 1566, column: 18, scope: !3135)
!3143 = !DILocation(line: 1567, column: 40, scope: !3134)
!3144 = !DILocation(line: 1567, column: 22, scope: !3134)
!3145 = !DILocation(line: 1567, column: 15, scope: !3134)
!3146 = !DILocation(line: 1568, column: 37, scope: !3135)
!3147 = !DILocation(line: 1568, column: 43, scope: !3135)
!3148 = !DILocation(line: 1568, column: 29, scope: !3135)
!3149 = !DILocation(line: 1568, column: 13, scope: !3135)
!3150 = !DILocation(line: 1568, column: 21, scope: !3135)
!3151 = !DILocation(line: 1568, column: 27, scope: !3135)
!3152 = !DILocation(line: 1569, column: 38, scope: !3135)
!3153 = !DILocation(line: 1569, column: 44, scope: !3135)
!3154 = !DILocation(line: 1569, column: 30, scope: !3135)
!3155 = !DILocation(line: 1569, column: 13, scope: !3135)
!3156 = !DILocation(line: 1569, column: 21, scope: !3135)
!3157 = !DILocation(line: 1569, column: 28, scope: !3135)
!3158 = !DILocation(line: 1570, column: 18, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3135, file: !1, line: 1570, column: 18)
!3160 = !DILocation(line: 1570, column: 24, scope: !3159)
!3161 = !DILocation(line: 1570, column: 28, scope: !3159)
!3162 = !DILocation(line: 1570, column: 34, scope: !3159)
!3163 = !DILocation(line: 1570, column: 37, scope: !3159)
!3164 = !DILocation(line: 1570, column: 43, scope: !3159)
!3165 = !DILocation(line: 1570, column: 57, scope: !3159)
!3166 = !DILocation(line: 1570, column: 65, scope: !3159)
!3167 = !DILocation(line: 1570, column: 49, scope: !3159)
!3168 = !DILocation(line: 1570, column: 47, scope: !3159)
!3169 = !DILocation(line: 1570, column: 71, scope: !3159)
!3170 = !DILocation(line: 1571, column: 18, scope: !3159)
!3171 = !DILocation(line: 1571, column: 24, scope: !3159)
!3172 = !DILocation(line: 1571, column: 28, scope: !3159)
!3173 = !DILocation(line: 1571, column: 34, scope: !3159)
!3174 = !DILocation(line: 1571, column: 37, scope: !3159)
!3175 = !DILocation(line: 1571, column: 43, scope: !3159)
!3176 = !DILocation(line: 1571, column: 57, scope: !3159)
!3177 = !DILocation(line: 1571, column: 65, scope: !3159)
!3178 = !DILocation(line: 1571, column: 49, scope: !3159)
!3179 = !DILocation(line: 1571, column: 47, scope: !3159)
!3180 = !DILocation(line: 1570, column: 18, scope: !3135)
!3181 = !DILocation(line: 1572, column: 40, scope: !3159)
!3182 = !DILocation(line: 1572, column: 22, scope: !3159)
!3183 = !DILocation(line: 1572, column: 15, scope: !3159)
!3184 = !DILocation(line: 1573, column: 35, scope: !3135)
!3185 = !DILocation(line: 1573, column: 41, scope: !3135)
!3186 = !DILocation(line: 1573, column: 25, scope: !3135)
!3187 = !DILocation(line: 1573, column: 13, scope: !3135)
!3188 = !DILocation(line: 1573, column: 21, scope: !3135)
!3189 = !DILocation(line: 1573, column: 23, scope: !3135)
!3190 = !DILocation(line: 1574, column: 35, scope: !3135)
!3191 = !DILocation(line: 1574, column: 41, scope: !3135)
!3192 = !DILocation(line: 1574, column: 25, scope: !3135)
!3193 = !DILocation(line: 1574, column: 13, scope: !3135)
!3194 = !DILocation(line: 1574, column: 21, scope: !3135)
!3195 = !DILocation(line: 1574, column: 23, scope: !3135)
!3196 = !DILocation(line: 1575, column: 19, scope: !3135)
!3197 = !DILocation(line: 1577, column: 56, scope: !3090)
!3198 = !DILocation(line: 1577, column: 64, scope: !3090)
!3199 = !DILocation(line: 1578, column: 11, scope: !3090)
!3200 = !DILocation(line: 1578, column: 19, scope: !3090)
!3201 = !DILocation(line: 1578, column: 25, scope: !3090)
!3202 = !DILocation(line: 1577, column: 35, scope: !3090)
!3203 = !DILocation(line: 1577, column: 24, scope: !3090)
!3204 = !DILocation(line: 1577, column: 9, scope: !3090)
!3205 = !DILocation(line: 1577, column: 17, scope: !3090)
!3206 = !DILocation(line: 1577, column: 23, scope: !3090)
!3207 = !DILocation(line: 1579, column: 13, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3090, file: !1, line: 1579, column: 13)
!3209 = !DILocation(line: 1579, column: 21, scope: !3208)
!3210 = !DILocation(line: 1579, column: 28, scope: !3208)
!3211 = !DILocation(line: 1579, column: 13, scope: !3090)
!3212 = !DILocation(line: 1580, column: 36, scope: !3208)
!3213 = !DILocation(line: 1580, column: 18, scope: !3208)
!3214 = !DILocation(line: 1580, column: 11, scope: !3208)
!3215 = !DILocation(line: 1583, column: 22, scope: !3090)
!3216 = !DILocation(line: 1583, column: 30, scope: !3090)
!3217 = !DILocation(line: 1583, column: 36, scope: !3090)
!3218 = !DILocation(line: 1583, column: 44, scope: !3090)
!3219 = !DILocation(line: 1583, column: 35, scope: !3090)
!3220 = !DILocation(line: 1583, column: 10, scope: !3090)
!3221 = !DILocation(line: 1584, column: 16, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3090, file: !1, line: 1584, column: 9)
!3223 = !DILocation(line: 1584, column: 15, scope: !3222)
!3224 = !DILocation(line: 1584, column: 20, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 1584, column: 9)
!3226 = !DILocation(line: 1584, column: 24, scope: !3225)
!3227 = !DILocation(line: 1584, column: 22, scope: !3225)
!3228 = !DILocation(line: 1584, column: 9, scope: !3222)
!3229 = !DILocation(line: 1585, column: 33, scope: !3225)
!3230 = !DILocation(line: 1585, column: 13, scope: !3225)
!3231 = !DILocation(line: 1585, column: 21, scope: !3225)
!3232 = !DILocation(line: 1585, column: 28, scope: !3225)
!3233 = !DILocation(line: 1585, column: 31, scope: !3225)
!3234 = !DILocation(line: 1584, column: 28, scope: !3225)
!3235 = !DILocation(line: 1584, column: 9, scope: !3225)
!3236 = distinct !{!3236, !3228, !3237}
!3237 = !DILocation(line: 1585, column: 33, scope: !3222)
!3238 = !DILocation(line: 1586, column: 45, scope: !3090)
!3239 = !DILocation(line: 1586, column: 27, scope: !3090)
!3240 = !DILocation(line: 1586, column: 35, scope: !3090)
!3241 = !DILocation(line: 1586, column: 43, scope: !3090)
!3242 = !DILocation(line: 1586, column: 9, scope: !3090)
!3243 = !DILocation(line: 1586, column: 17, scope: !3090)
!3244 = !DILocation(line: 1586, column: 25, scope: !3090)
!3245 = !DILocation(line: 1587, column: 34, scope: !3090)
!3246 = !DILocation(line: 1587, column: 40, scope: !3090)
!3247 = !DILocation(line: 1587, column: 39, scope: !3090)
!3248 = !DILocation(line: 1587, column: 9, scope: !3090)
!3249 = !DILocation(line: 1587, column: 17, scope: !3090)
!3250 = !DILocation(line: 1587, column: 32, scope: !3090)
!3251 = !DILocation(line: 1588, column: 9, scope: !3090)
!3252 = !DILocation(line: 1592, column: 15, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1592, column: 15)
!3254 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1591, column: 9)
!3255 = !DILocation(line: 1592, column: 21, scope: !3253)
!3256 = !DILocation(line: 1592, column: 25, scope: !3253)
!3257 = !DILocation(line: 1592, column: 15, scope: !3254)
!3258 = !DILocation(line: 1593, column: 29, scope: !3253)
!3259 = !DILocation(line: 1593, column: 37, scope: !3253)
!3260 = !DILocation(line: 1593, column: 44, scope: !3253)
!3261 = !DILocation(line: 1593, column: 13, scope: !3253)
!3262 = !DILocation(line: 1593, column: 21, scope: !3253)
!3263 = !DILocation(line: 1593, column: 27, scope: !3253)
!3264 = !DILocation(line: 1595, column: 55, scope: !3253)
!3265 = !DILocation(line: 1595, column: 61, scope: !3253)
!3266 = !DILocation(line: 1595, column: 47, scope: !3253)
!3267 = !DILocation(line: 1595, column: 65, scope: !3253)
!3268 = !DILocation(line: 1595, column: 67, scope: !3253)
!3269 = !DILocation(line: 1595, column: 29, scope: !3253)
!3270 = !DILocation(line: 1595, column: 37, scope: !3253)
!3271 = !DILocation(line: 1595, column: 44, scope: !3253)
!3272 = !DILocation(line: 1595, column: 13, scope: !3253)
!3273 = !DILocation(line: 1595, column: 21, scope: !3253)
!3274 = !DILocation(line: 1595, column: 27, scope: !3253)
!3275 = !DILocation(line: 1596, column: 46, scope: !3254)
!3276 = !DILocation(line: 1596, column: 54, scope: !3254)
!3277 = !DILocation(line: 1596, column: 59, scope: !3254)
!3278 = !DILocation(line: 1596, column: 62, scope: !3254)
!3279 = !DILocation(line: 1596, column: 23, scope: !3254)
!3280 = !DILocation(line: 1596, column: 31, scope: !3254)
!3281 = !DILocation(line: 1596, column: 33, scope: !3254)
!3282 = !DILocation(line: 1596, column: 11, scope: !3254)
!3283 = !DILocation(line: 1596, column: 19, scope: !3254)
!3284 = !DILocation(line: 1596, column: 21, scope: !3254)
!3285 = !DILocation(line: 1598, column: 58, scope: !3254)
!3286 = !DILocation(line: 1598, column: 66, scope: !3254)
!3287 = !DILocation(line: 1599, column: 13, scope: !3254)
!3288 = !DILocation(line: 1599, column: 21, scope: !3254)
!3289 = !DILocation(line: 1599, column: 27, scope: !3254)
!3290 = !DILocation(line: 1598, column: 37, scope: !3254)
!3291 = !DILocation(line: 1598, column: 26, scope: !3254)
!3292 = !DILocation(line: 1598, column: 11, scope: !3254)
!3293 = !DILocation(line: 1598, column: 19, scope: !3254)
!3294 = !DILocation(line: 1598, column: 25, scope: !3254)
!3295 = !DILocation(line: 1600, column: 15, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1600, column: 15)
!3297 = !DILocation(line: 1600, column: 23, scope: !3296)
!3298 = !DILocation(line: 1600, column: 30, scope: !3296)
!3299 = !DILocation(line: 1600, column: 15, scope: !3254)
!3300 = !DILocation(line: 1601, column: 38, scope: !3296)
!3301 = !DILocation(line: 1601, column: 20, scope: !3296)
!3302 = !DILocation(line: 1601, column: 13, scope: !3296)
!3303 = !DILocation(line: 1603, column: 18, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1603, column: 11)
!3305 = !DILocation(line: 1603, column: 25, scope: !3304)
!3306 = !DILocation(line: 1603, column: 33, scope: !3304)
!3307 = !DILocation(line: 1603, column: 24, scope: !3304)
!3308 = !DILocation(line: 1603, column: 23, scope: !3304)
!3309 = !DILocation(line: 1603, column: 17, scope: !3304)
!3310 = !DILocation(line: 1603, column: 36, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 1603, column: 11)
!3312 = !DILocation(line: 1603, column: 50, scope: !3311)
!3313 = !DILocation(line: 1603, column: 58, scope: !3311)
!3314 = !DILocation(line: 1603, column: 38, scope: !3311)
!3315 = !DILocation(line: 1603, column: 11, scope: !3304)
!3316 = !DILocation(line: 1604, column: 22, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3311, file: !1, line: 1604, column: 13)
!3318 = !DILocation(line: 1604, column: 30, scope: !3317)
!3319 = !DILocation(line: 1604, column: 21, scope: !3317)
!3320 = !DILocation(line: 1604, column: 20, scope: !3317)
!3321 = !DILocation(line: 1604, column: 19, scope: !3317)
!3322 = !DILocation(line: 1604, column: 33, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3317, file: !1, line: 1604, column: 13)
!3324 = !DILocation(line: 1604, column: 47, scope: !3323)
!3325 = !DILocation(line: 1604, column: 55, scope: !3323)
!3326 = !DILocation(line: 1604, column: 35, scope: !3323)
!3327 = !DILocation(line: 1604, column: 13, scope: !3317)
!3328 = !DILocation(line: 1605, column: 33, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3323, file: !1, line: 1605, column: 20)
!3330 = !DILocation(line: 1605, column: 21, scope: !3329)
!3331 = !DILocation(line: 1605, column: 48, scope: !3329)
!3332 = !DILocation(line: 1605, column: 36, scope: !3329)
!3333 = !DILocation(line: 1605, column: 35, scope: !3329)
!3334 = !DILocation(line: 1606, column: 32, scope: !3329)
!3335 = !DILocation(line: 1606, column: 40, scope: !3329)
!3336 = !DILocation(line: 1606, column: 51, scope: !3329)
!3337 = !DILocation(line: 1606, column: 59, scope: !3329)
!3338 = !DILocation(line: 1606, column: 60, scope: !3329)
!3339 = !DILocation(line: 1606, column: 42, scope: !3329)
!3340 = !DILocation(line: 1605, column: 52, scope: !3329)
!3341 = !DILocation(line: 1605, column: 20, scope: !3323)
!3342 = !DILocation(line: 1607, column: 63, scope: !3329)
!3343 = !DILocation(line: 1607, column: 69, scope: !3329)
!3344 = !DILocation(line: 1607, column: 43, scope: !3329)
!3345 = !DILocation(line: 1607, column: 51, scope: !3329)
!3346 = !DILocation(line: 1607, column: 58, scope: !3329)
!3347 = !DILocation(line: 1607, column: 61, scope: !3329)
!3348 = !DILocation(line: 1607, column: 17, scope: !3329)
!3349 = !DILocation(line: 1607, column: 25, scope: !3329)
!3350 = !DILocation(line: 1607, column: 40, scope: !3329)
!3351 = !DILocation(line: 1609, column: 37, scope: !3329)
!3352 = !DILocation(line: 1609, column: 17, scope: !3329)
!3353 = !DILocation(line: 1609, column: 25, scope: !3329)
!3354 = !DILocation(line: 1609, column: 32, scope: !3329)
!3355 = !DILocation(line: 1609, column: 35, scope: !3329)
!3356 = !DILocation(line: 1606, column: 63, scope: !3329)
!3357 = !DILocation(line: 1604, column: 59, scope: !3323)
!3358 = !DILocation(line: 1604, column: 64, scope: !3323)
!3359 = !DILocation(line: 1604, column: 13, scope: !3323)
!3360 = distinct !{!3360, !3327, !3361}
!3361 = !DILocation(line: 1609, column: 37, scope: !3317)
!3362 = !DILocation(line: 1603, column: 62, scope: !3311)
!3363 = !DILocation(line: 1603, column: 11, scope: !3311)
!3364 = distinct !{!3364, !3315, !3365}
!3365 = !DILocation(line: 1609, column: 37, scope: !3304)
!3366 = !DILocation(line: 1610, column: 47, scope: !3254)
!3367 = !DILocation(line: 1610, column: 53, scope: !3254)
!3368 = !DILocation(line: 1610, column: 29, scope: !3254)
!3369 = !DILocation(line: 1610, column: 37, scope: !3254)
!3370 = !DILocation(line: 1610, column: 45, scope: !3254)
!3371 = !DILocation(line: 1610, column: 11, scope: !3254)
!3372 = !DILocation(line: 1610, column: 19, scope: !3254)
!3373 = !DILocation(line: 1610, column: 27, scope: !3254)
!3374 = !DILocation(line: 1611, column: 11, scope: !3254)
!3375 = !DILocalVariable(name: "limit", scope: !3376, file: !1, line: 1616, type: !609)
!3376 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1614, column: 9)
!3377 = !DILocation(line: 1616, column: 13, scope: !3376)
!3378 = !DILocation(line: 1616, column: 31, scope: !3376)
!3379 = !DILocation(line: 1616, column: 37, scope: !3376)
!3380 = !DILocation(line: 1616, column: 41, scope: !3376)
!3381 = !DILocation(line: 1616, column: 47, scope: !3376)
!3382 = !DILocation(line: 1616, column: 40, scope: !3376)
!3383 = !DILocation(line: 1616, column: 21, scope: !3376)
!3384 = !DILocation(line: 1618, column: 15, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1618, column: 15)
!3386 = !DILocation(line: 1618, column: 21, scope: !3385)
!3387 = !DILocation(line: 1618, column: 25, scope: !3385)
!3388 = !DILocation(line: 1618, column: 15, scope: !3376)
!3389 = !DILocation(line: 1619, column: 29, scope: !3385)
!3390 = !DILocation(line: 1619, column: 37, scope: !3385)
!3391 = !DILocation(line: 1619, column: 44, scope: !3385)
!3392 = !DILocation(line: 1619, column: 13, scope: !3385)
!3393 = !DILocation(line: 1619, column: 21, scope: !3385)
!3394 = !DILocation(line: 1619, column: 27, scope: !3385)
!3395 = !DILocation(line: 1619, column: 56, scope: !3385)
!3396 = !DILocation(line: 1621, column: 59, scope: !3385)
!3397 = !DILocation(line: 1621, column: 65, scope: !3385)
!3398 = !DILocation(line: 1621, column: 54, scope: !3385)
!3399 = !DILocation(line: 1621, column: 46, scope: !3385)
!3400 = !DILocation(line: 1621, column: 69, scope: !3385)
!3401 = !DILocation(line: 1621, column: 71, scope: !3385)
!3402 = !DILocation(line: 1621, column: 29, scope: !3385)
!3403 = !DILocation(line: 1621, column: 37, scope: !3385)
!3404 = !DILocation(line: 1621, column: 44, scope: !3385)
!3405 = !DILocation(line: 1621, column: 13, scope: !3385)
!3406 = !DILocation(line: 1621, column: 21, scope: !3385)
!3407 = !DILocation(line: 1621, column: 27, scope: !3385)
!3408 = !DILocation(line: 1622, column: 46, scope: !3376)
!3409 = !DILocation(line: 1622, column: 54, scope: !3376)
!3410 = !DILocation(line: 1622, column: 59, scope: !3376)
!3411 = !DILocation(line: 1622, column: 62, scope: !3376)
!3412 = !DILocation(line: 1622, column: 23, scope: !3376)
!3413 = !DILocation(line: 1622, column: 31, scope: !3376)
!3414 = !DILocation(line: 1622, column: 33, scope: !3376)
!3415 = !DILocation(line: 1622, column: 11, scope: !3376)
!3416 = !DILocation(line: 1622, column: 19, scope: !3376)
!3417 = !DILocation(line: 1622, column: 21, scope: !3376)
!3418 = !DILocation(line: 1624, column: 58, scope: !3376)
!3419 = !DILocation(line: 1624, column: 66, scope: !3376)
!3420 = !DILocation(line: 1625, column: 13, scope: !3376)
!3421 = !DILocation(line: 1625, column: 21, scope: !3376)
!3422 = !DILocation(line: 1625, column: 27, scope: !3376)
!3423 = !DILocation(line: 1624, column: 37, scope: !3376)
!3424 = !DILocation(line: 1624, column: 26, scope: !3376)
!3425 = !DILocation(line: 1624, column: 11, scope: !3376)
!3426 = !DILocation(line: 1624, column: 19, scope: !3376)
!3427 = !DILocation(line: 1624, column: 25, scope: !3376)
!3428 = !DILocation(line: 1626, column: 15, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1626, column: 15)
!3430 = !DILocation(line: 1626, column: 23, scope: !3429)
!3431 = !DILocation(line: 1626, column: 30, scope: !3429)
!3432 = !DILocation(line: 1626, column: 15, scope: !3376)
!3433 = !DILocation(line: 1627, column: 38, scope: !3429)
!3434 = !DILocation(line: 1627, column: 20, scope: !3429)
!3435 = !DILocation(line: 1627, column: 13, scope: !3429)
!3436 = !DILocation(line: 1629, column: 18, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1629, column: 11)
!3438 = !DILocation(line: 1629, column: 25, scope: !3437)
!3439 = !DILocation(line: 1629, column: 33, scope: !3437)
!3440 = !DILocation(line: 1629, column: 24, scope: !3437)
!3441 = !DILocation(line: 1629, column: 23, scope: !3437)
!3442 = !DILocation(line: 1629, column: 17, scope: !3437)
!3443 = !DILocation(line: 1629, column: 36, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3437, file: !1, line: 1629, column: 11)
!3445 = !DILocation(line: 1629, column: 50, scope: !3444)
!3446 = !DILocation(line: 1629, column: 58, scope: !3444)
!3447 = !DILocation(line: 1629, column: 38, scope: !3444)
!3448 = !DILocation(line: 1629, column: 11, scope: !3437)
!3449 = !DILocation(line: 1630, column: 22, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3444, file: !1, line: 1630, column: 13)
!3451 = !DILocation(line: 1630, column: 30, scope: !3450)
!3452 = !DILocation(line: 1630, column: 21, scope: !3450)
!3453 = !DILocation(line: 1630, column: 20, scope: !3450)
!3454 = !DILocation(line: 1630, column: 19, scope: !3450)
!3455 = !DILocation(line: 1630, column: 33, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3450, file: !1, line: 1630, column: 13)
!3457 = !DILocation(line: 1630, column: 47, scope: !3456)
!3458 = !DILocation(line: 1630, column: 55, scope: !3456)
!3459 = !DILocation(line: 1630, column: 35, scope: !3456)
!3460 = !DILocation(line: 1630, column: 13, scope: !3450)
!3461 = !DILocation(line: 1631, column: 20, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3456, file: !1, line: 1631, column: 19)
!3463 = !DILocation(line: 1631, column: 22, scope: !3462)
!3464 = !DILocation(line: 1631, column: 21, scope: !3462)
!3465 = !DILocation(line: 1631, column: 24, scope: !3462)
!3466 = !DILocation(line: 1631, column: 26, scope: !3462)
!3467 = !DILocation(line: 1631, column: 25, scope: !3462)
!3468 = !DILocation(line: 1631, column: 23, scope: !3462)
!3469 = !DILocation(line: 1631, column: 32, scope: !3462)
!3470 = !DILocation(line: 1631, column: 29, scope: !3462)
!3471 = !DILocation(line: 1631, column: 19, scope: !3456)
!3472 = !DILocation(line: 1632, column: 63, scope: !3462)
!3473 = !DILocation(line: 1632, column: 69, scope: !3462)
!3474 = !DILocation(line: 1632, column: 43, scope: !3462)
!3475 = !DILocation(line: 1632, column: 51, scope: !3462)
!3476 = !DILocation(line: 1632, column: 58, scope: !3462)
!3477 = !DILocation(line: 1632, column: 61, scope: !3462)
!3478 = !DILocation(line: 1632, column: 17, scope: !3462)
!3479 = !DILocation(line: 1632, column: 25, scope: !3462)
!3480 = !DILocation(line: 1632, column: 40, scope: !3462)
!3481 = !DILocation(line: 1634, column: 37, scope: !3462)
!3482 = !DILocation(line: 1634, column: 17, scope: !3462)
!3483 = !DILocation(line: 1634, column: 25, scope: !3462)
!3484 = !DILocation(line: 1634, column: 32, scope: !3462)
!3485 = !DILocation(line: 1634, column: 35, scope: !3462)
!3486 = !DILocation(line: 1630, column: 59, scope: !3456)
!3487 = !DILocation(line: 1630, column: 64, scope: !3456)
!3488 = !DILocation(line: 1630, column: 13, scope: !3456)
!3489 = distinct !{!3489, !3460, !3490}
!3490 = !DILocation(line: 1634, column: 37, scope: !3450)
!3491 = !DILocation(line: 1629, column: 62, scope: !3444)
!3492 = !DILocation(line: 1629, column: 11, scope: !3444)
!3493 = distinct !{!3493, !3448, !3494}
!3494 = !DILocation(line: 1634, column: 37, scope: !3437)
!3495 = !DILocation(line: 1635, column: 47, scope: !3376)
!3496 = !DILocation(line: 1635, column: 53, scope: !3376)
!3497 = !DILocation(line: 1635, column: 29, scope: !3376)
!3498 = !DILocation(line: 1635, column: 37, scope: !3376)
!3499 = !DILocation(line: 1635, column: 45, scope: !3376)
!3500 = !DILocation(line: 1635, column: 11, scope: !3376)
!3501 = !DILocation(line: 1635, column: 19, scope: !3376)
!3502 = !DILocation(line: 1635, column: 27, scope: !3376)
!3503 = !DILocation(line: 1636, column: 11, scope: !3376)
!3504 = !DILocation(line: 1640, column: 15, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 1640, column: 15)
!3506 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1639, column: 9)
!3507 = !DILocation(line: 1640, column: 21, scope: !3505)
!3508 = !DILocation(line: 1640, column: 25, scope: !3505)
!3509 = !DILocation(line: 1640, column: 15, scope: !3506)
!3510 = !DILocation(line: 1641, column: 29, scope: !3505)
!3511 = !DILocation(line: 1641, column: 37, scope: !3505)
!3512 = !DILocation(line: 1641, column: 44, scope: !3505)
!3513 = !DILocation(line: 1641, column: 13, scope: !3505)
!3514 = !DILocation(line: 1641, column: 21, scope: !3505)
!3515 = !DILocation(line: 1641, column: 27, scope: !3505)
!3516 = !DILocation(line: 1643, column: 55, scope: !3505)
!3517 = !DILocation(line: 1643, column: 61, scope: !3505)
!3518 = !DILocation(line: 1643, column: 47, scope: !3505)
!3519 = !DILocation(line: 1643, column: 65, scope: !3505)
!3520 = !DILocation(line: 1643, column: 67, scope: !3505)
!3521 = !DILocation(line: 1643, column: 29, scope: !3505)
!3522 = !DILocation(line: 1643, column: 37, scope: !3505)
!3523 = !DILocation(line: 1643, column: 44, scope: !3505)
!3524 = !DILocation(line: 1643, column: 13, scope: !3505)
!3525 = !DILocation(line: 1643, column: 21, scope: !3505)
!3526 = !DILocation(line: 1643, column: 27, scope: !3505)
!3527 = !DILocation(line: 1644, column: 46, scope: !3506)
!3528 = !DILocation(line: 1644, column: 54, scope: !3506)
!3529 = !DILocation(line: 1644, column: 59, scope: !3506)
!3530 = !DILocation(line: 1644, column: 62, scope: !3506)
!3531 = !DILocation(line: 1644, column: 23, scope: !3506)
!3532 = !DILocation(line: 1644, column: 31, scope: !3506)
!3533 = !DILocation(line: 1644, column: 33, scope: !3506)
!3534 = !DILocation(line: 1644, column: 11, scope: !3506)
!3535 = !DILocation(line: 1644, column: 19, scope: !3506)
!3536 = !DILocation(line: 1644, column: 21, scope: !3506)
!3537 = !DILocation(line: 1646, column: 58, scope: !3506)
!3538 = !DILocation(line: 1646, column: 66, scope: !3506)
!3539 = !DILocation(line: 1647, column: 13, scope: !3506)
!3540 = !DILocation(line: 1647, column: 21, scope: !3506)
!3541 = !DILocation(line: 1647, column: 27, scope: !3506)
!3542 = !DILocation(line: 1646, column: 37, scope: !3506)
!3543 = !DILocation(line: 1646, column: 26, scope: !3506)
!3544 = !DILocation(line: 1646, column: 11, scope: !3506)
!3545 = !DILocation(line: 1646, column: 19, scope: !3506)
!3546 = !DILocation(line: 1646, column: 25, scope: !3506)
!3547 = !DILocation(line: 1648, column: 15, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 1648, column: 15)
!3549 = !DILocation(line: 1648, column: 23, scope: !3548)
!3550 = !DILocation(line: 1648, column: 30, scope: !3548)
!3551 = !DILocation(line: 1648, column: 15, scope: !3506)
!3552 = !DILocation(line: 1649, column: 38, scope: !3548)
!3553 = !DILocation(line: 1649, column: 20, scope: !3548)
!3554 = !DILocation(line: 1649, column: 13, scope: !3548)
!3555 = !DILocation(line: 1652, column: 18, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 1652, column: 11)
!3557 = !DILocation(line: 1652, column: 25, scope: !3556)
!3558 = !DILocation(line: 1652, column: 33, scope: !3556)
!3559 = !DILocation(line: 1652, column: 24, scope: !3556)
!3560 = !DILocation(line: 1652, column: 23, scope: !3556)
!3561 = !DILocation(line: 1652, column: 17, scope: !3556)
!3562 = !DILocation(line: 1652, column: 36, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3556, file: !1, line: 1652, column: 11)
!3564 = !DILocation(line: 1652, column: 50, scope: !3563)
!3565 = !DILocation(line: 1652, column: 58, scope: !3563)
!3566 = !DILocation(line: 1652, column: 38, scope: !3563)
!3567 = !DILocation(line: 1652, column: 11, scope: !3556)
!3568 = !DILocation(line: 1653, column: 22, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3563, file: !1, line: 1653, column: 13)
!3570 = !DILocation(line: 1653, column: 30, scope: !3569)
!3571 = !DILocation(line: 1653, column: 21, scope: !3569)
!3572 = !DILocation(line: 1653, column: 20, scope: !3569)
!3573 = !DILocation(line: 1653, column: 19, scope: !3569)
!3574 = !DILocation(line: 1653, column: 33, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3569, file: !1, line: 1653, column: 13)
!3576 = !DILocation(line: 1653, column: 47, scope: !3575)
!3577 = !DILocation(line: 1653, column: 55, scope: !3575)
!3578 = !DILocation(line: 1653, column: 35, scope: !3575)
!3579 = !DILocation(line: 1653, column: 13, scope: !3569)
!3580 = !DILocation(line: 1654, column: 36, scope: !3575)
!3581 = !DILocation(line: 1654, column: 38, scope: !3575)
!3582 = !DILocation(line: 1654, column: 43, scope: !3575)
!3583 = !DILocation(line: 1654, column: 46, scope: !3575)
!3584 = !DILocation(line: 1654, column: 48, scope: !3575)
!3585 = !DILocation(line: 1654, column: 35, scope: !3575)
!3586 = !DILocation(line: 1654, column: 56, scope: !3575)
!3587 = !DILocation(line: 1654, column: 62, scope: !3575)
!3588 = !DILocation(line: 1654, column: 70, scope: !3575)
!3589 = !DILocation(line: 1654, column: 15, scope: !3575)
!3590 = !DILocation(line: 1654, column: 23, scope: !3575)
!3591 = !DILocation(line: 1654, column: 30, scope: !3575)
!3592 = !DILocation(line: 1654, column: 33, scope: !3575)
!3593 = !DILocation(line: 1653, column: 59, scope: !3575)
!3594 = !DILocation(line: 1653, column: 64, scope: !3575)
!3595 = !DILocation(line: 1653, column: 13, scope: !3575)
!3596 = distinct !{!3596, !3579, !3597}
!3597 = !DILocation(line: 1654, column: 70, scope: !3569)
!3598 = !DILocation(line: 1652, column: 62, scope: !3563)
!3599 = !DILocation(line: 1652, column: 11, scope: !3563)
!3600 = distinct !{!3600, !3567, !3601}
!3601 = !DILocation(line: 1654, column: 70, scope: !3556)
!3602 = !DILocation(line: 1655, column: 47, scope: !3506)
!3603 = !DILocation(line: 1655, column: 53, scope: !3506)
!3604 = !DILocation(line: 1655, column: 29, scope: !3506)
!3605 = !DILocation(line: 1655, column: 37, scope: !3506)
!3606 = !DILocation(line: 1655, column: 45, scope: !3506)
!3607 = !DILocation(line: 1655, column: 11, scope: !3506)
!3608 = !DILocation(line: 1655, column: 19, scope: !3506)
!3609 = !DILocation(line: 1655, column: 27, scope: !3506)
!3610 = !DILocation(line: 1656, column: 36, scope: !3506)
!3611 = !DILocation(line: 1656, column: 42, scope: !3506)
!3612 = !DILocation(line: 1656, column: 49, scope: !3506)
!3613 = !DILocation(line: 1656, column: 57, scope: !3506)
!3614 = !DILocation(line: 1656, column: 62, scope: !3506)
!3615 = !DILocation(line: 1656, column: 67, scope: !3506)
!3616 = !DILocation(line: 1656, column: 47, scope: !3506)
!3617 = !DILocation(line: 1656, column: 11, scope: !3506)
!3618 = !DILocation(line: 1656, column: 19, scope: !3506)
!3619 = !DILocation(line: 1656, column: 34, scope: !3506)
!3620 = !DILocation(line: 1657, column: 11, scope: !3506)
!3621 = !DILocation(line: 1661, column: 15, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 1661, column: 15)
!3623 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1660, column: 9)
!3624 = !DILocation(line: 1661, column: 21, scope: !3622)
!3625 = !DILocation(line: 1661, column: 25, scope: !3622)
!3626 = !DILocation(line: 1661, column: 15, scope: !3623)
!3627 = !DILocation(line: 1662, column: 29, scope: !3622)
!3628 = !DILocation(line: 1662, column: 37, scope: !3622)
!3629 = !DILocation(line: 1662, column: 44, scope: !3622)
!3630 = !DILocation(line: 1662, column: 13, scope: !3622)
!3631 = !DILocation(line: 1662, column: 21, scope: !3622)
!3632 = !DILocation(line: 1662, column: 27, scope: !3622)
!3633 = !DILocation(line: 1664, column: 55, scope: !3622)
!3634 = !DILocation(line: 1664, column: 61, scope: !3622)
!3635 = !DILocation(line: 1664, column: 47, scope: !3622)
!3636 = !DILocation(line: 1664, column: 65, scope: !3622)
!3637 = !DILocation(line: 1664, column: 67, scope: !3622)
!3638 = !DILocation(line: 1664, column: 29, scope: !3622)
!3639 = !DILocation(line: 1664, column: 37, scope: !3622)
!3640 = !DILocation(line: 1664, column: 44, scope: !3622)
!3641 = !DILocation(line: 1664, column: 13, scope: !3622)
!3642 = !DILocation(line: 1664, column: 21, scope: !3622)
!3643 = !DILocation(line: 1664, column: 27, scope: !3622)
!3644 = !DILocation(line: 1665, column: 46, scope: !3623)
!3645 = !DILocation(line: 1665, column: 54, scope: !3623)
!3646 = !DILocation(line: 1665, column: 59, scope: !3623)
!3647 = !DILocation(line: 1665, column: 62, scope: !3623)
!3648 = !DILocation(line: 1665, column: 23, scope: !3623)
!3649 = !DILocation(line: 1665, column: 31, scope: !3623)
!3650 = !DILocation(line: 1665, column: 33, scope: !3623)
!3651 = !DILocation(line: 1665, column: 11, scope: !3623)
!3652 = !DILocation(line: 1665, column: 19, scope: !3623)
!3653 = !DILocation(line: 1665, column: 21, scope: !3623)
!3654 = !DILocation(line: 1667, column: 58, scope: !3623)
!3655 = !DILocation(line: 1667, column: 66, scope: !3623)
!3656 = !DILocation(line: 1668, column: 13, scope: !3623)
!3657 = !DILocation(line: 1668, column: 21, scope: !3623)
!3658 = !DILocation(line: 1668, column: 27, scope: !3623)
!3659 = !DILocation(line: 1667, column: 37, scope: !3623)
!3660 = !DILocation(line: 1667, column: 26, scope: !3623)
!3661 = !DILocation(line: 1667, column: 11, scope: !3623)
!3662 = !DILocation(line: 1667, column: 19, scope: !3623)
!3663 = !DILocation(line: 1667, column: 25, scope: !3623)
!3664 = !DILocation(line: 1669, column: 15, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 1669, column: 15)
!3666 = !DILocation(line: 1669, column: 23, scope: !3665)
!3667 = !DILocation(line: 1669, column: 30, scope: !3665)
!3668 = !DILocation(line: 1669, column: 15, scope: !3623)
!3669 = !DILocation(line: 1670, column: 38, scope: !3665)
!3670 = !DILocation(line: 1670, column: 20, scope: !3665)
!3671 = !DILocation(line: 1670, column: 13, scope: !3665)
!3672 = !DILocation(line: 1673, column: 18, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 1673, column: 11)
!3674 = !DILocation(line: 1673, column: 25, scope: !3673)
!3675 = !DILocation(line: 1673, column: 33, scope: !3673)
!3676 = !DILocation(line: 1673, column: 24, scope: !3673)
!3677 = !DILocation(line: 1673, column: 23, scope: !3673)
!3678 = !DILocation(line: 1673, column: 17, scope: !3673)
!3679 = !DILocation(line: 1673, column: 36, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3673, file: !1, line: 1673, column: 11)
!3681 = !DILocation(line: 1673, column: 50, scope: !3680)
!3682 = !DILocation(line: 1673, column: 58, scope: !3680)
!3683 = !DILocation(line: 1673, column: 38, scope: !3680)
!3684 = !DILocation(line: 1673, column: 11, scope: !3673)
!3685 = !DILocation(line: 1674, column: 22, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3680, file: !1, line: 1674, column: 13)
!3687 = !DILocation(line: 1674, column: 30, scope: !3686)
!3688 = !DILocation(line: 1674, column: 21, scope: !3686)
!3689 = !DILocation(line: 1674, column: 20, scope: !3686)
!3690 = !DILocation(line: 1674, column: 19, scope: !3686)
!3691 = !DILocation(line: 1674, column: 33, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !1, line: 1674, column: 13)
!3693 = !DILocation(line: 1674, column: 47, scope: !3692)
!3694 = !DILocation(line: 1674, column: 55, scope: !3692)
!3695 = !DILocation(line: 1674, column: 35, scope: !3692)
!3696 = !DILocation(line: 1674, column: 13, scope: !3686)
!3697 = !DILocation(line: 1675, column: 36, scope: !3692)
!3698 = !DILocation(line: 1675, column: 41, scope: !3692)
!3699 = !DILocation(line: 1675, column: 38, scope: !3692)
!3700 = !DILocation(line: 1675, column: 43, scope: !3692)
!3701 = !DILocation(line: 1675, column: 46, scope: !3692)
!3702 = !DILocation(line: 1675, column: 52, scope: !3692)
!3703 = !DILocation(line: 1675, column: 51, scope: !3692)
!3704 = !DILocation(line: 1675, column: 48, scope: !3692)
!3705 = !DILocation(line: 1675, column: 35, scope: !3692)
!3706 = !DILocation(line: 1675, column: 57, scope: !3692)
!3707 = !DILocation(line: 1675, column: 63, scope: !3692)
!3708 = !DILocation(line: 1675, column: 71, scope: !3692)
!3709 = !DILocation(line: 1675, column: 15, scope: !3692)
!3710 = !DILocation(line: 1675, column: 23, scope: !3692)
!3711 = !DILocation(line: 1675, column: 30, scope: !3692)
!3712 = !DILocation(line: 1675, column: 33, scope: !3692)
!3713 = !DILocation(line: 1674, column: 59, scope: !3692)
!3714 = !DILocation(line: 1674, column: 64, scope: !3692)
!3715 = !DILocation(line: 1674, column: 13, scope: !3692)
!3716 = distinct !{!3716, !3696, !3717}
!3717 = !DILocation(line: 1675, column: 71, scope: !3686)
!3718 = !DILocation(line: 1673, column: 62, scope: !3680)
!3719 = !DILocation(line: 1673, column: 11, scope: !3680)
!3720 = distinct !{!3720, !3684, !3721}
!3721 = !DILocation(line: 1675, column: 71, scope: !3673)
!3722 = !DILocation(line: 1676, column: 47, scope: !3623)
!3723 = !DILocation(line: 1676, column: 53, scope: !3623)
!3724 = !DILocation(line: 1676, column: 29, scope: !3623)
!3725 = !DILocation(line: 1676, column: 37, scope: !3623)
!3726 = !DILocation(line: 1676, column: 45, scope: !3623)
!3727 = !DILocation(line: 1676, column: 11, scope: !3623)
!3728 = !DILocation(line: 1676, column: 19, scope: !3623)
!3729 = !DILocation(line: 1676, column: 27, scope: !3623)
!3730 = !DILocation(line: 1677, column: 36, scope: !3623)
!3731 = !DILocation(line: 1677, column: 42, scope: !3623)
!3732 = !DILocation(line: 1677, column: 49, scope: !3623)
!3733 = !DILocation(line: 1677, column: 57, scope: !3623)
!3734 = !DILocation(line: 1677, column: 62, scope: !3623)
!3735 = !DILocation(line: 1677, column: 67, scope: !3623)
!3736 = !DILocation(line: 1677, column: 47, scope: !3623)
!3737 = !DILocation(line: 1677, column: 11, scope: !3623)
!3738 = !DILocation(line: 1677, column: 19, scope: !3623)
!3739 = !DILocation(line: 1677, column: 34, scope: !3623)
!3740 = !DILocation(line: 1678, column: 11, scope: !3623)
!3741 = !DILocalVariable(name: "limit1", scope: !3742, file: !1, line: 1687, type: !609)
!3742 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1685, column: 9)
!3743 = !DILocation(line: 1687, column: 13, scope: !3742)
!3744 = !DILocalVariable(name: "limit2", scope: !3742, file: !1, line: 1688, type: !609)
!3745 = !DILocation(line: 1688, column: 13, scope: !3742)
!3746 = !DILocalVariable(name: "scale", scope: !3742, file: !1, line: 1689, type: !609)
!3747 = !DILocation(line: 1689, column: 13, scope: !3742)
!3748 = !DILocation(line: 1691, column: 15, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1691, column: 15)
!3750 = !DILocation(line: 1691, column: 21, scope: !3749)
!3751 = !DILocation(line: 1691, column: 27, scope: !3749)
!3752 = !DILocation(line: 1691, column: 33, scope: !3749)
!3753 = !DILocation(line: 1691, column: 25, scope: !3749)
!3754 = !DILocation(line: 1691, column: 15, scope: !3742)
!3755 = !DILocation(line: 1693, column: 40, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 1692, column: 13)
!3757 = !DILocation(line: 1693, column: 46, scope: !3756)
!3758 = !DILocation(line: 1693, column: 32, scope: !3756)
!3759 = !DILocation(line: 1693, column: 52, scope: !3756)
!3760 = !DILocation(line: 1693, column: 54, scope: !3756)
!3761 = !DILocation(line: 1693, column: 15, scope: !3756)
!3762 = !DILocation(line: 1693, column: 23, scope: !3756)
!3763 = !DILocation(line: 1693, column: 29, scope: !3756)
!3764 = !DILocation(line: 1694, column: 34, scope: !3756)
!3765 = !DILocation(line: 1694, column: 40, scope: !3756)
!3766 = !DILocation(line: 1694, column: 44, scope: !3756)
!3767 = !DILocation(line: 1694, column: 50, scope: !3756)
!3768 = !DILocation(line: 1694, column: 43, scope: !3756)
!3769 = !DILocation(line: 1694, column: 24, scope: !3756)
!3770 = !DILocation(line: 1694, column: 22, scope: !3756)
!3771 = !DILocation(line: 1695, column: 34, scope: !3756)
!3772 = !DILocation(line: 1695, column: 40, scope: !3756)
!3773 = !DILocation(line: 1695, column: 46, scope: !3756)
!3774 = !DILocation(line: 1695, column: 52, scope: !3756)
!3775 = !DILocation(line: 1695, column: 45, scope: !3756)
!3776 = !DILocation(line: 1695, column: 24, scope: !3756)
!3777 = !DILocation(line: 1695, column: 22, scope: !3756)
!3778 = !DILocation(line: 1696, column: 13, scope: !3756)
!3779 = !DILocation(line: 1699, column: 40, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 1698, column: 13)
!3781 = !DILocation(line: 1699, column: 46, scope: !3780)
!3782 = !DILocation(line: 1699, column: 32, scope: !3780)
!3783 = !DILocation(line: 1699, column: 50, scope: !3780)
!3784 = !DILocation(line: 1699, column: 52, scope: !3780)
!3785 = !DILocation(line: 1699, column: 15, scope: !3780)
!3786 = !DILocation(line: 1699, column: 23, scope: !3780)
!3787 = !DILocation(line: 1699, column: 29, scope: !3780)
!3788 = !DILocation(line: 1700, column: 34, scope: !3780)
!3789 = !DILocation(line: 1700, column: 40, scope: !3780)
!3790 = !DILocation(line: 1700, column: 46, scope: !3780)
!3791 = !DILocation(line: 1700, column: 52, scope: !3780)
!3792 = !DILocation(line: 1700, column: 45, scope: !3780)
!3793 = !DILocation(line: 1700, column: 24, scope: !3780)
!3794 = !DILocation(line: 1700, column: 22, scope: !3780)
!3795 = !DILocation(line: 1701, column: 34, scope: !3780)
!3796 = !DILocation(line: 1701, column: 40, scope: !3780)
!3797 = !DILocation(line: 1701, column: 44, scope: !3780)
!3798 = !DILocation(line: 1701, column: 50, scope: !3780)
!3799 = !DILocation(line: 1701, column: 43, scope: !3780)
!3800 = !DILocation(line: 1701, column: 24, scope: !3780)
!3801 = !DILocation(line: 1701, column: 22, scope: !3780)
!3802 = !DILocation(line: 1703, column: 16, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1703, column: 16)
!3804 = !DILocation(line: 1703, column: 23, scope: !3803)
!3805 = !DILocation(line: 1703, column: 16, scope: !3742)
!3806 = !DILocation(line: 1704, column: 13, scope: !3803)
!3807 = !DILocation(line: 1704, column: 21, scope: !3803)
!3808 = !DILocation(line: 1704, column: 27, scope: !3803)
!3809 = !DILocation(line: 1704, column: 40, scope: !3803)
!3810 = !DILocation(line: 1704, column: 53, scope: !3803)
!3811 = !DILocation(line: 1706, column: 28, scope: !3742)
!3812 = !DILocation(line: 1706, column: 36, scope: !3742)
!3813 = !DILocation(line: 1706, column: 11, scope: !3742)
!3814 = !DILocation(line: 1706, column: 19, scope: !3742)
!3815 = !DILocation(line: 1706, column: 26, scope: !3742)
!3816 = !DILocation(line: 1707, column: 46, scope: !3742)
!3817 = !DILocation(line: 1707, column: 54, scope: !3742)
!3818 = !DILocation(line: 1707, column: 59, scope: !3742)
!3819 = !DILocation(line: 1707, column: 62, scope: !3742)
!3820 = !DILocation(line: 1707, column: 23, scope: !3742)
!3821 = !DILocation(line: 1707, column: 31, scope: !3742)
!3822 = !DILocation(line: 1707, column: 33, scope: !3742)
!3823 = !DILocation(line: 1707, column: 11, scope: !3742)
!3824 = !DILocation(line: 1707, column: 19, scope: !3742)
!3825 = !DILocation(line: 1707, column: 21, scope: !3742)
!3826 = !DILocation(line: 1708, column: 58, scope: !3742)
!3827 = !DILocation(line: 1708, column: 66, scope: !3742)
!3828 = !DILocation(line: 1709, column: 13, scope: !3742)
!3829 = !DILocation(line: 1709, column: 21, scope: !3742)
!3830 = !DILocation(line: 1709, column: 27, scope: !3742)
!3831 = !DILocation(line: 1708, column: 37, scope: !3742)
!3832 = !DILocation(line: 1708, column: 26, scope: !3742)
!3833 = !DILocation(line: 1708, column: 11, scope: !3742)
!3834 = !DILocation(line: 1708, column: 19, scope: !3742)
!3835 = !DILocation(line: 1708, column: 25, scope: !3742)
!3836 = !DILocation(line: 1710, column: 15, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1710, column: 15)
!3838 = !DILocation(line: 1710, column: 23, scope: !3837)
!3839 = !DILocation(line: 1710, column: 30, scope: !3837)
!3840 = !DILocation(line: 1710, column: 15, scope: !3742)
!3841 = !DILocation(line: 1711, column: 38, scope: !3837)
!3842 = !DILocation(line: 1711, column: 20, scope: !3837)
!3843 = !DILocation(line: 1711, column: 13, scope: !3837)
!3844 = !DILocation(line: 1714, column: 32, scope: !3742)
!3845 = !DILocation(line: 1714, column: 37, scope: !3742)
!3846 = !DILocation(line: 1714, column: 30, scope: !3742)
!3847 = !DILocation(line: 1714, column: 61, scope: !3742)
!3848 = !DILocation(line: 1714, column: 67, scope: !3742)
!3849 = !DILocation(line: 1714, column: 19, scope: !3742)
!3850 = !DILocation(line: 1714, column: 17, scope: !3742)
!3851 = !DILocation(line: 1715, column: 18, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1715, column: 11)
!3853 = !DILocation(line: 1715, column: 26, scope: !3852)
!3854 = !DILocation(line: 1715, column: 34, scope: !3852)
!3855 = !DILocation(line: 1715, column: 25, scope: !3852)
!3856 = !DILocation(line: 1715, column: 23, scope: !3852)
!3857 = !DILocation(line: 1715, column: 17, scope: !3852)
!3858 = !DILocation(line: 1715, column: 37, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3852, file: !1, line: 1715, column: 11)
!3860 = !DILocation(line: 1715, column: 51, scope: !3859)
!3861 = !DILocation(line: 1715, column: 59, scope: !3859)
!3862 = !DILocation(line: 1715, column: 39, scope: !3859)
!3863 = !DILocation(line: 1715, column: 11, scope: !3852)
!3864 = !DILocation(line: 1716, column: 22, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3859, file: !1, line: 1716, column: 13)
!3866 = !DILocation(line: 1716, column: 30, scope: !3865)
!3867 = !DILocation(line: 1716, column: 21, scope: !3865)
!3868 = !DILocation(line: 1716, column: 20, scope: !3865)
!3869 = !DILocation(line: 1716, column: 19, scope: !3865)
!3870 = !DILocation(line: 1716, column: 33, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3865, file: !1, line: 1716, column: 13)
!3872 = !DILocation(line: 1716, column: 47, scope: !3871)
!3873 = !DILocation(line: 1716, column: 55, scope: !3871)
!3874 = !DILocation(line: 1716, column: 35, scope: !3871)
!3875 = !DILocation(line: 1716, column: 13, scope: !3865)
!3876 = !DILocalVariable(name: "radius", scope: !3877, file: !1, line: 1717, type: !609)
!3877 = distinct !DILexicalBlock(scope: !3871, file: !1, line: 1717, column: 15)
!3878 = !DILocation(line: 1717, column: 25, scope: !3877)
!3879 = !DILocation(line: 1717, column: 32, scope: !3877)
!3880 = !DILocation(line: 1717, column: 34, scope: !3877)
!3881 = !DILocation(line: 1717, column: 33, scope: !3877)
!3882 = !DILocation(line: 1717, column: 36, scope: !3877)
!3883 = !DILocation(line: 1717, column: 38, scope: !3877)
!3884 = !DILocation(line: 1717, column: 37, scope: !3877)
!3885 = !DILocation(line: 1717, column: 35, scope: !3877)
!3886 = !DILocation(line: 1718, column: 21, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3877, file: !1, line: 1718, column: 21)
!3888 = !DILocation(line: 1718, column: 30, scope: !3887)
!3889 = !DILocation(line: 1718, column: 28, scope: !3887)
!3890 = !DILocation(line: 1718, column: 37, scope: !3887)
!3891 = !DILocation(line: 1718, column: 40, scope: !3887)
!3892 = !DILocation(line: 1718, column: 50, scope: !3887)
!3893 = !DILocation(line: 1718, column: 47, scope: !3887)
!3894 = !DILocation(line: 1718, column: 21, scope: !3877)
!3895 = !DILocation(line: 1719, column: 74, scope: !3887)
!3896 = !DILocation(line: 1719, column: 65, scope: !3887)
!3897 = !DILocation(line: 1719, column: 45, scope: !3887)
!3898 = !DILocation(line: 1719, column: 53, scope: !3887)
!3899 = !DILocation(line: 1719, column: 60, scope: !3887)
!3900 = !DILocation(line: 1719, column: 63, scope: !3887)
!3901 = !DILocation(line: 1719, column: 19, scope: !3887)
!3902 = !DILocation(line: 1719, column: 27, scope: !3887)
!3903 = !DILocation(line: 1719, column: 42, scope: !3887)
!3904 = !DILocation(line: 1721, column: 39, scope: !3887)
!3905 = !DILocation(line: 1721, column: 19, scope: !3887)
!3906 = !DILocation(line: 1721, column: 27, scope: !3887)
!3907 = !DILocation(line: 1721, column: 34, scope: !3887)
!3908 = !DILocation(line: 1721, column: 37, scope: !3887)
!3909 = !DILocation(line: 1722, column: 15, scope: !3877)
!3910 = !DILocation(line: 1716, column: 59, scope: !3871)
!3911 = !DILocation(line: 1716, column: 64, scope: !3871)
!3912 = !DILocation(line: 1716, column: 13, scope: !3871)
!3913 = distinct !{!3913, !3875, !3914}
!3914 = !DILocation(line: 1722, column: 15, scope: !3865)
!3915 = !DILocation(line: 1715, column: 63, scope: !3859)
!3916 = !DILocation(line: 1715, column: 11, scope: !3859)
!3917 = distinct !{!3917, !3863, !3918}
!3918 = !DILocation(line: 1722, column: 15, scope: !3852)
!3919 = !DILocation(line: 1723, column: 56, scope: !3742)
!3920 = !DILocation(line: 1723, column: 47, scope: !3742)
!3921 = !DILocation(line: 1723, column: 29, scope: !3742)
!3922 = !DILocation(line: 1723, column: 37, scope: !3742)
!3923 = !DILocation(line: 1723, column: 45, scope: !3742)
!3924 = !DILocation(line: 1723, column: 11, scope: !3742)
!3925 = !DILocation(line: 1723, column: 19, scope: !3742)
!3926 = !DILocation(line: 1723, column: 27, scope: !3742)
!3927 = !DILocation(line: 1724, column: 16, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1724, column: 16)
!3929 = !DILocation(line: 1724, column: 21, scope: !3928)
!3930 = !DILocation(line: 1724, column: 16, scope: !3742)
!3931 = !DILocation(line: 1726, column: 13, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !1, line: 1724, column: 38)
!3933 = !DILocation(line: 1726, column: 21, scope: !3932)
!3934 = !DILocation(line: 1726, column: 28, scope: !3932)
!3935 = !DILocation(line: 1726, column: 36, scope: !3932)
!3936 = !DILocation(line: 1726, column: 38, scope: !3932)
!3937 = !DILocation(line: 1726, column: 46, scope: !3932)
!3938 = !DILocation(line: 1726, column: 48, scope: !3932)
!3939 = !DILocation(line: 1726, column: 56, scope: !3932)
!3940 = !DILocation(line: 1726, column: 47, scope: !3932)
!3941 = !DILocation(line: 1726, column: 37, scope: !3932)
!3942 = !DILocation(line: 1726, column: 63, scope: !3932)
!3943 = !DILocation(line: 1727, column: 13, scope: !3932)
!3944 = !DILocation(line: 1727, column: 21, scope: !3932)
!3945 = !DILocation(line: 1727, column: 36, scope: !3932)
!3946 = !DILocation(line: 1728, column: 13, scope: !3932)
!3947 = !DILocation(line: 1728, column: 21, scope: !3932)
!3948 = !DILocation(line: 1728, column: 29, scope: !3932)
!3949 = !DILocation(line: 1729, column: 11, scope: !3932)
!3950 = !DILocation(line: 1730, column: 11, scope: !3742)
!3951 = !DILocation(line: 1734, column: 18, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1733, column: 9)
!3953 = !DILocation(line: 1734, column: 17, scope: !3952)
!3954 = !DILocation(line: 1735, column: 15, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !1, line: 1735, column: 15)
!3956 = !DILocation(line: 1735, column: 22, scope: !3955)
!3957 = !DILocation(line: 1735, column: 15, scope: !3952)
!3958 = !DILocation(line: 1736, column: 20, scope: !3955)
!3959 = !DILocation(line: 1736, column: 13, scope: !3955)
!3960 = !DILocation(line: 1737, column: 26, scope: !3952)
!3961 = !DILocation(line: 1737, column: 11, scope: !3952)
!3962 = !DILocation(line: 1737, column: 19, scope: !3952)
!3963 = !DILocation(line: 1737, column: 24, scope: !3952)
!3964 = !DILocation(line: 1738, column: 34, scope: !3952)
!3965 = !DILocation(line: 1738, column: 11, scope: !3952)
!3966 = !DILocation(line: 1739, column: 11, scope: !3952)
!3967 = !DILocation(line: 1743, column: 18, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1742, column: 9)
!3969 = !DILocation(line: 1743, column: 17, scope: !3968)
!3970 = !DILocation(line: 1744, column: 15, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !1, line: 1744, column: 15)
!3972 = !DILocation(line: 1744, column: 22, scope: !3971)
!3973 = !DILocation(line: 1744, column: 15, scope: !3968)
!3974 = !DILocation(line: 1745, column: 20, scope: !3971)
!3975 = !DILocation(line: 1745, column: 13, scope: !3971)
!3976 = !DILocation(line: 1746, column: 26, scope: !3968)
!3977 = !DILocation(line: 1746, column: 11, scope: !3968)
!3978 = !DILocation(line: 1746, column: 19, scope: !3968)
!3979 = !DILocation(line: 1746, column: 24, scope: !3968)
!3980 = !DILocation(line: 1747, column: 34, scope: !3968)
!3981 = !DILocation(line: 1747, column: 11, scope: !3968)
!3982 = !DILocation(line: 1748, column: 11, scope: !3968)
!3983 = !DILocation(line: 1752, column: 26, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1751, column: 9)
!3985 = !DILocation(line: 1752, column: 32, scope: !3984)
!3986 = !DILocation(line: 1752, column: 20, scope: !3984)
!3987 = !DILocation(line: 1752, column: 11, scope: !3984)
!3988 = !DILocation(line: 1752, column: 38, scope: !3984)
!3989 = !DILocalVariable(name: "new_kernel", scope: !3990, file: !1, line: 1756, type: !597)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !1, line: 1755, column: 15)
!3991 = distinct !DILexicalBlock(scope: !3984, file: !1, line: 1752, column: 38)
!3992 = !DILocation(line: 1756, column: 20, scope: !3990)
!3993 = !DILocation(line: 1757, column: 24, scope: !3990)
!3994 = !DILocation(line: 1757, column: 23, scope: !3990)
!3995 = !DILocation(line: 1758, column: 21, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3990, file: !1, line: 1758, column: 21)
!3997 = !DILocation(line: 1758, column: 28, scope: !3996)
!3998 = !DILocation(line: 1758, column: 21, scope: !3990)
!3999 = !DILocation(line: 1759, column: 26, scope: !3996)
!4000 = !DILocation(line: 1759, column: 19, scope: !3996)
!4001 = !DILocation(line: 1760, column: 32, scope: !3990)
!4002 = !DILocation(line: 1760, column: 17, scope: !3990)
!4003 = !DILocation(line: 1760, column: 25, scope: !3990)
!4004 = !DILocation(line: 1760, column: 30, scope: !3990)
!4005 = !DILocation(line: 1761, column: 28, scope: !3990)
!4006 = !DILocation(line: 1761, column: 27, scope: !3990)
!4007 = !DILocation(line: 1762, column: 21, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3990, file: !1, line: 1762, column: 21)
!4009 = !DILocation(line: 1762, column: 32, scope: !4008)
!4010 = !DILocation(line: 1762, column: 21, scope: !3990)
!4011 = !DILocation(line: 1763, column: 44, scope: !4008)
!4012 = !DILocation(line: 1763, column: 26, scope: !4008)
!4013 = !DILocation(line: 1763, column: 19, scope: !4008)
!4014 = !DILocation(line: 1764, column: 36, scope: !3990)
!4015 = !DILocation(line: 1764, column: 17, scope: !3990)
!4016 = !DILocation(line: 1764, column: 29, scope: !3990)
!4017 = !DILocation(line: 1764, column: 34, scope: !3990)
!4018 = !DILocation(line: 1765, column: 48, scope: !3990)
!4019 = !DILocation(line: 1765, column: 32, scope: !3990)
!4020 = !DILocation(line: 1765, column: 17, scope: !3990)
!4021 = !DILocation(line: 1765, column: 41, scope: !3990)
!4022 = !DILocation(line: 1765, column: 46, scope: !3990)
!4023 = !DILocation(line: 1766, column: 40, scope: !3990)
!4024 = !DILocation(line: 1766, column: 17, scope: !3990)
!4025 = !DILocation(line: 1767, column: 24, scope: !3990)
!4026 = !DILocation(line: 1767, column: 17, scope: !3990)
!4027 = !DILocation(line: 1770, column: 22, scope: !3991)
!4028 = !DILocation(line: 1770, column: 21, scope: !3991)
!4029 = !DILocation(line: 1771, column: 15, scope: !3991)
!4030 = !DILocation(line: 1773, column: 22, scope: !3991)
!4031 = !DILocation(line: 1773, column: 21, scope: !3991)
!4032 = !DILocation(line: 1774, column: 15, scope: !3991)
!4033 = !DILocation(line: 1776, column: 15, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3984, file: !1, line: 1776, column: 15)
!4035 = !DILocation(line: 1776, column: 22, scope: !4034)
!4036 = !DILocation(line: 1776, column: 15, scope: !3984)
!4037 = !DILocation(line: 1777, column: 20, scope: !4034)
!4038 = !DILocation(line: 1777, column: 13, scope: !4034)
!4039 = !DILocation(line: 1778, column: 26, scope: !3984)
!4040 = !DILocation(line: 1778, column: 11, scope: !3984)
!4041 = !DILocation(line: 1778, column: 19, scope: !3984)
!4042 = !DILocation(line: 1778, column: 24, scope: !3984)
!4043 = !DILocation(line: 1779, column: 28, scope: !3984)
!4044 = !DILocation(line: 1779, column: 36, scope: !3984)
!4045 = !DILocation(line: 1779, column: 42, scope: !3984)
!4046 = !DILocation(line: 1779, column: 11, scope: !3984)
!4047 = !DILocation(line: 1780, column: 11, scope: !3984)
!4048 = !DILocation(line: 1784, column: 26, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1783, column: 9)
!4050 = !DILocation(line: 1784, column: 32, scope: !4049)
!4051 = !DILocation(line: 1784, column: 20, scope: !4049)
!4052 = !DILocation(line: 1784, column: 11, scope: !4049)
!4053 = !DILocation(line: 1784, column: 38, scope: !4049)
!4054 = !DILocation(line: 1788, column: 22, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4049, file: !1, line: 1784, column: 38)
!4056 = !DILocation(line: 1788, column: 15, scope: !4055)
!4057 = !DILocation(line: 1791, column: 22, scope: !4055)
!4058 = !DILocation(line: 1791, column: 21, scope: !4055)
!4059 = !DILocation(line: 1792, column: 15, scope: !4055)
!4060 = !DILocation(line: 1795, column: 22, scope: !4055)
!4061 = !DILocation(line: 1795, column: 21, scope: !4055)
!4062 = !DILocation(line: 1796, column: 15, scope: !4055)
!4063 = !DILocation(line: 1799, column: 22, scope: !4055)
!4064 = !DILocation(line: 1799, column: 21, scope: !4055)
!4065 = !DILocation(line: 1800, column: 15, scope: !4055)
!4066 = !DILocation(line: 1803, column: 22, scope: !4055)
!4067 = !DILocation(line: 1803, column: 21, scope: !4055)
!4068 = !DILocation(line: 1804, column: 15, scope: !4055)
!4069 = !DILocation(line: 1806, column: 15, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4049, file: !1, line: 1806, column: 15)
!4071 = !DILocation(line: 1806, column: 22, scope: !4070)
!4072 = !DILocation(line: 1806, column: 15, scope: !4049)
!4073 = !DILocation(line: 1807, column: 20, scope: !4070)
!4074 = !DILocation(line: 1807, column: 13, scope: !4070)
!4075 = !DILocation(line: 1808, column: 26, scope: !4049)
!4076 = !DILocation(line: 1808, column: 11, scope: !4049)
!4077 = !DILocation(line: 1808, column: 19, scope: !4049)
!4078 = !DILocation(line: 1808, column: 24, scope: !4049)
!4079 = !DILocation(line: 1809, column: 28, scope: !4049)
!4080 = !DILocation(line: 1809, column: 36, scope: !4049)
!4081 = !DILocation(line: 1809, column: 42, scope: !4049)
!4082 = !DILocation(line: 1809, column: 11, scope: !4049)
!4083 = !DILocation(line: 1810, column: 11, scope: !4049)
!4084 = !DILocation(line: 1814, column: 26, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1813, column: 9)
!4086 = !DILocation(line: 1814, column: 32, scope: !4085)
!4087 = !DILocation(line: 1814, column: 20, scope: !4085)
!4088 = !DILocation(line: 1814, column: 11, scope: !4085)
!4089 = !DILocation(line: 1814, column: 38, scope: !4085)
!4090 = !DILocation(line: 1818, column: 22, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4085, file: !1, line: 1814, column: 38)
!4092 = !DILocation(line: 1818, column: 15, scope: !4091)
!4093 = !DILocation(line: 1821, column: 22, scope: !4091)
!4094 = !DILocation(line: 1821, column: 21, scope: !4091)
!4095 = !DILocation(line: 1822, column: 15, scope: !4091)
!4096 = !DILocation(line: 1825, column: 22, scope: !4091)
!4097 = !DILocation(line: 1825, column: 21, scope: !4091)
!4098 = !DILocation(line: 1826, column: 15, scope: !4091)
!4099 = !DILocation(line: 1829, column: 22, scope: !4091)
!4100 = !DILocation(line: 1829, column: 21, scope: !4091)
!4101 = !DILocation(line: 1830, column: 15, scope: !4091)
!4102 = !DILocation(line: 1833, column: 22, scope: !4091)
!4103 = !DILocation(line: 1833, column: 21, scope: !4091)
!4104 = !DILocation(line: 1834, column: 15, scope: !4091)
!4105 = !DILocation(line: 1837, column: 22, scope: !4091)
!4106 = !DILocation(line: 1837, column: 21, scope: !4091)
!4107 = !DILocation(line: 1838, column: 15, scope: !4091)
!4108 = !DILocation(line: 1840, column: 15, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4085, file: !1, line: 1840, column: 15)
!4110 = !DILocation(line: 1840, column: 22, scope: !4109)
!4111 = !DILocation(line: 1840, column: 15, scope: !4085)
!4112 = !DILocation(line: 1841, column: 20, scope: !4109)
!4113 = !DILocation(line: 1841, column: 13, scope: !4109)
!4114 = !DILocation(line: 1842, column: 26, scope: !4085)
!4115 = !DILocation(line: 1842, column: 11, scope: !4085)
!4116 = !DILocation(line: 1842, column: 19, scope: !4085)
!4117 = !DILocation(line: 1842, column: 24, scope: !4085)
!4118 = !DILocation(line: 1843, column: 28, scope: !4085)
!4119 = !DILocation(line: 1843, column: 36, scope: !4085)
!4120 = !DILocation(line: 1843, column: 42, scope: !4085)
!4121 = !DILocation(line: 1843, column: 11, scope: !4085)
!4122 = !DILocation(line: 1844, column: 11, scope: !4085)
!4123 = !DILocalVariable(name: "new_kernel", scope: !4124, file: !1, line: 1849, type: !597)
!4124 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1847, column: 9)
!4125 = !DILocation(line: 1849, column: 14, scope: !4124)
!4126 = !DILocation(line: 1850, column: 26, scope: !4124)
!4127 = !DILocation(line: 1850, column: 32, scope: !4124)
!4128 = !DILocation(line: 1850, column: 20, scope: !4124)
!4129 = !DILocation(line: 1850, column: 11, scope: !4124)
!4130 = !DILocation(line: 1850, column: 38, scope: !4124)
!4131 = !DILocation(line: 1853, column: 22, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4124, file: !1, line: 1850, column: 38)
!4133 = !DILocation(line: 1853, column: 21, scope: !4132)
!4134 = !DILocation(line: 1854, column: 19, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1854, column: 19)
!4136 = !DILocation(line: 1854, column: 26, scope: !4135)
!4137 = !DILocation(line: 1854, column: 19, scope: !4132)
!4138 = !DILocation(line: 1855, column: 24, scope: !4135)
!4139 = !DILocation(line: 1855, column: 17, scope: !4135)
!4140 = !DILocation(line: 1856, column: 30, scope: !4132)
!4141 = !DILocation(line: 1856, column: 15, scope: !4132)
!4142 = !DILocation(line: 1856, column: 23, scope: !4132)
!4143 = !DILocation(line: 1856, column: 28, scope: !4132)
!4144 = !DILocation(line: 1857, column: 38, scope: !4132)
!4145 = !DILocation(line: 1857, column: 15, scope: !4132)
!4146 = !DILocation(line: 1858, column: 15, scope: !4132)
!4147 = !DILocation(line: 1860, column: 22, scope: !4132)
!4148 = !DILocation(line: 1860, column: 21, scope: !4132)
!4149 = !DILocation(line: 1861, column: 19, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1861, column: 19)
!4151 = !DILocation(line: 1861, column: 26, scope: !4150)
!4152 = !DILocation(line: 1861, column: 19, scope: !4132)
!4153 = !DILocation(line: 1862, column: 24, scope: !4150)
!4154 = !DILocation(line: 1862, column: 17, scope: !4150)
!4155 = !DILocation(line: 1863, column: 30, scope: !4132)
!4156 = !DILocation(line: 1863, column: 15, scope: !4132)
!4157 = !DILocation(line: 1863, column: 23, scope: !4132)
!4158 = !DILocation(line: 1863, column: 28, scope: !4132)
!4159 = !DILocation(line: 1864, column: 38, scope: !4132)
!4160 = !DILocation(line: 1864, column: 15, scope: !4132)
!4161 = !DILocation(line: 1869, column: 26, scope: !4132)
!4162 = !DILocation(line: 1869, column: 25, scope: !4132)
!4163 = !DILocation(line: 1870, column: 19, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1870, column: 19)
!4165 = !DILocation(line: 1870, column: 30, scope: !4164)
!4166 = !DILocation(line: 1870, column: 19, scope: !4132)
!4167 = !DILocation(line: 1871, column: 42, scope: !4164)
!4168 = !DILocation(line: 1871, column: 24, scope: !4164)
!4169 = !DILocation(line: 1871, column: 17, scope: !4164)
!4170 = !DILocation(line: 1872, column: 34, scope: !4132)
!4171 = !DILocation(line: 1872, column: 15, scope: !4132)
!4172 = !DILocation(line: 1872, column: 27, scope: !4132)
!4173 = !DILocation(line: 1872, column: 32, scope: !4132)
!4174 = !DILocation(line: 1873, column: 46, scope: !4132)
!4175 = !DILocation(line: 1873, column: 30, scope: !4132)
!4176 = !DILocation(line: 1873, column: 15, scope: !4132)
!4177 = !DILocation(line: 1873, column: 39, scope: !4132)
!4178 = !DILocation(line: 1873, column: 44, scope: !4132)
!4179 = !DILocation(line: 1874, column: 26, scope: !4132)
!4180 = !DILocation(line: 1874, column: 25, scope: !4132)
!4181 = !DILocation(line: 1875, column: 19, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1875, column: 19)
!4183 = !DILocation(line: 1875, column: 30, scope: !4182)
!4184 = !DILocation(line: 1875, column: 19, scope: !4132)
!4185 = !DILocation(line: 1876, column: 42, scope: !4182)
!4186 = !DILocation(line: 1876, column: 24, scope: !4182)
!4187 = !DILocation(line: 1876, column: 17, scope: !4182)
!4188 = !DILocation(line: 1877, column: 34, scope: !4132)
!4189 = !DILocation(line: 1877, column: 15, scope: !4132)
!4190 = !DILocation(line: 1877, column: 27, scope: !4132)
!4191 = !DILocation(line: 1877, column: 32, scope: !4132)
!4192 = !DILocation(line: 1878, column: 46, scope: !4132)
!4193 = !DILocation(line: 1878, column: 30, scope: !4132)
!4194 = !DILocation(line: 1878, column: 15, scope: !4132)
!4195 = !DILocation(line: 1878, column: 39, scope: !4132)
!4196 = !DILocation(line: 1878, column: 44, scope: !4132)
!4197 = !DILocation(line: 1879, column: 26, scope: !4132)
!4198 = !DILocation(line: 1879, column: 25, scope: !4132)
!4199 = !DILocation(line: 1880, column: 19, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1880, column: 19)
!4201 = !DILocation(line: 1880, column: 30, scope: !4200)
!4202 = !DILocation(line: 1880, column: 19, scope: !4132)
!4203 = !DILocation(line: 1881, column: 42, scope: !4200)
!4204 = !DILocation(line: 1881, column: 24, scope: !4200)
!4205 = !DILocation(line: 1881, column: 17, scope: !4200)
!4206 = !DILocation(line: 1882, column: 34, scope: !4132)
!4207 = !DILocation(line: 1882, column: 15, scope: !4132)
!4208 = !DILocation(line: 1882, column: 27, scope: !4132)
!4209 = !DILocation(line: 1882, column: 32, scope: !4132)
!4210 = !DILocation(line: 1883, column: 46, scope: !4132)
!4211 = !DILocation(line: 1883, column: 30, scope: !4132)
!4212 = !DILocation(line: 1883, column: 15, scope: !4132)
!4213 = !DILocation(line: 1883, column: 39, scope: !4132)
!4214 = !DILocation(line: 1883, column: 44, scope: !4132)
!4215 = !DILocation(line: 1884, column: 26, scope: !4132)
!4216 = !DILocation(line: 1884, column: 25, scope: !4132)
!4217 = !DILocation(line: 1885, column: 19, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1885, column: 19)
!4219 = !DILocation(line: 1885, column: 30, scope: !4218)
!4220 = !DILocation(line: 1885, column: 19, scope: !4132)
!4221 = !DILocation(line: 1886, column: 42, scope: !4218)
!4222 = !DILocation(line: 1886, column: 24, scope: !4218)
!4223 = !DILocation(line: 1886, column: 17, scope: !4218)
!4224 = !DILocation(line: 1887, column: 34, scope: !4132)
!4225 = !DILocation(line: 1887, column: 15, scope: !4132)
!4226 = !DILocation(line: 1887, column: 27, scope: !4132)
!4227 = !DILocation(line: 1887, column: 32, scope: !4132)
!4228 = !DILocation(line: 1888, column: 46, scope: !4132)
!4229 = !DILocation(line: 1888, column: 30, scope: !4132)
!4230 = !DILocation(line: 1888, column: 15, scope: !4132)
!4231 = !DILocation(line: 1888, column: 39, scope: !4132)
!4232 = !DILocation(line: 1888, column: 44, scope: !4132)
!4233 = !DILocation(line: 1889, column: 26, scope: !4132)
!4234 = !DILocation(line: 1889, column: 25, scope: !4132)
!4235 = !DILocation(line: 1890, column: 19, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1890, column: 19)
!4237 = !DILocation(line: 1890, column: 30, scope: !4236)
!4238 = !DILocation(line: 1890, column: 19, scope: !4132)
!4239 = !DILocation(line: 1891, column: 42, scope: !4236)
!4240 = !DILocation(line: 1891, column: 24, scope: !4236)
!4241 = !DILocation(line: 1891, column: 17, scope: !4236)
!4242 = !DILocation(line: 1892, column: 34, scope: !4132)
!4243 = !DILocation(line: 1892, column: 15, scope: !4132)
!4244 = !DILocation(line: 1892, column: 27, scope: !4132)
!4245 = !DILocation(line: 1892, column: 32, scope: !4132)
!4246 = !DILocation(line: 1893, column: 46, scope: !4132)
!4247 = !DILocation(line: 1893, column: 30, scope: !4132)
!4248 = !DILocation(line: 1893, column: 15, scope: !4132)
!4249 = !DILocation(line: 1893, column: 39, scope: !4132)
!4250 = !DILocation(line: 1893, column: 44, scope: !4132)
!4251 = !DILocation(line: 1894, column: 26, scope: !4132)
!4252 = !DILocation(line: 1894, column: 25, scope: !4132)
!4253 = !DILocation(line: 1895, column: 19, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1895, column: 19)
!4255 = !DILocation(line: 1895, column: 30, scope: !4254)
!4256 = !DILocation(line: 1895, column: 19, scope: !4132)
!4257 = !DILocation(line: 1896, column: 42, scope: !4254)
!4258 = !DILocation(line: 1896, column: 24, scope: !4254)
!4259 = !DILocation(line: 1896, column: 17, scope: !4254)
!4260 = !DILocation(line: 1897, column: 34, scope: !4132)
!4261 = !DILocation(line: 1897, column: 15, scope: !4132)
!4262 = !DILocation(line: 1897, column: 27, scope: !4132)
!4263 = !DILocation(line: 1897, column: 32, scope: !4132)
!4264 = !DILocation(line: 1898, column: 46, scope: !4132)
!4265 = !DILocation(line: 1898, column: 30, scope: !4132)
!4266 = !DILocation(line: 1898, column: 15, scope: !4132)
!4267 = !DILocation(line: 1898, column: 39, scope: !4132)
!4268 = !DILocation(line: 1898, column: 44, scope: !4132)
!4269 = !DILocation(line: 1899, column: 26, scope: !4132)
!4270 = !DILocation(line: 1899, column: 25, scope: !4132)
!4271 = !DILocation(line: 1900, column: 19, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1900, column: 19)
!4273 = !DILocation(line: 1900, column: 30, scope: !4272)
!4274 = !DILocation(line: 1900, column: 19, scope: !4132)
!4275 = !DILocation(line: 1901, column: 42, scope: !4272)
!4276 = !DILocation(line: 1901, column: 24, scope: !4272)
!4277 = !DILocation(line: 1901, column: 17, scope: !4272)
!4278 = !DILocation(line: 1902, column: 34, scope: !4132)
!4279 = !DILocation(line: 1902, column: 15, scope: !4132)
!4280 = !DILocation(line: 1902, column: 27, scope: !4132)
!4281 = !DILocation(line: 1902, column: 32, scope: !4132)
!4282 = !DILocation(line: 1903, column: 46, scope: !4132)
!4283 = !DILocation(line: 1903, column: 30, scope: !4132)
!4284 = !DILocation(line: 1903, column: 15, scope: !4132)
!4285 = !DILocation(line: 1903, column: 39, scope: !4132)
!4286 = !DILocation(line: 1903, column: 44, scope: !4132)
!4287 = !DILocation(line: 1904, column: 26, scope: !4132)
!4288 = !DILocation(line: 1904, column: 25, scope: !4132)
!4289 = !DILocation(line: 1905, column: 19, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 1905, column: 19)
!4291 = !DILocation(line: 1905, column: 30, scope: !4290)
!4292 = !DILocation(line: 1905, column: 19, scope: !4132)
!4293 = !DILocation(line: 1906, column: 42, scope: !4290)
!4294 = !DILocation(line: 1906, column: 24, scope: !4290)
!4295 = !DILocation(line: 1906, column: 17, scope: !4290)
!4296 = !DILocation(line: 1907, column: 34, scope: !4132)
!4297 = !DILocation(line: 1907, column: 15, scope: !4132)
!4298 = !DILocation(line: 1907, column: 27, scope: !4132)
!4299 = !DILocation(line: 1907, column: 32, scope: !4132)
!4300 = !DILocation(line: 1908, column: 46, scope: !4132)
!4301 = !DILocation(line: 1908, column: 30, scope: !4132)
!4302 = !DILocation(line: 1908, column: 15, scope: !4132)
!4303 = !DILocation(line: 1908, column: 39, scope: !4132)
!4304 = !DILocation(line: 1908, column: 44, scope: !4132)
!4305 = !DILocation(line: 1909, column: 15, scope: !4132)
!4306 = !DILocation(line: 1911, column: 11, scope: !4124)
!4307 = !DILocalVariable(name: "new_kernel", scope: !4308, file: !1, line: 1916, type: !597)
!4308 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1914, column: 9)
!4309 = !DILocation(line: 1916, column: 14, scope: !4308)
!4310 = !DILocation(line: 1918, column: 18, scope: !4308)
!4311 = !DILocation(line: 1918, column: 17, scope: !4308)
!4312 = !DILocation(line: 1919, column: 15, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1919, column: 15)
!4314 = !DILocation(line: 1919, column: 22, scope: !4313)
!4315 = !DILocation(line: 1919, column: 15, scope: !4308)
!4316 = !DILocation(line: 1920, column: 20, scope: !4313)
!4317 = !DILocation(line: 1920, column: 13, scope: !4313)
!4318 = !DILocation(line: 1921, column: 26, scope: !4308)
!4319 = !DILocation(line: 1921, column: 11, scope: !4308)
!4320 = !DILocation(line: 1921, column: 19, scope: !4308)
!4321 = !DILocation(line: 1921, column: 24, scope: !4308)
!4322 = !DILocation(line: 1922, column: 34, scope: !4308)
!4323 = !DILocation(line: 1922, column: 11, scope: !4308)
!4324 = !DILocation(line: 1924, column: 22, scope: !4308)
!4325 = !DILocation(line: 1924, column: 21, scope: !4308)
!4326 = !DILocation(line: 1925, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1925, column: 15)
!4328 = !DILocation(line: 1925, column: 26, scope: !4327)
!4329 = !DILocation(line: 1925, column: 15, scope: !4308)
!4330 = !DILocation(line: 1926, column: 38, scope: !4327)
!4331 = !DILocation(line: 1926, column: 20, scope: !4327)
!4332 = !DILocation(line: 1926, column: 13, scope: !4327)
!4333 = !DILocation(line: 1927, column: 30, scope: !4308)
!4334 = !DILocation(line: 1927, column: 11, scope: !4308)
!4335 = !DILocation(line: 1927, column: 23, scope: !4308)
!4336 = !DILocation(line: 1927, column: 28, scope: !4308)
!4337 = !DILocation(line: 1928, column: 34, scope: !4308)
!4338 = !DILocation(line: 1928, column: 11, scope: !4308)
!4339 = !DILocation(line: 1929, column: 42, scope: !4308)
!4340 = !DILocation(line: 1929, column: 26, scope: !4308)
!4341 = !DILocation(line: 1929, column: 11, scope: !4308)
!4342 = !DILocation(line: 1929, column: 35, scope: !4308)
!4343 = !DILocation(line: 1929, column: 40, scope: !4308)
!4344 = !DILocation(line: 1930, column: 11, scope: !4308)
!4345 = !DILocation(line: 1934, column: 26, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1933, column: 9)
!4347 = !DILocation(line: 1934, column: 32, scope: !4346)
!4348 = !DILocation(line: 1934, column: 20, scope: !4346)
!4349 = !DILocation(line: 1934, column: 11, scope: !4346)
!4350 = !DILocation(line: 1934, column: 38, scope: !4346)
!4351 = !DILocation(line: 1940, column: 22, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4346, file: !1, line: 1934, column: 38)
!4353 = !DILocation(line: 1940, column: 21, scope: !4352)
!4354 = !DILocation(line: 1941, column: 19, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 1941, column: 19)
!4356 = !DILocation(line: 1941, column: 26, scope: !4355)
!4357 = !DILocation(line: 1941, column: 19, scope: !4352)
!4358 = !DILocation(line: 1942, column: 24, scope: !4355)
!4359 = !DILocation(line: 1942, column: 17, scope: !4355)
!4360 = !DILocation(line: 1943, column: 30, scope: !4352)
!4361 = !DILocation(line: 1943, column: 15, scope: !4352)
!4362 = !DILocation(line: 1943, column: 23, scope: !4352)
!4363 = !DILocation(line: 1943, column: 28, scope: !4352)
!4364 = !DILocation(line: 1944, column: 38, scope: !4352)
!4365 = !DILocation(line: 1944, column: 15, scope: !4352)
!4366 = !DILocation(line: 1945, column: 15, scope: !4352)
!4367 = !DILocation(line: 1951, column: 22, scope: !4352)
!4368 = !DILocation(line: 1951, column: 21, scope: !4352)
!4369 = !DILocation(line: 1952, column: 19, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 1952, column: 19)
!4371 = !DILocation(line: 1952, column: 26, scope: !4370)
!4372 = !DILocation(line: 1952, column: 19, scope: !4352)
!4373 = !DILocation(line: 1953, column: 24, scope: !4370)
!4374 = !DILocation(line: 1953, column: 17, scope: !4370)
!4375 = !DILocation(line: 1954, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 1954, column: 19)
!4377 = !DILocation(line: 1954, column: 27, scope: !4376)
!4378 = !DILocation(line: 1954, column: 32, scope: !4376)
!4379 = !DILocation(line: 1954, column: 19, scope: !4352)
!4380 = !DILocation(line: 1955, column: 42, scope: !4376)
!4381 = !DILocation(line: 1955, column: 24, scope: !4376)
!4382 = !DILocation(line: 1955, column: 17, scope: !4376)
!4383 = !DILocation(line: 1956, column: 30, scope: !4352)
!4384 = !DILocation(line: 1956, column: 15, scope: !4352)
!4385 = !DILocation(line: 1956, column: 23, scope: !4352)
!4386 = !DILocation(line: 1956, column: 28, scope: !4352)
!4387 = !DILocation(line: 1957, column: 36, scope: !4352)
!4388 = !DILocation(line: 1957, column: 15, scope: !4352)
!4389 = !DILocation(line: 1957, column: 23, scope: !4352)
!4390 = !DILocation(line: 1957, column: 29, scope: !4352)
!4391 = !DILocation(line: 1957, column: 34, scope: !4352)
!4392 = !DILocation(line: 1958, column: 38, scope: !4352)
!4393 = !DILocation(line: 1958, column: 15, scope: !4352)
!4394 = !DILocation(line: 1959, column: 15, scope: !4352)
!4395 = !DILocation(line: 1966, column: 22, scope: !4352)
!4396 = !DILocation(line: 1966, column: 21, scope: !4352)
!4397 = !DILocation(line: 1968, column: 19, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 1968, column: 19)
!4399 = !DILocation(line: 1968, column: 26, scope: !4398)
!4400 = !DILocation(line: 1968, column: 19, scope: !4352)
!4401 = !DILocation(line: 1969, column: 24, scope: !4398)
!4402 = !DILocation(line: 1969, column: 17, scope: !4398)
!4403 = !DILocation(line: 1970, column: 30, scope: !4352)
!4404 = !DILocation(line: 1970, column: 15, scope: !4352)
!4405 = !DILocation(line: 1970, column: 23, scope: !4352)
!4406 = !DILocation(line: 1970, column: 28, scope: !4352)
!4407 = !DILocation(line: 1971, column: 36, scope: !4352)
!4408 = !DILocation(line: 1971, column: 15, scope: !4352)
!4409 = !DILocation(line: 1971, column: 23, scope: !4352)
!4410 = !DILocation(line: 1971, column: 29, scope: !4352)
!4411 = !DILocation(line: 1971, column: 34, scope: !4352)
!4412 = !DILocation(line: 1972, column: 42, scope: !4352)
!4413 = !DILocation(line: 1972, column: 15, scope: !4352)
!4414 = !DILocation(line: 1972, column: 23, scope: !4352)
!4415 = !DILocation(line: 1972, column: 29, scope: !4352)
!4416 = !DILocation(line: 1972, column: 35, scope: !4352)
!4417 = !DILocation(line: 1972, column: 40, scope: !4352)
!4418 = !DILocation(line: 1973, column: 38, scope: !4352)
!4419 = !DILocation(line: 1973, column: 15, scope: !4352)
!4420 = !DILocation(line: 1974, column: 15, scope: !4352)
!4421 = !DILocation(line: 1976, column: 11, scope: !4346)
!4422 = !DILocation(line: 1989, column: 26, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 1979, column: 9)
!4424 = !DILocation(line: 1989, column: 32, scope: !4423)
!4425 = !DILocation(line: 1989, column: 20, scope: !4423)
!4426 = !DILocation(line: 1989, column: 11, scope: !4423)
!4427 = !DILocation(line: 1992, column: 22, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4423, file: !1, line: 1989, column: 38)
!4429 = !DILocation(line: 1992, column: 21, scope: !4428)
!4430 = !DILocation(line: 1993, column: 15, scope: !4428)
!4431 = !DILocation(line: 1995, column: 22, scope: !4428)
!4432 = !DILocation(line: 1995, column: 21, scope: !4428)
!4433 = !DILocation(line: 1996, column: 15, scope: !4428)
!4434 = !DILocation(line: 1998, column: 22, scope: !4428)
!4435 = !DILocation(line: 1998, column: 21, scope: !4428)
!4436 = !DILocation(line: 1999, column: 15, scope: !4428)
!4437 = !DILocation(line: 2001, column: 22, scope: !4428)
!4438 = !DILocation(line: 2001, column: 21, scope: !4428)
!4439 = !DILocation(line: 2002, column: 15, scope: !4428)
!4440 = !DILocation(line: 2004, column: 22, scope: !4428)
!4441 = !DILocation(line: 2004, column: 21, scope: !4428)
!4442 = !DILocation(line: 2005, column: 15, scope: !4428)
!4443 = !DILocation(line: 2007, column: 22, scope: !4428)
!4444 = !DILocation(line: 2007, column: 21, scope: !4428)
!4445 = !DILocation(line: 2008, column: 15, scope: !4428)
!4446 = !DILocation(line: 2010, column: 22, scope: !4428)
!4447 = !DILocation(line: 2010, column: 21, scope: !4428)
!4448 = !DILocation(line: 2011, column: 15, scope: !4428)
!4449 = !DILocation(line: 2013, column: 22, scope: !4428)
!4450 = !DILocation(line: 2013, column: 21, scope: !4428)
!4451 = !DILocation(line: 2014, column: 15, scope: !4428)
!4452 = !DILocation(line: 2016, column: 22, scope: !4428)
!4453 = !DILocation(line: 2016, column: 21, scope: !4428)
!4454 = !DILocation(line: 2017, column: 15, scope: !4428)
!4455 = !DILocation(line: 2020, column: 22, scope: !4428)
!4456 = !DILocation(line: 2020, column: 21, scope: !4428)
!4457 = !DILocation(line: 2021, column: 15, scope: !4428)
!4458 = !DILocation(line: 2023, column: 22, scope: !4428)
!4459 = !DILocation(line: 2023, column: 21, scope: !4428)
!4460 = !DILocation(line: 2024, column: 15, scope: !4428)
!4461 = !DILocation(line: 2026, column: 22, scope: !4428)
!4462 = !DILocation(line: 2026, column: 21, scope: !4428)
!4463 = !DILocation(line: 2027, column: 15, scope: !4428)
!4464 = !DILocation(line: 2029, column: 22, scope: !4428)
!4465 = !DILocation(line: 2029, column: 21, scope: !4428)
!4466 = !DILocation(line: 2030, column: 15, scope: !4428)
!4467 = !DILocation(line: 2032, column: 22, scope: !4428)
!4468 = !DILocation(line: 2032, column: 21, scope: !4428)
!4469 = !DILocation(line: 2033, column: 15, scope: !4428)
!4470 = !DILocation(line: 2035, column: 22, scope: !4428)
!4471 = !DILocation(line: 2035, column: 21, scope: !4428)
!4472 = !DILocation(line: 2036, column: 15, scope: !4428)
!4473 = !DILocation(line: 2038, column: 22, scope: !4428)
!4474 = !DILocation(line: 2038, column: 21, scope: !4428)
!4475 = !DILocation(line: 2039, column: 15, scope: !4428)
!4476 = !DILocation(line: 2041, column: 22, scope: !4428)
!4477 = !DILocation(line: 2041, column: 21, scope: !4428)
!4478 = !DILocation(line: 2042, column: 15, scope: !4428)
!4479 = !DILocation(line: 2044, column: 22, scope: !4428)
!4480 = !DILocation(line: 2044, column: 21, scope: !4428)
!4481 = !DILocation(line: 2045, column: 15, scope: !4428)
!4482 = !DILocation(line: 2048, column: 22, scope: !4428)
!4483 = !DILocation(line: 2048, column: 21, scope: !4428)
!4484 = !DILocation(line: 2049, column: 15, scope: !4428)
!4485 = !DILocation(line: 2051, column: 22, scope: !4428)
!4486 = !DILocation(line: 2051, column: 21, scope: !4428)
!4487 = !DILocation(line: 2052, column: 15, scope: !4428)
!4488 = !DILocation(line: 2054, column: 22, scope: !4428)
!4489 = !DILocation(line: 2054, column: 21, scope: !4428)
!4490 = !DILocation(line: 2055, column: 15, scope: !4428)
!4491 = !DILocation(line: 2058, column: 22, scope: !4428)
!4492 = !DILocation(line: 2058, column: 21, scope: !4428)
!4493 = !DILocation(line: 2059, column: 15, scope: !4428)
!4494 = !DILocation(line: 2061, column: 15, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4423, file: !1, line: 2061, column: 15)
!4496 = !DILocation(line: 2061, column: 22, scope: !4495)
!4497 = !DILocation(line: 2061, column: 15, scope: !4423)
!4498 = !DILocation(line: 2062, column: 20, scope: !4495)
!4499 = !DILocation(line: 2062, column: 13, scope: !4495)
!4500 = !DILocation(line: 2063, column: 26, scope: !4423)
!4501 = !DILocation(line: 2063, column: 11, scope: !4423)
!4502 = !DILocation(line: 2063, column: 19, scope: !4423)
!4503 = !DILocation(line: 2063, column: 24, scope: !4423)
!4504 = !DILocation(line: 2064, column: 28, scope: !4423)
!4505 = !DILocation(line: 2064, column: 36, scope: !4423)
!4506 = !DILocation(line: 2064, column: 42, scope: !4423)
!4507 = !DILocation(line: 2064, column: 11, scope: !4423)
!4508 = !DILocation(line: 2065, column: 11, scope: !4423)
!4509 = !DILocation(line: 2072, column: 15, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 2072, column: 15)
!4511 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 2071, column: 9)
!4512 = !DILocation(line: 2072, column: 21, scope: !4510)
!4513 = !DILocation(line: 2072, column: 25, scope: !4510)
!4514 = !DILocation(line: 2072, column: 15, scope: !4511)
!4515 = !DILocation(line: 2073, column: 29, scope: !4510)
!4516 = !DILocation(line: 2073, column: 37, scope: !4510)
!4517 = !DILocation(line: 2073, column: 44, scope: !4510)
!4518 = !DILocation(line: 2073, column: 13, scope: !4510)
!4519 = !DILocation(line: 2073, column: 21, scope: !4510)
!4520 = !DILocation(line: 2073, column: 27, scope: !4510)
!4521 = !DILocation(line: 2075, column: 55, scope: !4510)
!4522 = !DILocation(line: 2075, column: 61, scope: !4510)
!4523 = !DILocation(line: 2075, column: 47, scope: !4510)
!4524 = !DILocation(line: 2075, column: 65, scope: !4510)
!4525 = !DILocation(line: 2075, column: 67, scope: !4510)
!4526 = !DILocation(line: 2075, column: 29, scope: !4510)
!4527 = !DILocation(line: 2075, column: 37, scope: !4510)
!4528 = !DILocation(line: 2075, column: 44, scope: !4510)
!4529 = !DILocation(line: 2075, column: 13, scope: !4510)
!4530 = !DILocation(line: 2075, column: 21, scope: !4510)
!4531 = !DILocation(line: 2075, column: 27, scope: !4510)
!4532 = !DILocation(line: 2076, column: 46, scope: !4511)
!4533 = !DILocation(line: 2076, column: 54, scope: !4511)
!4534 = !DILocation(line: 2076, column: 59, scope: !4511)
!4535 = !DILocation(line: 2076, column: 62, scope: !4511)
!4536 = !DILocation(line: 2076, column: 23, scope: !4511)
!4537 = !DILocation(line: 2076, column: 31, scope: !4511)
!4538 = !DILocation(line: 2076, column: 33, scope: !4511)
!4539 = !DILocation(line: 2076, column: 11, scope: !4511)
!4540 = !DILocation(line: 2076, column: 19, scope: !4511)
!4541 = !DILocation(line: 2076, column: 21, scope: !4511)
!4542 = !DILocation(line: 2078, column: 58, scope: !4511)
!4543 = !DILocation(line: 2078, column: 66, scope: !4511)
!4544 = !DILocation(line: 2079, column: 13, scope: !4511)
!4545 = !DILocation(line: 2079, column: 21, scope: !4511)
!4546 = !DILocation(line: 2079, column: 27, scope: !4511)
!4547 = !DILocation(line: 2078, column: 37, scope: !4511)
!4548 = !DILocation(line: 2078, column: 26, scope: !4511)
!4549 = !DILocation(line: 2078, column: 11, scope: !4511)
!4550 = !DILocation(line: 2078, column: 19, scope: !4511)
!4551 = !DILocation(line: 2078, column: 25, scope: !4511)
!4552 = !DILocation(line: 2080, column: 15, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 2080, column: 15)
!4554 = !DILocation(line: 2080, column: 23, scope: !4553)
!4555 = !DILocation(line: 2080, column: 30, scope: !4553)
!4556 = !DILocation(line: 2080, column: 15, scope: !4511)
!4557 = !DILocation(line: 2081, column: 38, scope: !4553)
!4558 = !DILocation(line: 2081, column: 20, scope: !4553)
!4559 = !DILocation(line: 2081, column: 13, scope: !4553)
!4560 = !DILocation(line: 2083, column: 18, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 2083, column: 11)
!4562 = !DILocation(line: 2083, column: 25, scope: !4561)
!4563 = !DILocation(line: 2083, column: 33, scope: !4561)
!4564 = !DILocation(line: 2083, column: 24, scope: !4561)
!4565 = !DILocation(line: 2083, column: 23, scope: !4561)
!4566 = !DILocation(line: 2083, column: 17, scope: !4561)
!4567 = !DILocation(line: 2083, column: 36, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4561, file: !1, line: 2083, column: 11)
!4569 = !DILocation(line: 2083, column: 50, scope: !4568)
!4570 = !DILocation(line: 2083, column: 58, scope: !4568)
!4571 = !DILocation(line: 2083, column: 38, scope: !4568)
!4572 = !DILocation(line: 2083, column: 11, scope: !4561)
!4573 = !DILocation(line: 2084, column: 22, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4568, file: !1, line: 2084, column: 13)
!4575 = !DILocation(line: 2084, column: 30, scope: !4574)
!4576 = !DILocation(line: 2084, column: 21, scope: !4574)
!4577 = !DILocation(line: 2084, column: 20, scope: !4574)
!4578 = !DILocation(line: 2084, column: 19, scope: !4574)
!4579 = !DILocation(line: 2084, column: 33, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 2084, column: 13)
!4581 = !DILocation(line: 2084, column: 47, scope: !4580)
!4582 = !DILocation(line: 2084, column: 55, scope: !4580)
!4583 = !DILocation(line: 2084, column: 35, scope: !4580)
!4584 = !DILocation(line: 2084, column: 13, scope: !4574)
!4585 = !DILocation(line: 2086, column: 19, scope: !4580)
!4586 = !DILocation(line: 2086, column: 25, scope: !4580)
!4587 = !DILocation(line: 2086, column: 54, scope: !4580)
!4588 = !DILocation(line: 2086, column: 46, scope: !4580)
!4589 = !DILocation(line: 2086, column: 41, scope: !4580)
!4590 = !DILocation(line: 2086, column: 70, scope: !4580)
!4591 = !DILocation(line: 2086, column: 62, scope: !4580)
!4592 = !DILocation(line: 2086, column: 57, scope: !4580)
!4593 = !DILocation(line: 2086, column: 31, scope: !4580)
!4594 = !DILocation(line: 2086, column: 30, scope: !4580)
!4595 = !DILocation(line: 2085, column: 43, scope: !4580)
!4596 = !DILocation(line: 2085, column: 51, scope: !4580)
!4597 = !DILocation(line: 2085, column: 58, scope: !4580)
!4598 = !DILocation(line: 2085, column: 61, scope: !4580)
!4599 = !DILocation(line: 2085, column: 15, scope: !4580)
!4600 = !DILocation(line: 2085, column: 23, scope: !4580)
!4601 = !DILocation(line: 2085, column: 38, scope: !4580)
!4602 = !DILocation(line: 2084, column: 59, scope: !4580)
!4603 = !DILocation(line: 2084, column: 64, scope: !4580)
!4604 = !DILocation(line: 2084, column: 13, scope: !4580)
!4605 = distinct !{!4605, !4584, !4606}
!4606 = !DILocation(line: 2086, column: 74, scope: !4574)
!4607 = !DILocation(line: 2083, column: 62, scope: !4568)
!4608 = !DILocation(line: 2083, column: 11, scope: !4568)
!4609 = distinct !{!4609, !4572, !4610}
!4610 = !DILocation(line: 2086, column: 74, scope: !4561)
!4611 = !DILocation(line: 2087, column: 29, scope: !4511)
!4612 = !DILocation(line: 2087, column: 37, scope: !4511)
!4613 = !DILocation(line: 2087, column: 11, scope: !4511)
!4614 = !DILocation(line: 2087, column: 19, scope: !4511)
!4615 = !DILocation(line: 2087, column: 27, scope: !4511)
!4616 = !DILocation(line: 2088, column: 11, scope: !4511)
!4617 = !DILocation(line: 2092, column: 15, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !1, line: 2092, column: 15)
!4619 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 2091, column: 9)
!4620 = !DILocation(line: 2092, column: 21, scope: !4618)
!4621 = !DILocation(line: 2092, column: 25, scope: !4618)
!4622 = !DILocation(line: 2092, column: 15, scope: !4619)
!4623 = !DILocation(line: 2093, column: 29, scope: !4618)
!4624 = !DILocation(line: 2093, column: 37, scope: !4618)
!4625 = !DILocation(line: 2093, column: 44, scope: !4618)
!4626 = !DILocation(line: 2093, column: 13, scope: !4618)
!4627 = !DILocation(line: 2093, column: 21, scope: !4618)
!4628 = !DILocation(line: 2093, column: 27, scope: !4618)
!4629 = !DILocation(line: 2095, column: 55, scope: !4618)
!4630 = !DILocation(line: 2095, column: 61, scope: !4618)
!4631 = !DILocation(line: 2095, column: 47, scope: !4618)
!4632 = !DILocation(line: 2095, column: 65, scope: !4618)
!4633 = !DILocation(line: 2095, column: 67, scope: !4618)
!4634 = !DILocation(line: 2095, column: 29, scope: !4618)
!4635 = !DILocation(line: 2095, column: 37, scope: !4618)
!4636 = !DILocation(line: 2095, column: 44, scope: !4618)
!4637 = !DILocation(line: 2095, column: 13, scope: !4618)
!4638 = !DILocation(line: 2095, column: 21, scope: !4618)
!4639 = !DILocation(line: 2095, column: 27, scope: !4618)
!4640 = !DILocation(line: 2096, column: 46, scope: !4619)
!4641 = !DILocation(line: 2096, column: 54, scope: !4619)
!4642 = !DILocation(line: 2096, column: 59, scope: !4619)
!4643 = !DILocation(line: 2096, column: 62, scope: !4619)
!4644 = !DILocation(line: 2096, column: 23, scope: !4619)
!4645 = !DILocation(line: 2096, column: 31, scope: !4619)
!4646 = !DILocation(line: 2096, column: 33, scope: !4619)
!4647 = !DILocation(line: 2096, column: 11, scope: !4619)
!4648 = !DILocation(line: 2096, column: 19, scope: !4619)
!4649 = !DILocation(line: 2096, column: 21, scope: !4619)
!4650 = !DILocation(line: 2098, column: 58, scope: !4619)
!4651 = !DILocation(line: 2098, column: 66, scope: !4619)
!4652 = !DILocation(line: 2099, column: 13, scope: !4619)
!4653 = !DILocation(line: 2099, column: 21, scope: !4619)
!4654 = !DILocation(line: 2099, column: 27, scope: !4619)
!4655 = !DILocation(line: 2098, column: 37, scope: !4619)
!4656 = !DILocation(line: 2098, column: 26, scope: !4619)
!4657 = !DILocation(line: 2098, column: 11, scope: !4619)
!4658 = !DILocation(line: 2098, column: 19, scope: !4619)
!4659 = !DILocation(line: 2098, column: 25, scope: !4619)
!4660 = !DILocation(line: 2100, column: 15, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4619, file: !1, line: 2100, column: 15)
!4662 = !DILocation(line: 2100, column: 23, scope: !4661)
!4663 = !DILocation(line: 2100, column: 30, scope: !4661)
!4664 = !DILocation(line: 2100, column: 15, scope: !4619)
!4665 = !DILocation(line: 2101, column: 38, scope: !4661)
!4666 = !DILocation(line: 2101, column: 20, scope: !4661)
!4667 = !DILocation(line: 2101, column: 13, scope: !4661)
!4668 = !DILocation(line: 2103, column: 18, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4619, file: !1, line: 2103, column: 11)
!4670 = !DILocation(line: 2103, column: 25, scope: !4669)
!4671 = !DILocation(line: 2103, column: 33, scope: !4669)
!4672 = !DILocation(line: 2103, column: 24, scope: !4669)
!4673 = !DILocation(line: 2103, column: 23, scope: !4669)
!4674 = !DILocation(line: 2103, column: 17, scope: !4669)
!4675 = !DILocation(line: 2103, column: 36, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 2103, column: 11)
!4677 = !DILocation(line: 2103, column: 50, scope: !4676)
!4678 = !DILocation(line: 2103, column: 58, scope: !4676)
!4679 = !DILocation(line: 2103, column: 38, scope: !4676)
!4680 = !DILocation(line: 2103, column: 11, scope: !4669)
!4681 = !DILocation(line: 2104, column: 22, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4676, file: !1, line: 2104, column: 13)
!4683 = !DILocation(line: 2104, column: 30, scope: !4682)
!4684 = !DILocation(line: 2104, column: 21, scope: !4682)
!4685 = !DILocation(line: 2104, column: 20, scope: !4682)
!4686 = !DILocation(line: 2104, column: 19, scope: !4682)
!4687 = !DILocation(line: 2104, column: 33, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4682, file: !1, line: 2104, column: 13)
!4689 = !DILocation(line: 2104, column: 47, scope: !4688)
!4690 = !DILocation(line: 2104, column: 55, scope: !4688)
!4691 = !DILocation(line: 2104, column: 35, scope: !4688)
!4692 = !DILocation(line: 2104, column: 13, scope: !4682)
!4693 = !DILocation(line: 2106, column: 19, scope: !4688)
!4694 = !DILocation(line: 2106, column: 25, scope: !4688)
!4695 = !DILocation(line: 2106, column: 44, scope: !4688)
!4696 = !DILocation(line: 2106, column: 32, scope: !4688)
!4697 = !DILocation(line: 2106, column: 59, scope: !4688)
!4698 = !DILocation(line: 2106, column: 47, scope: !4688)
!4699 = !DILocation(line: 2106, column: 46, scope: !4688)
!4700 = !DILocation(line: 2106, column: 31, scope: !4688)
!4701 = !DILocation(line: 2106, column: 30, scope: !4688)
!4702 = !DILocation(line: 2105, column: 43, scope: !4688)
!4703 = !DILocation(line: 2105, column: 51, scope: !4688)
!4704 = !DILocation(line: 2105, column: 58, scope: !4688)
!4705 = !DILocation(line: 2105, column: 61, scope: !4688)
!4706 = !DILocation(line: 2105, column: 15, scope: !4688)
!4707 = !DILocation(line: 2105, column: 23, scope: !4688)
!4708 = !DILocation(line: 2105, column: 38, scope: !4688)
!4709 = !DILocation(line: 2104, column: 59, scope: !4688)
!4710 = !DILocation(line: 2104, column: 64, scope: !4688)
!4711 = !DILocation(line: 2104, column: 13, scope: !4688)
!4712 = distinct !{!4712, !4692, !4713}
!4713 = !DILocation(line: 2106, column: 63, scope: !4682)
!4714 = !DILocation(line: 2103, column: 62, scope: !4676)
!4715 = !DILocation(line: 2103, column: 11, scope: !4676)
!4716 = distinct !{!4716, !4680, !4717}
!4717 = !DILocation(line: 2106, column: 63, scope: !4669)
!4718 = !DILocation(line: 2107, column: 29, scope: !4619)
!4719 = !DILocation(line: 2107, column: 37, scope: !4619)
!4720 = !DILocation(line: 2107, column: 11, scope: !4619)
!4721 = !DILocation(line: 2107, column: 19, scope: !4619)
!4722 = !DILocation(line: 2107, column: 27, scope: !4619)
!4723 = !DILocation(line: 2108, column: 11, scope: !4619)
!4724 = !DILocation(line: 2112, column: 13, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !1, line: 2112, column: 13)
!4726 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 2111, column: 7)
!4727 = !DILocation(line: 2112, column: 19, scope: !4725)
!4728 = !DILocation(line: 2112, column: 23, scope: !4725)
!4729 = !DILocation(line: 2112, column: 13, scope: !4726)
!4730 = !DILocation(line: 2113, column: 27, scope: !4725)
!4731 = !DILocation(line: 2113, column: 35, scope: !4725)
!4732 = !DILocation(line: 2113, column: 42, scope: !4725)
!4733 = !DILocation(line: 2113, column: 11, scope: !4725)
!4734 = !DILocation(line: 2113, column: 19, scope: !4725)
!4735 = !DILocation(line: 2113, column: 25, scope: !4725)
!4736 = !DILocation(line: 2115, column: 53, scope: !4725)
!4737 = !DILocation(line: 2115, column: 59, scope: !4725)
!4738 = !DILocation(line: 2115, column: 45, scope: !4725)
!4739 = !DILocation(line: 2115, column: 63, scope: !4725)
!4740 = !DILocation(line: 2115, column: 65, scope: !4725)
!4741 = !DILocation(line: 2115, column: 27, scope: !4725)
!4742 = !DILocation(line: 2115, column: 35, scope: !4725)
!4743 = !DILocation(line: 2115, column: 42, scope: !4725)
!4744 = !DILocation(line: 2115, column: 11, scope: !4725)
!4745 = !DILocation(line: 2115, column: 19, scope: !4725)
!4746 = !DILocation(line: 2115, column: 25, scope: !4725)
!4747 = !DILocation(line: 2116, column: 44, scope: !4726)
!4748 = !DILocation(line: 2116, column: 52, scope: !4726)
!4749 = !DILocation(line: 2116, column: 57, scope: !4726)
!4750 = !DILocation(line: 2116, column: 60, scope: !4726)
!4751 = !DILocation(line: 2116, column: 21, scope: !4726)
!4752 = !DILocation(line: 2116, column: 29, scope: !4726)
!4753 = !DILocation(line: 2116, column: 31, scope: !4726)
!4754 = !DILocation(line: 2116, column: 9, scope: !4726)
!4755 = !DILocation(line: 2116, column: 17, scope: !4726)
!4756 = !DILocation(line: 2116, column: 19, scope: !4726)
!4757 = !DILocation(line: 2118, column: 56, scope: !4726)
!4758 = !DILocation(line: 2118, column: 64, scope: !4726)
!4759 = !DILocation(line: 2119, column: 11, scope: !4726)
!4760 = !DILocation(line: 2119, column: 19, scope: !4726)
!4761 = !DILocation(line: 2119, column: 25, scope: !4726)
!4762 = !DILocation(line: 2118, column: 35, scope: !4726)
!4763 = !DILocation(line: 2118, column: 24, scope: !4726)
!4764 = !DILocation(line: 2118, column: 9, scope: !4726)
!4765 = !DILocation(line: 2118, column: 17, scope: !4726)
!4766 = !DILocation(line: 2118, column: 23, scope: !4726)
!4767 = !DILocation(line: 2120, column: 13, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4726, file: !1, line: 2120, column: 13)
!4769 = !DILocation(line: 2120, column: 21, scope: !4768)
!4770 = !DILocation(line: 2120, column: 28, scope: !4768)
!4771 = !DILocation(line: 2120, column: 13, scope: !4726)
!4772 = !DILocation(line: 2121, column: 36, scope: !4768)
!4773 = !DILocation(line: 2121, column: 18, scope: !4768)
!4774 = !DILocation(line: 2121, column: 11, scope: !4768)
!4775 = !DILocation(line: 2123, column: 16, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4726, file: !1, line: 2123, column: 9)
!4777 = !DILocation(line: 2123, column: 23, scope: !4776)
!4778 = !DILocation(line: 2123, column: 31, scope: !4776)
!4779 = !DILocation(line: 2123, column: 22, scope: !4776)
!4780 = !DILocation(line: 2123, column: 21, scope: !4776)
!4781 = !DILocation(line: 2123, column: 15, scope: !4776)
!4782 = !DILocation(line: 2123, column: 34, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 2123, column: 9)
!4784 = !DILocation(line: 2123, column: 48, scope: !4783)
!4785 = !DILocation(line: 2123, column: 56, scope: !4783)
!4786 = !DILocation(line: 2123, column: 36, scope: !4783)
!4787 = !DILocation(line: 2123, column: 9, scope: !4776)
!4788 = !DILocation(line: 2124, column: 20, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4783, file: !1, line: 2124, column: 11)
!4790 = !DILocation(line: 2124, column: 28, scope: !4789)
!4791 = !DILocation(line: 2124, column: 19, scope: !4789)
!4792 = !DILocation(line: 2124, column: 18, scope: !4789)
!4793 = !DILocation(line: 2124, column: 17, scope: !4789)
!4794 = !DILocation(line: 2124, column: 31, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4789, file: !1, line: 2124, column: 11)
!4796 = !DILocation(line: 2124, column: 45, scope: !4795)
!4797 = !DILocation(line: 2124, column: 53, scope: !4795)
!4798 = !DILocation(line: 2124, column: 33, scope: !4795)
!4799 = !DILocation(line: 2124, column: 11, scope: !4789)
!4800 = !DILocalVariable(name: "r1", scope: !4801, file: !1, line: 2127, type: !617)
!4801 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 2125, column: 13)
!4802 = !DILocation(line: 2127, column: 17, scope: !4801)
!4803 = !DILocation(line: 2127, column: 45, scope: !4801)
!4804 = !DILocation(line: 2127, column: 37, scope: !4801)
!4805 = !DILocation(line: 2127, column: 32, scope: !4801)
!4806 = !DILocation(line: 2127, column: 61, scope: !4801)
!4807 = !DILocation(line: 2127, column: 53, scope: !4801)
!4808 = !DILocation(line: 2127, column: 48, scope: !4801)
!4809 = !DILocation(line: 2127, column: 22, scope: !4801)
!4810 = !DILocalVariable(name: "r2", scope: !4801, file: !1, line: 2128, type: !617)
!4811 = !DILocation(line: 2128, column: 17, scope: !4801)
!4812 = !DILocation(line: 2128, column: 48, scope: !4801)
!4813 = !DILocation(line: 2128, column: 37, scope: !4801)
!4814 = !DILocation(line: 2128, column: 62, scope: !4801)
!4815 = !DILocation(line: 2128, column: 51, scope: !4801)
!4816 = !DILocation(line: 2128, column: 50, scope: !4801)
!4817 = !DILocation(line: 2128, column: 64, scope: !4801)
!4818 = !DILocation(line: 2128, column: 28, scope: !4801)
!4819 = !DILocation(line: 2128, column: 67, scope: !4801)
!4820 = !DILocation(line: 2128, column: 22, scope: !4801)
!4821 = !DILocation(line: 2130, column: 25, scope: !4801)
!4822 = !DILocation(line: 2130, column: 31, scope: !4801)
!4823 = !DILocation(line: 2130, column: 47, scope: !4801)
!4824 = !DILocation(line: 2130, column: 50, scope: !4801)
!4825 = !DILocation(line: 2130, column: 37, scope: !4801)
!4826 = !DILocation(line: 2130, column: 36, scope: !4801)
!4827 = !DILocation(line: 2129, column: 41, scope: !4801)
!4828 = !DILocation(line: 2129, column: 49, scope: !4801)
!4829 = !DILocation(line: 2129, column: 56, scope: !4801)
!4830 = !DILocation(line: 2129, column: 59, scope: !4801)
!4831 = !DILocation(line: 2129, column: 15, scope: !4801)
!4832 = !DILocation(line: 2129, column: 23, scope: !4801)
!4833 = !DILocation(line: 2129, column: 38, scope: !4801)
!4834 = !DILocation(line: 2131, column: 13, scope: !4801)
!4835 = !DILocation(line: 2124, column: 57, scope: !4795)
!4836 = !DILocation(line: 2124, column: 62, scope: !4795)
!4837 = !DILocation(line: 2124, column: 11, scope: !4795)
!4838 = distinct !{!4838, !4799, !4839}
!4839 = !DILocation(line: 2131, column: 13, scope: !4789)
!4840 = !DILocation(line: 2123, column: 60, scope: !4783)
!4841 = !DILocation(line: 2123, column: 9, scope: !4783)
!4842 = distinct !{!4842, !4787, !4843}
!4843 = !DILocation(line: 2131, column: 13, scope: !4776)
!4844 = !DILocation(line: 2132, column: 27, scope: !4726)
!4845 = !DILocation(line: 2132, column: 35, scope: !4726)
!4846 = !DILocation(line: 2132, column: 9, scope: !4726)
!4847 = !DILocation(line: 2132, column: 17, scope: !4726)
!4848 = !DILocation(line: 2132, column: 25, scope: !4726)
!4849 = !DILocation(line: 2133, column: 9, scope: !4726)
!4850 = !DILocation(line: 2137, column: 13, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2137, column: 13)
!4852 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 2136, column: 7)
!4853 = !DILocation(line: 2137, column: 19, scope: !4851)
!4854 = !DILocation(line: 2137, column: 23, scope: !4851)
!4855 = !DILocation(line: 2137, column: 13, scope: !4852)
!4856 = !DILocation(line: 2138, column: 27, scope: !4851)
!4857 = !DILocation(line: 2138, column: 35, scope: !4851)
!4858 = !DILocation(line: 2138, column: 42, scope: !4851)
!4859 = !DILocation(line: 2138, column: 11, scope: !4851)
!4860 = !DILocation(line: 2138, column: 19, scope: !4851)
!4861 = !DILocation(line: 2138, column: 25, scope: !4851)
!4862 = !DILocation(line: 2140, column: 53, scope: !4851)
!4863 = !DILocation(line: 2140, column: 59, scope: !4851)
!4864 = !DILocation(line: 2140, column: 45, scope: !4851)
!4865 = !DILocation(line: 2140, column: 63, scope: !4851)
!4866 = !DILocation(line: 2140, column: 65, scope: !4851)
!4867 = !DILocation(line: 2140, column: 27, scope: !4851)
!4868 = !DILocation(line: 2140, column: 35, scope: !4851)
!4869 = !DILocation(line: 2140, column: 42, scope: !4851)
!4870 = !DILocation(line: 2140, column: 11, scope: !4851)
!4871 = !DILocation(line: 2140, column: 19, scope: !4851)
!4872 = !DILocation(line: 2140, column: 25, scope: !4851)
!4873 = !DILocation(line: 2141, column: 44, scope: !4852)
!4874 = !DILocation(line: 2141, column: 52, scope: !4852)
!4875 = !DILocation(line: 2141, column: 57, scope: !4852)
!4876 = !DILocation(line: 2141, column: 60, scope: !4852)
!4877 = !DILocation(line: 2141, column: 21, scope: !4852)
!4878 = !DILocation(line: 2141, column: 29, scope: !4852)
!4879 = !DILocation(line: 2141, column: 31, scope: !4852)
!4880 = !DILocation(line: 2141, column: 9, scope: !4852)
!4881 = !DILocation(line: 2141, column: 17, scope: !4852)
!4882 = !DILocation(line: 2141, column: 19, scope: !4852)
!4883 = !DILocation(line: 2143, column: 56, scope: !4852)
!4884 = !DILocation(line: 2143, column: 64, scope: !4852)
!4885 = !DILocation(line: 2144, column: 11, scope: !4852)
!4886 = !DILocation(line: 2144, column: 19, scope: !4852)
!4887 = !DILocation(line: 2144, column: 25, scope: !4852)
!4888 = !DILocation(line: 2143, column: 35, scope: !4852)
!4889 = !DILocation(line: 2143, column: 24, scope: !4852)
!4890 = !DILocation(line: 2143, column: 9, scope: !4852)
!4891 = !DILocation(line: 2143, column: 17, scope: !4852)
!4892 = !DILocation(line: 2143, column: 23, scope: !4852)
!4893 = !DILocation(line: 2145, column: 13, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2145, column: 13)
!4895 = !DILocation(line: 2145, column: 21, scope: !4894)
!4896 = !DILocation(line: 2145, column: 28, scope: !4894)
!4897 = !DILocation(line: 2145, column: 13, scope: !4852)
!4898 = !DILocation(line: 2146, column: 36, scope: !4894)
!4899 = !DILocation(line: 2146, column: 18, scope: !4894)
!4900 = !DILocation(line: 2146, column: 11, scope: !4894)
!4901 = !DILocation(line: 2148, column: 16, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2148, column: 9)
!4903 = !DILocation(line: 2148, column: 23, scope: !4902)
!4904 = !DILocation(line: 2148, column: 31, scope: !4902)
!4905 = !DILocation(line: 2148, column: 22, scope: !4902)
!4906 = !DILocation(line: 2148, column: 21, scope: !4902)
!4907 = !DILocation(line: 2148, column: 15, scope: !4902)
!4908 = !DILocation(line: 2148, column: 34, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 2148, column: 9)
!4910 = !DILocation(line: 2148, column: 48, scope: !4909)
!4911 = !DILocation(line: 2148, column: 56, scope: !4909)
!4912 = !DILocation(line: 2148, column: 36, scope: !4909)
!4913 = !DILocation(line: 2148, column: 9, scope: !4902)
!4914 = !DILocation(line: 2149, column: 20, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !1, line: 2149, column: 11)
!4916 = !DILocation(line: 2149, column: 28, scope: !4915)
!4917 = !DILocation(line: 2149, column: 19, scope: !4915)
!4918 = !DILocation(line: 2149, column: 18, scope: !4915)
!4919 = !DILocation(line: 2149, column: 17, scope: !4915)
!4920 = !DILocation(line: 2149, column: 31, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4915, file: !1, line: 2149, column: 11)
!4922 = !DILocation(line: 2149, column: 45, scope: !4921)
!4923 = !DILocation(line: 2149, column: 53, scope: !4921)
!4924 = !DILocation(line: 2149, column: 33, scope: !4921)
!4925 = !DILocation(line: 2149, column: 11, scope: !4915)
!4926 = !DILocation(line: 2151, column: 15, scope: !4921)
!4927 = !DILocation(line: 2151, column: 21, scope: !4921)
!4928 = !DILocation(line: 2151, column: 41, scope: !4921)
!4929 = !DILocation(line: 2151, column: 43, scope: !4921)
!4930 = !DILocation(line: 2151, column: 42, scope: !4921)
!4931 = !DILocation(line: 2151, column: 45, scope: !4921)
!4932 = !DILocation(line: 2151, column: 47, scope: !4921)
!4933 = !DILocation(line: 2151, column: 46, scope: !4921)
!4934 = !DILocation(line: 2151, column: 44, scope: !4921)
!4935 = !DILocation(line: 2151, column: 32, scope: !4921)
!4936 = !DILocation(line: 2151, column: 27, scope: !4921)
!4937 = !DILocation(line: 2151, column: 26, scope: !4921)
!4938 = !DILocation(line: 2150, column: 41, scope: !4921)
!4939 = !DILocation(line: 2150, column: 49, scope: !4921)
!4940 = !DILocation(line: 2150, column: 56, scope: !4921)
!4941 = !DILocation(line: 2150, column: 59, scope: !4921)
!4942 = !DILocation(line: 2150, column: 13, scope: !4921)
!4943 = !DILocation(line: 2150, column: 21, scope: !4921)
!4944 = !DILocation(line: 2150, column: 36, scope: !4921)
!4945 = !DILocation(line: 2149, column: 57, scope: !4921)
!4946 = !DILocation(line: 2149, column: 62, scope: !4921)
!4947 = !DILocation(line: 2149, column: 11, scope: !4921)
!4948 = distinct !{!4948, !4925, !4949}
!4949 = !DILocation(line: 2151, column: 51, scope: !4915)
!4950 = !DILocation(line: 2148, column: 60, scope: !4909)
!4951 = !DILocation(line: 2148, column: 9, scope: !4909)
!4952 = distinct !{!4952, !4913, !4953}
!4953 = !DILocation(line: 2151, column: 51, scope: !4902)
!4954 = !DILocation(line: 2152, column: 27, scope: !4852)
!4955 = !DILocation(line: 2152, column: 35, scope: !4852)
!4956 = !DILocation(line: 2152, column: 9, scope: !4852)
!4957 = !DILocation(line: 2152, column: 17, scope: !4852)
!4958 = !DILocation(line: 2152, column: 25, scope: !4852)
!4959 = !DILocation(line: 2153, column: 9, scope: !4852)
!4960 = !DILocation(line: 2158, column: 16, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 2156, column: 7)
!4962 = !DILocation(line: 2158, column: 15, scope: !4961)
!4963 = !DILocation(line: 2159, column: 13, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !1, line: 2159, column: 13)
!4965 = !DILocation(line: 2159, column: 20, scope: !4964)
!4966 = !DILocation(line: 2159, column: 13, scope: !4961)
!4967 = !DILocation(line: 2160, column: 18, scope: !4964)
!4968 = !DILocation(line: 2160, column: 11, scope: !4964)
!4969 = !DILocation(line: 2161, column: 9, scope: !4961)
!4970 = !DILocation(line: 2161, column: 17, scope: !4961)
!4971 = !DILocation(line: 2161, column: 22, scope: !4961)
!4972 = !DILocation(line: 2162, column: 9, scope: !4961)
!4973 = !DILocation(line: 2166, column: 10, scope: !1631)
!4974 = !DILocation(line: 2166, column: 3, scope: !1631)
!4975 = !DILocation(line: 2167, column: 1, scope: !1631)
!4976 = distinct !DISubprogram(name: "CalcKernelMetaData", scope: !1, file: !1, line: 2456, type: !4977, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{null, !597}
!4979 = !DILocalVariable(name: "kernel", arg: 1, scope: !4976, file: !1, line: 2456, type: !597)
!4980 = !DILocation(line: 2456, column: 44, scope: !4976)
!4981 = !DILocalVariable(name: "i", scope: !4976, file: !1, line: 2459, type: !604)
!4982 = !DILocation(line: 2459, column: 5, scope: !4976)
!4983 = !DILocation(line: 2461, column: 21, scope: !4976)
!4984 = !DILocation(line: 2461, column: 29, scope: !4976)
!4985 = !DILocation(line: 2461, column: 37, scope: !4976)
!4986 = !DILocation(line: 2461, column: 3, scope: !4976)
!4987 = !DILocation(line: 2461, column: 11, scope: !4976)
!4988 = !DILocation(line: 2461, column: 19, scope: !4976)
!4989 = !DILocation(line: 2462, column: 28, scope: !4976)
!4990 = !DILocation(line: 2462, column: 36, scope: !4976)
!4991 = !DILocation(line: 2462, column: 51, scope: !4976)
!4992 = !DILocation(line: 2462, column: 3, scope: !4976)
!4993 = !DILocation(line: 2462, column: 11, scope: !4976)
!4994 = !DILocation(line: 2462, column: 26, scope: !4976)
!4995 = !DILocation(line: 2463, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4976, file: !1, line: 2463, column: 3)
!4997 = !DILocation(line: 2463, column: 8, scope: !4996)
!4998 = !DILocation(line: 2463, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !1, line: 2463, column: 3)
!5000 = !DILocation(line: 2463, column: 18, scope: !4999)
!5001 = !DILocation(line: 2463, column: 26, scope: !4999)
!5002 = !DILocation(line: 2463, column: 32, scope: !4999)
!5003 = !DILocation(line: 2463, column: 40, scope: !4999)
!5004 = !DILocation(line: 2463, column: 31, scope: !4999)
!5005 = !DILocation(line: 2463, column: 15, scope: !4999)
!5006 = !DILocation(line: 2463, column: 3, scope: !4996)
!5007 = !DILocation(line: 2465, column: 17, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !1, line: 2465, column: 12)
!5009 = distinct !DILexicalBlock(scope: !4999, file: !1, line: 2464, column: 5)
!5010 = !DILocation(line: 2465, column: 25, scope: !5008)
!5011 = !DILocation(line: 2465, column: 32, scope: !5008)
!5012 = !DILocation(line: 2465, column: 12, scope: !5008)
!5013 = !DILocation(line: 2465, column: 36, scope: !5008)
!5014 = !DILocation(line: 2465, column: 12, scope: !5009)
!5015 = !DILocation(line: 2466, column: 9, scope: !5008)
!5016 = !DILocation(line: 2466, column: 17, scope: !5008)
!5017 = !DILocation(line: 2466, column: 24, scope: !5008)
!5018 = !DILocation(line: 2466, column: 27, scope: !5008)
!5019 = !DILocation(line: 2467, column: 9, scope: !5009)
!5020 = !DILocation(line: 2467, column: 17, scope: !5009)
!5021 = !DILocation(line: 2467, column: 24, scope: !5009)
!5022 = !DILocation(line: 2467, column: 27, scope: !5009)
!5023 = !DILocation(line: 2467, column: 7, scope: !5009)
!5024 = !DILocation(line: 2468, column: 42, scope: !5009)
!5025 = !DILocation(line: 2468, column: 50, scope: !5009)
!5026 = !DILocation(line: 2468, column: 57, scope: !5009)
!5027 = !DILocation(line: 2468, column: 16, scope: !5009)
!5028 = !DILocation(line: 2468, column: 24, scope: !5009)
!5029 = !DILocation(line: 2468, column: 39, scope: !5009)
!5030 = !DILocation(line: 2469, column: 42, scope: !5009)
!5031 = !DILocation(line: 2469, column: 50, scope: !5009)
!5032 = !DILocation(line: 2469, column: 57, scope: !5009)
!5033 = !DILocation(line: 2469, column: 16, scope: !5009)
!5034 = !DILocation(line: 2469, column: 24, scope: !5009)
!5035 = !DILocation(line: 2469, column: 39, scope: !5009)
!5036 = !DILocation(line: 2470, column: 7, scope: !5009)
!5037 = !DILocation(line: 2471, column: 7, scope: !5009)
!5038 = !DILocation(line: 2472, column: 5, scope: !5009)
!5039 = !DILocation(line: 2463, column: 50, scope: !4999)
!5040 = !DILocation(line: 2463, column: 3, scope: !4999)
!5041 = distinct !{!5041, !5006, !5042}
!5042 = !DILocation(line: 2472, column: 5, scope: !4996)
!5043 = !DILocation(line: 2474, column: 3, scope: !4976)
!5044 = distinct !DISubprogram(name: "ScaleKernelInfo", scope: !1, file: !1, line: 4761, type: !5045, scopeLine: 4763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{null, !597, !5047, !5048}
!5047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!5048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!5049 = !DILocalVariable(name: "kernel", arg: 1, scope: !5044, file: !1, line: 4761, type: !597)
!5050 = !DILocation(line: 4761, column: 47, scope: !5044)
!5051 = !DILocalVariable(name: "scaling_factor", arg: 2, scope: !5044, file: !1, line: 4762, type: !5047)
!5052 = !DILocation(line: 4762, column: 16, scope: !5044)
!5053 = !DILocalVariable(name: "normalize_flags", arg: 3, scope: !5044, file: !1, line: 4762, type: !5048)
!5054 = !DILocation(line: 4762, column: 51, scope: !5044)
!5055 = !DILocalVariable(name: "i", scope: !5044, file: !1, line: 4765, type: !609)
!5056 = !DILocation(line: 4765, column: 5, scope: !5044)
!5057 = !DILocalVariable(name: "pos_scale", scope: !5044, file: !1, line: 4768, type: !617)
!5058 = !DILocation(line: 4768, column: 5, scope: !5044)
!5059 = !DILocalVariable(name: "neg_scale", scope: !5044, file: !1, line: 4769, type: !617)
!5060 = !DILocation(line: 4769, column: 5, scope: !5044)
!5061 = !DILocation(line: 4772, column: 8, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 4772, column: 8)
!5063 = !DILocation(line: 4772, column: 16, scope: !5062)
!5064 = !DILocation(line: 4772, column: 21, scope: !5062)
!5065 = !DILocation(line: 4772, column: 8, scope: !5044)
!5066 = !DILocation(line: 4773, column: 21, scope: !5062)
!5067 = !DILocation(line: 4773, column: 29, scope: !5062)
!5068 = !DILocation(line: 4773, column: 35, scope: !5062)
!5069 = !DILocation(line: 4773, column: 51, scope: !5062)
!5070 = !DILocation(line: 4773, column: 5, scope: !5062)
!5071 = !DILocation(line: 4776, column: 13, scope: !5044)
!5072 = !DILocation(line: 4777, column: 9, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 4777, column: 8)
!5074 = !DILocation(line: 4777, column: 24, scope: !5073)
!5075 = !DILocation(line: 4777, column: 41, scope: !5073)
!5076 = !DILocation(line: 4777, column: 8, scope: !5044)
!5077 = !DILocation(line: 4778, column: 15, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !1, line: 4778, column: 10)
!5079 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 4777, column: 48)
!5080 = !DILocation(line: 4778, column: 23, scope: !5078)
!5081 = !DILocation(line: 4778, column: 40, scope: !5078)
!5082 = !DILocation(line: 4778, column: 48, scope: !5078)
!5083 = !DILocation(line: 4778, column: 38, scope: !5078)
!5084 = !DILocation(line: 4778, column: 10, scope: !5078)
!5085 = !DILocation(line: 4778, column: 64, scope: !5078)
!5086 = !DILocation(line: 4778, column: 10, scope: !5079)
!5087 = !DILocation(line: 4780, column: 24, scope: !5078)
!5088 = !DILocation(line: 4780, column: 32, scope: !5078)
!5089 = !DILocation(line: 4780, column: 49, scope: !5078)
!5090 = !DILocation(line: 4780, column: 57, scope: !5078)
!5091 = !DILocation(line: 4780, column: 47, scope: !5078)
!5092 = !DILocation(line: 4780, column: 19, scope: !5078)
!5093 = !DILocation(line: 4780, column: 17, scope: !5078)
!5094 = !DILocation(line: 4780, column: 7, scope: !5078)
!5095 = !DILocation(line: 4783, column: 19, scope: !5078)
!5096 = !DILocation(line: 4783, column: 27, scope: !5078)
!5097 = !DILocation(line: 4783, column: 17, scope: !5078)
!5098 = !DILocation(line: 4784, column: 3, scope: !5079)
!5099 = !DILocation(line: 4786, column: 9, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 4786, column: 8)
!5101 = !DILocation(line: 4786, column: 24, scope: !5100)
!5102 = !DILocation(line: 4786, column: 50, scope: !5100)
!5103 = !DILocation(line: 4786, column: 8, scope: !5044)
!5104 = !DILocation(line: 4787, column: 24, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5100, file: !1, line: 4786, column: 57)
!5106 = !DILocation(line: 4787, column: 32, scope: !5105)
!5107 = !DILocation(line: 4787, column: 19, scope: !5105)
!5108 = !DILocation(line: 4787, column: 48, scope: !5105)
!5109 = !DILocation(line: 4787, column: 17, scope: !5105)
!5110 = !DILocation(line: 4788, column: 20, scope: !5105)
!5111 = !DILocation(line: 4788, column: 28, scope: !5105)
!5112 = !DILocation(line: 4787, column: 15, scope: !5105)
!5113 = !DILocation(line: 4789, column: 24, scope: !5105)
!5114 = !DILocation(line: 4789, column: 32, scope: !5105)
!5115 = !DILocation(line: 4789, column: 19, scope: !5105)
!5116 = !DILocation(line: 4789, column: 48, scope: !5105)
!5117 = !DILocation(line: 4789, column: 17, scope: !5105)
!5118 = !DILocation(line: 4790, column: 21, scope: !5105)
!5119 = !DILocation(line: 4790, column: 29, scope: !5105)
!5120 = !DILocation(line: 4790, column: 20, scope: !5105)
!5121 = !DILocation(line: 4789, column: 15, scope: !5105)
!5122 = !DILocation(line: 4791, column: 3, scope: !5105)
!5123 = !DILocation(line: 4793, column: 17, scope: !5100)
!5124 = !DILocation(line: 4793, column: 15, scope: !5100)
!5125 = !DILocation(line: 4796, column: 15, scope: !5044)
!5126 = !DILocation(line: 4796, column: 30, scope: !5044)
!5127 = !DILocation(line: 4796, column: 29, scope: !5044)
!5128 = !DILocation(line: 4796, column: 13, scope: !5044)
!5129 = !DILocation(line: 4797, column: 15, scope: !5044)
!5130 = !DILocation(line: 4797, column: 30, scope: !5044)
!5131 = !DILocation(line: 4797, column: 29, scope: !5044)
!5132 = !DILocation(line: 4797, column: 13, scope: !5044)
!5133 = !DILocation(line: 4799, column: 9, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 4799, column: 3)
!5135 = !DILocation(line: 4799, column: 8, scope: !5134)
!5136 = !DILocation(line: 4799, column: 13, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5134, file: !1, line: 4799, column: 3)
!5138 = !DILocation(line: 4799, column: 28, scope: !5137)
!5139 = !DILocation(line: 4799, column: 36, scope: !5137)
!5140 = !DILocation(line: 4799, column: 42, scope: !5137)
!5141 = !DILocation(line: 4799, column: 50, scope: !5137)
!5142 = !DILocation(line: 4799, column: 41, scope: !5137)
!5143 = !DILocation(line: 4799, column: 15, scope: !5137)
!5144 = !DILocation(line: 4799, column: 3, scope: !5134)
!5145 = !DILocation(line: 4800, column: 12, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5137, file: !1, line: 4800, column: 10)
!5147 = !DILocation(line: 4800, column: 10, scope: !5137)
!5148 = !DILocation(line: 4801, column: 29, scope: !5146)
!5149 = !DILocation(line: 4801, column: 37, scope: !5146)
!5150 = !DILocation(line: 4801, column: 44, scope: !5146)
!5151 = !DILocation(line: 4801, column: 47, scope: !5146)
!5152 = !DILocation(line: 4801, column: 28, scope: !5146)
!5153 = !DILocation(line: 4801, column: 55, scope: !5146)
!5154 = !DILocation(line: 4801, column: 67, scope: !5146)
!5155 = !DILocation(line: 4801, column: 7, scope: !5146)
!5156 = !DILocation(line: 4801, column: 15, scope: !5146)
!5157 = !DILocation(line: 4801, column: 22, scope: !5146)
!5158 = !DILocation(line: 4801, column: 25, scope: !5146)
!5159 = !DILocation(line: 4799, column: 60, scope: !5137)
!5160 = !DILocation(line: 4799, column: 3, scope: !5137)
!5161 = distinct !{!5161, !5144, !5162}
!5162 = !DILocation(line: 4801, column: 67, scope: !5134)
!5163 = !DILocation(line: 4804, column: 29, scope: !5044)
!5164 = !DILocation(line: 4804, column: 3, scope: !5044)
!5165 = !DILocation(line: 4804, column: 11, scope: !5044)
!5166 = !DILocation(line: 4804, column: 26, scope: !5044)
!5167 = !DILocation(line: 4805, column: 29, scope: !5044)
!5168 = !DILocation(line: 4805, column: 3, scope: !5044)
!5169 = !DILocation(line: 4805, column: 11, scope: !5044)
!5170 = !DILocation(line: 4805, column: 26, scope: !5044)
!5171 = !DILocation(line: 4807, column: 23, scope: !5044)
!5172 = !DILocation(line: 4807, column: 31, scope: !5044)
!5173 = !DILocation(line: 4807, column: 39, scope: !5044)
!5174 = !DILocation(line: 4807, column: 22, scope: !5044)
!5175 = !DILocation(line: 4807, column: 49, scope: !5044)
!5176 = !DILocation(line: 4807, column: 61, scope: !5044)
!5177 = !DILocation(line: 4807, column: 3, scope: !5044)
!5178 = !DILocation(line: 4807, column: 11, scope: !5044)
!5179 = !DILocation(line: 4807, column: 19, scope: !5044)
!5180 = !DILocation(line: 4808, column: 23, scope: !5044)
!5181 = !DILocation(line: 4808, column: 31, scope: !5044)
!5182 = !DILocation(line: 4808, column: 39, scope: !5044)
!5183 = !DILocation(line: 4808, column: 22, scope: !5044)
!5184 = !DILocation(line: 4808, column: 49, scope: !5044)
!5185 = !DILocation(line: 4808, column: 61, scope: !5044)
!5186 = !DILocation(line: 4808, column: 3, scope: !5044)
!5187 = !DILocation(line: 4808, column: 11, scope: !5044)
!5188 = !DILocation(line: 4808, column: 19, scope: !5044)
!5189 = !DILocation(line: 4811, column: 8, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 4811, column: 8)
!5191 = !DILocation(line: 4811, column: 23, scope: !5190)
!5192 = !DILocation(line: 4811, column: 8, scope: !5044)
!5193 = !DILocalVariable(name: "t", scope: !5194, file: !1, line: 4812, type: !617)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 4811, column: 41)
!5195 = !DILocation(line: 4812, column: 12, scope: !5194)
!5196 = !DILocation(line: 4813, column: 9, scope: !5194)
!5197 = !DILocation(line: 4813, column: 17, scope: !5194)
!5198 = !DILocation(line: 4813, column: 7, scope: !5194)
!5199 = !DILocation(line: 4814, column: 30, scope: !5194)
!5200 = !DILocation(line: 4814, column: 38, scope: !5194)
!5201 = !DILocation(line: 4814, column: 5, scope: !5194)
!5202 = !DILocation(line: 4814, column: 13, scope: !5194)
!5203 = !DILocation(line: 4814, column: 28, scope: !5194)
!5204 = !DILocation(line: 4815, column: 30, scope: !5194)
!5205 = !DILocation(line: 4815, column: 5, scope: !5194)
!5206 = !DILocation(line: 4815, column: 13, scope: !5194)
!5207 = !DILocation(line: 4815, column: 28, scope: !5194)
!5208 = !DILocation(line: 4816, column: 9, scope: !5194)
!5209 = !DILocation(line: 4816, column: 17, scope: !5194)
!5210 = !DILocation(line: 4816, column: 7, scope: !5194)
!5211 = !DILocation(line: 4817, column: 23, scope: !5194)
!5212 = !DILocation(line: 4817, column: 31, scope: !5194)
!5213 = !DILocation(line: 4817, column: 5, scope: !5194)
!5214 = !DILocation(line: 4817, column: 13, scope: !5194)
!5215 = !DILocation(line: 4817, column: 21, scope: !5194)
!5216 = !DILocation(line: 4818, column: 5, scope: !5194)
!5217 = !DILocation(line: 4818, column: 13, scope: !5194)
!5218 = !DILocation(line: 4818, column: 21, scope: !5194)
!5219 = !DILocation(line: 4819, column: 3, scope: !5194)
!5220 = !DILocation(line: 4821, column: 3, scope: !5044)
!5221 = distinct !DISubprogram(name: "RotateKernelInfo", scope: !1, file: !1, line: 4451, type: !5222, scopeLine: 4452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !597, !617}
!5224 = !DILocalVariable(name: "kernel", arg: 1, scope: !5221, file: !1, line: 4451, type: !597)
!5225 = !DILocation(line: 4451, column: 42, scope: !5221)
!5226 = !DILocalVariable(name: "angle", arg: 2, scope: !5221, file: !1, line: 4451, type: !617)
!5227 = !DILocation(line: 4451, column: 57, scope: !5221)
!5228 = !DILocation(line: 4454, column: 8, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4454, column: 8)
!5230 = !DILocation(line: 4454, column: 16, scope: !5229)
!5231 = !DILocation(line: 4454, column: 21, scope: !5229)
!5232 = !DILocation(line: 4454, column: 8, scope: !5221)
!5233 = !DILocation(line: 4455, column: 22, scope: !5229)
!5234 = !DILocation(line: 4455, column: 30, scope: !5229)
!5235 = !DILocation(line: 4455, column: 36, scope: !5229)
!5236 = !DILocation(line: 4455, column: 5, scope: !5229)
!5237 = !DILocation(line: 4463, column: 16, scope: !5221)
!5238 = !DILocation(line: 4463, column: 11, scope: !5221)
!5239 = !DILocation(line: 4463, column: 9, scope: !5221)
!5240 = !DILocation(line: 4464, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4464, column: 8)
!5242 = !DILocation(line: 4464, column: 14, scope: !5241)
!5243 = !DILocation(line: 4464, column: 8, scope: !5221)
!5244 = !DILocation(line: 4465, column: 11, scope: !5241)
!5245 = !DILocation(line: 4465, column: 5, scope: !5241)
!5246 = !DILocation(line: 4467, column: 16, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4467, column: 8)
!5248 = !DILocation(line: 4467, column: 14, scope: !5247)
!5249 = !DILocation(line: 4467, column: 22, scope: !5247)
!5250 = !DILocation(line: 4467, column: 25, scope: !5247)
!5251 = !DILocation(line: 4467, column: 31, scope: !5247)
!5252 = !DILocation(line: 4467, column: 8, scope: !5221)
!5253 = !DILocation(line: 4468, column: 5, scope: !5247)
!5254 = !DILocation(line: 4471, column: 11, scope: !5221)
!5255 = !DILocation(line: 4471, column: 19, scope: !5221)
!5256 = !DILocation(line: 4471, column: 3, scope: !5221)
!5257 = !DILocation(line: 4482, column: 7, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4471, column: 25)
!5259 = !DILocation(line: 4490, column: 7, scope: !5258)
!5260 = !DILocation(line: 4495, column: 20, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5258, file: !1, line: 4495, column: 12)
!5262 = !DILocation(line: 4495, column: 18, scope: !5261)
!5263 = !DILocation(line: 4495, column: 26, scope: !5261)
!5264 = !DILocation(line: 4495, column: 29, scope: !5261)
!5265 = !DILocation(line: 4495, column: 35, scope: !5261)
!5266 = !DILocation(line: 4495, column: 12, scope: !5258)
!5267 = !DILocation(line: 4496, column: 9, scope: !5261)
!5268 = !DILocation(line: 4497, column: 20, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5258, file: !1, line: 4497, column: 12)
!5270 = !DILocation(line: 4497, column: 18, scope: !5269)
!5271 = !DILocation(line: 4497, column: 26, scope: !5269)
!5272 = !DILocation(line: 4497, column: 29, scope: !5269)
!5273 = !DILocation(line: 4497, column: 35, scope: !5269)
!5274 = !DILocation(line: 4497, column: 12, scope: !5258)
!5275 = !DILocation(line: 4498, column: 15, scope: !5269)
!5276 = !DILocation(line: 4498, column: 9, scope: !5269)
!5277 = !DILocation(line: 4499, column: 7, scope: !5258)
!5278 = !DILocation(line: 4502, column: 7, scope: !5258)
!5279 = !DILocation(line: 4505, column: 20, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4505, column: 8)
!5281 = !DILocation(line: 4505, column: 15, scope: !5280)
!5282 = !DILocation(line: 4505, column: 13, scope: !5280)
!5283 = !DILocation(line: 4505, column: 32, scope: !5280)
!5284 = !DILocation(line: 4505, column: 40, scope: !5280)
!5285 = !DILocation(line: 4505, column: 35, scope: !5280)
!5286 = !DILocation(line: 4505, column: 52, scope: !5280)
!5287 = !DILocation(line: 4505, column: 8, scope: !5221)
!5288 = !DILocation(line: 4507, column: 12, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !1, line: 4507, column: 12)
!5290 = distinct !DILexicalBlock(scope: !5280, file: !1, line: 4506, column: 5)
!5291 = !DILocation(line: 4507, column: 20, scope: !5289)
!5292 = !DILocation(line: 4507, column: 26, scope: !5289)
!5293 = !DILocation(line: 4507, column: 31, scope: !5289)
!5294 = !DILocation(line: 4507, column: 34, scope: !5289)
!5295 = !DILocation(line: 4507, column: 42, scope: !5289)
!5296 = !DILocation(line: 4507, column: 49, scope: !5289)
!5297 = !DILocation(line: 4507, column: 12, scope: !5290)
!5298 = !DILocalVariable(name: "t", scope: !5299, file: !1, line: 4509, type: !617)
!5299 = distinct !DILexicalBlock(scope: !5289, file: !1, line: 4508, column: 9)
!5300 = !DILocation(line: 4509, column: 18, scope: !5299)
!5301 = !DILocation(line: 4509, column: 23, scope: !5299)
!5302 = !DILocation(line: 4509, column: 31, scope: !5299)
!5303 = !DILocation(line: 4510, column: 31, scope: !5299)
!5304 = !DILocation(line: 4510, column: 39, scope: !5299)
!5305 = !DILocation(line: 4510, column: 11, scope: !5299)
!5306 = !DILocation(line: 4510, column: 19, scope: !5299)
!5307 = !DILocation(line: 4510, column: 29, scope: !5299)
!5308 = !DILocation(line: 4511, column: 31, scope: !5299)
!5309 = !DILocation(line: 4511, column: 39, scope: !5299)
!5310 = !DILocation(line: 4511, column: 11, scope: !5299)
!5311 = !DILocation(line: 4511, column: 19, scope: !5299)
!5312 = !DILocation(line: 4511, column: 29, scope: !5299)
!5313 = !DILocation(line: 4512, column: 31, scope: !5299)
!5314 = !DILocation(line: 4512, column: 39, scope: !5299)
!5315 = !DILocation(line: 4512, column: 11, scope: !5299)
!5316 = !DILocation(line: 4512, column: 19, scope: !5299)
!5317 = !DILocation(line: 4512, column: 29, scope: !5299)
!5318 = !DILocation(line: 4513, column: 31, scope: !5299)
!5319 = !DILocation(line: 4513, column: 39, scope: !5299)
!5320 = !DILocation(line: 4513, column: 11, scope: !5299)
!5321 = !DILocation(line: 4513, column: 19, scope: !5299)
!5322 = !DILocation(line: 4513, column: 29, scope: !5299)
!5323 = !DILocation(line: 4514, column: 31, scope: !5299)
!5324 = !DILocation(line: 4514, column: 39, scope: !5299)
!5325 = !DILocation(line: 4514, column: 11, scope: !5299)
!5326 = !DILocation(line: 4514, column: 19, scope: !5299)
!5327 = !DILocation(line: 4514, column: 29, scope: !5299)
!5328 = !DILocation(line: 4515, column: 31, scope: !5299)
!5329 = !DILocation(line: 4515, column: 39, scope: !5299)
!5330 = !DILocation(line: 4515, column: 11, scope: !5299)
!5331 = !DILocation(line: 4515, column: 19, scope: !5299)
!5332 = !DILocation(line: 4515, column: 29, scope: !5299)
!5333 = !DILocation(line: 4516, column: 31, scope: !5299)
!5334 = !DILocation(line: 4516, column: 39, scope: !5299)
!5335 = !DILocation(line: 4516, column: 11, scope: !5299)
!5336 = !DILocation(line: 4516, column: 19, scope: !5299)
!5337 = !DILocation(line: 4516, column: 29, scope: !5299)
!5338 = !DILocation(line: 4517, column: 31, scope: !5299)
!5339 = !DILocation(line: 4517, column: 11, scope: !5299)
!5340 = !DILocation(line: 4517, column: 19, scope: !5299)
!5341 = !DILocation(line: 4517, column: 29, scope: !5299)
!5342 = !DILocation(line: 4519, column: 16, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 4519, column: 16)
!5344 = !DILocation(line: 4519, column: 24, scope: !5343)
!5345 = !DILocation(line: 4519, column: 26, scope: !5343)
!5346 = !DILocation(line: 4519, column: 31, scope: !5343)
!5347 = !DILocation(line: 4519, column: 34, scope: !5343)
!5348 = !DILocation(line: 4519, column: 42, scope: !5343)
!5349 = !DILocation(line: 4519, column: 44, scope: !5343)
!5350 = !DILocation(line: 4519, column: 16, scope: !5299)
!5351 = !DILocalVariable(name: "x", scope: !5352, file: !1, line: 4520, type: !609)
!5352 = distinct !DILexicalBlock(scope: !5343, file: !1, line: 4519, column: 51)
!5353 = !DILocation(line: 4520, column: 21, scope: !5352)
!5354 = !DILocalVariable(name: "y", scope: !5352, file: !1, line: 4520, type: !609)
!5355 = !DILocation(line: 4520, column: 23, scope: !5352)
!5356 = !DILocation(line: 4521, column: 27, scope: !5352)
!5357 = !DILocation(line: 4521, column: 35, scope: !5352)
!5358 = !DILocation(line: 4521, column: 36, scope: !5352)
!5359 = !DILocation(line: 4521, column: 15, scope: !5352)
!5360 = !DILocation(line: 4522, column: 27, scope: !5352)
!5361 = !DILocation(line: 4522, column: 35, scope: !5352)
!5362 = !DILocation(line: 4522, column: 36, scope: !5352)
!5363 = !DILocation(line: 4522, column: 15, scope: !5352)
!5364 = !DILocation(line: 4523, column: 23, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5352, file: !1, line: 4523, column: 23)
!5366 = !DILocation(line: 4523, column: 28, scope: !5365)
!5367 = !DILocation(line: 4523, column: 25, scope: !5365)
!5368 = !DILocation(line: 4523, column: 23, scope: !5352)
!5369 = !DILocation(line: 4523, column: 35, scope: !5365)
!5370 = !DILocation(line: 4523, column: 33, scope: !5365)
!5371 = !DILocation(line: 4524, column: 23, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5365, file: !1, line: 4524, column: 23)
!5373 = !DILocation(line: 4524, column: 25, scope: !5372)
!5374 = !DILocation(line: 4524, column: 23, scope: !5365)
!5375 = !DILocation(line: 4524, column: 38, scope: !5372)
!5376 = !DILocation(line: 4524, column: 37, scope: !5372)
!5377 = !DILocation(line: 4524, column: 35, scope: !5372)
!5378 = !DILocation(line: 4524, column: 33, scope: !5372)
!5379 = !DILocation(line: 4525, column: 23, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 4525, column: 23)
!5381 = !DILocation(line: 4525, column: 29, scope: !5380)
!5382 = !DILocation(line: 4525, column: 28, scope: !5380)
!5383 = !DILocation(line: 4525, column: 25, scope: !5380)
!5384 = !DILocation(line: 4525, column: 23, scope: !5372)
!5385 = !DILocation(line: 4525, column: 35, scope: !5380)
!5386 = !DILocation(line: 4525, column: 33, scope: !5380)
!5387 = !DILocation(line: 4526, column: 23, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5380, file: !1, line: 4526, column: 23)
!5389 = !DILocation(line: 4526, column: 25, scope: !5388)
!5390 = !DILocation(line: 4526, column: 23, scope: !5380)
!5391 = !DILocation(line: 4526, column: 37, scope: !5388)
!5392 = !DILocation(line: 4526, column: 35, scope: !5388)
!5393 = !DILocation(line: 4526, column: 33, scope: !5388)
!5394 = !DILocation(line: 4527, column: 35, scope: !5352)
!5395 = !DILocation(line: 4527, column: 36, scope: !5352)
!5396 = !DILocation(line: 4527, column: 13, scope: !5352)
!5397 = !DILocation(line: 4527, column: 21, scope: !5352)
!5398 = !DILocation(line: 4527, column: 23, scope: !5352)
!5399 = !DILocation(line: 4528, column: 35, scope: !5352)
!5400 = !DILocation(line: 4528, column: 36, scope: !5352)
!5401 = !DILocation(line: 4528, column: 13, scope: !5352)
!5402 = !DILocation(line: 4528, column: 21, scope: !5352)
!5403 = !DILocation(line: 4528, column: 23, scope: !5352)
!5404 = !DILocation(line: 4529, column: 11, scope: !5352)
!5405 = !DILocation(line: 4530, column: 24, scope: !5299)
!5406 = !DILocation(line: 4530, column: 29, scope: !5299)
!5407 = !DILocation(line: 4530, column: 19, scope: !5299)
!5408 = !DILocation(line: 4530, column: 17, scope: !5299)
!5409 = !DILocation(line: 4531, column: 32, scope: !5299)
!5410 = !DILocation(line: 4531, column: 40, scope: !5299)
!5411 = !DILocation(line: 4531, column: 45, scope: !5299)
!5412 = !DILocation(line: 4531, column: 27, scope: !5299)
!5413 = !DILocation(line: 4531, column: 11, scope: !5299)
!5414 = !DILocation(line: 4531, column: 19, scope: !5299)
!5415 = !DILocation(line: 4531, column: 25, scope: !5299)
!5416 = !DILocation(line: 4532, column: 9, scope: !5299)
!5417 = !DILocation(line: 4534, column: 9, scope: !5289)
!5418 = !DILocation(line: 4535, column: 5, scope: !5290)
!5419 = !DILocation(line: 4536, column: 20, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4536, column: 8)
!5421 = !DILocation(line: 4536, column: 15, scope: !5420)
!5422 = !DILocation(line: 4536, column: 13, scope: !5420)
!5423 = !DILocation(line: 4536, column: 35, scope: !5420)
!5424 = !DILocation(line: 4536, column: 43, scope: !5420)
!5425 = !DILocation(line: 4536, column: 38, scope: !5420)
!5426 = !DILocation(line: 4536, column: 56, scope: !5420)
!5427 = !DILocation(line: 4536, column: 8, scope: !5221)
!5428 = !DILocation(line: 4538, column: 12, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 4538, column: 12)
!5430 = distinct !DILexicalBlock(scope: !5420, file: !1, line: 4537, column: 5)
!5431 = !DILocation(line: 4538, column: 20, scope: !5429)
!5432 = !DILocation(line: 4538, column: 26, scope: !5429)
!5433 = !DILocation(line: 4538, column: 31, scope: !5429)
!5434 = !DILocation(line: 4538, column: 34, scope: !5429)
!5435 = !DILocation(line: 4538, column: 42, scope: !5429)
!5436 = !DILocation(line: 4538, column: 49, scope: !5429)
!5437 = !DILocation(line: 4538, column: 12, scope: !5430)
!5438 = !DILocalVariable(name: "t", scope: !5439, file: !1, line: 4543, type: !609)
!5439 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 4539, column: 9)
!5440 = !DILocation(line: 4543, column: 13, scope: !5439)
!5441 = !DILocation(line: 4544, column: 25, scope: !5439)
!5442 = !DILocation(line: 4544, column: 33, scope: !5439)
!5443 = !DILocation(line: 4544, column: 13, scope: !5439)
!5444 = !DILocation(line: 4545, column: 27, scope: !5439)
!5445 = !DILocation(line: 4545, column: 35, scope: !5439)
!5446 = !DILocation(line: 4545, column: 11, scope: !5439)
!5447 = !DILocation(line: 4545, column: 19, scope: !5439)
!5448 = !DILocation(line: 4545, column: 25, scope: !5439)
!5449 = !DILocation(line: 4546, column: 37, scope: !5439)
!5450 = !DILocation(line: 4546, column: 11, scope: !5439)
!5451 = !DILocation(line: 4546, column: 19, scope: !5439)
!5452 = !DILocation(line: 4546, column: 26, scope: !5439)
!5453 = !DILocation(line: 4547, column: 15, scope: !5439)
!5454 = !DILocation(line: 4547, column: 23, scope: !5439)
!5455 = !DILocation(line: 4547, column: 13, scope: !5439)
!5456 = !DILocation(line: 4548, column: 23, scope: !5439)
!5457 = !DILocation(line: 4548, column: 31, scope: !5439)
!5458 = !DILocation(line: 4548, column: 11, scope: !5439)
!5459 = !DILocation(line: 4548, column: 19, scope: !5439)
!5460 = !DILocation(line: 4548, column: 21, scope: !5439)
!5461 = !DILocation(line: 4549, column: 23, scope: !5439)
!5462 = !DILocation(line: 4549, column: 11, scope: !5439)
!5463 = !DILocation(line: 4549, column: 19, scope: !5439)
!5464 = !DILocation(line: 4549, column: 21, scope: !5439)
!5465 = !DILocation(line: 4550, column: 16, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5439, file: !1, line: 4550, column: 16)
!5467 = !DILocation(line: 4550, column: 24, scope: !5466)
!5468 = !DILocation(line: 4550, column: 30, scope: !5466)
!5469 = !DILocation(line: 4550, column: 16, scope: !5439)
!5470 = !DILocation(line: 4551, column: 26, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5466, file: !1, line: 4550, column: 37)
!5472 = !DILocation(line: 4551, column: 31, scope: !5471)
!5473 = !DILocation(line: 4551, column: 21, scope: !5471)
!5474 = !DILocation(line: 4551, column: 19, scope: !5471)
!5475 = !DILocation(line: 4552, column: 34, scope: !5471)
!5476 = !DILocation(line: 4552, column: 42, scope: !5471)
!5477 = !DILocation(line: 4552, column: 47, scope: !5471)
!5478 = !DILocation(line: 4552, column: 29, scope: !5471)
!5479 = !DILocation(line: 4552, column: 13, scope: !5471)
!5480 = !DILocation(line: 4552, column: 21, scope: !5471)
!5481 = !DILocation(line: 4552, column: 27, scope: !5471)
!5482 = !DILocation(line: 4553, column: 11, scope: !5471)
!5483 = !DILocation(line: 4554, column: 26, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5466, file: !1, line: 4553, column: 18)
!5485 = !DILocation(line: 4554, column: 31, scope: !5484)
!5486 = !DILocation(line: 4554, column: 21, scope: !5484)
!5487 = !DILocation(line: 4554, column: 19, scope: !5484)
!5488 = !DILocation(line: 4555, column: 34, scope: !5484)
!5489 = !DILocation(line: 4555, column: 42, scope: !5484)
!5490 = !DILocation(line: 4555, column: 47, scope: !5484)
!5491 = !DILocation(line: 4555, column: 29, scope: !5484)
!5492 = !DILocation(line: 4555, column: 13, scope: !5484)
!5493 = !DILocation(line: 4555, column: 21, scope: !5484)
!5494 = !DILocation(line: 4555, column: 27, scope: !5484)
!5495 = !DILocation(line: 4557, column: 9, scope: !5439)
!5496 = !DILocation(line: 4558, column: 17, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 4558, column: 17)
!5498 = !DILocation(line: 4558, column: 25, scope: !5497)
!5499 = !DILocation(line: 4558, column: 34, scope: !5497)
!5500 = !DILocation(line: 4558, column: 42, scope: !5497)
!5501 = !DILocation(line: 4558, column: 31, scope: !5497)
!5502 = !DILocation(line: 4558, column: 17, scope: !5429)
!5503 = !DILocalVariable(name: "i", scope: !5504, file: !1, line: 4561, type: !604)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !1, line: 4560, column: 11)
!5505 = distinct !DILexicalBlock(scope: !5497, file: !1, line: 4559, column: 9)
!5506 = !DILocation(line: 4561, column: 15, scope: !5504)
!5507 = !DILocalVariable(name: "j", scope: !5504, file: !1, line: 4561, type: !604)
!5508 = !DILocation(line: 4561, column: 17, scope: !5504)
!5509 = !DILocalVariable(name: "x", scope: !5504, file: !1, line: 4561, type: !604)
!5510 = !DILocation(line: 4561, column: 19, scope: !5504)
!5511 = !DILocalVariable(name: "y", scope: !5504, file: !1, line: 4561, type: !604)
!5512 = !DILocation(line: 4561, column: 21, scope: !5504)
!5513 = !DILocalVariable(name: "k", scope: !5504, file: !1, line: 4563, type: !616)
!5514 = !DILocation(line: 4563, column: 16, scope: !5504)
!5515 = !DILocalVariable(name: "t", scope: !5504, file: !1, line: 4563, type: !617)
!5516 = !DILocation(line: 4563, column: 18, scope: !5504)
!5517 = !DILocation(line: 4564, column: 15, scope: !5504)
!5518 = !DILocation(line: 4564, column: 23, scope: !5504)
!5519 = !DILocation(line: 4564, column: 14, scope: !5504)
!5520 = !DILocation(line: 4565, column: 19, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 4565, column: 13)
!5522 = !DILocation(line: 4565, column: 25, scope: !5521)
!5523 = !DILocation(line: 4565, column: 33, scope: !5521)
!5524 = !DILocation(line: 4565, column: 38, scope: !5521)
!5525 = !DILocation(line: 4565, column: 24, scope: !5521)
!5526 = !DILocation(line: 4565, column: 18, scope: !5521)
!5527 = !DILocation(line: 4565, column: 43, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 4565, column: 13)
!5529 = !DILocation(line: 4565, column: 46, scope: !5528)
!5530 = !DILocation(line: 4565, column: 44, scope: !5528)
!5531 = !DILocation(line: 4565, column: 13, scope: !5521)
!5532 = !DILocation(line: 4566, column: 21, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5528, file: !1, line: 4566, column: 15)
!5534 = !DILocation(line: 4566, column: 27, scope: !5533)
!5535 = !DILocation(line: 4566, column: 35, scope: !5533)
!5536 = !DILocation(line: 4566, column: 41, scope: !5533)
!5537 = !DILocation(line: 4566, column: 26, scope: !5533)
!5538 = !DILocation(line: 4566, column: 20, scope: !5533)
!5539 = !DILocation(line: 4566, column: 46, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5533, file: !1, line: 4566, column: 15)
!5541 = !DILocation(line: 4566, column: 48, scope: !5540)
!5542 = !DILocation(line: 4566, column: 47, scope: !5540)
!5543 = !DILocation(line: 4566, column: 15, scope: !5533)
!5544 = !DILocation(line: 4567, column: 42, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 4567, column: 17)
!5546 = !DILocation(line: 4567, column: 44, scope: !5545)
!5547 = !DILocation(line: 4567, column: 46, scope: !5545)
!5548 = !DILocation(line: 4567, column: 48, scope: !5545)
!5549 = !DILocation(line: 4567, column: 56, scope: !5545)
!5550 = !DILocation(line: 4567, column: 47, scope: !5545)
!5551 = !DILocation(line: 4567, column: 45, scope: !5545)
!5552 = !DILocation(line: 4567, column: 40, scope: !5545)
!5553 = !DILocation(line: 4568, column: 42, scope: !5545)
!5554 = !DILocation(line: 4568, column: 44, scope: !5545)
!5555 = !DILocation(line: 4568, column: 46, scope: !5545)
!5556 = !DILocation(line: 4568, column: 48, scope: !5545)
!5557 = !DILocation(line: 4568, column: 56, scope: !5545)
!5558 = !DILocation(line: 4568, column: 47, scope: !5545)
!5559 = !DILocation(line: 4568, column: 45, scope: !5545)
!5560 = !DILocation(line: 4568, column: 19, scope: !5545)
!5561 = !DILocation(line: 4568, column: 21, scope: !5545)
!5562 = !DILocation(line: 4568, column: 23, scope: !5545)
!5563 = !DILocation(line: 4568, column: 25, scope: !5545)
!5564 = !DILocation(line: 4568, column: 33, scope: !5545)
!5565 = !DILocation(line: 4568, column: 24, scope: !5545)
!5566 = !DILocation(line: 4568, column: 22, scope: !5545)
!5567 = !DILocation(line: 4568, column: 40, scope: !5545)
!5568 = !DILocation(line: 4569, column: 42, scope: !5545)
!5569 = !DILocation(line: 4569, column: 44, scope: !5545)
!5570 = !DILocation(line: 4569, column: 46, scope: !5545)
!5571 = !DILocation(line: 4569, column: 48, scope: !5545)
!5572 = !DILocation(line: 4569, column: 56, scope: !5545)
!5573 = !DILocation(line: 4569, column: 47, scope: !5545)
!5574 = !DILocation(line: 4569, column: 45, scope: !5545)
!5575 = !DILocation(line: 4569, column: 19, scope: !5545)
!5576 = !DILocation(line: 4569, column: 21, scope: !5545)
!5577 = !DILocation(line: 4569, column: 23, scope: !5545)
!5578 = !DILocation(line: 4569, column: 25, scope: !5545)
!5579 = !DILocation(line: 4569, column: 33, scope: !5545)
!5580 = !DILocation(line: 4569, column: 24, scope: !5545)
!5581 = !DILocation(line: 4569, column: 22, scope: !5545)
!5582 = !DILocation(line: 4569, column: 40, scope: !5545)
!5583 = !DILocation(line: 4570, column: 42, scope: !5545)
!5584 = !DILocation(line: 4570, column: 44, scope: !5545)
!5585 = !DILocation(line: 4570, column: 46, scope: !5545)
!5586 = !DILocation(line: 4570, column: 48, scope: !5545)
!5587 = !DILocation(line: 4570, column: 56, scope: !5545)
!5588 = !DILocation(line: 4570, column: 47, scope: !5545)
!5589 = !DILocation(line: 4570, column: 45, scope: !5545)
!5590 = !DILocation(line: 4570, column: 19, scope: !5545)
!5591 = !DILocation(line: 4570, column: 21, scope: !5545)
!5592 = !DILocation(line: 4570, column: 23, scope: !5545)
!5593 = !DILocation(line: 4570, column: 25, scope: !5545)
!5594 = !DILocation(line: 4570, column: 33, scope: !5545)
!5595 = !DILocation(line: 4570, column: 24, scope: !5545)
!5596 = !DILocation(line: 4570, column: 22, scope: !5545)
!5597 = !DILocation(line: 4570, column: 40, scope: !5545)
!5598 = !DILocation(line: 4571, column: 42, scope: !5545)
!5599 = !DILocation(line: 4571, column: 19, scope: !5545)
!5600 = !DILocation(line: 4571, column: 21, scope: !5545)
!5601 = !DILocation(line: 4571, column: 23, scope: !5545)
!5602 = !DILocation(line: 4571, column: 25, scope: !5545)
!5603 = !DILocation(line: 4571, column: 33, scope: !5545)
!5604 = !DILocation(line: 4571, column: 24, scope: !5545)
!5605 = !DILocation(line: 4571, column: 22, scope: !5545)
!5606 = !DILocation(line: 4571, column: 40, scope: !5545)
!5607 = !DILocation(line: 4572, column: 17, scope: !5545)
!5608 = !DILocation(line: 4566, column: 54, scope: !5540)
!5609 = !DILocation(line: 4566, column: 59, scope: !5540)
!5610 = !DILocation(line: 4566, column: 15, scope: !5540)
!5611 = distinct !{!5611, !5543, !5612}
!5612 = !DILocation(line: 4572, column: 17, scope: !5533)
!5613 = !DILocation(line: 4565, column: 52, scope: !5528)
!5614 = !DILocation(line: 4565, column: 57, scope: !5528)
!5615 = !DILocation(line: 4565, column: 13, scope: !5528)
!5616 = distinct !{!5616, !5531, !5617}
!5617 = !DILocation(line: 4572, column: 17, scope: !5521)
!5618 = !DILocalVariable(name: "x", scope: !5619, file: !1, line: 4575, type: !609)
!5619 = distinct !DILexicalBlock(scope: !5505, file: !1, line: 4575, column: 11)
!5620 = !DILocation(line: 4575, column: 30, scope: !5619)
!5621 = !DILocalVariable(name: "y", scope: !5619, file: !1, line: 4575, type: !609)
!5622 = !DILocation(line: 4575, column: 32, scope: !5619)
!5623 = !DILocation(line: 4576, column: 28, scope: !5619)
!5624 = !DILocation(line: 4576, column: 36, scope: !5619)
!5625 = !DILocation(line: 4576, column: 37, scope: !5619)
!5626 = !DILocation(line: 4576, column: 40, scope: !5619)
!5627 = !DILocation(line: 4576, column: 48, scope: !5619)
!5628 = !DILocation(line: 4576, column: 39, scope: !5619)
!5629 = !DILocation(line: 4576, column: 53, scope: !5619)
!5630 = !DILocation(line: 4576, column: 15, scope: !5619)
!5631 = !DILocation(line: 4577, column: 28, scope: !5619)
!5632 = !DILocation(line: 4577, column: 36, scope: !5619)
!5633 = !DILocation(line: 4577, column: 37, scope: !5619)
!5634 = !DILocation(line: 4577, column: 40, scope: !5619)
!5635 = !DILocation(line: 4577, column: 48, scope: !5619)
!5636 = !DILocation(line: 4577, column: 39, scope: !5619)
!5637 = !DILocation(line: 4577, column: 54, scope: !5619)
!5638 = !DILocation(line: 4577, column: 15, scope: !5619)
!5639 = !DILocation(line: 4578, column: 38, scope: !5619)
!5640 = !DILocation(line: 4578, column: 37, scope: !5619)
!5641 = !DILocation(line: 4578, column: 51, scope: !5619)
!5642 = !DILocation(line: 4578, column: 59, scope: !5619)
!5643 = !DILocation(line: 4578, column: 40, scope: !5619)
!5644 = !DILocation(line: 4578, column: 64, scope: !5619)
!5645 = !DILocation(line: 4578, column: 67, scope: !5619)
!5646 = !DILocation(line: 4578, column: 13, scope: !5619)
!5647 = !DILocation(line: 4578, column: 21, scope: !5619)
!5648 = !DILocation(line: 4578, column: 23, scope: !5619)
!5649 = !DILocation(line: 4579, column: 38, scope: !5619)
!5650 = !DILocation(line: 4579, column: 51, scope: !5619)
!5651 = !DILocation(line: 4579, column: 59, scope: !5619)
!5652 = !DILocation(line: 4579, column: 40, scope: !5619)
!5653 = !DILocation(line: 4579, column: 65, scope: !5619)
!5654 = !DILocation(line: 4579, column: 68, scope: !5619)
!5655 = !DILocation(line: 4579, column: 13, scope: !5619)
!5656 = !DILocation(line: 4579, column: 21, scope: !5619)
!5657 = !DILocation(line: 4579, column: 23, scope: !5619)
!5658 = !DILocation(line: 4581, column: 24, scope: !5505)
!5659 = !DILocation(line: 4581, column: 29, scope: !5505)
!5660 = !DILocation(line: 4581, column: 19, scope: !5505)
!5661 = !DILocation(line: 4581, column: 17, scope: !5505)
!5662 = !DILocation(line: 4582, column: 32, scope: !5505)
!5663 = !DILocation(line: 4582, column: 40, scope: !5505)
!5664 = !DILocation(line: 4582, column: 45, scope: !5505)
!5665 = !DILocation(line: 4582, column: 27, scope: !5505)
!5666 = !DILocation(line: 4582, column: 11, scope: !5505)
!5667 = !DILocation(line: 4582, column: 19, scope: !5505)
!5668 = !DILocation(line: 4582, column: 25, scope: !5505)
!5669 = !DILocation(line: 4583, column: 9, scope: !5505)
!5670 = !DILocation(line: 4585, column: 9, scope: !5497)
!5671 = !DILocation(line: 4586, column: 5, scope: !5430)
!5672 = !DILocation(line: 4587, column: 16, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 4587, column: 8)
!5674 = !DILocation(line: 4587, column: 14, scope: !5673)
!5675 = !DILocation(line: 4587, column: 22, scope: !5673)
!5676 = !DILocation(line: 4587, column: 25, scope: !5673)
!5677 = !DILocation(line: 4587, column: 31, scope: !5673)
!5678 = !DILocation(line: 4587, column: 8, scope: !5221)
!5679 = !DILocalVariable(name: "t", scope: !5680, file: !1, line: 4595, type: !617)
!5680 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4588, column: 5)
!5681 = !DILocation(line: 4595, column: 9, scope: !5680)
!5682 = !DILocalVariable(name: "k", scope: !5680, file: !1, line: 4598, type: !616)
!5683 = !DILocation(line: 4598, column: 10, scope: !5680)
!5684 = !DILocalVariable(name: "i", scope: !5680, file: !1, line: 4601, type: !604)
!5685 = !DILocation(line: 4601, column: 9, scope: !5680)
!5686 = !DILocalVariable(name: "j", scope: !5680, file: !1, line: 4602, type: !604)
!5687 = !DILocation(line: 4602, column: 9, scope: !5680)
!5688 = !DILocation(line: 4604, column: 9, scope: !5680)
!5689 = !DILocation(line: 4604, column: 17, scope: !5680)
!5690 = !DILocation(line: 4604, column: 8, scope: !5680)
!5691 = !DILocation(line: 4605, column: 14, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5680, file: !1, line: 4605, column: 7)
!5693 = !DILocation(line: 4605, column: 20, scope: !5692)
!5694 = !DILocation(line: 4605, column: 28, scope: !5692)
!5695 = !DILocation(line: 4605, column: 34, scope: !5692)
!5696 = !DILocation(line: 4605, column: 42, scope: !5692)
!5697 = !DILocation(line: 4605, column: 33, scope: !5692)
!5698 = !DILocation(line: 4605, column: 48, scope: !5692)
!5699 = !DILocation(line: 4605, column: 19, scope: !5692)
!5700 = !DILocation(line: 4605, column: 13, scope: !5692)
!5701 = !DILocation(line: 4605, column: 53, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5692, file: !1, line: 4605, column: 7)
!5703 = !DILocation(line: 4605, column: 55, scope: !5702)
!5704 = !DILocation(line: 4605, column: 54, scope: !5702)
!5705 = !DILocation(line: 4605, column: 7, scope: !5692)
!5706 = !DILocation(line: 4606, column: 11, scope: !5702)
!5707 = !DILocation(line: 4606, column: 13, scope: !5702)
!5708 = !DILocation(line: 4606, column: 10, scope: !5702)
!5709 = !DILocation(line: 4606, column: 23, scope: !5702)
!5710 = !DILocation(line: 4606, column: 25, scope: !5702)
!5711 = !DILocation(line: 4606, column: 18, scope: !5702)
!5712 = !DILocation(line: 4606, column: 20, scope: !5702)
!5713 = !DILocation(line: 4606, column: 22, scope: !5702)
!5714 = !DILocation(line: 4606, column: 35, scope: !5702)
!5715 = !DILocation(line: 4606, column: 30, scope: !5702)
!5716 = !DILocation(line: 4606, column: 32, scope: !5702)
!5717 = !DILocation(line: 4606, column: 34, scope: !5702)
!5718 = !DILocation(line: 4606, column: 9, scope: !5702)
!5719 = !DILocation(line: 4605, column: 60, scope: !5702)
!5720 = !DILocation(line: 4605, column: 65, scope: !5702)
!5721 = !DILocation(line: 4605, column: 7, scope: !5702)
!5722 = distinct !{!5722, !5705, !5723}
!5723 = !DILocation(line: 4606, column: 35, scope: !5692)
!5724 = !DILocation(line: 4608, column: 29, scope: !5680)
!5725 = !DILocation(line: 4608, column: 37, scope: !5680)
!5726 = !DILocation(line: 4608, column: 46, scope: !5680)
!5727 = !DILocation(line: 4608, column: 54, scope: !5680)
!5728 = !DILocation(line: 4608, column: 44, scope: !5680)
!5729 = !DILocation(line: 4608, column: 56, scope: !5680)
!5730 = !DILocation(line: 4608, column: 7, scope: !5680)
!5731 = !DILocation(line: 4608, column: 15, scope: !5680)
!5732 = !DILocation(line: 4608, column: 17, scope: !5680)
!5733 = !DILocation(line: 4609, column: 29, scope: !5680)
!5734 = !DILocation(line: 4609, column: 37, scope: !5680)
!5735 = !DILocation(line: 4609, column: 46, scope: !5680)
!5736 = !DILocation(line: 4609, column: 54, scope: !5680)
!5737 = !DILocation(line: 4609, column: 44, scope: !5680)
!5738 = !DILocation(line: 4609, column: 56, scope: !5680)
!5739 = !DILocation(line: 4609, column: 7, scope: !5680)
!5740 = !DILocation(line: 4609, column: 15, scope: !5680)
!5741 = !DILocation(line: 4609, column: 17, scope: !5680)
!5742 = !DILocation(line: 4610, column: 20, scope: !5680)
!5743 = !DILocation(line: 4610, column: 25, scope: !5680)
!5744 = !DILocation(line: 4610, column: 15, scope: !5680)
!5745 = !DILocation(line: 4610, column: 13, scope: !5680)
!5746 = !DILocation(line: 4611, column: 28, scope: !5680)
!5747 = !DILocation(line: 4611, column: 36, scope: !5680)
!5748 = !DILocation(line: 4611, column: 41, scope: !5680)
!5749 = !DILocation(line: 4611, column: 23, scope: !5680)
!5750 = !DILocation(line: 4611, column: 7, scope: !5680)
!5751 = !DILocation(line: 4611, column: 15, scope: !5680)
!5752 = !DILocation(line: 4611, column: 21, scope: !5680)
!5753 = !DILocation(line: 4612, column: 5, scope: !5680)
!5754 = !DILocation(line: 4618, column: 3, scope: !5221)
!5755 = !DILocation(line: 4619, column: 1, scope: !5221)
!5756 = distinct !DISubprogram(name: "fact", scope: !1, file: !1, line: 104, type: !5757, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!604, !604}
!5759 = !DILocalVariable(name: "n", arg: 1, scope: !5756, file: !1, line: 104, type: !604)
!5760 = !DILocation(line: 104, column: 34, scope: !5756)
!5761 = !DILocalVariable(name: "l", scope: !5756, file: !1, line: 106, type: !604)
!5762 = !DILocation(line: 106, column: 10, scope: !5756)
!5763 = !DILocalVariable(name: "f", scope: !5756, file: !1, line: 106, type: !604)
!5764 = !DILocation(line: 106, column: 12, scope: !5756)
!5765 = !DILocation(line: 107, column: 8, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 107, column: 3)
!5767 = !DILocation(line: 107, column: 13, scope: !5766)
!5768 = !DILocation(line: 107, column: 7, scope: !5766)
!5769 = !DILocation(line: 107, column: 17, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5766, file: !1, line: 107, column: 3)
!5771 = !DILocation(line: 107, column: 22, scope: !5770)
!5772 = !DILocation(line: 107, column: 19, scope: !5770)
!5773 = !DILocation(line: 107, column: 3, scope: !5766)
!5774 = !DILocation(line: 107, column: 27, scope: !5770)
!5775 = !DILocation(line: 107, column: 29, scope: !5770)
!5776 = !DILocation(line: 107, column: 28, scope: !5770)
!5777 = !DILocation(line: 107, column: 26, scope: !5770)
!5778 = !DILocation(line: 107, column: 33, scope: !5770)
!5779 = !DILocation(line: 107, column: 3, scope: !5770)
!5780 = distinct !{!5780, !5773, !5781}
!5781 = !DILocation(line: 107, column: 36, scope: !5766)
!5782 = !DILocation(line: 108, column: 10, scope: !5756)
!5783 = !DILocation(line: 108, column: 3, scope: !5756)
!5784 = distinct !DISubprogram(name: "ExpandMirrorKernelInfo", scope: !1, file: !1, line: 2311, type: !4977, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5785 = !DILocalVariable(name: "kernel", arg: 1, scope: !5784, file: !1, line: 2311, type: !597)
!5786 = !DILocation(line: 2311, column: 48, scope: !5784)
!5787 = !DILocalVariable(name: "clone", scope: !5784, file: !1, line: 2314, type: !597)
!5788 = !DILocation(line: 2314, column: 6, scope: !5784)
!5789 = !DILocalVariable(name: "last", scope: !5784, file: !1, line: 2315, type: !597)
!5790 = !DILocation(line: 2315, column: 6, scope: !5784)
!5791 = !DILocation(line: 2317, column: 10, scope: !5784)
!5792 = !DILocation(line: 2317, column: 8, scope: !5784)
!5793 = !DILocation(line: 2319, column: 27, scope: !5784)
!5794 = !DILocation(line: 2319, column: 11, scope: !5784)
!5795 = !DILocation(line: 2319, column: 9, scope: !5784)
!5796 = !DILocation(line: 2320, column: 20, scope: !5784)
!5797 = !DILocation(line: 2320, column: 3, scope: !5784)
!5798 = !DILocation(line: 2321, column: 32, scope: !5784)
!5799 = !DILocation(line: 2321, column: 18, scope: !5784)
!5800 = !DILocation(line: 2321, column: 3, scope: !5784)
!5801 = !DILocation(line: 2321, column: 25, scope: !5784)
!5802 = !DILocation(line: 2321, column: 30, scope: !5784)
!5803 = !DILocation(line: 2322, column: 10, scope: !5784)
!5804 = !DILocation(line: 2322, column: 8, scope: !5784)
!5805 = !DILocation(line: 2324, column: 27, scope: !5784)
!5806 = !DILocation(line: 2324, column: 11, scope: !5784)
!5807 = !DILocation(line: 2324, column: 9, scope: !5784)
!5808 = !DILocation(line: 2325, column: 20, scope: !5784)
!5809 = !DILocation(line: 2325, column: 3, scope: !5784)
!5810 = !DILocation(line: 2326, column: 32, scope: !5784)
!5811 = !DILocation(line: 2326, column: 18, scope: !5784)
!5812 = !DILocation(line: 2326, column: 3, scope: !5784)
!5813 = !DILocation(line: 2326, column: 25, scope: !5784)
!5814 = !DILocation(line: 2326, column: 30, scope: !5784)
!5815 = !DILocation(line: 2327, column: 10, scope: !5784)
!5816 = !DILocation(line: 2327, column: 8, scope: !5784)
!5817 = !DILocation(line: 2329, column: 27, scope: !5784)
!5818 = !DILocation(line: 2329, column: 11, scope: !5784)
!5819 = !DILocation(line: 2329, column: 9, scope: !5784)
!5820 = !DILocation(line: 2330, column: 20, scope: !5784)
!5821 = !DILocation(line: 2330, column: 3, scope: !5784)
!5822 = !DILocation(line: 2331, column: 32, scope: !5784)
!5823 = !DILocation(line: 2331, column: 18, scope: !5784)
!5824 = !DILocation(line: 2331, column: 3, scope: !5784)
!5825 = !DILocation(line: 2331, column: 25, scope: !5784)
!5826 = !DILocation(line: 2331, column: 30, scope: !5784)
!5827 = !DILocation(line: 2333, column: 3, scope: !5784)
!5828 = distinct !DISubprogram(name: "ExpandRotateKernelInfo", scope: !1, file: !1, line: 2398, type: !5829, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{null, !597, !5047}
!5831 = !DILocalVariable(name: "kernel", arg: 1, scope: !5828, file: !1, line: 2398, type: !597)
!5832 = !DILocation(line: 2398, column: 48, scope: !5828)
!5833 = !DILocalVariable(name: "angle", arg: 2, scope: !5828, file: !1, line: 2398, type: !5047)
!5834 = !DILocation(line: 2398, column: 69, scope: !5828)
!5835 = !DILocalVariable(name: "clone", scope: !5828, file: !1, line: 2401, type: !597)
!5836 = !DILocation(line: 2401, column: 6, scope: !5828)
!5837 = !DILocalVariable(name: "last", scope: !5828, file: !1, line: 2402, type: !597)
!5838 = !DILocation(line: 2402, column: 6, scope: !5828)
!5839 = !DILocation(line: 2404, column: 10, scope: !5828)
!5840 = !DILocation(line: 2404, column: 8, scope: !5828)
!5841 = !DILocation(line: 2406, column: 3, scope: !5828)
!5842 = !DILocation(line: 2408, column: 29, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5828, file: !1, line: 2406, column: 12)
!5844 = !DILocation(line: 2408, column: 13, scope: !5843)
!5845 = !DILocation(line: 2408, column: 11, scope: !5843)
!5846 = !DILocation(line: 2409, column: 22, scope: !5843)
!5847 = !DILocation(line: 2409, column: 29, scope: !5843)
!5848 = !DILocation(line: 2409, column: 5, scope: !5843)
!5849 = !DILocation(line: 2410, column: 25, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5843, file: !1, line: 2410, column: 10)
!5851 = !DILocation(line: 2410, column: 33, scope: !5850)
!5852 = !DILocation(line: 2410, column: 10, scope: !5850)
!5853 = !DILocation(line: 2410, column: 40, scope: !5850)
!5854 = !DILocation(line: 2410, column: 10, scope: !5843)
!5855 = !DILocation(line: 2411, column: 7, scope: !5850)
!5856 = !DILocation(line: 2412, column: 34, scope: !5843)
!5857 = !DILocation(line: 2412, column: 20, scope: !5843)
!5858 = !DILocation(line: 2412, column: 5, scope: !5843)
!5859 = !DILocation(line: 2412, column: 27, scope: !5843)
!5860 = !DILocation(line: 2412, column: 32, scope: !5843)
!5861 = !DILocation(line: 2413, column: 12, scope: !5843)
!5862 = !DILocation(line: 2413, column: 10, scope: !5843)
!5863 = distinct !{!5863, !5841, !5864}
!5864 = !DILocation(line: 2414, column: 3, scope: !5828)
!5865 = !DILocation(line: 2415, column: 29, scope: !5828)
!5866 = !DILocation(line: 2415, column: 11, scope: !5828)
!5867 = !DILocation(line: 2415, column: 9, scope: !5828)
!5868 = !DILocation(line: 2416, column: 3, scope: !5828)
!5869 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 95, type: !5870, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!617, !5047, !5047}
!5872 = !DILocalVariable(name: "x", arg: 1, scope: !5869, file: !1, line: 95, type: !5047)
!5873 = !DILocation(line: 95, column: 45, scope: !5869)
!5874 = !DILocalVariable(name: "y", arg: 2, scope: !5869, file: !1, line: 95, type: !5047)
!5875 = !DILocation(line: 95, column: 60, scope: !5869)
!5876 = !DILocation(line: 97, column: 11, scope: !5869)
!5877 = !DILocation(line: 97, column: 15, scope: !5869)
!5878 = !DILocation(line: 97, column: 13, scope: !5869)
!5879 = !DILocation(line: 97, column: 19, scope: !5869)
!5880 = !DILocation(line: 97, column: 23, scope: !5869)
!5881 = !DILocation(line: 97, column: 3, scope: !5869)
!5882 = distinct !DISubprogram(name: "CloneKernelInfo", scope: !1, file: !1, line: 2194, type: !5883, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{!597, !5885}
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5886, size: 64)
!5886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !598)
!5887 = !DILocalVariable(name: "kernel", arg: 1, scope: !5882, file: !1, line: 2194, type: !5885)
!5888 = !DILocation(line: 2194, column: 60, scope: !5882)
!5889 = !DILocalVariable(name: "i", scope: !5882, file: !1, line: 2197, type: !609)
!5890 = !DILocation(line: 2197, column: 5, scope: !5882)
!5891 = !DILocalVariable(name: "new_kernel", scope: !5882, file: !1, line: 2200, type: !597)
!5892 = !DILocation(line: 2200, column: 6, scope: !5882)
!5893 = !DILocation(line: 2203, column: 29, scope: !5882)
!5894 = !DILocation(line: 2203, column: 14, scope: !5882)
!5895 = !DILocation(line: 2203, column: 13, scope: !5882)
!5896 = !DILocation(line: 2204, column: 7, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 2204, column: 7)
!5898 = !DILocation(line: 2204, column: 18, scope: !5897)
!5899 = !DILocation(line: 2204, column: 7, scope: !5882)
!5900 = !DILocation(line: 2205, column: 12, scope: !5897)
!5901 = !DILocation(line: 2205, column: 5, scope: !5897)
!5902 = !DILocation(line: 2206, column: 4, scope: !5882)
!5903 = !DILocation(line: 2206, column: 17, scope: !5882)
!5904 = !DILocation(line: 2206, column: 16, scope: !5882)
!5905 = !DILocation(line: 2209, column: 54, scope: !5882)
!5906 = !DILocation(line: 2209, column: 62, scope: !5882)
!5907 = !DILocation(line: 2210, column: 5, scope: !5882)
!5908 = !DILocation(line: 2210, column: 13, scope: !5882)
!5909 = !DILocation(line: 2210, column: 19, scope: !5882)
!5910 = !DILocation(line: 2209, column: 33, scope: !5882)
!5911 = !DILocation(line: 2209, column: 22, scope: !5882)
!5912 = !DILocation(line: 2209, column: 3, scope: !5882)
!5913 = !DILocation(line: 2209, column: 15, scope: !5882)
!5914 = !DILocation(line: 2209, column: 21, scope: !5882)
!5915 = !DILocation(line: 2211, column: 7, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 2211, column: 7)
!5917 = !DILocation(line: 2211, column: 19, scope: !5916)
!5918 = !DILocation(line: 2211, column: 26, scope: !5916)
!5919 = !DILocation(line: 2211, column: 7, scope: !5882)
!5920 = !DILocation(line: 2212, column: 30, scope: !5916)
!5921 = !DILocation(line: 2212, column: 12, scope: !5916)
!5922 = !DILocation(line: 2212, column: 5, scope: !5916)
!5923 = !DILocation(line: 2213, column: 9, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 2213, column: 3)
!5925 = !DILocation(line: 2213, column: 8, scope: !5924)
!5926 = !DILocation(line: 2213, column: 13, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5924, file: !1, line: 2213, column: 3)
!5928 = !DILocation(line: 2213, column: 28, scope: !5927)
!5929 = !DILocation(line: 2213, column: 36, scope: !5927)
!5930 = !DILocation(line: 2213, column: 42, scope: !5927)
!5931 = !DILocation(line: 2213, column: 50, scope: !5927)
!5932 = !DILocation(line: 2213, column: 41, scope: !5927)
!5933 = !DILocation(line: 2213, column: 15, scope: !5927)
!5934 = !DILocation(line: 2213, column: 3, scope: !5924)
!5935 = !DILocation(line: 2214, column: 27, scope: !5927)
!5936 = !DILocation(line: 2214, column: 35, scope: !5927)
!5937 = !DILocation(line: 2214, column: 42, scope: !5927)
!5938 = !DILocation(line: 2214, column: 5, scope: !5927)
!5939 = !DILocation(line: 2214, column: 17, scope: !5927)
!5940 = !DILocation(line: 2214, column: 24, scope: !5927)
!5941 = !DILocation(line: 2214, column: 26, scope: !5927)
!5942 = !DILocation(line: 2213, column: 60, scope: !5927)
!5943 = !DILocation(line: 2213, column: 3, scope: !5927)
!5944 = distinct !{!5944, !5934, !5945}
!5945 = !DILocation(line: 2214, column: 43, scope: !5924)
!5946 = !DILocation(line: 2217, column: 8, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 2217, column: 8)
!5948 = !DILocation(line: 2217, column: 16, scope: !5947)
!5949 = !DILocation(line: 2217, column: 21, scope: !5947)
!5950 = !DILocation(line: 2217, column: 8, scope: !5882)
!5951 = !DILocation(line: 2218, column: 40, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !1, line: 2217, column: 46)
!5953 = !DILocation(line: 2218, column: 48, scope: !5952)
!5954 = !DILocation(line: 2218, column: 24, scope: !5952)
!5955 = !DILocation(line: 2218, column: 5, scope: !5952)
!5956 = !DILocation(line: 2218, column: 17, scope: !5952)
!5957 = !DILocation(line: 2218, column: 22, scope: !5952)
!5958 = !DILocation(line: 2219, column: 10, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5952, file: !1, line: 2219, column: 10)
!5960 = !DILocation(line: 2219, column: 22, scope: !5959)
!5961 = !DILocation(line: 2219, column: 27, scope: !5959)
!5962 = !DILocation(line: 2219, column: 10, scope: !5952)
!5963 = !DILocation(line: 2220, column: 32, scope: !5959)
!5964 = !DILocation(line: 2220, column: 14, scope: !5959)
!5965 = !DILocation(line: 2220, column: 7, scope: !5959)
!5966 = !DILocation(line: 2221, column: 3, scope: !5952)
!5967 = !DILocation(line: 2223, column: 10, scope: !5882)
!5968 = !DILocation(line: 2223, column: 3, scope: !5882)
!5969 = !DILocation(line: 2224, column: 1, scope: !5882)
!5970 = distinct !DISubprogram(name: "MorphologyApply", scope: !1, file: !1, line: 3827, type: !5971, scopeLine: 3831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!627, !5973, !5975, !5976, !5978, !5885, !5979, !5047, !5980}
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!5975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!5976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5977)
!5977 = !DIDerivedType(tag: DW_TAG_typedef, name: "MorphologyMethod", file: !4, line: 100, baseType: !474)
!5978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!5979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!5981 = !DILocalVariable(name: "image", arg: 1, scope: !5970, file: !1, line: 3827, type: !5973)
!5982 = !DILocation(line: 3827, column: 50, scope: !5970)
!5983 = !DILocalVariable(name: "channel", arg: 2, scope: !5970, file: !1, line: 3828, type: !5975)
!5984 = !DILocation(line: 3828, column: 6, scope: !5970)
!5985 = !DILocalVariable(name: "method", arg: 3, scope: !5970, file: !1, line: 3828, type: !5976)
!5986 = !DILocation(line: 3828, column: 37, scope: !5970)
!5987 = !DILocalVariable(name: "iterations", arg: 4, scope: !5970, file: !1, line: 3828, type: !5978)
!5988 = !DILocation(line: 3828, column: 59, scope: !5970)
!5989 = !DILocalVariable(name: "kernel", arg: 5, scope: !5970, file: !1, line: 3829, type: !5885)
!5990 = !DILocation(line: 3829, column: 24, scope: !5970)
!5991 = !DILocalVariable(name: "compose", arg: 6, scope: !5970, file: !1, line: 3829, type: !5979)
!5992 = !DILocation(line: 3829, column: 56, scope: !5970)
!5993 = !DILocalVariable(name: "bias", arg: 7, scope: !5970, file: !1, line: 3830, type: !5047)
!5994 = !DILocation(line: 3830, column: 19, scope: !5970)
!5995 = !DILocalVariable(name: "exception", arg: 8, scope: !5970, file: !1, line: 3830, type: !5980)
!5996 = !DILocation(line: 3830, column: 40, scope: !5970)
!5997 = !DILocalVariable(name: "curr_compose", scope: !5970, file: !1, line: 3833, type: !708)
!5998 = !DILocation(line: 3833, column: 5, scope: !5970)
!5999 = !DILocalVariable(name: "curr_image", scope: !5970, file: !1, line: 3836, type: !627)
!6000 = !DILocation(line: 3836, column: 6, scope: !5970)
!6001 = !DILocalVariable(name: "work_image", scope: !5970, file: !1, line: 3837, type: !627)
!6002 = !DILocation(line: 3837, column: 6, scope: !5970)
!6003 = !DILocalVariable(name: "save_image", scope: !5970, file: !1, line: 3838, type: !627)
!6004 = !DILocation(line: 3838, column: 6, scope: !5970)
!6005 = !DILocalVariable(name: "rslt_image", scope: !5970, file: !1, line: 3839, type: !627)
!6006 = !DILocation(line: 3839, column: 6, scope: !5970)
!6007 = !DILocalVariable(name: "reflected_kernel", scope: !5970, file: !1, line: 3842, type: !597)
!6008 = !DILocation(line: 3842, column: 6, scope: !5970)
!6009 = !DILocalVariable(name: "norm_kernel", scope: !5970, file: !1, line: 3843, type: !597)
!6010 = !DILocation(line: 3843, column: 6, scope: !5970)
!6011 = !DILocalVariable(name: "rflt_kernel", scope: !5970, file: !1, line: 3844, type: !597)
!6012 = !DILocation(line: 3844, column: 6, scope: !5970)
!6013 = !DILocalVariable(name: "this_kernel", scope: !5970, file: !1, line: 3845, type: !597)
!6014 = !DILocation(line: 3845, column: 6, scope: !5970)
!6015 = !DILocalVariable(name: "primitive", scope: !5970, file: !1, line: 3848, type: !5977)
!6016 = !DILocation(line: 3848, column: 5, scope: !5970)
!6017 = !DILocalVariable(name: "rslt_compose", scope: !5970, file: !1, line: 3851, type: !708)
!6018 = !DILocation(line: 3851, column: 5, scope: !5970)
!6019 = !DILocalVariable(name: "special", scope: !5970, file: !1, line: 3854, type: !641)
!6020 = !DILocation(line: 3854, column: 5, scope: !5970)
!6021 = !DILocalVariable(name: "verbose", scope: !5970, file: !1, line: 3855, type: !641)
!6022 = !DILocation(line: 3855, column: 5, scope: !5970)
!6023 = !DILocalVariable(name: "method_loop", scope: !5970, file: !1, line: 3858, type: !604)
!6024 = !DILocation(line: 3858, column: 5, scope: !5970)
!6025 = !DILocalVariable(name: "method_limit", scope: !5970, file: !1, line: 3859, type: !604)
!6026 = !DILocation(line: 3859, column: 5, scope: !5970)
!6027 = !DILocalVariable(name: "kernel_number", scope: !5970, file: !1, line: 3860, type: !604)
!6028 = !DILocation(line: 3860, column: 5, scope: !5970)
!6029 = !DILocalVariable(name: "stage_loop", scope: !5970, file: !1, line: 3861, type: !604)
!6030 = !DILocation(line: 3861, column: 5, scope: !5970)
!6031 = !DILocalVariable(name: "stage_limit", scope: !5970, file: !1, line: 3862, type: !604)
!6032 = !DILocation(line: 3862, column: 5, scope: !5970)
!6033 = !DILocalVariable(name: "kernel_loop", scope: !5970, file: !1, line: 3863, type: !604)
!6034 = !DILocation(line: 3863, column: 5, scope: !5970)
!6035 = !DILocalVariable(name: "kernel_limit", scope: !5970, file: !1, line: 3864, type: !604)
!6036 = !DILocation(line: 3864, column: 5, scope: !5970)
!6037 = !DILocalVariable(name: "count", scope: !5970, file: !1, line: 3865, type: !604)
!6038 = !DILocation(line: 3865, column: 5, scope: !5970)
!6039 = !DILocalVariable(name: "kernel_changed", scope: !5970, file: !1, line: 3866, type: !604)
!6040 = !DILocation(line: 3866, column: 5, scope: !5970)
!6041 = !DILocalVariable(name: "method_changed", scope: !5970, file: !1, line: 3867, type: !604)
!6042 = !DILocation(line: 3867, column: 5, scope: !5970)
!6043 = !DILocalVariable(name: "changed", scope: !5970, file: !1, line: 3870, type: !609)
!6044 = !DILocation(line: 3870, column: 5, scope: !5970)
!6045 = !DILocalVariable(name: "v_info", scope: !5970, file: !1, line: 3873, type: !766)
!6046 = !DILocation(line: 3873, column: 5, scope: !5970)
!6047 = !DILocation(line: 3882, column: 9, scope: !5970)
!6048 = !DILocation(line: 3883, column: 8, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3883, column: 8)
!6050 = !DILocation(line: 3883, column: 19, scope: !6049)
!6051 = !DILocation(line: 3883, column: 8, scope: !5970)
!6052 = !DILocation(line: 3884, column: 5, scope: !6049)
!6053 = !DILocation(line: 3886, column: 27, scope: !5970)
!6054 = !DILocation(line: 3886, column: 16, scope: !5970)
!6055 = !DILocation(line: 3887, column: 8, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3887, column: 8)
!6057 = !DILocation(line: 3887, column: 19, scope: !6056)
!6058 = !DILocation(line: 3887, column: 8, scope: !5970)
!6059 = !DILocation(line: 3888, column: 21, scope: !6056)
!6060 = !DILocation(line: 3888, column: 28, scope: !6056)
!6061 = !DILocation(line: 3888, column: 36, scope: !6056)
!6062 = !DILocation(line: 3888, column: 43, scope: !6056)
!6063 = !DILocation(line: 3888, column: 35, scope: !6056)
!6064 = !DILocation(line: 3888, column: 50, scope: !6056)
!6065 = !DILocation(line: 3888, column: 57, scope: !6056)
!6066 = !DILocation(line: 3888, column: 67, scope: !6056)
!6067 = !DILocation(line: 3888, column: 74, scope: !6056)
!6068 = !DILocation(line: 3888, column: 19, scope: !6056)
!6069 = !DILocation(line: 3888, column: 6, scope: !6056)
!6070 = !DILocation(line: 3890, column: 43, scope: !5970)
!6071 = !DILocation(line: 3890, column: 26, scope: !5970)
!6072 = !DILocation(line: 3890, column: 13, scope: !5970)
!6073 = !DILocation(line: 3890, column: 11, scope: !5970)
!6074 = !DILocation(line: 3893, column: 26, scope: !5970)
!6075 = !DILocation(line: 3893, column: 14, scope: !5970)
!6076 = !DILocation(line: 3894, column: 18, scope: !5970)
!6077 = !DILocation(line: 3894, column: 25, scope: !5970)
!6078 = !DILocation(line: 3894, column: 16, scope: !5970)
!6079 = !DILocation(line: 3895, column: 10, scope: !5970)
!6080 = !DILocation(line: 3896, column: 40, scope: !5970)
!6081 = !DILocation(line: 3896, column: 27, scope: !5970)
!6082 = !DILocation(line: 3896, column: 14, scope: !5970)
!6083 = !DILocation(line: 3897, column: 20, scope: !5970)
!6084 = !DILocation(line: 3904, column: 16, scope: !5970)
!6085 = !DILocation(line: 3905, column: 15, scope: !5970)
!6086 = !DILocation(line: 3906, column: 11, scope: !5970)
!6087 = !DILocation(line: 3907, column: 18, scope: !5970)
!6088 = !DILocation(line: 3907, column: 16, scope: !5970)
!6089 = !DILocation(line: 3908, column: 11, scope: !5970)
!6090 = !DILocation(line: 3908, column: 3, scope: !5970)
!6091 = !DILocation(line: 3910, column: 19, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3908, column: 20)
!6093 = !DILocation(line: 3911, column: 7, scope: !6092)
!6094 = !DILocation(line: 3919, column: 19, scope: !6092)
!6095 = !DILocation(line: 3920, column: 7, scope: !6092)
!6096 = !DILocation(line: 3922, column: 20, scope: !6092)
!6097 = !DILocation(line: 3922, column: 7, scope: !6092)
!6098 = !DILocation(line: 3926, column: 22, scope: !6092)
!6099 = !DILocation(line: 3926, column: 20, scope: !6092)
!6100 = !DILocation(line: 3927, column: 20, scope: !6092)
!6101 = !DILocation(line: 3928, column: 7, scope: !6092)
!6102 = !DILocation(line: 3931, column: 15, scope: !6092)
!6103 = !DILocation(line: 3932, column: 7, scope: !6092)
!6104 = !DILocation(line: 3934, column: 7, scope: !6092)
!6105 = !DILocation(line: 3940, column: 8, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3940, column: 8)
!6107 = !DILocation(line: 3940, column: 16, scope: !6106)
!6108 = !DILocation(line: 3940, column: 8, scope: !5970)
!6109 = !DILocation(line: 3942, column: 29, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6106, file: !1, line: 3941, column: 5)
!6111 = !DILocation(line: 3942, column: 50, scope: !6110)
!6112 = !DILocation(line: 3942, column: 18, scope: !6110)
!6113 = !DILocation(line: 3942, column: 17, scope: !6110)
!6114 = !DILocation(line: 3943, column: 11, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 3943, column: 11)
!6116 = !DILocation(line: 3943, column: 22, scope: !6115)
!6117 = !DILocation(line: 3943, column: 11, scope: !6110)
!6118 = !DILocation(line: 3944, column: 9, scope: !6115)
!6119 = !DILocation(line: 3945, column: 32, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 3945, column: 11)
!6121 = !DILocation(line: 3945, column: 11, scope: !6120)
!6122 = !DILocation(line: 3945, column: 56, scope: !6120)
!6123 = !DILocation(line: 3945, column: 11, scope: !6110)
!6124 = !DILocation(line: 3947, column: 28, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6120, file: !1, line: 3946, column: 9)
!6126 = !DILocation(line: 3947, column: 39, scope: !6125)
!6127 = !DILocation(line: 3947, column: 51, scope: !6125)
!6128 = !DILocation(line: 3947, column: 11, scope: !6125)
!6129 = !DILocation(line: 3948, column: 11, scope: !6125)
!6130 = !DILocation(line: 3951, column: 43, scope: !6110)
!6131 = !DILocation(line: 3951, column: 55, scope: !6110)
!6132 = !DILocation(line: 3952, column: 23, scope: !6110)
!6133 = !DILocation(line: 3952, column: 32, scope: !6110)
!6134 = !DILocation(line: 3952, column: 40, scope: !6110)
!6135 = !DILocation(line: 3951, column: 17, scope: !6110)
!6136 = !DILocation(line: 3951, column: 15, scope: !6110)
!6137 = !DILocation(line: 3954, column: 12, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 3954, column: 12)
!6139 = !DILocation(line: 3954, column: 20, scope: !6138)
!6140 = !DILocation(line: 3954, column: 12, scope: !6110)
!6141 = !DILocation(line: 3955, column: 40, scope: !6138)
!6142 = !DILocation(line: 3957, column: 60, scope: !6138)
!6143 = !DILocation(line: 3957, column: 11, scope: !6138)
!6144 = !DILocation(line: 3958, column: 33, scope: !6138)
!6145 = !DILocation(line: 3958, column: 24, scope: !6138)
!6146 = !DILocation(line: 3955, column: 23, scope: !6138)
!6147 = !DILocation(line: 3955, column: 9, scope: !6138)
!6148 = !DILocation(line: 3960, column: 12, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 3960, column: 12)
!6150 = !DILocation(line: 3960, column: 20, scope: !6149)
!6151 = !DILocation(line: 3960, column: 12, scope: !6110)
!6152 = !DILocation(line: 3961, column: 9, scope: !6149)
!6153 = !DILocation(line: 3963, column: 12, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 3963, column: 12)
!6155 = !DILocation(line: 3963, column: 19, scope: !6154)
!6156 = !DILocation(line: 3963, column: 12, scope: !6110)
!6157 = !DILocation(line: 3965, column: 37, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 3963, column: 42)
!6159 = !DILocation(line: 3965, column: 16, scope: !6158)
!6160 = !DILocation(line: 3966, column: 38, scope: !6158)
!6161 = !DILocation(line: 3967, column: 35, scope: !6158)
!6162 = !DILocation(line: 3966, column: 16, scope: !6158)
!6163 = !DILocation(line: 3968, column: 37, scope: !6158)
!6164 = !DILocation(line: 3968, column: 16, scope: !6158)
!6165 = !DILocation(line: 3969, column: 7, scope: !6158)
!6166 = !DILocation(line: 3970, column: 7, scope: !6110)
!6167 = !DILocation(line: 3974, column: 8, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3974, column: 8)
!6169 = !DILocation(line: 3974, column: 16, scope: !6168)
!6170 = !DILocation(line: 3974, column: 8, scope: !5970)
!6171 = !DILocation(line: 3975, column: 20, scope: !6168)
!6172 = !DILocation(line: 3975, column: 18, scope: !6168)
!6173 = !DILocation(line: 3975, column: 5, scope: !6168)
!6174 = !DILocation(line: 3976, column: 8, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3976, column: 8)
!6176 = !DILocation(line: 3976, column: 21, scope: !6175)
!6177 = !DILocation(line: 3976, column: 8, scope: !5970)
!6178 = !DILocation(line: 3977, column: 18, scope: !6175)
!6179 = !DILocation(line: 3977, column: 5, scope: !6175)
!6180 = !DILocation(line: 3981, column: 12, scope: !5970)
!6181 = !DILocation(line: 3981, column: 3, scope: !5970)
!6182 = !DILocation(line: 3987, column: 42, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3981, column: 21)
!6184 = !DILocation(line: 3987, column: 26, scope: !6183)
!6185 = !DILocation(line: 3987, column: 24, scope: !6183)
!6186 = !DILocation(line: 3988, column: 11, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6183, file: !1, line: 3988, column: 11)
!6188 = !DILocation(line: 3988, column: 28, scope: !6187)
!6189 = !DILocation(line: 3988, column: 11, scope: !6183)
!6190 = !DILocation(line: 3989, column: 9, scope: !6187)
!6191 = !DILocation(line: 3990, column: 24, scope: !6183)
!6192 = !DILocation(line: 3990, column: 7, scope: !6183)
!6193 = !DILocation(line: 3991, column: 7, scope: !6183)
!6194 = !DILocation(line: 3993, column: 7, scope: !6183)
!6195 = !DILocation(line: 4000, column: 15, scope: !5970)
!6196 = !DILocation(line: 4001, column: 18, scope: !5970)
!6197 = !DILocation(line: 4002, column: 3, scope: !5970)
!6198 = !DILocation(line: 4002, column: 11, scope: !5970)
!6199 = !DILocation(line: 4002, column: 25, scope: !5970)
!6200 = !DILocation(line: 4002, column: 23, scope: !5970)
!6201 = !DILocation(line: 4002, column: 38, scope: !5970)
!6202 = !DILocation(line: 4002, column: 41, scope: !5970)
!6203 = !DILocation(line: 4002, column: 56, scope: !5970)
!6204 = !DILocation(line: 0, scope: !5970)
!6205 = !DILocation(line: 4003, column: 16, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4002, column: 62)
!6207 = !DILocation(line: 4004, column: 20, scope: !6206)
!6208 = !DILocation(line: 4007, column: 34, scope: !6206)
!6209 = !DILocation(line: 4007, column: 17, scope: !6206)
!6210 = !DILocation(line: 4008, column: 34, scope: !6206)
!6211 = !DILocation(line: 4008, column: 17, scope: !6206)
!6212 = !DILocation(line: 4009, column: 19, scope: !6206)
!6213 = !DILocation(line: 4009, column: 17, scope: !6206)
!6214 = !DILocation(line: 4011, column: 19, scope: !6206)
!6215 = !DILocation(line: 4012, column: 5, scope: !6206)
!6216 = !DILocation(line: 4012, column: 13, scope: !6206)
!6217 = !DILocation(line: 4012, column: 25, scope: !6206)
!6218 = !DILocation(line: 4015, column: 18, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6206, file: !1, line: 4012, column: 35)
!6220 = !DILocation(line: 4016, column: 7, scope: !6219)
!6221 = !DILocation(line: 4016, column: 15, scope: !6219)
!6222 = !DILocation(line: 4016, column: 28, scope: !6219)
!6223 = !DILocation(line: 4016, column: 26, scope: !6219)
!6224 = !DILocation(line: 4017, column: 19, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4016, column: 42)
!6226 = !DILocation(line: 4020, column: 23, scope: !6225)
!6227 = !DILocation(line: 4020, column: 21, scope: !6225)
!6228 = !DILocation(line: 4021, column: 21, scope: !6225)
!6229 = !DILocation(line: 4021, column: 19, scope: !6225)
!6230 = !DILocation(line: 4022, column: 17, scope: !6225)
!6231 = !DILocation(line: 4022, column: 9, scope: !6225)
!6232 = !DILocation(line: 4025, column: 23, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4022, column: 26)
!6234 = !DILocation(line: 4026, column: 13, scope: !6233)
!6235 = !DILocation(line: 4029, column: 23, scope: !6233)
!6236 = !DILocation(line: 4030, column: 13, scope: !6233)
!6237 = !DILocation(line: 4033, column: 23, scope: !6233)
!6238 = !DILocation(line: 4034, column: 18, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4034, column: 18)
!6240 = !DILocation(line: 4034, column: 29, scope: !6239)
!6241 = !DILocation(line: 4034, column: 18, scope: !6233)
!6242 = !DILocation(line: 4035, column: 25, scope: !6239)
!6243 = !DILocation(line: 4035, column: 15, scope: !6239)
!6244 = !DILocation(line: 4036, column: 13, scope: !6233)
!6245 = !DILocation(line: 4038, column: 23, scope: !6233)
!6246 = !DILocation(line: 4039, column: 18, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4039, column: 18)
!6248 = !DILocation(line: 4039, column: 29, scope: !6247)
!6249 = !DILocation(line: 4039, column: 18, scope: !6233)
!6250 = !DILocation(line: 4040, column: 25, scope: !6247)
!6251 = !DILocation(line: 4040, column: 15, scope: !6247)
!6252 = !DILocation(line: 4041, column: 13, scope: !6233)
!6253 = !DILocation(line: 4044, column: 27, scope: !6233)
!6254 = !DILocation(line: 4044, column: 25, scope: !6233)
!6255 = !DILocation(line: 4045, column: 23, scope: !6233)
!6256 = !DILocation(line: 4046, column: 18, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4046, column: 18)
!6258 = !DILocation(line: 4046, column: 29, scope: !6257)
!6259 = !DILocation(line: 4046, column: 18, scope: !6233)
!6260 = !DILocation(line: 4047, column: 25, scope: !6257)
!6261 = !DILocation(line: 4047, column: 15, scope: !6257)
!6262 = !DILocation(line: 4048, column: 13, scope: !6233)
!6263 = !DILocation(line: 4050, column: 27, scope: !6233)
!6264 = !DILocation(line: 4050, column: 25, scope: !6233)
!6265 = !DILocation(line: 4051, column: 23, scope: !6233)
!6266 = !DILocation(line: 4052, column: 18, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4052, column: 18)
!6268 = !DILocation(line: 4052, column: 29, scope: !6267)
!6269 = !DILocation(line: 4052, column: 18, scope: !6233)
!6270 = !DILocation(line: 4053, column: 25, scope: !6267)
!6271 = !DILocation(line: 4053, column: 15, scope: !6267)
!6272 = !DILocation(line: 4054, column: 13, scope: !6233)
!6273 = !DILocation(line: 4056, column: 22, scope: !6233)
!6274 = !DILocation(line: 4056, column: 13, scope: !6233)
!6275 = !DILocation(line: 4058, column: 27, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4056, column: 35)
!6277 = !DILocation(line: 4059, column: 17, scope: !6276)
!6278 = !DILocation(line: 4061, column: 27, scope: !6276)
!6279 = !DILocation(line: 4062, column: 17, scope: !6276)
!6280 = !DILocation(line: 4064, column: 31, scope: !6276)
!6281 = !DILocation(line: 4064, column: 29, scope: !6276)
!6282 = !DILocation(line: 4065, column: 27, scope: !6276)
!6283 = !DILocation(line: 4066, column: 17, scope: !6276)
!6284 = !DILocation(line: 4068, column: 31, scope: !6276)
!6285 = !DILocation(line: 4068, column: 29, scope: !6276)
!6286 = !DILocation(line: 4069, column: 27, scope: !6276)
!6287 = !DILocation(line: 4070, column: 17, scope: !6276)
!6288 = !DILocation(line: 4072, column: 13, scope: !6233)
!6289 = !DILocation(line: 4074, column: 23, scope: !6233)
!6290 = !DILocation(line: 4075, column: 18, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6233, file: !1, line: 4075, column: 18)
!6292 = !DILocation(line: 4075, column: 29, scope: !6291)
!6293 = !DILocation(line: 4075, column: 18, scope: !6233)
!6294 = !DILocation(line: 4076, column: 28, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !1, line: 4075, column: 36)
!6296 = !DILocation(line: 4076, column: 26, scope: !6295)
!6297 = !DILocation(line: 4077, column: 38, scope: !6295)
!6298 = !DILocation(line: 4077, column: 26, scope: !6295)
!6299 = !DILocation(line: 4078, column: 25, scope: !6295)
!6300 = !DILocation(line: 4079, column: 13, scope: !6295)
!6301 = !DILocation(line: 4080, column: 13, scope: !6233)
!6302 = !DILocation(line: 4091, column: 27, scope: !6233)
!6303 = !DILocation(line: 4091, column: 25, scope: !6233)
!6304 = !DILocation(line: 4092, column: 23, scope: !6233)
!6305 = !DILocation(line: 4093, column: 13, scope: !6233)
!6306 = !DILocation(line: 4095, column: 13, scope: !6233)
!6307 = !DILocation(line: 4100, column: 14, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4100, column: 14)
!6309 = !DILocation(line: 4100, column: 22, scope: !6308)
!6310 = !DILocation(line: 4100, column: 14, scope: !6225)
!6311 = !DILocation(line: 4101, column: 16, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 4101, column: 16)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 4100, column: 39)
!6314 = !DILocation(line: 4101, column: 28, scope: !6312)
!6315 = !DILocation(line: 4101, column: 16, scope: !6313)
!6316 = !DILocation(line: 4102, column: 39, scope: !6312)
!6317 = !DILocation(line: 4103, column: 62, scope: !6312)
!6318 = !DILocation(line: 4103, column: 14, scope: !6312)
!6319 = !DILocation(line: 4104, column: 14, scope: !6312)
!6320 = !DILocation(line: 4103, column: 70, scope: !6312)
!6321 = !DILocation(line: 4104, column: 35, scope: !6312)
!6322 = !DILocation(line: 4104, column: 26, scope: !6312)
!6323 = !DILocation(line: 4102, column: 20, scope: !6312)
!6324 = !DILocation(line: 4102, column: 13, scope: !6312)
!6325 = !DILocation(line: 4105, column: 21, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 4105, column: 21)
!6327 = !DILocation(line: 4105, column: 34, scope: !6326)
!6328 = !DILocation(line: 4105, column: 31, scope: !6326)
!6329 = !DILocation(line: 4105, column: 21, scope: !6312)
!6330 = !DILocation(line: 4106, column: 39, scope: !6326)
!6331 = !DILocation(line: 4107, column: 64, scope: !6326)
!6332 = !DILocation(line: 4107, column: 15, scope: !6326)
!6333 = !DILocation(line: 4108, column: 15, scope: !6326)
!6334 = !DILocation(line: 4107, column: 72, scope: !6326)
!6335 = !DILocation(line: 4106, column: 20, scope: !6326)
!6336 = !DILocation(line: 4106, column: 13, scope: !6326)
!6337 = !DILocation(line: 4110, column: 13, scope: !6326)
!6338 = !DILocation(line: 4110, column: 23, scope: !6326)
!6339 = !DILocation(line: 4111, column: 9, scope: !6313)
!6340 = !DILocation(line: 4114, column: 21, scope: !6225)
!6341 = !DILocation(line: 4115, column: 24, scope: !6225)
!6342 = !DILocation(line: 4116, column: 17, scope: !6225)
!6343 = !DILocation(line: 4117, column: 9, scope: !6225)
!6344 = !DILocation(line: 4117, column: 17, scope: !6225)
!6345 = !DILocation(line: 4117, column: 31, scope: !6225)
!6346 = !DILocation(line: 4117, column: 29, scope: !6225)
!6347 = !DILocation(line: 4117, column: 44, scope: !6225)
!6348 = !DILocation(line: 4117, column: 47, scope: !6225)
!6349 = !DILocation(line: 4117, column: 55, scope: !6225)
!6350 = !DILocation(line: 0, scope: !6225)
!6351 = !DILocation(line: 4118, column: 22, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4117, column: 61)
!6353 = !DILocation(line: 4121, column: 16, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 4121, column: 16)
!6355 = !DILocation(line: 4121, column: 27, scope: !6354)
!6356 = !DILocation(line: 4121, column: 16, scope: !6352)
!6357 = !DILocation(line: 4123, column: 37, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 4122, column: 13)
!6359 = !DILocation(line: 4123, column: 58, scope: !6358)
!6360 = !DILocation(line: 4123, column: 26, scope: !6358)
!6361 = !DILocation(line: 4123, column: 25, scope: !6358)
!6362 = !DILocation(line: 4124, column: 19, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6358, file: !1, line: 4124, column: 19)
!6364 = !DILocation(line: 4124, column: 30, scope: !6363)
!6365 = !DILocation(line: 4124, column: 19, scope: !6358)
!6366 = !DILocation(line: 4125, column: 17, scope: !6363)
!6367 = !DILocation(line: 4126, column: 40, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6358, file: !1, line: 4126, column: 19)
!6369 = !DILocation(line: 4126, column: 19, scope: !6368)
!6370 = !DILocation(line: 4126, column: 64, scope: !6368)
!6371 = !DILocation(line: 4126, column: 19, scope: !6358)
!6372 = !DILocation(line: 4128, column: 36, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !1, line: 4127, column: 17)
!6374 = !DILocation(line: 4128, column: 47, scope: !6373)
!6375 = !DILocation(line: 4128, column: 59, scope: !6373)
!6376 = !DILocation(line: 4128, column: 19, scope: !6373)
!6377 = !DILocation(line: 4129, column: 19, scope: !6373)
!6378 = !DILocation(line: 4132, column: 13, scope: !6358)
!6379 = !DILocation(line: 4135, column: 16, scope: !6352)
!6380 = !DILocation(line: 4136, column: 41, scope: !6352)
!6381 = !DILocation(line: 4136, column: 53, scope: !6352)
!6382 = !DILocation(line: 4136, column: 65, scope: !6352)
!6383 = !DILocation(line: 4137, column: 24, scope: !6352)
!6384 = !DILocation(line: 4137, column: 33, scope: !6352)
!6385 = !DILocation(line: 4137, column: 46, scope: !6352)
!6386 = !DILocation(line: 4137, column: 52, scope: !6352)
!6387 = !DILocation(line: 4136, column: 21, scope: !6352)
!6388 = !DILocation(line: 4136, column: 19, scope: !6352)
!6389 = !DILocation(line: 4139, column: 16, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 4139, column: 16)
!6391 = !DILocation(line: 4139, column: 24, scope: !6390)
!6392 = !DILocation(line: 4139, column: 16, scope: !6352)
!6393 = !DILocation(line: 4140, column: 18, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !1, line: 4140, column: 18)
!6395 = distinct !DILexicalBlock(scope: !6390, file: !1, line: 4139, column: 41)
!6396 = !DILocation(line: 4140, column: 30, scope: !6394)
!6397 = !DILocation(line: 4140, column: 18, scope: !6395)
!6398 = !DILocation(line: 4141, column: 39, scope: !6394)
!6399 = !DILocation(line: 4141, column: 22, scope: !6394)
!6400 = !DILocation(line: 4141, column: 15, scope: !6394)
!6401 = !DILocation(line: 4142, column: 44, scope: !6395)
!6402 = !DILocation(line: 4144, column: 15, scope: !6395)
!6403 = !DILocation(line: 4145, column: 15, scope: !6395)
!6404 = !DILocation(line: 4144, column: 22, scope: !6395)
!6405 = !DILocation(line: 4145, column: 27, scope: !6395)
!6406 = !DILocation(line: 4145, column: 42, scope: !6395)
!6407 = !DILocation(line: 4145, column: 39, scope: !6395)
!6408 = !DILocation(line: 4145, column: 26, scope: !6395)
!6409 = !DILocation(line: 4146, column: 25, scope: !6395)
!6410 = !DILocation(line: 4146, column: 37, scope: !6395)
!6411 = !DILocation(line: 4146, column: 36, scope: !6395)
!6412 = !DILocation(line: 4146, column: 48, scope: !6395)
!6413 = !DILocation(line: 4146, column: 15, scope: !6395)
!6414 = !DILocation(line: 4146, column: 61, scope: !6395)
!6415 = !DILocation(line: 4146, column: 52, scope: !6395)
!6416 = !DILocation(line: 4147, column: 24, scope: !6395)
!6417 = !DILocation(line: 4147, column: 15, scope: !6395)
!6418 = !DILocation(line: 4147, column: 39, scope: !6395)
!6419 = !DILocation(line: 4147, column: 30, scope: !6395)
!6420 = !DILocation(line: 4142, column: 27, scope: !6395)
!6421 = !DILocation(line: 4148, column: 11, scope: !6395)
!6422 = !DILocation(line: 4149, column: 16, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 4149, column: 16)
!6424 = !DILocation(line: 4149, column: 24, scope: !6423)
!6425 = !DILocation(line: 4149, column: 16, scope: !6352)
!6426 = !DILocation(line: 4150, column: 13, scope: !6423)
!6427 = !DILocation(line: 4151, column: 29, scope: !6352)
!6428 = !DILocation(line: 4151, column: 26, scope: !6352)
!6429 = !DILocation(line: 4152, column: 29, scope: !6352)
!6430 = !DILocation(line: 4152, column: 26, scope: !6352)
!6431 = !DILocalVariable(name: "tmp", scope: !6432, file: !1, line: 4155, type: !627)
!6432 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 4155, column: 11)
!6433 = !DILocation(line: 4155, column: 20, scope: !6432)
!6434 = !DILocation(line: 4155, column: 26, scope: !6432)
!6435 = !DILocation(line: 4156, column: 26, scope: !6432)
!6436 = !DILocation(line: 4156, column: 24, scope: !6432)
!6437 = !DILocation(line: 4157, column: 26, scope: !6432)
!6438 = !DILocation(line: 4157, column: 24, scope: !6432)
!6439 = !DILocation(line: 4159, column: 16, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 4159, column: 16)
!6441 = !DILocation(line: 4159, column: 30, scope: !6440)
!6442 = !DILocation(line: 4159, column: 27, scope: !6440)
!6443 = !DILocation(line: 4159, column: 16, scope: !6352)
!6444 = !DILocation(line: 4160, column: 24, scope: !6440)
!6445 = !DILocation(line: 4160, column: 13, scope: !6440)
!6446 = distinct !{!6446, !6343, !6447}
!6447 = !DILocation(line: 4162, column: 9, scope: !6225)
!6448 = !DILocation(line: 4164, column: 14, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4164, column: 14)
!6450 = !DILocation(line: 4164, column: 22, scope: !6449)
!6451 = !DILocation(line: 4164, column: 37, scope: !6449)
!6452 = !DILocation(line: 4164, column: 40, scope: !6449)
!6453 = !DILocation(line: 4164, column: 66, scope: !6449)
!6454 = !DILocation(line: 4164, column: 55, scope: !6449)
!6455 = !DILocation(line: 4164, column: 14, scope: !6225)
!6456 = !DILocation(line: 4165, column: 35, scope: !6449)
!6457 = !DILocation(line: 4165, column: 69, scope: !6449)
!6458 = !DILocation(line: 4165, column: 60, scope: !6449)
!6459 = !DILocation(line: 4165, column: 18, scope: !6449)
!6460 = !DILocation(line: 4165, column: 11, scope: !6449)
!6461 = !DILocation(line: 4166, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4166, column: 14)
!6463 = !DILocation(line: 4166, column: 22, scope: !6462)
!6464 = !DILocation(line: 4166, column: 37, scope: !6462)
!6465 = !DILocation(line: 4166, column: 40, scope: !6462)
!6466 = !DILocation(line: 4166, column: 53, scope: !6462)
!6467 = !DILocation(line: 4166, column: 51, scope: !6462)
!6468 = !DILocation(line: 4166, column: 14, scope: !6225)
!6469 = !DILocation(line: 4167, column: 35, scope: !6462)
!6470 = !DILocation(line: 4167, column: 18, scope: !6462)
!6471 = !DILocation(line: 4167, column: 11, scope: !6462)
!6472 = distinct !{!6472, !6220, !6473}
!6473 = !DILocation(line: 4177, column: 7, scope: !6219)
!6474 = !DILocation(line: 4186, column: 15, scope: !6219)
!6475 = !DILocation(line: 4186, column: 7, scope: !6219)
!6476 = !DILocation(line: 4191, column: 16, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 4191, column: 16)
!6478 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4186, column: 24)
!6479 = !DILocation(line: 4191, column: 24, scope: !6477)
!6480 = !DILocation(line: 4191, column: 16, scope: !6478)
!6481 = !DILocation(line: 4192, column: 37, scope: !6477)
!6482 = !DILocation(line: 4193, column: 67, scope: !6477)
!6483 = !DILocation(line: 4193, column: 18, scope: !6477)
!6484 = !DILocation(line: 4192, column: 20, scope: !6477)
!6485 = !DILocation(line: 4192, column: 13, scope: !6477)
!6486 = !DILocation(line: 4194, column: 40, scope: !6478)
!6487 = !DILocation(line: 4195, column: 34, scope: !6478)
!6488 = !DILocation(line: 4195, column: 42, scope: !6478)
!6489 = !DILocation(line: 4196, column: 42, scope: !6478)
!6490 = !DILocation(line: 4194, column: 18, scope: !6478)
!6491 = !DILocation(line: 4197, column: 11, scope: !6478)
!6492 = !DILocation(line: 4199, column: 16, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 4199, column: 16)
!6494 = !DILocation(line: 4199, column: 24, scope: !6493)
!6495 = !DILocation(line: 4199, column: 16, scope: !6478)
!6496 = !DILocation(line: 4200, column: 37, scope: !6493)
!6497 = !DILocation(line: 4201, column: 67, scope: !6493)
!6498 = !DILocation(line: 4201, column: 18, scope: !6493)
!6499 = !DILocation(line: 4200, column: 20, scope: !6493)
!6500 = !DILocation(line: 4200, column: 13, scope: !6493)
!6501 = !DILocation(line: 4202, column: 40, scope: !6478)
!6502 = !DILocation(line: 4203, column: 34, scope: !6478)
!6503 = !DILocation(line: 4203, column: 42, scope: !6478)
!6504 = !DILocation(line: 4204, column: 42, scope: !6478)
!6505 = !DILocation(line: 4202, column: 18, scope: !6478)
!6506 = !DILocation(line: 4205, column: 37, scope: !6478)
!6507 = !DILocation(line: 4205, column: 24, scope: !6478)
!6508 = !DILocation(line: 4205, column: 22, scope: !6478)
!6509 = !DILocation(line: 4206, column: 11, scope: !6478)
!6510 = !DILocation(line: 4208, column: 11, scope: !6478)
!6511 = !DILocation(line: 4212, column: 12, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4212, column: 12)
!6513 = !DILocation(line: 4212, column: 20, scope: !6512)
!6514 = !DILocation(line: 4212, column: 25, scope: !6512)
!6515 = !DILocation(line: 4212, column: 12, scope: !6219)
!6516 = !DILocation(line: 4213, column: 22, scope: !6512)
!6517 = !DILocation(line: 4213, column: 20, scope: !6512)
!6518 = !DILocation(line: 4213, column: 9, scope: !6512)
!6519 = !DILocation(line: 4214, column: 17, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 4214, column: 17)
!6521 = !DILocation(line: 4214, column: 30, scope: !6520)
!6522 = !DILocation(line: 4214, column: 17, scope: !6512)
!6523 = !DILocation(line: 4215, column: 16, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6525, file: !1, line: 4215, column: 16)
!6525 = distinct !DILexicalBlock(scope: !6520, file: !1, line: 4215, column: 9)
!6526 = !DILocation(line: 4215, column: 24, scope: !6524)
!6527 = !DILocation(line: 4215, column: 16, scope: !6525)
!6528 = !DILocation(line: 4216, column: 18, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 4216, column: 18)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 4215, column: 41)
!6531 = !DILocation(line: 4216, column: 31, scope: !6529)
!6532 = !DILocation(line: 4216, column: 36, scope: !6529)
!6533 = !DILocation(line: 4216, column: 18, scope: !6530)
!6534 = !DILocation(line: 4217, column: 39, scope: !6529)
!6535 = !DILocation(line: 4217, column: 22, scope: !6529)
!6536 = !DILocation(line: 4217, column: 15, scope: !6529)
!6537 = !DILocation(line: 4219, column: 39, scope: !6529)
!6538 = !DILocation(line: 4219, column: 22, scope: !6529)
!6539 = !DILocation(line: 4220, column: 11, scope: !6530)
!6540 = !DILocation(line: 4221, column: 24, scope: !6525)
!6541 = !DILocation(line: 4221, column: 22, scope: !6525)
!6542 = !DILocation(line: 4222, column: 9, scope: !6525)
!6543 = !DILocation(line: 4223, column: 17, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6520, file: !1, line: 4223, column: 17)
!6545 = !DILocation(line: 4223, column: 28, scope: !6544)
!6546 = !DILocation(line: 4223, column: 17, scope: !6520)
!6547 = !DILocation(line: 4224, column: 16, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !1, line: 4224, column: 16)
!6549 = distinct !DILexicalBlock(scope: !6544, file: !1, line: 4224, column: 9)
!6550 = !DILocation(line: 4224, column: 24, scope: !6548)
!6551 = !DILocation(line: 4224, column: 16, scope: !6549)
!6552 = !DILocation(line: 4225, column: 37, scope: !6548)
!6553 = !DILocation(line: 4225, column: 20, scope: !6548)
!6554 = !DILocation(line: 4225, column: 13, scope: !6548)
!6555 = !DILocation(line: 4226, column: 24, scope: !6549)
!6556 = !DILocation(line: 4226, column: 22, scope: !6549)
!6557 = !DILocation(line: 4227, column: 34, scope: !6549)
!6558 = !DILocation(line: 4227, column: 22, scope: !6549)
!6559 = !DILocation(line: 4228, column: 9, scope: !6549)
!6560 = !DILocation(line: 4237, column: 16, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 4237, column: 16)
!6562 = distinct !DILexicalBlock(scope: !6544, file: !1, line: 4230, column: 9)
!6563 = !DILocation(line: 4237, column: 24, scope: !6561)
!6564 = !DILocation(line: 4237, column: 16, scope: !6562)
!6565 = !DILocation(line: 4238, column: 37, scope: !6561)
!6566 = !DILocation(line: 4239, column: 64, scope: !6561)
!6567 = !DILocation(line: 4239, column: 18, scope: !6561)
!6568 = !DILocation(line: 4238, column: 20, scope: !6561)
!6569 = !DILocation(line: 4238, column: 13, scope: !6561)
!6570 = !DILocation(line: 4240, column: 40, scope: !6562)
!6571 = !DILocation(line: 4241, column: 31, scope: !6562)
!6572 = !DILocation(line: 4241, column: 39, scope: !6562)
!6573 = !DILocation(line: 4241, column: 57, scope: !6562)
!6574 = !DILocation(line: 4242, column: 16, scope: !6562)
!6575 = !DILocation(line: 4240, column: 18, scope: !6562)
!6576 = !DILocation(line: 4243, column: 37, scope: !6562)
!6577 = !DILocation(line: 4243, column: 24, scope: !6562)
!6578 = !DILocation(line: 4243, column: 22, scope: !6562)
!6579 = !DILocation(line: 4244, column: 34, scope: !6562)
!6580 = !DILocation(line: 4244, column: 22, scope: !6562)
!6581 = !DILocation(line: 4246, column: 12, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4246, column: 12)
!6583 = !DILocation(line: 4246, column: 20, scope: !6582)
!6584 = !DILocation(line: 4246, column: 12, scope: !6219)
!6585 = !DILocation(line: 4247, column: 33, scope: !6582)
!6586 = !DILocation(line: 4247, column: 16, scope: !6582)
!6587 = !DILocation(line: 4247, column: 9, scope: !6582)
!6588 = !DILocation(line: 4250, column: 21, scope: !6219)
!6589 = !DILocation(line: 4250, column: 34, scope: !6219)
!6590 = !DILocation(line: 4250, column: 19, scope: !6219)
!6591 = !DILocation(line: 4251, column: 12, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 4251, column: 12)
!6593 = !DILocation(line: 4251, column: 24, scope: !6592)
!6594 = !DILocation(line: 4251, column: 12, scope: !6219)
!6595 = !DILocation(line: 4252, column: 23, scope: !6592)
!6596 = !DILocation(line: 4252, column: 36, scope: !6592)
!6597 = !DILocation(line: 4252, column: 21, scope: !6592)
!6598 = !DILocation(line: 4252, column: 9, scope: !6592)
!6599 = !DILocation(line: 4253, column: 20, scope: !6219)
!6600 = distinct !{!6600, !6215, !6601}
!6601 = !DILocation(line: 4254, column: 5, scope: !6206)
!6602 = distinct !{!6602, !6197, !6603}
!6603 = !DILocation(line: 4256, column: 3, scope: !5970)
!6604 = !DILocation(line: 4258, column: 3, scope: !5970)
!6605 = !DILabel(scope: !5970, name: "error_cleanup", file: !1, line: 4261)
!6606 = !DILocation(line: 4261, column: 1, scope: !5970)
!6607 = !DILocation(line: 4262, column: 8, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4262, column: 8)
!6609 = !DILocation(line: 4262, column: 22, scope: !6608)
!6610 = !DILocation(line: 4262, column: 19, scope: !6608)
!6611 = !DILocation(line: 4262, column: 8, scope: !5970)
!6612 = !DILocation(line: 4263, column: 16, scope: !6608)
!6613 = !DILocation(line: 4263, column: 5, scope: !6608)
!6614 = !DILocation(line: 4264, column: 8, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4264, column: 8)
!6616 = !DILocation(line: 4264, column: 19, scope: !6615)
!6617 = !DILocation(line: 4264, column: 8, scope: !5970)
!6618 = !DILocation(line: 4265, column: 31, scope: !6615)
!6619 = !DILocation(line: 4265, column: 18, scope: !6615)
!6620 = !DILocation(line: 4265, column: 16, scope: !6615)
!6621 = !DILocation(line: 4265, column: 5, scope: !6615)
!6622 = !DILocation(line: 4264, column: 32, scope: !6615)
!6623 = !DILabel(scope: !5970, name: "exit_cleanup", file: !1, line: 4266)
!6624 = !DILocation(line: 4266, column: 1, scope: !5970)
!6625 = !DILocation(line: 4267, column: 8, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4267, column: 8)
!6627 = !DILocation(line: 4267, column: 22, scope: !6626)
!6628 = !DILocation(line: 4267, column: 19, scope: !6626)
!6629 = !DILocation(line: 4267, column: 33, scope: !6626)
!6630 = !DILocation(line: 4267, column: 36, scope: !6626)
!6631 = !DILocation(line: 4267, column: 50, scope: !6626)
!6632 = !DILocation(line: 4267, column: 47, scope: !6626)
!6633 = !DILocation(line: 4267, column: 8, scope: !5970)
!6634 = !DILocation(line: 4268, column: 16, scope: !6626)
!6635 = !DILocation(line: 4268, column: 5, scope: !6626)
!6636 = !DILocation(line: 4269, column: 8, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4269, column: 8)
!6638 = !DILocation(line: 4269, column: 19, scope: !6637)
!6639 = !DILocation(line: 4269, column: 8, scope: !5970)
!6640 = !DILocation(line: 4270, column: 31, scope: !6637)
!6641 = !DILocation(line: 4270, column: 18, scope: !6637)
!6642 = !DILocation(line: 4270, column: 16, scope: !6637)
!6643 = !DILocation(line: 4270, column: 5, scope: !6637)
!6644 = !DILocation(line: 4271, column: 8, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4271, column: 8)
!6646 = !DILocation(line: 4271, column: 19, scope: !6645)
!6647 = !DILocation(line: 4271, column: 8, scope: !5970)
!6648 = !DILocation(line: 4272, column: 31, scope: !6645)
!6649 = !DILocation(line: 4272, column: 18, scope: !6645)
!6650 = !DILocation(line: 4272, column: 16, scope: !6645)
!6651 = !DILocation(line: 4272, column: 5, scope: !6645)
!6652 = !DILocation(line: 4273, column: 8, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4273, column: 8)
!6654 = !DILocation(line: 4273, column: 19, scope: !6653)
!6655 = !DILocation(line: 4273, column: 8, scope: !5970)
!6656 = !DILocation(line: 4274, column: 31, scope: !6653)
!6657 = !DILocation(line: 4274, column: 18, scope: !6653)
!6658 = !DILocation(line: 4274, column: 16, scope: !6653)
!6659 = !DILocation(line: 4274, column: 5, scope: !6653)
!6660 = !DILocation(line: 4275, column: 8, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 4275, column: 8)
!6662 = !DILocation(line: 4275, column: 25, scope: !6661)
!6663 = !DILocation(line: 4275, column: 8, scope: !5970)
!6664 = !DILocation(line: 4276, column: 42, scope: !6661)
!6665 = !DILocation(line: 4276, column: 24, scope: !6661)
!6666 = !DILocation(line: 4276, column: 22, scope: !6661)
!6667 = !DILocation(line: 4276, column: 5, scope: !6661)
!6668 = !DILocation(line: 4277, column: 10, scope: !5970)
!6669 = !DILocation(line: 4277, column: 3, scope: !5970)
!6670 = !DILocation(line: 4278, column: 1, scope: !5970)
!6671 = distinct !DISubprogram(name: "MorphologyPrimitiveDirect", scope: !1, file: !1, line: 3378, type: !6672, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{!609, !627, !5976, !5975, !5885, !5980}
!6674 = !DILocalVariable(name: "image", arg: 1, scope: !6671, file: !1, line: 3378, type: !627)
!6675 = !DILocation(line: 3378, column: 49, scope: !6671)
!6676 = !DILocalVariable(name: "method", arg: 2, scope: !6671, file: !1, line: 3379, type: !5976)
!6677 = !DILocation(line: 3379, column: 29, scope: !6671)
!6678 = !DILocalVariable(name: "channel", arg: 3, scope: !6671, file: !1, line: 3379, type: !5975)
!6679 = !DILocation(line: 3379, column: 55, scope: !6671)
!6680 = !DILocalVariable(name: "kernel", arg: 4, scope: !6671, file: !1, line: 3380, type: !5885)
!6681 = !DILocation(line: 3380, column: 24, scope: !6671)
!6682 = !DILocalVariable(name: "exception", arg: 5, scope: !6671, file: !1, line: 3380, type: !5980)
!6683 = !DILocation(line: 3380, column: 46, scope: !6671)
!6684 = !DILocalVariable(name: "auth_view", scope: !6671, file: !1, line: 3383, type: !6685)
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 64)
!6686 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !6687, line: 50, baseType: !6688)
!6687 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !410, line: 160, flags: DIFlagFwdDecl)
!6689 = !DILocation(line: 3383, column: 6, scope: !6671)
!6690 = !DILocalVariable(name: "virt_view", scope: !6671, file: !1, line: 3384, type: !6685)
!6691 = !DILocation(line: 3384, column: 6, scope: !6671)
!6692 = !DILocalVariable(name: "status", scope: !6671, file: !1, line: 3387, type: !641)
!6693 = !DILocation(line: 3387, column: 5, scope: !6671)
!6694 = !DILocalVariable(name: "progress", scope: !6671, file: !1, line: 3390, type: !749)
!6695 = !DILocation(line: 3390, column: 5, scope: !6671)
!6696 = !DILocalVariable(name: "y", scope: !6671, file: !1, line: 3393, type: !609)
!6697 = !DILocation(line: 3393, column: 5, scope: !6671)
!6698 = !DILocalVariable(name: "offx", scope: !6671, file: !1, line: 3393, type: !609)
!6699 = !DILocation(line: 3393, column: 8, scope: !6671)
!6700 = !DILocalVariable(name: "offy", scope: !6671, file: !1, line: 3393, type: !609)
!6701 = !DILocation(line: 3393, column: 14, scope: !6671)
!6702 = !DILocalVariable(name: "changed", scope: !6671, file: !1, line: 3396, type: !604)
!6703 = !DILocation(line: 3396, column: 5, scope: !6671)
!6704 = !DILocalVariable(name: "virt_width", scope: !6671, file: !1, line: 3397, type: !604)
!6705 = !DILocation(line: 3397, column: 5, scope: !6671)
!6706 = !DILocation(line: 3399, column: 9, scope: !6671)
!6707 = !DILocation(line: 3400, column: 10, scope: !6671)
!6708 = !DILocation(line: 3401, column: 11, scope: !6671)
!6709 = !DILocation(line: 3413, column: 10, scope: !6671)
!6710 = !DILocation(line: 3413, column: 18, scope: !6671)
!6711 = !DILocation(line: 3413, column: 8, scope: !6671)
!6712 = !DILocation(line: 3414, column: 10, scope: !6671)
!6713 = !DILocation(line: 3414, column: 18, scope: !6671)
!6714 = !DILocation(line: 3414, column: 8, scope: !6671)
!6715 = !DILocation(line: 3415, column: 10, scope: !6671)
!6716 = !DILocation(line: 3415, column: 3, scope: !6671)
!6717 = !DILocation(line: 3419, column: 24, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6671, file: !1, line: 3415, column: 18)
!6719 = !DILocation(line: 3419, column: 32, scope: !6718)
!6720 = !DILocation(line: 3419, column: 38, scope: !6718)
!6721 = !DILocation(line: 3419, column: 37, scope: !6718)
!6722 = !DILocation(line: 3419, column: 42, scope: !6718)
!6723 = !DILocation(line: 3419, column: 12, scope: !6718)
!6724 = !DILocation(line: 3420, column: 24, scope: !6718)
!6725 = !DILocation(line: 3420, column: 32, scope: !6718)
!6726 = !DILocation(line: 3420, column: 39, scope: !6718)
!6727 = !DILocation(line: 3420, column: 38, scope: !6718)
!6728 = !DILocation(line: 3420, column: 43, scope: !6718)
!6729 = !DILocation(line: 3420, column: 12, scope: !6718)
!6730 = !DILocation(line: 3421, column: 7, scope: !6718)
!6731 = !DILocation(line: 3429, column: 7, scope: !6718)
!6732 = !DILocation(line: 3434, column: 37, scope: !6671)
!6733 = !DILocation(line: 3434, column: 43, scope: !6671)
!6734 = !DILocation(line: 3434, column: 13, scope: !6671)
!6735 = !DILocation(line: 3434, column: 12, scope: !6671)
!6736 = !DILocation(line: 3435, column: 39, scope: !6671)
!6737 = !DILocation(line: 3435, column: 45, scope: !6671)
!6738 = !DILocation(line: 3435, column: 13, scope: !6671)
!6739 = !DILocation(line: 3435, column: 12, scope: !6671)
!6740 = !DILocation(line: 3436, column: 14, scope: !6671)
!6741 = !DILocation(line: 3436, column: 21, scope: !6671)
!6742 = !DILocation(line: 3436, column: 29, scope: !6671)
!6743 = !DILocation(line: 3436, column: 37, scope: !6671)
!6744 = !DILocation(line: 3436, column: 28, scope: !6671)
!6745 = !DILocation(line: 3436, column: 42, scope: !6671)
!6746 = !DILocation(line: 3436, column: 13, scope: !6671)
!6747 = !DILocation(line: 3438, column: 9, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6671, file: !1, line: 3438, column: 3)
!6749 = !DILocation(line: 3438, column: 8, scope: !6748)
!6750 = !DILocation(line: 3438, column: 13, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6748, file: !1, line: 3438, column: 3)
!6752 = !DILocation(line: 3438, column: 27, scope: !6751)
!6753 = !DILocation(line: 3438, column: 34, scope: !6751)
!6754 = !DILocation(line: 3438, column: 15, scope: !6751)
!6755 = !DILocation(line: 3438, column: 3, scope: !6748)
!6756 = !DILocalVariable(name: "p", scope: !6757, file: !1, line: 3441, type: !6758)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 3439, column: 3)
!6758 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !835)
!6759 = !DILocation(line: 3441, column: 17, scope: !6757)
!6760 = !DILocalVariable(name: "p_indexes", scope: !6757, file: !1, line: 3444, type: !6761)
!6761 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !837)
!6762 = !DILocation(line: 3444, column: 17, scope: !6757)
!6763 = !DILocalVariable(name: "q", scope: !6757, file: !1, line: 3447, type: !6764)
!6764 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !648)
!6765 = !DILocation(line: 3447, column: 17, scope: !6757)
!6766 = !DILocalVariable(name: "q_indexes", scope: !6757, file: !1, line: 3450, type: !6767)
!6767 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !840)
!6768 = !DILocation(line: 3450, column: 17, scope: !6757)
!6769 = !DILocalVariable(name: "x", scope: !6757, file: !1, line: 3453, type: !609)
!6770 = !DILocation(line: 3453, column: 7, scope: !6757)
!6771 = !DILocalVariable(name: "r", scope: !6757, file: !1, line: 3456, type: !609)
!6772 = !DILocation(line: 3456, column: 7, scope: !6757)
!6773 = !DILocation(line: 3465, column: 9, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3465, column: 9)
!6775 = !DILocation(line: 3465, column: 16, scope: !6774)
!6776 = !DILocation(line: 3465, column: 9, scope: !6757)
!6777 = !DILocation(line: 3466, column: 7, scope: !6774)
!6778 = !DILocation(line: 3467, column: 33, scope: !6757)
!6779 = !DILocation(line: 3467, column: 45, scope: !6757)
!6780 = !DILocation(line: 3467, column: 44, scope: !6757)
!6781 = !DILocation(line: 3467, column: 52, scope: !6757)
!6782 = !DILocation(line: 3467, column: 54, scope: !6757)
!6783 = !DILocation(line: 3467, column: 53, scope: !6757)
!6784 = !DILocation(line: 3467, column: 60, scope: !6757)
!6785 = !DILocation(line: 3467, column: 81, scope: !6757)
!6786 = !DILocation(line: 3467, column: 85, scope: !6757)
!6787 = !DILocation(line: 3468, column: 10, scope: !6757)
!6788 = !DILocation(line: 3467, column: 7, scope: !6757)
!6789 = !DILocation(line: 3467, column: 6, scope: !6757)
!6790 = !DILocation(line: 3469, column: 35, scope: !6757)
!6791 = !DILocation(line: 3469, column: 49, scope: !6757)
!6792 = !DILocation(line: 3469, column: 52, scope: !6757)
!6793 = !DILocation(line: 3469, column: 59, scope: !6757)
!6794 = !DILocation(line: 3470, column: 10, scope: !6757)
!6795 = !DILocation(line: 3469, column: 7, scope: !6757)
!6796 = !DILocation(line: 3469, column: 6, scope: !6757)
!6797 = !DILocation(line: 3471, column: 10, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3471, column: 9)
!6799 = !DILocation(line: 3471, column: 12, scope: !6798)
!6800 = !DILocation(line: 3471, column: 43, scope: !6798)
!6801 = !DILocation(line: 3471, column: 47, scope: !6798)
!6802 = !DILocation(line: 3471, column: 49, scope: !6798)
!6803 = !DILocation(line: 3471, column: 9, scope: !6757)
!6804 = !DILocation(line: 3472, column: 13, scope: !6798)
!6805 = !DILocation(line: 3472, column: 7, scope: !6798)
!6806 = !DILocation(line: 3473, column: 9, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3473, column: 9)
!6808 = !DILocation(line: 3473, column: 16, scope: !6807)
!6809 = !DILocation(line: 3473, column: 9, scope: !6757)
!6810 = !DILocation(line: 3474, column: 7, scope: !6807)
!6811 = !DILocation(line: 3475, column: 45, scope: !6757)
!6812 = !DILocation(line: 3475, column: 15, scope: !6757)
!6813 = !DILocation(line: 3475, column: 14, scope: !6757)
!6814 = !DILocation(line: 3476, column: 47, scope: !6757)
!6815 = !DILocation(line: 3476, column: 15, scope: !6757)
!6816 = !DILocation(line: 3476, column: 14, scope: !6757)
!6817 = !DILocation(line: 3479, column: 19, scope: !6757)
!6818 = !DILocation(line: 3479, column: 30, scope: !6757)
!6819 = !DILocation(line: 3479, column: 29, scope: !6757)
!6820 = !DILocation(line: 3479, column: 37, scope: !6757)
!6821 = !DILocation(line: 3479, column: 35, scope: !6757)
!6822 = !DILocation(line: 3479, column: 7, scope: !6757)
!6823 = !DILocation(line: 3481, column: 11, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3481, column: 5)
!6825 = !DILocation(line: 3481, column: 10, scope: !6824)
!6826 = !DILocation(line: 3481, column: 15, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 3481, column: 5)
!6828 = !DILocation(line: 3481, column: 29, scope: !6827)
!6829 = !DILocation(line: 3481, column: 36, scope: !6827)
!6830 = !DILocation(line: 3481, column: 17, scope: !6827)
!6831 = !DILocation(line: 3481, column: 5, scope: !6824)
!6832 = !DILocalVariable(name: "v", scope: !6833, file: !1, line: 3484, type: !609)
!6833 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 3482, column: 5)
!6834 = !DILocation(line: 3484, column: 9, scope: !6833)
!6835 = !DILocalVariable(name: "u", scope: !6833, file: !1, line: 3487, type: !609)
!6836 = !DILocation(line: 3487, column: 9, scope: !6833)
!6837 = !DILocalVariable(name: "k", scope: !6833, file: !1, line: 3490, type: !6838)
!6838 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !6839)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!6840 = !DILocation(line: 3490, column: 19, scope: !6833)
!6841 = !DILocalVariable(name: "k_pixels", scope: !6833, file: !1, line: 3493, type: !6758)
!6842 = !DILocation(line: 3493, column: 19, scope: !6833)
!6843 = !DILocalVariable(name: "k_indexes", scope: !6833, file: !1, line: 3496, type: !6761)
!6844 = !DILocation(line: 3496, column: 19, scope: !6833)
!6845 = !DILocalVariable(name: "result", scope: !6833, file: !1, line: 3499, type: !6846)
!6846 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !410, line: 127, baseType: !6847)
!6847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !410, line: 104, size: 448, elements: !6848)
!6848 = !{!6849, !6850, !6851, !6852, !6853, !6854, !6855, !6856, !6857, !6858}
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !6847, file: !410, line: 107, baseType: !632, size: 32)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !6847, file: !410, line: 110, baseType: !634, size: 32, offset: 32)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !6847, file: !410, line: 113, baseType: !641, size: 32, offset: 64)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !6847, file: !410, line: 116, baseType: !617, size: 64, offset: 128)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6847, file: !410, line: 119, baseType: !604, size: 64, offset: 192)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !6847, file: !410, line: 122, baseType: !841, size: 32, offset: 256)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !6847, file: !410, line: 123, baseType: !841, size: 32, offset: 288)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !6847, file: !410, line: 124, baseType: !841, size: 32, offset: 320)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !6847, file: !410, line: 125, baseType: !841, size: 32, offset: 352)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6847, file: !410, line: 126, baseType: !841, size: 32, offset: 384)
!6859 = !DILocation(line: 3499, column: 9, scope: !6833)
!6860 = !DILocation(line: 3502, column: 28, scope: !6833)
!6861 = !DILocation(line: 3502, column: 7, scope: !6833)
!6862 = !DILocation(line: 3503, column: 28, scope: !6833)
!6863 = !DILocation(line: 3503, column: 34, scope: !6833)
!6864 = !DILocation(line: 3503, column: 36, scope: !6833)
!6865 = !DILocation(line: 3503, column: 7, scope: !6833)
!6866 = !DILocation(line: 3504, column: 12, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 3504, column: 12)
!6868 = !DILocation(line: 3504, column: 19, scope: !6867)
!6869 = !DILocation(line: 3504, column: 12, scope: !6833)
!6870 = !DILocation(line: 3505, column: 48, scope: !6867)
!6871 = !DILocation(line: 3505, column: 39, scope: !6867)
!6872 = !DILocation(line: 3505, column: 16, scope: !6867)
!6873 = !DILocation(line: 3505, column: 24, scope: !6867)
!6874 = !DILocation(line: 3505, column: 9, scope: !6867)
!6875 = !DILocation(line: 3507, column: 16, scope: !6833)
!6876 = !DILocation(line: 3507, column: 7, scope: !6833)
!6877 = !DILocation(line: 3510, column: 18, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 3507, column: 25)
!6879 = !DILocation(line: 3510, column: 26, scope: !6878)
!6880 = !DILocation(line: 3510, column: 34, scope: !6878)
!6881 = !DILocation(line: 3510, column: 42, scope: !6878)
!6882 = !DILocation(line: 3510, column: 48, scope: !6878)
!6883 = !DILocation(line: 3510, column: 56, scope: !6878)
!6884 = !DILocation(line: 3510, column: 47, scope: !6878)
!6885 = !DILocation(line: 3510, column: 62, scope: !6878)
!6886 = !DILocation(line: 3510, column: 15, scope: !6878)
!6887 = !DILocation(line: 3511, column: 24, scope: !6878)
!6888 = !DILocation(line: 3511, column: 22, scope: !6878)
!6889 = !DILocation(line: 3512, column: 25, scope: !6878)
!6890 = !DILocation(line: 3512, column: 23, scope: !6878)
!6891 = !DILocation(line: 3513, column: 19, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 3513, column: 13)
!6893 = !DILocation(line: 3513, column: 18, scope: !6892)
!6894 = !DILocation(line: 3513, column: 23, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6892, file: !1, line: 3513, column: 13)
!6896 = !DILocation(line: 3513, column: 38, scope: !6895)
!6897 = !DILocation(line: 3513, column: 25, scope: !6895)
!6898 = !DILocation(line: 3513, column: 13, scope: !6892)
!6899 = !DILocation(line: 3514, column: 21, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !1, line: 3514, column: 15)
!6901 = distinct !DILexicalBlock(scope: !6895, file: !1, line: 3513, column: 49)
!6902 = !DILocation(line: 3514, column: 20, scope: !6900)
!6903 = !DILocation(line: 3514, column: 25, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !1, line: 3514, column: 15)
!6905 = !DILocation(line: 3514, column: 39, scope: !6904)
!6906 = !DILocation(line: 3514, column: 47, scope: !6904)
!6907 = !DILocation(line: 3514, column: 27, scope: !6904)
!6908 = !DILocation(line: 3514, column: 15, scope: !6900)
!6909 = !DILocation(line: 3515, column: 22, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 3515, column: 22)
!6911 = distinct !DILexicalBlock(scope: !6904, file: !1, line: 3514, column: 64)
!6912 = !DILocation(line: 3515, column: 22, scope: !6911)
!6913 = !DILocation(line: 3515, column: 34, scope: !6910)
!6914 = !DILocation(line: 3516, column: 17, scope: !6911)
!6915 = !DILocation(line: 3517, column: 17, scope: !6911)
!6916 = !DILocation(line: 3518, column: 17, scope: !6911)
!6917 = !DILocation(line: 3519, column: 17, scope: !6911)
!6918 = !DILocation(line: 3520, column: 22, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 3520, column: 22)
!6920 = !DILocation(line: 3520, column: 29, scope: !6919)
!6921 = !DILocation(line: 3520, column: 40, scope: !6919)
!6922 = !DILocation(line: 3520, column: 22, scope: !6911)
!6923 = !DILocation(line: 3521, column: 19, scope: !6919)
!6924 = !DILocation(line: 3522, column: 15, scope: !6911)
!6925 = !DILocation(line: 3514, column: 55, scope: !6904)
!6926 = !DILocation(line: 3514, column: 60, scope: !6904)
!6927 = !DILocation(line: 3514, column: 15, scope: !6904)
!6928 = distinct !{!6928, !6908, !6929}
!6929 = !DILocation(line: 3522, column: 15, scope: !6900)
!6930 = !DILocation(line: 3523, column: 27, scope: !6901)
!6931 = !DILocation(line: 3523, column: 24, scope: !6901)
!6932 = !DILocation(line: 3524, column: 28, scope: !6901)
!6933 = !DILocation(line: 3524, column: 25, scope: !6901)
!6934 = !DILocation(line: 3525, column: 13, scope: !6901)
!6935 = !DILocation(line: 3513, column: 45, scope: !6895)
!6936 = !DILocation(line: 3513, column: 13, scope: !6895)
!6937 = distinct !{!6937, !6898, !6938}
!6938 = !DILocation(line: 3525, column: 13, scope: !6892)
!6939 = !DILocation(line: 3527, column: 18, scope: !6878)
!6940 = !DILocation(line: 3527, column: 26, scope: !6878)
!6941 = !DILocation(line: 3527, column: 34, scope: !6878)
!6942 = !DILocation(line: 3527, column: 42, scope: !6878)
!6943 = !DILocation(line: 3527, column: 49, scope: !6878)
!6944 = !DILocation(line: 3527, column: 57, scope: !6878)
!6945 = !DILocation(line: 3527, column: 58, scope: !6878)
!6946 = !DILocation(line: 3527, column: 47, scope: !6878)
!6947 = !DILocation(line: 3527, column: 61, scope: !6878)
!6948 = !DILocation(line: 3527, column: 15, scope: !6878)
!6949 = !DILocation(line: 3528, column: 24, scope: !6878)
!6950 = !DILocation(line: 3528, column: 26, scope: !6878)
!6951 = !DILocation(line: 3528, column: 25, scope: !6878)
!6952 = !DILocation(line: 3528, column: 22, scope: !6878)
!6953 = !DILocation(line: 3529, column: 25, scope: !6878)
!6954 = !DILocation(line: 3529, column: 35, scope: !6878)
!6955 = !DILocation(line: 3529, column: 34, scope: !6878)
!6956 = !DILocation(line: 3529, column: 23, scope: !6878)
!6957 = !DILocation(line: 3530, column: 21, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 3530, column: 15)
!6959 = !DILocation(line: 3530, column: 20, scope: !6958)
!6960 = !DILocation(line: 3530, column: 25, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !1, line: 3530, column: 15)
!6962 = !DILocation(line: 3530, column: 39, scope: !6961)
!6963 = !DILocation(line: 3530, column: 27, scope: !6961)
!6964 = !DILocation(line: 3530, column: 15, scope: !6958)
!6965 = !DILocation(line: 3531, column: 22, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !1, line: 3531, column: 22)
!6967 = distinct !DILexicalBlock(scope: !6961, file: !1, line: 3530, column: 55)
!6968 = !DILocation(line: 3531, column: 24, scope: !6966)
!6969 = !DILocation(line: 3531, column: 23, scope: !6966)
!6970 = !DILocation(line: 3531, column: 26, scope: !6966)
!6971 = !DILocation(line: 3531, column: 25, scope: !6966)
!6972 = !DILocation(line: 3531, column: 31, scope: !6966)
!6973 = !DILocation(line: 3531, column: 22, scope: !6967)
!6974 = !DILocation(line: 3531, column: 37, scope: !6966)
!6975 = !DILocation(line: 3532, column: 22, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6967, file: !1, line: 3532, column: 22)
!6977 = !DILocation(line: 3532, column: 22, scope: !6967)
!6978 = !DILocation(line: 3532, column: 34, scope: !6976)
!6979 = !DILocation(line: 3533, column: 17, scope: !6967)
!6980 = !DILocation(line: 3534, column: 17, scope: !6967)
!6981 = !DILocation(line: 3535, column: 17, scope: !6967)
!6982 = !DILocation(line: 3536, column: 17, scope: !6967)
!6983 = !DILocation(line: 3537, column: 22, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6967, file: !1, line: 3537, column: 22)
!6985 = !DILocation(line: 3537, column: 29, scope: !6984)
!6986 = !DILocation(line: 3537, column: 40, scope: !6984)
!6987 = !DILocation(line: 3537, column: 22, scope: !6967)
!6988 = !DILocation(line: 3538, column: 19, scope: !6984)
!6989 = !DILocation(line: 3539, column: 15, scope: !6967)
!6990 = !DILocation(line: 3530, column: 46, scope: !6961)
!6991 = !DILocation(line: 3530, column: 51, scope: !6961)
!6992 = !DILocation(line: 3530, column: 15, scope: !6961)
!6993 = distinct !{!6993, !6964, !6994}
!6994 = !DILocation(line: 3539, column: 15, scope: !6958)
!6995 = !DILocation(line: 3540, column: 13, scope: !6878)
!6996 = !DILocation(line: 3549, column: 18, scope: !6878)
!6997 = !DILocation(line: 3549, column: 26, scope: !6878)
!6998 = !DILocation(line: 3549, column: 34, scope: !6878)
!6999 = !DILocation(line: 3549, column: 42, scope: !6878)
!7000 = !DILocation(line: 3549, column: 48, scope: !6878)
!7001 = !DILocation(line: 3549, column: 56, scope: !6878)
!7002 = !DILocation(line: 3549, column: 47, scope: !6878)
!7003 = !DILocation(line: 3549, column: 62, scope: !6878)
!7004 = !DILocation(line: 3549, column: 15, scope: !6878)
!7005 = !DILocation(line: 3550, column: 24, scope: !6878)
!7006 = !DILocation(line: 3550, column: 22, scope: !6878)
!7007 = !DILocation(line: 3551, column: 25, scope: !6878)
!7008 = !DILocation(line: 3551, column: 23, scope: !6878)
!7009 = !DILocation(line: 3552, column: 19, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 3552, column: 13)
!7011 = !DILocation(line: 3552, column: 18, scope: !7010)
!7012 = !DILocation(line: 3552, column: 23, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7010, file: !1, line: 3552, column: 13)
!7014 = !DILocation(line: 3552, column: 38, scope: !7013)
!7015 = !DILocation(line: 3552, column: 25, scope: !7013)
!7016 = !DILocation(line: 3552, column: 13, scope: !7010)
!7017 = !DILocation(line: 3553, column: 21, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !1, line: 3553, column: 15)
!7019 = distinct !DILexicalBlock(scope: !7013, file: !1, line: 3552, column: 49)
!7020 = !DILocation(line: 3553, column: 20, scope: !7018)
!7021 = !DILocation(line: 3553, column: 25, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !1, line: 3553, column: 15)
!7023 = !DILocation(line: 3553, column: 39, scope: !7022)
!7024 = !DILocation(line: 3553, column: 47, scope: !7022)
!7025 = !DILocation(line: 3553, column: 27, scope: !7022)
!7026 = !DILocation(line: 3553, column: 15, scope: !7018)
!7027 = !DILocation(line: 3554, column: 22, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3554, column: 22)
!7029 = distinct !DILexicalBlock(scope: !7022, file: !1, line: 3553, column: 64)
!7030 = !DILocation(line: 3554, column: 22, scope: !7029)
!7031 = !DILocation(line: 3554, column: 34, scope: !7028)
!7032 = !DILocation(line: 3555, column: 28, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3555, column: 21)
!7034 = !DILocation(line: 3555, column: 21, scope: !7033)
!7035 = !DILocation(line: 3555, column: 40, scope: !7033)
!7036 = !DILocation(line: 3555, column: 39, scope: !7033)
!7037 = !DILocation(line: 3555, column: 43, scope: !7033)
!7038 = !DILocation(line: 3555, column: 52, scope: !7033)
!7039 = !DILocation(line: 3555, column: 55, scope: !7033)
!7040 = !DILocation(line: 3555, column: 42, scope: !7033)
!7041 = !DILocation(line: 3555, column: 36, scope: !7033)
!7042 = !DILocation(line: 3555, column: 21, scope: !7029)
!7043 = !DILocation(line: 3557, column: 42, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7033, file: !1, line: 3556, column: 19)
!7045 = !DILocation(line: 3557, column: 49, scope: !7044)
!7046 = !DILocation(line: 3557, column: 58, scope: !7044)
!7047 = !DILocation(line: 3557, column: 62, scope: !7044)
!7048 = !DILocation(line: 3557, column: 72, scope: !7044)
!7049 = !DILocation(line: 3557, column: 21, scope: !7044)
!7050 = !DILocation(line: 3559, column: 40, scope: !7044)
!7051 = !DILocation(line: 3559, column: 39, scope: !7044)
!7052 = !DILocation(line: 3559, column: 28, scope: !7044)
!7053 = !DILocation(line: 3559, column: 36, scope: !7044)
!7054 = !DILocation(line: 3560, column: 19, scope: !7044)
!7055 = !DILocation(line: 3561, column: 15, scope: !7029)
!7056 = !DILocation(line: 3553, column: 55, scope: !7022)
!7057 = !DILocation(line: 3553, column: 60, scope: !7022)
!7058 = !DILocation(line: 3553, column: 15, scope: !7022)
!7059 = distinct !{!7059, !7026, !7060}
!7060 = !DILocation(line: 3561, column: 15, scope: !7018)
!7061 = !DILocation(line: 3562, column: 27, scope: !7019)
!7062 = !DILocation(line: 3562, column: 24, scope: !7019)
!7063 = !DILocation(line: 3563, column: 28, scope: !7019)
!7064 = !DILocation(line: 3563, column: 25, scope: !7019)
!7065 = !DILocation(line: 3564, column: 13, scope: !7019)
!7066 = !DILocation(line: 3552, column: 45, scope: !7013)
!7067 = !DILocation(line: 3552, column: 13, scope: !7013)
!7068 = distinct !{!7068, !7016, !7069}
!7069 = !DILocation(line: 3564, column: 13, scope: !7010)
!7070 = !DILocation(line: 3566, column: 18, scope: !6878)
!7071 = !DILocation(line: 3566, column: 26, scope: !6878)
!7072 = !DILocation(line: 3566, column: 34, scope: !6878)
!7073 = !DILocation(line: 3566, column: 42, scope: !6878)
!7074 = !DILocation(line: 3566, column: 49, scope: !6878)
!7075 = !DILocation(line: 3566, column: 57, scope: !6878)
!7076 = !DILocation(line: 3566, column: 58, scope: !6878)
!7077 = !DILocation(line: 3566, column: 47, scope: !6878)
!7078 = !DILocation(line: 3566, column: 61, scope: !6878)
!7079 = !DILocation(line: 3566, column: 15, scope: !6878)
!7080 = !DILocation(line: 3567, column: 24, scope: !6878)
!7081 = !DILocation(line: 3567, column: 26, scope: !6878)
!7082 = !DILocation(line: 3567, column: 25, scope: !6878)
!7083 = !DILocation(line: 3567, column: 22, scope: !6878)
!7084 = !DILocation(line: 3568, column: 25, scope: !6878)
!7085 = !DILocation(line: 3568, column: 35, scope: !6878)
!7086 = !DILocation(line: 3568, column: 34, scope: !6878)
!7087 = !DILocation(line: 3568, column: 23, scope: !6878)
!7088 = !DILocation(line: 3569, column: 21, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 3569, column: 15)
!7090 = !DILocation(line: 3569, column: 20, scope: !7089)
!7091 = !DILocation(line: 3569, column: 25, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7089, file: !1, line: 3569, column: 15)
!7093 = !DILocation(line: 3569, column: 39, scope: !7092)
!7094 = !DILocation(line: 3569, column: 27, scope: !7092)
!7095 = !DILocation(line: 3569, column: 15, scope: !7089)
!7096 = !DILocation(line: 3570, column: 22, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !1, line: 3570, column: 22)
!7098 = distinct !DILexicalBlock(scope: !7092, file: !1, line: 3569, column: 55)
!7099 = !DILocation(line: 3570, column: 24, scope: !7097)
!7100 = !DILocation(line: 3570, column: 23, scope: !7097)
!7101 = !DILocation(line: 3570, column: 26, scope: !7097)
!7102 = !DILocation(line: 3570, column: 25, scope: !7097)
!7103 = !DILocation(line: 3570, column: 31, scope: !7097)
!7104 = !DILocation(line: 3570, column: 22, scope: !7098)
!7105 = !DILocation(line: 3570, column: 37, scope: !7097)
!7106 = !DILocation(line: 3571, column: 22, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7098, file: !1, line: 3571, column: 22)
!7108 = !DILocation(line: 3571, column: 22, scope: !7098)
!7109 = !DILocation(line: 3571, column: 34, scope: !7107)
!7110 = !DILocation(line: 3572, column: 28, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7098, file: !1, line: 3572, column: 21)
!7112 = !DILocation(line: 3572, column: 21, scope: !7111)
!7113 = !DILocation(line: 3572, column: 40, scope: !7111)
!7114 = !DILocation(line: 3572, column: 39, scope: !7111)
!7115 = !DILocation(line: 3572, column: 43, scope: !7111)
!7116 = !DILocation(line: 3572, column: 52, scope: !7111)
!7117 = !DILocation(line: 3572, column: 55, scope: !7111)
!7118 = !DILocation(line: 3572, column: 42, scope: !7111)
!7119 = !DILocation(line: 3572, column: 36, scope: !7111)
!7120 = !DILocation(line: 3572, column: 21, scope: !7098)
!7121 = !DILocation(line: 3574, column: 42, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7111, file: !1, line: 3573, column: 19)
!7123 = !DILocation(line: 3574, column: 49, scope: !7122)
!7124 = !DILocation(line: 3574, column: 58, scope: !7122)
!7125 = !DILocation(line: 3574, column: 62, scope: !7122)
!7126 = !DILocation(line: 3574, column: 72, scope: !7122)
!7127 = !DILocation(line: 3574, column: 21, scope: !7122)
!7128 = !DILocation(line: 3576, column: 40, scope: !7122)
!7129 = !DILocation(line: 3576, column: 39, scope: !7122)
!7130 = !DILocation(line: 3576, column: 28, scope: !7122)
!7131 = !DILocation(line: 3576, column: 36, scope: !7122)
!7132 = !DILocation(line: 3577, column: 19, scope: !7122)
!7133 = !DILocation(line: 3578, column: 15, scope: !7098)
!7134 = !DILocation(line: 3569, column: 46, scope: !7092)
!7135 = !DILocation(line: 3569, column: 51, scope: !7092)
!7136 = !DILocation(line: 3569, column: 15, scope: !7092)
!7137 = distinct !{!7137, !7095, !7138}
!7138 = !DILocation(line: 3578, column: 15, scope: !7089)
!7139 = !DILocation(line: 3579, column: 13, scope: !6878)
!7140 = !DILocation(line: 3582, column: 11, scope: !6878)
!7141 = !DILocation(line: 3585, column: 16, scope: !6833)
!7142 = !DILocation(line: 3585, column: 7, scope: !6833)
!7143 = !DILocation(line: 3587, column: 26, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 3585, column: 25)
!7145 = !DILocation(line: 3587, column: 40, scope: !7144)
!7146 = !DILocation(line: 3587, column: 42, scope: !7144)
!7147 = !DILocation(line: 3587, column: 11, scope: !7144)
!7148 = !DILocation(line: 3588, column: 11, scope: !7144)
!7149 = !DILocation(line: 3590, column: 16, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7144, file: !1, line: 3590, column: 15)
!7151 = !DILocation(line: 3590, column: 24, scope: !7150)
!7152 = !DILocation(line: 3590, column: 38, scope: !7150)
!7153 = !DILocation(line: 3590, column: 15, scope: !7144)
!7154 = !DILocation(line: 3591, column: 13, scope: !7150)
!7155 = !DILocation(line: 3592, column: 16, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7144, file: !1, line: 3592, column: 15)
!7157 = !DILocation(line: 3592, column: 24, scope: !7156)
!7158 = !DILocation(line: 3592, column: 40, scope: !7156)
!7159 = !DILocation(line: 3592, column: 15, scope: !7144)
!7160 = !DILocation(line: 3593, column: 13, scope: !7156)
!7161 = !DILocation(line: 3594, column: 16, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7144, file: !1, line: 3594, column: 15)
!7163 = !DILocation(line: 3594, column: 24, scope: !7162)
!7164 = !DILocation(line: 3594, column: 39, scope: !7162)
!7165 = !DILocation(line: 3594, column: 15, scope: !7144)
!7166 = !DILocation(line: 3595, column: 13, scope: !7162)
!7167 = !DILocation(line: 3596, column: 17, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7144, file: !1, line: 3596, column: 15)
!7169 = !DILocation(line: 3596, column: 25, scope: !7168)
!7170 = !DILocation(line: 3596, column: 43, scope: !7168)
!7171 = !DILocation(line: 3596, column: 49, scope: !7168)
!7172 = !DILocation(line: 3596, column: 53, scope: !7168)
!7173 = !DILocation(line: 3596, column: 60, scope: !7168)
!7174 = !DILocation(line: 3596, column: 66, scope: !7168)
!7175 = !DILocation(line: 3596, column: 15, scope: !7144)
!7176 = !DILocation(line: 3597, column: 13, scope: !7168)
!7177 = !DILocation(line: 3598, column: 17, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7144, file: !1, line: 3598, column: 15)
!7179 = !DILocation(line: 3598, column: 25, scope: !7178)
!7180 = !DILocation(line: 3598, column: 41, scope: !7178)
!7181 = !DILocation(line: 3598, column: 47, scope: !7178)
!7182 = !DILocation(line: 3599, column: 16, scope: !7178)
!7183 = !DILocation(line: 3599, column: 23, scope: !7178)
!7184 = !DILocation(line: 3599, column: 34, scope: !7178)
!7185 = !DILocation(line: 3598, column: 15, scope: !7144)
!7186 = !DILocation(line: 3600, column: 13, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 3600, column: 13)
!7188 = distinct !DILexicalBlock(scope: !7178, file: !1, line: 3600, column: 13)
!7189 = !DILocation(line: 3600, column: 13, scope: !7188)
!7190 = !DILocation(line: 3601, column: 11, scope: !7144)
!7191 = !DILocation(line: 3604, column: 16, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 3604, column: 14)
!7193 = !DILocation(line: 3604, column: 18, scope: !7192)
!7194 = !DILocation(line: 3604, column: 21, scope: !7192)
!7195 = !DILocation(line: 3604, column: 28, scope: !7192)
!7196 = !DILocation(line: 3604, column: 25, scope: !7192)
!7197 = !DILocation(line: 3605, column: 11, scope: !7192)
!7198 = !DILocation(line: 3605, column: 16, scope: !7192)
!7199 = !DILocation(line: 3605, column: 18, scope: !7192)
!7200 = !DILocation(line: 3605, column: 21, scope: !7192)
!7201 = !DILocation(line: 3605, column: 30, scope: !7192)
!7202 = !DILocation(line: 3605, column: 27, scope: !7192)
!7203 = !DILocation(line: 3606, column: 11, scope: !7192)
!7204 = !DILocation(line: 3606, column: 16, scope: !7192)
!7205 = !DILocation(line: 3606, column: 18, scope: !7192)
!7206 = !DILocation(line: 3606, column: 21, scope: !7192)
!7207 = !DILocation(line: 3606, column: 29, scope: !7192)
!7208 = !DILocation(line: 3606, column: 26, scope: !7192)
!7209 = !DILocation(line: 3607, column: 11, scope: !7192)
!7210 = !DILocation(line: 3607, column: 16, scope: !7192)
!7211 = !DILocation(line: 3607, column: 18, scope: !7192)
!7212 = !DILocation(line: 3607, column: 21, scope: !7192)
!7213 = !DILocation(line: 3607, column: 32, scope: !7192)
!7214 = !DILocation(line: 3607, column: 29, scope: !7192)
!7215 = !DILocation(line: 3608, column: 11, scope: !7192)
!7216 = !DILocation(line: 3608, column: 16, scope: !7192)
!7217 = !DILocation(line: 3608, column: 23, scope: !7192)
!7218 = !DILocation(line: 3608, column: 34, scope: !7192)
!7219 = !DILocation(line: 3608, column: 52, scope: !7192)
!7220 = !DILocation(line: 3609, column: 16, scope: !7192)
!7221 = !DILocation(line: 3609, column: 46, scope: !7192)
!7222 = !DILocation(line: 3609, column: 43, scope: !7192)
!7223 = !DILocation(line: 3604, column: 14, scope: !6833)
!7224 = !DILocation(line: 3610, column: 16, scope: !7192)
!7225 = !DILocation(line: 3610, column: 9, scope: !7192)
!7226 = !DILocation(line: 3612, column: 8, scope: !6833)
!7227 = !DILocation(line: 3613, column: 8, scope: !6833)
!7228 = !DILocation(line: 3614, column: 5, scope: !6833)
!7229 = !DILocation(line: 3481, column: 46, scope: !6827)
!7230 = !DILocation(line: 3481, column: 5, scope: !6827)
!7231 = distinct !{!7231, !6831, !7232}
!7232 = !DILocation(line: 3614, column: 5, scope: !6824)
!7233 = !DILocation(line: 3616, column: 39, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3616, column: 10)
!7235 = !DILocation(line: 3616, column: 49, scope: !7234)
!7236 = !DILocation(line: 3616, column: 10, scope: !7234)
!7237 = !DILocation(line: 3616, column: 60, scope: !7234)
!7238 = !DILocation(line: 3616, column: 10, scope: !6757)
!7239 = !DILocation(line: 3617, column: 13, scope: !7234)
!7240 = !DILocation(line: 3617, column: 7, scope: !7234)
!7241 = !DILocation(line: 3618, column: 9, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3618, column: 9)
!7243 = !DILocation(line: 3618, column: 16, scope: !7242)
!7244 = !DILocation(line: 3618, column: 33, scope: !7242)
!7245 = !DILocation(line: 3618, column: 9, scope: !6757)
!7246 = !DILocation(line: 3619, column: 29, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 3619, column: 12)
!7248 = !DILocation(line: 3619, column: 57, scope: !7247)
!7249 = !DILocation(line: 3619, column: 60, scope: !7247)
!7250 = !DILocation(line: 3619, column: 67, scope: !7247)
!7251 = !DILocation(line: 3619, column: 12, scope: !7247)
!7252 = !DILocation(line: 3620, column: 17, scope: !7247)
!7253 = !DILocation(line: 3619, column: 12, scope: !7242)
!7254 = !DILocation(line: 3621, column: 15, scope: !7247)
!7255 = !DILocation(line: 3621, column: 9, scope: !7247)
!7256 = !DILocation(line: 3620, column: 20, scope: !7247)
!7257 = !DILocation(line: 3623, column: 3, scope: !6757)
!7258 = !DILocation(line: 3438, column: 41, scope: !6751)
!7259 = !DILocation(line: 3438, column: 3, scope: !6751)
!7260 = distinct !{!7260, !6755, !7261}
!7261 = !DILocation(line: 3623, column: 3, scope: !6748)
!7262 = !DILocation(line: 3626, column: 19, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !6671, file: !1, line: 3626, column: 3)
!7264 = !DILocation(line: 3626, column: 26, scope: !7263)
!7265 = !DILocation(line: 3626, column: 30, scope: !7263)
!7266 = !DILocation(line: 3626, column: 9, scope: !7263)
!7267 = !DILocation(line: 3626, column: 8, scope: !7263)
!7268 = !DILocation(line: 3626, column: 34, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7263, file: !1, line: 3626, column: 3)
!7270 = !DILocation(line: 3626, column: 36, scope: !7269)
!7271 = !DILocation(line: 3626, column: 3, scope: !7263)
!7272 = !DILocalVariable(name: "p", scope: !7273, file: !1, line: 3629, type: !6758)
!7273 = distinct !DILexicalBlock(scope: !7269, file: !1, line: 3627, column: 3)
!7274 = !DILocation(line: 3629, column: 17, scope: !7273)
!7275 = !DILocalVariable(name: "p_indexes", scope: !7273, file: !1, line: 3632, type: !6761)
!7276 = !DILocation(line: 3632, column: 17, scope: !7273)
!7277 = !DILocalVariable(name: "q", scope: !7273, file: !1, line: 3635, type: !6764)
!7278 = !DILocation(line: 3635, column: 17, scope: !7273)
!7279 = !DILocalVariable(name: "q_indexes", scope: !7273, file: !1, line: 3638, type: !6767)
!7280 = !DILocation(line: 3638, column: 17, scope: !7273)
!7281 = !DILocalVariable(name: "x", scope: !7273, file: !1, line: 3641, type: !609)
!7282 = !DILocation(line: 3641, column: 7, scope: !7273)
!7283 = !DILocalVariable(name: "r", scope: !7273, file: !1, line: 3644, type: !609)
!7284 = !DILocation(line: 3644, column: 7, scope: !7273)
!7285 = !DILocation(line: 3646, column: 9, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3646, column: 9)
!7287 = !DILocation(line: 3646, column: 16, scope: !7286)
!7288 = !DILocation(line: 3646, column: 9, scope: !7273)
!7289 = !DILocation(line: 3647, column: 7, scope: !7286)
!7290 = !DILocation(line: 3655, column: 33, scope: !7273)
!7291 = !DILocation(line: 3655, column: 45, scope: !7273)
!7292 = !DILocation(line: 3655, column: 44, scope: !7273)
!7293 = !DILocation(line: 3655, column: 51, scope: !7273)
!7294 = !DILocation(line: 3655, column: 54, scope: !7273)
!7295 = !DILocation(line: 3655, column: 75, scope: !7273)
!7296 = !DILocation(line: 3655, column: 83, scope: !7273)
!7297 = !DILocation(line: 3655, column: 84, scope: !7273)
!7298 = !DILocation(line: 3656, column: 10, scope: !7273)
!7299 = !DILocation(line: 3655, column: 7, scope: !7273)
!7300 = !DILocation(line: 3655, column: 6, scope: !7273)
!7301 = !DILocation(line: 3657, column: 35, scope: !7273)
!7302 = !DILocation(line: 3657, column: 49, scope: !7273)
!7303 = !DILocation(line: 3657, column: 52, scope: !7273)
!7304 = !DILocation(line: 3657, column: 59, scope: !7273)
!7305 = !DILocation(line: 3658, column: 10, scope: !7273)
!7306 = !DILocation(line: 3657, column: 7, scope: !7273)
!7307 = !DILocation(line: 3657, column: 6, scope: !7273)
!7308 = !DILocation(line: 3659, column: 10, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3659, column: 9)
!7310 = !DILocation(line: 3659, column: 12, scope: !7309)
!7311 = !DILocation(line: 3659, column: 43, scope: !7309)
!7312 = !DILocation(line: 3659, column: 47, scope: !7309)
!7313 = !DILocation(line: 3659, column: 49, scope: !7309)
!7314 = !DILocation(line: 3659, column: 9, scope: !7273)
!7315 = !DILocation(line: 3660, column: 13, scope: !7309)
!7316 = !DILocation(line: 3660, column: 7, scope: !7309)
!7317 = !DILocation(line: 3661, column: 9, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3661, column: 9)
!7319 = !DILocation(line: 3661, column: 16, scope: !7318)
!7320 = !DILocation(line: 3661, column: 9, scope: !7273)
!7321 = !DILocation(line: 3662, column: 7, scope: !7318)
!7322 = !DILocation(line: 3663, column: 45, scope: !7273)
!7323 = !DILocation(line: 3663, column: 15, scope: !7273)
!7324 = !DILocation(line: 3663, column: 14, scope: !7273)
!7325 = !DILocation(line: 3664, column: 47, scope: !7273)
!7326 = !DILocation(line: 3664, column: 15, scope: !7273)
!7327 = !DILocation(line: 3664, column: 14, scope: !7273)
!7328 = !DILocation(line: 3667, column: 10, scope: !7273)
!7329 = !DILocation(line: 3667, column: 17, scope: !7273)
!7330 = !DILocation(line: 3667, column: 24, scope: !7273)
!7331 = !DILocation(line: 3667, column: 7, scope: !7273)
!7332 = !DILocation(line: 3668, column: 10, scope: !7273)
!7333 = !DILocation(line: 3668, column: 17, scope: !7273)
!7334 = !DILocation(line: 3668, column: 24, scope: !7273)
!7335 = !DILocation(line: 3668, column: 7, scope: !7273)
!7336 = !DILocation(line: 3671, column: 9, scope: !7273)
!7337 = !DILocation(line: 3671, column: 7, scope: !7273)
!7338 = !DILocation(line: 3673, column: 21, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3673, column: 5)
!7340 = !DILocation(line: 3673, column: 28, scope: !7339)
!7341 = !DILocation(line: 3673, column: 35, scope: !7339)
!7342 = !DILocation(line: 3673, column: 11, scope: !7339)
!7343 = !DILocation(line: 3673, column: 10, scope: !7339)
!7344 = !DILocation(line: 3673, column: 39, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7339, file: !1, line: 3673, column: 5)
!7346 = !DILocation(line: 3673, column: 41, scope: !7345)
!7347 = !DILocation(line: 3673, column: 5, scope: !7339)
!7348 = !DILocalVariable(name: "v", scope: !7349, file: !1, line: 3676, type: !609)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !1, line: 3674, column: 5)
!7350 = !DILocation(line: 3676, column: 9, scope: !7349)
!7351 = !DILocalVariable(name: "u", scope: !7349, file: !1, line: 3679, type: !609)
!7352 = !DILocation(line: 3679, column: 9, scope: !7349)
!7353 = !DILocalVariable(name: "k", scope: !7349, file: !1, line: 3682, type: !6838)
!7354 = !DILocation(line: 3682, column: 19, scope: !7349)
!7355 = !DILocalVariable(name: "k_pixels", scope: !7349, file: !1, line: 3685, type: !6758)
!7356 = !DILocation(line: 3685, column: 19, scope: !7349)
!7357 = !DILocalVariable(name: "k_indexes", scope: !7349, file: !1, line: 3688, type: !6761)
!7358 = !DILocation(line: 3688, column: 19, scope: !7349)
!7359 = !DILocalVariable(name: "result", scope: !7349, file: !1, line: 3691, type: !6846)
!7360 = !DILocation(line: 3691, column: 9, scope: !7349)
!7361 = !DILocation(line: 3694, column: 28, scope: !7349)
!7362 = !DILocation(line: 3694, column: 7, scope: !7349)
!7363 = !DILocation(line: 3695, column: 28, scope: !7349)
!7364 = !DILocation(line: 3695, column: 34, scope: !7349)
!7365 = !DILocation(line: 3695, column: 36, scope: !7349)
!7366 = !DILocation(line: 3695, column: 7, scope: !7349)
!7367 = !DILocation(line: 3696, column: 12, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3696, column: 12)
!7369 = !DILocation(line: 3696, column: 19, scope: !7368)
!7370 = !DILocation(line: 3696, column: 12, scope: !7349)
!7371 = !DILocation(line: 3697, column: 48, scope: !7368)
!7372 = !DILocation(line: 3697, column: 39, scope: !7368)
!7373 = !DILocation(line: 3697, column: 16, scope: !7368)
!7374 = !DILocation(line: 3697, column: 24, scope: !7368)
!7375 = !DILocation(line: 3697, column: 9, scope: !7368)
!7376 = !DILocation(line: 3699, column: 16, scope: !7349)
!7377 = !DILocation(line: 3699, column: 7, scope: !7349)
!7378 = !DILocation(line: 3702, column: 18, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3699, column: 25)
!7380 = !DILocation(line: 3702, column: 26, scope: !7379)
!7381 = !DILocation(line: 3702, column: 34, scope: !7379)
!7382 = !DILocation(line: 3702, column: 42, scope: !7379)
!7383 = !DILocation(line: 3702, column: 49, scope: !7379)
!7384 = !DILocation(line: 3702, column: 57, scope: !7379)
!7385 = !DILocation(line: 3702, column: 58, scope: !7379)
!7386 = !DILocation(line: 3702, column: 47, scope: !7379)
!7387 = !DILocation(line: 3702, column: 61, scope: !7379)
!7388 = !DILocation(line: 3702, column: 15, scope: !7379)
!7389 = !DILocation(line: 3703, column: 24, scope: !7379)
!7390 = !DILocation(line: 3703, column: 22, scope: !7379)
!7391 = !DILocation(line: 3704, column: 25, scope: !7379)
!7392 = !DILocation(line: 3704, column: 23, scope: !7379)
!7393 = !DILocation(line: 3705, column: 20, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 3705, column: 13)
!7395 = !DILocation(line: 3705, column: 19, scope: !7394)
!7396 = !DILocation(line: 3705, column: 18, scope: !7394)
!7397 = !DILocation(line: 3705, column: 26, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7394, file: !1, line: 3705, column: 13)
!7399 = !DILocation(line: 3705, column: 40, scope: !7398)
!7400 = !DILocation(line: 3705, column: 48, scope: !7398)
!7401 = !DILocation(line: 3705, column: 28, scope: !7398)
!7402 = !DILocation(line: 3705, column: 13, scope: !7394)
!7403 = !DILocation(line: 3706, column: 21, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !1, line: 3706, column: 15)
!7405 = distinct !DILexicalBlock(scope: !7398, file: !1, line: 3705, column: 61)
!7406 = !DILocation(line: 3706, column: 20, scope: !7404)
!7407 = !DILocation(line: 3706, column: 25, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !1, line: 3706, column: 15)
!7409 = !DILocation(line: 3706, column: 39, scope: !7408)
!7410 = !DILocation(line: 3706, column: 47, scope: !7408)
!7411 = !DILocation(line: 3706, column: 27, scope: !7408)
!7412 = !DILocation(line: 3706, column: 15, scope: !7404)
!7413 = !DILocation(line: 3707, column: 22, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !1, line: 3707, column: 22)
!7415 = distinct !DILexicalBlock(scope: !7408, file: !1, line: 3706, column: 64)
!7416 = !DILocation(line: 3707, column: 22, scope: !7415)
!7417 = !DILocation(line: 3707, column: 34, scope: !7414)
!7418 = !DILocation(line: 3708, column: 17, scope: !7415)
!7419 = !DILocation(line: 3709, column: 17, scope: !7415)
!7420 = !DILocation(line: 3710, column: 17, scope: !7415)
!7421 = !DILocation(line: 3711, column: 17, scope: !7415)
!7422 = !DILocation(line: 3712, column: 22, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7415, file: !1, line: 3712, column: 22)
!7424 = !DILocation(line: 3712, column: 29, scope: !7423)
!7425 = !DILocation(line: 3712, column: 40, scope: !7423)
!7426 = !DILocation(line: 3712, column: 22, scope: !7415)
!7427 = !DILocation(line: 3713, column: 19, scope: !7423)
!7428 = !DILocation(line: 3714, column: 15, scope: !7415)
!7429 = !DILocation(line: 3706, column: 55, scope: !7408)
!7430 = !DILocation(line: 3706, column: 60, scope: !7408)
!7431 = !DILocation(line: 3706, column: 15, scope: !7408)
!7432 = distinct !{!7432, !7412, !7433}
!7433 = !DILocation(line: 3714, column: 15, scope: !7404)
!7434 = !DILocation(line: 3715, column: 27, scope: !7405)
!7435 = !DILocation(line: 3715, column: 24, scope: !7405)
!7436 = !DILocation(line: 3716, column: 28, scope: !7405)
!7437 = !DILocation(line: 3716, column: 25, scope: !7405)
!7438 = !DILocation(line: 3717, column: 13, scope: !7405)
!7439 = !DILocation(line: 3705, column: 57, scope: !7398)
!7440 = !DILocation(line: 3705, column: 13, scope: !7398)
!7441 = distinct !{!7441, !7402, !7442}
!7442 = !DILocation(line: 3717, column: 13, scope: !7394)
!7443 = !DILocation(line: 3719, column: 18, scope: !7379)
!7444 = !DILocation(line: 3719, column: 26, scope: !7379)
!7445 = !DILocation(line: 3719, column: 34, scope: !7379)
!7446 = !DILocation(line: 3719, column: 42, scope: !7379)
!7447 = !DILocation(line: 3719, column: 49, scope: !7379)
!7448 = !DILocation(line: 3719, column: 57, scope: !7379)
!7449 = !DILocation(line: 3719, column: 47, scope: !7379)
!7450 = !DILocation(line: 3719, column: 60, scope: !7379)
!7451 = !DILocation(line: 3719, column: 68, scope: !7379)
!7452 = !DILocation(line: 3719, column: 59, scope: !7379)
!7453 = !DILocation(line: 3719, column: 69, scope: !7379)
!7454 = !DILocation(line: 3719, column: 15, scope: !7379)
!7455 = !DILocation(line: 3720, column: 24, scope: !7379)
!7456 = !DILocation(line: 3720, column: 26, scope: !7379)
!7457 = !DILocation(line: 3720, column: 25, scope: !7379)
!7458 = !DILocation(line: 3720, column: 22, scope: !7379)
!7459 = !DILocation(line: 3721, column: 25, scope: !7379)
!7460 = !DILocation(line: 3721, column: 35, scope: !7379)
!7461 = !DILocation(line: 3721, column: 34, scope: !7379)
!7462 = !DILocation(line: 3721, column: 23, scope: !7379)
!7463 = !DILocation(line: 3722, column: 22, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 3722, column: 15)
!7465 = !DILocation(line: 3722, column: 26, scope: !7464)
!7466 = !DILocation(line: 3722, column: 21, scope: !7464)
!7467 = !DILocation(line: 3722, column: 20, scope: !7464)
!7468 = !DILocation(line: 3722, column: 30, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7464, file: !1, line: 3722, column: 15)
!7470 = !DILocation(line: 3722, column: 44, scope: !7469)
!7471 = !DILocation(line: 3722, column: 52, scope: !7469)
!7472 = !DILocation(line: 3722, column: 32, scope: !7469)
!7473 = !DILocation(line: 3722, column: 15, scope: !7464)
!7474 = !DILocation(line: 3723, column: 23, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 3723, column: 22)
!7476 = distinct !DILexicalBlock(scope: !7469, file: !1, line: 3722, column: 69)
!7477 = !DILocation(line: 3723, column: 25, scope: !7475)
!7478 = !DILocation(line: 3723, column: 24, scope: !7475)
!7479 = !DILocation(line: 3723, column: 27, scope: !7475)
!7480 = !DILocation(line: 3723, column: 26, scope: !7475)
!7481 = !DILocation(line: 3723, column: 45, scope: !7475)
!7482 = !DILocation(line: 3723, column: 52, scope: !7475)
!7483 = !DILocation(line: 3723, column: 33, scope: !7475)
!7484 = !DILocation(line: 3723, column: 22, scope: !7476)
!7485 = !DILocation(line: 3723, column: 62, scope: !7475)
!7486 = !DILocation(line: 3724, column: 22, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 3724, column: 22)
!7488 = !DILocation(line: 3724, column: 22, scope: !7476)
!7489 = !DILocation(line: 3724, column: 34, scope: !7487)
!7490 = !DILocation(line: 3725, column: 17, scope: !7476)
!7491 = !DILocation(line: 3726, column: 17, scope: !7476)
!7492 = !DILocation(line: 3727, column: 17, scope: !7476)
!7493 = !DILocation(line: 3728, column: 17, scope: !7476)
!7494 = !DILocation(line: 3729, column: 22, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 3729, column: 22)
!7496 = !DILocation(line: 3729, column: 29, scope: !7495)
!7497 = !DILocation(line: 3729, column: 40, scope: !7495)
!7498 = !DILocation(line: 3729, column: 22, scope: !7476)
!7499 = !DILocation(line: 3730, column: 19, scope: !7495)
!7500 = !DILocation(line: 3731, column: 15, scope: !7476)
!7501 = !DILocation(line: 3722, column: 60, scope: !7469)
!7502 = !DILocation(line: 3722, column: 65, scope: !7469)
!7503 = !DILocation(line: 3722, column: 15, scope: !7469)
!7504 = distinct !{!7504, !7473, !7505}
!7505 = !DILocation(line: 3731, column: 15, scope: !7464)
!7506 = !DILocation(line: 3732, column: 13, scope: !7379)
!7507 = !DILocation(line: 3739, column: 18, scope: !7379)
!7508 = !DILocation(line: 3739, column: 26, scope: !7379)
!7509 = !DILocation(line: 3739, column: 34, scope: !7379)
!7510 = !DILocation(line: 3739, column: 42, scope: !7379)
!7511 = !DILocation(line: 3739, column: 49, scope: !7379)
!7512 = !DILocation(line: 3739, column: 57, scope: !7379)
!7513 = !DILocation(line: 3739, column: 58, scope: !7379)
!7514 = !DILocation(line: 3739, column: 47, scope: !7379)
!7515 = !DILocation(line: 3739, column: 61, scope: !7379)
!7516 = !DILocation(line: 3739, column: 15, scope: !7379)
!7517 = !DILocation(line: 3740, column: 24, scope: !7379)
!7518 = !DILocation(line: 3740, column: 22, scope: !7379)
!7519 = !DILocation(line: 3741, column: 25, scope: !7379)
!7520 = !DILocation(line: 3741, column: 23, scope: !7379)
!7521 = !DILocation(line: 3742, column: 20, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 3742, column: 13)
!7523 = !DILocation(line: 3742, column: 19, scope: !7522)
!7524 = !DILocation(line: 3742, column: 18, scope: !7522)
!7525 = !DILocation(line: 3742, column: 26, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7522, file: !1, line: 3742, column: 13)
!7527 = !DILocation(line: 3742, column: 40, scope: !7526)
!7528 = !DILocation(line: 3742, column: 48, scope: !7526)
!7529 = !DILocation(line: 3742, column: 28, scope: !7526)
!7530 = !DILocation(line: 3742, column: 13, scope: !7522)
!7531 = !DILocation(line: 3743, column: 21, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !1, line: 3743, column: 15)
!7533 = distinct !DILexicalBlock(scope: !7526, file: !1, line: 3742, column: 61)
!7534 = !DILocation(line: 3743, column: 20, scope: !7532)
!7535 = !DILocation(line: 3743, column: 25, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7532, file: !1, line: 3743, column: 15)
!7537 = !DILocation(line: 3743, column: 39, scope: !7536)
!7538 = !DILocation(line: 3743, column: 47, scope: !7536)
!7539 = !DILocation(line: 3743, column: 27, scope: !7536)
!7540 = !DILocation(line: 3743, column: 15, scope: !7532)
!7541 = !DILocation(line: 3744, column: 22, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !1, line: 3744, column: 22)
!7543 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3743, column: 64)
!7544 = !DILocation(line: 3744, column: 22, scope: !7543)
!7545 = !DILocation(line: 3744, column: 34, scope: !7542)
!7546 = !DILocation(line: 3745, column: 28, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !1, line: 3745, column: 21)
!7548 = !DILocation(line: 3745, column: 21, scope: !7547)
!7549 = !DILocation(line: 3745, column: 40, scope: !7547)
!7550 = !DILocation(line: 3745, column: 39, scope: !7547)
!7551 = !DILocation(line: 3745, column: 43, scope: !7547)
!7552 = !DILocation(line: 3745, column: 52, scope: !7547)
!7553 = !DILocation(line: 3745, column: 55, scope: !7547)
!7554 = !DILocation(line: 3745, column: 42, scope: !7547)
!7555 = !DILocation(line: 3745, column: 36, scope: !7547)
!7556 = !DILocation(line: 3745, column: 21, scope: !7543)
!7557 = !DILocation(line: 3747, column: 42, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7547, file: !1, line: 3746, column: 19)
!7559 = !DILocation(line: 3747, column: 49, scope: !7558)
!7560 = !DILocation(line: 3747, column: 58, scope: !7558)
!7561 = !DILocation(line: 3747, column: 62, scope: !7558)
!7562 = !DILocation(line: 3747, column: 72, scope: !7558)
!7563 = !DILocation(line: 3747, column: 21, scope: !7558)
!7564 = !DILocation(line: 3749, column: 40, scope: !7558)
!7565 = !DILocation(line: 3749, column: 39, scope: !7558)
!7566 = !DILocation(line: 3749, column: 28, scope: !7558)
!7567 = !DILocation(line: 3749, column: 36, scope: !7558)
!7568 = !DILocation(line: 3750, column: 19, scope: !7558)
!7569 = !DILocation(line: 3751, column: 15, scope: !7543)
!7570 = !DILocation(line: 3743, column: 55, scope: !7536)
!7571 = !DILocation(line: 3743, column: 60, scope: !7536)
!7572 = !DILocation(line: 3743, column: 15, scope: !7536)
!7573 = distinct !{!7573, !7540, !7574}
!7574 = !DILocation(line: 3751, column: 15, scope: !7532)
!7575 = !DILocation(line: 3752, column: 27, scope: !7533)
!7576 = !DILocation(line: 3752, column: 24, scope: !7533)
!7577 = !DILocation(line: 3753, column: 28, scope: !7533)
!7578 = !DILocation(line: 3753, column: 25, scope: !7533)
!7579 = !DILocation(line: 3754, column: 13, scope: !7533)
!7580 = !DILocation(line: 3742, column: 57, scope: !7526)
!7581 = !DILocation(line: 3742, column: 13, scope: !7526)
!7582 = distinct !{!7582, !7530, !7583}
!7583 = !DILocation(line: 3754, column: 13, scope: !7522)
!7584 = !DILocation(line: 3756, column: 18, scope: !7379)
!7585 = !DILocation(line: 3756, column: 26, scope: !7379)
!7586 = !DILocation(line: 3756, column: 34, scope: !7379)
!7587 = !DILocation(line: 3756, column: 42, scope: !7379)
!7588 = !DILocation(line: 3756, column: 49, scope: !7379)
!7589 = !DILocation(line: 3756, column: 57, scope: !7379)
!7590 = !DILocation(line: 3756, column: 47, scope: !7379)
!7591 = !DILocation(line: 3756, column: 60, scope: !7379)
!7592 = !DILocation(line: 3756, column: 68, scope: !7379)
!7593 = !DILocation(line: 3756, column: 59, scope: !7379)
!7594 = !DILocation(line: 3756, column: 69, scope: !7379)
!7595 = !DILocation(line: 3756, column: 15, scope: !7379)
!7596 = !DILocation(line: 3757, column: 24, scope: !7379)
!7597 = !DILocation(line: 3757, column: 26, scope: !7379)
!7598 = !DILocation(line: 3757, column: 25, scope: !7379)
!7599 = !DILocation(line: 3757, column: 22, scope: !7379)
!7600 = !DILocation(line: 3758, column: 25, scope: !7379)
!7601 = !DILocation(line: 3758, column: 35, scope: !7379)
!7602 = !DILocation(line: 3758, column: 34, scope: !7379)
!7603 = !DILocation(line: 3758, column: 23, scope: !7379)
!7604 = !DILocation(line: 3759, column: 22, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 3759, column: 15)
!7606 = !DILocation(line: 3759, column: 26, scope: !7605)
!7607 = !DILocation(line: 3759, column: 21, scope: !7605)
!7608 = !DILocation(line: 3759, column: 20, scope: !7605)
!7609 = !DILocation(line: 3759, column: 30, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7605, file: !1, line: 3759, column: 15)
!7611 = !DILocation(line: 3759, column: 44, scope: !7610)
!7612 = !DILocation(line: 3759, column: 52, scope: !7610)
!7613 = !DILocation(line: 3759, column: 32, scope: !7610)
!7614 = !DILocation(line: 3759, column: 15, scope: !7605)
!7615 = !DILocation(line: 3760, column: 23, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 3760, column: 22)
!7617 = distinct !DILexicalBlock(scope: !7610, file: !1, line: 3759, column: 69)
!7618 = !DILocation(line: 3760, column: 25, scope: !7616)
!7619 = !DILocation(line: 3760, column: 24, scope: !7616)
!7620 = !DILocation(line: 3760, column: 27, scope: !7616)
!7621 = !DILocation(line: 3760, column: 26, scope: !7616)
!7622 = !DILocation(line: 3760, column: 45, scope: !7616)
!7623 = !DILocation(line: 3760, column: 52, scope: !7616)
!7624 = !DILocation(line: 3760, column: 33, scope: !7616)
!7625 = !DILocation(line: 3760, column: 22, scope: !7617)
!7626 = !DILocation(line: 3760, column: 62, scope: !7616)
!7627 = !DILocation(line: 3761, column: 22, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 3761, column: 22)
!7629 = !DILocation(line: 3761, column: 22, scope: !7617)
!7630 = !DILocation(line: 3761, column: 34, scope: !7628)
!7631 = !DILocation(line: 3762, column: 28, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 3762, column: 21)
!7633 = !DILocation(line: 3762, column: 21, scope: !7632)
!7634 = !DILocation(line: 3762, column: 40, scope: !7632)
!7635 = !DILocation(line: 3762, column: 39, scope: !7632)
!7636 = !DILocation(line: 3762, column: 43, scope: !7632)
!7637 = !DILocation(line: 3762, column: 52, scope: !7632)
!7638 = !DILocation(line: 3762, column: 55, scope: !7632)
!7639 = !DILocation(line: 3762, column: 42, scope: !7632)
!7640 = !DILocation(line: 3762, column: 36, scope: !7632)
!7641 = !DILocation(line: 3762, column: 21, scope: !7617)
!7642 = !DILocation(line: 3764, column: 42, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7632, file: !1, line: 3763, column: 19)
!7644 = !DILocation(line: 3764, column: 49, scope: !7643)
!7645 = !DILocation(line: 3764, column: 58, scope: !7643)
!7646 = !DILocation(line: 3764, column: 62, scope: !7643)
!7647 = !DILocation(line: 3764, column: 72, scope: !7643)
!7648 = !DILocation(line: 3764, column: 21, scope: !7643)
!7649 = !DILocation(line: 3766, column: 40, scope: !7643)
!7650 = !DILocation(line: 3766, column: 39, scope: !7643)
!7651 = !DILocation(line: 3766, column: 28, scope: !7643)
!7652 = !DILocation(line: 3766, column: 36, scope: !7643)
!7653 = !DILocation(line: 3767, column: 19, scope: !7643)
!7654 = !DILocation(line: 3768, column: 15, scope: !7617)
!7655 = !DILocation(line: 3759, column: 60, scope: !7610)
!7656 = !DILocation(line: 3759, column: 65, scope: !7610)
!7657 = !DILocation(line: 3759, column: 15, scope: !7610)
!7658 = distinct !{!7658, !7614, !7659}
!7659 = !DILocation(line: 3768, column: 15, scope: !7605)
!7660 = !DILocation(line: 3769, column: 13, scope: !7379)
!7661 = !DILocation(line: 3772, column: 11, scope: !7379)
!7662 = !DILocation(line: 3775, column: 16, scope: !7349)
!7663 = !DILocation(line: 3775, column: 7, scope: !7349)
!7664 = !DILocation(line: 3777, column: 26, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3775, column: 25)
!7666 = !DILocation(line: 3777, column: 40, scope: !7665)
!7667 = !DILocation(line: 3777, column: 42, scope: !7665)
!7668 = !DILocation(line: 3777, column: 11, scope: !7665)
!7669 = !DILocation(line: 3778, column: 11, scope: !7665)
!7670 = !DILocation(line: 3780, column: 16, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 3780, column: 15)
!7672 = !DILocation(line: 3780, column: 24, scope: !7671)
!7673 = !DILocation(line: 3780, column: 38, scope: !7671)
!7674 = !DILocation(line: 3780, column: 15, scope: !7665)
!7675 = !DILocation(line: 3781, column: 13, scope: !7671)
!7676 = !DILocation(line: 3782, column: 16, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 3782, column: 15)
!7678 = !DILocation(line: 3782, column: 24, scope: !7677)
!7679 = !DILocation(line: 3782, column: 40, scope: !7677)
!7680 = !DILocation(line: 3782, column: 15, scope: !7665)
!7681 = !DILocation(line: 3783, column: 13, scope: !7677)
!7682 = !DILocation(line: 3784, column: 16, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 3784, column: 15)
!7684 = !DILocation(line: 3784, column: 24, scope: !7683)
!7685 = !DILocation(line: 3784, column: 39, scope: !7683)
!7686 = !DILocation(line: 3784, column: 15, scope: !7665)
!7687 = !DILocation(line: 3785, column: 13, scope: !7683)
!7688 = !DILocation(line: 3786, column: 17, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 3786, column: 15)
!7690 = !DILocation(line: 3786, column: 25, scope: !7689)
!7691 = !DILocation(line: 3786, column: 43, scope: !7689)
!7692 = !DILocation(line: 3786, column: 49, scope: !7689)
!7693 = !DILocation(line: 3786, column: 53, scope: !7689)
!7694 = !DILocation(line: 3786, column: 60, scope: !7689)
!7695 = !DILocation(line: 3786, column: 66, scope: !7689)
!7696 = !DILocation(line: 3786, column: 15, scope: !7665)
!7697 = !DILocation(line: 3787, column: 13, scope: !7689)
!7698 = !DILocation(line: 3788, column: 17, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 3788, column: 15)
!7700 = !DILocation(line: 3788, column: 25, scope: !7699)
!7701 = !DILocation(line: 3788, column: 41, scope: !7699)
!7702 = !DILocation(line: 3788, column: 47, scope: !7699)
!7703 = !DILocation(line: 3789, column: 16, scope: !7699)
!7704 = !DILocation(line: 3789, column: 23, scope: !7699)
!7705 = !DILocation(line: 3789, column: 34, scope: !7699)
!7706 = !DILocation(line: 3788, column: 15, scope: !7665)
!7707 = !DILocation(line: 3790, column: 13, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !1, line: 3790, column: 13)
!7709 = distinct !DILexicalBlock(scope: !7699, file: !1, line: 3790, column: 13)
!7710 = !DILocation(line: 3790, column: 13, scope: !7709)
!7711 = !DILocation(line: 3791, column: 11, scope: !7665)
!7712 = !DILocation(line: 3794, column: 16, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3794, column: 14)
!7714 = !DILocation(line: 3794, column: 18, scope: !7713)
!7715 = !DILocation(line: 3794, column: 21, scope: !7713)
!7716 = !DILocation(line: 3794, column: 28, scope: !7713)
!7717 = !DILocation(line: 3794, column: 25, scope: !7713)
!7718 = !DILocation(line: 3795, column: 11, scope: !7713)
!7719 = !DILocation(line: 3795, column: 16, scope: !7713)
!7720 = !DILocation(line: 3795, column: 18, scope: !7713)
!7721 = !DILocation(line: 3795, column: 21, scope: !7713)
!7722 = !DILocation(line: 3795, column: 30, scope: !7713)
!7723 = !DILocation(line: 3795, column: 27, scope: !7713)
!7724 = !DILocation(line: 3796, column: 11, scope: !7713)
!7725 = !DILocation(line: 3796, column: 16, scope: !7713)
!7726 = !DILocation(line: 3796, column: 18, scope: !7713)
!7727 = !DILocation(line: 3796, column: 21, scope: !7713)
!7728 = !DILocation(line: 3796, column: 29, scope: !7713)
!7729 = !DILocation(line: 3796, column: 26, scope: !7713)
!7730 = !DILocation(line: 3797, column: 11, scope: !7713)
!7731 = !DILocation(line: 3797, column: 16, scope: !7713)
!7732 = !DILocation(line: 3797, column: 18, scope: !7713)
!7733 = !DILocation(line: 3797, column: 21, scope: !7713)
!7734 = !DILocation(line: 3797, column: 32, scope: !7713)
!7735 = !DILocation(line: 3797, column: 29, scope: !7713)
!7736 = !DILocation(line: 3798, column: 11, scope: !7713)
!7737 = !DILocation(line: 3798, column: 16, scope: !7713)
!7738 = !DILocation(line: 3798, column: 23, scope: !7713)
!7739 = !DILocation(line: 3798, column: 34, scope: !7713)
!7740 = !DILocation(line: 3798, column: 52, scope: !7713)
!7741 = !DILocation(line: 3799, column: 16, scope: !7713)
!7742 = !DILocation(line: 3799, column: 46, scope: !7713)
!7743 = !DILocation(line: 3799, column: 43, scope: !7713)
!7744 = !DILocation(line: 3794, column: 14, scope: !7349)
!7745 = !DILocation(line: 3800, column: 16, scope: !7713)
!7746 = !DILocation(line: 3800, column: 9, scope: !7713)
!7747 = !DILocation(line: 3802, column: 8, scope: !7349)
!7748 = !DILocation(line: 3803, column: 8, scope: !7349)
!7749 = !DILocation(line: 3804, column: 5, scope: !7349)
!7750 = !DILocation(line: 3673, column: 48, scope: !7345)
!7751 = !DILocation(line: 3673, column: 5, scope: !7345)
!7752 = distinct !{!7752, !7347, !7753}
!7753 = !DILocation(line: 3804, column: 5, scope: !7339)
!7754 = !DILocation(line: 3805, column: 39, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3805, column: 10)
!7756 = !DILocation(line: 3805, column: 49, scope: !7755)
!7757 = !DILocation(line: 3805, column: 10, scope: !7755)
!7758 = !DILocation(line: 3805, column: 60, scope: !7755)
!7759 = !DILocation(line: 3805, column: 10, scope: !7273)
!7760 = !DILocation(line: 3806, column: 13, scope: !7755)
!7761 = !DILocation(line: 3806, column: 7, scope: !7755)
!7762 = !DILocation(line: 3807, column: 9, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3807, column: 9)
!7764 = !DILocation(line: 3807, column: 16, scope: !7763)
!7765 = !DILocation(line: 3807, column: 33, scope: !7763)
!7766 = !DILocation(line: 3807, column: 9, scope: !7273)
!7767 = !DILocation(line: 3808, column: 29, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7763, file: !1, line: 3808, column: 12)
!7769 = !DILocation(line: 3808, column: 57, scope: !7768)
!7770 = !DILocation(line: 3808, column: 60, scope: !7768)
!7771 = !DILocation(line: 3808, column: 67, scope: !7768)
!7772 = !DILocation(line: 3808, column: 12, scope: !7768)
!7773 = !DILocation(line: 3809, column: 17, scope: !7768)
!7774 = !DILocation(line: 3808, column: 12, scope: !7763)
!7775 = !DILocation(line: 3810, column: 15, scope: !7768)
!7776 = !DILocation(line: 3810, column: 9, scope: !7768)
!7777 = !DILocation(line: 3809, column: 20, scope: !7768)
!7778 = !DILocation(line: 3812, column: 3, scope: !7273)
!7779 = !DILocation(line: 3626, column: 43, scope: !7269)
!7780 = !DILocation(line: 3626, column: 3, scope: !7269)
!7781 = distinct !{!7781, !7271, !7782}
!7782 = !DILocation(line: 3812, column: 3, scope: !7263)
!7783 = !DILocation(line: 3814, column: 30, scope: !6671)
!7784 = !DILocation(line: 3814, column: 13, scope: !6671)
!7785 = !DILocation(line: 3814, column: 12, scope: !6671)
!7786 = !DILocation(line: 3815, column: 30, scope: !6671)
!7787 = !DILocation(line: 3815, column: 13, scope: !6671)
!7788 = !DILocation(line: 3815, column: 12, scope: !6671)
!7789 = !DILocation(line: 3816, column: 10, scope: !6671)
!7790 = !DILocation(line: 3816, column: 29, scope: !6671)
!7791 = !DILocation(line: 3816, column: 3, scope: !6671)
!7792 = distinct !DISubprogram(name: "MorphologyPrimitive", scope: !1, file: !1, line: 2548, type: !7793, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{!609, !5973, !627, !5976, !5975, !5885, !5047, !5980}
!7795 = !DILocalVariable(name: "image", arg: 1, scope: !7792, file: !1, line: 2548, type: !5973)
!7796 = !DILocation(line: 2548, column: 49, scope: !7792)
!7797 = !DILocalVariable(name: "result_image", arg: 2, scope: !7792, file: !1, line: 2548, type: !627)
!7798 = !DILocation(line: 2548, column: 63, scope: !7792)
!7799 = !DILocalVariable(name: "method", arg: 3, scope: !7792, file: !1, line: 2549, type: !5976)
!7800 = !DILocation(line: 2549, column: 29, scope: !7792)
!7801 = !DILocalVariable(name: "channel", arg: 4, scope: !7792, file: !1, line: 2549, type: !5975)
!7802 = !DILocation(line: 2549, column: 55, scope: !7792)
!7803 = !DILocalVariable(name: "kernel", arg: 5, scope: !7792, file: !1, line: 2550, type: !5885)
!7804 = !DILocation(line: 2550, column: 24, scope: !7792)
!7805 = !DILocalVariable(name: "bias", arg: 6, scope: !7792, file: !1, line: 2550, type: !5047)
!7806 = !DILocation(line: 2550, column: 44, scope: !7792)
!7807 = !DILocalVariable(name: "exception", arg: 7, scope: !7792, file: !1, line: 2550, type: !5980)
!7808 = !DILocation(line: 2550, column: 64, scope: !7792)
!7809 = !DILocalVariable(name: "p_view", scope: !7792, file: !1, line: 2555, type: !6685)
!7810 = !DILocation(line: 2555, column: 6, scope: !7792)
!7811 = !DILocalVariable(name: "q_view", scope: !7792, file: !1, line: 2556, type: !6685)
!7812 = !DILocation(line: 2556, column: 6, scope: !7792)
!7813 = !DILocalVariable(name: "i", scope: !7792, file: !1, line: 2559, type: !609)
!7814 = !DILocation(line: 2559, column: 5, scope: !7792)
!7815 = !DILocalVariable(name: "changes", scope: !7792, file: !1, line: 2562, type: !843)
!7816 = !DILocation(line: 2562, column: 6, scope: !7792)
!7817 = !DILocalVariable(name: "changed", scope: !7792, file: !1, line: 2563, type: !604)
!7818 = !DILocation(line: 2563, column: 5, scope: !7792)
!7819 = !DILocalVariable(name: "virt_width", scope: !7792, file: !1, line: 2564, type: !604)
!7820 = !DILocation(line: 2564, column: 5, scope: !7792)
!7821 = !DILocalVariable(name: "y", scope: !7792, file: !1, line: 2567, type: !609)
!7822 = !DILocation(line: 2567, column: 5, scope: !7792)
!7823 = !DILocalVariable(name: "offx", scope: !7792, file: !1, line: 2568, type: !609)
!7824 = !DILocation(line: 2568, column: 5, scope: !7792)
!7825 = !DILocalVariable(name: "offy", scope: !7792, file: !1, line: 2569, type: !609)
!7826 = !DILocation(line: 2569, column: 5, scope: !7792)
!7827 = !DILocalVariable(name: "status", scope: !7792, file: !1, line: 2572, type: !641)
!7828 = !DILocation(line: 2572, column: 5, scope: !7792)
!7829 = !DILocalVariable(name: "progress", scope: !7792, file: !1, line: 2575, type: !749)
!7830 = !DILocation(line: 2575, column: 5, scope: !7792)
!7831 = !DILocation(line: 2586, column: 9, scope: !7792)
!7832 = !DILocation(line: 2587, column: 11, scope: !7792)
!7833 = !DILocation(line: 2589, column: 34, scope: !7792)
!7834 = !DILocation(line: 2589, column: 40, scope: !7792)
!7835 = !DILocation(line: 2589, column: 10, scope: !7792)
!7836 = !DILocation(line: 2589, column: 9, scope: !7792)
!7837 = !DILocation(line: 2590, column: 36, scope: !7792)
!7838 = !DILocation(line: 2590, column: 49, scope: !7792)
!7839 = !DILocation(line: 2590, column: 10, scope: !7792)
!7840 = !DILocation(line: 2590, column: 9, scope: !7792)
!7841 = !DILocation(line: 2591, column: 14, scope: !7792)
!7842 = !DILocation(line: 2591, column: 21, scope: !7792)
!7843 = !DILocation(line: 2591, column: 29, scope: !7792)
!7844 = !DILocation(line: 2591, column: 37, scope: !7792)
!7845 = !DILocation(line: 2591, column: 28, scope: !7792)
!7846 = !DILocation(line: 2591, column: 42, scope: !7792)
!7847 = !DILocation(line: 2591, column: 13, scope: !7792)
!7848 = !DILocation(line: 2596, column: 10, scope: !7792)
!7849 = !DILocation(line: 2596, column: 18, scope: !7792)
!7850 = !DILocation(line: 2596, column: 8, scope: !7792)
!7851 = !DILocation(line: 2597, column: 10, scope: !7792)
!7852 = !DILocation(line: 2597, column: 18, scope: !7792)
!7853 = !DILocation(line: 2597, column: 8, scope: !7792)
!7854 = !DILocation(line: 2598, column: 10, scope: !7792)
!7855 = !DILocation(line: 2598, column: 3, scope: !7792)
!7856 = !DILocation(line: 2604, column: 24, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 2598, column: 18)
!7858 = !DILocation(line: 2604, column: 32, scope: !7857)
!7859 = !DILocation(line: 2604, column: 38, scope: !7857)
!7860 = !DILocation(line: 2604, column: 37, scope: !7857)
!7861 = !DILocation(line: 2604, column: 42, scope: !7857)
!7862 = !DILocation(line: 2604, column: 12, scope: !7857)
!7863 = !DILocation(line: 2605, column: 24, scope: !7857)
!7864 = !DILocation(line: 2605, column: 32, scope: !7857)
!7865 = !DILocation(line: 2605, column: 39, scope: !7857)
!7866 = !DILocation(line: 2605, column: 38, scope: !7857)
!7867 = !DILocation(line: 2605, column: 43, scope: !7857)
!7868 = !DILocation(line: 2605, column: 12, scope: !7857)
!7869 = !DILocation(line: 2606, column: 7, scope: !7857)
!7870 = !DILocation(line: 2613, column: 7, scope: !7857)
!7871 = !DILocation(line: 2616, column: 7, scope: !7857)
!7872 = !DILocation(line: 2618, column: 10, scope: !7792)
!7873 = !DILocation(line: 2619, column: 43, scope: !7792)
!7874 = !DILocation(line: 2619, column: 22, scope: !7792)
!7875 = !DILocation(line: 2619, column: 11, scope: !7792)
!7876 = !DILocation(line: 2619, column: 10, scope: !7792)
!7877 = !DILocation(line: 2621, column: 7, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 2621, column: 7)
!7879 = !DILocation(line: 2621, column: 15, scope: !7878)
!7880 = !DILocation(line: 2621, column: 7, scope: !7792)
!7881 = !DILocalVariable(name: "message", scope: !7882, file: !1, line: 2622, type: !626)
!7882 = distinct !DILexicalBlock(scope: !7878, file: !1, line: 2622, column: 5)
!7883 = !DILocation(line: 2622, column: 5, scope: !7882)
!7884 = !DILocalVariable(name: "exception", scope: !7882, file: !1, line: 2622, type: !774)
!7885 = !DILocation(line: 2623, column: 9, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 2623, column: 3)
!7887 = !DILocation(line: 2623, column: 8, scope: !7886)
!7888 = !DILocation(line: 2623, column: 13, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7886, file: !1, line: 2623, column: 3)
!7890 = !DILocation(line: 2623, column: 27, scope: !7889)
!7891 = !DILocation(line: 2623, column: 15, scope: !7889)
!7892 = !DILocation(line: 2623, column: 3, scope: !7886)
!7893 = !DILocation(line: 2624, column: 5, scope: !7889)
!7894 = !DILocation(line: 2624, column: 13, scope: !7889)
!7895 = !DILocation(line: 2624, column: 15, scope: !7889)
!7896 = !DILocation(line: 2623, column: 55, scope: !7889)
!7897 = !DILocation(line: 2623, column: 3, scope: !7889)
!7898 = distinct !{!7898, !7892, !7899}
!7899 = !DILocation(line: 2624, column: 16, scope: !7886)
!7900 = !DILocation(line: 2625, column: 8, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 2625, column: 8)
!7902 = !DILocation(line: 2625, column: 15, scope: !7901)
!7903 = !DILocation(line: 2625, column: 37, scope: !7901)
!7904 = !DILocation(line: 2625, column: 40, scope: !7901)
!7905 = !DILocation(line: 2625, column: 48, scope: !7901)
!7906 = !DILocation(line: 2625, column: 54, scope: !7901)
!7907 = !DILocation(line: 2625, column: 8, scope: !7792)
!7908 = !DILocalVariable(name: "x", scope: !7909, file: !1, line: 2642, type: !609)
!7909 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 2626, column: 3)
!7910 = !DILocation(line: 2642, column: 7, scope: !7909)
!7911 = !DILocation(line: 2648, column: 11, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7909, file: !1, line: 2648, column: 5)
!7913 = !DILocation(line: 2648, column: 10, scope: !7912)
!7914 = !DILocation(line: 2648, column: 15, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7912, file: !1, line: 2648, column: 5)
!7916 = !DILocation(line: 2648, column: 29, scope: !7915)
!7917 = !DILocation(line: 2648, column: 36, scope: !7915)
!7918 = !DILocation(line: 2648, column: 17, scope: !7915)
!7919 = !DILocation(line: 2648, column: 5, scope: !7912)
!7920 = !DILocalVariable(name: "id", scope: !7921, file: !1, line: 2651, type: !7922)
!7921 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 2649, column: 5)
!7922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!7923 = !DILocation(line: 2651, column: 9, scope: !7921)
!7924 = !DILocation(line: 2651, column: 14, scope: !7921)
!7925 = !DILocalVariable(name: "p", scope: !7921, file: !1, line: 2654, type: !6758)
!7926 = !DILocation(line: 2654, column: 19, scope: !7921)
!7927 = !DILocalVariable(name: "p_indexes", scope: !7921, file: !1, line: 2657, type: !6761)
!7928 = !DILocation(line: 2657, column: 19, scope: !7921)
!7929 = !DILocalVariable(name: "q", scope: !7921, file: !1, line: 2660, type: !6764)
!7930 = !DILocation(line: 2660, column: 19, scope: !7921)
!7931 = !DILocalVariable(name: "q_indexes", scope: !7921, file: !1, line: 2663, type: !6767)
!7932 = !DILocation(line: 2663, column: 19, scope: !7921)
!7933 = !DILocalVariable(name: "y", scope: !7921, file: !1, line: 2666, type: !609)
!7934 = !DILocation(line: 2666, column: 9, scope: !7921)
!7935 = !DILocalVariable(name: "r", scope: !7921, file: !1, line: 2669, type: !609)
!7936 = !DILocation(line: 2669, column: 9, scope: !7921)
!7937 = !DILocation(line: 2671, column: 11, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 2671, column: 11)
!7939 = !DILocation(line: 2671, column: 18, scope: !7938)
!7940 = !DILocation(line: 2671, column: 11, scope: !7921)
!7941 = !DILocation(line: 2672, column: 9, scope: !7938)
!7942 = !DILocation(line: 2673, column: 35, scope: !7921)
!7943 = !DILocation(line: 2673, column: 42, scope: !7921)
!7944 = !DILocation(line: 2673, column: 45, scope: !7921)
!7945 = !DILocation(line: 2673, column: 44, scope: !7921)
!7946 = !DILocation(line: 2673, column: 52, scope: !7921)
!7947 = !DILocation(line: 2673, column: 59, scope: !7921)
!7948 = !DILocation(line: 2673, column: 64, scope: !7921)
!7949 = !DILocation(line: 2673, column: 72, scope: !7921)
!7950 = !DILocation(line: 2673, column: 63, scope: !7921)
!7951 = !DILocation(line: 2673, column: 78, scope: !7921)
!7952 = !DILocation(line: 2674, column: 9, scope: !7921)
!7953 = !DILocation(line: 2673, column: 9, scope: !7921)
!7954 = !DILocation(line: 2673, column: 8, scope: !7921)
!7955 = !DILocation(line: 2675, column: 37, scope: !7921)
!7956 = !DILocation(line: 2675, column: 44, scope: !7921)
!7957 = !DILocation(line: 2675, column: 50, scope: !7921)
!7958 = !DILocation(line: 2675, column: 64, scope: !7921)
!7959 = !DILocation(line: 2675, column: 69, scope: !7921)
!7960 = !DILocation(line: 2675, column: 9, scope: !7921)
!7961 = !DILocation(line: 2675, column: 8, scope: !7921)
!7962 = !DILocation(line: 2676, column: 12, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 2676, column: 11)
!7964 = !DILocation(line: 2676, column: 14, scope: !7963)
!7965 = !DILocation(line: 2676, column: 45, scope: !7963)
!7966 = !DILocation(line: 2676, column: 49, scope: !7963)
!7967 = !DILocation(line: 2676, column: 51, scope: !7963)
!7968 = !DILocation(line: 2676, column: 11, scope: !7921)
!7969 = !DILocation(line: 2678, column: 17, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2677, column: 9)
!7971 = !DILocation(line: 2679, column: 11, scope: !7970)
!7972 = !DILocation(line: 2681, column: 47, scope: !7921)
!7973 = !DILocation(line: 2681, column: 17, scope: !7921)
!7974 = !DILocation(line: 2681, column: 16, scope: !7921)
!7975 = !DILocation(line: 2682, column: 49, scope: !7921)
!7976 = !DILocation(line: 2682, column: 17, scope: !7921)
!7977 = !DILocation(line: 2682, column: 16, scope: !7921)
!7978 = !DILocation(line: 2685, column: 11, scope: !7921)
!7979 = !DILocation(line: 2685, column: 9, scope: !7921)
!7980 = !DILocation(line: 2687, column: 13, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 2687, column: 7)
!7982 = !DILocation(line: 2687, column: 12, scope: !7981)
!7983 = !DILocation(line: 2687, column: 17, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7981, file: !1, line: 2687, column: 7)
!7985 = !DILocation(line: 2687, column: 31, scope: !7984)
!7986 = !DILocation(line: 2687, column: 38, scope: !7984)
!7987 = !DILocation(line: 2687, column: 19, scope: !7984)
!7988 = !DILocation(line: 2687, column: 7, scope: !7981)
!7989 = !DILocalVariable(name: "result", scope: !7990, file: !1, line: 2690, type: !7991)
!7990 = distinct !DILexicalBlock(scope: !7984, file: !1, line: 2688, column: 7)
!7991 = !DIDerivedType(tag: DW_TAG_typedef, name: "DoublePixelPacket", file: !410, line: 92, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DoublePixelPacket", file: !410, line: 84, size: 320, elements: !7993)
!7993 = !{!7994, !7995, !7996, !7997, !7998}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !7992, file: !410, line: 87, baseType: !617, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !7992, file: !410, line: 88, baseType: !617, size: 64, offset: 64)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !7992, file: !410, line: 89, baseType: !617, size: 64, offset: 128)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !7992, file: !410, line: 90, baseType: !617, size: 64, offset: 192)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !7992, file: !410, line: 91, baseType: !617, size: 64, offset: 256)
!7999 = !DILocation(line: 2690, column: 11, scope: !7990)
!8000 = !DILocalVariable(name: "v", scope: !7990, file: !1, line: 2693, type: !609)
!8001 = !DILocation(line: 2693, column: 11, scope: !7990)
!8002 = !DILocalVariable(name: "k", scope: !7990, file: !1, line: 2696, type: !6838)
!8003 = !DILocation(line: 2696, column: 21, scope: !7990)
!8004 = !DILocalVariable(name: "k_pixels", scope: !7990, file: !1, line: 2699, type: !6758)
!8005 = !DILocation(line: 2699, column: 21, scope: !7990)
!8006 = !DILocalVariable(name: "k_indexes", scope: !7990, file: !1, line: 2702, type: !6761)
!8007 = !DILocation(line: 2702, column: 21, scope: !7990)
!8008 = !DILocation(line: 2707, column: 10, scope: !7990)
!8009 = !DILocation(line: 2707, column: 14, scope: !7990)
!8010 = !DILocation(line: 2707, column: 16, scope: !7990)
!8011 = !DILocation(line: 2708, column: 13, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7990, file: !1, line: 2708, column: 13)
!8013 = !DILocation(line: 2708, column: 20, scope: !8012)
!8014 = !DILocation(line: 2708, column: 31, scope: !8012)
!8015 = !DILocation(line: 2708, column: 13, scope: !7990)
!8016 = !DILocation(line: 2709, column: 11, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !1, line: 2709, column: 11)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 2709, column: 11)
!8019 = !DILocation(line: 2709, column: 11, scope: !8018)
!8020 = !DILocation(line: 2716, column: 26, scope: !7990)
!8021 = !DILocation(line: 2716, column: 16, scope: !7990)
!8022 = !DILocation(line: 2716, column: 24, scope: !7990)
!8023 = !DILocation(line: 2715, column: 16, scope: !7990)
!8024 = !DILocation(line: 2715, column: 24, scope: !7990)
!8025 = !DILocation(line: 2714, column: 16, scope: !7990)
!8026 = !DILocation(line: 2714, column: 24, scope: !7990)
!8027 = !DILocation(line: 2713, column: 16, scope: !7990)
!8028 = !DILocation(line: 2713, column: 24, scope: !7990)
!8029 = !DILocation(line: 2712, column: 16, scope: !7990)
!8030 = !DILocation(line: 2712, column: 24, scope: !7990)
!8031 = !DILocation(line: 2725, column: 14, scope: !7990)
!8032 = !DILocation(line: 2725, column: 22, scope: !7990)
!8033 = !DILocation(line: 2725, column: 30, scope: !7990)
!8034 = !DILocation(line: 2725, column: 38, scope: !7990)
!8035 = !DILocation(line: 2725, column: 44, scope: !7990)
!8036 = !DILocation(line: 2725, column: 11, scope: !7990)
!8037 = !DILocation(line: 2726, column: 20, scope: !7990)
!8038 = !DILocation(line: 2726, column: 18, scope: !7990)
!8039 = !DILocation(line: 2727, column: 21, scope: !7990)
!8040 = !DILocation(line: 2727, column: 19, scope: !7990)
!8041 = !DILocation(line: 2728, column: 16, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7990, file: !1, line: 2728, column: 14)
!8043 = !DILocation(line: 2728, column: 24, scope: !8042)
!8044 = !DILocation(line: 2728, column: 40, scope: !8042)
!8045 = !DILocation(line: 2728, column: 47, scope: !8042)
!8046 = !DILocation(line: 2729, column: 31, scope: !8042)
!8047 = !DILocation(line: 2729, column: 38, scope: !8042)
!8048 = !DILocation(line: 2729, column: 44, scope: !8042)
!8049 = !DILocation(line: 2728, column: 14, scope: !7990)
!8050 = !DILocation(line: 2733, column: 19, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2733, column: 13)
!8052 = distinct !DILexicalBlock(scope: !8042, file: !1, line: 2730, column: 11)
!8053 = !DILocation(line: 2733, column: 18, scope: !8051)
!8054 = !DILocation(line: 2733, column: 23, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !1, line: 2733, column: 13)
!8056 = !DILocation(line: 2733, column: 37, scope: !8055)
!8057 = !DILocation(line: 2733, column: 45, scope: !8055)
!8058 = !DILocation(line: 2733, column: 25, scope: !8055)
!8059 = !DILocation(line: 2733, column: 13, scope: !8051)
!8060 = !DILocation(line: 2734, column: 20, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !1, line: 2734, column: 20)
!8062 = distinct !DILexicalBlock(scope: !8055, file: !1, line: 2733, column: 58)
!8063 = !DILocation(line: 2734, column: 20, scope: !8062)
!8064 = !DILocation(line: 2734, column: 32, scope: !8061)
!8065 = !DILocation(line: 2735, column: 35, scope: !8062)
!8066 = !DILocation(line: 2735, column: 34, scope: !8062)
!8067 = !DILocation(line: 2735, column: 38, scope: !8062)
!8068 = !DILocation(line: 2735, column: 37, scope: !8062)
!8069 = !DILocation(line: 2735, column: 22, scope: !8062)
!8070 = !DILocation(line: 2735, column: 30, scope: !8062)
!8071 = !DILocation(line: 2736, column: 35, scope: !8062)
!8072 = !DILocation(line: 2736, column: 34, scope: !8062)
!8073 = !DILocation(line: 2736, column: 38, scope: !8062)
!8074 = !DILocation(line: 2736, column: 37, scope: !8062)
!8075 = !DILocation(line: 2736, column: 22, scope: !8062)
!8076 = !DILocation(line: 2736, column: 30, scope: !8062)
!8077 = !DILocation(line: 2737, column: 35, scope: !8062)
!8078 = !DILocation(line: 2737, column: 34, scope: !8062)
!8079 = !DILocation(line: 2737, column: 38, scope: !8062)
!8080 = !DILocation(line: 2737, column: 37, scope: !8062)
!8081 = !DILocation(line: 2737, column: 22, scope: !8062)
!8082 = !DILocation(line: 2737, column: 30, scope: !8062)
!8083 = !DILocation(line: 2738, column: 35, scope: !8062)
!8084 = !DILocation(line: 2738, column: 34, scope: !8062)
!8085 = !DILocation(line: 2738, column: 38, scope: !8062)
!8086 = !DILocation(line: 2738, column: 37, scope: !8062)
!8087 = !DILocation(line: 2738, column: 22, scope: !8062)
!8088 = !DILocation(line: 2738, column: 30, scope: !8062)
!8089 = !DILocation(line: 2739, column: 20, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8062, file: !1, line: 2739, column: 20)
!8091 = !DILocation(line: 2739, column: 27, scope: !8090)
!8092 = !DILocation(line: 2739, column: 38, scope: !8090)
!8093 = !DILocation(line: 2739, column: 20, scope: !8062)
!8094 = !DILocation(line: 2740, column: 35, scope: !8090)
!8095 = !DILocation(line: 2740, column: 34, scope: !8090)
!8096 = !DILocation(line: 2740, column: 40, scope: !8090)
!8097 = !DILocation(line: 2740, column: 39, scope: !8090)
!8098 = !DILocation(line: 2740, column: 38, scope: !8090)
!8099 = !DILocation(line: 2740, column: 37, scope: !8090)
!8100 = !DILocation(line: 2740, column: 24, scope: !8090)
!8101 = !DILocation(line: 2740, column: 30, scope: !8090)
!8102 = !DILocation(line: 2740, column: 17, scope: !8090)
!8103 = !DILocation(line: 2741, column: 16, scope: !8062)
!8104 = !DILocation(line: 2742, column: 23, scope: !8062)
!8105 = !DILocation(line: 2743, column: 24, scope: !8062)
!8106 = !DILocation(line: 2744, column: 13, scope: !8062)
!8107 = !DILocation(line: 2733, column: 54, scope: !8055)
!8108 = !DILocation(line: 2733, column: 13, scope: !8055)
!8109 = distinct !{!8109, !8059, !8110}
!8110 = !DILocation(line: 2744, column: 13, scope: !8051)
!8111 = !DILocation(line: 2745, column: 18, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2745, column: 17)
!8113 = !DILocation(line: 2745, column: 26, scope: !8112)
!8114 = !DILocation(line: 2745, column: 40, scope: !8112)
!8115 = !DILocation(line: 2745, column: 17, scope: !8052)
!8116 = !DILocation(line: 2746, column: 15, scope: !8112)
!8117 = !DILocation(line: 2747, column: 18, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2747, column: 17)
!8119 = !DILocation(line: 2747, column: 26, scope: !8118)
!8120 = !DILocation(line: 2747, column: 42, scope: !8118)
!8121 = !DILocation(line: 2747, column: 17, scope: !8052)
!8122 = !DILocation(line: 2748, column: 15, scope: !8118)
!8123 = !DILocation(line: 2749, column: 18, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2749, column: 17)
!8125 = !DILocation(line: 2749, column: 26, scope: !8124)
!8126 = !DILocation(line: 2749, column: 41, scope: !8124)
!8127 = !DILocation(line: 2749, column: 17, scope: !8052)
!8128 = !DILocation(line: 2750, column: 15, scope: !8124)
!8129 = !DILocation(line: 2751, column: 19, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2751, column: 17)
!8131 = !DILocation(line: 2751, column: 27, scope: !8130)
!8132 = !DILocation(line: 2751, column: 45, scope: !8130)
!8133 = !DILocation(line: 2751, column: 51, scope: !8130)
!8134 = !DILocation(line: 2752, column: 18, scope: !8130)
!8135 = !DILocation(line: 2752, column: 25, scope: !8130)
!8136 = !DILocation(line: 2752, column: 31, scope: !8130)
!8137 = !DILocation(line: 2751, column: 17, scope: !8052)
!8138 = !DILocation(line: 2753, column: 15, scope: !8130)
!8139 = !DILocation(line: 2754, column: 19, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2754, column: 17)
!8141 = !DILocation(line: 2754, column: 27, scope: !8140)
!8142 = !DILocation(line: 2754, column: 43, scope: !8140)
!8143 = !DILocation(line: 2754, column: 49, scope: !8140)
!8144 = !DILocation(line: 2755, column: 18, scope: !8140)
!8145 = !DILocation(line: 2755, column: 25, scope: !8140)
!8146 = !DILocation(line: 2755, column: 36, scope: !8140)
!8147 = !DILocation(line: 2754, column: 17, scope: !8052)
!8148 = !DILocation(line: 2756, column: 15, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !1, line: 2756, column: 15)
!8150 = distinct !DILexicalBlock(scope: !8140, file: !1, line: 2756, column: 15)
!8151 = !DILocation(line: 2756, column: 15, scope: !8150)
!8152 = !DILocation(line: 2757, column: 11, scope: !8052)
!8153 = !DILocalVariable(name: "gamma", scope: !8154, file: !1, line: 2764, type: !617)
!8154 = distinct !DILexicalBlock(scope: !8042, file: !1, line: 2759, column: 11)
!8155 = !DILocation(line: 2764, column: 15, scope: !8154)
!8156 = !DILocalVariable(name: "alpha", scope: !8154, file: !1, line: 2767, type: !841)
!8157 = !DILocation(line: 2767, column: 15, scope: !8154)
!8158 = !DILocalVariable(name: "count", scope: !8154, file: !1, line: 2770, type: !604)
!8159 = !DILocation(line: 2770, column: 15, scope: !8154)
!8160 = !DILocation(line: 2772, column: 18, scope: !8154)
!8161 = !DILocation(line: 2773, column: 18, scope: !8154)
!8162 = !DILocation(line: 2774, column: 19, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8154, file: !1, line: 2774, column: 13)
!8164 = !DILocation(line: 2774, column: 18, scope: !8163)
!8165 = !DILocation(line: 2774, column: 23, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8163, file: !1, line: 2774, column: 13)
!8167 = !DILocation(line: 2774, column: 37, scope: !8166)
!8168 = !DILocation(line: 2774, column: 45, scope: !8166)
!8169 = !DILocation(line: 2774, column: 25, scope: !8166)
!8170 = !DILocation(line: 2774, column: 13, scope: !8163)
!8171 = !DILocation(line: 2775, column: 20, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 2775, column: 20)
!8173 = distinct !DILexicalBlock(scope: !8166, file: !1, line: 2774, column: 58)
!8174 = !DILocation(line: 2775, column: 20, scope: !8173)
!8175 = !DILocation(line: 2775, column: 32, scope: !8172)
!8176 = !DILocation(line: 2776, column: 48, scope: !8173)
!8177 = !DILocation(line: 2776, column: 47, scope: !8173)
!8178 = !DILocation(line: 2776, column: 34, scope: !8173)
!8179 = !DILocation(line: 2776, column: 33, scope: !8173)
!8180 = !DILocation(line: 2776, column: 21, scope: !8173)
!8181 = !DILocation(line: 2776, column: 20, scope: !8173)
!8182 = !DILocation(line: 2777, column: 20, scope: !8173)
!8183 = !DILocation(line: 2778, column: 24, scope: !8173)
!8184 = !DILocation(line: 2778, column: 23, scope: !8173)
!8185 = !DILocation(line: 2778, column: 20, scope: !8173)
!8186 = !DILocation(line: 2779, column: 24, scope: !8173)
!8187 = !DILocation(line: 2779, column: 21, scope: !8173)
!8188 = !DILocation(line: 2780, column: 33, scope: !8173)
!8189 = !DILocation(line: 2780, column: 39, scope: !8173)
!8190 = !DILocation(line: 2780, column: 38, scope: !8173)
!8191 = !DILocation(line: 2780, column: 22, scope: !8173)
!8192 = !DILocation(line: 2780, column: 30, scope: !8173)
!8193 = !DILocation(line: 2781, column: 33, scope: !8173)
!8194 = !DILocation(line: 2781, column: 39, scope: !8173)
!8195 = !DILocation(line: 2781, column: 38, scope: !8173)
!8196 = !DILocation(line: 2781, column: 22, scope: !8173)
!8197 = !DILocation(line: 2781, column: 30, scope: !8173)
!8198 = !DILocation(line: 2782, column: 33, scope: !8173)
!8199 = !DILocation(line: 2782, column: 39, scope: !8173)
!8200 = !DILocation(line: 2782, column: 38, scope: !8173)
!8201 = !DILocation(line: 2782, column: 22, scope: !8173)
!8202 = !DILocation(line: 2782, column: 30, scope: !8173)
!8203 = !DILocation(line: 2783, column: 35, scope: !8173)
!8204 = !DILocation(line: 2783, column: 34, scope: !8173)
!8205 = !DILocation(line: 2783, column: 38, scope: !8173)
!8206 = !DILocation(line: 2783, column: 37, scope: !8173)
!8207 = !DILocation(line: 2783, column: 22, scope: !8173)
!8208 = !DILocation(line: 2783, column: 30, scope: !8173)
!8209 = !DILocation(line: 2784, column: 20, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 2784, column: 20)
!8211 = !DILocation(line: 2784, column: 27, scope: !8210)
!8212 = !DILocation(line: 2784, column: 38, scope: !8210)
!8213 = !DILocation(line: 2784, column: 20, scope: !8173)
!8214 = !DILocation(line: 2785, column: 33, scope: !8210)
!8215 = !DILocation(line: 2785, column: 41, scope: !8210)
!8216 = !DILocation(line: 2785, column: 40, scope: !8210)
!8217 = !DILocation(line: 2785, column: 39, scope: !8210)
!8218 = !DILocation(line: 2785, column: 38, scope: !8210)
!8219 = !DILocation(line: 2785, column: 24, scope: !8210)
!8220 = !DILocation(line: 2785, column: 30, scope: !8210)
!8221 = !DILocation(line: 2785, column: 17, scope: !8210)
!8222 = !DILocation(line: 2786, column: 16, scope: !8173)
!8223 = !DILocation(line: 2787, column: 23, scope: !8173)
!8224 = !DILocation(line: 2788, column: 24, scope: !8173)
!8225 = !DILocation(line: 2789, column: 13, scope: !8173)
!8226 = !DILocation(line: 2774, column: 54, scope: !8166)
!8227 = !DILocation(line: 2774, column: 13, scope: !8166)
!8228 = distinct !{!8228, !8170, !8229}
!8229 = !DILocation(line: 2789, column: 13, scope: !8163)
!8230 = !DILocation(line: 2792, column: 17, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8154, file: !1, line: 2792, column: 17)
!8232 = !DILocation(line: 2792, column: 23, scope: !8231)
!8233 = !DILocation(line: 2792, column: 17, scope: !8154)
!8234 = !DILocation(line: 2792, column: 36, scope: !8231)
!8235 = !DILocation(line: 2792, column: 30, scope: !8231)
!8236 = !DILocation(line: 2794, column: 41, scope: !8154)
!8237 = !DILocation(line: 2794, column: 19, scope: !8154)
!8238 = !DILocation(line: 2794, column: 18, scope: !8154)
!8239 = !DILocation(line: 2795, column: 29, scope: !8154)
!8240 = !DILocation(line: 2795, column: 37, scope: !8154)
!8241 = !DILocation(line: 2795, column: 20, scope: !8154)
!8242 = !DILocation(line: 2795, column: 44, scope: !8154)
!8243 = !DILocation(line: 2795, column: 43, scope: !8154)
!8244 = !DILocation(line: 2795, column: 18, scope: !8154)
!8245 = !DILocation(line: 2796, column: 13, scope: !8154)
!8246 = !DILocation(line: 2797, column: 13, scope: !8154)
!8247 = !DILocation(line: 2798, column: 13, scope: !8154)
!8248 = !DILocation(line: 2799, column: 13, scope: !8154)
!8249 = !DILocation(line: 2800, column: 17, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8154, file: !1, line: 2800, column: 17)
!8251 = !DILocation(line: 2800, column: 24, scope: !8250)
!8252 = !DILocation(line: 2800, column: 35, scope: !8250)
!8253 = !DILocation(line: 2800, column: 17, scope: !8154)
!8254 = !DILocation(line: 2801, column: 15, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !1, line: 2801, column: 15)
!8256 = distinct !DILexicalBlock(scope: !8250, file: !1, line: 2801, column: 15)
!8257 = !DILocation(line: 2801, column: 15, scope: !8256)
!8258 = !DILocation(line: 2805, column: 18, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !7990, file: !1, line: 2805, column: 16)
!8260 = !DILocation(line: 2805, column: 20, scope: !8259)
!8261 = !DILocation(line: 2805, column: 23, scope: !8259)
!8262 = !DILocation(line: 2805, column: 30, scope: !8259)
!8263 = !DILocation(line: 2805, column: 27, scope: !8259)
!8264 = !DILocation(line: 2806, column: 13, scope: !8259)
!8265 = !DILocation(line: 2806, column: 18, scope: !8259)
!8266 = !DILocation(line: 2806, column: 20, scope: !8259)
!8267 = !DILocation(line: 2806, column: 23, scope: !8259)
!8268 = !DILocation(line: 2806, column: 32, scope: !8259)
!8269 = !DILocation(line: 2806, column: 29, scope: !8259)
!8270 = !DILocation(line: 2807, column: 13, scope: !8259)
!8271 = !DILocation(line: 2807, column: 18, scope: !8259)
!8272 = !DILocation(line: 2807, column: 20, scope: !8259)
!8273 = !DILocation(line: 2807, column: 23, scope: !8259)
!8274 = !DILocation(line: 2807, column: 31, scope: !8259)
!8275 = !DILocation(line: 2807, column: 28, scope: !8259)
!8276 = !DILocation(line: 2808, column: 13, scope: !8259)
!8277 = !DILocation(line: 2808, column: 18, scope: !8259)
!8278 = !DILocation(line: 2808, column: 20, scope: !8259)
!8279 = !DILocation(line: 2808, column: 23, scope: !8259)
!8280 = !DILocation(line: 2808, column: 34, scope: !8259)
!8281 = !DILocation(line: 2808, column: 31, scope: !8259)
!8282 = !DILocation(line: 2809, column: 13, scope: !8259)
!8283 = !DILocation(line: 2809, column: 18, scope: !8259)
!8284 = !DILocation(line: 2809, column: 25, scope: !8259)
!8285 = !DILocation(line: 2809, column: 36, scope: !8259)
!8286 = !DILocation(line: 2809, column: 54, scope: !8259)
!8287 = !DILocation(line: 2810, column: 17, scope: !8259)
!8288 = !DILocation(line: 2810, column: 47, scope: !8259)
!8289 = !DILocation(line: 2810, column: 44, scope: !8259)
!8290 = !DILocation(line: 2805, column: 16, scope: !7990)
!8291 = !DILocation(line: 2811, column: 11, scope: !8259)
!8292 = !DILocation(line: 2811, column: 19, scope: !8259)
!8293 = !DILocation(line: 2811, column: 22, scope: !8259)
!8294 = !DILocation(line: 2812, column: 10, scope: !7990)
!8295 = !DILocation(line: 2813, column: 10, scope: !7990)
!8296 = !DILocation(line: 2814, column: 7, scope: !7990)
!8297 = !DILocation(line: 2687, column: 45, scope: !7984)
!8298 = !DILocation(line: 2687, column: 7, scope: !7984)
!8299 = distinct !{!8299, !7988, !8300}
!8300 = !DILocation(line: 2814, column: 7, scope: !7981)
!8301 = !DILocation(line: 2815, column: 41, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 2815, column: 12)
!8303 = !DILocation(line: 2815, column: 48, scope: !8302)
!8304 = !DILocation(line: 2815, column: 12, scope: !8302)
!8305 = !DILocation(line: 2815, column: 59, scope: !8302)
!8306 = !DILocation(line: 2815, column: 12, scope: !7921)
!8307 = !DILocation(line: 2816, column: 15, scope: !8302)
!8308 = !DILocation(line: 2816, column: 9, scope: !8302)
!8309 = !DILocation(line: 2817, column: 11, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 2817, column: 11)
!8311 = !DILocation(line: 2817, column: 18, scope: !8310)
!8312 = !DILocation(line: 2817, column: 35, scope: !8310)
!8313 = !DILocation(line: 2817, column: 11, scope: !7921)
!8314 = !DILocalVariable(name: "proceed", scope: !8315, file: !1, line: 2820, type: !641)
!8315 = distinct !DILexicalBlock(scope: !8310, file: !1, line: 2818, column: 9)
!8316 = !DILocation(line: 2820, column: 13, scope: !8315)
!8317 = !DILocation(line: 2825, column: 36, scope: !8315)
!8318 = !DILocation(line: 2825, column: 64, scope: !8315)
!8319 = !DILocation(line: 2825, column: 67, scope: !8315)
!8320 = !DILocation(line: 2825, column: 74, scope: !8315)
!8321 = !DILocation(line: 2825, column: 19, scope: !8315)
!8322 = !DILocation(line: 2825, column: 18, scope: !8315)
!8323 = !DILocation(line: 2826, column: 15, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8315, file: !1, line: 2826, column: 15)
!8325 = !DILocation(line: 2826, column: 23, scope: !8324)
!8326 = !DILocation(line: 2826, column: 15, scope: !8315)
!8327 = !DILocation(line: 2827, column: 19, scope: !8324)
!8328 = !DILocation(line: 2827, column: 13, scope: !8324)
!8329 = !DILocation(line: 2828, column: 9, scope: !8315)
!8330 = !DILocation(line: 2829, column: 5, scope: !7921)
!8331 = !DILocation(line: 2648, column: 46, scope: !7915)
!8332 = !DILocation(line: 2648, column: 5, scope: !7915)
!8333 = distinct !{!8333, !7919, !8334}
!8334 = !DILocation(line: 2829, column: 5, scope: !7912)
!8335 = !DILocation(line: 2830, column: 24, scope: !7909)
!8336 = !DILocation(line: 2830, column: 31, scope: !7909)
!8337 = !DILocation(line: 2830, column: 5, scope: !7909)
!8338 = !DILocation(line: 2830, column: 19, scope: !7909)
!8339 = !DILocation(line: 2830, column: 23, scope: !7909)
!8340 = !DILocation(line: 2831, column: 29, scope: !7909)
!8341 = !DILocation(line: 2831, column: 12, scope: !7909)
!8342 = !DILocation(line: 2831, column: 11, scope: !7909)
!8343 = !DILocation(line: 2832, column: 29, scope: !7909)
!8344 = !DILocation(line: 2832, column: 12, scope: !7909)
!8345 = !DILocation(line: 2832, column: 11, scope: !7909)
!8346 = !DILocation(line: 2833, column: 11, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !7909, file: !1, line: 2833, column: 5)
!8348 = !DILocation(line: 2833, column: 10, scope: !8347)
!8349 = !DILocation(line: 2833, column: 15, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8347, file: !1, line: 2833, column: 5)
!8351 = !DILocation(line: 2833, column: 29, scope: !8350)
!8352 = !DILocation(line: 2833, column: 17, scope: !8350)
!8353 = !DILocation(line: 2833, column: 5, scope: !8347)
!8354 = !DILocation(line: 2834, column: 16, scope: !8350)
!8355 = !DILocation(line: 2834, column: 24, scope: !8350)
!8356 = !DILocation(line: 2834, column: 14, scope: !8350)
!8357 = !DILocation(line: 2834, column: 7, scope: !8350)
!8358 = !DILocation(line: 2833, column: 57, scope: !8350)
!8359 = !DILocation(line: 2833, column: 5, scope: !8350)
!8360 = distinct !{!8360, !8353, !8361}
!8361 = !DILocation(line: 2834, column: 25, scope: !8347)
!8362 = !DILocation(line: 2835, column: 47, scope: !7909)
!8363 = !DILocation(line: 2835, column: 24, scope: !7909)
!8364 = !DILocation(line: 2835, column: 13, scope: !7909)
!8365 = !DILocation(line: 2835, column: 12, scope: !7909)
!8366 = !DILocation(line: 2836, column: 12, scope: !7909)
!8367 = !DILocation(line: 2836, column: 31, scope: !7909)
!8368 = !DILocation(line: 2836, column: 5, scope: !7909)
!8369 = !DILocation(line: 2846, column: 9, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 2846, column: 3)
!8371 = !DILocation(line: 2846, column: 8, scope: !8370)
!8372 = !DILocation(line: 2846, column: 13, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8370, file: !1, line: 2846, column: 3)
!8374 = !DILocation(line: 2846, column: 27, scope: !8373)
!8375 = !DILocation(line: 2846, column: 34, scope: !8373)
!8376 = !DILocation(line: 2846, column: 15, scope: !8373)
!8377 = !DILocation(line: 2846, column: 3, scope: !8370)
!8378 = !DILocalVariable(name: "id", scope: !8379, file: !1, line: 2849, type: !7922)
!8379 = distinct !DILexicalBlock(scope: !8373, file: !1, line: 2847, column: 3)
!8380 = !DILocation(line: 2849, column: 7, scope: !8379)
!8381 = !DILocation(line: 2849, column: 12, scope: !8379)
!8382 = !DILocalVariable(name: "p", scope: !8379, file: !1, line: 2852, type: !6758)
!8383 = !DILocation(line: 2852, column: 17, scope: !8379)
!8384 = !DILocalVariable(name: "p_indexes", scope: !8379, file: !1, line: 2855, type: !6761)
!8385 = !DILocation(line: 2855, column: 17, scope: !8379)
!8386 = !DILocalVariable(name: "q", scope: !8379, file: !1, line: 2858, type: !6764)
!8387 = !DILocation(line: 2858, column: 17, scope: !8379)
!8388 = !DILocalVariable(name: "q_indexes", scope: !8379, file: !1, line: 2861, type: !6767)
!8389 = !DILocation(line: 2861, column: 17, scope: !8379)
!8390 = !DILocalVariable(name: "x", scope: !8379, file: !1, line: 2864, type: !609)
!8391 = !DILocation(line: 2864, column: 7, scope: !8379)
!8392 = !DILocalVariable(name: "r", scope: !8379, file: !1, line: 2867, type: !604)
!8393 = !DILocation(line: 2867, column: 7, scope: !8379)
!8394 = !DILocation(line: 2869, column: 9, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 2869, column: 9)
!8396 = !DILocation(line: 2869, column: 16, scope: !8395)
!8397 = !DILocation(line: 2869, column: 9, scope: !8379)
!8398 = !DILocation(line: 2870, column: 7, scope: !8395)
!8399 = !DILocation(line: 2871, column: 33, scope: !8379)
!8400 = !DILocation(line: 2871, column: 42, scope: !8379)
!8401 = !DILocation(line: 2871, column: 41, scope: !8379)
!8402 = !DILocation(line: 2871, column: 48, scope: !8379)
!8403 = !DILocation(line: 2871, column: 50, scope: !8379)
!8404 = !DILocation(line: 2871, column: 49, scope: !8379)
!8405 = !DILocation(line: 2871, column: 56, scope: !8379)
!8406 = !DILocation(line: 2872, column: 10, scope: !8379)
!8407 = !DILocation(line: 2872, column: 18, scope: !8379)
!8408 = !DILocation(line: 2872, column: 27, scope: !8379)
!8409 = !DILocation(line: 2871, column: 7, scope: !8379)
!8410 = !DILocation(line: 2871, column: 6, scope: !8379)
!8411 = !DILocation(line: 2873, column: 35, scope: !8379)
!8412 = !DILocation(line: 2873, column: 44, scope: !8379)
!8413 = !DILocation(line: 2873, column: 46, scope: !8379)
!8414 = !DILocation(line: 2873, column: 60, scope: !8379)
!8415 = !DILocation(line: 2874, column: 10, scope: !8379)
!8416 = !DILocation(line: 2873, column: 7, scope: !8379)
!8417 = !DILocation(line: 2873, column: 6, scope: !8379)
!8418 = !DILocation(line: 2875, column: 10, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 2875, column: 9)
!8420 = !DILocation(line: 2875, column: 12, scope: !8419)
!8421 = !DILocation(line: 2875, column: 43, scope: !8419)
!8422 = !DILocation(line: 2875, column: 47, scope: !8419)
!8423 = !DILocation(line: 2875, column: 49, scope: !8419)
!8424 = !DILocation(line: 2875, column: 9, scope: !8379)
!8425 = !DILocation(line: 2877, column: 15, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8419, file: !1, line: 2876, column: 7)
!8427 = !DILocation(line: 2878, column: 9, scope: !8426)
!8428 = !DILocation(line: 2880, column: 45, scope: !8379)
!8429 = !DILocation(line: 2880, column: 15, scope: !8379)
!8430 = !DILocation(line: 2880, column: 14, scope: !8379)
!8431 = !DILocation(line: 2881, column: 47, scope: !8379)
!8432 = !DILocation(line: 2881, column: 15, scope: !8379)
!8433 = !DILocation(line: 2881, column: 14, scope: !8379)
!8434 = !DILocation(line: 2884, column: 9, scope: !8379)
!8435 = !DILocation(line: 2884, column: 20, scope: !8379)
!8436 = !DILocation(line: 2884, column: 19, scope: !8379)
!8437 = !DILocation(line: 2884, column: 27, scope: !8379)
!8438 = !DILocation(line: 2884, column: 25, scope: !8379)
!8439 = !DILocation(line: 2884, column: 7, scope: !8379)
!8440 = !DILocation(line: 2886, column: 11, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 2886, column: 5)
!8442 = !DILocation(line: 2886, column: 10, scope: !8441)
!8443 = !DILocation(line: 2886, column: 15, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8441, file: !1, line: 2886, column: 5)
!8445 = !DILocation(line: 2886, column: 29, scope: !8444)
!8446 = !DILocation(line: 2886, column: 36, scope: !8444)
!8447 = !DILocation(line: 2886, column: 17, scope: !8444)
!8448 = !DILocation(line: 2886, column: 5, scope: !8441)
!8449 = !DILocalVariable(name: "v", scope: !8450, file: !1, line: 2889, type: !609)
!8450 = distinct !DILexicalBlock(scope: !8444, file: !1, line: 2887, column: 5)
!8451 = !DILocation(line: 2889, column: 9, scope: !8450)
!8452 = !DILocalVariable(name: "u", scope: !8450, file: !1, line: 2892, type: !609)
!8453 = !DILocation(line: 2892, column: 9, scope: !8450)
!8454 = !DILocalVariable(name: "k", scope: !8450, file: !1, line: 2895, type: !6838)
!8455 = !DILocation(line: 2895, column: 19, scope: !8450)
!8456 = !DILocalVariable(name: "k_pixels", scope: !8450, file: !1, line: 2898, type: !6758)
!8457 = !DILocation(line: 2898, column: 19, scope: !8450)
!8458 = !DILocalVariable(name: "k_indexes", scope: !8450, file: !1, line: 2901, type: !6761)
!8459 = !DILocation(line: 2901, column: 19, scope: !8450)
!8460 = !DILocalVariable(name: "result", scope: !8450, file: !1, line: 2904, type: !7991)
!8461 = !DILocation(line: 2904, column: 9, scope: !8450)
!8462 = !DILocalVariable(name: "min", scope: !8450, file: !1, line: 2905, type: !7991)
!8463 = !DILocation(line: 2905, column: 9, scope: !8450)
!8464 = !DILocalVariable(name: "max", scope: !8450, file: !1, line: 2906, type: !7991)
!8465 = !DILocation(line: 2906, column: 9, scope: !8450)
!8466 = !DILocation(line: 2911, column: 8, scope: !8450)
!8467 = !DILocation(line: 2911, column: 12, scope: !8450)
!8468 = !DILocation(line: 2911, column: 14, scope: !8450)
!8469 = !DILocation(line: 2912, column: 11, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 2912, column: 11)
!8471 = !DILocation(line: 2912, column: 18, scope: !8470)
!8472 = !DILocation(line: 2912, column: 29, scope: !8470)
!8473 = !DILocation(line: 2912, column: 11, scope: !8450)
!8474 = !DILocation(line: 2913, column: 9, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !1, line: 2913, column: 9)
!8476 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 2913, column: 9)
!8477 = !DILocation(line: 2913, column: 9, scope: !8476)
!8478 = !DILocation(line: 2920, column: 11, scope: !8450)
!8479 = !DILocation(line: 2920, column: 19, scope: !8450)
!8480 = !DILocation(line: 2919, column: 11, scope: !8450)
!8481 = !DILocation(line: 2919, column: 19, scope: !8450)
!8482 = !DILocation(line: 2918, column: 11, scope: !8450)
!8483 = !DILocation(line: 2918, column: 19, scope: !8450)
!8484 = !DILocation(line: 2917, column: 11, scope: !8450)
!8485 = !DILocation(line: 2917, column: 19, scope: !8450)
!8486 = !DILocation(line: 2916, column: 11, scope: !8450)
!8487 = !DILocation(line: 2916, column: 19, scope: !8450)
!8488 = !DILocation(line: 2925, column: 11, scope: !8450)
!8489 = !DILocation(line: 2925, column: 19, scope: !8450)
!8490 = !DILocation(line: 2924, column: 11, scope: !8450)
!8491 = !DILocation(line: 2924, column: 19, scope: !8450)
!8492 = !DILocation(line: 2923, column: 11, scope: !8450)
!8493 = !DILocation(line: 2923, column: 19, scope: !8450)
!8494 = !DILocation(line: 2922, column: 11, scope: !8450)
!8495 = !DILocation(line: 2922, column: 19, scope: !8450)
!8496 = !DILocation(line: 2921, column: 11, scope: !8450)
!8497 = !DILocation(line: 2921, column: 19, scope: !8450)
!8498 = !DILocation(line: 2927, column: 33, scope: !8450)
!8499 = !DILocation(line: 2927, column: 35, scope: !8450)
!8500 = !DILocation(line: 2927, column: 38, scope: !8450)
!8501 = !DILocation(line: 2927, column: 24, scope: !8450)
!8502 = !DILocation(line: 2927, column: 14, scope: !8450)
!8503 = !DILocation(line: 2927, column: 22, scope: !8450)
!8504 = !DILocation(line: 2928, column: 33, scope: !8450)
!8505 = !DILocation(line: 2928, column: 35, scope: !8450)
!8506 = !DILocation(line: 2928, column: 38, scope: !8450)
!8507 = !DILocation(line: 2928, column: 24, scope: !8450)
!8508 = !DILocation(line: 2928, column: 14, scope: !8450)
!8509 = !DILocation(line: 2928, column: 22, scope: !8450)
!8510 = !DILocation(line: 2929, column: 33, scope: !8450)
!8511 = !DILocation(line: 2929, column: 35, scope: !8450)
!8512 = !DILocation(line: 2929, column: 38, scope: !8450)
!8513 = !DILocation(line: 2929, column: 24, scope: !8450)
!8514 = !DILocation(line: 2929, column: 14, scope: !8450)
!8515 = !DILocation(line: 2929, column: 22, scope: !8450)
!8516 = !DILocation(line: 2930, column: 48, scope: !8450)
!8517 = !DILocation(line: 2930, column: 50, scope: !8450)
!8518 = !DILocation(line: 2930, column: 53, scope: !8450)
!8519 = !DILocation(line: 2930, column: 39, scope: !8450)
!8520 = !DILocation(line: 2930, column: 37, scope: !8450)
!8521 = !DILocation(line: 2930, column: 14, scope: !8450)
!8522 = !DILocation(line: 2930, column: 22, scope: !8450)
!8523 = !DILocation(line: 2931, column: 14, scope: !8450)
!8524 = !DILocation(line: 2931, column: 22, scope: !8450)
!8525 = !DILocation(line: 2932, column: 12, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 2932, column: 12)
!8527 = !DILocation(line: 2932, column: 19, scope: !8526)
!8528 = !DILocation(line: 2932, column: 30, scope: !8526)
!8529 = !DILocation(line: 2932, column: 12, scope: !8450)
!8530 = !DILocation(line: 2933, column: 36, scope: !8526)
!8531 = !DILocation(line: 2933, column: 27, scope: !8526)
!8532 = !DILocation(line: 2933, column: 17, scope: !8526)
!8533 = !DILocation(line: 2933, column: 25, scope: !8526)
!8534 = !DILocation(line: 2933, column: 10, scope: !8526)
!8535 = !DILocation(line: 2935, column: 15, scope: !8450)
!8536 = !DILocation(line: 2935, column: 7, scope: !8450)
!8537 = !DILocation(line: 2942, column: 28, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 2935, column: 23)
!8539 = !DILocation(line: 2942, column: 18, scope: !8538)
!8540 = !DILocation(line: 2942, column: 26, scope: !8538)
!8541 = !DILocation(line: 2941, column: 18, scope: !8538)
!8542 = !DILocation(line: 2941, column: 26, scope: !8538)
!8543 = !DILocation(line: 2940, column: 18, scope: !8538)
!8544 = !DILocation(line: 2940, column: 26, scope: !8538)
!8545 = !DILocation(line: 2939, column: 18, scope: !8538)
!8546 = !DILocation(line: 2939, column: 26, scope: !8538)
!8547 = !DILocation(line: 2938, column: 18, scope: !8538)
!8548 = !DILocation(line: 2938, column: 26, scope: !8538)
!8549 = !DILocation(line: 2943, column: 11, scope: !8538)
!8550 = !DILocation(line: 2947, column: 18, scope: !8538)
!8551 = !DILocation(line: 2947, column: 22, scope: !8538)
!8552 = !DILocation(line: 2948, column: 11, scope: !8538)
!8553 = !DILocation(line: 2950, column: 11, scope: !8538)
!8554 = !DILocation(line: 2953, column: 16, scope: !8450)
!8555 = !DILocation(line: 2953, column: 7, scope: !8450)
!8556 = !DILocation(line: 2973, column: 18, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 2953, column: 25)
!8558 = !DILocation(line: 2973, column: 26, scope: !8557)
!8559 = !DILocation(line: 2973, column: 34, scope: !8557)
!8560 = !DILocation(line: 2973, column: 42, scope: !8557)
!8561 = !DILocation(line: 2973, column: 48, scope: !8557)
!8562 = !DILocation(line: 2973, column: 56, scope: !8557)
!8563 = !DILocation(line: 2973, column: 47, scope: !8557)
!8564 = !DILocation(line: 2973, column: 62, scope: !8557)
!8565 = !DILocation(line: 2973, column: 15, scope: !8557)
!8566 = !DILocation(line: 2974, column: 24, scope: !8557)
!8567 = !DILocation(line: 2974, column: 22, scope: !8557)
!8568 = !DILocation(line: 2975, column: 25, scope: !8557)
!8569 = !DILocation(line: 2975, column: 23, scope: !8557)
!8570 = !DILocation(line: 2976, column: 20, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 2976, column: 18)
!8572 = !DILocation(line: 2976, column: 28, scope: !8571)
!8573 = !DILocation(line: 2976, column: 44, scope: !8571)
!8574 = !DILocation(line: 2976, column: 51, scope: !8571)
!8575 = !DILocation(line: 2977, column: 19, scope: !8571)
!8576 = !DILocation(line: 2977, column: 26, scope: !8571)
!8577 = !DILocation(line: 2977, column: 32, scope: !8571)
!8578 = !DILocation(line: 2976, column: 18, scope: !8557)
!8579 = !DILocation(line: 2981, column: 23, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 2981, column: 17)
!8581 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 2978, column: 15)
!8582 = !DILocation(line: 2981, column: 22, scope: !8580)
!8583 = !DILocation(line: 2981, column: 27, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2981, column: 17)
!8585 = !DILocation(line: 2981, column: 41, scope: !8584)
!8586 = !DILocation(line: 2981, column: 49, scope: !8584)
!8587 = !DILocation(line: 2981, column: 29, scope: !8584)
!8588 = !DILocation(line: 2981, column: 17, scope: !8580)
!8589 = !DILocation(line: 2982, column: 25, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !1, line: 2982, column: 19)
!8591 = distinct !DILexicalBlock(scope: !8584, file: !1, line: 2981, column: 62)
!8592 = !DILocation(line: 2982, column: 24, scope: !8590)
!8593 = !DILocation(line: 2982, column: 29, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8590, file: !1, line: 2982, column: 19)
!8595 = !DILocation(line: 2982, column: 43, scope: !8594)
!8596 = !DILocation(line: 2982, column: 51, scope: !8594)
!8597 = !DILocation(line: 2982, column: 31, scope: !8594)
!8598 = !DILocation(line: 2982, column: 19, scope: !8590)
!8599 = !DILocation(line: 2983, column: 26, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !1, line: 2983, column: 26)
!8601 = distinct !DILexicalBlock(scope: !8594, file: !1, line: 2982, column: 68)
!8602 = !DILocation(line: 2983, column: 26, scope: !8601)
!8603 = !DILocation(line: 2983, column: 38, scope: !8600)
!8604 = !DILocation(line: 2984, column: 41, scope: !8601)
!8605 = !DILocation(line: 2984, column: 40, scope: !8601)
!8606 = !DILocation(line: 2984, column: 44, scope: !8601)
!8607 = !DILocation(line: 2984, column: 53, scope: !8601)
!8608 = !DILocation(line: 2984, column: 56, scope: !8601)
!8609 = !DILocation(line: 2984, column: 43, scope: !8601)
!8610 = !DILocation(line: 2984, column: 28, scope: !8601)
!8611 = !DILocation(line: 2984, column: 36, scope: !8601)
!8612 = !DILocation(line: 2985, column: 41, scope: !8601)
!8613 = !DILocation(line: 2985, column: 40, scope: !8601)
!8614 = !DILocation(line: 2985, column: 44, scope: !8601)
!8615 = !DILocation(line: 2985, column: 53, scope: !8601)
!8616 = !DILocation(line: 2985, column: 56, scope: !8601)
!8617 = !DILocation(line: 2985, column: 43, scope: !8601)
!8618 = !DILocation(line: 2985, column: 28, scope: !8601)
!8619 = !DILocation(line: 2985, column: 36, scope: !8601)
!8620 = !DILocation(line: 2986, column: 41, scope: !8601)
!8621 = !DILocation(line: 2986, column: 40, scope: !8601)
!8622 = !DILocation(line: 2986, column: 44, scope: !8601)
!8623 = !DILocation(line: 2986, column: 53, scope: !8601)
!8624 = !DILocation(line: 2986, column: 56, scope: !8601)
!8625 = !DILocation(line: 2986, column: 43, scope: !8601)
!8626 = !DILocation(line: 2986, column: 28, scope: !8601)
!8627 = !DILocation(line: 2986, column: 36, scope: !8601)
!8628 = !DILocation(line: 2987, column: 41, scope: !8601)
!8629 = !DILocation(line: 2987, column: 40, scope: !8601)
!8630 = !DILocation(line: 2987, column: 44, scope: !8601)
!8631 = !DILocation(line: 2987, column: 53, scope: !8601)
!8632 = !DILocation(line: 2987, column: 56, scope: !8601)
!8633 = !DILocation(line: 2987, column: 43, scope: !8601)
!8634 = !DILocation(line: 2987, column: 28, scope: !8601)
!8635 = !DILocation(line: 2987, column: 36, scope: !8601)
!8636 = !DILocation(line: 2988, column: 26, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8601, file: !1, line: 2988, column: 26)
!8638 = !DILocation(line: 2988, column: 33, scope: !8637)
!8639 = !DILocation(line: 2988, column: 44, scope: !8637)
!8640 = !DILocation(line: 2988, column: 26, scope: !8601)
!8641 = !DILocation(line: 2989, column: 41, scope: !8637)
!8642 = !DILocation(line: 2989, column: 40, scope: !8637)
!8643 = !DILocation(line: 2989, column: 44, scope: !8637)
!8644 = !DILocation(line: 2989, column: 43, scope: !8637)
!8645 = !DILocation(line: 2989, column: 30, scope: !8637)
!8646 = !DILocation(line: 2989, column: 36, scope: !8637)
!8647 = !DILocation(line: 2989, column: 23, scope: !8637)
!8648 = !DILocation(line: 2990, column: 19, scope: !8601)
!8649 = !DILocation(line: 2982, column: 59, scope: !8594)
!8650 = !DILocation(line: 2982, column: 64, scope: !8594)
!8651 = !DILocation(line: 2982, column: 19, scope: !8594)
!8652 = distinct !{!8652, !8598, !8653}
!8653 = !DILocation(line: 2990, column: 19, scope: !8590)
!8654 = !DILocation(line: 2991, column: 31, scope: !8591)
!8655 = !DILocation(line: 2991, column: 28, scope: !8591)
!8656 = !DILocation(line: 2992, column: 32, scope: !8591)
!8657 = !DILocation(line: 2992, column: 29, scope: !8591)
!8658 = !DILocation(line: 2993, column: 17, scope: !8591)
!8659 = !DILocation(line: 2981, column: 58, scope: !8584)
!8660 = !DILocation(line: 2981, column: 17, scope: !8584)
!8661 = distinct !{!8661, !8588, !8662}
!8662 = !DILocation(line: 2993, column: 17, scope: !8580)
!8663 = !DILocation(line: 2994, column: 22, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 2994, column: 21)
!8665 = !DILocation(line: 2994, column: 30, scope: !8664)
!8666 = !DILocation(line: 2994, column: 44, scope: !8664)
!8667 = !DILocation(line: 2994, column: 21, scope: !8581)
!8668 = !DILocation(line: 2995, column: 19, scope: !8664)
!8669 = !DILocation(line: 2996, column: 22, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 2996, column: 21)
!8671 = !DILocation(line: 2996, column: 30, scope: !8670)
!8672 = !DILocation(line: 2996, column: 46, scope: !8670)
!8673 = !DILocation(line: 2996, column: 21, scope: !8581)
!8674 = !DILocation(line: 2997, column: 19, scope: !8670)
!8675 = !DILocation(line: 2998, column: 22, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 2998, column: 21)
!8677 = !DILocation(line: 2998, column: 30, scope: !8676)
!8678 = !DILocation(line: 2998, column: 45, scope: !8676)
!8679 = !DILocation(line: 2998, column: 21, scope: !8581)
!8680 = !DILocation(line: 2999, column: 19, scope: !8676)
!8681 = !DILocation(line: 3000, column: 23, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 3000, column: 21)
!8683 = !DILocation(line: 3000, column: 31, scope: !8682)
!8684 = !DILocation(line: 3000, column: 49, scope: !8682)
!8685 = !DILocation(line: 3000, column: 55, scope: !8682)
!8686 = !DILocation(line: 3001, column: 22, scope: !8682)
!8687 = !DILocation(line: 3001, column: 29, scope: !8682)
!8688 = !DILocation(line: 3001, column: 35, scope: !8682)
!8689 = !DILocation(line: 3000, column: 21, scope: !8581)
!8690 = !DILocation(line: 3002, column: 19, scope: !8682)
!8691 = !DILocation(line: 3003, column: 23, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 3003, column: 21)
!8693 = !DILocation(line: 3003, column: 31, scope: !8692)
!8694 = !DILocation(line: 3003, column: 47, scope: !8692)
!8695 = !DILocation(line: 3003, column: 53, scope: !8692)
!8696 = !DILocation(line: 3004, column: 22, scope: !8692)
!8697 = !DILocation(line: 3004, column: 29, scope: !8692)
!8698 = !DILocation(line: 3004, column: 40, scope: !8692)
!8699 = !DILocation(line: 3003, column: 21, scope: !8581)
!8700 = !DILocation(line: 3005, column: 19, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !1, line: 3005, column: 19)
!8702 = distinct !DILexicalBlock(scope: !8692, file: !1, line: 3005, column: 19)
!8703 = !DILocation(line: 3005, column: 19, scope: !8702)
!8704 = !DILocation(line: 3006, column: 15, scope: !8581)
!8705 = !DILocalVariable(name: "alpha", scope: !8706, file: !1, line: 3013, type: !617)
!8706 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 3008, column: 15)
!8707 = !DILocation(line: 3013, column: 19, scope: !8706)
!8708 = !DILocalVariable(name: "gamma", scope: !8706, file: !1, line: 3014, type: !617)
!8709 = !DILocation(line: 3014, column: 19, scope: !8706)
!8710 = !DILocalVariable(name: "count", scope: !8706, file: !1, line: 3017, type: !604)
!8711 = !DILocation(line: 3017, column: 19, scope: !8706)
!8712 = !DILocation(line: 3019, column: 22, scope: !8706)
!8713 = !DILocation(line: 3020, column: 22, scope: !8706)
!8714 = !DILocation(line: 3021, column: 23, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8706, file: !1, line: 3021, column: 17)
!8716 = !DILocation(line: 3021, column: 22, scope: !8715)
!8717 = !DILocation(line: 3021, column: 27, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8715, file: !1, line: 3021, column: 17)
!8719 = !DILocation(line: 3021, column: 41, scope: !8718)
!8720 = !DILocation(line: 3021, column: 49, scope: !8718)
!8721 = !DILocation(line: 3021, column: 29, scope: !8718)
!8722 = !DILocation(line: 3021, column: 17, scope: !8715)
!8723 = !DILocation(line: 3022, column: 25, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !1, line: 3022, column: 19)
!8725 = distinct !DILexicalBlock(scope: !8718, file: !1, line: 3021, column: 62)
!8726 = !DILocation(line: 3022, column: 24, scope: !8724)
!8727 = !DILocation(line: 3022, column: 29, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8724, file: !1, line: 3022, column: 19)
!8729 = !DILocation(line: 3022, column: 43, scope: !8728)
!8730 = !DILocation(line: 3022, column: 51, scope: !8728)
!8731 = !DILocation(line: 3022, column: 31, scope: !8728)
!8732 = !DILocation(line: 3022, column: 19, scope: !8724)
!8733 = !DILocation(line: 3023, column: 26, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1, line: 3023, column: 26)
!8735 = distinct !DILexicalBlock(scope: !8728, file: !1, line: 3022, column: 68)
!8736 = !DILocation(line: 3023, column: 26, scope: !8735)
!8737 = !DILocation(line: 3023, column: 38, scope: !8734)
!8738 = !DILocation(line: 3024, column: 54, scope: !8735)
!8739 = !DILocation(line: 3024, column: 63, scope: !8735)
!8740 = !DILocation(line: 3024, column: 66, scope: !8735)
!8741 = !DILocation(line: 3024, column: 53, scope: !8735)
!8742 = !DILocation(line: 3024, column: 40, scope: !8735)
!8743 = !DILocation(line: 3024, column: 39, scope: !8735)
!8744 = !DILocation(line: 3024, column: 26, scope: !8735)
!8745 = !DILocation(line: 3025, column: 26, scope: !8735)
!8746 = !DILocation(line: 3026, column: 30, scope: !8735)
!8747 = !DILocation(line: 3026, column: 29, scope: !8735)
!8748 = !DILocation(line: 3026, column: 26, scope: !8735)
!8749 = !DILocation(line: 3027, column: 30, scope: !8735)
!8750 = !DILocation(line: 3027, column: 27, scope: !8735)
!8751 = !DILocation(line: 3028, column: 39, scope: !8735)
!8752 = !DILocation(line: 3028, column: 45, scope: !8735)
!8753 = !DILocation(line: 3028, column: 54, scope: !8735)
!8754 = !DILocation(line: 3028, column: 57, scope: !8735)
!8755 = !DILocation(line: 3028, column: 44, scope: !8735)
!8756 = !DILocation(line: 3028, column: 28, scope: !8735)
!8757 = !DILocation(line: 3028, column: 36, scope: !8735)
!8758 = !DILocation(line: 3029, column: 39, scope: !8735)
!8759 = !DILocation(line: 3029, column: 45, scope: !8735)
!8760 = !DILocation(line: 3029, column: 54, scope: !8735)
!8761 = !DILocation(line: 3029, column: 57, scope: !8735)
!8762 = !DILocation(line: 3029, column: 44, scope: !8735)
!8763 = !DILocation(line: 3029, column: 28, scope: !8735)
!8764 = !DILocation(line: 3029, column: 36, scope: !8735)
!8765 = !DILocation(line: 3030, column: 39, scope: !8735)
!8766 = !DILocation(line: 3030, column: 45, scope: !8735)
!8767 = !DILocation(line: 3030, column: 54, scope: !8735)
!8768 = !DILocation(line: 3030, column: 57, scope: !8735)
!8769 = !DILocation(line: 3030, column: 44, scope: !8735)
!8770 = !DILocation(line: 3030, column: 28, scope: !8735)
!8771 = !DILocation(line: 3030, column: 36, scope: !8735)
!8772 = !DILocation(line: 3031, column: 41, scope: !8735)
!8773 = !DILocation(line: 3031, column: 40, scope: !8735)
!8774 = !DILocation(line: 3031, column: 44, scope: !8735)
!8775 = !DILocation(line: 3031, column: 53, scope: !8735)
!8776 = !DILocation(line: 3031, column: 56, scope: !8735)
!8777 = !DILocation(line: 3031, column: 43, scope: !8735)
!8778 = !DILocation(line: 3031, column: 28, scope: !8735)
!8779 = !DILocation(line: 3031, column: 36, scope: !8735)
!8780 = !DILocation(line: 3032, column: 26, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8735, file: !1, line: 3032, column: 26)
!8782 = !DILocation(line: 3032, column: 33, scope: !8781)
!8783 = !DILocation(line: 3032, column: 44, scope: !8781)
!8784 = !DILocation(line: 3032, column: 26, scope: !8735)
!8785 = !DILocation(line: 3033, column: 37, scope: !8781)
!8786 = !DILocation(line: 3033, column: 43, scope: !8781)
!8787 = !DILocation(line: 3033, column: 42, scope: !8781)
!8788 = !DILocation(line: 3033, column: 30, scope: !8781)
!8789 = !DILocation(line: 3033, column: 35, scope: !8781)
!8790 = !DILocation(line: 3033, column: 23, scope: !8781)
!8791 = !DILocation(line: 3034, column: 19, scope: !8735)
!8792 = !DILocation(line: 3022, column: 59, scope: !8728)
!8793 = !DILocation(line: 3022, column: 64, scope: !8728)
!8794 = !DILocation(line: 3022, column: 19, scope: !8728)
!8795 = distinct !{!8795, !8732, !8796}
!8796 = !DILocation(line: 3034, column: 19, scope: !8724)
!8797 = !DILocation(line: 3035, column: 31, scope: !8725)
!8798 = !DILocation(line: 3035, column: 28, scope: !8725)
!8799 = !DILocation(line: 3036, column: 32, scope: !8725)
!8800 = !DILocation(line: 3036, column: 29, scope: !8725)
!8801 = !DILocation(line: 3037, column: 17, scope: !8725)
!8802 = !DILocation(line: 3021, column: 58, scope: !8718)
!8803 = !DILocation(line: 3021, column: 17, scope: !8718)
!8804 = distinct !{!8804, !8722, !8805}
!8805 = !DILocation(line: 3037, column: 17, scope: !8715)
!8806 = !DILocation(line: 3040, column: 21, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8706, file: !1, line: 3040, column: 21)
!8808 = !DILocation(line: 3040, column: 27, scope: !8807)
!8809 = !DILocation(line: 3040, column: 21, scope: !8706)
!8810 = !DILocation(line: 3040, column: 40, scope: !8807)
!8811 = !DILocation(line: 3040, column: 34, scope: !8807)
!8812 = !DILocation(line: 3042, column: 45, scope: !8706)
!8813 = !DILocation(line: 3042, column: 23, scope: !8706)
!8814 = !DILocation(line: 3042, column: 22, scope: !8706)
!8815 = !DILocation(line: 3043, column: 33, scope: !8706)
!8816 = !DILocation(line: 3043, column: 41, scope: !8706)
!8817 = !DILocation(line: 3043, column: 24, scope: !8706)
!8818 = !DILocation(line: 3043, column: 48, scope: !8706)
!8819 = !DILocation(line: 3043, column: 56, scope: !8706)
!8820 = !DILocation(line: 3043, column: 47, scope: !8706)
!8821 = !DILocation(line: 3043, column: 62, scope: !8706)
!8822 = !DILocation(line: 3043, column: 61, scope: !8706)
!8823 = !DILocation(line: 3043, column: 22, scope: !8706)
!8824 = !DILocation(line: 3044, column: 17, scope: !8706)
!8825 = !DILocation(line: 3045, column: 17, scope: !8706)
!8826 = !DILocation(line: 3046, column: 17, scope: !8706)
!8827 = !DILocation(line: 3047, column: 17, scope: !8706)
!8828 = !DILocation(line: 3048, column: 21, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8706, file: !1, line: 3048, column: 21)
!8830 = !DILocation(line: 3048, column: 28, scope: !8829)
!8831 = !DILocation(line: 3048, column: 39, scope: !8829)
!8832 = !DILocation(line: 3048, column: 21, scope: !8706)
!8833 = !DILocation(line: 3049, column: 19, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 3049, column: 19)
!8835 = distinct !DILexicalBlock(scope: !8829, file: !1, line: 3049, column: 19)
!8836 = !DILocation(line: 3049, column: 19, scope: !8835)
!8837 = !DILocation(line: 3052, column: 13, scope: !8557)
!8838 = !DILocation(line: 3063, column: 17, scope: !8557)
!8839 = !DILocation(line: 3063, column: 25, scope: !8557)
!8840 = !DILocation(line: 3063, column: 15, scope: !8557)
!8841 = !DILocation(line: 3064, column: 24, scope: !8557)
!8842 = !DILocation(line: 3064, column: 22, scope: !8557)
!8843 = !DILocation(line: 3065, column: 25, scope: !8557)
!8844 = !DILocation(line: 3065, column: 23, scope: !8557)
!8845 = !DILocation(line: 3066, column: 19, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3066, column: 13)
!8847 = !DILocation(line: 3066, column: 18, scope: !8846)
!8848 = !DILocation(line: 3066, column: 23, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8846, file: !1, line: 3066, column: 13)
!8850 = !DILocation(line: 3066, column: 37, scope: !8849)
!8851 = !DILocation(line: 3066, column: 45, scope: !8849)
!8852 = !DILocation(line: 3066, column: 25, scope: !8849)
!8853 = !DILocation(line: 3066, column: 13, scope: !8846)
!8854 = !DILocation(line: 3067, column: 21, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !1, line: 3067, column: 15)
!8856 = distinct !DILexicalBlock(scope: !8849, file: !1, line: 3066, column: 58)
!8857 = !DILocation(line: 3067, column: 20, scope: !8855)
!8858 = !DILocation(line: 3067, column: 25, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8855, file: !1, line: 3067, column: 15)
!8860 = !DILocation(line: 3067, column: 39, scope: !8859)
!8861 = !DILocation(line: 3067, column: 47, scope: !8859)
!8862 = !DILocation(line: 3067, column: 27, scope: !8859)
!8863 = !DILocation(line: 3067, column: 15, scope: !8855)
!8864 = !DILocation(line: 3068, column: 22, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !1, line: 3068, column: 22)
!8866 = distinct !DILexicalBlock(scope: !8859, file: !1, line: 3067, column: 64)
!8867 = !DILocation(line: 3068, column: 32, scope: !8865)
!8868 = !DILocation(line: 3068, column: 37, scope: !8865)
!8869 = !DILocation(line: 3068, column: 36, scope: !8865)
!8870 = !DILocation(line: 3068, column: 40, scope: !8865)
!8871 = !DILocation(line: 3068, column: 22, scope: !8866)
!8872 = !DILocation(line: 3068, column: 48, scope: !8865)
!8873 = !DILocation(line: 3069, column: 17, scope: !8866)
!8874 = !DILocation(line: 3070, column: 17, scope: !8866)
!8875 = !DILocation(line: 3071, column: 17, scope: !8866)
!8876 = !DILocation(line: 3072, column: 17, scope: !8866)
!8877 = !DILocation(line: 3074, column: 22, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8866, file: !1, line: 3074, column: 22)
!8879 = !DILocation(line: 3074, column: 29, scope: !8878)
!8880 = !DILocation(line: 3074, column: 40, scope: !8878)
!8881 = !DILocation(line: 3074, column: 22, scope: !8866)
!8882 = !DILocation(line: 3075, column: 19, scope: !8878)
!8883 = !DILocation(line: 3077, column: 15, scope: !8866)
!8884 = !DILocation(line: 3067, column: 55, scope: !8859)
!8885 = !DILocation(line: 3067, column: 60, scope: !8859)
!8886 = !DILocation(line: 3067, column: 15, scope: !8859)
!8887 = distinct !{!8887, !8863, !8888}
!8888 = !DILocation(line: 3077, column: 15, scope: !8855)
!8889 = !DILocation(line: 3078, column: 27, scope: !8856)
!8890 = !DILocation(line: 3078, column: 24, scope: !8856)
!8891 = !DILocation(line: 3079, column: 28, scope: !8856)
!8892 = !DILocation(line: 3079, column: 25, scope: !8856)
!8893 = !DILocation(line: 3080, column: 13, scope: !8856)
!8894 = !DILocation(line: 3066, column: 54, scope: !8849)
!8895 = !DILocation(line: 3066, column: 13, scope: !8849)
!8896 = distinct !{!8896, !8853, !8897}
!8897 = !DILocation(line: 3080, column: 13, scope: !8846)
!8898 = !DILocation(line: 3081, column: 13, scope: !8557)
!8899 = !DILocation(line: 3095, column: 18, scope: !8557)
!8900 = !DILocation(line: 3095, column: 26, scope: !8557)
!8901 = !DILocation(line: 3095, column: 34, scope: !8557)
!8902 = !DILocation(line: 3095, column: 42, scope: !8557)
!8903 = !DILocation(line: 3095, column: 48, scope: !8557)
!8904 = !DILocation(line: 3095, column: 56, scope: !8557)
!8905 = !DILocation(line: 3095, column: 47, scope: !8557)
!8906 = !DILocation(line: 3095, column: 62, scope: !8557)
!8907 = !DILocation(line: 3095, column: 15, scope: !8557)
!8908 = !DILocation(line: 3096, column: 24, scope: !8557)
!8909 = !DILocation(line: 3096, column: 22, scope: !8557)
!8910 = !DILocation(line: 3097, column: 25, scope: !8557)
!8911 = !DILocation(line: 3097, column: 23, scope: !8557)
!8912 = !DILocation(line: 3098, column: 19, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3098, column: 13)
!8914 = !DILocation(line: 3098, column: 18, scope: !8913)
!8915 = !DILocation(line: 3098, column: 23, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !1, line: 3098, column: 13)
!8917 = !DILocation(line: 3098, column: 37, scope: !8916)
!8918 = !DILocation(line: 3098, column: 45, scope: !8916)
!8919 = !DILocation(line: 3098, column: 25, scope: !8916)
!8920 = !DILocation(line: 3098, column: 13, scope: !8913)
!8921 = !DILocation(line: 3099, column: 21, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !1, line: 3099, column: 15)
!8923 = distinct !DILexicalBlock(scope: !8916, file: !1, line: 3098, column: 58)
!8924 = !DILocation(line: 3099, column: 20, scope: !8922)
!8925 = !DILocation(line: 3099, column: 25, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8922, file: !1, line: 3099, column: 15)
!8927 = !DILocation(line: 3099, column: 39, scope: !8926)
!8928 = !DILocation(line: 3099, column: 47, scope: !8926)
!8929 = !DILocation(line: 3099, column: 27, scope: !8926)
!8930 = !DILocation(line: 3099, column: 15, scope: !8922)
!8931 = !DILocation(line: 3100, column: 22, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !1, line: 3100, column: 22)
!8933 = distinct !DILexicalBlock(scope: !8926, file: !1, line: 3099, column: 64)
!8934 = !DILocation(line: 3100, column: 32, scope: !8932)
!8935 = !DILocation(line: 3100, column: 37, scope: !8932)
!8936 = !DILocation(line: 3100, column: 36, scope: !8932)
!8937 = !DILocation(line: 3100, column: 40, scope: !8932)
!8938 = !DILocation(line: 3100, column: 22, scope: !8933)
!8939 = !DILocation(line: 3100, column: 48, scope: !8932)
!8940 = !DILocation(line: 3101, column: 17, scope: !8933)
!8941 = !DILocation(line: 3102, column: 17, scope: !8933)
!8942 = !DILocation(line: 3103, column: 17, scope: !8933)
!8943 = !DILocation(line: 3104, column: 17, scope: !8933)
!8944 = !DILocation(line: 3106, column: 22, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8933, file: !1, line: 3106, column: 22)
!8946 = !DILocation(line: 3106, column: 29, scope: !8945)
!8947 = !DILocation(line: 3106, column: 40, scope: !8945)
!8948 = !DILocation(line: 3106, column: 22, scope: !8933)
!8949 = !DILocation(line: 3107, column: 19, scope: !8945)
!8950 = !DILocation(line: 3109, column: 15, scope: !8933)
!8951 = !DILocation(line: 3099, column: 55, scope: !8926)
!8952 = !DILocation(line: 3099, column: 60, scope: !8926)
!8953 = !DILocation(line: 3099, column: 15, scope: !8926)
!8954 = distinct !{!8954, !8930, !8955}
!8955 = !DILocation(line: 3109, column: 15, scope: !8922)
!8956 = !DILocation(line: 3110, column: 27, scope: !8923)
!8957 = !DILocation(line: 3110, column: 24, scope: !8923)
!8958 = !DILocation(line: 3111, column: 28, scope: !8923)
!8959 = !DILocation(line: 3111, column: 25, scope: !8923)
!8960 = !DILocation(line: 3112, column: 13, scope: !8923)
!8961 = !DILocation(line: 3098, column: 54, scope: !8916)
!8962 = !DILocation(line: 3098, column: 13, scope: !8916)
!8963 = distinct !{!8963, !8920, !8964}
!8964 = !DILocation(line: 3112, column: 13, scope: !8913)
!8965 = !DILocation(line: 3113, column: 13, scope: !8557)
!8966 = !DILocation(line: 3129, column: 17, scope: !8557)
!8967 = !DILocation(line: 3129, column: 25, scope: !8557)
!8968 = !DILocation(line: 3129, column: 15, scope: !8557)
!8969 = !DILocation(line: 3130, column: 24, scope: !8557)
!8970 = !DILocation(line: 3130, column: 22, scope: !8557)
!8971 = !DILocation(line: 3131, column: 25, scope: !8557)
!8972 = !DILocation(line: 3131, column: 23, scope: !8557)
!8973 = !DILocation(line: 3132, column: 19, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3132, column: 13)
!8975 = !DILocation(line: 3132, column: 18, scope: !8974)
!8976 = !DILocation(line: 3132, column: 23, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8974, file: !1, line: 3132, column: 13)
!8978 = !DILocation(line: 3132, column: 37, scope: !8977)
!8979 = !DILocation(line: 3132, column: 45, scope: !8977)
!8980 = !DILocation(line: 3132, column: 25, scope: !8977)
!8981 = !DILocation(line: 3132, column: 13, scope: !8974)
!8982 = !DILocation(line: 3133, column: 21, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !1, line: 3133, column: 15)
!8984 = distinct !DILexicalBlock(scope: !8977, file: !1, line: 3132, column: 58)
!8985 = !DILocation(line: 3133, column: 20, scope: !8983)
!8986 = !DILocation(line: 3133, column: 25, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !1, line: 3133, column: 15)
!8988 = !DILocation(line: 3133, column: 39, scope: !8987)
!8989 = !DILocation(line: 3133, column: 47, scope: !8987)
!8990 = !DILocation(line: 3133, column: 27, scope: !8987)
!8991 = !DILocation(line: 3133, column: 15, scope: !8983)
!8992 = !DILocation(line: 3134, column: 22, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 3134, column: 22)
!8994 = distinct !DILexicalBlock(scope: !8987, file: !1, line: 3133, column: 64)
!8995 = !DILocation(line: 3134, column: 22, scope: !8994)
!8996 = !DILocation(line: 3134, column: 34, scope: !8993)
!8997 = !DILocation(line: 3135, column: 24, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 3135, column: 22)
!8999 = !DILocation(line: 3135, column: 23, scope: !8998)
!9000 = !DILocation(line: 3135, column: 27, scope: !8998)
!9001 = !DILocation(line: 3135, column: 22, scope: !8994)
!9002 = !DILocation(line: 3137, column: 19, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 3136, column: 17)
!9004 = !DILocation(line: 3138, column: 19, scope: !9003)
!9005 = !DILocation(line: 3139, column: 19, scope: !9003)
!9006 = !DILocation(line: 3140, column: 19, scope: !9003)
!9007 = !DILocation(line: 3142, column: 24, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9003, file: !1, line: 3142, column: 24)
!9009 = !DILocation(line: 3142, column: 31, scope: !9008)
!9010 = !DILocation(line: 3142, column: 42, scope: !9008)
!9011 = !DILocation(line: 3142, column: 24, scope: !9003)
!9012 = !DILocation(line: 3143, column: 21, scope: !9008)
!9013 = !DILocation(line: 3145, column: 17, scope: !9003)
!9014 = !DILocation(line: 3146, column: 29, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 3146, column: 27)
!9016 = !DILocation(line: 3146, column: 28, scope: !9015)
!9017 = !DILocation(line: 3146, column: 32, scope: !9015)
!9018 = !DILocation(line: 3146, column: 27, scope: !8998)
!9019 = !DILocation(line: 3148, column: 19, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9015, file: !1, line: 3147, column: 17)
!9021 = !DILocation(line: 3149, column: 19, scope: !9020)
!9022 = !DILocation(line: 3150, column: 19, scope: !9020)
!9023 = !DILocation(line: 3151, column: 19, scope: !9020)
!9024 = !DILocation(line: 3153, column: 24, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9020, file: !1, line: 3153, column: 24)
!9026 = !DILocation(line: 3153, column: 31, scope: !9025)
!9027 = !DILocation(line: 3153, column: 42, scope: !9025)
!9028 = !DILocation(line: 3153, column: 24, scope: !9020)
!9029 = !DILocation(line: 3154, column: 21, scope: !9025)
!9030 = !DILocation(line: 3156, column: 17, scope: !9020)
!9031 = !DILocation(line: 3157, column: 15, scope: !8994)
!9032 = !DILocation(line: 3133, column: 55, scope: !8987)
!9033 = !DILocation(line: 3133, column: 60, scope: !8987)
!9034 = !DILocation(line: 3133, column: 15, scope: !8987)
!9035 = distinct !{!9035, !8991, !9036}
!9036 = !DILocation(line: 3157, column: 15, scope: !8983)
!9037 = !DILocation(line: 3158, column: 27, scope: !8984)
!9038 = !DILocation(line: 3158, column: 24, scope: !8984)
!9039 = !DILocation(line: 3159, column: 28, scope: !8984)
!9040 = !DILocation(line: 3159, column: 25, scope: !8984)
!9041 = !DILocation(line: 3160, column: 13, scope: !8984)
!9042 = !DILocation(line: 3132, column: 54, scope: !8977)
!9043 = !DILocation(line: 3132, column: 13, scope: !8977)
!9044 = distinct !{!9044, !8981, !9045}
!9045 = !DILocation(line: 3160, column: 13, scope: !8974)
!9046 = !DILocation(line: 3162, column: 32, scope: !8557)
!9047 = !DILocation(line: 3162, column: 17, scope: !8557)
!9048 = !DILocation(line: 3162, column: 25, scope: !8557)
!9049 = !DILocation(line: 3162, column: 41, scope: !8557)
!9050 = !DILocation(line: 3163, column: 32, scope: !8557)
!9051 = !DILocation(line: 3163, column: 17, scope: !8557)
!9052 = !DILocation(line: 3163, column: 25, scope: !8557)
!9053 = !DILocation(line: 3163, column: 41, scope: !8557)
!9054 = !DILocation(line: 3164, column: 32, scope: !8557)
!9055 = !DILocation(line: 3164, column: 17, scope: !8557)
!9056 = !DILocation(line: 3164, column: 25, scope: !8557)
!9057 = !DILocation(line: 3164, column: 41, scope: !8557)
!9058 = !DILocation(line: 3165, column: 32, scope: !8557)
!9059 = !DILocation(line: 3165, column: 17, scope: !8557)
!9060 = !DILocation(line: 3165, column: 25, scope: !8557)
!9061 = !DILocation(line: 3165, column: 41, scope: !8557)
!9062 = !DILocation(line: 3166, column: 32, scope: !8557)
!9063 = !DILocation(line: 3166, column: 17, scope: !8557)
!9064 = !DILocation(line: 3166, column: 25, scope: !8557)
!9065 = !DILocation(line: 3166, column: 41, scope: !8557)
!9066 = !DILocation(line: 3167, column: 13, scope: !8557)
!9067 = !DILocation(line: 3178, column: 17, scope: !8557)
!9068 = !DILocation(line: 3178, column: 25, scope: !8557)
!9069 = !DILocation(line: 3178, column: 15, scope: !8557)
!9070 = !DILocation(line: 3179, column: 24, scope: !8557)
!9071 = !DILocation(line: 3179, column: 22, scope: !8557)
!9072 = !DILocation(line: 3180, column: 25, scope: !8557)
!9073 = !DILocation(line: 3180, column: 23, scope: !8557)
!9074 = !DILocation(line: 3181, column: 19, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3181, column: 13)
!9076 = !DILocation(line: 3181, column: 18, scope: !9075)
!9077 = !DILocation(line: 3181, column: 23, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !1, line: 3181, column: 13)
!9079 = !DILocation(line: 3181, column: 37, scope: !9078)
!9080 = !DILocation(line: 3181, column: 45, scope: !9078)
!9081 = !DILocation(line: 3181, column: 25, scope: !9078)
!9082 = !DILocation(line: 3181, column: 13, scope: !9075)
!9083 = !DILocation(line: 3182, column: 21, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !1, line: 3182, column: 15)
!9085 = distinct !DILexicalBlock(scope: !9078, file: !1, line: 3181, column: 58)
!9086 = !DILocation(line: 3182, column: 20, scope: !9084)
!9087 = !DILocation(line: 3182, column: 25, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9084, file: !1, line: 3182, column: 15)
!9089 = !DILocation(line: 3182, column: 39, scope: !9088)
!9090 = !DILocation(line: 3182, column: 47, scope: !9088)
!9091 = !DILocation(line: 3182, column: 27, scope: !9088)
!9092 = !DILocation(line: 3182, column: 15, scope: !9084)
!9093 = !DILocation(line: 3183, column: 22, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9095, file: !1, line: 3183, column: 22)
!9095 = distinct !DILexicalBlock(scope: !9088, file: !1, line: 3182, column: 64)
!9096 = !DILocation(line: 3183, column: 32, scope: !9094)
!9097 = !DILocation(line: 3183, column: 37, scope: !9094)
!9098 = !DILocation(line: 3183, column: 36, scope: !9094)
!9099 = !DILocation(line: 3183, column: 40, scope: !9094)
!9100 = !DILocation(line: 3183, column: 22, scope: !9095)
!9101 = !DILocation(line: 3183, column: 48, scope: !9094)
!9102 = !DILocation(line: 3184, column: 29, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9095, file: !1, line: 3184, column: 22)
!9104 = !DILocation(line: 3184, column: 33, scope: !9103)
!9105 = !DILocation(line: 3184, column: 40, scope: !9103)
!9106 = !DILocation(line: 3185, column: 40, scope: !9103)
!9107 = !DILocation(line: 3185, column: 48, scope: !9103)
!9108 = !DILocation(line: 3185, column: 57, scope: !9103)
!9109 = !DILocation(line: 3185, column: 22, scope: !9103)
!9110 = !DILocation(line: 3185, column: 82, scope: !9103)
!9111 = !DILocation(line: 3185, column: 95, scope: !9103)
!9112 = !DILocation(line: 3185, column: 64, scope: !9103)
!9113 = !DILocation(line: 3185, column: 62, scope: !9103)
!9114 = !DILocation(line: 3184, column: 22, scope: !9095)
!9115 = !DILocation(line: 3187, column: 20, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9103, file: !1, line: 3185, column: 100)
!9117 = !DILocation(line: 3187, column: 24, scope: !9116)
!9118 = !DILocation(line: 3187, column: 33, scope: !9116)
!9119 = !DILocation(line: 3189, column: 31, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9116, file: !1, line: 3189, column: 24)
!9121 = !DILocation(line: 3189, column: 35, scope: !9120)
!9122 = !DILocation(line: 3189, column: 24, scope: !9116)
!9123 = !DILocation(line: 3189, column: 43, scope: !9120)
!9124 = !DILocation(line: 3189, column: 51, scope: !9120)
!9125 = !DILocation(line: 3189, column: 54, scope: !9120)
!9126 = !DILocation(line: 3190, column: 26, scope: !9116)
!9127 = !DILocation(line: 3190, column: 30, scope: !9116)
!9128 = !DILocation(line: 3191, column: 17, scope: !9116)
!9129 = !DILocation(line: 3192, column: 15, scope: !9095)
!9130 = !DILocation(line: 3182, column: 55, scope: !9088)
!9131 = !DILocation(line: 3182, column: 60, scope: !9088)
!9132 = !DILocation(line: 3182, column: 15, scope: !9088)
!9133 = distinct !{!9133, !9092, !9134}
!9134 = !DILocation(line: 3192, column: 15, scope: !9084)
!9135 = !DILocation(line: 3193, column: 27, scope: !9085)
!9136 = !DILocation(line: 3193, column: 24, scope: !9085)
!9137 = !DILocation(line: 3194, column: 28, scope: !9085)
!9138 = !DILocation(line: 3194, column: 25, scope: !9085)
!9139 = !DILocation(line: 3195, column: 13, scope: !9085)
!9140 = !DILocation(line: 3181, column: 54, scope: !9078)
!9141 = !DILocation(line: 3181, column: 13, scope: !9078)
!9142 = distinct !{!9142, !9082, !9143}
!9143 = !DILocation(line: 3195, column: 13, scope: !9075)
!9144 = !DILocation(line: 3196, column: 13, scope: !8557)
!9145 = !DILocation(line: 3209, column: 18, scope: !8557)
!9146 = !DILocation(line: 3209, column: 26, scope: !8557)
!9147 = !DILocation(line: 3209, column: 34, scope: !8557)
!9148 = !DILocation(line: 3209, column: 42, scope: !8557)
!9149 = !DILocation(line: 3209, column: 48, scope: !8557)
!9150 = !DILocation(line: 3209, column: 56, scope: !8557)
!9151 = !DILocation(line: 3209, column: 47, scope: !8557)
!9152 = !DILocation(line: 3209, column: 62, scope: !8557)
!9153 = !DILocation(line: 3209, column: 15, scope: !8557)
!9154 = !DILocation(line: 3210, column: 24, scope: !8557)
!9155 = !DILocation(line: 3210, column: 22, scope: !8557)
!9156 = !DILocation(line: 3211, column: 25, scope: !8557)
!9157 = !DILocation(line: 3211, column: 23, scope: !8557)
!9158 = !DILocation(line: 3212, column: 19, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3212, column: 13)
!9160 = !DILocation(line: 3212, column: 18, scope: !9159)
!9161 = !DILocation(line: 3212, column: 23, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9159, file: !1, line: 3212, column: 13)
!9163 = !DILocation(line: 3212, column: 37, scope: !9162)
!9164 = !DILocation(line: 3212, column: 45, scope: !9162)
!9165 = !DILocation(line: 3212, column: 25, scope: !9162)
!9166 = !DILocation(line: 3212, column: 13, scope: !9159)
!9167 = !DILocation(line: 3213, column: 21, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !1, line: 3213, column: 15)
!9169 = distinct !DILexicalBlock(scope: !9162, file: !1, line: 3212, column: 58)
!9170 = !DILocation(line: 3213, column: 20, scope: !9168)
!9171 = !DILocation(line: 3213, column: 25, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !1, line: 3213, column: 15)
!9173 = !DILocation(line: 3213, column: 39, scope: !9172)
!9174 = !DILocation(line: 3213, column: 47, scope: !9172)
!9175 = !DILocation(line: 3213, column: 27, scope: !9172)
!9176 = !DILocation(line: 3213, column: 15, scope: !9168)
!9177 = !DILocation(line: 3214, column: 22, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9179, file: !1, line: 3214, column: 22)
!9179 = distinct !DILexicalBlock(scope: !9172, file: !1, line: 3213, column: 64)
!9180 = !DILocation(line: 3214, column: 32, scope: !9178)
!9181 = !DILocation(line: 3214, column: 37, scope: !9178)
!9182 = !DILocation(line: 3214, column: 36, scope: !9178)
!9183 = !DILocation(line: 3214, column: 40, scope: !9178)
!9184 = !DILocation(line: 3214, column: 22, scope: !9179)
!9185 = !DILocation(line: 3214, column: 48, scope: !9178)
!9186 = !DILocation(line: 3215, column: 29, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9179, file: !1, line: 3215, column: 22)
!9188 = !DILocation(line: 3215, column: 33, scope: !9187)
!9189 = !DILocation(line: 3215, column: 40, scope: !9187)
!9190 = !DILocation(line: 3216, column: 40, scope: !9187)
!9191 = !DILocation(line: 3216, column: 48, scope: !9187)
!9192 = !DILocation(line: 3216, column: 57, scope: !9187)
!9193 = !DILocation(line: 3216, column: 22, scope: !9187)
!9194 = !DILocation(line: 3216, column: 82, scope: !9187)
!9195 = !DILocation(line: 3216, column: 95, scope: !9187)
!9196 = !DILocation(line: 3216, column: 64, scope: !9187)
!9197 = !DILocation(line: 3216, column: 62, scope: !9187)
!9198 = !DILocation(line: 3215, column: 22, scope: !9179)
!9199 = !DILocation(line: 3218, column: 20, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9187, file: !1, line: 3216, column: 100)
!9201 = !DILocation(line: 3218, column: 24, scope: !9200)
!9202 = !DILocation(line: 3218, column: 33, scope: !9200)
!9203 = !DILocation(line: 3219, column: 31, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9200, file: !1, line: 3219, column: 24)
!9205 = !DILocation(line: 3219, column: 35, scope: !9204)
!9206 = !DILocation(line: 3219, column: 24, scope: !9200)
!9207 = !DILocation(line: 3219, column: 43, scope: !9204)
!9208 = !DILocation(line: 3219, column: 51, scope: !9204)
!9209 = !DILocation(line: 3219, column: 54, scope: !9204)
!9210 = !DILocation(line: 3220, column: 26, scope: !9200)
!9211 = !DILocation(line: 3220, column: 30, scope: !9200)
!9212 = !DILocation(line: 3221, column: 17, scope: !9200)
!9213 = !DILocation(line: 3222, column: 15, scope: !9179)
!9214 = !DILocation(line: 3213, column: 55, scope: !9172)
!9215 = !DILocation(line: 3213, column: 60, scope: !9172)
!9216 = !DILocation(line: 3213, column: 15, scope: !9172)
!9217 = distinct !{!9217, !9176, !9218}
!9218 = !DILocation(line: 3222, column: 15, scope: !9168)
!9219 = !DILocation(line: 3223, column: 27, scope: !9169)
!9220 = !DILocation(line: 3223, column: 24, scope: !9169)
!9221 = !DILocation(line: 3224, column: 28, scope: !9169)
!9222 = !DILocation(line: 3224, column: 25, scope: !9169)
!9223 = !DILocation(line: 3225, column: 13, scope: !9169)
!9224 = !DILocation(line: 3212, column: 54, scope: !9162)
!9225 = !DILocation(line: 3212, column: 13, scope: !9162)
!9226 = distinct !{!9226, !9166, !9227}
!9227 = !DILocation(line: 3225, column: 13, scope: !9159)
!9228 = !DILocation(line: 3226, column: 13, scope: !8557)
!9229 = !DILocation(line: 3252, column: 18, scope: !8557)
!9230 = !DILocation(line: 3252, column: 26, scope: !8557)
!9231 = !DILocation(line: 3252, column: 34, scope: !8557)
!9232 = !DILocation(line: 3252, column: 42, scope: !8557)
!9233 = !DILocation(line: 3252, column: 48, scope: !8557)
!9234 = !DILocation(line: 3252, column: 56, scope: !8557)
!9235 = !DILocation(line: 3252, column: 47, scope: !8557)
!9236 = !DILocation(line: 3252, column: 62, scope: !8557)
!9237 = !DILocation(line: 3252, column: 15, scope: !8557)
!9238 = !DILocation(line: 3253, column: 24, scope: !8557)
!9239 = !DILocation(line: 3253, column: 22, scope: !8557)
!9240 = !DILocation(line: 3254, column: 25, scope: !8557)
!9241 = !DILocation(line: 3254, column: 23, scope: !8557)
!9242 = !DILocation(line: 3255, column: 19, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !8557, file: !1, line: 3255, column: 13)
!9244 = !DILocation(line: 3255, column: 18, scope: !9243)
!9245 = !DILocation(line: 3255, column: 23, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9243, file: !1, line: 3255, column: 13)
!9247 = !DILocation(line: 3255, column: 37, scope: !9246)
!9248 = !DILocation(line: 3255, column: 45, scope: !9246)
!9249 = !DILocation(line: 3255, column: 25, scope: !9246)
!9250 = !DILocation(line: 3255, column: 13, scope: !9243)
!9251 = !DILocation(line: 3256, column: 21, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !1, line: 3256, column: 15)
!9253 = distinct !DILexicalBlock(scope: !9246, file: !1, line: 3255, column: 58)
!9254 = !DILocation(line: 3256, column: 20, scope: !9252)
!9255 = !DILocation(line: 3256, column: 25, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9252, file: !1, line: 3256, column: 15)
!9257 = !DILocation(line: 3256, column: 39, scope: !9256)
!9258 = !DILocation(line: 3256, column: 47, scope: !9256)
!9259 = !DILocation(line: 3256, column: 27, scope: !9256)
!9260 = !DILocation(line: 3256, column: 15, scope: !9252)
!9261 = !DILocation(line: 3257, column: 22, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !1, line: 3257, column: 22)
!9263 = distinct !DILexicalBlock(scope: !9256, file: !1, line: 3256, column: 64)
!9264 = !DILocation(line: 3257, column: 22, scope: !9263)
!9265 = !DILocation(line: 3257, column: 34, scope: !9262)
!9266 = !DILocation(line: 3258, column: 17, scope: !9263)
!9267 = !DILocation(line: 3259, column: 17, scope: !9263)
!9268 = !DILocation(line: 3260, column: 17, scope: !9263)
!9269 = !DILocation(line: 3261, column: 17, scope: !9263)
!9270 = !DILocation(line: 3262, column: 22, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9263, file: !1, line: 3262, column: 22)
!9272 = !DILocation(line: 3262, column: 29, scope: !9271)
!9273 = !DILocation(line: 3262, column: 40, scope: !9271)
!9274 = !DILocation(line: 3262, column: 22, scope: !9263)
!9275 = !DILocation(line: 3263, column: 19, scope: !9271)
!9276 = !DILocation(line: 3265, column: 15, scope: !9263)
!9277 = !DILocation(line: 3256, column: 55, scope: !9256)
!9278 = !DILocation(line: 3256, column: 60, scope: !9256)
!9279 = !DILocation(line: 3256, column: 15, scope: !9256)
!9280 = distinct !{!9280, !9260, !9281}
!9281 = !DILocation(line: 3265, column: 15, scope: !9252)
!9282 = !DILocation(line: 3266, column: 27, scope: !9253)
!9283 = !DILocation(line: 3266, column: 24, scope: !9253)
!9284 = !DILocation(line: 3267, column: 28, scope: !9253)
!9285 = !DILocation(line: 3267, column: 25, scope: !9253)
!9286 = !DILocation(line: 3268, column: 13, scope: !9253)
!9287 = !DILocation(line: 3255, column: 54, scope: !9246)
!9288 = !DILocation(line: 3255, column: 13, scope: !9246)
!9289 = distinct !{!9289, !9250, !9290}
!9290 = !DILocation(line: 3268, column: 13, scope: !9243)
!9291 = !DILocation(line: 3269, column: 13, scope: !8557)
!9292 = !DILocation(line: 3273, column: 13, scope: !8557)
!9293 = !DILocation(line: 3282, column: 16, scope: !8450)
!9294 = !DILocation(line: 3282, column: 7, scope: !8450)
!9295 = !DILocation(line: 3285, column: 20, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 3282, column: 25)
!9297 = !DILocation(line: 3286, column: 11, scope: !9296)
!9298 = !DILocation(line: 3288, column: 20, scope: !9296)
!9299 = !DILocation(line: 3289, column: 11, scope: !9296)
!9300 = !DILocation(line: 3292, column: 33, scope: !9296)
!9301 = !DILocation(line: 3292, column: 18, scope: !9296)
!9302 = !DILocation(line: 3292, column: 26, scope: !9296)
!9303 = !DILocation(line: 3293, column: 33, scope: !9296)
!9304 = !DILocation(line: 3293, column: 18, scope: !9296)
!9305 = !DILocation(line: 3293, column: 26, scope: !9296)
!9306 = !DILocation(line: 3294, column: 33, scope: !9296)
!9307 = !DILocation(line: 3294, column: 18, scope: !9296)
!9308 = !DILocation(line: 3294, column: 26, scope: !9296)
!9309 = !DILocation(line: 3295, column: 33, scope: !9296)
!9310 = !DILocation(line: 3295, column: 18, scope: !9296)
!9311 = !DILocation(line: 3295, column: 26, scope: !9296)
!9312 = !DILocation(line: 3296, column: 33, scope: !9296)
!9313 = !DILocation(line: 3296, column: 18, scope: !9296)
!9314 = !DILocation(line: 3296, column: 26, scope: !9296)
!9315 = !DILocation(line: 3297, column: 11, scope: !9296)
!9316 = !DILocation(line: 3300, column: 33, scope: !9296)
!9317 = !DILocation(line: 3300, column: 18, scope: !9296)
!9318 = !DILocation(line: 3300, column: 26, scope: !9296)
!9319 = !DILocation(line: 3301, column: 33, scope: !9296)
!9320 = !DILocation(line: 3301, column: 18, scope: !9296)
!9321 = !DILocation(line: 3301, column: 26, scope: !9296)
!9322 = !DILocation(line: 3302, column: 33, scope: !9296)
!9323 = !DILocation(line: 3302, column: 18, scope: !9296)
!9324 = !DILocation(line: 3302, column: 26, scope: !9296)
!9325 = !DILocation(line: 3303, column: 33, scope: !9296)
!9326 = !DILocation(line: 3303, column: 18, scope: !9296)
!9327 = !DILocation(line: 3303, column: 26, scope: !9296)
!9328 = !DILocation(line: 3304, column: 33, scope: !9296)
!9329 = !DILocation(line: 3304, column: 18, scope: !9296)
!9330 = !DILocation(line: 3304, column: 26, scope: !9296)
!9331 = !DILocation(line: 3305, column: 11, scope: !9296)
!9332 = !DILocation(line: 3308, column: 11, scope: !9296)
!9333 = !DILocation(line: 3311, column: 16, scope: !8450)
!9334 = !DILocation(line: 3311, column: 7, scope: !8450)
!9335 = !DILocation(line: 3316, column: 11, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 3311, column: 25)
!9337 = !DILocation(line: 3318, column: 16, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9336, file: !1, line: 3318, column: 15)
!9339 = !DILocation(line: 3318, column: 24, scope: !9338)
!9340 = !DILocation(line: 3318, column: 38, scope: !9338)
!9341 = !DILocation(line: 3318, column: 15, scope: !9336)
!9342 = !DILocation(line: 3319, column: 13, scope: !9338)
!9343 = !DILocation(line: 3320, column: 16, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9336, file: !1, line: 3320, column: 15)
!9345 = !DILocation(line: 3320, column: 24, scope: !9344)
!9346 = !DILocation(line: 3320, column: 40, scope: !9344)
!9347 = !DILocation(line: 3320, column: 15, scope: !9336)
!9348 = !DILocation(line: 3321, column: 13, scope: !9344)
!9349 = !DILocation(line: 3322, column: 16, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9336, file: !1, line: 3322, column: 15)
!9351 = !DILocation(line: 3322, column: 24, scope: !9350)
!9352 = !DILocation(line: 3322, column: 39, scope: !9350)
!9353 = !DILocation(line: 3322, column: 15, scope: !9336)
!9354 = !DILocation(line: 3323, column: 13, scope: !9350)
!9355 = !DILocation(line: 3324, column: 16, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9336, file: !1, line: 3324, column: 15)
!9357 = !DILocation(line: 3324, column: 24, scope: !9356)
!9358 = !DILocation(line: 3324, column: 42, scope: !9356)
!9359 = !DILocation(line: 3325, column: 15, scope: !9356)
!9360 = !DILocation(line: 3325, column: 18, scope: !9356)
!9361 = !DILocation(line: 3325, column: 25, scope: !9356)
!9362 = !DILocation(line: 3325, column: 31, scope: !9356)
!9363 = !DILocation(line: 3324, column: 15, scope: !9336)
!9364 = !DILocation(line: 3326, column: 13, scope: !9356)
!9365 = !DILocation(line: 3327, column: 17, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9336, file: !1, line: 3327, column: 15)
!9367 = !DILocation(line: 3327, column: 25, scope: !9366)
!9368 = !DILocation(line: 3327, column: 41, scope: !9366)
!9369 = !DILocation(line: 3327, column: 47, scope: !9366)
!9370 = !DILocation(line: 3328, column: 16, scope: !9366)
!9371 = !DILocation(line: 3328, column: 23, scope: !9366)
!9372 = !DILocation(line: 3328, column: 34, scope: !9366)
!9373 = !DILocation(line: 3327, column: 15, scope: !9336)
!9374 = !DILocation(line: 3329, column: 13, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9376, file: !1, line: 3329, column: 13)
!9376 = distinct !DILexicalBlock(scope: !9366, file: !1, line: 3329, column: 13)
!9377 = !DILocation(line: 3329, column: 13, scope: !9376)
!9378 = !DILocation(line: 3330, column: 11, scope: !9336)
!9379 = !DILocation(line: 3333, column: 16, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 3333, column: 14)
!9381 = !DILocation(line: 3333, column: 18, scope: !9380)
!9382 = !DILocation(line: 3333, column: 21, scope: !9380)
!9383 = !DILocation(line: 3333, column: 28, scope: !9380)
!9384 = !DILocation(line: 3333, column: 25, scope: !9380)
!9385 = !DILocation(line: 3334, column: 11, scope: !9380)
!9386 = !DILocation(line: 3334, column: 16, scope: !9380)
!9387 = !DILocation(line: 3334, column: 18, scope: !9380)
!9388 = !DILocation(line: 3334, column: 21, scope: !9380)
!9389 = !DILocation(line: 3334, column: 30, scope: !9380)
!9390 = !DILocation(line: 3334, column: 27, scope: !9380)
!9391 = !DILocation(line: 3335, column: 11, scope: !9380)
!9392 = !DILocation(line: 3335, column: 16, scope: !9380)
!9393 = !DILocation(line: 3335, column: 18, scope: !9380)
!9394 = !DILocation(line: 3335, column: 21, scope: !9380)
!9395 = !DILocation(line: 3335, column: 29, scope: !9380)
!9396 = !DILocation(line: 3335, column: 26, scope: !9380)
!9397 = !DILocation(line: 3336, column: 11, scope: !9380)
!9398 = !DILocation(line: 3336, column: 16, scope: !9380)
!9399 = !DILocation(line: 3336, column: 18, scope: !9380)
!9400 = !DILocation(line: 3336, column: 21, scope: !9380)
!9401 = !DILocation(line: 3336, column: 32, scope: !9380)
!9402 = !DILocation(line: 3336, column: 29, scope: !9380)
!9403 = !DILocation(line: 3337, column: 11, scope: !9380)
!9404 = !DILocation(line: 3337, column: 16, scope: !9380)
!9405 = !DILocation(line: 3337, column: 23, scope: !9380)
!9406 = !DILocation(line: 3337, column: 34, scope: !9380)
!9407 = !DILocation(line: 3337, column: 52, scope: !9380)
!9408 = !DILocation(line: 3338, column: 16, scope: !9380)
!9409 = !DILocation(line: 3338, column: 46, scope: !9380)
!9410 = !DILocation(line: 3338, column: 43, scope: !9380)
!9411 = !DILocation(line: 3333, column: 14, scope: !8450)
!9412 = !DILocation(line: 3339, column: 9, scope: !9380)
!9413 = !DILocation(line: 3339, column: 17, scope: !9380)
!9414 = !DILocation(line: 3339, column: 20, scope: !9380)
!9415 = !DILocation(line: 3340, column: 8, scope: !8450)
!9416 = !DILocation(line: 3341, column: 8, scope: !8450)
!9417 = !DILocation(line: 3342, column: 5, scope: !8450)
!9418 = !DILocation(line: 2886, column: 46, scope: !8444)
!9419 = !DILocation(line: 2886, column: 5, scope: !8444)
!9420 = distinct !{!9420, !8448, !9421}
!9421 = !DILocation(line: 3342, column: 5, scope: !8441)
!9422 = !DILocation(line: 3343, column: 39, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 3343, column: 10)
!9424 = !DILocation(line: 3343, column: 46, scope: !9423)
!9425 = !DILocation(line: 3343, column: 10, scope: !9423)
!9426 = !DILocation(line: 3343, column: 57, scope: !9423)
!9427 = !DILocation(line: 3343, column: 10, scope: !8379)
!9428 = !DILocation(line: 3344, column: 13, scope: !9423)
!9429 = !DILocation(line: 3344, column: 7, scope: !9423)
!9430 = !DILocation(line: 3345, column: 9, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 3345, column: 9)
!9432 = !DILocation(line: 3345, column: 16, scope: !9431)
!9433 = !DILocation(line: 3345, column: 33, scope: !9431)
!9434 = !DILocation(line: 3345, column: 9, scope: !8379)
!9435 = !DILocalVariable(name: "proceed", scope: !9436, file: !1, line: 3348, type: !641)
!9436 = distinct !DILexicalBlock(scope: !9431, file: !1, line: 3346, column: 7)
!9437 = !DILocation(line: 3348, column: 11, scope: !9436)
!9438 = !DILocation(line: 3353, column: 34, scope: !9436)
!9439 = !DILocation(line: 3353, column: 62, scope: !9436)
!9440 = !DILocation(line: 3353, column: 65, scope: !9436)
!9441 = !DILocation(line: 3353, column: 72, scope: !9436)
!9442 = !DILocation(line: 3353, column: 17, scope: !9436)
!9443 = !DILocation(line: 3353, column: 16, scope: !9436)
!9444 = !DILocation(line: 3354, column: 13, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9436, file: !1, line: 3354, column: 13)
!9446 = !DILocation(line: 3354, column: 21, scope: !9445)
!9447 = !DILocation(line: 3354, column: 13, scope: !9436)
!9448 = !DILocation(line: 3355, column: 17, scope: !9445)
!9449 = !DILocation(line: 3355, column: 11, scope: !9445)
!9450 = !DILocation(line: 3356, column: 7, scope: !9436)
!9451 = !DILocation(line: 3357, column: 3, scope: !8379)
!9452 = !DILocation(line: 2846, column: 41, scope: !8373)
!9453 = !DILocation(line: 2846, column: 3, scope: !8373)
!9454 = distinct !{!9454, !8377, !9455}
!9455 = !DILocation(line: 3357, column: 3, scope: !8370)
!9456 = !DILocation(line: 3358, column: 27, scope: !7792)
!9457 = !DILocation(line: 3358, column: 10, scope: !7792)
!9458 = !DILocation(line: 3358, column: 9, scope: !7792)
!9459 = !DILocation(line: 3359, column: 27, scope: !7792)
!9460 = !DILocation(line: 3359, column: 10, scope: !7792)
!9461 = !DILocation(line: 3359, column: 9, scope: !7792)
!9462 = !DILocation(line: 3360, column: 9, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !7792, file: !1, line: 3360, column: 3)
!9464 = !DILocation(line: 3360, column: 8, scope: !9463)
!9465 = !DILocation(line: 3360, column: 13, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9463, file: !1, line: 3360, column: 3)
!9467 = !DILocation(line: 3360, column: 27, scope: !9466)
!9468 = !DILocation(line: 3360, column: 15, scope: !9466)
!9469 = !DILocation(line: 3360, column: 3, scope: !9463)
!9470 = !DILocation(line: 3361, column: 14, scope: !9466)
!9471 = !DILocation(line: 3361, column: 22, scope: !9466)
!9472 = !DILocation(line: 3361, column: 12, scope: !9466)
!9473 = !DILocation(line: 3361, column: 5, scope: !9466)
!9474 = !DILocation(line: 3360, column: 55, scope: !9466)
!9475 = !DILocation(line: 3360, column: 3, scope: !9466)
!9476 = distinct !{!9476, !9469, !9477}
!9477 = !DILocation(line: 3361, column: 23, scope: !9463)
!9478 = !DILocation(line: 3362, column: 45, scope: !7792)
!9479 = !DILocation(line: 3362, column: 22, scope: !7792)
!9480 = !DILocation(line: 3362, column: 11, scope: !7792)
!9481 = !DILocation(line: 3362, column: 10, scope: !7792)
!9482 = !DILocation(line: 3363, column: 10, scope: !7792)
!9483 = !DILocation(line: 3363, column: 28, scope: !7792)
!9484 = !DILocation(line: 3363, column: 3, scope: !7792)
!9485 = !DILocation(line: 3364, column: 1, scope: !7792)
!9486 = distinct !DISubprogram(name: "MorphologyImageChannel", scope: !1, file: !1, line: 4335, type: !9487, scopeLine: 4338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!627, !5973, !5975, !5976, !5978, !5885, !5980}
!9489 = !DILocalVariable(name: "image", arg: 1, scope: !9486, file: !1, line: 4335, type: !5973)
!9490 = !DILocation(line: 4335, column: 57, scope: !9486)
!9491 = !DILocalVariable(name: "channel", arg: 2, scope: !9486, file: !1, line: 4336, type: !5975)
!9492 = !DILocation(line: 4336, column: 21, scope: !9486)
!9493 = !DILocalVariable(name: "method", arg: 3, scope: !9486, file: !1, line: 4336, type: !5976)
!9494 = !DILocation(line: 4336, column: 52, scope: !9486)
!9495 = !DILocalVariable(name: "iterations", arg: 4, scope: !9486, file: !1, line: 4337, type: !5978)
!9496 = !DILocation(line: 4337, column: 17, scope: !9486)
!9497 = !DILocalVariable(name: "kernel", arg: 5, scope: !9486, file: !1, line: 4337, type: !5885)
!9498 = !DILocation(line: 4337, column: 46, scope: !9486)
!9499 = !DILocalVariable(name: "exception", arg: 6, scope: !9486, file: !1, line: 4337, type: !5980)
!9500 = !DILocation(line: 4337, column: 68, scope: !9486)
!9501 = !DILocalVariable(name: "curr_kernel", scope: !9486, file: !1, line: 4340, type: !597)
!9502 = !DILocation(line: 4340, column: 6, scope: !9486)
!9503 = !DILocalVariable(name: "compose", scope: !9486, file: !1, line: 4343, type: !708)
!9504 = !DILocation(line: 4343, column: 5, scope: !9486)
!9505 = !DILocalVariable(name: "bias", scope: !9486, file: !1, line: 4346, type: !617)
!9506 = !DILocation(line: 4346, column: 5, scope: !9486)
!9507 = !DILocalVariable(name: "morphology_image", scope: !9486, file: !1, line: 4349, type: !627)
!9508 = !DILocation(line: 4349, column: 6, scope: !9486)
!9509 = !DILocation(line: 4355, column: 32, scope: !9486)
!9510 = !DILocation(line: 4355, column: 15, scope: !9486)
!9511 = !DILocation(line: 4356, column: 8, scope: !9486)
!9512 = !DILocation(line: 4356, column: 15, scope: !9486)
!9513 = !DILocation(line: 4356, column: 7, scope: !9486)
!9514 = !DILocation(line: 4357, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9486, file: !1, line: 4357, column: 8)
!9516 = !DILocation(line: 4357, column: 15, scope: !9515)
!9517 = !DILocation(line: 4357, column: 37, scope: !9515)
!9518 = !DILocation(line: 4357, column: 41, scope: !9515)
!9519 = !DILocation(line: 4357, column: 48, scope: !9515)
!9520 = !DILocation(line: 4357, column: 8, scope: !9486)
!9521 = !DILocalVariable(name: "artifact", scope: !9522, file: !1, line: 4360, type: !591)
!9522 = distinct !DILexicalBlock(scope: !9515, file: !1, line: 4358, column: 5)
!9523 = !DILocation(line: 4360, column: 10, scope: !9522)
!9524 = !DILocation(line: 4362, column: 35, scope: !9522)
!9525 = !DILocation(line: 4362, column: 18, scope: !9522)
!9526 = !DILocation(line: 4362, column: 16, scope: !9522)
!9527 = !DILocation(line: 4363, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9522, file: !1, line: 4363, column: 11)
!9529 = !DILocation(line: 4363, column: 20, scope: !9528)
!9530 = !DILocation(line: 4363, column: 11, scope: !9522)
!9531 = !DILocation(line: 4364, column: 37, scope: !9528)
!9532 = !DILocation(line: 4364, column: 14, scope: !9528)
!9533 = !DILocation(line: 4364, column: 13, scope: !9528)
!9534 = !DILocation(line: 4364, column: 9, scope: !9528)
!9535 = !DILocation(line: 4366, column: 35, scope: !9522)
!9536 = !DILocation(line: 4366, column: 18, scope: !9522)
!9537 = !DILocation(line: 4366, column: 16, scope: !9522)
!9538 = !DILocation(line: 4367, column: 12, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9522, file: !1, line: 4367, column: 12)
!9540 = !DILocation(line: 4367, column: 21, scope: !9539)
!9541 = !DILocation(line: 4367, column: 12, scope: !9522)
!9542 = !DILocation(line: 4368, column: 14, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !1, line: 4368, column: 14)
!9544 = distinct !DILexicalBlock(scope: !9539, file: !1, line: 4367, column: 45)
!9545 = !DILocation(line: 4368, column: 29, scope: !9543)
!9546 = !DILocation(line: 4368, column: 26, scope: !9543)
!9547 = !DILocation(line: 4368, column: 14, scope: !9544)
!9548 = !DILocation(line: 4369, column: 41, scope: !9543)
!9549 = !DILocation(line: 4369, column: 25, scope: !9543)
!9550 = !DILocation(line: 4369, column: 23, scope: !9543)
!9551 = !DILocation(line: 4369, column: 11, scope: !9543)
!9552 = !DILocation(line: 4370, column: 13, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9544, file: !1, line: 4370, column: 13)
!9554 = !DILocation(line: 4370, column: 25, scope: !9553)
!9555 = !DILocation(line: 4370, column: 13, scope: !9544)
!9556 = !DILocation(line: 4371, column: 41, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !1, line: 4370, column: 49)
!9558 = !DILocation(line: 4371, column: 23, scope: !9557)
!9559 = !DILocation(line: 4371, column: 22, scope: !9557)
!9560 = !DILocation(line: 4372, column: 11, scope: !9557)
!9561 = !DILocation(line: 4374, column: 33, scope: !9544)
!9562 = !DILocation(line: 4374, column: 46, scope: !9544)
!9563 = !DILocation(line: 4374, column: 9, scope: !9544)
!9564 = !DILocation(line: 4375, column: 7, scope: !9544)
!9565 = !DILocation(line: 4376, column: 5, scope: !9522)
!9566 = !DILocation(line: 4379, column: 38, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9486, file: !1, line: 4379, column: 8)
!9568 = !DILocation(line: 4379, column: 21, scope: !9567)
!9569 = !DILocation(line: 4379, column: 8, scope: !9567)
!9570 = !DILocation(line: 4380, column: 5, scope: !9567)
!9571 = !DILocation(line: 4380, column: 38, scope: !9567)
!9572 = !DILocation(line: 4380, column: 21, scope: !9567)
!9573 = !DILocation(line: 4380, column: 8, scope: !9567)
!9574 = !DILocation(line: 4381, column: 5, scope: !9567)
!9575 = !DILocation(line: 4381, column: 38, scope: !9567)
!9576 = !DILocation(line: 4381, column: 21, scope: !9567)
!9577 = !DILocation(line: 4381, column: 8, scope: !9567)
!9578 = !DILocation(line: 4379, column: 8, scope: !9486)
!9579 = !DILocation(line: 4382, column: 20, scope: !9567)
!9580 = !DILocation(line: 4382, column: 5, scope: !9567)
!9581 = !DILocalVariable(name: "artifact", scope: !9582, file: !1, line: 4391, type: !591)
!9582 = distinct !DILexicalBlock(scope: !9486, file: !1, line: 4390, column: 3)
!9583 = !DILocation(line: 4391, column: 8, scope: !9582)
!9584 = !DILocation(line: 4392, column: 13, scope: !9582)
!9585 = !DILocation(line: 4393, column: 33, scope: !9582)
!9586 = !DILocation(line: 4393, column: 16, scope: !9582)
!9587 = !DILocation(line: 4393, column: 14, scope: !9582)
!9588 = !DILocation(line: 4394, column: 10, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9582, file: !1, line: 4394, column: 10)
!9590 = !DILocation(line: 4394, column: 19, scope: !9589)
!9591 = !DILocation(line: 4394, column: 10, scope: !9582)
!9592 = !DILocation(line: 4396, column: 63, scope: !9589)
!9593 = !DILocation(line: 4395, column: 37, scope: !9589)
!9594 = !DILocation(line: 4395, column: 17, scope: !9589)
!9595 = !DILocation(line: 4395, column: 15, scope: !9589)
!9596 = !DILocation(line: 4395, column: 7, scope: !9589)
!9597 = !DILocation(line: 4399, column: 38, scope: !9486)
!9598 = !DILocation(line: 4399, column: 45, scope: !9486)
!9599 = !DILocation(line: 4399, column: 54, scope: !9486)
!9600 = !DILocation(line: 4399, column: 62, scope: !9486)
!9601 = !DILocation(line: 4400, column: 26, scope: !9486)
!9602 = !DILocation(line: 4400, column: 39, scope: !9486)
!9603 = !DILocation(line: 4400, column: 48, scope: !9486)
!9604 = !DILocation(line: 4400, column: 54, scope: !9486)
!9605 = !DILocation(line: 4399, column: 22, scope: !9486)
!9606 = !DILocation(line: 4399, column: 20, scope: !9486)
!9607 = !DILocation(line: 4403, column: 8, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9486, file: !1, line: 4403, column: 8)
!9609 = !DILocation(line: 4403, column: 23, scope: !9608)
!9610 = !DILocation(line: 4403, column: 20, scope: !9608)
!9611 = !DILocation(line: 4403, column: 8, scope: !9486)
!9612 = !DILocation(line: 4404, column: 35, scope: !9608)
!9613 = !DILocation(line: 4404, column: 17, scope: !9608)
!9614 = !DILocation(line: 4404, column: 16, scope: !9608)
!9615 = !DILocation(line: 4404, column: 5, scope: !9608)
!9616 = !DILocation(line: 4405, column: 10, scope: !9486)
!9617 = !DILocation(line: 4405, column: 3, scope: !9486)
!9618 = !DILocation(line: 4406, column: 1, scope: !9486)
!9619 = distinct !DISubprogram(name: "StringToDoubleInterval", scope: !9620, file: !9620, line: 48, type: !9621, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9620 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!617, !591, !5047}
!9623 = !DILocalVariable(name: "string", arg: 1, scope: !9619, file: !9620, line: 48, type: !591)
!9624 = !DILocation(line: 48, column: 57, scope: !9619)
!9625 = !DILocalVariable(name: "interval", arg: 2, scope: !9619, file: !9620, line: 49, type: !5047)
!9626 = !DILocation(line: 49, column: 16, scope: !9619)
!9627 = !DILocalVariable(name: "q", scope: !9619, file: !9620, line: 52, type: !626)
!9628 = !DILocation(line: 52, column: 6, scope: !9619)
!9629 = !DILocalVariable(name: "value", scope: !9619, file: !9620, line: 55, type: !617)
!9630 = !DILocation(line: 55, column: 5, scope: !9619)
!9631 = !DILocation(line: 57, column: 30, scope: !9619)
!9632 = !DILocation(line: 57, column: 9, scope: !9619)
!9633 = !DILocation(line: 57, column: 8, scope: !9619)
!9634 = !DILocation(line: 58, column: 8, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9619, file: !9620, line: 58, column: 7)
!9636 = !DILocation(line: 58, column: 7, scope: !9635)
!9637 = !DILocation(line: 58, column: 10, scope: !9635)
!9638 = !DILocation(line: 58, column: 7, scope: !9619)
!9639 = !DILocation(line: 59, column: 12, scope: !9635)
!9640 = !DILocation(line: 59, column: 20, scope: !9635)
!9641 = !DILocation(line: 59, column: 10, scope: !9635)
!9642 = !DILocation(line: 59, column: 5, scope: !9635)
!9643 = !DILocation(line: 60, column: 10, scope: !9619)
!9644 = !DILocation(line: 60, column: 3, scope: !9619)
!9645 = distinct !DISubprogram(name: "ScaleGeometryKernelInfo", scope: !1, file: !1, line: 4656, type: !9646, scopeLine: 4658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{null, !597, !591}
!9648 = !DILocalVariable(name: "kernel", arg: 1, scope: !9645, file: !1, line: 4656, type: !597)
!9649 = !DILocation(line: 4656, column: 56, scope: !9645)
!9650 = !DILocalVariable(name: "geometry", arg: 2, scope: !9645, file: !1, line: 4657, type: !591)
!9651 = !DILocation(line: 4657, column: 18, scope: !9645)
!9652 = !DILocalVariable(name: "flags", scope: !9645, file: !1, line: 4660, type: !833)
!9653 = !DILocation(line: 4660, column: 5, scope: !9645)
!9654 = !DILocalVariable(name: "args", scope: !9645, file: !1, line: 4662, type: !956)
!9655 = !DILocation(line: 4662, column: 5, scope: !9645)
!9656 = !DILocation(line: 4664, column: 3, scope: !9645)
!9657 = !DILocation(line: 4665, column: 41, scope: !9645)
!9658 = !DILocation(line: 4665, column: 27, scope: !9645)
!9659 = !DILocation(line: 4665, column: 9, scope: !9645)
!9660 = !DILocation(line: 4673, column: 9, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 4673, column: 8)
!9662 = !DILocation(line: 4673, column: 15, scope: !9661)
!9663 = !DILocation(line: 4673, column: 31, scope: !9661)
!9664 = !DILocation(line: 4673, column: 8, scope: !9645)
!9665 = !DILocation(line: 4674, column: 10, scope: !9661)
!9666 = !DILocation(line: 4674, column: 14, scope: !9661)
!9667 = !DILocation(line: 4674, column: 29, scope: !9661)
!9668 = !DILocation(line: 4674, column: 35, scope: !9661)
!9669 = !DILocation(line: 4674, column: 5, scope: !9661)
!9670 = !DILocation(line: 4676, column: 9, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 4676, column: 8)
!9672 = !DILocation(line: 4676, column: 15, scope: !9671)
!9673 = !DILocation(line: 4676, column: 27, scope: !9671)
!9674 = !DILocation(line: 4676, column: 8, scope: !9645)
!9675 = !DILocation(line: 4677, column: 10, scope: !9671)
!9676 = !DILocation(line: 4677, column: 14, scope: !9671)
!9677 = !DILocation(line: 4677, column: 5, scope: !9671)
!9678 = !DILocation(line: 4678, column: 9, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 4678, column: 8)
!9680 = !DILocation(line: 4678, column: 15, scope: !9679)
!9681 = !DILocation(line: 4678, column: 29, scope: !9679)
!9682 = !DILocation(line: 4678, column: 8, scope: !9645)
!9683 = !DILocation(line: 4679, column: 10, scope: !9679)
!9684 = !DILocation(line: 4679, column: 16, scope: !9679)
!9685 = !DILocation(line: 4679, column: 5, scope: !9679)
!9686 = !DILocation(line: 4682, column: 19, scope: !9645)
!9687 = !DILocation(line: 4682, column: 32, scope: !9645)
!9688 = !DILocation(line: 4682, column: 37, scope: !9645)
!9689 = !DILocation(line: 4682, column: 3, scope: !9645)
!9690 = !DILocation(line: 4685, column: 9, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 4685, column: 8)
!9692 = !DILocation(line: 4685, column: 15, scope: !9691)
!9693 = !DILocation(line: 4685, column: 29, scope: !9691)
!9694 = !DILocation(line: 4685, column: 8, scope: !9645)
!9695 = !DILocation(line: 4686, column: 24, scope: !9691)
!9696 = !DILocation(line: 4686, column: 37, scope: !9691)
!9697 = !DILocation(line: 4686, column: 5, scope: !9691)
!9698 = !DILocation(line: 4688, column: 3, scope: !9645)
!9699 = distinct !DISubprogram(name: "ShowKernelInfo", scope: !1, file: !1, line: 4848, type: !9700, scopeLine: 4849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{null, !5885}
!9702 = !DILocalVariable(name: "kernel", arg: 1, scope: !9699, file: !1, line: 4848, type: !5885)
!9703 = !DILocation(line: 4848, column: 52, scope: !9699)
!9704 = !DILocalVariable(name: "k", scope: !9699, file: !1, line: 4851, type: !5885)
!9705 = !DILocation(line: 4851, column: 6, scope: !9699)
!9706 = !DILocalVariable(name: "c", scope: !9699, file: !1, line: 4854, type: !604)
!9707 = !DILocation(line: 4854, column: 5, scope: !9699)
!9708 = !DILocalVariable(name: "i", scope: !9699, file: !1, line: 4854, type: !604)
!9709 = !DILocation(line: 4854, column: 8, scope: !9699)
!9710 = !DILocalVariable(name: "u", scope: !9699, file: !1, line: 4854, type: !604)
!9711 = !DILocation(line: 4854, column: 11, scope: !9699)
!9712 = !DILocalVariable(name: "v", scope: !9699, file: !1, line: 4854, type: !604)
!9713 = !DILocation(line: 4854, column: 14, scope: !9699)
!9714 = !DILocation(line: 4856, column: 9, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9699, file: !1, line: 4856, column: 3)
!9716 = !DILocation(line: 4856, column: 15, scope: !9715)
!9717 = !DILocation(line: 4856, column: 14, scope: !9715)
!9718 = !DILocation(line: 4856, column: 8, scope: !9715)
!9719 = !DILocation(line: 4856, column: 24, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9715, file: !1, line: 4856, column: 3)
!9721 = !DILocation(line: 4856, column: 26, scope: !9720)
!9722 = !DILocation(line: 4856, column: 3, scope: !9715)
!9723 = !DILocation(line: 4858, column: 29, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9720, file: !1, line: 4856, column: 68)
!9725 = !DILocation(line: 4858, column: 12, scope: !9724)
!9726 = !DILocation(line: 4859, column: 10, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9724, file: !1, line: 4859, column: 10)
!9728 = !DILocation(line: 4859, column: 18, scope: !9727)
!9729 = !DILocation(line: 4859, column: 23, scope: !9727)
!9730 = !DILocation(line: 4859, column: 10, scope: !9724)
!9731 = !DILocation(line: 4860, column: 31, scope: !9727)
!9732 = !DILocation(line: 4860, column: 64, scope: !9727)
!9733 = !DILocation(line: 4860, column: 14, scope: !9727)
!9734 = !DILocation(line: 4860, column: 7, scope: !9727)
!9735 = !DILocation(line: 4861, column: 29, scope: !9724)
!9736 = !DILocation(line: 4862, column: 56, scope: !9724)
!9737 = !DILocation(line: 4862, column: 59, scope: !9724)
!9738 = !DILocation(line: 4862, column: 11, scope: !9724)
!9739 = !DILocation(line: 4861, column: 12, scope: !9724)
!9740 = !DILocation(line: 4863, column: 15, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9724, file: !1, line: 4863, column: 10)
!9742 = !DILocation(line: 4863, column: 18, scope: !9741)
!9743 = !DILocation(line: 4863, column: 10, scope: !9741)
!9744 = !DILocation(line: 4863, column: 25, scope: !9741)
!9745 = !DILocation(line: 4863, column: 10, scope: !9724)
!9746 = !DILocation(line: 4864, column: 31, scope: !9741)
!9747 = !DILocation(line: 4864, column: 47, scope: !9741)
!9748 = !DILocation(line: 4864, column: 50, scope: !9741)
!9749 = !DILocation(line: 4864, column: 14, scope: !9741)
!9750 = !DILocation(line: 4864, column: 7, scope: !9741)
!9751 = !DILocation(line: 4865, column: 29, scope: !9724)
!9752 = !DILocation(line: 4866, column: 7, scope: !9724)
!9753 = !DILocation(line: 4866, column: 10, scope: !9724)
!9754 = !DILocation(line: 4866, column: 32, scope: !9724)
!9755 = !DILocation(line: 4866, column: 35, scope: !9724)
!9756 = !DILocation(line: 4866, column: 49, scope: !9724)
!9757 = !DILocation(line: 4866, column: 52, scope: !9724)
!9758 = !DILocation(line: 4866, column: 61, scope: !9724)
!9759 = !DILocation(line: 4866, column: 64, scope: !9724)
!9760 = !DILocation(line: 4865, column: 12, scope: !9724)
!9761 = !DILocation(line: 4867, column: 29, scope: !9724)
!9762 = !DILocation(line: 4869, column: 11, scope: !9724)
!9763 = !DILocation(line: 4869, column: 33, scope: !9724)
!9764 = !DILocation(line: 4869, column: 36, scope: !9724)
!9765 = !DILocation(line: 4870, column: 11, scope: !9724)
!9766 = !DILocation(line: 4870, column: 33, scope: !9724)
!9767 = !DILocation(line: 4870, column: 36, scope: !9724)
!9768 = !DILocation(line: 4867, column: 12, scope: !9724)
!9769 = !DILocation(line: 4871, column: 29, scope: !9724)
!9770 = !DILocation(line: 4872, column: 11, scope: !9724)
!9771 = !DILocation(line: 4872, column: 33, scope: !9724)
!9772 = !DILocation(line: 4872, column: 36, scope: !9724)
!9773 = !DILocation(line: 4873, column: 11, scope: !9724)
!9774 = !DILocation(line: 4873, column: 33, scope: !9724)
!9775 = !DILocation(line: 4873, column: 36, scope: !9724)
!9776 = !DILocation(line: 4871, column: 12, scope: !9724)
!9777 = !DILocation(line: 4874, column: 15, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9724, file: !1, line: 4874, column: 10)
!9779 = !DILocation(line: 4874, column: 18, scope: !9778)
!9780 = !DILocation(line: 4874, column: 33, scope: !9778)
!9781 = !DILocation(line: 4874, column: 36, scope: !9778)
!9782 = !DILocation(line: 4874, column: 32, scope: !9778)
!9783 = !DILocation(line: 4874, column: 10, scope: !9778)
!9784 = !DILocation(line: 4874, column: 52, scope: !9778)
!9785 = !DILocation(line: 4874, column: 10, scope: !9724)
!9786 = !DILocation(line: 4875, column: 31, scope: !9778)
!9787 = !DILocation(line: 4875, column: 14, scope: !9778)
!9788 = !DILocation(line: 4875, column: 7, scope: !9778)
!9789 = !DILocation(line: 4876, column: 20, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9778, file: !1, line: 4876, column: 15)
!9791 = !DILocation(line: 4876, column: 23, scope: !9790)
!9792 = !DILocation(line: 4876, column: 38, scope: !9790)
!9793 = !DILocation(line: 4876, column: 41, scope: !9790)
!9794 = !DILocation(line: 4876, column: 37, scope: !9790)
!9795 = !DILocation(line: 4876, column: 55, scope: !9790)
!9796 = !DILocation(line: 4876, column: 15, scope: !9790)
!9797 = !DILocation(line: 4876, column: 61, scope: !9790)
!9798 = !DILocation(line: 4876, column: 15, scope: !9778)
!9799 = !DILocation(line: 4877, column: 31, scope: !9790)
!9800 = !DILocation(line: 4877, column: 14, scope: !9790)
!9801 = !DILocation(line: 4877, column: 7, scope: !9790)
!9802 = !DILocation(line: 4879, column: 31, scope: !9790)
!9803 = !DILocation(line: 4880, column: 11, scope: !9790)
!9804 = !DILocation(line: 4880, column: 33, scope: !9790)
!9805 = !DILocation(line: 4880, column: 36, scope: !9790)
!9806 = !DILocation(line: 4880, column: 51, scope: !9790)
!9807 = !DILocation(line: 4880, column: 54, scope: !9790)
!9808 = !DILocation(line: 4880, column: 50, scope: !9790)
!9809 = !DILocation(line: 4879, column: 14, scope: !9790)
!9810 = !DILocation(line: 4881, column: 13, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9724, file: !1, line: 4881, column: 5)
!9812 = !DILocation(line: 4881, column: 11, scope: !9811)
!9813 = !DILocation(line: 4881, column: 10, scope: !9811)
!9814 = !DILocation(line: 4881, column: 17, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9811, file: !1, line: 4881, column: 5)
!9816 = !DILocation(line: 4881, column: 21, scope: !9815)
!9817 = !DILocation(line: 4881, column: 24, scope: !9815)
!9818 = !DILocation(line: 4881, column: 19, scope: !9815)
!9819 = !DILocation(line: 4881, column: 5, scope: !9811)
!9820 = !DILocation(line: 4882, column: 31, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9815, file: !1, line: 4881, column: 37)
!9822 = !DILocation(line: 4882, column: 64, scope: !9821)
!9823 = !DILocation(line: 4882, column: 14, scope: !9821)
!9824 = !DILocation(line: 4883, column: 13, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9821, file: !1, line: 4883, column: 7)
!9826 = !DILocation(line: 4883, column: 12, scope: !9825)
!9827 = !DILocation(line: 4883, column: 17, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9825, file: !1, line: 4883, column: 7)
!9829 = !DILocation(line: 4883, column: 21, scope: !9828)
!9830 = !DILocation(line: 4883, column: 24, scope: !9828)
!9831 = !DILocation(line: 4883, column: 19, scope: !9828)
!9832 = !DILocation(line: 4883, column: 7, scope: !9825)
!9833 = !DILocation(line: 4884, column: 14, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9828, file: !1, line: 4884, column: 14)
!9835 = !DILocation(line: 4884, column: 14, scope: !9828)
!9836 = !DILocation(line: 4885, column: 35, scope: !9834)
!9837 = !DILocation(line: 4885, column: 50, scope: !9834)
!9838 = !DILocation(line: 4885, column: 70, scope: !9834)
!9839 = !DILocation(line: 4885, column: 18, scope: !9834)
!9840 = !DILocation(line: 4885, column: 11, scope: !9834)
!9841 = !DILocation(line: 4887, column: 35, scope: !9834)
!9842 = !DILocation(line: 4887, column: 53, scope: !9834)
!9843 = !DILocation(line: 4887, column: 73, scope: !9834)
!9844 = !DILocation(line: 4888, column: 15, scope: !9834)
!9845 = !DILocation(line: 4888, column: 37, scope: !9834)
!9846 = !DILocation(line: 4888, column: 40, scope: !9834)
!9847 = !DILocation(line: 4888, column: 47, scope: !9834)
!9848 = !DILocation(line: 4887, column: 18, scope: !9834)
!9849 = !DILocation(line: 4883, column: 32, scope: !9828)
!9850 = !DILocation(line: 4883, column: 37, scope: !9828)
!9851 = !DILocation(line: 4883, column: 7, scope: !9828)
!9852 = distinct !{!9852, !9832, !9853}
!9853 = !DILocation(line: 4888, column: 49, scope: !9825)
!9854 = !DILocation(line: 4889, column: 31, scope: !9821)
!9855 = !DILocation(line: 4889, column: 14, scope: !9821)
!9856 = !DILocation(line: 4890, column: 5, scope: !9821)
!9857 = !DILocation(line: 4881, column: 33, scope: !9815)
!9858 = !DILocation(line: 4881, column: 5, scope: !9815)
!9859 = distinct !{!9859, !9819, !9860}
!9860 = !DILocation(line: 4890, column: 5, scope: !9811)
!9861 = !DILocation(line: 4891, column: 3, scope: !9724)
!9862 = !DILocation(line: 4856, column: 52, scope: !9720)
!9863 = !DILocation(line: 4856, column: 58, scope: !9720)
!9864 = !DILocation(line: 4856, column: 61, scope: !9720)
!9865 = !DILocation(line: 4856, column: 57, scope: !9720)
!9866 = !DILocation(line: 4856, column: 3, scope: !9720)
!9867 = distinct !{!9867, !9722, !9868}
!9868 = !DILocation(line: 4891, column: 3, scope: !9715)
!9869 = !DILocation(line: 4892, column: 1, scope: !9699)
!9870 = distinct !DISubprogram(name: "MorphologyImage", scope: !1, file: !1, line: 4408, type: !9871, scopeLine: 4411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!627, !5973, !5976, !5978, !5885, !5980}
!9873 = !DILocalVariable(name: "image", arg: 1, scope: !9870, file: !1, line: 4408, type: !5973)
!9874 = !DILocation(line: 4408, column: 50, scope: !9870)
!9875 = !DILocalVariable(name: "method", arg: 2, scope: !9870, file: !1, line: 4409, type: !5976)
!9876 = !DILocation(line: 4409, column: 3, scope: !9870)
!9877 = !DILocalVariable(name: "iterations", arg: 3, scope: !9870, file: !1, line: 4409, type: !5978)
!9878 = !DILocation(line: 4409, column: 25, scope: !9870)
!9879 = !DILocalVariable(name: "kernel", arg: 4, scope: !9870, file: !1, line: 4409, type: !5885)
!9880 = !DILocation(line: 4409, column: 54, scope: !9870)
!9881 = !DILocalVariable(name: "exception", arg: 5, scope: !9870, file: !1, line: 4410, type: !5980)
!9882 = !DILocation(line: 4410, column: 4, scope: !9870)
!9883 = !DILocalVariable(name: "morphology_image", scope: !9870, file: !1, line: 4413, type: !627)
!9884 = !DILocation(line: 4413, column: 6, scope: !9870)
!9885 = !DILocation(line: 4415, column: 43, scope: !9870)
!9886 = !DILocation(line: 4415, column: 65, scope: !9870)
!9887 = !DILocation(line: 4416, column: 5, scope: !9870)
!9888 = !DILocation(line: 4416, column: 16, scope: !9870)
!9889 = !DILocation(line: 4416, column: 23, scope: !9870)
!9890 = !DILocation(line: 4415, column: 20, scope: !9870)
!9891 = !DILocation(line: 4415, column: 19, scope: !9870)
!9892 = !DILocation(line: 4417, column: 10, scope: !9870)
!9893 = !DILocation(line: 4417, column: 3, scope: !9870)
!9894 = distinct !DISubprogram(name: "UnityAddKernelInfo", scope: !1, file: !1, line: 4928, type: !5829, scopeLine: 4930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9895 = !DILocalVariable(name: "kernel", arg: 1, scope: !9894, file: !1, line: 4928, type: !597)
!9896 = !DILocation(line: 4928, column: 50, scope: !9894)
!9897 = !DILocalVariable(name: "scale", arg: 2, scope: !9894, file: !1, line: 4929, type: !5047)
!9898 = !DILocation(line: 4929, column: 16, scope: !9894)
!9899 = !DILocation(line: 4932, column: 8, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9894, file: !1, line: 4932, column: 8)
!9901 = !DILocation(line: 4932, column: 16, scope: !9900)
!9902 = !DILocation(line: 4932, column: 21, scope: !9900)
!9903 = !DILocation(line: 4932, column: 8, scope: !9894)
!9904 = !DILocation(line: 4933, column: 24, scope: !9900)
!9905 = !DILocation(line: 4933, column: 32, scope: !9900)
!9906 = !DILocation(line: 4933, column: 38, scope: !9900)
!9907 = !DILocation(line: 4933, column: 5, scope: !9900)
!9908 = !DILocation(line: 4936, column: 56, scope: !9894)
!9909 = !DILocation(line: 4936, column: 3, scope: !9894)
!9910 = !DILocation(line: 4936, column: 11, scope: !9894)
!9911 = !DILocation(line: 4936, column: 18, scope: !9894)
!9912 = !DILocation(line: 4936, column: 26, scope: !9894)
!9913 = !DILocation(line: 4936, column: 28, scope: !9894)
!9914 = !DILocation(line: 4936, column: 36, scope: !9894)
!9915 = !DILocation(line: 4936, column: 38, scope: !9894)
!9916 = !DILocation(line: 4936, column: 46, scope: !9894)
!9917 = !DILocation(line: 4936, column: 37, scope: !9894)
!9918 = !DILocation(line: 4936, column: 27, scope: !9894)
!9919 = !DILocation(line: 4936, column: 53, scope: !9894)
!9920 = !DILocation(line: 4937, column: 22, scope: !9894)
!9921 = !DILocation(line: 4937, column: 3, scope: !9894)
!9922 = !DILocation(line: 4939, column: 3, scope: !9894)
!9923 = distinct !DISubprogram(name: "ZeroKernelNans", scope: !1, file: !1, line: 4968, type: !4977, scopeLine: 4969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9924 = !DILocalVariable(name: "kernel", arg: 1, scope: !9923, file: !1, line: 4968, type: !597)
!9925 = !DILocation(line: 4968, column: 46, scope: !9923)
!9926 = !DILocalVariable(name: "i", scope: !9923, file: !1, line: 4971, type: !604)
!9927 = !DILocation(line: 4971, column: 5, scope: !9923)
!9928 = !DILocation(line: 4974, column: 8, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9923, file: !1, line: 4974, column: 8)
!9930 = !DILocation(line: 4974, column: 16, scope: !9929)
!9931 = !DILocation(line: 4974, column: 21, scope: !9929)
!9932 = !DILocation(line: 4974, column: 8, scope: !9923)
!9933 = !DILocation(line: 4975, column: 20, scope: !9929)
!9934 = !DILocation(line: 4975, column: 28, scope: !9929)
!9935 = !DILocation(line: 4975, column: 5, scope: !9929)
!9936 = !DILocation(line: 4977, column: 9, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9923, file: !1, line: 4977, column: 3)
!9938 = !DILocation(line: 4977, column: 8, scope: !9937)
!9939 = !DILocation(line: 4977, column: 13, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9937, file: !1, line: 4977, column: 3)
!9941 = !DILocation(line: 4977, column: 18, scope: !9940)
!9942 = !DILocation(line: 4977, column: 26, scope: !9940)
!9943 = !DILocation(line: 4977, column: 32, scope: !9940)
!9944 = !DILocation(line: 4977, column: 40, scope: !9940)
!9945 = !DILocation(line: 4977, column: 31, scope: !9940)
!9946 = !DILocation(line: 4977, column: 15, scope: !9940)
!9947 = !DILocation(line: 4977, column: 3, scope: !9937)
!9948 = !DILocation(line: 4978, column: 10, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9940, file: !1, line: 4978, column: 10)
!9950 = !DILocation(line: 4978, column: 10, scope: !9940)
!9951 = !DILocation(line: 4979, column: 7, scope: !9949)
!9952 = !DILocation(line: 4979, column: 15, scope: !9949)
!9953 = !DILocation(line: 4979, column: 22, scope: !9949)
!9954 = !DILocation(line: 4979, column: 25, scope: !9949)
!9955 = !DILocation(line: 4977, column: 50, scope: !9940)
!9956 = !DILocation(line: 4977, column: 3, scope: !9940)
!9957 = distinct !{!9957, !9947, !9958}
!9958 = !DILocation(line: 4979, column: 27, scope: !9937)
!9959 = !DILocation(line: 4981, column: 3, scope: !9923)
!9960 = distinct !DISubprogram(name: "StringToDouble", scope: !9620, file: !9620, line: 42, type: !9961, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{!617, !9963, !9964}
!9963 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !591)
!9964 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !834)
!9965 = !DILocalVariable(name: "string", arg: 1, scope: !9960, file: !9620, line: 42, type: !9963)
!9966 = !DILocation(line: 42, column: 58, scope: !9960)
!9967 = !DILocalVariable(name: "sentinal", arg: 2, scope: !9960, file: !9620, line: 43, type: !9964)
!9968 = !DILocation(line: 43, column: 19, scope: !9960)
!9969 = !DILocation(line: 45, column: 31, scope: !9960)
!9970 = !DILocation(line: 45, column: 38, scope: !9960)
!9971 = !DILocation(line: 45, column: 10, scope: !9960)
!9972 = !DILocation(line: 45, column: 3, scope: !9960)
!9973 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 91, type: !5870, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9974 = !DILocalVariable(name: "x", arg: 1, scope: !9973, file: !1, line: 91, type: !5047)
!9975 = !DILocation(line: 91, column: 45, scope: !9973)
!9976 = !DILocalVariable(name: "y", arg: 2, scope: !9973, file: !1, line: 91, type: !5047)
!9977 = !DILocation(line: 91, column: 60, scope: !9973)
!9978 = !DILocation(line: 93, column: 11, scope: !9973)
!9979 = !DILocation(line: 93, column: 15, scope: !9973)
!9980 = !DILocation(line: 93, column: 13, scope: !9973)
!9981 = !DILocation(line: 93, column: 19, scope: !9973)
!9982 = !DILocation(line: 93, column: 23, scope: !9973)
!9983 = !DILocation(line: 93, column: 3, scope: !9973)
!9984 = distinct !DISubprogram(name: "SameKernelInfo", scope: !1, file: !1, line: 2370, type: !9985, scopeLine: 2372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{!641, !5885, !5885}
!9987 = !DILocalVariable(name: "kernel1", arg: 1, scope: !9984, file: !1, line: 2370, type: !5885)
!9988 = !DILocation(line: 2370, column: 59, scope: !9984)
!9989 = !DILocalVariable(name: "kernel2", arg: 2, scope: !9984, file: !1, line: 2371, type: !5885)
!9990 = !DILocation(line: 2371, column: 24, scope: !9984)
!9991 = !DILocalVariable(name: "i", scope: !9984, file: !1, line: 2374, type: !604)
!9992 = !DILocation(line: 2374, column: 5, scope: !9984)
!9993 = !DILocation(line: 2377, column: 11, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !1, line: 2377, column: 11)
!9995 = !DILocation(line: 2377, column: 20, scope: !9994)
!9996 = !DILocation(line: 2377, column: 29, scope: !9994)
!9997 = !DILocation(line: 2377, column: 38, scope: !9994)
!9998 = !DILocation(line: 2377, column: 26, scope: !9994)
!9999 = !DILocation(line: 2378, column: 8, scope: !9994)
!10000 = !DILocation(line: 2378, column: 11, scope: !9994)
!10001 = !DILocation(line: 2378, column: 20, scope: !9994)
!10002 = !DILocation(line: 2378, column: 30, scope: !9994)
!10003 = !DILocation(line: 2378, column: 39, scope: !9994)
!10004 = !DILocation(line: 2378, column: 27, scope: !9994)
!10005 = !DILocation(line: 2379, column: 8, scope: !9994)
!10006 = !DILocation(line: 2379, column: 11, scope: !9994)
!10007 = !DILocation(line: 2379, column: 20, scope: !9994)
!10008 = !DILocation(line: 2379, column: 25, scope: !9994)
!10009 = !DILocation(line: 2379, column: 34, scope: !9994)
!10010 = !DILocation(line: 2379, column: 22, scope: !9994)
!10011 = !DILocation(line: 2380, column: 8, scope: !9994)
!10012 = !DILocation(line: 2380, column: 11, scope: !9994)
!10013 = !DILocation(line: 2380, column: 20, scope: !9994)
!10014 = !DILocation(line: 2380, column: 25, scope: !9994)
!10015 = !DILocation(line: 2380, column: 34, scope: !9994)
!10016 = !DILocation(line: 2380, column: 22, scope: !9994)
!10017 = !DILocation(line: 2377, column: 11, scope: !9984)
!10018 = !DILocation(line: 2381, column: 5, scope: !9994)
!10019 = !DILocation(line: 2384, column: 9, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9984, file: !1, line: 2384, column: 3)
!10021 = !DILocation(line: 2384, column: 8, scope: !10020)
!10022 = !DILocation(line: 2384, column: 13, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10020, file: !1, line: 2384, column: 3)
!10024 = !DILocation(line: 2384, column: 18, scope: !10023)
!10025 = !DILocation(line: 2384, column: 27, scope: !10023)
!10026 = !DILocation(line: 2384, column: 33, scope: !10023)
!10027 = !DILocation(line: 2384, column: 42, scope: !10023)
!10028 = !DILocation(line: 2384, column: 32, scope: !10023)
!10029 = !DILocation(line: 2384, column: 15, scope: !10023)
!10030 = !DILocation(line: 2384, column: 3, scope: !10020)
!10031 = !DILocation(line: 2386, column: 10, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !1, line: 2386, column: 10)
!10033 = distinct !DILexicalBlock(scope: !10023, file: !1, line: 2384, column: 56)
!10034 = !DILocation(line: 2386, column: 36, scope: !10032)
!10035 = !DILocation(line: 2386, column: 40, scope: !10032)
!10036 = !DILocation(line: 2386, column: 10, scope: !10033)
!10037 = !DILocation(line: 2387, column: 7, scope: !10032)
!10038 = !DILocation(line: 2388, column: 10, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10033, file: !1, line: 2388, column: 10)
!10040 = !DILocation(line: 2388, column: 36, scope: !10039)
!10041 = !DILocation(line: 2388, column: 40, scope: !10039)
!10042 = !DILocation(line: 2388, column: 10, scope: !10033)
!10043 = !DILocation(line: 2389, column: 7, scope: !10039)
!10044 = !DILocation(line: 2391, column: 15, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10033, file: !1, line: 2391, column: 10)
!10046 = !DILocation(line: 2391, column: 24, scope: !10045)
!10047 = !DILocation(line: 2391, column: 31, scope: !10045)
!10048 = !DILocation(line: 2391, column: 36, scope: !10045)
!10049 = !DILocation(line: 2391, column: 45, scope: !10045)
!10050 = !DILocation(line: 2391, column: 52, scope: !10045)
!10051 = !DILocation(line: 2391, column: 34, scope: !10045)
!10052 = !DILocation(line: 2391, column: 10, scope: !10045)
!10053 = !DILocation(line: 2391, column: 56, scope: !10045)
!10054 = !DILocation(line: 2391, column: 10, scope: !10033)
!10055 = !DILocation(line: 2392, column: 7, scope: !10045)
!10056 = !DILocation(line: 2393, column: 3, scope: !10033)
!10057 = !DILocation(line: 2384, column: 52, scope: !10023)
!10058 = !DILocation(line: 2384, column: 3, scope: !10023)
!10059 = distinct !{!10059, !10030, !10060}
!10060 = !DILocation(line: 2393, column: 3, scope: !10020)
!10061 = !DILocation(line: 2395, column: 3, scope: !9984)
!10062 = !DILocation(line: 2396, column: 1, scope: !9984)
!10063 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !10064, file: !10064, line: 92, type: !10065, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10064 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10065 = !DISubroutineType(types: !10066)
!10066 = !{null, !5973, !835, !837, !10067}
!10067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 64)
!10068 = !DILocalVariable(name: "image", arg: 1, scope: !10063, file: !10064, line: 92, type: !5973)
!10069 = !DILocation(line: 92, column: 54, scope: !10063)
!10070 = !DILocalVariable(name: "color", arg: 2, scope: !10063, file: !10064, line: 93, type: !835)
!10071 = !DILocation(line: 93, column: 22, scope: !10063)
!10072 = !DILocalVariable(name: "index", arg: 3, scope: !10063, file: !10064, line: 93, type: !837)
!10073 = !DILocation(line: 93, column: 47, scope: !10063)
!10074 = !DILocalVariable(name: "pixel", arg: 4, scope: !10063, file: !10064, line: 93, type: !10067)
!10075 = !DILocation(line: 93, column: 72, scope: !10063)
!10076 = !DILocation(line: 95, column: 31, scope: !10063)
!10077 = !DILocation(line: 95, column: 14, scope: !10063)
!10078 = !DILocation(line: 95, column: 3, scope: !10063)
!10079 = !DILocation(line: 95, column: 10, scope: !10063)
!10080 = !DILocation(line: 95, column: 13, scope: !10063)
!10081 = !DILocation(line: 96, column: 33, scope: !10063)
!10082 = !DILocation(line: 96, column: 16, scope: !10063)
!10083 = !DILocation(line: 96, column: 3, scope: !10063)
!10084 = !DILocation(line: 96, column: 10, scope: !10063)
!10085 = !DILocation(line: 96, column: 15, scope: !10063)
!10086 = !DILocation(line: 97, column: 32, scope: !10063)
!10087 = !DILocation(line: 97, column: 15, scope: !10063)
!10088 = !DILocation(line: 97, column: 3, scope: !10063)
!10089 = !DILocation(line: 97, column: 10, scope: !10063)
!10090 = !DILocation(line: 97, column: 14, scope: !10063)
!10091 = !DILocation(line: 98, column: 35, scope: !10063)
!10092 = !DILocation(line: 98, column: 18, scope: !10063)
!10093 = !DILocation(line: 98, column: 3, scope: !10063)
!10094 = !DILocation(line: 98, column: 10, scope: !10063)
!10095 = !DILocation(line: 98, column: 17, scope: !10063)
!10096 = !DILocation(line: 99, column: 8, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10063, file: !10064, line: 99, column: 7)
!10098 = !DILocation(line: 99, column: 15, scope: !10097)
!10099 = !DILocation(line: 99, column: 26, scope: !10097)
!10100 = !DILocation(line: 99, column: 45, scope: !10097)
!10101 = !DILocation(line: 100, column: 8, scope: !10097)
!10102 = !DILocation(line: 100, column: 14, scope: !10097)
!10103 = !DILocation(line: 99, column: 7, scope: !10063)
!10104 = !DILocation(line: 101, column: 35, scope: !10097)
!10105 = !DILocation(line: 101, column: 18, scope: !10097)
!10106 = !DILocation(line: 101, column: 5, scope: !10097)
!10107 = !DILocation(line: 101, column: 12, scope: !10097)
!10108 = !DILocation(line: 101, column: 17, scope: !10097)
!10109 = !DILocation(line: 102, column: 1, scope: !10063)
!10110 = distinct !DISubprogram(name: "SetPixelPacket", scope: !10064, file: !10064, line: 117, type: !10111, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10111 = !DISubroutineType(types: !10112)
!10112 = !{null, !5973, !10113, !648, !840}
!10113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10114, size: 64)
!10114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6846)
!10115 = !DILocalVariable(name: "image", arg: 1, scope: !10110, file: !10064, line: 117, type: !5973)
!10116 = !DILocation(line: 117, column: 48, scope: !10110)
!10117 = !DILocalVariable(name: "pixel", arg: 2, scope: !10110, file: !10064, line: 118, type: !10113)
!10118 = !DILocation(line: 118, column: 28, scope: !10110)
!10119 = !DILocalVariable(name: "color", arg: 3, scope: !10110, file: !10064, line: 118, type: !648)
!10120 = !DILocation(line: 118, column: 47, scope: !10110)
!10121 = !DILocalVariable(name: "index", arg: 4, scope: !10110, file: !10064, line: 118, type: !840)
!10122 = !DILocation(line: 118, column: 66, scope: !10110)
!10123 = !DILocation(line: 120, column: 3, scope: !10110)
!10124 = !DILocation(line: 121, column: 3, scope: !10110)
!10125 = !DILocation(line: 122, column: 3, scope: !10110)
!10126 = !DILocation(line: 123, column: 3, scope: !10110)
!10127 = !DILocation(line: 124, column: 8, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10110, file: !10064, line: 124, column: 7)
!10129 = !DILocation(line: 124, column: 15, scope: !10128)
!10130 = !DILocation(line: 124, column: 26, scope: !10128)
!10131 = !DILocation(line: 124, column: 45, scope: !10128)
!10132 = !DILocation(line: 125, column: 8, scope: !10128)
!10133 = !DILocation(line: 125, column: 15, scope: !10128)
!10134 = !DILocation(line: 125, column: 29, scope: !10128)
!10135 = !DILocation(line: 124, column: 7, scope: !10110)
!10136 = !DILocation(line: 126, column: 5, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !10064, line: 126, column: 5)
!10138 = distinct !DILexicalBlock(scope: !10128, file: !10064, line: 126, column: 5)
!10139 = !DILocation(line: 126, column: 5, scope: !10138)
!10140 = !DILocation(line: 127, column: 1, scope: !10110)
!10141 = distinct !DISubprogram(name: "ClampToQuantum", scope: !232, file: !232, line: 87, type: !10142, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10142 = !DISubroutineType(types: !10143)
!10143 = !{!653, !10144}
!10144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !841)
!10145 = !DILocalVariable(name: "value", arg: 1, scope: !10141, file: !232, line: 87, type: !10144)
!10146 = !DILocation(line: 87, column: 59, scope: !10141)
!10147 = !DILocation(line: 92, column: 7, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10141, file: !232, line: 92, column: 7)
!10149 = !DILocation(line: 92, column: 13, scope: !10148)
!10150 = !DILocation(line: 92, column: 7, scope: !10141)
!10151 = !DILocation(line: 93, column: 5, scope: !10148)
!10152 = !DILocation(line: 94, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10141, file: !232, line: 94, column: 7)
!10154 = !DILocation(line: 94, column: 13, scope: !10153)
!10155 = !DILocation(line: 94, column: 7, scope: !10141)
!10156 = !DILocation(line: 95, column: 5, scope: !10153)
!10157 = !DILocation(line: 96, column: 21, scope: !10141)
!10158 = !DILocation(line: 96, column: 26, scope: !10141)
!10159 = !DILocation(line: 96, column: 10, scope: !10141)
!10160 = !DILocation(line: 96, column: 3, scope: !10141)
!10161 = !DILocation(line: 98, column: 1, scope: !10141)
!10162 = distinct !DISubprogram(name: "SetImageProgress", scope: !10163, file: !10163, line: 27, type: !10164, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10163 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!641, !5973, !591, !748, !751}
!10166 = !DILocalVariable(name: "image", arg: 1, scope: !10162, file: !10163, line: 27, type: !5973)
!10167 = !DILocation(line: 27, column: 63, scope: !10162)
!10168 = !DILocalVariable(name: "tag", arg: 2, scope: !10162, file: !10163, line: 28, type: !591)
!10169 = !DILocation(line: 28, column: 15, scope: !10162)
!10170 = !DILocalVariable(name: "offset", arg: 3, scope: !10162, file: !10163, line: 28, type: !748)
!10171 = !DILocation(line: 28, column: 42, scope: !10162)
!10172 = !DILocalVariable(name: "extent", arg: 4, scope: !10162, file: !10163, line: 28, type: !751)
!10173 = !DILocation(line: 28, column: 70, scope: !10162)
!10174 = !DILocalVariable(name: "message", scope: !10162, file: !10163, line: 31, type: !766)
!10175 = !DILocation(line: 31, column: 5, scope: !10162)
!10176 = !DILocation(line: 33, column: 7, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10162, file: !10163, line: 33, column: 7)
!10178 = !DILocation(line: 33, column: 14, scope: !10177)
!10179 = !DILocation(line: 33, column: 31, scope: !10177)
!10180 = !DILocation(line: 33, column: 7, scope: !10162)
!10181 = !DILocation(line: 34, column: 5, scope: !10177)
!10182 = !DILocation(line: 35, column: 29, scope: !10162)
!10183 = !DILocation(line: 35, column: 59, scope: !10162)
!10184 = !DILocation(line: 35, column: 63, scope: !10162)
!10185 = !DILocation(line: 35, column: 70, scope: !10162)
!10186 = !DILocation(line: 35, column: 10, scope: !10162)
!10187 = !DILocation(line: 36, column: 10, scope: !10162)
!10188 = !DILocation(line: 36, column: 17, scope: !10162)
!10189 = !DILocation(line: 36, column: 34, scope: !10162)
!10190 = !DILocation(line: 36, column: 42, scope: !10162)
!10191 = !DILocation(line: 36, column: 49, scope: !10162)
!10192 = !DILocation(line: 36, column: 56, scope: !10162)
!10193 = !DILocation(line: 36, column: 63, scope: !10162)
!10194 = !DILocation(line: 36, column: 3, scope: !10162)
!10195 = !DILocation(line: 37, column: 1, scope: !10162)
!10196 = distinct !DISubprogram(name: "GetOpenMPMaximumThreads", scope: !10197, file: !10197, line: 108, type: !10198, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10197 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10198 = !DISubroutineType(types: !10199)
!10199 = !{!604}
!10200 = !DILocation(line: 113, column: 3, scope: !10196)
!10201 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !10197, file: !10197, line: 117, type: !10202, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!501}
!10204 = !DILocation(line: 122, column: 3, scope: !10201)
!10205 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !10064, file: !10064, line: 78, type: !10206, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !851)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{!617, !5047}
!10208 = !DILocalVariable(name: "x", arg: 1, scope: !10205, file: !10064, line: 78, type: !5047)
!10209 = !DILocation(line: 78, column: 57, scope: !10205)
!10210 = !DILocalVariable(name: "sign", scope: !10205, file: !10064, line: 81, type: !617)
!10211 = !DILocation(line: 81, column: 5, scope: !10205)
!10212 = !DILocation(line: 86, column: 8, scope: !10205)
!10213 = !DILocation(line: 86, column: 10, scope: !10205)
!10214 = !DILocation(line: 86, column: 7, scope: !10205)
!10215 = !DILocation(line: 87, column: 8, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10205, file: !10064, line: 87, column: 7)
!10217 = !DILocation(line: 87, column: 13, scope: !10216)
!10218 = !DILocation(line: 87, column: 12, scope: !10216)
!10219 = !DILocation(line: 87, column: 16, scope: !10216)
!10220 = !DILocation(line: 87, column: 7, scope: !10205)
!10221 = !DILocation(line: 88, column: 16, scope: !10216)
!10222 = !DILocation(line: 88, column: 15, scope: !10216)
!10223 = !DILocation(line: 88, column: 5, scope: !10216)
!10224 = !DILocation(line: 89, column: 10, scope: !10205)
!10225 = !DILocation(line: 89, column: 14, scope: !10205)
!10226 = !DILocation(line: 89, column: 3, scope: !10205)
!10227 = !DILocation(line: 90, column: 1, scope: !10205)
