; ModuleID = 'blender/source/blender/editors/interface/interface_widgets.c'
source_filename = "blender/source/blender/editors/interface/interface_widgets.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.uiWidgetColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i16, i16, i16, i16 }
%struct.uiWidgetStateColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], float, float }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.uiWidgetType = type { %struct.uiWidgetColors*, %struct.uiWidgetStateColors*, %struct.uiWidgetColors, void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiFontStyle*, %struct.uiWidgetColors*, %struct.uiBut*, %struct.rcti*)* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.uiBut = type { %struct.uiBut*, %struct.uiBut*, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8*, [128 x i8], [400 x i8], %struct.rctf, i8*, float, float, float, float, float, float, [4 x i8], void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, %struct.bContextStore*, i32 (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, %struct.uiLink*, [2 x i16], i8*, i8*, i32, i8, i8, i8, i8, i8, i16, i16, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, %struct.PointerRNA, %struct.PropertyRNA*, i32, %struct.PointerRNA, %struct.PropertyRNA*, %struct.wmOperatorType*, %struct.PointerRNA*, i16, i8, i8, i8*, %struct.ImBuf*, float, %struct.uiHandleButtonData*, i8*, i8*, double*, float*, i8*, i8*, %struct.uiBlock* }
%struct.rctf = type { float, float, float, float }
%struct.bContextStore = type { %struct.bContextStore*, %struct.bContextStore*, %struct.ListBase, i8 }
%struct.bContext = type opaque
%struct.uiSearchItems = type opaque
%struct.uiLink = type { i8**, i8***, i16*, i16, i16, i16, i16, %struct.ListBase }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.PropertyRNA = type opaque
%struct.wmOperatorType = type opaque
%struct.ImBuf = type opaque
%struct.uiHandleButtonData = type opaque
%struct.uiBlock = type { %struct.uiBlock*, %struct.uiBlock*, %struct.ListBase, %struct.Panel*, %struct.uiBlock*, %struct.ListBase, %struct.ListBase, %struct.uiLayout*, %struct.ListBase, [128 x i8], [4 x [4 x float]], %struct.rctf, float, i32, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, i32 (%struct.bContext*, %struct.uiBlock*, %struct.wmEvent*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, i8*, i8*, i32, i16, i8, i8, i8, [7 x i8], double, i8*, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.rctf, %struct.ListBase, %struct.uiPopupBlockHandle*, %struct.wmOperator*, i8*, %struct.UnitSettings*, [3 x float], i8, [64 x i8], %struct.PieMenuData }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.PanelType = type opaque
%struct.wmEvent = type opaque
%struct.uiPopupBlockHandle = type { %struct.ARegion*, [2 x float], double, i8, i8, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*, %struct.uiPopupBlockCreate, %struct.wmTimer*, %struct.uiKeyNavLock, %struct.wmOperatorType*, %struct.ScrArea*, %struct.ARegion*, i32, i32, i32, i32, [4 x float], i32, i8, [2 x i32] }
%struct.uiPopupBlockCreate = type { {}*, %struct.uiBlock* (%struct.bContext*, %struct.uiPopupBlockHandle*, i8*)*, i8*, [2 x i32], %struct.ARegion* }
%struct.uiKeyNavLock = type { i8, [2 x i32] }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.Scene = type opaque
%struct.SpaceType = type opaque
%struct.wmOperator = type opaque
%struct.UnitSettings = type opaque
%struct.PieMenuData = type { [2 x float], [2 x float], [2 x float], [2 x float], double, i32, i32, float }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.ThemeUI = type { %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetStateColors, %struct.uiPanelColors, [4 x i8], float, i16, [3 x i16], [256 x i8], float, [4 x i8], [4 x i8], [4 x i8] }
%struct.uiPanelColors = type { [4 x i8], [4 x i8], i16, i16, i32 }
%struct.uiWidgetBase = type { i32, i32, [36 x [2 x float]], [36 x [2 x float]], [36 x [2 x float]], i8, i8, i8, i8, %struct.uiWidgetTrias, %struct.uiWidgetTrias }
%struct.uiWidgetTrias = type { i32, [16 x [2 x float]], [3 x i32]* }
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.bTheme = type { %struct.bTheme*, %struct.bTheme*, [32 x i8], %struct.ThemeUI, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, [20 x %struct.ThemeWireColor], i32, i32 }
%struct.ThemeSpace = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], %struct.uiPanelColors, %struct.uiGradientColors, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [3 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8] }
%struct.uiGradientColors = type { [4 x i8], [4 x i8], i32, i32 }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }

@jit = internal constant [8 x [2 x float]] [[2 x float] [float 0x3FDE010840000000, float 0xBFDECFBFC0000000], [2 x float] [float 0xBFC3EFC7A0000000, float 0xBFD6949A60000000], [2 x float] [float 0x3FCC123820000000, float 0xBFCE873360000000], [2 x float] [float 0xBFD92B9900000000, float 0xBFBC672760000000], [2 x float] [float 0xBF994AB1E0000000, float 0x3F8C7BCC20000000], [2 x float] [float 0x3FD600E6A0000000, float 0x3FC2DF04E0000000], [2 x float] [float 0xBFD17674E0000000, float 0x3FD1465620000000], [2 x float] [float 0x3FB88D7E00000000, float 0x3FD8E09FE0000000]], align 16, !dbg !0
@wcol_regular = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"ddd\FF", [4 x i8] c"\19\19\19\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !1344
@wcol_tool = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"ddd\FF", [4 x i8] c"\19\19\19\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 15, i16 -15, i16 0 }, align 2, !dbg !1361
@wcol_text = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"ZZZ\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 0, i16 25, i16 0 }, align 2, !dbg !1363
@wcol_radio = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"FFF\FF", [4 x i8] c"V\80\C2\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\00\00\00\FF", i16 1, i16 15, i16 -15, i16 0 }, align 2, !dbg !1365
@wcol_option = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"FFF\FF", [4 x i8] c"FFF\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 15, i16 -15, i16 0 }, align 2, !dbg !1367
@wcol_toggle = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"ddd\FF", [4 x i8] c"\19\19\19\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !1369
@wcol_num = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\B4\B4\B4\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"ZZZ\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 -20, i16 0, i16 0 }, align 2, !dbg !1371
@wcol_numslider = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\B4\B4\B4\FF", [4 x i8] c"\99\99\99\FF", [4 x i8] c"\80\80\80\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 -20, i16 0, i16 0 }, align 2, !dbg !1373
@wcol_menu = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"FFF\FF", [4 x i8] c"FFF\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\CC\CC\CC\FF", i16 1, i16 15, i16 -15, i16 0 }, align 2, !dbg !1375
@wcol_pulldown = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"???\FF", [4 x i8] c"V\80\C2\FF", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\00\00\00\FF", i16 0, i16 25, i16 -20, i16 0 }, align 2, !dbg !1377
@wcol_menu_back = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"\19\19\19\E6", [4 x i8] c"---\E6", [4 x i8] c"ddd\FF", [4 x i8] c"\A0\A0\A0\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 25, i16 -20, i16 0 }, align 2, !dbg !1379
@wcol_pie_menu = internal global %struct.uiWidgetColors { [4 x i8] c"\0A\0A\0A\C8", [4 x i8] c"\19\19\19\E6", [4 x i8] c"\8C\8C\8C\FF", [4 x i8] c"---\E6", [4 x i8] c"\A0\A0\A0\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 10, i16 -10, i16 0 }, align 2, !dbg !1381
@wcol_tooltip = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"\19\19\19\E6", [4 x i8] c"---\E6", [4 x i8] c"ddd\FF", [4 x i8] c"\A0\A0\A0\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 25, i16 -20, i16 0 }, align 2, !dbg !1383
@wcol_menu_item = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] zeroinitializer, [4 x i8] c"V\80\C2\FF", [4 x i8] c"\AC\AC\AC\80", [4 x i8] c"\FF\FF\FF\FF", [4 x i8] c"\00\00\00\FF", i16 1, i16 38, i16 0, i16 0 }, align 2, !dbg !1385
@wcol_box = internal global %struct.uiWidgetColors { [4 x i8] c"\19\19\19\FF", [4 x i8] c"\80\80\80\FF", [4 x i8] c"ddd\FF", [4 x i8] c"\19\19\19\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !1387
@wcol_scroll = internal global %struct.uiWidgetColors { [4 x i8] c"222\B4", [4 x i8] c"PPP\B4", [4 x i8] c"ddd\B4", [4 x i8] c"\80\80\80\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 1, i16 5, i16 -5, i16 0 }, align 2, !dbg !1389
@wcol_list_item = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] zeroinitializer, [4 x i8] c"V\80\C2\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\00\00\00\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !1391
@wcol_progress = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"\BE\BE\BE\FF", [4 x i8] c"ddd\B4", [4 x i8] c"DDD\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !1393
@wcol_state_colors = internal global %struct.uiWidgetStateColors { [4 x i8] c"s\BEL\FF", [4 x i8] c"Z\A63\FF", [4 x i8] c"\F0\EBd\FF", [4 x i8] c"\D7\D3K\FF", [4 x i8] c"\B4\00\FF\FF", [4 x i8] c"\99\00\E6\FF", float 5.000000e-01, float 0.000000e+00 }, align 4, !dbg !1395
@U = external dso_local global %struct.UserDef, align 8
@cornervec = internal constant [9 x [2 x float]] [[2 x float] zeroinitializer, [2 x float] [float 0x3FC8F5C280000000, float 0x3F947AE140000000], [2 x float] [float 0x3FD8831260000000, float 0x3FB126E980000000], [2 x float] [float 0x3FE19999A0000000, float 0x3FC5A1CAC0000000], [2 x float] [float 0x3FE69FBE80000000, float 0x3FD2C08320000000], [2 x float] [float 0x3FEA978D40000000, float 0x3FDCCCCCC0000000], [2 x float] [float 0x3FED916880000000, float 0x3FE3BE76C0000000], [2 x float] [float 0x3FEF5C2900000000, float 0x3FE9C28F60000000], [2 x float] [float 1.000000e+00, float 1.000000e+00]], align 16, !dbg !1407
@stipple_checker_8px = external dso_local constant [128 x i8], align 16
@scroll_circle_vert = internal constant [16 x [2 x float]] [[2 x float] [float 0x3FD87DE500000000, float 0x3FED906AC0000000], [2 x float] [float 0x3EB0C6F7A0000000, float 1.000000e+00], [2 x float] [float 0xBFD87DE0E0000000, float 0x3FED906CC0000000], [2 x float] [float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000], [2 x float] [float 0xBFED906AC0000000, float 0x3FD87DE500000000], [2 x float] [float -1.000000e+00, float 0.000000e+00], [2 x float] [float 0xBFED906CC0000000, float 0xBFD87DE500000000], [2 x float] [float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000], [2 x float] [float 0xBFD87DE0E0000000, float 0xBFED906CC0000000], [2 x float] [float 0.000000e+00, float -1.000000e+00], [2 x float] [float 0x3FD87DE500000000, float 0xBFED906CC0000000], [2 x float] [float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000], [2 x float] [float 0x3FED906CC0000000, float 0xBFD87DE500000000], [2 x float] [float 1.000000e+00, float -0.000000e+00], [2 x float] [float 0x3FED906CC0000000, float 0x3FD87DE0E0000000], [2 x float] [float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000]], align 16, !dbg !1414
@scroll_circle_face = internal constant [14 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 2, i32 0, i32 3], [3 x i32] [i32 3, i32 0, i32 15], [3 x i32] [i32 3, i32 15, i32 4], [3 x i32] [i32 4, i32 15, i32 14], [3 x i32] [i32 4, i32 14, i32 5], [3 x i32] [i32 5, i32 14, i32 13], [3 x i32] [i32 5, i32 13, i32 6], [3 x i32] [i32 6, i32 13, i32 12], [3 x i32] [i32 6, i32 12, i32 7], [3 x i32] [i32 7, i32 12, i32 11], [3 x i32] [i32 7, i32 11, i32 8], [3 x i32] [i32 8, i32 11, i32 10], [3 x i32] [i32 8, i32 10, i32 9]], align 16, !dbg !1419
@.str = private unnamed_addr constant [2 x i8] c"|\00", align 1
@__const.widget_draw_icon.rgb = private unnamed_addr constant [3 x float] [float 1.250000e+00, float 1.250000e+00, float 1.250000e+00], align 4
@.str.1 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@widget_type.wt = internal global %struct.uiWidgetType zeroinitializer, align 8, !dbg !1426
@__const.widget_state.red = private unnamed_addr constant [4 x i8] c"\FF\00\00\00", align 1
@__const.widget_state.blue = private unnamed_addr constant [4 x i8] c"V\80\C2\00", align 1
@check_tria_vert = internal constant [6 x [2 x float]] [[2 x float] [float 0xBFE283B820000000, float 0x3FD03732A0000000], [2 x float] [float 0xBFD9233160000000, float 0x3FDA6B3780000000], [2 x float] [float 0xBF715F02C0000000, float 0xBFD506FAC0000000], [2 x float] [float 0xBF68958DA0000000, float 0x3FA1926420000000], [2 x float] [float 0x3FF0E28FE0000000, float 0x3FEBABFBA0000000], [2 x float] [float 0x3FEBB99D40000000, float 0x3FF06E2980000000]], align 16, !dbg !1991
@check_tria_face = internal constant [4 x [3 x i32]] [[3 x i32] [i32 3, i32 2, i32 4], [3 x i32] [i32 3, i32 4, i32 5], [3 x i32] [i32 1, i32 0, i32 3], [3 x i32] [i32 0, i32 2, i32 3]], align 16, !dbg !1995
@num_tria_vert = internal constant [3 x [2 x float]] [[2 x float] [float 0xBFD6886E00000000, float 0x3FE10B1DE0000000], [2 x float] [float 0xBFD6886E00000000, float 0xBFE193F8E0000000], [2 x float] [float 0x3FD51EB860000000, float 0xBF811B60A0000000]], align 16, !dbg !1999
@num_tria_face = internal constant [1 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2]], align 4, !dbg !2003
@menu_tria_vert = internal constant [6 x [2 x float]] [[2 x float] [float 0xBFD51EB860000000, float 0x3FC47AE140000000], [2 x float] [float 0x3FD51EB860000000, float 0x3FC47AE140000000], [2 x float] [float 0.000000e+00, float 0x3FEA3D70A0000000], [2 x float] [float 0.000000e+00, float 0xBFEA3D70A0000000], [2 x float] [float 0xBFD51EB860000000, float 0xBFC47AE140000000], [2 x float] [float 0x3FD51EB860000000, float 0xBFC47AE140000000]], align 16, !dbg !2008
@menu_tria_face = internal constant [2 x [3 x i32]] [[3 x i32] [i32 2, i32 0, i32 1], [3 x i32] [i32 3, i32 5, i32 4]], align 16, !dbg !2010
@wcol_tmp = internal global %struct.uiWidgetColors { [4 x i8] c"\00\00\00\FF", [4 x i8] c"\80\80\80\FF", [4 x i8] c"ddd\FF", [4 x i8] c"\19\19\19\FF", [4 x i8] c"\00\00\00\FF", [4 x i8] c"\FF\FF\FF\FF", i16 0, i16 0, i16 0, i16 0 }, align 2, !dbg !2014
@ui_widget_color_disabled.wcol_theme_s = internal global %struct.uiWidgetColors zeroinitializer, align 2, !dbg !2016
@__const.ui_text_clip_middle_ex.sep = private unnamed_addr constant [4 x i8] c"\E2\80\A6\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_anti_tria(float %x1, float %y1, float %x2, float %y2, float %x3, float %y3) #0 !dbg !2028 {
entry:
  %x1.addr = alloca float, align 4
  %y1.addr = alloca float, align 4
  %x2.addr = alloca float, align 4
  %y2.addr = alloca float, align 4
  %x3.addr = alloca float, align 4
  %y3.addr = alloca float, align 4
  %tri_arr = alloca [3 x [2 x float]], align 16
  %color = alloca [4 x float], align 16
  %j = alloca i32, align 4
  store float %x1, float* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x1.addr, metadata !2031, metadata !DIExpression()), !dbg !2032
  store float %y1, float* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y1.addr, metadata !2033, metadata !DIExpression()), !dbg !2034
  store float %x2, float* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x2.addr, metadata !2035, metadata !DIExpression()), !dbg !2036
  store float %y2, float* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y2.addr, metadata !2037, metadata !DIExpression()), !dbg !2038
  store float %x3, float* %x3.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x3.addr, metadata !2039, metadata !DIExpression()), !dbg !2040
  store float %y3, float* %y3.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y3.addr, metadata !2041, metadata !DIExpression()), !dbg !2042
  call void @llvm.dbg.declare(metadata [3 x [2 x float]]* %tri_arr, metadata !2043, metadata !DIExpression()), !dbg !2045
  %arrayinit.begin = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %tri_arr, i64 0, i64 0, !dbg !2046
  %arrayinit.begin1 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.begin, i64 0, i64 0, !dbg !2047
  %0 = load float, float* %x1.addr, align 4, !dbg !2048
  store float %0, float* %arrayinit.begin1, align 4, !dbg !2047
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin1, i64 1, !dbg !2047
  %1 = load float, float* %y1.addr, align 4, !dbg !2049
  store float %1, float* %arrayinit.element, align 4, !dbg !2047
  %arrayinit.element2 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.begin, i64 1, !dbg !2046
  %arrayinit.begin3 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element2, i64 0, i64 0, !dbg !2050
  %2 = load float, float* %x2.addr, align 4, !dbg !2051
  store float %2, float* %arrayinit.begin3, align 4, !dbg !2050
  %arrayinit.element4 = getelementptr inbounds float, float* %arrayinit.begin3, i64 1, !dbg !2050
  %3 = load float, float* %y2.addr, align 4, !dbg !2052
  store float %3, float* %arrayinit.element4, align 4, !dbg !2050
  %arrayinit.element5 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element2, i64 1, !dbg !2046
  %arrayinit.begin6 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element5, i64 0, i64 0, !dbg !2053
  %4 = load float, float* %x3.addr, align 4, !dbg !2054
  store float %4, float* %arrayinit.begin6, align 4, !dbg !2053
  %arrayinit.element7 = getelementptr inbounds float, float* %arrayinit.begin6, i64 1, !dbg !2053
  %5 = load float, float* %y3.addr, align 4, !dbg !2055
  store float %5, float* %arrayinit.element7, align 4, !dbg !2053
  call void @llvm.dbg.declare(metadata [4 x float]* %color, metadata !2056, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2058, metadata !DIExpression()), !dbg !2059
  call void @glEnable(i32 3042), !dbg !2060
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !2061
  call void @glGetFloatv(i32 2816, float* %arraydecay), !dbg !2062
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 3, !dbg !2063
  %6 = load float, float* %arrayidx, align 4, !dbg !2064
  %mul = fmul float %6, 1.250000e-01, !dbg !2064
  store float %mul, float* %arrayidx, align 4, !dbg !2064
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !2065
  call void @glColor4fv(float* %arraydecay8), !dbg !2066
  call void @glEnableClientState(i32 32884), !dbg !2067
  %arraydecay9 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %tri_arr, i64 0, i64 0, !dbg !2068
  %7 = bitcast [2 x float]* %arraydecay9 to i8*, !dbg !2068
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %7), !dbg !2069
  store i32 0, i32* %j, align 4, !dbg !2070
  br label %for.cond, !dbg !2072

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %j, align 4, !dbg !2073
  %cmp = icmp slt i32 %8, 8, !dbg !2075
  br i1 %cmp, label %for.body, label %for.end, !dbg !2076

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %j, align 4, !dbg !2077
  %idxprom = sext i32 %9 to i64, !dbg !2079
  %arrayidx10 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom, !dbg !2079
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 0, !dbg !2079
  %10 = load float, float* %arrayidx11, align 8, !dbg !2079
  %11 = load i32, i32* %j, align 4, !dbg !2080
  %idxprom12 = sext i32 %11 to i64, !dbg !2081
  %arrayidx13 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom12, !dbg !2081
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 1, !dbg !2081
  %12 = load float, float* %arrayidx14, align 4, !dbg !2081
  call void @glTranslatef(float %10, float %12, float 0.000000e+00), !dbg !2082
  call void @glDrawArrays(i32 4, i32 0, i32 3), !dbg !2083
  %13 = load i32, i32* %j, align 4, !dbg !2084
  %idxprom15 = sext i32 %13 to i64, !dbg !2085
  %arrayidx16 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom15, !dbg !2085
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 0, !dbg !2085
  %14 = load float, float* %arrayidx17, align 8, !dbg !2085
  %fneg = fneg float %14, !dbg !2086
  %15 = load i32, i32* %j, align 4, !dbg !2087
  %idxprom18 = sext i32 %15 to i64, !dbg !2088
  %arrayidx19 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom18, !dbg !2088
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 1, !dbg !2088
  %16 = load float, float* %arrayidx20, align 4, !dbg !2088
  %fneg21 = fneg float %16, !dbg !2089
  call void @glTranslatef(float %fneg, float %fneg21, float 0.000000e+00), !dbg !2090
  br label %for.inc, !dbg !2091

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %j, align 4, !dbg !2092
  %inc = add nsw i32 %17, 1, !dbg !2092
  store i32 %inc, i32* %j, align 4, !dbg !2092
  br label %for.cond, !dbg !2093, !llvm.loop !2094

for.end:                                          ; preds = %for.cond
  call void @glDisableClientState(i32 32884), !dbg !2096
  call void @glDisable(i32 3042), !dbg !2097
  ret void, !dbg !2098
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @glEnable(i32) #2

declare dso_local void @glGetFloatv(i32, float*) #2

declare dso_local void @glColor4fv(float*) #2

declare dso_local void @glEnableClientState(i32) #2

declare dso_local void @glVertexPointer(i32, i32, i32, i8*) #2

declare dso_local void @glTranslatef(float, float, float) #2

declare dso_local void @glDrawArrays(i32, i32, i32) #2

declare dso_local void @glDisableClientState(i32) #2

declare dso_local void @glDisable(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_anti_roundbox(i32 %mode, float %minx, float %miny, float %maxx, float %maxy, float %rad, i8 zeroext %use_alpha) #0 !dbg !2099 {
entry:
  %mode.addr = alloca i32, align 4
  %minx.addr = alloca float, align 4
  %miny.addr = alloca float, align 4
  %maxx.addr = alloca float, align 4
  %maxy.addr = alloca float, align 4
  %rad.addr = alloca float, align 4
  %use_alpha.addr = alloca i8, align 1
  %color = alloca [4 x float], align 16
  %j = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2102, metadata !DIExpression()), !dbg !2103
  store float %minx, float* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %minx.addr, metadata !2104, metadata !DIExpression()), !dbg !2105
  store float %miny, float* %miny.addr, align 4
  call void @llvm.dbg.declare(metadata float* %miny.addr, metadata !2106, metadata !DIExpression()), !dbg !2107
  store float %maxx, float* %maxx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxx.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  store float %maxy, float* %maxy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxy.addr, metadata !2110, metadata !DIExpression()), !dbg !2111
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !2112, metadata !DIExpression()), !dbg !2113
  store i8 %use_alpha, i8* %use_alpha.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_alpha.addr, metadata !2114, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.declare(metadata [4 x float]* %color, metadata !2116, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2118, metadata !DIExpression()), !dbg !2119
  call void @glEnable(i32 3042), !dbg !2120
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !2121
  call void @glGetFloatv(i32 2816, float* %arraydecay), !dbg !2122
  %0 = load i8, i8* %use_alpha.addr, align 1, !dbg !2123
  %tobool = icmp ne i8 %0, 0, !dbg !2123
  br i1 %tobool, label %if.then, label %if.end, !dbg !2125

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 3, !dbg !2126
  store float 5.000000e-01, float* %arrayidx, align 4, !dbg !2128
  br label %if.end, !dbg !2129

if.end:                                           ; preds = %if.then, %entry
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 3, !dbg !2130
  %1 = load float, float* %arrayidx1, align 4, !dbg !2131
  %mul = fmul float %1, 1.250000e-01, !dbg !2131
  store float %mul, float* %arrayidx1, align 4, !dbg !2131
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !2132
  call void @glColor4fv(float* %arraydecay2), !dbg !2133
  store i32 0, i32* %j, align 4, !dbg !2134
  br label %for.cond, !dbg !2136

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %j, align 4, !dbg !2137
  %cmp = icmp slt i32 %2, 8, !dbg !2139
  br i1 %cmp, label %for.body, label %for.end, !dbg !2140

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %j, align 4, !dbg !2141
  %idxprom = sext i32 %3 to i64, !dbg !2143
  %arrayidx3 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom, !dbg !2143
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !2143
  %4 = load float, float* %arrayidx4, align 8, !dbg !2143
  %5 = load i32, i32* %j, align 4, !dbg !2144
  %idxprom5 = sext i32 %5 to i64, !dbg !2145
  %arrayidx6 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom5, !dbg !2145
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 1, !dbg !2145
  %6 = load float, float* %arrayidx7, align 4, !dbg !2145
  call void @glTranslatef(float %4, float %6, float 0.000000e+00), !dbg !2146
  %7 = load i32, i32* %mode.addr, align 4, !dbg !2147
  %8 = load float, float* %minx.addr, align 4, !dbg !2148
  %9 = load float, float* %miny.addr, align 4, !dbg !2149
  %10 = load float, float* %maxx.addr, align 4, !dbg !2150
  %11 = load float, float* %maxy.addr, align 4, !dbg !2151
  %12 = load float, float* %rad.addr, align 4, !dbg !2152
  call void @uiDrawBox(i32 %7, float %8, float %9, float %10, float %11, float %12), !dbg !2153
  %13 = load i32, i32* %j, align 4, !dbg !2154
  %idxprom8 = sext i32 %13 to i64, !dbg !2155
  %arrayidx9 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom8, !dbg !2155
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !2155
  %14 = load float, float* %arrayidx10, align 8, !dbg !2155
  %fneg = fneg float %14, !dbg !2156
  %15 = load i32, i32* %j, align 4, !dbg !2157
  %idxprom11 = sext i32 %15 to i64, !dbg !2158
  %arrayidx12 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom11, !dbg !2158
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 1, !dbg !2158
  %16 = load float, float* %arrayidx13, align 4, !dbg !2158
  %fneg14 = fneg float %16, !dbg !2159
  call void @glTranslatef(float %fneg, float %fneg14, float 0.000000e+00), !dbg !2160
  br label %for.inc, !dbg !2161

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %j, align 4, !dbg !2162
  %inc = add nsw i32 %17, 1, !dbg !2162
  store i32 %inc, i32* %j, align 4, !dbg !2162
  br label %for.cond, !dbg !2163, !llvm.loop !2164

for.end:                                          ; preds = %for.cond
  call void @glDisable(i32 3042), !dbg !2166
  ret void, !dbg !2167
}

declare dso_local void @uiDrawBox(i32, float, float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_widget_color_init(%struct.ThemeUI* %tui) #0 !dbg !2168 {
entry:
  %tui.addr = alloca %struct.ThemeUI*, align 8
  store %struct.ThemeUI* %tui, %struct.ThemeUI** %tui.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ThemeUI** %tui.addr, metadata !2216, metadata !DIExpression()), !dbg !2217
  %0 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2218
  %wcol_regular = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %0, i32 0, i32 0, !dbg !2219
  %1 = bitcast %struct.uiWidgetColors* %wcol_regular to i8*, !dbg !2220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_regular, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2220
  %2 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2221
  %wcol_tool = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %2, i32 0, i32 1, !dbg !2222
  %3 = bitcast %struct.uiWidgetColors* %wcol_tool to i8*, !dbg !2223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tool, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2223
  %4 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2224
  %wcol_text = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %4, i32 0, i32 2, !dbg !2225
  %5 = bitcast %struct.uiWidgetColors* %wcol_text to i8*, !dbg !2226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_text, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2226
  %6 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2227
  %wcol_radio = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %6, i32 0, i32 3, !dbg !2228
  %7 = bitcast %struct.uiWidgetColors* %wcol_radio to i8*, !dbg !2229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_radio, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2229
  %8 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2230
  %wcol_option = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %8, i32 0, i32 4, !dbg !2231
  %9 = bitcast %struct.uiWidgetColors* %wcol_option to i8*, !dbg !2232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_option, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2232
  %10 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2233
  %wcol_toggle = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %10, i32 0, i32 5, !dbg !2234
  %11 = bitcast %struct.uiWidgetColors* %wcol_toggle to i8*, !dbg !2235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_toggle, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2235
  %12 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2236
  %wcol_num = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %12, i32 0, i32 6, !dbg !2237
  %13 = bitcast %struct.uiWidgetColors* %wcol_num to i8*, !dbg !2238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_num, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2238
  %14 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2239
  %wcol_numslider = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %14, i32 0, i32 7, !dbg !2240
  %15 = bitcast %struct.uiWidgetColors* %wcol_numslider to i8*, !dbg !2241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_numslider, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2241
  %16 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2242
  %wcol_menu = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %16, i32 0, i32 8, !dbg !2243
  %17 = bitcast %struct.uiWidgetColors* %wcol_menu to i8*, !dbg !2244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_menu, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2244
  %18 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2245
  %wcol_pulldown = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %18, i32 0, i32 9, !dbg !2246
  %19 = bitcast %struct.uiWidgetColors* %wcol_pulldown to i8*, !dbg !2247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_pulldown, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2247
  %20 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2248
  %wcol_menu_back = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %20, i32 0, i32 10, !dbg !2249
  %21 = bitcast %struct.uiWidgetColors* %wcol_menu_back to i8*, !dbg !2250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_menu_back, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2250
  %22 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2251
  %wcol_pie_menu = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %22, i32 0, i32 17, !dbg !2252
  %23 = bitcast %struct.uiWidgetColors* %wcol_pie_menu to i8*, !dbg !2253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_pie_menu, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2253
  %24 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2254
  %wcol_tooltip = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %24, i32 0, i32 12, !dbg !2255
  %25 = bitcast %struct.uiWidgetColors* %wcol_tooltip to i8*, !dbg !2256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tooltip, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2256
  %26 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2257
  %wcol_menu_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %26, i32 0, i32 11, !dbg !2258
  %27 = bitcast %struct.uiWidgetColors* %wcol_menu_item to i8*, !dbg !2259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_menu_item, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2259
  %28 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2260
  %wcol_box = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %28, i32 0, i32 13, !dbg !2261
  %29 = bitcast %struct.uiWidgetColors* %wcol_box to i8*, !dbg !2262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_box, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2262
  %30 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2263
  %wcol_scroll = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %30, i32 0, i32 14, !dbg !2264
  %31 = bitcast %struct.uiWidgetColors* %wcol_scroll to i8*, !dbg !2265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_scroll, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2265
  %32 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2266
  %wcol_list_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %32, i32 0, i32 16, !dbg !2267
  %33 = bitcast %struct.uiWidgetColors* %wcol_list_item to i8*, !dbg !2268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_list_item, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2268
  %34 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2269
  %wcol_progress = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %34, i32 0, i32 15, !dbg !2270
  %35 = bitcast %struct.uiWidgetColors* %wcol_progress to i8*, !dbg !2271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_progress, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2271
  %36 = load %struct.ThemeUI*, %struct.ThemeUI** %tui.addr, align 8, !dbg !2272
  %wcol_state = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %36, i32 0, i32 18, !dbg !2273
  %37 = bitcast %struct.uiWidgetStateColors* %wcol_state to i8*, !dbg !2274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 getelementptr inbounds (%struct.uiWidgetStateColors, %struct.uiWidgetStateColors* @wcol_state_colors, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !2274
  ret void, !dbg !2275
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_hsvcircle_vals_from_pos(float* %val_rad, float* %val_dist, %struct.rcti* %rect, float %mx, float %my) #0 !dbg !2276 {
entry:
  %val_rad.addr = alloca float*, align 8
  %val_dist.addr = alloca float*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %mx.addr = alloca float, align 4
  %my.addr = alloca float, align 4
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %radius = alloca float, align 4
  %m_delta = alloca [2 x float], align 4
  %dist_sq = alloca float, align 4
  store float* %val_rad, float** %val_rad.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val_rad.addr, metadata !2281, metadata !DIExpression()), !dbg !2282
  store float* %val_dist, float** %val_dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val_dist.addr, metadata !2283, metadata !DIExpression()), !dbg !2284
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !2285, metadata !DIExpression()), !dbg !2286
  store float %mx, float* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mx.addr, metadata !2287, metadata !DIExpression()), !dbg !2288
  store float %my, float* %my.addr, align 4
  call void @llvm.dbg.declare(metadata float* %my.addr, metadata !2289, metadata !DIExpression()), !dbg !2290
  call void @llvm.dbg.declare(metadata float* %centx, metadata !2291, metadata !DIExpression()), !dbg !2292
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2293
  %call = call float @BLI_rcti_cent_x_fl(%struct.rcti* %0), !dbg !2294
  store float %call, float* %centx, align 4, !dbg !2292
  call void @llvm.dbg.declare(metadata float* %centy, metadata !2295, metadata !DIExpression()), !dbg !2296
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2297
  %call1 = call float @BLI_rcti_cent_y_fl(%struct.rcti* %1), !dbg !2298
  store float %call1, float* %centy, align 4, !dbg !2296
  call void @llvm.dbg.declare(metadata float* %radius, metadata !2299, metadata !DIExpression()), !dbg !2300
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2301
  %call2 = call i32 @BLI_rcti_size_x(%struct.rcti* %2), !dbg !2302
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2303
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !2304
  %call4 = call i32 @min_ii(i32 %call2, i32 %call3), !dbg !2305
  %conv = sitofp i32 %call4 to float, !dbg !2306
  %div = fdiv float %conv, 2.000000e+00, !dbg !2307
  store float %div, float* %radius, align 4, !dbg !2300
  call void @llvm.dbg.declare(metadata [2 x float]* %m_delta, metadata !2308, metadata !DIExpression()), !dbg !2310
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %m_delta, i64 0, i64 0, !dbg !2311
  %4 = load float, float* %mx.addr, align 4, !dbg !2312
  %5 = load float, float* %centx, align 4, !dbg !2313
  %sub = fsub float %4, %5, !dbg !2314
  store float %sub, float* %arrayinit.begin, align 4, !dbg !2311
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !2311
  %6 = load float, float* %my.addr, align 4, !dbg !2315
  %7 = load float, float* %centy, align 4, !dbg !2316
  %sub5 = fsub float %6, %7, !dbg !2317
  store float %sub5, float* %arrayinit.element, align 4, !dbg !2311
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !2318, metadata !DIExpression()), !dbg !2319
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %m_delta, i64 0, i64 0, !dbg !2320
  %call6 = call float @len_squared_v2(float* %arraydecay), !dbg !2321
  store float %call6, float* %dist_sq, align 4, !dbg !2319
  %8 = load float, float* %dist_sq, align 4, !dbg !2322
  %9 = load float, float* %radius, align 4, !dbg !2323
  %10 = load float, float* %radius, align 4, !dbg !2324
  %mul = fmul float %9, %10, !dbg !2325
  %cmp = fcmp olt float %8, %mul, !dbg !2326
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2327

cond.true:                                        ; preds = %entry
  %11 = load float, float* %dist_sq, align 4, !dbg !2328
  %call8 = call float @sqrtf(float %11) #6, !dbg !2329
  %12 = load float, float* %radius, align 4, !dbg !2330
  %div9 = fdiv float %call8, %12, !dbg !2331
  br label %cond.end, !dbg !2327

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2327

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div9, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !2327
  %13 = load float*, float** %val_dist.addr, align 8, !dbg !2332
  store float %cond, float* %13, align 4, !dbg !2333
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %m_delta, i64 0, i64 0, !dbg !2334
  %14 = load float, float* %arrayidx, align 4, !dbg !2334
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %m_delta, i64 0, i64 1, !dbg !2335
  %15 = load float, float* %arrayidx10, align 4, !dbg !2335
  %call11 = call float @atan2f(float %14, float %15) #6, !dbg !2336
  %div12 = fdiv float %call11, 0x401921FB60000000, !dbg !2337
  %add = fadd float %div12, 5.000000e-01, !dbg !2338
  %16 = load float*, float** %val_rad.addr, align 8, !dbg !2339
  store float %add, float* %16, align 4, !dbg !2340
  ret void, !dbg !2341
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rcti_cent_x_fl(%struct.rcti* %rct) #0 !dbg !2342 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !2348, metadata !DIExpression()), !dbg !2349
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2350
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !2351
  %1 = load i32, i32* %xmin, align 4, !dbg !2351
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2352
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 1, !dbg !2353
  %3 = load i32, i32* %xmax, align 4, !dbg !2353
  %add = add nsw i32 %1, %3, !dbg !2354
  %conv = sitofp i32 %add to float, !dbg !2355
  %div = fdiv float %conv, 2.000000e+00, !dbg !2356
  ret float %div, !dbg !2357
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rcti_cent_y_fl(%struct.rcti* %rct) #0 !dbg !2358 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !2359, metadata !DIExpression()), !dbg !2360
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2361
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 2, !dbg !2362
  %1 = load i32, i32* %ymin, align 4, !dbg !2362
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2363
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 3, !dbg !2364
  %3 = load i32, i32* %ymax, align 4, !dbg !2364
  %add = add nsw i32 %1, %3, !dbg !2365
  %conv = sitofp i32 %add to float, !dbg !2366
  %div = fdiv float %conv, 2.000000e+00, !dbg !2367
  ret float %div, !dbg !2368
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !2369 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !2373, metadata !DIExpression()), !dbg !2374
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !2375, metadata !DIExpression()), !dbg !2376
  %0 = load i32, i32* %a.addr, align 4, !dbg !2377
  %1 = load i32, i32* %b.addr, align 4, !dbg !2378
  %cmp = icmp slt i32 %0, %1, !dbg !2379
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2380

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !2381
  br label %cond.end, !dbg !2380

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !2382
  br label %cond.end, !dbg !2380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !2380
  ret i32 %cond, !dbg !2383
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !2384 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !2387, metadata !DIExpression()), !dbg !2388
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2389
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !2390
  %1 = load i32, i32* %xmax, align 4, !dbg !2390
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2391
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !2392
  %3 = load i32, i32* %xmin, align 4, !dbg !2392
  %sub = sub nsw i32 %1, %3, !dbg !2393
  ret i32 %sub, !dbg !2394
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !2395 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !2396, metadata !DIExpression()), !dbg !2397
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2398
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !2399
  %1 = load i32, i32* %ymax, align 4, !dbg !2399
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !2400
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !2401
  %3 = load i32, i32* %ymin, align 4, !dbg !2401
  %sub = sub nsw i32 %1, %3, !dbg !2402
  ret i32 %sub, !dbg !2403
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !2404 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !2409, metadata !DIExpression()), !dbg !2410
  %0 = load float*, float** %v.addr, align 8, !dbg !2411
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2411
  %1 = load float, float* %arrayidx, align 4, !dbg !2411
  %2 = load float*, float** %v.addr, align 8, !dbg !2412
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2412
  %3 = load float, float* %arrayidx1, align 4, !dbg !2412
  %mul = fmul float %1, %3, !dbg !2413
  %4 = load float*, float** %v.addr, align 8, !dbg !2414
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2414
  %5 = load float, float* %arrayidx2, align 4, !dbg !2414
  %6 = load float*, float** %v.addr, align 8, !dbg !2415
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2415
  %7 = load float, float* %arrayidx3, align 4, !dbg !2415
  %mul4 = fmul float %5, %7, !dbg !2416
  %add = fadd float %mul, %mul4, !dbg !2417
  ret float %add, !dbg !2418
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_hsvcircle_pos_from_vals(%struct.uiBut* %but, %struct.rcti* %rect, float* %hsv, float* %xpos, float* %ypos) #0 !dbg !2419 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %hsv.addr = alloca float*, align 8
  %xpos.addr = alloca float*, align 8
  %ypos.addr = alloca float*, align 8
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %radius = alloca float, align 4
  %ang = alloca float, align 4
  %radius_t = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !2424, metadata !DIExpression()), !dbg !2425
  store float* %hsv, float** %hsv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hsv.addr, metadata !2426, metadata !DIExpression()), !dbg !2427
  store float* %xpos, float** %xpos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %xpos.addr, metadata !2428, metadata !DIExpression()), !dbg !2429
  store float* %ypos, float** %ypos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ypos.addr, metadata !2430, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.declare(metadata float* %centx, metadata !2432, metadata !DIExpression()), !dbg !2433
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2434
  %call = call float @BLI_rcti_cent_x_fl(%struct.rcti* %0), !dbg !2435
  store float %call, float* %centx, align 4, !dbg !2433
  call void @llvm.dbg.declare(metadata float* %centy, metadata !2436, metadata !DIExpression()), !dbg !2437
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2438
  %call1 = call float @BLI_rcti_cent_y_fl(%struct.rcti* %1), !dbg !2439
  store float %call1, float* %centy, align 4, !dbg !2437
  call void @llvm.dbg.declare(metadata float* %radius, metadata !2440, metadata !DIExpression()), !dbg !2441
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2442
  %call2 = call i32 @BLI_rcti_size_x(%struct.rcti* %2), !dbg !2443
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2444
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !2445
  %call4 = call i32 @min_ii(i32 %call2, i32 %call3), !dbg !2446
  %conv = sitofp i32 %call4 to float, !dbg !2447
  %div = fdiv float %conv, 2.000000e+00, !dbg !2448
  store float %div, float* %radius, align 4, !dbg !2441
  call void @llvm.dbg.declare(metadata float* %ang, metadata !2449, metadata !DIExpression()), !dbg !2450
  call void @llvm.dbg.declare(metadata float* %radius_t, metadata !2451, metadata !DIExpression()), !dbg !2452
  %4 = load float*, float** %hsv.addr, align 8, !dbg !2453
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !2453
  %5 = load float, float* %arrayidx, align 4, !dbg !2453
  %mul = fmul float 0x401921FB60000000, %5, !dbg !2454
  %add = fadd float %mul, 0x3FF921FB60000000, !dbg !2455
  store float %add, float* %ang, align 4, !dbg !2456
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !2457
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 2, !dbg !2459
  %7 = load i32, i32* %flag, align 8, !dbg !2459
  %and = and i32 %7, 8388608, !dbg !2460
  %tobool = icmp ne i32 %and, 0, !dbg !2460
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !2461

land.lhs.true:                                    ; preds = %entry
  %8 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 74), align 2, !dbg !2462
  %conv5 = sext i16 %8 to i32, !dbg !2463
  %cmp = icmp eq i32 %conv5, 0, !dbg !2464
  br i1 %cmp, label %if.then, label %if.else, !dbg !2465

if.then:                                          ; preds = %land.lhs.true
  %9 = load float*, float** %hsv.addr, align 8, !dbg !2466
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 1, !dbg !2466
  %10 = load float, float* %arrayidx7, align 4, !dbg !2466
  %sub = fsub float 1.000000e+00, %10, !dbg !2467
  %call8 = call float @powf(float %sub, float 3.000000e+00) #6, !dbg !2468
  %sub9 = fsub float 1.000000e+00, %call8, !dbg !2469
  store float %sub9, float* %radius_t, align 4, !dbg !2470
  br label %if.end, !dbg !2471

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load float*, float** %hsv.addr, align 8, !dbg !2472
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 1, !dbg !2472
  %12 = load float, float* %arrayidx10, align 4, !dbg !2472
  store float %12, float* %radius_t, align 4, !dbg !2473
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load float, float* %radius_t, align 4, !dbg !2474
  %cmp11 = fcmp olt float %13, 0.000000e+00, !dbg !2474
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2474

cond.true:                                        ; preds = %if.end
  br label %cond.end17, !dbg !2474

cond.false:                                       ; preds = %if.end
  %14 = load float, float* %radius_t, align 4, !dbg !2474
  %cmp13 = fcmp ogt float %14, 1.000000e+00, !dbg !2474
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !2474

cond.true15:                                      ; preds = %cond.false
  br label %cond.end, !dbg !2474

cond.false16:                                     ; preds = %cond.false
  %15 = load float, float* %radius_t, align 4, !dbg !2474
  br label %cond.end, !dbg !2474

cond.end:                                         ; preds = %cond.false16, %cond.true15
  %cond = phi float [ 1.000000e+00, %cond.true15 ], [ %15, %cond.false16 ], !dbg !2474
  br label %cond.end17, !dbg !2474

cond.end17:                                       ; preds = %cond.end, %cond.true
  %cond18 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !2474
  %16 = load float, float* %radius, align 4, !dbg !2475
  %mul19 = fmul float %cond18, %16, !dbg !2476
  store float %mul19, float* %radius, align 4, !dbg !2477
  %17 = load float, float* %centx, align 4, !dbg !2478
  %18 = load float, float* %ang, align 4, !dbg !2479
  %fneg = fneg float %18, !dbg !2480
  %call20 = call float @cosf(float %fneg) #6, !dbg !2481
  %19 = load float, float* %radius, align 4, !dbg !2482
  %mul21 = fmul float %call20, %19, !dbg !2483
  %add22 = fadd float %17, %mul21, !dbg !2484
  %20 = load float*, float** %xpos.addr, align 8, !dbg !2485
  store float %add22, float* %20, align 4, !dbg !2486
  %21 = load float, float* %centy, align 4, !dbg !2487
  %22 = load float, float* %ang, align 4, !dbg !2488
  %fneg23 = fneg float %22, !dbg !2489
  %call24 = call float @sinf(float %fneg23) #6, !dbg !2490
  %23 = load float, float* %radius, align 4, !dbg !2491
  %mul25 = fmul float %call24, %23, !dbg !2492
  %add26 = fadd float %21, %mul25, !dbg !2493
  %24 = load float*, float** %ypos.addr, align 8, !dbg !2494
  store float %add26, float* %24, align 4, !dbg !2495
  ret void, !dbg !2496
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_gradient(%struct.rcti* %rect, float* %hsv, i32 %type, float %alpha) #0 !dbg !2497 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %hsv.addr = alloca float*, align 8
  %type.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %color_step = alloca float, align 4
  %a = alloca i32, align 4
  %h = alloca float, align 4
  %s = alloca float, align 4
  %v = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %sx1 = alloca float, align 4
  %sx2 = alloca float, align 4
  %sy = alloca float, align 4
  %col0 = alloca [4 x [3 x float]], align 16
  %col1 = alloca [4 x [3 x float]], align 16
  %dx_next = alloca float, align 4
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !2501, metadata !DIExpression()), !dbg !2502
  store float* %hsv, float** %hsv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hsv.addr, metadata !2503, metadata !DIExpression()), !dbg !2504
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2505, metadata !DIExpression()), !dbg !2506
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !2507, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata float* %color_step, metadata !2509, metadata !DIExpression()), !dbg !2510
  store float 0x3F95555560000000, float* %color_step, align 4, !dbg !2510
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2511, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.declare(metadata float* %h, metadata !2513, metadata !DIExpression()), !dbg !2514
  %0 = load float*, float** %hsv.addr, align 8, !dbg !2515
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2515
  %1 = load float, float* %arrayidx, align 4, !dbg !2515
  store float %1, float* %h, align 4, !dbg !2514
  call void @llvm.dbg.declare(metadata float* %s, metadata !2516, metadata !DIExpression()), !dbg !2517
  %2 = load float*, float** %hsv.addr, align 8, !dbg !2518
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2518
  %3 = load float, float* %arrayidx1, align 4, !dbg !2518
  store float %3, float* %s, align 4, !dbg !2517
  call void @llvm.dbg.declare(metadata float* %v, metadata !2519, metadata !DIExpression()), !dbg !2520
  %4 = load float*, float** %hsv.addr, align 8, !dbg !2521
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !2521
  %5 = load float, float* %arrayidx2, align 4, !dbg !2521
  store float %5, float* %v, align 4, !dbg !2520
  call void @llvm.dbg.declare(metadata float* %dx, metadata !2522, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.declare(metadata float* %dy, metadata !2524, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.declare(metadata float* %sx1, metadata !2526, metadata !DIExpression()), !dbg !2527
  call void @llvm.dbg.declare(metadata float* %sx2, metadata !2528, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.declare(metadata float* %sy, metadata !2530, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %col0, metadata !2532, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %col1, metadata !2535, metadata !DIExpression()), !dbg !2536
  call void @glShadeModel(i32 7425), !dbg !2537
  %6 = load i32, i32* %type.addr, align 4, !dbg !2538
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb27
    i32 2, label %sw.bb52
    i32 3, label %sw.bb77
    i32 4, label %sw.bb95
    i32 5, label %sw.bb114
  ], !dbg !2539

sw.bb:                                            ; preds = %entry
  %7 = load float, float* %h, align 4, !dbg !2540
  %arrayidx3 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2542
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !2542
  %arrayidx5 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2543
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 1, !dbg !2543
  %arrayidx7 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2544
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 2, !dbg !2544
  call void @hsv_to_rgb(float %7, float 0.000000e+00, float 0.000000e+00, float* %arrayidx4, float* %arrayidx6, float* %arrayidx8), !dbg !2545
  %8 = load float, float* %h, align 4, !dbg !2546
  %arrayidx9 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2547
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !2547
  %arrayidx11 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2548
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !2548
  %arrayidx13 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2549
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 2, !dbg !2549
  call void @hsv_to_rgb(float %8, float 0x3FD54FDF40000000, float 0.000000e+00, float* %arrayidx10, float* %arrayidx12, float* %arrayidx14), !dbg !2550
  %9 = load float, float* %h, align 4, !dbg !2551
  %arrayidx15 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2552
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !2552
  %arrayidx17 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2553
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 1, !dbg !2553
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2554
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !2554
  call void @hsv_to_rgb(float %9, float 0x3FE54FDF40000000, float 0.000000e+00, float* %arrayidx16, float* %arrayidx18, float* %arrayidx20), !dbg !2555
  %10 = load float, float* %h, align 4, !dbg !2556
  %arrayidx21 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2557
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !2557
  %arrayidx23 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2558
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 1, !dbg !2558
  %arrayidx25 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2559
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 2, !dbg !2559
  call void @hsv_to_rgb(float %10, float 1.000000e+00, float 0.000000e+00, float* %arrayidx22, float* %arrayidx24, float* %arrayidx26), !dbg !2560
  br label %sw.epilog, !dbg !2561

sw.bb27:                                          ; preds = %entry
  %11 = load float, float* %s, align 4, !dbg !2562
  %arrayidx28 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2563
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !2563
  %arrayidx30 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2564
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 1, !dbg !2564
  %arrayidx32 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2565
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 2, !dbg !2565
  call void @hsv_to_rgb(float 0.000000e+00, float %11, float 0.000000e+00, float* %arrayidx29, float* %arrayidx31, float* %arrayidx33), !dbg !2566
  %12 = load float, float* %s, align 4, !dbg !2567
  %arrayidx34 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2568
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !2568
  %arrayidx36 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2569
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 1, !dbg !2569
  %arrayidx38 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2570
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 2, !dbg !2570
  call void @hsv_to_rgb(float 0.000000e+00, float %12, float 0x3FD54FDF40000000, float* %arrayidx35, float* %arrayidx37, float* %arrayidx39), !dbg !2571
  %13 = load float, float* %s, align 4, !dbg !2572
  %arrayidx40 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2573
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !2573
  %arrayidx42 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2574
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 1, !dbg !2574
  %arrayidx44 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2575
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 2, !dbg !2575
  call void @hsv_to_rgb(float 0.000000e+00, float %13, float 0x3FE54FDF40000000, float* %arrayidx41, float* %arrayidx43, float* %arrayidx45), !dbg !2576
  %14 = load float, float* %s, align 4, !dbg !2577
  %arrayidx46 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2578
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !2578
  %arrayidx48 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2579
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 1, !dbg !2579
  %arrayidx50 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2580
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 2, !dbg !2580
  call void @hsv_to_rgb(float 0.000000e+00, float %14, float 1.000000e+00, float* %arrayidx47, float* %arrayidx49, float* %arrayidx51), !dbg !2581
  br label %sw.epilog, !dbg !2582

sw.bb52:                                          ; preds = %entry
  %15 = load float, float* %v, align 4, !dbg !2583
  %arrayidx53 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2584
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !2584
  %arrayidx55 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2585
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 1, !dbg !2585
  %arrayidx57 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2586
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 2, !dbg !2586
  call void @hsv_to_rgb(float 0.000000e+00, float 0.000000e+00, float %15, float* %arrayidx54, float* %arrayidx56, float* %arrayidx58), !dbg !2587
  %16 = load float, float* %v, align 4, !dbg !2588
  %arrayidx59 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2589
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !2589
  %arrayidx61 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2590
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx61, i64 0, i64 1, !dbg !2590
  %arrayidx63 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2591
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx63, i64 0, i64 2, !dbg !2591
  call void @hsv_to_rgb(float 0.000000e+00, float 0x3FD54FDF40000000, float %16, float* %arrayidx60, float* %arrayidx62, float* %arrayidx64), !dbg !2592
  %17 = load float, float* %v, align 4, !dbg !2593
  %arrayidx65 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2594
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !2594
  %arrayidx67 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2595
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 1, !dbg !2595
  %arrayidx69 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2596
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 2, !dbg !2596
  call void @hsv_to_rgb(float 0.000000e+00, float 0x3FE54FDF40000000, float %17, float* %arrayidx66, float* %arrayidx68, float* %arrayidx70), !dbg !2597
  %18 = load float, float* %v, align 4, !dbg !2598
  %arrayidx71 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2599
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx71, i64 0, i64 0, !dbg !2599
  %arrayidx73 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2600
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx73, i64 0, i64 1, !dbg !2600
  %arrayidx75 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2601
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx75, i64 0, i64 2, !dbg !2601
  call void @hsv_to_rgb(float 0.000000e+00, float 1.000000e+00, float %18, float* %arrayidx72, float* %arrayidx74, float* %arrayidx76), !dbg !2602
  br label %sw.epilog, !dbg !2603

sw.bb77:                                          ; preds = %entry
  %arrayidx78 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2604
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx78, i64 0, i64 0, !dbg !2604
  %arrayidx80 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2605
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx80, i64 0, i64 1, !dbg !2605
  %arrayidx82 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2606
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx82, i64 0, i64 2, !dbg !2606
  call void @hsv_to_rgb(float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float* %arrayidx79, float* %arrayidx81, float* %arrayidx83), !dbg !2607
  %arrayidx84 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2608
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx84, i64 0, i64 0, !dbg !2608
  %arrayidx85 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2609
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !2609
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay86), !dbg !2610
  %arrayidx87 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2611
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx87, i64 0, i64 0, !dbg !2611
  %arrayidx89 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2612
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx89, i64 0, i64 0, !dbg !2612
  call void @copy_v3_v3(float* %arraydecay88, float* %arraydecay90), !dbg !2613
  %arrayidx91 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2614
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx91, i64 0, i64 0, !dbg !2614
  %arrayidx93 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2615
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !2615
  call void @copy_v3_v3(float* %arraydecay92, float* %arraydecay94), !dbg !2616
  br label %sw.epilog, !dbg !2617

sw.bb95:                                          ; preds = %entry
  %arrayidx96 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2618
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !2618
  %arrayidx98 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2619
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx98, i64 0, i64 1, !dbg !2619
  %arrayidx100 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2620
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx100, i64 0, i64 2, !dbg !2620
  call void @hsv_to_rgb(float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float* %arrayidx97, float* %arrayidx99, float* %arrayidx101), !dbg !2621
  %arrayidx102 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2622
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx102, i64 0, i64 0, !dbg !2622
  %arrayidx104 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2623
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx104, i64 0, i64 0, !dbg !2623
  call void @copy_v3_v3(float* %arraydecay103, float* %arraydecay105), !dbg !2624
  %arrayidx106 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2625
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !2625
  %arrayidx108 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2626
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx108, i64 0, i64 0, !dbg !2626
  call void @copy_v3_v3(float* %arraydecay107, float* %arraydecay109), !dbg !2627
  %arrayidx110 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2628
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx110, i64 0, i64 0, !dbg !2628
  %arrayidx112 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2629
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 0, !dbg !2629
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay113), !dbg !2630
  br label %sw.epilog, !dbg !2631

sw.bb114:                                         ; preds = %entry
  %arrayidx115 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2632
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx115, i64 0, i64 0, !dbg !2632
  %arrayidx117 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2633
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx117, i64 0, i64 1, !dbg !2633
  %arrayidx119 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2634
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx119, i64 0, i64 2, !dbg !2634
  call void @hsv_to_rgb(float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float* %arrayidx116, float* %arrayidx118, float* %arrayidx120), !dbg !2635
  %arrayidx121 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2636
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx121, i64 0, i64 0, !dbg !2636
  %arrayidx123 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2637
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx123, i64 0, i64 0, !dbg !2637
  call void @copy_v3_v3(float* %arraydecay122, float* %arraydecay124), !dbg !2638
  %arrayidx125 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2639
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx125, i64 0, i64 0, !dbg !2639
  %arrayidx127 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2640
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx127, i64 0, i64 0, !dbg !2640
  call void @copy_v3_v3(float* %arraydecay126, float* %arraydecay128), !dbg !2641
  %arrayidx129 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2642
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx129, i64 0, i64 0, !dbg !2642
  %arrayidx131 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2643
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx131, i64 0, i64 0, !dbg !2643
  call void @copy_v3_v3(float* %arraydecay130, float* %arraydecay132), !dbg !2644
  br label %sw.epilog, !dbg !2645

sw.default:                                       ; preds = %entry
  %arrayidx133 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2646
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx133, i64 0, i64 0, !dbg !2646
  %arrayidx135 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2647
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx135, i64 0, i64 1, !dbg !2647
  %arrayidx137 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2648
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx137, i64 0, i64 2, !dbg !2648
  call void @hsv_to_rgb(float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float* %arrayidx134, float* %arrayidx136, float* %arrayidx138), !dbg !2649
  %arrayidx139 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2650
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx139, i64 0, i64 0, !dbg !2650
  %arrayidx141 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2651
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !2651
  call void @copy_v3_v3(float* %arraydecay140, float* %arraydecay142), !dbg !2652
  %arrayidx143 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2653
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx143, i64 0, i64 0, !dbg !2653
  %arrayidx145 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2654
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx145, i64 0, i64 0, !dbg !2654
  call void @copy_v3_v3(float* %arraydecay144, float* %arraydecay146), !dbg !2655
  %arrayidx147 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2656
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx147, i64 0, i64 0, !dbg !2656
  %arrayidx149 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2657
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx149, i64 0, i64 0, !dbg !2657
  call void @copy_v3_v3(float* %arraydecay148, float* %arraydecay150), !dbg !2658
  br label %sw.epilog, !dbg !2659

sw.epilog:                                        ; preds = %sw.default, %sw.bb114, %sw.bb95, %sw.bb77, %sw.bb52, %sw.bb27, %sw.bb
  store float 0.000000e+00, float* %dx, align 4, !dbg !2660
  br label %for.cond, !dbg !2662

for.cond:                                         ; preds = %for.inc359, %sw.epilog
  %19 = load float, float* %dx, align 4, !dbg !2663
  %cmp = fcmp olt float %19, 0x3FEFF7CEE0000000, !dbg !2665
  br i1 %cmp, label %for.body, label %for.end361, !dbg !2666

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %dx_next, metadata !2667, metadata !DIExpression()), !dbg !2669
  %20 = load float, float* %dx, align 4, !dbg !2670
  %add = fadd float %20, 0x3F95555560000000, !dbg !2671
  store float %add, float* %dx_next, align 4, !dbg !2669
  %arrayidx151 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 0, !dbg !2672
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx151, i64 0, i64 0, !dbg !2672
  %arrayidx153 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2673
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx153, i64 0, i64 0, !dbg !2673
  call void @copy_v3_v3(float* %arraydecay152, float* %arraydecay154), !dbg !2674
  %arrayidx155 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 1, !dbg !2675
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx155, i64 0, i64 0, !dbg !2675
  %arrayidx157 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2676
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx157, i64 0, i64 0, !dbg !2676
  call void @copy_v3_v3(float* %arraydecay156, float* %arraydecay158), !dbg !2677
  %arrayidx159 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 2, !dbg !2678
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !2678
  %arrayidx161 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2679
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !2679
  call void @copy_v3_v3(float* %arraydecay160, float* %arraydecay162), !dbg !2680
  %arrayidx163 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 3, !dbg !2681
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx163, i64 0, i64 0, !dbg !2681
  %arrayidx165 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2682
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx165, i64 0, i64 0, !dbg !2682
  call void @copy_v3_v3(float* %arraydecay164, float* %arraydecay166), !dbg !2683
  %21 = load i32, i32* %type.addr, align 4, !dbg !2684
  switch i32 %21, label %sw.epilog299 [
    i32 0, label %sw.bb167
    i32 1, label %sw.bb192
    i32 2, label %sw.bb217
    i32 3, label %sw.bb242
    i32 4, label %sw.bb261
    i32 5, label %sw.bb280
  ], !dbg !2685

sw.bb167:                                         ; preds = %for.body
  %22 = load float, float* %h, align 4, !dbg !2686
  %23 = load float, float* %dx, align 4, !dbg !2688
  %arrayidx168 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2689
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx168, i64 0, i64 0, !dbg !2689
  %arrayidx170 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2690
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx170, i64 0, i64 1, !dbg !2690
  %arrayidx172 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2691
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx172, i64 0, i64 2, !dbg !2691
  call void @hsv_to_rgb(float %22, float 0.000000e+00, float %23, float* %arrayidx169, float* %arrayidx171, float* %arrayidx173), !dbg !2692
  %24 = load float, float* %h, align 4, !dbg !2693
  %25 = load float, float* %dx, align 4, !dbg !2694
  %arrayidx174 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2695
  %arrayidx175 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx174, i64 0, i64 0, !dbg !2695
  %arrayidx176 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2696
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx176, i64 0, i64 1, !dbg !2696
  %arrayidx178 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2697
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 2, !dbg !2697
  call void @hsv_to_rgb(float %24, float 0x3FD54FDF40000000, float %25, float* %arrayidx175, float* %arrayidx177, float* %arrayidx179), !dbg !2698
  %26 = load float, float* %h, align 4, !dbg !2699
  %27 = load float, float* %dx, align 4, !dbg !2700
  %arrayidx180 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2701
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx180, i64 0, i64 0, !dbg !2701
  %arrayidx182 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2702
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx182, i64 0, i64 1, !dbg !2702
  %arrayidx184 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2703
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 2, !dbg !2703
  call void @hsv_to_rgb(float %26, float 0x3FE54FDF40000000, float %27, float* %arrayidx181, float* %arrayidx183, float* %arrayidx185), !dbg !2704
  %28 = load float, float* %h, align 4, !dbg !2705
  %29 = load float, float* %dx, align 4, !dbg !2706
  %arrayidx186 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2707
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx186, i64 0, i64 0, !dbg !2707
  %arrayidx188 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2708
  %arrayidx189 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx188, i64 0, i64 1, !dbg !2708
  %arrayidx190 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2709
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 2, !dbg !2709
  call void @hsv_to_rgb(float %28, float 1.000000e+00, float %29, float* %arrayidx187, float* %arrayidx189, float* %arrayidx191), !dbg !2710
  br label %sw.epilog299, !dbg !2711

sw.bb192:                                         ; preds = %for.body
  %30 = load float, float* %dx_next, align 4, !dbg !2712
  %31 = load float, float* %s, align 4, !dbg !2713
  %arrayidx193 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2714
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx193, i64 0, i64 0, !dbg !2714
  %arrayidx195 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2715
  %arrayidx196 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx195, i64 0, i64 1, !dbg !2715
  %arrayidx197 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2716
  %arrayidx198 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx197, i64 0, i64 2, !dbg !2716
  call void @hsv_to_rgb(float %30, float %31, float 0.000000e+00, float* %arrayidx194, float* %arrayidx196, float* %arrayidx198), !dbg !2717
  %32 = load float, float* %dx_next, align 4, !dbg !2718
  %33 = load float, float* %s, align 4, !dbg !2719
  %arrayidx199 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2720
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx199, i64 0, i64 0, !dbg !2720
  %arrayidx201 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2721
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx201, i64 0, i64 1, !dbg !2721
  %arrayidx203 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2722
  %arrayidx204 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx203, i64 0, i64 2, !dbg !2722
  call void @hsv_to_rgb(float %32, float %33, float 0x3FD54FDF40000000, float* %arrayidx200, float* %arrayidx202, float* %arrayidx204), !dbg !2723
  %34 = load float, float* %dx_next, align 4, !dbg !2724
  %35 = load float, float* %s, align 4, !dbg !2725
  %arrayidx205 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2726
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx205, i64 0, i64 0, !dbg !2726
  %arrayidx207 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2727
  %arrayidx208 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx207, i64 0, i64 1, !dbg !2727
  %arrayidx209 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2728
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx209, i64 0, i64 2, !dbg !2728
  call void @hsv_to_rgb(float %34, float %35, float 0x3FE54FDF40000000, float* %arrayidx206, float* %arrayidx208, float* %arrayidx210), !dbg !2729
  %36 = load float, float* %dx_next, align 4, !dbg !2730
  %37 = load float, float* %s, align 4, !dbg !2731
  %arrayidx211 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2732
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx211, i64 0, i64 0, !dbg !2732
  %arrayidx213 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2733
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx213, i64 0, i64 1, !dbg !2733
  %arrayidx215 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2734
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 2, !dbg !2734
  call void @hsv_to_rgb(float %36, float %37, float 1.000000e+00, float* %arrayidx212, float* %arrayidx214, float* %arrayidx216), !dbg !2735
  br label %sw.epilog299, !dbg !2736

sw.bb217:                                         ; preds = %for.body
  %38 = load float, float* %dx_next, align 4, !dbg !2737
  %39 = load float, float* %v, align 4, !dbg !2738
  %arrayidx218 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2739
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx218, i64 0, i64 0, !dbg !2739
  %arrayidx220 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2740
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx220, i64 0, i64 1, !dbg !2740
  %arrayidx222 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2741
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx222, i64 0, i64 2, !dbg !2741
  call void @hsv_to_rgb(float %38, float 0.000000e+00, float %39, float* %arrayidx219, float* %arrayidx221, float* %arrayidx223), !dbg !2742
  %40 = load float, float* %dx_next, align 4, !dbg !2743
  %41 = load float, float* %v, align 4, !dbg !2744
  %arrayidx224 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2745
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx224, i64 0, i64 0, !dbg !2745
  %arrayidx226 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2746
  %arrayidx227 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx226, i64 0, i64 1, !dbg !2746
  %arrayidx228 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2747
  %arrayidx229 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx228, i64 0, i64 2, !dbg !2747
  call void @hsv_to_rgb(float %40, float 0x3FD54FDF40000000, float %41, float* %arrayidx225, float* %arrayidx227, float* %arrayidx229), !dbg !2748
  %42 = load float, float* %dx_next, align 4, !dbg !2749
  %43 = load float, float* %v, align 4, !dbg !2750
  %arrayidx230 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2751
  %arrayidx231 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx230, i64 0, i64 0, !dbg !2751
  %arrayidx232 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2752
  %arrayidx233 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx232, i64 0, i64 1, !dbg !2752
  %arrayidx234 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2753
  %arrayidx235 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx234, i64 0, i64 2, !dbg !2753
  call void @hsv_to_rgb(float %42, float 0x3FE54FDF40000000, float %43, float* %arrayidx231, float* %arrayidx233, float* %arrayidx235), !dbg !2754
  %44 = load float, float* %dx_next, align 4, !dbg !2755
  %45 = load float, float* %v, align 4, !dbg !2756
  %arrayidx236 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2757
  %arrayidx237 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx236, i64 0, i64 0, !dbg !2757
  %arrayidx238 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2758
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx238, i64 0, i64 1, !dbg !2758
  %arrayidx240 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2759
  %arrayidx241 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx240, i64 0, i64 2, !dbg !2759
  call void @hsv_to_rgb(float %44, float 1.000000e+00, float %45, float* %arrayidx237, float* %arrayidx239, float* %arrayidx241), !dbg !2760
  br label %sw.epilog299, !dbg !2761

sw.bb242:                                         ; preds = %for.body
  %46 = load float, float* %dx_next, align 4, !dbg !2762
  %arrayidx243 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2764
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx243, i64 0, i64 0, !dbg !2764
  %arrayidx245 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2765
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx245, i64 0, i64 1, !dbg !2765
  %arrayidx247 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2766
  %arrayidx248 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx247, i64 0, i64 2, !dbg !2766
  call void @hsv_to_rgb(float %46, float 1.000000e+00, float 1.000000e+00, float* %arrayidx244, float* %arrayidx246, float* %arrayidx248), !dbg !2767
  %arrayidx249 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2768
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx249, i64 0, i64 0, !dbg !2768
  %arrayidx251 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2769
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx251, i64 0, i64 0, !dbg !2769
  call void @copy_v3_v3(float* %arraydecay250, float* %arraydecay252), !dbg !2770
  %arrayidx253 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2771
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx253, i64 0, i64 0, !dbg !2771
  %arrayidx255 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2772
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx255, i64 0, i64 0, !dbg !2772
  call void @copy_v3_v3(float* %arraydecay254, float* %arraydecay256), !dbg !2773
  %arrayidx257 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2774
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx257, i64 0, i64 0, !dbg !2774
  %arrayidx259 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2775
  %arraydecay260 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx259, i64 0, i64 0, !dbg !2775
  call void @copy_v3_v3(float* %arraydecay258, float* %arraydecay260), !dbg !2776
  br label %sw.epilog299, !dbg !2777

sw.bb261:                                         ; preds = %for.body
  %47 = load float, float* %h, align 4, !dbg !2778
  %48 = load float, float* %dx, align 4, !dbg !2779
  %arrayidx262 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2780
  %arrayidx263 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx262, i64 0, i64 0, !dbg !2780
  %arrayidx264 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2781
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx264, i64 0, i64 1, !dbg !2781
  %arrayidx266 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2782
  %arrayidx267 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx266, i64 0, i64 2, !dbg !2782
  call void @hsv_to_rgb(float %47, float %48, float 1.000000e+00, float* %arrayidx263, float* %arrayidx265, float* %arrayidx267), !dbg !2783
  %arrayidx268 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2784
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx268, i64 0, i64 0, !dbg !2784
  %arrayidx270 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2785
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx270, i64 0, i64 0, !dbg !2785
  call void @copy_v3_v3(float* %arraydecay269, float* %arraydecay271), !dbg !2786
  %arrayidx272 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2787
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx272, i64 0, i64 0, !dbg !2787
  %arrayidx274 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2788
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx274, i64 0, i64 0, !dbg !2788
  call void @copy_v3_v3(float* %arraydecay273, float* %arraydecay275), !dbg !2789
  %arrayidx276 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2790
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx276, i64 0, i64 0, !dbg !2790
  %arrayidx278 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2791
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx278, i64 0, i64 0, !dbg !2791
  call void @copy_v3_v3(float* %arraydecay277, float* %arraydecay279), !dbg !2792
  br label %sw.epilog299, !dbg !2793

sw.bb280:                                         ; preds = %for.body
  %49 = load float, float* %h, align 4, !dbg !2794
  %50 = load float, float* %dx, align 4, !dbg !2795
  %arrayidx281 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2796
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx281, i64 0, i64 0, !dbg !2796
  %arrayidx283 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2797
  %arrayidx284 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx283, i64 0, i64 1, !dbg !2797
  %arrayidx285 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2798
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx285, i64 0, i64 2, !dbg !2798
  call void @hsv_to_rgb(float %49, float 1.000000e+00, float %50, float* %arrayidx282, float* %arrayidx284, float* %arrayidx286), !dbg !2799
  %arrayidx287 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 0, !dbg !2800
  %arraydecay288 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx287, i64 0, i64 0, !dbg !2800
  %arrayidx289 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2801
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx289, i64 0, i64 0, !dbg !2801
  call void @copy_v3_v3(float* %arraydecay288, float* %arraydecay290), !dbg !2802
  %arrayidx291 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 1, !dbg !2803
  %arraydecay292 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx291, i64 0, i64 0, !dbg !2803
  %arrayidx293 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2804
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx293, i64 0, i64 0, !dbg !2804
  call void @copy_v3_v3(float* %arraydecay292, float* %arraydecay294), !dbg !2805
  %arrayidx295 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 3, !dbg !2806
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx295, i64 0, i64 0, !dbg !2806
  %arrayidx297 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 2, !dbg !2807
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx297, i64 0, i64 0, !dbg !2807
  call void @copy_v3_v3(float* %arraydecay296, float* %arraydecay298), !dbg !2808
  br label %sw.epilog299, !dbg !2809

sw.epilog299:                                     ; preds = %for.body, %sw.bb280, %sw.bb261, %sw.bb242, %sw.bb217, %sw.bb192, %sw.bb167
  %51 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2810
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %51, i32 0, i32 0, !dbg !2811
  %52 = load i32, i32* %xmin, align 4, !dbg !2811
  %conv = sitofp i32 %52 to float, !dbg !2810
  %53 = load float, float* %dx, align 4, !dbg !2812
  %54 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2813
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %54), !dbg !2814
  %conv300 = sitofp i32 %call to float, !dbg !2814
  %mul = fmul float %53, %conv300, !dbg !2815
  %add301 = fadd float %conv, %mul, !dbg !2816
  store float %add301, float* %sx1, align 4, !dbg !2817
  %55 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2818
  %xmin302 = getelementptr inbounds %struct.rcti, %struct.rcti* %55, i32 0, i32 0, !dbg !2819
  %56 = load i32, i32* %xmin302, align 4, !dbg !2819
  %conv303 = sitofp i32 %56 to float, !dbg !2818
  %57 = load float, float* %dx_next, align 4, !dbg !2820
  %58 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2821
  %call304 = call i32 @BLI_rcti_size_x(%struct.rcti* %58), !dbg !2822
  %conv305 = sitofp i32 %call304 to float, !dbg !2822
  %mul306 = fmul float %57, %conv305, !dbg !2823
  %add307 = fadd float %conv303, %mul306, !dbg !2824
  store float %add307, float* %sx2, align 4, !dbg !2825
  %59 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2826
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %59, i32 0, i32 2, !dbg !2827
  %60 = load i32, i32* %ymin, align 4, !dbg !2827
  %conv308 = sitofp i32 %60 to float, !dbg !2826
  store float %conv308, float* %sy, align 4, !dbg !2828
  %61 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !2829
  %call309 = call i32 @BLI_rcti_size_y(%struct.rcti* %61), !dbg !2830
  %conv310 = sitofp i32 %call309 to float, !dbg !2831
  %div = fdiv float %conv310, 3.000000e+00, !dbg !2832
  store float %div, float* %dy, align 4, !dbg !2833
  call void @glBegin(i32 7), !dbg !2834
  store i32 0, i32* %a, align 4, !dbg !2835
  br label %for.cond311, !dbg !2837

for.cond311:                                      ; preds = %for.inc, %sw.epilog299
  %62 = load i32, i32* %a, align 4, !dbg !2838
  %cmp312 = icmp slt i32 %62, 3, !dbg !2840
  br i1 %cmp312, label %for.body314, label %for.end, !dbg !2841

for.body314:                                      ; preds = %for.cond311
  %63 = load i32, i32* %a, align 4, !dbg !2842
  %idxprom = sext i32 %63 to i64, !dbg !2844
  %arrayidx315 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom, !dbg !2844
  %arrayidx316 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx315, i64 0, i64 0, !dbg !2844
  %64 = load float, float* %arrayidx316, align 4, !dbg !2844
  %65 = load i32, i32* %a, align 4, !dbg !2845
  %idxprom317 = sext i32 %65 to i64, !dbg !2846
  %arrayidx318 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom317, !dbg !2846
  %arrayidx319 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx318, i64 0, i64 1, !dbg !2846
  %66 = load float, float* %arrayidx319, align 4, !dbg !2846
  %67 = load i32, i32* %a, align 4, !dbg !2847
  %idxprom320 = sext i32 %67 to i64, !dbg !2848
  %arrayidx321 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom320, !dbg !2848
  %arrayidx322 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx321, i64 0, i64 2, !dbg !2848
  %68 = load float, float* %arrayidx322, align 4, !dbg !2848
  %69 = load float, float* %alpha.addr, align 4, !dbg !2849
  call void @glColor4f(float %64, float %66, float %68, float %69), !dbg !2850
  %70 = load float, float* %sx1, align 4, !dbg !2851
  %71 = load float, float* %sy, align 4, !dbg !2852
  call void @glVertex2f(float %70, float %71), !dbg !2853
  %72 = load i32, i32* %a, align 4, !dbg !2854
  %idxprom323 = sext i32 %72 to i64, !dbg !2855
  %arrayidx324 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom323, !dbg !2855
  %arrayidx325 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx324, i64 0, i64 0, !dbg !2855
  %73 = load float, float* %arrayidx325, align 4, !dbg !2855
  %74 = load i32, i32* %a, align 4, !dbg !2856
  %idxprom326 = sext i32 %74 to i64, !dbg !2857
  %arrayidx327 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom326, !dbg !2857
  %arrayidx328 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx327, i64 0, i64 1, !dbg !2857
  %75 = load float, float* %arrayidx328, align 4, !dbg !2857
  %76 = load i32, i32* %a, align 4, !dbg !2858
  %idxprom329 = sext i32 %76 to i64, !dbg !2859
  %arrayidx330 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom329, !dbg !2859
  %arrayidx331 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx330, i64 0, i64 2, !dbg !2859
  %77 = load float, float* %arrayidx331, align 4, !dbg !2859
  %78 = load float, float* %alpha.addr, align 4, !dbg !2860
  call void @glColor4f(float %73, float %75, float %77, float %78), !dbg !2861
  %79 = load float, float* %sx2, align 4, !dbg !2862
  %80 = load float, float* %sy, align 4, !dbg !2863
  call void @glVertex2f(float %79, float %80), !dbg !2864
  %81 = load i32, i32* %a, align 4, !dbg !2865
  %add332 = add nsw i32 %81, 1, !dbg !2866
  %idxprom333 = sext i32 %add332 to i64, !dbg !2867
  %arrayidx334 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom333, !dbg !2867
  %arrayidx335 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx334, i64 0, i64 0, !dbg !2867
  %82 = load float, float* %arrayidx335, align 4, !dbg !2867
  %83 = load i32, i32* %a, align 4, !dbg !2868
  %add336 = add nsw i32 %83, 1, !dbg !2869
  %idxprom337 = sext i32 %add336 to i64, !dbg !2870
  %arrayidx338 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom337, !dbg !2870
  %arrayidx339 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx338, i64 0, i64 1, !dbg !2870
  %84 = load float, float* %arrayidx339, align 4, !dbg !2870
  %85 = load i32, i32* %a, align 4, !dbg !2871
  %add340 = add nsw i32 %85, 1, !dbg !2872
  %idxprom341 = sext i32 %add340 to i64, !dbg !2873
  %arrayidx342 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col1, i64 0, i64 %idxprom341, !dbg !2873
  %arrayidx343 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx342, i64 0, i64 2, !dbg !2873
  %86 = load float, float* %arrayidx343, align 4, !dbg !2873
  %87 = load float, float* %alpha.addr, align 4, !dbg !2874
  call void @glColor4f(float %82, float %84, float %86, float %87), !dbg !2875
  %88 = load float, float* %sx2, align 4, !dbg !2876
  %89 = load float, float* %sy, align 4, !dbg !2877
  %90 = load float, float* %dy, align 4, !dbg !2878
  %add344 = fadd float %89, %90, !dbg !2879
  call void @glVertex2f(float %88, float %add344), !dbg !2880
  %91 = load i32, i32* %a, align 4, !dbg !2881
  %add345 = add nsw i32 %91, 1, !dbg !2882
  %idxprom346 = sext i32 %add345 to i64, !dbg !2883
  %arrayidx347 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom346, !dbg !2883
  %arrayidx348 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx347, i64 0, i64 0, !dbg !2883
  %92 = load float, float* %arrayidx348, align 4, !dbg !2883
  %93 = load i32, i32* %a, align 4, !dbg !2884
  %add349 = add nsw i32 %93, 1, !dbg !2885
  %idxprom350 = sext i32 %add349 to i64, !dbg !2886
  %arrayidx351 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom350, !dbg !2886
  %arrayidx352 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx351, i64 0, i64 1, !dbg !2886
  %94 = load float, float* %arrayidx352, align 4, !dbg !2886
  %95 = load i32, i32* %a, align 4, !dbg !2887
  %add353 = add nsw i32 %95, 1, !dbg !2888
  %idxprom354 = sext i32 %add353 to i64, !dbg !2889
  %arrayidx355 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %col0, i64 0, i64 %idxprom354, !dbg !2889
  %arrayidx356 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx355, i64 0, i64 2, !dbg !2889
  %96 = load float, float* %arrayidx356, align 4, !dbg !2889
  %97 = load float, float* %alpha.addr, align 4, !dbg !2890
  call void @glColor4f(float %92, float %94, float %96, float %97), !dbg !2891
  %98 = load float, float* %sx1, align 4, !dbg !2892
  %99 = load float, float* %sy, align 4, !dbg !2893
  %100 = load float, float* %dy, align 4, !dbg !2894
  %add357 = fadd float %99, %100, !dbg !2895
  call void @glVertex2f(float %98, float %add357), !dbg !2896
  br label %for.inc, !dbg !2897

for.inc:                                          ; preds = %for.body314
  %101 = load i32, i32* %a, align 4, !dbg !2898
  %inc = add nsw i32 %101, 1, !dbg !2898
  store i32 %inc, i32* %a, align 4, !dbg !2898
  %102 = load float, float* %dy, align 4, !dbg !2899
  %103 = load float, float* %sy, align 4, !dbg !2900
  %add358 = fadd float %103, %102, !dbg !2900
  store float %add358, float* %sy, align 4, !dbg !2900
  br label %for.cond311, !dbg !2901, !llvm.loop !2902

for.end:                                          ; preds = %for.cond311
  call void @glEnd(), !dbg !2904
  br label %for.inc359, !dbg !2905

for.inc359:                                       ; preds = %for.end
  %104 = load float, float* %dx, align 4, !dbg !2906
  %add360 = fadd float %104, 0x3F95555560000000, !dbg !2906
  store float %add360, float* %dx, align 4, !dbg !2906
  br label %for.cond, !dbg !2907, !llvm.loop !2908

for.end361:                                       ; preds = %for.cond
  call void @glShadeModel(i32 7424), !dbg !2910
  ret void, !dbg !2911
}

declare dso_local void @glShadeModel(i32) #2

declare dso_local void @hsv_to_rgb(float, float, float, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !2912 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2915, metadata !DIExpression()), !dbg !2916
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2917, metadata !DIExpression()), !dbg !2918
  %0 = load float*, float** %a.addr, align 8, !dbg !2919
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2919
  %1 = load float, float* %arrayidx, align 4, !dbg !2919
  %2 = load float*, float** %r.addr, align 8, !dbg !2920
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2920
  store float %1, float* %arrayidx1, align 4, !dbg !2921
  %3 = load float*, float** %a.addr, align 8, !dbg !2922
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !2922
  %4 = load float, float* %arrayidx2, align 4, !dbg !2922
  %5 = load float*, float** %r.addr, align 8, !dbg !2923
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2923
  store float %4, float* %arrayidx3, align 4, !dbg !2924
  %6 = load float*, float** %a.addr, align 8, !dbg !2925
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !2925
  %7 = load float, float* %arrayidx4, align 4, !dbg !2925
  %8 = load float*, float** %r.addr, align 8, !dbg !2926
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2926
  store float %7, float* %arrayidx5, align 4, !dbg !2927
  ret void, !dbg !2928
}

declare dso_local void @glBegin(i32) #2

declare dso_local void @glColor4f(float, float, float, float) #2

declare dso_local void @glVertex2f(float, float) #2

declare dso_local void @glEnd() #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_color_picker_use_display_colorspace(%struct.uiBut* %but) #0 !dbg !2929 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %color_profile = alloca i8, align 1
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !2932, metadata !DIExpression()), !dbg !2933
  call void @llvm.dbg.declare(metadata i8* %color_profile, metadata !2934, metadata !DIExpression()), !dbg !2935
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !2936
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !2937
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2937
  %color_profile1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 51, !dbg !2938
  %2 = load i8, i8* %color_profile1, align 4, !dbg !2938
  store i8 %2, i8* %color_profile, align 1, !dbg !2935
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !2939
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 55, !dbg !2941
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !2941
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !2939
  br i1 %tobool, label %if.then, label %if.end4, !dbg !2942

if.then:                                          ; preds = %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !2943
  %rnaprop2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 55, !dbg !2946
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop2, align 8, !dbg !2946
  %call = call i32 @RNA_property_subtype(%struct.PropertyRNA* %6), !dbg !2947
  %cmp = icmp eq i32 %call, 30, !dbg !2948
  br i1 %cmp, label %if.then3, label %if.end, !dbg !2949

if.then3:                                         ; preds = %if.then
  store i8 0, i8* %color_profile, align 1, !dbg !2950
  br label %if.end, !dbg !2951

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !2952

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i8, i8* %color_profile, align 1, !dbg !2953
  ret i8 %7, !dbg !2954
}

declare dso_local i32 @RNA_property_subtype(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_hsvcube_pos_from_vals(%struct.uiBut* %but, %struct.rcti* %rect, float* %hsv, float* %xp, float* %yp) #0 !dbg !2955 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %hsv.addr = alloca float*, align 8
  %xp.addr = alloca float*, align 8
  %yp.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !2956, metadata !DIExpression()), !dbg !2957
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !2958, metadata !DIExpression()), !dbg !2959
  store float* %hsv, float** %hsv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hsv.addr, metadata !2960, metadata !DIExpression()), !dbg !2961
  store float* %xp, float** %xp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %xp.addr, metadata !2962, metadata !DIExpression()), !dbg !2963
  store float* %yp, float** %yp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %yp.addr, metadata !2964, metadata !DIExpression()), !dbg !2965
  call void @llvm.dbg.declare(metadata float* %x, metadata !2966, metadata !DIExpression()), !dbg !2967
  store float 0.000000e+00, float* %x, align 4, !dbg !2967
  call void @llvm.dbg.declare(metadata float* %y, metadata !2968, metadata !DIExpression()), !dbg !2969
  store float 0.000000e+00, float* %y, align 4, !dbg !2969
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !2970
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 24, !dbg !2971
  %1 = load float, float* %a1, align 8, !dbg !2971
  %conv = fptosi float %1 to i32, !dbg !2972
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb5
    i32 3, label %sw.bb8
    i32 4, label %sw.bb10
    i32 5, label %sw.bb12
    i32 10, label %sw.bb14
    i32 9, label %sw.bb16
  ], !dbg !2973

sw.bb:                                            ; preds = %entry
  %2 = load float*, float** %hsv.addr, align 8, !dbg !2974
  %arrayidx = getelementptr inbounds float, float* %2, i64 2, !dbg !2974
  %3 = load float, float* %arrayidx, align 4, !dbg !2974
  store float %3, float* %x, align 4, !dbg !2976
  %4 = load float*, float** %hsv.addr, align 8, !dbg !2977
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !2977
  %5 = load float, float* %arrayidx1, align 4, !dbg !2977
  store float %5, float* %y, align 4, !dbg !2978
  br label %sw.epilog, !dbg !2979

sw.bb2:                                           ; preds = %entry
  %6 = load float*, float** %hsv.addr, align 8, !dbg !2980
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !2980
  %7 = load float, float* %arrayidx3, align 4, !dbg !2980
  store float %7, float* %x, align 4, !dbg !2981
  %8 = load float*, float** %hsv.addr, align 8, !dbg !2982
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 2, !dbg !2982
  %9 = load float, float* %arrayidx4, align 4, !dbg !2982
  store float %9, float* %y, align 4, !dbg !2983
  br label %sw.epilog, !dbg !2984

sw.bb5:                                           ; preds = %entry
  %10 = load float*, float** %hsv.addr, align 8, !dbg !2985
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !2985
  %11 = load float, float* %arrayidx6, align 4, !dbg !2985
  store float %11, float* %x, align 4, !dbg !2986
  %12 = load float*, float** %hsv.addr, align 8, !dbg !2987
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1, !dbg !2987
  %13 = load float, float* %arrayidx7, align 4, !dbg !2987
  store float %13, float* %y, align 4, !dbg !2988
  br label %sw.epilog, !dbg !2989

sw.bb8:                                           ; preds = %entry
  %14 = load float*, float** %hsv.addr, align 8, !dbg !2990
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !2990
  %15 = load float, float* %arrayidx9, align 4, !dbg !2990
  store float %15, float* %x, align 4, !dbg !2991
  store float 5.000000e-01, float* %y, align 4, !dbg !2992
  br label %sw.epilog, !dbg !2993

sw.bb10:                                          ; preds = %entry
  %16 = load float*, float** %hsv.addr, align 8, !dbg !2994
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 1, !dbg !2994
  %17 = load float, float* %arrayidx11, align 4, !dbg !2994
  store float %17, float* %x, align 4, !dbg !2995
  store float 5.000000e-01, float* %y, align 4, !dbg !2996
  br label %sw.epilog, !dbg !2997

sw.bb12:                                          ; preds = %entry
  %18 = load float*, float** %hsv.addr, align 8, !dbg !2998
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 2, !dbg !2998
  %19 = load float, float* %arrayidx13, align 4, !dbg !2998
  store float %19, float* %x, align 4, !dbg !2999
  store float 5.000000e-01, float* %y, align 4, !dbg !3000
  br label %sw.epilog, !dbg !3001

sw.bb14:                                          ; preds = %entry
  store float 5.000000e-01, float* %x, align 4, !dbg !3002
  %20 = load float*, float** %hsv.addr, align 8, !dbg !3003
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 2, !dbg !3003
  %21 = load float, float* %arrayidx15, align 4, !dbg !3003
  store float %21, float* %y, align 4, !dbg !3004
  br label %sw.epilog, !dbg !3005

sw.bb16:                                          ; preds = %entry
  store float 5.000000e-01, float* %x, align 4, !dbg !3006
  %22 = load float*, float** %hsv.addr, align 8, !dbg !3007
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 2, !dbg !3007
  %23 = load float, float* %arrayidx17, align 4, !dbg !3007
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3008
  %softmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 22, !dbg !3009
  %25 = load float, float* %softmin, align 8, !dbg !3009
  %sub = fsub float %23, %25, !dbg !3010
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3011
  %softmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 23, !dbg !3012
  %27 = load float, float* %softmax, align 4, !dbg !3012
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3013
  %softmin18 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 22, !dbg !3014
  %29 = load float, float* %softmin18, align 8, !dbg !3014
  %sub19 = fsub float %27, %29, !dbg !3015
  %div = fdiv float %sub, %sub19, !dbg !3016
  store float %div, float* %y, align 4, !dbg !3017
  br label %sw.epilog, !dbg !3018

sw.epilog:                                        ; preds = %entry, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb5, %sw.bb2, %sw.bb
  %30 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3019
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 0, !dbg !3020
  %31 = load i32, i32* %xmin, align 4, !dbg !3020
  %conv20 = sitofp i32 %31 to float, !dbg !3019
  %32 = load float, float* %x, align 4, !dbg !3021
  %33 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3022
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %33), !dbg !3023
  %conv21 = sitofp i32 %call to float, !dbg !3023
  %mul = fmul float %32, %conv21, !dbg !3024
  %add = fadd float %conv20, %mul, !dbg !3025
  %34 = load float*, float** %xp.addr, align 8, !dbg !3026
  store float %add, float* %34, align 4, !dbg !3027
  %35 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3028
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %35, i32 0, i32 2, !dbg !3029
  %36 = load i32, i32* %ymin, align 4, !dbg !3029
  %conv22 = sitofp i32 %36 to float, !dbg !3028
  %37 = load float, float* %y, align 4, !dbg !3030
  %38 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3031
  %call23 = call i32 @BLI_rcti_size_y(%struct.rcti* %38), !dbg !3032
  %conv24 = sitofp i32 %call23 to float, !dbg !3032
  %mul25 = fmul float %37, %conv24, !dbg !3033
  %add26 = fadd float %conv22, %mul25, !dbg !3034
  %39 = load float*, float** %yp.addr, align 8, !dbg !3035
  store float %add26, float* %39, align 4, !dbg !3036
  ret void, !dbg !3037
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_link_bezier_points(%struct.rcti* %rect, [2 x float]* %coord_array, i32 %resol) #0 !dbg !3038 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %coord_array.addr = alloca [2 x float]*, align 8
  %resol.addr = alloca i32, align 4
  %dist = alloca float, align 4
  %vec = alloca [4 x [2 x float]], align 16
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3042, metadata !DIExpression()), !dbg !3043
  store [2 x float]* %coord_array, [2 x float]** %coord_array.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %coord_array.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store i32 %resol, i32* %resol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resol.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata float* %dist, metadata !3048, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %vec, metadata !3050, metadata !DIExpression()), !dbg !3053
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3054
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !3055
  %1 = load i32, i32* %xmin, align 4, !dbg !3055
  %conv = sitofp i32 %1 to float, !dbg !3054
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3056
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !3056
  store float %conv, float* %arrayidx1, align 16, !dbg !3057
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3058
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !3059
  %3 = load i32, i32* %ymin, align 4, !dbg !3059
  %conv2 = sitofp i32 %3 to float, !dbg !3058
  %arrayidx3 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3060
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 1, !dbg !3060
  store float %conv2, float* %arrayidx4, align 4, !dbg !3061
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3062
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %4, i32 0, i32 1, !dbg !3063
  %5 = load i32, i32* %xmax, align 4, !dbg !3063
  %conv5 = sitofp i32 %5 to float, !dbg !3062
  %arrayidx6 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3064
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !3064
  store float %conv5, float* %arrayidx7, align 8, !dbg !3065
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3066
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %6, i32 0, i32 3, !dbg !3067
  %7 = load i32, i32* %ymax, align 4, !dbg !3067
  %conv8 = sitofp i32 %7 to float, !dbg !3066
  %arrayidx9 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3068
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 1, !dbg !3068
  store float %conv8, float* %arrayidx10, align 4, !dbg !3069
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3070
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !3070
  %8 = load float, float* %arrayidx12, align 16, !dbg !3070
  %arrayidx13 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3071
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !3071
  %9 = load float, float* %arrayidx14, align 8, !dbg !3071
  %sub = fsub float %8, %9, !dbg !3072
  %10 = call float @llvm.fabs.f32(float %sub), !dbg !3073
  %mul = fmul float 5.000000e-01, %10, !dbg !3074
  store float %mul, float* %dist, align 4, !dbg !3075
  %arrayidx15 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3076
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !3076
  %11 = load float, float* %arrayidx16, align 16, !dbg !3076
  %12 = load float, float* %dist, align 4, !dbg !3077
  %add = fadd float %11, %12, !dbg !3078
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !3079
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !3079
  store float %add, float* %arrayidx18, align 8, !dbg !3080
  %arrayidx19 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3081
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 1, !dbg !3081
  %13 = load float, float* %arrayidx20, align 4, !dbg !3081
  %arrayidx21 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !3082
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 1, !dbg !3082
  store float %13, float* %arrayidx22, align 4, !dbg !3083
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3084
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !3084
  %14 = load float, float* %arrayidx24, align 8, !dbg !3084
  %15 = load float, float* %dist, align 4, !dbg !3085
  %sub25 = fsub float %14, %15, !dbg !3086
  %arrayidx26 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !3087
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !3087
  store float %sub25, float* %arrayidx27, align 16, !dbg !3088
  %arrayidx28 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3089
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx28, i64 0, i64 1, !dbg !3089
  %16 = load float, float* %arrayidx29, align 4, !dbg !3089
  %arrayidx30 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !3090
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx30, i64 0, i64 1, !dbg !3090
  store float %16, float* %arrayidx31, align 4, !dbg !3091
  %arrayidx32 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3092
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx32, i64 0, i64 0, !dbg !3092
  %17 = load float, float* %arrayidx33, align 16, !dbg !3092
  %arrayidx34 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !3093
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx34, i64 0, i64 0, !dbg !3093
  %18 = load float, float* %arrayidx35, align 8, !dbg !3093
  %arrayidx36 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !3094
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !3094
  %19 = load float, float* %arrayidx37, align 16, !dbg !3094
  %arrayidx38 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3095
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx38, i64 0, i64 0, !dbg !3095
  %20 = load float, float* %arrayidx39, align 8, !dbg !3095
  %21 = load [2 x float]*, [2 x float]** %coord_array.addr, align 8, !dbg !3096
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %21, i64 0, !dbg !3096
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx40, i64 0, i64 0, !dbg !3096
  %22 = load i32, i32* %resol.addr, align 4, !dbg !3097
  call void @BKE_curve_forward_diff_bezier(float %17, float %18, float %19, float %20, float* %arrayidx41, i32 %22, i32 8), !dbg !3098
  %arrayidx42 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !3099
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 1, !dbg !3099
  %23 = load float, float* %arrayidx43, align 4, !dbg !3099
  %arrayidx44 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !3100
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 1, !dbg !3100
  %24 = load float, float* %arrayidx45, align 4, !dbg !3100
  %arrayidx46 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !3101
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx46, i64 0, i64 1, !dbg !3101
  %25 = load float, float* %arrayidx47, align 4, !dbg !3101
  %arrayidx48 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !3102
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx48, i64 0, i64 1, !dbg !3102
  %26 = load float, float* %arrayidx49, align 4, !dbg !3102
  %27 = load [2 x float]*, [2 x float]** %coord_array.addr, align 8, !dbg !3103
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %27, i64 0, !dbg !3103
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx50, i64 0, i64 1, !dbg !3103
  %28 = load i32, i32* %resol.addr, align 4, !dbg !3104
  call void @BKE_curve_forward_diff_bezier(float %23, float %24, float %25, float %26, float* %arrayidx51, i32 %28, i32 8), !dbg !3105
  ret i8 1, !dbg !3106
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @BKE_curve_forward_diff_bezier(float, float, float, float, float*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_link_bezier(%struct.rcti* %rect) #0 !dbg !3107 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %coord_array = alloca [25 x [2 x float]], align 16
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3110, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.declare(metadata [25 x [2 x float]]* %coord_array, metadata !3112, metadata !DIExpression()), !dbg !3116
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3117
  %arraydecay = getelementptr inbounds [25 x [2 x float]], [25 x [2 x float]]* %coord_array, i64 0, i64 0, !dbg !3119
  %call = call zeroext i8 @ui_link_bezier_points(%struct.rcti* %0, [2 x float]* %arraydecay, i32 24), !dbg !3120
  %tobool = icmp ne i8 %call, 0, !dbg !3120
  br i1 %tobool, label %if.then, label %if.end, !dbg !3121

if.then:                                          ; preds = %entry
  call void @glEnable(i32 3042), !dbg !3122
  call void @glEnable(i32 2848), !dbg !3124
  call void @glEnableClientState(i32 32884), !dbg !3125
  %arraydecay1 = getelementptr inbounds [25 x [2 x float]], [25 x [2 x float]]* %coord_array, i64 0, i64 0, !dbg !3126
  %1 = bitcast [2 x float]* %arraydecay1 to i8*, !dbg !3126
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %1), !dbg !3127
  call void @glDrawArrays(i32 3, i32 0, i32 25), !dbg !3128
  call void @glDisableClientState(i32 32884), !dbg !3129
  call void @glDisable(i32 3042), !dbg !3130
  call void @glDisable(i32 2848), !dbg !3131
  br label %if.end, !dbg !3132

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3133
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiWidgetScrollDraw(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, %struct.rcti* %slider, i32 %state) #0 !dbg !3134 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %slider.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %horizontal = alloca i32, align 4
  %rad = alloca float, align 4
  %outline = alloca i8, align 1
  %sw_ap = alloca i16, align 2
  %sw_ap22 = alloca i16, align 2
  %sw_ap94 = alloca i8, align 1
  %sw_ap148 = alloca i8, align 1
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !3137, metadata !DIExpression()), !dbg !3138
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3139, metadata !DIExpression()), !dbg !3140
  store %struct.rcti* %slider, %struct.rcti** %slider.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %slider.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !3145, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata i32* %horizontal, metadata !3173, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.declare(metadata float* %rad, metadata !3175, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.declare(metadata i8* %outline, metadata !3177, metadata !DIExpression()), !dbg !3178
  store i8 0, i8* %outline, align 1, !dbg !3178
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !3179
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3180
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %0), !dbg !3181
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3182
  %call1 = call i32 @BLI_rcti_size_y(%struct.rcti* %1), !dbg !3183
  %cmp = icmp sgt i32 %call, %call1, !dbg !3184
  %conv = zext i1 %cmp to i32, !dbg !3184
  store i32 %conv, i32* %horizontal, align 4, !dbg !3185
  %2 = load i32, i32* %horizontal, align 4, !dbg !3186
  %tobool = icmp ne i32 %2, 0, !dbg !3186
  br i1 %tobool, label %if.then, label %if.else, !dbg !3188

if.then:                                          ; preds = %entry
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3189
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !3190
  %conv3 = sitofp i32 %call2 to float, !dbg !3190
  %mul = fmul float 5.000000e-01, %conv3, !dbg !3191
  store float %mul, float* %rad, align 4, !dbg !3192
  br label %if.end, !dbg !3193

if.else:                                          ; preds = %entry
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3194
  %call4 = call i32 @BLI_rcti_size_x(%struct.rcti* %4), !dbg !3195
  %conv5 = sitofp i32 %call4 to float, !dbg !3195
  %mul6 = fmul float 5.000000e-01, %conv5, !dbg !3196
  store float %mul6, float* %rad, align 4, !dbg !3197
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %horizontal, align 4, !dbg !3198
  %tobool7 = icmp ne i32 %5, 0, !dbg !3199
  %6 = zext i1 %tobool7 to i64, !dbg !3199
  %cond = select i1 %tobool7, i32 1, i32 0, !dbg !3199
  %conv8 = trunc i32 %cond to i8, !dbg !3199
  %shadedir = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 8, !dbg !3200
  store i8 %conv8, i8* %shadedir, align 1, !dbg !3201
  %7 = load i32, i32* %horizontal, align 4, !dbg !3202
  %tobool9 = icmp ne i32 %7, 0, !dbg !3202
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !3204

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !3205, metadata !DIExpression()), !dbg !3207
  %8 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3207
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %8, i32 0, i32 7, !dbg !3207
  %9 = load i16, i16* %shadetop, align 2, !dbg !3207
  store i16 %9, i16* %sw_ap, align 2, !dbg !3207
  %10 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3207
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %10, i32 0, i32 8, !dbg !3207
  %11 = load i16, i16* %shadedown, align 2, !dbg !3207
  %12 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3207
  %shadetop11 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %12, i32 0, i32 7, !dbg !3207
  store i16 %11, i16* %shadetop11, align 2, !dbg !3207
  %13 = load i16, i16* %sw_ap, align 2, !dbg !3207
  %14 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3207
  %shadedown12 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %14, i32 0, i32 8, !dbg !3207
  store i16 %13, i16* %shadedown12, align 2, !dbg !3207
  br label %if.end13, !dbg !3207

if.end13:                                         ; preds = %if.then10, %if.end
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3208
  %16 = load float, float* %rad, align 4, !dbg !3209
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %15, float %16), !dbg !3210
  %17 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3211
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %17), !dbg !3212
  %18 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3213
  %call14 = call i32 @BLI_rcti_size_x(%struct.rcti* %18), !dbg !3215
  %cmp15 = icmp slt i32 %call14, 2, !dbg !3216
  br i1 %cmp15, label %if.then20, label %lor.lhs.false, !dbg !3217

lor.lhs.false:                                    ; preds = %if.end13
  %19 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3218
  %call17 = call i32 @BLI_rcti_size_y(%struct.rcti* %19), !dbg !3219
  %cmp18 = icmp slt i32 %call17, 2, !dbg !3220
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !3221

if.then20:                                        ; preds = %lor.lhs.false, %if.end13
  br label %if.end152, !dbg !3222

if.else21:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i16* %sw_ap22, metadata !3224, metadata !DIExpression()), !dbg !3227
  %20 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3227
  %shadetop23 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %20, i32 0, i32 7, !dbg !3227
  %21 = load i16, i16* %shadetop23, align 2, !dbg !3227
  store i16 %21, i16* %sw_ap22, align 2, !dbg !3227
  %22 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3227
  %shadedown24 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %22, i32 0, i32 8, !dbg !3227
  %23 = load i16, i16* %shadedown24, align 2, !dbg !3227
  %24 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3227
  %shadetop25 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %24, i32 0, i32 7, !dbg !3227
  store i16 %23, i16* %shadetop25, align 2, !dbg !3227
  %25 = load i16, i16* %sw_ap22, align 2, !dbg !3227
  %26 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3227
  %shadedown26 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %26, i32 0, i32 8, !dbg !3227
  store i16 %25, i16* %shadedown26, align 2, !dbg !3227
  %27 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3228
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %27, i32 0, i32 1, !dbg !3229
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !3228
  %28 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3230
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %28, i32 0, i32 3, !dbg !3231
  %arraydecay27 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !3230
  call void @copy_v4_v4_char(i8* %arraydecay, i8* %arraydecay27), !dbg !3232
  %29 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3233
  %shadetop28 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %29, i32 0, i32 7, !dbg !3235
  %30 = load i16, i16* %shadetop28, align 2, !dbg !3235
  %conv29 = sext i16 %30 to i32, !dbg !3233
  %31 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3236
  %shadedown30 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %31, i32 0, i32 8, !dbg !3237
  %32 = load i16, i16* %shadedown30, align 2, !dbg !3237
  %conv31 = sext i16 %32 to i32, !dbg !3236
  %cmp32 = icmp sgt i32 %conv29, %conv31, !dbg !3238
  br i1 %cmp32, label %if.then34, label %if.else38, !dbg !3239

if.then34:                                        ; preds = %if.else21
  %33 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3240
  %shadetop35 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %33, i32 0, i32 7, !dbg !3241
  %34 = load i16, i16* %shadetop35, align 2, !dbg !3242
  %conv36 = sext i16 %34 to i32, !dbg !3242
  %add = add nsw i32 %conv36, 20, !dbg !3242
  %conv37 = trunc i32 %add to i16, !dbg !3242
  store i16 %conv37, i16* %shadetop35, align 2, !dbg !3242
  br label %if.end43, !dbg !3240

if.else38:                                        ; preds = %if.else21
  %35 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3243
  %shadedown39 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %35, i32 0, i32 8, !dbg !3244
  %36 = load i16, i16* %shadedown39, align 2, !dbg !3245
  %conv40 = sext i16 %36 to i32, !dbg !3245
  %add41 = add nsw i32 %conv40, 20, !dbg !3245
  %conv42 = trunc i32 %add41 to i16, !dbg !3245
  store i16 %conv42, i16* %shadedown39, align 2, !dbg !3245
  br label %if.end43

if.end43:                                         ; preds = %if.else38, %if.then34
  %37 = load i32, i32* %state.addr, align 4, !dbg !3246
  %and = and i32 %37, 1, !dbg !3248
  %tobool44 = icmp ne i32 %and, 0, !dbg !3248
  br i1 %tobool44, label %if.then45, label %if.end90, !dbg !3249

if.then45:                                        ; preds = %if.end43
  %38 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3250
  %inner46 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %38, i32 0, i32 1, !dbg !3252
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner46, i64 0, i64 0, !dbg !3250
  %39 = load i8, i8* %arrayidx, align 2, !dbg !3250
  %conv47 = zext i8 %39 to i32, !dbg !3250
  %cmp48 = icmp sge i32 %conv47, 250, !dbg !3253
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !3250

cond.true:                                        ; preds = %if.then45
  br label %cond.end, !dbg !3250

cond.false:                                       ; preds = %if.then45
  %40 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3254
  %inner50 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %40, i32 0, i32 1, !dbg !3255
  %arrayidx51 = getelementptr inbounds [4 x i8], [4 x i8]* %inner50, i64 0, i64 0, !dbg !3254
  %41 = load i8, i8* %arrayidx51, align 2, !dbg !3254
  %conv52 = zext i8 %41 to i32, !dbg !3254
  %add53 = add nsw i32 %conv52, 5, !dbg !3256
  br label %cond.end, !dbg !3250

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond54 = phi i32 [ 255, %cond.true ], [ %add53, %cond.false ], !dbg !3250
  %conv55 = trunc i32 %cond54 to i8, !dbg !3250
  %42 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3257
  %inner56 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %42, i32 0, i32 1, !dbg !3258
  %arrayidx57 = getelementptr inbounds [4 x i8], [4 x i8]* %inner56, i64 0, i64 0, !dbg !3257
  store i8 %conv55, i8* %arrayidx57, align 2, !dbg !3259
  %43 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3260
  %inner58 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %43, i32 0, i32 1, !dbg !3261
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %inner58, i64 0, i64 1, !dbg !3260
  %44 = load i8, i8* %arrayidx59, align 1, !dbg !3260
  %conv60 = zext i8 %44 to i32, !dbg !3260
  %cmp61 = icmp sge i32 %conv60, 250, !dbg !3262
  br i1 %cmp61, label %cond.true63, label %cond.false64, !dbg !3260

cond.true63:                                      ; preds = %cond.end
  br label %cond.end69, !dbg !3260

cond.false64:                                     ; preds = %cond.end
  %45 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3263
  %inner65 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %45, i32 0, i32 1, !dbg !3264
  %arrayidx66 = getelementptr inbounds [4 x i8], [4 x i8]* %inner65, i64 0, i64 1, !dbg !3263
  %46 = load i8, i8* %arrayidx66, align 1, !dbg !3263
  %conv67 = zext i8 %46 to i32, !dbg !3263
  %add68 = add nsw i32 %conv67, 5, !dbg !3265
  br label %cond.end69, !dbg !3260

cond.end69:                                       ; preds = %cond.false64, %cond.true63
  %cond70 = phi i32 [ 255, %cond.true63 ], [ %add68, %cond.false64 ], !dbg !3260
  %conv71 = trunc i32 %cond70 to i8, !dbg !3260
  %47 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3266
  %inner72 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %47, i32 0, i32 1, !dbg !3267
  %arrayidx73 = getelementptr inbounds [4 x i8], [4 x i8]* %inner72, i64 0, i64 1, !dbg !3266
  store i8 %conv71, i8* %arrayidx73, align 1, !dbg !3268
  %48 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3269
  %inner74 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %48, i32 0, i32 1, !dbg !3270
  %arrayidx75 = getelementptr inbounds [4 x i8], [4 x i8]* %inner74, i64 0, i64 2, !dbg !3269
  %49 = load i8, i8* %arrayidx75, align 2, !dbg !3269
  %conv76 = zext i8 %49 to i32, !dbg !3269
  %cmp77 = icmp sge i32 %conv76, 250, !dbg !3271
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !3269

cond.true79:                                      ; preds = %cond.end69
  br label %cond.end85, !dbg !3269

cond.false80:                                     ; preds = %cond.end69
  %50 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3272
  %inner81 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %50, i32 0, i32 1, !dbg !3273
  %arrayidx82 = getelementptr inbounds [4 x i8], [4 x i8]* %inner81, i64 0, i64 2, !dbg !3272
  %51 = load i8, i8* %arrayidx82, align 2, !dbg !3272
  %conv83 = zext i8 %51 to i32, !dbg !3272
  %add84 = add nsw i32 %conv83, 5, !dbg !3274
  br label %cond.end85, !dbg !3269

cond.end85:                                       ; preds = %cond.false80, %cond.true79
  %cond86 = phi i32 [ 255, %cond.true79 ], [ %add84, %cond.false80 ], !dbg !3269
  %conv87 = trunc i32 %cond86 to i8, !dbg !3269
  %52 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3275
  %inner88 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %52, i32 0, i32 1, !dbg !3276
  %arrayidx89 = getelementptr inbounds [4 x i8], [4 x i8]* %inner88, i64 0, i64 2, !dbg !3275
  store i8 %conv87, i8* %arrayidx89, align 2, !dbg !3277
  br label %if.end90, !dbg !3278

if.end90:                                         ; preds = %cond.end85, %if.end43
  %emboss = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 7, !dbg !3279
  store i8 0, i8* %emboss, align 2, !dbg !3280
  %53 = load i32, i32* %state.addr, align 4, !dbg !3281
  %and91 = and i32 %53, 4, !dbg !3283
  %tobool92 = icmp ne i32 %and91, 0, !dbg !3283
  br i1 %tobool92, label %if.then93, label %if.end97, !dbg !3284

if.then93:                                        ; preds = %if.end90
  call void @llvm.dbg.declare(metadata i8* %sw_ap94, metadata !3285, metadata !DIExpression()), !dbg !3288
  %54 = load i8, i8* %outline, align 1, !dbg !3288
  store i8 %54, i8* %sw_ap94, align 1, !dbg !3288
  %outline95 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !3288
  %55 = load i8, i8* %outline95, align 1, !dbg !3288
  store i8 %55, i8* %outline, align 1, !dbg !3288
  %56 = load i8, i8* %sw_ap94, align 1, !dbg !3288
  %outline96 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !3288
  store i8 %56, i8* %outline96, align 1, !dbg !3288
  br label %if.end97, !dbg !3289

if.end97:                                         ; preds = %if.then93, %if.end90
  %57 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3290
  %58 = load float, float* %rad, align 4, !dbg !3291
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %57, float %58), !dbg !3292
  %59 = load i32, i32* %state.addr, align 4, !dbg !3293
  %and98 = and i32 %59, 2, !dbg !3295
  %tobool99 = icmp ne i32 %and98, 0, !dbg !3295
  br i1 %tobool99, label %if.then100, label %if.end144, !dbg !3296

if.then100:                                       ; preds = %if.end97
  %60 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3297
  %item101 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %60, i32 0, i32 3, !dbg !3300
  %arrayidx102 = getelementptr inbounds [4 x i8], [4 x i8]* %item101, i64 0, i64 0, !dbg !3297
  %61 = load i8, i8* %arrayidx102, align 2, !dbg !3297
  %conv103 = zext i8 %61 to i32, !dbg !3297
  %cmp104 = icmp sgt i32 %conv103, 48, !dbg !3301
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !3302

if.then106:                                       ; preds = %if.then100
  %62 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3303
  %item107 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %62, i32 0, i32 3, !dbg !3304
  %arrayidx108 = getelementptr inbounds [4 x i8], [4 x i8]* %item107, i64 0, i64 0, !dbg !3303
  %63 = load i8, i8* %arrayidx108, align 2, !dbg !3305
  %conv109 = zext i8 %63 to i32, !dbg !3305
  %sub = sub nsw i32 %conv109, 48, !dbg !3305
  %conv110 = trunc i32 %sub to i8, !dbg !3305
  store i8 %conv110, i8* %arrayidx108, align 2, !dbg !3305
  br label %if.end111, !dbg !3303

if.end111:                                        ; preds = %if.then106, %if.then100
  %64 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3306
  %item112 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %64, i32 0, i32 3, !dbg !3308
  %arrayidx113 = getelementptr inbounds [4 x i8], [4 x i8]* %item112, i64 0, i64 1, !dbg !3306
  %65 = load i8, i8* %arrayidx113, align 1, !dbg !3306
  %conv114 = zext i8 %65 to i32, !dbg !3306
  %cmp115 = icmp sgt i32 %conv114, 48, !dbg !3309
  br i1 %cmp115, label %if.then117, label %if.end123, !dbg !3310

if.then117:                                       ; preds = %if.end111
  %66 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3311
  %item118 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %66, i32 0, i32 3, !dbg !3312
  %arrayidx119 = getelementptr inbounds [4 x i8], [4 x i8]* %item118, i64 0, i64 1, !dbg !3311
  %67 = load i8, i8* %arrayidx119, align 1, !dbg !3313
  %conv120 = zext i8 %67 to i32, !dbg !3313
  %sub121 = sub nsw i32 %conv120, 48, !dbg !3313
  %conv122 = trunc i32 %sub121 to i8, !dbg !3313
  store i8 %conv122, i8* %arrayidx119, align 1, !dbg !3313
  br label %if.end123, !dbg !3311

if.end123:                                        ; preds = %if.then117, %if.end111
  %68 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3314
  %item124 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %68, i32 0, i32 3, !dbg !3316
  %arrayidx125 = getelementptr inbounds [4 x i8], [4 x i8]* %item124, i64 0, i64 2, !dbg !3314
  %69 = load i8, i8* %arrayidx125, align 2, !dbg !3314
  %conv126 = zext i8 %69 to i32, !dbg !3314
  %cmp127 = icmp sgt i32 %conv126, 48, !dbg !3317
  br i1 %cmp127, label %if.then129, label %if.end135, !dbg !3318

if.then129:                                       ; preds = %if.end123
  %70 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3319
  %item130 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %70, i32 0, i32 3, !dbg !3320
  %arrayidx131 = getelementptr inbounds [4 x i8], [4 x i8]* %item130, i64 0, i64 2, !dbg !3319
  %71 = load i8, i8* %arrayidx131, align 2, !dbg !3321
  %conv132 = zext i8 %71 to i32, !dbg !3321
  %sub133 = sub nsw i32 %conv132, 48, !dbg !3321
  %conv134 = trunc i32 %sub133 to i8, !dbg !3321
  store i8 %conv134, i8* %arrayidx131, align 2, !dbg !3321
  br label %if.end135, !dbg !3319

if.end135:                                        ; preds = %if.then129, %if.end123
  %72 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3322
  %item136 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %72, i32 0, i32 3, !dbg !3323
  %arrayidx137 = getelementptr inbounds [4 x i8], [4 x i8]* %item136, i64 0, i64 3, !dbg !3322
  store i8 -1, i8* %arrayidx137, align 1, !dbg !3324
  %73 = load i32, i32* %horizontal, align 4, !dbg !3325
  %tobool138 = icmp ne i32 %73, 0, !dbg !3325
  br i1 %tobool138, label %if.then139, label %if.else140, !dbg !3327

if.then139:                                       ; preds = %if.end135
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 9, !dbg !3328
  %74 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3330
  call void @widget_scroll_circle(%struct.uiWidgetTrias* %tria1, %struct.rcti* %74, float 0x3FE3333340000000, i8 zeroext 108), !dbg !3331
  %tria2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 10, !dbg !3332
  %75 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3333
  call void @widget_scroll_circle(%struct.uiWidgetTrias* %tria2, %struct.rcti* %75, float 0x3FE3333340000000, i8 zeroext 114), !dbg !3334
  br label %if.end143, !dbg !3335

if.else140:                                       ; preds = %if.end135
  %tria1141 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 9, !dbg !3336
  %76 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3338
  call void @widget_scroll_circle(%struct.uiWidgetTrias* %tria1141, %struct.rcti* %76, float 0x3FE3333340000000, i8 zeroext 98), !dbg !3339
  %tria2142 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 10, !dbg !3340
  %77 = load %struct.rcti*, %struct.rcti** %slider.addr, align 8, !dbg !3341
  call void @widget_scroll_circle(%struct.uiWidgetTrias* %tria2142, %struct.rcti* %77, float 0x3FE3333340000000, i8 zeroext 116), !dbg !3342
  br label %if.end143

if.end143:                                        ; preds = %if.else140, %if.then139
  br label %if.end144, !dbg !3343

if.end144:                                        ; preds = %if.end143, %if.end97
  %78 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3344
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %78), !dbg !3345
  %79 = load i32, i32* %state.addr, align 4, !dbg !3346
  %and145 = and i32 %79, 4, !dbg !3348
  %tobool146 = icmp ne i32 %and145, 0, !dbg !3348
  br i1 %tobool146, label %if.then147, label %if.end151, !dbg !3349

if.then147:                                       ; preds = %if.end144
  call void @llvm.dbg.declare(metadata i8* %sw_ap148, metadata !3350, metadata !DIExpression()), !dbg !3353
  %80 = load i8, i8* %outline, align 1, !dbg !3353
  store i8 %80, i8* %sw_ap148, align 1, !dbg !3353
  %outline149 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !3353
  %81 = load i8, i8* %outline149, align 1, !dbg !3353
  store i8 %81, i8* %outline, align 1, !dbg !3353
  %82 = load i8, i8* %sw_ap148, align 1, !dbg !3353
  %outline150 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !3353
  store i8 %82, i8* %outline150, align 1, !dbg !3353
  br label %if.end151, !dbg !3354

if.end151:                                        ; preds = %if.then147, %if.end144
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then20
  ret void, !dbg !3355
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_init(%struct.uiWidgetBase* %wtb) #0 !dbg !3356 {
entry:
  %wtb.addr = alloca %struct.uiWidgetBase*, align 8
  store %struct.uiWidgetBase* %wtb, %struct.uiWidgetBase** %wtb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wtb.addr, metadata !3360, metadata !DIExpression()), !dbg !3361
  %0 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3362
  %halfwayvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %0, i32 0, i32 1, !dbg !3363
  store i32 0, i32* %halfwayvert, align 4, !dbg !3364
  %1 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3365
  %totvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %1, i32 0, i32 0, !dbg !3366
  store i32 0, i32* %totvert, align 8, !dbg !3367
  %2 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3368
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %2, i32 0, i32 9, !dbg !3369
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria1, i32 0, i32 0, !dbg !3370
  store i32 0, i32* %tot, align 8, !dbg !3371
  %3 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3372
  %tria2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %3, i32 0, i32 10, !dbg !3373
  %tot1 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria2, i32 0, i32 0, !dbg !3374
  store i32 0, i32* %tot1, align 8, !dbg !3375
  %4 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3376
  %inner = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %4, i32 0, i32 5, !dbg !3377
  store i8 1, i8* %inner, align 8, !dbg !3378
  %5 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3379
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %5, i32 0, i32 6, !dbg !3380
  store i8 1, i8* %outline, align 1, !dbg !3381
  %6 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3382
  %emboss = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %6, i32 0, i32 7, !dbg !3383
  store i8 1, i8* %emboss, align 2, !dbg !3384
  %7 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3385
  %shadedir = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %7, i32 0, i32 8, !dbg !3386
  store i8 1, i8* %shadedir, align 1, !dbg !3387
  ret void, !dbg !3388
}

; Function Attrs: noinline nounwind uwtable
define internal void @round_box_edges(%struct.uiWidgetBase* %wt, i32 %roundboxalign, %struct.rcti* %rect, float %rad) #0 !dbg !3389 {
entry:
  %wt.addr = alloca %struct.uiWidgetBase*, align 8
  %roundboxalign.addr = alloca i32, align 4
  %rect.addr = alloca %struct.rcti*, align 8
  %rad.addr = alloca float, align 4
  store %struct.uiWidgetBase* %wt, %struct.uiWidgetBase** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wt.addr, metadata !3392, metadata !DIExpression()), !dbg !3393
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  %0 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !3400
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !3401
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3402
  %3 = load float, float* %rad.addr, align 4, !dbg !3403
  %4 = load float, float* %rad.addr, align 4, !dbg !3404
  %5 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !3405
  %sub = fsub float %4, %5, !dbg !3406
  call void @round_box__edges(%struct.uiWidgetBase* %0, i32 %1, %struct.rcti* %2, float %3, float %sub), !dbg !3407
  ret void, !dbg !3408
}

; Function Attrs: noinline nounwind uwtable
define internal void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %wcol) #0 !dbg !3409 {
entry:
  %wtb.addr = alloca %struct.uiWidgetBase*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %j = alloca i32, align 4
  %a = alloca i32, align 4
  %inner_v_half = alloca [36 x [2 x float]], align 16
  %x_mid = alloca float, align 4
  %col1 = alloca [4 x i8], align 1
  %col2 = alloca [4 x i8], align 1
  %col_array = alloca [144 x i8], align 16
  %col_pt = alloca i8*, align 8
  %quad_strip = alloca [74 x [2 x float]], align 16
  %quad_strip_emboss = alloca [72 x [2 x float]], align 16
  %tcol = alloca [4 x i8], align 1
  %emboss112 = alloca [4 x i8], align 1
  %tcol152 = alloca [4 x i8], align 1
  store %struct.uiWidgetBase* %wtb, %struct.uiWidgetBase** %wtb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wtb.addr, metadata !3412, metadata !DIExpression()), !dbg !3413
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !3414, metadata !DIExpression()), !dbg !3415
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3416, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3418, metadata !DIExpression()), !dbg !3419
  call void @glEnable(i32 3042), !dbg !3420
  %0 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3421
  %inner = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %0, i32 0, i32 5, !dbg !3423
  %1 = load i8, i8* %inner, align 8, !dbg !3423
  %tobool = icmp ne i8 %1, 0, !dbg !3421
  br i1 %tobool, label %if.then, label %if.end86, !dbg !3424

if.then:                                          ; preds = %entry
  %2 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3425
  %shaded = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %2, i32 0, i32 6, !dbg !3428
  %3 = load i16, i16* %shaded, align 2, !dbg !3428
  %conv = sext i16 %3 to i32, !dbg !3425
  %cmp = icmp eq i32 %conv, 0, !dbg !3429
  br i1 %cmp, label %if.then2, label %if.else61, !dbg !3430

if.then2:                                         ; preds = %if.then
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3431
  %alpha_check = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %4, i32 0, i32 9, !dbg !3434
  %5 = load i16, i16* %alpha_check, align 2, !dbg !3434
  %tobool3 = icmp ne i16 %5, 0, !dbg !3431
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3435

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata [36 x [2 x float]]* %inner_v_half, metadata !3436, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata float* %x_mid, metadata !3439, metadata !DIExpression()), !dbg !3440
  store float 0.000000e+00, float* %x_mid, align 4, !dbg !3440
  call void @glColor4ub(i8 zeroext 100, i8 zeroext 100, i8 zeroext 100, i8 zeroext -1), !dbg !3441
  call void @glEnableClientState(i32 32884), !dbg !3442
  %6 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3443
  %inner_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %6, i32 0, i32 3, !dbg !3444
  %arraydecay = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v, i64 0, i64 0, !dbg !3443
  %7 = bitcast [2 x float]* %arraydecay to i8*, !dbg !3443
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %7), !dbg !3445
  %8 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3446
  %totvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %8, i32 0, i32 0, !dbg !3447
  %9 = load i32, i32* %totvert, align 8, !dbg !3447
  call void @glDrawArrays(i32 9, i32 0, i32 %9), !dbg !3448
  call void @glEnable(i32 2882), !dbg !3449
  call void @glColor4ub(i8 zeroext -96, i8 zeroext -96, i8 zeroext -96, i8 zeroext -1), !dbg !3450
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_checker_8px, i64 0, i64 0)), !dbg !3451
  %10 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3452
  %inner_v5 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %10, i32 0, i32 3, !dbg !3453
  %arraydecay6 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v5, i64 0, i64 0, !dbg !3452
  %11 = bitcast [2 x float]* %arraydecay6 to i8*, !dbg !3452
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %11), !dbg !3454
  %12 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3455
  %totvert7 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %12, i32 0, i32 0, !dbg !3456
  %13 = load i32, i32* %totvert7, align 8, !dbg !3456
  call void @glDrawArrays(i32 9, i32 0, i32 %13), !dbg !3457
  call void @glDisable(i32 2882), !dbg !3458
  call void @glBlendFunc(i32 770, i32 771), !dbg !3459
  %14 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3460
  %inner8 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %14, i32 0, i32 1, !dbg !3461
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %inner8, i64 0, i64 0, !dbg !3460
  call void @glColor4ubv(i8* %arraydecay9), !dbg !3462
  store i32 0, i32* %a, align 4, !dbg !3463
  br label %for.cond, !dbg !3465

for.cond:                                         ; preds = %for.inc, %if.then4
  %15 = load i32, i32* %a, align 4, !dbg !3466
  %16 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3468
  %totvert10 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %16, i32 0, i32 0, !dbg !3469
  %17 = load i32, i32* %totvert10, align 8, !dbg !3469
  %cmp11 = icmp slt i32 %15, %17, !dbg !3470
  br i1 %cmp11, label %for.body, label %for.end, !dbg !3471

for.body:                                         ; preds = %for.cond
  %18 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3472
  %inner_v13 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %18, i32 0, i32 3, !dbg !3474
  %19 = load i32, i32* %a, align 4, !dbg !3475
  %idxprom = sext i32 %19 to i64, !dbg !3472
  %arrayidx = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v13, i64 0, i64 %idxprom, !dbg !3472
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !3472
  %20 = load float, float* %arrayidx14, align 8, !dbg !3472
  %21 = load float, float* %x_mid, align 4, !dbg !3476
  %add = fadd float %21, %20, !dbg !3476
  store float %add, float* %x_mid, align 4, !dbg !3476
  br label %for.inc, !dbg !3477

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %a, align 4, !dbg !3478
  %inc = add nsw i32 %22, 1, !dbg !3478
  store i32 %inc, i32* %a, align 4, !dbg !3478
  br label %for.cond, !dbg !3479, !llvm.loop !3480

for.end:                                          ; preds = %for.cond
  %23 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3482
  %totvert15 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %23, i32 0, i32 0, !dbg !3483
  %24 = load i32, i32* %totvert15, align 8, !dbg !3483
  %conv16 = sitofp i32 %24 to float, !dbg !3482
  %25 = load float, float* %x_mid, align 4, !dbg !3484
  %div = fdiv float %25, %conv16, !dbg !3484
  store float %div, float* %x_mid, align 4, !dbg !3484
  %26 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3485
  %inner_v17 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %26, i32 0, i32 3, !dbg !3486
  %arraydecay18 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v17, i64 0, i64 0, !dbg !3485
  %27 = bitcast [2 x float]* %arraydecay18 to i8*, !dbg !3485
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %27), !dbg !3487
  %28 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3488
  %totvert19 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %28, i32 0, i32 0, !dbg !3489
  %29 = load i32, i32* %totvert19, align 8, !dbg !3489
  call void @glDrawArrays(i32 9, i32 0, i32 %29), !dbg !3490
  %30 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3491
  %inner20 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %30, i32 0, i32 1, !dbg !3492
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %inner20, i64 0, i64 0, !dbg !3491
  %31 = load i8, i8* %arrayidx21, align 2, !dbg !3491
  %32 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3493
  %inner22 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %32, i32 0, i32 1, !dbg !3494
  %arrayidx23 = getelementptr inbounds [4 x i8], [4 x i8]* %inner22, i64 0, i64 1, !dbg !3493
  %33 = load i8, i8* %arrayidx23, align 1, !dbg !3493
  %34 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3495
  %inner24 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %34, i32 0, i32 1, !dbg !3496
  %arrayidx25 = getelementptr inbounds [4 x i8], [4 x i8]* %inner24, i64 0, i64 2, !dbg !3495
  %35 = load i8, i8* %arrayidx25, align 2, !dbg !3495
  call void @glColor4ub(i8 zeroext %31, i8 zeroext %33, i8 zeroext %35, i8 zeroext -1), !dbg !3497
  store i32 0, i32* %a, align 4, !dbg !3498
  br label %for.cond26, !dbg !3500

for.cond26:                                       ; preds = %for.inc51, %for.end
  %36 = load i32, i32* %a, align 4, !dbg !3501
  %37 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3503
  %totvert27 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %37, i32 0, i32 0, !dbg !3504
  %38 = load i32, i32* %totvert27, align 8, !dbg !3504
  %cmp28 = icmp slt i32 %36, %38, !dbg !3505
  br i1 %cmp28, label %for.body30, label %for.end53, !dbg !3506

for.body30:                                       ; preds = %for.cond26
  %39 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3507
  %inner_v31 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %39, i32 0, i32 3, !dbg !3507
  %40 = load i32, i32* %a, align 4, !dbg !3507
  %idxprom32 = sext i32 %40 to i64, !dbg !3507
  %arrayidx33 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v31, i64 0, i64 %idxprom32, !dbg !3507
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !3507
  %41 = load float, float* %arrayidx34, align 8, !dbg !3507
  %42 = load float, float* %x_mid, align 4, !dbg !3507
  %cmp35 = fcmp olt float %41, %42, !dbg !3507
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !3507

cond.true:                                        ; preds = %for.body30
  %43 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3507
  %inner_v37 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %43, i32 0, i32 3, !dbg !3507
  %44 = load i32, i32* %a, align 4, !dbg !3507
  %idxprom38 = sext i32 %44 to i64, !dbg !3507
  %arrayidx39 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v37, i64 0, i64 %idxprom38, !dbg !3507
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !3507
  %45 = load float, float* %arrayidx40, align 8, !dbg !3507
  br label %cond.end, !dbg !3507

cond.false:                                       ; preds = %for.body30
  %46 = load float, float* %x_mid, align 4, !dbg !3507
  br label %cond.end, !dbg !3507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %45, %cond.true ], [ %46, %cond.false ], !dbg !3507
  %47 = load i32, i32* %a, align 4, !dbg !3509
  %idxprom41 = sext i32 %47 to i64, !dbg !3510
  %arrayidx42 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v_half, i64 0, i64 %idxprom41, !dbg !3510
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 0, !dbg !3510
  store float %cond, float* %arrayidx43, align 8, !dbg !3511
  %48 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3512
  %inner_v44 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %48, i32 0, i32 3, !dbg !3513
  %49 = load i32, i32* %a, align 4, !dbg !3514
  %idxprom45 = sext i32 %49 to i64, !dbg !3512
  %arrayidx46 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v44, i64 0, i64 %idxprom45, !dbg !3512
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx46, i64 0, i64 1, !dbg !3512
  %50 = load float, float* %arrayidx47, align 4, !dbg !3512
  %51 = load i32, i32* %a, align 4, !dbg !3515
  %idxprom48 = sext i32 %51 to i64, !dbg !3516
  %arrayidx49 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v_half, i64 0, i64 %idxprom48, !dbg !3516
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx49, i64 0, i64 1, !dbg !3516
  store float %50, float* %arrayidx50, align 4, !dbg !3517
  br label %for.inc51, !dbg !3518

for.inc51:                                        ; preds = %cond.end
  %52 = load i32, i32* %a, align 4, !dbg !3519
  %inc52 = add nsw i32 %52, 1, !dbg !3519
  store i32 %inc52, i32* %a, align 4, !dbg !3519
  br label %for.cond26, !dbg !3520, !llvm.loop !3521

for.end53:                                        ; preds = %for.cond26
  %arraydecay54 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v_half, i64 0, i64 0, !dbg !3523
  %53 = bitcast [2 x float]* %arraydecay54 to i8*, !dbg !3523
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %53), !dbg !3524
  %54 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3525
  %totvert55 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %54, i32 0, i32 0, !dbg !3526
  %55 = load i32, i32* %totvert55, align 8, !dbg !3526
  call void @glDrawArrays(i32 9, i32 0, i32 %55), !dbg !3527
  call void @glDisableClientState(i32 32884), !dbg !3528
  br label %if.end, !dbg !3529

if.else:                                          ; preds = %if.then2
  %56 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3530
  %inner56 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %56, i32 0, i32 1, !dbg !3532
  %arraydecay57 = getelementptr inbounds [4 x i8], [4 x i8]* %inner56, i64 0, i64 0, !dbg !3530
  call void @glColor4ubv(i8* %arraydecay57), !dbg !3533
  call void @glEnableClientState(i32 32884), !dbg !3534
  %57 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3535
  %inner_v58 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %57, i32 0, i32 3, !dbg !3536
  %arraydecay59 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v58, i64 0, i64 0, !dbg !3535
  %58 = bitcast [2 x float]* %arraydecay59 to i8*, !dbg !3535
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %58), !dbg !3537
  %59 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3538
  %totvert60 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %59, i32 0, i32 0, !dbg !3539
  %60 = load i32, i32* %totvert60, align 8, !dbg !3539
  call void @glDrawArrays(i32 9, i32 0, i32 %60), !dbg !3540
  call void @glDisableClientState(i32 32884), !dbg !3541
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end53
  br label %if.end85, !dbg !3542

if.else61:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata [4 x i8]* %col1, metadata !3543, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.declare(metadata [4 x i8]* %col2, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.declare(metadata [144 x i8]* %col_array, metadata !3548, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.declare(metadata i8** %col_pt, metadata !3553, metadata !DIExpression()), !dbg !3554
  %arraydecay62 = getelementptr inbounds [144 x i8], [144 x i8]* %col_array, i64 0, i64 0, !dbg !3555
  store i8* %arraydecay62, i8** %col_pt, align 8, !dbg !3554
  %arraydecay63 = getelementptr inbounds [4 x i8], [4 x i8]* %col1, i64 0, i64 0, !dbg !3556
  %arraydecay64 = getelementptr inbounds [4 x i8], [4 x i8]* %col2, i64 0, i64 0, !dbg !3557
  %61 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3558
  %inner65 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %61, i32 0, i32 1, !dbg !3559
  %arraydecay66 = getelementptr inbounds [4 x i8], [4 x i8]* %inner65, i64 0, i64 0, !dbg !3558
  %62 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3560
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %62, i32 0, i32 7, !dbg !3561
  %63 = load i16, i16* %shadetop, align 2, !dbg !3561
  %64 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3562
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %64, i32 0, i32 8, !dbg !3563
  %65 = load i16, i16* %shadedown, align 2, !dbg !3563
  call void @shadecolors4(i8* %arraydecay63, i8* %arraydecay64, i8* %arraydecay66, i16 signext %63, i16 signext %65), !dbg !3564
  call void @glShadeModel(i32 7425), !dbg !3565
  store i32 0, i32* %a, align 4, !dbg !3566
  br label %for.cond67, !dbg !3568

for.cond67:                                       ; preds = %for.inc78, %if.else61
  %66 = load i32, i32* %a, align 4, !dbg !3569
  %67 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3571
  %totvert68 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %67, i32 0, i32 0, !dbg !3572
  %68 = load i32, i32* %totvert68, align 8, !dbg !3572
  %cmp69 = icmp slt i32 %66, %68, !dbg !3573
  br i1 %cmp69, label %for.body71, label %for.end80, !dbg !3574

for.body71:                                       ; preds = %for.cond67
  %69 = load i8*, i8** %col_pt, align 8, !dbg !3575
  %arraydecay72 = getelementptr inbounds [4 x i8], [4 x i8]* %col1, i64 0, i64 0, !dbg !3577
  %arraydecay73 = getelementptr inbounds [4 x i8], [4 x i8]* %col2, i64 0, i64 0, !dbg !3578
  %70 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3579
  %inner_uv = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %70, i32 0, i32 4, !dbg !3580
  %71 = load i32, i32* %a, align 4, !dbg !3581
  %idxprom74 = sext i32 %71 to i64, !dbg !3579
  %arrayidx75 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv, i64 0, i64 %idxprom74, !dbg !3579
  %72 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3582
  %shadedir = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %72, i32 0, i32 8, !dbg !3583
  %73 = load i8, i8* %shadedir, align 1, !dbg !3583
  %idxprom76 = zext i8 %73 to i64, !dbg !3579
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx75, i64 0, i64 %idxprom76, !dbg !3579
  %74 = load float, float* %arrayidx77, align 4, !dbg !3579
  call void @round_box_shade_col4_r(i8* %69, i8* %arraydecay72, i8* %arraydecay73, float %74), !dbg !3584
  br label %for.inc78, !dbg !3585

for.inc78:                                        ; preds = %for.body71
  %75 = load i32, i32* %a, align 4, !dbg !3586
  %inc79 = add nsw i32 %75, 1, !dbg !3586
  store i32 %inc79, i32* %a, align 4, !dbg !3586
  %76 = load i8*, i8** %col_pt, align 8, !dbg !3587
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 4, !dbg !3587
  store i8* %add.ptr, i8** %col_pt, align 8, !dbg !3587
  br label %for.cond67, !dbg !3588, !llvm.loop !3589

for.end80:                                        ; preds = %for.cond67
  call void @glEnableClientState(i32 32884), !dbg !3591
  call void @glEnableClientState(i32 32886), !dbg !3592
  %77 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3593
  %inner_v81 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %77, i32 0, i32 3, !dbg !3594
  %arraydecay82 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v81, i64 0, i64 0, !dbg !3593
  %78 = bitcast [2 x float]* %arraydecay82 to i8*, !dbg !3593
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %78), !dbg !3595
  %arraydecay83 = getelementptr inbounds [144 x i8], [144 x i8]* %col_array, i64 0, i64 0, !dbg !3596
  call void @glColorPointer(i32 4, i32 5121, i32 0, i8* %arraydecay83), !dbg !3597
  %79 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3598
  %totvert84 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %79, i32 0, i32 0, !dbg !3599
  %80 = load i32, i32* %totvert84, align 8, !dbg !3599
  call void @glDrawArrays(i32 9, i32 0, i32 %80), !dbg !3600
  call void @glDisableClientState(i32 32884), !dbg !3601
  call void @glDisableClientState(i32 32886), !dbg !3602
  call void @glShadeModel(i32 7424), !dbg !3603
  br label %if.end85

if.end85:                                         ; preds = %for.end80, %if.end
  br label %if.end86, !dbg !3604

if.end86:                                         ; preds = %if.end85, %entry
  %81 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3605
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %81, i32 0, i32 6, !dbg !3607
  %82 = load i8, i8* %outline, align 1, !dbg !3607
  %tobool87 = icmp ne i8 %82, 0, !dbg !3605
  br i1 %tobool87, label %if.then88, label %if.end147, !dbg !3608

if.then88:                                        ; preds = %if.end86
  call void @llvm.dbg.declare(metadata [74 x [2 x float]]* %quad_strip, metadata !3609, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.declare(metadata [72 x [2 x float]]* %quad_strip_emboss, metadata !3615, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.declare(metadata [4 x i8]* %tcol, metadata !3620, metadata !DIExpression()), !dbg !3623
  %arrayinit.begin = getelementptr inbounds [4 x i8], [4 x i8]* %tcol, i64 0, i64 0, !dbg !3624
  %83 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3625
  %outline89 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %83, i32 0, i32 0, !dbg !3626
  %arrayidx90 = getelementptr inbounds [4 x i8], [4 x i8]* %outline89, i64 0, i64 0, !dbg !3625
  %84 = load i8, i8* %arrayidx90, align 2, !dbg !3625
  store i8 %84, i8* %arrayinit.begin, align 1, !dbg !3624
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !3624
  %85 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3627
  %outline91 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %85, i32 0, i32 0, !dbg !3628
  %arrayidx92 = getelementptr inbounds [4 x i8], [4 x i8]* %outline91, i64 0, i64 1, !dbg !3627
  %86 = load i8, i8* %arrayidx92, align 1, !dbg !3627
  store i8 %86, i8* %arrayinit.element, align 1, !dbg !3624
  %arrayinit.element93 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !3624
  %87 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3629
  %outline94 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %87, i32 0, i32 0, !dbg !3630
  %arrayidx95 = getelementptr inbounds [4 x i8], [4 x i8]* %outline94, i64 0, i64 2, !dbg !3629
  %88 = load i8, i8* %arrayidx95, align 2, !dbg !3629
  store i8 %88, i8* %arrayinit.element93, align 1, !dbg !3624
  %arrayinit.element96 = getelementptr inbounds i8, i8* %arrayinit.element93, i64 1, !dbg !3624
  %89 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3631
  %outline97 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %89, i32 0, i32 0, !dbg !3632
  %arrayidx98 = getelementptr inbounds [4 x i8], [4 x i8]* %outline97, i64 0, i64 3, !dbg !3631
  %90 = load i8, i8* %arrayidx98, align 1, !dbg !3631
  %conv99 = zext i8 %90 to i32, !dbg !3631
  %div100 = sdiv i32 %conv99, 8, !dbg !3633
  %conv101 = trunc i32 %div100 to i8, !dbg !3631
  store i8 %conv101, i8* %arrayinit.element96, align 1, !dbg !3624
  %91 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3634
  %92 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3635
  %totvert102 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %92, i32 0, i32 0, !dbg !3636
  %93 = load i32, i32* %totvert102, align 8, !dbg !3636
  %arraydecay103 = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !3637
  call void @widget_verts_to_quad_strip(%struct.uiWidgetBase* %91, i32 %93, [2 x float]* %arraydecay103), !dbg !3638
  %94 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3639
  %emboss = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %94, i32 0, i32 7, !dbg !3641
  %95 = load i8, i8* %emboss, align 2, !dbg !3641
  %tobool104 = icmp ne i8 %95, 0, !dbg !3639
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !3642

if.then105:                                       ; preds = %if.then88
  %96 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3643
  %97 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3645
  %halfwayvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %97, i32 0, i32 1, !dbg !3646
  %98 = load i32, i32* %halfwayvert, align 4, !dbg !3646
  %arraydecay106 = getelementptr inbounds [72 x [2 x float]], [72 x [2 x float]]* %quad_strip_emboss, i64 0, i64 0, !dbg !3647
  call void @widget_verts_to_quad_strip_open(%struct.uiWidgetBase* %96, i32 %98, [2 x float]* %arraydecay106), !dbg !3648
  br label %if.end107, !dbg !3649

if.end107:                                        ; preds = %if.then105, %if.then88
  call void @glEnableClientState(i32 32884), !dbg !3650
  store i32 0, i32* %j, align 4, !dbg !3651
  br label %for.cond108, !dbg !3653

for.cond108:                                      ; preds = %for.inc144, %if.end107
  %99 = load i32, i32* %j, align 4, !dbg !3654
  %cmp109 = icmp slt i32 %99, 8, !dbg !3656
  br i1 %cmp109, label %for.body111, label %for.end146, !dbg !3657

for.body111:                                      ; preds = %for.cond108
  call void @llvm.dbg.declare(metadata [4 x i8]* %emboss112, metadata !3658, metadata !DIExpression()), !dbg !3660
  %100 = load i32, i32* %j, align 4, !dbg !3661
  %idxprom113 = sext i32 %100 to i64, !dbg !3662
  %arrayidx114 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom113, !dbg !3662
  %arrayidx115 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx114, i64 0, i64 0, !dbg !3662
  %101 = load float, float* %arrayidx115, align 8, !dbg !3662
  %102 = load i32, i32* %j, align 4, !dbg !3663
  %idxprom116 = sext i32 %102 to i64, !dbg !3664
  %arrayidx117 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom116, !dbg !3664
  %arrayidx118 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx117, i64 0, i64 1, !dbg !3664
  %103 = load float, float* %arrayidx118, align 4, !dbg !3664
  call void @glTranslatef(float %101, float %103, float 0.000000e+00), !dbg !3665
  %arraydecay119 = getelementptr inbounds [4 x i8], [4 x i8]* %tcol, i64 0, i64 0, !dbg !3666
  call void @glColor4ubv(i8* %arraydecay119), !dbg !3667
  %arraydecay120 = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !3668
  %104 = bitcast [2 x float]* %arraydecay120 to i8*, !dbg !3668
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %104), !dbg !3669
  %105 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3670
  %totvert121 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %105, i32 0, i32 0, !dbg !3671
  %106 = load i32, i32* %totvert121, align 8, !dbg !3671
  %mul = mul nsw i32 %106, 2, !dbg !3672
  %add122 = add nsw i32 %mul, 2, !dbg !3673
  call void @glDrawArrays(i32 8, i32 0, i32 %add122), !dbg !3674
  %arraydecay123 = getelementptr inbounds [4 x i8], [4 x i8]* %emboss112, i64 0, i64 0, !dbg !3675
  call void @UI_GetThemeColor4ubv(i32 175, i8* %arraydecay123), !dbg !3676
  %107 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3677
  %emboss124 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %107, i32 0, i32 7, !dbg !3679
  %108 = load i8, i8* %emboss124, align 2, !dbg !3679
  %tobool125 = icmp ne i8 %108, 0, !dbg !3677
  br i1 %tobool125, label %if.then126, label %if.end136, !dbg !3680

if.then126:                                       ; preds = %for.body111
  %arraydecay127 = getelementptr inbounds [4 x i8], [4 x i8]* %emboss112, i64 0, i64 0, !dbg !3681
  call void @UI_GetThemeColor4ubv(i32 175, i8* %arraydecay127), !dbg !3683
  %arrayidx128 = getelementptr inbounds [4 x i8], [4 x i8]* %emboss112, i64 0, i64 3, !dbg !3684
  %109 = load i8, i8* %arrayidx128, align 1, !dbg !3684
  %tobool129 = icmp ne i8 %109, 0, !dbg !3684
  br i1 %tobool129, label %if.then130, label %if.end135, !dbg !3686

if.then130:                                       ; preds = %if.then126
  %arraydecay131 = getelementptr inbounds [4 x i8], [4 x i8]* %emboss112, i64 0, i64 0, !dbg !3687
  call void @glColor4ubv(i8* %arraydecay131), !dbg !3689
  %arraydecay132 = getelementptr inbounds [72 x [2 x float]], [72 x [2 x float]]* %quad_strip_emboss, i64 0, i64 0, !dbg !3690
  %110 = bitcast [2 x float]* %arraydecay132 to i8*, !dbg !3690
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %110), !dbg !3691
  %111 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3692
  %halfwayvert133 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %111, i32 0, i32 1, !dbg !3693
  %112 = load i32, i32* %halfwayvert133, align 4, !dbg !3693
  %mul134 = mul nsw i32 %112, 2, !dbg !3694
  call void @glDrawArrays(i32 8, i32 0, i32 %mul134), !dbg !3695
  br label %if.end135, !dbg !3696

if.end135:                                        ; preds = %if.then130, %if.then126
  br label %if.end136, !dbg !3697

if.end136:                                        ; preds = %if.end135, %for.body111
  %113 = load i32, i32* %j, align 4, !dbg !3698
  %idxprom137 = sext i32 %113 to i64, !dbg !3699
  %arrayidx138 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom137, !dbg !3699
  %arrayidx139 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx138, i64 0, i64 0, !dbg !3699
  %114 = load float, float* %arrayidx139, align 8, !dbg !3699
  %fneg = fneg float %114, !dbg !3700
  %115 = load i32, i32* %j, align 4, !dbg !3701
  %idxprom140 = sext i32 %115 to i64, !dbg !3702
  %arrayidx141 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom140, !dbg !3702
  %arrayidx142 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx141, i64 0, i64 1, !dbg !3702
  %116 = load float, float* %arrayidx142, align 4, !dbg !3702
  %fneg143 = fneg float %116, !dbg !3703
  call void @glTranslatef(float %fneg, float %fneg143, float 0.000000e+00), !dbg !3704
  br label %for.inc144, !dbg !3705

for.inc144:                                       ; preds = %if.end136
  %117 = load i32, i32* %j, align 4, !dbg !3706
  %inc145 = add nsw i32 %117, 1, !dbg !3706
  store i32 %inc145, i32* %j, align 4, !dbg !3706
  br label %for.cond108, !dbg !3707, !llvm.loop !3708

for.end146:                                       ; preds = %for.cond108
  call void @glDisableClientState(i32 32884), !dbg !3710
  br label %if.end147, !dbg !3711

if.end147:                                        ; preds = %for.end146, %if.end86
  %118 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3712
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %118, i32 0, i32 9, !dbg !3714
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria1, i32 0, i32 0, !dbg !3715
  %119 = load i32, i32* %tot, align 8, !dbg !3715
  %tobool148 = icmp ne i32 %119, 0, !dbg !3712
  br i1 %tobool148, label %if.then151, label %lor.lhs.false, !dbg !3716

lor.lhs.false:                                    ; preds = %if.end147
  %120 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3717
  %tria2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %120, i32 0, i32 10, !dbg !3718
  %tot149 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria2, i32 0, i32 0, !dbg !3719
  %121 = load i32, i32* %tot149, align 8, !dbg !3719
  %tobool150 = icmp ne i32 %121, 0, !dbg !3717
  br i1 %tobool150, label %if.then151, label %if.end202, !dbg !3720

if.then151:                                       ; preds = %lor.lhs.false, %if.end147
  call void @llvm.dbg.declare(metadata [4 x i8]* %tcol152, metadata !3721, metadata !DIExpression()), !dbg !3723
  %arrayinit.begin153 = getelementptr inbounds [4 x i8], [4 x i8]* %tcol152, i64 0, i64 0, !dbg !3724
  %122 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3725
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %122, i32 0, i32 3, !dbg !3726
  %arrayidx154 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !3725
  %123 = load i8, i8* %arrayidx154, align 2, !dbg !3725
  store i8 %123, i8* %arrayinit.begin153, align 1, !dbg !3724
  %arrayinit.element155 = getelementptr inbounds i8, i8* %arrayinit.begin153, i64 1, !dbg !3724
  %124 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3727
  %item156 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %124, i32 0, i32 3, !dbg !3728
  %arrayidx157 = getelementptr inbounds [4 x i8], [4 x i8]* %item156, i64 0, i64 1, !dbg !3727
  %125 = load i8, i8* %arrayidx157, align 1, !dbg !3727
  store i8 %125, i8* %arrayinit.element155, align 1, !dbg !3724
  %arrayinit.element158 = getelementptr inbounds i8, i8* %arrayinit.element155, i64 1, !dbg !3724
  %126 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3729
  %item159 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %126, i32 0, i32 3, !dbg !3730
  %arrayidx160 = getelementptr inbounds [4 x i8], [4 x i8]* %item159, i64 0, i64 2, !dbg !3729
  %127 = load i8, i8* %arrayidx160, align 2, !dbg !3729
  store i8 %127, i8* %arrayinit.element158, align 1, !dbg !3724
  %arrayinit.element161 = getelementptr inbounds i8, i8* %arrayinit.element158, i64 1, !dbg !3724
  %128 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !3731
  %item162 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %128, i32 0, i32 3, !dbg !3732
  %arrayidx163 = getelementptr inbounds [4 x i8], [4 x i8]* %item162, i64 0, i64 3, !dbg !3731
  %129 = load i8, i8* %arrayidx163, align 1, !dbg !3731
  %conv164 = uitofp i8 %129 to float, !dbg !3733
  %div165 = fdiv float %conv164, 8.000000e+00, !dbg !3734
  %conv166 = fptoui float %div165 to i8, !dbg !3735
  store i8 %conv166, i8* %arrayinit.element161, align 1, !dbg !3724
  store i32 0, i32* %j, align 4, !dbg !3736
  br label %for.cond167, !dbg !3738

for.cond167:                                      ; preds = %for.inc199, %if.then151
  %130 = load i32, i32* %j, align 4, !dbg !3739
  %cmp168 = icmp slt i32 %130, 8, !dbg !3741
  br i1 %cmp168, label %for.body170, label %for.end201, !dbg !3742

for.body170:                                      ; preds = %for.cond167
  %131 = load i32, i32* %j, align 4, !dbg !3743
  %idxprom171 = sext i32 %131 to i64, !dbg !3745
  %arrayidx172 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom171, !dbg !3745
  %arrayidx173 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx172, i64 0, i64 0, !dbg !3745
  %132 = load float, float* %arrayidx173, align 8, !dbg !3745
  %133 = load i32, i32* %j, align 4, !dbg !3746
  %idxprom174 = sext i32 %133 to i64, !dbg !3747
  %arrayidx175 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom174, !dbg !3747
  %arrayidx176 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx175, i64 0, i64 1, !dbg !3747
  %134 = load float, float* %arrayidx176, align 4, !dbg !3747
  call void @glTranslatef(float %132, float %134, float 0.000000e+00), !dbg !3748
  %135 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3749
  %tria1177 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %135, i32 0, i32 9, !dbg !3751
  %tot178 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria1177, i32 0, i32 0, !dbg !3752
  %136 = load i32, i32* %tot178, align 8, !dbg !3752
  %tobool179 = icmp ne i32 %136, 0, !dbg !3749
  br i1 %tobool179, label %if.then180, label %if.end183, !dbg !3753

if.then180:                                       ; preds = %for.body170
  %arraydecay181 = getelementptr inbounds [4 x i8], [4 x i8]* %tcol152, i64 0, i64 0, !dbg !3754
  call void @glColor4ubv(i8* %arraydecay181), !dbg !3756
  %137 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3757
  %tria1182 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %137, i32 0, i32 9, !dbg !3758
  call void @widget_trias_draw(%struct.uiWidgetTrias* %tria1182), !dbg !3759
  br label %if.end183, !dbg !3760

if.end183:                                        ; preds = %if.then180, %for.body170
  %138 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3761
  %tria2184 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %138, i32 0, i32 10, !dbg !3763
  %tot185 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %tria2184, i32 0, i32 0, !dbg !3764
  %139 = load i32, i32* %tot185, align 8, !dbg !3764
  %tobool186 = icmp ne i32 %139, 0, !dbg !3761
  br i1 %tobool186, label %if.then187, label %if.end190, !dbg !3765

if.then187:                                       ; preds = %if.end183
  %arraydecay188 = getelementptr inbounds [4 x i8], [4 x i8]* %tcol152, i64 0, i64 0, !dbg !3766
  call void @glColor4ubv(i8* %arraydecay188), !dbg !3768
  %140 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !3769
  %tria2189 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %140, i32 0, i32 10, !dbg !3770
  call void @widget_trias_draw(%struct.uiWidgetTrias* %tria2189), !dbg !3771
  br label %if.end190, !dbg !3772

if.end190:                                        ; preds = %if.then187, %if.end183
  %141 = load i32, i32* %j, align 4, !dbg !3773
  %idxprom191 = sext i32 %141 to i64, !dbg !3774
  %arrayidx192 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom191, !dbg !3774
  %arrayidx193 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx192, i64 0, i64 0, !dbg !3774
  %142 = load float, float* %arrayidx193, align 8, !dbg !3774
  %fneg194 = fneg float %142, !dbg !3775
  %143 = load i32, i32* %j, align 4, !dbg !3776
  %idxprom195 = sext i32 %143 to i64, !dbg !3777
  %arrayidx196 = getelementptr inbounds [8 x [2 x float]], [8 x [2 x float]]* @jit, i64 0, i64 %idxprom195, !dbg !3777
  %arrayidx197 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx196, i64 0, i64 1, !dbg !3777
  %144 = load float, float* %arrayidx197, align 4, !dbg !3777
  %fneg198 = fneg float %144, !dbg !3778
  call void @glTranslatef(float %fneg194, float %fneg198, float 0.000000e+00), !dbg !3779
  br label %for.inc199, !dbg !3780

for.inc199:                                       ; preds = %if.end190
  %145 = load i32, i32* %j, align 4, !dbg !3781
  %inc200 = add nsw i32 %145, 1, !dbg !3781
  store i32 %inc200, i32* %j, align 4, !dbg !3781
  br label %for.cond167, !dbg !3782, !llvm.loop !3783

for.end201:                                       ; preds = %for.cond167
  br label %if.end202, !dbg !3785

if.end202:                                        ; preds = %for.end201, %lor.lhs.false
  call void @glDisable(i32 3042), !dbg !3786
  ret void, !dbg !3787
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !3788 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !3793, metadata !DIExpression()), !dbg !3794
  %0 = load i8*, i8** %a.addr, align 8, !dbg !3795
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3795
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3795
  %2 = load i8*, i8** %r.addr, align 8, !dbg !3796
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !3796
  store i8 %1, i8* %arrayidx1, align 1, !dbg !3797
  %3 = load i8*, i8** %a.addr, align 8, !dbg !3798
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3798
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3798
  %5 = load i8*, i8** %r.addr, align 8, !dbg !3799
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3799
  store i8 %4, i8* %arrayidx3, align 1, !dbg !3800
  %6 = load i8*, i8** %a.addr, align 8, !dbg !3801
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !3801
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !3801
  %8 = load i8*, i8** %r.addr, align 8, !dbg !3802
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !3802
  store i8 %7, i8* %arrayidx5, align 1, !dbg !3803
  %9 = load i8*, i8** %a.addr, align 8, !dbg !3804
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !3804
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !3804
  %11 = load i8*, i8** %r.addr, align 8, !dbg !3805
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !3805
  store i8 %10, i8* %arrayidx7, align 1, !dbg !3806
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_scroll_circle(%struct.uiWidgetTrias* %tria, %struct.rcti* %rect, float %triasize, i8 zeroext %where) #0 !dbg !3808 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %triasize.addr = alloca float, align 4
  %where.addr = alloca i8, align 1
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !3812, metadata !DIExpression()), !dbg !3813
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3814, metadata !DIExpression()), !dbg !3815
  store float %triasize, float* %triasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %triasize.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  store i8 %where, i8* %where.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %where.addr, metadata !3818, metadata !DIExpression()), !dbg !3819
  %0 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !3820
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3821
  %2 = load float, float* %triasize.addr, align 4, !dbg !3822
  %3 = load i8, i8* %where.addr, align 1, !dbg !3823
  call void @widget_draw_tria_ex(%struct.uiWidgetTrias* %0, %struct.rcti* %1, float %2, i8 zeroext %3, [2 x float]* getelementptr inbounds ([16 x [2 x float]], [16 x [2 x float]]* @scroll_circle_vert, i64 0, i64 0), i32 16, [3 x i32]* getelementptr inbounds ([14 x [3 x i32]], [14 x [3 x i32]]* @scroll_circle_face, i64 0, i64 0), i32 14), !dbg !3824
  ret void, !dbg !3825
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_but(%struct.bContext* %C, %struct.ARegion* %ar, %struct.uiStyle* %style, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !3826 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %style.addr = alloca %struct.uiStyle*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %btheme = alloca %struct.bTheme*, align 8
  %tui = alloca %struct.ThemeUI*, align 8
  %fstyle = alloca %struct.uiFontStyle*, align 8
  %wt = alloca %struct.uiWidgetType*, align 8
  %roundboxalign = alloca i32, align 4
  %state146 = alloca i32, align 4
  %disabled = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3857, metadata !DIExpression()), !dbg !3858
  store %struct.uiStyle* %style, %struct.uiStyle** %style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style.addr, metadata !3859, metadata !DIExpression()), !dbg !3860
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !3861, metadata !DIExpression()), !dbg !3862
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3863, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !3865, metadata !DIExpression()), !dbg !4098
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !4099
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !4098
  call void @llvm.dbg.declare(metadata %struct.ThemeUI** %tui, metadata !4100, metadata !DIExpression()), !dbg !4101
  %0 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4102
  %tui1 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %0, i32 0, i32 3, !dbg !4103
  store %struct.ThemeUI* %tui1, %struct.ThemeUI** %tui, align 8, !dbg !4101
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle, metadata !4104, metadata !DIExpression()), !dbg !4105
  %1 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4106
  %widget = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %1, i32 0, i32 6, !dbg !4107
  store %struct.uiFontStyle* %widget, %struct.uiFontStyle** %fstyle, align 8, !dbg !4105
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !4108, metadata !DIExpression()), !dbg !4109
  store %struct.uiWidgetType* null, %struct.uiWidgetType** %wt, align 8, !dbg !4109
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4110
  %dt = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 46, !dbg !4112
  %3 = load i8, i8* %dt, align 1, !dbg !4112
  %conv = zext i8 %3 to i32, !dbg !4110
  %cmp = icmp eq i32 %conv, 2, !dbg !4113
  br i1 %cmp, label %if.then, label %if.else, !dbg !4114

if.then:                                          ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4115
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !4117
  %5 = load i32, i32* %type, align 8, !dbg !4117
  switch i32 %5, label %sw.default [
    i32 5120, label %sw.bb
    i32 27648, label %sw.bb3
  ], !dbg !4118

sw.bb:                                            ; preds = %if.then
  %6 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4119
  %widgetlabel = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %6, i32 0, i32 5, !dbg !4121
  %7 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4122
  %wcol_menu_back = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %7, i32 0, i32 10, !dbg !4123
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4124
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4125
  call void @widget_draw_text_icon(%struct.uiFontStyle* %widgetlabel, %struct.uiWidgetColors* %wcol_menu_back, %struct.uiBut* %8, %struct.rcti* %9), !dbg !4126
  br label %sw.epilog, !dbg !4127

sw.bb3:                                           ; preds = %if.then
  %10 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4128
  %11 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4129
  %wcol_menu_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %11, i32 0, i32 11, !dbg !4130
  call void @ui_draw_separator(%struct.rcti* %10, %struct.uiWidgetColors* %wcol_menu_item), !dbg !4131
  br label %sw.epilog, !dbg !4132

sw.default:                                       ; preds = %if.then
  %call4 = call %struct.uiWidgetType* @widget_type(i32 18), !dbg !4133
  store %struct.uiWidgetType* %call4, %struct.uiWidgetType** %wt, align 8, !dbg !4134
  br label %sw.epilog, !dbg !4135

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  br label %if.end143, !dbg !4136

if.else:                                          ; preds = %entry
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4137
  %dt5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 46, !dbg !4139
  %13 = load i8, i8* %dt5, align 1, !dbg !4139
  %conv6 = zext i8 %13 to i32, !dbg !4137
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !4140
  br i1 %cmp7, label %if.then9, label %if.else11, !dbg !4141

if.then9:                                         ; preds = %if.else
  %call10 = call %struct.uiWidgetType* @widget_type(i32 21), !dbg !4142
  store %struct.uiWidgetType* %call10, %struct.uiWidgetType** %wt, align 8, !dbg !4144
  br label %if.end142, !dbg !4145

if.else11:                                        ; preds = %if.else
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4146
  %dt12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 46, !dbg !4148
  %15 = load i8, i8* %dt12, align 1, !dbg !4148
  %conv13 = zext i8 %15 to i32, !dbg !4146
  %cmp14 = icmp eq i32 %conv13, 4, !dbg !4149
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !4150

if.then16:                                        ; preds = %if.else11
  %call17 = call %struct.uiWidgetType* @widget_type(i32 19), !dbg !4151
  store %struct.uiWidgetType* %call17, %struct.uiWidgetType** %wt, align 8, !dbg !4153
  br label %if.end141, !dbg !4154

if.else18:                                        ; preds = %if.else11
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4155
  %type19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 4, !dbg !4157
  %17 = load i32, i32* %type19, align 8, !dbg !4157
  switch i32 %17, label %sw.default138 [
    i32 5120, label %sw.bb20
    i32 10752, label %sw.bb27
    i32 27648, label %sw.bb27
    i32 512, label %sw.bb28
    i32 2560, label %sw.bb30
    i32 7168, label %sw.bb32
    i32 1024, label %sw.bb34
    i32 18432, label %sw.bb36
    i32 3072, label %sw.bb38
    i32 26624, label %sw.bb40
    i32 20992, label %sw.bb40
    i32 18944, label %sw.bb50
    i32 1536, label %sw.bb50
    i32 4608, label %sw.bb50
    i32 19456, label %sw.bb52
    i32 19968, label %sw.bb52
    i32 5632, label %sw.bb67
    i32 9728, label %sw.bb67
    i32 13824, label %sw.bb90
    i32 10240, label %sw.bb92
    i32 7680, label %sw.bb94
    i32 14336, label %sw.bb96
    i32 17920, label %sw.bb96
    i32 11264, label %sw.bb98
    i32 11776, label %sw.bb98
    i32 21504, label %sw.bb100
    i32 13312, label %sw.bb102
    i32 22016, label %sw.bb112
    i32 15360, label %sw.bb113
    i32 15872, label %sw.bb115
    i32 24064, label %sw.bb117
    i32 24576, label %sw.bb119
    i32 25088, label %sw.bb121
    i32 25600, label %sw.bb123
    i32 16384, label %sw.bb125
    i32 26112, label %sw.bb127
    i32 9216, label %sw.bb130
    i32 28160, label %sw.bb132
    i32 20480, label %sw.bb134
    i32 27136, label %sw.bb136
  ], !dbg !4158

sw.bb20:                                          ; preds = %if.else18
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4159
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 74, !dbg !4162
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4162
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 27, !dbg !4163
  %20 = load i32, i32* %flag, align 8, !dbg !4163
  %and = and i32 %20, 1, !dbg !4164
  %tobool = icmp ne i32 %and, 0, !dbg !4164
  br i1 %tobool, label %if.then21, label %if.else24, !dbg !4165

if.then21:                                        ; preds = %sw.bb20
  %21 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4166
  %widgetlabel22 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %21, i32 0, i32 5, !dbg !4167
  %22 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4168
  %wcol_menu_back23 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %22, i32 0, i32 10, !dbg !4169
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4170
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4171
  call void @widget_draw_text_icon(%struct.uiFontStyle* %widgetlabel22, %struct.uiWidgetColors* %wcol_menu_back23, %struct.uiBut* %23, %struct.rcti* %24), !dbg !4172
  br label %if.end, !dbg !4172

if.else24:                                        ; preds = %sw.bb20
  %call25 = call %struct.uiWidgetType* @widget_type(i32 1), !dbg !4173
  store %struct.uiWidgetType* %call25, %struct.uiWidgetType** %wt, align 8, !dbg !4175
  %25 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4176
  %widgetlabel26 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %25, i32 0, i32 5, !dbg !4177
  store %struct.uiFontStyle* %widgetlabel26, %struct.uiFontStyle** %fstyle, align 8, !dbg !4178
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then21
  br label %sw.epilog140, !dbg !4179

sw.bb27:                                          ; preds = %if.else18, %if.else18
  br label %sw.epilog140, !dbg !4180

sw.bb28:                                          ; preds = %if.else18
  %call29 = call %struct.uiWidgetType* @widget_type(i32 7), !dbg !4181
  store %struct.uiWidgetType* %call29, %struct.uiWidgetType** %wt, align 8, !dbg !4182
  br label %sw.epilog140, !dbg !4183

sw.bb30:                                          ; preds = %if.else18
  %call31 = call %struct.uiWidgetType* @widget_type(i32 5), !dbg !4184
  store %struct.uiWidgetType* %call31, %struct.uiWidgetType** %wt, align 8, !dbg !4185
  br label %sw.epilog140, !dbg !4186

sw.bb32:                                          ; preds = %if.else18
  %call33 = call %struct.uiWidgetType* @widget_type(i32 6), !dbg !4187
  store %struct.uiWidgetType* %call33, %struct.uiWidgetType** %wt, align 8, !dbg !4188
  br label %sw.epilog140, !dbg !4189

sw.bb34:                                          ; preds = %if.else18
  %call35 = call %struct.uiWidgetType* @widget_type(i32 4), !dbg !4190
  store %struct.uiWidgetType* %call35, %struct.uiWidgetType** %wt, align 8, !dbg !4191
  br label %sw.epilog140, !dbg !4192

sw.bb36:                                          ; preds = %if.else18
  %call37 = call %struct.uiWidgetType* @widget_type(i32 27), !dbg !4193
  store %struct.uiWidgetType* %call37, %struct.uiWidgetType** %wt, align 8, !dbg !4194
  br label %sw.epilog140, !dbg !4195

sw.bb38:                                          ; preds = %if.else18
  %call39 = call %struct.uiWidgetType* @widget_type(i32 9), !dbg !4196
  store %struct.uiWidgetType* %call39, %struct.uiWidgetType** %wt, align 8, !dbg !4197
  br label %sw.epilog140, !dbg !4198

sw.bb40:                                          ; preds = %if.else18, %if.else18
  %call41 = call %struct.uiWidgetType* @widget_type(i32 9), !dbg !4199
  store %struct.uiWidgetType* %call41, %struct.uiWidgetType** %wt, align 8, !dbg !4200
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4201
  %block42 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 74, !dbg !4203
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block42, align 8, !dbg !4203
  %flag43 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %27, i32 0, i32 27, !dbg !4204
  %28 = load i32, i32* %flag43, align 8, !dbg !4204
  %and44 = and i32 %28, 1, !dbg !4205
  %tobool45 = icmp ne i32 %and44, 0, !dbg !4205
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !4206

if.then46:                                        ; preds = %sw.bb40
  %29 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4207
  %tui47 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %29, i32 0, i32 3, !dbg !4208
  %wcol_menu_back48 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui47, i32 0, i32 10, !dbg !4209
  %30 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4210
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %30, i32 0, i32 0, !dbg !4211
  store %struct.uiWidgetColors* %wcol_menu_back48, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !4212
  br label %if.end49, !dbg !4210

if.end49:                                         ; preds = %if.then46, %sw.bb40
  br label %sw.epilog140, !dbg !4213

sw.bb50:                                          ; preds = %if.else18, %if.else18, %if.else18
  %call51 = call %struct.uiWidgetType* @widget_type(i32 2), !dbg !4214
  store %struct.uiWidgetType* %call51, %struct.uiWidgetType** %wt, align 8, !dbg !4215
  br label %sw.epilog140, !dbg !4216

sw.bb52:                                          ; preds = %if.else18, %if.else18
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4217
  %flag53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 2, !dbg !4219
  %32 = load i32, i32* %flag53, align 8, !dbg !4219
  %and54 = and i32 %32, 8, !dbg !4220
  %tobool55 = icmp ne i32 %and54, 0, !dbg !4220
  br i1 %tobool55, label %if.else58, label %if.then56, !dbg !4221

if.then56:                                        ; preds = %sw.bb52
  %call57 = call %struct.uiWidgetType* @widget_type(i32 3), !dbg !4222
  store %struct.uiWidgetType* %call57, %struct.uiWidgetType** %wt, align 8, !dbg !4224
  %33 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4225
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 3, !dbg !4226
  %34 = load i32, i32* %drawflag, align 4, !dbg !4227
  %or = or i32 %34, 2, !dbg !4227
  store i32 %or, i32* %drawflag, align 4, !dbg !4227
  br label %if.end60, !dbg !4228

if.else58:                                        ; preds = %sw.bb52
  %call59 = call %struct.uiWidgetType* @widget_type(i32 2), !dbg !4229
  store %struct.uiWidgetType* %call59, %struct.uiWidgetType** %wt, align 8, !dbg !4230
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then56
  %35 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4231
  %block61 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 74, !dbg !4233
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block61, align 8, !dbg !4233
  %flag62 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %36, i32 0, i32 27, !dbg !4234
  %37 = load i32, i32* %flag62, align 8, !dbg !4234
  %and63 = and i32 %37, 1, !dbg !4235
  %tobool64 = icmp ne i32 %and63, 0, !dbg !4235
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !4236

if.then65:                                        ; preds = %if.end60
  %38 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4237
  %state = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %38, i32 0, i32 3, !dbg !4238
  store void (%struct.uiWidgetType*, i32)* @widget_state_option_menu, void (%struct.uiWidgetType*, i32)** %state, align 8, !dbg !4239
  br label %if.end66, !dbg !4237

if.end66:                                         ; preds = %if.then65, %if.end60
  br label %sw.epilog140, !dbg !4240

sw.bb67:                                          ; preds = %if.else18, %if.else18
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4241
  %flag68 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 2, !dbg !4243
  %40 = load i32, i32* %flag68, align 8, !dbg !4243
  %and69 = and i32 %40, 256, !dbg !4244
  %tobool70 = icmp ne i32 %and69, 0, !dbg !4244
  br i1 %tobool70, label %if.then71, label %if.else73, !dbg !4245

if.then71:                                        ; preds = %sw.bb67
  %call72 = call %struct.uiWidgetType* @widget_type(i32 16), !dbg !4246
  store %struct.uiWidgetType* %call72, %struct.uiWidgetType** %wt, align 8, !dbg !4248
  br label %if.end89, !dbg !4249

if.else73:                                        ; preds = %sw.bb67
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4250
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 15, !dbg !4253
  %42 = load i8*, i8** %str, align 8, !dbg !4253
  %arrayidx = getelementptr inbounds i8, i8* %42, i64 0, !dbg !4250
  %43 = load i8, i8* %arrayidx, align 1, !dbg !4250
  %tobool74 = icmp ne i8 %43, 0, !dbg !4250
  br i1 %tobool74, label %lor.lhs.false, label %land.lhs.true, !dbg !4254

land.lhs.true:                                    ; preds = %if.else73
  %44 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4255
  %icon = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 44, !dbg !4256
  %45 = load i32, i32* %icon, align 8, !dbg !4256
  %tobool75 = icmp ne i32 %45, 0, !dbg !4255
  br i1 %tobool75, label %land.lhs.true76, label %lor.lhs.false, !dbg !4257

land.lhs.true76:                                  ; preds = %land.lhs.true
  %46 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4258
  %call77 = call i32 @BLI_rcti_size_x(%struct.rcti* %46), !dbg !4259
  %47 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4260
  %call78 = call i32 @BLI_rcti_size_y(%struct.rcti* %47), !dbg !4261
  %add = add nsw i32 %call78, 2, !dbg !4262
  %cmp79 = icmp slt i32 %call77, %add, !dbg !4263
  br i1 %cmp79, label %if.then84, label %lor.lhs.false, !dbg !4264

lor.lhs.false:                                    ; preds = %land.lhs.true76, %land.lhs.true, %if.else73
  %48 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4265
  %flag81 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 2, !dbg !4266
  %49 = load i32, i32* %flag81, align 8, !dbg !4266
  %and82 = and i32 %49, 128, !dbg !4267
  %tobool83 = icmp ne i32 %and82, 0, !dbg !4267
  br i1 %tobool83, label %if.then84, label %if.else86, !dbg !4268

if.then84:                                        ; preds = %lor.lhs.false, %land.lhs.true76
  %call85 = call %struct.uiWidgetType* @widget_type(i32 14), !dbg !4269
  store %struct.uiWidgetType* %call85, %struct.uiWidgetType** %wt, align 8, !dbg !4271
  br label %if.end88, !dbg !4272

if.else86:                                        ; preds = %lor.lhs.false
  %call87 = call %struct.uiWidgetType* @widget_type(i32 13), !dbg !4273
  store %struct.uiWidgetType* %call87, %struct.uiWidgetType** %wt, align 8, !dbg !4275
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then84
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then71
  br label %sw.epilog140, !dbg !4276

sw.bb90:                                          ; preds = %if.else18
  %call91 = call %struct.uiWidgetType* @widget_type(i32 17), !dbg !4277
  store %struct.uiWidgetType* %call91, %struct.uiWidgetType** %wt, align 8, !dbg !4278
  br label %sw.epilog140, !dbg !4279

sw.bb92:                                          ; preds = %if.else18
  %call93 = call %struct.uiWidgetType* @widget_type(i32 18), !dbg !4280
  store %struct.uiWidgetType* %call93, %struct.uiWidgetType** %wt, align 8, !dbg !4281
  br label %sw.epilog140, !dbg !4282

sw.bb94:                                          ; preds = %if.else18
  %call95 = call %struct.uiWidgetType* @widget_type(i32 22), !dbg !4283
  store %struct.uiWidgetType* %call95, %struct.uiWidgetType** %wt, align 8, !dbg !4284
  br label %sw.epilog140, !dbg !4285

sw.bb96:                                          ; preds = %if.else18, %if.else18
  %call97 = call %struct.uiWidgetType* @widget_type(i32 25), !dbg !4286
  store %struct.uiWidgetType* %call97, %struct.uiWidgetType** %wt, align 8, !dbg !4287
  br label %sw.epilog140, !dbg !4288

sw.bb98:                                          ; preds = %if.else18, %if.else18
  %call99 = call %struct.uiWidgetType* @widget_type(i32 21), !dbg !4289
  store %struct.uiWidgetType* %call99, %struct.uiWidgetType** %wt, align 8, !dbg !4290
  %50 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4291
  %custom = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %50, i32 0, i32 5, !dbg !4292
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_link, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %custom, align 8, !dbg !4293
  br label %sw.epilog140, !dbg !4294

sw.bb100:                                         ; preds = %if.else18
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4295
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4296
  %call101 = call %struct.uiWidgetType* @widget_type(i32 25), !dbg !4297
  %53 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4298
  call void @widget_draw_extra_mask(%struct.bContext* %51, %struct.uiBut* %52, %struct.uiWidgetType* %call101, %struct.rcti* %53), !dbg !4299
  br label %sw.epilog140, !dbg !4300

sw.bb102:                                         ; preds = %if.else18
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4301
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 24, !dbg !4301
  %55 = load float, float* %a1, align 8, !dbg !4301
  %cmp103 = fcmp oeq float %55, 9.000000e+00, !dbg !4301
  br i1 %cmp103, label %if.then109, label %lor.lhs.false105, !dbg !4301

lor.lhs.false105:                                 ; preds = %sw.bb102
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4301
  %a1106 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 24, !dbg !4301
  %57 = load float, float* %a1106, align 8, !dbg !4301
  %cmp107 = fcmp oeq float %57, 1.000000e+01, !dbg !4301
  br i1 %cmp107, label %if.then109, label %if.else110, !dbg !4303

if.then109:                                       ; preds = %lor.lhs.false105, %sw.bb102
  %58 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4304
  %59 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4306
  call void @ui_draw_but_HSV_v(%struct.uiBut* %58, %struct.rcti* %59), !dbg !4307
  br label %if.end111, !dbg !4308

if.else110:                                       ; preds = %lor.lhs.false105
  %60 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4309
  %61 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4311
  call void @ui_draw_but_HSVCUBE(%struct.uiBut* %60, %struct.rcti* %61), !dbg !4312
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.then109
  br label %sw.epilog140, !dbg !4313

sw.bb112:                                         ; preds = %if.else18
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4314
  %63 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4315
  %wcol_regular = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %63, i32 0, i32 0, !dbg !4316
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4317
  call void @ui_draw_but_HSVCIRCLE(%struct.uiBut* %62, %struct.uiWidgetColors* %wcol_regular, %struct.rcti* %64), !dbg !4318
  br label %sw.epilog140, !dbg !4319

sw.bb113:                                         ; preds = %if.else18
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4320
  %66 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4321
  %wcol_regular114 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %66, i32 0, i32 0, !dbg !4322
  %67 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4323
  call void @ui_draw_but_COLORBAND(%struct.uiBut* %65, %struct.uiWidgetColors* %wcol_regular114, %struct.rcti* %67), !dbg !4324
  br label %sw.epilog140, !dbg !4325

sw.bb115:                                         ; preds = %if.else18
  %call116 = call %struct.uiWidgetType* @widget_type(i32 24), !dbg !4326
  store %struct.uiWidgetType* %call116, %struct.uiWidgetType** %wt, align 8, !dbg !4327
  br label %sw.epilog140, !dbg !4328

sw.bb117:                                         ; preds = %if.else18
  %68 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4329
  %69 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4330
  %70 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4331
  %wcol_regular118 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %70, i32 0, i32 0, !dbg !4332
  %71 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4333
  call void @ui_draw_but_IMAGE(%struct.ARegion* %68, %struct.uiBut* %69, %struct.uiWidgetColors* %wcol_regular118, %struct.rcti* %71), !dbg !4334
  br label %sw.epilog140, !dbg !4335

sw.bb119:                                         ; preds = %if.else18
  %72 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4336
  %73 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4337
  %74 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4338
  %wcol_regular120 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %74, i32 0, i32 0, !dbg !4339
  %75 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4340
  call void @ui_draw_but_HISTOGRAM(%struct.ARegion* %72, %struct.uiBut* %73, %struct.uiWidgetColors* %wcol_regular120, %struct.rcti* %75), !dbg !4341
  br label %sw.epilog140, !dbg !4342

sw.bb121:                                         ; preds = %if.else18
  %76 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4343
  %77 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4344
  %78 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4345
  %wcol_regular122 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %78, i32 0, i32 0, !dbg !4346
  %79 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4347
  call void @ui_draw_but_WAVEFORM(%struct.ARegion* %76, %struct.uiBut* %77, %struct.uiWidgetColors* %wcol_regular122, %struct.rcti* %79), !dbg !4348
  br label %sw.epilog140, !dbg !4349

sw.bb123:                                         ; preds = %if.else18
  %80 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4350
  %81 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4351
  %82 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4352
  %wcol_regular124 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %82, i32 0, i32 0, !dbg !4353
  %83 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4354
  call void @ui_draw_but_VECTORSCOPE(%struct.ARegion* %80, %struct.uiBut* %81, %struct.uiWidgetColors* %wcol_regular124, %struct.rcti* %83), !dbg !4355
  br label %sw.epilog140, !dbg !4356

sw.bb125:                                         ; preds = %if.else18
  %84 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4357
  %85 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4358
  %86 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4359
  %wcol_regular126 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %86, i32 0, i32 0, !dbg !4360
  %87 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4361
  call void @ui_draw_but_CURVE(%struct.ARegion* %84, %struct.uiBut* %85, %struct.uiWidgetColors* %wcol_regular126, %struct.rcti* %87), !dbg !4362
  br label %sw.epilog140, !dbg !4363

sw.bb127:                                         ; preds = %if.else18
  %call128 = call %struct.uiWidgetType* @widget_type(i32 28), !dbg !4364
  store %struct.uiWidgetType* %call128, %struct.uiWidgetType** %wt, align 8, !dbg !4365
  %88 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4366
  %widgetlabel129 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %88, i32 0, i32 5, !dbg !4367
  store %struct.uiFontStyle* %widgetlabel129, %struct.uiFontStyle** %fstyle, align 8, !dbg !4368
  br label %sw.epilog140, !dbg !4369

sw.bb130:                                         ; preds = %if.else18
  %call131 = call %struct.uiWidgetType* @widget_type(i32 26), !dbg !4370
  store %struct.uiWidgetType* %call131, %struct.uiWidgetType** %wt, align 8, !dbg !4371
  br label %sw.epilog140, !dbg !4372

sw.bb132:                                         ; preds = %if.else18
  %call133 = call %struct.uiWidgetType* @widget_type(i32 21), !dbg !4373
  store %struct.uiWidgetType* %call133, %struct.uiWidgetType** %wt, align 8, !dbg !4374
  br label %sw.epilog140, !dbg !4375

sw.bb134:                                         ; preds = %if.else18
  %89 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4376
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4377
  %91 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4378
  %wcol_regular135 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %91, i32 0, i32 0, !dbg !4379
  %92 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4380
  call void @ui_draw_but_TRACKPREVIEW(%struct.ARegion* %89, %struct.uiBut* %90, %struct.uiWidgetColors* %wcol_regular135, %struct.rcti* %92), !dbg !4381
  br label %sw.epilog140, !dbg !4382

sw.bb136:                                         ; preds = %if.else18
  %93 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4383
  %94 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4384
  %95 = load %struct.ThemeUI*, %struct.ThemeUI** %tui, align 8, !dbg !4385
  %wcol_regular137 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %95, i32 0, i32 0, !dbg !4386
  %96 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4387
  call void @ui_draw_but_NODESOCKET(%struct.ARegion* %93, %struct.uiBut* %94, %struct.uiWidgetColors* %wcol_regular137, %struct.rcti* %96), !dbg !4388
  br label %sw.epilog140, !dbg !4389

sw.default138:                                    ; preds = %if.else18
  %call139 = call %struct.uiWidgetType* @widget_type(i32 0), !dbg !4390
  store %struct.uiWidgetType* %call139, %struct.uiWidgetType** %wt, align 8, !dbg !4391
  br label %sw.epilog140, !dbg !4392

sw.epilog140:                                     ; preds = %sw.default138, %sw.bb136, %sw.bb134, %sw.bb132, %sw.bb130, %sw.bb127, %sw.bb125, %sw.bb123, %sw.bb121, %sw.bb119, %sw.bb117, %sw.bb115, %sw.bb113, %sw.bb112, %if.end111, %sw.bb100, %sw.bb98, %sw.bb96, %sw.bb94, %sw.bb92, %sw.bb90, %if.end89, %if.end66, %sw.bb50, %if.end49, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb28, %sw.bb27, %if.end
  br label %if.end141

if.end141:                                        ; preds = %sw.epilog140, %if.then16
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then9
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %sw.epilog
  %97 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4393
  %tobool144 = icmp ne %struct.uiWidgetType* %97, null, !dbg !4393
  br i1 %tobool144, label %if.then145, label %if.end192, !dbg !4395

if.then145:                                       ; preds = %if.end143
  call void @llvm.dbg.declare(metadata i32* %roundboxalign, metadata !4396, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.declare(metadata i32* %state146, metadata !4399, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.declare(metadata i8* %disabled, metadata !4401, metadata !DIExpression()), !dbg !4402
  store i8 0, i8* %disabled, align 1, !dbg !4402
  %98 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4403
  %99 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4404
  %call147 = call i32 @widget_roundbox_set(%struct.uiBut* %98, %struct.rcti* %99), !dbg !4405
  store i32 %call147, i32* %roundboxalign, align 4, !dbg !4406
  %100 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4407
  %flag148 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %100, i32 0, i32 2, !dbg !4408
  %101 = load i32, i32* %flag148, align 8, !dbg !4408
  store i32 %101, i32* %state146, align 4, !dbg !4409
  %102 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4410
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %102, i32 0, i32 69, !dbg !4412
  %103 = load i8*, i8** %editstr, align 8, !dbg !4412
  %tobool149 = icmp ne i8* %103, null, !dbg !4413
  br i1 %tobool149, label %if.then157, label %lor.lhs.false150, !dbg !4414

lor.lhs.false150:                                 ; preds = %if.then145
  %104 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4415
  %flag151 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %104, i32 0, i32 2, !dbg !4415
  %105 = load i32, i32* %flag151, align 8, !dbg !4415
  %and152 = and i32 %105, 33554432, !dbg !4415
  %tobool153 = icmp ne i32 %and152, 0, !dbg !4415
  br i1 %tobool153, label %land.lhs.true154, label %if.end159, !dbg !4416

land.lhs.true154:                                 ; preds = %lor.lhs.false150
  %106 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4417
  %call155 = call %struct.uiBut* @ui_get_but_drag_multi_edit(%struct.uiBut* %106), !dbg !4418
  %tobool156 = icmp ne %struct.uiBut* %call155, null, !dbg !4418
  br i1 %tobool156, label %if.then157, label %if.end159, !dbg !4419

if.then157:                                       ; preds = %land.lhs.true154, %if.then145
  %107 = load i32, i32* %state146, align 4, !dbg !4420
  %or158 = or i32 %107, 16, !dbg !4420
  store i32 %or158, i32* %state146, align 4, !dbg !4420
  br label %if.end159, !dbg !4422

if.end159:                                        ; preds = %if.then157, %land.lhs.true154, %lor.lhs.false150
  %108 = load i32, i32* %state146, align 4, !dbg !4423
  %and160 = and i32 %108, 133120, !dbg !4425
  %tobool161 = icmp ne i32 %and160, 0, !dbg !4425
  br i1 %tobool161, label %if.then162, label %if.end169, !dbg !4426

if.then162:                                       ; preds = %if.end159
  %109 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4427
  %dt163 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %109, i32 0, i32 46, !dbg !4429
  %110 = load i8, i8* %dt163, align 1, !dbg !4429
  %conv164 = zext i8 %110 to i32, !dbg !4427
  %cmp165 = icmp ne i32 %conv164, 2, !dbg !4430
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !4431

if.then167:                                       ; preds = %if.then162
  store i8 1, i8* %disabled, align 1, !dbg !4432
  br label %if.end168, !dbg !4433

if.end168:                                        ; preds = %if.then167, %if.then162
  br label %if.end169, !dbg !4434

if.end169:                                        ; preds = %if.end168, %if.end159
  %111 = load i8, i8* %disabled, align 1, !dbg !4435
  %tobool170 = icmp ne i8 %111, 0, !dbg !4435
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !4437

if.then171:                                       ; preds = %if.end169
  %112 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4438
  call void @ui_widget_color_disabled(%struct.uiWidgetType* %112), !dbg !4439
  br label %if.end172, !dbg !4439

if.end172:                                        ; preds = %if.then171, %if.end169
  %113 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4440
  %state173 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %113, i32 0, i32 3, !dbg !4441
  %114 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state173, align 8, !dbg !4441
  %115 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4442
  %116 = load i32, i32* %state146, align 4, !dbg !4443
  call void %114(%struct.uiWidgetType* %115, i32 %116), !dbg !4440
  %117 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4444
  %custom174 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %117, i32 0, i32 5, !dbg !4446
  %118 = load void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %custom174, align 8, !dbg !4446
  %tobool175 = icmp ne void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* %118, null, !dbg !4444
  br i1 %tobool175, label %if.then176, label %if.else178, !dbg !4447

if.then176:                                       ; preds = %if.end172
  %119 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4448
  %custom177 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %119, i32 0, i32 5, !dbg !4449
  %120 = load void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %custom177, align 8, !dbg !4449
  %121 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4450
  %122 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4451
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %122, i32 0, i32 2, !dbg !4452
  %123 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4453
  %124 = load i32, i32* %state146, align 4, !dbg !4454
  %125 = load i32, i32* %roundboxalign, align 4, !dbg !4455
  call void %120(%struct.uiBut* %121, %struct.uiWidgetColors* %wcol, %struct.rcti* %123, i32 %124, i32 %125), !dbg !4448
  br label %if.end184, !dbg !4448

if.else178:                                       ; preds = %if.end172
  %126 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4456
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %126, i32 0, i32 4, !dbg !4458
  %127 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !4458
  %tobool179 = icmp ne void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* %127, null, !dbg !4456
  br i1 %tobool179, label %if.then180, label %if.end183, !dbg !4459

if.then180:                                       ; preds = %if.else178
  %128 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4460
  %draw181 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %128, i32 0, i32 4, !dbg !4461
  %129 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw181, align 8, !dbg !4461
  %130 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4462
  %wcol182 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %130, i32 0, i32 2, !dbg !4463
  %131 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4464
  %132 = load i32, i32* %state146, align 4, !dbg !4465
  %133 = load i32, i32* %roundboxalign, align 4, !dbg !4466
  call void %129(%struct.uiWidgetColors* %wcol182, %struct.rcti* %131, i32 %132, i32 %133), !dbg !4460
  br label %if.end183, !dbg !4460

if.end183:                                        ; preds = %if.then180, %if.else178
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then176
  %134 = load i8, i8* %disabled, align 1, !dbg !4467
  %tobool185 = icmp ne i8 %134, 0, !dbg !4467
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !4469

if.then186:                                       ; preds = %if.end184
  call void @glEnable(i32 3042), !dbg !4470
  br label %if.end187, !dbg !4470

if.end187:                                        ; preds = %if.then186, %if.end184
  %135 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4471
  %text = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %135, i32 0, i32 6, !dbg !4472
  %136 = load void (%struct.uiFontStyle*, %struct.uiWidgetColors*, %struct.uiBut*, %struct.rcti*)*, void (%struct.uiFontStyle*, %struct.uiWidgetColors*, %struct.uiBut*, %struct.rcti*)** %text, align 8, !dbg !4472
  %137 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !4473
  %138 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !4474
  %wcol188 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %138, i32 0, i32 2, !dbg !4475
  %139 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4476
  %140 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4477
  call void %136(%struct.uiFontStyle* %137, %struct.uiWidgetColors* %wcol188, %struct.uiBut* %139, %struct.rcti* %140), !dbg !4471
  %141 = load i8, i8* %disabled, align 1, !dbg !4478
  %tobool189 = icmp ne i8 %141, 0, !dbg !4478
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !4480

if.then190:                                       ; preds = %if.end187
  call void @glDisable(i32 3042), !dbg !4481
  br label %if.end191, !dbg !4481

if.end191:                                        ; preds = %if.then190, %if.end187
  br label %if.end192, !dbg !4482

if.end192:                                        ; preds = %if.end191, %if.end143
  ret void, !dbg !4483
}

declare dso_local %struct.bTheme* @UI_GetTheme() #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_text_icon(%struct.uiFontStyle* %fstyle, %struct.uiWidgetColors* %wcol, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !4484 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %show_menu_icon = alloca i8, align 1
  %alpha = alloca float, align 4
  %password_str = alloca [400 x i8], align 16
  %temp = alloca %struct.rcti, align 4
  %icon = alloca i32, align 4
  %icon_size = alloca float, align 4
  %temp80 = alloca %struct.rcti, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !4487, metadata !DIExpression()), !dbg !4488
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4489, metadata !DIExpression()), !dbg !4490
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4491, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.declare(metadata i8* %show_menu_icon, metadata !4493, metadata !DIExpression()), !dbg !4494
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4495
  %call = call i32 @ui_but_draw_menu_icon(%struct.uiBut* %0), !dbg !4496
  %conv = trunc i32 %call to i8, !dbg !4496
  store i8 %conv, i8* %show_menu_icon, align 1, !dbg !4494
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !4497, metadata !DIExpression()), !dbg !4498
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !4499
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %1, i32 0, i32 4, !dbg !4500
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 3, !dbg !4499
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4499
  %conv1 = uitofp i8 %2 to float, !dbg !4501
  %div = fdiv float %conv1, 2.550000e+02, !dbg !4502
  store float %div, float* %alpha, align 4, !dbg !4498
  call void @llvm.dbg.declare(metadata [400 x i8]* %password_str, metadata !4503, metadata !DIExpression()), !dbg !4504
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %password_str, i64 0, i64 0, !dbg !4505
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4506
  call void @ui_button_text_password_hide(i8* %arraydecay, %struct.uiBut* %3, i8 zeroext 0), !dbg !4507
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4508
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !4510
  %5 = load i32, i32* %type, align 8, !dbg !4510
  %cmp = icmp eq i32 %5, 5632, !dbg !4511
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4512

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4513
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 2, !dbg !4514
  %7 = load i32, i32* %flag, align 8, !dbg !4514
  %and = and i32 %7, 256, !dbg !4515
  %tobool = icmp ne i32 %and, 0, !dbg !4515
  br i1 %tobool, label %if.then, label %if.end, !dbg !4516

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rcti* %temp, metadata !4517, metadata !DIExpression()), !dbg !4519
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4520
  %9 = bitcast %struct.rcti* %temp to i8*, !dbg !4521
  %10 = bitcast %struct.rcti* %8 to i8*, !dbg !4521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false), !dbg !4521
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4522
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %11, i32 0, i32 1, !dbg !4523
  %12 = load i32, i32* %xmax, align 4, !dbg !4523
  %13 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4524
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %13), !dbg !4525
  %sub = sub nsw i32 %12, %call3, !dbg !4526
  %sub4 = sub nsw i32 %sub, 1, !dbg !4527
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %temp, i32 0, i32 0, !dbg !4528
  store i32 %sub4, i32* %xmin, align 4, !dbg !4529
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4530
  %15 = load float, float* %alpha, align 4, !dbg !4531
  call void @widget_draw_icon(%struct.uiBut* %14, i32 643, float %15, %struct.rcti* %temp, i8 zeroext 0), !dbg !4532
  br label %if.end, !dbg !4533

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4534
  %flag5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 2, !dbg !4536
  %17 = load i32, i32* %flag5, align 8, !dbg !4536
  %and6 = and i32 %17, 8, !dbg !4537
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4537
  br i1 %tobool7, label %if.then10, label %lor.lhs.false, !dbg !4538

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i8, i8* %show_menu_icon, align 1, !dbg !4539
  %conv8 = zext i8 %18 to i32, !dbg !4539
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !4539
  br i1 %tobool9, label %if.then10, label %if.end41, !dbg !4540

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %icon, metadata !4541, metadata !DIExpression()), !dbg !4544
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4545
  %flag11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 2, !dbg !4546
  %20 = load i32, i32* %flag11, align 8, !dbg !4546
  %and12 = and i32 %20, 8, !dbg !4547
  %tobool13 = icmp ne i32 %and12, 0, !dbg !4547
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !4548

cond.true:                                        ; preds = %if.then10
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4549
  %icon14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 44, !dbg !4550
  %22 = load i32, i32* %icon14, align 8, !dbg !4550
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4551
  %iconadd = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 51, !dbg !4552
  %24 = load i16, i16* %iconadd, align 4, !dbg !4552
  %conv15 = sext i16 %24 to i32, !dbg !4551
  %add = add i32 %22, %conv15, !dbg !4553
  br label %cond.end, !dbg !4548

cond.false:                                       ; preds = %if.then10
  br label %cond.end, !dbg !4548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !4548
  store i32 %cond, i32* %icon, align 4, !dbg !4544
  call void @llvm.dbg.declare(metadata float* %icon_size, metadata !4554, metadata !DIExpression()), !dbg !4555
  %25 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4556
  %call16 = call i32 @BLI_rcti_size_y(%struct.rcti* %25), !dbg !4556
  %conv17 = sitofp i32 %call16 to float, !dbg !4556
  %mul = fmul float 0x3FE99999A0000000, %conv17, !dbg !4556
  store float %mul, float* %icon_size, align 4, !dbg !4555
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4557
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 74, !dbg !4559
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4559
  %call18 = call zeroext i8 @ui_block_is_menu(%struct.uiBlock* %27), !dbg !4560
  %tobool19 = icmp ne i8 %call18, 0, !dbg !4560
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !4561

if.then20:                                        ; preds = %cond.end
  %28 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4562
  %conv21 = sext i16 %28 to i32, !dbg !4563
  %conv22 = sitofp i32 %conv21 to float, !dbg !4563
  %mul23 = fmul float 0x3FD3333340000000, %conv22, !dbg !4564
  %29 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4565
  %xmin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %29, i32 0, i32 0, !dbg !4566
  %30 = load i32, i32* %xmin24, align 4, !dbg !4567
  %conv25 = sitofp i32 %30 to float, !dbg !4567
  %add26 = fadd float %conv25, %mul23, !dbg !4567
  %conv27 = fptosi float %add26 to i32, !dbg !4567
  store i32 %conv27, i32* %xmin24, align 4, !dbg !4567
  br label %if.end28, !dbg !4565

if.end28:                                         ; preds = %if.then20, %cond.end
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4568
  %32 = load i32, i32* %icon, align 4, !dbg !4569
  %33 = load float, float* %alpha, align 4, !dbg !4570
  %34 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4571
  %35 = load i8, i8* %show_menu_icon, align 1, !dbg !4572
  call void @widget_draw_icon(%struct.uiBut* %31, i32 %32, float %33, %struct.rcti* %34, i8 zeroext %35), !dbg !4573
  %36 = load float, float* %icon_size, align 4, !dbg !4574
  %37 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4575
  %xmin29 = getelementptr inbounds %struct.rcti, %struct.rcti* %37, i32 0, i32 0, !dbg !4576
  %38 = load i32, i32* %xmin29, align 4, !dbg !4577
  %conv30 = sitofp i32 %38 to float, !dbg !4577
  %add31 = fadd float %conv30, %36, !dbg !4577
  %conv32 = fptosi float %add31 to i32, !dbg !4577
  store i32 %conv32, i32* %xmin29, align 4, !dbg !4577
  %39 = load i8, i8* %show_menu_icon, align 1, !dbg !4578
  %tobool33 = icmp ne i8 %39, 0, !dbg !4578
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !4580

if.then34:                                        ; preds = %if.end28
  %40 = load float, float* %icon_size, align 4, !dbg !4581
  %div35 = fdiv float %40, 2.000000e+00, !dbg !4583
  %41 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4584
  %xmax36 = getelementptr inbounds %struct.rcti, %struct.rcti* %41, i32 0, i32 1, !dbg !4585
  %42 = load i32, i32* %xmax36, align 4, !dbg !4586
  %conv37 = sitofp i32 %42 to float, !dbg !4586
  %sub38 = fsub float %conv37, %div35, !dbg !4586
  %conv39 = fptosi float %sub38 to i32, !dbg !4586
  store i32 %conv39, i32* %xmax36, align 4, !dbg !4586
  br label %if.end40, !dbg !4587

if.end40:                                         ; preds = %if.then34, %if.end28
  br label %if.end41, !dbg !4588

if.end41:                                         ; preds = %if.end40, %lor.lhs.false
  %43 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4589
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 69, !dbg !4591
  %44 = load i8*, i8** %editstr, align 8, !dbg !4591
  %tobool42 = icmp ne i8* %44, null, !dbg !4589
  br i1 %tobool42, label %if.then46, label %lor.lhs.false43, !dbg !4592

lor.lhs.false43:                                  ; preds = %if.end41
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4593
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 3, !dbg !4594
  %46 = load i32, i32* %drawflag, align 4, !dbg !4594
  %and44 = and i32 %46, 2, !dbg !4595
  %tobool45 = icmp ne i32 %and44, 0, !dbg !4595
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !4596

if.then46:                                        ; preds = %lor.lhs.false43, %if.end41
  %47 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4597
  %conv47 = sext i16 %47 to i32, !dbg !4599
  %conv48 = sitofp i32 %conv47 to float, !dbg !4599
  %mul49 = fmul float 0x3FD99999A0000000, %conv48, !dbg !4600
  %48 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4601
  %block50 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 74, !dbg !4602
  %49 = load %struct.uiBlock*, %struct.uiBlock** %block50, align 8, !dbg !4602
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %49, i32 0, i32 12, !dbg !4603
  %50 = load float, float* %aspect, align 8, !dbg !4603
  %div51 = fdiv float %mul49, %50, !dbg !4604
  %51 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4605
  %xmin52 = getelementptr inbounds %struct.rcti, %struct.rcti* %51, i32 0, i32 0, !dbg !4606
  %52 = load i32, i32* %xmin52, align 4, !dbg !4607
  %conv53 = sitofp i32 %52 to float, !dbg !4607
  %add54 = fadd float %conv53, %div51, !dbg !4607
  %conv55 = fptosi float %add54 to i32, !dbg !4607
  store i32 %conv55, i32* %xmin52, align 4, !dbg !4607
  br label %if.end71, !dbg !4608

if.else:                                          ; preds = %lor.lhs.false43
  %53 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4609
  %drawflag56 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 3, !dbg !4611
  %54 = load i32, i32* %drawflag56, align 4, !dbg !4611
  %and57 = and i32 %54, 8, !dbg !4612
  %tobool58 = icmp ne i32 %and57, 0, !dbg !4612
  br i1 %tobool58, label %if.then59, label %if.end70, !dbg !4613

if.then59:                                        ; preds = %if.else
  %55 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4614
  %conv60 = sext i16 %55 to i32, !dbg !4616
  %conv61 = sitofp i32 %conv60 to float, !dbg !4616
  %mul62 = fmul float 0x3FD99999A0000000, %conv61, !dbg !4617
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4618
  %block63 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 74, !dbg !4619
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block63, align 8, !dbg !4619
  %aspect64 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %57, i32 0, i32 12, !dbg !4620
  %58 = load float, float* %aspect64, align 8, !dbg !4620
  %div65 = fdiv float %mul62, %58, !dbg !4621
  %59 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4622
  %xmax66 = getelementptr inbounds %struct.rcti, %struct.rcti* %59, i32 0, i32 1, !dbg !4623
  %60 = load i32, i32* %xmax66, align 4, !dbg !4624
  %conv67 = sitofp i32 %60 to float, !dbg !4624
  %sub68 = fsub float %conv67, %div65, !dbg !4624
  %conv69 = fptosi float %sub68 to i32, !dbg !4624
  store i32 %conv69, i32* %xmax66, align 4, !dbg !4624
  br label %if.end70, !dbg !4625

if.end70:                                         ; preds = %if.then59, %if.else
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then46
  %61 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4626
  %type72 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %61, i32 0, i32 4, !dbg !4628
  %62 = load i32, i32* %type72, align 8, !dbg !4628
  %cmp73 = icmp eq i32 %62, 26624, !dbg !4629
  br i1 %cmp73, label %land.lhs.true75, label %if.end96, !dbg !4630

land.lhs.true75:                                  ; preds = %if.end71
  %63 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4631
  %call76 = call zeroext i8 @ui_is_but_search_unlink_visible(%struct.uiBut* %63), !dbg !4632
  %conv77 = zext i8 %call76 to i32, !dbg !4632
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !4632
  br i1 %tobool78, label %if.then79, label %if.end96, !dbg !4633

if.then79:                                        ; preds = %land.lhs.true75
  call void @llvm.dbg.declare(metadata %struct.rcti* %temp80, metadata !4634, metadata !DIExpression()), !dbg !4636
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4637
  %65 = bitcast %struct.rcti* %temp80 to i8*, !dbg !4638
  %66 = bitcast %struct.rcti* %64 to i8*, !dbg !4638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 16, i1 false), !dbg !4638
  %xmax81 = getelementptr inbounds %struct.rcti, %struct.rcti* %temp80, i32 0, i32 1, !dbg !4639
  %67 = load i32, i32* %xmax81, align 4, !dbg !4639
  %conv82 = sitofp i32 %67 to float, !dbg !4640
  %68 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4641
  %call83 = call i32 @BLI_rcti_size_y(%struct.rcti* %68), !dbg !4642
  %conv84 = sitofp i32 %call83 to float, !dbg !4642
  %mul85 = fmul float %conv84, 0x3FF147AE20000000, !dbg !4643
  %sub86 = fsub float %conv82, %mul85, !dbg !4644
  %conv87 = fptosi float %sub86 to i32, !dbg !4640
  %xmin88 = getelementptr inbounds %struct.rcti, %struct.rcti* %temp80, i32 0, i32 0, !dbg !4645
  store i32 %conv87, i32* %xmin88, align 4, !dbg !4646
  %69 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4647
  %70 = load float, float* %alpha, align 4, !dbg !4648
  call void @widget_draw_icon(%struct.uiBut* %69, i32 19, float %70, %struct.rcti* %temp80, i8 zeroext 0), !dbg !4649
  %71 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4650
  %call89 = call i32 @BLI_rcti_size_y(%struct.rcti* %71), !dbg !4650
  %conv90 = sitofp i32 %call89 to float, !dbg !4650
  %mul91 = fmul float 0x3FE99999A0000000, %conv90, !dbg !4650
  %72 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4651
  %xmax92 = getelementptr inbounds %struct.rcti, %struct.rcti* %72, i32 0, i32 1, !dbg !4652
  %73 = load i32, i32* %xmax92, align 4, !dbg !4653
  %conv93 = sitofp i32 %73 to float, !dbg !4653
  %sub94 = fsub float %conv93, %mul91, !dbg !4653
  %conv95 = fptosi float %sub94 to i32, !dbg !4653
  store i32 %conv95, i32* %xmax92, align 4, !dbg !4653
  br label %if.end96, !dbg !4654

if.end96:                                         ; preds = %if.then79, %land.lhs.true75, %if.end71
  %74 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4655
  %editstr97 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %74, i32 0, i32 69, !dbg !4657
  %75 = load i8*, i8** %editstr97, align 8, !dbg !4657
  %tobool98 = icmp ne i8* %75, null, !dbg !4655
  br i1 %tobool98, label %land.lhs.true99, label %if.else104, !dbg !4658

land.lhs.true99:                                  ; preds = %if.end96
  %76 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4659
  %pos = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 12, !dbg !4660
  %77 = load i16, i16* %pos, align 4, !dbg !4660
  %conv100 = sext i16 %77 to i32, !dbg !4659
  %cmp101 = icmp sge i32 %conv100, 0, !dbg !4661
  br i1 %cmp101, label %if.then103, label %if.else104, !dbg !4662

if.then103:                                       ; preds = %land.lhs.true99
  %78 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !4663
  %79 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4665
  %80 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4666
  call void @ui_text_clip_cursor(%struct.uiFontStyle* %78, %struct.uiBut* %79, %struct.rcti* %80), !dbg !4667
  br label %if.end133, !dbg !4668

if.else104:                                       ; preds = %land.lhs.true99, %if.end96
  %81 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4669
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %81, i32 0, i32 17, !dbg !4671
  %arrayidx105 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !4669
  %82 = load i8, i8* %arrayidx105, align 8, !dbg !4669
  %conv106 = zext i8 %82 to i32, !dbg !4669
  %cmp107 = icmp eq i32 %conv106, 0, !dbg !4672
  br i1 %cmp107, label %if.then109, label %if.else110, !dbg !4673

if.then109:                                       ; preds = %if.else104
  %83 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4674
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %83, i32 0, i32 11, !dbg !4676
  store i16 0, i16* %ofs, align 2, !dbg !4677
  %84 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4678
  %strwidth = getelementptr inbounds %struct.uiBut, %struct.uiBut* %84, i32 0, i32 9, !dbg !4679
  store i16 0, i16* %strwidth, align 2, !dbg !4680
  br label %if.end132, !dbg !4681

if.else110:                                       ; preds = %if.else104
  %85 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4682
  %type111 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %85, i32 0, i32 4, !dbg !4682
  %86 = load i32, i32* %type111, align 8, !dbg !4682
  %cmp112 = icmp eq i32 %86, 2560, !dbg !4682
  br i1 %cmp112, label %if.then118, label %lor.lhs.false114, !dbg !4682

lor.lhs.false114:                                 ; preds = %if.else110
  %87 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4682
  %type115 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %87, i32 0, i32 4, !dbg !4682
  %88 = load i32, i32* %type115, align 8, !dbg !4682
  %cmp116 = icmp eq i32 %88, 7168, !dbg !4682
  br i1 %cmp116, label %if.then118, label %if.else119, !dbg !4684

if.then118:                                       ; preds = %lor.lhs.false114, %if.else110
  %89 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !4685
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4687
  %91 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4688
  call void @ui_text_clip_right_label(%struct.uiFontStyle* %89, %struct.uiBut* %90, %struct.rcti* %91), !dbg !4689
  br label %if.end131, !dbg !4690

if.else119:                                       ; preds = %lor.lhs.false114
  %92 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4691
  %block120 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %92, i32 0, i32 74, !dbg !4693
  %93 = load %struct.uiBlock*, %struct.uiBlock** %block120, align 8, !dbg !4693
  %flag121 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %93, i32 0, i32 27, !dbg !4694
  %94 = load i32, i32* %flag121, align 8, !dbg !4694
  %and122 = and i32 %94, 1, !dbg !4695
  %tobool123 = icmp ne i32 %and122, 0, !dbg !4695
  br i1 %tobool123, label %land.lhs.true124, label %if.else129, !dbg !4696

land.lhs.true124:                                 ; preds = %if.else119
  %95 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4697
  %type125 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %95, i32 0, i32 4, !dbg !4698
  %96 = load i32, i32* %type125, align 8, !dbg !4698
  %cmp126 = icmp eq i32 %96, 512, !dbg !4699
  br i1 %cmp126, label %if.then128, label %if.else129, !dbg !4700

if.then128:                                       ; preds = %land.lhs.true124
  %97 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !4701
  %98 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4703
  %99 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4704
  call void @ui_text_clip_middle_protect_right(%struct.uiFontStyle* %97, %struct.uiBut* %98, %struct.rcti* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)), !dbg !4705
  br label %if.end130, !dbg !4706

if.else129:                                       ; preds = %land.lhs.true124, %if.else119
  %100 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !4707
  %101 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4709
  %102 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4710
  call void @ui_text_clip_middle(%struct.uiFontStyle* %100, %struct.uiBut* %101, %struct.rcti* %102), !dbg !4711
  br label %if.end130

if.end130:                                        ; preds = %if.else129, %if.then128
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then118
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then109
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then103
  %103 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !4712
  %104 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !4713
  %105 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4714
  %106 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4715
  call void @widget_draw_text(%struct.uiFontStyle* %103, %struct.uiWidgetColors* %104, %struct.uiBut* %105, %struct.rcti* %106), !dbg !4716
  %arraydecay134 = getelementptr inbounds [400 x i8], [400 x i8]* %password_str, i64 0, i64 0, !dbg !4717
  %107 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4718
  call void @ui_button_text_password_hide(i8* %arraydecay134, %struct.uiBut* %107, i8 zeroext 1), !dbg !4719
  ret void, !dbg !4720
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_separator(%struct.rcti* %rect, %struct.uiWidgetColors* %wcol) #0 !dbg !4721 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %y = alloca i32, align 4
  %col = alloca [4 x i8], align 1
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4724, metadata !DIExpression()), !dbg !4725
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !4726, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4728, metadata !DIExpression()), !dbg !4729
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4730
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 2, !dbg !4731
  %1 = load i32, i32* %ymin, align 4, !dbg !4731
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4732
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %2), !dbg !4733
  %div = sdiv i32 %call, 2, !dbg !4734
  %add = add nsw i32 %1, %div, !dbg !4735
  %sub = sub nsw i32 %add, 1, !dbg !4736
  store i32 %sub, i32* %y, align 4, !dbg !4729
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !4737, metadata !DIExpression()), !dbg !4738
  %3 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !4739
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %3, i32 0, i32 4, !dbg !4740
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !4739
  %4 = load i8, i8* %arrayidx, align 2, !dbg !4739
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4741
  store i8 %4, i8* %arrayidx1, align 1, !dbg !4742
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !4743
  %text2 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %5, i32 0, i32 4, !dbg !4744
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %text2, i64 0, i64 1, !dbg !4743
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !4743
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !4745
  store i8 %6, i8* %arrayidx4, align 1, !dbg !4746
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !4747
  %text5 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 4, !dbg !4748
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %text5, i64 0, i64 2, !dbg !4747
  %8 = load i8, i8* %arrayidx6, align 2, !dbg !4747
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !4749
  store i8 %8, i8* %arrayidx7, align 1, !dbg !4750
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !4751
  store i8 30, i8* %arrayidx8, align 1, !dbg !4752
  call void @glEnable(i32 3042), !dbg !4753
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4754
  call void @glColor4ubv(i8* %arraydecay), !dbg !4755
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4756
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %9, i32 0, i32 0, !dbg !4757
  %10 = load i32, i32* %xmin, align 4, !dbg !4757
  %11 = load i32, i32* %y, align 4, !dbg !4758
  %12 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4759
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 1, !dbg !4760
  %13 = load i32, i32* %xmax, align 4, !dbg !4760
  %14 = load i32, i32* %y, align 4, !dbg !4761
  call void @sdrawline(i32 %10, i32 %11, i32 %13, i32 %14), !dbg !4762
  call void @glDisable(i32 3042), !dbg !4763
  ret void, !dbg !4764
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiWidgetType* @widget_type(i32 %type) #0 !dbg !1428 {
entry:
  %type.addr = alloca i32, align 4
  %btheme = alloca %struct.bTheme*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !4767, metadata !DIExpression()), !dbg !4768
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !4769
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !4768
  %0 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4770
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %0, i32 0, i32 3, !dbg !4771
  %wcol_regular = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 0, !dbg !4772
  store %struct.uiWidgetColors* %wcol_regular, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4773
  %1 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4774
  %tui1 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %1, i32 0, i32 3, !dbg !4775
  %wcol_state = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui1, i32 0, i32 18, !dbg !4776
  store %struct.uiWidgetStateColors* %wcol_state, %struct.uiWidgetStateColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 1), align 8, !dbg !4777
  store void (%struct.uiWidgetType*, i32)* @widget_state, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4778
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_but, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4779
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* null, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4780
  store void (%struct.uiFontStyle*, %struct.uiWidgetColors*, %struct.uiBut*, %struct.rcti*)* @widget_draw_text_icon, void (%struct.uiFontStyle*, %struct.uiWidgetColors*, %struct.uiBut*, %struct.rcti*)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 6), align 8, !dbg !4781
  %2 = load i32, i32* %type.addr, align 4, !dbg !4782
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 5, label %sw.bb9
    i32 6, label %sw.bb11
    i32 7, label %sw.bb13
    i32 8, label %sw.bb15
    i32 9, label %sw.bb17
    i32 10, label %sw.bb19
    i32 11, label %sw.bb20
    i32 12, label %sw.bb21
    i32 13, label %sw.bb22
    i32 14, label %sw.bb24
    i32 15, label %sw.bb27
    i32 16, label %sw.bb30
    i32 17, label %sw.bb33
    i32 18, label %sw.bb35
    i32 20, label %sw.bb37
    i32 21, label %sw.bb39
    i32 22, label %sw.bb40
    i32 25, label %sw.bb41
    i32 23, label %sw.bb43
    i32 24, label %sw.bb44
    i32 26, label %sw.bb45
    i32 27, label %sw.bb47
    i32 28, label %sw.bb49
    i32 19, label %sw.bb51
  ], !dbg !4783

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !4784

sw.bb2:                                           ; preds = %entry
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* null, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4786
  store void (%struct.uiWidgetType*, i32)* @widget_state_label, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4787
  br label %sw.epilog, !dbg !4788

sw.bb3:                                           ; preds = %entry
  %3 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4789
  %tui4 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %3, i32 0, i32 3, !dbg !4790
  %wcol_toggle = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui4, i32 0, i32 5, !dbg !4791
  store %struct.uiWidgetColors* %wcol_toggle, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4792
  br label %sw.epilog, !dbg !4793

sw.bb5:                                           ; preds = %entry
  %4 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4794
  %tui6 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %4, i32 0, i32 3, !dbg !4795
  %wcol_option = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui6, i32 0, i32 4, !dbg !4796
  store %struct.uiWidgetColors* %wcol_option, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4797
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_optionbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4798
  br label %sw.epilog, !dbg !4799

sw.bb7:                                           ; preds = %entry
  %5 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4800
  %tui8 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %5, i32 0, i32 3, !dbg !4801
  %wcol_radio = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui8, i32 0, i32 3, !dbg !4802
  store %struct.uiWidgetColors* %wcol_radio, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4803
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_radiobut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4804
  br label %sw.epilog, !dbg !4805

sw.bb9:                                           ; preds = %entry
  %6 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4806
  %tui10 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %6, i32 0, i32 3, !dbg !4807
  %wcol_num = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui10, i32 0, i32 6, !dbg !4808
  store %struct.uiWidgetColors* %wcol_num, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4809
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_numbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4810
  br label %sw.epilog, !dbg !4811

sw.bb11:                                          ; preds = %entry
  %7 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4812
  %tui12 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %7, i32 0, i32 3, !dbg !4813
  %wcol_numslider = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui12, i32 0, i32 7, !dbg !4814
  store %struct.uiWidgetColors* %wcol_numslider, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4815
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_numslider, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4816
  store void (%struct.uiWidgetType*, i32)* @widget_state_numslider, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4817
  br label %sw.epilog, !dbg !4818

sw.bb13:                                          ; preds = %entry
  %8 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4819
  %tui14 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %8, i32 0, i32 3, !dbg !4820
  %wcol_tool = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui14, i32 0, i32 1, !dbg !4821
  store %struct.uiWidgetColors* %wcol_tool, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4822
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_roundbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4823
  br label %sw.epilog, !dbg !4824

sw.bb15:                                          ; preds = %entry
  %9 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4825
  %tui16 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %9, i32 0, i32 3, !dbg !4826
  %wcol_tooltip = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui16, i32 0, i32 12, !dbg !4827
  store %struct.uiWidgetColors* %wcol_tooltip, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4828
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menu_back, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4829
  br label %sw.epilog, !dbg !4830

sw.bb17:                                          ; preds = %entry
  %10 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4831
  %tui18 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %10, i32 0, i32 3, !dbg !4832
  %wcol_text = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui18, i32 0, i32 2, !dbg !4833
  store %struct.uiWidgetColors* %wcol_text, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4834
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_textbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4835
  br label %sw.epilog, !dbg !4836

sw.bb19:                                          ; preds = %entry
  br label %sw.epilog, !dbg !4837

sw.bb20:                                          ; preds = %entry
  br label %sw.epilog, !dbg !4838

sw.bb21:                                          ; preds = %entry
  br label %sw.epilog, !dbg !4839

sw.bb22:                                          ; preds = %entry
  %11 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4840
  %tui23 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %11, i32 0, i32 3, !dbg !4841
  %wcol_menu = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui23, i32 0, i32 8, !dbg !4842
  store %struct.uiWidgetColors* %wcol_menu, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4843
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menubut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4844
  br label %sw.epilog, !dbg !4845

sw.bb24:                                          ; preds = %entry
  %12 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4846
  %tui25 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %12, i32 0, i32 3, !dbg !4847
  %wcol_menu26 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui25, i32 0, i32 8, !dbg !4848
  store %struct.uiWidgetColors* %wcol_menu26, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4849
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menuiconbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4850
  br label %sw.epilog, !dbg !4851

sw.bb27:                                          ; preds = %entry
  %13 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4852
  %tui28 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %13, i32 0, i32 3, !dbg !4853
  %wcol_menu29 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui28, i32 0, i32 8, !dbg !4854
  store %struct.uiWidgetColors* %wcol_menu29, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4855
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menubut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4856
  br label %sw.epilog, !dbg !4857

sw.bb30:                                          ; preds = %entry
  %14 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4858
  %tui31 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %14, i32 0, i32 3, !dbg !4859
  %wcol_menu32 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui31, i32 0, i32 8, !dbg !4860
  store %struct.uiWidgetColors* %wcol_menu32, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4861
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menunodebut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4862
  br label %sw.epilog, !dbg !4863

sw.bb33:                                          ; preds = %entry
  %15 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4864
  %tui34 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %15, i32 0, i32 3, !dbg !4865
  %wcol_pulldown = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui34, i32 0, i32 9, !dbg !4866
  store %struct.uiWidgetColors* %wcol_pulldown, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4867
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_pulldownbut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4868
  store void (%struct.uiWidgetType*, i32)* @widget_state_pulldown, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4869
  br label %sw.epilog, !dbg !4870

sw.bb35:                                          ; preds = %entry
  %16 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4871
  %tui36 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %16, i32 0, i32 3, !dbg !4872
  %wcol_menu_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui36, i32 0, i32 11, !dbg !4873
  store %struct.uiWidgetColors* %wcol_menu_item, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4874
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menu_itembut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4875
  store void (%struct.uiWidgetType*, i32)* @widget_state_menu_item, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4876
  br label %sw.epilog, !dbg !4877

sw.bb37:                                          ; preds = %entry
  %17 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4878
  %tui38 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %17, i32 0, i32 3, !dbg !4879
  %wcol_menu_back = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui38, i32 0, i32 10, !dbg !4880
  store %struct.uiWidgetColors* %wcol_menu_back, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4881
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menu_back, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4882
  br label %sw.epilog, !dbg !4883

sw.bb39:                                          ; preds = %entry
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_icon_has_anim, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4884
  br label %sw.epilog, !dbg !4885

sw.bb40:                                          ; preds = %entry
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_swatch, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4886
  br label %sw.epilog, !dbg !4887

sw.bb41:                                          ; preds = %entry
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_box, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4888
  %18 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4889
  %tui42 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %18, i32 0, i32 3, !dbg !4890
  %wcol_box = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui42, i32 0, i32 13, !dbg !4891
  store %struct.uiWidgetColors* %wcol_box, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4892
  br label %sw.epilog, !dbg !4893

sw.bb43:                                          ; preds = %entry
  br label %sw.epilog, !dbg !4894

sw.bb44:                                          ; preds = %entry
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_normal, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4895
  br label %sw.epilog, !dbg !4896

sw.bb45:                                          ; preds = %entry
  %19 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4897
  %tui46 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %19, i32 0, i32 3, !dbg !4898
  %wcol_scroll = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui46, i32 0, i32 14, !dbg !4899
  store %struct.uiWidgetColors* %wcol_scroll, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4900
  store void (%struct.uiWidgetType*, i32)* @widget_state_nothing, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4901
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_scroll, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4902
  br label %sw.epilog, !dbg !4903

sw.bb47:                                          ; preds = %entry
  %20 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4904
  %tui48 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %20, i32 0, i32 3, !dbg !4905
  %wcol_list_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui48, i32 0, i32 16, !dbg !4906
  store %struct.uiWidgetColors* %wcol_list_item, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4907
  store void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_list_itembut, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 4), align 8, !dbg !4908
  br label %sw.epilog, !dbg !4909

sw.bb49:                                          ; preds = %entry
  %21 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4910
  %tui50 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %21, i32 0, i32 3, !dbg !4911
  %wcol_progress = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui50, i32 0, i32 15, !dbg !4912
  store %struct.uiWidgetColors* %wcol_progress, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4913
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_progressbar, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4914
  br label %sw.epilog, !dbg !4915

sw.bb51:                                          ; preds = %entry
  %22 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4916
  %tui52 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %22, i32 0, i32 3, !dbg !4917
  %wcol_pie_menu = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui52, i32 0, i32 17, !dbg !4918
  store %struct.uiWidgetColors* %wcol_pie_menu, %struct.uiWidgetColors** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 0), align 8, !dbg !4919
  store void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)* @widget_menu_radial_itembut, void (%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*, i32, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 5), align 8, !dbg !4920
  store void (%struct.uiWidgetType*, i32)* @widget_state_pie_menu_item, void (%struct.uiWidgetType*, i32)** getelementptr inbounds (%struct.uiWidgetType, %struct.uiWidgetType* @widget_type.wt, i32 0, i32 3), align 8, !dbg !4921
  br label %sw.epilog, !dbg !4922

sw.epilog:                                        ; preds = %entry, %sw.bb51, %sw.bb49, %sw.bb47, %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb41, %sw.bb40, %sw.bb39, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb30, %sw.bb27, %sw.bb24, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb2, %sw.bb
  ret %struct.uiWidgetType* @widget_type.wt, !dbg !4923
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_option_menu(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !4924 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  %btheme = alloca %struct.bTheme*, align 8
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !4927, metadata !DIExpression()), !dbg !4928
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !4931, metadata !DIExpression()), !dbg !4932
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !4933
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !4932
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !4934
  %1 = load i32, i32* %state.addr, align 4, !dbg !4935
  call void @widget_state(%struct.uiWidgetType* %0, i32 %1), !dbg !4936
  %2 = load i32, i32* %state.addr, align 4, !dbg !4937
  %and = and i32 %2, 1, !dbg !4939
  %tobool = icmp ne i32 %and, 0, !dbg !4939
  br i1 %tobool, label %if.then, label %if.else, !dbg !4940

if.then:                                          ; preds = %entry
  %3 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !4941
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %3, i32 0, i32 2, !dbg !4942
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol, i32 0, i32 4, !dbg !4943
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !4941
  %4 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4944
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %4, i32 0, i32 3, !dbg !4945
  %wcol_menu_back = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 10, !dbg !4946
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_menu_back, i32 0, i32 5, !dbg !4947
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !4944
  call void @copy_v3_v3_char(i8* %arraydecay, i8* %arraydecay1), !dbg !4948
  br label %if.end, !dbg !4948

if.else:                                          ; preds = %entry
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !4949
  %wcol2 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %5, i32 0, i32 2, !dbg !4950
  %text3 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol2, i32 0, i32 4, !dbg !4951
  %arraydecay4 = getelementptr inbounds [4 x i8], [4 x i8]* %text3, i64 0, i64 0, !dbg !4949
  %6 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4952
  %tui5 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %6, i32 0, i32 3, !dbg !4953
  %wcol_menu_back6 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui5, i32 0, i32 10, !dbg !4954
  %text7 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_menu_back6, i32 0, i32 4, !dbg !4955
  %arraydecay8 = getelementptr inbounds [4 x i8], [4 x i8]* %text7, i64 0, i64 0, !dbg !4952
  call void @copy_v3_v3_char(i8* %arraydecay4, i8* %arraydecay8), !dbg !4956
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4957
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_link(%struct.uiBut* %but, %struct.uiWidgetColors* %UNUSED_wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !4958 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %UNUSED_wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %rectlink = alloca %struct.rcti, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4959, metadata !DIExpression()), !dbg !4960
  store %struct.uiWidgetColors* %UNUSED_wcol, %struct.uiWidgetColors** %UNUSED_wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %UNUSED_wcol.addr, metadata !4961, metadata !DIExpression()), !dbg !4962
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4963, metadata !DIExpression()), !dbg !4964
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4969
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 2, !dbg !4971
  %1 = load i32, i32* %flag, align 8, !dbg !4971
  %and = and i32 %1, 1, !dbg !4972
  %tobool = icmp ne i32 %and, 0, !dbg !4972
  br i1 %tobool, label %if.then, label %if.end, !dbg !4973

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rcti* %rectlink, metadata !4974, metadata !DIExpression()), !dbg !4976
  call void @UI_ThemeColor(i32 4), !dbg !4977
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4978
  %call = call i32 @BLI_rcti_cent_x(%struct.rcti* %2), !dbg !4979
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rectlink, i32 0, i32 0, !dbg !4980
  store i32 %call, i32* %xmin, align 4, !dbg !4981
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4982
  %call1 = call i32 @BLI_rcti_cent_y(%struct.rcti* %3), !dbg !4983
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rectlink, i32 0, i32 2, !dbg !4984
  store i32 %call1, i32* %ymin, align 4, !dbg !4985
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4986
  %linkto = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 41, !dbg !4987
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %linkto, i64 0, i64 0, !dbg !4986
  %5 = load i16, i16* %arrayidx, align 8, !dbg !4986
  %conv = sext i16 %5 to i32, !dbg !4986
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rectlink, i32 0, i32 1, !dbg !4988
  store i32 %conv, i32* %xmax, align 4, !dbg !4989
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4990
  %linkto2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 41, !dbg !4991
  %arrayidx3 = getelementptr inbounds [2 x i16], [2 x i16]* %linkto2, i64 0, i64 1, !dbg !4990
  %7 = load i16, i16* %arrayidx3, align 2, !dbg !4990
  %conv4 = sext i16 %7 to i32, !dbg !4990
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rectlink, i32 0, i32 3, !dbg !4992
  store i32 %conv4, i32* %ymax, align 4, !dbg !4993
  call void @ui_draw_link_bezier(%struct.rcti* %rectlink), !dbg !4994
  br label %if.end, !dbg !4995

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4996
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_extra_mask(%struct.bContext* %C, %struct.uiBut* %but, %struct.uiWidgetType* %wt, %struct.rcti* %rect) #0 !dbg !4997 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %col = alloca [4 x i8], align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !5004, metadata !DIExpression()), !dbg !5005
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata float* %rad, metadata !5010, metadata !DIExpression()), !dbg !5011
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5012
  %conv = sext i16 %0 to i32, !dbg !5013
  %conv1 = sitofp i32 %conv to float, !dbg !5013
  %mul = fmul float 2.500000e-01, %conv1, !dbg !5014
  store float %mul, float* %rad, align 4, !dbg !5011
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !5015, metadata !DIExpression()), !dbg !5016
  %1 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !5017
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %1, i32 0, i32 2, !dbg !5018
  %2 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !5019
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %2, i32 0, i32 0, !dbg !5020
  %3 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !5020
  %4 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !5021
  %5 = bitcast %struct.uiWidgetColors* %3 to i8*, !dbg !5021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 2 %5, i64 32, i1 false), !dbg !5021
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !5022
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5023
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 74, !dbg !5025
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5025
  %drawextra = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 24, !dbg !5026
  %8 = load void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %drawextra, align 8, !dbg !5026
  %tobool = icmp ne void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)* %8, null, !dbg !5023
  br i1 %tobool, label %if.then, label %if.end, !dbg !5027

if.then:                                          ; preds = %entry
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5028
  %block2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 74, !dbg !5030
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block2, align 8, !dbg !5030
  %drawextra3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 24, !dbg !5031
  %11 = load void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %drawextra3, align 8, !dbg !5031
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5032
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5033
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 19, !dbg !5034
  %14 = load i8*, i8** %poin, align 8, !dbg !5034
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5035
  %block4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 74, !dbg !5036
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block4, align 8, !dbg !5036
  %drawextra_arg1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 25, !dbg !5037
  %17 = load i8*, i8** %drawextra_arg1, align 8, !dbg !5037
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5038
  %block5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 74, !dbg !5039
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block5, align 8, !dbg !5039
  %drawextra_arg2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 26, !dbg !5040
  %20 = load i8*, i8** %drawextra_arg2, align 8, !dbg !5040
  %21 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5041
  call void %11(%struct.bContext* %12, i8* %14, i8* %17, i8* %20, %struct.rcti* %21), !dbg !5028
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !5042
  call void @UI_GetThemeColor3ubv(i32 2, i8* %arraydecay), !dbg !5043
  %arraydecay6 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !5044
  call void @glColor3ubv(i8* %arraydecay6), !dbg !5045
  %22 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5046
  %23 = load float, float* %rad, align 4, !dbg !5047
  call void @round_box__edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %22, float 0.000000e+00, float %23), !dbg !5048
  call void @widgetbase_outline(%struct.uiWidgetBase* %wtb), !dbg !5049
  br label %if.end, !dbg !5050

if.end:                                           ; preds = %if.then, %entry
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5051
  %25 = load float, float* %rad, align 4, !dbg !5052
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %24, float %25), !dbg !5053
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !5054
  store i8 1, i8* %outline, align 1, !dbg !5055
  %inner = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 5, !dbg !5056
  store i8 0, i8* %inner, align 8, !dbg !5057
  %26 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !5058
  %wcol7 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %26, i32 0, i32 2, !dbg !5059
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %wcol7), !dbg !5060
  ret void, !dbg !5061
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_but_HSV_v(%struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !5062 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %rgb = alloca [3 x float], align 4
  %hsv = alloca [3 x float], align 4
  %v = alloca float, align 4
  %color_profile = alloca i8, align 1
  %range = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata float* %rad, metadata !5071, metadata !DIExpression()), !dbg !5072
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5073
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %0), !dbg !5074
  %conv = sitofp i32 %call to float, !dbg !5074
  %mul = fmul float 5.000000e-01, %conv, !dbg !5075
  store float %mul, float* %rad, align 4, !dbg !5072
  call void @llvm.dbg.declare(metadata float* %x, metadata !5076, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.declare(metadata float* %y, metadata !5078, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !5080, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.declare(metadata [3 x float]* %hsv, metadata !5082, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.declare(metadata float* %v, metadata !5084, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.declare(metadata i8* %color_profile, metadata !5086, metadata !DIExpression()), !dbg !5087
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5088
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 74, !dbg !5089
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5089
  %color_profile1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 51, !dbg !5090
  %3 = load i8, i8* %color_profile1, align 4, !dbg !5090
  store i8 %3, i8* %color_profile, align 1, !dbg !5087
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5091
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 55, !dbg !5093
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !5093
  %tobool = icmp ne %struct.PropertyRNA* %5, null, !dbg !5091
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5094

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5095
  %rnaprop2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 55, !dbg !5096
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop2, align 8, !dbg !5096
  %call3 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %7), !dbg !5097
  %cmp = icmp eq i32 %call3, 30, !dbg !5098
  br i1 %cmp, label %if.then, label %if.end, !dbg !5099

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %color_profile, align 1, !dbg !5100
  br label %if.end, !dbg !5101

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5102
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5103
  call void @ui_get_but_vectorf(%struct.uiBut* %8, float* %arraydecay), !dbg !5104
  %9 = load i8, i8* %color_profile, align 1, !dbg !5105
  %tobool5 = icmp ne i8 %9, 0, !dbg !5105
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !5107

if.then6:                                         ; preds = %if.end
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5108
  %block7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 74, !dbg !5109
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block7, align 8, !dbg !5109
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5110
  call void @ui_block_to_display_space_v3(%struct.uiBlock* %11, float* %arraydecay8), !dbg !5111
  br label %if.end9, !dbg !5111

if.end9:                                          ; preds = %if.then6, %if.end
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5112
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 24, !dbg !5114
  %13 = load float, float* %a1, align 8, !dbg !5114
  %cmp10 = fcmp oeq float %13, 1.000000e+01, !dbg !5115
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !5116

if.then12:                                        ; preds = %if.end9
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5117
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5118
  call void @rgb_to_hsl_v(float* %arraydecay13, float* %arraydecay14), !dbg !5119
  br label %if.end17, !dbg !5119

if.else:                                          ; preds = %if.end9
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5120
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5121
  call void @rgb_to_hsv_v(float* %arraydecay15, float* %arraydecay16), !dbg !5122
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then12
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5123
  %14 = load float, float* %arrayidx, align 4, !dbg !5123
  store float %14, float* %v, align 4, !dbg !5124
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5125
  %a118 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 24, !dbg !5127
  %16 = load float, float* %a118, align 8, !dbg !5127
  %cmp19 = fcmp oeq float %16, 9.000000e+00, !dbg !5128
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !5129

if.then21:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata float* %range, metadata !5130, metadata !DIExpression()), !dbg !5132
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5133
  %softmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 23, !dbg !5134
  %18 = load float, float* %softmax, align 4, !dbg !5134
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5135
  %softmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 22, !dbg !5136
  %20 = load float, float* %softmin, align 8, !dbg !5136
  %sub = fsub float %18, %20, !dbg !5137
  store float %sub, float* %range, align 4, !dbg !5132
  %21 = load float, float* %v, align 4, !dbg !5138
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5139
  %softmin22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 22, !dbg !5140
  %23 = load float, float* %softmin22, align 8, !dbg !5140
  %sub23 = fsub float %21, %23, !dbg !5141
  %24 = load float, float* %range, align 4, !dbg !5142
  %div = fdiv float %sub23, %24, !dbg !5143
  store float %div, float* %v, align 4, !dbg !5144
  br label %if.end24, !dbg !5145

if.end24:                                         ; preds = %if.then21, %if.end17
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !5146
  %25 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5147
  %26 = load float, float* %rad, align 4, !dbg !5148
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %25, float %26), !dbg !5149
  store i8 0, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 0, i64 2), align 2, !dbg !5150
  store i8 0, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 0, i64 1), align 1, !dbg !5151
  store i8 0, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 0, i64 0), align 2, !dbg !5152
  store i8 -128, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 1, i64 2), align 2, !dbg !5153
  store i8 -128, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 1, i64 1), align 1, !dbg !5154
  store i8 -128, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 1, i64 0), align 2, !dbg !5155
  store i16 127, i16* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 7), align 2, !dbg !5156
  store i16 -128, i16* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 8), align 2, !dbg !5157
  store i16 1, i16* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @wcol_tmp, i32 0, i32 6), align 2, !dbg !5158
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* @wcol_tmp), !dbg !5159
  %27 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5160
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %27, i32 0, i32 0, !dbg !5161
  %28 = load i32, i32* %xmin, align 4, !dbg !5161
  %conv25 = sitofp i32 %28 to float, !dbg !5160
  %29 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5162
  %call26 = call i32 @BLI_rcti_size_x(%struct.rcti* %29), !dbg !5163
  %conv27 = sitofp i32 %call26 to float, !dbg !5163
  %mul28 = fmul float 5.000000e-01, %conv27, !dbg !5164
  %add = fadd float %conv25, %mul28, !dbg !5165
  store float %add, float* %x, align 4, !dbg !5166
  %30 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5167
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 2, !dbg !5168
  %31 = load i32, i32* %ymin, align 4, !dbg !5168
  %conv29 = sitofp i32 %31 to float, !dbg !5167
  %32 = load float, float* %v, align 4, !dbg !5169
  %33 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5170
  %call30 = call i32 @BLI_rcti_size_y(%struct.rcti* %33), !dbg !5171
  %conv31 = sitofp i32 %call30 to float, !dbg !5171
  %mul32 = fmul float %32, %conv31, !dbg !5172
  %add33 = fadd float %conv29, %mul32, !dbg !5173
  store float %add33, float* %y, align 4, !dbg !5174
  %34 = load float, float* %y, align 4, !dbg !5175
  %35 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5175
  %ymin34 = getelementptr inbounds %struct.rcti, %struct.rcti* %35, i32 0, i32 2, !dbg !5175
  %36 = load i32, i32* %ymin34, align 4, !dbg !5175
  %conv35 = sitofp i32 %36 to float, !dbg !5175
  %add36 = fadd float %conv35, 3.000000e+00, !dbg !5175
  %cmp37 = fcmp olt float %34, %add36, !dbg !5175
  br i1 %cmp37, label %if.then39, label %if.else43, !dbg !5178

if.then39:                                        ; preds = %if.end24
  %37 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5175
  %ymin40 = getelementptr inbounds %struct.rcti, %struct.rcti* %37, i32 0, i32 2, !dbg !5175
  %38 = load i32, i32* %ymin40, align 4, !dbg !5175
  %conv41 = sitofp i32 %38 to float, !dbg !5175
  %add42 = fadd float %conv41, 3.000000e+00, !dbg !5175
  store float %add42, float* %y, align 4, !dbg !5175
  br label %if.end53, !dbg !5175

if.else43:                                        ; preds = %if.end24
  %39 = load float, float* %y, align 4, !dbg !5179
  %40 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5179
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %40, i32 0, i32 3, !dbg !5179
  %41 = load i32, i32* %ymax, align 4, !dbg !5179
  %conv44 = sitofp i32 %41 to float, !dbg !5179
  %sub45 = fsub float %conv44, 3.000000e+00, !dbg !5179
  %cmp46 = fcmp ogt float %39, %sub45, !dbg !5179
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !5175

if.then48:                                        ; preds = %if.else43
  %42 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5179
  %ymax49 = getelementptr inbounds %struct.rcti, %struct.rcti* %42, i32 0, i32 3, !dbg !5179
  %43 = load i32, i32* %ymax49, align 4, !dbg !5179
  %conv50 = sitofp i32 %43 to float, !dbg !5179
  %sub51 = fsub float %conv50, 3.000000e+00, !dbg !5179
  store float %sub51, float* %y, align 4, !dbg !5179
  br label %if.end52, !dbg !5179

if.end52:                                         ; preds = %if.then48, %if.else43
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then39
  %44 = load float, float* %x, align 4, !dbg !5181
  %45 = load float, float* %y, align 4, !dbg !5182
  call void @ui_hsv_cursor(float %44, float %45), !dbg !5183
  ret void, !dbg !5184
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_but_HSVCUBE(%struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !5185 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %rgb = alloca [3 x float], align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %hsv = alloca float*, align 8
  %hsv_n = alloca [3 x float], align 4
  %use_display_colorspace = alloca i8, align 1
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !5190, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.declare(metadata float* %x, metadata !5192, metadata !DIExpression()), !dbg !5193
  store float 0.000000e+00, float* %x, align 4, !dbg !5193
  call void @llvm.dbg.declare(metadata float* %y, metadata !5194, metadata !DIExpression()), !dbg !5195
  store float 0.000000e+00, float* %y, align 4, !dbg !5195
  call void @llvm.dbg.declare(metadata float** %hsv, metadata !5196, metadata !DIExpression()), !dbg !5197
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5198
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !5199
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5199
  %call = call float* @ui_block_hsv_get(%struct.uiBlock* %1), !dbg !5200
  store float* %call, float** %hsv, align 8, !dbg !5197
  call void @llvm.dbg.declare(metadata [3 x float]* %hsv_n, metadata !5201, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.declare(metadata i8* %use_display_colorspace, metadata !5203, metadata !DIExpression()), !dbg !5204
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5205
  %call1 = call zeroext i8 @ui_color_picker_use_display_colorspace(%struct.uiBut* %2), !dbg !5206
  store i8 %call1, i8* %use_display_colorspace, align 1, !dbg !5204
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %hsv_n, i64 0, i64 0, !dbg !5207
  %3 = load float*, float** %hsv, align 8, !dbg !5208
  call void @copy_v3_v3(float* %arraydecay, float* %3), !dbg !5209
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5210
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5211
  call void @ui_get_but_vectorf(%struct.uiBut* %4, float* %arraydecay2), !dbg !5212
  %5 = load i8, i8* %use_display_colorspace, align 1, !dbg !5213
  %tobool = icmp ne i8 %5, 0, !dbg !5213
  br i1 %tobool, label %if.then, label %if.end, !dbg !5215

if.then:                                          ; preds = %entry
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5216
  %block3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 74, !dbg !5217
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block3, align 8, !dbg !5217
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5218
  call void @ui_block_to_display_space_v3(%struct.uiBlock* %7, float* %arraydecay4), !dbg !5219
  br label %if.end, !dbg !5219

if.end:                                           ; preds = %if.then, %entry
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5220
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %hsv_n, i64 0, i64 0, !dbg !5221
  call void @rgb_to_hsv_compat_v(float* %arraydecay5, float* %arraydecay6), !dbg !5222
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5223
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %hsv_n, i64 0, i64 0, !dbg !5224
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5225
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 24, !dbg !5226
  %10 = load float, float* %a1, align 8, !dbg !5226
  %conv = fptosi float %10 to i32, !dbg !5225
  call void @ui_draw_gradient(%struct.rcti* %8, float* %arraydecay7, i32 %conv, float 1.000000e+00), !dbg !5227
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5228
  %12 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5229
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %hsv_n, i64 0, i64 0, !dbg !5230
  call void @ui_hsvcube_pos_from_vals(%struct.uiBut* %11, %struct.rcti* %12, float* %arraydecay8, float* %x, float* %y), !dbg !5231
  %13 = load float, float* %x, align 4, !dbg !5232
  %14 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5232
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 0, !dbg !5232
  %15 = load i32, i32* %xmin, align 4, !dbg !5232
  %conv9 = sitofp i32 %15 to float, !dbg !5232
  %add = fadd float %conv9, 3.000000e+00, !dbg !5232
  %cmp = fcmp olt float %13, %add, !dbg !5232
  br i1 %cmp, label %if.then11, label %if.else, !dbg !5235

if.then11:                                        ; preds = %if.end
  %16 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5232
  %xmin12 = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 0, !dbg !5232
  %17 = load i32, i32* %xmin12, align 4, !dbg !5232
  %conv13 = sitofp i32 %17 to float, !dbg !5232
  %add14 = fadd float %conv13, 3.000000e+00, !dbg !5232
  store float %add14, float* %x, align 4, !dbg !5232
  br label %if.end23, !dbg !5232

if.else:                                          ; preds = %if.end
  %18 = load float, float* %x, align 4, !dbg !5236
  %19 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5236
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %19, i32 0, i32 1, !dbg !5236
  %20 = load i32, i32* %xmax, align 4, !dbg !5236
  %conv15 = sitofp i32 %20 to float, !dbg !5236
  %sub = fsub float %conv15, 3.000000e+00, !dbg !5236
  %cmp16 = fcmp ogt float %18, %sub, !dbg !5236
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !5232

if.then18:                                        ; preds = %if.else
  %21 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5236
  %xmax19 = getelementptr inbounds %struct.rcti, %struct.rcti* %21, i32 0, i32 1, !dbg !5236
  %22 = load i32, i32* %xmax19, align 4, !dbg !5236
  %conv20 = sitofp i32 %22 to float, !dbg !5236
  %sub21 = fsub float %conv20, 3.000000e+00, !dbg !5236
  store float %sub21, float* %x, align 4, !dbg !5236
  br label %if.end22, !dbg !5236

if.end22:                                         ; preds = %if.then18, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then11
  %23 = load float, float* %y, align 4, !dbg !5238
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5238
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 2, !dbg !5238
  %25 = load i32, i32* %ymin, align 4, !dbg !5238
  %conv24 = sitofp i32 %25 to float, !dbg !5238
  %add25 = fadd float %conv24, 3.000000e+00, !dbg !5238
  %cmp26 = fcmp olt float %23, %add25, !dbg !5238
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !5241

if.then28:                                        ; preds = %if.end23
  %26 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5238
  %ymin29 = getelementptr inbounds %struct.rcti, %struct.rcti* %26, i32 0, i32 2, !dbg !5238
  %27 = load i32, i32* %ymin29, align 4, !dbg !5238
  %conv30 = sitofp i32 %27 to float, !dbg !5238
  %add31 = fadd float %conv30, 3.000000e+00, !dbg !5238
  store float %add31, float* %y, align 4, !dbg !5238
  br label %if.end42, !dbg !5238

if.else32:                                        ; preds = %if.end23
  %28 = load float, float* %y, align 4, !dbg !5242
  %29 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5242
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %29, i32 0, i32 3, !dbg !5242
  %30 = load i32, i32* %ymax, align 4, !dbg !5242
  %conv33 = sitofp i32 %30 to float, !dbg !5242
  %sub34 = fsub float %conv33, 3.000000e+00, !dbg !5242
  %cmp35 = fcmp ogt float %28, %sub34, !dbg !5242
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !5238

if.then37:                                        ; preds = %if.else32
  %31 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5242
  %ymax38 = getelementptr inbounds %struct.rcti, %struct.rcti* %31, i32 0, i32 3, !dbg !5242
  %32 = load i32, i32* %ymax38, align 4, !dbg !5242
  %conv39 = sitofp i32 %32 to float, !dbg !5242
  %sub40 = fsub float %conv39, 3.000000e+00, !dbg !5242
  store float %sub40, float* %y, align 4, !dbg !5242
  br label %if.end41, !dbg !5242

if.end41:                                         ; preds = %if.then37, %if.else32
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then28
  %33 = load float, float* %x, align 4, !dbg !5244
  %34 = load float, float* %y, align 4, !dbg !5245
  call void @ui_hsv_cursor(float %33, float %34), !dbg !5246
  call void @glColor3ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !5247
  %35 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5248
  %xmin43 = getelementptr inbounds %struct.rcti, %struct.rcti* %35, i32 0, i32 0, !dbg !5249
  %36 = load i32, i32* %xmin43, align 4, !dbg !5249
  %conv44 = sitofp i32 %36 to float, !dbg !5250
  %37 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5251
  %ymin45 = getelementptr inbounds %struct.rcti, %struct.rcti* %37, i32 0, i32 2, !dbg !5252
  %38 = load i32, i32* %ymin45, align 4, !dbg !5252
  %conv46 = sitofp i32 %38 to float, !dbg !5253
  %39 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5254
  %xmax47 = getelementptr inbounds %struct.rcti, %struct.rcti* %39, i32 0, i32 1, !dbg !5255
  %40 = load i32, i32* %xmax47, align 4, !dbg !5255
  %conv48 = sitofp i32 %40 to float, !dbg !5256
  %41 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5257
  %ymax49 = getelementptr inbounds %struct.rcti, %struct.rcti* %41, i32 0, i32 3, !dbg !5258
  %42 = load i32, i32* %ymax49, align 4, !dbg !5258
  %conv50 = sitofp i32 %42 to float, !dbg !5259
  call void @fdrawbox(float %conv44, float %conv46, float %conv48, float %conv50), !dbg !5260
  ret void, !dbg !5261
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_but_HSVCIRCLE(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect) #0 !dbg !5262 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %tot = alloca i32, align 4
  %radstep = alloca float, align 4
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %radius = alloca float, align 4
  %hsv_ptr = alloca float*, align 8
  %xpos = alloca float, align 4
  %ypos = alloca float, align 4
  %ang = alloca float, align 4
  %rgb = alloca [3 x float], align 4
  %hsvo = alloca [3 x float], align 4
  %hsv = alloca [3 x float], align 4
  %col = alloca [3 x float], align 4
  %colcent = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %color_profile = alloca i8, align 1
  %si = alloca float, align 4
  %co = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i32 64, i32* %tot, align 4, !dbg !5272
  call void @llvm.dbg.declare(metadata float* %radstep, metadata !5273, metadata !DIExpression()), !dbg !5274
  store float 0x3FB921FB60000000, float* %radstep, align 4, !dbg !5274
  call void @llvm.dbg.declare(metadata float* %centx, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5277
  %call = call float @BLI_rcti_cent_x_fl(%struct.rcti* %0), !dbg !5278
  store float %call, float* %centx, align 4, !dbg !5276
  call void @llvm.dbg.declare(metadata float* %centy, metadata !5279, metadata !DIExpression()), !dbg !5280
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5281
  %call1 = call float @BLI_rcti_cent_y_fl(%struct.rcti* %1), !dbg !5282
  store float %call1, float* %centy, align 4, !dbg !5280
  call void @llvm.dbg.declare(metadata float* %radius, metadata !5283, metadata !DIExpression()), !dbg !5284
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5285
  %call2 = call i32 @BLI_rcti_size_x(%struct.rcti* %2), !dbg !5286
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5287
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !5288
  %call4 = call i32 @min_ii(i32 %call2, i32 %call3), !dbg !5289
  %conv = sitofp i32 %call4 to float, !dbg !5290
  %div = fdiv float %conv, 2.000000e+00, !dbg !5291
  store float %div, float* %radius, align 4, !dbg !5284
  call void @llvm.dbg.declare(metadata float** %hsv_ptr, metadata !5292, metadata !DIExpression()), !dbg !5293
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5294
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 74, !dbg !5295
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5295
  %call5 = call float* @ui_block_hsv_get(%struct.uiBlock* %5), !dbg !5296
  store float* %call5, float** %hsv_ptr, align 8, !dbg !5293
  call void @llvm.dbg.declare(metadata float* %xpos, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata float* %ypos, metadata !5299, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata float* %ang, metadata !5301, metadata !DIExpression()), !dbg !5302
  store float 0.000000e+00, float* %ang, align 4, !dbg !5302
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !5303, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.declare(metadata [3 x float]* %hsvo, metadata !5305, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata [3 x float]* %hsv, metadata !5307, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.declare(metadata [3 x float]* %col, metadata !5309, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.declare(metadata [3 x float]* %colcent, metadata !5311, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i8* %color_profile, metadata !5315, metadata !DIExpression()), !dbg !5316
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5317
  %call6 = call zeroext i8 @ui_color_picker_use_display_colorspace(%struct.uiBut* %6), !dbg !5318
  store i8 %call6, i8* %color_profile, align 1, !dbg !5316
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5319
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5320
  call void @ui_get_but_vectorf(%struct.uiBut* %7, float* %arraydecay), !dbg !5321
  %8 = load float*, float** %hsv_ptr, align 8, !dbg !5322
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !5322
  %9 = load float, float* %arrayidx, align 4, !dbg !5322
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5323
  store float %9, float* %arrayidx7, align 4, !dbg !5324
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %hsvo, i64 0, i64 0, !dbg !5325
  store float %9, float* %arrayidx8, align 4, !dbg !5326
  %10 = load float*, float** %hsv_ptr, align 8, !dbg !5327
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 1, !dbg !5327
  %11 = load float, float* %arrayidx9, align 4, !dbg !5327
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 1, !dbg !5328
  store float %11, float* %arrayidx10, align 4, !dbg !5329
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %hsvo, i64 0, i64 1, !dbg !5330
  store float %11, float* %arrayidx11, align 4, !dbg !5331
  %12 = load float*, float** %hsv_ptr, align 8, !dbg !5332
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 2, !dbg !5332
  %13 = load float, float* %arrayidx12, align 4, !dbg !5332
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5333
  store float %13, float* %arrayidx13, align 4, !dbg !5334
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %hsvo, i64 0, i64 2, !dbg !5335
  store float %13, float* %arrayidx14, align 4, !dbg !5336
  %14 = load i8, i8* %color_profile, align 1, !dbg !5337
  %tobool = icmp ne i8 %14, 0, !dbg !5337
  br i1 %tobool, label %if.then, label %if.end, !dbg !5339

if.then:                                          ; preds = %entry
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5340
  %block15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 74, !dbg !5341
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block15, align 8, !dbg !5341
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5342
  call void @ui_block_to_display_space_v3(%struct.uiBlock* %16, float* %arraydecay16), !dbg !5343
  br label %if.end, !dbg !5343

if.end:                                           ; preds = %if.then, %entry
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5344
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5345
  call void @ui_rgb_to_color_picker_compat_v(float* %arraydecay17, float* %arraydecay18), !dbg !5346
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %hsvo, i64 0, i64 0, !dbg !5347
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5348
  call void @copy_v3_v3(float* %arraydecay19, float* %arraydecay20), !dbg !5349
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5350
  %17 = load float, float* %arrayidx21, align 4, !dbg !5350
  %cmp = fcmp olt float %17, 0.000000e+00, !dbg !5350
  br i1 %cmp, label %if.then23, label %if.else, !dbg !5353

if.then23:                                        ; preds = %if.end
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5350
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !5350
  br label %if.end31, !dbg !5350

if.else:                                          ; preds = %if.end
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5354
  %18 = load float, float* %arrayidx25, align 4, !dbg !5354
  %cmp26 = fcmp ogt float %18, 1.000000e+00, !dbg !5354
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !5350

if.then28:                                        ; preds = %if.else
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5354
  store float 1.000000e+00, float* %arrayidx29, align 4, !dbg !5354
  br label %if.end30, !dbg !5354

if.end30:                                         ; preds = %if.then28, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then23
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5356
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 2, !dbg !5358
  %20 = load i32, i32* %flag, align 8, !dbg !5358
  %and = and i32 %20, 4096, !dbg !5359
  %tobool32 = icmp ne i32 %and, 0, !dbg !5359
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !5360

if.then33:                                        ; preds = %if.end31
  %21 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 74), align 2, !dbg !5361
  %conv34 = sext i16 %21 to i32, !dbg !5364
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !5365
  br i1 %cmp35, label %if.then37, label %if.else39, !dbg !5366

if.then37:                                        ; preds = %if.then33
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5367
  store float 1.000000e+00, float* %arrayidx38, align 4, !dbg !5368
  br label %if.end41, !dbg !5367

if.else39:                                        ; preds = %if.then33
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5369
  store float 5.000000e-01, float* %arrayidx40, align 4, !dbg !5370
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  br label %if.end42, !dbg !5371

if.end42:                                         ; preds = %if.end41, %if.end31
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 2, !dbg !5372
  %22 = load float, float* %arrayidx43, align 4, !dbg !5372
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %colcent, i64 0, i64 0, !dbg !5373
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %colcent, i64 0, i64 0, !dbg !5374
  %add.ptr = getelementptr inbounds float, float* %arraydecay45, i64 1, !dbg !5375
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %colcent, i64 0, i64 0, !dbg !5376
  %add.ptr47 = getelementptr inbounds float, float* %arraydecay46, i64 2, !dbg !5377
  call void @ui_color_picker_to_rgb(float 0.000000e+00, float 0.000000e+00, float %22, float* %arraydecay44, float* %add.ptr, float* %add.ptr47), !dbg !5378
  call void @glShadeModel(i32 7425), !dbg !5379
  call void @glBegin(i32 6), !dbg !5380
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %colcent, i64 0, i64 0, !dbg !5381
  call void @glColor3fv(float* %arraydecay48), !dbg !5382
  %23 = load float, float* %centx, align 4, !dbg !5383
  %24 = load float, float* %centy, align 4, !dbg !5384
  call void @glVertex2f(float %23, float %24), !dbg !5385
  store i32 0, i32* %a, align 4, !dbg !5386
  br label %for.cond, !dbg !5388

for.cond:                                         ; preds = %for.inc, %if.end42
  %25 = load i32, i32* %a, align 4, !dbg !5389
  %cmp49 = icmp sle i32 %25, 64, !dbg !5391
  br i1 %cmp49, label %for.body, label %for.end, !dbg !5392

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %si, metadata !5393, metadata !DIExpression()), !dbg !5395
  %26 = load float, float* %ang, align 4, !dbg !5396
  %call51 = call float @sinf(float %26) #6, !dbg !5397
  store float %call51, float* %si, align 4, !dbg !5395
  call void @llvm.dbg.declare(metadata float* %co, metadata !5398, metadata !DIExpression()), !dbg !5399
  %27 = load float, float* %ang, align 4, !dbg !5400
  %call52 = call float @cosf(float %27) #6, !dbg !5401
  store float %call52, float* %co, align 4, !dbg !5399
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5402
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5403
  %add.ptr55 = getelementptr inbounds float, float* %arraydecay54, i64 1, !dbg !5404
  %28 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5405
  %29 = load float, float* %centx, align 4, !dbg !5406
  %30 = load float, float* %co, align 4, !dbg !5407
  %31 = load float, float* %radius, align 4, !dbg !5408
  %mul = fmul float %30, %31, !dbg !5409
  %add = fadd float %29, %mul, !dbg !5410
  %32 = load float, float* %centy, align 4, !dbg !5411
  %33 = load float, float* %si, align 4, !dbg !5412
  %34 = load float, float* %radius, align 4, !dbg !5413
  %mul56 = fmul float %33, %34, !dbg !5414
  %add57 = fadd float %32, %mul56, !dbg !5415
  call void @ui_hsvcircle_vals_from_pos(float* %arraydecay53, float* %add.ptr55, %struct.rcti* %28, float %add, float %add57), !dbg !5416
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %hsv, i64 0, i64 0, !dbg !5417
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !5418
  call void @ui_color_picker_to_rgb_v(float* %arraydecay58, float* %arraydecay59), !dbg !5419
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !5420
  call void @glColor3fv(float* %arraydecay60), !dbg !5421
  %35 = load float, float* %centx, align 4, !dbg !5422
  %36 = load float, float* %co, align 4, !dbg !5423
  %37 = load float, float* %radius, align 4, !dbg !5424
  %mul61 = fmul float %36, %37, !dbg !5425
  %add62 = fadd float %35, %mul61, !dbg !5426
  %38 = load float, float* %centy, align 4, !dbg !5427
  %39 = load float, float* %si, align 4, !dbg !5428
  %40 = load float, float* %radius, align 4, !dbg !5429
  %mul63 = fmul float %39, %40, !dbg !5430
  %add64 = fadd float %38, %mul63, !dbg !5431
  call void @glVertex2f(float %add62, float %add64), !dbg !5432
  br label %for.inc, !dbg !5433

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %a, align 4, !dbg !5434
  %inc = add nsw i32 %41, 1, !dbg !5434
  store i32 %inc, i32* %a, align 4, !dbg !5434
  %42 = load float, float* %ang, align 4, !dbg !5435
  %add65 = fadd float %42, 0x3FB921FB60000000, !dbg !5435
  store float %add65, float* %ang, align 4, !dbg !5435
  br label %for.cond, !dbg !5436, !llvm.loop !5437

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !5439
  call void @glShadeModel(i32 7424), !dbg !5440
  call void @glPushMatrix(), !dbg !5441
  %43 = load float, float* %centx, align 4, !dbg !5442
  %44 = load float, float* %centy, align 4, !dbg !5443
  call void @glTranslatef(float %43, float %44, float 0.000000e+00), !dbg !5444
  call void @glEnable(i32 3042), !dbg !5445
  call void @glEnable(i32 2848), !dbg !5446
  %45 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !5447
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %45, i32 0, i32 0, !dbg !5448
  %arraydecay66 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 0, !dbg !5447
  call void @glColor3ubv(i8* %arraydecay66), !dbg !5449
  %46 = load float, float* %radius, align 4, !dbg !5450
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %46, i32 65), !dbg !5451
  call void @glDisable(i32 3042), !dbg !5452
  call void @glDisable(i32 2848), !dbg !5453
  call void @glPopMatrix(), !dbg !5454
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5455
  %48 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5456
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %hsvo, i64 0, i64 0, !dbg !5457
  call void @ui_hsvcircle_pos_from_vals(%struct.uiBut* %47, %struct.rcti* %48, float* %arraydecay67, float* %xpos, float* %ypos), !dbg !5458
  %49 = load float, float* %xpos, align 4, !dbg !5459
  %50 = load float, float* %ypos, align 4, !dbg !5460
  call void @ui_hsv_cursor(float %49, float %50), !dbg !5461
  ret void, !dbg !5462
}

declare dso_local void @ui_draw_but_COLORBAND(%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_IMAGE(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_HISTOGRAM(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_WAVEFORM(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_VECTORSCOPE(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_CURVE(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_TRACKPREVIEW(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

declare dso_local void @ui_draw_but_NODESOCKET(%struct.ARegion*, %struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @widget_roundbox_set(%struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !5463 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %roundbox = alloca i32, align 4
  %direction = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5466, metadata !DIExpression()), !dbg !5467
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5468, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.declare(metadata i32* %roundbox, metadata !5470, metadata !DIExpression()), !dbg !5471
  store i32 15, i32* %roundbox, align 4, !dbg !5471
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5472
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 3, !dbg !5474
  %1 = load i32, i32* %drawflag, align 4, !dbg !5474
  %and = and i32 %1, 245760, !dbg !5475
  %tobool = icmp ne i32 %and, 0, !dbg !5475
  br i1 %tobool, label %land.lhs.true, label %if.end22, !dbg !5476

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5477
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !5478
  %3 = load i32, i32* %type, align 8, !dbg !5478
  %cmp = icmp ne i32 %3, 13824, !dbg !5479
  br i1 %cmp, label %if.then, label %if.end22, !dbg !5480

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5481
  %drawflag1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 3, !dbg !5484
  %5 = load i32, i32* %drawflag1, align 4, !dbg !5484
  %and2 = and i32 %5, 16384, !dbg !5485
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5485
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5486

if.then4:                                         ; preds = %if.then
  %6 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5487
  %7 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5488
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 3, !dbg !5489
  %8 = load i32, i32* %ymax, align 4, !dbg !5490
  %conv = sitofp i32 %8 to float, !dbg !5490
  %add = fadd float %conv, %6, !dbg !5490
  %conv5 = fptosi float %add to i32, !dbg !5490
  store i32 %conv5, i32* %ymax, align 4, !dbg !5490
  br label %if.end, !dbg !5488

if.end:                                           ; preds = %if.then4, %if.then
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5491
  %drawflag6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 3, !dbg !5493
  %10 = load i32, i32* %drawflag6, align 4, !dbg !5493
  %and7 = and i32 %10, 32768, !dbg !5494
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5494
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5495

if.then9:                                         ; preds = %if.end
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5496
  %12 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5497
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 0, !dbg !5498
  %13 = load i32, i32* %xmin, align 4, !dbg !5499
  %conv10 = sitofp i32 %13 to float, !dbg !5499
  %sub = fsub float %conv10, %11, !dbg !5499
  %conv11 = fptosi float %sub to i32, !dbg !5499
  store i32 %conv11, i32* %xmin, align 4, !dbg !5499
  br label %if.end12, !dbg !5497

if.end12:                                         ; preds = %if.then9, %if.end
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5500
  %drawflag13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 3, !dbg !5501
  %15 = load i32, i32* %drawflag13, align 4, !dbg !5501
  %and14 = and i32 %15, 245760, !dbg !5502
  switch i32 %and14, label %sw.default [
    i32 16384, label %sw.bb
    i32 131072, label %sw.bb15
    i32 32768, label %sw.bb16
    i32 65536, label %sw.bb17
    i32 196608, label %sw.bb18
    i32 163840, label %sw.bb19
    i32 81920, label %sw.bb20
    i32 49152, label %sw.bb21
  ], !dbg !5503

sw.bb:                                            ; preds = %if.end12
  store i32 12, i32* %roundbox, align 4, !dbg !5504
  br label %sw.epilog, !dbg !5506

sw.bb15:                                          ; preds = %if.end12
  store i32 3, i32* %roundbox, align 4, !dbg !5507
  br label %sw.epilog, !dbg !5508

sw.bb16:                                          ; preds = %if.end12
  store i32 6, i32* %roundbox, align 4, !dbg !5509
  br label %sw.epilog, !dbg !5510

sw.bb17:                                          ; preds = %if.end12
  store i32 9, i32* %roundbox, align 4, !dbg !5511
  br label %sw.epilog, !dbg !5512

sw.bb18:                                          ; preds = %if.end12
  store i32 1, i32* %roundbox, align 4, !dbg !5513
  br label %sw.epilog, !dbg !5514

sw.bb19:                                          ; preds = %if.end12
  store i32 2, i32* %roundbox, align 4, !dbg !5515
  br label %sw.epilog, !dbg !5516

sw.bb20:                                          ; preds = %if.end12
  store i32 8, i32* %roundbox, align 4, !dbg !5517
  br label %sw.epilog, !dbg !5518

sw.bb21:                                          ; preds = %if.end12
  store i32 4, i32* %roundbox, align 4, !dbg !5519
  br label %sw.epilog, !dbg !5520

sw.default:                                       ; preds = %if.end12
  store i32 0, i32* %roundbox, align 4, !dbg !5521
  br label %sw.epilog, !dbg !5522

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb
  br label %if.end22, !dbg !5523

if.end22:                                         ; preds = %sw.epilog, %land.lhs.true, %entry
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5524
  %active = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 67, !dbg !5526
  %17 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active, align 8, !dbg !5526
  %tobool23 = icmp ne %struct.uiHandleButtonData* %17, null, !dbg !5524
  br i1 %tobool23, label %if.then24, label %if.end47, !dbg !5527

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !5528, metadata !DIExpression()), !dbg !5530
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5531
  %call = call i32 @ui_button_open_menu_direction(%struct.uiBut* %18), !dbg !5532
  store i32 %call, i32* %direction, align 4, !dbg !5530
  %19 = load i32, i32* %direction, align 4, !dbg !5533
  %cmp25 = icmp eq i32 %19, 1, !dbg !5535
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !5536

if.then27:                                        ; preds = %if.then24
  %20 = load i32, i32* %roundbox, align 4, !dbg !5537
  %and28 = and i32 %20, -4, !dbg !5537
  store i32 %and28, i32* %roundbox, align 4, !dbg !5537
  br label %if.end46, !dbg !5538

if.else:                                          ; preds = %if.then24
  %21 = load i32, i32* %direction, align 4, !dbg !5539
  %cmp29 = icmp eq i32 %21, 2, !dbg !5541
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !5542

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %roundbox, align 4, !dbg !5543
  %and32 = and i32 %22, -13, !dbg !5543
  store i32 %and32, i32* %roundbox, align 4, !dbg !5543
  br label %if.end45, !dbg !5544

if.else33:                                        ; preds = %if.else
  %23 = load i32, i32* %direction, align 4, !dbg !5545
  %cmp34 = icmp eq i32 %23, 4, !dbg !5547
  br i1 %cmp34, label %if.then36, label %if.else38, !dbg !5548

if.then36:                                        ; preds = %if.else33
  %24 = load i32, i32* %roundbox, align 4, !dbg !5549
  %and37 = and i32 %24, -10, !dbg !5549
  store i32 %and37, i32* %roundbox, align 4, !dbg !5549
  br label %if.end44, !dbg !5550

if.else38:                                        ; preds = %if.else33
  %25 = load i32, i32* %direction, align 4, !dbg !5551
  %cmp39 = icmp eq i32 %25, 8, !dbg !5553
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !5554

if.then41:                                        ; preds = %if.else38
  %26 = load i32, i32* %roundbox, align 4, !dbg !5555
  %and42 = and i32 %26, -7, !dbg !5555
  store i32 %and42, i32* %roundbox, align 4, !dbg !5555
  br label %if.end43, !dbg !5556

if.end43:                                         ; preds = %if.then41, %if.else38
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then31
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then27
  br label %if.end47, !dbg !5557

if.end47:                                         ; preds = %if.end46, %if.end22
  %27 = load i32, i32* %roundbox, align 4, !dbg !5558
  ret i32 %27, !dbg !5559
}

declare dso_local %struct.uiBut* @ui_get_but_drag_multi_edit(%struct.uiBut*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_widget_color_disabled(%struct.uiWidgetType* %wt) #0 !dbg !2018 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !5562
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 0, !dbg !5563
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !5563
  %2 = bitcast %struct.uiWidgetColors* %1 to i8*, !dbg !5564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 0, i32 0), i8* align 2 %2, i64 32, i1 false), !dbg !5564
  %3 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 0, i64 3), align 1, !dbg !5565
  %conv = uitofp i8 %3 to double, !dbg !5565
  %mul = fmul double %conv, 5.000000e-01, !dbg !5565
  %conv1 = fptoui double %mul to i8, !dbg !5565
  store i8 %conv1, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 0, i64 3), align 1, !dbg !5565
  %4 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 1, i64 3), align 1, !dbg !5566
  %conv2 = uitofp i8 %4 to double, !dbg !5566
  %mul3 = fmul double %conv2, 5.000000e-01, !dbg !5566
  %conv4 = fptoui double %mul3 to i8, !dbg !5566
  store i8 %conv4, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 1, i64 3), align 1, !dbg !5566
  %5 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 2, i64 3), align 1, !dbg !5567
  %conv5 = uitofp i8 %5 to double, !dbg !5567
  %mul6 = fmul double %conv5, 5.000000e-01, !dbg !5567
  %conv7 = fptoui double %mul6 to i8, !dbg !5567
  store i8 %conv7, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 2, i64 3), align 1, !dbg !5567
  %6 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 3, i64 3), align 1, !dbg !5568
  %conv8 = uitofp i8 %6 to double, !dbg !5568
  %mul9 = fmul double %conv8, 5.000000e-01, !dbg !5568
  %conv10 = fptoui double %mul9 to i8, !dbg !5568
  store i8 %conv10, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 3, i64 3), align 1, !dbg !5568
  %7 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 4, i64 3), align 1, !dbg !5569
  %conv11 = uitofp i8 %7 to double, !dbg !5569
  %mul12 = fmul double %conv11, 5.000000e-01, !dbg !5569
  %conv13 = fptoui double %mul12 to i8, !dbg !5569
  store i8 %conv13, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 4, i64 3), align 1, !dbg !5569
  %8 = load i8, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 5, i64 3), align 1, !dbg !5570
  %conv14 = uitofp i8 %8 to double, !dbg !5570
  %mul15 = fmul double %conv14, 5.000000e-01, !dbg !5570
  %conv16 = fptoui double %mul15 to i8, !dbg !5570
  store i8 %conv16, i8* getelementptr inbounds (%struct.uiWidgetColors, %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, i32 0, i32 5, i64 3), align 1, !dbg !5570
  %9 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !5571
  %wcol_theme17 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %9, i32 0, i32 0, !dbg !5572
  store %struct.uiWidgetColors* @ui_widget_color_disabled.wcol_theme_s, %struct.uiWidgetColors** %wcol_theme17, align 8, !dbg !5573
  ret void, !dbg !5574
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_menu_back(%struct.uiStyle* %UNUSED_style, %struct.uiBlock* %block, %struct.rcti* %rect) #0 !dbg !5575 {
entry:
  %UNUSED_style.addr = alloca %struct.uiStyle*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %wt = alloca %struct.uiWidgetType*, align 8
  store %struct.uiStyle* %UNUSED_style, %struct.uiStyle** %UNUSED_style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %UNUSED_style.addr, metadata !5578, metadata !DIExpression()), !dbg !5579
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !5584, metadata !DIExpression()), !dbg !5585
  %call = call %struct.uiWidgetType* @widget_type(i32 20), !dbg !5586
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !5585
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5587
  %state = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 3, !dbg !5588
  %1 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state, align 8, !dbg !5588
  %2 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5589
  call void %1(%struct.uiWidgetType* %2, i32 0), !dbg !5587
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5590
  %tobool = icmp ne %struct.uiBlock* %3, null, !dbg !5590
  br i1 %tobool, label %if.then, label %if.else, !dbg !5592

if.then:                                          ; preds = %entry
  %4 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5593
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %4, i32 0, i32 4, !dbg !5594
  %5 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !5594
  %6 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5595
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %6, i32 0, i32 2, !dbg !5596
  %7 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5597
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5598
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 27, !dbg !5599
  %9 = load i32, i32* %flag, align 8, !dbg !5599
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5600
  %direction = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 29, !dbg !5601
  %11 = load i8, i8* %direction, align 2, !dbg !5601
  %conv = zext i8 %11 to i32, !dbg !5600
  call void %5(%struct.uiWidgetColors* %wcol, %struct.rcti* %7, i32 %9, i32 %conv), !dbg !5593
  br label %if.end, !dbg !5593

if.else:                                          ; preds = %entry
  %12 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5602
  %draw1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %12, i32 0, i32 4, !dbg !5603
  %13 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw1, align 8, !dbg !5603
  %14 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5604
  %wcol2 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %14, i32 0, i32 2, !dbg !5605
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5606
  call void %13(%struct.uiWidgetColors* %wcol2, %struct.rcti* %15, i32 0, i32 0), !dbg !5602
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5607
  %tobool3 = icmp ne %struct.uiBlock* %16, null, !dbg !5607
  br i1 %tobool3, label %if.then4, label %if.end24, !dbg !5609

if.then4:                                         ; preds = %if.end
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5610
  %flag5 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %17, i32 0, i32 27, !dbg !5613
  %18 = load i32, i32* %flag5, align 8, !dbg !5613
  %and = and i32 %18, 64, !dbg !5614
  %tobool6 = icmp ne i32 %and, 0, !dbg !5614
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !5615

if.then7:                                         ; preds = %if.then4
  %19 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5616
  %wcol8 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %19, i32 0, i32 2, !dbg !5618
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol8, i32 0, i32 4, !dbg !5619
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !5616
  call void @glColor3ubv(i8* %arraydecay), !dbg !5620
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5621
  %call9 = call i32 @BLI_rcti_cent_x(%struct.rcti* %20), !dbg !5622
  %conv10 = sitofp i32 %call9 to float, !dbg !5622
  %21 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5623
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %21, i32 0, i32 3, !dbg !5624
  %22 = load i32, i32* %ymax, align 4, !dbg !5624
  %sub = sub nsw i32 %22, 8, !dbg !5625
  %conv11 = sitofp i32 %sub to float, !dbg !5623
  call void @UI_DrawTriIcon(float %conv10, float %conv11, i8 zeroext 116), !dbg !5626
  br label %if.end12, !dbg !5627

if.end12:                                         ; preds = %if.then7, %if.then4
  %23 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5628
  %flag13 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %23, i32 0, i32 27, !dbg !5630
  %24 = load i32, i32* %flag13, align 8, !dbg !5630
  %and14 = and i32 %24, 32, !dbg !5631
  %tobool15 = icmp ne i32 %and14, 0, !dbg !5631
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !5632

if.then16:                                        ; preds = %if.end12
  %25 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !5633
  %wcol17 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %25, i32 0, i32 2, !dbg !5635
  %text18 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol17, i32 0, i32 4, !dbg !5636
  %arraydecay19 = getelementptr inbounds [4 x i8], [4 x i8]* %text18, i64 0, i64 0, !dbg !5633
  call void @glColor3ubv(i8* %arraydecay19), !dbg !5637
  %26 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5638
  %call20 = call i32 @BLI_rcti_cent_x(%struct.rcti* %26), !dbg !5639
  %conv21 = sitofp i32 %call20 to float, !dbg !5639
  %27 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5640
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %27, i32 0, i32 2, !dbg !5641
  %28 = load i32, i32* %ymin, align 4, !dbg !5641
  %add = add nsw i32 %28, 10, !dbg !5642
  %conv22 = sitofp i32 %add to float, !dbg !5640
  call void @UI_DrawTriIcon(float %conv21, float %conv22, i8 zeroext 118), !dbg !5643
  br label %if.end23, !dbg !5644

if.end23:                                         ; preds = %if.then16, %if.end12
  br label %if.end24, !dbg !5645

if.end24:                                         ; preds = %if.end23, %if.end
  ret void, !dbg !5646
}

declare dso_local void @glColor3ubv(i8*) #2

declare dso_local void @UI_DrawTriIcon(float, float, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_x(%struct.rcti* %rct) #0 !dbg !5647 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !5650
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !5651
  %1 = load i32, i32* %xmin, align 4, !dbg !5651
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !5652
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 1, !dbg !5653
  %3 = load i32, i32* %xmax, align 4, !dbg !5653
  %add = add nsw i32 %1, %3, !dbg !5654
  %div = sdiv i32 %add, 2, !dbg !5655
  ret i32 %div, !dbg !5656
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_pie_center(%struct.uiBlock* %block) #0 !dbg !5657 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %btheme = alloca %struct.bTheme*, align 8
  %cx = alloca float, align 4
  %cy = alloca float, align 4
  %pie_dir = alloca float*, align 8
  %pie_radius_internal = alloca float, align 4
  %pie_radius_external = alloca float, align 4
  %subd = alloca i32, align 4
  %angle = alloca float, align 4
  %range = alloca float, align 4
  %col1 = alloca [4 x i8], align 1
  %col2 = alloca [4 x i8], align 1
  %col140 = alloca [4 x i8], align 1
  %col241 = alloca [4 x i8], align 1
  %pie_confirm_radius = alloca float, align 4
  %pie_confirm_external = alloca float, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !5662, metadata !DIExpression()), !dbg !5663
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !5664
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !5663
  call void @llvm.dbg.declare(metadata float* %cx, metadata !5665, metadata !DIExpression()), !dbg !5666
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5667
  %pie_data = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 53, !dbg !5668
  %pie_center_spawned = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data, i32 0, i32 2, !dbg !5669
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %pie_center_spawned, i64 0, i64 0, !dbg !5667
  %1 = load float, float* %arrayidx, align 8, !dbg !5667
  store float %1, float* %cx, align 4, !dbg !5666
  call void @llvm.dbg.declare(metadata float* %cy, metadata !5670, metadata !DIExpression()), !dbg !5671
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5672
  %pie_data1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 53, !dbg !5673
  %pie_center_spawned2 = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data1, i32 0, i32 2, !dbg !5674
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %pie_center_spawned2, i64 0, i64 1, !dbg !5672
  %3 = load float, float* %arrayidx3, align 4, !dbg !5672
  store float %3, float* %cy, align 4, !dbg !5671
  call void @llvm.dbg.declare(metadata float** %pie_dir, metadata !5675, metadata !DIExpression()), !dbg !5676
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5677
  %pie_data4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 53, !dbg !5678
  %pie_dir5 = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data4, i32 0, i32 0, !dbg !5679
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %pie_dir5, i64 0, i64 0, !dbg !5677
  store float* %arraydecay, float** %pie_dir, align 8, !dbg !5676
  call void @llvm.dbg.declare(metadata float* %pie_radius_internal, metadata !5680, metadata !DIExpression()), !dbg !5681
  %5 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5682
  %6 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 113), align 2, !dbg !5683
  %conv = sext i16 %6 to i32, !dbg !5684
  %conv6 = sitofp i32 %conv to float, !dbg !5684
  %mul = fmul float %5, %conv6, !dbg !5685
  store float %mul, float* %pie_radius_internal, align 4, !dbg !5681
  call void @llvm.dbg.declare(metadata float* %pie_radius_external, metadata !5686, metadata !DIExpression()), !dbg !5687
  %7 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5688
  %8 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 113), align 2, !dbg !5689
  %conv7 = sext i16 %8 to i32, !dbg !5690
  %conv8 = sitofp i32 %conv7 to float, !dbg !5690
  %add = fadd float %conv8, 7.000000e+00, !dbg !5691
  %mul9 = fmul float %7, %add, !dbg !5692
  store float %mul9, float* %pie_radius_external, align 4, !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %subd, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i32 40, i32* %subd, align 4, !dbg !5694
  call void @llvm.dbg.declare(metadata float* %angle, metadata !5695, metadata !DIExpression()), !dbg !5696
  %9 = load float*, float** %pie_dir, align 8, !dbg !5697
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 1, !dbg !5697
  %10 = load float, float* %arrayidx10, align 4, !dbg !5697
  %11 = load float*, float** %pie_dir, align 8, !dbg !5698
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 0, !dbg !5698
  %12 = load float, float* %arrayidx11, align 4, !dbg !5698
  %call12 = call float @atan2f(float %10, float %12) #6, !dbg !5699
  store float %call12, float* %angle, align 4, !dbg !5696
  call void @llvm.dbg.declare(metadata float* %range, metadata !5700, metadata !DIExpression()), !dbg !5701
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5702
  %pie_data13 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 53, !dbg !5703
  %flags = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data13, i32 0, i32 5, !dbg !5704
  %14 = load i32, i32* %flags, align 8, !dbg !5704
  %and = and i32 %14, 1, !dbg !5705
  %tobool = icmp ne i32 %and, 0, !dbg !5706
  %15 = zext i1 %tobool to i64, !dbg !5706
  %cond = select i1 %tobool, float 0x3FF921FB60000000, float 0x3FE921FB60000000, !dbg !5706
  store float %cond, float* %range, align 4, !dbg !5701
  call void @glPushMatrix(), !dbg !5707
  %16 = load float, float* %cx, align 4, !dbg !5708
  %17 = load float, float* %cy, align 4, !dbg !5709
  call void @glTranslatef(float %16, float %17, float 0.000000e+00), !dbg !5710
  call void @glEnable(i32 3042), !dbg !5711
  %18 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5712
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %18, i32 0, i32 3, !dbg !5714
  %wcol_pie_menu = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 17, !dbg !5715
  %shaded = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu, i32 0, i32 6, !dbg !5716
  %19 = load i16, i16* %shaded, align 8, !dbg !5716
  %tobool14 = icmp ne i16 %19, 0, !dbg !5712
  br i1 %tobool14, label %if.then, label %if.else, !dbg !5717

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8]* %col1, metadata !5718, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata [4 x i8]* %col2, metadata !5721, metadata !DIExpression()), !dbg !5722
  %arraydecay15 = getelementptr inbounds [4 x i8], [4 x i8]* %col1, i64 0, i64 0, !dbg !5723
  %arraydecay16 = getelementptr inbounds [4 x i8], [4 x i8]* %col2, i64 0, i64 0, !dbg !5724
  %20 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5725
  %tui17 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %20, i32 0, i32 3, !dbg !5726
  %wcol_pie_menu18 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui17, i32 0, i32 17, !dbg !5727
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu18, i32 0, i32 1, !dbg !5728
  %arraydecay19 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !5725
  %21 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5729
  %tui20 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %21, i32 0, i32 3, !dbg !5730
  %wcol_pie_menu21 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui20, i32 0, i32 17, !dbg !5731
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu21, i32 0, i32 7, !dbg !5732
  %22 = load i16, i16* %shadetop, align 2, !dbg !5732
  %23 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5733
  %tui22 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %23, i32 0, i32 3, !dbg !5734
  %wcol_pie_menu23 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui22, i32 0, i32 17, !dbg !5735
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu23, i32 0, i32 8, !dbg !5736
  %24 = load i16, i16* %shadedown, align 4, !dbg !5736
  call void @shadecolors4(i8* %arraydecay15, i8* %arraydecay16, i8* %arraydecay19, i16 signext %22, i16 signext %24), !dbg !5737
  %25 = load float, float* %pie_radius_internal, align 4, !dbg !5738
  %26 = load float, float* %pie_radius_external, align 4, !dbg !5739
  %27 = load i32, i32* %subd, align 4, !dbg !5740
  %arraydecay24 = getelementptr inbounds [4 x i8], [4 x i8]* %col1, i64 0, i64 0, !dbg !5741
  %arraydecay25 = getelementptr inbounds [4 x i8], [4 x i8]* %col2, i64 0, i64 0, !dbg !5742
  call void @draw_disk_shaded(float 0.000000e+00, float 0x401921FB60000000, float %25, float %26, i32 %27, i8* %arraydecay24, i8* %arraydecay25, i8 zeroext 1), !dbg !5743
  br label %if.end, !dbg !5744

if.else:                                          ; preds = %entry
  %28 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5745
  %tui26 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %28, i32 0, i32 3, !dbg !5747
  %wcol_pie_menu27 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui26, i32 0, i32 17, !dbg !5748
  %inner28 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu27, i32 0, i32 1, !dbg !5749
  %arraydecay29 = getelementptr inbounds [4 x i8], [4 x i8]* %inner28, i64 0, i64 0, !dbg !5745
  call void @glColor4ubv(i8* %arraydecay29), !dbg !5750
  %29 = load float, float* %pie_radius_internal, align 4, !dbg !5751
  %30 = load float, float* %pie_radius_external, align 4, !dbg !5752
  %31 = load i32, i32* %subd, align 4, !dbg !5753
  call void @draw_disk_shaded(float 0.000000e+00, float 0x401921FB60000000, float %29, float %30, i32 %31, i8* null, i8* null, i8 zeroext 0), !dbg !5754
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5755
  %pie_data30 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %32, i32 0, i32 53, !dbg !5757
  %flags31 = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data30, i32 0, i32 5, !dbg !5758
  %33 = load i32, i32* %flags31, align 8, !dbg !5758
  %and32 = and i32 %33, 8, !dbg !5759
  %tobool33 = icmp ne i32 %and32, 0, !dbg !5759
  br i1 %tobool33, label %if.end63, label %if.then34, !dbg !5760

if.then34:                                        ; preds = %if.end
  %34 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5761
  %tui35 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %34, i32 0, i32 3, !dbg !5764
  %wcol_pie_menu36 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui35, i32 0, i32 17, !dbg !5765
  %shaded37 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu36, i32 0, i32 6, !dbg !5766
  %35 = load i16, i16* %shaded37, align 8, !dbg !5766
  %tobool38 = icmp ne i16 %35, 0, !dbg !5761
  br i1 %tobool38, label %if.then39, label %if.else55, !dbg !5767

if.then39:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata [4 x i8]* %col140, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata [4 x i8]* %col241, metadata !5771, metadata !DIExpression()), !dbg !5772
  %arraydecay42 = getelementptr inbounds [4 x i8], [4 x i8]* %col140, i64 0, i64 0, !dbg !5773
  %arraydecay43 = getelementptr inbounds [4 x i8], [4 x i8]* %col241, i64 0, i64 0, !dbg !5774
  %36 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5775
  %tui44 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %36, i32 0, i32 3, !dbg !5776
  %wcol_pie_menu45 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui44, i32 0, i32 17, !dbg !5777
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu45, i32 0, i32 2, !dbg !5778
  %arraydecay46 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !5775
  %37 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5779
  %tui47 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %37, i32 0, i32 3, !dbg !5780
  %wcol_pie_menu48 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui47, i32 0, i32 17, !dbg !5781
  %shadetop49 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu48, i32 0, i32 7, !dbg !5782
  %38 = load i16, i16* %shadetop49, align 2, !dbg !5782
  %39 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5783
  %tui50 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %39, i32 0, i32 3, !dbg !5784
  %wcol_pie_menu51 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui50, i32 0, i32 17, !dbg !5785
  %shadedown52 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu51, i32 0, i32 8, !dbg !5786
  %40 = load i16, i16* %shadedown52, align 4, !dbg !5786
  call void @shadecolors4(i8* %arraydecay42, i8* %arraydecay43, i8* %arraydecay46, i16 signext %38, i16 signext %40), !dbg !5787
  %41 = load float, float* %angle, align 4, !dbg !5788
  %42 = load float, float* %range, align 4, !dbg !5789
  %div = fdiv float %42, 2.000000e+00, !dbg !5790
  %sub = fsub float %41, %div, !dbg !5791
  %43 = load float, float* %range, align 4, !dbg !5792
  %44 = load float, float* %pie_radius_internal, align 4, !dbg !5793
  %45 = load float, float* %pie_radius_external, align 4, !dbg !5794
  %46 = load i32, i32* %subd, align 4, !dbg !5795
  %arraydecay53 = getelementptr inbounds [4 x i8], [4 x i8]* %col140, i64 0, i64 0, !dbg !5796
  %arraydecay54 = getelementptr inbounds [4 x i8], [4 x i8]* %col241, i64 0, i64 0, !dbg !5797
  call void @draw_disk_shaded(float %sub, float %43, float %44, float %45, i32 %46, i8* %arraydecay53, i8* %arraydecay54, i8 zeroext 1), !dbg !5798
  br label %if.end62, !dbg !5799

if.else55:                                        ; preds = %if.then34
  %47 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5800
  %tui56 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %47, i32 0, i32 3, !dbg !5802
  %wcol_pie_menu57 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui56, i32 0, i32 17, !dbg !5803
  %inner_sel58 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu57, i32 0, i32 2, !dbg !5804
  %arraydecay59 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel58, i64 0, i64 0, !dbg !5800
  call void @glColor4ubv(i8* %arraydecay59), !dbg !5805
  %48 = load float, float* %angle, align 4, !dbg !5806
  %49 = load float, float* %range, align 4, !dbg !5807
  %div60 = fdiv float %49, 2.000000e+00, !dbg !5808
  %sub61 = fsub float %48, %div60, !dbg !5809
  %50 = load float, float* %range, align 4, !dbg !5810
  %51 = load float, float* %pie_radius_internal, align 4, !dbg !5811
  %52 = load float, float* %pie_radius_external, align 4, !dbg !5812
  %53 = load i32, i32* %subd, align 4, !dbg !5813
  call void @draw_disk_shaded(float %sub61, float %50, float %51, float %52, i32 %53, i8* null, i8* null, i8 zeroext 0), !dbg !5814
  br label %if.end62

if.end62:                                         ; preds = %if.else55, %if.then39
  br label %if.end63, !dbg !5815

if.end63:                                         ; preds = %if.end62, %if.end
  %54 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5816
  %tui64 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %54, i32 0, i32 3, !dbg !5817
  %wcol_pie_menu65 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui64, i32 0, i32 17, !dbg !5818
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu65, i32 0, i32 0, !dbg !5819
  %arraydecay66 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 0, !dbg !5816
  call void @glColor4ubv(i8* %arraydecay66), !dbg !5820
  %55 = load float, float* %pie_radius_internal, align 4, !dbg !5821
  %56 = load i32, i32* %subd, align 4, !dbg !5822
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %55, i32 %56), !dbg !5823
  %57 = load float, float* %pie_radius_external, align 4, !dbg !5824
  %58 = load i32, i32* %subd, align 4, !dbg !5825
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %57, i32 %58), !dbg !5826
  %59 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 111), align 2, !dbg !5827
  %conv67 = sext i16 %59 to i32, !dbg !5829
  %cmp = icmp sgt i32 %conv67, 0, !dbg !5830
  br i1 %cmp, label %land.lhs.true, label %if.end96, !dbg !5831

land.lhs.true:                                    ; preds = %if.end63
  %60 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5832
  %pie_data69 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %60, i32 0, i32 53, !dbg !5833
  %flags70 = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data69, i32 0, i32 5, !dbg !5834
  %61 = load i32, i32* %flags70, align 8, !dbg !5834
  %and71 = and i32 %61, 24, !dbg !5835
  %tobool72 = icmp ne i32 %and71, 0, !dbg !5835
  br i1 %tobool72, label %if.end96, label %if.then73, !dbg !5836

if.then73:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %pie_confirm_radius, metadata !5837, metadata !DIExpression()), !dbg !5839
  %62 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5840
  %63 = load float, float* %pie_radius_internal, align 4, !dbg !5841
  %64 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 111), align 2, !dbg !5842
  %conv74 = sext i16 %64 to i32, !dbg !5843
  %conv75 = sitofp i32 %conv74 to float, !dbg !5843
  %add76 = fadd float %63, %conv75, !dbg !5844
  %mul77 = fmul float %62, %add76, !dbg !5845
  store float %mul77, float* %pie_confirm_radius, align 4, !dbg !5839
  call void @llvm.dbg.declare(metadata float* %pie_confirm_external, metadata !5846, metadata !DIExpression()), !dbg !5847
  %65 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5848
  %66 = load float, float* %pie_radius_internal, align 4, !dbg !5849
  %67 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 111), align 2, !dbg !5850
  %conv78 = sext i16 %67 to i32, !dbg !5851
  %conv79 = sitofp i32 %conv78 to float, !dbg !5851
  %add80 = fadd float %66, %conv79, !dbg !5852
  %add81 = fadd float %add80, 7.000000e+00, !dbg !5853
  %mul82 = fmul float %65, %add81, !dbg !5854
  store float %mul82, float* %pie_confirm_external, align 4, !dbg !5847
  %68 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5855
  %tui83 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %68, i32 0, i32 3, !dbg !5856
  %wcol_pie_menu84 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui83, i32 0, i32 17, !dbg !5857
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu84, i32 0, i32 5, !dbg !5858
  %arrayidx85 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !5855
  %69 = load i8, i8* %arrayidx85, align 4, !dbg !5855
  %70 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5859
  %tui86 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %70, i32 0, i32 3, !dbg !5860
  %wcol_pie_menu87 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui86, i32 0, i32 17, !dbg !5861
  %text_sel88 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu87, i32 0, i32 5, !dbg !5862
  %arrayidx89 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel88, i64 0, i64 1, !dbg !5859
  %71 = load i8, i8* %arrayidx89, align 1, !dbg !5859
  %72 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !5863
  %tui90 = getelementptr inbounds %struct.bTheme, %struct.bTheme* %72, i32 0, i32 3, !dbg !5864
  %wcol_pie_menu91 = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui90, i32 0, i32 17, !dbg !5865
  %text_sel92 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol_pie_menu91, i32 0, i32 5, !dbg !5866
  %arrayidx93 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel92, i64 0, i64 2, !dbg !5863
  %73 = load i8, i8* %arrayidx93, align 2, !dbg !5863
  call void @glColor4ub(i8 zeroext %69, i8 zeroext %71, i8 zeroext %73, i8 zeroext 64), !dbg !5867
  %74 = load float, float* %angle, align 4, !dbg !5868
  %75 = load float, float* %range, align 4, !dbg !5869
  %div94 = fdiv float %75, 2.000000e+00, !dbg !5870
  %sub95 = fsub float %74, %div94, !dbg !5871
  %76 = load float, float* %range, align 4, !dbg !5872
  %77 = load float, float* %pie_confirm_radius, align 4, !dbg !5873
  %78 = load float, float* %pie_confirm_external, align 4, !dbg !5874
  %79 = load i32, i32* %subd, align 4, !dbg !5875
  call void @draw_disk_shaded(float %sub95, float %76, float %77, float %78, i32 %79, i8* null, i8* null, i8 zeroext 0), !dbg !5876
  br label %if.end96, !dbg !5877

if.end96:                                         ; preds = %if.then73, %land.lhs.true, %if.end63
  call void @glDisable(i32 3042), !dbg !5878
  call void @glPopMatrix(), !dbg !5879
  ret void, !dbg !5880
}

declare dso_local void @glPushMatrix() #2

; Function Attrs: noinline nounwind uwtable
define internal void @shadecolors4(i8* %coltop, i8* %coldown, i8* %color, i16 signext %shadetop, i16 signext %shadedown) #0 !dbg !5881 {
entry:
  %coltop.addr = alloca i8*, align 8
  %coldown.addr = alloca i8*, align 8
  %color.addr = alloca i8*, align 8
  %shadetop.addr = alloca i16, align 2
  %shadedown.addr = alloca i16, align 2
  store i8* %coltop, i8** %coltop.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %coltop.addr, metadata !5884, metadata !DIExpression()), !dbg !5885
  store i8* %coldown, i8** %coldown.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %coldown.addr, metadata !5886, metadata !DIExpression()), !dbg !5887
  store i8* %color, i8** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color.addr, metadata !5888, metadata !DIExpression()), !dbg !5889
  store i16 %shadetop, i16* %shadetop.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %shadetop.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  store i16 %shadedown, i16* %shadedown.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %shadedown.addr, metadata !5892, metadata !DIExpression()), !dbg !5893
  %0 = load i8*, i8** %color.addr, align 8, !dbg !5894
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5894
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5894
  %conv = zext i8 %1 to i32, !dbg !5894
  %2 = load i16, i16* %shadetop.addr, align 2, !dbg !5894
  %conv1 = sext i16 %2 to i32, !dbg !5894
  %add = add nsw i32 %conv, %conv1, !dbg !5894
  %cmp = icmp slt i32 %add, 0, !dbg !5894
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5894

cond.true:                                        ; preds = %entry
  br label %cond.end15, !dbg !5894

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %color.addr, align 8, !dbg !5894
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5894
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !5894
  %conv4 = zext i8 %4 to i32, !dbg !5894
  %5 = load i16, i16* %shadetop.addr, align 2, !dbg !5894
  %conv5 = sext i16 %5 to i32, !dbg !5894
  %add6 = add nsw i32 %conv4, %conv5, !dbg !5894
  %cmp7 = icmp sgt i32 %add6, 255, !dbg !5894
  br i1 %cmp7, label %cond.true9, label %cond.false10, !dbg !5894

cond.true9:                                       ; preds = %cond.false
  br label %cond.end, !dbg !5894

cond.false10:                                     ; preds = %cond.false
  %6 = load i8*, i8** %color.addr, align 8, !dbg !5894
  %arrayidx11 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !5894
  %7 = load i8, i8* %arrayidx11, align 1, !dbg !5894
  %conv12 = zext i8 %7 to i32, !dbg !5894
  %8 = load i16, i16* %shadetop.addr, align 2, !dbg !5894
  %conv13 = sext i16 %8 to i32, !dbg !5894
  %add14 = add nsw i32 %conv12, %conv13, !dbg !5894
  br label %cond.end, !dbg !5894

cond.end:                                         ; preds = %cond.false10, %cond.true9
  %cond = phi i32 [ 255, %cond.true9 ], [ %add14, %cond.false10 ], !dbg !5894
  br label %cond.end15, !dbg !5894

cond.end15:                                       ; preds = %cond.end, %cond.true
  %cond16 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !5894
  %conv17 = trunc i32 %cond16 to i8, !dbg !5894
  %9 = load i8*, i8** %coltop.addr, align 8, !dbg !5895
  %arrayidx18 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5895
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !5896
  %10 = load i8*, i8** %color.addr, align 8, !dbg !5897
  %arrayidx19 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5897
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !5897
  %conv20 = zext i8 %11 to i32, !dbg !5897
  %12 = load i16, i16* %shadetop.addr, align 2, !dbg !5897
  %conv21 = sext i16 %12 to i32, !dbg !5897
  %add22 = add nsw i32 %conv20, %conv21, !dbg !5897
  %cmp23 = icmp slt i32 %add22, 0, !dbg !5897
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !5897

cond.true25:                                      ; preds = %cond.end15
  br label %cond.end41, !dbg !5897

cond.false26:                                     ; preds = %cond.end15
  %13 = load i8*, i8** %color.addr, align 8, !dbg !5897
  %arrayidx27 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !5897
  %14 = load i8, i8* %arrayidx27, align 1, !dbg !5897
  %conv28 = zext i8 %14 to i32, !dbg !5897
  %15 = load i16, i16* %shadetop.addr, align 2, !dbg !5897
  %conv29 = sext i16 %15 to i32, !dbg !5897
  %add30 = add nsw i32 %conv28, %conv29, !dbg !5897
  %cmp31 = icmp sgt i32 %add30, 255, !dbg !5897
  br i1 %cmp31, label %cond.true33, label %cond.false34, !dbg !5897

cond.true33:                                      ; preds = %cond.false26
  br label %cond.end39, !dbg !5897

cond.false34:                                     ; preds = %cond.false26
  %16 = load i8*, i8** %color.addr, align 8, !dbg !5897
  %arrayidx35 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !5897
  %17 = load i8, i8* %arrayidx35, align 1, !dbg !5897
  %conv36 = zext i8 %17 to i32, !dbg !5897
  %18 = load i16, i16* %shadetop.addr, align 2, !dbg !5897
  %conv37 = sext i16 %18 to i32, !dbg !5897
  %add38 = add nsw i32 %conv36, %conv37, !dbg !5897
  br label %cond.end39, !dbg !5897

cond.end39:                                       ; preds = %cond.false34, %cond.true33
  %cond40 = phi i32 [ 255, %cond.true33 ], [ %add38, %cond.false34 ], !dbg !5897
  br label %cond.end41, !dbg !5897

cond.end41:                                       ; preds = %cond.end39, %cond.true25
  %cond42 = phi i32 [ 0, %cond.true25 ], [ %cond40, %cond.end39 ], !dbg !5897
  %conv43 = trunc i32 %cond42 to i8, !dbg !5897
  %19 = load i8*, i8** %coltop.addr, align 8, !dbg !5898
  %arrayidx44 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !5898
  store i8 %conv43, i8* %arrayidx44, align 1, !dbg !5899
  %20 = load i8*, i8** %color.addr, align 8, !dbg !5900
  %arrayidx45 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !5900
  %21 = load i8, i8* %arrayidx45, align 1, !dbg !5900
  %conv46 = zext i8 %21 to i32, !dbg !5900
  %22 = load i16, i16* %shadetop.addr, align 2, !dbg !5900
  %conv47 = sext i16 %22 to i32, !dbg !5900
  %add48 = add nsw i32 %conv46, %conv47, !dbg !5900
  %cmp49 = icmp slt i32 %add48, 0, !dbg !5900
  br i1 %cmp49, label %cond.true51, label %cond.false52, !dbg !5900

cond.true51:                                      ; preds = %cond.end41
  br label %cond.end67, !dbg !5900

cond.false52:                                     ; preds = %cond.end41
  %23 = load i8*, i8** %color.addr, align 8, !dbg !5900
  %arrayidx53 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !5900
  %24 = load i8, i8* %arrayidx53, align 1, !dbg !5900
  %conv54 = zext i8 %24 to i32, !dbg !5900
  %25 = load i16, i16* %shadetop.addr, align 2, !dbg !5900
  %conv55 = sext i16 %25 to i32, !dbg !5900
  %add56 = add nsw i32 %conv54, %conv55, !dbg !5900
  %cmp57 = icmp sgt i32 %add56, 255, !dbg !5900
  br i1 %cmp57, label %cond.true59, label %cond.false60, !dbg !5900

cond.true59:                                      ; preds = %cond.false52
  br label %cond.end65, !dbg !5900

cond.false60:                                     ; preds = %cond.false52
  %26 = load i8*, i8** %color.addr, align 8, !dbg !5900
  %arrayidx61 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !5900
  %27 = load i8, i8* %arrayidx61, align 1, !dbg !5900
  %conv62 = zext i8 %27 to i32, !dbg !5900
  %28 = load i16, i16* %shadetop.addr, align 2, !dbg !5900
  %conv63 = sext i16 %28 to i32, !dbg !5900
  %add64 = add nsw i32 %conv62, %conv63, !dbg !5900
  br label %cond.end65, !dbg !5900

cond.end65:                                       ; preds = %cond.false60, %cond.true59
  %cond66 = phi i32 [ 255, %cond.true59 ], [ %add64, %cond.false60 ], !dbg !5900
  br label %cond.end67, !dbg !5900

cond.end67:                                       ; preds = %cond.end65, %cond.true51
  %cond68 = phi i32 [ 0, %cond.true51 ], [ %cond66, %cond.end65 ], !dbg !5900
  %conv69 = trunc i32 %cond68 to i8, !dbg !5900
  %29 = load i8*, i8** %coltop.addr, align 8, !dbg !5901
  %arrayidx70 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !5901
  store i8 %conv69, i8* %arrayidx70, align 1, !dbg !5902
  %30 = load i8*, i8** %color.addr, align 8, !dbg !5903
  %arrayidx71 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !5903
  %31 = load i8, i8* %arrayidx71, align 1, !dbg !5903
  %32 = load i8*, i8** %coltop.addr, align 8, !dbg !5904
  %arrayidx72 = getelementptr inbounds i8, i8* %32, i64 3, !dbg !5904
  store i8 %31, i8* %arrayidx72, align 1, !dbg !5905
  %33 = load i8*, i8** %color.addr, align 8, !dbg !5906
  %arrayidx73 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !5906
  %34 = load i8, i8* %arrayidx73, align 1, !dbg !5906
  %conv74 = zext i8 %34 to i32, !dbg !5906
  %35 = load i16, i16* %shadedown.addr, align 2, !dbg !5906
  %conv75 = sext i16 %35 to i32, !dbg !5906
  %add76 = add nsw i32 %conv74, %conv75, !dbg !5906
  %cmp77 = icmp slt i32 %add76, 0, !dbg !5906
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !5906

cond.true79:                                      ; preds = %cond.end67
  br label %cond.end95, !dbg !5906

cond.false80:                                     ; preds = %cond.end67
  %36 = load i8*, i8** %color.addr, align 8, !dbg !5906
  %arrayidx81 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !5906
  %37 = load i8, i8* %arrayidx81, align 1, !dbg !5906
  %conv82 = zext i8 %37 to i32, !dbg !5906
  %38 = load i16, i16* %shadedown.addr, align 2, !dbg !5906
  %conv83 = sext i16 %38 to i32, !dbg !5906
  %add84 = add nsw i32 %conv82, %conv83, !dbg !5906
  %cmp85 = icmp sgt i32 %add84, 255, !dbg !5906
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !5906

cond.true87:                                      ; preds = %cond.false80
  br label %cond.end93, !dbg !5906

cond.false88:                                     ; preds = %cond.false80
  %39 = load i8*, i8** %color.addr, align 8, !dbg !5906
  %arrayidx89 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !5906
  %40 = load i8, i8* %arrayidx89, align 1, !dbg !5906
  %conv90 = zext i8 %40 to i32, !dbg !5906
  %41 = load i16, i16* %shadedown.addr, align 2, !dbg !5906
  %conv91 = sext i16 %41 to i32, !dbg !5906
  %add92 = add nsw i32 %conv90, %conv91, !dbg !5906
  br label %cond.end93, !dbg !5906

cond.end93:                                       ; preds = %cond.false88, %cond.true87
  %cond94 = phi i32 [ 255, %cond.true87 ], [ %add92, %cond.false88 ], !dbg !5906
  br label %cond.end95, !dbg !5906

cond.end95:                                       ; preds = %cond.end93, %cond.true79
  %cond96 = phi i32 [ 0, %cond.true79 ], [ %cond94, %cond.end93 ], !dbg !5906
  %conv97 = trunc i32 %cond96 to i8, !dbg !5906
  %42 = load i8*, i8** %coldown.addr, align 8, !dbg !5907
  %arrayidx98 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !5907
  store i8 %conv97, i8* %arrayidx98, align 1, !dbg !5908
  %43 = load i8*, i8** %color.addr, align 8, !dbg !5909
  %arrayidx99 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !5909
  %44 = load i8, i8* %arrayidx99, align 1, !dbg !5909
  %conv100 = zext i8 %44 to i32, !dbg !5909
  %45 = load i16, i16* %shadedown.addr, align 2, !dbg !5909
  %conv101 = sext i16 %45 to i32, !dbg !5909
  %add102 = add nsw i32 %conv100, %conv101, !dbg !5909
  %cmp103 = icmp slt i32 %add102, 0, !dbg !5909
  br i1 %cmp103, label %cond.true105, label %cond.false106, !dbg !5909

cond.true105:                                     ; preds = %cond.end95
  br label %cond.end121, !dbg !5909

cond.false106:                                    ; preds = %cond.end95
  %46 = load i8*, i8** %color.addr, align 8, !dbg !5909
  %arrayidx107 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !5909
  %47 = load i8, i8* %arrayidx107, align 1, !dbg !5909
  %conv108 = zext i8 %47 to i32, !dbg !5909
  %48 = load i16, i16* %shadedown.addr, align 2, !dbg !5909
  %conv109 = sext i16 %48 to i32, !dbg !5909
  %add110 = add nsw i32 %conv108, %conv109, !dbg !5909
  %cmp111 = icmp sgt i32 %add110, 255, !dbg !5909
  br i1 %cmp111, label %cond.true113, label %cond.false114, !dbg !5909

cond.true113:                                     ; preds = %cond.false106
  br label %cond.end119, !dbg !5909

cond.false114:                                    ; preds = %cond.false106
  %49 = load i8*, i8** %color.addr, align 8, !dbg !5909
  %arrayidx115 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !5909
  %50 = load i8, i8* %arrayidx115, align 1, !dbg !5909
  %conv116 = zext i8 %50 to i32, !dbg !5909
  %51 = load i16, i16* %shadedown.addr, align 2, !dbg !5909
  %conv117 = sext i16 %51 to i32, !dbg !5909
  %add118 = add nsw i32 %conv116, %conv117, !dbg !5909
  br label %cond.end119, !dbg !5909

cond.end119:                                      ; preds = %cond.false114, %cond.true113
  %cond120 = phi i32 [ 255, %cond.true113 ], [ %add118, %cond.false114 ], !dbg !5909
  br label %cond.end121, !dbg !5909

cond.end121:                                      ; preds = %cond.end119, %cond.true105
  %cond122 = phi i32 [ 0, %cond.true105 ], [ %cond120, %cond.end119 ], !dbg !5909
  %conv123 = trunc i32 %cond122 to i8, !dbg !5909
  %52 = load i8*, i8** %coldown.addr, align 8, !dbg !5910
  %arrayidx124 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !5910
  store i8 %conv123, i8* %arrayidx124, align 1, !dbg !5911
  %53 = load i8*, i8** %color.addr, align 8, !dbg !5912
  %arrayidx125 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !5912
  %54 = load i8, i8* %arrayidx125, align 1, !dbg !5912
  %conv126 = zext i8 %54 to i32, !dbg !5912
  %55 = load i16, i16* %shadedown.addr, align 2, !dbg !5912
  %conv127 = sext i16 %55 to i32, !dbg !5912
  %add128 = add nsw i32 %conv126, %conv127, !dbg !5912
  %cmp129 = icmp slt i32 %add128, 0, !dbg !5912
  br i1 %cmp129, label %cond.true131, label %cond.false132, !dbg !5912

cond.true131:                                     ; preds = %cond.end121
  br label %cond.end147, !dbg !5912

cond.false132:                                    ; preds = %cond.end121
  %56 = load i8*, i8** %color.addr, align 8, !dbg !5912
  %arrayidx133 = getelementptr inbounds i8, i8* %56, i64 2, !dbg !5912
  %57 = load i8, i8* %arrayidx133, align 1, !dbg !5912
  %conv134 = zext i8 %57 to i32, !dbg !5912
  %58 = load i16, i16* %shadedown.addr, align 2, !dbg !5912
  %conv135 = sext i16 %58 to i32, !dbg !5912
  %add136 = add nsw i32 %conv134, %conv135, !dbg !5912
  %cmp137 = icmp sgt i32 %add136, 255, !dbg !5912
  br i1 %cmp137, label %cond.true139, label %cond.false140, !dbg !5912

cond.true139:                                     ; preds = %cond.false132
  br label %cond.end145, !dbg !5912

cond.false140:                                    ; preds = %cond.false132
  %59 = load i8*, i8** %color.addr, align 8, !dbg !5912
  %arrayidx141 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !5912
  %60 = load i8, i8* %arrayidx141, align 1, !dbg !5912
  %conv142 = zext i8 %60 to i32, !dbg !5912
  %61 = load i16, i16* %shadedown.addr, align 2, !dbg !5912
  %conv143 = sext i16 %61 to i32, !dbg !5912
  %add144 = add nsw i32 %conv142, %conv143, !dbg !5912
  br label %cond.end145, !dbg !5912

cond.end145:                                      ; preds = %cond.false140, %cond.true139
  %cond146 = phi i32 [ 255, %cond.true139 ], [ %add144, %cond.false140 ], !dbg !5912
  br label %cond.end147, !dbg !5912

cond.end147:                                      ; preds = %cond.end145, %cond.true131
  %cond148 = phi i32 [ 0, %cond.true131 ], [ %cond146, %cond.end145 ], !dbg !5912
  %conv149 = trunc i32 %cond148 to i8, !dbg !5912
  %62 = load i8*, i8** %coldown.addr, align 8, !dbg !5913
  %arrayidx150 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !5913
  store i8 %conv149, i8* %arrayidx150, align 1, !dbg !5914
  %63 = load i8*, i8** %color.addr, align 8, !dbg !5915
  %arrayidx151 = getelementptr inbounds i8, i8* %63, i64 3, !dbg !5915
  %64 = load i8, i8* %arrayidx151, align 1, !dbg !5915
  %65 = load i8*, i8** %coldown.addr, align 8, !dbg !5916
  %arrayidx152 = getelementptr inbounds i8, i8* %65, i64 3, !dbg !5916
  store i8 %64, i8* %arrayidx152, align 1, !dbg !5917
  ret void, !dbg !5918
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_disk_shaded(float %start, float %angle, float %radius_int, float %radius_ext, i32 %subd, i8* %col1, i8* %col2, i8 zeroext %shaded) #0 !dbg !5919 {
entry:
  %start.addr = alloca float, align 4
  %angle.addr = alloca float, align 4
  %radius_int.addr = alloca float, align 4
  %radius_ext.addr = alloca float, align 4
  %subd.addr = alloca i32, align 4
  %col1.addr = alloca i8*, align 8
  %col2.addr = alloca i8*, align 8
  %shaded.addr = alloca i8, align 1
  %radius_ext_scale = alloca float, align 4
  %i = alloca i32, align 4
  %s = alloca float, align 4
  %c = alloca float, align 4
  %y1 = alloca float, align 4
  %y2 = alloca float, align 4
  %fac = alloca float, align 4
  %r_col = alloca [4 x i8], align 1
  %a = alloca float, align 4
  store float %start, float* %start.addr, align 4
  call void @llvm.dbg.declare(metadata float* %start.addr, metadata !5922, metadata !DIExpression()), !dbg !5923
  store float %angle, float* %angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle.addr, metadata !5924, metadata !DIExpression()), !dbg !5925
  store float %radius_int, float* %radius_int.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius_int.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  store float %radius_ext, float* %radius_ext.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius_ext.addr, metadata !5928, metadata !DIExpression()), !dbg !5929
  store i32 %subd, i32* %subd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subd.addr, metadata !5930, metadata !DIExpression()), !dbg !5931
  store i8* %col1, i8** %col1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %col1.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  store i8* %col2, i8** %col2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %col2.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store i8 %shaded, i8* %shaded.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %shaded.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.declare(metadata float* %radius_ext_scale, metadata !5938, metadata !DIExpression()), !dbg !5939
  %0 = load float, float* %radius_ext.addr, align 4, !dbg !5940
  %div = fdiv float 5.000000e-01, %0, !dbg !5941
  store float %div, float* %radius_ext_scale, align 4, !dbg !5939
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata float* %s, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata float* %c, metadata !5946, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.declare(metadata float* %y1, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata float* %y2, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5952, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.declare(metadata [4 x i8]* %r_col, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @glBegin(i32 5), !dbg !5956
  %1 = load float, float* %start.addr, align 4, !dbg !5957
  %call = call float @sinf(float %1) #6, !dbg !5958
  store float %call, float* %s, align 4, !dbg !5959
  %2 = load float, float* %start.addr, align 4, !dbg !5960
  %call1 = call float @cosf(float %2) #6, !dbg !5961
  store float %call1, float* %c, align 4, !dbg !5962
  %3 = load float, float* %s, align 4, !dbg !5963
  %4 = load float, float* %radius_int.addr, align 4, !dbg !5964
  %mul = fmul float %3, %4, !dbg !5965
  store float %mul, float* %y1, align 4, !dbg !5966
  %5 = load float, float* %s, align 4, !dbg !5967
  %6 = load float, float* %radius_ext.addr, align 4, !dbg !5968
  %mul2 = fmul float %5, %6, !dbg !5969
  store float %mul2, float* %y2, align 4, !dbg !5970
  %7 = load i8, i8* %shaded.addr, align 1, !dbg !5971
  %tobool = icmp ne i8 %7, 0, !dbg !5971
  br i1 %tobool, label %if.then, label %if.end, !dbg !5973

if.then:                                          ; preds = %entry
  %8 = load float, float* %y1, align 4, !dbg !5974
  %9 = load float, float* %radius_ext.addr, align 4, !dbg !5976
  %add = fadd float %8, %9, !dbg !5977
  %10 = load float, float* %radius_ext_scale, align 4, !dbg !5978
  %mul3 = fmul float %add, %10, !dbg !5979
  store float %mul3, float* %fac, align 4, !dbg !5980
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !5981
  %11 = load i8*, i8** %col1.addr, align 8, !dbg !5982
  %12 = load i8*, i8** %col2.addr, align 8, !dbg !5983
  %13 = load float, float* %fac, align 4, !dbg !5984
  call void @round_box_shade_col4_r(i8* %arraydecay, i8* %11, i8* %12, float %13), !dbg !5985
  %arraydecay4 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !5986
  call void @glColor4ubv(i8* %arraydecay4), !dbg !5987
  br label %if.end, !dbg !5988

if.end:                                           ; preds = %if.then, %entry
  %14 = load float, float* %c, align 4, !dbg !5989
  %15 = load float, float* %radius_int.addr, align 4, !dbg !5990
  %mul5 = fmul float %14, %15, !dbg !5991
  %16 = load float, float* %s, align 4, !dbg !5992
  %17 = load float, float* %radius_int.addr, align 4, !dbg !5993
  %mul6 = fmul float %16, %17, !dbg !5994
  call void @glVertex2f(float %mul5, float %mul6), !dbg !5995
  %18 = load i8, i8* %shaded.addr, align 1, !dbg !5996
  %tobool7 = icmp ne i8 %18, 0, !dbg !5996
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !5998

if.then8:                                         ; preds = %if.end
  %19 = load float, float* %y2, align 4, !dbg !5999
  %20 = load float, float* %radius_ext.addr, align 4, !dbg !6001
  %add9 = fadd float %19, %20, !dbg !6002
  %21 = load float, float* %radius_ext_scale, align 4, !dbg !6003
  %mul10 = fmul float %add9, %21, !dbg !6004
  store float %mul10, float* %fac, align 4, !dbg !6005
  %arraydecay11 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6006
  %22 = load i8*, i8** %col1.addr, align 8, !dbg !6007
  %23 = load i8*, i8** %col2.addr, align 8, !dbg !6008
  %24 = load float, float* %fac, align 4, !dbg !6009
  call void @round_box_shade_col4_r(i8* %arraydecay11, i8* %22, i8* %23, float %24), !dbg !6010
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6011
  call void @glColor4ubv(i8* %arraydecay12), !dbg !6012
  br label %if.end13, !dbg !6013

if.end13:                                         ; preds = %if.then8, %if.end
  %25 = load float, float* %c, align 4, !dbg !6014
  %26 = load float, float* %radius_ext.addr, align 4, !dbg !6015
  %mul14 = fmul float %25, %26, !dbg !6016
  %27 = load float, float* %s, align 4, !dbg !6017
  %28 = load float, float* %radius_ext.addr, align 4, !dbg !6018
  %mul15 = fmul float %27, %28, !dbg !6019
  call void @glVertex2f(float %mul14, float %mul15), !dbg !6020
  store i32 1, i32* %i, align 4, !dbg !6021
  br label %for.cond, !dbg !6023

for.cond:                                         ; preds = %for.inc, %if.end13
  %29 = load i32, i32* %i, align 4, !dbg !6024
  %30 = load i32, i32* %subd.addr, align 4, !dbg !6026
  %cmp = icmp slt i32 %29, %30, !dbg !6027
  br i1 %cmp, label %for.body, label %for.end, !dbg !6028

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %a, metadata !6029, metadata !DIExpression()), !dbg !6031
  %31 = load float, float* %start.addr, align 4, !dbg !6032
  %32 = load i32, i32* %i, align 4, !dbg !6033
  %conv = sitofp i32 %32 to float, !dbg !6034
  %33 = load i32, i32* %subd.addr, align 4, !dbg !6035
  %sub = sub nsw i32 %33, 1, !dbg !6036
  %conv16 = sitofp i32 %sub to float, !dbg !6037
  %div17 = fdiv float %conv, %conv16, !dbg !6038
  %34 = load float, float* %angle.addr, align 4, !dbg !6039
  %mul18 = fmul float %div17, %34, !dbg !6040
  %add19 = fadd float %31, %mul18, !dbg !6041
  store float %add19, float* %a, align 4, !dbg !6042
  %35 = load float, float* %a, align 4, !dbg !6043
  %call20 = call float @sinf(float %35) #6, !dbg !6044
  store float %call20, float* %s, align 4, !dbg !6045
  %36 = load float, float* %a, align 4, !dbg !6046
  %call21 = call float @cosf(float %36) #6, !dbg !6047
  store float %call21, float* %c, align 4, !dbg !6048
  %37 = load float, float* %s, align 4, !dbg !6049
  %38 = load float, float* %radius_int.addr, align 4, !dbg !6050
  %mul22 = fmul float %37, %38, !dbg !6051
  store float %mul22, float* %y1, align 4, !dbg !6052
  %39 = load float, float* %s, align 4, !dbg !6053
  %40 = load float, float* %radius_ext.addr, align 4, !dbg !6054
  %mul23 = fmul float %39, %40, !dbg !6055
  store float %mul23, float* %y2, align 4, !dbg !6056
  %41 = load i8, i8* %shaded.addr, align 1, !dbg !6057
  %tobool24 = icmp ne i8 %41, 0, !dbg !6057
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !6059

if.then25:                                        ; preds = %for.body
  %42 = load float, float* %y1, align 4, !dbg !6060
  %43 = load float, float* %radius_ext.addr, align 4, !dbg !6062
  %add26 = fadd float %42, %43, !dbg !6063
  %44 = load float, float* %radius_ext_scale, align 4, !dbg !6064
  %mul27 = fmul float %add26, %44, !dbg !6065
  store float %mul27, float* %fac, align 4, !dbg !6066
  %arraydecay28 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6067
  %45 = load i8*, i8** %col1.addr, align 8, !dbg !6068
  %46 = load i8*, i8** %col2.addr, align 8, !dbg !6069
  %47 = load float, float* %fac, align 4, !dbg !6070
  call void @round_box_shade_col4_r(i8* %arraydecay28, i8* %45, i8* %46, float %47), !dbg !6071
  %arraydecay29 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6072
  call void @glColor4ubv(i8* %arraydecay29), !dbg !6073
  br label %if.end30, !dbg !6074

if.end30:                                         ; preds = %if.then25, %for.body
  %48 = load float, float* %c, align 4, !dbg !6075
  %49 = load float, float* %radius_int.addr, align 4, !dbg !6076
  %mul31 = fmul float %48, %49, !dbg !6077
  %50 = load float, float* %s, align 4, !dbg !6078
  %51 = load float, float* %radius_int.addr, align 4, !dbg !6079
  %mul32 = fmul float %50, %51, !dbg !6080
  call void @glVertex2f(float %mul31, float %mul32), !dbg !6081
  %52 = load i8, i8* %shaded.addr, align 1, !dbg !6082
  %tobool33 = icmp ne i8 %52, 0, !dbg !6082
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !6084

if.then34:                                        ; preds = %if.end30
  %53 = load float, float* %y2, align 4, !dbg !6085
  %54 = load float, float* %radius_ext.addr, align 4, !dbg !6087
  %add35 = fadd float %53, %54, !dbg !6088
  %55 = load float, float* %radius_ext_scale, align 4, !dbg !6089
  %mul36 = fmul float %add35, %55, !dbg !6090
  store float %mul36, float* %fac, align 4, !dbg !6091
  %arraydecay37 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6092
  %56 = load i8*, i8** %col1.addr, align 8, !dbg !6093
  %57 = load i8*, i8** %col2.addr, align 8, !dbg !6094
  %58 = load float, float* %fac, align 4, !dbg !6095
  call void @round_box_shade_col4_r(i8* %arraydecay37, i8* %56, i8* %57, float %58), !dbg !6096
  %arraydecay38 = getelementptr inbounds [4 x i8], [4 x i8]* %r_col, i64 0, i64 0, !dbg !6097
  call void @glColor4ubv(i8* %arraydecay38), !dbg !6098
  br label %if.end39, !dbg !6099

if.end39:                                         ; preds = %if.then34, %if.end30
  %59 = load float, float* %c, align 4, !dbg !6100
  %60 = load float, float* %radius_ext.addr, align 4, !dbg !6101
  %mul40 = fmul float %59, %60, !dbg !6102
  %61 = load float, float* %s, align 4, !dbg !6103
  %62 = load float, float* %radius_ext.addr, align 4, !dbg !6104
  %mul41 = fmul float %61, %62, !dbg !6105
  call void @glVertex2f(float %mul40, float %mul41), !dbg !6106
  br label %for.inc, !dbg !6107

for.inc:                                          ; preds = %if.end39
  %63 = load i32, i32* %i, align 4, !dbg !6108
  %inc = add nsw i32 %63, 1, !dbg !6108
  store i32 %inc, i32* %i, align 4, !dbg !6108
  br label %for.cond, !dbg !6109, !llvm.loop !6110

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !6112
  ret void, !dbg !6113
}

declare dso_local void @glColor4ubv(i8*) #2

declare dso_local void @glutil_draw_lined_arc(float, float, float, i32) #2

declare dso_local void @glColor4ub(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @glPopMatrix() #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiWidgetColors* @ui_tooltip_get_theme() #0 !dbg !6114 {
entry:
  %wt = alloca %struct.uiWidgetType*, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !6117, metadata !DIExpression()), !dbg !6118
  %call = call %struct.uiWidgetType* @widget_type(i32 8), !dbg !6119
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !6118
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6120
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 0, !dbg !6121
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !6121
  ret %struct.uiWidgetColors* %1, !dbg !6122
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_tooltip_background(%struct.uiStyle* %UNUSED_style, %struct.uiBlock* %UNUSED_block, %struct.rcti* %rect) #0 !dbg !6123 {
entry:
  %UNUSED_style.addr = alloca %struct.uiStyle*, align 8
  %UNUSED_block.addr = alloca %struct.uiBlock*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %wt = alloca %struct.uiWidgetType*, align 8
  store %struct.uiStyle* %UNUSED_style, %struct.uiStyle** %UNUSED_style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %UNUSED_style.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  store %struct.uiBlock* %UNUSED_block, %struct.uiBlock** %UNUSED_block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %UNUSED_block.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !6130, metadata !DIExpression()), !dbg !6131
  %call = call %struct.uiWidgetType* @widget_type(i32 8), !dbg !6132
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !6131
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6133
  %state = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 3, !dbg !6134
  %1 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state, align 8, !dbg !6134
  %2 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6135
  call void %1(%struct.uiWidgetType* %2, i32 0), !dbg !6133
  %3 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6136
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %3, i32 0, i32 4, !dbg !6137
  %4 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !6137
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6138
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %5, i32 0, i32 2, !dbg !6139
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6140
  call void %4(%struct.uiWidgetColors* %wcol, %struct.rcti* %6, i32 0, i32 0), !dbg !6136
  ret void, !dbg !6141
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_search_back(%struct.uiStyle* %UNUSED_style, %struct.uiBlock* %block, %struct.rcti* %rect) #0 !dbg !6142 {
entry:
  %UNUSED_style.addr = alloca %struct.uiStyle*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %wt = alloca %struct.uiWidgetType*, align 8
  store %struct.uiStyle* %UNUSED_style, %struct.uiStyle** %UNUSED_style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %UNUSED_style.addr, metadata !6143, metadata !DIExpression()), !dbg !6144
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6145, metadata !DIExpression()), !dbg !6146
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !6149, metadata !DIExpression()), !dbg !6150
  %call = call %struct.uiWidgetType* @widget_type(i32 25), !dbg !6151
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !6150
  call void @glEnable(i32 3042), !dbg !6152
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6153
  %1 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6154
  %conv = sext i16 %1 to i32, !dbg !6155
  %conv1 = sitofp i32 %conv to float, !dbg !6155
  %mul = fmul float 2.500000e-01, %conv1, !dbg !6156
  call void @widget_softshadow(%struct.rcti* %0, i32 15, float %mul), !dbg !6157
  call void @glDisable(i32 3042), !dbg !6158
  %2 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6159
  %state = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %2, i32 0, i32 3, !dbg !6160
  %3 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state, align 8, !dbg !6160
  %4 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6161
  call void %3(%struct.uiWidgetType* %4, i32 0), !dbg !6159
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6162
  %tobool = icmp ne %struct.uiBlock* %5, null, !dbg !6162
  br i1 %tobool, label %if.then, label %if.else, !dbg !6164

if.then:                                          ; preds = %entry
  %6 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6165
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %6, i32 0, i32 4, !dbg !6166
  %7 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !6166
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6167
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !6168
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6169
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6170
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 27, !dbg !6171
  %11 = load i32, i32* %flag, align 8, !dbg !6171
  call void %7(%struct.uiWidgetColors* %wcol, %struct.rcti* %9, i32 %11, i32 15), !dbg !6165
  br label %if.end, !dbg !6165

if.else:                                          ; preds = %entry
  %12 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6172
  %draw2 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %12, i32 0, i32 4, !dbg !6173
  %13 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw2, align 8, !dbg !6173
  %14 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6174
  %wcol3 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %14, i32 0, i32 2, !dbg !6175
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6176
  call void %13(%struct.uiWidgetColors* %wcol3, %struct.rcti* %15, i32 0, i32 15), !dbg !6172
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6177
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_softshadow(%struct.rcti* %rect, i32 %roundboxalign, float %radin) #0 !dbg !6178 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %roundboxalign.addr = alloca i32, align 4
  %radin.addr = alloca float, align 4
  %btheme = alloca %struct.bTheme*, align 8
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rect1 = alloca %struct.rcti, align 4
  %alphastep = alloca float, align 4
  %step = alloca i32, align 4
  %totvert = alloca i32, align 4
  %quad_strip = alloca [74 x [2 x float]], align 16
  %radout = alloca float, align 4
  %expfac = alloca float, align 4
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !6183, metadata !DIExpression()), !dbg !6184
  store float %radin, float* %radin.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radin.addr, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !6187, metadata !DIExpression()), !dbg !6188
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !6189
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !6188
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect1, metadata !6192, metadata !DIExpression()), !dbg !6193
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6194
  %1 = bitcast %struct.rcti* %rect1 to i8*, !dbg !6195
  %2 = bitcast %struct.rcti* %0 to i8*, !dbg !6195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !6195
  call void @llvm.dbg.declare(metadata float* %alphastep, metadata !6196, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6198, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !6200, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.declare(metadata [74 x [2 x float]]* %quad_strip, metadata !6202, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.declare(metadata float* %radout, metadata !6204, metadata !DIExpression()), !dbg !6205
  %call1 = call i32 @UI_ThemeMenuShadowWidth(), !dbg !6206
  %conv = sitofp i32 %call1 to float, !dbg !6206
  store float %conv, float* %radout, align 4, !dbg !6205
  %3 = load float, float* %radout, align 4, !dbg !6207
  %cmp = fcmp oeq float %3, 0.000000e+00, !dbg !6209
  br i1 %cmp, label %if.then, label %if.end, !dbg !6210

if.then:                                          ; preds = %entry
  br label %return, !dbg !6211

if.end:                                           ; preds = %entry
  %4 = load float, float* %radout, align 4, !dbg !6212
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %rect1), !dbg !6214
  %conv4 = sitofp i32 %call3 to float, !dbg !6214
  %mul = fmul float 0x3FC99999A0000000, %conv4, !dbg !6215
  %cmp5 = fcmp ogt float %4, %mul, !dbg !6216
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !6217

if.then7:                                         ; preds = %if.end
  %call8 = call i32 @BLI_rcti_size_y(%struct.rcti* %rect1), !dbg !6218
  %conv9 = sitofp i32 %call8 to float, !dbg !6218
  %mul10 = fmul float 0x3FC99999A0000000, %conv9, !dbg !6219
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !6220
  %5 = load i32, i32* %ymax, align 4, !dbg !6221
  %conv11 = sitofp i32 %5 to float, !dbg !6221
  %sub = fsub float %conv11, %mul10, !dbg !6221
  %conv12 = fptosi float %sub to i32, !dbg !6221
  store i32 %conv12, i32* %ymax, align 4, !dbg !6221
  br label %if.end17, !dbg !6222

if.else:                                          ; preds = %if.end
  %6 = load float, float* %radout, align 4, !dbg !6223
  %ymax13 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !6224
  %7 = load i32, i32* %ymax13, align 4, !dbg !6225
  %conv14 = sitofp i32 %7 to float, !dbg !6225
  %sub15 = fsub float %conv14, %6, !dbg !6225
  %conv16 = fptosi float %sub15 to i32, !dbg !6225
  store i32 %conv16, i32* %ymax13, align 4, !dbg !6225
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then7
  %inner_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 3, !dbg !6226
  %arraydecay = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v, i64 0, i64 0, !dbg !6227
  %8 = load float, float* %radin.addr, align 4, !dbg !6228
  %9 = load i32, i32* %roundboxalign.addr, align 4, !dbg !6229
  %and = and i32 %9, 12, !dbg !6230
  %call18 = call i32 @round_box_shadow_edges([2 x float]* %arraydecay, %struct.rcti* %rect1, float %8, i32 %and, float 0.000000e+00), !dbg !6231
  store i32 %call18, i32* %totvert, align 4, !dbg !6232
  %10 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !6233
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %10, i32 0, i32 3, !dbg !6234
  %menu_shadow_fac = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 21, !dbg !6235
  %11 = load float, float* %menu_shadow_fac, align 4, !dbg !6235
  %mul19 = fmul float 3.000000e+00, %11, !dbg !6236
  %12 = load float, float* %radout, align 4, !dbg !6237
  %div = fdiv float %mul19, %12, !dbg !6238
  store float %div, float* %alphastep, align 4, !dbg !6239
  call void @glEnableClientState(i32 32884), !dbg !6240
  store i32 1, i32* %step, align 4, !dbg !6241
  br label %for.cond, !dbg !6243

for.cond:                                         ; preds = %for.inc, %if.end17
  %13 = load i32, i32* %step, align 4, !dbg !6244
  %14 = load float, float* %radout, align 4, !dbg !6246
  %conv20 = fptosi float %14 to i32, !dbg !6247
  %cmp21 = icmp sle i32 %13, %conv20, !dbg !6248
  br i1 %cmp21, label %for.body, label %for.end, !dbg !6249

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %expfac, metadata !6250, metadata !DIExpression()), !dbg !6252
  %15 = load i32, i32* %step, align 4, !dbg !6253
  %conv23 = sitofp i32 %15 to float, !dbg !6253
  %16 = load float, float* %radout, align 4, !dbg !6254
  %div24 = fdiv float %conv23, %16, !dbg !6255
  %call25 = call float @sqrtf(float %div24) #6, !dbg !6256
  store float %call25, float* %expfac, align 4, !dbg !6252
  %outer_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 2, !dbg !6257
  %arraydecay26 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v, i64 0, i64 0, !dbg !6258
  %17 = load float, float* %radin.addr, align 4, !dbg !6259
  %18 = load i32, i32* %step, align 4, !dbg !6260
  %conv27 = sitofp i32 %18 to float, !dbg !6261
  %call28 = call i32 @round_box_shadow_edges([2 x float]* %arraydecay26, %struct.rcti* %rect1, float %17, i32 15, float %conv27), !dbg !6262
  %19 = load float, float* %alphastep, align 4, !dbg !6263
  %20 = load float, float* %expfac, align 4, !dbg !6264
  %sub29 = fsub float 1.000000e+00, %20, !dbg !6265
  %mul30 = fmul float %19, %sub29, !dbg !6266
  call void @glColor4f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float %mul30), !dbg !6267
  %21 = load i32, i32* %totvert, align 4, !dbg !6268
  %arraydecay31 = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !6269
  call void @widget_verts_to_quad_strip(%struct.uiWidgetBase* %wtb, i32 %21, [2 x float]* %arraydecay31), !dbg !6270
  %arraydecay32 = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !6271
  %22 = bitcast [2 x float]* %arraydecay32 to i8*, !dbg !6271
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %22), !dbg !6272
  %23 = load i32, i32* %totvert, align 4, !dbg !6273
  %mul33 = mul nsw i32 %23, 2, !dbg !6274
  call void @glDrawArrays(i32 8, i32 0, i32 %mul33), !dbg !6275
  br label %for.inc, !dbg !6276

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %step, align 4, !dbg !6277
  %inc = add nsw i32 %24, 1, !dbg !6277
  store i32 %inc, i32* %step, align 4, !dbg !6277
  br label %for.cond, !dbg !6278, !llvm.loop !6279

for.end:                                          ; preds = %for.cond
  call void @glDisableClientState(i32 32884), !dbg !6281
  br label %return, !dbg !6282

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !6282
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_menu_item(%struct.uiFontStyle* %fstyle, %struct.rcti* %rect, i8* %name, i32 %iconid, i32 %state, i8 zeroext %use_sep) #0 !dbg !6283 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %name.addr = alloca i8*, align 8
  %iconid.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %use_sep.addr = alloca i8, align 1
  %wt = alloca %struct.uiWidgetType*, align 8
  %_rect = alloca %struct.rcti, align 4
  %cpoin = alloca i8*, align 8
  %drawstr = alloca [400 x i8], align 16
  %okwidth = alloca float, align 4
  %max_len = alloca i64, align 8
  %minwidth = alloca float, align 4
  %height = alloca float, align 4
  %aspect = alloca float, align 4
  %xs = alloca i32, align 4
  %ys = alloca i32, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i32 %iconid, i32* %iconid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iconid.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store i8 %use_sep, i8* %use_sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_sep.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !6298, metadata !DIExpression()), !dbg !6299
  %call = call %struct.uiWidgetType* @widget_type(i32 18), !dbg !6300
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !6299
  call void @llvm.dbg.declare(metadata %struct.rcti* %_rect, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6303
  %1 = bitcast %struct.rcti* %_rect to i8*, !dbg !6304
  %2 = bitcast %struct.rcti* %0 to i8*, !dbg !6304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !6304
  call void @llvm.dbg.declare(metadata i8** %cpoin, metadata !6305, metadata !DIExpression()), !dbg !6306
  store i8* null, i8** %cpoin, align 8, !dbg !6306
  %3 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6307
  %state1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %3, i32 0, i32 3, !dbg !6308
  %4 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state1, align 8, !dbg !6308
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6309
  %6 = load i32, i32* %state.addr, align 4, !dbg !6310
  call void %4(%struct.uiWidgetType* %5, i32 %6), !dbg !6307
  %7 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6311
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %7, i32 0, i32 4, !dbg !6312
  %8 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !6312
  %9 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6313
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %9, i32 0, i32 2, !dbg !6314
  %10 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6315
  call void %8(%struct.uiWidgetColors* %wcol, %struct.rcti* %10, i32 0, i32 0), !dbg !6311
  %11 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6316
  call void @uiStyleFontSet(%struct.uiFontStyle* %11), !dbg !6317
  %12 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6318
  %align = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %12, i32 0, i32 9, !dbg !6319
  store i16 0, i16* %align, align 2, !dbg !6320
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6321
  %conv = sext i16 %13 to i32, !dbg !6321
  %conv2 = sitofp i32 %conv to float, !dbg !6321
  %mul = fmul float 2.500000e-01, %conv2, !dbg !6322
  %14 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6323
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 0, !dbg !6324
  %15 = load i32, i32* %xmin, align 4, !dbg !6325
  %conv3 = sitofp i32 %15 to float, !dbg !6325
  %add = fadd float %conv3, %mul, !dbg !6325
  %conv4 = fptosi float %add to i32, !dbg !6325
  store i32 %conv4, i32* %xmin, align 4, !dbg !6325
  %16 = load i32, i32* %iconid.addr, align 4, !dbg !6326
  %tobool = icmp ne i32 %16, 0, !dbg !6326
  br i1 %tobool, label %if.then, label %if.end, !dbg !6328

if.then:                                          ; preds = %entry
  %17 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6329
  %18 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6329
  %conv5 = sitofp i32 %18 to float, !dbg !6329
  %mul6 = fmul float %17, %conv5, !dbg !6329
  %div = fdiv float %mul6, 7.200000e+01, !dbg !6329
  %mul7 = fmul float 1.600000e+01, %div, !dbg !6329
  %19 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6330
  %xmin8 = getelementptr inbounds %struct.rcti, %struct.rcti* %19, i32 0, i32 0, !dbg !6331
  %20 = load i32, i32* %xmin8, align 4, !dbg !6332
  %conv9 = sitofp i32 %20 to float, !dbg !6332
  %add10 = fadd float %conv9, %mul7, !dbg !6332
  %conv11 = fptosi float %add10 to i32, !dbg !6332
  store i32 %conv11, i32* %xmin8, align 4, !dbg !6332
  br label %if.end, !dbg !6330

if.end:                                           ; preds = %if.then, %entry
  %21 = load i8, i8* %use_sep.addr, align 1, !dbg !6333
  %tobool12 = icmp ne i8 %21, 0, !dbg !6333
  br i1 %tobool12, label %if.then13, label %if.end41, !dbg !6335

if.then13:                                        ; preds = %if.end
  %22 = load i8*, i8** %name.addr, align 8, !dbg !6336
  %call14 = call i8* @strchr(i8* %22, i32 124) #7, !dbg !6338
  store i8* %call14, i8** %cpoin, align 8, !dbg !6339
  %23 = load i8*, i8** %cpoin, align 8, !dbg !6340
  %tobool15 = icmp ne i8* %23, null, !dbg !6340
  br i1 %tobool15, label %if.then16, label %if.end40, !dbg !6342

if.then16:                                        ; preds = %if.then13
  %24 = load i8*, i8** %cpoin, align 8, !dbg !6343
  store i8 0, i8* %24, align 1, !dbg !6345
  %25 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6346
  call void @uiStyleFontSet(%struct.uiFontStyle* %25), !dbg !6347
  %26 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6348
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %26, i32 0, i32 2, !dbg !6350
  %27 = load i16, i16* %kerning, align 4, !dbg !6350
  %conv17 = sext i16 %27 to i32, !dbg !6348
  %cmp = icmp eq i32 %conv17, 1, !dbg !6351
  br i1 %cmp, label %if.then19, label %if.end21, !dbg !6352

if.then19:                                        ; preds = %if.then16
  %28 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6353
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %28, i32 0, i32 0, !dbg !6355
  %29 = load i16, i16* %uifont_id, align 4, !dbg !6355
  %conv20 = sext i16 %29 to i32, !dbg !6353
  call void @BLF_enable(i32 %conv20, i32 8), !dbg !6356
  br label %if.end21, !dbg !6357

if.end21:                                         ; preds = %if.then19, %if.then16
  %30 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6358
  %uifont_id22 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %30, i32 0, i32 0, !dbg !6359
  %31 = load i16, i16* %uifont_id22, align 4, !dbg !6359
  %conv23 = sext i16 %31 to i32, !dbg !6358
  %32 = load i8*, i8** %cpoin, align 8, !dbg !6360
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 1, !dbg !6361
  %call24 = call float @BLF_width(i32 %conv23, i8* %add.ptr, i64 2147483647), !dbg !6362
  %33 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6363
  %34 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6363
  %conv25 = sitofp i32 %34 to float, !dbg !6363
  %mul26 = fmul float %33, %conv25, !dbg !6363
  %div27 = fdiv float %mul26, 7.200000e+01, !dbg !6363
  %mul28 = fmul float 1.600000e+01, %div27, !dbg !6363
  %add29 = fadd float %call24, %mul28, !dbg !6364
  %35 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6365
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %35, i32 0, i32 1, !dbg !6366
  %36 = load i32, i32* %xmax, align 4, !dbg !6367
  %conv30 = sitofp i32 %36 to float, !dbg !6367
  %sub = fsub float %conv30, %add29, !dbg !6367
  %conv31 = fptosi float %sub to i32, !dbg !6367
  store i32 %conv31, i32* %xmax, align 4, !dbg !6367
  %37 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6368
  %kerning32 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %37, i32 0, i32 2, !dbg !6370
  %38 = load i16, i16* %kerning32, align 4, !dbg !6370
  %conv33 = sext i16 %38 to i32, !dbg !6368
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !6371
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !6372

if.then36:                                        ; preds = %if.end21
  %39 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6373
  %uifont_id37 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %39, i32 0, i32 0, !dbg !6375
  %40 = load i16, i16* %uifont_id37, align 4, !dbg !6375
  %conv38 = sext i16 %40 to i32, !dbg !6373
  call void @BLF_disable(i32 %conv38, i32 8), !dbg !6376
  br label %if.end39, !dbg !6377

if.end39:                                         ; preds = %if.then36, %if.end21
  br label %if.end40, !dbg !6378

if.end40:                                         ; preds = %if.end39, %if.then13
  br label %if.end41, !dbg !6379

if.end41:                                         ; preds = %if.end40, %if.end
  call void @llvm.dbg.declare(metadata [400 x i8]* %drawstr, metadata !6380, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.declare(metadata float* %okwidth, metadata !6383, metadata !DIExpression()), !dbg !6384
  %41 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6385
  %call42 = call i32 @BLI_rcti_size_x(%struct.rcti* %41), !dbg !6386
  %conv43 = sitofp i32 %call42 to float, !dbg !6387
  store float %conv43, float* %okwidth, align 4, !dbg !6384
  call void @llvm.dbg.declare(metadata i64* %max_len, metadata !6388, metadata !DIExpression()), !dbg !6390
  store i64 400, i64* %max_len, align 8, !dbg !6390
  call void @llvm.dbg.declare(metadata float* %minwidth, metadata !6391, metadata !DIExpression()), !dbg !6392
  %42 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6393
  %43 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6393
  %conv44 = sitofp i32 %43 to float, !dbg !6393
  %mul45 = fmul float %42, %conv44, !dbg !6393
  %div46 = fdiv float %mul45, 7.200000e+01, !dbg !6393
  %mul47 = fmul float 1.600000e+01, %div46, !dbg !6393
  store float %mul47, float* %minwidth, align 4, !dbg !6392
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6394
  %44 = load i8*, i8** %name.addr, align 8, !dbg !6395
  %call48 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %44, i64 400), !dbg !6396
  %45 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6397
  %arraydecay49 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6398
  %46 = load float, float* %okwidth, align 4, !dbg !6399
  %47 = load float, float* %minwidth, align 4, !dbg !6400
  %call50 = call float @ui_text_clip_middle_ex(%struct.uiFontStyle* %45, i8* %arraydecay49, float %46, float %47, i64 400, i8* null), !dbg !6401
  %48 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6402
  %wcol51 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %48, i32 0, i32 2, !dbg !6403
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol51, i32 0, i32 4, !dbg !6404
  %arraydecay52 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !6402
  call void @glColor4ubv(i8* %arraydecay52), !dbg !6405
  %49 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6406
  %50 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6407
  %arraydecay53 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6408
  call void @uiStyleFontDraw(%struct.uiFontStyle* %49, %struct.rcti* %50, i8* %arraydecay53), !dbg !6409
  %51 = load i8, i8* %use_sep.addr, align 1, !dbg !6410
  %tobool54 = icmp ne i8 %51, 0, !dbg !6410
  br i1 %tobool54, label %if.then55, label %if.end64, !dbg !6412

if.then55:                                        ; preds = %if.end41
  %52 = load i8*, i8** %cpoin, align 8, !dbg !6413
  %tobool56 = icmp ne i8* %52, null, !dbg !6413
  br i1 %tobool56, label %if.then57, label %if.end63, !dbg !6416

if.then57:                                        ; preds = %if.then55
  %53 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6417
  %align58 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %53, i32 0, i32 9, !dbg !6419
  store i16 2, i16* %align58, align 2, !dbg !6420
  %xmax59 = getelementptr inbounds %struct.rcti, %struct.rcti* %_rect, i32 0, i32 1, !dbg !6421
  %54 = load i32, i32* %xmax59, align 4, !dbg !6421
  %sub60 = sub nsw i32 %54, 5, !dbg !6422
  %55 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6423
  %xmax61 = getelementptr inbounds %struct.rcti, %struct.rcti* %55, i32 0, i32 1, !dbg !6424
  store i32 %sub60, i32* %xmax61, align 4, !dbg !6425
  %56 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6426
  %57 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6427
  %58 = load i8*, i8** %cpoin, align 8, !dbg !6428
  %add.ptr62 = getelementptr inbounds i8, i8* %58, i64 1, !dbg !6429
  call void @uiStyleFontDraw(%struct.uiFontStyle* %56, %struct.rcti* %57, i8* %add.ptr62), !dbg !6430
  %59 = load i8*, i8** %cpoin, align 8, !dbg !6431
  store i8 124, i8* %59, align 1, !dbg !6432
  br label %if.end63, !dbg !6433

if.end63:                                         ; preds = %if.then57, %if.then55
  br label %if.end64, !dbg !6434

if.end64:                                         ; preds = %if.end63, %if.end41
  %60 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6435
  %61 = bitcast %struct.rcti* %60 to i8*, !dbg !6436
  %62 = bitcast %struct.rcti* %_rect to i8*, !dbg !6436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 16, i1 false), !dbg !6436
  %63 = load i32, i32* %iconid.addr, align 4, !dbg !6437
  %tobool65 = icmp ne i32 %63, 0, !dbg !6437
  br i1 %tobool65, label %if.then66, label %if.end86, !dbg !6439

if.then66:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata float* %height, metadata !6440, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata float* %aspect, metadata !6443, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.declare(metadata i32* %xs, metadata !6445, metadata !DIExpression()), !dbg !6446
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6447
  %xmin67 = getelementptr inbounds %struct.rcti, %struct.rcti* %64, i32 0, i32 0, !dbg !6448
  %65 = load i32, i32* %xmin67, align 4, !dbg !6448
  %conv68 = sitofp i32 %65 to float, !dbg !6447
  %66 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6449
  %conv69 = sext i16 %66 to i32, !dbg !6449
  %conv70 = sitofp i32 %conv69 to float, !dbg !6449
  %mul71 = fmul float 0x3FC99999A0000000, %conv70, !dbg !6450
  %add72 = fadd float %conv68, %mul71, !dbg !6451
  %conv73 = fptosi float %add72 to i32, !dbg !6447
  store i32 %conv73, i32* %xs, align 4, !dbg !6446
  call void @llvm.dbg.declare(metadata i32* %ys, metadata !6452, metadata !DIExpression()), !dbg !6453
  %67 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6454
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %67, i32 0, i32 2, !dbg !6455
  %68 = load i32, i32* %ymin, align 4, !dbg !6455
  %conv74 = sitofp i32 %68 to float, !dbg !6454
  %69 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6456
  %call75 = call i32 @BLI_rcti_size_y(%struct.rcti* %69), !dbg !6457
  %conv76 = sitofp i32 %call75 to float, !dbg !6457
  %mul77 = fmul float 0x3FB99999A0000000, %conv76, !dbg !6458
  %add78 = fadd float %conv74, %mul77, !dbg !6459
  %conv79 = fptosi float %add78 to i32, !dbg !6454
  store i32 %conv79, i32* %ys, align 4, !dbg !6453
  %70 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6460
  %call80 = call i32 @BLI_rcti_size_y(%struct.rcti* %70), !dbg !6460
  %conv81 = sitofp i32 %call80 to float, !dbg !6460
  %mul82 = fmul float 0x3FE99999A0000000, %conv81, !dbg !6460
  store float %mul82, float* %height, align 4, !dbg !6461
  %71 = load float, float* %height, align 4, !dbg !6462
  %div83 = fdiv float 1.600000e+01, %71, !dbg !6463
  store float %div83, float* %aspect, align 4, !dbg !6464
  call void @glEnable(i32 3042), !dbg !6465
  %72 = load i32, i32* %xs, align 4, !dbg !6466
  %conv84 = sitofp i32 %72 to float, !dbg !6466
  %73 = load i32, i32* %ys, align 4, !dbg !6467
  %conv85 = sitofp i32 %73 to float, !dbg !6467
  %74 = load i32, i32* %iconid.addr, align 4, !dbg !6468
  %75 = load float, float* %aspect, align 4, !dbg !6469
  call void @UI_icon_draw_aspect(float %conv84, float %conv85, i32 %74, float %75, float 1.000000e+00), !dbg !6470
  call void @glDisable(i32 3042), !dbg !6471
  br label %if.end86, !dbg !6472

if.end86:                                         ; preds = %if.then66, %if.end64
  ret void, !dbg !6473
}

declare dso_local void @uiStyleFontSet(%struct.uiFontStyle*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local void @BLF_enable(i32, i32) #2

declare dso_local float @BLF_width(i32, i8*, i64) #2

declare dso_local void @BLF_disable(i32, i32) #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal float @ui_text_clip_middle_ex(%struct.uiFontStyle* %fstyle, i8* %str, float %okwidth, float %minwidth, i64 %max_len, i8* %rpart_sep) #0 !dbg !6474 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %str.addr = alloca i8*, align 8
  %okwidth.addr = alloca float, align 4
  %minwidth.addr = alloca float, align 4
  %max_len.addr = alloca i64, align 8
  %rpart_sep.addr = alloca i8*, align 8
  %strwidth = alloca float, align 4
  %sep = alloca [4 x i8], align 1
  %sep_len = alloca i32, align 4
  %sep_strwidth = alloca float, align 4
  %parts_strwidth = alloca float, align 4
  %l_end = alloca i64, align 8
  %rpart = alloca i8*, align 8
  %rpart_buf = alloca [400 x i8], align 16
  %rpart_width = alloca float, align 4
  %rpart_len = alloca i64, align 8
  %final_lpart_len = alloca i64, align 8
  %r_offset = alloca i64, align 8
  %r_len = alloca i64, align 8
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !6477, metadata !DIExpression()), !dbg !6478
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !6479, metadata !DIExpression()), !dbg !6480
  store float %okwidth, float* %okwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %okwidth.addr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store float %minwidth, float* %minwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %minwidth.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  store i64 %max_len, i64* %max_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_len.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i8* %rpart_sep, i8** %rpart_sep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rpart_sep.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata float* %strwidth, metadata !6489, metadata !DIExpression()), !dbg !6490
  %0 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6491
  call void @uiStyleFontSet(%struct.uiFontStyle* %0), !dbg !6492
  %1 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6493
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %1, i32 0, i32 2, !dbg !6495
  %2 = load i16, i16* %kerning, align 4, !dbg !6495
  %conv = sext i16 %2 to i32, !dbg !6493
  %cmp = icmp eq i32 %conv, 1, !dbg !6496
  br i1 %cmp, label %if.then, label %if.end, !dbg !6497

if.then:                                          ; preds = %entry
  %3 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6498
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %3, i32 0, i32 0, !dbg !6500
  %4 = load i16, i16* %uifont_id, align 4, !dbg !6500
  %conv2 = sext i16 %4 to i32, !dbg !6498
  call void @BLF_enable(i32 %conv2, i32 8), !dbg !6501
  br label %if.end, !dbg !6502

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6503
  %uifont_id3 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %5, i32 0, i32 0, !dbg !6504
  %6 = load i16, i16* %uifont_id3, align 4, !dbg !6504
  %conv4 = sext i16 %6 to i32, !dbg !6503
  %7 = load i8*, i8** %str.addr, align 8, !dbg !6505
  %8 = load i64, i64* %max_len.addr, align 8, !dbg !6506
  %call = call float @BLF_width(i32 %conv4, i8* %7, i64 %8), !dbg !6507
  store float %call, float* %strwidth, align 4, !dbg !6508
  %9 = load float, float* %okwidth.addr, align 4, !dbg !6509
  %cmp5 = fcmp ogt float %9, 0.000000e+00, !dbg !6511
  br i1 %cmp5, label %land.lhs.true, label %if.end78, !dbg !6512

land.lhs.true:                                    ; preds = %if.end
  %10 = load float, float* %strwidth, align 4, !dbg !6513
  %11 = load float, float* %okwidth.addr, align 4, !dbg !6514
  %cmp7 = fcmp ogt float %10, %11, !dbg !6515
  br i1 %cmp7, label %if.then9, label %if.end78, !dbg !6516

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x i8]* %sep, metadata !6517, metadata !DIExpression()), !dbg !6520
  %12 = bitcast [4 x i8]* %sep to i8*, !dbg !6520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.ui_text_clip_middle_ex.sep, i32 0, i32 0), i64 4, i1 false), !dbg !6520
  call void @llvm.dbg.declare(metadata i32* %sep_len, metadata !6521, metadata !DIExpression()), !dbg !6522
  store i32 3, i32* %sep_len, align 4, !dbg !6522
  call void @llvm.dbg.declare(metadata float* %sep_strwidth, metadata !6523, metadata !DIExpression()), !dbg !6524
  %13 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6525
  %uifont_id10 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %13, i32 0, i32 0, !dbg !6526
  %14 = load i16, i16* %uifont_id10, align 4, !dbg !6526
  %conv11 = sext i16 %14 to i32, !dbg !6525
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %sep, i64 0, i64 0, !dbg !6527
  %call12 = call float @BLF_width(i32 %conv11, i8* %arraydecay, i64 4), !dbg !6528
  store float %call12, float* %sep_strwidth, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata float* %parts_strwidth, metadata !6529, metadata !DIExpression()), !dbg !6530
  call void @llvm.dbg.declare(metadata i64* %l_end, metadata !6531, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.declare(metadata i8** %rpart, metadata !6533, metadata !DIExpression()), !dbg !6534
  store i8* null, i8** %rpart, align 8, !dbg !6534
  call void @llvm.dbg.declare(metadata [400 x i8]* %rpart_buf, metadata !6535, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.declare(metadata float* %rpart_width, metadata !6537, metadata !DIExpression()), !dbg !6538
  store float 0.000000e+00, float* %rpart_width, align 4, !dbg !6538
  call void @llvm.dbg.declare(metadata i64* %rpart_len, metadata !6539, metadata !DIExpression()), !dbg !6540
  store i64 0, i64* %rpart_len, align 8, !dbg !6540
  call void @llvm.dbg.declare(metadata i64* %final_lpart_len, metadata !6541, metadata !DIExpression()), !dbg !6542
  %15 = load i8*, i8** %rpart_sep.addr, align 8, !dbg !6543
  %tobool = icmp ne i8* %15, null, !dbg !6543
  br i1 %tobool, label %if.then13, label %if.end28, !dbg !6545

if.then13:                                        ; preds = %if.then9
  %16 = load i8*, i8** %str.addr, align 8, !dbg !6546
  %17 = load i8*, i8** %rpart_sep.addr, align 8, !dbg !6548
  %call14 = call i8* @strstr(i8* %16, i8* %17) #7, !dbg !6549
  store i8* %call14, i8** %rpart, align 8, !dbg !6550
  %18 = load i8*, i8** %rpart, align 8, !dbg !6551
  %tobool15 = icmp ne i8* %18, null, !dbg !6551
  br i1 %tobool15, label %if.then16, label %if.end27, !dbg !6553

if.then16:                                        ; preds = %if.then13
  %19 = load i8*, i8** %rpart, align 8, !dbg !6554
  %call17 = call i64 @strlen(i8* %19) #7, !dbg !6556
  store i64 %call17, i64* %rpart_len, align 8, !dbg !6557
  %20 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6558
  %uifont_id18 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %20, i32 0, i32 0, !dbg !6559
  %21 = load i16, i16* %uifont_id18, align 4, !dbg !6559
  %conv19 = sext i16 %21 to i32, !dbg !6558
  %22 = load i8*, i8** %rpart, align 8, !dbg !6560
  %23 = load i64, i64* %rpart_len, align 8, !dbg !6561
  %call20 = call float @BLF_width(i32 %conv19, i8* %22, i64 %23), !dbg !6562
  store float %call20, float* %rpart_width, align 4, !dbg !6563
  %24 = load float, float* %rpart_width, align 4, !dbg !6564
  %25 = load float, float* %okwidth.addr, align 4, !dbg !6565
  %sub = fsub float %25, %24, !dbg !6565
  store float %sub, float* %okwidth.addr, align 4, !dbg !6565
  %26 = load float, float* %rpart_width, align 4, !dbg !6566
  %27 = load float, float* %strwidth, align 4, !dbg !6567
  %sub21 = fsub float %27, %26, !dbg !6567
  store float %sub21, float* %strwidth, align 4, !dbg !6567
  %28 = load float, float* %okwidth.addr, align 4, !dbg !6568
  %cmp22 = fcmp olt float %28, 0.000000e+00, !dbg !6570
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !6571

if.then24:                                        ; preds = %if.then16
  %29 = load i8*, i8** %str.addr, align 8, !dbg !6572
  %30 = load i8*, i8** %rpart, align 8, !dbg !6574
  %31 = load i64, i64* %rpart_len, align 8, !dbg !6575
  %add = add i64 %31, 1, !dbg !6576
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add, i1 false), !dbg !6577
  store i8* null, i8** %rpart, align 8, !dbg !6578
  %32 = load float, float* %rpart_width, align 4, !dbg !6579
  %33 = load float, float* %okwidth.addr, align 4, !dbg !6580
  %add25 = fadd float %33, %32, !dbg !6580
  store float %add25, float* %okwidth.addr, align 4, !dbg !6580
  %34 = load float, float* %rpart_width, align 4, !dbg !6581
  store float %34, float* %strwidth, align 4, !dbg !6582
  br label %if.end26, !dbg !6583

if.end26:                                         ; preds = %if.then24, %if.then16
  br label %if.end27, !dbg !6584

if.end27:                                         ; preds = %if.end26, %if.then13
  br label %if.end28, !dbg !6585

if.end28:                                         ; preds = %if.end27, %if.then9
  %35 = load float, float* %okwidth.addr, align 4, !dbg !6586
  %36 = load float, float* %sep_strwidth, align 4, !dbg !6587
  %sub29 = fsub float %35, %36, !dbg !6588
  %div = fdiv float %sub29, 2.000000e+00, !dbg !6589
  store float %div, float* %parts_strwidth, align 4, !dbg !6590
  %37 = load i8*, i8** %rpart, align 8, !dbg !6591
  %tobool30 = icmp ne i8* %37, null, !dbg !6591
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !6593

if.then31:                                        ; preds = %if.end28
  %arraydecay32 = getelementptr inbounds [400 x i8], [400 x i8]* %rpart_buf, i64 0, i64 0, !dbg !6594
  %38 = load i8*, i8** %rpart, align 8, !dbg !6596
  %call33 = call i8* @strcpy(i8* %arraydecay32, i8* %38) #6, !dbg !6597
  %39 = load i8*, i8** %rpart, align 8, !dbg !6598
  store i8 0, i8* %39, align 1, !dbg !6599
  %arraydecay34 = getelementptr inbounds [400 x i8], [400 x i8]* %rpart_buf, i64 0, i64 0, !dbg !6600
  store i8* %arraydecay34, i8** %rpart, align 8, !dbg !6601
  br label %if.end35, !dbg !6602

if.end35:                                         ; preds = %if.then31, %if.end28
  %40 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6603
  %uifont_id36 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %40, i32 0, i32 0, !dbg !6604
  %41 = load i16, i16* %uifont_id36, align 4, !dbg !6604
  %conv37 = sext i16 %41 to i32, !dbg !6603
  %42 = load i8*, i8** %str.addr, align 8, !dbg !6605
  %43 = load i64, i64* %max_len.addr, align 8, !dbg !6606
  %44 = load float, float* %parts_strwidth, align 4, !dbg !6607
  %call38 = call i64 @BLF_width_to_strlen(i32 %conv37, i8* %42, i64 %43, float %44, float* %rpart_width), !dbg !6608
  store i64 %call38, i64* %l_end, align 8, !dbg !6609
  %45 = load i64, i64* %l_end, align 8, !dbg !6610
  %cmp39 = icmp ult i64 %45, 10, !dbg !6612
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !6613

lor.lhs.false:                                    ; preds = %if.end35
  %46 = load float, float* %parts_strwidth, align 4, !dbg !6614
  %47 = load float, float* %strwidth, align 4, !dbg !6615
  %48 = load float, float* %okwidth.addr, align 4, !dbg !6616
  %sub41 = fsub float %47, %48, !dbg !6617
  %call42 = call float @min_ff(float %46, float %sub41), !dbg !6618
  %49 = load float, float* %minwidth.addr, align 4, !dbg !6619
  %cmp43 = fcmp olt float %call42, %49, !dbg !6620
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !6621

if.then45:                                        ; preds = %lor.lhs.false, %if.end35
  %50 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6622
  %51 = load i8*, i8** %str.addr, align 8, !dbg !6624
  %52 = load i64, i64* %max_len.addr, align 8, !dbg !6625
  %53 = load float, float* %okwidth.addr, align 4, !dbg !6626
  %arraydecay46 = getelementptr inbounds [4 x i8], [4 x i8]* %sep, i64 0, i64 0, !dbg !6627
  %54 = load float, float* %sep_strwidth, align 4, !dbg !6628
  call void @ui_text_clip_right_ex(%struct.uiFontStyle* %50, i8* %51, i64 %52, float %53, i8* %arraydecay46, i32 3, float %54, i64* %final_lpart_len), !dbg !6629
  br label %if.end69, !dbg !6630

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %r_offset, metadata !6631, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.declare(metadata i64* %r_len, metadata !6634, metadata !DIExpression()), !dbg !6635
  %55 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6636
  %uifont_id47 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %55, i32 0, i32 0, !dbg !6637
  %56 = load i16, i16* %uifont_id47, align 4, !dbg !6637
  %conv48 = sext i16 %56 to i32, !dbg !6636
  %57 = load i8*, i8** %str.addr, align 8, !dbg !6638
  %58 = load i64, i64* %max_len.addr, align 8, !dbg !6639
  %59 = load float, float* %parts_strwidth, align 4, !dbg !6640
  %call49 = call i64 @BLF_width_to_rstrlen(i32 %conv48, i8* %57, i64 %58, float %59, float* %rpart_width), !dbg !6641
  store i64 %call49, i64* %r_offset, align 8, !dbg !6642
  %60 = load i8*, i8** %str.addr, align 8, !dbg !6643
  %61 = load i64, i64* %r_offset, align 8, !dbg !6644
  %add.ptr = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !6645
  %call50 = call i64 @strlen(i8* %add.ptr) #7, !dbg !6646
  %add51 = add i64 %call50, 1, !dbg !6647
  store i64 %add51, i64* %r_len, align 8, !dbg !6648
  %62 = load i64, i64* %l_end, align 8, !dbg !6649
  %add52 = add i64 %62, 3, !dbg !6651
  %63 = load i64, i64* %r_len, align 8, !dbg !6652
  %add53 = add i64 %add52, %63, !dbg !6653
  %64 = load i64, i64* %rpart_len, align 8, !dbg !6654
  %add54 = add i64 %add53, %64, !dbg !6655
  %65 = load i64, i64* %max_len.addr, align 8, !dbg !6656
  %cmp55 = icmp ugt i64 %add54, %65, !dbg !6657
  br i1 %cmp55, label %if.then57, label %if.else59, !dbg !6658

if.then57:                                        ; preds = %if.else
  %66 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6659
  %67 = load i8*, i8** %str.addr, align 8, !dbg !6661
  %68 = load i64, i64* %max_len.addr, align 8, !dbg !6662
  %69 = load float, float* %okwidth.addr, align 4, !dbg !6663
  %arraydecay58 = getelementptr inbounds [4 x i8], [4 x i8]* %sep, i64 0, i64 0, !dbg !6664
  %70 = load float, float* %sep_strwidth, align 4, !dbg !6665
  call void @ui_text_clip_right_ex(%struct.uiFontStyle* %66, i8* %67, i64 %68, float %69, i8* %arraydecay58, i32 3, float %70, i64* %final_lpart_len), !dbg !6666
  br label %if.end68, !dbg !6667

if.else59:                                        ; preds = %if.else
  %71 = load i8*, i8** %str.addr, align 8, !dbg !6668
  %72 = load i64, i64* %l_end, align 8, !dbg !6670
  %add.ptr60 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !6671
  %add.ptr61 = getelementptr inbounds i8, i8* %add.ptr60, i64 3, !dbg !6672
  %73 = load i8*, i8** %str.addr, align 8, !dbg !6673
  %74 = load i64, i64* %r_offset, align 8, !dbg !6674
  %add.ptr62 = getelementptr inbounds i8, i8* %73, i64 %74, !dbg !6675
  %75 = load i64, i64* %r_len, align 8, !dbg !6676
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr61, i8* align 1 %add.ptr62, i64 %75, i1 false), !dbg !6677
  %76 = load i8*, i8** %str.addr, align 8, !dbg !6678
  %77 = load i64, i64* %l_end, align 8, !dbg !6679
  %add.ptr63 = getelementptr inbounds i8, i8* %76, i64 %77, !dbg !6680
  %arraydecay64 = getelementptr inbounds [4 x i8], [4 x i8]* %sep, i64 0, i64 0, !dbg !6681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr63, i8* align 1 %arraydecay64, i64 3, i1 false), !dbg !6681
  %78 = load i64, i64* %l_end, align 8, !dbg !6682
  %add65 = add i64 %78, 3, !dbg !6683
  %79 = load i64, i64* %r_len, align 8, !dbg !6684
  %add66 = add i64 %add65, %79, !dbg !6685
  %sub67 = sub i64 %add66, 1, !dbg !6686
  store i64 %sub67, i64* %final_lpart_len, align 8, !dbg !6687
  br label %if.end68

if.end68:                                         ; preds = %if.else59, %if.then57
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then45
  %80 = load i8*, i8** %rpart, align 8, !dbg !6688
  %tobool70 = icmp ne i8* %80, null, !dbg !6688
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !6690

if.then71:                                        ; preds = %if.end69
  %81 = load i8*, i8** %str.addr, align 8, !dbg !6691
  %82 = load i64, i64* %final_lpart_len, align 8, !dbg !6693
  %add.ptr72 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !6694
  %83 = load i8*, i8** %rpart, align 8, !dbg !6695
  %84 = load i64, i64* %rpart_len, align 8, !dbg !6696
  %add73 = add i64 %84, 1, !dbg !6697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr72, i8* align 1 %83, i64 %add73, i1 false), !dbg !6698
  br label %if.end74, !dbg !6699

if.end74:                                         ; preds = %if.then71, %if.end69
  %85 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6700
  %uifont_id75 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %85, i32 0, i32 0, !dbg !6701
  %86 = load i16, i16* %uifont_id75, align 4, !dbg !6701
  %conv76 = sext i16 %86 to i32, !dbg !6700
  %87 = load i8*, i8** %str.addr, align 8, !dbg !6702
  %88 = load i64, i64* %max_len.addr, align 8, !dbg !6703
  %call77 = call float @BLF_width(i32 %conv76, i8* %87, i64 %88), !dbg !6704
  store float %call77, float* %strwidth, align 4, !dbg !6705
  br label %if.end78, !dbg !6706

if.end78:                                         ; preds = %if.end74, %land.lhs.true, %if.end
  %89 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6707
  %kerning79 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %89, i32 0, i32 2, !dbg !6709
  %90 = load i16, i16* %kerning79, align 4, !dbg !6709
  %conv80 = sext i16 %90 to i32, !dbg !6707
  %cmp81 = icmp eq i32 %conv80, 1, !dbg !6710
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !6711

if.then83:                                        ; preds = %if.end78
  %91 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6712
  %uifont_id84 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %91, i32 0, i32 0, !dbg !6714
  %92 = load i16, i16* %uifont_id84, align 4, !dbg !6714
  %conv85 = sext i16 %92 to i32, !dbg !6712
  call void @BLF_disable(i32 %conv85, i32 8), !dbg !6715
  br label %if.end86, !dbg !6716

if.end86:                                         ; preds = %if.then83, %if.end78
  %93 = load float, float* %strwidth, align 4, !dbg !6717
  ret float %93, !dbg !6718
}

declare dso_local void @uiStyleFontDraw(%struct.uiFontStyle*, %struct.rcti*, i8*) #2

declare dso_local void @UI_icon_draw_aspect(float, float, i32, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_preview_item(%struct.uiFontStyle* %fstyle, %struct.rcti* %rect, i8* %name, i32 %iconid, i32 %state) #0 !dbg !6719 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %name.addr = alloca i8*, align 8
  %iconid.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %trect = alloca %struct.rcti, align 4
  %bg_rect = alloca %struct.rcti, align 4
  %font_dims = alloca [2 x float], align 4
  %wt = alloca %struct.uiWidgetType*, align 8
  %drawstr = alloca [400 x i8], align 16
  %okwidth = alloca float, align 4
  %max_len = alloca i64, align 8
  %minwidth = alloca float, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !6722, metadata !DIExpression()), !dbg !6723
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6724, metadata !DIExpression()), !dbg !6725
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6726, metadata !DIExpression()), !dbg !6727
  store i32 %iconid, i32* %iconid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iconid.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.declare(metadata %struct.rcti* %trect, metadata !6732, metadata !DIExpression()), !dbg !6733
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6734
  %1 = bitcast %struct.rcti* %trect to i8*, !dbg !6735
  %2 = bitcast %struct.rcti* %0 to i8*, !dbg !6735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !6735
  call void @llvm.dbg.declare(metadata %struct.rcti* %bg_rect, metadata !6736, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.declare(metadata [2 x float]* %font_dims, metadata !6738, metadata !DIExpression()), !dbg !6739
  %3 = bitcast [2 x float]* %font_dims to i8*, !dbg !6739
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 8, i1 false), !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt, metadata !6740, metadata !DIExpression()), !dbg !6741
  %call = call %struct.uiWidgetType* @widget_type(i32 18), !dbg !6742
  store %struct.uiWidgetType* %call, %struct.uiWidgetType** %wt, align 8, !dbg !6741
  %4 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6743
  %state1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %4, i32 0, i32 3, !dbg !6744
  %5 = load void (%struct.uiWidgetType*, i32)*, void (%struct.uiWidgetType*, i32)** %state1, align 8, !dbg !6744
  %6 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6745
  %7 = load i32, i32* %state.addr, align 4, !dbg !6746
  call void %5(%struct.uiWidgetType* %6, i32 %7), !dbg !6743
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6747
  %draw = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 4, !dbg !6748
  %9 = load void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)*, void (%struct.uiWidgetColors*, %struct.rcti*, i32, i32)** %draw, align 8, !dbg !6748
  %10 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6749
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %10, i32 0, i32 2, !dbg !6750
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6751
  call void %9(%struct.uiWidgetColors* %wcol, %struct.rcti* %11, i32 0, i32 0), !dbg !6747
  call void @glEnable(i32 3042), !dbg !6752
  %12 = load i32, i32* %iconid.addr, align 4, !dbg !6753
  %13 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6754
  call void @widget_draw_preview(i32 %12, float 1.000000e+00, %struct.rcti* %13), !dbg !6755
  %14 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6756
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %14, i32 0, i32 0, !dbg !6757
  %15 = load i16, i16* %uifont_id, align 4, !dbg !6757
  %conv = sext i16 %15 to i32, !dbg !6756
  %16 = load i8*, i8** %name.addr, align 8, !dbg !6758
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %font_dims, i64 0, i64 0, !dbg !6759
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %font_dims, i64 0, i64 1, !dbg !6760
  call void @BLF_width_and_height(i32 %conv, i8* %16, i64 1024, float* %arrayidx, float* %arrayidx2), !dbg !6761
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 0, !dbg !6762
  %17 = load i32, i32* %xmin, align 4, !dbg !6763
  %add = add nsw i32 %17, 0, !dbg !6763
  store i32 %add, i32* %xmin, align 4, !dbg !6763
  %xmin3 = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 0, !dbg !6764
  %18 = load i32, i32* %xmin3, align 4, !dbg !6764
  %conv4 = sitofp i32 %18 to float, !dbg !6765
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %font_dims, i64 0, i64 0, !dbg !6766
  %19 = load float, float* %arrayidx5, align 4, !dbg !6766
  %add6 = fadd float %conv4, %19, !dbg !6767
  %add7 = fadd float %add6, 1.000000e+01, !dbg !6768
  %conv8 = fptosi float %add7 to i32, !dbg !6765
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 1, !dbg !6769
  store i32 %conv8, i32* %xmax, align 4, !dbg !6770
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 2, !dbg !6771
  %20 = load i32, i32* %ymin, align 4, !dbg !6772
  %add9 = add nsw i32 %20, 10, !dbg !6772
  store i32 %add9, i32* %ymin, align 4, !dbg !6772
  %ymin10 = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 2, !dbg !6773
  %21 = load i32, i32* %ymin10, align 4, !dbg !6773
  %conv11 = sitofp i32 %21 to float, !dbg !6774
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %font_dims, i64 0, i64 1, !dbg !6775
  %22 = load float, float* %arrayidx12, align 4, !dbg !6775
  %add13 = fadd float %conv11, %22, !dbg !6776
  %conv14 = fptosi float %add13 to i32, !dbg !6774
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 3, !dbg !6777
  store i32 %conv14, i32* %ymax, align 4, !dbg !6778
  %xmax15 = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 1, !dbg !6779
  %23 = load i32, i32* %xmax15, align 4, !dbg !6779
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6781
  %xmax16 = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 1, !dbg !6782
  %25 = load i32, i32* %xmax16, align 4, !dbg !6782
  %sub = sub nsw i32 %25, 4, !dbg !6783
  %cmp = icmp sgt i32 %23, %sub, !dbg !6784
  br i1 %cmp, label %if.then, label %if.end, !dbg !6785

if.then:                                          ; preds = %entry
  %26 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6786
  %xmax18 = getelementptr inbounds %struct.rcti, %struct.rcti* %26, i32 0, i32 1, !dbg !6787
  %27 = load i32, i32* %xmax18, align 4, !dbg !6787
  %sub19 = sub nsw i32 %27, 4, !dbg !6788
  %xmax20 = getelementptr inbounds %struct.rcti, %struct.rcti* %trect, i32 0, i32 1, !dbg !6789
  store i32 %sub19, i32* %xmax20, align 4, !dbg !6790
  br label %if.end, !dbg !6791

if.end:                                           ; preds = %if.then, %entry
  %28 = bitcast %struct.rcti* %bg_rect to i8*, !dbg !6792
  %29 = bitcast %struct.rcti* %trect to i8*, !dbg !6792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 16, i1 false), !dbg !6792
  %30 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6793
  %xmin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 0, !dbg !6794
  %31 = load i32, i32* %xmin21, align 4, !dbg !6794
  %add22 = add nsw i32 %31, 4, !dbg !6795
  %xmin23 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 0, !dbg !6796
  store i32 %add22, i32* %xmin23, align 4, !dbg !6797
  %32 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6798
  %ymin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %32, i32 0, i32 2, !dbg !6799
  %33 = load i32, i32* %ymin24, align 4, !dbg !6799
  %add25 = add nsw i32 %33, 4, !dbg !6800
  %ymin26 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 2, !dbg !6801
  store i32 %add25, i32* %ymin26, align 4, !dbg !6802
  %34 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6803
  %xmax27 = getelementptr inbounds %struct.rcti, %struct.rcti* %34, i32 0, i32 1, !dbg !6804
  %35 = load i32, i32* %xmax27, align 4, !dbg !6804
  %sub28 = sub nsw i32 %35, 4, !dbg !6805
  %xmax29 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 1, !dbg !6806
  store i32 %sub28, i32* %xmax29, align 4, !dbg !6807
  %ymax30 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 3, !dbg !6808
  %36 = load i32, i32* %ymax30, align 4, !dbg !6809
  %add31 = add nsw i32 %36, 2, !dbg !6809
  store i32 %add31, i32* %ymax30, align 4, !dbg !6809
  %xmax32 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 1, !dbg !6810
  %37 = load i32, i32* %xmax32, align 4, !dbg !6810
  %38 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6812
  %xmax33 = getelementptr inbounds %struct.rcti, %struct.rcti* %38, i32 0, i32 1, !dbg !6813
  %39 = load i32, i32* %xmax33, align 4, !dbg !6813
  %sub34 = sub nsw i32 %39, 4, !dbg !6814
  %cmp35 = icmp sgt i32 %37, %sub34, !dbg !6815
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !6816

if.then37:                                        ; preds = %if.end
  %40 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6817
  %xmax38 = getelementptr inbounds %struct.rcti, %struct.rcti* %40, i32 0, i32 1, !dbg !6818
  %41 = load i32, i32* %xmax38, align 4, !dbg !6818
  %sub39 = sub nsw i32 %41, 4, !dbg !6819
  %xmax40 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 1, !dbg !6820
  store i32 %sub39, i32* %xmax40, align 4, !dbg !6821
  br label %if.end41, !dbg !6822

if.end41:                                         ; preds = %if.then37, %if.end
  %42 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6823
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %42, i32 0, i32 0, !dbg !6824
  %43 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !6824
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %43, i32 0, i32 2, !dbg !6825
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !6823
  call void @glColor4ubv(i8* %arraydecay), !dbg !6826
  %xmin42 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 0, !dbg !6827
  %44 = load i32, i32* %xmin42, align 4, !dbg !6827
  %ymin43 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 2, !dbg !6828
  %45 = load i32, i32* %ymin43, align 4, !dbg !6828
  %xmax44 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 1, !dbg !6829
  %46 = load i32, i32* %xmax44, align 4, !dbg !6829
  %ymax45 = getelementptr inbounds %struct.rcti, %struct.rcti* %bg_rect, i32 0, i32 3, !dbg !6830
  %47 = load i32, i32* %ymax45, align 4, !dbg !6830
  call void @glRecti(i32 %44, i32 %45, i32 %46, i32 %47), !dbg !6831
  call void @glDisable(i32 3042), !dbg !6832
  call void @llvm.dbg.declare(metadata [400 x i8]* %drawstr, metadata !6833, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.declare(metadata float* %okwidth, metadata !6836, metadata !DIExpression()), !dbg !6837
  %call46 = call i32 @BLI_rcti_size_x(%struct.rcti* %trect), !dbg !6838
  %conv47 = sitofp i32 %call46 to float, !dbg !6839
  store float %conv47, float* %okwidth, align 4, !dbg !6837
  call void @llvm.dbg.declare(metadata i64* %max_len, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i64 400, i64* %max_len, align 8, !dbg !6841
  call void @llvm.dbg.declare(metadata float* %minwidth, metadata !6842, metadata !DIExpression()), !dbg !6843
  %48 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6844
  %49 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6844
  %conv48 = sitofp i32 %49 to float, !dbg !6844
  %mul = fmul float %48, %conv48, !dbg !6844
  %div = fdiv float %mul, 7.200000e+01, !dbg !6844
  %mul49 = fmul float 1.600000e+01, %div, !dbg !6844
  store float %mul49, float* %minwidth, align 4, !dbg !6843
  %arraydecay50 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6845
  %50 = load i8*, i8** %name.addr, align 8, !dbg !6846
  %call51 = call i8* @BLI_strncpy(i8* %arraydecay50, i8* %50, i64 400), !dbg !6847
  %51 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6848
  %arraydecay52 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6849
  %52 = load float, float* %okwidth, align 4, !dbg !6850
  %53 = load float, float* %minwidth, align 4, !dbg !6851
  %call53 = call float @ui_text_clip_middle_ex(%struct.uiFontStyle* %51, i8* %arraydecay52, float %52, float %53, i64 400, i8* null), !dbg !6852
  %54 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt, align 8, !dbg !6853
  %wcol54 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %54, i32 0, i32 2, !dbg !6854
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol54, i32 0, i32 4, !dbg !6855
  %arraydecay55 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !6853
  call void @glColor4ubv(i8* %arraydecay55), !dbg !6856
  %55 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !6857
  %arraydecay56 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !6858
  call void @uiStyleFontDraw(%struct.uiFontStyle* %55, %struct.rcti* %trect, i8* %arraydecay56), !dbg !6859
  ret void, !dbg !6860
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_preview(i32 %icon, float %UNUSED_alpha, %struct.rcti* %rect) #0 !dbg !6861 {
entry:
  %icon.addr = alloca i32, align 4
  %UNUSED_alpha.addr = alloca float, align 4
  %rect.addr = alloca %struct.rcti*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %size = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  store float %UNUSED_alpha, float* %UNUSED_alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_alpha.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6872, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6874, metadata !DIExpression()), !dbg !6875
  %0 = load i32, i32* %icon.addr, align 4, !dbg !6876
  %cmp = icmp eq i32 %0, 0, !dbg !6878
  br i1 %cmp, label %if.then, label %if.end, !dbg !6879

if.then:                                          ; preds = %entry
  br label %if.end12, !dbg !6880

if.end:                                           ; preds = %entry
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6881
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %1), !dbg !6882
  store i32 %call, i32* %w, align 4, !dbg !6883
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6884
  %call1 = call i32 @BLI_rcti_size_y(%struct.rcti* %2), !dbg !6885
  store i32 %call1, i32* %h, align 4, !dbg !6886
  %3 = load i32, i32* %w, align 4, !dbg !6887
  %4 = load i32, i32* %h, align 4, !dbg !6887
  %cmp2 = icmp slt i32 %3, %4, !dbg !6887
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6887

cond.true:                                        ; preds = %if.end
  %5 = load i32, i32* %w, align 4, !dbg !6887
  br label %cond.end, !dbg !6887

cond.false:                                       ; preds = %if.end
  %6 = load i32, i32* %h, align 4, !dbg !6887
  br label %cond.end, !dbg !6887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !6887
  store i32 %cond, i32* %size, align 4, !dbg !6888
  %7 = load i32, i32* %size, align 4, !dbg !6889
  %sub = sub nsw i32 %7, 8, !dbg !6889
  store i32 %sub, i32* %size, align 4, !dbg !6889
  %8 = load i32, i32* %size, align 4, !dbg !6890
  %cmp3 = icmp sgt i32 %8, 0, !dbg !6892
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !6893

if.then4:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6894, metadata !DIExpression()), !dbg !6896
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6897
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %9, i32 0, i32 0, !dbg !6898
  %10 = load i32, i32* %xmin, align 4, !dbg !6898
  %11 = load i32, i32* %w, align 4, !dbg !6899
  %div = sdiv i32 %11, 2, !dbg !6900
  %add = add nsw i32 %10, %div, !dbg !6901
  %12 = load i32, i32* %size, align 4, !dbg !6902
  %div5 = sdiv i32 %12, 2, !dbg !6903
  %sub6 = sub nsw i32 %add, %div5, !dbg !6904
  store i32 %sub6, i32* %x, align 4, !dbg !6896
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6905, metadata !DIExpression()), !dbg !6906
  %13 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6907
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %13, i32 0, i32 2, !dbg !6908
  %14 = load i32, i32* %ymin, align 4, !dbg !6908
  %15 = load i32, i32* %h, align 4, !dbg !6909
  %div7 = sdiv i32 %15, 2, !dbg !6910
  %add8 = add nsw i32 %14, %div7, !dbg !6911
  %16 = load i32, i32* %size, align 4, !dbg !6912
  %div9 = sdiv i32 %16, 2, !dbg !6913
  %sub10 = sub nsw i32 %add8, %div9, !dbg !6914
  store i32 %sub10, i32* %y, align 4, !dbg !6906
  %17 = load i32, i32* %x, align 4, !dbg !6915
  %conv = sitofp i32 %17 to float, !dbg !6915
  %18 = load i32, i32* %y, align 4, !dbg !6916
  %conv11 = sitofp i32 %18 to float, !dbg !6916
  %19 = load i32, i32* %icon.addr, align 4, !dbg !6917
  %20 = load i32, i32* %size, align 4, !dbg !6918
  call void @UI_icon_draw_preview_aspect_size(float %conv, float %conv11, i32 %19, float 1.000000e+00, i32 %20), !dbg !6919
  br label %if.end12, !dbg !6920

if.end12:                                         ; preds = %if.then, %if.then4, %cond.end
  ret void, !dbg !6921
}

declare dso_local void @BLF_width_and_height(i32, i8*, i64, float*, float*) #2

declare dso_local void @glRecti(i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @round_box__edges(%struct.uiWidgetBase* %wt, i32 %roundboxalign, %struct.rcti* %rect, float %rad, float %radi) #0 !dbg !6922 {
entry:
  %wt.addr = alloca %struct.uiWidgetBase*, align 8
  %roundboxalign.addr = alloca i32, align 4
  %rect.addr = alloca %struct.rcti*, align 8
  %rad.addr = alloca float, align 4
  %radi.addr = alloca float, align 4
  %vec = alloca [9 x [2 x float]], align 16
  %veci = alloca [9 x [2 x float]], align 16
  %minx = alloca float, align 4
  %miny = alloca float, align 4
  %maxx = alloca float, align 4
  %maxy = alloca float, align 4
  %minxi = alloca float, align 4
  %maxxi = alloca float, align 4
  %minyi = alloca float, align 4
  %maxyi = alloca float, align 4
  %facxi = alloca float, align 4
  %facyi = alloca float, align 4
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %minsize = alloca i32, align 4
  %hnum = alloca i32, align 4
  %vnum = alloca i32, align 4
  store %struct.uiWidgetBase* %wt, %struct.uiWidgetBase** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wt.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !6931, metadata !DIExpression()), !dbg !6932
  store float %radi, float* %radi.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radi.addr, metadata !6933, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.declare(metadata [9 x [2 x float]]* %vec, metadata !6935, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata [9 x [2 x float]]* %veci, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata float* %minx, metadata !6940, metadata !DIExpression()), !dbg !6941
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6942
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !6943
  %1 = load i32, i32* %xmin, align 4, !dbg !6943
  %conv = sitofp i32 %1 to float, !dbg !6942
  store float %conv, float* %minx, align 4, !dbg !6941
  call void @llvm.dbg.declare(metadata float* %miny, metadata !6944, metadata !DIExpression()), !dbg !6945
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6946
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !6947
  %3 = load i32, i32* %ymin, align 4, !dbg !6947
  %conv1 = sitofp i32 %3 to float, !dbg !6946
  store float %conv1, float* %miny, align 4, !dbg !6945
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !6948, metadata !DIExpression()), !dbg !6949
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6950
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %4, i32 0, i32 1, !dbg !6951
  %5 = load i32, i32* %xmax, align 4, !dbg !6951
  %conv2 = sitofp i32 %5 to float, !dbg !6950
  store float %conv2, float* %maxx, align 4, !dbg !6949
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !6952, metadata !DIExpression()), !dbg !6953
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6954
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %6, i32 0, i32 3, !dbg !6955
  %7 = load i32, i32* %ymax, align 4, !dbg !6955
  %conv3 = sitofp i32 %7 to float, !dbg !6954
  store float %conv3, float* %maxy, align 4, !dbg !6953
  call void @llvm.dbg.declare(metadata float* %minxi, metadata !6956, metadata !DIExpression()), !dbg !6957
  %8 = load float, float* %minx, align 4, !dbg !6958
  %9 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6959
  %add = fadd float %8, %9, !dbg !6960
  store float %add, float* %minxi, align 4, !dbg !6957
  call void @llvm.dbg.declare(metadata float* %maxxi, metadata !6961, metadata !DIExpression()), !dbg !6962
  %10 = load float, float* %maxx, align 4, !dbg !6963
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6964
  %sub = fsub float %10, %11, !dbg !6965
  store float %sub, float* %maxxi, align 4, !dbg !6962
  call void @llvm.dbg.declare(metadata float* %minyi, metadata !6966, metadata !DIExpression()), !dbg !6967
  %12 = load float, float* %miny, align 4, !dbg !6968
  %13 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6969
  %add4 = fadd float %12, %13, !dbg !6970
  store float %add4, float* %minyi, align 4, !dbg !6967
  call void @llvm.dbg.declare(metadata float* %maxyi, metadata !6971, metadata !DIExpression()), !dbg !6972
  %14 = load float, float* %maxy, align 4, !dbg !6973
  %15 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6974
  %sub5 = fsub float %14, %15, !dbg !6975
  store float %sub5, float* %maxyi, align 4, !dbg !6972
  call void @llvm.dbg.declare(metadata float* %facxi, metadata !6976, metadata !DIExpression()), !dbg !6977
  %16 = load float, float* %maxxi, align 4, !dbg !6978
  %17 = load float, float* %minxi, align 4, !dbg !6979
  %cmp = fcmp une float %16, %17, !dbg !6980
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6981

cond.true:                                        ; preds = %entry
  %18 = load float, float* %maxxi, align 4, !dbg !6982
  %19 = load float, float* %minxi, align 4, !dbg !6983
  %sub7 = fsub float %18, %19, !dbg !6984
  %div = fdiv float 1.000000e+00, %sub7, !dbg !6985
  br label %cond.end, !dbg !6981

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6981

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !6981
  store float %cond, float* %facxi, align 4, !dbg !6977
  call void @llvm.dbg.declare(metadata float* %facyi, metadata !6986, metadata !DIExpression()), !dbg !6987
  %20 = load float, float* %maxyi, align 4, !dbg !6988
  %21 = load float, float* %minyi, align 4, !dbg !6989
  %cmp8 = fcmp une float %20, %21, !dbg !6990
  br i1 %cmp8, label %cond.true10, label %cond.false13, !dbg !6991

cond.true10:                                      ; preds = %cond.end
  %22 = load float, float* %maxyi, align 4, !dbg !6992
  %23 = load float, float* %minyi, align 4, !dbg !6993
  %sub11 = fsub float %22, %23, !dbg !6994
  %div12 = fdiv float 1.000000e+00, %sub11, !dbg !6995
  br label %cond.end14, !dbg !6991

cond.false13:                                     ; preds = %cond.end
  br label %cond.end14, !dbg !6991

cond.end14:                                       ; preds = %cond.false13, %cond.true10
  %cond15 = phi float [ %div12, %cond.true10 ], [ 0.000000e+00, %cond.false13 ], !dbg !6991
  store float %cond15, float* %facyi, align 4, !dbg !6987
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6998, metadata !DIExpression()), !dbg !6999
  store i32 0, i32* %tot, align 4, !dbg !6999
  call void @llvm.dbg.declare(metadata i32* %minsize, metadata !7000, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.declare(metadata i32* %hnum, metadata !7002, metadata !DIExpression()), !dbg !7003
  %24 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7004
  %and = and i32 %24, 3, !dbg !7005
  %cmp16 = icmp eq i32 %and, 3, !dbg !7006
  br i1 %cmp16, label %lor.end, label %lor.rhs, !dbg !7007

lor.rhs:                                          ; preds = %cond.end14
  %25 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7008
  %and18 = and i32 %25, 12, !dbg !7009
  %cmp19 = icmp eq i32 %and18, 12, !dbg !7010
  br label %lor.end, !dbg !7007

lor.end:                                          ; preds = %lor.rhs, %cond.end14
  %26 = phi i1 [ true, %cond.end14 ], [ %cmp19, %lor.rhs ]
  %27 = zext i1 %26 to i64, !dbg !7011
  %cond21 = select i1 %26, i32 1, i32 2, !dbg !7011
  store i32 %cond21, i32* %hnum, align 4, !dbg !7003
  call void @llvm.dbg.declare(metadata i32* %vnum, metadata !7012, metadata !DIExpression()), !dbg !7013
  %28 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7014
  %and22 = and i32 %28, 9, !dbg !7015
  %cmp23 = icmp eq i32 %and22, 9, !dbg !7016
  br i1 %cmp23, label %lor.end29, label %lor.rhs25, !dbg !7017

lor.rhs25:                                        ; preds = %lor.end
  %29 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7018
  %and26 = and i32 %29, 6, !dbg !7019
  %cmp27 = icmp eq i32 %and26, 6, !dbg !7020
  br label %lor.end29, !dbg !7017

lor.end29:                                        ; preds = %lor.rhs25, %lor.end
  %30 = phi i1 [ true, %lor.end ], [ %cmp27, %lor.rhs25 ]
  %31 = zext i1 %30 to i64, !dbg !7021
  %cond30 = select i1 %30, i32 1, i32 2, !dbg !7021
  store i32 %cond30, i32* %vnum, align 4, !dbg !7013
  %32 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7022
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %32), !dbg !7023
  %33 = load i32, i32* %hnum, align 4, !dbg !7024
  %mul = mul nsw i32 %call, %33, !dbg !7025
  %34 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7026
  %call31 = call i32 @BLI_rcti_size_y(%struct.rcti* %34), !dbg !7027
  %35 = load i32, i32* %vnum, align 4, !dbg !7028
  %mul32 = mul nsw i32 %call31, %35, !dbg !7029
  %call33 = call i32 @min_ii(i32 %mul, i32 %mul32), !dbg !7030
  store i32 %call33, i32* %minsize, align 4, !dbg !7031
  %36 = load float, float* %rad.addr, align 4, !dbg !7032
  %mul34 = fmul float 2.000000e+00, %36, !dbg !7034
  %37 = load i32, i32* %minsize, align 4, !dbg !7035
  %conv35 = sitofp i32 %37 to float, !dbg !7035
  %cmp36 = fcmp ogt float %mul34, %conv35, !dbg !7036
  br i1 %cmp36, label %if.then, label %if.end, !dbg !7037

if.then:                                          ; preds = %lor.end29
  %38 = load i32, i32* %minsize, align 4, !dbg !7038
  %conv38 = sitofp i32 %38 to float, !dbg !7038
  %mul39 = fmul float 5.000000e-01, %conv38, !dbg !7039
  store float %mul39, float* %rad.addr, align 4, !dbg !7040
  br label %if.end, !dbg !7041

if.end:                                           ; preds = %if.then, %lor.end29
  %39 = load float, float* %radi.addr, align 4, !dbg !7042
  %add40 = fadd float %39, 1.000000e+00, !dbg !7044
  %mul41 = fmul float 2.000000e+00, %add40, !dbg !7045
  %40 = load i32, i32* %minsize, align 4, !dbg !7046
  %conv42 = sitofp i32 %40 to float, !dbg !7046
  %cmp43 = fcmp ogt float %mul41, %conv42, !dbg !7047
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !7048

if.then45:                                        ; preds = %if.end
  %41 = load i32, i32* %minsize, align 4, !dbg !7049
  %conv46 = sitofp i32 %41 to float, !dbg !7049
  %mul47 = fmul float 5.000000e-01, %conv46, !dbg !7050
  %42 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7051
  %sub48 = fsub float %mul47, %42, !dbg !7052
  store float %sub48, float* %radi.addr, align 4, !dbg !7053
  br label %if.end49, !dbg !7054

if.end49:                                         ; preds = %if.then45, %if.end
  store i32 0, i32* %a, align 4, !dbg !7055
  br label %for.cond, !dbg !7057

for.cond:                                         ; preds = %for.inc, %if.end49
  %43 = load i32, i32* %a, align 4, !dbg !7058
  %cmp50 = icmp slt i32 %43, 9, !dbg !7060
  br i1 %cmp50, label %for.body, label %for.end, !dbg !7061

for.body:                                         ; preds = %for.cond
  %44 = load float, float* %radi.addr, align 4, !dbg !7062
  %45 = load i32, i32* %a, align 4, !dbg !7064
  %idxprom = sext i32 %45 to i64, !dbg !7065
  %arrayidx = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom, !dbg !7065
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !7065
  %46 = load float, float* %arrayidx52, align 8, !dbg !7065
  %mul53 = fmul float %44, %46, !dbg !7066
  %47 = load i32, i32* %a, align 4, !dbg !7067
  %idxprom54 = sext i32 %47 to i64, !dbg !7068
  %arrayidx55 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom54, !dbg !7068
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx55, i64 0, i64 0, !dbg !7068
  store float %mul53, float* %arrayidx56, align 8, !dbg !7069
  %48 = load float, float* %radi.addr, align 4, !dbg !7070
  %49 = load i32, i32* %a, align 4, !dbg !7071
  %idxprom57 = sext i32 %49 to i64, !dbg !7072
  %arrayidx58 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom57, !dbg !7072
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 1, !dbg !7072
  %50 = load float, float* %arrayidx59, align 4, !dbg !7072
  %mul60 = fmul float %48, %50, !dbg !7073
  %51 = load i32, i32* %a, align 4, !dbg !7074
  %idxprom61 = sext i32 %51 to i64, !dbg !7075
  %arrayidx62 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom61, !dbg !7075
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx62, i64 0, i64 1, !dbg !7075
  store float %mul60, float* %arrayidx63, align 4, !dbg !7076
  %52 = load float, float* %rad.addr, align 4, !dbg !7077
  %53 = load i32, i32* %a, align 4, !dbg !7078
  %idxprom64 = sext i32 %53 to i64, !dbg !7079
  %arrayidx65 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom64, !dbg !7079
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx65, i64 0, i64 0, !dbg !7079
  %54 = load float, float* %arrayidx66, align 8, !dbg !7079
  %mul67 = fmul float %52, %54, !dbg !7080
  %55 = load i32, i32* %a, align 4, !dbg !7081
  %idxprom68 = sext i32 %55 to i64, !dbg !7082
  %arrayidx69 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom68, !dbg !7082
  %arrayidx70 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx69, i64 0, i64 0, !dbg !7082
  store float %mul67, float* %arrayidx70, align 8, !dbg !7083
  %56 = load float, float* %rad.addr, align 4, !dbg !7084
  %57 = load i32, i32* %a, align 4, !dbg !7085
  %idxprom71 = sext i32 %57 to i64, !dbg !7086
  %arrayidx72 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom71, !dbg !7086
  %arrayidx73 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx72, i64 0, i64 1, !dbg !7086
  %58 = load float, float* %arrayidx73, align 4, !dbg !7086
  %mul74 = fmul float %56, %58, !dbg !7087
  %59 = load i32, i32* %a, align 4, !dbg !7088
  %idxprom75 = sext i32 %59 to i64, !dbg !7089
  %arrayidx76 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom75, !dbg !7089
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx76, i64 0, i64 1, !dbg !7089
  store float %mul74, float* %arrayidx77, align 4, !dbg !7090
  br label %for.inc, !dbg !7091

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %a, align 4, !dbg !7092
  %inc = add nsw i32 %60, 1, !dbg !7092
  store i32 %inc, i32* %a, align 4, !dbg !7092
  br label %for.cond, !dbg !7093, !llvm.loop !7094

for.end:                                          ; preds = %for.cond
  %61 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7096
  %and78 = and i32 %61, 8, !dbg !7098
  %tobool = icmp ne i32 %and78, 0, !dbg !7098
  br i1 %tobool, label %if.then79, label %if.else, !dbg !7099

if.then79:                                        ; preds = %for.end
  store i32 0, i32* %a, align 4, !dbg !7100
  br label %for.cond80, !dbg !7103

for.cond80:                                       ; preds = %for.inc135, %if.then79
  %62 = load i32, i32* %a, align 4, !dbg !7104
  %cmp81 = icmp slt i32 %62, 9, !dbg !7106
  br i1 %cmp81, label %for.body83, label %for.end138, !dbg !7107

for.body83:                                       ; preds = %for.cond80
  %63 = load float, float* %minxi, align 4, !dbg !7108
  %64 = load i32, i32* %a, align 4, !dbg !7110
  %idxprom84 = sext i32 %64 to i64, !dbg !7111
  %arrayidx85 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom84, !dbg !7111
  %arrayidx86 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx85, i64 0, i64 1, !dbg !7111
  %65 = load float, float* %arrayidx86, align 4, !dbg !7111
  %add87 = fadd float %63, %65, !dbg !7112
  %66 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7113
  %inner_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %66, i32 0, i32 3, !dbg !7114
  %67 = load i32, i32* %tot, align 4, !dbg !7115
  %idxprom88 = sext i32 %67 to i64, !dbg !7113
  %arrayidx89 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v, i64 0, i64 %idxprom88, !dbg !7113
  %arrayidx90 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx89, i64 0, i64 0, !dbg !7113
  store float %add87, float* %arrayidx90, align 8, !dbg !7116
  %68 = load float, float* %minyi, align 4, !dbg !7117
  %69 = load float, float* %radi.addr, align 4, !dbg !7118
  %add91 = fadd float %68, %69, !dbg !7119
  %70 = load i32, i32* %a, align 4, !dbg !7120
  %idxprom92 = sext i32 %70 to i64, !dbg !7121
  %arrayidx93 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom92, !dbg !7121
  %arrayidx94 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx93, i64 0, i64 0, !dbg !7121
  %71 = load float, float* %arrayidx94, align 8, !dbg !7121
  %sub95 = fsub float %add91, %71, !dbg !7122
  %72 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7123
  %inner_v96 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %72, i32 0, i32 3, !dbg !7124
  %73 = load i32, i32* %tot, align 4, !dbg !7125
  %idxprom97 = sext i32 %73 to i64, !dbg !7123
  %arrayidx98 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v96, i64 0, i64 %idxprom97, !dbg !7123
  %arrayidx99 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx98, i64 0, i64 1, !dbg !7123
  store float %sub95, float* %arrayidx99, align 4, !dbg !7126
  %74 = load float, float* %minx, align 4, !dbg !7127
  %75 = load i32, i32* %a, align 4, !dbg !7128
  %idxprom100 = sext i32 %75 to i64, !dbg !7129
  %arrayidx101 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom100, !dbg !7129
  %arrayidx102 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx101, i64 0, i64 1, !dbg !7129
  %76 = load float, float* %arrayidx102, align 4, !dbg !7129
  %add103 = fadd float %74, %76, !dbg !7130
  %77 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7131
  %outer_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %77, i32 0, i32 2, !dbg !7132
  %78 = load i32, i32* %tot, align 4, !dbg !7133
  %idxprom104 = sext i32 %78 to i64, !dbg !7131
  %arrayidx105 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v, i64 0, i64 %idxprom104, !dbg !7131
  %arrayidx106 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx105, i64 0, i64 0, !dbg !7131
  store float %add103, float* %arrayidx106, align 8, !dbg !7134
  %79 = load float, float* %miny, align 4, !dbg !7135
  %80 = load float, float* %rad.addr, align 4, !dbg !7136
  %add107 = fadd float %79, %80, !dbg !7137
  %81 = load i32, i32* %a, align 4, !dbg !7138
  %idxprom108 = sext i32 %81 to i64, !dbg !7139
  %arrayidx109 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom108, !dbg !7139
  %arrayidx110 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx109, i64 0, i64 0, !dbg !7139
  %82 = load float, float* %arrayidx110, align 8, !dbg !7139
  %sub111 = fsub float %add107, %82, !dbg !7140
  %83 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7141
  %outer_v112 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %83, i32 0, i32 2, !dbg !7142
  %84 = load i32, i32* %tot, align 4, !dbg !7143
  %idxprom113 = sext i32 %84 to i64, !dbg !7141
  %arrayidx114 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v112, i64 0, i64 %idxprom113, !dbg !7141
  %arrayidx115 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx114, i64 0, i64 1, !dbg !7141
  store float %sub111, float* %arrayidx115, align 4, !dbg !7144
  %85 = load float, float* %facxi, align 4, !dbg !7145
  %86 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7146
  %inner_v116 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %86, i32 0, i32 3, !dbg !7147
  %87 = load i32, i32* %tot, align 4, !dbg !7148
  %idxprom117 = sext i32 %87 to i64, !dbg !7146
  %arrayidx118 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v116, i64 0, i64 %idxprom117, !dbg !7146
  %arrayidx119 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx118, i64 0, i64 0, !dbg !7146
  %88 = load float, float* %arrayidx119, align 8, !dbg !7146
  %89 = load float, float* %minxi, align 4, !dbg !7149
  %sub120 = fsub float %88, %89, !dbg !7150
  %mul121 = fmul float %85, %sub120, !dbg !7151
  %90 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7152
  %inner_uv = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %90, i32 0, i32 4, !dbg !7153
  %91 = load i32, i32* %tot, align 4, !dbg !7154
  %idxprom122 = sext i32 %91 to i64, !dbg !7152
  %arrayidx123 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv, i64 0, i64 %idxprom122, !dbg !7152
  %arrayidx124 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx123, i64 0, i64 0, !dbg !7152
  store float %mul121, float* %arrayidx124, align 8, !dbg !7155
  %92 = load float, float* %facyi, align 4, !dbg !7156
  %93 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7157
  %inner_v125 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %93, i32 0, i32 3, !dbg !7158
  %94 = load i32, i32* %tot, align 4, !dbg !7159
  %idxprom126 = sext i32 %94 to i64, !dbg !7157
  %arrayidx127 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v125, i64 0, i64 %idxprom126, !dbg !7157
  %arrayidx128 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx127, i64 0, i64 1, !dbg !7157
  %95 = load float, float* %arrayidx128, align 4, !dbg !7157
  %96 = load float, float* %minyi, align 4, !dbg !7160
  %sub129 = fsub float %95, %96, !dbg !7161
  %mul130 = fmul float %92, %sub129, !dbg !7162
  %97 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7163
  %inner_uv131 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %97, i32 0, i32 4, !dbg !7164
  %98 = load i32, i32* %tot, align 4, !dbg !7165
  %idxprom132 = sext i32 %98 to i64, !dbg !7163
  %arrayidx133 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv131, i64 0, i64 %idxprom132, !dbg !7163
  %arrayidx134 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx133, i64 0, i64 1, !dbg !7163
  store float %mul130, float* %arrayidx134, align 4, !dbg !7166
  br label %for.inc135, !dbg !7167

for.inc135:                                       ; preds = %for.body83
  %99 = load i32, i32* %a, align 4, !dbg !7168
  %inc136 = add nsw i32 %99, 1, !dbg !7168
  store i32 %inc136, i32* %a, align 4, !dbg !7168
  %100 = load i32, i32* %tot, align 4, !dbg !7169
  %inc137 = add nsw i32 %100, 1, !dbg !7169
  store i32 %inc137, i32* %tot, align 4, !dbg !7169
  br label %for.cond80, !dbg !7170, !llvm.loop !7171

for.end138:                                       ; preds = %for.cond80
  br label %if.end164, !dbg !7173

if.else:                                          ; preds = %for.end
  %101 = load float, float* %minxi, align 4, !dbg !7174
  %102 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7176
  %inner_v139 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %102, i32 0, i32 3, !dbg !7177
  %103 = load i32, i32* %tot, align 4, !dbg !7178
  %idxprom140 = sext i32 %103 to i64, !dbg !7176
  %arrayidx141 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v139, i64 0, i64 %idxprom140, !dbg !7176
  %arrayidx142 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx141, i64 0, i64 0, !dbg !7176
  store float %101, float* %arrayidx142, align 8, !dbg !7179
  %104 = load float, float* %minyi, align 4, !dbg !7180
  %105 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7181
  %inner_v143 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %105, i32 0, i32 3, !dbg !7182
  %106 = load i32, i32* %tot, align 4, !dbg !7183
  %idxprom144 = sext i32 %106 to i64, !dbg !7181
  %arrayidx145 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v143, i64 0, i64 %idxprom144, !dbg !7181
  %arrayidx146 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx145, i64 0, i64 1, !dbg !7181
  store float %104, float* %arrayidx146, align 4, !dbg !7184
  %107 = load float, float* %minx, align 4, !dbg !7185
  %108 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7186
  %outer_v147 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %108, i32 0, i32 2, !dbg !7187
  %109 = load i32, i32* %tot, align 4, !dbg !7188
  %idxprom148 = sext i32 %109 to i64, !dbg !7186
  %arrayidx149 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v147, i64 0, i64 %idxprom148, !dbg !7186
  %arrayidx150 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx149, i64 0, i64 0, !dbg !7186
  store float %107, float* %arrayidx150, align 8, !dbg !7189
  %110 = load float, float* %miny, align 4, !dbg !7190
  %111 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7191
  %outer_v151 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %111, i32 0, i32 2, !dbg !7192
  %112 = load i32, i32* %tot, align 4, !dbg !7193
  %idxprom152 = sext i32 %112 to i64, !dbg !7191
  %arrayidx153 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v151, i64 0, i64 %idxprom152, !dbg !7191
  %arrayidx154 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx153, i64 0, i64 1, !dbg !7191
  store float %110, float* %arrayidx154, align 4, !dbg !7194
  %113 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7195
  %inner_uv155 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %113, i32 0, i32 4, !dbg !7196
  %114 = load i32, i32* %tot, align 4, !dbg !7197
  %idxprom156 = sext i32 %114 to i64, !dbg !7195
  %arrayidx157 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv155, i64 0, i64 %idxprom156, !dbg !7195
  %arrayidx158 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx157, i64 0, i64 0, !dbg !7195
  store float 0.000000e+00, float* %arrayidx158, align 8, !dbg !7198
  %115 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7199
  %inner_uv159 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %115, i32 0, i32 4, !dbg !7200
  %116 = load i32, i32* %tot, align 4, !dbg !7201
  %idxprom160 = sext i32 %116 to i64, !dbg !7199
  %arrayidx161 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv159, i64 0, i64 %idxprom160, !dbg !7199
  %arrayidx162 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx161, i64 0, i64 1, !dbg !7199
  store float 0.000000e+00, float* %arrayidx162, align 4, !dbg !7202
  %117 = load i32, i32* %tot, align 4, !dbg !7203
  %inc163 = add nsw i32 %117, 1, !dbg !7203
  store i32 %inc163, i32* %tot, align 4, !dbg !7203
  br label %if.end164

if.end164:                                        ; preds = %if.else, %for.end138
  %118 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7204
  %and165 = and i32 %118, 4, !dbg !7206
  %tobool166 = icmp ne i32 %and165, 0, !dbg !7206
  br i1 %tobool166, label %if.then167, label %if.else230, !dbg !7207

if.then167:                                       ; preds = %if.end164
  store i32 0, i32* %a, align 4, !dbg !7208
  br label %for.cond168, !dbg !7211

for.cond168:                                      ; preds = %for.inc226, %if.then167
  %119 = load i32, i32* %a, align 4, !dbg !7212
  %cmp169 = icmp slt i32 %119, 9, !dbg !7214
  br i1 %cmp169, label %for.body171, label %for.end229, !dbg !7215

for.body171:                                      ; preds = %for.cond168
  %120 = load float, float* %maxxi, align 4, !dbg !7216
  %121 = load float, float* %radi.addr, align 4, !dbg !7218
  %sub172 = fsub float %120, %121, !dbg !7219
  %122 = load i32, i32* %a, align 4, !dbg !7220
  %idxprom173 = sext i32 %122 to i64, !dbg !7221
  %arrayidx174 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom173, !dbg !7221
  %arrayidx175 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx174, i64 0, i64 0, !dbg !7221
  %123 = load float, float* %arrayidx175, align 8, !dbg !7221
  %add176 = fadd float %sub172, %123, !dbg !7222
  %124 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7223
  %inner_v177 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %124, i32 0, i32 3, !dbg !7224
  %125 = load i32, i32* %tot, align 4, !dbg !7225
  %idxprom178 = sext i32 %125 to i64, !dbg !7223
  %arrayidx179 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v177, i64 0, i64 %idxprom178, !dbg !7223
  %arrayidx180 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx179, i64 0, i64 0, !dbg !7223
  store float %add176, float* %arrayidx180, align 8, !dbg !7226
  %126 = load float, float* %minyi, align 4, !dbg !7227
  %127 = load i32, i32* %a, align 4, !dbg !7228
  %idxprom181 = sext i32 %127 to i64, !dbg !7229
  %arrayidx182 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom181, !dbg !7229
  %arrayidx183 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx182, i64 0, i64 1, !dbg !7229
  %128 = load float, float* %arrayidx183, align 4, !dbg !7229
  %add184 = fadd float %126, %128, !dbg !7230
  %129 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7231
  %inner_v185 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %129, i32 0, i32 3, !dbg !7232
  %130 = load i32, i32* %tot, align 4, !dbg !7233
  %idxprom186 = sext i32 %130 to i64, !dbg !7231
  %arrayidx187 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v185, i64 0, i64 %idxprom186, !dbg !7231
  %arrayidx188 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx187, i64 0, i64 1, !dbg !7231
  store float %add184, float* %arrayidx188, align 4, !dbg !7234
  %131 = load float, float* %maxx, align 4, !dbg !7235
  %132 = load float, float* %rad.addr, align 4, !dbg !7236
  %sub189 = fsub float %131, %132, !dbg !7237
  %133 = load i32, i32* %a, align 4, !dbg !7238
  %idxprom190 = sext i32 %133 to i64, !dbg !7239
  %arrayidx191 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom190, !dbg !7239
  %arrayidx192 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx191, i64 0, i64 0, !dbg !7239
  %134 = load float, float* %arrayidx192, align 8, !dbg !7239
  %add193 = fadd float %sub189, %134, !dbg !7240
  %135 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7241
  %outer_v194 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %135, i32 0, i32 2, !dbg !7242
  %136 = load i32, i32* %tot, align 4, !dbg !7243
  %idxprom195 = sext i32 %136 to i64, !dbg !7241
  %arrayidx196 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v194, i64 0, i64 %idxprom195, !dbg !7241
  %arrayidx197 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx196, i64 0, i64 0, !dbg !7241
  store float %add193, float* %arrayidx197, align 8, !dbg !7244
  %137 = load float, float* %miny, align 4, !dbg !7245
  %138 = load i32, i32* %a, align 4, !dbg !7246
  %idxprom198 = sext i32 %138 to i64, !dbg !7247
  %arrayidx199 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom198, !dbg !7247
  %arrayidx200 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx199, i64 0, i64 1, !dbg !7247
  %139 = load float, float* %arrayidx200, align 4, !dbg !7247
  %add201 = fadd float %137, %139, !dbg !7248
  %140 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7249
  %outer_v202 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %140, i32 0, i32 2, !dbg !7250
  %141 = load i32, i32* %tot, align 4, !dbg !7251
  %idxprom203 = sext i32 %141 to i64, !dbg !7249
  %arrayidx204 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v202, i64 0, i64 %idxprom203, !dbg !7249
  %arrayidx205 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx204, i64 0, i64 1, !dbg !7249
  store float %add201, float* %arrayidx205, align 4, !dbg !7252
  %142 = load float, float* %facxi, align 4, !dbg !7253
  %143 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7254
  %inner_v206 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %143, i32 0, i32 3, !dbg !7255
  %144 = load i32, i32* %tot, align 4, !dbg !7256
  %idxprom207 = sext i32 %144 to i64, !dbg !7254
  %arrayidx208 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v206, i64 0, i64 %idxprom207, !dbg !7254
  %arrayidx209 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx208, i64 0, i64 0, !dbg !7254
  %145 = load float, float* %arrayidx209, align 8, !dbg !7254
  %146 = load float, float* %minxi, align 4, !dbg !7257
  %sub210 = fsub float %145, %146, !dbg !7258
  %mul211 = fmul float %142, %sub210, !dbg !7259
  %147 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7260
  %inner_uv212 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %147, i32 0, i32 4, !dbg !7261
  %148 = load i32, i32* %tot, align 4, !dbg !7262
  %idxprom213 = sext i32 %148 to i64, !dbg !7260
  %arrayidx214 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv212, i64 0, i64 %idxprom213, !dbg !7260
  %arrayidx215 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx214, i64 0, i64 0, !dbg !7260
  store float %mul211, float* %arrayidx215, align 8, !dbg !7263
  %149 = load float, float* %facyi, align 4, !dbg !7264
  %150 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7265
  %inner_v216 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %150, i32 0, i32 3, !dbg !7266
  %151 = load i32, i32* %tot, align 4, !dbg !7267
  %idxprom217 = sext i32 %151 to i64, !dbg !7265
  %arrayidx218 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v216, i64 0, i64 %idxprom217, !dbg !7265
  %arrayidx219 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx218, i64 0, i64 1, !dbg !7265
  %152 = load float, float* %arrayidx219, align 4, !dbg !7265
  %153 = load float, float* %minyi, align 4, !dbg !7268
  %sub220 = fsub float %152, %153, !dbg !7269
  %mul221 = fmul float %149, %sub220, !dbg !7270
  %154 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7271
  %inner_uv222 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %154, i32 0, i32 4, !dbg !7272
  %155 = load i32, i32* %tot, align 4, !dbg !7273
  %idxprom223 = sext i32 %155 to i64, !dbg !7271
  %arrayidx224 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv222, i64 0, i64 %idxprom223, !dbg !7271
  %arrayidx225 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx224, i64 0, i64 1, !dbg !7271
  store float %mul221, float* %arrayidx225, align 4, !dbg !7274
  br label %for.inc226, !dbg !7275

for.inc226:                                       ; preds = %for.body171
  %156 = load i32, i32* %a, align 4, !dbg !7276
  %inc227 = add nsw i32 %156, 1, !dbg !7276
  store i32 %inc227, i32* %a, align 4, !dbg !7276
  %157 = load i32, i32* %tot, align 4, !dbg !7277
  %inc228 = add nsw i32 %157, 1, !dbg !7277
  store i32 %inc228, i32* %tot, align 4, !dbg !7277
  br label %for.cond168, !dbg !7278, !llvm.loop !7279

for.end229:                                       ; preds = %for.cond168
  br label %if.end256, !dbg !7281

if.else230:                                       ; preds = %if.end164
  %158 = load float, float* %maxxi, align 4, !dbg !7282
  %159 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7284
  %inner_v231 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %159, i32 0, i32 3, !dbg !7285
  %160 = load i32, i32* %tot, align 4, !dbg !7286
  %idxprom232 = sext i32 %160 to i64, !dbg !7284
  %arrayidx233 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v231, i64 0, i64 %idxprom232, !dbg !7284
  %arrayidx234 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx233, i64 0, i64 0, !dbg !7284
  store float %158, float* %arrayidx234, align 8, !dbg !7287
  %161 = load float, float* %minyi, align 4, !dbg !7288
  %162 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7289
  %inner_v235 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %162, i32 0, i32 3, !dbg !7290
  %163 = load i32, i32* %tot, align 4, !dbg !7291
  %idxprom236 = sext i32 %163 to i64, !dbg !7289
  %arrayidx237 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v235, i64 0, i64 %idxprom236, !dbg !7289
  %arrayidx238 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx237, i64 0, i64 1, !dbg !7289
  store float %161, float* %arrayidx238, align 4, !dbg !7292
  %164 = load float, float* %maxx, align 4, !dbg !7293
  %165 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7294
  %outer_v239 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %165, i32 0, i32 2, !dbg !7295
  %166 = load i32, i32* %tot, align 4, !dbg !7296
  %idxprom240 = sext i32 %166 to i64, !dbg !7294
  %arrayidx241 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v239, i64 0, i64 %idxprom240, !dbg !7294
  %arrayidx242 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx241, i64 0, i64 0, !dbg !7294
  store float %164, float* %arrayidx242, align 8, !dbg !7297
  %167 = load float, float* %miny, align 4, !dbg !7298
  %168 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7299
  %outer_v243 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %168, i32 0, i32 2, !dbg !7300
  %169 = load i32, i32* %tot, align 4, !dbg !7301
  %idxprom244 = sext i32 %169 to i64, !dbg !7299
  %arrayidx245 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v243, i64 0, i64 %idxprom244, !dbg !7299
  %arrayidx246 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx245, i64 0, i64 1, !dbg !7299
  store float %167, float* %arrayidx246, align 4, !dbg !7302
  %170 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7303
  %inner_uv247 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %170, i32 0, i32 4, !dbg !7304
  %171 = load i32, i32* %tot, align 4, !dbg !7305
  %idxprom248 = sext i32 %171 to i64, !dbg !7303
  %arrayidx249 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv247, i64 0, i64 %idxprom248, !dbg !7303
  %arrayidx250 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx249, i64 0, i64 0, !dbg !7303
  store float 1.000000e+00, float* %arrayidx250, align 8, !dbg !7306
  %172 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7307
  %inner_uv251 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %172, i32 0, i32 4, !dbg !7308
  %173 = load i32, i32* %tot, align 4, !dbg !7309
  %idxprom252 = sext i32 %173 to i64, !dbg !7307
  %arrayidx253 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv251, i64 0, i64 %idxprom252, !dbg !7307
  %arrayidx254 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx253, i64 0, i64 1, !dbg !7307
  store float 0.000000e+00, float* %arrayidx254, align 4, !dbg !7310
  %174 = load i32, i32* %tot, align 4, !dbg !7311
  %inc255 = add nsw i32 %174, 1, !dbg !7311
  store i32 %inc255, i32* %tot, align 4, !dbg !7311
  br label %if.end256

if.end256:                                        ; preds = %if.else230, %for.end229
  %175 = load i32, i32* %tot, align 4, !dbg !7312
  %176 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7313
  %halfwayvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %176, i32 0, i32 1, !dbg !7314
  store i32 %175, i32* %halfwayvert, align 4, !dbg !7315
  %177 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7316
  %and257 = and i32 %177, 2, !dbg !7318
  %tobool258 = icmp ne i32 %and257, 0, !dbg !7318
  br i1 %tobool258, label %if.then259, label %if.else322, !dbg !7319

if.then259:                                       ; preds = %if.end256
  store i32 0, i32* %a, align 4, !dbg !7320
  br label %for.cond260, !dbg !7323

for.cond260:                                      ; preds = %for.inc318, %if.then259
  %178 = load i32, i32* %a, align 4, !dbg !7324
  %cmp261 = icmp slt i32 %178, 9, !dbg !7326
  br i1 %cmp261, label %for.body263, label %for.end321, !dbg !7327

for.body263:                                      ; preds = %for.cond260
  %179 = load float, float* %maxxi, align 4, !dbg !7328
  %180 = load i32, i32* %a, align 4, !dbg !7330
  %idxprom264 = sext i32 %180 to i64, !dbg !7331
  %arrayidx265 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom264, !dbg !7331
  %arrayidx266 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx265, i64 0, i64 1, !dbg !7331
  %181 = load float, float* %arrayidx266, align 4, !dbg !7331
  %sub267 = fsub float %179, %181, !dbg !7332
  %182 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7333
  %inner_v268 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %182, i32 0, i32 3, !dbg !7334
  %183 = load i32, i32* %tot, align 4, !dbg !7335
  %idxprom269 = sext i32 %183 to i64, !dbg !7333
  %arrayidx270 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v268, i64 0, i64 %idxprom269, !dbg !7333
  %arrayidx271 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx270, i64 0, i64 0, !dbg !7333
  store float %sub267, float* %arrayidx271, align 8, !dbg !7336
  %184 = load float, float* %maxyi, align 4, !dbg !7337
  %185 = load float, float* %radi.addr, align 4, !dbg !7338
  %sub272 = fsub float %184, %185, !dbg !7339
  %186 = load i32, i32* %a, align 4, !dbg !7340
  %idxprom273 = sext i32 %186 to i64, !dbg !7341
  %arrayidx274 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom273, !dbg !7341
  %arrayidx275 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx274, i64 0, i64 0, !dbg !7341
  %187 = load float, float* %arrayidx275, align 8, !dbg !7341
  %add276 = fadd float %sub272, %187, !dbg !7342
  %188 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7343
  %inner_v277 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %188, i32 0, i32 3, !dbg !7344
  %189 = load i32, i32* %tot, align 4, !dbg !7345
  %idxprom278 = sext i32 %189 to i64, !dbg !7343
  %arrayidx279 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v277, i64 0, i64 %idxprom278, !dbg !7343
  %arrayidx280 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx279, i64 0, i64 1, !dbg !7343
  store float %add276, float* %arrayidx280, align 4, !dbg !7346
  %190 = load float, float* %maxx, align 4, !dbg !7347
  %191 = load i32, i32* %a, align 4, !dbg !7348
  %idxprom281 = sext i32 %191 to i64, !dbg !7349
  %arrayidx282 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom281, !dbg !7349
  %arrayidx283 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx282, i64 0, i64 1, !dbg !7349
  %192 = load float, float* %arrayidx283, align 4, !dbg !7349
  %sub284 = fsub float %190, %192, !dbg !7350
  %193 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7351
  %outer_v285 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %193, i32 0, i32 2, !dbg !7352
  %194 = load i32, i32* %tot, align 4, !dbg !7353
  %idxprom286 = sext i32 %194 to i64, !dbg !7351
  %arrayidx287 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v285, i64 0, i64 %idxprom286, !dbg !7351
  %arrayidx288 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx287, i64 0, i64 0, !dbg !7351
  store float %sub284, float* %arrayidx288, align 8, !dbg !7354
  %195 = load float, float* %maxy, align 4, !dbg !7355
  %196 = load float, float* %rad.addr, align 4, !dbg !7356
  %sub289 = fsub float %195, %196, !dbg !7357
  %197 = load i32, i32* %a, align 4, !dbg !7358
  %idxprom290 = sext i32 %197 to i64, !dbg !7359
  %arrayidx291 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom290, !dbg !7359
  %arrayidx292 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx291, i64 0, i64 0, !dbg !7359
  %198 = load float, float* %arrayidx292, align 8, !dbg !7359
  %add293 = fadd float %sub289, %198, !dbg !7360
  %199 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7361
  %outer_v294 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %199, i32 0, i32 2, !dbg !7362
  %200 = load i32, i32* %tot, align 4, !dbg !7363
  %idxprom295 = sext i32 %200 to i64, !dbg !7361
  %arrayidx296 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v294, i64 0, i64 %idxprom295, !dbg !7361
  %arrayidx297 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx296, i64 0, i64 1, !dbg !7361
  store float %add293, float* %arrayidx297, align 4, !dbg !7364
  %201 = load float, float* %facxi, align 4, !dbg !7365
  %202 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7366
  %inner_v298 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %202, i32 0, i32 3, !dbg !7367
  %203 = load i32, i32* %tot, align 4, !dbg !7368
  %idxprom299 = sext i32 %203 to i64, !dbg !7366
  %arrayidx300 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v298, i64 0, i64 %idxprom299, !dbg !7366
  %arrayidx301 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx300, i64 0, i64 0, !dbg !7366
  %204 = load float, float* %arrayidx301, align 8, !dbg !7366
  %205 = load float, float* %minxi, align 4, !dbg !7369
  %sub302 = fsub float %204, %205, !dbg !7370
  %mul303 = fmul float %201, %sub302, !dbg !7371
  %206 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7372
  %inner_uv304 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %206, i32 0, i32 4, !dbg !7373
  %207 = load i32, i32* %tot, align 4, !dbg !7374
  %idxprom305 = sext i32 %207 to i64, !dbg !7372
  %arrayidx306 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv304, i64 0, i64 %idxprom305, !dbg !7372
  %arrayidx307 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx306, i64 0, i64 0, !dbg !7372
  store float %mul303, float* %arrayidx307, align 8, !dbg !7375
  %208 = load float, float* %facyi, align 4, !dbg !7376
  %209 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7377
  %inner_v308 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %209, i32 0, i32 3, !dbg !7378
  %210 = load i32, i32* %tot, align 4, !dbg !7379
  %idxprom309 = sext i32 %210 to i64, !dbg !7377
  %arrayidx310 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v308, i64 0, i64 %idxprom309, !dbg !7377
  %arrayidx311 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx310, i64 0, i64 1, !dbg !7377
  %211 = load float, float* %arrayidx311, align 4, !dbg !7377
  %212 = load float, float* %minyi, align 4, !dbg !7380
  %sub312 = fsub float %211, %212, !dbg !7381
  %mul313 = fmul float %208, %sub312, !dbg !7382
  %213 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7383
  %inner_uv314 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %213, i32 0, i32 4, !dbg !7384
  %214 = load i32, i32* %tot, align 4, !dbg !7385
  %idxprom315 = sext i32 %214 to i64, !dbg !7383
  %arrayidx316 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv314, i64 0, i64 %idxprom315, !dbg !7383
  %arrayidx317 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx316, i64 0, i64 1, !dbg !7383
  store float %mul313, float* %arrayidx317, align 4, !dbg !7386
  br label %for.inc318, !dbg !7387

for.inc318:                                       ; preds = %for.body263
  %215 = load i32, i32* %a, align 4, !dbg !7388
  %inc319 = add nsw i32 %215, 1, !dbg !7388
  store i32 %inc319, i32* %a, align 4, !dbg !7388
  %216 = load i32, i32* %tot, align 4, !dbg !7389
  %inc320 = add nsw i32 %216, 1, !dbg !7389
  store i32 %inc320, i32* %tot, align 4, !dbg !7389
  br label %for.cond260, !dbg !7390, !llvm.loop !7391

for.end321:                                       ; preds = %for.cond260
  br label %if.end348, !dbg !7393

if.else322:                                       ; preds = %if.end256
  %217 = load float, float* %maxxi, align 4, !dbg !7394
  %218 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7396
  %inner_v323 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %218, i32 0, i32 3, !dbg !7397
  %219 = load i32, i32* %tot, align 4, !dbg !7398
  %idxprom324 = sext i32 %219 to i64, !dbg !7396
  %arrayidx325 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v323, i64 0, i64 %idxprom324, !dbg !7396
  %arrayidx326 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx325, i64 0, i64 0, !dbg !7396
  store float %217, float* %arrayidx326, align 8, !dbg !7399
  %220 = load float, float* %maxyi, align 4, !dbg !7400
  %221 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7401
  %inner_v327 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %221, i32 0, i32 3, !dbg !7402
  %222 = load i32, i32* %tot, align 4, !dbg !7403
  %idxprom328 = sext i32 %222 to i64, !dbg !7401
  %arrayidx329 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v327, i64 0, i64 %idxprom328, !dbg !7401
  %arrayidx330 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx329, i64 0, i64 1, !dbg !7401
  store float %220, float* %arrayidx330, align 4, !dbg !7404
  %223 = load float, float* %maxx, align 4, !dbg !7405
  %224 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7406
  %outer_v331 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %224, i32 0, i32 2, !dbg !7407
  %225 = load i32, i32* %tot, align 4, !dbg !7408
  %idxprom332 = sext i32 %225 to i64, !dbg !7406
  %arrayidx333 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v331, i64 0, i64 %idxprom332, !dbg !7406
  %arrayidx334 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx333, i64 0, i64 0, !dbg !7406
  store float %223, float* %arrayidx334, align 8, !dbg !7409
  %226 = load float, float* %maxy, align 4, !dbg !7410
  %227 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7411
  %outer_v335 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %227, i32 0, i32 2, !dbg !7412
  %228 = load i32, i32* %tot, align 4, !dbg !7413
  %idxprom336 = sext i32 %228 to i64, !dbg !7411
  %arrayidx337 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v335, i64 0, i64 %idxprom336, !dbg !7411
  %arrayidx338 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx337, i64 0, i64 1, !dbg !7411
  store float %226, float* %arrayidx338, align 4, !dbg !7414
  %229 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7415
  %inner_uv339 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %229, i32 0, i32 4, !dbg !7416
  %230 = load i32, i32* %tot, align 4, !dbg !7417
  %idxprom340 = sext i32 %230 to i64, !dbg !7415
  %arrayidx341 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv339, i64 0, i64 %idxprom340, !dbg !7415
  %arrayidx342 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx341, i64 0, i64 0, !dbg !7415
  store float 1.000000e+00, float* %arrayidx342, align 8, !dbg !7418
  %231 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7419
  %inner_uv343 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %231, i32 0, i32 4, !dbg !7420
  %232 = load i32, i32* %tot, align 4, !dbg !7421
  %idxprom344 = sext i32 %232 to i64, !dbg !7419
  %arrayidx345 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv343, i64 0, i64 %idxprom344, !dbg !7419
  %arrayidx346 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx345, i64 0, i64 1, !dbg !7419
  store float 1.000000e+00, float* %arrayidx346, align 4, !dbg !7422
  %233 = load i32, i32* %tot, align 4, !dbg !7423
  %inc347 = add nsw i32 %233, 1, !dbg !7423
  store i32 %inc347, i32* %tot, align 4, !dbg !7423
  br label %if.end348

if.end348:                                        ; preds = %if.else322, %for.end321
  %234 = load i32, i32* %roundboxalign.addr, align 4, !dbg !7424
  %and349 = and i32 %234, 1, !dbg !7426
  %tobool350 = icmp ne i32 %and349, 0, !dbg !7426
  br i1 %tobool350, label %if.then351, label %if.else414, !dbg !7427

if.then351:                                       ; preds = %if.end348
  store i32 0, i32* %a, align 4, !dbg !7428
  br label %for.cond352, !dbg !7431

for.cond352:                                      ; preds = %for.inc410, %if.then351
  %235 = load i32, i32* %a, align 4, !dbg !7432
  %cmp353 = icmp slt i32 %235, 9, !dbg !7434
  br i1 %cmp353, label %for.body355, label %for.end413, !dbg !7435

for.body355:                                      ; preds = %for.cond352
  %236 = load float, float* %minxi, align 4, !dbg !7436
  %237 = load float, float* %radi.addr, align 4, !dbg !7438
  %add356 = fadd float %236, %237, !dbg !7439
  %238 = load i32, i32* %a, align 4, !dbg !7440
  %idxprom357 = sext i32 %238 to i64, !dbg !7441
  %arrayidx358 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom357, !dbg !7441
  %arrayidx359 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx358, i64 0, i64 0, !dbg !7441
  %239 = load float, float* %arrayidx359, align 8, !dbg !7441
  %sub360 = fsub float %add356, %239, !dbg !7442
  %240 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7443
  %inner_v361 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %240, i32 0, i32 3, !dbg !7444
  %241 = load i32, i32* %tot, align 4, !dbg !7445
  %idxprom362 = sext i32 %241 to i64, !dbg !7443
  %arrayidx363 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v361, i64 0, i64 %idxprom362, !dbg !7443
  %arrayidx364 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx363, i64 0, i64 0, !dbg !7443
  store float %sub360, float* %arrayidx364, align 8, !dbg !7446
  %242 = load float, float* %maxyi, align 4, !dbg !7447
  %243 = load i32, i32* %a, align 4, !dbg !7448
  %idxprom365 = sext i32 %243 to i64, !dbg !7449
  %arrayidx366 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %veci, i64 0, i64 %idxprom365, !dbg !7449
  %arrayidx367 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx366, i64 0, i64 1, !dbg !7449
  %244 = load float, float* %arrayidx367, align 4, !dbg !7449
  %sub368 = fsub float %242, %244, !dbg !7450
  %245 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7451
  %inner_v369 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %245, i32 0, i32 3, !dbg !7452
  %246 = load i32, i32* %tot, align 4, !dbg !7453
  %idxprom370 = sext i32 %246 to i64, !dbg !7451
  %arrayidx371 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v369, i64 0, i64 %idxprom370, !dbg !7451
  %arrayidx372 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx371, i64 0, i64 1, !dbg !7451
  store float %sub368, float* %arrayidx372, align 4, !dbg !7454
  %247 = load float, float* %minx, align 4, !dbg !7455
  %248 = load float, float* %rad.addr, align 4, !dbg !7456
  %add373 = fadd float %247, %248, !dbg !7457
  %249 = load i32, i32* %a, align 4, !dbg !7458
  %idxprom374 = sext i32 %249 to i64, !dbg !7459
  %arrayidx375 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom374, !dbg !7459
  %arrayidx376 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx375, i64 0, i64 0, !dbg !7459
  %250 = load float, float* %arrayidx376, align 8, !dbg !7459
  %sub377 = fsub float %add373, %250, !dbg !7460
  %251 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7461
  %outer_v378 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %251, i32 0, i32 2, !dbg !7462
  %252 = load i32, i32* %tot, align 4, !dbg !7463
  %idxprom379 = sext i32 %252 to i64, !dbg !7461
  %arrayidx380 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v378, i64 0, i64 %idxprom379, !dbg !7461
  %arrayidx381 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx380, i64 0, i64 0, !dbg !7461
  store float %sub377, float* %arrayidx381, align 8, !dbg !7464
  %253 = load float, float* %maxy, align 4, !dbg !7465
  %254 = load i32, i32* %a, align 4, !dbg !7466
  %idxprom382 = sext i32 %254 to i64, !dbg !7467
  %arrayidx383 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom382, !dbg !7467
  %arrayidx384 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx383, i64 0, i64 1, !dbg !7467
  %255 = load float, float* %arrayidx384, align 4, !dbg !7467
  %sub385 = fsub float %253, %255, !dbg !7468
  %256 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7469
  %outer_v386 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %256, i32 0, i32 2, !dbg !7470
  %257 = load i32, i32* %tot, align 4, !dbg !7471
  %idxprom387 = sext i32 %257 to i64, !dbg !7469
  %arrayidx388 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v386, i64 0, i64 %idxprom387, !dbg !7469
  %arrayidx389 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx388, i64 0, i64 1, !dbg !7469
  store float %sub385, float* %arrayidx389, align 4, !dbg !7472
  %258 = load float, float* %facxi, align 4, !dbg !7473
  %259 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7474
  %inner_v390 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %259, i32 0, i32 3, !dbg !7475
  %260 = load i32, i32* %tot, align 4, !dbg !7476
  %idxprom391 = sext i32 %260 to i64, !dbg !7474
  %arrayidx392 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v390, i64 0, i64 %idxprom391, !dbg !7474
  %arrayidx393 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx392, i64 0, i64 0, !dbg !7474
  %261 = load float, float* %arrayidx393, align 8, !dbg !7474
  %262 = load float, float* %minxi, align 4, !dbg !7477
  %sub394 = fsub float %261, %262, !dbg !7478
  %mul395 = fmul float %258, %sub394, !dbg !7479
  %263 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7480
  %inner_uv396 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %263, i32 0, i32 4, !dbg !7481
  %264 = load i32, i32* %tot, align 4, !dbg !7482
  %idxprom397 = sext i32 %264 to i64, !dbg !7480
  %arrayidx398 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv396, i64 0, i64 %idxprom397, !dbg !7480
  %arrayidx399 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx398, i64 0, i64 0, !dbg !7480
  store float %mul395, float* %arrayidx399, align 8, !dbg !7483
  %265 = load float, float* %facyi, align 4, !dbg !7484
  %266 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7485
  %inner_v400 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %266, i32 0, i32 3, !dbg !7486
  %267 = load i32, i32* %tot, align 4, !dbg !7487
  %idxprom401 = sext i32 %267 to i64, !dbg !7485
  %arrayidx402 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v400, i64 0, i64 %idxprom401, !dbg !7485
  %arrayidx403 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx402, i64 0, i64 1, !dbg !7485
  %268 = load float, float* %arrayidx403, align 4, !dbg !7485
  %269 = load float, float* %minyi, align 4, !dbg !7488
  %sub404 = fsub float %268, %269, !dbg !7489
  %mul405 = fmul float %265, %sub404, !dbg !7490
  %270 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7491
  %inner_uv406 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %270, i32 0, i32 4, !dbg !7492
  %271 = load i32, i32* %tot, align 4, !dbg !7493
  %idxprom407 = sext i32 %271 to i64, !dbg !7491
  %arrayidx408 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv406, i64 0, i64 %idxprom407, !dbg !7491
  %arrayidx409 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx408, i64 0, i64 1, !dbg !7491
  store float %mul405, float* %arrayidx409, align 4, !dbg !7494
  br label %for.inc410, !dbg !7495

for.inc410:                                       ; preds = %for.body355
  %272 = load i32, i32* %a, align 4, !dbg !7496
  %inc411 = add nsw i32 %272, 1, !dbg !7496
  store i32 %inc411, i32* %a, align 4, !dbg !7496
  %273 = load i32, i32* %tot, align 4, !dbg !7497
  %inc412 = add nsw i32 %273, 1, !dbg !7497
  store i32 %inc412, i32* %tot, align 4, !dbg !7497
  br label %for.cond352, !dbg !7498, !llvm.loop !7499

for.end413:                                       ; preds = %for.cond352
  br label %if.end440, !dbg !7501

if.else414:                                       ; preds = %if.end348
  %274 = load float, float* %minxi, align 4, !dbg !7502
  %275 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7504
  %inner_v415 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %275, i32 0, i32 3, !dbg !7505
  %276 = load i32, i32* %tot, align 4, !dbg !7506
  %idxprom416 = sext i32 %276 to i64, !dbg !7504
  %arrayidx417 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v415, i64 0, i64 %idxprom416, !dbg !7504
  %arrayidx418 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx417, i64 0, i64 0, !dbg !7504
  store float %274, float* %arrayidx418, align 8, !dbg !7507
  %277 = load float, float* %maxyi, align 4, !dbg !7508
  %278 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7509
  %inner_v419 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %278, i32 0, i32 3, !dbg !7510
  %279 = load i32, i32* %tot, align 4, !dbg !7511
  %idxprom420 = sext i32 %279 to i64, !dbg !7509
  %arrayidx421 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v419, i64 0, i64 %idxprom420, !dbg !7509
  %arrayidx422 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx421, i64 0, i64 1, !dbg !7509
  store float %277, float* %arrayidx422, align 4, !dbg !7512
  %280 = load float, float* %minx, align 4, !dbg !7513
  %281 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7514
  %outer_v423 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %281, i32 0, i32 2, !dbg !7515
  %282 = load i32, i32* %tot, align 4, !dbg !7516
  %idxprom424 = sext i32 %282 to i64, !dbg !7514
  %arrayidx425 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v423, i64 0, i64 %idxprom424, !dbg !7514
  %arrayidx426 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx425, i64 0, i64 0, !dbg !7514
  store float %280, float* %arrayidx426, align 8, !dbg !7517
  %283 = load float, float* %maxy, align 4, !dbg !7518
  %284 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7519
  %outer_v427 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %284, i32 0, i32 2, !dbg !7520
  %285 = load i32, i32* %tot, align 4, !dbg !7521
  %idxprom428 = sext i32 %285 to i64, !dbg !7519
  %arrayidx429 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v427, i64 0, i64 %idxprom428, !dbg !7519
  %arrayidx430 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx429, i64 0, i64 1, !dbg !7519
  store float %283, float* %arrayidx430, align 4, !dbg !7522
  %286 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7523
  %inner_uv431 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %286, i32 0, i32 4, !dbg !7524
  %287 = load i32, i32* %tot, align 4, !dbg !7525
  %idxprom432 = sext i32 %287 to i64, !dbg !7523
  %arrayidx433 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv431, i64 0, i64 %idxprom432, !dbg !7523
  %arrayidx434 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx433, i64 0, i64 0, !dbg !7523
  store float 0.000000e+00, float* %arrayidx434, align 8, !dbg !7526
  %288 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7527
  %inner_uv435 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %288, i32 0, i32 4, !dbg !7528
  %289 = load i32, i32* %tot, align 4, !dbg !7529
  %idxprom436 = sext i32 %289 to i64, !dbg !7527
  %arrayidx437 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_uv435, i64 0, i64 %idxprom436, !dbg !7527
  %arrayidx438 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx437, i64 0, i64 1, !dbg !7527
  store float 1.000000e+00, float* %arrayidx438, align 4, !dbg !7530
  %290 = load i32, i32* %tot, align 4, !dbg !7531
  %inc439 = add nsw i32 %290, 1, !dbg !7531
  store i32 %inc439, i32* %tot, align 4, !dbg !7531
  br label %if.end440

if.end440:                                        ; preds = %if.else414, %for.end413
  %291 = load i32, i32* %tot, align 4, !dbg !7532
  %292 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wt.addr, align 8, !dbg !7533
  %totvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %292, i32 0, i32 0, !dbg !7534
  store i32 %291, i32* %totvert, align 8, !dbg !7535
  ret void, !dbg !7536
}

declare dso_local void @glPolygonStipple(i8*) #2

declare dso_local void @glBlendFunc(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @round_box_shade_col4_r(i8* %r_col, i8* %col1, i8* %col2, float %fac) #0 !dbg !7537 {
entry:
  %r_col.addr = alloca i8*, align 8
  %col1.addr = alloca i8*, align 8
  %col2.addr = alloca i8*, align 8
  %fac.addr = alloca float, align 4
  %faci = alloca i32, align 4
  %facm = alloca i32, align 4
  store i8* %r_col, i8** %r_col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_col.addr, metadata !7540, metadata !DIExpression()), !dbg !7541
  store i8* %col1, i8** %col1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %col1.addr, metadata !7542, metadata !DIExpression()), !dbg !7543
  store i8* %col2, i8** %col2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %col2.addr, metadata !7544, metadata !DIExpression()), !dbg !7545
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !7546, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.declare(metadata i32* %faci, metadata !7548, metadata !DIExpression()), !dbg !7549
  %0 = load float, float* %fac.addr, align 4, !dbg !7550
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !7550
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7550

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !7550

cond.false:                                       ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !7550
  %cmp1 = fcmp ogt float %1, 0x3FEFEFEFE0000000, !dbg !7550
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !7550

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !7550

cond.false3:                                      ; preds = %cond.false
  %2 = load float, float* %fac.addr, align 4, !dbg !7550
  %mul = fmul float 2.550000e+02, %2, !dbg !7550
  %add = fadd float %mul, 5.000000e-01, !dbg !7550
  br label %cond.end, !dbg !7550

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi float [ 2.550000e+02, %cond.true2 ], [ %add, %cond.false3 ], !dbg !7550
  br label %cond.end4, !dbg !7550

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !7550
  %conv = fptoui float %cond5 to i8, !dbg !7550
  %conv6 = zext i8 %conv to i32, !dbg !7550
  store i32 %conv6, i32* %faci, align 4, !dbg !7549
  call void @llvm.dbg.declare(metadata i32* %facm, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = load i32, i32* %faci, align 4, !dbg !7553
  %sub = sub nsw i32 255, %3, !dbg !7554
  store i32 %sub, i32* %facm, align 4, !dbg !7552
  %4 = load i32, i32* %faci, align 4, !dbg !7555
  %5 = load i8*, i8** %col1.addr, align 8, !dbg !7556
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !7556
  %6 = load i8, i8* %arrayidx, align 1, !dbg !7556
  %conv7 = zext i8 %6 to i32, !dbg !7556
  %mul8 = mul nsw i32 %4, %conv7, !dbg !7557
  %7 = load i32, i32* %facm, align 4, !dbg !7558
  %8 = load i8*, i8** %col2.addr, align 8, !dbg !7559
  %arrayidx9 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !7559
  %9 = load i8, i8* %arrayidx9, align 1, !dbg !7559
  %conv10 = zext i8 %9 to i32, !dbg !7559
  %mul11 = mul nsw i32 %7, %conv10, !dbg !7560
  %add12 = add nsw i32 %mul8, %mul11, !dbg !7561
  %shr = ashr i32 %add12, 8, !dbg !7562
  %conv13 = trunc i32 %shr to i8, !dbg !7563
  %10 = load i8*, i8** %r_col.addr, align 8, !dbg !7564
  %arrayidx14 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !7564
  store i8 %conv13, i8* %arrayidx14, align 1, !dbg !7565
  %11 = load i32, i32* %faci, align 4, !dbg !7566
  %12 = load i8*, i8** %col1.addr, align 8, !dbg !7567
  %arrayidx15 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !7567
  %13 = load i8, i8* %arrayidx15, align 1, !dbg !7567
  %conv16 = zext i8 %13 to i32, !dbg !7567
  %mul17 = mul nsw i32 %11, %conv16, !dbg !7568
  %14 = load i32, i32* %facm, align 4, !dbg !7569
  %15 = load i8*, i8** %col2.addr, align 8, !dbg !7570
  %arrayidx18 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !7570
  %16 = load i8, i8* %arrayidx18, align 1, !dbg !7570
  %conv19 = zext i8 %16 to i32, !dbg !7570
  %mul20 = mul nsw i32 %14, %conv19, !dbg !7571
  %add21 = add nsw i32 %mul17, %mul20, !dbg !7572
  %shr22 = ashr i32 %add21, 8, !dbg !7573
  %conv23 = trunc i32 %shr22 to i8, !dbg !7574
  %17 = load i8*, i8** %r_col.addr, align 8, !dbg !7575
  %arrayidx24 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !7575
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !7576
  %18 = load i32, i32* %faci, align 4, !dbg !7577
  %19 = load i8*, i8** %col1.addr, align 8, !dbg !7578
  %arrayidx25 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !7578
  %20 = load i8, i8* %arrayidx25, align 1, !dbg !7578
  %conv26 = zext i8 %20 to i32, !dbg !7578
  %mul27 = mul nsw i32 %18, %conv26, !dbg !7579
  %21 = load i32, i32* %facm, align 4, !dbg !7580
  %22 = load i8*, i8** %col2.addr, align 8, !dbg !7581
  %arrayidx28 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !7581
  %23 = load i8, i8* %arrayidx28, align 1, !dbg !7581
  %conv29 = zext i8 %23 to i32, !dbg !7581
  %mul30 = mul nsw i32 %21, %conv29, !dbg !7582
  %add31 = add nsw i32 %mul27, %mul30, !dbg !7583
  %shr32 = ashr i32 %add31, 8, !dbg !7584
  %conv33 = trunc i32 %shr32 to i8, !dbg !7585
  %24 = load i8*, i8** %r_col.addr, align 8, !dbg !7586
  %arrayidx34 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !7586
  store i8 %conv33, i8* %arrayidx34, align 1, !dbg !7587
  %25 = load i32, i32* %faci, align 4, !dbg !7588
  %26 = load i8*, i8** %col1.addr, align 8, !dbg !7589
  %arrayidx35 = getelementptr inbounds i8, i8* %26, i64 3, !dbg !7589
  %27 = load i8, i8* %arrayidx35, align 1, !dbg !7589
  %conv36 = zext i8 %27 to i32, !dbg !7589
  %mul37 = mul nsw i32 %25, %conv36, !dbg !7590
  %28 = load i32, i32* %facm, align 4, !dbg !7591
  %29 = load i8*, i8** %col2.addr, align 8, !dbg !7592
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !7592
  %30 = load i8, i8* %arrayidx38, align 1, !dbg !7592
  %conv39 = zext i8 %30 to i32, !dbg !7592
  %mul40 = mul nsw i32 %28, %conv39, !dbg !7593
  %add41 = add nsw i32 %mul37, %mul40, !dbg !7594
  %shr42 = ashr i32 %add41, 8, !dbg !7595
  %conv43 = trunc i32 %shr42 to i8, !dbg !7596
  %31 = load i8*, i8** %r_col.addr, align 8, !dbg !7597
  %arrayidx44 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !7597
  store i8 %conv43, i8* %arrayidx44, align 1, !dbg !7598
  ret void, !dbg !7599
}

declare dso_local void @glColorPointer(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_verts_to_quad_strip(%struct.uiWidgetBase* %wtb, i32 %totvert, [2 x float]* %quad_strip) #0 !dbg !7600 {
entry:
  %wtb.addr = alloca %struct.uiWidgetBase*, align 8
  %totvert.addr = alloca i32, align 4
  %quad_strip.addr = alloca [2 x float]*, align 8
  %a = alloca i32, align 4
  store %struct.uiWidgetBase* %wtb, %struct.uiWidgetBase** %wtb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wtb.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !7605, metadata !DIExpression()), !dbg !7606
  store [2 x float]* %quad_strip, [2 x float]** %quad_strip.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %quad_strip.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7609, metadata !DIExpression()), !dbg !7610
  store i32 0, i32* %a, align 4, !dbg !7611
  br label %for.cond, !dbg !7613

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !7614
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !7616
  %cmp = icmp slt i32 %0, %1, !dbg !7617
  br i1 %cmp, label %for.body, label %for.end, !dbg !7618

for.body:                                         ; preds = %for.cond
  %2 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7619
  %3 = load i32, i32* %a, align 4, !dbg !7621
  %mul = mul nsw i32 %3, 2, !dbg !7622
  %idxprom = sext i32 %mul to i64, !dbg !7619
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %2, i64 %idxprom, !dbg !7619
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !7619
  %4 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7623
  %outer_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %4, i32 0, i32 2, !dbg !7624
  %5 = load i32, i32* %a, align 4, !dbg !7625
  %idxprom1 = sext i32 %5 to i64, !dbg !7623
  %arrayidx2 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v, i64 0, i64 %idxprom1, !dbg !7623
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx2, i64 0, i64 0, !dbg !7623
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay3), !dbg !7626
  %6 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7627
  %7 = load i32, i32* %a, align 4, !dbg !7628
  %mul4 = mul nsw i32 %7, 2, !dbg !7629
  %add = add nsw i32 %mul4, 1, !dbg !7630
  %idxprom5 = sext i32 %add to i64, !dbg !7627
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 %idxprom5, !dbg !7627
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !7627
  %8 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7631
  %inner_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %8, i32 0, i32 3, !dbg !7632
  %9 = load i32, i32* %a, align 4, !dbg !7633
  %idxprom8 = sext i32 %9 to i64, !dbg !7631
  %arrayidx9 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v, i64 0, i64 %idxprom8, !dbg !7631
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !7631
  call void @copy_v2_v2(float* %arraydecay7, float* %arraydecay10), !dbg !7634
  br label %for.inc, !dbg !7635

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %a, align 4, !dbg !7636
  %inc = add nsw i32 %10, 1, !dbg !7636
  store i32 %inc, i32* %a, align 4, !dbg !7636
  br label %for.cond, !dbg !7637, !llvm.loop !7638

for.end:                                          ; preds = %for.cond
  %11 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7640
  %12 = load i32, i32* %a, align 4, !dbg !7641
  %mul11 = mul nsw i32 %12, 2, !dbg !7642
  %idxprom12 = sext i32 %mul11 to i64, !dbg !7640
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %11, i64 %idxprom12, !dbg !7640
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !7640
  %13 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7643
  %outer_v15 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %13, i32 0, i32 2, !dbg !7644
  %arrayidx16 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v15, i64 0, i64 0, !dbg !7643
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 0, !dbg !7643
  call void @copy_v2_v2(float* %arraydecay14, float* %arraydecay17), !dbg !7645
  %14 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7646
  %15 = load i32, i32* %a, align 4, !dbg !7647
  %mul18 = mul nsw i32 %15, 2, !dbg !7648
  %add19 = add nsw i32 %mul18, 1, !dbg !7649
  %idxprom20 = sext i32 %add19 to i64, !dbg !7646
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 %idxprom20, !dbg !7646
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !7646
  %16 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7650
  %inner_v23 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %16, i32 0, i32 3, !dbg !7651
  %arrayidx24 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %inner_v23, i64 0, i64 0, !dbg !7650
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx24, i64 0, i64 0, !dbg !7650
  call void @copy_v2_v2(float* %arraydecay22, float* %arraydecay25), !dbg !7652
  ret void, !dbg !7653
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_verts_to_quad_strip_open(%struct.uiWidgetBase* %wtb, i32 %totvert, [2 x float]* %quad_strip) #0 !dbg !7654 {
entry:
  %wtb.addr = alloca %struct.uiWidgetBase*, align 8
  %totvert.addr = alloca i32, align 4
  %quad_strip.addr = alloca [2 x float]*, align 8
  %a = alloca i32, align 4
  store %struct.uiWidgetBase* %wtb, %struct.uiWidgetBase** %wtb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wtb.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  store [2 x float]* %quad_strip, [2 x float]** %quad_strip.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %quad_strip.addr, metadata !7659, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7661, metadata !DIExpression()), !dbg !7662
  store i32 0, i32* %a, align 4, !dbg !7663
  br label %for.cond, !dbg !7665

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !7666
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !7668
  %cmp = icmp slt i32 %0, %1, !dbg !7669
  br i1 %cmp, label %for.body, label %for.end, !dbg !7670

for.body:                                         ; preds = %for.cond
  %2 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7671
  %outer_v = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %2, i32 0, i32 2, !dbg !7673
  %3 = load i32, i32* %a, align 4, !dbg !7674
  %idxprom = sext i32 %3 to i64, !dbg !7671
  %arrayidx = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v, i64 0, i64 %idxprom, !dbg !7671
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !7671
  %4 = load float, float* %arrayidx1, align 8, !dbg !7671
  %5 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7675
  %6 = load i32, i32* %a, align 4, !dbg !7676
  %mul = mul nsw i32 %6, 2, !dbg !7677
  %idxprom2 = sext i32 %mul to i64, !dbg !7675
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 %idxprom2, !dbg !7675
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !7675
  store float %4, float* %arrayidx4, align 4, !dbg !7678
  %7 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7679
  %outer_v5 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %7, i32 0, i32 2, !dbg !7680
  %8 = load i32, i32* %a, align 4, !dbg !7681
  %idxprom6 = sext i32 %8 to i64, !dbg !7679
  %arrayidx7 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v5, i64 0, i64 %idxprom6, !dbg !7679
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 1, !dbg !7679
  %9 = load float, float* %arrayidx8, align 4, !dbg !7679
  %10 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7682
  %11 = load i32, i32* %a, align 4, !dbg !7683
  %mul9 = mul nsw i32 %11, 2, !dbg !7684
  %idxprom10 = sext i32 %mul9 to i64, !dbg !7682
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %10, i64 %idxprom10, !dbg !7682
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 1, !dbg !7682
  store float %9, float* %arrayidx12, align 4, !dbg !7685
  %12 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7686
  %outer_v13 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %12, i32 0, i32 2, !dbg !7687
  %13 = load i32, i32* %a, align 4, !dbg !7688
  %idxprom14 = sext i32 %13 to i64, !dbg !7686
  %arrayidx15 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v13, i64 0, i64 %idxprom14, !dbg !7686
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !7686
  %14 = load float, float* %arrayidx16, align 8, !dbg !7686
  %15 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7689
  %16 = load i32, i32* %a, align 4, !dbg !7690
  %mul17 = mul nsw i32 %16, 2, !dbg !7691
  %add = add nsw i32 %mul17, 1, !dbg !7692
  %idxprom18 = sext i32 %add to i64, !dbg !7689
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %15, i64 %idxprom18, !dbg !7689
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !7689
  store float %14, float* %arrayidx20, align 4, !dbg !7693
  %17 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !7694
  %outer_v21 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %17, i32 0, i32 2, !dbg !7695
  %18 = load i32, i32* %a, align 4, !dbg !7696
  %idxprom22 = sext i32 %18 to i64, !dbg !7694
  %arrayidx23 = getelementptr inbounds [36 x [2 x float]], [36 x [2 x float]]* %outer_v21, i64 0, i64 %idxprom22, !dbg !7694
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 1, !dbg !7694
  %19 = load float, float* %arrayidx24, align 4, !dbg !7694
  %sub = fsub float %19, 1.000000e+00, !dbg !7697
  %20 = load [2 x float]*, [2 x float]** %quad_strip.addr, align 8, !dbg !7698
  %21 = load i32, i32* %a, align 4, !dbg !7699
  %mul25 = mul nsw i32 %21, 2, !dbg !7700
  %add26 = add nsw i32 %mul25, 1, !dbg !7701
  %idxprom27 = sext i32 %add26 to i64, !dbg !7698
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %20, i64 %idxprom27, !dbg !7698
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx28, i64 0, i64 1, !dbg !7698
  store float %sub, float* %arrayidx29, align 4, !dbg !7702
  br label %for.inc, !dbg !7703

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %a, align 4, !dbg !7704
  %inc = add nsw i32 %22, 1, !dbg !7704
  store i32 %inc, i32* %a, align 4, !dbg !7704
  br label %for.cond, !dbg !7705, !llvm.loop !7706

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7708
}

declare dso_local void @UI_GetThemeColor4ubv(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_trias_draw(%struct.uiWidgetTrias* %tria) #0 !dbg !7709 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @glEnableClientState(i32 32884), !dbg !7714
  %0 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7715
  %vec = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %0, i32 0, i32 1, !dbg !7716
  %arraydecay = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec, i64 0, i64 0, !dbg !7715
  %1 = bitcast [2 x float]* %arraydecay to i8*, !dbg !7715
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %1), !dbg !7717
  %2 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7718
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %2, i32 0, i32 0, !dbg !7719
  %3 = load i32, i32* %tot, align 8, !dbg !7719
  %mul = mul i32 %3, 3, !dbg !7720
  %4 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7721
  %index = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %4, i32 0, i32 2, !dbg !7722
  %5 = load [3 x i32]*, [3 x i32]** %index, align 8, !dbg !7722
  %6 = bitcast [3 x i32]* %5 to i8*, !dbg !7721
  call void @glDrawElements(i32 4, i32 %mul, i32 5125, i8* %6), !dbg !7723
  call void @glDisableClientState(i32 32884), !dbg !7724
  ret void, !dbg !7725
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !7726 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load float*, float** %a.addr, align 8, !dbg !7731
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7731
  %1 = load float, float* %arrayidx, align 4, !dbg !7731
  %2 = load float*, float** %r.addr, align 8, !dbg !7732
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7732
  store float %1, float* %arrayidx1, align 4, !dbg !7733
  %3 = load float*, float** %a.addr, align 8, !dbg !7734
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7734
  %4 = load float, float* %arrayidx2, align 4, !dbg !7734
  %5 = load float*, float** %r.addr, align 8, !dbg !7735
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7735
  store float %4, float* %arrayidx3, align 4, !dbg !7736
  ret void, !dbg !7737
}

declare dso_local void @glDrawElements(i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_tria_ex(%struct.uiWidgetTrias* %tria, %struct.rcti* %rect, float %triasize, i8 zeroext %where, [2 x float]* %verts, i32 %verts_tot, [3 x i32]* %tris, i32 %tris_tot) #0 !dbg !7738 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %triasize.addr = alloca float, align 4
  %where.addr = alloca i8, align 1
  %verts.addr = alloca [2 x float]*, align 8
  %verts_tot.addr = alloca i32, align 4
  %tris.addr = alloca [3 x i32]*, align 8
  %tris_tot.addr = alloca i32, align 4
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %sizex = alloca float, align 4
  %sizey = alloca float, align 4
  %minsize = alloca float, align 4
  %a = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !7742, metadata !DIExpression()), !dbg !7743
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store float %triasize, float* %triasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %triasize.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  store i8 %where, i8* %where.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %where.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store [2 x float]* %verts, [2 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %verts.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i32 %verts_tot, i32* %verts_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verts_tot.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  store [3 x i32]* %tris, [3 x i32]** %tris.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %tris.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  store i32 %tris_tot, i32* %tris_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tris_tot.addr, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata float* %centx, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata float* %centy, metadata !7760, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.declare(metadata float* %sizex, metadata !7762, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata float* %sizey, metadata !7764, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.declare(metadata float* %minsize, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !7770, metadata !DIExpression()), !dbg !7771
  store i32 0, i32* %i1, align 4, !dbg !7771
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i32 1, i32* %i2, align 4, !dbg !7773
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7774
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %0), !dbg !7775
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7776
  %call1 = call i32 @BLI_rcti_size_y(%struct.rcti* %1), !dbg !7777
  %call2 = call i32 @min_ii(i32 %call, i32 %call1), !dbg !7778
  %conv = sitofp i32 %call2 to float, !dbg !7778
  store float %conv, float* %minsize, align 4, !dbg !7779
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7780
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !7781
  %3 = load i32, i32* %xmin, align 4, !dbg !7781
  %conv3 = sitofp i32 %3 to float, !dbg !7782
  %4 = load float, float* %minsize, align 4, !dbg !7783
  %mul = fmul float 0x3FD99999A0000000, %4, !dbg !7784
  %add = fadd float %conv3, %mul, !dbg !7785
  store float %add, float* %centx, align 4, !dbg !7786
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7787
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %5, i32 0, i32 2, !dbg !7788
  %6 = load i32, i32* %ymin, align 4, !dbg !7788
  %conv4 = sitofp i32 %6 to float, !dbg !7789
  %7 = load float, float* %minsize, align 4, !dbg !7790
  %mul5 = fmul float 5.000000e-01, %7, !dbg !7791
  %add6 = fadd float %conv4, %mul5, !dbg !7792
  store float %add6, float* %centy, align 4, !dbg !7793
  %8 = load float, float* %triasize.addr, align 4, !dbg !7794
  %mul7 = fmul float -5.000000e-01, %8, !dbg !7795
  %9 = load float, float* %minsize, align 4, !dbg !7796
  %mul8 = fmul float %mul7, %9, !dbg !7797
  store float %mul8, float* %sizey, align 4, !dbg !7798
  store float %mul8, float* %sizex, align 4, !dbg !7799
  %10 = load i8, i8* %where.addr, align 1, !dbg !7800
  %conv9 = zext i8 %10 to i32, !dbg !7800
  %cmp = icmp eq i32 %conv9, 114, !dbg !7802
  br i1 %cmp, label %if.then, label %if.else, !dbg !7803

if.then:                                          ; preds = %entry
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7804
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %11, i32 0, i32 1, !dbg !7806
  %12 = load i32, i32* %xmax, align 4, !dbg !7806
  %conv11 = sitofp i32 %12 to float, !dbg !7807
  %13 = load float, float* %minsize, align 4, !dbg !7808
  %mul12 = fmul float 0x3FD99999A0000000, %13, !dbg !7809
  %sub = fsub float %conv11, %mul12, !dbg !7810
  store float %sub, float* %centx, align 4, !dbg !7811
  %14 = load float, float* %sizex, align 4, !dbg !7812
  %fneg = fneg float %14, !dbg !7813
  store float %fneg, float* %sizex, align 4, !dbg !7814
  br label %if.end28, !dbg !7815

if.else:                                          ; preds = %entry
  %15 = load i8, i8* %where.addr, align 1, !dbg !7816
  %conv13 = zext i8 %15 to i32, !dbg !7816
  %cmp14 = icmp eq i32 %conv13, 116, !dbg !7818
  br i1 %cmp14, label %if.then16, label %if.else21, !dbg !7819

if.then16:                                        ; preds = %if.else
  %16 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7820
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 3, !dbg !7822
  %17 = load i32, i32* %ymax, align 4, !dbg !7822
  %conv17 = sitofp i32 %17 to float, !dbg !7823
  %18 = load float, float* %minsize, align 4, !dbg !7824
  %mul18 = fmul float 5.000000e-01, %18, !dbg !7825
  %sub19 = fsub float %conv17, %mul18, !dbg !7826
  store float %sub19, float* %centy, align 4, !dbg !7827
  %19 = load float, float* %sizey, align 4, !dbg !7828
  %fneg20 = fneg float %19, !dbg !7829
  store float %fneg20, float* %sizey, align 4, !dbg !7830
  store i32 0, i32* %i2, align 4, !dbg !7831
  store i32 1, i32* %i1, align 4, !dbg !7832
  br label %if.end27, !dbg !7833

if.else21:                                        ; preds = %if.else
  %20 = load i8, i8* %where.addr, align 1, !dbg !7834
  %conv22 = zext i8 %20 to i32, !dbg !7834
  %cmp23 = icmp eq i32 %conv22, 98, !dbg !7836
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !7837

if.then25:                                        ; preds = %if.else21
  %21 = load float, float* %sizex, align 4, !dbg !7838
  %fneg26 = fneg float %21, !dbg !7840
  store float %fneg26, float* %sizex, align 4, !dbg !7841
  store i32 0, i32* %i2, align 4, !dbg !7842
  store i32 1, i32* %i1, align 4, !dbg !7843
  br label %if.end, !dbg !7844

if.end:                                           ; preds = %if.then25, %if.else21
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then16
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  store i32 0, i32* %a, align 4, !dbg !7845
  br label %for.cond, !dbg !7847

for.cond:                                         ; preds = %for.inc, %if.end28
  %22 = load i32, i32* %a, align 4, !dbg !7848
  %23 = load i32, i32* %verts_tot.addr, align 4, !dbg !7850
  %cmp29 = icmp slt i32 %22, %23, !dbg !7851
  br i1 %cmp29, label %for.body, label %for.end, !dbg !7852

for.body:                                         ; preds = %for.cond
  %24 = load float, float* %sizex, align 4, !dbg !7853
  %25 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !7855
  %26 = load i32, i32* %a, align 4, !dbg !7856
  %idxprom = sext i32 %26 to i64, !dbg !7855
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %25, i64 %idxprom, !dbg !7855
  %27 = load i32, i32* %i1, align 4, !dbg !7857
  %idxprom31 = sext i32 %27 to i64, !dbg !7855
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 %idxprom31, !dbg !7855
  %28 = load float, float* %arrayidx32, align 4, !dbg !7855
  %mul33 = fmul float %24, %28, !dbg !7858
  %29 = load float, float* %centx, align 4, !dbg !7859
  %add34 = fadd float %mul33, %29, !dbg !7860
  %30 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7861
  %vec = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %30, i32 0, i32 1, !dbg !7862
  %31 = load i32, i32* %a, align 4, !dbg !7863
  %idxprom35 = sext i32 %31 to i64, !dbg !7861
  %arrayidx36 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec, i64 0, i64 %idxprom35, !dbg !7861
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !7861
  store float %add34, float* %arrayidx37, align 4, !dbg !7864
  %32 = load float, float* %sizey, align 4, !dbg !7865
  %33 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !7866
  %34 = load i32, i32* %a, align 4, !dbg !7867
  %idxprom38 = sext i32 %34 to i64, !dbg !7866
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %33, i64 %idxprom38, !dbg !7866
  %35 = load i32, i32* %i2, align 4, !dbg !7868
  %idxprom40 = sext i32 %35 to i64, !dbg !7866
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 %idxprom40, !dbg !7866
  %36 = load float, float* %arrayidx41, align 4, !dbg !7866
  %mul42 = fmul float %32, %36, !dbg !7869
  %37 = load float, float* %centy, align 4, !dbg !7870
  %add43 = fadd float %mul42, %37, !dbg !7871
  %38 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7872
  %vec44 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %38, i32 0, i32 1, !dbg !7873
  %39 = load i32, i32* %a, align 4, !dbg !7874
  %idxprom45 = sext i32 %39 to i64, !dbg !7872
  %arrayidx46 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec44, i64 0, i64 %idxprom45, !dbg !7872
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx46, i64 0, i64 1, !dbg !7872
  store float %add43, float* %arrayidx47, align 4, !dbg !7875
  br label %for.inc, !dbg !7876

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %a, align 4, !dbg !7877
  %inc = add nsw i32 %40, 1, !dbg !7877
  store i32 %inc, i32* %a, align 4, !dbg !7877
  br label %for.cond, !dbg !7878, !llvm.loop !7879

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %tris_tot.addr, align 4, !dbg !7881
  %42 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7882
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %42, i32 0, i32 0, !dbg !7883
  store i32 %41, i32* %tot, align 8, !dbg !7884
  %43 = load [3 x i32]*, [3 x i32]** %tris.addr, align 8, !dbg !7885
  %44 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !7886
  %index = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %44, i32 0, i32 2, !dbg !7887
  store [3 x i32]* %43, [3 x i32]** %index, align 8, !dbg !7888
  ret void, !dbg !7889
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_but_draw_menu_icon(%struct.uiBut* %but) #0 !dbg !7890 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7897
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 2, !dbg !7898
  %1 = load i32, i32* %flag, align 8, !dbg !7898
  %and = and i32 %1, 64, !dbg !7899
  %tobool = icmp ne i32 %and, 0, !dbg !7899
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7900

land.rhs:                                         ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7901
  %dt = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 46, !dbg !7902
  %3 = load i8, i8* %dt, align 1, !dbg !7902
  %conv = zext i8 %3 to i32, !dbg !7901
  %cmp = icmp eq i32 %conv, 2, !dbg !7903
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7904
  %land.ext = zext i1 %4 to i32, !dbg !7900
  ret i32 %land.ext, !dbg !7905
}

declare dso_local void @ui_button_text_password_hide(i8*, %struct.uiBut*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_icon(%struct.uiBut* %but, i32 %icon, float %alpha, %struct.rcti* %rect, i8 zeroext %show_menu_icon) #0 !dbg !7906 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %icon.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %rect.addr = alloca %struct.rcti*, align 8
  %show_menu_icon.addr = alloca i8, align 1
  %xs = alloca float, align 4
  %ys = alloca float, align 4
  %aspect = alloca float, align 4
  %height = alloca float, align 4
  %ofs = alloca float, align 4
  %rgb = alloca [3 x float], align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  store i8 %show_menu_icon, i8* %show_menu_icon.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_menu_icon.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.declare(metadata float* %xs, metadata !7919, metadata !DIExpression()), !dbg !7920
  store float 0.000000e+00, float* %xs, align 4, !dbg !7920
  call void @llvm.dbg.declare(metadata float* %ys, metadata !7921, metadata !DIExpression()), !dbg !7922
  store float 0.000000e+00, float* %ys, align 4, !dbg !7922
  call void @llvm.dbg.declare(metadata float* %aspect, metadata !7923, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.declare(metadata float* %height, metadata !7925, metadata !DIExpression()), !dbg !7926
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7927
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 2, !dbg !7929
  %1 = load i32, i32* %flag, align 8, !dbg !7929
  %and = and i32 %1, 128, !dbg !7930
  %tobool = icmp ne i32 %and, 0, !dbg !7930
  br i1 %tobool, label %if.then, label %if.end, !dbg !7931

if.then:                                          ; preds = %entry
  call void @glEnable(i32 3042), !dbg !7932
  %2 = load i32, i32* %icon.addr, align 4, !dbg !7934
  %3 = load float, float* %alpha.addr, align 4, !dbg !7935
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !7936
  call void @widget_draw_preview(i32 %2, float %3, %struct.rcti* %4), !dbg !7937
  call void @glDisable(i32 3042), !dbg !7938
  br label %return, !dbg !7939

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %icon.addr, align 4, !dbg !7940
  %cmp = icmp eq i32 %5, 77, !dbg !7942
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !7943

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7944
  %flag1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 2, !dbg !7945
  %7 = load i32, i32* %flag1, align 8, !dbg !7945
  %and2 = and i32 %7, 64, !dbg !7946
  %cmp3 = icmp eq i32 %and2, 0, !dbg !7947
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7948

if.then4:                                         ; preds = %land.lhs.true
  br label %return, !dbg !7949

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7950
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 74, !dbg !7951
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7951
  %aspect6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 12, !dbg !7952
  %10 = load float, float* %aspect6, align 8, !dbg !7952
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7953
  %12 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !7953
  %conv = sitofp i32 %12 to float, !dbg !7953
  %mul = fmul float %11, %conv, !dbg !7953
  %div = fdiv float %mul, 7.200000e+01, !dbg !7953
  %div7 = fdiv float %10, %div, !dbg !7954
  store float %div7, float* %aspect, align 4, !dbg !7955
  %13 = load float, float* %aspect, align 4, !dbg !7956
  %div8 = fdiv float 1.600000e+01, %13, !dbg !7957
  store float %div8, float* %height, align 4, !dbg !7958
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7959
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 4, !dbg !7959
  %15 = load i32, i32* %type, align 8, !dbg !7959
  %cmp9 = icmp eq i32 %15, 1536, !dbg !7959
  br i1 %cmp9, label %if.then22, label %lor.lhs.false, !dbg !7959

lor.lhs.false:                                    ; preds = %if.end5
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7959
  %type11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 4, !dbg !7959
  %17 = load i32, i32* %type11, align 8, !dbg !7959
  %cmp12 = icmp eq i32 %17, 1024, !dbg !7959
  br i1 %cmp12, label %if.then22, label %lor.lhs.false14, !dbg !7959

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7959
  %type15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 4, !dbg !7959
  %19 = load i32, i32* %type15, align 8, !dbg !7959
  %cmp16 = icmp eq i32 %19, 4608, !dbg !7959
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !7959

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7959
  %type19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 4, !dbg !7959
  %21 = load i32, i32* %type19, align 8, !dbg !7959
  %cmp20 = icmp eq i32 %21, 18432, !dbg !7959
  br i1 %cmp20, label %if.then22, label %if.end34, !dbg !7961

if.then22:                                        ; preds = %lor.lhs.false18, %lor.lhs.false14, %lor.lhs.false, %if.end5
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7962
  %flag23 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 2, !dbg !7965
  %23 = load i32, i32* %flag23, align 8, !dbg !7965
  %and24 = and i32 %23, 1, !dbg !7966
  %tobool25 = icmp ne i32 %and24, 0, !dbg !7966
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !7967

if.then26:                                        ; preds = %if.then22
  br label %if.end33, !dbg !7968

if.else:                                          ; preds = %if.then22
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7970
  %flag27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 2, !dbg !7972
  %25 = load i32, i32* %flag27, align 8, !dbg !7972
  %and28 = and i32 %25, 4, !dbg !7973
  %tobool29 = icmp ne i32 %and28, 0, !dbg !7973
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !7974

if.then30:                                        ; preds = %if.else
  br label %if.end32, !dbg !7975

if.else31:                                        ; preds = %if.else
  store float 5.000000e-01, float* %alpha.addr, align 4, !dbg !7977
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then26
  br label %if.end34, !dbg !7978

if.end34:                                         ; preds = %if.end33, %lor.lhs.false18
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7979
  %type35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 4, !dbg !7981
  %27 = load i32, i32* %type35, align 8, !dbg !7981
  %cmp36 = icmp eq i32 %27, 5120, !dbg !7982
  br i1 %cmp36, label %land.lhs.true38, label %if.end43, !dbg !7983

land.lhs.true38:                                  ; preds = %if.end34
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7984
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 24, !dbg !7985
  %29 = load float, float* %a1, align 8, !dbg !7985
  %cmp39 = fcmp oeq float %29, 1.000000e+00, !dbg !7986
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !7987

if.then41:                                        ; preds = %land.lhs.true38
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7988
  %a2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 25, !dbg !7989
  %31 = load float, float* %a2, align 4, !dbg !7989
  %32 = load float, float* %alpha.addr, align 4, !dbg !7990
  %mul42 = fmul float %32, %31, !dbg !7990
  store float %mul42, float* %alpha.addr, align 4, !dbg !7990
  br label %if.end43, !dbg !7991

if.end43:                                         ; preds = %if.then41, %land.lhs.true38, %if.end34
  call void @glEnable(i32 3042), !dbg !7992
  %33 = load i32, i32* %icon.addr, align 4, !dbg !7993
  %tobool44 = icmp ne i32 %33, 0, !dbg !7993
  br i1 %tobool44, label %land.lhs.true45, label %if.end116, !dbg !7995

land.lhs.true45:                                  ; preds = %if.end43
  %34 = load i32, i32* %icon.addr, align 4, !dbg !7996
  %cmp46 = icmp ne i32 %34, 77, !dbg !7997
  br i1 %cmp46, label %if.then48, label %if.end116, !dbg !7998

if.then48:                                        ; preds = %land.lhs.true45
  call void @llvm.dbg.declare(metadata float* %ofs, metadata !7999, metadata !DIExpression()), !dbg !8001
  %35 = load float, float* %aspect, align 4, !dbg !8002
  %div49 = fdiv float 1.000000e+00, %35, !dbg !8003
  store float %div49, float* %ofs, align 4, !dbg !8001
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8004
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 3, !dbg !8006
  %37 = load i32, i32* %drawflag, align 4, !dbg !8006
  %and50 = and i32 %37, 4, !dbg !8007
  %tobool51 = icmp ne i32 %and50, 0, !dbg !8007
  br i1 %tobool51, label %if.then52, label %if.else82, !dbg !8008

if.then52:                                        ; preds = %if.then48
  %38 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8009
  %block53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 74, !dbg !8012
  %39 = load %struct.uiBlock*, %struct.uiBlock** %block53, align 8, !dbg !8012
  %flag54 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %39, i32 0, i32 27, !dbg !8013
  %40 = load i32, i32* %flag54, align 8, !dbg !8013
  %and55 = and i32 %40, 1, !dbg !8014
  %tobool56 = icmp ne i32 %and55, 0, !dbg !8014
  br i1 %tobool56, label %if.then57, label %if.else73, !dbg !8015

if.then57:                                        ; preds = %if.then52
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8016
  %type58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 4, !dbg !8016
  %42 = load i32, i32* %type58, align 8, !dbg !8016
  %cmp59 = icmp eq i32 %42, 20992, !dbg !8016
  br i1 %cmp59, label %if.then65, label %lor.lhs.false61, !dbg !8016

lor.lhs.false61:                                  ; preds = %if.then57
  %43 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8016
  %type62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 4, !dbg !8016
  %44 = load i32, i32* %type62, align 8, !dbg !8016
  %cmp63 = icmp eq i32 %44, 26624, !dbg !8016
  br i1 %cmp63, label %if.then65, label %if.else68, !dbg !8019

if.then65:                                        ; preds = %lor.lhs.false61, %if.then57
  %45 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8020
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %45, i32 0, i32 0, !dbg !8021
  %46 = load i32, i32* %xmin, align 4, !dbg !8021
  %conv66 = sitofp i32 %46 to float, !dbg !8020
  %47 = load float, float* %ofs, align 4, !dbg !8022
  %mul67 = fmul float 4.000000e+00, %47, !dbg !8023
  %add = fadd float %conv66, %mul67, !dbg !8024
  store float %add, float* %xs, align 4, !dbg !8025
  br label %if.end72, !dbg !8026

if.else68:                                        ; preds = %lor.lhs.false61
  %48 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8027
  %xmin69 = getelementptr inbounds %struct.rcti, %struct.rcti* %48, i32 0, i32 0, !dbg !8028
  %49 = load i32, i32* %xmin69, align 4, !dbg !8028
  %conv70 = sitofp i32 %49 to float, !dbg !8027
  %50 = load float, float* %ofs, align 4, !dbg !8029
  %add71 = fadd float %conv70, %50, !dbg !8030
  store float %add71, float* %xs, align 4, !dbg !8031
  br label %if.end72

if.end72:                                         ; preds = %if.else68, %if.then65
  br label %if.end78, !dbg !8032

if.else73:                                        ; preds = %if.then52
  %51 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8033
  %xmin74 = getelementptr inbounds %struct.rcti, %struct.rcti* %51, i32 0, i32 0, !dbg !8035
  %52 = load i32, i32* %xmin74, align 4, !dbg !8035
  %conv75 = sitofp i32 %52 to float, !dbg !8033
  %53 = load float, float* %ofs, align 4, !dbg !8036
  %mul76 = fmul float 4.000000e+00, %53, !dbg !8037
  %add77 = fadd float %conv75, %mul76, !dbg !8038
  store float %add77, float* %xs, align 4, !dbg !8039
  br label %if.end78

if.end78:                                         ; preds = %if.else73, %if.end72
  %54 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8040
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %54, i32 0, i32 2, !dbg !8041
  %55 = load i32, i32* %ymin, align 4, !dbg !8041
  %56 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8042
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %56, i32 0, i32 3, !dbg !8043
  %57 = load i32, i32* %ymax, align 4, !dbg !8043
  %add79 = add nsw i32 %55, %57, !dbg !8044
  %conv80 = sitofp i32 %add79 to float, !dbg !8040
  %58 = load float, float* %height, align 4, !dbg !8045
  %sub = fsub float %conv80, %58, !dbg !8046
  %div81 = fdiv float %sub, 2.000000e+00, !dbg !8047
  store float %div81, float* %ys, align 4, !dbg !8048
  br label %if.end94, !dbg !8049

if.else82:                                        ; preds = %if.then48
  %59 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8050
  %xmin83 = getelementptr inbounds %struct.rcti, %struct.rcti* %59, i32 0, i32 0, !dbg !8052
  %60 = load i32, i32* %xmin83, align 4, !dbg !8052
  %61 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8053
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %61, i32 0, i32 1, !dbg !8054
  %62 = load i32, i32* %xmax, align 4, !dbg !8054
  %add84 = add nsw i32 %60, %62, !dbg !8055
  %conv85 = sitofp i32 %add84 to float, !dbg !8050
  %63 = load float, float* %height, align 4, !dbg !8056
  %sub86 = fsub float %conv85, %63, !dbg !8057
  %div87 = fdiv float %sub86, 2.000000e+00, !dbg !8058
  store float %div87, float* %xs, align 4, !dbg !8059
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8060
  %ymin88 = getelementptr inbounds %struct.rcti, %struct.rcti* %64, i32 0, i32 2, !dbg !8061
  %65 = load i32, i32* %ymin88, align 4, !dbg !8061
  %66 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8062
  %ymax89 = getelementptr inbounds %struct.rcti, %struct.rcti* %66, i32 0, i32 3, !dbg !8063
  %67 = load i32, i32* %ymax89, align 4, !dbg !8063
  %add90 = add nsw i32 %65, %67, !dbg !8064
  %conv91 = sitofp i32 %add90 to float, !dbg !8060
  %68 = load float, float* %height, align 4, !dbg !8065
  %sub92 = fsub float %conv91, %68, !dbg !8066
  %div93 = fdiv float %sub92, 2.000000e+00, !dbg !8067
  store float %div93, float* %ys, align 4, !dbg !8068
  br label %if.end94

if.end94:                                         ; preds = %if.else82, %if.end78
  %69 = load float, float* %aspect, align 4, !dbg !8069
  %cmp95 = fcmp ogt float %69, 0x3FEE666660000000, !dbg !8071
  br i1 %cmp95, label %land.lhs.true97, label %if.end107, !dbg !8072

land.lhs.true97:                                  ; preds = %if.end94
  %70 = load float, float* %aspect, align 4, !dbg !8073
  %cmp98 = fcmp olt float %70, 0x3FF0CCCCC0000000, !dbg !8074
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !8075

if.then100:                                       ; preds = %land.lhs.true97
  %71 = load float, float* %xs, align 4, !dbg !8076
  %add101 = fadd float %71, 0x3FB99999A0000000, !dbg !8078
  %conv102 = fptosi float %add101 to i32, !dbg !8079
  %conv103 = sitofp i32 %conv102 to float, !dbg !8079
  store float %conv103, float* %xs, align 4, !dbg !8080
  %72 = load float, float* %ys, align 4, !dbg !8081
  %add104 = fadd float %72, 0x3FB99999A0000000, !dbg !8082
  %conv105 = fptosi float %add104 to i32, !dbg !8083
  %conv106 = sitofp i32 %conv105 to float, !dbg !8083
  store float %conv106, float* %ys, align 4, !dbg !8084
  br label %if.end107, !dbg !8085

if.end107:                                        ; preds = %if.then100, %land.lhs.true97, %if.end94
  %73 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8086
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %73, i32 0, i32 64, !dbg !8088
  %74 = load i8*, i8** %dragpoin, align 8, !dbg !8088
  %tobool108 = icmp ne i8* %74, null, !dbg !8086
  br i1 %tobool108, label %land.lhs.true109, label %if.else114, !dbg !8089

land.lhs.true109:                                 ; preds = %if.end107
  %75 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8090
  %flag110 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %75, i32 0, i32 2, !dbg !8091
  %76 = load i32, i32* %flag110, align 8, !dbg !8091
  %and111 = and i32 %76, 4, !dbg !8092
  %tobool112 = icmp ne i32 %and111, 0, !dbg !8092
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !8093

if.then113:                                       ; preds = %land.lhs.true109
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !8094, metadata !DIExpression()), !dbg !8096
  %77 = bitcast [3 x float]* %rgb to i8*, !dbg !8096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 bitcast ([3 x float]* @__const.widget_draw_icon.rgb to i8*), i64 12, i1 false), !dbg !8096
  %78 = load float, float* %xs, align 4, !dbg !8097
  %79 = load float, float* %ys, align 4, !dbg !8098
  %80 = load i32, i32* %icon.addr, align 4, !dbg !8099
  %81 = load float, float* %aspect, align 4, !dbg !8100
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !8101
  call void @UI_icon_draw_aspect_color(float %78, float %79, i32 %80, float %81, float* %arraydecay), !dbg !8102
  br label %if.end115, !dbg !8103

if.else114:                                       ; preds = %land.lhs.true109, %if.end107
  %82 = load float, float* %xs, align 4, !dbg !8104
  %83 = load float, float* %ys, align 4, !dbg !8105
  %84 = load i32, i32* %icon.addr, align 4, !dbg !8106
  %85 = load float, float* %aspect, align 4, !dbg !8107
  %86 = load float, float* %alpha.addr, align 4, !dbg !8108
  call void @UI_icon_draw_aspect(float %82, float %83, i32 %84, float %85, float %86), !dbg !8109
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %if.then113
  br label %if.end116, !dbg !8110

if.end116:                                        ; preds = %if.end115, %land.lhs.true45, %if.end43
  %87 = load i8, i8* %show_menu_icon.addr, align 1, !dbg !8111
  %tobool117 = icmp ne i8 %87, 0, !dbg !8111
  br i1 %tobool117, label %if.then118, label %if.end133, !dbg !8113

if.then118:                                       ; preds = %if.end116
  %88 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8114
  %xmax119 = getelementptr inbounds %struct.rcti, %struct.rcti* %88, i32 0, i32 1, !dbg !8116
  %89 = load i32, i32* %xmax119, align 4, !dbg !8116
  %conv120 = sitofp i32 %89 to float, !dbg !8114
  %90 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8117
  %91 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !8117
  %conv121 = sitofp i32 %91 to float, !dbg !8117
  %mul122 = fmul float %90, %conv121, !dbg !8117
  %div123 = fdiv float %mul122, 7.200000e+01, !dbg !8117
  %mul124 = fmul float 1.600000e+01, %div123, !dbg !8117
  %sub125 = fsub float %conv120, %mul124, !dbg !8118
  %92 = load float, float* %aspect, align 4, !dbg !8119
  %sub126 = fsub float %sub125, %92, !dbg !8120
  store float %sub126, float* %xs, align 4, !dbg !8121
  %93 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8122
  %ymin127 = getelementptr inbounds %struct.rcti, %struct.rcti* %93, i32 0, i32 2, !dbg !8123
  %94 = load i32, i32* %ymin127, align 4, !dbg !8123
  %95 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8124
  %ymax128 = getelementptr inbounds %struct.rcti, %struct.rcti* %95, i32 0, i32 3, !dbg !8125
  %96 = load i32, i32* %ymax128, align 4, !dbg !8125
  %add129 = add nsw i32 %94, %96, !dbg !8126
  %conv130 = sitofp i32 %add129 to float, !dbg !8122
  %97 = load float, float* %height, align 4, !dbg !8127
  %sub131 = fsub float %conv130, %97, !dbg !8128
  %div132 = fdiv float %sub131, 2.000000e+00, !dbg !8129
  store float %div132, float* %ys, align 4, !dbg !8130
  %98 = load float, float* %xs, align 4, !dbg !8131
  %99 = load float, float* %ys, align 4, !dbg !8132
  %100 = load float, float* %aspect, align 4, !dbg !8133
  %101 = load float, float* %alpha.addr, align 4, !dbg !8134
  call void @UI_icon_draw_aspect(float %98, float %99, i32 28, float %100, float %101), !dbg !8135
  br label %if.end133, !dbg !8136

if.end133:                                        ; preds = %if.then118, %if.end116
  call void @glDisable(i32 3042), !dbg !8137
  br label %return, !dbg !8138

return:                                           ; preds = %if.end133, %if.then4, %if.then
  ret void, !dbg !8138
}

declare dso_local zeroext i8 @ui_block_is_menu(%struct.uiBlock*) #2

declare dso_local zeroext i8 @ui_is_but_search_unlink_visible(%struct.uiBut*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_cursor(%struct.uiFontStyle* %fstyle, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !8139 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %border = alloca i32, align 4
  %okwidth = alloca i32, align 4
  %len = alloca i32, align 4
  %width = alloca float, align 4
  %bytes = alloca i32, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata i32* %border, metadata !8148, metadata !DIExpression()), !dbg !8149
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8150
  %conv = sext i16 %0 to i32, !dbg !8150
  %conv1 = sitofp i32 %conv to float, !dbg !8150
  %mul = fmul float 2.500000e-01, %conv1, !dbg !8150
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8150
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 74, !dbg !8150
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8150
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 12, !dbg !8150
  %3 = load float, float* %aspect, align 8, !dbg !8150
  %div = fdiv float %mul, %3, !dbg !8150
  %add = fadd float %div, 5.000000e-01, !dbg !8151
  %conv2 = fptosi float %add to i32, !dbg !8152
  store i32 %conv2, i32* %border, align 4, !dbg !8149
  call void @llvm.dbg.declare(metadata i32* %okwidth, metadata !8153, metadata !DIExpression()), !dbg !8154
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8155
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %4), !dbg !8156
  %5 = load i32, i32* %border, align 4, !dbg !8157
  %sub = sub nsw i32 %call, %5, !dbg !8158
  %call3 = call i32 @max_ii(i32 %sub, i32 0), !dbg !8159
  store i32 %call3, i32* %okwidth, align 4, !dbg !8154
  %6 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8160
  call void @uiStyleFontSet(%struct.uiFontStyle* %6), !dbg !8161
  %7 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8162
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %7, i32 0, i32 2, !dbg !8164
  %8 = load i16, i16* %kerning, align 4, !dbg !8164
  %conv4 = sext i16 %8 to i32, !dbg !8162
  %cmp = icmp eq i32 %conv4, 1, !dbg !8165
  br i1 %cmp, label %if.then, label %if.end, !dbg !8166

if.then:                                          ; preds = %entry
  %9 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8167
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %9, i32 0, i32 0, !dbg !8168
  %10 = load i16, i16* %uifont_id, align 4, !dbg !8168
  %conv6 = sext i16 %10 to i32, !dbg !8167
  call void @BLF_enable(i32 %conv6, i32 8), !dbg !8169
  br label %if.end, !dbg !8169

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8170
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 11, !dbg !8172
  %12 = load i16, i16* %ofs, align 2, !dbg !8172
  %conv7 = sext i16 %12 to i32, !dbg !8170
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8173
  %pos = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 12, !dbg !8174
  %14 = load i16, i16* %pos, align 4, !dbg !8174
  %conv8 = sext i16 %14 to i32, !dbg !8173
  %cmp9 = icmp sgt i32 %conv7, %conv8, !dbg !8175
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !8176

if.then11:                                        ; preds = %if.end
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8177
  %pos12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 12, !dbg !8178
  %16 = load i16, i16* %pos12, align 4, !dbg !8178
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8179
  %ofs13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 11, !dbg !8180
  store i16 %16, i16* %ofs13, align 2, !dbg !8181
  br label %if.end14, !dbg !8179

if.end14:                                         ; preds = %if.then11, %if.end
  %18 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8182
  %uifont_id15 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %18, i32 0, i32 0, !dbg !8184
  %19 = load i16, i16* %uifont_id15, align 4, !dbg !8184
  %conv16 = sext i16 %19 to i32, !dbg !8182
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8185
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 69, !dbg !8186
  %21 = load i8*, i8** %editstr, align 8, !dbg !8186
  %call17 = call float @BLF_width(i32 %conv16, i8* %21, i64 2147483647), !dbg !8187
  %22 = load i32, i32* %okwidth, align 4, !dbg !8188
  %conv18 = sitofp i32 %22 to float, !dbg !8188
  %cmp19 = fcmp ole float %call17, %conv18, !dbg !8189
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !8190

if.then21:                                        ; preds = %if.end14
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8191
  %ofs22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 11, !dbg !8192
  store i16 0, i16* %ofs22, align 2, !dbg !8193
  br label %if.end23, !dbg !8191

if.end23:                                         ; preds = %if.then21, %if.end14
  %24 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8194
  %uifont_id24 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %24, i32 0, i32 0, !dbg !8195
  %25 = load i16, i16* %uifont_id24, align 4, !dbg !8195
  %conv25 = sext i16 %25 to i32, !dbg !8194
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8196
  %editstr26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 69, !dbg !8197
  %27 = load i8*, i8** %editstr26, align 8, !dbg !8197
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8198
  %ofs27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 11, !dbg !8199
  %29 = load i16, i16* %ofs27, align 2, !dbg !8199
  %conv28 = sext i16 %29 to i32, !dbg !8198
  %idx.ext = sext i32 %conv28 to i64, !dbg !8200
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !8200
  %call29 = call float @BLF_width(i32 %conv25, i8* %add.ptr, i64 2147483647), !dbg !8201
  %conv30 = fptosi float %call29 to i16, !dbg !8201
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8202
  %strwidth = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 9, !dbg !8203
  store i16 %conv30, i16* %strwidth, align 2, !dbg !8204
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8205
  %strwidth31 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 9, !dbg !8207
  %32 = load i16, i16* %strwidth31, align 2, !dbg !8207
  %conv32 = sext i16 %32 to i32, !dbg !8205
  %33 = load i32, i32* %okwidth, align 4, !dbg !8208
  %cmp33 = icmp sgt i32 %conv32, %33, !dbg !8209
  br i1 %cmp33, label %if.then35, label %if.end104, !dbg !8210

if.then35:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8211, metadata !DIExpression()), !dbg !8213
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8214
  %editstr36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 69, !dbg !8215
  %35 = load i8*, i8** %editstr36, align 8, !dbg !8215
  %call37 = call i64 @strlen(i8* %35) #7, !dbg !8216
  %conv38 = trunc i64 %call37 to i32, !dbg !8216
  store i32 %conv38, i32* %len, align 4, !dbg !8213
  br label %while.cond, !dbg !8217

while.cond:                                       ; preds = %if.end103, %if.then35
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8218
  %strwidth39 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 9, !dbg !8219
  %37 = load i16, i16* %strwidth39, align 2, !dbg !8219
  %conv40 = sext i16 %37 to i32, !dbg !8218
  %38 = load i32, i32* %okwidth, align 4, !dbg !8220
  %cmp41 = icmp sgt i32 %conv40, %38, !dbg !8221
  br i1 %cmp41, label %while.body, label %while.end, !dbg !8217

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata float* %width, metadata !8222, metadata !DIExpression()), !dbg !8224
  %39 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8225
  %uifont_id43 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %39, i32 0, i32 0, !dbg !8226
  %40 = load i16, i16* %uifont_id43, align 4, !dbg !8226
  %conv44 = sext i16 %40 to i32, !dbg !8225
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8227
  %editstr45 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 69, !dbg !8228
  %42 = load i8*, i8** %editstr45, align 8, !dbg !8228
  %43 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8229
  %ofs46 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 11, !dbg !8230
  %44 = load i16, i16* %ofs46, align 2, !dbg !8230
  %conv47 = sext i16 %44 to i32, !dbg !8229
  %idx.ext48 = sext i32 %conv47 to i64, !dbg !8231
  %add.ptr49 = getelementptr inbounds i8, i8* %42, i64 %idx.ext48, !dbg !8231
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8232
  %pos50 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 12, !dbg !8233
  %46 = load i16, i16* %pos50, align 4, !dbg !8233
  %conv51 = sext i16 %46 to i32, !dbg !8232
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8234
  %ofs52 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 11, !dbg !8235
  %48 = load i16, i16* %ofs52, align 2, !dbg !8235
  %conv53 = sext i16 %48 to i32, !dbg !8234
  %sub54 = sub nsw i32 %conv51, %conv53, !dbg !8236
  %conv55 = sext i32 %sub54 to i64, !dbg !8237
  %call56 = call float @BLF_width(i32 %conv44, i8* %add.ptr49, i64 %conv55), !dbg !8238
  store float %call56, float* %width, align 4, !dbg !8239
  %49 = load float, float* %width, align 4, !dbg !8240
  %50 = load i32, i32* %okwidth, align 4, !dbg !8242
  %sub57 = sub nsw i32 %50, 20, !dbg !8243
  %conv58 = sitofp i32 %sub57 to float, !dbg !8242
  %cmp59 = fcmp ogt float %49, %conv58, !dbg !8244
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !8245

if.then61:                                        ; preds = %while.body
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8246
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8248
  %editstr62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 69, !dbg !8249
  %53 = load i8*, i8** %editstr62, align 8, !dbg !8249
  call void @ui_text_clip_give_next_off(%struct.uiBut* %51, i8* %53), !dbg !8250
  br label %if.end83, !dbg !8251

if.else:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !8252, metadata !DIExpression()), !dbg !8254
  %54 = load float, float* %width, align 4, !dbg !8255
  %cmp63 = fcmp olt float %54, 2.000000e+01, !dbg !8257
  br i1 %cmp63, label %land.lhs.true, label %if.end71, !dbg !8258

land.lhs.true:                                    ; preds = %if.else
  %55 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8259
  %ofs65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 11, !dbg !8260
  %56 = load i16, i16* %ofs65, align 2, !dbg !8260
  %conv66 = sext i16 %56 to i32, !dbg !8259
  %cmp67 = icmp sgt i32 %conv66, 0, !dbg !8261
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !8262

if.then69:                                        ; preds = %land.lhs.true
  %57 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8263
  %58 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8264
  %editstr70 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %58, i32 0, i32 69, !dbg !8265
  %59 = load i8*, i8** %editstr70, align 8, !dbg !8265
  call void @ui_text_clip_give_prev_off(%struct.uiBut* %57, i8* %59), !dbg !8266
  br label %if.end71, !dbg !8266

if.end71:                                         ; preds = %if.then69, %land.lhs.true, %if.else
  %60 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8267
  %editstr72 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %60, i32 0, i32 69, !dbg !8268
  %61 = load i8*, i8** %editstr72, align 8, !dbg !8268
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8269
  %editstr73 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 69, !dbg !8270
  %63 = load i8*, i8** %editstr73, align 8, !dbg !8270
  %64 = load i32, i32* %len, align 4, !dbg !8271
  %idx.ext74 = sext i32 %64 to i64, !dbg !8272
  %add.ptr75 = getelementptr inbounds i8, i8* %63, i64 %idx.ext74, !dbg !8272
  %call76 = call i8* @BLI_str_find_prev_char_utf8(i8* %61, i8* %add.ptr75), !dbg !8273
  %call77 = call i32 @BLI_str_utf8_size(i8* %call76), !dbg !8274
  store i32 %call77, i32* %bytes, align 4, !dbg !8275
  %65 = load i32, i32* %bytes, align 4, !dbg !8276
  %cmp78 = icmp eq i32 %65, -1, !dbg !8278
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !8279

if.then80:                                        ; preds = %if.end71
  store i32 1, i32* %bytes, align 4, !dbg !8280
  br label %if.end81, !dbg !8281

if.end81:                                         ; preds = %if.then80, %if.end71
  %66 = load i32, i32* %bytes, align 4, !dbg !8282
  %67 = load i32, i32* %len, align 4, !dbg !8283
  %sub82 = sub nsw i32 %67, %66, !dbg !8283
  store i32 %sub82, i32* %len, align 4, !dbg !8283
  br label %if.end83

if.end83:                                         ; preds = %if.end81, %if.then61
  %68 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8284
  %uifont_id84 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %68, i32 0, i32 0, !dbg !8285
  %69 = load i16, i16* %uifont_id84, align 4, !dbg !8285
  %conv85 = sext i16 %69 to i32, !dbg !8284
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8286
  %editstr86 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 69, !dbg !8287
  %71 = load i8*, i8** %editstr86, align 8, !dbg !8287
  %72 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8288
  %ofs87 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %72, i32 0, i32 11, !dbg !8289
  %73 = load i16, i16* %ofs87, align 2, !dbg !8289
  %conv88 = sext i16 %73 to i32, !dbg !8288
  %idx.ext89 = sext i32 %conv88 to i64, !dbg !8290
  %add.ptr90 = getelementptr inbounds i8, i8* %71, i64 %idx.ext89, !dbg !8290
  %74 = load i32, i32* %len, align 4, !dbg !8291
  %75 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8292
  %ofs91 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %75, i32 0, i32 11, !dbg !8293
  %76 = load i16, i16* %ofs91, align 2, !dbg !8293
  %conv92 = sext i16 %76 to i32, !dbg !8292
  %sub93 = sub nsw i32 %74, %conv92, !dbg !8294
  %conv94 = sext i32 %sub93 to i64, !dbg !8291
  %call95 = call float @BLF_width(i32 %conv85, i8* %add.ptr90, i64 %conv94), !dbg !8295
  %conv96 = fptosi float %call95 to i16, !dbg !8295
  %77 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8296
  %strwidth97 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %77, i32 0, i32 9, !dbg !8297
  store i16 %conv96, i16* %strwidth97, align 2, !dbg !8298
  %78 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8299
  %strwidth98 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %78, i32 0, i32 9, !dbg !8301
  %79 = load i16, i16* %strwidth98, align 2, !dbg !8301
  %conv99 = sext i16 %79 to i32, !dbg !8299
  %cmp100 = icmp slt i32 %conv99, 10, !dbg !8302
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !8303

if.then102:                                       ; preds = %if.end83
  br label %while.end, !dbg !8304

if.end103:                                        ; preds = %if.end83
  br label %while.cond, !dbg !8217, !llvm.loop !8305

while.end:                                        ; preds = %if.then102, %while.cond
  br label %if.end104, !dbg !8307

if.end104:                                        ; preds = %while.end, %if.end23
  %80 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8308
  %kerning105 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %80, i32 0, i32 2, !dbg !8310
  %81 = load i16, i16* %kerning105, align 4, !dbg !8310
  %conv106 = sext i16 %81 to i32, !dbg !8308
  %cmp107 = icmp eq i32 %conv106, 1, !dbg !8311
  br i1 %cmp107, label %if.then109, label %if.end112, !dbg !8312

if.then109:                                       ; preds = %if.end104
  %82 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8313
  %uifont_id110 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %82, i32 0, i32 0, !dbg !8315
  %83 = load i16, i16* %uifont_id110, align 4, !dbg !8315
  %conv111 = sext i16 %83 to i32, !dbg !8313
  call void @BLF_disable(i32 %conv111, i32 8), !dbg !8316
  br label %if.end112, !dbg !8317

if.end112:                                        ; preds = %if.then109, %if.end104
  ret void, !dbg !8318
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_right_label(%struct.uiFontStyle* %fstyle, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !8319 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %border = alloca i32, align 4
  %okwidth = alloca i32, align 4
  %cpoin = alloca i8*, align 8
  %drawstr_len = alloca i32, align 4
  %cpend = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %prev_utf8 = alloca i8*, align 8
  %bytes = alloca i32, align 4
  %strwidth105 = alloca float, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.declare(metadata i32* %border, metadata !8326, metadata !DIExpression()), !dbg !8327
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8328
  %conv = sext i16 %0 to i32, !dbg !8328
  %conv1 = sitofp i32 %conv to float, !dbg !8328
  %mul = fmul float 2.500000e-01, %conv1, !dbg !8328
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8328
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 74, !dbg !8328
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8328
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 12, !dbg !8328
  %3 = load float, float* %aspect, align 8, !dbg !8328
  %div = fdiv float %mul, %3, !dbg !8328
  %add = fadd float %div, 1.000000e+00, !dbg !8329
  %conv2 = fptosi float %add to i32, !dbg !8328
  store i32 %conv2, i32* %border, align 4, !dbg !8327
  call void @llvm.dbg.declare(metadata i32* %okwidth, metadata !8330, metadata !DIExpression()), !dbg !8331
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8332
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %4), !dbg !8333
  %5 = load i32, i32* %border, align 4, !dbg !8334
  %sub = sub nsw i32 %call, %5, !dbg !8335
  %call3 = call i32 @max_ii(i32 %sub, i32 0), !dbg !8336
  store i32 %call3, i32* %okwidth, align 4, !dbg !8331
  call void @llvm.dbg.declare(metadata i8** %cpoin, metadata !8337, metadata !DIExpression()), !dbg !8338
  store i8* null, i8** %cpoin, align 8, !dbg !8338
  call void @llvm.dbg.declare(metadata i32* %drawstr_len, metadata !8339, metadata !DIExpression()), !dbg !8340
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8341
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 17, !dbg !8342
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !8341
  %call4 = call i64 @strlen(i8* %arraydecay) #7, !dbg !8343
  %conv5 = trunc i64 %call4 to i32, !dbg !8343
  store i32 %conv5, i32* %drawstr_len, align 4, !dbg !8340
  call void @llvm.dbg.declare(metadata i8** %cpend, metadata !8344, metadata !DIExpression()), !dbg !8345
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8346
  %drawstr6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 17, !dbg !8347
  %arraydecay7 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr6, i64 0, i64 0, !dbg !8346
  %8 = load i32, i32* %drawstr_len, align 4, !dbg !8348
  %idx.ext = sext i32 %8 to i64, !dbg !8349
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay7, i64 %idx.ext, !dbg !8349
  store i8* %add.ptr, i8** %cpend, align 8, !dbg !8345
  %9 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8350
  call void @uiStyleFontSet(%struct.uiFontStyle* %9), !dbg !8351
  %10 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8352
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %10, i32 0, i32 2, !dbg !8354
  %11 = load i16, i16* %kerning, align 4, !dbg !8354
  %conv8 = sext i16 %11 to i32, !dbg !8352
  %cmp = icmp eq i32 %conv8, 1, !dbg !8355
  br i1 %cmp, label %if.then, label %if.end, !dbg !8356

if.then:                                          ; preds = %entry
  %12 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8357
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %12, i32 0, i32 0, !dbg !8358
  %13 = load i16, i16* %uifont_id, align 4, !dbg !8358
  %conv10 = sext i16 %13 to i32, !dbg !8357
  call void @BLF_enable(i32 %conv10, i32 8), !dbg !8359
  br label %if.end, !dbg !8359

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8360
  %uifont_id11 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %14, i32 0, i32 0, !dbg !8361
  %15 = load i16, i16* %uifont_id11, align 4, !dbg !8361
  %conv12 = sext i16 %15 to i32, !dbg !8360
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8362
  %drawstr13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 17, !dbg !8363
  %arraydecay14 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr13, i64 0, i64 0, !dbg !8362
  %call15 = call float @BLF_width(i32 %conv12, i8* %arraydecay14, i64 400), !dbg !8364
  %conv16 = fptosi float %call15 to i16, !dbg !8364
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8365
  %strwidth = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 9, !dbg !8366
  store i16 %conv16, i16* %strwidth, align 2, !dbg !8367
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8368
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 11, !dbg !8369
  store i16 0, i16* %ofs, align 2, !dbg !8370
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8371
  %drawstr17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 17, !dbg !8372
  %arraydecay18 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr17, i64 0, i64 0, !dbg !8371
  %call19 = call i8* @strrchr(i8* %arraydecay18, i32 58) #7, !dbg !8373
  store i8* %call19, i8** %cpoin, align 8, !dbg !8374
  %20 = load i8*, i8** %cpoin, align 8, !dbg !8375
  %tobool = icmp ne i8* %20, null, !dbg !8375
  br i1 %tobool, label %land.lhs.true, label %if.end99, !dbg !8377

land.lhs.true:                                    ; preds = %if.end
  %21 = load i8*, i8** %cpoin, align 8, !dbg !8378
  %22 = load i8*, i8** %cpend, align 8, !dbg !8379
  %add.ptr20 = getelementptr inbounds i8, i8* %22, i64 -2, !dbg !8380
  %cmp21 = icmp ult i8* %21, %add.ptr20, !dbg !8381
  br i1 %cmp21, label %if.then23, label %if.end99, !dbg !8382

if.then23:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !8383, metadata !DIExpression()), !dbg !8385
  %23 = load i8*, i8** %cpoin, align 8, !dbg !8386
  store i8* %23, i8** %cp2, align 8, !dbg !8385
  br label %while.cond, !dbg !8387

while.cond:                                       ; preds = %if.end63, %if.then23
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8388
  %strwidth24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 9, !dbg !8389
  %25 = load i16, i16* %strwidth24, align 2, !dbg !8389
  %conv25 = sext i16 %25 to i32, !dbg !8388
  %26 = load i32, i32* %okwidth, align 4, !dbg !8390
  %cmp26 = icmp sgt i32 %conv25, %26, !dbg !8391
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !8392

land.rhs:                                         ; preds = %while.cond
  %27 = load i8*, i8** %cp2, align 8, !dbg !8393
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8394
  %drawstr28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 17, !dbg !8395
  %arraydecay29 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr28, i64 0, i64 0, !dbg !8394
  %cmp30 = icmp ugt i8* %27, %arraydecay29, !dbg !8396
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %29 = phi i1 [ false, %while.cond ], [ %cmp30, %land.rhs ], !dbg !8397
  br i1 %29, label %while.body, label %while.end, !dbg !8387

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %prev_utf8, metadata !8398, metadata !DIExpression()), !dbg !8400
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8401
  %drawstr32 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 17, !dbg !8402
  %arraydecay33 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr32, i64 0, i64 0, !dbg !8401
  %31 = load i8*, i8** %cp2, align 8, !dbg !8403
  %call34 = call i8* @BLI_str_find_prev_char_utf8(i8* %arraydecay33, i8* %31), !dbg !8404
  store i8* %call34, i8** %prev_utf8, align 8, !dbg !8400
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !8405, metadata !DIExpression()), !dbg !8406
  %32 = load i8*, i8** %cp2, align 8, !dbg !8407
  %33 = load i8*, i8** %prev_utf8, align 8, !dbg !8408
  %sub.ptr.lhs.cast = ptrtoint i8* %32 to i64, !dbg !8409
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i64, !dbg !8409
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8409
  %conv35 = trunc i64 %sub.ptr.sub to i32, !dbg !8407
  store i32 %conv35, i32* %bytes, align 4, !dbg !8406
  %34 = load i8*, i8** %cp2, align 8, !dbg !8410
  %35 = load i32, i32* %bytes, align 4, !dbg !8411
  %idx.ext36 = sext i32 %35 to i64, !dbg !8412
  %idx.neg = sub i64 0, %idx.ext36, !dbg !8412
  %add.ptr37 = getelementptr inbounds i8, i8* %34, i64 %idx.neg, !dbg !8412
  %36 = load i8*, i8** %cp2, align 8, !dbg !8413
  %37 = load i32, i32* %drawstr_len, align 4, !dbg !8414
  %add38 = add nsw i32 %37, 1, !dbg !8415
  %conv39 = sext i32 %add38 to i64, !dbg !8414
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr37, i8* align 1 %36, i64 %conv39, i1 false), !dbg !8416
  %38 = load i32, i32* %bytes, align 4, !dbg !8417
  %39 = load i8*, i8** %cp2, align 8, !dbg !8418
  %idx.ext40 = sext i32 %38 to i64, !dbg !8418
  %idx.neg41 = sub i64 0, %idx.ext40, !dbg !8418
  %add.ptr42 = getelementptr inbounds i8, i8* %39, i64 %idx.neg41, !dbg !8418
  store i8* %add.ptr42, i8** %cp2, align 8, !dbg !8418
  %40 = load i32, i32* %bytes, align 4, !dbg !8419
  %41 = load i32, i32* %drawstr_len, align 4, !dbg !8420
  %sub43 = sub nsw i32 %41, %40, !dbg !8420
  store i32 %sub43, i32* %drawstr_len, align 4, !dbg !8420
  %42 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8421
  %uifont_id44 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %42, i32 0, i32 0, !dbg !8422
  %43 = load i16, i16* %uifont_id44, align 4, !dbg !8422
  %conv45 = sext i16 %43 to i32, !dbg !8421
  %44 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8423
  %drawstr46 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 17, !dbg !8424
  %arraydecay47 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr46, i64 0, i64 0, !dbg !8423
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8425
  %ofs48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 11, !dbg !8426
  %46 = load i16, i16* %ofs48, align 2, !dbg !8426
  %conv49 = sext i16 %46 to i32, !dbg !8425
  %idx.ext50 = sext i32 %conv49 to i64, !dbg !8427
  %add.ptr51 = getelementptr inbounds i8, i8* %arraydecay47, i64 %idx.ext50, !dbg !8427
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8428
  %ofs52 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 11, !dbg !8429
  %48 = load i16, i16* %ofs52, align 2, !dbg !8429
  %conv53 = sext i16 %48 to i64, !dbg !8428
  %sub54 = sub i64 400, %conv53, !dbg !8430
  %call55 = call float @BLF_width(i32 %conv45, i8* %add.ptr51, i64 %sub54), !dbg !8431
  %conv56 = fptosi float %call55 to i16, !dbg !8431
  %49 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8432
  %strwidth57 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 9, !dbg !8433
  store i16 %conv56, i16* %strwidth57, align 2, !dbg !8434
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8435
  %strwidth58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 9, !dbg !8437
  %51 = load i16, i16* %strwidth58, align 2, !dbg !8437
  %conv59 = sext i16 %51 to i32, !dbg !8435
  %cmp60 = icmp slt i32 %conv59, 10, !dbg !8438
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !8439

if.then62:                                        ; preds = %while.body
  br label %while.end, !dbg !8440

if.end63:                                         ; preds = %while.body
  br label %while.cond, !dbg !8387, !llvm.loop !8441

while.end:                                        ; preds = %if.then62, %land.end
  br label %while.cond64, !dbg !8443

while.cond64:                                     ; preds = %if.end97, %while.end
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8444
  %strwidth65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 9, !dbg !8445
  %53 = load i16, i16* %strwidth65, align 2, !dbg !8445
  %conv66 = sext i16 %53 to i32, !dbg !8444
  %54 = load i32, i32* %okwidth, align 4, !dbg !8446
  %cmp67 = icmp sgt i32 %conv66, %54, !dbg !8447
  br i1 %cmp67, label %land.rhs69, label %land.end74, !dbg !8448

land.rhs69:                                       ; preds = %while.cond64
  %55 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8449
  %ofs70 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 11, !dbg !8450
  %56 = load i16, i16* %ofs70, align 2, !dbg !8450
  %conv71 = sext i16 %56 to i32, !dbg !8449
  %cmp72 = icmp slt i32 %conv71, 2, !dbg !8451
  br label %land.end74

land.end74:                                       ; preds = %land.rhs69, %while.cond64
  %57 = phi i1 [ false, %while.cond64 ], [ %cmp72, %land.rhs69 ], !dbg !8397
  br i1 %57, label %while.body75, label %while.end98, !dbg !8443

while.body75:                                     ; preds = %land.end74
  %58 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8452
  %59 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8454
  %drawstr76 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 17, !dbg !8455
  %arraydecay77 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr76, i64 0, i64 0, !dbg !8454
  call void @ui_text_clip_give_next_off(%struct.uiBut* %58, i8* %arraydecay77), !dbg !8456
  %60 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8457
  %uifont_id78 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %60, i32 0, i32 0, !dbg !8458
  %61 = load i16, i16* %uifont_id78, align 4, !dbg !8458
  %conv79 = sext i16 %61 to i32, !dbg !8457
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8459
  %drawstr80 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 17, !dbg !8460
  %arraydecay81 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr80, i64 0, i64 0, !dbg !8459
  %63 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8461
  %ofs82 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 11, !dbg !8462
  %64 = load i16, i16* %ofs82, align 2, !dbg !8462
  %conv83 = sext i16 %64 to i32, !dbg !8461
  %idx.ext84 = sext i32 %conv83 to i64, !dbg !8463
  %add.ptr85 = getelementptr inbounds i8, i8* %arraydecay81, i64 %idx.ext84, !dbg !8463
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8464
  %ofs86 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 11, !dbg !8465
  %66 = load i16, i16* %ofs86, align 2, !dbg !8465
  %conv87 = sext i16 %66 to i64, !dbg !8464
  %sub88 = sub i64 400, %conv87, !dbg !8466
  %call89 = call float @BLF_width(i32 %conv79, i8* %add.ptr85, i64 %sub88), !dbg !8467
  %conv90 = fptosi float %call89 to i16, !dbg !8467
  %67 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8468
  %strwidth91 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %67, i32 0, i32 9, !dbg !8469
  store i16 %conv90, i16* %strwidth91, align 2, !dbg !8470
  %68 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8471
  %strwidth92 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %68, i32 0, i32 9, !dbg !8473
  %69 = load i16, i16* %strwidth92, align 2, !dbg !8473
  %conv93 = sext i16 %69 to i32, !dbg !8471
  %cmp94 = icmp slt i32 %conv93, 10, !dbg !8474
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !8475

if.then96:                                        ; preds = %while.body75
  br label %while.end98, !dbg !8476

if.end97:                                         ; preds = %while.body75
  br label %while.cond64, !dbg !8443, !llvm.loop !8477

while.end98:                                      ; preds = %if.then96, %land.end74
  br label %if.end99, !dbg !8479

if.end99:                                         ; preds = %while.end98, %land.lhs.true, %if.end
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8480
  %strwidth100 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 9, !dbg !8482
  %71 = load i16, i16* %strwidth100, align 2, !dbg !8482
  %conv101 = sext i16 %71 to i32, !dbg !8480
  %72 = load i32, i32* %okwidth, align 4, !dbg !8483
  %cmp102 = icmp sgt i32 %conv101, %72, !dbg !8484
  br i1 %cmp102, label %if.then104, label %if.end127, !dbg !8485

if.then104:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata float* %strwidth105, metadata !8486, metadata !DIExpression()), !dbg !8488
  %73 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8489
  %uifont_id106 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %73, i32 0, i32 0, !dbg !8490
  %74 = load i16, i16* %uifont_id106, align 4, !dbg !8490
  %conv107 = sext i16 %74 to i32, !dbg !8489
  %75 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8491
  %drawstr108 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %75, i32 0, i32 17, !dbg !8492
  %arraydecay109 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr108, i64 0, i64 0, !dbg !8491
  %76 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8493
  %ofs110 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 11, !dbg !8494
  %77 = load i16, i16* %ofs110, align 2, !dbg !8494
  %conv111 = sext i16 %77 to i32, !dbg !8493
  %idx.ext112 = sext i32 %conv111 to i64, !dbg !8495
  %add.ptr113 = getelementptr inbounds i8, i8* %arraydecay109, i64 %idx.ext112, !dbg !8495
  %78 = load i32, i32* %drawstr_len, align 4, !dbg !8496
  %79 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8497
  %ofs114 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %79, i32 0, i32 11, !dbg !8498
  %80 = load i16, i16* %ofs114, align 2, !dbg !8498
  %conv115 = sext i16 %80 to i32, !dbg !8497
  %sub116 = sub nsw i32 %78, %conv115, !dbg !8499
  %conv117 = sext i32 %sub116 to i64, !dbg !8496
  %81 = load i32, i32* %okwidth, align 4, !dbg !8500
  %conv118 = sitofp i32 %81 to float, !dbg !8500
  %call119 = call i64 @BLF_width_to_strlen(i32 %conv107, i8* %add.ptr113, i64 %conv117, float %conv118, float* %strwidth105), !dbg !8501
  %82 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8502
  %ofs120 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %82, i32 0, i32 11, !dbg !8503
  %83 = load i16, i16* %ofs120, align 2, !dbg !8503
  %conv121 = sext i16 %83 to i64, !dbg !8502
  %add122 = add i64 %call119, %conv121, !dbg !8504
  %conv123 = trunc i64 %add122 to i32, !dbg !8501
  store i32 %conv123, i32* %drawstr_len, align 4, !dbg !8505
  %84 = load float, float* %strwidth105, align 4, !dbg !8506
  %conv124 = fptosi float %84 to i16, !dbg !8506
  %85 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8507
  %strwidth125 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %85, i32 0, i32 9, !dbg !8508
  store i16 %conv124, i16* %strwidth125, align 2, !dbg !8509
  %86 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8510
  %drawstr126 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %86, i32 0, i32 17, !dbg !8511
  %87 = load i32, i32* %drawstr_len, align 4, !dbg !8512
  %idxprom = sext i32 %87 to i64, !dbg !8510
  %arrayidx = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr126, i64 0, i64 %idxprom, !dbg !8510
  store i8 0, i8* %arrayidx, align 1, !dbg !8513
  br label %if.end127, !dbg !8514

if.end127:                                        ; preds = %if.then104, %if.end99
  %88 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8515
  %kerning128 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %88, i32 0, i32 2, !dbg !8517
  %89 = load i16, i16* %kerning128, align 4, !dbg !8517
  %conv129 = sext i16 %89 to i32, !dbg !8515
  %cmp130 = icmp eq i32 %conv129, 1, !dbg !8518
  br i1 %cmp130, label %if.then132, label %if.end135, !dbg !8519

if.then132:                                       ; preds = %if.end127
  %90 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8520
  %uifont_id133 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %90, i32 0, i32 0, !dbg !8521
  %91 = load i16, i16* %uifont_id133, align 4, !dbg !8521
  %conv134 = sext i16 %91 to i32, !dbg !8520
  call void @BLF_disable(i32 %conv134, i32 8), !dbg !8522
  br label %if.end135, !dbg !8522

if.end135:                                        ; preds = %if.then132, %if.end127
  ret void, !dbg !8523
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_middle_protect_right(%struct.uiFontStyle* %fstyle, %struct.uiBut* %but, %struct.rcti* %rect, i8* %rsep) #0 !dbg !8524 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %rsep.addr = alloca i8*, align 8
  %border = alloca i32, align 4
  %okwidth = alloca float, align 4
  %max_len = alloca i64, align 8
  %minwidth = alloca float, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  store i8* %rsep, i8** %rsep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rsep.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %border, metadata !8535, metadata !DIExpression()), !dbg !8536
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8537
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !8537
  %1 = load i32, i32* %type, align 8, !dbg !8537
  %cmp = icmp eq i32 %1, 5120, !dbg !8537
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !8537

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8537
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !8537
  %3 = load i32, i32* %type1, align 8, !dbg !8537
  %cmp2 = icmp eq i32 %3, 5632, !dbg !8537
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !8537

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !8537

cond.false:                                       ; preds = %lor.lhs.false
  %4 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8538
  %conv = sext i16 %4 to i32, !dbg !8538
  %conv3 = sitofp i32 %conv to float, !dbg !8538
  %mul = fmul float 2.500000e-01, %conv3, !dbg !8538
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8538
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 74, !dbg !8538
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8538
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 12, !dbg !8538
  %7 = load float, float* %aspect, align 8, !dbg !8538
  %div = fdiv float %mul, %7, !dbg !8538
  %add = fadd float %div, 5.000000e-01, !dbg !8539
  %conv4 = fptosi float %add to i32, !dbg !8540
  br label %cond.end, !dbg !8537

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv4, %cond.false ], !dbg !8537
  store i32 %cond, i32* %border, align 4, !dbg !8536
  call void @llvm.dbg.declare(metadata float* %okwidth, metadata !8541, metadata !DIExpression()), !dbg !8542
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8543
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %8), !dbg !8544
  %9 = load i32, i32* %border, align 4, !dbg !8545
  %sub = sub nsw i32 %call, %9, !dbg !8546
  %call5 = call i32 @max_ii(i32 %sub, i32 0), !dbg !8547
  %conv6 = sitofp i32 %call5 to float, !dbg !8548
  store float %conv6, float* %okwidth, align 4, !dbg !8542
  call void @llvm.dbg.declare(metadata i64* %max_len, metadata !8549, metadata !DIExpression()), !dbg !8550
  store i64 400, i64* %max_len, align 8, !dbg !8550
  call void @llvm.dbg.declare(metadata float* %minwidth, metadata !8551, metadata !DIExpression()), !dbg !8552
  %10 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8553
  %11 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !8553
  %conv7 = sitofp i32 %11 to float, !dbg !8553
  %mul8 = fmul float %10, %conv7, !dbg !8553
  %div9 = fdiv float %mul8, 7.200000e+01, !dbg !8553
  %mul10 = fmul float 1.600000e+01, %div9, !dbg !8553
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8554
  %block11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 74, !dbg !8555
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block11, align 8, !dbg !8555
  %aspect12 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 12, !dbg !8556
  %14 = load float, float* %aspect12, align 8, !dbg !8556
  %div13 = fdiv float %mul10, %14, !dbg !8557
  %mul14 = fmul float %div13, 2.000000e+00, !dbg !8558
  store float %mul14, float* %minwidth, align 4, !dbg !8552
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8559
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 11, !dbg !8560
  store i16 0, i16* %ofs, align 2, !dbg !8561
  %16 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8562
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8563
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 17, !dbg !8564
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !8563
  %18 = load float, float* %okwidth, align 4, !dbg !8565
  %19 = load float, float* %minwidth, align 4, !dbg !8566
  %20 = load i8*, i8** %rsep.addr, align 8, !dbg !8567
  %call15 = call float @ui_text_clip_middle_ex(%struct.uiFontStyle* %16, i8* %arraydecay, float %18, float %19, i64 400, i8* %20), !dbg !8568
  %conv16 = fptosi float %call15 to i16, !dbg !8568
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8569
  %strwidth = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 9, !dbg !8570
  store i16 %conv16, i16* %strwidth, align 2, !dbg !8571
  ret void, !dbg !8572
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_middle(%struct.uiFontStyle* %fstyle, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !8573 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %border = alloca i32, align 4
  %okwidth = alloca float, align 4
  %max_len = alloca i64, align 8
  %minwidth = alloca float, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata i32* %border, metadata !8580, metadata !DIExpression()), !dbg !8581
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8582
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !8582
  %1 = load i32, i32* %type, align 8, !dbg !8582
  %cmp = icmp eq i32 %1, 5120, !dbg !8582
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !8582

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8582
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !8582
  %3 = load i32, i32* %type1, align 8, !dbg !8582
  %cmp2 = icmp eq i32 %3, 5632, !dbg !8582
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !8582

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !8582

cond.false:                                       ; preds = %lor.lhs.false
  %4 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8583
  %conv = sext i16 %4 to i32, !dbg !8583
  %conv3 = sitofp i32 %conv to float, !dbg !8583
  %mul = fmul float 2.500000e-01, %conv3, !dbg !8583
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8583
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 74, !dbg !8583
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8583
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 12, !dbg !8583
  %7 = load float, float* %aspect, align 8, !dbg !8583
  %div = fdiv float %mul, %7, !dbg !8583
  %add = fadd float %div, 5.000000e-01, !dbg !8584
  %conv4 = fptosi float %add to i32, !dbg !8585
  br label %cond.end, !dbg !8582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv4, %cond.false ], !dbg !8582
  store i32 %cond, i32* %border, align 4, !dbg !8581
  call void @llvm.dbg.declare(metadata float* %okwidth, metadata !8586, metadata !DIExpression()), !dbg !8587
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8588
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %8), !dbg !8589
  %9 = load i32, i32* %border, align 4, !dbg !8590
  %sub = sub nsw i32 %call, %9, !dbg !8591
  %call5 = call i32 @max_ii(i32 %sub, i32 0), !dbg !8592
  %conv6 = sitofp i32 %call5 to float, !dbg !8593
  store float %conv6, float* %okwidth, align 4, !dbg !8587
  call void @llvm.dbg.declare(metadata i64* %max_len, metadata !8594, metadata !DIExpression()), !dbg !8595
  store i64 400, i64* %max_len, align 8, !dbg !8595
  call void @llvm.dbg.declare(metadata float* %minwidth, metadata !8596, metadata !DIExpression()), !dbg !8597
  %10 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8598
  %11 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !8598
  %conv7 = sitofp i32 %11 to float, !dbg !8598
  %mul8 = fmul float %10, %conv7, !dbg !8598
  %div9 = fdiv float %mul8, 7.200000e+01, !dbg !8598
  %mul10 = fmul float 1.600000e+01, %div9, !dbg !8598
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8599
  %block11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 74, !dbg !8600
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block11, align 8, !dbg !8600
  %aspect12 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 12, !dbg !8601
  %14 = load float, float* %aspect12, align 8, !dbg !8601
  %div13 = fdiv float %mul10, %14, !dbg !8602
  %mul14 = fmul float %div13, 2.000000e+00, !dbg !8603
  store float %mul14, float* %minwidth, align 4, !dbg !8597
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8604
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 11, !dbg !8605
  store i16 0, i16* %ofs, align 2, !dbg !8606
  %16 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8607
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8608
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 17, !dbg !8609
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !8608
  %18 = load float, float* %okwidth, align 4, !dbg !8610
  %19 = load float, float* %minwidth, align 4, !dbg !8611
  %call15 = call float @ui_text_clip_middle_ex(%struct.uiFontStyle* %16, i8* %arraydecay, float %18, float %19, i64 400, i8* null), !dbg !8612
  %conv16 = fptosi float %call15 to i16, !dbg !8612
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8613
  %strwidth = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 9, !dbg !8614
  store i16 %conv16, i16* %strwidth, align 2, !dbg !8615
  ret void, !dbg !8616
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_draw_text(%struct.uiFontStyle* %fstyle, %struct.uiWidgetColors* %wcol, %struct.uiBut* %but, %struct.rcti* %rect) #0 !dbg !8617 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %drawstr_left_len = alloca i32, align 4
  %drawstr = alloca i8*, align 8
  %drawstr_right = alloca i8*, align 8
  %use_right_only = alloca i8, align 1
  %but_edit = alloca %struct.uiBut*, align 8
  %selsta_draw = alloca i32, align 4
  %selwidth_draw = alloca i32, align 4
  %t = alloca i32, align 4
  %font_xofs = alloca float, align 4
  %font_yofs = alloca float, align 4
  %fixedbuf = alloca [128 x i8], align 16
  %str = alloca i8*, align 8
  %ul_index = alloca i32, align 4
  %ul_advance = alloca float, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.declare(metadata i32* %drawstr_left_len, metadata !8626, metadata !DIExpression()), !dbg !8627
  store i32 400, i32* %drawstr_left_len, align 4, !dbg !8627
  call void @llvm.dbg.declare(metadata i8** %drawstr, metadata !8628, metadata !DIExpression()), !dbg !8629
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8630
  %drawstr1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 17, !dbg !8631
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr1, i64 0, i64 0, !dbg !8630
  store i8* %arraydecay, i8** %drawstr, align 8, !dbg !8629
  call void @llvm.dbg.declare(metadata i8** %drawstr_right, metadata !8632, metadata !DIExpression()), !dbg !8633
  store i8* null, i8** %drawstr_right, align 8, !dbg !8633
  call void @llvm.dbg.declare(metadata i8* %use_right_only, metadata !8634, metadata !DIExpression()), !dbg !8635
  store i8 0, i8* %use_right_only, align 1, !dbg !8635
  %1 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8636
  call void @uiStyleFontSet(%struct.uiFontStyle* %1), !dbg !8637
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8638
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 69, !dbg !8640
  %3 = load i8*, i8** %editstr, align 8, !dbg !8640
  %tobool = icmp ne i8* %3, null, !dbg !8638
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8641

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8642
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 3, !dbg !8643
  %5 = load i32, i32* %drawflag, align 4, !dbg !8643
  %and = and i32 %5, 2, !dbg !8644
  %tobool2 = icmp ne i32 %and, 0, !dbg !8644
  br i1 %tobool2, label %if.then, label %if.else, !dbg !8645

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8646
  %align = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %6, i32 0, i32 9, !dbg !8647
  store i16 0, i16* %align, align 2, !dbg !8648
  br label %if.end10, !dbg !8646

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8649
  %drawflag3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 3, !dbg !8651
  %8 = load i32, i32* %drawflag3, align 4, !dbg !8651
  %and4 = and i32 %8, 8, !dbg !8652
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8652
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !8653

if.then6:                                         ; preds = %if.else
  %9 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8654
  %align7 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %9, i32 0, i32 9, !dbg !8655
  store i16 2, i16* %align7, align 2, !dbg !8656
  br label %if.end, !dbg !8654

if.else8:                                         ; preds = %if.else
  %10 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8657
  %align9 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %10, i32 0, i32 9, !dbg !8658
  store i16 1, i16* %align9, align 2, !dbg !8659
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then6
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %11 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8660
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %11, i32 0, i32 2, !dbg !8662
  %12 = load i16, i16* %kerning, align 4, !dbg !8662
  %conv = sext i16 %12 to i32, !dbg !8660
  %cmp = icmp eq i32 %conv, 1, !dbg !8663
  br i1 %cmp, label %if.then12, label %if.end14, !dbg !8664

if.then12:                                        ; preds = %if.end10
  %13 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8665
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %13, i32 0, i32 0, !dbg !8666
  %14 = load i16, i16* %uifont_id, align 4, !dbg !8666
  %conv13 = sext i16 %14 to i32, !dbg !8665
  call void @BLF_enable(i32 %conv13, i32 8), !dbg !8667
  br label %if.end14, !dbg !8667

if.end14:                                         ; preds = %if.then12, %if.end10
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8668
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 2, !dbg !8668
  %16 = load i32, i32* %flag, align 8, !dbg !8668
  %and15 = and i32 %16, 33554432, !dbg !8668
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8668
  br i1 %tobool16, label %if.then17, label %if.else23, !dbg !8670

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_edit, metadata !8671, metadata !DIExpression()), !dbg !8673
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8674
  %call = call %struct.uiBut* @ui_get_but_drag_multi_edit(%struct.uiBut* %17), !dbg !8675
  store %struct.uiBut* %call, %struct.uiBut** %but_edit, align 8, !dbg !8673
  %18 = load %struct.uiBut*, %struct.uiBut** %but_edit, align 8, !dbg !8676
  %tobool18 = icmp ne %struct.uiBut* %18, null, !dbg !8676
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !8678

if.then19:                                        ; preds = %if.then17
  %19 = load %struct.uiBut*, %struct.uiBut** %but_edit, align 8, !dbg !8679
  %editstr20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 69, !dbg !8681
  %20 = load i8*, i8** %editstr20, align 8, !dbg !8681
  store i8* %20, i8** %drawstr, align 8, !dbg !8682
  %21 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8683
  %align21 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %21, i32 0, i32 9, !dbg !8684
  store i16 0, i16* %align21, align 2, !dbg !8685
  br label %if.end22, !dbg !8686

if.end22:                                         ; preds = %if.then19, %if.then17
  br label %if.end29, !dbg !8687

if.else23:                                        ; preds = %if.end14
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8688
  %editstr24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 69, !dbg !8691
  %23 = load i8*, i8** %editstr24, align 8, !dbg !8691
  %tobool25 = icmp ne i8* %23, null, !dbg !8688
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8692

if.then26:                                        ; preds = %if.else23
  store i32 2147483647, i32* %drawstr_left_len, align 4, !dbg !8693
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8695
  %editstr27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 69, !dbg !8696
  %25 = load i8*, i8** %editstr27, align 8, !dbg !8696
  store i8* %25, i8** %drawstr, align 8, !dbg !8697
  br label %if.end28, !dbg !8698

if.end28:                                         ; preds = %if.then26, %if.else23
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end22
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8699
  %editstr30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 69, !dbg !8701
  %27 = load i8*, i8** %editstr30, align 8, !dbg !8701
  %tobool31 = icmp ne i8* %27, null, !dbg !8699
  br i1 %tobool31, label %land.lhs.true, label %if.end126, !dbg !8702

land.lhs.true:                                    ; preds = %if.end29
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8703
  %pos = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 12, !dbg !8704
  %29 = load i16, i16* %pos, align 4, !dbg !8704
  %conv32 = sext i16 %29 to i32, !dbg !8703
  %cmp33 = icmp ne i32 %conv32, -1, !dbg !8705
  br i1 %cmp33, label %if.then35, label %if.end126, !dbg !8706

if.then35:                                        ; preds = %land.lhs.true
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8707
  %selend = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 14, !dbg !8710
  %31 = load i16, i16* %selend, align 8, !dbg !8710
  %conv36 = sext i16 %31 to i32, !dbg !8707
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8711
  %selsta = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 13, !dbg !8712
  %33 = load i16, i16* %selsta, align 2, !dbg !8712
  %conv37 = sext i16 %33 to i32, !dbg !8711
  %sub = sub nsw i32 %conv36, %conv37, !dbg !8713
  %cmp38 = icmp sgt i32 %sub, 0, !dbg !8714
  br i1 %cmp38, label %if.then40, label %if.end87, !dbg !8715

if.then40:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata i32* %selsta_draw, metadata !8716, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.declare(metadata i32* %selwidth_draw, metadata !8719, metadata !DIExpression()), !dbg !8720
  %34 = load i8*, i8** %drawstr, align 8, !dbg !8721
  %arrayidx = getelementptr inbounds i8, i8* %34, i64 0, !dbg !8721
  %35 = load i8, i8* %arrayidx, align 1, !dbg !8721
  %conv41 = zext i8 %35 to i32, !dbg !8721
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !8723
  br i1 %cmp42, label %if.then44, label %if.end86, !dbg !8724

if.then44:                                        ; preds = %if.then40
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8725
  %selsta45 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 13, !dbg !8728
  %37 = load i16, i16* %selsta45, align 2, !dbg !8728
  %conv46 = sext i16 %37 to i32, !dbg !8725
  %38 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8729
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 11, !dbg !8730
  %39 = load i16, i16* %ofs, align 2, !dbg !8730
  %conv47 = sext i16 %39 to i32, !dbg !8729
  %cmp48 = icmp sge i32 %conv46, %conv47, !dbg !8731
  br i1 %cmp48, label %if.then50, label %if.else63, !dbg !8732

if.then50:                                        ; preds = %if.then44
  %40 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8733
  %uifont_id51 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %40, i32 0, i32 0, !dbg !8735
  %41 = load i16, i16* %uifont_id51, align 4, !dbg !8735
  %conv52 = sext i16 %41 to i32, !dbg !8733
  %42 = load i8*, i8** %drawstr, align 8, !dbg !8736
  %43 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8737
  %ofs53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 11, !dbg !8738
  %44 = load i16, i16* %ofs53, align 2, !dbg !8738
  %conv54 = sext i16 %44 to i32, !dbg !8737
  %idx.ext = sext i32 %conv54 to i64, !dbg !8739
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !8739
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8740
  %selsta55 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 13, !dbg !8741
  %46 = load i16, i16* %selsta55, align 2, !dbg !8741
  %conv56 = sext i16 %46 to i32, !dbg !8740
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8742
  %ofs57 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 11, !dbg !8743
  %48 = load i16, i16* %ofs57, align 2, !dbg !8743
  %conv58 = sext i16 %48 to i32, !dbg !8742
  %sub59 = sub nsw i32 %conv56, %conv58, !dbg !8744
  %conv60 = sext i32 %sub59 to i64, !dbg !8740
  %call61 = call float @BLF_width(i32 %conv52, i8* %add.ptr, i64 %conv60), !dbg !8745
  %conv62 = fptosi float %call61 to i32, !dbg !8745
  store i32 %conv62, i32* %selsta_draw, align 4, !dbg !8746
  br label %if.end64, !dbg !8747

if.else63:                                        ; preds = %if.then44
  store i32 0, i32* %selsta_draw, align 4, !dbg !8748
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.then50
  %49 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8750
  %uifont_id65 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %49, i32 0, i32 0, !dbg !8751
  %50 = load i16, i16* %uifont_id65, align 4, !dbg !8751
  %conv66 = sext i16 %50 to i32, !dbg !8750
  %51 = load i8*, i8** %drawstr, align 8, !dbg !8752
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8753
  %ofs67 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 11, !dbg !8754
  %53 = load i16, i16* %ofs67, align 2, !dbg !8754
  %conv68 = sext i16 %53 to i32, !dbg !8753
  %idx.ext69 = sext i32 %conv68 to i64, !dbg !8755
  %add.ptr70 = getelementptr inbounds i8, i8* %51, i64 %idx.ext69, !dbg !8755
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8756
  %selend71 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 14, !dbg !8757
  %55 = load i16, i16* %selend71, align 8, !dbg !8757
  %conv72 = sext i16 %55 to i32, !dbg !8756
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8758
  %ofs73 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 11, !dbg !8759
  %57 = load i16, i16* %ofs73, align 2, !dbg !8759
  %conv74 = sext i16 %57 to i32, !dbg !8758
  %sub75 = sub nsw i32 %conv72, %conv74, !dbg !8760
  %conv76 = sext i32 %sub75 to i64, !dbg !8756
  %call77 = call float @BLF_width(i32 %conv66, i8* %add.ptr70, i64 %conv76), !dbg !8761
  %conv78 = fptosi float %call77 to i32, !dbg !8761
  store i32 %conv78, i32* %selwidth_draw, align 4, !dbg !8762
  %58 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !8763
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %58, i32 0, i32 3, !dbg !8764
  %arraydecay79 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !8763
  call void @glColor4ubv(i8* %arraydecay79), !dbg !8765
  %59 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8766
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %59, i32 0, i32 0, !dbg !8767
  %60 = load i32, i32* %xmin, align 4, !dbg !8767
  %61 = load i32, i32* %selsta_draw, align 4, !dbg !8768
  %add = add nsw i32 %60, %61, !dbg !8769
  %62 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8770
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %62, i32 0, i32 2, !dbg !8771
  %63 = load i32, i32* %ymin, align 4, !dbg !8771
  %add80 = add nsw i32 %63, 2, !dbg !8772
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8773
  %xmin81 = getelementptr inbounds %struct.rcti, %struct.rcti* %64, i32 0, i32 0, !dbg !8774
  %65 = load i32, i32* %xmin81, align 4, !dbg !8774
  %66 = load i32, i32* %selwidth_draw, align 4, !dbg !8775
  %add82 = add nsw i32 %65, %66, !dbg !8776
  %67 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8777
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %67, i32 0, i32 1, !dbg !8778
  %68 = load i32, i32* %xmax, align 4, !dbg !8778
  %sub83 = sub nsw i32 %68, 2, !dbg !8779
  %call84 = call i32 @min_ii(i32 %add82, i32 %sub83), !dbg !8780
  %69 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8781
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %69, i32 0, i32 3, !dbg !8782
  %70 = load i32, i32* %ymax, align 4, !dbg !8782
  %sub85 = sub nsw i32 %70, 2, !dbg !8783
  call void @glRecti(i32 %add, i32 %add80, i32 %call84, i32 %sub85), !dbg !8784
  br label %if.end86, !dbg !8785

if.end86:                                         ; preds = %if.end64, %if.then40
  br label %if.end87, !dbg !8786

if.end87:                                         ; preds = %if.end86, %if.then35
  %71 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8787
  %pos88 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %71, i32 0, i32 12, !dbg !8789
  %72 = load i16, i16* %pos88, align 4, !dbg !8789
  %conv89 = sext i16 %72 to i32, !dbg !8787
  %73 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8790
  %ofs90 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %73, i32 0, i32 11, !dbg !8791
  %74 = load i16, i16* %ofs90, align 2, !dbg !8791
  %conv91 = sext i16 %74 to i32, !dbg !8790
  %cmp92 = icmp sge i32 %conv89, %conv91, !dbg !8792
  br i1 %cmp92, label %if.then94, label %if.end125, !dbg !8793

if.then94:                                        ; preds = %if.end87
  call void @llvm.dbg.declare(metadata i32* %t, metadata !8794, metadata !DIExpression()), !dbg !8796
  %75 = load i8*, i8** %drawstr, align 8, !dbg !8797
  %arrayidx95 = getelementptr inbounds i8, i8* %75, i64 0, !dbg !8797
  %76 = load i8, i8* %arrayidx95, align 1, !dbg !8797
  %conv96 = zext i8 %76 to i32, !dbg !8797
  %cmp97 = icmp ne i32 %conv96, 0, !dbg !8799
  br i1 %cmp97, label %if.then99, label %if.else114, !dbg !8800

if.then99:                                        ; preds = %if.then94
  %77 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8801
  %uifont_id100 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %77, i32 0, i32 0, !dbg !8803
  %78 = load i16, i16* %uifont_id100, align 4, !dbg !8803
  %conv101 = sext i16 %78 to i32, !dbg !8801
  %79 = load i8*, i8** %drawstr, align 8, !dbg !8804
  %80 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8805
  %ofs102 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %80, i32 0, i32 11, !dbg !8806
  %81 = load i16, i16* %ofs102, align 2, !dbg !8806
  %conv103 = sext i16 %81 to i32, !dbg !8805
  %idx.ext104 = sext i32 %conv103 to i64, !dbg !8807
  %add.ptr105 = getelementptr inbounds i8, i8* %79, i64 %idx.ext104, !dbg !8807
  %82 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8808
  %pos106 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %82, i32 0, i32 12, !dbg !8809
  %83 = load i16, i16* %pos106, align 4, !dbg !8809
  %conv107 = sext i16 %83 to i32, !dbg !8808
  %84 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8810
  %ofs108 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %84, i32 0, i32 11, !dbg !8811
  %85 = load i16, i16* %ofs108, align 2, !dbg !8811
  %conv109 = sext i16 %85 to i32, !dbg !8810
  %sub110 = sub nsw i32 %conv107, %conv109, !dbg !8812
  %conv111 = sext i32 %sub110 to i64, !dbg !8808
  %call112 = call float @BLF_width(i32 %conv101, i8* %add.ptr105, i64 %conv111), !dbg !8813
  %conv113 = fptosi float %call112 to i32, !dbg !8813
  store i32 %conv113, i32* %t, align 4, !dbg !8814
  br label %if.end115, !dbg !8815

if.else114:                                       ; preds = %if.then94
  store i32 0, i32* %t, align 4, !dbg !8816
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %if.then99
  call void @glColor3f(float 0x3FC99999A0000000, float 0x3FE3333340000000, float 0x3FECCCCCC0000000), !dbg !8818
  %86 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8819
  %xmin116 = getelementptr inbounds %struct.rcti, %struct.rcti* %86, i32 0, i32 0, !dbg !8820
  %87 = load i32, i32* %xmin116, align 4, !dbg !8820
  %88 = load i32, i32* %t, align 4, !dbg !8821
  %add117 = add nsw i32 %87, %88, !dbg !8822
  %89 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8823
  %ymin118 = getelementptr inbounds %struct.rcti, %struct.rcti* %89, i32 0, i32 2, !dbg !8824
  %90 = load i32, i32* %ymin118, align 4, !dbg !8824
  %add119 = add nsw i32 %90, 2, !dbg !8825
  %91 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8826
  %xmin120 = getelementptr inbounds %struct.rcti, %struct.rcti* %91, i32 0, i32 0, !dbg !8827
  %92 = load i32, i32* %xmin120, align 4, !dbg !8827
  %93 = load i32, i32* %t, align 4, !dbg !8828
  %add121 = add nsw i32 %92, %93, !dbg !8829
  %add122 = add nsw i32 %add121, 2, !dbg !8830
  %94 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8831
  %ymax123 = getelementptr inbounds %struct.rcti, %struct.rcti* %94, i32 0, i32 3, !dbg !8832
  %95 = load i32, i32* %ymax123, align 4, !dbg !8832
  %sub124 = sub nsw i32 %95, 2, !dbg !8833
  call void @glRecti(i32 %add117, i32 %add119, i32 %add122, i32 %sub124), !dbg !8834
  br label %if.end125, !dbg !8835

if.end125:                                        ; preds = %if.end115, %if.end87
  br label %if.end126, !dbg !8836

if.end126:                                        ; preds = %if.end125, %land.lhs.true, %if.end29
  %96 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8837
  %kerning127 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %96, i32 0, i32 2, !dbg !8839
  %97 = load i16, i16* %kerning127, align 4, !dbg !8839
  %conv128 = sext i16 %97 to i32, !dbg !8837
  %cmp129 = icmp eq i32 %conv128, 1, !dbg !8840
  br i1 %cmp129, label %if.then131, label %if.end134, !dbg !8841

if.then131:                                       ; preds = %if.end126
  %98 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8842
  %uifont_id132 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %98, i32 0, i32 0, !dbg !8843
  %99 = load i16, i16* %uifont_id132, align 4, !dbg !8843
  %conv133 = sext i16 %99 to i32, !dbg !8842
  call void @BLF_disable(i32 %conv133, i32 8), !dbg !8844
  br label %if.end134, !dbg !8844

if.end134:                                        ; preds = %if.then131, %if.end126
  %100 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8845
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %100, i32 0, i32 74, !dbg !8847
  %101 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8847
  %flag135 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %101, i32 0, i32 27, !dbg !8848
  %102 = load i32, i32* %flag135, align 8, !dbg !8848
  %and136 = and i32 %102, 1, !dbg !8849
  %tobool137 = icmp ne i32 %and136, 0, !dbg !8849
  br i1 %tobool137, label %land.lhs.true138, label %if.end153, !dbg !8850

land.lhs.true138:                                 ; preds = %if.end134
  %103 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8851
  %editstr139 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %103, i32 0, i32 69, !dbg !8852
  %104 = load i8*, i8** %editstr139, align 8, !dbg !8852
  %cmp140 = icmp eq i8* %104, null, !dbg !8853
  br i1 %cmp140, label %if.then142, label %if.end153, !dbg !8854

if.then142:                                       ; preds = %land.lhs.true138
  %105 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8855
  %flag143 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %105, i32 0, i32 2, !dbg !8858
  %106 = load i32, i32* %flag143, align 8, !dbg !8858
  %and144 = and i32 %106, 134217728, !dbg !8859
  %tobool145 = icmp ne i32 %and144, 0, !dbg !8859
  br i1 %tobool145, label %if.then146, label %if.end152, !dbg !8860

if.then146:                                       ; preds = %if.then142
  %107 = load i8*, i8** %drawstr, align 8, !dbg !8861
  %call147 = call i8* @strrchr(i8* %107, i32 124) #7, !dbg !8863
  store i8* %call147, i8** %drawstr_right, align 8, !dbg !8864
  %108 = load i8*, i8** %drawstr_right, align 8, !dbg !8865
  %tobool148 = icmp ne i8* %108, null, !dbg !8865
  br i1 %tobool148, label %if.then149, label %if.end151, !dbg !8867

if.then149:                                       ; preds = %if.then146
  %109 = load i8*, i8** %drawstr_right, align 8, !dbg !8868
  %110 = load i8*, i8** %drawstr, align 8, !dbg !8870
  %sub.ptr.lhs.cast = ptrtoint i8* %109 to i64, !dbg !8871
  %sub.ptr.rhs.cast = ptrtoint i8* %110 to i64, !dbg !8871
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8871
  %conv150 = trunc i64 %sub.ptr.sub to i32, !dbg !8872
  store i32 %conv150, i32* %drawstr_left_len, align 4, !dbg !8873
  %111 = load i8*, i8** %drawstr_right, align 8, !dbg !8874
  %incdec.ptr = getelementptr inbounds i8, i8* %111, i32 1, !dbg !8874
  store i8* %incdec.ptr, i8** %drawstr_right, align 8, !dbg !8874
  br label %if.end151, !dbg !8875

if.end151:                                        ; preds = %if.then149, %if.then146
  br label %if.end152, !dbg !8876

if.end152:                                        ; preds = %if.end151, %if.then142
  br label %if.end153, !dbg !8877

if.end153:                                        ; preds = %if.end152, %land.lhs.true138, %if.end134
  %112 = load i8*, i8** %drawstr_right, align 8, !dbg !8878
  %tobool154 = icmp ne i8* %112, null, !dbg !8878
  br i1 %tobool154, label %if.end194, label %land.lhs.true155, !dbg !8880

land.lhs.true155:                                 ; preds = %if.end153
  %113 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8881
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %113, i32 0, i32 4, !dbg !8881
  %114 = load i32, i32* %type, align 8, !dbg !8881
  %cmp156 = icmp eq i32 %114, 2560, !dbg !8881
  br i1 %cmp156, label %land.lhs.true162, label %lor.lhs.false158, !dbg !8881

lor.lhs.false158:                                 ; preds = %land.lhs.true155
  %115 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8881
  %type159 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %115, i32 0, i32 4, !dbg !8881
  %116 = load i32, i32* %type159, align 8, !dbg !8881
  %cmp160 = icmp eq i32 %116, 7168, !dbg !8881
  br i1 %cmp160, label %land.lhs.true162, label %if.end194, !dbg !8882

land.lhs.true162:                                 ; preds = %lor.lhs.false158, %land.lhs.true155
  %117 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8883
  %editstr163 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %117, i32 0, i32 69, !dbg !8884
  %118 = load i8*, i8** %editstr163, align 8, !dbg !8884
  %cmp164 = icmp eq i8* %118, null, !dbg !8885
  br i1 %cmp164, label %land.lhs.true166, label %if.end194, !dbg !8886

land.lhs.true166:                                 ; preds = %land.lhs.true162
  %119 = load i8*, i8** %drawstr, align 8, !dbg !8887
  %120 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8888
  %drawstr167 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %120, i32 0, i32 17, !dbg !8889
  %arraydecay168 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr167, i64 0, i64 0, !dbg !8888
  %cmp169 = icmp eq i8* %119, %arraydecay168, !dbg !8890
  br i1 %cmp169, label %if.then171, label %if.end194, !dbg !8891

if.then171:                                       ; preds = %land.lhs.true166
  %121 = load i8*, i8** %drawstr, align 8, !dbg !8892
  %122 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8894
  %ofs172 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %122, i32 0, i32 11, !dbg !8895
  %123 = load i16, i16* %ofs172, align 2, !dbg !8895
  %conv173 = sext i16 %123 to i32, !dbg !8894
  %idx.ext174 = sext i32 %conv173 to i64, !dbg !8896
  %add.ptr175 = getelementptr inbounds i8, i8* %121, i64 %idx.ext174, !dbg !8896
  %call176 = call i8* @strchr(i8* %add.ptr175, i32 58) #7, !dbg !8897
  store i8* %call176, i8** %drawstr_right, align 8, !dbg !8898
  %124 = load i8*, i8** %drawstr_right, align 8, !dbg !8899
  %tobool177 = icmp ne i8* %124, null, !dbg !8899
  br i1 %tobool177, label %if.then178, label %if.else188, !dbg !8901

if.then178:                                       ; preds = %if.then171
  %125 = load i8*, i8** %drawstr_right, align 8, !dbg !8902
  %incdec.ptr179 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !8902
  store i8* %incdec.ptr179, i8** %drawstr_right, align 8, !dbg !8902
  %126 = load i8*, i8** %drawstr_right, align 8, !dbg !8904
  %127 = load i8*, i8** %drawstr, align 8, !dbg !8905
  %sub.ptr.lhs.cast180 = ptrtoint i8* %126 to i64, !dbg !8906
  %sub.ptr.rhs.cast181 = ptrtoint i8* %127 to i64, !dbg !8906
  %sub.ptr.sub182 = sub i64 %sub.ptr.lhs.cast180, %sub.ptr.rhs.cast181, !dbg !8906
  %conv183 = trunc i64 %sub.ptr.sub182 to i32, !dbg !8907
  store i32 %conv183, i32* %drawstr_left_len, align 4, !dbg !8908
  br label %while.cond, !dbg !8909

while.cond:                                       ; preds = %while.body, %if.then178
  %128 = load i8*, i8** %drawstr_right, align 8, !dbg !8910
  %129 = load i8, i8* %128, align 1, !dbg !8911
  %conv184 = zext i8 %129 to i32, !dbg !8911
  %cmp185 = icmp eq i32 %conv184, 32, !dbg !8912
  br i1 %cmp185, label %while.body, label %while.end, !dbg !8909

while.body:                                       ; preds = %while.cond
  %130 = load i8*, i8** %drawstr_right, align 8, !dbg !8913
  %incdec.ptr187 = getelementptr inbounds i8, i8* %130, i32 1, !dbg !8913
  store i8* %incdec.ptr187, i8** %drawstr_right, align 8, !dbg !8913
  br label %while.cond, !dbg !8909, !llvm.loop !8915

while.end:                                        ; preds = %while.cond
  br label %if.end193, !dbg !8917

if.else188:                                       ; preds = %if.then171
  %131 = load i8*, i8** %drawstr, align 8, !dbg !8918
  %132 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8920
  %ofs189 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %132, i32 0, i32 11, !dbg !8921
  %133 = load i16, i16* %ofs189, align 2, !dbg !8921
  %conv190 = sext i16 %133 to i32, !dbg !8920
  %idx.ext191 = sext i32 %conv190 to i64, !dbg !8922
  %add.ptr192 = getelementptr inbounds i8, i8* %131, i64 %idx.ext191, !dbg !8922
  store i8* %add.ptr192, i8** %drawstr_right, align 8, !dbg !8923
  store i8 1, i8* %use_right_only, align 1, !dbg !8924
  br label %if.end193

if.end193:                                        ; preds = %if.else188, %while.end
  br label %if.end194, !dbg !8925

if.end194:                                        ; preds = %if.end193, %land.lhs.true166, %land.lhs.true162, %lor.lhs.false158, %if.end153
  %134 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !8926
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %134, i32 0, i32 4, !dbg !8927
  %arraydecay195 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !8926
  call void @glColor4ubv(i8* %arraydecay195), !dbg !8928
  %135 = load i8, i8* %use_right_only, align 1, !dbg !8929
  %tobool196 = icmp ne i8 %135, 0, !dbg !8929
  br i1 %tobool196, label %if.end273, label %if.then197, !dbg !8931

if.then197:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata float* %font_xofs, metadata !8932, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.declare(metadata float* %font_yofs, metadata !8935, metadata !DIExpression()), !dbg !8936
  %136 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8937
  %137 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !8938
  %138 = load i8*, i8** %drawstr, align 8, !dbg !8939
  %139 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8940
  %ofs198 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %139, i32 0, i32 11, !dbg !8941
  %140 = load i16, i16* %ofs198, align 2, !dbg !8941
  %conv199 = sext i16 %140 to i32, !dbg !8940
  %idx.ext200 = sext i32 %conv199 to i64, !dbg !8942
  %add.ptr201 = getelementptr inbounds i8, i8* %138, i64 %idx.ext200, !dbg !8942
  %141 = load i32, i32* %drawstr_left_len, align 4, !dbg !8943
  %142 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8944
  %ofs202 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %142, i32 0, i32 11, !dbg !8945
  %143 = load i16, i16* %ofs202, align 2, !dbg !8945
  %conv203 = sext i16 %143 to i32, !dbg !8944
  %sub204 = sub nsw i32 %141, %conv203, !dbg !8946
  %conv205 = sext i32 %sub204 to i64, !dbg !8943
  call void @uiStyleFontDrawExt(%struct.uiFontStyle* %136, %struct.rcti* %137, i8* %add.ptr201, i64 %conv205, float* %font_xofs, float* %font_yofs), !dbg !8947
  %144 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8948
  %menu_key = getelementptr inbounds %struct.uiBut, %struct.uiBut* %144, i32 0, i32 62, !dbg !8950
  %145 = load i8, i8* %menu_key, align 2, !dbg !8950
  %conv206 = zext i8 %145 to i32, !dbg !8948
  %cmp207 = icmp ne i32 %conv206, 0, !dbg !8951
  br i1 %cmp207, label %if.then209, label %if.end272, !dbg !8952

if.then209:                                       ; preds = %if.then197
  call void @llvm.dbg.declare(metadata [128 x i8]* %fixedbuf, metadata !8953, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i8** %str, metadata !8956, metadata !DIExpression()), !dbg !8957
  %arraydecay210 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 0, !dbg !8958
  %146 = load i8*, i8** %drawstr, align 8, !dbg !8959
  %147 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8960
  %ofs211 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %147, i32 0, i32 11, !dbg !8961
  %148 = load i16, i16* %ofs211, align 2, !dbg !8961
  %conv212 = sext i16 %148 to i32, !dbg !8960
  %idx.ext213 = sext i32 %conv212 to i64, !dbg !8962
  %add.ptr214 = getelementptr inbounds i8, i8* %146, i64 %idx.ext213, !dbg !8962
  %149 = load i32, i32* %drawstr_left_len, align 4, !dbg !8963
  %call215 = call i32 @min_ii(i32 128, i32 %149), !dbg !8964
  %conv216 = sext i32 %call215 to i64, !dbg !8964
  %call217 = call i8* @BLI_strncpy(i8* %arraydecay210, i8* %add.ptr214, i64 %conv216), !dbg !8965
  %arraydecay218 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 0, !dbg !8966
  %150 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8967
  %menu_key219 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %150, i32 0, i32 62, !dbg !8968
  %151 = load i8, i8* %menu_key219, align 2, !dbg !8968
  %conv220 = zext i8 %151 to i32, !dbg !8967
  %sub221 = sub nsw i32 %conv220, 32, !dbg !8969
  %call222 = call i8* @strchr(i8* %arraydecay218, i32 %sub221) #7, !dbg !8970
  store i8* %call222, i8** %str, align 8, !dbg !8971
  %152 = load i8*, i8** %str, align 8, !dbg !8972
  %cmp223 = icmp eq i8* %152, null, !dbg !8974
  br i1 %cmp223, label %if.then225, label %if.end230, !dbg !8975

if.then225:                                       ; preds = %if.then209
  %arraydecay226 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 0, !dbg !8976
  %153 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8977
  %menu_key227 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %153, i32 0, i32 62, !dbg !8978
  %154 = load i8, i8* %menu_key227, align 2, !dbg !8978
  %conv228 = zext i8 %154 to i32, !dbg !8977
  %call229 = call i8* @strchr(i8* %arraydecay226, i32 %conv228) #7, !dbg !8979
  store i8* %call229, i8** %str, align 8, !dbg !8980
  br label %if.end230, !dbg !8981

if.end230:                                        ; preds = %if.then225, %if.then209
  %155 = load i8*, i8** %str, align 8, !dbg !8982
  %tobool231 = icmp ne i8* %155, null, !dbg !8982
  br i1 %tobool231, label %if.then232, label %if.end271, !dbg !8984

if.then232:                                       ; preds = %if.end230
  call void @llvm.dbg.declare(metadata i32* %ul_index, metadata !8985, metadata !DIExpression()), !dbg !8987
  store i32 -1, i32* %ul_index, align 4, !dbg !8987
  call void @llvm.dbg.declare(metadata float* %ul_advance, metadata !8988, metadata !DIExpression()), !dbg !8989
  %156 = load i8*, i8** %str, align 8, !dbg !8990
  %arraydecay233 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 0, !dbg !8991
  %sub.ptr.lhs.cast234 = ptrtoint i8* %156 to i64, !dbg !8992
  %sub.ptr.rhs.cast235 = ptrtoint i8* %arraydecay233 to i64, !dbg !8992
  %sub.ptr.sub236 = sub i64 %sub.ptr.lhs.cast234, %sub.ptr.rhs.cast235, !dbg !8992
  %conv237 = trunc i64 %sub.ptr.sub236 to i32, !dbg !8993
  store i32 %conv237, i32* %ul_index, align 4, !dbg !8994
  %157 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !8995
  %kerning238 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %157, i32 0, i32 2, !dbg !8997
  %158 = load i16, i16* %kerning238, align 4, !dbg !8997
  %conv239 = sext i16 %158 to i32, !dbg !8995
  %cmp240 = icmp eq i32 %conv239, 1, !dbg !8998
  br i1 %cmp240, label %if.then242, label %if.end245, !dbg !8999

if.then242:                                       ; preds = %if.then232
  %159 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9000
  %uifont_id243 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %159, i32 0, i32 0, !dbg !9002
  %160 = load i16, i16* %uifont_id243, align 4, !dbg !9002
  %conv244 = sext i16 %160 to i32, !dbg !9000
  call void @BLF_enable(i32 %conv244, i32 8), !dbg !9003
  br label %if.end245, !dbg !9004

if.end245:                                        ; preds = %if.then242, %if.then232
  %161 = load i32, i32* %ul_index, align 4, !dbg !9005
  %idxprom = sext i32 %161 to i64, !dbg !9006
  %arrayidx246 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 %idxprom, !dbg !9006
  store i8 0, i8* %arrayidx246, align 1, !dbg !9007
  %162 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9008
  %uifont_id247 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %162, i32 0, i32 0, !dbg !9009
  %163 = load i16, i16* %uifont_id247, align 4, !dbg !9009
  %conv248 = sext i16 %163 to i32, !dbg !9008
  %arraydecay249 = getelementptr inbounds [128 x i8], [128 x i8]* %fixedbuf, i64 0, i64 0, !dbg !9010
  %164 = load i32, i32* %ul_index, align 4, !dbg !9011
  %conv250 = sext i32 %164 to i64, !dbg !9011
  %call251 = call float @BLF_width(i32 %conv248, i8* %arraydecay249, i64 %conv250), !dbg !9012
  store float %call251, float* %ul_advance, align 4, !dbg !9013
  %165 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9014
  %uifont_id252 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %165, i32 0, i32 0, !dbg !9015
  %166 = load i16, i16* %uifont_id252, align 4, !dbg !9015
  %conv253 = sext i16 %166 to i32, !dbg !9014
  %167 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9016
  %xmin254 = getelementptr inbounds %struct.rcti, %struct.rcti* %167, i32 0, i32 0, !dbg !9017
  %168 = load i32, i32* %xmin254, align 4, !dbg !9017
  %conv255 = sitofp i32 %168 to float, !dbg !9016
  %169 = load float, float* %font_xofs, align 4, !dbg !9018
  %add256 = fadd float %conv255, %169, !dbg !9019
  %170 = load float, float* %ul_advance, align 4, !dbg !9020
  %add257 = fadd float %add256, %170, !dbg !9021
  %171 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9022
  %ymin258 = getelementptr inbounds %struct.rcti, %struct.rcti* %171, i32 0, i32 2, !dbg !9023
  %172 = load i32, i32* %ymin258, align 4, !dbg !9023
  %conv259 = sitofp i32 %172 to float, !dbg !9022
  %173 = load float, float* %font_yofs, align 4, !dbg !9024
  %add260 = fadd float %conv259, %173, !dbg !9025
  call void @BLF_position(i32 %conv253, float %add257, float %add260, float 0.000000e+00), !dbg !9026
  %174 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9027
  %uifont_id261 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %174, i32 0, i32 0, !dbg !9028
  %175 = load i16, i16* %uifont_id261, align 4, !dbg !9028
  %conv262 = sext i16 %175 to i32, !dbg !9027
  call void @BLF_draw(i32 %conv262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 2), !dbg !9029
  %176 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9030
  %kerning263 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %176, i32 0, i32 2, !dbg !9032
  %177 = load i16, i16* %kerning263, align 4, !dbg !9032
  %conv264 = sext i16 %177 to i32, !dbg !9030
  %cmp265 = icmp eq i32 %conv264, 1, !dbg !9033
  br i1 %cmp265, label %if.then267, label %if.end270, !dbg !9034

if.then267:                                       ; preds = %if.end245
  %178 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9035
  %uifont_id268 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %178, i32 0, i32 0, !dbg !9037
  %179 = load i16, i16* %uifont_id268, align 4, !dbg !9037
  %conv269 = sext i16 %179 to i32, !dbg !9035
  call void @BLF_disable(i32 %conv269, i32 8), !dbg !9038
  br label %if.end270, !dbg !9039

if.end270:                                        ; preds = %if.then267, %if.end245
  br label %if.end271, !dbg !9040

if.end271:                                        ; preds = %if.end270, %if.end230
  br label %if.end272, !dbg !9041

if.end272:                                        ; preds = %if.end271, %if.then197
  br label %if.end273, !dbg !9042

if.end273:                                        ; preds = %if.end272, %if.end194
  %180 = load i8*, i8** %drawstr_right, align 8, !dbg !9043
  %tobool274 = icmp ne i8* %180, null, !dbg !9043
  br i1 %tobool274, label %if.then275, label %if.end284, !dbg !9045

if.then275:                                       ; preds = %if.end273
  %181 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9046
  %align276 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %181, i32 0, i32 9, !dbg !9048
  store i16 2, i16* %align276, align 2, !dbg !9049
  %182 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9050
  %conv277 = sext i16 %182 to i32, !dbg !9050
  %conv278 = sitofp i32 %conv277 to float, !dbg !9050
  %mul = fmul float 2.500000e-01, %conv278, !dbg !9050
  %183 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9050
  %block279 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %183, i32 0, i32 74, !dbg !9050
  %184 = load %struct.uiBlock*, %struct.uiBlock** %block279, align 8, !dbg !9050
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %184, i32 0, i32 12, !dbg !9050
  %185 = load float, float* %aspect, align 8, !dbg !9050
  %div = fdiv float %mul, %185, !dbg !9050
  %186 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9051
  %xmax280 = getelementptr inbounds %struct.rcti, %struct.rcti* %186, i32 0, i32 1, !dbg !9052
  %187 = load i32, i32* %xmax280, align 4, !dbg !9053
  %conv281 = sitofp i32 %187 to float, !dbg !9053
  %sub282 = fsub float %conv281, %div, !dbg !9053
  %conv283 = fptosi float %sub282 to i32, !dbg !9053
  store i32 %conv283, i32* %xmax280, align 4, !dbg !9053
  %188 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !9054
  %189 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9055
  %190 = load i8*, i8** %drawstr_right, align 8, !dbg !9056
  call void @uiStyleFontDraw(%struct.uiFontStyle* %188, %struct.rcti* %189, i8* %190), !dbg !9057
  br label %if.end284, !dbg !9058

if.end284:                                        ; preds = %if.then275, %if.end273
  ret void, !dbg !9059
}

declare dso_local void @UI_icon_draw_aspect_color(float, float, i32, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !9060 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9061, metadata !DIExpression()), !dbg !9062
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9063, metadata !DIExpression()), !dbg !9064
  %0 = load i32, i32* %b.addr, align 4, !dbg !9065
  %1 = load i32, i32* %a.addr, align 4, !dbg !9066
  %cmp = icmp slt i32 %0, %1, !dbg !9067
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9068

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9069
  br label %cond.end, !dbg !9068

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9070
  br label %cond.end, !dbg !9068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9068
  ret i32 %cond, !dbg !9071
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_give_next_off(%struct.uiBut* %but, i8* %str) #0 !dbg !9072 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %next_utf8 = alloca i8*, align 8
  %bytes = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.declare(metadata i8** %next_utf8, metadata !9079, metadata !DIExpression()), !dbg !9080
  %0 = load i8*, i8** %str.addr, align 8, !dbg !9081
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9082
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 11, !dbg !9083
  %2 = load i16, i16* %ofs, align 2, !dbg !9083
  %conv = sext i16 %2 to i32, !dbg !9082
  %idx.ext = sext i32 %conv to i64, !dbg !9084
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !9084
  %call = call i8* @BLI_str_find_next_char_utf8(i8* %add.ptr, i8* null), !dbg !9085
  store i8* %call, i8** %next_utf8, align 8, !dbg !9080
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !9086, metadata !DIExpression()), !dbg !9087
  %3 = load i8*, i8** %next_utf8, align 8, !dbg !9088
  %4 = load i8*, i8** %str.addr, align 8, !dbg !9089
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9090
  %ofs1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 11, !dbg !9091
  %6 = load i16, i16* %ofs1, align 2, !dbg !9091
  %conv2 = sext i16 %6 to i32, !dbg !9090
  %idx.ext3 = sext i32 %conv2 to i64, !dbg !9092
  %add.ptr4 = getelementptr inbounds i8, i8* %4, i64 %idx.ext3, !dbg !9092
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !9093
  %sub.ptr.rhs.cast = ptrtoint i8* %add.ptr4 to i64, !dbg !9093
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9093
  %conv5 = trunc i64 %sub.ptr.sub to i32, !dbg !9088
  store i32 %conv5, i32* %bytes, align 4, !dbg !9087
  %7 = load i32, i32* %bytes, align 4, !dbg !9094
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9095
  %ofs6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 11, !dbg !9096
  %9 = load i16, i16* %ofs6, align 2, !dbg !9097
  %conv7 = sext i16 %9 to i32, !dbg !9097
  %add = add nsw i32 %conv7, %7, !dbg !9097
  %conv8 = trunc i32 %add to i16, !dbg !9097
  store i16 %conv8, i16* %ofs6, align 2, !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_give_prev_off(%struct.uiBut* %but, i8* %str) #0 !dbg !9099 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %prev_utf8 = alloca i8*, align 8
  %bytes = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.declare(metadata i8** %prev_utf8, metadata !9104, metadata !DIExpression()), !dbg !9105
  %0 = load i8*, i8** %str.addr, align 8, !dbg !9106
  %1 = load i8*, i8** %str.addr, align 8, !dbg !9107
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9108
  %ofs = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 11, !dbg !9109
  %3 = load i16, i16* %ofs, align 2, !dbg !9109
  %conv = sext i16 %3 to i32, !dbg !9108
  %idx.ext = sext i32 %conv to i64, !dbg !9110
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !9110
  %call = call i8* @BLI_str_find_prev_char_utf8(i8* %0, i8* %add.ptr), !dbg !9111
  store i8* %call, i8** %prev_utf8, align 8, !dbg !9105
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !9112, metadata !DIExpression()), !dbg !9113
  %4 = load i8*, i8** %str.addr, align 8, !dbg !9114
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9115
  %ofs1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 11, !dbg !9116
  %6 = load i16, i16* %ofs1, align 2, !dbg !9116
  %conv2 = sext i16 %6 to i32, !dbg !9115
  %idx.ext3 = sext i32 %conv2 to i64, !dbg !9117
  %add.ptr4 = getelementptr inbounds i8, i8* %4, i64 %idx.ext3, !dbg !9117
  %7 = load i8*, i8** %prev_utf8, align 8, !dbg !9118
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr4 to i64, !dbg !9119
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !9119
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9119
  %conv5 = trunc i64 %sub.ptr.sub to i32, !dbg !9114
  store i32 %conv5, i32* %bytes, align 4, !dbg !9113
  %8 = load i32, i32* %bytes, align 4, !dbg !9120
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9121
  %ofs6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 11, !dbg !9122
  %10 = load i16, i16* %ofs6, align 2, !dbg !9123
  %conv7 = sext i16 %10 to i32, !dbg !9123
  %sub = sub nsw i32 %conv7, %8, !dbg !9123
  %conv8 = trunc i32 %sub to i16, !dbg !9123
  store i16 %conv8, i16* %ofs6, align 2, !dbg !9123
  ret void, !dbg !9124
}

declare dso_local i32 @BLI_str_utf8_size(i8*) #2

declare dso_local i8* @BLI_str_find_prev_char_utf8(i8*, i8*) #2

declare dso_local i8* @BLI_str_find_next_char_utf8(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local i64 @BLF_width_to_strlen(i32, i8*, i64, float, float*) #2

declare dso_local void @glColor3f(float, float, float) #2

declare dso_local void @uiStyleFontDrawExt(%struct.uiFontStyle*, %struct.rcti*, i8*, i64, float*, float*) #2

declare dso_local void @BLF_position(i32, float, float, float) #2

declare dso_local void @BLF_draw(i32, i8*, i64) #2

declare dso_local void @sdrawline(i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !9125 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  %wcol_state = alloca %struct.uiWidgetStateColors*, align 8
  %btheme = alloca %struct.bTheme*, align 8
  %sw_ap = alloca i16, align 2
  %red = alloca [4 x i8], align 1
  %sw_ap153 = alloca i16, align 2
  %blue = alloca [4 x i8], align 1
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.declare(metadata %struct.uiWidgetStateColors** %wcol_state, metadata !9130, metadata !DIExpression()), !dbg !9131
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9132
  %wcol_state1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 1, !dbg !9133
  %1 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state1, align 8, !dbg !9133
  store %struct.uiWidgetStateColors* %1, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9131
  %2 = load i32, i32* %state.addr, align 4, !dbg !9134
  %and = and i32 %2, 16777216, !dbg !9136
  %tobool = icmp ne i32 %and, 0, !dbg !9136
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9137

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %state.addr, align 4, !dbg !9138
  %and2 = and i32 %3, 16, !dbg !9139
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9139
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9140

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !9141, metadata !DIExpression()), !dbg !9143
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !9144
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !9143
  %4 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !9145
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %4, i32 0, i32 3, !dbg !9146
  %wcol_list_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 16, !dbg !9147
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9148
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %5, i32 0, i32 0, !dbg !9149
  store %struct.uiWidgetColors* %wcol_list_item, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !9150
  br label %if.end, !dbg !9151

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9152
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %6, i32 0, i32 2, !dbg !9153
  %7 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9154
  %wcol_theme4 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %7, i32 0, i32 0, !dbg !9155
  %8 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme4, align 8, !dbg !9155
  %9 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !9156
  %10 = bitcast %struct.uiWidgetColors* %8 to i8*, !dbg !9156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 2 %10, i64 32, i1 false), !dbg !9156
  %11 = load i32, i32* %state.addr, align 4, !dbg !9157
  %and5 = and i32 %11, 1, !dbg !9159
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9159
  br i1 %tobool6, label %if.then7, label %if.else52, !dbg !9160

if.then7:                                         ; preds = %if.end
  %12 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9161
  %wcol8 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %12, i32 0, i32 2, !dbg !9163
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol8, i32 0, i32 1, !dbg !9164
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !9161
  %13 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9165
  %wcol9 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %13, i32 0, i32 2, !dbg !9166
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol9, i32 0, i32 2, !dbg !9167
  %arraydecay10 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !9165
  call void @copy_v4_v4_char(i8* %arraydecay, i8* %arraydecay10), !dbg !9168
  %14 = load i32, i32* %state.addr, align 4, !dbg !9169
  %and11 = and i32 %14, 16384, !dbg !9171
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9171
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !9172

if.then13:                                        ; preds = %if.then7
  %15 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9173
  %wcol14 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %15, i32 0, i32 2, !dbg !9174
  %inner15 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol14, i32 0, i32 1, !dbg !9175
  %arraydecay16 = getelementptr inbounds [4 x i8], [4 x i8]* %inner15, i64 0, i64 0, !dbg !9173
  %16 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9176
  %inner_key_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %16, i32 0, i32 3, !dbg !9177
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_key_sel, i64 0, i64 0, !dbg !9176
  %17 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9178
  %blend = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %17, i32 0, i32 6, !dbg !9179
  %18 = load float, float* %blend, align 4, !dbg !9179
  call void @widget_state_blend(i8* %arraydecay16, i8* %arraydecay17, float %18), !dbg !9180
  br label %if.end37, !dbg !9180

if.else:                                          ; preds = %if.then7
  %19 = load i32, i32* %state.addr, align 4, !dbg !9181
  %and18 = and i32 %19, 8192, !dbg !9183
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9183
  br i1 %tobool19, label %if.then20, label %if.else26, !dbg !9184

if.then20:                                        ; preds = %if.else
  %20 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9185
  %wcol21 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %20, i32 0, i32 2, !dbg !9186
  %inner22 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol21, i32 0, i32 1, !dbg !9187
  %arraydecay23 = getelementptr inbounds [4 x i8], [4 x i8]* %inner22, i64 0, i64 0, !dbg !9185
  %21 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9188
  %inner_anim_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %21, i32 0, i32 1, !dbg !9189
  %arraydecay24 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_anim_sel, i64 0, i64 0, !dbg !9188
  %22 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9190
  %blend25 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %22, i32 0, i32 6, !dbg !9191
  %23 = load float, float* %blend25, align 4, !dbg !9191
  call void @widget_state_blend(i8* %arraydecay23, i8* %arraydecay24, float %23), !dbg !9192
  br label %if.end36, !dbg !9192

if.else26:                                        ; preds = %if.else
  %24 = load i32, i32* %state.addr, align 4, !dbg !9193
  %and27 = and i32 %24, 32768, !dbg !9195
  %tobool28 = icmp ne i32 %and27, 0, !dbg !9195
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !9196

if.then29:                                        ; preds = %if.else26
  %25 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9197
  %wcol30 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %25, i32 0, i32 2, !dbg !9198
  %inner31 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol30, i32 0, i32 1, !dbg !9199
  %arraydecay32 = getelementptr inbounds [4 x i8], [4 x i8]* %inner31, i64 0, i64 0, !dbg !9197
  %26 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9200
  %inner_driven_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %26, i32 0, i32 5, !dbg !9201
  %arraydecay33 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_driven_sel, i64 0, i64 0, !dbg !9200
  %27 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9202
  %blend34 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %27, i32 0, i32 6, !dbg !9203
  %28 = load float, float* %blend34, align 4, !dbg !9203
  call void @widget_state_blend(i8* %arraydecay32, i8* %arraydecay33, float %28), !dbg !9204
  br label %if.end35, !dbg !9204

if.end35:                                         ; preds = %if.then29, %if.else26
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then13
  %29 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9205
  %wcol38 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %29, i32 0, i32 2, !dbg !9206
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol38, i32 0, i32 4, !dbg !9207
  %arraydecay39 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !9205
  %30 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9208
  %wcol40 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %30, i32 0, i32 2, !dbg !9209
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol40, i32 0, i32 5, !dbg !9210
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !9208
  call void @copy_v3_v3_char(i8* %arraydecay39, i8* %arraydecay41), !dbg !9211
  %31 = load i32, i32* %state.addr, align 4, !dbg !9212
  %and42 = and i32 %31, 1, !dbg !9214
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9214
  br i1 %tobool43, label %if.then44, label %if.end51, !dbg !9215

if.then44:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !9216, metadata !DIExpression()), !dbg !9218
  %32 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9218
  %wcol45 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %32, i32 0, i32 2, !dbg !9218
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol45, i32 0, i32 7, !dbg !9218
  %33 = load i16, i16* %shadetop, align 2, !dbg !9218
  store i16 %33, i16* %sw_ap, align 2, !dbg !9218
  %34 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9218
  %wcol46 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %34, i32 0, i32 2, !dbg !9218
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol46, i32 0, i32 8, !dbg !9218
  %35 = load i16, i16* %shadedown, align 4, !dbg !9218
  %36 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9218
  %wcol47 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %36, i32 0, i32 2, !dbg !9218
  %shadetop48 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol47, i32 0, i32 7, !dbg !9218
  store i16 %35, i16* %shadetop48, align 2, !dbg !9218
  %37 = load i16, i16* %sw_ap, align 2, !dbg !9218
  %38 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9218
  %wcol49 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %38, i32 0, i32 2, !dbg !9218
  %shadedown50 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol49, i32 0, i32 8, !dbg !9218
  store i16 %37, i16* %shadedown50, align 4, !dbg !9218
  br label %if.end51, !dbg !9218

if.end51:                                         ; preds = %if.then44, %if.end37
  br label %if.end135, !dbg !9219

if.else52:                                        ; preds = %if.end
  %39 = load i32, i32* %state.addr, align 4, !dbg !9220
  %and53 = and i32 %39, 16384, !dbg !9223
  %tobool54 = icmp ne i32 %and53, 0, !dbg !9223
  br i1 %tobool54, label %if.then55, label %if.else61, !dbg !9224

if.then55:                                        ; preds = %if.else52
  %40 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9225
  %wcol56 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %40, i32 0, i32 2, !dbg !9226
  %inner57 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol56, i32 0, i32 1, !dbg !9227
  %arraydecay58 = getelementptr inbounds [4 x i8], [4 x i8]* %inner57, i64 0, i64 0, !dbg !9225
  %41 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9228
  %inner_key = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %41, i32 0, i32 2, !dbg !9229
  %arraydecay59 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_key, i64 0, i64 0, !dbg !9228
  %42 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9230
  %blend60 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %42, i32 0, i32 6, !dbg !9231
  %43 = load float, float* %blend60, align 4, !dbg !9231
  call void @widget_state_blend(i8* %arraydecay58, i8* %arraydecay59, float %43), !dbg !9232
  br label %if.end81, !dbg !9232

if.else61:                                        ; preds = %if.else52
  %44 = load i32, i32* %state.addr, align 4, !dbg !9233
  %and62 = and i32 %44, 8192, !dbg !9235
  %tobool63 = icmp ne i32 %and62, 0, !dbg !9235
  br i1 %tobool63, label %if.then64, label %if.else70, !dbg !9236

if.then64:                                        ; preds = %if.else61
  %45 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9237
  %wcol65 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %45, i32 0, i32 2, !dbg !9238
  %inner66 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol65, i32 0, i32 1, !dbg !9239
  %arraydecay67 = getelementptr inbounds [4 x i8], [4 x i8]* %inner66, i64 0, i64 0, !dbg !9237
  %46 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9240
  %inner_anim = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %46, i32 0, i32 0, !dbg !9241
  %arraydecay68 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_anim, i64 0, i64 0, !dbg !9240
  %47 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9242
  %blend69 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %47, i32 0, i32 6, !dbg !9243
  %48 = load float, float* %blend69, align 4, !dbg !9243
  call void @widget_state_blend(i8* %arraydecay67, i8* %arraydecay68, float %48), !dbg !9244
  br label %if.end80, !dbg !9244

if.else70:                                        ; preds = %if.else61
  %49 = load i32, i32* %state.addr, align 4, !dbg !9245
  %and71 = and i32 %49, 32768, !dbg !9247
  %tobool72 = icmp ne i32 %and71, 0, !dbg !9247
  br i1 %tobool72, label %if.then73, label %if.end79, !dbg !9248

if.then73:                                        ; preds = %if.else70
  %50 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9249
  %wcol74 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %50, i32 0, i32 2, !dbg !9250
  %inner75 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol74, i32 0, i32 1, !dbg !9251
  %arraydecay76 = getelementptr inbounds [4 x i8], [4 x i8]* %inner75, i64 0, i64 0, !dbg !9249
  %51 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9252
  %inner_driven = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %51, i32 0, i32 4, !dbg !9253
  %arraydecay77 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_driven, i64 0, i64 0, !dbg !9252
  %52 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9254
  %blend78 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %52, i32 0, i32 6, !dbg !9255
  %53 = load float, float* %blend78, align 4, !dbg !9255
  call void @widget_state_blend(i8* %arraydecay76, i8* %arraydecay77, float %53), !dbg !9256
  br label %if.end79, !dbg !9256

if.end79:                                         ; preds = %if.then73, %if.else70
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then64
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then55
  %54 = load i32, i32* %state.addr, align 4, !dbg !9257
  %and82 = and i32 %54, 4, !dbg !9259
  %tobool83 = icmp ne i32 %and82, 0, !dbg !9259
  br i1 %tobool83, label %if.then84, label %if.end134, !dbg !9260

if.then84:                                        ; preds = %if.end81
  %55 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9261
  %wcol85 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %55, i32 0, i32 2, !dbg !9263
  %inner86 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol85, i32 0, i32 1, !dbg !9264
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner86, i64 0, i64 0, !dbg !9261
  %56 = load i8, i8* %arrayidx, align 4, !dbg !9261
  %conv = zext i8 %56 to i32, !dbg !9261
  %cmp = icmp sge i32 %conv, 240, !dbg !9265
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9261

cond.true:                                        ; preds = %if.then84
  br label %cond.end, !dbg !9261

cond.false:                                       ; preds = %if.then84
  %57 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9266
  %wcol88 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %57, i32 0, i32 2, !dbg !9267
  %inner89 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol88, i32 0, i32 1, !dbg !9268
  %arrayidx90 = getelementptr inbounds [4 x i8], [4 x i8]* %inner89, i64 0, i64 0, !dbg !9266
  %58 = load i8, i8* %arrayidx90, align 4, !dbg !9266
  %conv91 = zext i8 %58 to i32, !dbg !9266
  %add = add nsw i32 %conv91, 15, !dbg !9269
  br label %cond.end, !dbg !9261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 255, %cond.true ], [ %add, %cond.false ], !dbg !9261
  %conv92 = trunc i32 %cond to i8, !dbg !9261
  %59 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9270
  %wcol93 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %59, i32 0, i32 2, !dbg !9271
  %inner94 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol93, i32 0, i32 1, !dbg !9272
  %arrayidx95 = getelementptr inbounds [4 x i8], [4 x i8]* %inner94, i64 0, i64 0, !dbg !9270
  store i8 %conv92, i8* %arrayidx95, align 4, !dbg !9273
  %60 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9274
  %wcol96 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %60, i32 0, i32 2, !dbg !9275
  %inner97 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol96, i32 0, i32 1, !dbg !9276
  %arrayidx98 = getelementptr inbounds [4 x i8], [4 x i8]* %inner97, i64 0, i64 1, !dbg !9274
  %61 = load i8, i8* %arrayidx98, align 1, !dbg !9274
  %conv99 = zext i8 %61 to i32, !dbg !9274
  %cmp100 = icmp sge i32 %conv99, 240, !dbg !9277
  br i1 %cmp100, label %cond.true102, label %cond.false103, !dbg !9274

cond.true102:                                     ; preds = %cond.end
  br label %cond.end109, !dbg !9274

cond.false103:                                    ; preds = %cond.end
  %62 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9278
  %wcol104 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %62, i32 0, i32 2, !dbg !9279
  %inner105 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol104, i32 0, i32 1, !dbg !9280
  %arrayidx106 = getelementptr inbounds [4 x i8], [4 x i8]* %inner105, i64 0, i64 1, !dbg !9278
  %63 = load i8, i8* %arrayidx106, align 1, !dbg !9278
  %conv107 = zext i8 %63 to i32, !dbg !9278
  %add108 = add nsw i32 %conv107, 15, !dbg !9281
  br label %cond.end109, !dbg !9274

cond.end109:                                      ; preds = %cond.false103, %cond.true102
  %cond110 = phi i32 [ 255, %cond.true102 ], [ %add108, %cond.false103 ], !dbg !9274
  %conv111 = trunc i32 %cond110 to i8, !dbg !9274
  %64 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9282
  %wcol112 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %64, i32 0, i32 2, !dbg !9283
  %inner113 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol112, i32 0, i32 1, !dbg !9284
  %arrayidx114 = getelementptr inbounds [4 x i8], [4 x i8]* %inner113, i64 0, i64 1, !dbg !9282
  store i8 %conv111, i8* %arrayidx114, align 1, !dbg !9285
  %65 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9286
  %wcol115 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %65, i32 0, i32 2, !dbg !9287
  %inner116 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol115, i32 0, i32 1, !dbg !9288
  %arrayidx117 = getelementptr inbounds [4 x i8], [4 x i8]* %inner116, i64 0, i64 2, !dbg !9286
  %66 = load i8, i8* %arrayidx117, align 2, !dbg !9286
  %conv118 = zext i8 %66 to i32, !dbg !9286
  %cmp119 = icmp sge i32 %conv118, 240, !dbg !9289
  br i1 %cmp119, label %cond.true121, label %cond.false122, !dbg !9286

cond.true121:                                     ; preds = %cond.end109
  br label %cond.end128, !dbg !9286

cond.false122:                                    ; preds = %cond.end109
  %67 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9290
  %wcol123 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %67, i32 0, i32 2, !dbg !9291
  %inner124 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol123, i32 0, i32 1, !dbg !9292
  %arrayidx125 = getelementptr inbounds [4 x i8], [4 x i8]* %inner124, i64 0, i64 2, !dbg !9290
  %68 = load i8, i8* %arrayidx125, align 2, !dbg !9290
  %conv126 = zext i8 %68 to i32, !dbg !9290
  %add127 = add nsw i32 %conv126, 15, !dbg !9293
  br label %cond.end128, !dbg !9286

cond.end128:                                      ; preds = %cond.false122, %cond.true121
  %cond129 = phi i32 [ 255, %cond.true121 ], [ %add127, %cond.false122 ], !dbg !9286
  %conv130 = trunc i32 %cond129 to i8, !dbg !9286
  %69 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9294
  %wcol131 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %69, i32 0, i32 2, !dbg !9295
  %inner132 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol131, i32 0, i32 1, !dbg !9296
  %arrayidx133 = getelementptr inbounds [4 x i8], [4 x i8]* %inner132, i64 0, i64 2, !dbg !9294
  store i8 %conv130, i8* %arrayidx133, align 2, !dbg !9297
  br label %if.end134, !dbg !9298

if.end134:                                        ; preds = %cond.end128, %if.end81
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end51
  %70 = load i32, i32* %state.addr, align 4, !dbg !9299
  %and136 = and i32 %70, 65536, !dbg !9301
  %tobool137 = icmp ne i32 %and136, 0, !dbg !9301
  br i1 %tobool137, label %if.then138, label %if.end143, !dbg !9302

if.then138:                                       ; preds = %if.end135
  call void @llvm.dbg.declare(metadata [4 x i8]* %red, metadata !9303, metadata !DIExpression()), !dbg !9305
  %71 = bitcast [4 x i8]* %red to i8*, !dbg !9305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.widget_state.red, i32 0, i32 0), i64 4, i1 false), !dbg !9305
  %72 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9306
  %wcol139 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %72, i32 0, i32 2, !dbg !9307
  %inner140 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol139, i32 0, i32 1, !dbg !9308
  %arraydecay141 = getelementptr inbounds [4 x i8], [4 x i8]* %inner140, i64 0, i64 0, !dbg !9306
  %arraydecay142 = getelementptr inbounds [4 x i8], [4 x i8]* %red, i64 0, i64 0, !dbg !9309
  call void @widget_state_blend(i8* %arraydecay141, i8* %arraydecay142, float 0x3FD99999A0000000), !dbg !9310
  br label %if.end143, !dbg !9311

if.end143:                                        ; preds = %if.then138, %if.end135
  %73 = load i32, i32* %state.addr, align 4, !dbg !9312
  %and144 = and i32 %73, 33554432, !dbg !9314
  %tobool145 = icmp ne i32 %and144, 0, !dbg !9314
  br i1 %tobool145, label %if.then146, label %if.end168, !dbg !9315

if.then146:                                       ; preds = %if.end143
  %74 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9316
  %wcol147 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %74, i32 0, i32 2, !dbg !9318
  %inner148 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol147, i32 0, i32 1, !dbg !9319
  %arraydecay149 = getelementptr inbounds [4 x i8], [4 x i8]* %inner148, i64 0, i64 0, !dbg !9316
  %75 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9320
  %wcol150 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %75, i32 0, i32 2, !dbg !9321
  %inner_sel151 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol150, i32 0, i32 2, !dbg !9322
  %arraydecay152 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel151, i64 0, i64 0, !dbg !9320
  call void @copy_v4_v4_char(i8* %arraydecay149, i8* %arraydecay152), !dbg !9323
  call void @llvm.dbg.declare(metadata i16* %sw_ap153, metadata !9324, metadata !DIExpression()), !dbg !9326
  %76 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9326
  %wcol154 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %76, i32 0, i32 2, !dbg !9326
  %shadetop155 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol154, i32 0, i32 7, !dbg !9326
  %77 = load i16, i16* %shadetop155, align 2, !dbg !9326
  store i16 %77, i16* %sw_ap153, align 2, !dbg !9326
  %78 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9326
  %wcol156 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %78, i32 0, i32 2, !dbg !9326
  %shadedown157 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol156, i32 0, i32 8, !dbg !9326
  %79 = load i16, i16* %shadedown157, align 4, !dbg !9326
  %80 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9326
  %wcol158 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %80, i32 0, i32 2, !dbg !9326
  %shadetop159 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol158, i32 0, i32 7, !dbg !9326
  store i16 %79, i16* %shadetop159, align 2, !dbg !9326
  %81 = load i16, i16* %sw_ap153, align 2, !dbg !9326
  %82 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9326
  %wcol160 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %82, i32 0, i32 2, !dbg !9326
  %shadedown161 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol160, i32 0, i32 8, !dbg !9326
  store i16 %81, i16* %shadedown161, align 4, !dbg !9326
  %83 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9327
  %wcol162 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %83, i32 0, i32 2, !dbg !9328
  %text163 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol162, i32 0, i32 4, !dbg !9329
  %arraydecay164 = getelementptr inbounds [4 x i8], [4 x i8]* %text163, i64 0, i64 0, !dbg !9327
  %84 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9330
  %wcol165 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %84, i32 0, i32 2, !dbg !9331
  %text_sel166 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol165, i32 0, i32 5, !dbg !9332
  %arraydecay167 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel166, i64 0, i64 0, !dbg !9330
  call void @widget_state_blend(i8* %arraydecay164, i8* %arraydecay167, float 0x3FEB333340000000), !dbg !9333
  br label %if.end168, !dbg !9334

if.end168:                                        ; preds = %if.then146, %if.end143
  %85 = load i32, i32* %state.addr, align 4, !dbg !9335
  %and169 = and i32 %85, 512, !dbg !9337
  %tobool170 = icmp ne i32 %and169, 0, !dbg !9337
  br i1 %tobool170, label %if.then171, label %if.end176, !dbg !9338

if.then171:                                       ; preds = %if.end168
  call void @llvm.dbg.declare(metadata [4 x i8]* %blue, metadata !9339, metadata !DIExpression()), !dbg !9341
  %86 = bitcast [4 x i8]* %blue to i8*, !dbg !9341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.widget_state.blue, i32 0, i32 0), i64 4, i1 false), !dbg !9341
  %87 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9342
  %wcol172 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %87, i32 0, i32 2, !dbg !9343
  %inner173 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol172, i32 0, i32 1, !dbg !9344
  %arraydecay174 = getelementptr inbounds [4 x i8], [4 x i8]* %inner173, i64 0, i64 0, !dbg !9342
  %arraydecay175 = getelementptr inbounds [4 x i8], [4 x i8]* %blue, i64 0, i64 0, !dbg !9345
  call void @widget_state_blend(i8* %arraydecay174, i8* %arraydecay175, float 0x3FD3333340000000), !dbg !9346
  br label %if.end176, !dbg !9347

if.end176:                                        ; preds = %if.then171, %if.end168
  ret void, !dbg !9348
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_but(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9349 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9352, metadata !DIExpression()), !dbg !9353
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9354, metadata !DIExpression()), !dbg !9355
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9356, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9358, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9360, metadata !DIExpression()), !dbg !9361
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9362
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9363
  %conv = sext i16 %0 to i32, !dbg !9364
  %conv1 = sitofp i32 %conv to float, !dbg !9364
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !9365
  store float %mul, float* %rad, align 4, !dbg !9366
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9367
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9368
  %3 = load float, float* %rad, align 4, !dbg !9369
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %1, %struct.rcti* %2, float %3), !dbg !9370
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9371
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %4), !dbg !9372
  ret void, !dbg !9373
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_label(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !9374 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  %btheme = alloca %struct.bTheme*, align 8
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = load i32, i32* %state.addr, align 4, !dbg !9379
  %and = and i32 %0, 16777216, !dbg !9381
  %tobool = icmp ne i32 %and, 0, !dbg !9381
  br i1 %tobool, label %if.then, label %if.else, !dbg !9382

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !9383, metadata !DIExpression()), !dbg !9385
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !9386
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !9385
  %1 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !9387
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %1, i32 0, i32 3, !dbg !9388
  %wcol_list_item = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 16, !dbg !9389
  %2 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9390
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %2, i32 0, i32 0, !dbg !9391
  store %struct.uiWidgetColors* %wcol_list_item, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !9392
  %3 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9393
  %4 = load i32, i32* %state.addr, align 4, !dbg !9394
  call void @widget_state(%struct.uiWidgetType* %3, i32 %4), !dbg !9395
  br label %if.end8, !dbg !9396

if.else:                                          ; preds = %entry
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9397
  %6 = load i32, i32* %state.addr, align 4, !dbg !9399
  call void @widget_state(%struct.uiWidgetType* %5, i32 %6), !dbg !9400
  %7 = load i32, i32* %state.addr, align 4, !dbg !9401
  %and1 = and i32 %7, 1, !dbg !9403
  %tobool2 = icmp ne i32 %and1, 0, !dbg !9403
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !9404

if.then3:                                         ; preds = %if.else
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9405
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !9406
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol, i32 0, i32 4, !dbg !9407
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !9405
  call void @UI_GetThemeColor3ubv(i32 4, i8* %arraydecay), !dbg !9408
  br label %if.end, !dbg !9408

if.else4:                                         ; preds = %if.else
  %9 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9409
  %wcol5 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %9, i32 0, i32 2, !dbg !9410
  %text6 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol5, i32 0, i32 4, !dbg !9411
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %text6, i64 0, i64 0, !dbg !9409
  call void @UI_GetThemeColor3ubv(i32 3, i8* %arraydecay7), !dbg !9412
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !9413
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_optionbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %UNUSED_roundboxalign) #0 !dbg !9414 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %recttemp = alloca %struct.rcti, align 4
  %rad = alloca float, align 4
  %delta = alloca i32, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9417, metadata !DIExpression()), !dbg !9418
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9419, metadata !DIExpression()), !dbg !9420
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !9421, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9423, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.declare(metadata %struct.rcti* %recttemp, metadata !9425, metadata !DIExpression()), !dbg !9426
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9427
  %1 = bitcast %struct.rcti* %recttemp to i8*, !dbg !9428
  %2 = bitcast %struct.rcti* %0 to i8*, !dbg !9428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !9428
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9433
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 0, !dbg !9434
  %3 = load i32, i32* %xmin, align 4, !dbg !9434
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %recttemp), !dbg !9435
  %add = add nsw i32 %3, %call, !dbg !9436
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 1, !dbg !9437
  store i32 %add, i32* %xmax, align 4, !dbg !9438
  %call1 = call i32 @BLI_rcti_size_y(%struct.rcti* %recttemp), !dbg !9439
  %div = sdiv i32 %call1, 8, !dbg !9440
  %add2 = add nsw i32 1, %div, !dbg !9441
  store i32 %add2, i32* %delta, align 4, !dbg !9442
  %4 = load i32, i32* %delta, align 4, !dbg !9443
  %xmin3 = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 0, !dbg !9444
  %5 = load i32, i32* %xmin3, align 4, !dbg !9445
  %add4 = add nsw i32 %5, %4, !dbg !9445
  store i32 %add4, i32* %xmin3, align 4, !dbg !9445
  %6 = load i32, i32* %delta, align 4, !dbg !9446
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 2, !dbg !9447
  %7 = load i32, i32* %ymin, align 4, !dbg !9448
  %add5 = add nsw i32 %7, %6, !dbg !9448
  store i32 %add5, i32* %ymin, align 4, !dbg !9448
  %8 = load i32, i32* %delta, align 4, !dbg !9449
  %xmax6 = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 1, !dbg !9450
  %9 = load i32, i32* %xmax6, align 4, !dbg !9451
  %sub = sub nsw i32 %9, %8, !dbg !9451
  store i32 %sub, i32* %xmax6, align 4, !dbg !9451
  %10 = load i32, i32* %delta, align 4, !dbg !9452
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %recttemp, i32 0, i32 3, !dbg !9453
  %11 = load i32, i32* %ymax, align 4, !dbg !9454
  %sub7 = sub nsw i32 %11, %10, !dbg !9454
  store i32 %sub7, i32* %ymax, align 4, !dbg !9454
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9455
  %conv = sext i16 %12 to i32, !dbg !9456
  %conv8 = sitofp i32 %conv to float, !dbg !9456
  %mul = fmul float 0x3FC99999A0000000, %conv8, !dbg !9457
  store float %mul, float* %rad, align 4, !dbg !9458
  %13 = load float, float* %rad, align 4, !dbg !9459
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %recttemp, float %13), !dbg !9460
  %14 = load i32, i32* %state.addr, align 4, !dbg !9461
  %and = and i32 %14, 1, !dbg !9463
  %tobool = icmp ne i32 %and, 0, !dbg !9463
  br i1 %tobool, label %if.then, label %if.end, !dbg !9464

if.then:                                          ; preds = %entry
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 9, !dbg !9465
  call void @widget_check_trias(%struct.uiWidgetTrias* %tria1, %struct.rcti* %recttemp), !dbg !9467
  br label %if.end, !dbg !9468

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9469
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %15), !dbg !9470
  %16 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9471
  %call9 = call i32 @BLI_rcti_size_y(%struct.rcti* %16), !dbg !9472
  %conv10 = sitofp i32 %call9 to double, !dbg !9472
  %mul11 = fmul double %conv10, 0x3FE6666666666666, !dbg !9473
  %17 = load i32, i32* %delta, align 4, !dbg !9474
  %conv12 = sitofp i32 %17 to double, !dbg !9474
  %add13 = fadd double %mul11, %conv12, !dbg !9475
  %18 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9476
  %xmin14 = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 0, !dbg !9477
  %19 = load i32, i32* %xmin14, align 4, !dbg !9478
  %conv15 = sitofp i32 %19 to double, !dbg !9478
  %add16 = fadd double %conv15, %add13, !dbg !9478
  %conv17 = fptosi double %add16 to i32, !dbg !9478
  store i32 %conv17, i32* %xmin14, align 4, !dbg !9478
  ret void, !dbg !9479
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_radiobut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9480 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9481, metadata !DIExpression()), !dbg !9482
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9483, metadata !DIExpression()), !dbg !9484
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9489, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9491, metadata !DIExpression()), !dbg !9492
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9493
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9494
  %conv = sext i16 %0 to i32, !dbg !9495
  %conv1 = sitofp i32 %conv to float, !dbg !9495
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !9496
  store float %mul, float* %rad, align 4, !dbg !9497
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9498
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9499
  %3 = load float, float* %rad, align 4, !dbg !9500
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %1, %struct.rcti* %2, float %3), !dbg !9501
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9502
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %4), !dbg !9503
  ret void, !dbg !9504
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_numbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !9505 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9506, metadata !DIExpression()), !dbg !9507
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9510, metadata !DIExpression()), !dbg !9511
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9512, metadata !DIExpression()), !dbg !9513
  %0 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9514
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9515
  %2 = load i32, i32* %state.addr, align 4, !dbg !9516
  %3 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9517
  call void @widget_numbut_draw(%struct.uiWidgetColors* %0, %struct.rcti* %1, i32 %2, i32 %3, i8 zeroext 0), !dbg !9518
  ret void, !dbg !9519
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_numslider(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !9520 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %wtb1 = alloca %struct.uiWidgetBase, align 8
  %rect1 = alloca %struct.rcti, align 4
  %value = alloca double, align 8
  %offs = alloca float, align 4
  %toffs = alloca float, align 4
  %fac = alloca float, align 4
  %outline = alloca [3 x i8], align 1
  %roundboxalign_slider = alloca i32, align 4
  %sw_ap = alloca i16, align 2
  %sw_ap65 = alloca i16, align 2
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !9521, metadata !DIExpression()), !dbg !9522
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9523, metadata !DIExpression()), !dbg !9524
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9525, metadata !DIExpression()), !dbg !9526
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9527, metadata !DIExpression()), !dbg !9528
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9529, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9531, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb1, metadata !9533, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect1, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata double* %value, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata float* %offs, metadata !9539, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata float* %toffs, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata [3 x i8]* %outline, metadata !9545, metadata !DIExpression()), !dbg !9546
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9547
  call void @widget_init(%struct.uiWidgetBase* %wtb1), !dbg !9548
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9549
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %0), !dbg !9550
  %conv = sitofp i32 %call to float, !dbg !9550
  %mul = fmul float 5.000000e-01, %conv, !dbg !9551
  store float %mul, float* %offs, align 4, !dbg !9552
  %1 = load float, float* %offs, align 4, !dbg !9553
  %mul1 = fmul float %1, 7.500000e-01, !dbg !9554
  store float %mul1, float* %toffs, align 4, !dbg !9555
  %2 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9556
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9557
  %4 = load float, float* %offs, align 4, !dbg !9558
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %2, %struct.rcti* %3, float %4), !dbg !9559
  %outline2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !9560
  store i8 0, i8* %outline2, align 1, !dbg !9561
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9562
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %5), !dbg !9563
  %6 = load i32, i32* %state.addr, align 4, !dbg !9564
  %and = and i32 %6, 16, !dbg !9566
  %tobool = icmp ne i32 %and, 0, !dbg !9566
  br i1 %tobool, label %if.end71, label %if.then, !dbg !9567

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %roundboxalign_slider, metadata !9568, metadata !DIExpression()), !dbg !9570
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %outline, i64 0, i64 0, !dbg !9571
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9572
  %outline3 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 0, !dbg !9573
  %arraydecay4 = getelementptr inbounds [4 x i8], [4 x i8]* %outline3, i64 0, i64 0, !dbg !9572
  call void @copy_v3_v3_char(i8* %arraydecay, i8* %arraydecay4), !dbg !9574
  %8 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9575
  %outline5 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %8, i32 0, i32 0, !dbg !9576
  %arraydecay6 = getelementptr inbounds [4 x i8], [4 x i8]* %outline5, i64 0, i64 0, !dbg !9575
  %9 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9577
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %9, i32 0, i32 3, !dbg !9578
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !9577
  call void @copy_v3_v3_char(i8* %arraydecay6, i8* %arraydecay7), !dbg !9579
  %10 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9580
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %10, i32 0, i32 1, !dbg !9581
  %arraydecay8 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !9580
  %11 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9582
  %item9 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %11, i32 0, i32 3, !dbg !9583
  %arraydecay10 = getelementptr inbounds [4 x i8], [4 x i8]* %item9, i64 0, i64 0, !dbg !9582
  call void @copy_v3_v3_char(i8* %arraydecay8, i8* %arraydecay10), !dbg !9584
  %12 = load i32, i32* %state.addr, align 4, !dbg !9585
  %and11 = and i32 %12, 1, !dbg !9587
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9587
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !9588

if.then13:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !9589, metadata !DIExpression()), !dbg !9591
  %13 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9591
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %13, i32 0, i32 7, !dbg !9591
  %14 = load i16, i16* %shadetop, align 2, !dbg !9591
  store i16 %14, i16* %sw_ap, align 2, !dbg !9591
  %15 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9591
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %15, i32 0, i32 8, !dbg !9591
  %16 = load i16, i16* %shadedown, align 2, !dbg !9591
  %17 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9591
  %shadetop14 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %17, i32 0, i32 7, !dbg !9591
  store i16 %16, i16* %shadetop14, align 2, !dbg !9591
  %18 = load i16, i16* %sw_ap, align 2, !dbg !9591
  %19 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9591
  %shadedown15 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %19, i32 0, i32 8, !dbg !9591
  store i16 %18, i16* %shadedown15, align 2, !dbg !9591
  br label %if.end, !dbg !9591

if.end:                                           ; preds = %if.then13, %if.then
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9592
  %21 = bitcast %struct.rcti* %rect1 to i8*, !dbg !9593
  %22 = bitcast %struct.rcti* %20 to i8*, !dbg !9593
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false), !dbg !9593
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9594
  %call16 = call double @ui_get_but_val(%struct.uiBut* %23), !dbg !9595
  store double %call16, double* %value, align 8, !dbg !9596
  %24 = load double, double* %value, align 8, !dbg !9597
  %conv17 = fptrunc double %24 to float, !dbg !9598
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9599
  %softmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 22, !dbg !9600
  %26 = load float, float* %softmin, align 8, !dbg !9600
  %sub = fsub float %conv17, %26, !dbg !9601
  %call18 = call i32 @BLI_rcti_size_x(%struct.rcti* %rect1), !dbg !9602
  %conv19 = sitofp i32 %call18 to float, !dbg !9602
  %27 = load float, float* %offs, align 4, !dbg !9603
  %sub20 = fsub float %conv19, %27, !dbg !9604
  %mul21 = fmul float %sub, %sub20, !dbg !9605
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9606
  %softmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 23, !dbg !9607
  %29 = load float, float* %softmax, align 4, !dbg !9607
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9608
  %softmin22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 22, !dbg !9609
  %31 = load float, float* %softmin22, align 8, !dbg !9609
  %sub23 = fsub float %29, %31, !dbg !9610
  %div = fdiv float %mul21, %sub23, !dbg !9611
  store float %div, float* %fac, align 4, !dbg !9612
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !9613
  %32 = load i32, i32* %xmin, align 4, !dbg !9613
  %conv24 = sitofp i32 %32 to double, !dbg !9614
  %33 = load float, float* %offs, align 4, !dbg !9615
  %34 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9616
  %add = fadd float %33, %34, !dbg !9617
  %conv25 = fpext float %add to double, !dbg !9615
  %35 = call double @llvm.ceil.f64(double %conv25), !dbg !9618
  %add26 = fadd double %conv24, %35, !dbg !9619
  %conv27 = fptosi double %add26 to i32, !dbg !9614
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !9620
  store i32 %conv27, i32* %xmax, align 4, !dbg !9621
  %36 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9622
  %and28 = and i32 %36, -7, !dbg !9623
  %37 = load float, float* %offs, align 4, !dbg !9624
  call void @round_box_edges(%struct.uiWidgetBase* %wtb1, i32 %and28, %struct.rcti* %rect1, float %37), !dbg !9625
  %outline29 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb1, i32 0, i32 6, !dbg !9626
  store i8 0, i8* %outline29, align 1, !dbg !9627
  %38 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9628
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb1, %struct.uiWidgetColors* %38), !dbg !9629
  %xmin30 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !9630
  %39 = load i32, i32* %xmin30, align 4, !dbg !9630
  %conv31 = sitofp i32 %39 to float, !dbg !9631
  %40 = load float, float* %fac, align 4, !dbg !9632
  %add32 = fadd float %conv31, %40, !dbg !9633
  %41 = load float, float* %offs, align 4, !dbg !9634
  %add33 = fadd float %add32, %41, !dbg !9635
  %conv34 = fptosi float %add33 to i32, !dbg !9631
  %xmax35 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !9636
  store i32 %conv34, i32* %xmax35, align 4, !dbg !9637
  %42 = load float, float* %offs, align 4, !dbg !9638
  %43 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9639
  %sub36 = fsub float %42, %43, !dbg !9640
  %conv37 = fpext float %sub36 to double, !dbg !9638
  %44 = call double @llvm.floor.f64(double %conv37), !dbg !9641
  %xmin38 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !9642
  %45 = load i32, i32* %xmin38, align 4, !dbg !9643
  %conv39 = sitofp i32 %45 to double, !dbg !9643
  %add40 = fadd double %conv39, %44, !dbg !9643
  %conv41 = fptosi double %add40 to i32, !dbg !9643
  store i32 %conv41, i32* %xmin38, align 4, !dbg !9643
  %xmax42 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !9644
  %46 = load i32, i32* %xmax42, align 4, !dbg !9644
  %conv43 = sitofp i32 %46 to float, !dbg !9646
  %47 = load float, float* %offs, align 4, !dbg !9647
  %add44 = fadd float %conv43, %47, !dbg !9648
  %48 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9649
  %xmax45 = getelementptr inbounds %struct.rcti, %struct.rcti* %48, i32 0, i32 1, !dbg !9650
  %49 = load i32, i32* %xmax45, align 4, !dbg !9650
  %conv46 = sitofp i32 %49 to float, !dbg !9649
  %cmp = fcmp ogt float %add44, %conv46, !dbg !9651
  br i1 %cmp, label %if.then48, label %if.else, !dbg !9652

if.then48:                                        ; preds = %if.end
  %50 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9653
  %and49 = and i32 %50, -10, !dbg !9655
  store i32 %and49, i32* %roundboxalign_slider, align 4, !dbg !9656
  %xmax50 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !9657
  %51 = load i32, i32* %xmax50, align 4, !dbg !9657
  %conv51 = sitofp i32 %51 to float, !dbg !9658
  %52 = load float, float* %offs, align 4, !dbg !9659
  %add52 = fadd float %conv51, %52, !dbg !9660
  %53 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9661
  %xmax53 = getelementptr inbounds %struct.rcti, %struct.rcti* %53, i32 0, i32 1, !dbg !9662
  %54 = load i32, i32* %xmax53, align 4, !dbg !9662
  %conv54 = sitofp i32 %54 to float, !dbg !9661
  %sub55 = fsub float %add52, %conv54, !dbg !9663
  %55 = load float, float* %offs, align 4, !dbg !9664
  %div56 = fdiv float %sub55, %55, !dbg !9665
  %56 = load float, float* %offs, align 4, !dbg !9666
  %mul57 = fmul float %56, %div56, !dbg !9666
  store float %mul57, float* %offs, align 4, !dbg !9666
  br label %if.end58, !dbg !9667

if.else:                                          ; preds = %if.end
  store i32 0, i32* %roundboxalign_slider, align 4, !dbg !9668
  store float 0.000000e+00, float* %offs, align 4, !dbg !9670
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then48
  %57 = load i32, i32* %roundboxalign_slider, align 4, !dbg !9671
  %58 = load float, float* %offs, align 4, !dbg !9672
  call void @round_box_edges(%struct.uiWidgetBase* %wtb1, i32 %57, %struct.rcti* %rect1, float %58), !dbg !9673
  %59 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9674
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb1, %struct.uiWidgetColors* %59), !dbg !9675
  %60 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9676
  %outline59 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %60, i32 0, i32 0, !dbg !9677
  %arraydecay60 = getelementptr inbounds [4 x i8], [4 x i8]* %outline59, i64 0, i64 0, !dbg !9676
  %arraydecay61 = getelementptr inbounds [3 x i8], [3 x i8]* %outline, i64 0, i64 0, !dbg !9678
  call void @copy_v3_v3_char(i8* %arraydecay60, i8* %arraydecay61), !dbg !9679
  %61 = load i32, i32* %state.addr, align 4, !dbg !9680
  %and62 = and i32 %61, 1, !dbg !9682
  %tobool63 = icmp ne i32 %and62, 0, !dbg !9682
  br i1 %tobool63, label %if.end70, label %if.then64, !dbg !9683

if.then64:                                        ; preds = %if.end58
  call void @llvm.dbg.declare(metadata i16* %sw_ap65, metadata !9684, metadata !DIExpression()), !dbg !9686
  %62 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9686
  %shadetop66 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %62, i32 0, i32 7, !dbg !9686
  %63 = load i16, i16* %shadetop66, align 2, !dbg !9686
  store i16 %63, i16* %sw_ap65, align 2, !dbg !9686
  %64 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9686
  %shadedown67 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %64, i32 0, i32 8, !dbg !9686
  %65 = load i16, i16* %shadedown67, align 2, !dbg !9686
  %66 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9686
  %shadetop68 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %66, i32 0, i32 7, !dbg !9686
  store i16 %65, i16* %shadetop68, align 2, !dbg !9686
  %67 = load i16, i16* %sw_ap65, align 2, !dbg !9686
  %68 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9686
  %shadedown69 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %68, i32 0, i32 8, !dbg !9686
  store i16 %67, i16* %shadedown69, align 2, !dbg !9686
  br label %if.end70, !dbg !9686

if.end70:                                         ; preds = %if.then64, %if.end58
  br label %if.end71, !dbg !9687

if.end71:                                         ; preds = %if.end70, %entry
  %outline72 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !9688
  store i8 1, i8* %outline72, align 1, !dbg !9689
  %inner73 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 5, !dbg !9690
  store i8 0, i8* %inner73, align 8, !dbg !9691
  %69 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9692
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %69), !dbg !9693
  %70 = load i32, i32* %state.addr, align 4, !dbg !9694
  %and74 = and i32 %70, 16, !dbg !9696
  %tobool75 = icmp ne i32 %and74, 0, !dbg !9696
  br i1 %tobool75, label %if.end85, label %if.then76, !dbg !9697

if.then76:                                        ; preds = %if.end71
  %71 = load float, float* %toffs, align 4, !dbg !9698
  %72 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9700
  %xmax77 = getelementptr inbounds %struct.rcti, %struct.rcti* %72, i32 0, i32 1, !dbg !9701
  %73 = load i32, i32* %xmax77, align 4, !dbg !9702
  %conv78 = sitofp i32 %73 to float, !dbg !9702
  %sub79 = fsub float %conv78, %71, !dbg !9702
  %conv80 = fptosi float %sub79 to i32, !dbg !9702
  store i32 %conv80, i32* %xmax77, align 4, !dbg !9702
  %74 = load float, float* %toffs, align 4, !dbg !9703
  %75 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9704
  %xmin81 = getelementptr inbounds %struct.rcti, %struct.rcti* %75, i32 0, i32 0, !dbg !9705
  %76 = load i32, i32* %xmin81, align 4, !dbg !9706
  %conv82 = sitofp i32 %76 to float, !dbg !9706
  %add83 = fadd float %conv82, %74, !dbg !9706
  %conv84 = fptosi float %add83 to i32, !dbg !9706
  store i32 %conv84, i32* %xmin81, align 4, !dbg !9706
  br label %if.end85, !dbg !9707

if.end85:                                         ; preds = %if.then76, %if.end71
  ret void, !dbg !9708
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_numslider(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !9709 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  %wcol_state = alloca %struct.uiWidgetStateColors*, align 8
  %blend = alloca float, align 4
  %sw_ap = alloca i16, align 2
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.declare(metadata %struct.uiWidgetStateColors** %wcol_state, metadata !9714, metadata !DIExpression()), !dbg !9715
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9716
  %wcol_state1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 1, !dbg !9717
  %1 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state1, align 8, !dbg !9717
  store %struct.uiWidgetStateColors* %1, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9715
  call void @llvm.dbg.declare(metadata float* %blend, metadata !9718, metadata !DIExpression()), !dbg !9719
  %2 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9720
  %blend2 = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %2, i32 0, i32 6, !dbg !9721
  %3 = load float, float* %blend2, align 4, !dbg !9721
  %sub = fsub float %3, 0x3FC99999A0000000, !dbg !9722
  store float %sub, float* %blend, align 4, !dbg !9719
  %4 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9723
  %5 = load i32, i32* %state.addr, align 4, !dbg !9724
  call void @widget_state(%struct.uiWidgetType* %4, i32 %5), !dbg !9725
  %6 = load i32, i32* %state.addr, align 4, !dbg !9726
  %and = and i32 %6, 1, !dbg !9728
  %tobool = icmp ne i32 %and, 0, !dbg !9728
  br i1 %tobool, label %if.then, label %if.else34, !dbg !9729

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %state.addr, align 4, !dbg !9730
  %and3 = and i32 %7, 16384, !dbg !9733
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9733
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9734

if.then5:                                         ; preds = %if.then
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9735
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !9736
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol, i32 0, i32 3, !dbg !9737
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !9735
  %9 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9738
  %inner_key_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %9, i32 0, i32 3, !dbg !9739
  %arraydecay6 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_key_sel, i64 0, i64 0, !dbg !9738
  %10 = load float, float* %blend, align 4, !dbg !9740
  call void @widget_state_blend(i8* %arraydecay, i8* %arraydecay6, float %10), !dbg !9741
  br label %if.end23, !dbg !9741

if.else:                                          ; preds = %if.then
  %11 = load i32, i32* %state.addr, align 4, !dbg !9742
  %and7 = and i32 %11, 8192, !dbg !9744
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9744
  br i1 %tobool8, label %if.then9, label %if.else14, !dbg !9745

if.then9:                                         ; preds = %if.else
  %12 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9746
  %wcol10 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %12, i32 0, i32 2, !dbg !9747
  %item11 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol10, i32 0, i32 3, !dbg !9748
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %item11, i64 0, i64 0, !dbg !9746
  %13 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9749
  %inner_anim_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %13, i32 0, i32 1, !dbg !9750
  %arraydecay13 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_anim_sel, i64 0, i64 0, !dbg !9749
  %14 = load float, float* %blend, align 4, !dbg !9751
  call void @widget_state_blend(i8* %arraydecay12, i8* %arraydecay13, float %14), !dbg !9752
  br label %if.end22, !dbg !9752

if.else14:                                        ; preds = %if.else
  %15 = load i32, i32* %state.addr, align 4, !dbg !9753
  %and15 = and i32 %15, 32768, !dbg !9755
  %tobool16 = icmp ne i32 %and15, 0, !dbg !9755
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9756

if.then17:                                        ; preds = %if.else14
  %16 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9757
  %wcol18 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %16, i32 0, i32 2, !dbg !9758
  %item19 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol18, i32 0, i32 3, !dbg !9759
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %item19, i64 0, i64 0, !dbg !9757
  %17 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9760
  %inner_driven_sel = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %17, i32 0, i32 5, !dbg !9761
  %arraydecay21 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_driven_sel, i64 0, i64 0, !dbg !9760
  %18 = load float, float* %blend, align 4, !dbg !9762
  call void @widget_state_blend(i8* %arraydecay20, i8* %arraydecay21, float %18), !dbg !9763
  br label %if.end, !dbg !9763

if.end:                                           ; preds = %if.then17, %if.else14
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then9
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then5
  %19 = load i32, i32* %state.addr, align 4, !dbg !9764
  %and24 = and i32 %19, 1, !dbg !9766
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9766
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !9767

if.then26:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !9768, metadata !DIExpression()), !dbg !9770
  %20 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9770
  %wcol27 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %20, i32 0, i32 2, !dbg !9770
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol27, i32 0, i32 7, !dbg !9770
  %21 = load i16, i16* %shadetop, align 2, !dbg !9770
  store i16 %21, i16* %sw_ap, align 2, !dbg !9770
  %22 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9770
  %wcol28 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %22, i32 0, i32 2, !dbg !9770
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol28, i32 0, i32 8, !dbg !9770
  %23 = load i16, i16* %shadedown, align 4, !dbg !9770
  %24 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9770
  %wcol29 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %24, i32 0, i32 2, !dbg !9770
  %shadetop30 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol29, i32 0, i32 7, !dbg !9770
  store i16 %23, i16* %shadetop30, align 2, !dbg !9770
  %25 = load i16, i16* %sw_ap, align 2, !dbg !9770
  %26 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9770
  %wcol31 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %26, i32 0, i32 2, !dbg !9770
  %shadedown32 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol31, i32 0, i32 8, !dbg !9770
  store i16 %25, i16* %shadedown32, align 4, !dbg !9770
  br label %if.end33, !dbg !9770

if.end33:                                         ; preds = %if.then26, %if.end23
  br label %if.end61, !dbg !9771

if.else34:                                        ; preds = %entry
  %27 = load i32, i32* %state.addr, align 4, !dbg !9772
  %and35 = and i32 %27, 16384, !dbg !9775
  %tobool36 = icmp ne i32 %and35, 0, !dbg !9775
  br i1 %tobool36, label %if.then37, label %if.else42, !dbg !9776

if.then37:                                        ; preds = %if.else34
  %28 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9777
  %wcol38 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %28, i32 0, i32 2, !dbg !9778
  %item39 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol38, i32 0, i32 3, !dbg !9779
  %arraydecay40 = getelementptr inbounds [4 x i8], [4 x i8]* %item39, i64 0, i64 0, !dbg !9777
  %29 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9780
  %inner_key = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %29, i32 0, i32 2, !dbg !9781
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_key, i64 0, i64 0, !dbg !9780
  %30 = load float, float* %blend, align 4, !dbg !9782
  call void @widget_state_blend(i8* %arraydecay40, i8* %arraydecay41, float %30), !dbg !9783
  br label %if.end60, !dbg !9783

if.else42:                                        ; preds = %if.else34
  %31 = load i32, i32* %state.addr, align 4, !dbg !9784
  %and43 = and i32 %31, 8192, !dbg !9786
  %tobool44 = icmp ne i32 %and43, 0, !dbg !9786
  br i1 %tobool44, label %if.then45, label %if.else50, !dbg !9787

if.then45:                                        ; preds = %if.else42
  %32 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9788
  %wcol46 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %32, i32 0, i32 2, !dbg !9789
  %item47 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol46, i32 0, i32 3, !dbg !9790
  %arraydecay48 = getelementptr inbounds [4 x i8], [4 x i8]* %item47, i64 0, i64 0, !dbg !9788
  %33 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9791
  %inner_anim = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %33, i32 0, i32 0, !dbg !9792
  %arraydecay49 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_anim, i64 0, i64 0, !dbg !9791
  %34 = load float, float* %blend, align 4, !dbg !9793
  call void @widget_state_blend(i8* %arraydecay48, i8* %arraydecay49, float %34), !dbg !9794
  br label %if.end59, !dbg !9794

if.else50:                                        ; preds = %if.else42
  %35 = load i32, i32* %state.addr, align 4, !dbg !9795
  %and51 = and i32 %35, 32768, !dbg !9797
  %tobool52 = icmp ne i32 %and51, 0, !dbg !9797
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !9798

if.then53:                                        ; preds = %if.else50
  %36 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !9799
  %wcol54 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %36, i32 0, i32 2, !dbg !9800
  %item55 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol54, i32 0, i32 3, !dbg !9801
  %arraydecay56 = getelementptr inbounds [4 x i8], [4 x i8]* %item55, i64 0, i64 0, !dbg !9799
  %37 = load %struct.uiWidgetStateColors*, %struct.uiWidgetStateColors** %wcol_state, align 8, !dbg !9802
  %inner_driven = getelementptr inbounds %struct.uiWidgetStateColors, %struct.uiWidgetStateColors* %37, i32 0, i32 4, !dbg !9803
  %arraydecay57 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_driven, i64 0, i64 0, !dbg !9802
  %38 = load float, float* %blend, align 4, !dbg !9804
  call void @widget_state_blend(i8* %arraydecay56, i8* %arraydecay57, float %38), !dbg !9805
  br label %if.end58, !dbg !9805

if.end58:                                         ; preds = %if.then53, %if.else50
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then45
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then37
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end33
  ret void, !dbg !9806
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_roundbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9807 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9814, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9816, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9818, metadata !DIExpression()), !dbg !9819
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9820
  %conv = sext i16 %0 to i32, !dbg !9821
  %conv1 = sitofp i32 %conv to float, !dbg !9821
  %mul = fmul float 2.500000e-01, %conv1, !dbg !9822
  store float %mul, float* %rad, align 4, !dbg !9819
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9823
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9824
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9825
  %3 = load float, float* %rad, align 4, !dbg !9826
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %1, %struct.rcti* %2, float %3), !dbg !9827
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9828
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %4), !dbg !9829
  ret void, !dbg !9830
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menu_back(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %flag, i32 %direction) #0 !dbg !9831 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %flag.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %roundboxalign = alloca i32, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9840, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.declare(metadata i32* %roundboxalign, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i32 15, i32* %roundboxalign, align 4, !dbg !9843
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9844
  %0 = load i32, i32* %flag.addr, align 4, !dbg !9845
  %and = and i32 %0, 512, !dbg !9847
  %tobool = icmp ne i32 %and, 0, !dbg !9847
  br i1 %tobool, label %if.then, label %if.else, !dbg !9848

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !9849

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %direction.addr, align 4, !dbg !9851
  %cmp = icmp eq i32 %1, 2, !dbg !9853
  br i1 %cmp, label %if.then1, label %if.else5, !dbg !9854

if.then1:                                         ; preds = %if.else
  store i32 12, i32* %roundboxalign, align 4, !dbg !9855
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9857
  %conv = sext i16 %2 to i32, !dbg !9858
  %conv2 = sitofp i32 %conv to float, !dbg !9858
  %mul = fmul float 0x3FB99999A0000000, %conv2, !dbg !9859
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9860
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %3, i32 0, i32 2, !dbg !9861
  %4 = load i32, i32* %ymin, align 4, !dbg !9862
  %conv3 = sitofp i32 %4 to float, !dbg !9862
  %sub = fsub float %conv3, %mul, !dbg !9862
  %conv4 = fptosi float %sub to i32, !dbg !9862
  store i32 %conv4, i32* %ymin, align 4, !dbg !9862
  br label %if.end14, !dbg !9863

if.else5:                                         ; preds = %if.else
  %5 = load i32, i32* %direction.addr, align 4, !dbg !9864
  %cmp6 = icmp eq i32 %5, 1, !dbg !9866
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !9867

if.then8:                                         ; preds = %if.else5
  store i32 3, i32* %roundboxalign, align 4, !dbg !9868
  %6 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9870
  %conv9 = sext i16 %6 to i32, !dbg !9871
  %conv10 = sitofp i32 %conv9 to float, !dbg !9871
  %mul11 = fmul float 0x3FB99999A0000000, %conv10, !dbg !9872
  %7 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9873
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 3, !dbg !9874
  %8 = load i32, i32* %ymax, align 4, !dbg !9875
  %conv12 = sitofp i32 %8 to float, !dbg !9875
  %add = fadd float %conv12, %mul11, !dbg !9875
  %conv13 = fptosi float %add to i32, !dbg !9875
  store i32 %conv13, i32* %ymax, align 4, !dbg !9875
  br label %if.end, !dbg !9876

if.end:                                           ; preds = %if.then8, %if.else5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then1
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  call void @glEnable(i32 3042), !dbg !9877
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9878
  %10 = load i32, i32* %roundboxalign, align 4, !dbg !9879
  %11 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9880
  %conv16 = sext i16 %11 to i32, !dbg !9881
  %conv17 = sitofp i32 %conv16 to float, !dbg !9881
  %mul18 = fmul float 2.500000e-01, %conv17, !dbg !9882
  call void @widget_softshadow(%struct.rcti* %9, i32 %10, float %mul18), !dbg !9883
  %12 = load i32, i32* %roundboxalign, align 4, !dbg !9884
  %13 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9885
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9886
  %conv19 = sext i16 %14 to i32, !dbg !9887
  %conv20 = sitofp i32 %conv19 to float, !dbg !9887
  %mul21 = fmul float 2.500000e-01, %conv20, !dbg !9888
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %12, %struct.rcti* %13, float %mul21), !dbg !9889
  %emboss = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 7, !dbg !9890
  store i8 0, i8* %emboss, align 2, !dbg !9891
  %15 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9892
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %15), !dbg !9893
  call void @glDisable(i32 3042), !dbg !9894
  ret void, !dbg !9895
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_textbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !9896 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %sw_ap = alloca i16, align 2
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9907, metadata !DIExpression()), !dbg !9908
  %0 = load i32, i32* %state.addr, align 4, !dbg !9909
  %and = and i32 %0, 1, !dbg !9911
  %tobool = icmp ne i32 %and, 0, !dbg !9911
  br i1 %tobool, label %if.then, label %if.end, !dbg !9912

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !9913, metadata !DIExpression()), !dbg !9915
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9915
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %1, i32 0, i32 7, !dbg !9915
  %2 = load i16, i16* %shadetop, align 2, !dbg !9915
  store i16 %2, i16* %sw_ap, align 2, !dbg !9915
  %3 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9915
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %3, i32 0, i32 8, !dbg !9915
  %4 = load i16, i16* %shadedown, align 2, !dbg !9915
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9915
  %shadetop1 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %5, i32 0, i32 7, !dbg !9915
  store i16 %4, i16* %shadetop1, align 2, !dbg !9915
  %6 = load i16, i16* %sw_ap, align 2, !dbg !9915
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9915
  %shadedown2 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 8, !dbg !9915
  store i16 %6, i16* %shadedown2, align 2, !dbg !9915
  br label %if.end, !dbg !9915

if.end:                                           ; preds = %if.then, %entry
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9916
  %8 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9917
  %conv = sext i16 %8 to i32, !dbg !9918
  %conv3 = sitofp i32 %conv to float, !dbg !9918
  %mul = fmul float 0x3FC99999A0000000, %conv3, !dbg !9919
  store float %mul, float* %rad, align 4, !dbg !9920
  %9 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9921
  %10 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9922
  %11 = load float, float* %rad, align 4, !dbg !9923
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %9, %struct.rcti* %10, float %11), !dbg !9924
  %12 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9925
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %12), !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menubut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9928 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9939, metadata !DIExpression()), !dbg !9940
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9941
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9942
  %conv = sext i16 %0 to i32, !dbg !9943
  %conv1 = sitofp i32 %conv to float, !dbg !9943
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !9944
  store float %mul, float* %rad, align 4, !dbg !9945
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9946
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9947
  %3 = load float, float* %rad, align 4, !dbg !9948
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %1, %struct.rcti* %2, float %3), !dbg !9949
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 9, !dbg !9950
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9951
  call void @widget_menu_trias(%struct.uiWidgetTrias* %tria1, %struct.rcti* %4), !dbg !9952
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9953
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %5), !dbg !9954
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9955
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %6), !dbg !9956
  %mul2 = mul nsw i32 6, %call, !dbg !9957
  %div = sdiv i32 %mul2, 10, !dbg !9958
  %7 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9959
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 1, !dbg !9960
  %8 = load i32, i32* %xmax, align 4, !dbg !9961
  %sub = sub nsw i32 %8, %div, !dbg !9961
  store i32 %sub, i32* %xmax, align 4, !dbg !9961
  ret void, !dbg !9962
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menuiconbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9963 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9964, metadata !DIExpression()), !dbg !9965
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9966, metadata !DIExpression()), !dbg !9967
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata float* %rad, metadata !9974, metadata !DIExpression()), !dbg !9975
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !9976
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9977
  %conv = sext i16 %0 to i32, !dbg !9978
  %conv1 = sitofp i32 %conv to float, !dbg !9978
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !9979
  store float %mul, float* %rad, align 4, !dbg !9980
  %1 = load i32, i32* %roundboxalign.addr, align 4, !dbg !9981
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !9982
  %3 = load float, float* %rad, align 4, !dbg !9983
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %1, %struct.rcti* %2, float %3), !dbg !9984
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !9985
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %4), !dbg !9986
  ret void, !dbg !9987
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menunodebut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !9988 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %wcol_backup = alloca %struct.uiWidgetColors, align 2
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !9991, metadata !DIExpression()), !dbg !9992
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors* %wcol_backup, metadata !9999, metadata !DIExpression()), !dbg !10000
  %0 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10001
  %1 = bitcast %struct.uiWidgetColors* %wcol_backup to i8*, !dbg !10002
  %2 = bitcast %struct.uiWidgetColors* %0 to i8*, !dbg !10002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 %2, i64 32, i1 false), !dbg !10002
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10005
  %3 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !10006
  %conv = sext i16 %3 to i32, !dbg !10007
  %conv1 = sitofp i32 %conv to float, !dbg !10007
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !10008
  store float %mul, float* %rad, align 4, !dbg !10009
  %4 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10010
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10011
  %6 = load float, float* %rad, align 4, !dbg !10012
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %4, %struct.rcti* %5, float %6), !dbg !10013
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10014
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 1, !dbg !10015
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10014
  %8 = load i8, i8* %arrayidx, align 2, !dbg !10014
  %conv2 = zext i8 %8 to i32, !dbg !10014
  %add = add nsw i32 %conv2, 15, !dbg !10016
  %call = call i32 @min_ii(i32 %add, i32 255), !dbg !10017
  %conv3 = trunc i32 %call to i8, !dbg !10017
  %9 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10018
  %inner4 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %9, i32 0, i32 1, !dbg !10019
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %inner4, i64 0, i64 0, !dbg !10018
  store i8 %conv3, i8* %arrayidx5, align 2, !dbg !10020
  %10 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10021
  %inner6 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %10, i32 0, i32 1, !dbg !10022
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %inner6, i64 0, i64 1, !dbg !10021
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10021
  %conv8 = zext i8 %11 to i32, !dbg !10021
  %add9 = add nsw i32 %conv8, 15, !dbg !10023
  %call10 = call i32 @min_ii(i32 %add9, i32 255), !dbg !10024
  %conv11 = trunc i32 %call10 to i8, !dbg !10024
  %12 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10025
  %inner12 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %12, i32 0, i32 1, !dbg !10026
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %inner12, i64 0, i64 1, !dbg !10025
  store i8 %conv11, i8* %arrayidx13, align 1, !dbg !10027
  %13 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10028
  %inner14 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %13, i32 0, i32 1, !dbg !10029
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %inner14, i64 0, i64 2, !dbg !10028
  %14 = load i8, i8* %arrayidx15, align 2, !dbg !10028
  %conv16 = zext i8 %14 to i32, !dbg !10028
  %add17 = add nsw i32 %conv16, 15, !dbg !10030
  %call18 = call i32 @min_ii(i32 %add17, i32 255), !dbg !10031
  %conv19 = trunc i32 %call18 to i8, !dbg !10031
  %15 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10032
  %inner20 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %15, i32 0, i32 1, !dbg !10033
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %inner20, i64 0, i64 2, !dbg !10032
  store i8 %conv19, i8* %arrayidx21, align 2, !dbg !10034
  %16 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10035
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %16, i32 0, i32 0, !dbg !10036
  %arrayidx22 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 0, !dbg !10035
  %17 = load i8, i8* %arrayidx22, align 2, !dbg !10035
  %conv23 = zext i8 %17 to i32, !dbg !10035
  %add24 = add nsw i32 %conv23, 15, !dbg !10037
  %call25 = call i32 @min_ii(i32 %add24, i32 255), !dbg !10038
  %conv26 = trunc i32 %call25 to i8, !dbg !10038
  %18 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10039
  %outline27 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %18, i32 0, i32 0, !dbg !10040
  %arrayidx28 = getelementptr inbounds [4 x i8], [4 x i8]* %outline27, i64 0, i64 0, !dbg !10039
  store i8 %conv26, i8* %arrayidx28, align 2, !dbg !10041
  %19 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10042
  %outline29 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %19, i32 0, i32 0, !dbg !10043
  %arrayidx30 = getelementptr inbounds [4 x i8], [4 x i8]* %outline29, i64 0, i64 1, !dbg !10042
  %20 = load i8, i8* %arrayidx30, align 1, !dbg !10042
  %conv31 = zext i8 %20 to i32, !dbg !10042
  %add32 = add nsw i32 %conv31, 15, !dbg !10044
  %call33 = call i32 @min_ii(i32 %add32, i32 255), !dbg !10045
  %conv34 = trunc i32 %call33 to i8, !dbg !10045
  %21 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10046
  %outline35 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %21, i32 0, i32 0, !dbg !10047
  %arrayidx36 = getelementptr inbounds [4 x i8], [4 x i8]* %outline35, i64 0, i64 1, !dbg !10046
  store i8 %conv34, i8* %arrayidx36, align 1, !dbg !10048
  %22 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10049
  %outline37 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %22, i32 0, i32 0, !dbg !10050
  %arrayidx38 = getelementptr inbounds [4 x i8], [4 x i8]* %outline37, i64 0, i64 2, !dbg !10049
  %23 = load i8, i8* %arrayidx38, align 2, !dbg !10049
  %conv39 = zext i8 %23 to i32, !dbg !10049
  %add40 = add nsw i32 %conv39, 15, !dbg !10051
  %call41 = call i32 @min_ii(i32 %add40, i32 255), !dbg !10052
  %conv42 = trunc i32 %call41 to i8, !dbg !10052
  %24 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10053
  %outline43 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %24, i32 0, i32 0, !dbg !10054
  %arrayidx44 = getelementptr inbounds [4 x i8], [4 x i8]* %outline43, i64 0, i64 2, !dbg !10053
  store i8 %conv42, i8* %arrayidx44, align 2, !dbg !10055
  %25 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10056
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %25), !dbg !10057
  %26 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10058
  %27 = bitcast %struct.uiWidgetColors* %26 to i8*, !dbg !10059
  %28 = bitcast %struct.uiWidgetColors* %wcol_backup to i8*, !dbg !10059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 2 %28, i64 32, i1 false), !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_pulldownbut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !10061 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10064, metadata !DIExpression()), !dbg !10065
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10066, metadata !DIExpression()), !dbg !10067
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !10068, metadata !DIExpression()), !dbg !10069
  %0 = load i32, i32* %state.addr, align 4, !dbg !10070
  %and = and i32 %0, 4, !dbg !10072
  %tobool = icmp ne i32 %and, 0, !dbg !10072
  br i1 %tobool, label %if.then, label %if.end, !dbg !10073

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10077, metadata !DIExpression()), !dbg !10078
  %1 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !10079
  %conv = sext i16 %1 to i32, !dbg !10080
  %conv1 = sitofp i32 %conv to float, !dbg !10080
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !10081
  store float %mul, float* %rad, align 4, !dbg !10078
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10082
  %2 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10083
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10084
  %4 = load float, float* %rad, align 4, !dbg !10085
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %2, %struct.rcti* %3, float %4), !dbg !10086
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10087
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %5), !dbg !10088
  br label %if.end, !dbg !10089

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10090
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_pulldown(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !10091 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10096
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 2, !dbg !10097
  %1 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10098
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %1, i32 0, i32 0, !dbg !10099
  %2 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !10099
  %3 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !10100
  %4 = bitcast %struct.uiWidgetColors* %2 to i8*, !dbg !10100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 2 %4, i64 32, i1 false), !dbg !10100
  %5 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10101
  %wcol1 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %5, i32 0, i32 2, !dbg !10102
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol1, i32 0, i32 1, !dbg !10103
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10101
  %6 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10104
  %wcol2 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %6, i32 0, i32 2, !dbg !10105
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol2, i32 0, i32 2, !dbg !10106
  %arraydecay3 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !10104
  call void @copy_v4_v4_char(i8* %arraydecay, i8* %arraydecay3), !dbg !10107
  %7 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10108
  %wcol4 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %7, i32 0, i32 2, !dbg !10109
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol4, i32 0, i32 0, !dbg !10110
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 0, !dbg !10108
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10111
  %wcol6 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !10112
  %inner7 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol6, i32 0, i32 1, !dbg !10113
  %arraydecay8 = getelementptr inbounds [4 x i8], [4 x i8]* %inner7, i64 0, i64 0, !dbg !10111
  call void @copy_v3_v3_char(i8* %arraydecay5, i8* %arraydecay8), !dbg !10114
  %9 = load i32, i32* %state.addr, align 4, !dbg !10115
  %and = and i32 %9, 4, !dbg !10117
  %tobool = icmp ne i32 %and, 0, !dbg !10117
  br i1 %tobool, label %if.then, label %if.end, !dbg !10118

if.then:                                          ; preds = %entry
  %10 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10119
  %wcol9 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %10, i32 0, i32 2, !dbg !10120
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol9, i32 0, i32 4, !dbg !10121
  %arraydecay10 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !10119
  %11 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10122
  %wcol11 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %11, i32 0, i32 2, !dbg !10123
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol11, i32 0, i32 5, !dbg !10124
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !10122
  call void @copy_v3_v3_char(i8* %arraydecay10, i8* %arraydecay12), !dbg !10125
  br label %if.end, !dbg !10125

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10126
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menu_itembut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !10127 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10130, metadata !DIExpression()), !dbg !10131
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10132, metadata !DIExpression()), !dbg !10133
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10136, metadata !DIExpression()), !dbg !10137
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10138
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !10139
  store i8 0, i8* %outline, align 1, !dbg !10140
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10141
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 0, %struct.rcti* %0, float 0.000000e+00), !dbg !10142
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10143
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %1), !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_menu_item(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !10146 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !10147, metadata !DIExpression()), !dbg !10148
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10149, metadata !DIExpression()), !dbg !10150
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10151
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 2, !dbg !10152
  %1 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10153
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %1, i32 0, i32 0, !dbg !10154
  %2 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !10154
  %3 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !10155
  %4 = bitcast %struct.uiWidgetColors* %2 to i8*, !dbg !10155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 2 %4, i64 32, i1 false), !dbg !10155
  %5 = load i32, i32* %state.addr, align 4, !dbg !10156
  %and = and i32 %5, 2048, !dbg !10158
  %tobool = icmp ne i32 %and, 0, !dbg !10158
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10159

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %state.addr, align 4, !dbg !10160
  %and1 = and i32 %6, 4, !dbg !10161
  %tobool2 = icmp ne i32 %and1, 0, !dbg !10161
  br i1 %tobool2, label %if.then, label %if.else, !dbg !10162

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10163
  %wcol3 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %7, i32 0, i32 2, !dbg !10165
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol3, i32 0, i32 4, !dbg !10166
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !10163
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10167
  %wcol4 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !10168
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol4, i32 0, i32 5, !dbg !10169
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !10167
  call void @widget_state_blend(i8* %arraydecay, i8* %arraydecay5, float 5.000000e-01), !dbg !10170
  %9 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10171
  %wcol6 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %9, i32 0, i32 2, !dbg !10172
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol6, i32 0, i32 1, !dbg !10173
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10171
  %10 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10174
  %wcol8 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %10, i32 0, i32 2, !dbg !10175
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol8, i32 0, i32 2, !dbg !10176
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !10174
  call void @copy_v4_v4_char(i8* %arraydecay7, i8* %arraydecay9), !dbg !10177
  %11 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10178
  %wcol10 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %11, i32 0, i32 2, !dbg !10179
  %inner11 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol10, i32 0, i32 1, !dbg !10180
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner11, i64 0, i64 3, !dbg !10178
  store i8 64, i8* %arrayidx, align 1, !dbg !10181
  br label %if.end38, !dbg !10182

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load i32, i32* %state.addr, align 4, !dbg !10183
  %and12 = and i32 %12, 133120, !dbg !10185
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10185
  br i1 %tobool13, label %if.then14, label %if.else21, !dbg !10186

if.then14:                                        ; preds = %if.else
  %13 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10187
  %wcol15 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %13, i32 0, i32 2, !dbg !10189
  %text16 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol15, i32 0, i32 4, !dbg !10190
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %text16, i64 0, i64 0, !dbg !10187
  %14 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10191
  %wcol18 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %14, i32 0, i32 2, !dbg !10192
  %inner19 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol18, i32 0, i32 1, !dbg !10193
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %inner19, i64 0, i64 0, !dbg !10191
  call void @widget_state_blend(i8* %arraydecay17, i8* %arraydecay20, float 5.000000e-01), !dbg !10194
  br label %if.end37, !dbg !10195

if.else21:                                        ; preds = %if.else
  %15 = load i32, i32* %state.addr, align 4, !dbg !10196
  %and22 = and i32 %15, 4, !dbg !10198
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10198
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !10199

if.then24:                                        ; preds = %if.else21
  %16 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10200
  %wcol25 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %16, i32 0, i32 2, !dbg !10202
  %inner26 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol25, i32 0, i32 1, !dbg !10203
  %arraydecay27 = getelementptr inbounds [4 x i8], [4 x i8]* %inner26, i64 0, i64 0, !dbg !10200
  %17 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10204
  %wcol28 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %17, i32 0, i32 2, !dbg !10205
  %inner_sel29 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol28, i32 0, i32 2, !dbg !10206
  %arraydecay30 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel29, i64 0, i64 0, !dbg !10204
  call void @copy_v4_v4_char(i8* %arraydecay27, i8* %arraydecay30), !dbg !10207
  %18 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10208
  %wcol31 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %18, i32 0, i32 2, !dbg !10209
  %text32 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol31, i32 0, i32 4, !dbg !10210
  %arraydecay33 = getelementptr inbounds [4 x i8], [4 x i8]* %text32, i64 0, i64 0, !dbg !10208
  %19 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10211
  %wcol34 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %19, i32 0, i32 2, !dbg !10212
  %text_sel35 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol34, i32 0, i32 5, !dbg !10213
  %arraydecay36 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel35, i64 0, i64 0, !dbg !10211
  call void @copy_v3_v3_char(i8* %arraydecay33, i8* %arraydecay36), !dbg !10214
  br label %if.end, !dbg !10215

if.end:                                           ; preds = %if.then24, %if.else21
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then14
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then
  ret void, !dbg !10216
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_icon_has_anim(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !10217 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10218, metadata !DIExpression()), !dbg !10219
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10220, metadata !DIExpression()), !dbg !10221
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  %0 = load i32, i32* %state.addr, align 4, !dbg !10228
  %and = and i32 %0, 122880, !dbg !10230
  %tobool = icmp ne i32 %and, 0, !dbg !10230
  br i1 %tobool, label %if.then, label %if.else, !dbg !10231

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10237
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !10238
  store i8 0, i8* %outline, align 1, !dbg !10239
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10240
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %1), !dbg !10241
  %conv = sitofp i32 %call to float, !dbg !10241
  %mul = fmul float 5.000000e-01, %conv, !dbg !10242
  store float %mul, float* %rad, align 4, !dbg !10243
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10244
  %3 = load float, float* %rad, align 4, !dbg !10245
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %2, float %3), !dbg !10246
  %4 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10247
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %4), !dbg !10248
  br label %if.end3, !dbg !10249

if.else:                                          ; preds = %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10250
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 4, !dbg !10252
  %6 = load i32, i32* %type, align 8, !dbg !10252
  %cmp = icmp eq i32 %6, 2560, !dbg !10253
  br i1 %cmp, label %if.then2, label %if.end, !dbg !10254

if.then2:                                         ; preds = %if.else
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10255
  %8 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10257
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10258
  %10 = load i32, i32* %state.addr, align 4, !dbg !10259
  %11 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10260
  call void @widget_numbut_embossn(%struct.uiBut* %7, %struct.uiWidgetColors* %8, %struct.rcti* %9, i32 %10, i32 %11), !dbg !10261
  br label %if.end, !dbg !10262

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10263
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_swatch(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !10264 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %col = alloca [4 x float], align 16
  %color_profile = alloca i8, align 1
  %width = alloca float, align 4
  %height = alloca float, align 4
  %bw = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10265, metadata !DIExpression()), !dbg !10266
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10267, metadata !DIExpression()), !dbg !10268
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10269, metadata !DIExpression()), !dbg !10270
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10271, metadata !DIExpression()), !dbg !10272
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !10273, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10275, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10277, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !10279, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata i8* %color_profile, metadata !10281, metadata !DIExpression()), !dbg !10282
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10283
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !10284
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !10284
  %color_profile1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 51, !dbg !10285
  %2 = load i8, i8* %color_profile1, align 4, !dbg !10285
  store i8 %2, i8* %color_profile, align 1, !dbg !10282
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !10286
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !10287
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10288
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 55, !dbg !10290
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !10290
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !10288
  br i1 %tobool, label %if.then, label %if.end13, !dbg !10291

if.then:                                          ; preds = %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10292
  %rnaprop2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 55, !dbg !10295
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop2, align 8, !dbg !10295
  %call = call i32 @RNA_property_subtype(%struct.PropertyRNA* %6), !dbg !10296
  %cmp = icmp eq i32 %call, 30, !dbg !10297
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10298

if.then3:                                         ; preds = %if.then
  store i8 0, i8* %color_profile, align 1, !dbg !10299
  br label %if.end, !dbg !10300

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10301
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 54, !dbg !10303
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10304
  %rnaprop4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !10305
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop4, align 8, !dbg !10305
  %call5 = call i32 @RNA_property_array_length(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %9), !dbg !10306
  %cmp6 = icmp eq i32 %call5, 4, !dbg !10307
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !10308

if.then7:                                         ; preds = %if.end
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10309
  %rnapoin8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 54, !dbg !10311
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10312
  %rnaprop9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 55, !dbg !10313
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop9, align 8, !dbg !10313
  %call10 = call float @RNA_property_float_get_index(%struct.PointerRNA* %rnapoin8, %struct.PropertyRNA* %12, i32 3), !dbg !10314
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !10315
  store float %call10, float* %arrayidx11, align 4, !dbg !10316
  br label %if.end12, !dbg !10317

if.end12:                                         ; preds = %if.then7, %if.end
  br label %if.end13, !dbg !10318

if.end13:                                         ; preds = %if.end12, %entry
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10319
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !10320
  %conv = sext i16 %13 to i32, !dbg !10321
  %conv14 = sitofp i32 %conv to float, !dbg !10321
  %mul = fmul float 2.500000e-01, %conv14, !dbg !10322
  store float %mul, float* %rad, align 4, !dbg !10323
  %14 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10324
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10325
  %16 = load float, float* %rad, align 4, !dbg !10326
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %14, %struct.rcti* %15, float %16), !dbg !10327
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10328
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10329
  call void @ui_get_but_vectorf(%struct.uiBut* %17, float* %arraydecay), !dbg !10330
  %18 = load i32, i32* %state.addr, align 4, !dbg !10331
  %and = and i32 %18, 122880, !dbg !10333
  %tobool15 = icmp ne i32 %and, 0, !dbg !10333
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !10334

if.then16:                                        ; preds = %if.end13
  %19 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10335
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %19), !dbg !10337
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10338
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 0, !dbg !10339
  %21 = load i32, i32* %xmin, align 4, !dbg !10340
  %add = add nsw i32 %21, 3, !dbg !10340
  store i32 %add, i32* %xmin, align 4, !dbg !10340
  %22 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10341
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 1, !dbg !10342
  %23 = load i32, i32* %xmax, align 4, !dbg !10343
  %sub = sub nsw i32 %23, 3, !dbg !10343
  store i32 %sub, i32* %xmax, align 4, !dbg !10343
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10344
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 2, !dbg !10345
  %25 = load i32, i32* %ymin, align 4, !dbg !10346
  %add17 = add nsw i32 %25, 3, !dbg !10346
  store i32 %add17, i32* %ymin, align 4, !dbg !10346
  %26 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10347
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %26, i32 0, i32 3, !dbg !10348
  %27 = load i32, i32* %ymax, align 4, !dbg !10349
  %sub18 = sub nsw i32 %27, 3, !dbg !10349
  store i32 %sub18, i32* %ymax, align 4, !dbg !10349
  %28 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10350
  %29 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10351
  %30 = load float, float* %rad, align 4, !dbg !10352
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %28, %struct.rcti* %29, float %30), !dbg !10353
  br label %if.end19, !dbg !10354

if.end19:                                         ; preds = %if.then16, %if.end13
  %31 = load i8, i8* %color_profile, align 1, !dbg !10355
  %tobool20 = icmp ne i8 %31, 0, !dbg !10355
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !10357

if.then21:                                        ; preds = %if.end19
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10358
  %block22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 74, !dbg !10359
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block22, align 8, !dbg !10359
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10360
  call void @ui_block_to_display_space_v3(%struct.uiBlock* %33, float* %arraydecay23), !dbg !10361
  br label %if.end24, !dbg !10361

if.end24:                                         ; preds = %if.then21, %if.end19
  %34 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10362
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %34, i32 0, i32 1, !dbg !10363
  %arraydecay25 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10362
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10364
  call void @rgba_float_to_uchar(i8* %arraydecay25, float* %arraydecay26), !dbg !10365
  %35 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10366
  %shaded = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %35, i32 0, i32 6, !dbg !10367
  store i16 0, i16* %shaded, align 2, !dbg !10368
  %36 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10369
  %inner27 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %36, i32 0, i32 1, !dbg !10370
  %arrayidx28 = getelementptr inbounds [4 x i8], [4 x i8]* %inner27, i64 0, i64 3, !dbg !10369
  %37 = load i8, i8* %arrayidx28, align 1, !dbg !10369
  %conv29 = zext i8 %37 to i32, !dbg !10369
  %cmp30 = icmp slt i32 %conv29, 255, !dbg !10371
  %conv31 = zext i1 %cmp30 to i32, !dbg !10371
  %conv32 = trunc i32 %conv31 to i16, !dbg !10372
  %38 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10373
  %alpha_check = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %38, i32 0, i32 9, !dbg !10374
  store i16 %conv32, i16* %alpha_check, align 2, !dbg !10375
  %39 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10376
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %39), !dbg !10377
  %40 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10378
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 24, !dbg !10380
  %41 = load float, float* %a1, align 8, !dbg !10380
  %cmp33 = fcmp oeq float %41, 2.000000e+01, !dbg !10381
  br i1 %cmp33, label %land.lhs.true, label %if.end85, !dbg !10382

land.lhs.true:                                    ; preds = %if.end24
  %42 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10383
  %rnapoin35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 54, !dbg !10384
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin35, i32 0, i32 0, !dbg !10385
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !10386
  %43 = load i8*, i8** %data, align 8, !dbg !10386
  %44 = bitcast i8* %43 to %struct.Palette*, !dbg !10387
  %active_color = getelementptr inbounds %struct.Palette, %struct.Palette* %44, i32 0, i32 3, !dbg !10388
  %45 = load i32, i32* %active_color, align 8, !dbg !10388
  %46 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10389
  %a2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 25, !dbg !10390
  %47 = load float, float* %a2, align 4, !dbg !10390
  %conv36 = fptosi float %47 to i32, !dbg !10391
  %cmp37 = icmp eq i32 %45, %conv36, !dbg !10392
  br i1 %cmp37, label %if.then39, label %if.end85, !dbg !10393

if.then39:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %width, metadata !10394, metadata !DIExpression()), !dbg !10396
  %48 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10397
  %xmax40 = getelementptr inbounds %struct.rcti, %struct.rcti* %48, i32 0, i32 1, !dbg !10398
  %49 = load i32, i32* %xmax40, align 4, !dbg !10398
  %50 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10399
  %xmin41 = getelementptr inbounds %struct.rcti, %struct.rcti* %50, i32 0, i32 0, !dbg !10400
  %51 = load i32, i32* %xmin41, align 4, !dbg !10400
  %sub42 = sub nsw i32 %49, %51, !dbg !10401
  %conv43 = sitofp i32 %sub42 to float, !dbg !10397
  store float %conv43, float* %width, align 4, !dbg !10396
  call void @llvm.dbg.declare(metadata float* %height, metadata !10402, metadata !DIExpression()), !dbg !10403
  %52 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10404
  %ymax44 = getelementptr inbounds %struct.rcti, %struct.rcti* %52, i32 0, i32 3, !dbg !10405
  %53 = load i32, i32* %ymax44, align 4, !dbg !10405
  %54 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10406
  %ymin45 = getelementptr inbounds %struct.rcti, %struct.rcti* %54, i32 0, i32 2, !dbg !10407
  %55 = load i32, i32* %ymin45, align 4, !dbg !10407
  %sub46 = sub nsw i32 %53, %55, !dbg !10408
  %conv47 = sitofp i32 %sub46 to float, !dbg !10404
  store float %conv47, float* %height, align 4, !dbg !10403
  call void @llvm.dbg.declare(metadata float* %bw, metadata !10409, metadata !DIExpression()), !dbg !10410
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10411
  %call49 = call float @rgb_to_bw(float* %arraydecay48), !dbg !10412
  store float %call49, float* %bw, align 4, !dbg !10410
  %56 = load float, float* %bw, align 4, !dbg !10413
  %conv50 = fpext float %56 to double, !dbg !10413
  %cmp51 = fcmp ogt double %conv50, 5.000000e-01, !dbg !10415
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !10416

if.then53:                                        ; preds = %if.then39
  %57 = load float, float* %bw, align 4, !dbg !10417
  %conv54 = fpext float %57 to double, !dbg !10417
  %sub55 = fsub double %conv54, 5.000000e-01, !dbg !10417
  %conv56 = fptrunc double %sub55 to float, !dbg !10417
  store float %conv56, float* %bw, align 4, !dbg !10417
  br label %if.end60, !dbg !10418

if.else:                                          ; preds = %if.then39
  %58 = load float, float* %bw, align 4, !dbg !10419
  %conv57 = fpext float %58 to double, !dbg !10419
  %add58 = fadd double %conv57, 5.000000e-01, !dbg !10419
  %conv59 = fptrunc double %add58 to float, !dbg !10419
  store float %conv59, float* %bw, align 4, !dbg !10419
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then53
  %59 = load float, float* %bw, align 4, !dbg !10420
  %60 = load float, float* %bw, align 4, !dbg !10421
  %61 = load float, float* %bw, align 4, !dbg !10422
  call void @glColor4f(float %59, float %60, float %61, float 1.000000e+00), !dbg !10423
  call void @glBegin(i32 4), !dbg !10424
  %62 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10425
  %xmin61 = getelementptr inbounds %struct.rcti, %struct.rcti* %62, i32 0, i32 0, !dbg !10426
  %63 = load i32, i32* %xmin61, align 4, !dbg !10426
  %conv62 = sitofp i32 %63 to float, !dbg !10425
  %64 = load float, float* %width, align 4, !dbg !10427
  %mul63 = fmul float 0x3FB99999A0000000, %64, !dbg !10428
  %add64 = fadd float %conv62, %mul63, !dbg !10429
  %65 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10430
  %ymin65 = getelementptr inbounds %struct.rcti, %struct.rcti* %65, i32 0, i32 2, !dbg !10431
  %66 = load i32, i32* %ymin65, align 4, !dbg !10431
  %conv66 = sitofp i32 %66 to float, !dbg !10430
  %67 = load float, float* %height, align 4, !dbg !10432
  %mul67 = fmul float 0x3FECCCCCC0000000, %67, !dbg !10433
  %add68 = fadd float %conv66, %mul67, !dbg !10434
  call void @glVertex2f(float %add64, float %add68), !dbg !10435
  %68 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10436
  %xmin69 = getelementptr inbounds %struct.rcti, %struct.rcti* %68, i32 0, i32 0, !dbg !10437
  %69 = load i32, i32* %xmin69, align 4, !dbg !10437
  %conv70 = sitofp i32 %69 to float, !dbg !10436
  %70 = load float, float* %width, align 4, !dbg !10438
  %mul71 = fmul float 0x3FB99999A0000000, %70, !dbg !10439
  %add72 = fadd float %conv70, %mul71, !dbg !10440
  %71 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10441
  %ymin73 = getelementptr inbounds %struct.rcti, %struct.rcti* %71, i32 0, i32 2, !dbg !10442
  %72 = load i32, i32* %ymin73, align 4, !dbg !10442
  %conv74 = sitofp i32 %72 to float, !dbg !10441
  %73 = load float, float* %height, align 4, !dbg !10443
  %mul75 = fmul float 5.000000e-01, %73, !dbg !10444
  %add76 = fadd float %conv74, %mul75, !dbg !10445
  call void @glVertex2f(float %add72, float %add76), !dbg !10446
  %74 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10447
  %xmin77 = getelementptr inbounds %struct.rcti, %struct.rcti* %74, i32 0, i32 0, !dbg !10448
  %75 = load i32, i32* %xmin77, align 4, !dbg !10448
  %conv78 = sitofp i32 %75 to float, !dbg !10447
  %76 = load float, float* %width, align 4, !dbg !10449
  %mul79 = fmul float 5.000000e-01, %76, !dbg !10450
  %add80 = fadd float %conv78, %mul79, !dbg !10451
  %77 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10452
  %ymin81 = getelementptr inbounds %struct.rcti, %struct.rcti* %77, i32 0, i32 2, !dbg !10453
  %78 = load i32, i32* %ymin81, align 4, !dbg !10453
  %conv82 = sitofp i32 %78 to float, !dbg !10452
  %79 = load float, float* %height, align 4, !dbg !10454
  %mul83 = fmul float 0x3FECCCCCC0000000, %79, !dbg !10455
  %add84 = fadd float %conv82, %mul83, !dbg !10456
  call void @glVertex2f(float %add80, float %add84), !dbg !10457
  call void @glEnd(), !dbg !10458
  br label %if.end85, !dbg !10459

if.end85:                                         ; preds = %if.end60, %land.lhs.true, %if.end24
  ret void, !dbg !10460
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_box(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %roundboxalign) #0 !dbg !10461 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %old_col = alloca [3 x i8], align 1
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10468, metadata !DIExpression()), !dbg !10469
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10472, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata [3 x i8]* %old_col, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10478
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %old_col, i64 0, i64 0, !dbg !10479
  %0 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10480
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %0, i32 0, i32 1, !dbg !10481
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10480
  call void @copy_v3_v3_char(i8* %arraydecay, i8* %arraydecay1), !dbg !10482
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10483
  %col = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 26, !dbg !10485
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !10483
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10483
  %tobool = icmp ne i8 %2, 0, !dbg !10483
  br i1 %tobool, label %if.then, label %if.end, !dbg !10486

if.then:                                          ; preds = %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10487
  %col2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 26, !dbg !10489
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %col2, i64 0, i64 0, !dbg !10487
  %4 = load i8, i8* %arrayidx3, align 8, !dbg !10487
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10490
  %inner4 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %5, i32 0, i32 1, !dbg !10491
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %inner4, i64 0, i64 0, !dbg !10490
  store i8 %4, i8* %arrayidx5, align 2, !dbg !10492
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10493
  %col6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 26, !dbg !10494
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %col6, i64 0, i64 1, !dbg !10493
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !10493
  %8 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10495
  %inner8 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %8, i32 0, i32 1, !dbg !10496
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %inner8, i64 0, i64 1, !dbg !10495
  store i8 %7, i8* %arrayidx9, align 1, !dbg !10497
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10498
  %col10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 26, !dbg !10499
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %col10, i64 0, i64 2, !dbg !10498
  %10 = load i8, i8* %arrayidx11, align 2, !dbg !10498
  %11 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10500
  %inner12 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %11, i32 0, i32 1, !dbg !10501
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %inner12, i64 0, i64 2, !dbg !10500
  store i8 %10, i8* %arrayidx13, align 2, !dbg !10502
  br label %if.end, !dbg !10503

if.end:                                           ; preds = %if.then, %entry
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !10504
  %conv = sext i16 %12 to i32, !dbg !10505
  %conv14 = sitofp i32 %conv to float, !dbg !10505
  %mul = fmul float 0x3FC99999A0000000, %conv14, !dbg !10506
  store float %mul, float* %rad, align 4, !dbg !10507
  %13 = load i32, i32* %roundboxalign.addr, align 4, !dbg !10508
  %14 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10509
  %15 = load float, float* %rad, align 4, !dbg !10510
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %13, %struct.rcti* %14, float %15), !dbg !10511
  %16 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10512
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %16), !dbg !10513
  %17 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10514
  %inner15 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %17, i32 0, i32 1, !dbg !10515
  %arraydecay16 = getelementptr inbounds [4 x i8], [4 x i8]* %inner15, i64 0, i64 0, !dbg !10514
  %arraydecay17 = getelementptr inbounds [3 x i8], [3 x i8]* %old_col, i64 0, i64 0, !dbg !10516
  call void @copy_v3_v3_char(i8* %arraydecay16, i8* %arraydecay17), !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_normal(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !10519 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10520, metadata !DIExpression()), !dbg !10521
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10522, metadata !DIExpression()), !dbg !10523
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10524, metadata !DIExpression()), !dbg !10525
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10526, metadata !DIExpression()), !dbg !10527
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10530
  %1 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10531
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10532
  call void @ui_draw_but_NORMAL(%struct.uiBut* %0, %struct.uiWidgetColors* %1, %struct.rcti* %2), !dbg !10533
  ret void, !dbg !10534
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_nothing(%struct.uiWidgetType* %wt, i32 %UNUSED_state) #0 !dbg !10535 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !10536, metadata !DIExpression()), !dbg !10537
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10538, metadata !DIExpression()), !dbg !10539
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10540
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 2, !dbg !10541
  %1 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10542
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %1, i32 0, i32 0, !dbg !10543
  %2 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !10543
  %3 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !10544
  %4 = bitcast %struct.uiWidgetColors* %2 to i8*, !dbg !10544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 2 %4, i64 32, i1 false), !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_scroll(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %UNUSED_roundboxalign) #0 !dbg !10546 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %rect1 = alloca %struct.rcti, align 4
  %value = alloca double, align 8
  %fac = alloca float, align 4
  %size = alloca float, align 4
  %min = alloca float, align 4
  %horizontal = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect1, metadata !10557, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.declare(metadata double* %value, metadata !10559, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10561, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.declare(metadata float* %size, metadata !10563, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.declare(metadata float* %min, metadata !10565, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.declare(metadata i32* %horizontal, metadata !10567, metadata !DIExpression()), !dbg !10568
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10569
  %call = call double @ui_get_but_val(%struct.uiBut* %0), !dbg !10570
  store double %call, double* %value, align 8, !dbg !10571
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10572
  %softmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 23, !dbg !10573
  %2 = load float, float* %softmax, align 4, !dbg !10573
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10574
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 24, !dbg !10575
  %4 = load float, float* %a1, align 8, !dbg !10575
  %add = fadd float %2, %4, !dbg !10576
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10577
  %softmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 22, !dbg !10578
  %6 = load float, float* %softmin, align 8, !dbg !10578
  %sub = fsub float %add, %6, !dbg !10579
  store float %sub, float* %size, align 4, !dbg !10580
  %7 = load float, float* %size, align 4, !dbg !10581
  %call1 = call float @max_ff(float %7, float 2.000000e+00), !dbg !10582
  store float %call1, float* %size, align 4, !dbg !10583
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10584
  %9 = bitcast %struct.rcti* %rect1 to i8*, !dbg !10585
  %10 = bitcast %struct.rcti* %8 to i8*, !dbg !10585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false), !dbg !10585
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10586
  %call2 = call i32 @BLI_rcti_size_x(%struct.rcti* %11), !dbg !10587
  %12 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10588
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %12), !dbg !10589
  %cmp = icmp sgt i32 %call2, %call3, !dbg !10590
  %conv = zext i1 %cmp to i32, !dbg !10590
  store i32 %conv, i32* %horizontal, align 4, !dbg !10591
  %13 = load i32, i32* %horizontal, align 4, !dbg !10592
  %tobool = icmp ne i32 %13, 0, !dbg !10592
  br i1 %tobool, label %if.then, label %if.else, !dbg !10594

if.then:                                          ; preds = %entry
  %14 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10595
  %call4 = call i32 @BLI_rcti_size_x(%struct.rcti* %14), !dbg !10597
  %conv5 = sitofp i32 %call4 to float, !dbg !10597
  %15 = load float, float* %size, align 4, !dbg !10598
  %div = fdiv float %conv5, %15, !dbg !10599
  store float %div, float* %fac, align 4, !dbg !10600
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !10601
  %16 = load i32, i32* %xmin, align 4, !dbg !10601
  %conv6 = sitofp i32 %16 to float, !dbg !10602
  %17 = load float, float* %fac, align 4, !dbg !10603
  %18 = load double, double* %value, align 8, !dbg !10604
  %conv7 = fptrunc double %18 to float, !dbg !10605
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10606
  %softmin8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 22, !dbg !10607
  %20 = load float, float* %softmin8, align 8, !dbg !10607
  %sub9 = fsub float %conv7, %20, !dbg !10608
  %mul = fmul float %17, %sub9, !dbg !10609
  %21 = call float @llvm.ceil.f32(float %mul), !dbg !10610
  %add10 = fadd float %conv6, %21, !dbg !10611
  %conv11 = fptosi float %add10 to i32, !dbg !10602
  %xmin12 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !10612
  store i32 %conv11, i32* %xmin12, align 4, !dbg !10613
  %xmin13 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !10614
  %22 = load i32, i32* %xmin13, align 4, !dbg !10614
  %conv14 = sitofp i32 %22 to float, !dbg !10615
  %23 = load float, float* %fac, align 4, !dbg !10616
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10617
  %a115 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 24, !dbg !10618
  %25 = load float, float* %a115, align 8, !dbg !10618
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10619
  %softmin16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 22, !dbg !10620
  %27 = load float, float* %softmin16, align 8, !dbg !10620
  %sub17 = fsub float %25, %27, !dbg !10621
  %mul18 = fmul float %23, %sub17, !dbg !10622
  %28 = call float @llvm.ceil.f32(float %mul18), !dbg !10623
  %add19 = fadd float %conv14, %28, !dbg !10624
  %conv20 = fptosi float %add19 to i32, !dbg !10615
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !10625
  store i32 %conv20, i32* %xmax, align 4, !dbg !10626
  %29 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10627
  %call21 = call i32 @BLI_rcti_size_y(%struct.rcti* %29), !dbg !10628
  %conv22 = sitofp i32 %call21 to float, !dbg !10628
  store float %conv22, float* %min, align 4, !dbg !10629
  %call23 = call i32 @BLI_rcti_size_x(%struct.rcti* %rect1), !dbg !10630
  %conv24 = sitofp i32 %call23 to float, !dbg !10630
  %30 = load float, float* %min, align 4, !dbg !10632
  %cmp25 = fcmp olt float %conv24, %30, !dbg !10633
  br i1 %cmp25, label %if.then27, label %if.end47, !dbg !10634

if.then27:                                        ; preds = %if.then
  %xmin28 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !10635
  %31 = load i32, i32* %xmin28, align 4, !dbg !10635
  %conv29 = sitofp i32 %31 to float, !dbg !10637
  %32 = load float, float* %min, align 4, !dbg !10638
  %add30 = fadd float %conv29, %32, !dbg !10639
  %conv31 = fptosi float %add30 to i32, !dbg !10637
  %xmax32 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !10640
  store i32 %conv31, i32* %xmax32, align 4, !dbg !10641
  %xmax33 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !10642
  %33 = load i32, i32* %xmax33, align 4, !dbg !10642
  %34 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10644
  %xmax34 = getelementptr inbounds %struct.rcti, %struct.rcti* %34, i32 0, i32 1, !dbg !10645
  %35 = load i32, i32* %xmax34, align 4, !dbg !10645
  %cmp35 = icmp sgt i32 %33, %35, !dbg !10646
  br i1 %cmp35, label %if.then37, label %if.end, !dbg !10647

if.then37:                                        ; preds = %if.then27
  %36 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10648
  %xmax38 = getelementptr inbounds %struct.rcti, %struct.rcti* %36, i32 0, i32 1, !dbg !10650
  %37 = load i32, i32* %xmax38, align 4, !dbg !10650
  %xmax39 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !10651
  store i32 %37, i32* %xmax39, align 4, !dbg !10652
  %xmax40 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 1, !dbg !10653
  %38 = load i32, i32* %xmax40, align 4, !dbg !10653
  %conv41 = sitofp i32 %38 to float, !dbg !10654
  %39 = load float, float* %min, align 4, !dbg !10655
  %sub42 = fsub float %conv41, %39, !dbg !10656
  %conv43 = fptosi float %sub42 to i32, !dbg !10654
  %40 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10657
  %xmin44 = getelementptr inbounds %struct.rcti, %struct.rcti* %40, i32 0, i32 0, !dbg !10658
  %41 = load i32, i32* %xmin44, align 4, !dbg !10658
  %call45 = call i32 @max_ii(i32 %conv43, i32 %41), !dbg !10659
  %xmin46 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 0, !dbg !10660
  store i32 %call45, i32* %xmin46, align 4, !dbg !10661
  br label %if.end, !dbg !10662

if.end:                                           ; preds = %if.then37, %if.then27
  br label %if.end47, !dbg !10663

if.end47:                                         ; preds = %if.end, %if.then
  br label %if.end95, !dbg !10664

if.else:                                          ; preds = %entry
  %42 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10665
  %call48 = call i32 @BLI_rcti_size_y(%struct.rcti* %42), !dbg !10667
  %conv49 = sitofp i32 %call48 to float, !dbg !10667
  %43 = load float, float* %size, align 4, !dbg !10668
  %div50 = fdiv float %conv49, %43, !dbg !10669
  store float %div50, float* %fac, align 4, !dbg !10670
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10671
  %44 = load i32, i32* %ymax, align 4, !dbg !10671
  %conv51 = sitofp i32 %44 to float, !dbg !10672
  %45 = load float, float* %fac, align 4, !dbg !10673
  %46 = load double, double* %value, align 8, !dbg !10674
  %conv52 = fptrunc double %46 to float, !dbg !10675
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10676
  %softmin53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 22, !dbg !10677
  %48 = load float, float* %softmin53, align 8, !dbg !10677
  %sub54 = fsub float %conv52, %48, !dbg !10678
  %mul55 = fmul float %45, %sub54, !dbg !10679
  %49 = call float @llvm.ceil.f32(float %mul55), !dbg !10680
  %sub56 = fsub float %conv51, %49, !dbg !10681
  %conv57 = fptosi float %sub56 to i32, !dbg !10672
  %ymax58 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10682
  store i32 %conv57, i32* %ymax58, align 4, !dbg !10683
  %ymax59 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10684
  %50 = load i32, i32* %ymax59, align 4, !dbg !10684
  %conv60 = sitofp i32 %50 to float, !dbg !10685
  %51 = load float, float* %fac, align 4, !dbg !10686
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10687
  %a161 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 24, !dbg !10688
  %53 = load float, float* %a161, align 8, !dbg !10688
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10689
  %softmin62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 22, !dbg !10690
  %55 = load float, float* %softmin62, align 8, !dbg !10690
  %sub63 = fsub float %53, %55, !dbg !10691
  %mul64 = fmul float %51, %sub63, !dbg !10692
  %56 = call float @llvm.ceil.f32(float %mul64), !dbg !10693
  %sub65 = fsub float %conv60, %56, !dbg !10694
  %conv66 = fptosi float %sub65 to i32, !dbg !10685
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 2, !dbg !10695
  store i32 %conv66, i32* %ymin, align 4, !dbg !10696
  %57 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10697
  %call67 = call i32 @BLI_rcti_size_x(%struct.rcti* %57), !dbg !10698
  %conv68 = sitofp i32 %call67 to float, !dbg !10698
  store float %conv68, float* %min, align 4, !dbg !10699
  %call69 = call i32 @BLI_rcti_size_y(%struct.rcti* %rect1), !dbg !10700
  %conv70 = sitofp i32 %call69 to float, !dbg !10700
  %58 = load float, float* %min, align 4, !dbg !10702
  %cmp71 = fcmp olt float %conv70, %58, !dbg !10703
  br i1 %cmp71, label %if.then73, label %if.end94, !dbg !10704

if.then73:                                        ; preds = %if.else
  %ymin74 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 2, !dbg !10705
  %59 = load i32, i32* %ymin74, align 4, !dbg !10705
  %conv75 = sitofp i32 %59 to float, !dbg !10707
  %60 = load float, float* %min, align 4, !dbg !10708
  %add76 = fadd float %conv75, %60, !dbg !10709
  %conv77 = fptosi float %add76 to i32, !dbg !10707
  %ymax78 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10710
  store i32 %conv77, i32* %ymax78, align 4, !dbg !10711
  %ymax79 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10712
  %61 = load i32, i32* %ymax79, align 4, !dbg !10712
  %62 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10714
  %ymax80 = getelementptr inbounds %struct.rcti, %struct.rcti* %62, i32 0, i32 3, !dbg !10715
  %63 = load i32, i32* %ymax80, align 4, !dbg !10715
  %cmp81 = icmp sgt i32 %61, %63, !dbg !10716
  br i1 %cmp81, label %if.then83, label %if.end93, !dbg !10717

if.then83:                                        ; preds = %if.then73
  %64 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10718
  %ymax84 = getelementptr inbounds %struct.rcti, %struct.rcti* %64, i32 0, i32 3, !dbg !10720
  %65 = load i32, i32* %ymax84, align 4, !dbg !10720
  %ymax85 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10721
  store i32 %65, i32* %ymax85, align 4, !dbg !10722
  %ymax86 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 3, !dbg !10723
  %66 = load i32, i32* %ymax86, align 4, !dbg !10723
  %conv87 = sitofp i32 %66 to float, !dbg !10724
  %67 = load float, float* %min, align 4, !dbg !10725
  %sub88 = fsub float %conv87, %67, !dbg !10726
  %conv89 = fptosi float %sub88 to i32, !dbg !10724
  %68 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10727
  %ymin90 = getelementptr inbounds %struct.rcti, %struct.rcti* %68, i32 0, i32 2, !dbg !10728
  %69 = load i32, i32* %ymin90, align 4, !dbg !10728
  %call91 = call i32 @max_ii(i32 %conv89, i32 %69), !dbg !10729
  %ymin92 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect1, i32 0, i32 2, !dbg !10730
  store i32 %call91, i32* %ymin92, align 4, !dbg !10731
  br label %if.end93, !dbg !10732

if.end93:                                         ; preds = %if.then83, %if.then73
  br label %if.end94, !dbg !10733

if.end94:                                         ; preds = %if.end93, %if.else
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end47
  %70 = load i32, i32* %state.addr, align 4, !dbg !10734
  %and = and i32 %70, 1, !dbg !10736
  %tobool96 = icmp ne i32 %and, 0, !dbg !10736
  br i1 %tobool96, label %if.then97, label %if.else98, !dbg !10737

if.then97:                                        ; preds = %if.end95
  store i32 1, i32* %state.addr, align 4, !dbg !10738
  br label %if.end99, !dbg !10739

if.else98:                                        ; preds = %if.end95
  store i32 0, i32* %state.addr, align 4, !dbg !10740
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  %71 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10741
  %72 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10742
  %73 = load i32, i32* %state.addr, align 4, !dbg !10743
  call void @uiWidgetScrollDraw(%struct.uiWidgetColors* %71, %struct.rcti* %72, %struct.rcti* %rect1, i32 %73), !dbg !10744
  ret void, !dbg !10745
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_list_itembut(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !10746 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10747, metadata !DIExpression()), !dbg !10748
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10749, metadata !DIExpression()), !dbg !10750
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10751, metadata !DIExpression()), !dbg !10752
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10753, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10755, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10757, metadata !DIExpression()), !dbg !10758
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10759
  %outline = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 6, !dbg !10760
  store i8 0, i8* %outline, align 1, !dbg !10761
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !10762
  %conv = sext i16 %0 to i32, !dbg !10763
  %conv1 = sitofp i32 %conv to float, !dbg !10763
  %mul = fmul float 0x3FC99999A0000000, %conv1, !dbg !10764
  store float %mul, float* %rad, align 4, !dbg !10765
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10766
  %2 = load float, float* %rad, align 4, !dbg !10767
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %1, float %2), !dbg !10768
  %3 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10769
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %3), !dbg !10770
  ret void, !dbg !10771
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_progressbar(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !10772 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %rect_prog = alloca %struct.rcti, align 4
  %rect_bar = alloca %struct.rcti, align 4
  %value = alloca float, align 4
  %w = alloca float, align 4
  %min = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10777, metadata !DIExpression()), !dbg !10778
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect_prog, metadata !10783, metadata !DIExpression()), !dbg !10784
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10785
  %1 = bitcast %struct.rcti* %rect_prog to i8*, !dbg !10786
  %2 = bitcast %struct.rcti* %0 to i8*, !dbg !10786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !10786
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect_bar, metadata !10787, metadata !DIExpression()), !dbg !10788
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10789
  %4 = bitcast %struct.rcti* %rect_bar to i8*, !dbg !10790
  %5 = bitcast %struct.rcti* %3 to i8*, !dbg !10790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 16, i1 false), !dbg !10790
  call void @llvm.dbg.declare(metadata float* %value, metadata !10791, metadata !DIExpression()), !dbg !10792
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10793
  %a1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 24, !dbg !10794
  %7 = load float, float* %a1, align 8, !dbg !10794
  store float %7, float* %value, align 4, !dbg !10792
  call void @llvm.dbg.declare(metadata float* %w, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata float* %min, metadata !10797, metadata !DIExpression()), !dbg !10798
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_prog, i32 0, i32 2, !dbg !10799
  %8 = load i32, i32* %ymin, align 4, !dbg !10799
  %conv = sitofp i32 %8 to float, !dbg !10800
  %9 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10801
  %10 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !10801
  %conv1 = sitofp i32 %10 to float, !dbg !10801
  %mul = fmul float %9, %conv1, !dbg !10801
  %div = fdiv float %mul, 7.200000e+01, !dbg !10801
  %mul2 = fmul float 4.000000e+00, %div, !dbg !10802
  %add = fadd float %conv, %mul2, !dbg !10803
  %conv3 = fptosi float %add to i32, !dbg !10800
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_prog, i32 0, i32 3, !dbg !10804
  store i32 %conv3, i32* %ymax, align 4, !dbg !10805
  %ymin4 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_bar, i32 0, i32 2, !dbg !10806
  %11 = load i32, i32* %ymin4, align 4, !dbg !10806
  %conv5 = sitofp i32 %11 to float, !dbg !10807
  %12 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10808
  %13 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !10808
  %conv6 = sitofp i32 %13 to float, !dbg !10808
  %mul7 = fmul float %12, %conv6, !dbg !10808
  %div8 = fdiv float %mul7, 7.200000e+01, !dbg !10808
  %mul9 = fmul float 4.000000e+00, %div8, !dbg !10809
  %add10 = fadd float %conv5, %mul9, !dbg !10810
  %conv11 = fptosi float %add10 to i32, !dbg !10807
  %ymax12 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_bar, i32 0, i32 3, !dbg !10811
  store i32 %conv11, i32* %ymax12, align 4, !dbg !10812
  %14 = load float, float* %value, align 4, !dbg !10813
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %rect_prog), !dbg !10814
  %conv13 = sitofp i32 %call to float, !dbg !10814
  %mul14 = fmul float %14, %conv13, !dbg !10815
  store float %mul14, float* %w, align 4, !dbg !10816
  %call15 = call i32 @BLI_rcti_size_y(%struct.rcti* %rect_prog), !dbg !10817
  %conv16 = sitofp i32 %call15 to float, !dbg !10817
  store float %conv16, float* %min, align 4, !dbg !10818
  %15 = load float, float* %w, align 4, !dbg !10819
  %16 = load float, float* %min, align 4, !dbg !10819
  %cmp = fcmp ogt float %15, %16, !dbg !10819
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10819

cond.true:                                        ; preds = %entry
  %17 = load float, float* %w, align 4, !dbg !10819
  br label %cond.end, !dbg !10819

cond.false:                                       ; preds = %entry
  %18 = load float, float* %min, align 4, !dbg !10819
  br label %cond.end, !dbg !10819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %17, %cond.true ], [ %18, %cond.false ], !dbg !10819
  store float %cond, float* %w, align 4, !dbg !10820
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_bar, i32 0, i32 0, !dbg !10821
  %19 = load i32, i32* %xmin, align 4, !dbg !10821
  %conv18 = sitofp i32 %19 to float, !dbg !10822
  %20 = load float, float* %w, align 4, !dbg !10823
  %add19 = fadd float %conv18, %20, !dbg !10824
  %conv20 = fptosi float %add19 to i32, !dbg !10822
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect_bar, i32 0, i32 1, !dbg !10825
  store i32 %conv20, i32* %xmax, align 4, !dbg !10826
  %21 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10827
  call void @uiWidgetScrollDraw(%struct.uiWidgetColors* %21, %struct.rcti* %rect_prog, %struct.rcti* %rect_bar, i32 4), !dbg !10828
  %22 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10829
  %23 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !10829
  %conv21 = sitofp i32 %23 to float, !dbg !10829
  %mul22 = fmul float %22, %conv21, !dbg !10829
  %div23 = fdiv float %mul22, 7.200000e+01, !dbg !10829
  %mul24 = fmul float 6.000000e+00, %div23, !dbg !10830
  %24 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10831
  %ymin25 = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 2, !dbg !10832
  %25 = load i32, i32* %ymin25, align 4, !dbg !10833
  %conv26 = sitofp i32 %25 to float, !dbg !10833
  %add27 = fadd float %conv26, %mul24, !dbg !10833
  %conv28 = fptosi float %add27 to i32, !dbg !10833
  store i32 %conv28, i32* %ymin25, align 4, !dbg !10833
  %26 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10834
  %27 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !10834
  %conv29 = sitofp i32 %27 to float, !dbg !10834
  %mul30 = fmul float %26, %conv29, !dbg !10834
  %div31 = fdiv float %mul30, 7.200000e+01, !dbg !10834
  %mul32 = fmul float 6.000000e+00, %div31, !dbg !10835
  %28 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10836
  %xmin33 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 0, !dbg !10837
  %29 = load i32, i32* %xmin33, align 4, !dbg !10838
  %conv34 = sitofp i32 %29 to float, !dbg !10838
  %sub = fsub float %conv34, %mul32, !dbg !10838
  %conv35 = fptosi float %sub to i32, !dbg !10838
  store i32 %conv35, i32* %xmin33, align 4, !dbg !10838
  ret void, !dbg !10839
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menu_radial_itembut(%struct.uiBut* %but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %UNUSED_state, i32 %UNUSED_roundboxalign) #0 !dbg !10840 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %UNUSED_state.addr = alloca i32, align 4
  %UNUSED_roundboxalign.addr = alloca i32, align 4
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %fac = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !10843, metadata !DIExpression()), !dbg !10844
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  store i32 %UNUSED_state, i32* %UNUSED_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_state.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  store i32 %UNUSED_roundboxalign, i32* %UNUSED_roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_roundboxalign.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !10851, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.declare(metadata float* %rad, metadata !10853, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10855, metadata !DIExpression()), !dbg !10856
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !10857
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !10858
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !10858
  %pie_data = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 53, !dbg !10859
  %alphafac = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data, i32 0, i32 7, !dbg !10860
  %2 = load float, float* %alphafac, align 8, !dbg !10860
  store float %2, float* %fac, align 4, !dbg !10856
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !10861
  %emboss = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 7, !dbg !10862
  store i8 0, i8* %emboss, align 2, !dbg !10863
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10864
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !10865
  %conv = sitofp i32 %call to float, !dbg !10865
  %mul = fmul float 5.000000e-01, %conv, !dbg !10866
  store float %mul, float* %rad, align 4, !dbg !10867
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !10868
  %5 = load float, float* %rad, align 4, !dbg !10869
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 15, %struct.rcti* %4, float %5), !dbg !10870
  %6 = load float, float* %fac, align 4, !dbg !10871
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10872
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 1, !dbg !10873
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 3, !dbg !10872
  %8 = load i8, i8* %arrayidx, align 1, !dbg !10874
  %conv1 = uitofp i8 %8 to float, !dbg !10874
  %mul2 = fmul float %conv1, %6, !dbg !10874
  %conv3 = fptoui float %mul2 to i8, !dbg !10874
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !10874
  %9 = load float, float* %fac, align 4, !dbg !10875
  %10 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10876
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %10, i32 0, i32 2, !dbg !10877
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 3, !dbg !10876
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !10878
  %conv5 = uitofp i8 %11 to float, !dbg !10878
  %mul6 = fmul float %conv5, %9, !dbg !10878
  %conv7 = fptoui float %mul6 to i8, !dbg !10878
  store i8 %conv7, i8* %arrayidx4, align 1, !dbg !10878
  %12 = load float, float* %fac, align 4, !dbg !10879
  %13 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10880
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %13, i32 0, i32 3, !dbg !10881
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 3, !dbg !10880
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !10882
  %conv9 = uitofp i8 %14 to float, !dbg !10882
  %mul10 = fmul float %conv9, %12, !dbg !10882
  %conv11 = fptoui float %mul10 to i8, !dbg !10882
  store i8 %conv11, i8* %arrayidx8, align 1, !dbg !10882
  %15 = load float, float* %fac, align 4, !dbg !10883
  %16 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10884
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %16, i32 0, i32 4, !dbg !10885
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 3, !dbg !10884
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !10886
  %conv13 = uitofp i8 %17 to float, !dbg !10886
  %mul14 = fmul float %conv13, %15, !dbg !10886
  %conv15 = fptoui float %mul14 to i8, !dbg !10886
  store i8 %conv15, i8* %arrayidx12, align 1, !dbg !10886
  %18 = load float, float* %fac, align 4, !dbg !10887
  %19 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10888
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %19, i32 0, i32 5, !dbg !10889
  %arrayidx16 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 3, !dbg !10888
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !10890
  %conv17 = uitofp i8 %20 to float, !dbg !10890
  %mul18 = fmul float %conv17, %18, !dbg !10890
  %conv19 = fptoui float %mul18 to i8, !dbg !10890
  store i8 %conv19, i8* %arrayidx16, align 1, !dbg !10890
  %21 = load float, float* %fac, align 4, !dbg !10891
  %22 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10892
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %22, i32 0, i32 0, !dbg !10893
  %arrayidx20 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 3, !dbg !10892
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !10894
  %conv21 = uitofp i8 %23 to float, !dbg !10894
  %mul22 = fmul float %conv21, %21, !dbg !10894
  %conv23 = fptoui float %mul22 to i8, !dbg !10894
  store i8 %conv23, i8* %arrayidx20, align 1, !dbg !10894
  %24 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !10895
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %24), !dbg !10896
  ret void, !dbg !10897
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_pie_menu_item(%struct.uiWidgetType* %wt, i32 %state) #0 !dbg !10898 {
entry:
  %wt.addr = alloca %struct.uiWidgetType*, align 8
  %state.addr = alloca i32, align 4
  store %struct.uiWidgetType* %wt, %struct.uiWidgetType** %wt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetType** %wt.addr, metadata !10899, metadata !DIExpression()), !dbg !10900
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10901, metadata !DIExpression()), !dbg !10902
  %0 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10903
  %wcol = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %0, i32 0, i32 2, !dbg !10904
  %1 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10905
  %wcol_theme = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %1, i32 0, i32 0, !dbg !10906
  %2 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol_theme, align 8, !dbg !10906
  %3 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !10907
  %4 = bitcast %struct.uiWidgetColors* %2 to i8*, !dbg !10907
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 2 %4, i64 32, i1 false), !dbg !10907
  %5 = load i32, i32* %state.addr, align 4, !dbg !10908
  %and = and i32 %5, 2048, !dbg !10910
  %tobool = icmp ne i32 %and, 0, !dbg !10910
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10911

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %state.addr, align 4, !dbg !10912
  %and1 = and i32 %6, 4, !dbg !10913
  %tobool2 = icmp ne i32 %and1, 0, !dbg !10913
  br i1 %tobool2, label %if.then, label %if.else, !dbg !10914

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10915
  %wcol3 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %7, i32 0, i32 2, !dbg !10917
  %text = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol3, i32 0, i32 4, !dbg !10918
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %text, i64 0, i64 0, !dbg !10915
  %8 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10919
  %wcol4 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %8, i32 0, i32 2, !dbg !10920
  %text_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol4, i32 0, i32 5, !dbg !10921
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel, i64 0, i64 0, !dbg !10919
  call void @widget_state_blend(i8* %arraydecay, i8* %arraydecay5, float 5.000000e-01), !dbg !10922
  %9 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10923
  %wcol6 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %9, i32 0, i32 2, !dbg !10924
  %inner = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol6, i32 0, i32 1, !dbg !10925
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %inner, i64 0, i64 0, !dbg !10923
  %10 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10926
  %wcol8 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %10, i32 0, i32 2, !dbg !10927
  %item = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol8, i32 0, i32 3, !dbg !10928
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %item, i64 0, i64 0, !dbg !10926
  call void @copy_v4_v4_char(i8* %arraydecay7, i8* %arraydecay9), !dbg !10929
  %11 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10930
  %wcol10 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %11, i32 0, i32 2, !dbg !10931
  %inner11 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol10, i32 0, i32 1, !dbg !10932
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inner11, i64 0, i64 3, !dbg !10930
  store i8 64, i8* %arrayidx, align 1, !dbg !10933
  br label %if.end53, !dbg !10934

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load i32, i32* %state.addr, align 4, !dbg !10935
  %and12 = and i32 %12, 133120, !dbg !10937
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10937
  br i1 %tobool13, label %if.then14, label %if.else21, !dbg !10938

if.then14:                                        ; preds = %if.else
  %13 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10939
  %wcol15 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %13, i32 0, i32 2, !dbg !10941
  %text16 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol15, i32 0, i32 4, !dbg !10942
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %text16, i64 0, i64 0, !dbg !10939
  %14 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10943
  %wcol18 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %14, i32 0, i32 2, !dbg !10944
  %inner19 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol18, i32 0, i32 1, !dbg !10945
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %inner19, i64 0, i64 0, !dbg !10943
  call void @widget_state_blend(i8* %arraydecay17, i8* %arraydecay20, float 5.000000e-01), !dbg !10946
  br label %if.end52, !dbg !10947

if.else21:                                        ; preds = %if.else
  %15 = load i32, i32* %state.addr, align 4, !dbg !10948
  %and22 = and i32 %15, 1, !dbg !10950
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10950
  br i1 %tobool23, label %if.then24, label %if.else35, !dbg !10951

if.then24:                                        ; preds = %if.else21
  %16 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10952
  %wcol25 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %16, i32 0, i32 2, !dbg !10954
  %outline = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol25, i32 0, i32 0, !dbg !10955
  %arraydecay26 = getelementptr inbounds [4 x i8], [4 x i8]* %outline, i64 0, i64 0, !dbg !10952
  %17 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10956
  %wcol27 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %17, i32 0, i32 2, !dbg !10957
  %inner_sel = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol27, i32 0, i32 2, !dbg !10958
  %arraydecay28 = getelementptr inbounds [4 x i8], [4 x i8]* %inner_sel, i64 0, i64 0, !dbg !10956
  call void @copy_v4_v4_char(i8* %arraydecay26, i8* %arraydecay28), !dbg !10959
  %18 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10960
  %wcol29 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %18, i32 0, i32 2, !dbg !10961
  %text30 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol29, i32 0, i32 4, !dbg !10962
  %arraydecay31 = getelementptr inbounds [4 x i8], [4 x i8]* %text30, i64 0, i64 0, !dbg !10960
  %19 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10963
  %wcol32 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %19, i32 0, i32 2, !dbg !10964
  %text_sel33 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol32, i32 0, i32 5, !dbg !10965
  %arraydecay34 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel33, i64 0, i64 0, !dbg !10963
  call void @copy_v3_v3_char(i8* %arraydecay31, i8* %arraydecay34), !dbg !10966
  br label %if.end51, !dbg !10967

if.else35:                                        ; preds = %if.else21
  %20 = load i32, i32* %state.addr, align 4, !dbg !10968
  %and36 = and i32 %20, 4, !dbg !10970
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10970
  br i1 %tobool37, label %if.then38, label %if.end, !dbg !10971

if.then38:                                        ; preds = %if.else35
  %21 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10972
  %wcol39 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %21, i32 0, i32 2, !dbg !10974
  %inner40 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol39, i32 0, i32 1, !dbg !10975
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %inner40, i64 0, i64 0, !dbg !10972
  %22 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10976
  %wcol42 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %22, i32 0, i32 2, !dbg !10977
  %item43 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol42, i32 0, i32 3, !dbg !10978
  %arraydecay44 = getelementptr inbounds [4 x i8], [4 x i8]* %item43, i64 0, i64 0, !dbg !10976
  call void @copy_v4_v4_char(i8* %arraydecay41, i8* %arraydecay44), !dbg !10979
  %23 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10980
  %wcol45 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %23, i32 0, i32 2, !dbg !10981
  %text46 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol45, i32 0, i32 4, !dbg !10982
  %arraydecay47 = getelementptr inbounds [4 x i8], [4 x i8]* %text46, i64 0, i64 0, !dbg !10980
  %24 = load %struct.uiWidgetType*, %struct.uiWidgetType** %wt.addr, align 8, !dbg !10983
  %wcol48 = getelementptr inbounds %struct.uiWidgetType, %struct.uiWidgetType* %24, i32 0, i32 2, !dbg !10984
  %text_sel49 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %wcol48, i32 0, i32 5, !dbg !10985
  %arraydecay50 = getelementptr inbounds [4 x i8], [4 x i8]* %text_sel49, i64 0, i64 0, !dbg !10983
  call void @copy_v3_v3_char(i8* %arraydecay47, i8* %arraydecay50), !dbg !10986
  br label %if.end, !dbg !10987

if.end:                                           ; preds = %if.then38, %if.else35
  br label %if.end51

if.end51:                                         ; preds = %if.end, %if.then24
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then14
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_state_blend(i8* %cp, i8* %cpstate, float %fac) #0 !dbg !10989 {
entry:
  %cp.addr = alloca i8*, align 8
  %cpstate.addr = alloca i8*, align 8
  %fac.addr = alloca float, align 4
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i8* %cpstate, i8** %cpstate.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpstate.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  %0 = load float, float* %fac.addr, align 4, !dbg !10998
  %cmp = fcmp une float %0, 0.000000e+00, !dbg !11000
  br i1 %cmp, label %if.then, label %if.end, !dbg !11001

if.then:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !11002
  %sub = fsub float 1.000000e+00, %1, !dbg !11004
  %2 = load i8*, i8** %cp.addr, align 8, !dbg !11005
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11005
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11005
  %conv = zext i8 %3 to i32, !dbg !11005
  %conv1 = sitofp i32 %conv to float, !dbg !11005
  %mul = fmul float %sub, %conv1, !dbg !11006
  %4 = load float, float* %fac.addr, align 4, !dbg !11007
  %5 = load i8*, i8** %cpstate.addr, align 8, !dbg !11008
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !11008
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !11008
  %conv3 = zext i8 %6 to i32, !dbg !11008
  %conv4 = sitofp i32 %conv3 to float, !dbg !11008
  %mul5 = fmul float %4, %conv4, !dbg !11009
  %add = fadd float %mul, %mul5, !dbg !11010
  %conv6 = fptosi float %add to i32, !dbg !11011
  %conv7 = trunc i32 %conv6 to i8, !dbg !11011
  %7 = load i8*, i8** %cp.addr, align 8, !dbg !11012
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11012
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !11013
  %8 = load float, float* %fac.addr, align 4, !dbg !11014
  %sub9 = fsub float 1.000000e+00, %8, !dbg !11015
  %9 = load i8*, i8** %cp.addr, align 8, !dbg !11016
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !11016
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !11016
  %conv11 = zext i8 %10 to i32, !dbg !11016
  %conv12 = sitofp i32 %conv11 to float, !dbg !11016
  %mul13 = fmul float %sub9, %conv12, !dbg !11017
  %11 = load float, float* %fac.addr, align 4, !dbg !11018
  %12 = load i8*, i8** %cpstate.addr, align 8, !dbg !11019
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !11019
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !11019
  %conv15 = zext i8 %13 to i32, !dbg !11019
  %conv16 = sitofp i32 %conv15 to float, !dbg !11019
  %mul17 = fmul float %11, %conv16, !dbg !11020
  %add18 = fadd float %mul13, %mul17, !dbg !11021
  %conv19 = fptosi float %add18 to i32, !dbg !11022
  %conv20 = trunc i32 %conv19 to i8, !dbg !11022
  %14 = load i8*, i8** %cp.addr, align 8, !dbg !11023
  %arrayidx21 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !11023
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !11024
  %15 = load float, float* %fac.addr, align 4, !dbg !11025
  %sub22 = fsub float 1.000000e+00, %15, !dbg !11026
  %16 = load i8*, i8** %cp.addr, align 8, !dbg !11027
  %arrayidx23 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !11027
  %17 = load i8, i8* %arrayidx23, align 1, !dbg !11027
  %conv24 = zext i8 %17 to i32, !dbg !11027
  %conv25 = sitofp i32 %conv24 to float, !dbg !11027
  %mul26 = fmul float %sub22, %conv25, !dbg !11028
  %18 = load float, float* %fac.addr, align 4, !dbg !11029
  %19 = load i8*, i8** %cpstate.addr, align 8, !dbg !11030
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !11030
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !11030
  %conv28 = zext i8 %20 to i32, !dbg !11030
  %conv29 = sitofp i32 %conv28 to float, !dbg !11030
  %mul30 = fmul float %18, %conv29, !dbg !11031
  %add31 = fadd float %mul26, %mul30, !dbg !11032
  %conv32 = fptosi float %add31 to i32, !dbg !11033
  %conv33 = trunc i32 %conv32 to i8, !dbg !11033
  %21 = load i8*, i8** %cp.addr, align 8, !dbg !11034
  %arrayidx34 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !11034
  store i8 %conv33, i8* %arrayidx34, align 1, !dbg !11035
  br label %if.end, !dbg !11036

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11037
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_char(i8* %r, i8* %a) #0 !dbg !11038 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !11039, metadata !DIExpression()), !dbg !11040
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11043
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !11043
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11043
  %2 = load i8*, i8** %r.addr, align 8, !dbg !11044
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11044
  store i8 %1, i8* %arrayidx1, align 1, !dbg !11045
  %3 = load i8*, i8** %a.addr, align 8, !dbg !11046
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11046
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !11046
  %5 = load i8*, i8** %r.addr, align 8, !dbg !11047
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !11047
  store i8 %4, i8* %arrayidx3, align 1, !dbg !11048
  %6 = load i8*, i8** %a.addr, align 8, !dbg !11049
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !11049
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !11049
  %8 = load i8*, i8** %r.addr, align 8, !dbg !11050
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !11050
  store i8 %7, i8* %arrayidx5, align 1, !dbg !11051
  ret void, !dbg !11052
}

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @widget_check_trias(%struct.uiWidgetTrias* %tria, %struct.rcti* %rect) #0 !dbg !11053 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %size = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.declare(metadata float* %centx, metadata !11060, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.declare(metadata float* %centy, metadata !11062, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.declare(metadata float* %size, metadata !11064, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11066, metadata !DIExpression()), !dbg !11067
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11068
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !11069
  %1 = load i32, i32* %xmin, align 4, !dbg !11069
  %conv = sitofp i32 %1 to float, !dbg !11068
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11070
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %2), !dbg !11071
  %conv1 = sitofp i32 %call to float, !dbg !11071
  %mul = fmul float 5.000000e-01, %conv1, !dbg !11072
  %add = fadd float %conv, %mul, !dbg !11073
  store float %add, float* %centx, align 4, !dbg !11074
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11075
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %3, i32 0, i32 2, !dbg !11076
  %4 = load i32, i32* %ymin, align 4, !dbg !11076
  %conv2 = sitofp i32 %4 to float, !dbg !11075
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11077
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %5), !dbg !11078
  %conv4 = sitofp i32 %call3 to float, !dbg !11078
  %mul5 = fmul float 5.000000e-01, %conv4, !dbg !11079
  %add6 = fadd float %conv2, %mul5, !dbg !11080
  store float %add6, float* %centy, align 4, !dbg !11081
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11082
  %call7 = call i32 @BLI_rcti_size_y(%struct.rcti* %6), !dbg !11083
  %conv8 = sitofp i32 %call7 to float, !dbg !11083
  %mul9 = fmul float 5.000000e-01, %conv8, !dbg !11084
  store float %mul9, float* %size, align 4, !dbg !11085
  store i32 0, i32* %a, align 4, !dbg !11086
  br label %for.cond, !dbg !11088

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %a, align 4, !dbg !11089
  %cmp = icmp slt i32 %7, 6, !dbg !11091
  br i1 %cmp, label %for.body, label %for.end, !dbg !11092

for.body:                                         ; preds = %for.cond
  %8 = load float, float* %size, align 4, !dbg !11093
  %9 = load i32, i32* %a, align 4, !dbg !11095
  %idxprom = sext i32 %9 to i64, !dbg !11096
  %arrayidx = getelementptr inbounds [6 x [2 x float]], [6 x [2 x float]]* @check_tria_vert, i64 0, i64 %idxprom, !dbg !11096
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !11096
  %10 = load float, float* %arrayidx11, align 8, !dbg !11096
  %mul12 = fmul float %8, %10, !dbg !11097
  %11 = load float, float* %centx, align 4, !dbg !11098
  %add13 = fadd float %mul12, %11, !dbg !11099
  %12 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11100
  %vec = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %12, i32 0, i32 1, !dbg !11101
  %13 = load i32, i32* %a, align 4, !dbg !11102
  %idxprom14 = sext i32 %13 to i64, !dbg !11100
  %arrayidx15 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec, i64 0, i64 %idxprom14, !dbg !11100
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 0, !dbg !11100
  store float %add13, float* %arrayidx16, align 4, !dbg !11103
  %14 = load float, float* %size, align 4, !dbg !11104
  %15 = load i32, i32* %a, align 4, !dbg !11105
  %idxprom17 = sext i32 %15 to i64, !dbg !11106
  %arrayidx18 = getelementptr inbounds [6 x [2 x float]], [6 x [2 x float]]* @check_tria_vert, i64 0, i64 %idxprom17, !dbg !11106
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx18, i64 0, i64 1, !dbg !11106
  %16 = load float, float* %arrayidx19, align 4, !dbg !11106
  %mul20 = fmul float %14, %16, !dbg !11107
  %17 = load float, float* %centy, align 4, !dbg !11108
  %add21 = fadd float %mul20, %17, !dbg !11109
  %18 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11110
  %vec22 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %18, i32 0, i32 1, !dbg !11111
  %19 = load i32, i32* %a, align 4, !dbg !11112
  %idxprom23 = sext i32 %19 to i64, !dbg !11110
  %arrayidx24 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec22, i64 0, i64 %idxprom23, !dbg !11110
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx24, i64 0, i64 1, !dbg !11110
  store float %add21, float* %arrayidx25, align 4, !dbg !11113
  br label %for.inc, !dbg !11114

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %a, align 4, !dbg !11115
  %inc = add nsw i32 %20, 1, !dbg !11115
  store i32 %inc, i32* %a, align 4, !dbg !11115
  br label %for.cond, !dbg !11116, !llvm.loop !11117

for.end:                                          ; preds = %for.cond
  %21 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11119
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %21, i32 0, i32 0, !dbg !11120
  store i32 4, i32* %tot, align 8, !dbg !11121
  %22 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11122
  %index = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %22, i32 0, i32 2, !dbg !11123
  store [3 x i32]* getelementptr inbounds ([4 x [3 x i32]], [4 x [3 x i32]]* @check_tria_face, i64 0, i64 0), [3 x i32]** %index, align 8, !dbg !11124
  ret void, !dbg !11125
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_numbut_draw(%struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign, i8 zeroext %emboss) #0 !dbg !11126 {
entry:
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  %emboss.addr = alloca i8, align 1
  %wtb = alloca %struct.uiWidgetBase, align 8
  %rad = alloca float, align 4
  %textofs = alloca float, align 4
  %sw_ap = alloca i16, align 2
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !11129, metadata !DIExpression()), !dbg !11130
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  store i8 %emboss, i8* %emboss.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %emboss.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase* %wtb, metadata !11139, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.declare(metadata float* %rad, metadata !11141, metadata !DIExpression()), !dbg !11142
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11143
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %0), !dbg !11144
  %conv = sitofp i32 %call to float, !dbg !11144
  %mul = fmul float 5.000000e-01, %conv, !dbg !11145
  store float %mul, float* %rad, align 4, !dbg !11142
  call void @llvm.dbg.declare(metadata float* %textofs, metadata !11146, metadata !DIExpression()), !dbg !11147
  %1 = load float, float* %rad, align 4, !dbg !11148
  %mul1 = fmul float %1, 0x3FEB333340000000, !dbg !11149
  store float %mul1, float* %textofs, align 4, !dbg !11147
  %2 = load i32, i32* %state.addr, align 4, !dbg !11150
  %and = and i32 %2, 1, !dbg !11152
  %tobool = icmp ne i32 %and, 0, !dbg !11152
  br i1 %tobool, label %if.then, label %if.end, !dbg !11153

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !11154, metadata !DIExpression()), !dbg !11156
  %3 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11156
  %shadetop = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %3, i32 0, i32 7, !dbg !11156
  %4 = load i16, i16* %shadetop, align 2, !dbg !11156
  store i16 %4, i16* %sw_ap, align 2, !dbg !11156
  %5 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11156
  %shadedown = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %5, i32 0, i32 8, !dbg !11156
  %6 = load i16, i16* %shadedown, align 2, !dbg !11156
  %7 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11156
  %shadetop2 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %7, i32 0, i32 7, !dbg !11156
  store i16 %6, i16* %shadetop2, align 2, !dbg !11156
  %8 = load i16, i16* %sw_ap, align 2, !dbg !11156
  %9 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11156
  %shadedown3 = getelementptr inbounds %struct.uiWidgetColors, %struct.uiWidgetColors* %9, i32 0, i32 8, !dbg !11156
  store i16 %8, i16* %shadedown3, align 2, !dbg !11156
  br label %if.end, !dbg !11156

if.end:                                           ; preds = %if.then, %entry
  call void @widget_init(%struct.uiWidgetBase* %wtb), !dbg !11157
  %10 = load i8, i8* %emboss.addr, align 1, !dbg !11158
  %tobool4 = icmp ne i8 %10, 0, !dbg !11158
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11160

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11161
  %12 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11163
  %13 = load float, float* %rad, align 4, !dbg !11164
  call void @round_box_edges(%struct.uiWidgetBase* %wtb, i32 %11, %struct.rcti* %12, float %13), !dbg !11165
  br label %if.end6, !dbg !11166

if.end6:                                          ; preds = %if.then5, %if.end
  %14 = load i32, i32* %state.addr, align 4, !dbg !11167
  %and7 = and i32 %14, 16, !dbg !11169
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11169
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !11170

if.then9:                                         ; preds = %if.end6
  %tria1 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 9, !dbg !11171
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11173
  call void @widget_num_tria(%struct.uiWidgetTrias* %tria1, %struct.rcti* %15, float 0x3FE3333340000000, i8 zeroext 108), !dbg !11174
  %tria2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %wtb, i32 0, i32 10, !dbg !11175
  %16 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11176
  call void @widget_num_tria(%struct.uiWidgetTrias* %tria2, %struct.rcti* %16, float 0x3FE3333340000000, i8 zeroext 114), !dbg !11177
  br label %if.end10, !dbg !11178

if.end10:                                         ; preds = %if.then9, %if.end6
  %17 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11179
  call void @widgetbase_draw(%struct.uiWidgetBase* %wtb, %struct.uiWidgetColors* %17), !dbg !11180
  %18 = load i32, i32* %state.addr, align 4, !dbg !11181
  %and11 = and i32 %18, 16, !dbg !11183
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11183
  br i1 %tobool12, label %if.end18, label %if.then13, !dbg !11184

if.then13:                                        ; preds = %if.end10
  %19 = load float, float* %textofs, align 4, !dbg !11185
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11187
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 0, !dbg !11188
  %21 = load i32, i32* %xmin, align 4, !dbg !11189
  %conv14 = sitofp i32 %21 to float, !dbg !11189
  %add = fadd float %conv14, %19, !dbg !11189
  %conv15 = fptosi float %add to i32, !dbg !11189
  store i32 %conv15, i32* %xmin, align 4, !dbg !11189
  %22 = load float, float* %textofs, align 4, !dbg !11190
  %23 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11191
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %23, i32 0, i32 1, !dbg !11192
  %24 = load i32, i32* %xmax, align 4, !dbg !11193
  %conv16 = sitofp i32 %24 to float, !dbg !11193
  %sub = fsub float %conv16, %22, !dbg !11193
  %conv17 = fptosi float %sub to i32, !dbg !11193
  store i32 %conv17, i32* %xmax, align 4, !dbg !11193
  br label %if.end18, !dbg !11194

if.end18:                                         ; preds = %if.then13, %if.end10
  ret void, !dbg !11195
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_num_tria(%struct.uiWidgetTrias* %tria, %struct.rcti* %rect, float %triasize, i8 zeroext %where) #0 !dbg !11196 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %triasize.addr = alloca float, align 4
  %where.addr = alloca i8, align 1
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11199, metadata !DIExpression()), !dbg !11200
  store float %triasize, float* %triasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %triasize.addr, metadata !11201, metadata !DIExpression()), !dbg !11202
  store i8 %where, i8* %where.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %where.addr, metadata !11203, metadata !DIExpression()), !dbg !11204
  %0 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11205
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11206
  %2 = load float, float* %triasize.addr, align 4, !dbg !11207
  %3 = load i8, i8* %where.addr, align 1, !dbg !11208
  call void @widget_draw_tria_ex(%struct.uiWidgetTrias* %0, %struct.rcti* %1, float %2, i8 zeroext %3, [2 x float]* getelementptr inbounds ([3 x [2 x float]], [3 x [2 x float]]* @num_tria_vert, i64 0, i64 0), i32 3, [3 x i32]* getelementptr inbounds ([1 x [3 x i32]], [1 x [3 x i32]]* @num_tria_face, i64 0, i64 0), i32 1), !dbg !11209
  ret void, !dbg !11210
}

declare dso_local double @ui_get_but_val(%struct.uiBut*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @widget_menu_trias(%struct.uiWidgetTrias* %tria, %struct.rcti* %rect) #0 !dbg !11211 {
entry:
  %tria.addr = alloca %struct.uiWidgetTrias*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %centx = alloca float, align 4
  %centy = alloca float, align 4
  %size = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.uiWidgetTrias* %tria, %struct.uiWidgetTrias** %tria.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetTrias** %tria.addr, metadata !11212, metadata !DIExpression()), !dbg !11213
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11214, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.declare(metadata float* %centx, metadata !11216, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.declare(metadata float* %centy, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata float* %size, metadata !11220, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11222, metadata !DIExpression()), !dbg !11223
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11224
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !11225
  %1 = load i32, i32* %xmax, align 4, !dbg !11225
  %conv = sitofp i32 %1 to float, !dbg !11224
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11226
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %2), !dbg !11227
  %conv1 = sitofp i32 %call to float, !dbg !11227
  %mul = fmul float 0x3FD47AE140000000, %conv1, !dbg !11228
  %sub = fsub float %conv, %mul, !dbg !11229
  store float %sub, float* %centx, align 4, !dbg !11230
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11231
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %3, i32 0, i32 2, !dbg !11232
  %4 = load i32, i32* %ymin, align 4, !dbg !11232
  %conv2 = sitofp i32 %4 to float, !dbg !11231
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11233
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %5), !dbg !11234
  %conv4 = sitofp i32 %call3 to float, !dbg !11234
  %mul5 = fmul float 5.000000e-01, %conv4, !dbg !11235
  %add = fadd float %conv2, %mul5, !dbg !11236
  store float %add, float* %centy, align 4, !dbg !11237
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11238
  %call6 = call i32 @BLI_rcti_size_y(%struct.rcti* %6), !dbg !11239
  %conv7 = sitofp i32 %call6 to float, !dbg !11240
  %mul8 = fmul float 0x3FD99999A0000000, %conv7, !dbg !11241
  store float %mul8, float* %size, align 4, !dbg !11242
  store i32 0, i32* %a, align 4, !dbg !11243
  br label %for.cond, !dbg !11245

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %a, align 4, !dbg !11246
  %cmp = icmp slt i32 %7, 6, !dbg !11248
  br i1 %cmp, label %for.body, label %for.end, !dbg !11249

for.body:                                         ; preds = %for.cond
  %8 = load float, float* %size, align 4, !dbg !11250
  %9 = load i32, i32* %a, align 4, !dbg !11252
  %idxprom = sext i32 %9 to i64, !dbg !11253
  %arrayidx = getelementptr inbounds [6 x [2 x float]], [6 x [2 x float]]* @menu_tria_vert, i64 0, i64 %idxprom, !dbg !11253
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !11253
  %10 = load float, float* %arrayidx10, align 8, !dbg !11253
  %mul11 = fmul float %8, %10, !dbg !11254
  %11 = load float, float* %centx, align 4, !dbg !11255
  %add12 = fadd float %mul11, %11, !dbg !11256
  %12 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11257
  %vec = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %12, i32 0, i32 1, !dbg !11258
  %13 = load i32, i32* %a, align 4, !dbg !11259
  %idxprom13 = sext i32 %13 to i64, !dbg !11257
  %arrayidx14 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec, i64 0, i64 %idxprom13, !dbg !11257
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx14, i64 0, i64 0, !dbg !11257
  store float %add12, float* %arrayidx15, align 4, !dbg !11260
  %14 = load float, float* %size, align 4, !dbg !11261
  %15 = load i32, i32* %a, align 4, !dbg !11262
  %idxprom16 = sext i32 %15 to i64, !dbg !11263
  %arrayidx17 = getelementptr inbounds [6 x [2 x float]], [6 x [2 x float]]* @menu_tria_vert, i64 0, i64 %idxprom16, !dbg !11263
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 1, !dbg !11263
  %16 = load float, float* %arrayidx18, align 4, !dbg !11263
  %mul19 = fmul float %14, %16, !dbg !11264
  %17 = load float, float* %centy, align 4, !dbg !11265
  %add20 = fadd float %mul19, %17, !dbg !11266
  %18 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11267
  %vec21 = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %18, i32 0, i32 1, !dbg !11268
  %19 = load i32, i32* %a, align 4, !dbg !11269
  %idxprom22 = sext i32 %19 to i64, !dbg !11267
  %arrayidx23 = getelementptr inbounds [16 x [2 x float]], [16 x [2 x float]]* %vec21, i64 0, i64 %idxprom22, !dbg !11267
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 1, !dbg !11267
  store float %add20, float* %arrayidx24, align 4, !dbg !11270
  br label %for.inc, !dbg !11271

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %a, align 4, !dbg !11272
  %inc = add nsw i32 %20, 1, !dbg !11272
  store i32 %inc, i32* %a, align 4, !dbg !11272
  br label %for.cond, !dbg !11273, !llvm.loop !11274

for.end:                                          ; preds = %for.cond
  %21 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11276
  %tot = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %21, i32 0, i32 0, !dbg !11277
  store i32 2, i32* %tot, align 8, !dbg !11278
  %22 = load %struct.uiWidgetTrias*, %struct.uiWidgetTrias** %tria.addr, align 8, !dbg !11279
  %index = getelementptr inbounds %struct.uiWidgetTrias, %struct.uiWidgetTrias* %22, i32 0, i32 2, !dbg !11280
  store [3 x i32]* getelementptr inbounds ([2 x [3 x i32]], [2 x [3 x i32]]* @menu_tria_face, i64 0, i64 0), [3 x i32]** %index, align 8, !dbg !11281
  ret void, !dbg !11282
}

; Function Attrs: noinline nounwind uwtable
define internal void @widget_numbut_embossn(%struct.uiBut* %UNUSED_but, %struct.uiWidgetColors* %wcol, %struct.rcti* %rect, i32 %state, i32 %roundboxalign) #0 !dbg !11283 {
entry:
  %UNUSED_but.addr = alloca %struct.uiBut*, align 8
  %wcol.addr = alloca %struct.uiWidgetColors*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %state.addr = alloca i32, align 4
  %roundboxalign.addr = alloca i32, align 4
  store %struct.uiBut* %UNUSED_but, %struct.uiBut** %UNUSED_but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %UNUSED_but.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  store %struct.uiWidgetColors* %wcol, %struct.uiWidgetColors** %wcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors** %wcol.addr, metadata !11286, metadata !DIExpression()), !dbg !11287
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11288, metadata !DIExpression()), !dbg !11289
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !11290, metadata !DIExpression()), !dbg !11291
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !11292, metadata !DIExpression()), !dbg !11293
  %0 = load %struct.uiWidgetColors*, %struct.uiWidgetColors** %wcol.addr, align 8, !dbg !11294
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11295
  %2 = load i32, i32* %state.addr, align 4, !dbg !11296
  %3 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11297
  call void @widget_numbut_draw(%struct.uiWidgetColors* %0, %struct.rcti* %1, i32 %2, i32 %3, i8 zeroext 1), !dbg !11298
  ret void, !dbg !11299
}

declare dso_local i32 @RNA_property_array_length(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local float @RNA_property_float_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @ui_get_but_vectorf(%struct.uiBut*, float*) #2

declare dso_local void @ui_block_to_display_space_v3(%struct.uiBlock*, float*) #2

declare dso_local void @rgba_float_to_uchar(i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_bw(float* %rgb) #0 !dbg !11300 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  %0 = load float*, float** %rgb.addr, align 8, !dbg !11304
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11304
  %1 = load float, float* %arrayidx, align 4, !dbg !11304
  %mul = fmul float 0x3FD6666660000000, %1, !dbg !11305
  %2 = load float*, float** %rgb.addr, align 8, !dbg !11306
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !11306
  %3 = load float, float* %arrayidx1, align 4, !dbg !11306
  %mul2 = fmul float 0x3FDCCCCCC0000000, %3, !dbg !11307
  %add = fadd float %mul, %mul2, !dbg !11308
  %4 = load float*, float** %rgb.addr, align 8, !dbg !11309
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !11309
  %5 = load float, float* %arrayidx3, align 4, !dbg !11309
  %mul4 = fmul float 0x3FC99999A0000000, %5, !dbg !11310
  %add5 = fadd float %add, %mul4, !dbg !11311
  ret float %add5, !dbg !11312
}

declare dso_local void @ui_draw_but_NORMAL(%struct.uiBut*, %struct.uiWidgetColors*, %struct.rcti*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !11313 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !11316, metadata !DIExpression()), !dbg !11317
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  %0 = load float, float* %a.addr, align 4, !dbg !11320
  %1 = load float, float* %b.addr, align 4, !dbg !11321
  %cmp = fcmp ogt float %0, %1, !dbg !11322
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11323

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !11324
  br label %cond.end, !dbg !11323

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !11325
  br label %cond.end, !dbg !11323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !11323
  ret float %cond, !dbg !11326
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #1

declare dso_local void @UI_ThemeColor(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_y(%struct.rcti* %rct) #0 !dbg !11327 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11330
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 2, !dbg !11331
  %1 = load i32, i32* %ymin, align 4, !dbg !11331
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11332
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 3, !dbg !11333
  %3 = load i32, i32* %ymax, align 4, !dbg !11333
  %add = add nsw i32 %1, %3, !dbg !11334
  %div = sdiv i32 %add, 2, !dbg !11335
  ret i32 %div, !dbg !11336
}

; Function Attrs: noinline nounwind uwtable
define internal void @widgetbase_outline(%struct.uiWidgetBase* %wtb) #0 !dbg !11337 {
entry:
  %wtb.addr = alloca %struct.uiWidgetBase*, align 8
  %quad_strip = alloca [74 x [2 x float]], align 16
  store %struct.uiWidgetBase* %wtb, %struct.uiWidgetBase** %wtb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiWidgetBase** %wtb.addr, metadata !11338, metadata !DIExpression()), !dbg !11339
  call void @llvm.dbg.declare(metadata [74 x [2 x float]]* %quad_strip, metadata !11340, metadata !DIExpression()), !dbg !11341
  %0 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !11342
  %1 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !11343
  %totvert = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %1, i32 0, i32 0, !dbg !11344
  %2 = load i32, i32* %totvert, align 8, !dbg !11344
  %arraydecay = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !11345
  call void @widget_verts_to_quad_strip(%struct.uiWidgetBase* %0, i32 %2, [2 x float]* %arraydecay), !dbg !11346
  call void @glEnableClientState(i32 32884), !dbg !11347
  %arraydecay1 = getelementptr inbounds [74 x [2 x float]], [74 x [2 x float]]* %quad_strip, i64 0, i64 0, !dbg !11348
  %3 = bitcast [2 x float]* %arraydecay1 to i8*, !dbg !11348
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %3), !dbg !11349
  %4 = load %struct.uiWidgetBase*, %struct.uiWidgetBase** %wtb.addr, align 8, !dbg !11350
  %totvert2 = getelementptr inbounds %struct.uiWidgetBase, %struct.uiWidgetBase* %4, i32 0, i32 0, !dbg !11351
  %5 = load i32, i32* %totvert2, align 8, !dbg !11351
  %mul = mul nsw i32 %5, 2, !dbg !11352
  %add = add nsw i32 %mul, 2, !dbg !11353
  call void @glDrawArrays(i32 8, i32 0, i32 %add), !dbg !11354
  call void @glDisableClientState(i32 32884), !dbg !11355
  ret void, !dbg !11356
}

declare dso_local void @rgb_to_hsl_v(float*, float*) #2

declare dso_local void @rgb_to_hsv_v(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_hsv_cursor(float %x, float %y) #0 !dbg !11357 {
entry:
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  call void @glPushMatrix(), !dbg !11364
  %0 = load float, float* %x.addr, align 4, !dbg !11365
  %1 = load float, float* %y.addr, align 4, !dbg !11366
  call void @glTranslatef(float %0, float %1, float 0.000000e+00), !dbg !11367
  call void @glColor3f(float 1.000000e+00, float 1.000000e+00, float 1.000000e+00), !dbg !11368
  %2 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11369
  %mul = fmul float 3.000000e+00, %2, !dbg !11370
  call void @glutil_draw_filled_arc(float 0.000000e+00, float 0x401921FB60000000, float %mul, i32 8), !dbg !11371
  call void @glEnable(i32 3042), !dbg !11372
  call void @glEnable(i32 2848), !dbg !11373
  call void @glColor3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !11374
  %3 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11375
  %mul1 = fmul float 3.000000e+00, %3, !dbg !11376
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %mul1, i32 12), !dbg !11377
  call void @glDisable(i32 3042), !dbg !11378
  call void @glDisable(i32 2848), !dbg !11379
  call void @glPopMatrix(), !dbg !11380
  ret void, !dbg !11381
}

declare dso_local void @glutil_draw_filled_arc(float, float, float, i32) #2

declare dso_local float* @ui_block_hsv_get(%struct.uiBlock*) #2

declare dso_local void @rgb_to_hsv_compat_v(float*, float*) #2

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @fdrawbox(float, float, float, float) #2

declare dso_local void @ui_rgb_to_color_picker_compat_v(float*, float*) #2

declare dso_local void @ui_color_picker_to_rgb(float, float, float, float*, float*, float*) #2

declare dso_local void @glColor3fv(float*) #2

declare dso_local void @ui_color_picker_to_rgb_v(float*, float*) #2

declare dso_local i32 @ui_button_open_menu_direction(%struct.uiBut*) #2

declare dso_local i32 @UI_ThemeMenuShadowWidth() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @round_box_shadow_edges([2 x float]* %vert, %struct.rcti* %rect, float %rad, i32 %roundboxalign, float %step) #0 !dbg !11382 {
entry:
  %vert.addr = alloca [2 x float]*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %rad.addr = alloca float, align 4
  %roundboxalign.addr = alloca i32, align 4
  %step.addr = alloca float, align 4
  %vec = alloca [9 x [2 x float]], align 16
  %minx = alloca float, align 4
  %miny = alloca float, align 4
  %maxx = alloca float, align 4
  %maxy = alloca float, align 4
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store [2 x float]* %vert, [2 x float]** %vert.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %vert.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  store i32 %roundboxalign, i32* %roundboxalign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxalign.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  store float %step, float* %step.addr, align 4
  call void @llvm.dbg.declare(metadata float* %step.addr, metadata !11393, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata [9 x [2 x float]]* %vec, metadata !11395, metadata !DIExpression()), !dbg !11396
  call void @llvm.dbg.declare(metadata float* %minx, metadata !11397, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.declare(metadata float* %miny, metadata !11399, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !11401, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !11403, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11405, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !11407, metadata !DIExpression()), !dbg !11408
  store i32 0, i32* %tot, align 4, !dbg !11408
  %0 = load float, float* %step.addr, align 4, !dbg !11409
  %1 = load float, float* %rad.addr, align 4, !dbg !11410
  %add = fadd float %1, %0, !dbg !11410
  store float %add, float* %rad.addr, align 4, !dbg !11410
  %2 = load float, float* %rad.addr, align 4, !dbg !11411
  %mul = fmul float 2.000000e+00, %2, !dbg !11413
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11414
  %call = call i32 @BLI_rcti_size_y(%struct.rcti* %3), !dbg !11415
  %conv = sitofp i32 %call to float, !dbg !11415
  %cmp = fcmp ogt float %mul, %conv, !dbg !11416
  br i1 %cmp, label %if.then, label %if.end, !dbg !11417

if.then:                                          ; preds = %entry
  %4 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11418
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %4), !dbg !11419
  %conv3 = sitofp i32 %call2 to float, !dbg !11419
  %mul4 = fmul float 5.000000e-01, %conv3, !dbg !11420
  store float %mul4, float* %rad.addr, align 4, !dbg !11421
  br label %if.end, !dbg !11422

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11423
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %5, i32 0, i32 0, !dbg !11424
  %6 = load i32, i32* %xmin, align 4, !dbg !11424
  %conv5 = sitofp i32 %6 to float, !dbg !11423
  %7 = load float, float* %step.addr, align 4, !dbg !11425
  %sub = fsub float %conv5, %7, !dbg !11426
  store float %sub, float* %minx, align 4, !dbg !11427
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11428
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %8, i32 0, i32 2, !dbg !11429
  %9 = load i32, i32* %ymin, align 4, !dbg !11429
  %conv6 = sitofp i32 %9 to float, !dbg !11428
  %10 = load float, float* %step.addr, align 4, !dbg !11430
  %sub7 = fsub float %conv6, %10, !dbg !11431
  store float %sub7, float* %miny, align 4, !dbg !11432
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11433
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %11, i32 0, i32 1, !dbg !11434
  %12 = load i32, i32* %xmax, align 4, !dbg !11434
  %conv8 = sitofp i32 %12 to float, !dbg !11433
  %13 = load float, float* %step.addr, align 4, !dbg !11435
  %add9 = fadd float %conv8, %13, !dbg !11436
  store float %add9, float* %maxx, align 4, !dbg !11437
  %14 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !11438
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 3, !dbg !11439
  %15 = load i32, i32* %ymax, align 4, !dbg !11439
  %conv10 = sitofp i32 %15 to float, !dbg !11438
  %16 = load float, float* %step.addr, align 4, !dbg !11440
  %add11 = fadd float %conv10, %16, !dbg !11441
  store float %add11, float* %maxy, align 4, !dbg !11442
  store i32 0, i32* %a, align 4, !dbg !11443
  br label %for.cond, !dbg !11445

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %a, align 4, !dbg !11446
  %cmp12 = icmp slt i32 %17, 9, !dbg !11448
  br i1 %cmp12, label %for.body, label %for.end, !dbg !11449

for.body:                                         ; preds = %for.cond
  %18 = load float, float* %rad.addr, align 4, !dbg !11450
  %19 = load i32, i32* %a, align 4, !dbg !11452
  %idxprom = sext i32 %19 to i64, !dbg !11453
  %arrayidx = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom, !dbg !11453
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !11453
  %20 = load float, float* %arrayidx14, align 8, !dbg !11453
  %mul15 = fmul float %18, %20, !dbg !11454
  %21 = load i32, i32* %a, align 4, !dbg !11455
  %idxprom16 = sext i32 %21 to i64, !dbg !11456
  %arrayidx17 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom16, !dbg !11456
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !11456
  store float %mul15, float* %arrayidx18, align 8, !dbg !11457
  %22 = load float, float* %rad.addr, align 4, !dbg !11458
  %23 = load i32, i32* %a, align 4, !dbg !11459
  %idxprom19 = sext i32 %23 to i64, !dbg !11460
  %arrayidx20 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* @cornervec, i64 0, i64 %idxprom19, !dbg !11460
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx20, i64 0, i64 1, !dbg !11460
  %24 = load float, float* %arrayidx21, align 4, !dbg !11460
  %mul22 = fmul float %22, %24, !dbg !11461
  %25 = load i32, i32* %a, align 4, !dbg !11462
  %idxprom23 = sext i32 %25 to i64, !dbg !11463
  %arrayidx24 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom23, !dbg !11463
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx24, i64 0, i64 1, !dbg !11463
  store float %mul22, float* %arrayidx25, align 4, !dbg !11464
  br label %for.inc, !dbg !11465

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %a, align 4, !dbg !11466
  %inc = add nsw i32 %26, 1, !dbg !11466
  store i32 %inc, i32* %a, align 4, !dbg !11466
  br label %for.cond, !dbg !11467, !llvm.loop !11468

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11470
  %and = and i32 %27, 1, !dbg !11472
  %tobool = icmp ne i32 %and, 0, !dbg !11472
  br i1 %tobool, label %if.then26, label %if.else, !dbg !11473

if.then26:                                        ; preds = %for.end
  store i32 0, i32* %a, align 4, !dbg !11474
  br label %for.cond27, !dbg !11477

for.cond27:                                       ; preds = %for.inc46, %if.then26
  %28 = load i32, i32* %a, align 4, !dbg !11478
  %cmp28 = icmp slt i32 %28, 9, !dbg !11480
  br i1 %cmp28, label %for.body30, label %for.end49, !dbg !11481

for.body30:                                       ; preds = %for.cond27
  %29 = load float, float* %minx, align 4, !dbg !11482
  %30 = load float, float* %rad.addr, align 4, !dbg !11484
  %add31 = fadd float %29, %30, !dbg !11485
  %31 = load i32, i32* %a, align 4, !dbg !11486
  %idxprom32 = sext i32 %31 to i64, !dbg !11487
  %arrayidx33 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom32, !dbg !11487
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !11487
  %32 = load float, float* %arrayidx34, align 8, !dbg !11487
  %sub35 = fsub float %add31, %32, !dbg !11488
  %33 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11489
  %34 = load i32, i32* %tot, align 4, !dbg !11490
  %idxprom36 = sext i32 %34 to i64, !dbg !11489
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %33, i64 %idxprom36, !dbg !11489
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx37, i64 0, i64 0, !dbg !11489
  store float %sub35, float* %arrayidx38, align 4, !dbg !11491
  %35 = load float, float* %maxy, align 4, !dbg !11492
  %36 = load i32, i32* %a, align 4, !dbg !11493
  %idxprom39 = sext i32 %36 to i64, !dbg !11494
  %arrayidx40 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom39, !dbg !11494
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx40, i64 0, i64 1, !dbg !11494
  %37 = load float, float* %arrayidx41, align 4, !dbg !11494
  %sub42 = fsub float %35, %37, !dbg !11495
  %38 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11496
  %39 = load i32, i32* %tot, align 4, !dbg !11497
  %idxprom43 = sext i32 %39 to i64, !dbg !11496
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %38, i64 %idxprom43, !dbg !11496
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 1, !dbg !11496
  store float %sub42, float* %arrayidx45, align 4, !dbg !11498
  br label %for.inc46, !dbg !11499

for.inc46:                                        ; preds = %for.body30
  %40 = load i32, i32* %a, align 4, !dbg !11500
  %inc47 = add nsw i32 %40, 1, !dbg !11500
  store i32 %inc47, i32* %a, align 4, !dbg !11500
  %41 = load i32, i32* %tot, align 4, !dbg !11501
  %inc48 = add nsw i32 %41, 1, !dbg !11501
  store i32 %inc48, i32* %tot, align 4, !dbg !11501
  br label %for.cond27, !dbg !11502, !llvm.loop !11503

for.end49:                                        ; preds = %for.cond27
  br label %if.end64, !dbg !11505

if.else:                                          ; preds = %for.end
  store i32 0, i32* %a, align 4, !dbg !11506
  br label %for.cond50, !dbg !11509

for.cond50:                                       ; preds = %for.inc60, %if.else
  %42 = load i32, i32* %a, align 4, !dbg !11510
  %cmp51 = icmp slt i32 %42, 9, !dbg !11512
  br i1 %cmp51, label %for.body53, label %for.end63, !dbg !11513

for.body53:                                       ; preds = %for.cond50
  %43 = load float, float* %minx, align 4, !dbg !11514
  %44 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11516
  %45 = load i32, i32* %tot, align 4, !dbg !11517
  %idxprom54 = sext i32 %45 to i64, !dbg !11516
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %44, i64 %idxprom54, !dbg !11516
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx55, i64 0, i64 0, !dbg !11516
  store float %43, float* %arrayidx56, align 4, !dbg !11518
  %46 = load float, float* %maxy, align 4, !dbg !11519
  %47 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11520
  %48 = load i32, i32* %tot, align 4, !dbg !11521
  %idxprom57 = sext i32 %48 to i64, !dbg !11520
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %47, i64 %idxprom57, !dbg !11520
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 1, !dbg !11520
  store float %46, float* %arrayidx59, align 4, !dbg !11522
  br label %for.inc60, !dbg !11523

for.inc60:                                        ; preds = %for.body53
  %49 = load i32, i32* %a, align 4, !dbg !11524
  %inc61 = add nsw i32 %49, 1, !dbg !11524
  store i32 %inc61, i32* %a, align 4, !dbg !11524
  %50 = load i32, i32* %tot, align 4, !dbg !11525
  %inc62 = add nsw i32 %50, 1, !dbg !11525
  store i32 %inc62, i32* %tot, align 4, !dbg !11525
  br label %for.cond50, !dbg !11526, !llvm.loop !11527

for.end63:                                        ; preds = %for.cond50
  br label %if.end64

if.end64:                                         ; preds = %for.end63, %for.end49
  %51 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11529
  %and65 = and i32 %51, 8, !dbg !11531
  %tobool66 = icmp ne i32 %and65, 0, !dbg !11531
  br i1 %tobool66, label %if.then67, label %if.else91, !dbg !11532

if.then67:                                        ; preds = %if.end64
  store i32 0, i32* %a, align 4, !dbg !11533
  br label %for.cond68, !dbg !11536

for.cond68:                                       ; preds = %for.inc87, %if.then67
  %52 = load i32, i32* %a, align 4, !dbg !11537
  %cmp69 = icmp slt i32 %52, 9, !dbg !11539
  br i1 %cmp69, label %for.body71, label %for.end90, !dbg !11540

for.body71:                                       ; preds = %for.cond68
  %53 = load float, float* %minx, align 4, !dbg !11541
  %54 = load i32, i32* %a, align 4, !dbg !11543
  %idxprom72 = sext i32 %54 to i64, !dbg !11544
  %arrayidx73 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom72, !dbg !11544
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 1, !dbg !11544
  %55 = load float, float* %arrayidx74, align 4, !dbg !11544
  %add75 = fadd float %53, %55, !dbg !11545
  %56 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11546
  %57 = load i32, i32* %tot, align 4, !dbg !11547
  %idxprom76 = sext i32 %57 to i64, !dbg !11546
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %56, i64 %idxprom76, !dbg !11546
  %arrayidx78 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx77, i64 0, i64 0, !dbg !11546
  store float %add75, float* %arrayidx78, align 4, !dbg !11548
  %58 = load float, float* %miny, align 4, !dbg !11549
  %59 = load float, float* %rad.addr, align 4, !dbg !11550
  %add79 = fadd float %58, %59, !dbg !11551
  %60 = load i32, i32* %a, align 4, !dbg !11552
  %idxprom80 = sext i32 %60 to i64, !dbg !11553
  %arrayidx81 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom80, !dbg !11553
  %arrayidx82 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx81, i64 0, i64 0, !dbg !11553
  %61 = load float, float* %arrayidx82, align 8, !dbg !11553
  %sub83 = fsub float %add79, %61, !dbg !11554
  %62 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11555
  %63 = load i32, i32* %tot, align 4, !dbg !11556
  %idxprom84 = sext i32 %63 to i64, !dbg !11555
  %arrayidx85 = getelementptr inbounds [2 x float], [2 x float]* %62, i64 %idxprom84, !dbg !11555
  %arrayidx86 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx85, i64 0, i64 1, !dbg !11555
  store float %sub83, float* %arrayidx86, align 4, !dbg !11557
  br label %for.inc87, !dbg !11558

for.inc87:                                        ; preds = %for.body71
  %64 = load i32, i32* %a, align 4, !dbg !11559
  %inc88 = add nsw i32 %64, 1, !dbg !11559
  store i32 %inc88, i32* %a, align 4, !dbg !11559
  %65 = load i32, i32* %tot, align 4, !dbg !11560
  %inc89 = add nsw i32 %65, 1, !dbg !11560
  store i32 %inc89, i32* %tot, align 4, !dbg !11560
  br label %for.cond68, !dbg !11561, !llvm.loop !11562

for.end90:                                        ; preds = %for.cond68
  br label %if.end106, !dbg !11564

if.else91:                                        ; preds = %if.end64
  store i32 0, i32* %a, align 4, !dbg !11565
  br label %for.cond92, !dbg !11568

for.cond92:                                       ; preds = %for.inc102, %if.else91
  %66 = load i32, i32* %a, align 4, !dbg !11569
  %cmp93 = icmp slt i32 %66, 9, !dbg !11571
  br i1 %cmp93, label %for.body95, label %for.end105, !dbg !11572

for.body95:                                       ; preds = %for.cond92
  %67 = load float, float* %minx, align 4, !dbg !11573
  %68 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11575
  %69 = load i32, i32* %tot, align 4, !dbg !11576
  %idxprom96 = sext i32 %69 to i64, !dbg !11575
  %arrayidx97 = getelementptr inbounds [2 x float], [2 x float]* %68, i64 %idxprom96, !dbg !11575
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !11575
  store float %67, float* %arrayidx98, align 4, !dbg !11577
  %70 = load float, float* %miny, align 4, !dbg !11578
  %71 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11579
  %72 = load i32, i32* %tot, align 4, !dbg !11580
  %idxprom99 = sext i32 %72 to i64, !dbg !11579
  %arrayidx100 = getelementptr inbounds [2 x float], [2 x float]* %71, i64 %idxprom99, !dbg !11579
  %arrayidx101 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx100, i64 0, i64 1, !dbg !11579
  store float %70, float* %arrayidx101, align 4, !dbg !11581
  br label %for.inc102, !dbg !11582

for.inc102:                                       ; preds = %for.body95
  %73 = load i32, i32* %a, align 4, !dbg !11583
  %inc103 = add nsw i32 %73, 1, !dbg !11583
  store i32 %inc103, i32* %a, align 4, !dbg !11583
  %74 = load i32, i32* %tot, align 4, !dbg !11584
  %inc104 = add nsw i32 %74, 1, !dbg !11584
  store i32 %inc104, i32* %tot, align 4, !dbg !11584
  br label %for.cond92, !dbg !11585, !llvm.loop !11586

for.end105:                                       ; preds = %for.cond92
  br label %if.end106

if.end106:                                        ; preds = %for.end105, %for.end90
  %75 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11588
  %and107 = and i32 %75, 4, !dbg !11590
  %tobool108 = icmp ne i32 %and107, 0, !dbg !11590
  br i1 %tobool108, label %if.then109, label %if.else133, !dbg !11591

if.then109:                                       ; preds = %if.end106
  store i32 0, i32* %a, align 4, !dbg !11592
  br label %for.cond110, !dbg !11595

for.cond110:                                      ; preds = %for.inc129, %if.then109
  %76 = load i32, i32* %a, align 4, !dbg !11596
  %cmp111 = icmp slt i32 %76, 9, !dbg !11598
  br i1 %cmp111, label %for.body113, label %for.end132, !dbg !11599

for.body113:                                      ; preds = %for.cond110
  %77 = load float, float* %maxx, align 4, !dbg !11600
  %78 = load float, float* %rad.addr, align 4, !dbg !11602
  %sub114 = fsub float %77, %78, !dbg !11603
  %79 = load i32, i32* %a, align 4, !dbg !11604
  %idxprom115 = sext i32 %79 to i64, !dbg !11605
  %arrayidx116 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom115, !dbg !11605
  %arrayidx117 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx116, i64 0, i64 0, !dbg !11605
  %80 = load float, float* %arrayidx117, align 8, !dbg !11605
  %add118 = fadd float %sub114, %80, !dbg !11606
  %81 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11607
  %82 = load i32, i32* %tot, align 4, !dbg !11608
  %idxprom119 = sext i32 %82 to i64, !dbg !11607
  %arrayidx120 = getelementptr inbounds [2 x float], [2 x float]* %81, i64 %idxprom119, !dbg !11607
  %arrayidx121 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx120, i64 0, i64 0, !dbg !11607
  store float %add118, float* %arrayidx121, align 4, !dbg !11609
  %83 = load float, float* %miny, align 4, !dbg !11610
  %84 = load i32, i32* %a, align 4, !dbg !11611
  %idxprom122 = sext i32 %84 to i64, !dbg !11612
  %arrayidx123 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom122, !dbg !11612
  %arrayidx124 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx123, i64 0, i64 1, !dbg !11612
  %85 = load float, float* %arrayidx124, align 4, !dbg !11612
  %add125 = fadd float %83, %85, !dbg !11613
  %86 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11614
  %87 = load i32, i32* %tot, align 4, !dbg !11615
  %idxprom126 = sext i32 %87 to i64, !dbg !11614
  %arrayidx127 = getelementptr inbounds [2 x float], [2 x float]* %86, i64 %idxprom126, !dbg !11614
  %arrayidx128 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx127, i64 0, i64 1, !dbg !11614
  store float %add125, float* %arrayidx128, align 4, !dbg !11616
  br label %for.inc129, !dbg !11617

for.inc129:                                       ; preds = %for.body113
  %88 = load i32, i32* %a, align 4, !dbg !11618
  %inc130 = add nsw i32 %88, 1, !dbg !11618
  store i32 %inc130, i32* %a, align 4, !dbg !11618
  %89 = load i32, i32* %tot, align 4, !dbg !11619
  %inc131 = add nsw i32 %89, 1, !dbg !11619
  store i32 %inc131, i32* %tot, align 4, !dbg !11619
  br label %for.cond110, !dbg !11620, !llvm.loop !11621

for.end132:                                       ; preds = %for.cond110
  br label %if.end148, !dbg !11623

if.else133:                                       ; preds = %if.end106
  store i32 0, i32* %a, align 4, !dbg !11624
  br label %for.cond134, !dbg !11627

for.cond134:                                      ; preds = %for.inc144, %if.else133
  %90 = load i32, i32* %a, align 4, !dbg !11628
  %cmp135 = icmp slt i32 %90, 9, !dbg !11630
  br i1 %cmp135, label %for.body137, label %for.end147, !dbg !11631

for.body137:                                      ; preds = %for.cond134
  %91 = load float, float* %maxx, align 4, !dbg !11632
  %92 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11634
  %93 = load i32, i32* %tot, align 4, !dbg !11635
  %idxprom138 = sext i32 %93 to i64, !dbg !11634
  %arrayidx139 = getelementptr inbounds [2 x float], [2 x float]* %92, i64 %idxprom138, !dbg !11634
  %arrayidx140 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx139, i64 0, i64 0, !dbg !11634
  store float %91, float* %arrayidx140, align 4, !dbg !11636
  %94 = load float, float* %miny, align 4, !dbg !11637
  %95 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11638
  %96 = load i32, i32* %tot, align 4, !dbg !11639
  %idxprom141 = sext i32 %96 to i64, !dbg !11638
  %arrayidx142 = getelementptr inbounds [2 x float], [2 x float]* %95, i64 %idxprom141, !dbg !11638
  %arrayidx143 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx142, i64 0, i64 1, !dbg !11638
  store float %94, float* %arrayidx143, align 4, !dbg !11640
  br label %for.inc144, !dbg !11641

for.inc144:                                       ; preds = %for.body137
  %97 = load i32, i32* %a, align 4, !dbg !11642
  %inc145 = add nsw i32 %97, 1, !dbg !11642
  store i32 %inc145, i32* %a, align 4, !dbg !11642
  %98 = load i32, i32* %tot, align 4, !dbg !11643
  %inc146 = add nsw i32 %98, 1, !dbg !11643
  store i32 %inc146, i32* %tot, align 4, !dbg !11643
  br label %for.cond134, !dbg !11644, !llvm.loop !11645

for.end147:                                       ; preds = %for.cond134
  br label %if.end148

if.end148:                                        ; preds = %for.end147, %for.end132
  %99 = load i32, i32* %roundboxalign.addr, align 4, !dbg !11647
  %and149 = and i32 %99, 2, !dbg !11649
  %tobool150 = icmp ne i32 %and149, 0, !dbg !11649
  br i1 %tobool150, label %if.then151, label %if.else175, !dbg !11650

if.then151:                                       ; preds = %if.end148
  store i32 0, i32* %a, align 4, !dbg !11651
  br label %for.cond152, !dbg !11654

for.cond152:                                      ; preds = %for.inc171, %if.then151
  %100 = load i32, i32* %a, align 4, !dbg !11655
  %cmp153 = icmp slt i32 %100, 9, !dbg !11657
  br i1 %cmp153, label %for.body155, label %for.end174, !dbg !11658

for.body155:                                      ; preds = %for.cond152
  %101 = load float, float* %maxx, align 4, !dbg !11659
  %102 = load i32, i32* %a, align 4, !dbg !11661
  %idxprom156 = sext i32 %102 to i64, !dbg !11662
  %arrayidx157 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom156, !dbg !11662
  %arrayidx158 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx157, i64 0, i64 1, !dbg !11662
  %103 = load float, float* %arrayidx158, align 4, !dbg !11662
  %sub159 = fsub float %101, %103, !dbg !11663
  %104 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11664
  %105 = load i32, i32* %tot, align 4, !dbg !11665
  %idxprom160 = sext i32 %105 to i64, !dbg !11664
  %arrayidx161 = getelementptr inbounds [2 x float], [2 x float]* %104, i64 %idxprom160, !dbg !11664
  %arrayidx162 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx161, i64 0, i64 0, !dbg !11664
  store float %sub159, float* %arrayidx162, align 4, !dbg !11666
  %106 = load float, float* %maxy, align 4, !dbg !11667
  %107 = load float, float* %rad.addr, align 4, !dbg !11668
  %sub163 = fsub float %106, %107, !dbg !11669
  %108 = load i32, i32* %a, align 4, !dbg !11670
  %idxprom164 = sext i32 %108 to i64, !dbg !11671
  %arrayidx165 = getelementptr inbounds [9 x [2 x float]], [9 x [2 x float]]* %vec, i64 0, i64 %idxprom164, !dbg !11671
  %arrayidx166 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx165, i64 0, i64 0, !dbg !11671
  %109 = load float, float* %arrayidx166, align 8, !dbg !11671
  %add167 = fadd float %sub163, %109, !dbg !11672
  %110 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11673
  %111 = load i32, i32* %tot, align 4, !dbg !11674
  %idxprom168 = sext i32 %111 to i64, !dbg !11673
  %arrayidx169 = getelementptr inbounds [2 x float], [2 x float]* %110, i64 %idxprom168, !dbg !11673
  %arrayidx170 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx169, i64 0, i64 1, !dbg !11673
  store float %add167, float* %arrayidx170, align 4, !dbg !11675
  br label %for.inc171, !dbg !11676

for.inc171:                                       ; preds = %for.body155
  %112 = load i32, i32* %a, align 4, !dbg !11677
  %inc172 = add nsw i32 %112, 1, !dbg !11677
  store i32 %inc172, i32* %a, align 4, !dbg !11677
  %113 = load i32, i32* %tot, align 4, !dbg !11678
  %inc173 = add nsw i32 %113, 1, !dbg !11678
  store i32 %inc173, i32* %tot, align 4, !dbg !11678
  br label %for.cond152, !dbg !11679, !llvm.loop !11680

for.end174:                                       ; preds = %for.cond152
  br label %if.end190, !dbg !11682

if.else175:                                       ; preds = %if.end148
  store i32 0, i32* %a, align 4, !dbg !11683
  br label %for.cond176, !dbg !11686

for.cond176:                                      ; preds = %for.inc186, %if.else175
  %114 = load i32, i32* %a, align 4, !dbg !11687
  %cmp177 = icmp slt i32 %114, 9, !dbg !11689
  br i1 %cmp177, label %for.body179, label %for.end189, !dbg !11690

for.body179:                                      ; preds = %for.cond176
  %115 = load float, float* %maxx, align 4, !dbg !11691
  %116 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11693
  %117 = load i32, i32* %tot, align 4, !dbg !11694
  %idxprom180 = sext i32 %117 to i64, !dbg !11693
  %arrayidx181 = getelementptr inbounds [2 x float], [2 x float]* %116, i64 %idxprom180, !dbg !11693
  %arrayidx182 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx181, i64 0, i64 0, !dbg !11693
  store float %115, float* %arrayidx182, align 4, !dbg !11695
  %118 = load float, float* %maxy, align 4, !dbg !11696
  %119 = load [2 x float]*, [2 x float]** %vert.addr, align 8, !dbg !11697
  %120 = load i32, i32* %tot, align 4, !dbg !11698
  %idxprom183 = sext i32 %120 to i64, !dbg !11697
  %arrayidx184 = getelementptr inbounds [2 x float], [2 x float]* %119, i64 %idxprom183, !dbg !11697
  %arrayidx185 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx184, i64 0, i64 1, !dbg !11697
  store float %118, float* %arrayidx185, align 4, !dbg !11699
  br label %for.inc186, !dbg !11700

for.inc186:                                       ; preds = %for.body179
  %121 = load i32, i32* %a, align 4, !dbg !11701
  %inc187 = add nsw i32 %121, 1, !dbg !11701
  store i32 %inc187, i32* %a, align 4, !dbg !11701
  %122 = load i32, i32* %tot, align 4, !dbg !11702
  %inc188 = add nsw i32 %122, 1, !dbg !11702
  store i32 %inc188, i32* %tot, align 4, !dbg !11702
  br label %for.cond176, !dbg !11703, !llvm.loop !11704

for.end189:                                       ; preds = %for.cond176
  br label %if.end190

if.end190:                                        ; preds = %for.end189, %for.end174
  %123 = load i32, i32* %tot, align 4, !dbg !11706
  ret i32 %123, !dbg !11707
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #5

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !11708 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !11711, metadata !DIExpression()), !dbg !11712
  %0 = load float, float* %a.addr, align 4, !dbg !11713
  %1 = load float, float* %b.addr, align 4, !dbg !11714
  %cmp = fcmp olt float %0, %1, !dbg !11715
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11716

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !11717
  br label %cond.end, !dbg !11716

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !11718
  br label %cond.end, !dbg !11716

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !11716
  ret float %cond, !dbg !11719
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_clip_right_ex(%struct.uiFontStyle* %fstyle, i8* %str, i64 %max_len, float %okwidth, i8* %sep, i32 %sep_len, float %sep_strwidth, i64* %r_final_len) #0 !dbg !11720 {
entry:
  %fstyle.addr = alloca %struct.uiFontStyle*, align 8
  %str.addr = alloca i8*, align 8
  %max_len.addr = alloca i64, align 8
  %okwidth.addr = alloca float, align 4
  %sep.addr = alloca i8*, align 8
  %sep_len.addr = alloca i32, align 4
  %sep_strwidth.addr = alloca float, align 4
  %r_final_len.addr = alloca i64*, align 8
  %tmp = alloca float, align 4
  %l_end = alloca i32, align 4
  store %struct.uiFontStyle* %fstyle, %struct.uiFontStyle** %fstyle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle.addr, metadata !11724, metadata !DIExpression()), !dbg !11725
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11726, metadata !DIExpression()), !dbg !11727
  store i64 %max_len, i64* %max_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_len.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  store float %okwidth, float* %okwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %okwidth.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  store i8* %sep, i8** %sep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sep.addr, metadata !11732, metadata !DIExpression()), !dbg !11733
  store i32 %sep_len, i32* %sep_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sep_len.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  store float %sep_strwidth, float* %sep_strwidth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sep_strwidth.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  store i64* %r_final_len, i64** %r_final_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %r_final_len.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.declare(metadata float* %tmp, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.declare(metadata i32* %l_end, metadata !11742, metadata !DIExpression()), !dbg !11743
  %0 = load float, float* %sep_strwidth.addr, align 4, !dbg !11744
  %1 = load float, float* %okwidth.addr, align 4, !dbg !11746
  %div = fdiv float %0, %1, !dbg !11747
  %cmp = fcmp ogt float %div, 0x3FC99999A0000000, !dbg !11748
  br i1 %cmp, label %if.then, label %if.else, !dbg !11749

if.then:                                          ; preds = %entry
  %2 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !11750
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %2, i32 0, i32 0, !dbg !11752
  %3 = load i16, i16* %uifont_id, align 4, !dbg !11752
  %conv = sext i16 %3 to i32, !dbg !11750
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11753
  %5 = load i64, i64* %max_len.addr, align 8, !dbg !11754
  %6 = load float, float* %okwidth.addr, align 4, !dbg !11755
  %call = call i64 @BLF_width_to_strlen(i32 %conv, i8* %4, i64 %5, float %6, float* %tmp), !dbg !11756
  %conv1 = trunc i64 %call to i32, !dbg !11756
  store i32 %conv1, i32* %l_end, align 4, !dbg !11757
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11758
  %8 = load i32, i32* %l_end, align 4, !dbg !11759
  %idxprom = sext i32 %8 to i64, !dbg !11758
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !11758
  store i8 0, i8* %arrayidx, align 1, !dbg !11760
  %9 = load i64*, i64** %r_final_len.addr, align 8, !dbg !11761
  %tobool = icmp ne i64* %9, null, !dbg !11761
  br i1 %tobool, label %if.then2, label %if.end, !dbg !11763

if.then2:                                         ; preds = %if.then
  %10 = load i32, i32* %l_end, align 4, !dbg !11764
  %conv3 = sext i32 %10 to i64, !dbg !11766
  %11 = load i64*, i64** %r_final_len.addr, align 8, !dbg !11767
  store i64 %conv3, i64* %11, align 8, !dbg !11768
  br label %if.end, !dbg !11769

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end14, !dbg !11770

if.else:                                          ; preds = %entry
  %12 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle.addr, align 8, !dbg !11771
  %uifont_id4 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %12, i32 0, i32 0, !dbg !11773
  %13 = load i16, i16* %uifont_id4, align 4, !dbg !11773
  %conv5 = sext i16 %13 to i32, !dbg !11771
  %14 = load i8*, i8** %str.addr, align 8, !dbg !11774
  %15 = load i64, i64* %max_len.addr, align 8, !dbg !11775
  %16 = load float, float* %okwidth.addr, align 4, !dbg !11776
  %17 = load float, float* %sep_strwidth.addr, align 4, !dbg !11777
  %sub = fsub float %16, %17, !dbg !11778
  %call6 = call i64 @BLF_width_to_strlen(i32 %conv5, i8* %14, i64 %15, float %sub, float* %tmp), !dbg !11779
  %conv7 = trunc i64 %call6 to i32, !dbg !11779
  store i32 %conv7, i32* %l_end, align 4, !dbg !11780
  %18 = load i8*, i8** %str.addr, align 8, !dbg !11781
  %19 = load i32, i32* %l_end, align 4, !dbg !11782
  %idx.ext = sext i32 %19 to i64, !dbg !11783
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !11783
  %20 = load i8*, i8** %sep.addr, align 8, !dbg !11784
  %21 = load i32, i32* %sep_len.addr, align 4, !dbg !11785
  %add = add nsw i32 %21, 1, !dbg !11786
  %conv8 = sext i32 %add to i64, !dbg !11785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %20, i64 %conv8, i1 false), !dbg !11787
  %22 = load i64*, i64** %r_final_len.addr, align 8, !dbg !11788
  %tobool9 = icmp ne i64* %22, null, !dbg !11788
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !11790

if.then10:                                        ; preds = %if.else
  %23 = load i32, i32* %l_end, align 4, !dbg !11791
  %24 = load i32, i32* %sep_len.addr, align 4, !dbg !11793
  %add11 = add nsw i32 %23, %24, !dbg !11794
  %conv12 = sext i32 %add11 to i64, !dbg !11795
  %25 = load i64*, i64** %r_final_len.addr, align 8, !dbg !11796
  store i64 %conv12, i64* %25, align 8, !dbg !11797
  br label %if.end13, !dbg !11798

if.end13:                                         ; preds = %if.then10, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  ret void, !dbg !11799
}

declare dso_local i64 @BLF_width_to_rstrlen(i32, i8*, i64, float, float*) #2

declare dso_local void @UI_icon_draw_preview_aspect_size(float, float, i32, float, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2024, !2025, !2026}
!llvm.ident = !{!2027}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "jit", scope: !2, file: !3, line: 137, type: !2021, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1252, globals: !1343, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/interface/interface_widgets.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !53, !60, !910, !919, !944, !952, !984, !992, !1024, !1032, !1043, !1052, !1057}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 236, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52}
!9 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!10 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!11 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!12 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!13 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!14 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!15 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!16 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!17 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!18 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!19 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!20 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!21 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!22 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!23 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!24 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!25 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!26 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!27 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!28 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!29 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!30 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!31 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!32 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!33 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!34 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!35 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!36 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!37 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!38 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!39 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!40 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!41 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!42 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!43 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!44 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!45 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!46 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!47 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!48 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!49 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!50 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!51 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!52 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 223, baseType: !7, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "UI_BUT_POIN_CHAR", value: 32, isUnsigned: true)
!56 = !DIEnumerator(name: "UI_BUT_POIN_SHORT", value: 64, isUnsigned: true)
!57 = !DIEnumerator(name: "UI_BUT_POIN_INT", value: 96, isUnsigned: true)
!58 = !DIEnumerator(name: "UI_BUT_POIN_FLOAT", value: 128, isUnsigned: true)
!59 = !DIEnumerator(name: "UI_BUT_POIN_BIT", value: 256, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 40, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!63 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!69 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!70 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!71 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!72 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!73 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!74 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!75 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!76 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!77 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!78 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!79 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!80 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!81 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!82 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!83 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!84 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!85 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!86 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!87 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!88 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!89 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!90 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!91 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!92 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!899 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!900 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!901 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!902 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!903 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!904 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!905 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!906 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!907 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!908 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!909 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 426, baseType: !7, size: 32, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918}
!912 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_NONE", value: 0, isUnsigned: true)
!913 = !DIEnumerator(name: "UI_BLOCK_BOUNDS", value: 1, isUnsigned: true)
!914 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_TEXT", value: 2, isUnsigned: true)
!915 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MOUSE", value: 3, isUnsigned: true)
!916 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MENU", value: 4, isUnsigned: true)
!917 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_CENTER", value: 5, isUnsigned: true)
!918 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_PIE_CENTER", value: 6, isUnsigned: true)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 157, baseType: !7, size: 32, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943}
!921 = !DIEnumerator(name: "UI_ICON_SUBMENU", value: 64, isUnsigned: true)
!922 = !DIEnumerator(name: "UI_ICON_PREVIEW", value: 128, isUnsigned: true)
!923 = !DIEnumerator(name: "UI_BUT_NODE_LINK", value: 256, isUnsigned: true)
!924 = !DIEnumerator(name: "UI_BUT_NODE_ACTIVE", value: 512, isUnsigned: true)
!925 = !DIEnumerator(name: "UI_BUT_DRAG_LOCK", value: 1024, isUnsigned: true)
!926 = !DIEnumerator(name: "UI_BUT_DISABLED", value: 2048, isUnsigned: true)
!927 = !DIEnumerator(name: "UI_BUT_COLOR_LOCK", value: 4096, isUnsigned: true)
!928 = !DIEnumerator(name: "UI_BUT_ANIMATED", value: 8192, isUnsigned: true)
!929 = !DIEnumerator(name: "UI_BUT_ANIMATED_KEY", value: 16384, isUnsigned: true)
!930 = !DIEnumerator(name: "UI_BUT_DRIVEN", value: 32768, isUnsigned: true)
!931 = !DIEnumerator(name: "UI_BUT_REDALERT", value: 65536, isUnsigned: true)
!932 = !DIEnumerator(name: "UI_BUT_INACTIVE", value: 131072, isUnsigned: true)
!933 = !DIEnumerator(name: "UI_BUT_LAST_ACTIVE", value: 262144, isUnsigned: true)
!934 = !DIEnumerator(name: "UI_BUT_UNDO", value: 524288, isUnsigned: true)
!935 = !DIEnumerator(name: "UI_BUT_IMMEDIATE", value: 1048576, isUnsigned: true)
!936 = !DIEnumerator(name: "UI_BUT_NO_UTF8", value: 2097152, isUnsigned: true)
!937 = !DIEnumerator(name: "UI_BUT_VEC_SIZE_LOCK", value: 4194304, isUnsigned: true)
!938 = !DIEnumerator(name: "UI_BUT_COLOR_CUBIC", value: 8388608, isUnsigned: true)
!939 = !DIEnumerator(name: "UI_BUT_LIST_ITEM", value: 16777216, isUnsigned: true)
!940 = !DIEnumerator(name: "UI_BUT_DRAG_MULTI", value: 33554432, isUnsigned: true)
!941 = !DIEnumerator(name: "UI_BUT_SCA_LINK_GREY", value: 67108864, isUnsigned: true)
!942 = !DIEnumerator(name: "UI_BUT_HAS_SEP_CHAR", value: 134217728, isUnsigned: true)
!943 = !DIEnumerator(name: "UI_BUT_TIP_FORCE", value: 268435456, isUnsigned: true)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eColorPicker_Types", file: !945, line: 765, baseType: !7, size: 32, elements: !946)
!945 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!946 = !{!947, !948, !949, !950, !951}
!947 = !DIEnumerator(name: "USER_CP_CIRCLE_HSV", value: 0, isUnsigned: true)
!948 = !DIEnumerator(name: "USER_CP_SQUARE_SV", value: 1, isUnsigned: true)
!949 = !DIEnumerator(name: "USER_CP_SQUARE_HS", value: 2, isUnsigned: true)
!950 = !DIEnumerator(name: "USER_CP_SQUARE_HV", value: 3, isUnsigned: true)
!951 = !DIEnumerator(name: "USER_CP_CIRCLE_HSL", value: 4, isUnsigned: true)
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !953, line: 107, baseType: !7, size: 32, elements: !954)
!953 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!954 = !{!955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983}
!955 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!956 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!957 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!958 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!959 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!960 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!961 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!962 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!963 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!964 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!965 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!966 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!967 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!968 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!969 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!970 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!971 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!972 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!973 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!974 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!975 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!976 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!977 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!978 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!979 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!980 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!981 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!982 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!983 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 787, baseType: !7, size: 32, elements: !985)
!985 = !{!986, !987, !988, !989, !990, !991}
!986 = !DIEnumerator(name: "UI_CNR_TOP_LEFT", value: 1, isUnsigned: true)
!987 = !DIEnumerator(name: "UI_CNR_TOP_RIGHT", value: 2, isUnsigned: true)
!988 = !DIEnumerator(name: "UI_CNR_BOTTOM_RIGHT", value: 4, isUnsigned: true)
!989 = !DIEnumerator(name: "UI_CNR_BOTTOM_LEFT", value: 8, isUnsigned: true)
!990 = !DIEnumerator(name: "UI_CNR_NONE", value: 0, isUnsigned: true)
!991 = !DIEnumerator(name: "UI_CNR_ALL", value: 15, isUnsigned: true)
!992 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !993, line: 63, baseType: !7, size: 32, elements: !994)
!993 = !DIFile(filename: "blender/source/blender/editors/interface/interface_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023}
!995 = !DIEnumerator(name: "UI_WTYPE_REGULAR", value: 0, isUnsigned: true)
!996 = !DIEnumerator(name: "UI_WTYPE_LABEL", value: 1, isUnsigned: true)
!997 = !DIEnumerator(name: "UI_WTYPE_TOGGLE", value: 2, isUnsigned: true)
!998 = !DIEnumerator(name: "UI_WTYPE_OPTION", value: 3, isUnsigned: true)
!999 = !DIEnumerator(name: "UI_WTYPE_RADIO", value: 4, isUnsigned: true)
!1000 = !DIEnumerator(name: "UI_WTYPE_NUMBER", value: 5, isUnsigned: true)
!1001 = !DIEnumerator(name: "UI_WTYPE_SLIDER", value: 6, isUnsigned: true)
!1002 = !DIEnumerator(name: "UI_WTYPE_EXEC", value: 7, isUnsigned: true)
!1003 = !DIEnumerator(name: "UI_WTYPE_TOOLTIP", value: 8, isUnsigned: true)
!1004 = !DIEnumerator(name: "UI_WTYPE_NAME", value: 9, isUnsigned: true)
!1005 = !DIEnumerator(name: "UI_WTYPE_NAME_LINK", value: 10, isUnsigned: true)
!1006 = !DIEnumerator(name: "UI_WTYPE_POINTER_LINK", value: 11, isUnsigned: true)
!1007 = !DIEnumerator(name: "UI_WTYPE_FILENAME", value: 12, isUnsigned: true)
!1008 = !DIEnumerator(name: "UI_WTYPE_MENU_RADIO", value: 13, isUnsigned: true)
!1009 = !DIEnumerator(name: "UI_WTYPE_MENU_ICON_RADIO", value: 14, isUnsigned: true)
!1010 = !DIEnumerator(name: "UI_WTYPE_MENU_POINTER_LINK", value: 15, isUnsigned: true)
!1011 = !DIEnumerator(name: "UI_WTYPE_MENU_NODE_LINK", value: 16, isUnsigned: true)
!1012 = !DIEnumerator(name: "UI_WTYPE_PULLDOWN", value: 17, isUnsigned: true)
!1013 = !DIEnumerator(name: "UI_WTYPE_MENU_ITEM", value: 18, isUnsigned: true)
!1014 = !DIEnumerator(name: "UI_WTYPE_MENU_ITEM_RADIAL", value: 19, isUnsigned: true)
!1015 = !DIEnumerator(name: "UI_WTYPE_MENU_BACK", value: 20, isUnsigned: true)
!1016 = !DIEnumerator(name: "UI_WTYPE_ICON", value: 21, isUnsigned: true)
!1017 = !DIEnumerator(name: "UI_WTYPE_SWATCH", value: 22, isUnsigned: true)
!1018 = !DIEnumerator(name: "UI_WTYPE_RGB_PICKER", value: 23, isUnsigned: true)
!1019 = !DIEnumerator(name: "UI_WTYPE_NORMAL", value: 24, isUnsigned: true)
!1020 = !DIEnumerator(name: "UI_WTYPE_BOX", value: 25, isUnsigned: true)
!1021 = !DIEnumerator(name: "UI_WTYPE_SCROLL", value: 26, isUnsigned: true)
!1022 = !DIEnumerator(name: "UI_WTYPE_LISTITEM", value: 27, isUnsigned: true)
!1023 = !DIEnumerator(name: "UI_WTYPE_PROGRESSBAR", value: 28, isUnsigned: true)
!1024 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !993, line: 115, baseType: !7, size: 32, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031}
!1026 = !DIEnumerator(name: "UI_SELECT", value: 1, isUnsigned: true)
!1027 = !DIEnumerator(name: "UI_SCROLLED", value: 2, isUnsigned: true)
!1028 = !DIEnumerator(name: "UI_ACTIVE", value: 4, isUnsigned: true)
!1029 = !DIEnumerator(name: "UI_HAS_ICON", value: 8, isUnsigned: true)
!1030 = !DIEnumerator(name: "UI_TEXTINPUT", value: 16, isUnsigned: true)
!1031 = !DIEnumerator(name: "UI_HIDDEN", value: 32, isUnsigned: true)
!1032 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 195, baseType: !7, size: 32, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1034 = !DIEnumerator(name: "UI_BUT_TEXT_LEFT", value: 2, isUnsigned: true)
!1035 = !DIEnumerator(name: "UI_BUT_ICON_LEFT", value: 4, isUnsigned: true)
!1036 = !DIEnumerator(name: "UI_BUT_TEXT_RIGHT", value: 8, isUnsigned: true)
!1037 = !DIEnumerator(name: "UI_BUT_NO_TOOLTIP", value: 16, isUnsigned: true)
!1038 = !DIEnumerator(name: "UI_BUT_ALIGN_TOP", value: 16384, isUnsigned: true)
!1039 = !DIEnumerator(name: "UI_BUT_ALIGN_LEFT", value: 32768, isUnsigned: true)
!1040 = !DIEnumerator(name: "UI_BUT_ALIGN_RIGHT", value: 65536, isUnsigned: true)
!1041 = !DIEnumerator(name: "UI_BUT_ALIGN_DOWN", value: 131072, isUnsigned: true)
!1042 = !DIEnumerator(name: "UI_BUT_ALIGN", value: 245760, isUnsigned: true)
!1043 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !993, line: 166, baseType: !7, size: 32, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1049, !1050, !1051}
!1045 = !DIEnumerator(name: "UI_PIE_DEGREES_RANGE_LARGE", value: 1, isUnsigned: true)
!1046 = !DIEnumerator(name: "UI_PIE_INITIAL_DIRECTION", value: 2, isUnsigned: true)
!1047 = !DIEnumerator(name: "UI_PIE_DRAG_STYLE", value: 4, isUnsigned: true)
!1048 = !DIEnumerator(name: "UI_PIE_INVALID_DIR", value: 8, isUnsigned: true)
!1049 = !DIEnumerator(name: "UI_PIE_CLICK_STYLE", value: 16, isUnsigned: true)
!1050 = !DIEnumerator(name: "UI_PIE_ANIMATION_FINISHED", value: 32, isUnsigned: true)
!1051 = !DIEnumerator(name: "UI_PIE_GESTURE_END_WAIT", value: 64, isUnsigned: true)
!1052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFontStyle_Align", file: !945, line: 87, baseType: !7, size: 32, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIEnumerator(name: "UI_STYLE_TEXT_LEFT", value: 0, isUnsigned: true)
!1055 = !DIEnumerator(name: "UI_STYLE_TEXT_CENTER", value: 1, isUnsigned: true)
!1056 = !DIEnumerator(name: "UI_STYLE_TEXT_RIGHT", value: 2, isUnsigned: true)
!1057 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 54, baseType: !7, size: 32, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251}
!1059 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!1060 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!1061 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!1062 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!1063 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!1064 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!1065 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!1066 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!1067 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!1068 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!1069 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!1070 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!1071 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!1072 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!1073 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!1074 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!1075 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!1076 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!1077 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!1078 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!1079 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!1080 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!1081 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!1082 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!1083 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!1084 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!1085 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!1086 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!1087 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!1088 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!1089 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!1090 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!1091 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!1092 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!1093 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!1094 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!1095 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!1096 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!1097 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!1098 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!1099 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!1100 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!1101 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!1102 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!1103 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!1104 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!1105 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!1106 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!1107 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!1108 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!1109 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!1110 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!1111 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!1112 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!1113 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!1114 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!1115 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!1116 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!1117 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!1118 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!1119 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!1120 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!1121 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!1122 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!1123 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!1124 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!1125 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!1126 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!1127 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!1128 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!1129 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!1130 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!1131 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!1132 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!1133 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!1134 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!1135 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!1136 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!1137 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!1138 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!1139 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!1140 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!1141 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!1142 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!1143 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!1144 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!1145 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!1146 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!1147 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!1148 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!1149 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!1150 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!1151 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!1152 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!1153 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!1154 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!1155 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!1156 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!1157 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!1158 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!1159 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!1160 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!1161 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!1162 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!1163 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!1164 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!1165 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!1166 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!1167 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!1168 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!1169 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!1170 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!1171 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!1172 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!1173 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!1174 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!1175 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!1176 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!1177 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!1178 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!1179 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!1180 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!1181 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!1182 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!1183 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!1184 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!1185 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!1186 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!1187 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!1188 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!1189 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!1190 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!1191 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!1192 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!1193 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!1194 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!1195 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!1196 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!1197 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!1198 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!1199 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!1200 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!1201 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!1202 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!1203 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!1204 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!1205 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!1206 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!1207 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!1208 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!1209 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!1210 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!1211 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!1212 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!1213 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!1214 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!1215 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!1216 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!1217 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!1218 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!1219 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!1220 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!1221 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!1222 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!1223 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!1224 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!1225 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!1226 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!1227 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!1228 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!1229 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!1230 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!1231 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!1232 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!1233 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!1234 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!1235 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!1236 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!1237 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!1238 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!1239 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!1240 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!1241 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!1242 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!1243 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!1244 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!1245 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!1246 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!1247 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!1248 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!1249 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!1250 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!1251 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!1252 = !{!1253, !1254, !1255, !1257, !1256, !1260, !1261, !1262, !1340}
!1253 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1254 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !1259, line: 278, baseType: !1256)
!1259 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1260 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "Palette", file: !1264, line: 158, baseType: !1265)
!1264 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1264, line: 148, size: 1280, elements: !1266)
!1266 = !{!1267, !1336, !1337, !1338, !1339}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1265, file: !1264, line: 150, baseType: !1268, size: 960)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1269, line: 130, baseType: !1270)
!1269 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1269, line: 117, size: 960, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1276, !1295, !1299, !1301, !1302, !1303, !1304}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1270, file: !1269, line: 118, baseType: !1261, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1270, file: !1269, line: 118, baseType: !1261, size: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1270, file: !1269, line: 119, baseType: !1275, size: 64, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1270, file: !1269, line: 120, baseType: !1277, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1269, line: 136, size: 17600, elements: !1279)
!1279 = !{!1280, !1281, !1283, !1286, !1290, !1291, !1292}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1278, file: !1269, line: 137, baseType: !1268, size: 960)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1278, file: !1269, line: 138, baseType: !1282, size: 64, offset: 960)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1278, file: !1269, line: 139, baseType: !1284, size: 64, offset: 1024)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1269, line: 43, flags: DIFlagFwdDecl)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1278, file: !1269, line: 140, baseType: !1287, size: 8192, offset: 1088)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 8192, elements: !1288)
!1288 = !{!1289}
!1289 = !DISubrange(count: 1024)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1278, file: !1269, line: 141, baseType: !1287, size: 8192, offset: 9280)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1278, file: !1269, line: 148, baseType: !1277, size: 64, offset: 17472)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1278, file: !1269, line: 150, baseType: !1293, size: 64, offset: 17536)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1269, line: 45, flags: DIFlagFwdDecl)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1270, file: !1269, line: 121, baseType: !1296, size: 528, offset: 256)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 528, elements: !1297)
!1297 = !{!1298}
!1298 = !DISubrange(count: 66)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1270, file: !1269, line: 126, baseType: !1300, size: 16, offset: 784)
!1300 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1270, file: !1269, line: 127, baseType: !1254, size: 32, offset: 800)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1270, file: !1269, line: 128, baseType: !1254, size: 32, offset: 832)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1270, file: !1269, line: 128, baseType: !1254, size: 32, offset: 864)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1270, file: !1269, line: 129, baseType: !1305, size: 64, offset: 896)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1269, line: 75, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1269, line: 62, size: 1024, elements: !1308)
!1308 = !{!1309, !1311, !1312, !1313, !1314, !1315, !1319, !1320, !1334, !1335}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1307, file: !1269, line: 63, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1307, file: !1269, line: 63, baseType: !1310, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1307, file: !1269, line: 64, baseType: !1260, size: 8, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1307, file: !1269, line: 64, baseType: !1260, size: 8, offset: 136)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1307, file: !1269, line: 65, baseType: !1300, size: 16, offset: 144)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1307, file: !1269, line: 66, baseType: !1316, size: 512, offset: 160)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 512, elements: !1317)
!1317 = !{!1318}
!1318 = !DISubrange(count: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1307, file: !1269, line: 67, baseType: !1254, size: 32, offset: 672)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1307, file: !1269, line: 69, baseType: !1321, size: 256, offset: 704)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1269, line: 60, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1269, line: 48, size: 256, elements: !1323)
!1323 = !{!1324, !1325, !1332, !1333}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1322, file: !1269, line: 49, baseType: !1261, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1322, file: !1269, line: 58, baseType: !1326, size: 128, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1327, line: 71, baseType: !1328)
!1327 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1327, line: 69, size: 128, elements: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1328, file: !1327, line: 70, baseType: !1261, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1328, file: !1327, line: 70, baseType: !1261, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1322, file: !1269, line: 59, baseType: !1254, size: 32, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1322, file: !1269, line: 59, baseType: !1254, size: 32, offset: 224)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1307, file: !1269, line: 70, baseType: !1254, size: 32, offset: 960)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1307, file: !1269, line: 74, baseType: !1254, size: 32, offset: 992)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1265, file: !1264, line: 153, baseType: !1326, size: 128, offset: 960)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1265, file: !1264, line: 154, baseType: !1326, size: 128, offset: 1088)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1265, file: !1264, line: 156, baseType: !1254, size: 32, offset: 1216)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1265, file: !1264, line: 157, baseType: !1254, size: 32, offset: 1248)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1341, line: 46, baseType: !1342)
!1341 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1342 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1343 = !{!0, !1344, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1407, !1414, !1419, !1426, !1991, !1995, !1999, !2003, !2008, !2010, !2014, !2016}
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "wcol_regular", scope: !2, file: !3, line: 1675, type: !1346, isLocal: true, isDefinition: true)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetColors", file: !945, line: 122, size: 256, elements: !1347)
!1347 = !{!1348, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "outline", scope: !1346, file: !945, line: 123, baseType: !1349, size: 32)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DISubrange(count: 4)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1346, file: !945, line: 124, baseType: !1349, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "inner_sel", scope: !1346, file: !945, line: 125, baseType: !1349, size: 32, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !1346, file: !945, line: 126, baseType: !1349, size: 32, offset: 96)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1346, file: !945, line: 127, baseType: !1349, size: 32, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "text_sel", scope: !1346, file: !945, line: 128, baseType: !1349, size: 32, offset: 160)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "shaded", scope: !1346, file: !945, line: 129, baseType: !1300, size: 16, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "shadetop", scope: !1346, file: !945, line: 130, baseType: !1300, size: 16, offset: 208)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "shadedown", scope: !1346, file: !945, line: 130, baseType: !1300, size: 16, offset: 224)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_check", scope: !1346, file: !945, line: 131, baseType: !1300, size: 16, offset: 240)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "wcol_tool", scope: !2, file: !3, line: 1688, type: !1346, isLocal: true, isDefinition: true)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "wcol_text", scope: !2, file: !3, line: 1551, type: !1346, isLocal: true, isDefinition: true)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "wcol_radio", scope: !2, file: !3, line: 1662, type: !1346, isLocal: true, isDefinition: true)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "wcol_option", scope: !2, file: !3, line: 1564, type: !1346, isLocal: true, isDefinition: true)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "wcol_toggle", scope: !2, file: !3, line: 1714, type: !1346, isLocal: true, isDefinition: true)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "wcol_num", scope: !2, file: !3, line: 1525, type: !1346, isLocal: true, isDefinition: true)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "wcol_numslider", scope: !2, file: !3, line: 1538, type: !1346, isLocal: true, isDefinition: true)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "wcol_menu", scope: !2, file: !3, line: 1578, type: !1346, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "wcol_pulldown", scope: !2, file: !3, line: 1592, type: !1346, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "wcol_menu_back", scope: !2, file: !3, line: 1620, type: !1346, isLocal: true, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "wcol_pie_menu", scope: !2, file: !3, line: 1634, type: !1346, isLocal: true, isDefinition: true)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "wcol_tooltip", scope: !2, file: !3, line: 1649, type: !1346, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "wcol_menu_item", scope: !2, file: !3, line: 1606, type: !1346, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "wcol_box", scope: !2, file: !3, line: 1701, type: !1346, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "wcol_scroll", scope: !2, file: !3, line: 1727, type: !1346, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "wcol_list_item", scope: !2, file: !3, line: 1753, type: !1346, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "wcol_progress", scope: !2, file: !3, line: 1740, type: !1346, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "wcol_state_colors", scope: !2, file: !3, line: 1503, type: !1397, isLocal: true, isDefinition: true)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetStateColors", file: !945, line: 134, size: 256, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim", scope: !1397, file: !945, line: 135, baseType: !1349, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim_sel", scope: !1397, file: !945, line: 136, baseType: !1349, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key", scope: !1397, file: !945, line: 137, baseType: !1349, size: 32, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key_sel", scope: !1397, file: !945, line: 138, baseType: !1349, size: 32, offset: 96)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven", scope: !1397, file: !945, line: 139, baseType: !1349, size: 32, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven_sel", scope: !1397, file: !945, line: 140, baseType: !1349, size: 32, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1397, file: !945, line: 141, baseType: !1253, size: 32, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1397, file: !945, line: 141, baseType: !1253, size: 32, offset: 224)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "cornervec", scope: !2, file: !3, line: 130, type: !1409, isLocal: true, isDefinition: true)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 576, elements: !1411)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1411 = !{!1412, !1413}
!1412 = !DISubrange(count: 9)
!1413 = !DISubrange(count: 2)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "scroll_circle_vert", scope: !2, file: !3, line: 152, type: !1416, isLocal: true, isDefinition: true)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 1024, elements: !1417)
!1417 = !{!1418, !1413}
!1418 = !DISubrange(count: 16)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "scroll_circle_face", scope: !2, file: !3, line: 159, type: !1421, isLocal: true, isDefinition: true)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 1344, elements: !1423)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1423 = !{!1424, !1425}
!1424 = !DISubrange(count: 14)
!1425 = !DISubrange(count: 3)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "wt", scope: !1428, file: !3, line: 3256, type: !1432, isLocal: true, isDefinition: true)
!1428 = distinct !DISubprogram(name: "widget_type", scope: !3, file: !3, line: 3253, type: !1429, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!1431, !1989}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetType", file: !3, line: 125, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetType", file: !3, line: 111, size: 640, elements: !1434)
!1434 = !{!1435, !1438, !1441, !1442, !1447, !1460, !1966}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_theme", scope: !1433, file: !3, line: 114, baseType: !1436, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetColors", file: !945, line: 132, baseType: !1346)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_state", scope: !1433, file: !3, line: 115, baseType: !1439, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetStateColors", file: !945, line: 142, baseType: !1397)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "wcol", scope: !1433, file: !3, line: 118, baseType: !1437, size: 256, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1433, file: !3, line: 120, baseType: !1443, size: 64, offset: 384)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{null, !1446, !1254}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1433, file: !3, line: 121, baseType: !1448, size: 64, offset: 448)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1436, !1451, !1254, !1254}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1453, line: 89, baseType: !1454)
!1453 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1453, line: 86, size: 128, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1454, file: !1453, line: 87, baseType: !1254, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1454, file: !1453, line: 87, baseType: !1254, size: 32, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1454, file: !1453, line: 88, baseType: !1254, size: 32, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1454, file: !1453, line: 88, baseType: !1254, size: 32, offset: 96)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1433, file: !3, line: 122, baseType: !1461, size: 64, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !1464, !1436, !1451, !1254, !1254}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !6, line: 82, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !993, line: 195, size: 8000, elements: !1467)
!1467 = !{!1468, !1470, !1471, !1472, !1473, !1475, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1488, !1492, !1496, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1513, !1520, !1521, !1522, !1524, !1525, !1534, !1539, !1540, !1552, !1553, !1558, !1559, !1560, !1576, !1579, !1580, !1581, !1583, !1584, !1585, !1587, !1588, !1589, !1590, !1591, !1921, !1926, !1937, !1940, !1941, !1942, !1943, !1944, !1946, !1947, !1948, !1949, !1950, !1954, !1955, !1958, !1959, !1960, !1962, !1963, !1964, !1965}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1466, file: !993, line: 196, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1466, file: !993, line: 196, baseType: !1469, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1466, file: !993, line: 197, baseType: !1254, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1466, file: !993, line: 197, baseType: !1254, size: 32, offset: 160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1466, file: !993, line: 198, baseType: !1474, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButType", file: !6, line: 282, baseType: !5)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pointype", scope: !1466, file: !993, line: 199, baseType: !1476, size: 32, offset: 224)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButPointerType", file: !6, line: 230, baseType: !53)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1466, file: !993, line: 200, baseType: !1300, size: 16, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "bitnr", scope: !1466, file: !993, line: 200, baseType: !1300, size: 16, offset: 272)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1466, file: !993, line: 200, baseType: !1300, size: 16, offset: 288)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "strwidth", scope: !1466, file: !993, line: 200, baseType: !1300, size: 16, offset: 304)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1466, file: !993, line: 200, baseType: !1300, size: 16, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1466, file: !993, line: 201, baseType: !1300, size: 16, offset: 336)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1466, file: !993, line: 201, baseType: !1300, size: 16, offset: 352)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "selsta", scope: !1466, file: !993, line: 201, baseType: !1300, size: 16, offset: 368)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1466, file: !993, line: 201, baseType: !1300, size: 16, offset: 384)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1466, file: !993, line: 203, baseType: !1487, size: 64, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "strdata", scope: !1466, file: !993, line: 204, baseType: !1489, size: 1024, offset: 512)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 1024, elements: !1490)
!1490 = !{!1491}
!1491 = !DISubrange(count: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "drawstr", scope: !1466, file: !993, line: 205, baseType: !1493, size: 3200, offset: 1536)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 3200, elements: !1494)
!1494 = !{!1495}
!1495 = !DISubrange(count: 400)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1466, file: !993, line: 207, baseType: !1497, size: 128, offset: 4736)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1453, line: 95, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1453, line: 92, size: 128, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1498, file: !1453, line: 93, baseType: !1253, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1498, file: !1453, line: 93, baseType: !1253, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1498, file: !1453, line: 94, baseType: !1253, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1498, file: !1453, line: 94, baseType: !1253, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !1466, file: !993, line: 209, baseType: !1487, size: 64, offset: 4864)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !1466, file: !993, line: 210, baseType: !1253, size: 32, offset: 4928)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !1466, file: !993, line: 210, baseType: !1253, size: 32, offset: 4960)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !1466, file: !993, line: 210, baseType: !1253, size: 32, offset: 4992)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !1466, file: !993, line: 210, baseType: !1253, size: 32, offset: 5024)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !1466, file: !993, line: 222, baseType: !1253, size: 32, offset: 5056)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !1466, file: !993, line: 230, baseType: !1253, size: 32, offset: 5088)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1466, file: !993, line: 232, baseType: !1512, size: 32, offset: 5120)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1256, size: 32, elements: !1350)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1466, file: !993, line: 234, baseType: !1514, size: 64, offset: 5184)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleFunc", file: !6, line: 336, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{null, !1518, !1261, !1261}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !953, line: 44, flags: DIFlagFwdDecl)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1466, file: !993, line: 235, baseType: !1261, size: 64, offset: 5248)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1466, file: !993, line: 236, baseType: !1261, size: 64, offset: 5312)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1466, file: !993, line: 238, baseType: !1523, size: 64, offset: 5376)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleNFunc", file: !6, line: 338, baseType: !1515)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1466, file: !993, line: 239, baseType: !1261, size: 64, offset: 5440)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1466, file: !993, line: 241, baseType: !1526, size: 64, offset: 5504)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bContextStore", file: !1528, line: 84, size: 320, elements: !1529)
!1528 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1529 = !{!1530, !1531, !1532, !1533}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1527, file: !1528, line: 85, baseType: !1526, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1527, file: !1528, line: 85, baseType: !1526, size: 64, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1527, file: !1528, line: 87, baseType: !1326, size: 128, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1527, file: !1528, line: 88, baseType: !1256, size: 8, offset: 256)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "autocomplete_func", scope: !1466, file: !993, line: 243, baseType: !1535, size: 64, offset: 5568)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButCompleteFunc", file: !6, line: 339, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!1254, !1518, !1487, !1261}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "autofunc_arg", scope: !1466, file: !993, line: 244, baseType: !1261, size: 64, offset: 5632)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "search_func", scope: !1466, file: !993, line: 246, baseType: !1541, size: 64, offset: 5696)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButSearchFunc", file: !6, line: 340, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !1545, !1261, !1547, !1549}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiSearchItems", file: !6, line: 334, baseType: !1551)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiSearchItems", file: !6, line: 334, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "search_arg", scope: !1466, file: !993, line: 247, baseType: !1261, size: 64, offset: 5760)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rename_func", scope: !1466, file: !993, line: 249, baseType: !1554, size: 64, offset: 5824)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleRenameFunc", file: !6, line: 337, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1518, !1261, !1487}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "rename_arg1", scope: !1466, file: !993, line: 250, baseType: !1261, size: 64, offset: 5888)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "rename_orig", scope: !1466, file: !993, line: 251, baseType: !1261, size: 64, offset: 5952)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1466, file: !993, line: 253, baseType: !1561, size: 64, offset: 6016)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLink", file: !993, line: 193, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !993, line: 184, size: 384, elements: !1564)
!1564 = !{!1565, !1567, !1569, !1571, !1572, !1573, !1574, !1575}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !1563, file: !993, line: 185, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ppoin", scope: !1563, file: !993, line: 186, baseType: !1568, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "totlink", scope: !1563, file: !993, line: 187, baseType: !1570, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "maxlink", scope: !1563, file: !993, line: 189, baseType: !1300, size: 16, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1563, file: !993, line: 189, baseType: !1300, size: 16, offset: 208)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "fromcode", scope: !1563, file: !993, line: 190, baseType: !1300, size: 16, offset: 224)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tocode", scope: !1563, file: !993, line: 190, baseType: !1300, size: 16, offset: 240)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1563, file: !993, line: 192, baseType: !1326, size: 128, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "linkto", scope: !1466, file: !993, line: 254, baseType: !1577, size: 32, offset: 6080)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 32, elements: !1578)
!1578 = !{!1413}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "tip", scope: !1466, file: !993, line: 256, baseType: !1547, size: 64, offset: 6144)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1466, file: !993, line: 256, baseType: !1547, size: 64, offset: 6208)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !1466, file: !993, line: 258, baseType: !1582, size: 32, offset: 6272)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIFIconID", file: !61, line: 44, baseType: !60)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1466, file: !993, line: 259, baseType: !1256, size: 8, offset: 6304)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1466, file: !993, line: 260, baseType: !1260, size: 8, offset: 6312)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !1466, file: !993, line: 261, baseType: !1586, size: 8, offset: 6320)
!1586 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1466, file: !993, line: 262, baseType: !1260, size: 8, offset: 6328)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !1466, file: !993, line: 263, baseType: !1256, size: 8, offset: 6336)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_key", scope: !1466, file: !993, line: 264, baseType: !1300, size: 16, offset: 6352)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "iconadd", scope: !1466, file: !993, line: 265, baseType: !1300, size: 16, offset: 6368)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "block_create_func", scope: !1466, file: !993, line: 268, baseType: !1592, size: 64, offset: 6400)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockCreateFunc", file: !6, line: 380, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!1596, !1518, !1704, !1261}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !6, line: 83, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !993, line: 320, size: 5440, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1656, !1657, !1659, !1660, !1668, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1683, !1685, !1686, !1687, !1688, !1689, !1690, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1898, !1901, !1902, !1905, !1908, !1909, !1910}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1598, file: !993, line: 321, baseType: !1596, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1598, file: !993, line: 321, baseType: !1596, size: 64, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "buttons", scope: !1598, file: !993, line: 323, baseType: !1326, size: 128, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !1598, file: !993, line: 324, baseType: !1604, size: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !1606, line: 113, baseType: !1607)
!1606 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !1606, line: 97, size: 2176, elements: !1608)
!1608 = !{!1609, !1611, !1612, !1615, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1607, file: !1606, line: 98, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1607, file: !1606, line: 98, baseType: !1610, size: 64, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1607, file: !1606, line: 100, baseType: !1613, size: 64, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !1606, line: 43, flags: DIFlagFwdDecl)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1607, file: !1606, line: 101, baseType: !1616, size: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1606, line: 46, flags: DIFlagFwdDecl)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !1607, file: !1606, line: 103, baseType: !1316, size: 512, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !1607, file: !1606, line: 103, baseType: !1316, size: 512, offset: 768)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !1607, file: !1606, line: 104, baseType: !1316, size: 512, offset: 1280)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !1607, file: !1606, line: 105, baseType: !1254, size: 32, offset: 1792)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !1607, file: !1606, line: 105, baseType: !1254, size: 32, offset: 1824)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1607, file: !1606, line: 105, baseType: !1254, size: 32, offset: 1856)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1607, file: !1606, line: 105, baseType: !1254, size: 32, offset: 1888)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !1607, file: !1606, line: 106, baseType: !1300, size: 16, offset: 1920)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1607, file: !1606, line: 106, baseType: !1300, size: 16, offset: 1936)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1607, file: !1606, line: 107, baseType: !1300, size: 16, offset: 1952)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !1607, file: !1606, line: 107, baseType: !1300, size: 16, offset: 1968)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1607, file: !1606, line: 108, baseType: !1300, size: 16, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !1607, file: !1606, line: 109, baseType: !1300, size: 16, offset: 2000)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !1607, file: !1606, line: 110, baseType: !1254, size: 32, offset: 2016)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !1607, file: !1606, line: 111, baseType: !1610, size: 64, offset: 2048)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !1607, file: !1606, line: 112, baseType: !1261, size: 64, offset: 2112)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "oldblock", scope: !1598, file: !993, line: 325, baseType: !1596, size: 64, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "butstore", scope: !1598, file: !993, line: 327, baseType: !1326, size: 128, offset: 384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "layouts", scope: !1598, file: !993, line: 329, baseType: !1326, size: 128, offset: 512)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "curlayout", scope: !1598, file: !993, line: 330, baseType: !1616, size: 64, offset: 640)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !1598, file: !993, line: 332, baseType: !1326, size: 128, offset: 704)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1598, file: !993, line: 334, baseType: !1489, size: 1024, offset: 832)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !1598, file: !993, line: 336, baseType: !1641, size: 512, offset: 1856)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 512, elements: !1642)
!1642 = !{!1351, !1351}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1598, file: !993, line: 338, baseType: !1497, size: 128, offset: 2368)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1598, file: !993, line: 339, baseType: !1253, size: 32, offset: 2496)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "puphash", scope: !1598, file: !993, line: 341, baseType: !7, size: 32, offset: 2528)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1598, file: !993, line: 343, baseType: !1514, size: 64, offset: 2560)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1598, file: !993, line: 344, baseType: !1261, size: 64, offset: 2624)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1598, file: !993, line: 345, baseType: !1261, size: 64, offset: 2688)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1598, file: !993, line: 347, baseType: !1523, size: 64, offset: 2752)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1598, file: !993, line: 348, baseType: !1261, size: 64, offset: 2816)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func", scope: !1598, file: !993, line: 350, baseType: !1652, size: 64, offset: 2880)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuHandleFunc", file: !6, line: 346, baseType: !1653)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{null, !1518, !1261, !1254}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func_arg", scope: !1598, file: !993, line: 351, baseType: !1261, size: 64, offset: 2944)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func", scope: !1598, file: !993, line: 353, baseType: !1658, size: 64, offset: 3008)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleFunc", file: !6, line: 341, baseType: !1653)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func_arg", scope: !1598, file: !993, line: 354, baseType: !1261, size: 64, offset: 3072)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "block_event_func", scope: !1598, file: !993, line: 357, baseType: !1661, size: 64, offset: 3136)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!1254, !1545, !1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !6, line: 48, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra", scope: !1598, file: !993, line: 360, baseType: !1669, size: 64, offset: 3200)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{null, !1545, !1261, !1261, !1261, !1451}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg1", scope: !1598, file: !993, line: 361, baseType: !1261, size: 64, offset: 3264)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg2", scope: !1598, file: !993, line: 362, baseType: !1261, size: 64, offset: 3328)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1598, file: !993, line: 364, baseType: !1254, size: 32, offset: 3392)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1598, file: !993, line: 365, baseType: !1300, size: 16, offset: 3424)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1598, file: !993, line: 367, baseType: !1260, size: 8, offset: 3440)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1598, file: !993, line: 368, baseType: !1260, size: 8, offset: 3448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open", scope: !1598, file: !993, line: 369, baseType: !1256, size: 8, offset: 3456)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1598, file: !993, line: 370, baseType: !1680, size: 56, offset: 3464)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 56, elements: !1681)
!1681 = !{!1682}
!1682 = !DISubrange(count: 7)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open_last", scope: !1598, file: !993, line: 371, baseType: !1684, size: 64, offset: 3520)
!1684 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1598, file: !993, line: 373, baseType: !1547, size: 64, offset: 3584)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1598, file: !993, line: 375, baseType: !1260, size: 8, offset: 3648)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1598, file: !993, line: 376, baseType: !1260, size: 8, offset: 3656)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tooltipdisabled", scope: !1598, file: !993, line: 377, baseType: !1260, size: 8, offset: 3664)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "endblock", scope: !1598, file: !993, line: 378, baseType: !1260, size: 8, offset: 3672)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "bounds_type", scope: !1598, file: !993, line: 380, baseType: !1691, size: 32, offset: 3680)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBlockBoundsCalc", file: !6, line: 434, baseType: !910)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "mx", scope: !1598, file: !993, line: 381, baseType: !1254, size: 32, offset: 3712)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "my", scope: !1598, file: !993, line: 381, baseType: !1254, size: 32, offset: 3744)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1598, file: !993, line: 382, baseType: !1254, size: 32, offset: 3776)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "minbounds", scope: !1598, file: !993, line: 382, baseType: !1254, size: 32, offset: 3808)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1598, file: !993, line: 384, baseType: !1497, size: 128, offset: 3840)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "saferct", scope: !1598, file: !993, line: 385, baseType: !1326, size: 128, offset: 3968)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1598, file: !993, line: 387, baseType: !1699, size: 64, offset: 4096)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupBlockHandle", file: !6, line: 84, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockHandle", file: !993, line: 491, size: 1536, elements: !1702)
!1702 = !{!1703, !1776, !1777, !1778, !1779, !1780, !1781, !1785, !1786, !1802, !1803, !1808, !1811, !1888, !1889, !1890, !1891, !1892, !1893, !1895, !1896, !1897}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1701, file: !993, line: 493, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1606, line: 230, size: 3072, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1705, file: !1606, line: 231, baseType: !1704, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1705, file: !1606, line: 231, baseType: !1704, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1705, file: !1606, line: 233, baseType: !1710, size: 1280, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1711, line: 71, baseType: !1712)
!1711 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1711, line: 40, size: 1280, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1738, !1739, !1740, !1743}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1712, file: !1711, line: 41, baseType: !1497, size: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1712, file: !1711, line: 41, baseType: !1497, size: 128, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1712, file: !1711, line: 42, baseType: !1452, size: 128, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1712, file: !1711, line: 42, baseType: !1452, size: 128, offset: 384)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1712, file: !1711, line: 43, baseType: !1452, size: 128, offset: 512)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1712, file: !1711, line: 45, baseType: !1720, size: 64, offset: 640)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 64, elements: !1578)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1712, file: !1711, line: 45, baseType: !1720, size: 64, offset: 704)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1712, file: !1711, line: 46, baseType: !1253, size: 32, offset: 768)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1712, file: !1711, line: 46, baseType: !1253, size: 32, offset: 800)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1712, file: !1711, line: 48, baseType: !1300, size: 16, offset: 832)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1712, file: !1711, line: 49, baseType: !1300, size: 16, offset: 848)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1712, file: !1711, line: 51, baseType: !1300, size: 16, offset: 864)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1712, file: !1711, line: 52, baseType: !1300, size: 16, offset: 880)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1712, file: !1711, line: 53, baseType: !1300, size: 16, offset: 896)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1712, file: !1711, line: 55, baseType: !1300, size: 16, offset: 912)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1712, file: !1711, line: 56, baseType: !1300, size: 16, offset: 928)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1712, file: !1711, line: 58, baseType: !1300, size: 16, offset: 944)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1712, file: !1711, line: 58, baseType: !1300, size: 16, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1712, file: !1711, line: 59, baseType: !1300, size: 16, offset: 976)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1712, file: !1711, line: 59, baseType: !1300, size: 16, offset: 992)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1712, file: !1711, line: 61, baseType: !1300, size: 16, offset: 1008)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1712, file: !1711, line: 63, baseType: !1737, size: 64, offset: 1024)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1712, file: !1711, line: 64, baseType: !1254, size: 32, offset: 1088)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1712, file: !1711, line: 65, baseType: !1254, size: 32, offset: 1120)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1712, file: !1711, line: 68, baseType: !1741, size: 64, offset: 1152)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1711, line: 68, flags: DIFlagFwdDecl)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1712, file: !1711, line: 69, baseType: !1744, size: 64, offset: 1216)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1711, line: 69, flags: DIFlagFwdDecl)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1705, file: !1606, line: 234, baseType: !1452, size: 128, offset: 1408)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1705, file: !1606, line: 235, baseType: !1452, size: 128, offset: 1536)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1705, file: !1606, line: 236, baseType: !1300, size: 16, offset: 1664)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1705, file: !1606, line: 236, baseType: !1300, size: 16, offset: 1680)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1705, file: !1606, line: 238, baseType: !1300, size: 16, offset: 1696)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1705, file: !1606, line: 239, baseType: !1300, size: 16, offset: 1712)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1705, file: !1606, line: 240, baseType: !1300, size: 16, offset: 1728)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1705, file: !1606, line: 241, baseType: !1300, size: 16, offset: 1744)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1705, file: !1606, line: 243, baseType: !1253, size: 32, offset: 1760)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1705, file: !1606, line: 244, baseType: !1300, size: 16, offset: 1792)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1705, file: !1606, line: 244, baseType: !1300, size: 16, offset: 1808)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1705, file: !1606, line: 246, baseType: !1300, size: 16, offset: 1824)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1705, file: !1606, line: 247, baseType: !1300, size: 16, offset: 1840)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1705, file: !1606, line: 248, baseType: !1300, size: 16, offset: 1856)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1705, file: !1606, line: 249, baseType: !1300, size: 16, offset: 1872)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1705, file: !1606, line: 250, baseType: !1300, size: 16, offset: 1888)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1705, file: !1606, line: 251, baseType: !1300, size: 16, offset: 1904)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !1606, line: 253, baseType: !1764, size: 64, offset: 1920)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1606, line: 42, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1705, file: !1606, line: 255, baseType: !1326, size: 128, offset: 1984)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1705, file: !1606, line: 256, baseType: !1326, size: 128, offset: 2112)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1705, file: !1606, line: 257, baseType: !1326, size: 128, offset: 2240)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1705, file: !1606, line: 258, baseType: !1326, size: 128, offset: 2368)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1705, file: !1606, line: 259, baseType: !1326, size: 128, offset: 2496)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1705, file: !1606, line: 260, baseType: !1326, size: 128, offset: 2624)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1705, file: !1606, line: 261, baseType: !1326, size: 128, offset: 2752)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1705, file: !1606, line: 263, baseType: !1744, size: 64, offset: 2880)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1705, file: !1606, line: 265, baseType: !1487, size: 64, offset: 2944)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1705, file: !1606, line: 266, baseType: !1261, size: 64, offset: 3008)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "towards_xy", scope: !1701, file: !993, line: 496, baseType: !1720, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "towardstime", scope: !1701, file: !993, line: 497, baseType: !1684, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dotowards", scope: !1701, file: !993, line: 498, baseType: !1256, size: 8, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "popup", scope: !1701, file: !993, line: 500, baseType: !1256, size: 8, offset: 200)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "popup_func", scope: !1701, file: !993, line: 501, baseType: !1653, size: 64, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_func", scope: !1701, file: !993, line: 502, baseType: !1782, size: 64, offset: 320)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{null, !1518, !1261}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "popup_arg", scope: !1701, file: !993, line: 503, baseType: !1261, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "popup_create_vars", scope: !1701, file: !993, line: 506, baseType: !1787, size: 320, offset: 448)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockCreate", file: !993, line: 480, size: 320, elements: !1788)
!1788 = !{!1789, !1790, !1796, !1797, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "create_func", scope: !1787, file: !993, line: 481, baseType: !1592, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "handle_create_func", scope: !1787, file: !993, line: 482, baseType: !1791, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleCreateFunc", file: !993, line: 478, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!1596, !1518, !1795, !1261}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1787, file: !993, line: 483, baseType: !1261, size: 64, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !1787, file: !993, line: 485, baseType: !1798, size: 64, offset: 192)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1254, size: 64, elements: !1578)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "butregion", scope: !1787, file: !993, line: 488, baseType: !1800, size: 64, offset: 256)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !1606, line: 267, baseType: !1705)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "scrolltimer", scope: !1701, file: !993, line: 508, baseType: !1744, size: 64, offset: 768)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "keynav_state", scope: !1701, file: !993, line: 510, baseType: !1804, size: 96, offset: 832)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiKeyNavLock", file: !993, line: 471, size: 96, elements: !1805)
!1805 = !{!1806, !1807}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "is_keynav", scope: !1804, file: !993, line: 473, baseType: !1256, size: 8)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !1804, file: !993, line: 475, baseType: !1798, size: 64, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1701, file: !993, line: 513, baseType: !1809, size: 64, offset: 960)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !6, line: 70, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_area", scope: !1701, file: !993, line: 514, baseType: !1812, size: 64, offset: 1024)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1606, line: 228, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1606, line: 203, size: 1280, elements: !1815)
!1815 = !{!1816, !1818, !1819, !1836, !1837, !1838, !1839, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1884, !1885, !1886, !1887}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1814, file: !1606, line: 204, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1814, file: !1606, line: 204, baseType: !1817, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1814, file: !1606, line: 206, baseType: !1820, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1606, line: 87, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1606, line: 82, size: 256, elements: !1823)
!1823 = !{!1824, !1826, !1827, !1828, !1834, !1835}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1822, file: !1606, line: 83, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1822, file: !1606, line: 83, baseType: !1825, size: 64, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !1822, file: !1606, line: 83, baseType: !1825, size: 64, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1822, file: !1606, line: 84, baseType: !1829, size: 32, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1453, line: 43, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1453, line: 41, size: 32, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1830, file: !1453, line: 42, baseType: !1300, size: 16)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1830, file: !1453, line: 42, baseType: !1300, size: 16, offset: 16)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1822, file: !1606, line: 86, baseType: !1300, size: 16, offset: 224)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1822, file: !1606, line: 86, baseType: !1300, size: 16, offset: 240)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1814, file: !1606, line: 206, baseType: !1820, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1814, file: !1606, line: 206, baseType: !1820, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1814, file: !1606, line: 206, baseType: !1820, size: 64, offset: 320)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !1814, file: !1606, line: 207, baseType: !1840, size: 64, offset: 384)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1606, line: 80, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1606, line: 49, size: 1984, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1842, file: !1606, line: 50, baseType: !1268, size: 960)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1842, file: !1606, line: 52, baseType: !1326, size: 128, offset: 960)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1842, file: !1606, line: 53, baseType: !1326, size: 128, offset: 1088)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1842, file: !1606, line: 54, baseType: !1326, size: 128, offset: 1216)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1842, file: !1606, line: 55, baseType: !1326, size: 128, offset: 1344)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1842, file: !1606, line: 57, baseType: !1850, size: 64, offset: 1472)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1852, line: 40, flags: DIFlagFwdDecl)
!1852 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1842, file: !1606, line: 58, baseType: !1850, size: 64, offset: 1536)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1842, file: !1606, line: 60, baseType: !1254, size: 32, offset: 1600)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1842, file: !1606, line: 61, baseType: !1254, size: 32, offset: 1632)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1842, file: !1606, line: 63, baseType: !1300, size: 16, offset: 1664)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1842, file: !1606, line: 64, baseType: !1300, size: 16, offset: 1680)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1842, file: !1606, line: 65, baseType: !1300, size: 16, offset: 1696)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1842, file: !1606, line: 66, baseType: !1300, size: 16, offset: 1712)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1842, file: !1606, line: 67, baseType: !1300, size: 16, offset: 1728)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1842, file: !1606, line: 68, baseType: !1300, size: 16, offset: 1744)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1842, file: !1606, line: 69, baseType: !1300, size: 16, offset: 1760)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1842, file: !1606, line: 70, baseType: !1300, size: 16, offset: 1776)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1842, file: !1606, line: 71, baseType: !1300, size: 16, offset: 1792)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1842, file: !1606, line: 73, baseType: !1300, size: 16, offset: 1808)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1842, file: !1606, line: 74, baseType: !1300, size: 16, offset: 1824)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1842, file: !1606, line: 76, baseType: !1300, size: 16, offset: 1840)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1842, file: !1606, line: 78, baseType: !1744, size: 64, offset: 1856)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1842, file: !1606, line: 79, baseType: !1261, size: 64, offset: 1920)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !1814, file: !1606, line: 209, baseType: !1452, size: 128, offset: 448)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1814, file: !1606, line: 211, baseType: !1260, size: 8, offset: 576)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !1814, file: !1606, line: 211, baseType: !1260, size: 8, offset: 584)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1814, file: !1606, line: 212, baseType: !1300, size: 16, offset: 592)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1814, file: !1606, line: 212, baseType: !1300, size: 16, offset: 608)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !1814, file: !1606, line: 214, baseType: !1300, size: 16, offset: 624)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1814, file: !1606, line: 215, baseType: !1300, size: 16, offset: 640)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1814, file: !1606, line: 216, baseType: !1300, size: 16, offset: 656)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !1814, file: !1606, line: 217, baseType: !1300, size: 16, offset: 672)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1814, file: !1606, line: 219, baseType: !1260, size: 8, offset: 688)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1814, file: !1606, line: 219, baseType: !1260, size: 8, offset: 696)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1814, file: !1606, line: 221, baseType: !1882, size: 64, offset: 704)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1606, line: 39, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !1814, file: !1606, line: 223, baseType: !1326, size: 128, offset: 768)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1814, file: !1606, line: 224, baseType: !1326, size: 128, offset: 896)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1814, file: !1606, line: 225, baseType: !1326, size: 128, offset: 1024)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !1814, file: !1606, line: 227, baseType: !1326, size: 128, offset: 1152)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_region", scope: !1701, file: !993, line: 515, baseType: !1800, size: 64, offset: 1088)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1701, file: !993, line: 516, baseType: !1254, size: 32, offset: 1152)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "butretval", scope: !1701, file: !993, line: 519, baseType: !1254, size: 32, offset: 1184)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "menuretval", scope: !1701, file: !993, line: 520, baseType: !1254, size: 32, offset: 1216)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "retvalue", scope: !1701, file: !993, line: 521, baseType: !1254, size: 32, offset: 1248)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "retvec", scope: !1701, file: !993, line: 522, baseType: !1894, size: 128, offset: 1280)
!1894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 128, elements: !1350)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1701, file: !993, line: 525, baseType: !1254, size: 32, offset: 1408)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "is_grab", scope: !1701, file: !993, line: 528, baseType: !1256, size: 8, offset: 1440)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "grab_xy_prev", scope: !1701, file: !993, line: 529, baseType: !1798, size: 64, offset: 1472)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ui_operator", scope: !1598, file: !993, line: 389, baseType: !1899, size: 64, offset: 4160)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !6, line: 51, flags: DIFlagFwdDecl)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "evil_C", scope: !1598, file: !993, line: 392, baseType: !1261, size: 64, offset: 4224)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1598, file: !993, line: 394, baseType: !1903, size: 64, offset: 4288)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !993, line: 394, flags: DIFlagFwdDecl)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_hsv", scope: !1598, file: !993, line: 395, baseType: !1906, size: 96, offset: 4352)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 96, elements: !1907)
!1907 = !{!1425}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !1598, file: !993, line: 397, baseType: !1256, size: 8, offset: 4448)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1598, file: !993, line: 399, baseType: !1316, size: 512, offset: 4456)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pie_data", scope: !1598, file: !993, line: 402, baseType: !1911, size: 448, offset: 4992)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PieMenuData", file: !993, line: 309, size: 448, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !1911, file: !993, line: 310, baseType: !1720, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_init", scope: !1911, file: !993, line: 311, baseType: !1720, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_spawned", scope: !1911, file: !993, line: 312, baseType: !1720, size: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !1911, file: !993, line: 313, baseType: !1720, size: 64, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gesture", scope: !1911, file: !993, line: 314, baseType: !1684, size: 64, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1911, file: !993, line: 315, baseType: !1254, size: 32, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1911, file: !993, line: 316, baseType: !1254, size: 32, offset: 352)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1911, file: !993, line: 317, baseType: !1253, size: 32, offset: 384)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "menu_create_func", scope: !1466, file: !993, line: 271, baseType: !1922, size: 64, offset: 6464)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuCreateFunc", file: !6, line: 345, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !1518, !1616, !1261}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !1466, file: !993, line: 274, baseType: !1927, size: 192, offset: 6528)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !953, line: 55, size: 192, elements: !1928)
!1928 = !{!1929, !1933, !1936}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1927, file: !953, line: 58, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1927, file: !953, line: 56, size: 64, elements: !1931)
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1930, file: !953, line: 57, baseType: !1261, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1927, file: !953, line: 60, baseType: !1934, size: 64, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !953, line: 41, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1927, file: !953, line: 61, baseType: !1261, size: 64, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "rnaprop", scope: !1466, file: !993, line: 275, baseType: !1938, size: 64, offset: 6720)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !953, line: 39, flags: DIFlagFwdDecl)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "rnaindex", scope: !1466, file: !993, line: 276, baseType: !1254, size: 32, offset: 6784)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchpoin", scope: !1466, file: !993, line: 278, baseType: !1927, size: 192, offset: 6848)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchprop", scope: !1466, file: !993, line: 279, baseType: !1938, size: 64, offset: 7040)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1466, file: !993, line: 282, baseType: !1809, size: 64, offset: 7104)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "opptr", scope: !1466, file: !993, line: 283, baseType: !1945, size: 64, offset: 7168)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1466, file: !993, line: 284, baseType: !1300, size: 16, offset: 7232)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "menu_key", scope: !1466, file: !993, line: 285, baseType: !1256, size: 8, offset: 7248)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "dragtype", scope: !1466, file: !993, line: 288, baseType: !1260, size: 8, offset: 7256)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "dragpoin", scope: !1466, file: !993, line: 289, baseType: !1261, size: 64, offset: 7296)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !1466, file: !993, line: 290, baseType: !1951, size: 64, offset: 7360)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1953, line: 136, flags: DIFlagFwdDecl)
!1953 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "imb_scale", scope: !1466, file: !993, line: 291, baseType: !1253, size: 32, offset: 7424)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1466, file: !993, line: 294, baseType: !1956, size: 64, offset: 7488)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandleButtonData", file: !993, line: 43, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !1466, file: !993, line: 297, baseType: !1261, size: 64, offset: 7552)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "editstr", scope: !1466, file: !993, line: 299, baseType: !1487, size: 64, offset: 7616)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "editval", scope: !1466, file: !993, line: 300, baseType: !1961, size: 64, offset: 7680)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "editvec", scope: !1466, file: !993, line: 301, baseType: !1737, size: 64, offset: 7744)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "editcoba", scope: !1466, file: !993, line: 302, baseType: !1261, size: 64, offset: 7808)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "editcumap", scope: !1466, file: !993, line: 303, baseType: !1261, size: 64, offset: 7872)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1466, file: !993, line: 306, baseType: !1596, size: 64, offset: 7936)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1433, file: !3, line: 123, baseType: !1967, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1970, !1436, !1464, !1451}
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !945, line: 84, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !945, line: 73, size: 256, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !1972, file: !945, line: 74, baseType: !1300, size: 16)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1972, file: !945, line: 75, baseType: !1300, size: 16, offset: 16)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !1972, file: !945, line: 76, baseType: !1300, size: 16, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1972, file: !945, line: 77, baseType: !1978, size: 48, offset: 48)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 48, elements: !1979)
!1979 = !{!1980}
!1980 = !DISubrange(count: 6)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !1972, file: !945, line: 78, baseType: !1300, size: 16, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !1972, file: !945, line: 78, baseType: !1300, size: 16, offset: 112)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !1972, file: !945, line: 79, baseType: !1300, size: 16, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !1972, file: !945, line: 80, baseType: !1300, size: 16, offset: 144)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !1972, file: !945, line: 80, baseType: !1300, size: 16, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1972, file: !945, line: 81, baseType: !1300, size: 16, offset: 176)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !1972, file: !945, line: 82, baseType: !1253, size: 32, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !1972, file: !945, line: 83, baseType: !1253, size: 32, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetTypeEnum", file: !993, line: 103, baseType: !992)
!1990 = !{}
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "check_tria_vert", scope: !2, file: !3, line: 174, type: !1993, isLocal: true, isDefinition: true)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 384, elements: !1994)
!1994 = !{!1980, !1413}
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "check_tria_face", scope: !2, file: !3, line: 179, type: !1997, isLocal: true, isDefinition: true)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 384, elements: !1998)
!1998 = !{!1351, !1425}
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "num_tria_vert", scope: !2, file: !3, line: 144, type: !2001, isLocal: true, isDefinition: true)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 192, elements: !2002)
!2002 = !{!1425, !1413}
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "num_tria_face", scope: !2, file: !3, line: 148, type: !2005, isLocal: true, isDefinition: true)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 96, elements: !2006)
!2006 = !{!2007, !1425}
!2007 = !DISubrange(count: 1)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "menu_tria_vert", scope: !2, file: !3, line: 165, type: !1993, isLocal: true, isDefinition: true)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(name: "menu_tria_face", scope: !2, file: !3, line: 172, type: !2012, isLocal: true, isDefinition: true)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 192, elements: !2013)
!2013 = !{!1413, !1425}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "wcol_tmp", scope: !2, file: !3, line: 1767, type: !1346, isLocal: true, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "wcol_theme_s", scope: !2018, file: !3, line: 3474, type: !1437, isLocal: true, isDefinition: true)
!2018 = distinct !DISubprogram(name: "ui_widget_color_disabled", scope: !3, file: !3, line: 3472, type: !2019, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !1431}
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 512, elements: !2022)
!2022 = !{!2023, !1413}
!2023 = !DISubrange(count: 8)
!2024 = !{i32 7, !"Dwarf Version", i32 4}
!2025 = !{i32 2, !"Debug Info Version", i32 3}
!2026 = !{i32 1, !"wchar_size", i32 4}
!2027 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2028 = distinct !DISubprogram(name: "ui_draw_anti_tria", scope: !3, file: !3, line: 185, type: !2029, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{null, !1253, !1253, !1253, !1253, !1253, !1253}
!2031 = !DILocalVariable(name: "x1", arg: 1, scope: !2028, file: !3, line: 185, type: !1253)
!2032 = !DILocation(line: 185, column: 30, scope: !2028)
!2033 = !DILocalVariable(name: "y1", arg: 2, scope: !2028, file: !3, line: 185, type: !1253)
!2034 = !DILocation(line: 185, column: 40, scope: !2028)
!2035 = !DILocalVariable(name: "x2", arg: 3, scope: !2028, file: !3, line: 185, type: !1253)
!2036 = !DILocation(line: 185, column: 50, scope: !2028)
!2037 = !DILocalVariable(name: "y2", arg: 4, scope: !2028, file: !3, line: 185, type: !1253)
!2038 = !DILocation(line: 185, column: 60, scope: !2028)
!2039 = !DILocalVariable(name: "x3", arg: 5, scope: !2028, file: !3, line: 185, type: !1253)
!2040 = !DILocation(line: 185, column: 70, scope: !2028)
!2041 = !DILocalVariable(name: "y3", arg: 6, scope: !2028, file: !3, line: 185, type: !1253)
!2042 = !DILocation(line: 185, column: 80, scope: !2028)
!2043 = !DILocalVariable(name: "tri_arr", scope: !2028, file: !3, line: 187, type: !2044)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 192, elements: !2002)
!2045 = !DILocation(line: 187, column: 8, scope: !2028)
!2046 = !DILocation(line: 187, column: 24, scope: !2028)
!2047 = !DILocation(line: 187, column: 25, scope: !2028)
!2048 = !DILocation(line: 187, column: 26, scope: !2028)
!2049 = !DILocation(line: 187, column: 30, scope: !2028)
!2050 = !DILocation(line: 187, column: 35, scope: !2028)
!2051 = !DILocation(line: 187, column: 36, scope: !2028)
!2052 = !DILocation(line: 187, column: 40, scope: !2028)
!2053 = !DILocation(line: 187, column: 45, scope: !2028)
!2054 = !DILocation(line: 187, column: 46, scope: !2028)
!2055 = !DILocation(line: 187, column: 50, scope: !2028)
!2056 = !DILocalVariable(name: "color", scope: !2028, file: !3, line: 188, type: !1894)
!2057 = !DILocation(line: 188, column: 8, scope: !2028)
!2058 = !DILocalVariable(name: "j", scope: !2028, file: !3, line: 189, type: !1254)
!2059 = !DILocation(line: 189, column: 6, scope: !2028)
!2060 = !DILocation(line: 191, column: 2, scope: !2028)
!2061 = !DILocation(line: 192, column: 32, scope: !2028)
!2062 = !DILocation(line: 192, column: 2, scope: !2028)
!2063 = !DILocation(line: 193, column: 2, scope: !2028)
!2064 = !DILocation(line: 193, column: 11, scope: !2028)
!2065 = !DILocation(line: 194, column: 13, scope: !2028)
!2066 = !DILocation(line: 194, column: 2, scope: !2028)
!2067 = !DILocation(line: 196, column: 2, scope: !2028)
!2068 = !DILocation(line: 197, column: 34, scope: !2028)
!2069 = !DILocation(line: 197, column: 2, scope: !2028)
!2070 = !DILocation(line: 200, column: 9, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2028, file: !3, line: 200, column: 2)
!2072 = !DILocation(line: 200, column: 7, scope: !2071)
!2073 = !DILocation(line: 200, column: 14, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2071, file: !3, line: 200, column: 2)
!2075 = !DILocation(line: 200, column: 16, scope: !2074)
!2076 = !DILocation(line: 200, column: 2, scope: !2071)
!2077 = !DILocation(line: 201, column: 20, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2074, file: !3, line: 200, column: 41)
!2079 = !DILocation(line: 201, column: 16, scope: !2078)
!2080 = !DILocation(line: 201, column: 31, scope: !2078)
!2081 = !DILocation(line: 201, column: 27, scope: !2078)
!2082 = !DILocation(line: 201, column: 3, scope: !2078)
!2083 = !DILocation(line: 202, column: 3, scope: !2078)
!2084 = !DILocation(line: 203, column: 21, scope: !2078)
!2085 = !DILocation(line: 203, column: 17, scope: !2078)
!2086 = !DILocation(line: 203, column: 16, scope: !2078)
!2087 = !DILocation(line: 203, column: 33, scope: !2078)
!2088 = !DILocation(line: 203, column: 29, scope: !2078)
!2089 = !DILocation(line: 203, column: 28, scope: !2078)
!2090 = !DILocation(line: 203, column: 3, scope: !2078)
!2091 = !DILocation(line: 204, column: 2, scope: !2078)
!2092 = !DILocation(line: 200, column: 37, scope: !2074)
!2093 = !DILocation(line: 200, column: 2, scope: !2074)
!2094 = distinct !{!2094, !2076, !2095}
!2095 = !DILocation(line: 204, column: 2, scope: !2071)
!2096 = !DILocation(line: 206, column: 2, scope: !2028)
!2097 = !DILocation(line: 207, column: 2, scope: !2028)
!2098 = !DILocation(line: 208, column: 1, scope: !2028)
!2099 = distinct !DISubprogram(name: "ui_draw_anti_roundbox", scope: !3, file: !3, line: 210, type: !2100, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !1254, !1253, !1253, !1253, !1253, !1253, !1256}
!2102 = !DILocalVariable(name: "mode", arg: 1, scope: !2099, file: !3, line: 210, type: !1254)
!2103 = !DILocation(line: 210, column: 32, scope: !2099)
!2104 = !DILocalVariable(name: "minx", arg: 2, scope: !2099, file: !3, line: 210, type: !1253)
!2105 = !DILocation(line: 210, column: 44, scope: !2099)
!2106 = !DILocalVariable(name: "miny", arg: 3, scope: !2099, file: !3, line: 210, type: !1253)
!2107 = !DILocation(line: 210, column: 56, scope: !2099)
!2108 = !DILocalVariable(name: "maxx", arg: 4, scope: !2099, file: !3, line: 210, type: !1253)
!2109 = !DILocation(line: 210, column: 68, scope: !2099)
!2110 = !DILocalVariable(name: "maxy", arg: 5, scope: !2099, file: !3, line: 210, type: !1253)
!2111 = !DILocation(line: 210, column: 80, scope: !2099)
!2112 = !DILocalVariable(name: "rad", arg: 6, scope: !2099, file: !3, line: 210, type: !1253)
!2113 = !DILocation(line: 210, column: 92, scope: !2099)
!2114 = !DILocalVariable(name: "use_alpha", arg: 7, scope: !2099, file: !3, line: 210, type: !1256)
!2115 = !DILocation(line: 210, column: 102, scope: !2099)
!2116 = !DILocalVariable(name: "color", scope: !2099, file: !3, line: 212, type: !1894)
!2117 = !DILocation(line: 212, column: 8, scope: !2099)
!2118 = !DILocalVariable(name: "j", scope: !2099, file: !3, line: 213, type: !1254)
!2119 = !DILocation(line: 213, column: 6, scope: !2099)
!2120 = !DILocation(line: 215, column: 2, scope: !2099)
!2121 = !DILocation(line: 216, column: 32, scope: !2099)
!2122 = !DILocation(line: 216, column: 2, scope: !2099)
!2123 = !DILocation(line: 217, column: 6, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2099, file: !3, line: 217, column: 6)
!2125 = !DILocation(line: 217, column: 6, scope: !2099)
!2126 = !DILocation(line: 218, column: 3, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 217, column: 17)
!2128 = !DILocation(line: 218, column: 12, scope: !2127)
!2129 = !DILocation(line: 219, column: 2, scope: !2127)
!2130 = !DILocation(line: 220, column: 2, scope: !2099)
!2131 = !DILocation(line: 220, column: 11, scope: !2099)
!2132 = !DILocation(line: 221, column: 13, scope: !2099)
!2133 = !DILocation(line: 221, column: 2, scope: !2099)
!2134 = !DILocation(line: 223, column: 9, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2099, file: !3, line: 223, column: 2)
!2136 = !DILocation(line: 223, column: 7, scope: !2135)
!2137 = !DILocation(line: 223, column: 14, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 223, column: 2)
!2139 = !DILocation(line: 223, column: 16, scope: !2138)
!2140 = !DILocation(line: 223, column: 2, scope: !2135)
!2141 = !DILocation(line: 224, column: 20, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2138, file: !3, line: 223, column: 41)
!2143 = !DILocation(line: 224, column: 16, scope: !2142)
!2144 = !DILocation(line: 224, column: 31, scope: !2142)
!2145 = !DILocation(line: 224, column: 27, scope: !2142)
!2146 = !DILocation(line: 224, column: 3, scope: !2142)
!2147 = !DILocation(line: 225, column: 13, scope: !2142)
!2148 = !DILocation(line: 225, column: 19, scope: !2142)
!2149 = !DILocation(line: 225, column: 25, scope: !2142)
!2150 = !DILocation(line: 225, column: 31, scope: !2142)
!2151 = !DILocation(line: 225, column: 37, scope: !2142)
!2152 = !DILocation(line: 225, column: 43, scope: !2142)
!2153 = !DILocation(line: 225, column: 3, scope: !2142)
!2154 = !DILocation(line: 226, column: 21, scope: !2142)
!2155 = !DILocation(line: 226, column: 17, scope: !2142)
!2156 = !DILocation(line: 226, column: 16, scope: !2142)
!2157 = !DILocation(line: 226, column: 33, scope: !2142)
!2158 = !DILocation(line: 226, column: 29, scope: !2142)
!2159 = !DILocation(line: 226, column: 28, scope: !2142)
!2160 = !DILocation(line: 226, column: 3, scope: !2142)
!2161 = !DILocation(line: 227, column: 2, scope: !2142)
!2162 = !DILocation(line: 223, column: 37, scope: !2138)
!2163 = !DILocation(line: 223, column: 2, scope: !2138)
!2164 = distinct !{!2164, !2140, !2165}
!2165 = !DILocation(line: 227, column: 2, scope: !2135)
!2166 = !DILocation(line: 229, column: 2, scope: !2099)
!2167 = !DILocation(line: 230, column: 1, scope: !2099)
!2168 = distinct !DISubprogram(name: "ui_widget_color_init", scope: !3, file: !3, line: 1782, type: !2169, scopeLine: 1783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{null, !2171}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeUI", file: !945, line: 184, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeUI", file: !945, line: 159, size: 7296, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2203, !2204, !2205, !2206, !2208, !2212, !2213, !2214, !2215}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_regular", scope: !2173, file: !945, line: 161, baseType: !1437, size: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tool", scope: !2173, file: !945, line: 161, baseType: !1437, size: 256, offset: 256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_text", scope: !2173, file: !945, line: 161, baseType: !1437, size: 256, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_radio", scope: !2173, file: !945, line: 162, baseType: !1437, size: 256, offset: 768)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_option", scope: !2173, file: !945, line: 162, baseType: !1437, size: 256, offset: 1024)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_toggle", scope: !2173, file: !945, line: 162, baseType: !1437, size: 256, offset: 1280)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_num", scope: !2173, file: !945, line: 163, baseType: !1437, size: 256, offset: 1536)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_numslider", scope: !2173, file: !945, line: 163, baseType: !1437, size: 256, offset: 1792)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu", scope: !2173, file: !945, line: 164, baseType: !1437, size: 256, offset: 2048)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pulldown", scope: !2173, file: !945, line: 164, baseType: !1437, size: 256, offset: 2304)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_back", scope: !2173, file: !945, line: 164, baseType: !1437, size: 256, offset: 2560)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_item", scope: !2173, file: !945, line: 164, baseType: !1437, size: 256, offset: 2816)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tooltip", scope: !2173, file: !945, line: 164, baseType: !1437, size: 256, offset: 3072)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_box", scope: !2173, file: !945, line: 165, baseType: !1437, size: 256, offset: 3328)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_scroll", scope: !2173, file: !945, line: 165, baseType: !1437, size: 256, offset: 3584)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_progress", scope: !2173, file: !945, line: 165, baseType: !1437, size: 256, offset: 3840)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_list_item", scope: !2173, file: !945, line: 165, baseType: !1437, size: 256, offset: 4096)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pie_menu", scope: !2173, file: !945, line: 165, baseType: !1437, size: 256, offset: 4352)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_state", scope: !2173, file: !945, line: 167, baseType: !1440, size: 256, offset: 4608)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !2173, file: !945, line: 169, baseType: !2195, size: 128, offset: 4864)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPanelColors", file: !945, line: 150, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPanelColors", file: !945, line: 144, size: 128, elements: !2197)
!2197 = !{!2198, !2199, !2200, !2201, !2202}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2196, file: !945, line: 145, baseType: !1349, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2196, file: !945, line: 146, baseType: !1349, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "show_header", scope: !2196, file: !945, line: 147, baseType: !1300, size: 16, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "show_back", scope: !2196, file: !945, line: 148, baseType: !1300, size: 16, offset: 80)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2196, file: !945, line: 149, baseType: !1254, size: 32, offset: 96)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "emboss", scope: !2173, file: !945, line: 171, baseType: !1349, size: 32, offset: 4992)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_fac", scope: !2173, file: !945, line: 174, baseType: !1253, size: 32, offset: 5024)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_width", scope: !2173, file: !945, line: 175, baseType: !1300, size: 16, offset: 5056)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2173, file: !945, line: 177, baseType: !2207, size: 48, offset: 5072)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 48, elements: !1907)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !2173, file: !945, line: 179, baseType: !2209, size: 2048, offset: 5120)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 2048, elements: !2210)
!2210 = !{!2211}
!2211 = !DISubrange(count: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alpha", scope: !2173, file: !945, line: 180, baseType: !1253, size: 32, offset: 7168)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "xaxis", scope: !2173, file: !945, line: 183, baseType: !1349, size: 32, offset: 7200)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "yaxis", scope: !2173, file: !945, line: 183, baseType: !1349, size: 32, offset: 7232)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "zaxis", scope: !2173, file: !945, line: 183, baseType: !1349, size: 32, offset: 7264)
!2216 = !DILocalVariable(name: "tui", arg: 1, scope: !2168, file: !3, line: 1782, type: !2171)
!2217 = !DILocation(line: 1782, column: 36, scope: !2168)
!2218 = !DILocation(line: 1784, column: 2, scope: !2168)
!2219 = !DILocation(line: 1784, column: 7, scope: !2168)
!2220 = !DILocation(line: 1784, column: 22, scope: !2168)
!2221 = !DILocation(line: 1785, column: 2, scope: !2168)
!2222 = !DILocation(line: 1785, column: 7, scope: !2168)
!2223 = !DILocation(line: 1785, column: 19, scope: !2168)
!2224 = !DILocation(line: 1786, column: 2, scope: !2168)
!2225 = !DILocation(line: 1786, column: 7, scope: !2168)
!2226 = !DILocation(line: 1786, column: 19, scope: !2168)
!2227 = !DILocation(line: 1787, column: 2, scope: !2168)
!2228 = !DILocation(line: 1787, column: 7, scope: !2168)
!2229 = !DILocation(line: 1787, column: 20, scope: !2168)
!2230 = !DILocation(line: 1788, column: 2, scope: !2168)
!2231 = !DILocation(line: 1788, column: 7, scope: !2168)
!2232 = !DILocation(line: 1788, column: 21, scope: !2168)
!2233 = !DILocation(line: 1789, column: 2, scope: !2168)
!2234 = !DILocation(line: 1789, column: 7, scope: !2168)
!2235 = !DILocation(line: 1789, column: 21, scope: !2168)
!2236 = !DILocation(line: 1790, column: 2, scope: !2168)
!2237 = !DILocation(line: 1790, column: 7, scope: !2168)
!2238 = !DILocation(line: 1790, column: 18, scope: !2168)
!2239 = !DILocation(line: 1791, column: 2, scope: !2168)
!2240 = !DILocation(line: 1791, column: 7, scope: !2168)
!2241 = !DILocation(line: 1791, column: 24, scope: !2168)
!2242 = !DILocation(line: 1792, column: 2, scope: !2168)
!2243 = !DILocation(line: 1792, column: 7, scope: !2168)
!2244 = !DILocation(line: 1792, column: 19, scope: !2168)
!2245 = !DILocation(line: 1793, column: 2, scope: !2168)
!2246 = !DILocation(line: 1793, column: 7, scope: !2168)
!2247 = !DILocation(line: 1793, column: 23, scope: !2168)
!2248 = !DILocation(line: 1794, column: 2, scope: !2168)
!2249 = !DILocation(line: 1794, column: 7, scope: !2168)
!2250 = !DILocation(line: 1794, column: 24, scope: !2168)
!2251 = !DILocation(line: 1795, column: 2, scope: !2168)
!2252 = !DILocation(line: 1795, column: 7, scope: !2168)
!2253 = !DILocation(line: 1795, column: 23, scope: !2168)
!2254 = !DILocation(line: 1796, column: 2, scope: !2168)
!2255 = !DILocation(line: 1796, column: 7, scope: !2168)
!2256 = !DILocation(line: 1796, column: 22, scope: !2168)
!2257 = !DILocation(line: 1797, column: 2, scope: !2168)
!2258 = !DILocation(line: 1797, column: 7, scope: !2168)
!2259 = !DILocation(line: 1797, column: 24, scope: !2168)
!2260 = !DILocation(line: 1798, column: 2, scope: !2168)
!2261 = !DILocation(line: 1798, column: 7, scope: !2168)
!2262 = !DILocation(line: 1798, column: 18, scope: !2168)
!2263 = !DILocation(line: 1799, column: 2, scope: !2168)
!2264 = !DILocation(line: 1799, column: 7, scope: !2168)
!2265 = !DILocation(line: 1799, column: 21, scope: !2168)
!2266 = !DILocation(line: 1800, column: 2, scope: !2168)
!2267 = !DILocation(line: 1800, column: 7, scope: !2168)
!2268 = !DILocation(line: 1800, column: 24, scope: !2168)
!2269 = !DILocation(line: 1801, column: 2, scope: !2168)
!2270 = !DILocation(line: 1801, column: 7, scope: !2168)
!2271 = !DILocation(line: 1801, column: 23, scope: !2168)
!2272 = !DILocation(line: 1803, column: 2, scope: !2168)
!2273 = !DILocation(line: 1803, column: 7, scope: !2168)
!2274 = !DILocation(line: 1803, column: 20, scope: !2168)
!2275 = !DILocation(line: 1804, column: 1, scope: !2168)
!2276 = distinct !DISubprogram(name: "ui_hsvcircle_vals_from_pos", scope: !3, file: !3, line: 2096, type: !2277, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !1737, !1737, !2279, !1410, !1410}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!2281 = !DILocalVariable(name: "val_rad", arg: 1, scope: !2276, file: !3, line: 2096, type: !1737)
!2282 = !DILocation(line: 2096, column: 40, scope: !2276)
!2283 = !DILocalVariable(name: "val_dist", arg: 2, scope: !2276, file: !3, line: 2096, type: !1737)
!2284 = !DILocation(line: 2096, column: 56, scope: !2276)
!2285 = !DILocalVariable(name: "rect", arg: 3, scope: !2276, file: !3, line: 2096, type: !2279)
!2286 = !DILocation(line: 2096, column: 78, scope: !2276)
!2287 = !DILocalVariable(name: "mx", arg: 4, scope: !2276, file: !3, line: 2097, type: !1410)
!2288 = !DILocation(line: 2097, column: 45, scope: !2276)
!2289 = !DILocalVariable(name: "my", arg: 5, scope: !2276, file: !3, line: 2097, type: !1410)
!2290 = !DILocation(line: 2097, column: 61, scope: !2276)
!2291 = !DILocalVariable(name: "centx", scope: !2276, file: !3, line: 2100, type: !1410)
!2292 = !DILocation(line: 2100, column: 14, scope: !2276)
!2293 = !DILocation(line: 2100, column: 41, scope: !2276)
!2294 = !DILocation(line: 2100, column: 22, scope: !2276)
!2295 = !DILocalVariable(name: "centy", scope: !2276, file: !3, line: 2101, type: !1410)
!2296 = !DILocation(line: 2101, column: 14, scope: !2276)
!2297 = !DILocation(line: 2101, column: 41, scope: !2276)
!2298 = !DILocation(line: 2101, column: 22, scope: !2276)
!2299 = !DILocalVariable(name: "radius", scope: !2276, file: !3, line: 2102, type: !1410)
!2300 = !DILocation(line: 2102, column: 14, scope: !2276)
!2301 = !DILocation(line: 2102, column: 53, scope: !2276)
!2302 = !DILocation(line: 2102, column: 37, scope: !2276)
!2303 = !DILocation(line: 2102, column: 76, scope: !2276)
!2304 = !DILocation(line: 2102, column: 60, scope: !2276)
!2305 = !DILocation(line: 2102, column: 30, scope: !2276)
!2306 = !DILocation(line: 2102, column: 23, scope: !2276)
!2307 = !DILocation(line: 2102, column: 83, scope: !2276)
!2308 = !DILocalVariable(name: "m_delta", scope: !2276, file: !3, line: 2103, type: !2309)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 64, elements: !1578)
!2310 = !DILocation(line: 2103, column: 14, scope: !2276)
!2311 = !DILocation(line: 2103, column: 27, scope: !2276)
!2312 = !DILocation(line: 2103, column: 28, scope: !2276)
!2313 = !DILocation(line: 2103, column: 33, scope: !2276)
!2314 = !DILocation(line: 2103, column: 31, scope: !2276)
!2315 = !DILocation(line: 2103, column: 40, scope: !2276)
!2316 = !DILocation(line: 2103, column: 45, scope: !2276)
!2317 = !DILocation(line: 2103, column: 43, scope: !2276)
!2318 = !DILocalVariable(name: "dist_sq", scope: !2276, file: !3, line: 2104, type: !1410)
!2319 = !DILocation(line: 2104, column: 14, scope: !2276)
!2320 = !DILocation(line: 2104, column: 39, scope: !2276)
!2321 = !DILocation(line: 2104, column: 24, scope: !2276)
!2322 = !DILocation(line: 2106, column: 15, scope: !2276)
!2323 = !DILocation(line: 2106, column: 26, scope: !2276)
!2324 = !DILocation(line: 2106, column: 35, scope: !2276)
!2325 = !DILocation(line: 2106, column: 33, scope: !2276)
!2326 = !DILocation(line: 2106, column: 23, scope: !2276)
!2327 = !DILocation(line: 2106, column: 14, scope: !2276)
!2328 = !DILocation(line: 2106, column: 52, scope: !2276)
!2329 = !DILocation(line: 2106, column: 46, scope: !2276)
!2330 = !DILocation(line: 2106, column: 63, scope: !2276)
!2331 = !DILocation(line: 2106, column: 61, scope: !2276)
!2332 = !DILocation(line: 2106, column: 3, scope: !2276)
!2333 = !DILocation(line: 2106, column: 12, scope: !2276)
!2334 = !DILocation(line: 2107, column: 20, scope: !2276)
!2335 = !DILocation(line: 2107, column: 32, scope: !2276)
!2336 = !DILocation(line: 2107, column: 13, scope: !2276)
!2337 = !DILocation(line: 2107, column: 44, scope: !2276)
!2338 = !DILocation(line: 2107, column: 67, scope: !2276)
!2339 = !DILocation(line: 2107, column: 3, scope: !2276)
!2340 = !DILocation(line: 2107, column: 11, scope: !2276)
!2341 = !DILocation(line: 2108, column: 1, scope: !2276)
!2342 = distinct !DISubprogram(name: "BLI_rcti_cent_x_fl", scope: !2343, file: !2343, line: 98, type: !2344, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2343 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!1253, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!2348 = !DILocalVariable(name: "rct", arg: 1, scope: !2342, file: !2343, line: 98, type: !2346)
!2349 = !DILocation(line: 98, column: 56, scope: !2342)
!2350 = !DILocation(line: 98, column: 78, scope: !2342)
!2351 = !DILocation(line: 98, column: 83, scope: !2342)
!2352 = !DILocation(line: 98, column: 90, scope: !2342)
!2353 = !DILocation(line: 98, column: 95, scope: !2342)
!2354 = !DILocation(line: 98, column: 88, scope: !2342)
!2355 = !DILocation(line: 98, column: 70, scope: !2342)
!2356 = !DILocation(line: 98, column: 101, scope: !2342)
!2357 = !DILocation(line: 98, column: 63, scope: !2342)
!2358 = distinct !DISubprogram(name: "BLI_rcti_cent_y_fl", scope: !2343, file: !2343, line: 99, type: !2344, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2359 = !DILocalVariable(name: "rct", arg: 1, scope: !2358, file: !2343, line: 99, type: !2346)
!2360 = !DILocation(line: 99, column: 56, scope: !2358)
!2361 = !DILocation(line: 99, column: 78, scope: !2358)
!2362 = !DILocation(line: 99, column: 83, scope: !2358)
!2363 = !DILocation(line: 99, column: 90, scope: !2358)
!2364 = !DILocation(line: 99, column: 95, scope: !2358)
!2365 = !DILocation(line: 99, column: 88, scope: !2358)
!2366 = !DILocation(line: 99, column: 70, scope: !2358)
!2367 = !DILocation(line: 99, column: 101, scope: !2358)
!2368 = !DILocation(line: 99, column: 63, scope: !2358)
!2369 = distinct !DISubprogram(name: "min_ii", scope: !2370, file: !2370, line: 211, type: !2371, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2370 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!1254, !1254, !1254}
!2373 = !DILocalVariable(name: "a", arg: 1, scope: !2369, file: !2370, line: 211, type: !1254)
!2374 = !DILocation(line: 211, column: 24, scope: !2369)
!2375 = !DILocalVariable(name: "b", arg: 2, scope: !2369, file: !2370, line: 211, type: !1254)
!2376 = !DILocation(line: 211, column: 31, scope: !2369)
!2377 = !DILocation(line: 213, column: 10, scope: !2369)
!2378 = !DILocation(line: 213, column: 14, scope: !2369)
!2379 = !DILocation(line: 213, column: 12, scope: !2369)
!2380 = !DILocation(line: 213, column: 9, scope: !2369)
!2381 = !DILocation(line: 213, column: 19, scope: !2369)
!2382 = !DILocation(line: 213, column: 23, scope: !2369)
!2383 = !DILocation(line: 213, column: 2, scope: !2369)
!2384 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !2343, file: !2343, line: 105, type: !2385, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!1254, !2346}
!2387 = !DILocalVariable(name: "rct", arg: 1, scope: !2384, file: !2343, line: 105, type: !2346)
!2388 = !DILocation(line: 105, column: 53, scope: !2384)
!2389 = !DILocation(line: 105, column: 68, scope: !2384)
!2390 = !DILocation(line: 105, column: 73, scope: !2384)
!2391 = !DILocation(line: 105, column: 80, scope: !2384)
!2392 = !DILocation(line: 105, column: 85, scope: !2384)
!2393 = !DILocation(line: 105, column: 78, scope: !2384)
!2394 = !DILocation(line: 105, column: 60, scope: !2384)
!2395 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !2343, file: !2343, line: 106, type: !2385, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2396 = !DILocalVariable(name: "rct", arg: 1, scope: !2395, file: !2343, line: 106, type: !2346)
!2397 = !DILocation(line: 106, column: 53, scope: !2395)
!2398 = !DILocation(line: 106, column: 68, scope: !2395)
!2399 = !DILocation(line: 106, column: 73, scope: !2395)
!2400 = !DILocation(line: 106, column: 80, scope: !2395)
!2401 = !DILocation(line: 106, column: 85, scope: !2395)
!2402 = !DILocation(line: 106, column: 78, scope: !2395)
!2403 = !DILocation(line: 106, column: 60, scope: !2395)
!2404 = distinct !DISubprogram(name: "len_squared_v2", scope: !2405, file: !2405, line: 666, type: !2406, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2405 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!1253, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!2409 = !DILocalVariable(name: "v", arg: 1, scope: !2404, file: !2405, line: 666, type: !2408)
!2410 = !DILocation(line: 666, column: 42, scope: !2404)
!2411 = !DILocation(line: 668, column: 9, scope: !2404)
!2412 = !DILocation(line: 668, column: 16, scope: !2404)
!2413 = !DILocation(line: 668, column: 14, scope: !2404)
!2414 = !DILocation(line: 668, column: 23, scope: !2404)
!2415 = !DILocation(line: 668, column: 30, scope: !2404)
!2416 = !DILocation(line: 668, column: 28, scope: !2404)
!2417 = !DILocation(line: 668, column: 21, scope: !2404)
!2418 = !DILocation(line: 668, column: 2, scope: !2404)
!2419 = distinct !DISubprogram(name: "ui_hsvcircle_pos_from_vals", scope: !3, file: !3, line: 2111, type: !2420, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{null, !1464, !2279, !1737, !1737, !1737}
!2422 = !DILocalVariable(name: "but", arg: 1, scope: !2419, file: !3, line: 2111, type: !1464)
!2423 = !DILocation(line: 2111, column: 40, scope: !2419)
!2424 = !DILocalVariable(name: "rect", arg: 2, scope: !2419, file: !3, line: 2111, type: !2279)
!2425 = !DILocation(line: 2111, column: 57, scope: !2419)
!2426 = !DILocalVariable(name: "hsv", arg: 3, scope: !2419, file: !3, line: 2111, type: !1737)
!2427 = !DILocation(line: 2111, column: 70, scope: !2419)
!2428 = !DILocalVariable(name: "xpos", arg: 4, scope: !2419, file: !3, line: 2111, type: !1737)
!2429 = !DILocation(line: 2111, column: 82, scope: !2419)
!2430 = !DILocalVariable(name: "ypos", arg: 5, scope: !2419, file: !3, line: 2111, type: !1737)
!2431 = !DILocation(line: 2111, column: 95, scope: !2419)
!2432 = !DILocalVariable(name: "centx", scope: !2419, file: !3, line: 2114, type: !1410)
!2433 = !DILocation(line: 2114, column: 14, scope: !2419)
!2434 = !DILocation(line: 2114, column: 41, scope: !2419)
!2435 = !DILocation(line: 2114, column: 22, scope: !2419)
!2436 = !DILocalVariable(name: "centy", scope: !2419, file: !3, line: 2115, type: !1410)
!2437 = !DILocation(line: 2115, column: 14, scope: !2419)
!2438 = !DILocation(line: 2115, column: 41, scope: !2419)
!2439 = !DILocation(line: 2115, column: 22, scope: !2419)
!2440 = !DILocalVariable(name: "radius", scope: !2419, file: !3, line: 2116, type: !1253)
!2441 = !DILocation(line: 2116, column: 8, scope: !2419)
!2442 = !DILocation(line: 2116, column: 47, scope: !2419)
!2443 = !DILocation(line: 2116, column: 31, scope: !2419)
!2444 = !DILocation(line: 2116, column: 70, scope: !2419)
!2445 = !DILocation(line: 2116, column: 54, scope: !2419)
!2446 = !DILocation(line: 2116, column: 24, scope: !2419)
!2447 = !DILocation(line: 2116, column: 17, scope: !2419)
!2448 = !DILocation(line: 2116, column: 77, scope: !2419)
!2449 = !DILocalVariable(name: "ang", scope: !2419, file: !3, line: 2117, type: !1253)
!2450 = !DILocation(line: 2117, column: 8, scope: !2419)
!2451 = !DILocalVariable(name: "radius_t", scope: !2419, file: !3, line: 2117, type: !1253)
!2452 = !DILocation(line: 2117, column: 13, scope: !2419)
!2453 = !DILocation(line: 2119, column: 29, scope: !2419)
!2454 = !DILocation(line: 2119, column: 27, scope: !2419)
!2455 = !DILocation(line: 2119, column: 36, scope: !2419)
!2456 = !DILocation(line: 2119, column: 6, scope: !2419)
!2457 = !DILocation(line: 2121, column: 7, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2419, file: !3, line: 2121, column: 6)
!2459 = !DILocation(line: 2121, column: 12, scope: !2458)
!2460 = !DILocation(line: 2121, column: 17, scope: !2458)
!2461 = !DILocation(line: 2121, column: 39, scope: !2458)
!2462 = !DILocation(line: 2121, column: 45, scope: !2458)
!2463 = !DILocation(line: 2121, column: 43, scope: !2458)
!2464 = !DILocation(line: 2121, column: 63, scope: !2458)
!2465 = !DILocation(line: 2121, column: 6, scope: !2419)
!2466 = !DILocation(line: 2122, column: 34, scope: !2458)
!2467 = !DILocation(line: 2122, column: 32, scope: !2458)
!2468 = !DILocation(line: 2122, column: 22, scope: !2458)
!2469 = !DILocation(line: 2122, column: 20, scope: !2458)
!2470 = !DILocation(line: 2122, column: 12, scope: !2458)
!2471 = !DILocation(line: 2122, column: 3, scope: !2458)
!2472 = !DILocation(line: 2124, column: 14, scope: !2458)
!2473 = !DILocation(line: 2124, column: 12, scope: !2458)
!2474 = !DILocation(line: 2126, column: 11, scope: !2419)
!2475 = !DILocation(line: 2126, column: 43, scope: !2419)
!2476 = !DILocation(line: 2126, column: 41, scope: !2419)
!2477 = !DILocation(line: 2126, column: 9, scope: !2419)
!2478 = !DILocation(line: 2127, column: 10, scope: !2419)
!2479 = !DILocation(line: 2127, column: 24, scope: !2419)
!2480 = !DILocation(line: 2127, column: 23, scope: !2419)
!2481 = !DILocation(line: 2127, column: 18, scope: !2419)
!2482 = !DILocation(line: 2127, column: 31, scope: !2419)
!2483 = !DILocation(line: 2127, column: 29, scope: !2419)
!2484 = !DILocation(line: 2127, column: 16, scope: !2419)
!2485 = !DILocation(line: 2127, column: 3, scope: !2419)
!2486 = !DILocation(line: 2127, column: 8, scope: !2419)
!2487 = !DILocation(line: 2128, column: 10, scope: !2419)
!2488 = !DILocation(line: 2128, column: 24, scope: !2419)
!2489 = !DILocation(line: 2128, column: 23, scope: !2419)
!2490 = !DILocation(line: 2128, column: 18, scope: !2419)
!2491 = !DILocation(line: 2128, column: 31, scope: !2419)
!2492 = !DILocation(line: 2128, column: 29, scope: !2419)
!2493 = !DILocation(line: 2128, column: 16, scope: !2419)
!2494 = !DILocation(line: 2128, column: 3, scope: !2419)
!2495 = !DILocation(line: 2128, column: 8, scope: !2419)
!2496 = !DILocation(line: 2129, column: 1, scope: !2419)
!2497 = distinct !DISubprogram(name: "ui_draw_gradient", scope: !3, file: !3, line: 2215, type: !2498, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2279, !2408, !2500, !1410}
!2500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!2501 = !DILocalVariable(name: "rect", arg: 1, scope: !2497, file: !3, line: 2215, type: !2279)
!2502 = !DILocation(line: 2215, column: 35, scope: !2497)
!2503 = !DILocalVariable(name: "hsv", arg: 2, scope: !2497, file: !3, line: 2215, type: !2408)
!2504 = !DILocation(line: 2215, column: 53, scope: !2497)
!2505 = !DILocalVariable(name: "type", arg: 3, scope: !2497, file: !3, line: 2215, type: !2500)
!2506 = !DILocation(line: 2215, column: 71, scope: !2497)
!2507 = !DILocalVariable(name: "alpha", arg: 4, scope: !2497, file: !3, line: 2215, type: !1410)
!2508 = !DILocation(line: 2215, column: 89, scope: !2497)
!2509 = !DILocalVariable(name: "color_step", scope: !2497, file: !3, line: 2218, type: !1410)
!2510 = !DILocation(line: 2218, column: 14, scope: !2497)
!2511 = !DILocalVariable(name: "a", scope: !2497, file: !3, line: 2219, type: !1254)
!2512 = !DILocation(line: 2219, column: 6, scope: !2497)
!2513 = !DILocalVariable(name: "h", scope: !2497, file: !3, line: 2220, type: !1253)
!2514 = !DILocation(line: 2220, column: 8, scope: !2497)
!2515 = !DILocation(line: 2220, column: 12, scope: !2497)
!2516 = !DILocalVariable(name: "s", scope: !2497, file: !3, line: 2220, type: !1253)
!2517 = !DILocation(line: 2220, column: 20, scope: !2497)
!2518 = !DILocation(line: 2220, column: 24, scope: !2497)
!2519 = !DILocalVariable(name: "v", scope: !2497, file: !3, line: 2220, type: !1253)
!2520 = !DILocation(line: 2220, column: 32, scope: !2497)
!2521 = !DILocation(line: 2220, column: 36, scope: !2497)
!2522 = !DILocalVariable(name: "dx", scope: !2497, file: !3, line: 2221, type: !1253)
!2523 = !DILocation(line: 2221, column: 8, scope: !2497)
!2524 = !DILocalVariable(name: "dy", scope: !2497, file: !3, line: 2221, type: !1253)
!2525 = !DILocation(line: 2221, column: 12, scope: !2497)
!2526 = !DILocalVariable(name: "sx1", scope: !2497, file: !3, line: 2221, type: !1253)
!2527 = !DILocation(line: 2221, column: 16, scope: !2497)
!2528 = !DILocalVariable(name: "sx2", scope: !2497, file: !3, line: 2221, type: !1253)
!2529 = !DILocation(line: 2221, column: 21, scope: !2497)
!2530 = !DILocalVariable(name: "sy", scope: !2497, file: !3, line: 2221, type: !1253)
!2531 = !DILocation(line: 2221, column: 26, scope: !2497)
!2532 = !DILocalVariable(name: "col0", scope: !2497, file: !3, line: 2222, type: !2533)
!2533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 384, elements: !1998)
!2534 = !DILocation(line: 2222, column: 8, scope: !2497)
!2535 = !DILocalVariable(name: "col1", scope: !2497, file: !3, line: 2223, type: !2533)
!2536 = !DILocation(line: 2223, column: 8, scope: !2497)
!2537 = !DILocation(line: 2226, column: 2, scope: !2497)
!2538 = !DILocation(line: 2228, column: 10, scope: !2497)
!2539 = !DILocation(line: 2228, column: 2, scope: !2497)
!2540 = !DILocation(line: 2230, column: 15, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2497, file: !3, line: 2228, column: 16)
!2542 = !DILocation(line: 2230, column: 31, scope: !2541)
!2543 = !DILocation(line: 2230, column: 44, scope: !2541)
!2544 = !DILocation(line: 2230, column: 57, scope: !2541)
!2545 = !DILocation(line: 2230, column: 4, scope: !2541)
!2546 = !DILocation(line: 2231, column: 15, scope: !2541)
!2547 = !DILocation(line: 2231, column: 31, scope: !2541)
!2548 = !DILocation(line: 2231, column: 44, scope: !2541)
!2549 = !DILocation(line: 2231, column: 57, scope: !2541)
!2550 = !DILocation(line: 2231, column: 4, scope: !2541)
!2551 = !DILocation(line: 2232, column: 15, scope: !2541)
!2552 = !DILocation(line: 2232, column: 31, scope: !2541)
!2553 = !DILocation(line: 2232, column: 44, scope: !2541)
!2554 = !DILocation(line: 2232, column: 57, scope: !2541)
!2555 = !DILocation(line: 2232, column: 4, scope: !2541)
!2556 = !DILocation(line: 2233, column: 15, scope: !2541)
!2557 = !DILocation(line: 2233, column: 31, scope: !2541)
!2558 = !DILocation(line: 2233, column: 44, scope: !2541)
!2559 = !DILocation(line: 2233, column: 57, scope: !2541)
!2560 = !DILocation(line: 2233, column: 4, scope: !2541)
!2561 = !DILocation(line: 2234, column: 4, scope: !2541)
!2562 = !DILocation(line: 2236, column: 20, scope: !2541)
!2563 = !DILocation(line: 2236, column: 31, scope: !2541)
!2564 = !DILocation(line: 2236, column: 44, scope: !2541)
!2565 = !DILocation(line: 2236, column: 57, scope: !2541)
!2566 = !DILocation(line: 2236, column: 4, scope: !2541)
!2567 = !DILocation(line: 2237, column: 20, scope: !2541)
!2568 = !DILocation(line: 2237, column: 31, scope: !2541)
!2569 = !DILocation(line: 2237, column: 44, scope: !2541)
!2570 = !DILocation(line: 2237, column: 57, scope: !2541)
!2571 = !DILocation(line: 2237, column: 4, scope: !2541)
!2572 = !DILocation(line: 2238, column: 20, scope: !2541)
!2573 = !DILocation(line: 2238, column: 31, scope: !2541)
!2574 = !DILocation(line: 2238, column: 44, scope: !2541)
!2575 = !DILocation(line: 2238, column: 57, scope: !2541)
!2576 = !DILocation(line: 2238, column: 4, scope: !2541)
!2577 = !DILocation(line: 2239, column: 20, scope: !2541)
!2578 = !DILocation(line: 2239, column: 31, scope: !2541)
!2579 = !DILocation(line: 2239, column: 44, scope: !2541)
!2580 = !DILocation(line: 2239, column: 57, scope: !2541)
!2581 = !DILocation(line: 2239, column: 4, scope: !2541)
!2582 = !DILocation(line: 2240, column: 4, scope: !2541)
!2583 = !DILocation(line: 2242, column: 25, scope: !2541)
!2584 = !DILocation(line: 2242, column: 31, scope: !2541)
!2585 = !DILocation(line: 2242, column: 44, scope: !2541)
!2586 = !DILocation(line: 2242, column: 57, scope: !2541)
!2587 = !DILocation(line: 2242, column: 4, scope: !2541)
!2588 = !DILocation(line: 2243, column: 27, scope: !2541)
!2589 = !DILocation(line: 2243, column: 31, scope: !2541)
!2590 = !DILocation(line: 2243, column: 44, scope: !2541)
!2591 = !DILocation(line: 2243, column: 57, scope: !2541)
!2592 = !DILocation(line: 2243, column: 4, scope: !2541)
!2593 = !DILocation(line: 2244, column: 27, scope: !2541)
!2594 = !DILocation(line: 2244, column: 31, scope: !2541)
!2595 = !DILocation(line: 2244, column: 44, scope: !2541)
!2596 = !DILocation(line: 2244, column: 57, scope: !2541)
!2597 = !DILocation(line: 2244, column: 4, scope: !2541)
!2598 = !DILocation(line: 2245, column: 25, scope: !2541)
!2599 = !DILocation(line: 2245, column: 31, scope: !2541)
!2600 = !DILocation(line: 2245, column: 44, scope: !2541)
!2601 = !DILocation(line: 2245, column: 57, scope: !2541)
!2602 = !DILocation(line: 2245, column: 4, scope: !2541)
!2603 = !DILocation(line: 2246, column: 4, scope: !2541)
!2604 = !DILocation(line: 2248, column: 33, scope: !2541)
!2605 = !DILocation(line: 2248, column: 46, scope: !2541)
!2606 = !DILocation(line: 2248, column: 59, scope: !2541)
!2607 = !DILocation(line: 2248, column: 4, scope: !2541)
!2608 = !DILocation(line: 2249, column: 15, scope: !2541)
!2609 = !DILocation(line: 2249, column: 24, scope: !2541)
!2610 = !DILocation(line: 2249, column: 4, scope: !2541)
!2611 = !DILocation(line: 2250, column: 15, scope: !2541)
!2612 = !DILocation(line: 2250, column: 24, scope: !2541)
!2613 = !DILocation(line: 2250, column: 4, scope: !2541)
!2614 = !DILocation(line: 2251, column: 15, scope: !2541)
!2615 = !DILocation(line: 2251, column: 24, scope: !2541)
!2616 = !DILocation(line: 2251, column: 4, scope: !2541)
!2617 = !DILocation(line: 2252, column: 4, scope: !2541)
!2618 = !DILocation(line: 2254, column: 33, scope: !2541)
!2619 = !DILocation(line: 2254, column: 46, scope: !2541)
!2620 = !DILocation(line: 2254, column: 59, scope: !2541)
!2621 = !DILocation(line: 2254, column: 4, scope: !2541)
!2622 = !DILocation(line: 2255, column: 15, scope: !2541)
!2623 = !DILocation(line: 2255, column: 24, scope: !2541)
!2624 = !DILocation(line: 2255, column: 4, scope: !2541)
!2625 = !DILocation(line: 2256, column: 15, scope: !2541)
!2626 = !DILocation(line: 2256, column: 24, scope: !2541)
!2627 = !DILocation(line: 2256, column: 4, scope: !2541)
!2628 = !DILocation(line: 2257, column: 15, scope: !2541)
!2629 = !DILocation(line: 2257, column: 24, scope: !2541)
!2630 = !DILocation(line: 2257, column: 4, scope: !2541)
!2631 = !DILocation(line: 2258, column: 4, scope: !2541)
!2632 = !DILocation(line: 2260, column: 33, scope: !2541)
!2633 = !DILocation(line: 2260, column: 46, scope: !2541)
!2634 = !DILocation(line: 2260, column: 59, scope: !2541)
!2635 = !DILocation(line: 2260, column: 4, scope: !2541)
!2636 = !DILocation(line: 2261, column: 15, scope: !2541)
!2637 = !DILocation(line: 2261, column: 24, scope: !2541)
!2638 = !DILocation(line: 2261, column: 4, scope: !2541)
!2639 = !DILocation(line: 2262, column: 15, scope: !2541)
!2640 = !DILocation(line: 2262, column: 24, scope: !2541)
!2641 = !DILocation(line: 2262, column: 4, scope: !2541)
!2642 = !DILocation(line: 2263, column: 15, scope: !2541)
!2643 = !DILocation(line: 2263, column: 24, scope: !2541)
!2644 = !DILocation(line: 2263, column: 4, scope: !2541)
!2645 = !DILocation(line: 2264, column: 4, scope: !2541)
!2646 = !DILocation(line: 2267, column: 33, scope: !2541)
!2647 = !DILocation(line: 2267, column: 46, scope: !2541)
!2648 = !DILocation(line: 2267, column: 59, scope: !2541)
!2649 = !DILocation(line: 2267, column: 4, scope: !2541)
!2650 = !DILocation(line: 2268, column: 15, scope: !2541)
!2651 = !DILocation(line: 2268, column: 24, scope: !2541)
!2652 = !DILocation(line: 2268, column: 4, scope: !2541)
!2653 = !DILocation(line: 2269, column: 15, scope: !2541)
!2654 = !DILocation(line: 2269, column: 24, scope: !2541)
!2655 = !DILocation(line: 2269, column: 4, scope: !2541)
!2656 = !DILocation(line: 2270, column: 15, scope: !2541)
!2657 = !DILocation(line: 2270, column: 24, scope: !2541)
!2658 = !DILocation(line: 2270, column: 4, scope: !2541)
!2659 = !DILocation(line: 2271, column: 4, scope: !2541)
!2660 = !DILocation(line: 2276, column: 10, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2497, file: !3, line: 2276, column: 2)
!2662 = !DILocation(line: 2276, column: 7, scope: !2661)
!2663 = !DILocation(line: 2276, column: 18, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 2276, column: 2)
!2665 = !DILocation(line: 2276, column: 21, scope: !2664)
!2666 = !DILocation(line: 2276, column: 2, scope: !2661)
!2667 = !DILocalVariable(name: "dx_next", scope: !2668, file: !3, line: 2277, type: !1410)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 2276, column: 49)
!2669 = !DILocation(line: 2277, column: 15, scope: !2668)
!2670 = !DILocation(line: 2277, column: 25, scope: !2668)
!2671 = !DILocation(line: 2277, column: 28, scope: !2668)
!2672 = !DILocation(line: 2280, column: 14, scope: !2668)
!2673 = !DILocation(line: 2280, column: 23, scope: !2668)
!2674 = !DILocation(line: 2280, column: 3, scope: !2668)
!2675 = !DILocation(line: 2281, column: 14, scope: !2668)
!2676 = !DILocation(line: 2281, column: 23, scope: !2668)
!2677 = !DILocation(line: 2281, column: 3, scope: !2668)
!2678 = !DILocation(line: 2282, column: 14, scope: !2668)
!2679 = !DILocation(line: 2282, column: 23, scope: !2668)
!2680 = !DILocation(line: 2282, column: 3, scope: !2668)
!2681 = !DILocation(line: 2283, column: 14, scope: !2668)
!2682 = !DILocation(line: 2283, column: 23, scope: !2668)
!2683 = !DILocation(line: 2283, column: 3, scope: !2668)
!2684 = !DILocation(line: 2286, column: 11, scope: !2668)
!2685 = !DILocation(line: 2286, column: 3, scope: !2668)
!2686 = !DILocation(line: 2288, column: 16, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 2286, column: 17)
!2688 = !DILocation(line: 2288, column: 24, scope: !2687)
!2689 = !DILocation(line: 2288, column: 31, scope: !2687)
!2690 = !DILocation(line: 2288, column: 44, scope: !2687)
!2691 = !DILocation(line: 2288, column: 57, scope: !2687)
!2692 = !DILocation(line: 2288, column: 5, scope: !2687)
!2693 = !DILocation(line: 2289, column: 16, scope: !2687)
!2694 = !DILocation(line: 2289, column: 26, scope: !2687)
!2695 = !DILocation(line: 2289, column: 31, scope: !2687)
!2696 = !DILocation(line: 2289, column: 44, scope: !2687)
!2697 = !DILocation(line: 2289, column: 57, scope: !2687)
!2698 = !DILocation(line: 2289, column: 5, scope: !2687)
!2699 = !DILocation(line: 2290, column: 16, scope: !2687)
!2700 = !DILocation(line: 2290, column: 26, scope: !2687)
!2701 = !DILocation(line: 2290, column: 31, scope: !2687)
!2702 = !DILocation(line: 2290, column: 44, scope: !2687)
!2703 = !DILocation(line: 2290, column: 57, scope: !2687)
!2704 = !DILocation(line: 2290, column: 5, scope: !2687)
!2705 = !DILocation(line: 2291, column: 16, scope: !2687)
!2706 = !DILocation(line: 2291, column: 24, scope: !2687)
!2707 = !DILocation(line: 2291, column: 31, scope: !2687)
!2708 = !DILocation(line: 2291, column: 44, scope: !2687)
!2709 = !DILocation(line: 2291, column: 57, scope: !2687)
!2710 = !DILocation(line: 2291, column: 5, scope: !2687)
!2711 = !DILocation(line: 2292, column: 5, scope: !2687)
!2712 = !DILocation(line: 2294, column: 16, scope: !2687)
!2713 = !DILocation(line: 2294, column: 25, scope: !2687)
!2714 = !DILocation(line: 2294, column: 36, scope: !2687)
!2715 = !DILocation(line: 2294, column: 49, scope: !2687)
!2716 = !DILocation(line: 2294, column: 62, scope: !2687)
!2717 = !DILocation(line: 2294, column: 5, scope: !2687)
!2718 = !DILocation(line: 2295, column: 16, scope: !2687)
!2719 = !DILocation(line: 2295, column: 25, scope: !2687)
!2720 = !DILocation(line: 2295, column: 36, scope: !2687)
!2721 = !DILocation(line: 2295, column: 49, scope: !2687)
!2722 = !DILocation(line: 2295, column: 62, scope: !2687)
!2723 = !DILocation(line: 2295, column: 5, scope: !2687)
!2724 = !DILocation(line: 2296, column: 16, scope: !2687)
!2725 = !DILocation(line: 2296, column: 25, scope: !2687)
!2726 = !DILocation(line: 2296, column: 36, scope: !2687)
!2727 = !DILocation(line: 2296, column: 49, scope: !2687)
!2728 = !DILocation(line: 2296, column: 62, scope: !2687)
!2729 = !DILocation(line: 2296, column: 5, scope: !2687)
!2730 = !DILocation(line: 2297, column: 16, scope: !2687)
!2731 = !DILocation(line: 2297, column: 25, scope: !2687)
!2732 = !DILocation(line: 2297, column: 36, scope: !2687)
!2733 = !DILocation(line: 2297, column: 49, scope: !2687)
!2734 = !DILocation(line: 2297, column: 62, scope: !2687)
!2735 = !DILocation(line: 2297, column: 5, scope: !2687)
!2736 = !DILocation(line: 2298, column: 5, scope: !2687)
!2737 = !DILocation(line: 2300, column: 16, scope: !2687)
!2738 = !DILocation(line: 2300, column: 30, scope: !2687)
!2739 = !DILocation(line: 2300, column: 36, scope: !2687)
!2740 = !DILocation(line: 2300, column: 49, scope: !2687)
!2741 = !DILocation(line: 2300, column: 62, scope: !2687)
!2742 = !DILocation(line: 2300, column: 5, scope: !2687)
!2743 = !DILocation(line: 2301, column: 16, scope: !2687)
!2744 = !DILocation(line: 2301, column: 32, scope: !2687)
!2745 = !DILocation(line: 2301, column: 36, scope: !2687)
!2746 = !DILocation(line: 2301, column: 49, scope: !2687)
!2747 = !DILocation(line: 2301, column: 62, scope: !2687)
!2748 = !DILocation(line: 2301, column: 5, scope: !2687)
!2749 = !DILocation(line: 2302, column: 16, scope: !2687)
!2750 = !DILocation(line: 2302, column: 32, scope: !2687)
!2751 = !DILocation(line: 2302, column: 36, scope: !2687)
!2752 = !DILocation(line: 2302, column: 49, scope: !2687)
!2753 = !DILocation(line: 2302, column: 62, scope: !2687)
!2754 = !DILocation(line: 2302, column: 5, scope: !2687)
!2755 = !DILocation(line: 2303, column: 16, scope: !2687)
!2756 = !DILocation(line: 2303, column: 30, scope: !2687)
!2757 = !DILocation(line: 2303, column: 36, scope: !2687)
!2758 = !DILocation(line: 2303, column: 49, scope: !2687)
!2759 = !DILocation(line: 2303, column: 62, scope: !2687)
!2760 = !DILocation(line: 2303, column: 5, scope: !2687)
!2761 = !DILocation(line: 2304, column: 5, scope: !2687)
!2762 = !DILocation(line: 2309, column: 16, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 2306, column: 4)
!2764 = !DILocation(line: 2309, column: 38, scope: !2763)
!2765 = !DILocation(line: 2309, column: 51, scope: !2763)
!2766 = !DILocation(line: 2309, column: 64, scope: !2763)
!2767 = !DILocation(line: 2309, column: 5, scope: !2763)
!2768 = !DILocation(line: 2310, column: 16, scope: !2763)
!2769 = !DILocation(line: 2310, column: 25, scope: !2763)
!2770 = !DILocation(line: 2310, column: 5, scope: !2763)
!2771 = !DILocation(line: 2311, column: 16, scope: !2763)
!2772 = !DILocation(line: 2311, column: 25, scope: !2763)
!2773 = !DILocation(line: 2311, column: 5, scope: !2763)
!2774 = !DILocation(line: 2312, column: 16, scope: !2763)
!2775 = !DILocation(line: 2312, column: 25, scope: !2763)
!2776 = !DILocation(line: 2312, column: 5, scope: !2763)
!2777 = !DILocation(line: 2313, column: 5, scope: !2763)
!2778 = !DILocation(line: 2316, column: 16, scope: !2687)
!2779 = !DILocation(line: 2316, column: 19, scope: !2687)
!2780 = !DILocation(line: 2316, column: 31, scope: !2687)
!2781 = !DILocation(line: 2316, column: 44, scope: !2687)
!2782 = !DILocation(line: 2316, column: 57, scope: !2687)
!2783 = !DILocation(line: 2316, column: 5, scope: !2687)
!2784 = !DILocation(line: 2317, column: 16, scope: !2687)
!2785 = !DILocation(line: 2317, column: 25, scope: !2687)
!2786 = !DILocation(line: 2317, column: 5, scope: !2687)
!2787 = !DILocation(line: 2318, column: 16, scope: !2687)
!2788 = !DILocation(line: 2318, column: 25, scope: !2687)
!2789 = !DILocation(line: 2318, column: 5, scope: !2687)
!2790 = !DILocation(line: 2319, column: 16, scope: !2687)
!2791 = !DILocation(line: 2319, column: 25, scope: !2687)
!2792 = !DILocation(line: 2319, column: 5, scope: !2687)
!2793 = !DILocation(line: 2320, column: 5, scope: !2687)
!2794 = !DILocation(line: 2322, column: 16, scope: !2687)
!2795 = !DILocation(line: 2322, column: 24, scope: !2687)
!2796 = !DILocation(line: 2322, column: 31, scope: !2687)
!2797 = !DILocation(line: 2322, column: 44, scope: !2687)
!2798 = !DILocation(line: 2322, column: 57, scope: !2687)
!2799 = !DILocation(line: 2322, column: 5, scope: !2687)
!2800 = !DILocation(line: 2323, column: 16, scope: !2687)
!2801 = !DILocation(line: 2323, column: 25, scope: !2687)
!2802 = !DILocation(line: 2323, column: 5, scope: !2687)
!2803 = !DILocation(line: 2324, column: 16, scope: !2687)
!2804 = !DILocation(line: 2324, column: 25, scope: !2687)
!2805 = !DILocation(line: 2324, column: 5, scope: !2687)
!2806 = !DILocation(line: 2325, column: 16, scope: !2687)
!2807 = !DILocation(line: 2325, column: 25, scope: !2687)
!2808 = !DILocation(line: 2325, column: 5, scope: !2687)
!2809 = !DILocation(line: 2326, column: 5, scope: !2687)
!2810 = !DILocation(line: 2330, column: 9, scope: !2668)
!2811 = !DILocation(line: 2330, column: 15, scope: !2668)
!2812 = !DILocation(line: 2330, column: 22, scope: !2668)
!2813 = !DILocation(line: 2330, column: 48, scope: !2668)
!2814 = !DILocation(line: 2330, column: 32, scope: !2668)
!2815 = !DILocation(line: 2330, column: 30, scope: !2668)
!2816 = !DILocation(line: 2330, column: 20, scope: !2668)
!2817 = !DILocation(line: 2330, column: 7, scope: !2668)
!2818 = !DILocation(line: 2331, column: 9, scope: !2668)
!2819 = !DILocation(line: 2331, column: 15, scope: !2668)
!2820 = !DILocation(line: 2331, column: 22, scope: !2668)
!2821 = !DILocation(line: 2331, column: 48, scope: !2668)
!2822 = !DILocation(line: 2331, column: 32, scope: !2668)
!2823 = !DILocation(line: 2331, column: 30, scope: !2668)
!2824 = !DILocation(line: 2331, column: 20, scope: !2668)
!2825 = !DILocation(line: 2331, column: 7, scope: !2668)
!2826 = !DILocation(line: 2332, column: 8, scope: !2668)
!2827 = !DILocation(line: 2332, column: 14, scope: !2668)
!2828 = !DILocation(line: 2332, column: 6, scope: !2668)
!2829 = !DILocation(line: 2333, column: 31, scope: !2668)
!2830 = !DILocation(line: 2333, column: 15, scope: !2668)
!2831 = !DILocation(line: 2333, column: 8, scope: !2668)
!2832 = !DILocation(line: 2333, column: 37, scope: !2668)
!2833 = !DILocation(line: 2333, column: 6, scope: !2668)
!2834 = !DILocation(line: 2335, column: 3, scope: !2668)
!2835 = !DILocation(line: 2336, column: 10, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 2336, column: 3)
!2837 = !DILocation(line: 2336, column: 8, scope: !2836)
!2838 = !DILocation(line: 2336, column: 15, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 2336, column: 3)
!2840 = !DILocation(line: 2336, column: 17, scope: !2839)
!2841 = !DILocation(line: 2336, column: 3, scope: !2836)
!2842 = !DILocation(line: 2337, column: 19, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 2336, column: 37)
!2844 = !DILocation(line: 2337, column: 14, scope: !2843)
!2845 = !DILocation(line: 2337, column: 31, scope: !2843)
!2846 = !DILocation(line: 2337, column: 26, scope: !2843)
!2847 = !DILocation(line: 2337, column: 43, scope: !2843)
!2848 = !DILocation(line: 2337, column: 38, scope: !2843)
!2849 = !DILocation(line: 2337, column: 50, scope: !2843)
!2850 = !DILocation(line: 2337, column: 4, scope: !2843)
!2851 = !DILocation(line: 2338, column: 15, scope: !2843)
!2852 = !DILocation(line: 2338, column: 20, scope: !2843)
!2853 = !DILocation(line: 2338, column: 4, scope: !2843)
!2854 = !DILocation(line: 2340, column: 19, scope: !2843)
!2855 = !DILocation(line: 2340, column: 14, scope: !2843)
!2856 = !DILocation(line: 2340, column: 31, scope: !2843)
!2857 = !DILocation(line: 2340, column: 26, scope: !2843)
!2858 = !DILocation(line: 2340, column: 43, scope: !2843)
!2859 = !DILocation(line: 2340, column: 38, scope: !2843)
!2860 = !DILocation(line: 2340, column: 50, scope: !2843)
!2861 = !DILocation(line: 2340, column: 4, scope: !2843)
!2862 = !DILocation(line: 2341, column: 15, scope: !2843)
!2863 = !DILocation(line: 2341, column: 20, scope: !2843)
!2864 = !DILocation(line: 2341, column: 4, scope: !2843)
!2865 = !DILocation(line: 2343, column: 19, scope: !2843)
!2866 = !DILocation(line: 2343, column: 21, scope: !2843)
!2867 = !DILocation(line: 2343, column: 14, scope: !2843)
!2868 = !DILocation(line: 2343, column: 35, scope: !2843)
!2869 = !DILocation(line: 2343, column: 37, scope: !2843)
!2870 = !DILocation(line: 2343, column: 30, scope: !2843)
!2871 = !DILocation(line: 2343, column: 51, scope: !2843)
!2872 = !DILocation(line: 2343, column: 53, scope: !2843)
!2873 = !DILocation(line: 2343, column: 46, scope: !2843)
!2874 = !DILocation(line: 2343, column: 62, scope: !2843)
!2875 = !DILocation(line: 2343, column: 4, scope: !2843)
!2876 = !DILocation(line: 2344, column: 15, scope: !2843)
!2877 = !DILocation(line: 2344, column: 20, scope: !2843)
!2878 = !DILocation(line: 2344, column: 25, scope: !2843)
!2879 = !DILocation(line: 2344, column: 23, scope: !2843)
!2880 = !DILocation(line: 2344, column: 4, scope: !2843)
!2881 = !DILocation(line: 2346, column: 19, scope: !2843)
!2882 = !DILocation(line: 2346, column: 21, scope: !2843)
!2883 = !DILocation(line: 2346, column: 14, scope: !2843)
!2884 = !DILocation(line: 2346, column: 35, scope: !2843)
!2885 = !DILocation(line: 2346, column: 37, scope: !2843)
!2886 = !DILocation(line: 2346, column: 30, scope: !2843)
!2887 = !DILocation(line: 2346, column: 51, scope: !2843)
!2888 = !DILocation(line: 2346, column: 53, scope: !2843)
!2889 = !DILocation(line: 2346, column: 46, scope: !2843)
!2890 = !DILocation(line: 2346, column: 62, scope: !2843)
!2891 = !DILocation(line: 2346, column: 4, scope: !2843)
!2892 = !DILocation(line: 2347, column: 15, scope: !2843)
!2893 = !DILocation(line: 2347, column: 20, scope: !2843)
!2894 = !DILocation(line: 2347, column: 25, scope: !2843)
!2895 = !DILocation(line: 2347, column: 23, scope: !2843)
!2896 = !DILocation(line: 2347, column: 4, scope: !2843)
!2897 = !DILocation(line: 2348, column: 3, scope: !2843)
!2898 = !DILocation(line: 2336, column: 23, scope: !2839)
!2899 = !DILocation(line: 2336, column: 33, scope: !2839)
!2900 = !DILocation(line: 2336, column: 30, scope: !2839)
!2901 = !DILocation(line: 2336, column: 3, scope: !2839)
!2902 = distinct !{!2902, !2841, !2903}
!2903 = !DILocation(line: 2348, column: 3, scope: !2836)
!2904 = !DILocation(line: 2349, column: 3, scope: !2668)
!2905 = !DILocation(line: 2350, column: 2, scope: !2668)
!2906 = !DILocation(line: 2276, column: 34, scope: !2664)
!2907 = !DILocation(line: 2276, column: 2, scope: !2664)
!2908 = distinct !{!2908, !2666, !2909}
!2909 = !DILocation(line: 2350, column: 2, scope: !2661)
!2910 = !DILocation(line: 2352, column: 2, scope: !2497)
!2911 = !DILocation(line: 2354, column: 1, scope: !2497)
!2912 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2405, file: !2405, line: 64, type: !2913, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{null, !1737, !2408}
!2915 = !DILocalVariable(name: "r", arg: 1, scope: !2912, file: !2405, line: 64, type: !1737)
!2916 = !DILocation(line: 64, column: 31, scope: !2912)
!2917 = !DILocalVariable(name: "a", arg: 2, scope: !2912, file: !2405, line: 64, type: !2408)
!2918 = !DILocation(line: 64, column: 49, scope: !2912)
!2919 = !DILocation(line: 66, column: 9, scope: !2912)
!2920 = !DILocation(line: 66, column: 2, scope: !2912)
!2921 = !DILocation(line: 66, column: 7, scope: !2912)
!2922 = !DILocation(line: 67, column: 9, scope: !2912)
!2923 = !DILocation(line: 67, column: 2, scope: !2912)
!2924 = !DILocation(line: 67, column: 7, scope: !2912)
!2925 = !DILocation(line: 68, column: 9, scope: !2912)
!2926 = !DILocation(line: 68, column: 2, scope: !2912)
!2927 = !DILocation(line: 68, column: 7, scope: !2912)
!2928 = !DILocation(line: 69, column: 1, scope: !2912)
!2929 = distinct !DISubprogram(name: "ui_color_picker_use_display_colorspace", scope: !3, file: !3, line: 2356, type: !2930, scopeLine: 2357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!1256, !1464}
!2932 = !DILocalVariable(name: "but", arg: 1, scope: !2929, file: !3, line: 2356, type: !1464)
!2933 = !DILocation(line: 2356, column: 52, scope: !2929)
!2934 = !DILocalVariable(name: "color_profile", scope: !2929, file: !3, line: 2358, type: !1256)
!2935 = !DILocation(line: 2358, column: 7, scope: !2929)
!2936 = !DILocation(line: 2358, column: 23, scope: !2929)
!2937 = !DILocation(line: 2358, column: 28, scope: !2929)
!2938 = !DILocation(line: 2358, column: 35, scope: !2929)
!2939 = !DILocation(line: 2360, column: 6, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 2360, column: 6)
!2941 = !DILocation(line: 2360, column: 11, scope: !2940)
!2942 = !DILocation(line: 2360, column: 6, scope: !2929)
!2943 = !DILocation(line: 2361, column: 28, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !3, line: 2361, column: 7)
!2945 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 2360, column: 20)
!2946 = !DILocation(line: 2361, column: 33, scope: !2944)
!2947 = !DILocation(line: 2361, column: 7, scope: !2944)
!2948 = !DILocation(line: 2361, column: 42, scope: !2944)
!2949 = !DILocation(line: 2361, column: 7, scope: !2945)
!2950 = !DILocation(line: 2362, column: 18, scope: !2944)
!2951 = !DILocation(line: 2362, column: 4, scope: !2944)
!2952 = !DILocation(line: 2363, column: 2, scope: !2945)
!2953 = !DILocation(line: 2365, column: 9, scope: !2929)
!2954 = !DILocation(line: 2365, column: 2, scope: !2929)
!2955 = distinct !DISubprogram(name: "ui_hsvcube_pos_from_vals", scope: !3, file: !3, line: 2368, type: !2420, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!2956 = !DILocalVariable(name: "but", arg: 1, scope: !2955, file: !3, line: 2368, type: !1464)
!2957 = !DILocation(line: 2368, column: 38, scope: !2955)
!2958 = !DILocalVariable(name: "rect", arg: 2, scope: !2955, file: !3, line: 2368, type: !2279)
!2959 = !DILocation(line: 2368, column: 55, scope: !2955)
!2960 = !DILocalVariable(name: "hsv", arg: 3, scope: !2955, file: !3, line: 2368, type: !1737)
!2961 = !DILocation(line: 2368, column: 68, scope: !2955)
!2962 = !DILocalVariable(name: "xp", arg: 4, scope: !2955, file: !3, line: 2368, type: !1737)
!2963 = !DILocation(line: 2368, column: 80, scope: !2955)
!2964 = !DILocalVariable(name: "yp", arg: 5, scope: !2955, file: !3, line: 2368, type: !1737)
!2965 = !DILocation(line: 2368, column: 91, scope: !2955)
!2966 = !DILocalVariable(name: "x", scope: !2955, file: !3, line: 2370, type: !1253)
!2967 = !DILocation(line: 2370, column: 8, scope: !2955)
!2968 = !DILocalVariable(name: "y", scope: !2955, file: !3, line: 2370, type: !1253)
!2969 = !DILocation(line: 2370, column: 18, scope: !2955)
!2970 = !DILocation(line: 2372, column: 15, scope: !2955)
!2971 = !DILocation(line: 2372, column: 20, scope: !2955)
!2972 = !DILocation(line: 2372, column: 10, scope: !2955)
!2973 = !DILocation(line: 2372, column: 2, scope: !2955)
!2974 = !DILocation(line: 2374, column: 8, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 2372, column: 24)
!2976 = !DILocation(line: 2374, column: 6, scope: !2975)
!2977 = !DILocation(line: 2374, column: 20, scope: !2975)
!2978 = !DILocation(line: 2374, column: 18, scope: !2975)
!2979 = !DILocation(line: 2374, column: 28, scope: !2975)
!2980 = !DILocation(line: 2376, column: 8, scope: !2975)
!2981 = !DILocation(line: 2376, column: 6, scope: !2975)
!2982 = !DILocation(line: 2376, column: 20, scope: !2975)
!2983 = !DILocation(line: 2376, column: 18, scope: !2975)
!2984 = !DILocation(line: 2376, column: 28, scope: !2975)
!2985 = !DILocation(line: 2378, column: 8, scope: !2975)
!2986 = !DILocation(line: 2378, column: 6, scope: !2975)
!2987 = !DILocation(line: 2378, column: 20, scope: !2975)
!2988 = !DILocation(line: 2378, column: 18, scope: !2975)
!2989 = !DILocation(line: 2378, column: 28, scope: !2975)
!2990 = !DILocation(line: 2380, column: 8, scope: !2975)
!2991 = !DILocation(line: 2380, column: 6, scope: !2975)
!2992 = !DILocation(line: 2380, column: 18, scope: !2975)
!2993 = !DILocation(line: 2380, column: 25, scope: !2975)
!2994 = !DILocation(line: 2382, column: 8, scope: !2975)
!2995 = !DILocation(line: 2382, column: 6, scope: !2975)
!2996 = !DILocation(line: 2382, column: 18, scope: !2975)
!2997 = !DILocation(line: 2382, column: 25, scope: !2975)
!2998 = !DILocation(line: 2384, column: 8, scope: !2975)
!2999 = !DILocation(line: 2384, column: 6, scope: !2975)
!3000 = !DILocation(line: 2384, column: 18, scope: !2975)
!3001 = !DILocation(line: 2384, column: 25, scope: !2975)
!3002 = !DILocation(line: 2386, column: 6, scope: !2975)
!3003 = !DILocation(line: 2388, column: 8, scope: !2975)
!3004 = !DILocation(line: 2388, column: 6, scope: !2975)
!3005 = !DILocation(line: 2389, column: 4, scope: !2975)
!3006 = !DILocation(line: 2391, column: 6, scope: !2975)
!3007 = !DILocation(line: 2393, column: 9, scope: !2975)
!3008 = !DILocation(line: 2393, column: 18, scope: !2975)
!3009 = !DILocation(line: 2393, column: 23, scope: !2975)
!3010 = !DILocation(line: 2393, column: 16, scope: !2975)
!3011 = !DILocation(line: 2393, column: 35, scope: !2975)
!3012 = !DILocation(line: 2393, column: 40, scope: !2975)
!3013 = !DILocation(line: 2393, column: 50, scope: !2975)
!3014 = !DILocation(line: 2393, column: 55, scope: !2975)
!3015 = !DILocation(line: 2393, column: 48, scope: !2975)
!3016 = !DILocation(line: 2393, column: 32, scope: !2975)
!3017 = !DILocation(line: 2393, column: 6, scope: !2975)
!3018 = !DILocation(line: 2394, column: 4, scope: !2975)
!3019 = !DILocation(line: 2398, column: 8, scope: !2955)
!3020 = !DILocation(line: 2398, column: 14, scope: !2955)
!3021 = !DILocation(line: 2398, column: 21, scope: !2955)
!3022 = !DILocation(line: 2398, column: 41, scope: !2955)
!3023 = !DILocation(line: 2398, column: 25, scope: !2955)
!3024 = !DILocation(line: 2398, column: 23, scope: !2955)
!3025 = !DILocation(line: 2398, column: 19, scope: !2955)
!3026 = !DILocation(line: 2398, column: 3, scope: !2955)
!3027 = !DILocation(line: 2398, column: 6, scope: !2955)
!3028 = !DILocation(line: 2399, column: 8, scope: !2955)
!3029 = !DILocation(line: 2399, column: 14, scope: !2955)
!3030 = !DILocation(line: 2399, column: 21, scope: !2955)
!3031 = !DILocation(line: 2399, column: 41, scope: !2955)
!3032 = !DILocation(line: 2399, column: 25, scope: !2955)
!3033 = !DILocation(line: 2399, column: 23, scope: !2955)
!3034 = !DILocation(line: 2399, column: 19, scope: !2955)
!3035 = !DILocation(line: 2399, column: 3, scope: !2955)
!3036 = !DILocation(line: 2399, column: 6, scope: !2955)
!3037 = !DILocation(line: 2401, column: 1, scope: !2955)
!3038 = distinct !DISubprogram(name: "ui_link_bezier_points", scope: !3, file: !3, line: 2547, type: !3039, scopeLine: 2548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!1256, !2279, !3041, !1254}
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!3042 = !DILocalVariable(name: "rect", arg: 1, scope: !3038, file: !3, line: 2547, type: !2279)
!3043 = !DILocation(line: 2547, column: 40, scope: !3038)
!3044 = !DILocalVariable(name: "coord_array", arg: 2, scope: !3038, file: !3, line: 2547, type: !3041)
!3045 = !DILocation(line: 2547, column: 52, scope: !3038)
!3046 = !DILocalVariable(name: "resol", arg: 3, scope: !3038, file: !3, line: 2547, type: !1254)
!3047 = !DILocation(line: 2547, column: 74, scope: !3038)
!3048 = !DILocalVariable(name: "dist", scope: !3038, file: !3, line: 2549, type: !1253)
!3049 = !DILocation(line: 2549, column: 8, scope: !3038)
!3050 = !DILocalVariable(name: "vec", scope: !3038, file: !3, line: 2549, type: !3051)
!3051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 256, elements: !3052)
!3052 = !{!1351, !1413}
!3053 = !DILocation(line: 2549, column: 14, scope: !3038)
!3054 = !DILocation(line: 2551, column: 14, scope: !3038)
!3055 = !DILocation(line: 2551, column: 20, scope: !3038)
!3056 = !DILocation(line: 2551, column: 2, scope: !3038)
!3057 = !DILocation(line: 2551, column: 12, scope: !3038)
!3058 = !DILocation(line: 2552, column: 14, scope: !3038)
!3059 = !DILocation(line: 2552, column: 20, scope: !3038)
!3060 = !DILocation(line: 2552, column: 2, scope: !3038)
!3061 = !DILocation(line: 2552, column: 12, scope: !3038)
!3062 = !DILocation(line: 2553, column: 14, scope: !3038)
!3063 = !DILocation(line: 2553, column: 20, scope: !3038)
!3064 = !DILocation(line: 2553, column: 2, scope: !3038)
!3065 = !DILocation(line: 2553, column: 12, scope: !3038)
!3066 = !DILocation(line: 2554, column: 14, scope: !3038)
!3067 = !DILocation(line: 2554, column: 20, scope: !3038)
!3068 = !DILocation(line: 2554, column: 2, scope: !3038)
!3069 = !DILocation(line: 2554, column: 12, scope: !3038)
!3070 = !DILocation(line: 2556, column: 22, scope: !3038)
!3071 = !DILocation(line: 2556, column: 34, scope: !3038)
!3072 = !DILocation(line: 2556, column: 32, scope: !3038)
!3073 = !DILocation(line: 2556, column: 16, scope: !3038)
!3074 = !DILocation(line: 2556, column: 14, scope: !3038)
!3075 = !DILocation(line: 2556, column: 7, scope: !3038)
!3076 = !DILocation(line: 2558, column: 14, scope: !3038)
!3077 = !DILocation(line: 2558, column: 26, scope: !3038)
!3078 = !DILocation(line: 2558, column: 24, scope: !3038)
!3079 = !DILocation(line: 2558, column: 2, scope: !3038)
!3080 = !DILocation(line: 2558, column: 12, scope: !3038)
!3081 = !DILocation(line: 2559, column: 14, scope: !3038)
!3082 = !DILocation(line: 2559, column: 2, scope: !3038)
!3083 = !DILocation(line: 2559, column: 12, scope: !3038)
!3084 = !DILocation(line: 2561, column: 14, scope: !3038)
!3085 = !DILocation(line: 2561, column: 26, scope: !3038)
!3086 = !DILocation(line: 2561, column: 24, scope: !3038)
!3087 = !DILocation(line: 2561, column: 2, scope: !3038)
!3088 = !DILocation(line: 2561, column: 12, scope: !3038)
!3089 = !DILocation(line: 2562, column: 14, scope: !3038)
!3090 = !DILocation(line: 2562, column: 2, scope: !3038)
!3091 = !DILocation(line: 2562, column: 12, scope: !3038)
!3092 = !DILocation(line: 2564, column: 32, scope: !3038)
!3093 = !DILocation(line: 2564, column: 43, scope: !3038)
!3094 = !DILocation(line: 2564, column: 54, scope: !3038)
!3095 = !DILocation(line: 2564, column: 65, scope: !3038)
!3096 = !DILocation(line: 2564, column: 77, scope: !3038)
!3097 = !DILocation(line: 2564, column: 96, scope: !3038)
!3098 = !DILocation(line: 2564, column: 2, scope: !3038)
!3099 = !DILocation(line: 2565, column: 32, scope: !3038)
!3100 = !DILocation(line: 2565, column: 43, scope: !3038)
!3101 = !DILocation(line: 2565, column: 54, scope: !3038)
!3102 = !DILocation(line: 2565, column: 65, scope: !3038)
!3103 = !DILocation(line: 2565, column: 77, scope: !3038)
!3104 = !DILocation(line: 2565, column: 96, scope: !3038)
!3105 = !DILocation(line: 2565, column: 2, scope: !3038)
!3106 = !DILocation(line: 2567, column: 2, scope: !3038)
!3107 = distinct !DISubprogram(name: "ui_draw_link_bezier", scope: !3, file: !3, line: 2571, type: !3108, scopeLine: 2572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{null, !2279}
!3110 = !DILocalVariable(name: "rect", arg: 1, scope: !3107, file: !3, line: 2571, type: !2279)
!3111 = !DILocation(line: 2571, column: 38, scope: !3107)
!3112 = !DILocalVariable(name: "coord_array", scope: !3107, file: !3, line: 2573, type: !3113)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 1600, elements: !3114)
!3114 = !{!3115, !1413}
!3115 = !DISubrange(count: 25)
!3116 = !DILocation(line: 2573, column: 8, scope: !3107)
!3117 = !DILocation(line: 2575, column: 28, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 2575, column: 6)
!3119 = !DILocation(line: 2575, column: 34, scope: !3118)
!3120 = !DILocation(line: 2575, column: 6, scope: !3118)
!3121 = !DILocation(line: 2575, column: 6, scope: !3107)
!3122 = !DILocation(line: 2579, column: 3, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 2575, column: 60)
!3124 = !DILocation(line: 2580, column: 3, scope: !3123)
!3125 = !DILocation(line: 2582, column: 3, scope: !3123)
!3126 = !DILocation(line: 2583, column: 35, scope: !3123)
!3127 = !DILocation(line: 2583, column: 3, scope: !3123)
!3128 = !DILocation(line: 2584, column: 3, scope: !3123)
!3129 = !DILocation(line: 2585, column: 3, scope: !3123)
!3130 = !DILocation(line: 2587, column: 3, scope: !3123)
!3131 = !DILocation(line: 2588, column: 3, scope: !3123)
!3132 = !DILocation(line: 2590, column: 2, scope: !3123)
!3133 = !DILocation(line: 2591, column: 1, scope: !3107)
!3134 = distinct !DISubprogram(name: "uiWidgetScrollDraw", scope: !3, file: !3, line: 2594, type: !3135, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null, !1436, !2279, !2279, !1254}
!3137 = !DILocalVariable(name: "wcol", arg: 1, scope: !3134, file: !3, line: 2594, type: !1436)
!3138 = !DILocation(line: 2594, column: 41, scope: !3134)
!3139 = !DILocalVariable(name: "rect", arg: 2, scope: !3134, file: !3, line: 2594, type: !2279)
!3140 = !DILocation(line: 2594, column: 59, scope: !3134)
!3141 = !DILocalVariable(name: "slider", arg: 3, scope: !3134, file: !3, line: 2594, type: !2279)
!3142 = !DILocation(line: 2594, column: 77, scope: !3134)
!3143 = !DILocalVariable(name: "state", arg: 4, scope: !3134, file: !3, line: 2594, type: !1254)
!3144 = !DILocation(line: 2594, column: 89, scope: !3134)
!3145 = !DILocalVariable(name: "wtb", scope: !3134, file: !3, line: 2596, type: !3146)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetBase", file: !3, line: 106, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetBase", file: !3, line: 94, size: 9344, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3171}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3147, file: !3, line: 96, baseType: !1254, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "halfwayvert", scope: !3147, file: !3, line: 96, baseType: !1254, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "outer_v", scope: !3147, file: !3, line: 97, baseType: !3152, size: 2304, offset: 64)
!3152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 2304, elements: !3153)
!3153 = !{!3154, !1413}
!3154 = !DISubrange(count: 36)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "inner_v", scope: !3147, file: !3, line: 98, baseType: !3152, size: 2304, offset: 2368)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "inner_uv", scope: !3147, file: !3, line: 99, baseType: !3152, size: 2304, offset: 4672)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3147, file: !3, line: 101, baseType: !1256, size: 8, offset: 6976)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "outline", scope: !3147, file: !3, line: 101, baseType: !1256, size: 8, offset: 6984)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "emboss", scope: !3147, file: !3, line: 101, baseType: !1256, size: 8, offset: 6992)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "shadedir", scope: !3147, file: !3, line: 101, baseType: !1256, size: 8, offset: 7000)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "tria1", scope: !3147, file: !3, line: 103, baseType: !3162, size: 1152, offset: 7040)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetTrias", file: !3, line: 88, baseType: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetTrias", file: !3, line: 82, size: 1152, elements: !3164)
!3164 = !{!3165, !3166, !3168}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3163, file: !3, line: 83, baseType: !7, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3163, file: !3, line: 85, baseType: !3167, size: 1024, offset: 32)
!3167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 1024, elements: !1417)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3163, file: !3, line: 86, baseType: !3169, size: 64, offset: 1088)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 96, elements: !1907)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "tria2", scope: !3147, file: !3, line: 104, baseType: !3162, size: 1152, offset: 8192)
!3172 = !DILocation(line: 2596, column: 15, scope: !3134)
!3173 = !DILocalVariable(name: "horizontal", scope: !3134, file: !3, line: 2597, type: !1254)
!3174 = !DILocation(line: 2597, column: 6, scope: !3134)
!3175 = !DILocalVariable(name: "rad", scope: !3134, file: !3, line: 2598, type: !1253)
!3176 = !DILocation(line: 2598, column: 8, scope: !3134)
!3177 = !DILocalVariable(name: "outline", scope: !3134, file: !3, line: 2599, type: !1256)
!3178 = !DILocation(line: 2599, column: 7, scope: !3134)
!3179 = !DILocation(line: 2601, column: 2, scope: !3134)
!3180 = !DILocation(line: 2604, column: 32, scope: !3134)
!3181 = !DILocation(line: 2604, column: 16, scope: !3134)
!3182 = !DILocation(line: 2604, column: 56, scope: !3134)
!3183 = !DILocation(line: 2604, column: 40, scope: !3134)
!3184 = !DILocation(line: 2604, column: 38, scope: !3134)
!3185 = !DILocation(line: 2604, column: 13, scope: !3134)
!3186 = !DILocation(line: 2606, column: 6, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 2606, column: 6)
!3188 = !DILocation(line: 2606, column: 6, scope: !3134)
!3189 = !DILocation(line: 2607, column: 32, scope: !3187)
!3190 = !DILocation(line: 2607, column: 16, scope: !3187)
!3191 = !DILocation(line: 2607, column: 14, scope: !3187)
!3192 = !DILocation(line: 2607, column: 7, scope: !3187)
!3193 = !DILocation(line: 2607, column: 3, scope: !3187)
!3194 = !DILocation(line: 2609, column: 32, scope: !3187)
!3195 = !DILocation(line: 2609, column: 16, scope: !3187)
!3196 = !DILocation(line: 2609, column: 14, scope: !3187)
!3197 = !DILocation(line: 2609, column: 7, scope: !3187)
!3198 = !DILocation(line: 2611, column: 18, scope: !3134)
!3199 = !DILocation(line: 2611, column: 17, scope: !3134)
!3200 = !DILocation(line: 2611, column: 6, scope: !3134)
!3201 = !DILocation(line: 2611, column: 15, scope: !3134)
!3202 = !DILocation(line: 2614, column: 6, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 2614, column: 6)
!3204 = !DILocation(line: 2614, column: 6, scope: !3134)
!3205 = !DILocalVariable(name: "sw_ap", scope: !3206, file: !3, line: 2615, type: !1300)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 2615, column: 3)
!3207 = !DILocation(line: 2615, column: 3, scope: !3206)
!3208 = !DILocation(line: 2617, column: 36, scope: !3134)
!3209 = !DILocation(line: 2617, column: 42, scope: !3134)
!3210 = !DILocation(line: 2617, column: 2, scope: !3134)
!3211 = !DILocation(line: 2618, column: 24, scope: !3134)
!3212 = !DILocation(line: 2618, column: 2, scope: !3134)
!3213 = !DILocation(line: 2621, column: 23, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 2621, column: 6)
!3215 = !DILocation(line: 2621, column: 7, scope: !3214)
!3216 = !DILocation(line: 2621, column: 31, scope: !3214)
!3217 = !DILocation(line: 2621, column: 36, scope: !3214)
!3218 = !DILocation(line: 2621, column: 56, scope: !3214)
!3219 = !DILocation(line: 2621, column: 40, scope: !3214)
!3220 = !DILocation(line: 2621, column: 64, scope: !3214)
!3221 = !DILocation(line: 2621, column: 6, scope: !3134)
!3222 = !DILocation(line: 2623, column: 2, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 2621, column: 70)
!3224 = !DILocalVariable(name: "sw_ap", scope: !3225, file: !3, line: 2625, type: !1300)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2625, column: 3)
!3226 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 2624, column: 7)
!3227 = !DILocation(line: 2625, column: 3, scope: !3225)
!3228 = !DILocation(line: 2627, column: 19, scope: !3226)
!3229 = !DILocation(line: 2627, column: 25, scope: !3226)
!3230 = !DILocation(line: 2627, column: 32, scope: !3226)
!3231 = !DILocation(line: 2627, column: 38, scope: !3226)
!3232 = !DILocation(line: 2627, column: 3, scope: !3226)
!3233 = !DILocation(line: 2629, column: 7, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2629, column: 7)
!3235 = !DILocation(line: 2629, column: 13, scope: !3234)
!3236 = !DILocation(line: 2629, column: 24, scope: !3234)
!3237 = !DILocation(line: 2629, column: 30, scope: !3234)
!3238 = !DILocation(line: 2629, column: 22, scope: !3234)
!3239 = !DILocation(line: 2629, column: 7, scope: !3226)
!3240 = !DILocation(line: 2630, column: 4, scope: !3234)
!3241 = !DILocation(line: 2630, column: 10, scope: !3234)
!3242 = !DILocation(line: 2630, column: 19, scope: !3234)
!3243 = !DILocation(line: 2631, column: 8, scope: !3234)
!3244 = !DILocation(line: 2631, column: 14, scope: !3234)
!3245 = !DILocation(line: 2631, column: 24, scope: !3234)
!3246 = !DILocation(line: 2633, column: 7, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2633, column: 7)
!3248 = !DILocation(line: 2633, column: 13, scope: !3247)
!3249 = !DILocation(line: 2633, column: 7, scope: !3226)
!3250 = !DILocation(line: 2634, column: 21, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 2633, column: 34)
!3252 = !DILocation(line: 2634, column: 27, scope: !3251)
!3253 = !DILocation(line: 2634, column: 36, scope: !3251)
!3254 = !DILocation(line: 2634, column: 51, scope: !3251)
!3255 = !DILocation(line: 2634, column: 57, scope: !3251)
!3256 = !DILocation(line: 2634, column: 66, scope: !3251)
!3257 = !DILocation(line: 2634, column: 4, scope: !3251)
!3258 = !DILocation(line: 2634, column: 10, scope: !3251)
!3259 = !DILocation(line: 2634, column: 19, scope: !3251)
!3260 = !DILocation(line: 2635, column: 21, scope: !3251)
!3261 = !DILocation(line: 2635, column: 27, scope: !3251)
!3262 = !DILocation(line: 2635, column: 36, scope: !3251)
!3263 = !DILocation(line: 2635, column: 51, scope: !3251)
!3264 = !DILocation(line: 2635, column: 57, scope: !3251)
!3265 = !DILocation(line: 2635, column: 66, scope: !3251)
!3266 = !DILocation(line: 2635, column: 4, scope: !3251)
!3267 = !DILocation(line: 2635, column: 10, scope: !3251)
!3268 = !DILocation(line: 2635, column: 19, scope: !3251)
!3269 = !DILocation(line: 2636, column: 21, scope: !3251)
!3270 = !DILocation(line: 2636, column: 27, scope: !3251)
!3271 = !DILocation(line: 2636, column: 36, scope: !3251)
!3272 = !DILocation(line: 2636, column: 51, scope: !3251)
!3273 = !DILocation(line: 2636, column: 57, scope: !3251)
!3274 = !DILocation(line: 2636, column: 66, scope: !3251)
!3275 = !DILocation(line: 2636, column: 4, scope: !3251)
!3276 = !DILocation(line: 2636, column: 10, scope: !3251)
!3277 = !DILocation(line: 2636, column: 19, scope: !3251)
!3278 = !DILocation(line: 2637, column: 3, scope: !3251)
!3279 = !DILocation(line: 2640, column: 7, scope: !3226)
!3280 = !DILocation(line: 2640, column: 14, scope: !3226)
!3281 = !DILocation(line: 2643, column: 7, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2643, column: 7)
!3283 = !DILocation(line: 2643, column: 13, scope: !3282)
!3284 = !DILocation(line: 2643, column: 7, scope: !3226)
!3285 = !DILocalVariable(name: "sw_ap", scope: !3286, file: !3, line: 2644, type: !1256)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 2644, column: 4)
!3287 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 2643, column: 37)
!3288 = !DILocation(line: 2644, column: 4, scope: !3286)
!3289 = !DILocation(line: 2645, column: 3, scope: !3287)
!3290 = !DILocation(line: 2647, column: 37, scope: !3226)
!3291 = !DILocation(line: 2647, column: 45, scope: !3226)
!3292 = !DILocation(line: 2647, column: 3, scope: !3226)
!3293 = !DILocation(line: 2649, column: 7, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2649, column: 7)
!3295 = !DILocation(line: 2649, column: 13, scope: !3294)
!3296 = !DILocation(line: 2649, column: 7, scope: !3226)
!3297 = !DILocation(line: 2650, column: 8, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2650, column: 8)
!3299 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 2649, column: 33)
!3300 = !DILocation(line: 2650, column: 14, scope: !3298)
!3301 = !DILocation(line: 2650, column: 22, scope: !3298)
!3302 = !DILocation(line: 2650, column: 8, scope: !3299)
!3303 = !DILocation(line: 2650, column: 28, scope: !3298)
!3304 = !DILocation(line: 2650, column: 34, scope: !3298)
!3305 = !DILocation(line: 2650, column: 42, scope: !3298)
!3306 = !DILocation(line: 2651, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2651, column: 8)
!3308 = !DILocation(line: 2651, column: 14, scope: !3307)
!3309 = !DILocation(line: 2651, column: 22, scope: !3307)
!3310 = !DILocation(line: 2651, column: 8, scope: !3299)
!3311 = !DILocation(line: 2651, column: 28, scope: !3307)
!3312 = !DILocation(line: 2651, column: 34, scope: !3307)
!3313 = !DILocation(line: 2651, column: 42, scope: !3307)
!3314 = !DILocation(line: 2652, column: 8, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2652, column: 8)
!3316 = !DILocation(line: 2652, column: 14, scope: !3315)
!3317 = !DILocation(line: 2652, column: 22, scope: !3315)
!3318 = !DILocation(line: 2652, column: 8, scope: !3299)
!3319 = !DILocation(line: 2652, column: 28, scope: !3315)
!3320 = !DILocation(line: 2652, column: 34, scope: !3315)
!3321 = !DILocation(line: 2652, column: 42, scope: !3315)
!3322 = !DILocation(line: 2653, column: 4, scope: !3299)
!3323 = !DILocation(line: 2653, column: 10, scope: !3299)
!3324 = !DILocation(line: 2653, column: 18, scope: !3299)
!3325 = !DILocation(line: 2655, column: 8, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2655, column: 8)
!3327 = !DILocation(line: 2655, column: 8, scope: !3299)
!3328 = !DILocation(line: 2656, column: 31, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 2655, column: 20)
!3330 = !DILocation(line: 2656, column: 38, scope: !3329)
!3331 = !DILocation(line: 2656, column: 5, scope: !3329)
!3332 = !DILocation(line: 2657, column: 31, scope: !3329)
!3333 = !DILocation(line: 2657, column: 38, scope: !3329)
!3334 = !DILocation(line: 2657, column: 5, scope: !3329)
!3335 = !DILocation(line: 2658, column: 4, scope: !3329)
!3336 = !DILocation(line: 2660, column: 31, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 2659, column: 9)
!3338 = !DILocation(line: 2660, column: 38, scope: !3337)
!3339 = !DILocation(line: 2660, column: 5, scope: !3337)
!3340 = !DILocation(line: 2661, column: 31, scope: !3337)
!3341 = !DILocation(line: 2661, column: 38, scope: !3337)
!3342 = !DILocation(line: 2661, column: 5, scope: !3337)
!3343 = !DILocation(line: 2663, column: 3, scope: !3299)
!3344 = !DILocation(line: 2664, column: 25, scope: !3226)
!3345 = !DILocation(line: 2664, column: 3, scope: !3226)
!3346 = !DILocation(line: 2666, column: 7, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 2666, column: 7)
!3348 = !DILocation(line: 2666, column: 13, scope: !3347)
!3349 = !DILocation(line: 2666, column: 7, scope: !3226)
!3350 = !DILocalVariable(name: "sw_ap", scope: !3351, file: !3, line: 2667, type: !1256)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 2667, column: 4)
!3352 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 2666, column: 37)
!3353 = !DILocation(line: 2667, column: 4, scope: !3351)
!3354 = !DILocation(line: 2668, column: 3, scope: !3352)
!3355 = !DILocation(line: 2670, column: 1, scope: !3134)
!3356 = distinct !DISubprogram(name: "widget_init", scope: !3, file: !3, line: 232, type: !3357, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{null, !3359}
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3360 = !DILocalVariable(name: "wtb", arg: 1, scope: !3356, file: !3, line: 232, type: !3359)
!3361 = !DILocation(line: 232, column: 39, scope: !3356)
!3362 = !DILocation(line: 234, column: 17, scope: !3356)
!3363 = !DILocation(line: 234, column: 22, scope: !3356)
!3364 = !DILocation(line: 234, column: 34, scope: !3356)
!3365 = !DILocation(line: 234, column: 2, scope: !3356)
!3366 = !DILocation(line: 234, column: 7, scope: !3356)
!3367 = !DILocation(line: 234, column: 15, scope: !3356)
!3368 = !DILocation(line: 235, column: 2, scope: !3356)
!3369 = !DILocation(line: 235, column: 7, scope: !3356)
!3370 = !DILocation(line: 235, column: 13, scope: !3356)
!3371 = !DILocation(line: 235, column: 17, scope: !3356)
!3372 = !DILocation(line: 236, column: 2, scope: !3356)
!3373 = !DILocation(line: 236, column: 7, scope: !3356)
!3374 = !DILocation(line: 236, column: 13, scope: !3356)
!3375 = !DILocation(line: 236, column: 17, scope: !3356)
!3376 = !DILocation(line: 238, column: 2, scope: !3356)
!3377 = !DILocation(line: 238, column: 7, scope: !3356)
!3378 = !DILocation(line: 238, column: 13, scope: !3356)
!3379 = !DILocation(line: 239, column: 2, scope: !3356)
!3380 = !DILocation(line: 239, column: 7, scope: !3356)
!3381 = !DILocation(line: 239, column: 15, scope: !3356)
!3382 = !DILocation(line: 240, column: 2, scope: !3356)
!3383 = !DILocation(line: 240, column: 7, scope: !3356)
!3384 = !DILocation(line: 240, column: 14, scope: !3356)
!3385 = !DILocation(line: 241, column: 2, scope: !3356)
!3386 = !DILocation(line: 241, column: 7, scope: !3356)
!3387 = !DILocation(line: 241, column: 16, scope: !3356)
!3388 = !DILocation(line: 242, column: 1, scope: !3356)
!3389 = distinct !DISubprogram(name: "round_box_edges", scope: !3, file: !3, line: 474, type: !3390, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !3359, !1254, !2279, !1253}
!3392 = !DILocalVariable(name: "wt", arg: 1, scope: !3389, file: !3, line: 474, type: !3359)
!3393 = !DILocation(line: 474, column: 43, scope: !3389)
!3394 = !DILocalVariable(name: "roundboxalign", arg: 2, scope: !3389, file: !3, line: 474, type: !1254)
!3395 = !DILocation(line: 474, column: 51, scope: !3389)
!3396 = !DILocalVariable(name: "rect", arg: 3, scope: !3389, file: !3, line: 474, type: !2279)
!3397 = !DILocation(line: 474, column: 78, scope: !3389)
!3398 = !DILocalVariable(name: "rad", arg: 4, scope: !3389, file: !3, line: 474, type: !1253)
!3399 = !DILocation(line: 474, column: 90, scope: !3389)
!3400 = !DILocation(line: 476, column: 19, scope: !3389)
!3401 = !DILocation(line: 476, column: 23, scope: !3389)
!3402 = !DILocation(line: 476, column: 38, scope: !3389)
!3403 = !DILocation(line: 476, column: 44, scope: !3389)
!3404 = !DILocation(line: 476, column: 49, scope: !3389)
!3405 = !DILocation(line: 476, column: 57, scope: !3389)
!3406 = !DILocation(line: 476, column: 53, scope: !3389)
!3407 = !DILocation(line: 476, column: 2, scope: !3389)
!3408 = !DILocation(line: 477, column: 1, scope: !3389)
!3409 = distinct !DISubprogram(name: "widgetbase_draw", scope: !3, file: !3, line: 642, type: !3410, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{null, !3359, !1436}
!3412 = !DILocalVariable(name: "wtb", arg: 1, scope: !3409, file: !3, line: 642, type: !3359)
!3413 = !DILocation(line: 642, column: 43, scope: !3409)
!3414 = !DILocalVariable(name: "wcol", arg: 2, scope: !3409, file: !3, line: 642, type: !1436)
!3415 = !DILocation(line: 642, column: 64, scope: !3409)
!3416 = !DILocalVariable(name: "j", scope: !3409, file: !3, line: 644, type: !1254)
!3417 = !DILocation(line: 644, column: 6, scope: !3409)
!3418 = !DILocalVariable(name: "a", scope: !3409, file: !3, line: 644, type: !1254)
!3419 = !DILocation(line: 644, column: 9, scope: !3409)
!3420 = !DILocation(line: 646, column: 2, scope: !3409)
!3421 = !DILocation(line: 649, column: 6, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 649, column: 6)
!3423 = !DILocation(line: 649, column: 11, scope: !3422)
!3424 = !DILocation(line: 649, column: 6, scope: !3409)
!3425 = !DILocation(line: 650, column: 7, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 650, column: 7)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 649, column: 18)
!3428 = !DILocation(line: 650, column: 13, scope: !3426)
!3429 = !DILocation(line: 650, column: 20, scope: !3426)
!3430 = !DILocation(line: 650, column: 7, scope: !3427)
!3431 = !DILocation(line: 651, column: 8, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 651, column: 8)
!3433 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 650, column: 26)
!3434 = !DILocation(line: 651, column: 14, scope: !3432)
!3435 = !DILocation(line: 651, column: 8, scope: !3433)
!3436 = !DILocalVariable(name: "inner_v_half", scope: !3437, file: !3, line: 652, type: !3152)
!3437 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 651, column: 27)
!3438 = !DILocation(line: 652, column: 11, scope: !3437)
!3439 = !DILocalVariable(name: "x_mid", scope: !3437, file: !3, line: 653, type: !1253)
!3440 = !DILocation(line: 653, column: 11, scope: !3437)
!3441 = !DILocation(line: 656, column: 5, scope: !3437)
!3442 = !DILocation(line: 657, column: 5, scope: !3437)
!3443 = !DILocation(line: 658, column: 37, scope: !3437)
!3444 = !DILocation(line: 658, column: 42, scope: !3437)
!3445 = !DILocation(line: 658, column: 5, scope: !3437)
!3446 = !DILocation(line: 659, column: 33, scope: !3437)
!3447 = !DILocation(line: 659, column: 38, scope: !3437)
!3448 = !DILocation(line: 659, column: 5, scope: !3437)
!3449 = !DILocation(line: 662, column: 5, scope: !3437)
!3450 = !DILocation(line: 663, column: 5, scope: !3437)
!3451 = !DILocation(line: 664, column: 5, scope: !3437)
!3452 = !DILocation(line: 666, column: 37, scope: !3437)
!3453 = !DILocation(line: 666, column: 42, scope: !3437)
!3454 = !DILocation(line: 666, column: 5, scope: !3437)
!3455 = !DILocation(line: 667, column: 33, scope: !3437)
!3456 = !DILocation(line: 667, column: 38, scope: !3437)
!3457 = !DILocation(line: 667, column: 5, scope: !3437)
!3458 = !DILocation(line: 669, column: 5, scope: !3437)
!3459 = !DILocation(line: 672, column: 5, scope: !3437)
!3460 = !DILocation(line: 674, column: 34, scope: !3437)
!3461 = !DILocation(line: 674, column: 40, scope: !3437)
!3462 = !DILocation(line: 674, column: 5, scope: !3437)
!3463 = !DILocation(line: 676, column: 12, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 676, column: 5)
!3465 = !DILocation(line: 676, column: 10, scope: !3464)
!3466 = !DILocation(line: 676, column: 17, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 676, column: 5)
!3468 = !DILocation(line: 676, column: 21, scope: !3467)
!3469 = !DILocation(line: 676, column: 26, scope: !3467)
!3470 = !DILocation(line: 676, column: 19, scope: !3467)
!3471 = !DILocation(line: 676, column: 5, scope: !3464)
!3472 = !DILocation(line: 677, column: 15, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 676, column: 40)
!3474 = !DILocation(line: 677, column: 20, scope: !3473)
!3475 = !DILocation(line: 677, column: 28, scope: !3473)
!3476 = !DILocation(line: 677, column: 12, scope: !3473)
!3477 = !DILocation(line: 678, column: 5, scope: !3473)
!3478 = !DILocation(line: 676, column: 36, scope: !3467)
!3479 = !DILocation(line: 676, column: 5, scope: !3467)
!3480 = distinct !{!3480, !3471, !3481}
!3481 = !DILocation(line: 678, column: 5, scope: !3464)
!3482 = !DILocation(line: 679, column: 14, scope: !3437)
!3483 = !DILocation(line: 679, column: 19, scope: !3437)
!3484 = !DILocation(line: 679, column: 11, scope: !3437)
!3485 = !DILocation(line: 681, column: 37, scope: !3437)
!3486 = !DILocation(line: 681, column: 42, scope: !3437)
!3487 = !DILocation(line: 681, column: 5, scope: !3437)
!3488 = !DILocation(line: 682, column: 33, scope: !3437)
!3489 = !DILocation(line: 682, column: 38, scope: !3437)
!3490 = !DILocation(line: 682, column: 5, scope: !3437)
!3491 = !DILocation(line: 685, column: 16, scope: !3437)
!3492 = !DILocation(line: 685, column: 22, scope: !3437)
!3493 = !DILocation(line: 685, column: 32, scope: !3437)
!3494 = !DILocation(line: 685, column: 38, scope: !3437)
!3495 = !DILocation(line: 685, column: 48, scope: !3437)
!3496 = !DILocation(line: 685, column: 54, scope: !3437)
!3497 = !DILocation(line: 685, column: 5, scope: !3437)
!3498 = !DILocation(line: 687, column: 12, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 687, column: 5)
!3500 = !DILocation(line: 687, column: 10, scope: !3499)
!3501 = !DILocation(line: 687, column: 17, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 687, column: 5)
!3503 = !DILocation(line: 687, column: 21, scope: !3502)
!3504 = !DILocation(line: 687, column: 26, scope: !3502)
!3505 = !DILocation(line: 687, column: 19, scope: !3502)
!3506 = !DILocation(line: 687, column: 5, scope: !3499)
!3507 = !DILocation(line: 688, column: 27, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 687, column: 40)
!3509 = !DILocation(line: 688, column: 19, scope: !3508)
!3510 = !DILocation(line: 688, column: 6, scope: !3508)
!3511 = !DILocation(line: 688, column: 25, scope: !3508)
!3512 = !DILocation(line: 689, column: 27, scope: !3508)
!3513 = !DILocation(line: 689, column: 32, scope: !3508)
!3514 = !DILocation(line: 689, column: 40, scope: !3508)
!3515 = !DILocation(line: 689, column: 19, scope: !3508)
!3516 = !DILocation(line: 689, column: 6, scope: !3508)
!3517 = !DILocation(line: 689, column: 25, scope: !3508)
!3518 = !DILocation(line: 690, column: 5, scope: !3508)
!3519 = !DILocation(line: 687, column: 36, scope: !3502)
!3520 = !DILocation(line: 687, column: 5, scope: !3502)
!3521 = distinct !{!3521, !3506, !3522}
!3522 = !DILocation(line: 690, column: 5, scope: !3499)
!3523 = !DILocation(line: 692, column: 37, scope: !3437)
!3524 = !DILocation(line: 692, column: 5, scope: !3437)
!3525 = !DILocation(line: 693, column: 33, scope: !3437)
!3526 = !DILocation(line: 693, column: 38, scope: !3437)
!3527 = !DILocation(line: 693, column: 5, scope: !3437)
!3528 = !DILocation(line: 694, column: 5, scope: !3437)
!3529 = !DILocation(line: 695, column: 4, scope: !3437)
!3530 = !DILocation(line: 698, column: 34, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 696, column: 9)
!3532 = !DILocation(line: 698, column: 40, scope: !3531)
!3533 = !DILocation(line: 698, column: 5, scope: !3531)
!3534 = !DILocation(line: 700, column: 5, scope: !3531)
!3535 = !DILocation(line: 701, column: 37, scope: !3531)
!3536 = !DILocation(line: 701, column: 42, scope: !3531)
!3537 = !DILocation(line: 701, column: 5, scope: !3531)
!3538 = !DILocation(line: 702, column: 33, scope: !3531)
!3539 = !DILocation(line: 702, column: 38, scope: !3531)
!3540 = !DILocation(line: 702, column: 5, scope: !3531)
!3541 = !DILocation(line: 703, column: 5, scope: !3531)
!3542 = !DILocation(line: 705, column: 3, scope: !3433)
!3543 = !DILocalVariable(name: "col1", scope: !3544, file: !3, line: 707, type: !1349)
!3544 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 706, column: 8)
!3545 = !DILocation(line: 707, column: 9, scope: !3544)
!3546 = !DILocalVariable(name: "col2", scope: !3544, file: !3, line: 707, type: !1349)
!3547 = !DILocation(line: 707, column: 18, scope: !3544)
!3548 = !DILocalVariable(name: "col_array", scope: !3544, file: !3, line: 708, type: !3549)
!3549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1256, size: 1152, elements: !3550)
!3550 = !{!3551}
!3551 = !DISubrange(count: 144)
!3552 = !DILocation(line: 708, column: 18, scope: !3544)
!3553 = !DILocalVariable(name: "col_pt", scope: !3544, file: !3, line: 709, type: !1255)
!3554 = !DILocation(line: 709, column: 19, scope: !3544)
!3555 = !DILocation(line: 709, column: 28, scope: !3544)
!3556 = !DILocation(line: 711, column: 17, scope: !3544)
!3557 = !DILocation(line: 711, column: 23, scope: !3544)
!3558 = !DILocation(line: 711, column: 29, scope: !3544)
!3559 = !DILocation(line: 711, column: 35, scope: !3544)
!3560 = !DILocation(line: 711, column: 42, scope: !3544)
!3561 = !DILocation(line: 711, column: 48, scope: !3544)
!3562 = !DILocation(line: 711, column: 58, scope: !3544)
!3563 = !DILocation(line: 711, column: 64, scope: !3544)
!3564 = !DILocation(line: 711, column: 4, scope: !3544)
!3565 = !DILocation(line: 713, column: 4, scope: !3544)
!3566 = !DILocation(line: 714, column: 11, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 714, column: 4)
!3568 = !DILocation(line: 714, column: 9, scope: !3567)
!3569 = !DILocation(line: 714, column: 16, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 714, column: 4)
!3571 = !DILocation(line: 714, column: 20, scope: !3570)
!3572 = !DILocation(line: 714, column: 25, scope: !3570)
!3573 = !DILocation(line: 714, column: 18, scope: !3570)
!3574 = !DILocation(line: 714, column: 4, scope: !3567)
!3575 = !DILocation(line: 715, column: 28, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 714, column: 52)
!3577 = !DILocation(line: 715, column: 36, scope: !3576)
!3578 = !DILocation(line: 715, column: 42, scope: !3576)
!3579 = !DILocation(line: 715, column: 48, scope: !3576)
!3580 = !DILocation(line: 715, column: 53, scope: !3576)
!3581 = !DILocation(line: 715, column: 62, scope: !3576)
!3582 = !DILocation(line: 715, column: 65, scope: !3576)
!3583 = !DILocation(line: 715, column: 70, scope: !3576)
!3584 = !DILocation(line: 715, column: 5, scope: !3576)
!3585 = !DILocation(line: 716, column: 4, scope: !3576)
!3586 = !DILocation(line: 714, column: 35, scope: !3570)
!3587 = !DILocation(line: 714, column: 46, scope: !3570)
!3588 = !DILocation(line: 714, column: 4, scope: !3570)
!3589 = distinct !{!3589, !3574, !3590}
!3590 = !DILocation(line: 716, column: 4, scope: !3567)
!3591 = !DILocation(line: 718, column: 4, scope: !3544)
!3592 = !DILocation(line: 719, column: 4, scope: !3544)
!3593 = !DILocation(line: 720, column: 36, scope: !3544)
!3594 = !DILocation(line: 720, column: 41, scope: !3544)
!3595 = !DILocation(line: 720, column: 4, scope: !3544)
!3596 = !DILocation(line: 721, column: 43, scope: !3544)
!3597 = !DILocation(line: 721, column: 4, scope: !3544)
!3598 = !DILocation(line: 722, column: 32, scope: !3544)
!3599 = !DILocation(line: 722, column: 37, scope: !3544)
!3600 = !DILocation(line: 722, column: 4, scope: !3544)
!3601 = !DILocation(line: 723, column: 4, scope: !3544)
!3602 = !DILocation(line: 724, column: 4, scope: !3544)
!3603 = !DILocation(line: 726, column: 4, scope: !3544)
!3604 = !DILocation(line: 728, column: 2, scope: !3427)
!3605 = !DILocation(line: 731, column: 6, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 731, column: 6)
!3607 = !DILocation(line: 731, column: 11, scope: !3606)
!3608 = !DILocation(line: 731, column: 6, scope: !3409)
!3609 = !DILocalVariable(name: "quad_strip", scope: !3610, file: !3, line: 732, type: !3611)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 731, column: 20)
!3611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 4736, elements: !3612)
!3612 = !{!3613, !1413}
!3613 = !DISubrange(count: 74)
!3614 = !DILocation(line: 732, column: 9, scope: !3610)
!3615 = !DILocalVariable(name: "quad_strip_emboss", scope: !3610, file: !3, line: 733, type: !3616)
!3616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 4608, elements: !3617)
!3617 = !{!3618, !1413}
!3618 = !DISubrange(count: 72)
!3619 = !DILocation(line: 733, column: 9, scope: !3610)
!3620 = !DILocalVariable(name: "tcol", scope: !3610, file: !3, line: 735, type: !3621)
!3621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3622, size: 32, elements: !1350)
!3622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!3623 = !DILocation(line: 735, column: 23, scope: !3610)
!3624 = !DILocation(line: 735, column: 33, scope: !3610)
!3625 = !DILocation(line: 735, column: 34, scope: !3610)
!3626 = !DILocation(line: 735, column: 40, scope: !3610)
!3627 = !DILocation(line: 736, column: 34, scope: !3610)
!3628 = !DILocation(line: 736, column: 40, scope: !3610)
!3629 = !DILocation(line: 737, column: 34, scope: !3610)
!3630 = !DILocation(line: 737, column: 40, scope: !3610)
!3631 = !DILocation(line: 738, column: 34, scope: !3610)
!3632 = !DILocation(line: 738, column: 40, scope: !3610)
!3633 = !DILocation(line: 738, column: 51, scope: !3610)
!3634 = !DILocation(line: 740, column: 30, scope: !3610)
!3635 = !DILocation(line: 740, column: 35, scope: !3610)
!3636 = !DILocation(line: 740, column: 40, scope: !3610)
!3637 = !DILocation(line: 740, column: 49, scope: !3610)
!3638 = !DILocation(line: 740, column: 3, scope: !3610)
!3639 = !DILocation(line: 742, column: 7, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 742, column: 7)
!3641 = !DILocation(line: 742, column: 12, scope: !3640)
!3642 = !DILocation(line: 742, column: 7, scope: !3610)
!3643 = !DILocation(line: 743, column: 36, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 742, column: 20)
!3645 = !DILocation(line: 743, column: 41, scope: !3644)
!3646 = !DILocation(line: 743, column: 46, scope: !3644)
!3647 = !DILocation(line: 743, column: 59, scope: !3644)
!3648 = !DILocation(line: 743, column: 4, scope: !3644)
!3649 = !DILocation(line: 744, column: 3, scope: !3644)
!3650 = !DILocation(line: 746, column: 3, scope: !3610)
!3651 = !DILocation(line: 748, column: 10, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 748, column: 3)
!3653 = !DILocation(line: 748, column: 8, scope: !3652)
!3654 = !DILocation(line: 748, column: 15, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 748, column: 3)
!3656 = !DILocation(line: 748, column: 17, scope: !3655)
!3657 = !DILocation(line: 748, column: 3, scope: !3652)
!3658 = !DILocalVariable(name: "emboss", scope: !3659, file: !3, line: 749, type: !1512)
!3659 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 748, column: 42)
!3660 = !DILocation(line: 749, column: 18, scope: !3659)
!3661 = !DILocation(line: 751, column: 21, scope: !3659)
!3662 = !DILocation(line: 751, column: 17, scope: !3659)
!3663 = !DILocation(line: 751, column: 32, scope: !3659)
!3664 = !DILocation(line: 751, column: 28, scope: !3659)
!3665 = !DILocation(line: 751, column: 4, scope: !3659)
!3666 = !DILocation(line: 754, column: 16, scope: !3659)
!3667 = !DILocation(line: 754, column: 4, scope: !3659)
!3668 = !DILocation(line: 756, column: 36, scope: !3659)
!3669 = !DILocation(line: 756, column: 4, scope: !3659)
!3670 = !DILocation(line: 757, column: 35, scope: !3659)
!3671 = !DILocation(line: 757, column: 40, scope: !3659)
!3672 = !DILocation(line: 757, column: 48, scope: !3659)
!3673 = !DILocation(line: 757, column: 52, scope: !3659)
!3674 = !DILocation(line: 757, column: 4, scope: !3659)
!3675 = !DILocation(line: 760, column: 36, scope: !3659)
!3676 = !DILocation(line: 760, column: 4, scope: !3659)
!3677 = !DILocation(line: 762, column: 8, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 762, column: 8)
!3679 = !DILocation(line: 762, column: 13, scope: !3678)
!3680 = !DILocation(line: 762, column: 8, scope: !3659)
!3681 = !DILocation(line: 763, column: 37, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 762, column: 21)
!3683 = !DILocation(line: 763, column: 5, scope: !3682)
!3684 = !DILocation(line: 764, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 764, column: 9)
!3686 = !DILocation(line: 764, column: 9, scope: !3682)
!3687 = !DILocation(line: 765, column: 18, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 764, column: 20)
!3689 = !DILocation(line: 765, column: 6, scope: !3688)
!3690 = !DILocation(line: 766, column: 38, scope: !3688)
!3691 = !DILocation(line: 766, column: 6, scope: !3688)
!3692 = !DILocation(line: 767, column: 37, scope: !3688)
!3693 = !DILocation(line: 767, column: 42, scope: !3688)
!3694 = !DILocation(line: 767, column: 54, scope: !3688)
!3695 = !DILocation(line: 767, column: 6, scope: !3688)
!3696 = !DILocation(line: 768, column: 5, scope: !3688)
!3697 = !DILocation(line: 769, column: 4, scope: !3682)
!3698 = !DILocation(line: 771, column: 22, scope: !3659)
!3699 = !DILocation(line: 771, column: 18, scope: !3659)
!3700 = !DILocation(line: 771, column: 17, scope: !3659)
!3701 = !DILocation(line: 771, column: 34, scope: !3659)
!3702 = !DILocation(line: 771, column: 30, scope: !3659)
!3703 = !DILocation(line: 771, column: 29, scope: !3659)
!3704 = !DILocation(line: 771, column: 4, scope: !3659)
!3705 = !DILocation(line: 772, column: 3, scope: !3659)
!3706 = !DILocation(line: 748, column: 38, scope: !3655)
!3707 = !DILocation(line: 748, column: 3, scope: !3655)
!3708 = distinct !{!3708, !3657, !3709}
!3709 = !DILocation(line: 772, column: 3, scope: !3652)
!3710 = !DILocation(line: 774, column: 3, scope: !3610)
!3711 = !DILocation(line: 775, column: 2, scope: !3610)
!3712 = !DILocation(line: 778, column: 6, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 778, column: 6)
!3714 = !DILocation(line: 778, column: 11, scope: !3713)
!3715 = !DILocation(line: 778, column: 17, scope: !3713)
!3716 = !DILocation(line: 778, column: 21, scope: !3713)
!3717 = !DILocation(line: 778, column: 24, scope: !3713)
!3718 = !DILocation(line: 778, column: 29, scope: !3713)
!3719 = !DILocation(line: 778, column: 35, scope: !3713)
!3720 = !DILocation(line: 778, column: 6, scope: !3409)
!3721 = !DILocalVariable(name: "tcol", scope: !3722, file: !3, line: 779, type: !3621)
!3722 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 778, column: 40)
!3723 = !DILocation(line: 779, column: 23, scope: !3722)
!3724 = !DILocation(line: 779, column: 33, scope: !3722)
!3725 = !DILocation(line: 779, column: 34, scope: !3722)
!3726 = !DILocation(line: 779, column: 40, scope: !3722)
!3727 = !DILocation(line: 780, column: 34, scope: !3722)
!3728 = !DILocation(line: 780, column: 40, scope: !3722)
!3729 = !DILocation(line: 781, column: 34, scope: !3722)
!3730 = !DILocation(line: 781, column: 40, scope: !3722)
!3731 = !DILocation(line: 782, column: 57, scope: !3722)
!3732 = !DILocation(line: 782, column: 63, scope: !3722)
!3733 = !DILocation(line: 782, column: 50, scope: !3722)
!3734 = !DILocation(line: 782, column: 71, scope: !3722)
!3735 = !DILocation(line: 782, column: 34, scope: !3722)
!3736 = !DILocation(line: 784, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 784, column: 3)
!3738 = !DILocation(line: 784, column: 8, scope: !3737)
!3739 = !DILocation(line: 784, column: 15, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 784, column: 3)
!3741 = !DILocation(line: 784, column: 17, scope: !3740)
!3742 = !DILocation(line: 784, column: 3, scope: !3737)
!3743 = !DILocation(line: 785, column: 21, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 784, column: 42)
!3745 = !DILocation(line: 785, column: 17, scope: !3744)
!3746 = !DILocation(line: 785, column: 32, scope: !3744)
!3747 = !DILocation(line: 785, column: 28, scope: !3744)
!3748 = !DILocation(line: 785, column: 4, scope: !3744)
!3749 = !DILocation(line: 787, column: 8, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 787, column: 8)
!3751 = !DILocation(line: 787, column: 13, scope: !3750)
!3752 = !DILocation(line: 787, column: 19, scope: !3750)
!3753 = !DILocation(line: 787, column: 8, scope: !3744)
!3754 = !DILocation(line: 788, column: 17, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 787, column: 24)
!3756 = !DILocation(line: 788, column: 5, scope: !3755)
!3757 = !DILocation(line: 789, column: 24, scope: !3755)
!3758 = !DILocation(line: 789, column: 29, scope: !3755)
!3759 = !DILocation(line: 789, column: 5, scope: !3755)
!3760 = !DILocation(line: 790, column: 4, scope: !3755)
!3761 = !DILocation(line: 791, column: 8, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 791, column: 8)
!3763 = !DILocation(line: 791, column: 13, scope: !3762)
!3764 = !DILocation(line: 791, column: 19, scope: !3762)
!3765 = !DILocation(line: 791, column: 8, scope: !3744)
!3766 = !DILocation(line: 792, column: 17, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 791, column: 24)
!3768 = !DILocation(line: 792, column: 5, scope: !3767)
!3769 = !DILocation(line: 793, column: 24, scope: !3767)
!3770 = !DILocation(line: 793, column: 29, scope: !3767)
!3771 = !DILocation(line: 793, column: 5, scope: !3767)
!3772 = !DILocation(line: 794, column: 4, scope: !3767)
!3773 = !DILocation(line: 796, column: 22, scope: !3744)
!3774 = !DILocation(line: 796, column: 18, scope: !3744)
!3775 = !DILocation(line: 796, column: 17, scope: !3744)
!3776 = !DILocation(line: 796, column: 34, scope: !3744)
!3777 = !DILocation(line: 796, column: 30, scope: !3744)
!3778 = !DILocation(line: 796, column: 29, scope: !3744)
!3779 = !DILocation(line: 796, column: 4, scope: !3744)
!3780 = !DILocation(line: 797, column: 3, scope: !3744)
!3781 = !DILocation(line: 784, column: 38, scope: !3740)
!3782 = !DILocation(line: 784, column: 3, scope: !3740)
!3783 = distinct !{!3783, !3742, !3784}
!3784 = !DILocation(line: 797, column: 3, scope: !3737)
!3785 = !DILocation(line: 798, column: 2, scope: !3722)
!3786 = !DILocation(line: 800, column: 2, scope: !3409)
!3787 = !DILocation(line: 802, column: 1, scope: !3409)
!3788 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !2405, file: !2405, line: 114, type: !3789, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{null, !1487, !1547}
!3791 = !DILocalVariable(name: "r", arg: 1, scope: !3788, file: !2405, line: 114, type: !1487)
!3792 = !DILocation(line: 114, column: 35, scope: !3788)
!3793 = !DILocalVariable(name: "a", arg: 2, scope: !3788, file: !2405, line: 114, type: !1547)
!3794 = !DILocation(line: 114, column: 52, scope: !3788)
!3795 = !DILocation(line: 116, column: 9, scope: !3788)
!3796 = !DILocation(line: 116, column: 2, scope: !3788)
!3797 = !DILocation(line: 116, column: 7, scope: !3788)
!3798 = !DILocation(line: 117, column: 9, scope: !3788)
!3799 = !DILocation(line: 117, column: 2, scope: !3788)
!3800 = !DILocation(line: 117, column: 7, scope: !3788)
!3801 = !DILocation(line: 118, column: 9, scope: !3788)
!3802 = !DILocation(line: 118, column: 2, scope: !3788)
!3803 = !DILocation(line: 118, column: 7, scope: !3788)
!3804 = !DILocation(line: 119, column: 9, scope: !3788)
!3805 = !DILocation(line: 119, column: 2, scope: !3788)
!3806 = !DILocation(line: 119, column: 7, scope: !3788)
!3807 = !DILocation(line: 120, column: 1, scope: !3788)
!3808 = distinct !DISubprogram(name: "widget_scroll_circle", scope: !3, file: !3, line: 528, type: !3809, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !3811, !2279, !1253, !1260}
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3812 = !DILocalVariable(name: "tria", arg: 1, scope: !3808, file: !3, line: 528, type: !3811)
!3813 = !DILocation(line: 528, column: 49, scope: !3808)
!3814 = !DILocalVariable(name: "rect", arg: 2, scope: !3808, file: !3, line: 528, type: !2279)
!3815 = !DILocation(line: 528, column: 67, scope: !3808)
!3816 = !DILocalVariable(name: "triasize", arg: 3, scope: !3808, file: !3, line: 528, type: !1253)
!3817 = !DILocation(line: 528, column: 79, scope: !3808)
!3818 = !DILocalVariable(name: "where", arg: 4, scope: !3808, file: !3, line: 528, type: !1260)
!3819 = !DILocation(line: 528, column: 94, scope: !3808)
!3820 = !DILocation(line: 531, column: 10, scope: !3808)
!3821 = !DILocation(line: 531, column: 16, scope: !3808)
!3822 = !DILocation(line: 531, column: 22, scope: !3808)
!3823 = !DILocation(line: 531, column: 32, scope: !3808)
!3824 = !DILocation(line: 530, column: 2, scope: !3808)
!3825 = !DILocation(line: 534, column: 1, scope: !3808)
!3826 = distinct !DISubprogram(name: "ui_draw_but", scope: !3, file: !3, line: 3489, type: !3827, scopeLine: 3490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{null, !3829, !1800, !3832, !1464, !1451}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3831)
!3831 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1528, line: 69, baseType: !1519)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !945, line: 120, baseType: !3834)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !945, line: 96, size: 1856, elements: !3835)
!3835 = !{!3836, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3834, file: !945, line: 97, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3834, file: !945, line: 97, baseType: !3837, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3834, file: !945, line: 99, baseType: !1316, size: 512, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !3834, file: !945, line: 101, baseType: !1971, size: 256, offset: 640)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !3834, file: !945, line: 102, baseType: !1971, size: 256, offset: 896)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !3834, file: !945, line: 103, baseType: !1971, size: 256, offset: 1152)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !3834, file: !945, line: 104, baseType: !1971, size: 256, offset: 1408)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !3834, file: !945, line: 106, baseType: !1253, size: 32, offset: 1664)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !3834, file: !945, line: 108, baseType: !1300, size: 16, offset: 1696)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !3834, file: !945, line: 109, baseType: !1300, size: 16, offset: 1712)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !3834, file: !945, line: 111, baseType: !1300, size: 16, offset: 1728)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !3834, file: !945, line: 112, baseType: !1300, size: 16, offset: 1744)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !3834, file: !945, line: 113, baseType: !1300, size: 16, offset: 1760)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !3834, file: !945, line: 114, baseType: !1300, size: 16, offset: 1776)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !3834, file: !945, line: 115, baseType: !1300, size: 16, offset: 1792)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !3834, file: !945, line: 116, baseType: !1300, size: 16, offset: 1808)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !3834, file: !945, line: 117, baseType: !1300, size: 16, offset: 1824)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3834, file: !945, line: 119, baseType: !1300, size: 16, offset: 1840)
!3855 = !DILocalVariable(name: "C", arg: 1, scope: !3826, file: !3, line: 3489, type: !3829)
!3856 = !DILocation(line: 3489, column: 34, scope: !3826)
!3857 = !DILocalVariable(name: "ar", arg: 2, scope: !3826, file: !3, line: 3489, type: !1800)
!3858 = !DILocation(line: 3489, column: 46, scope: !3826)
!3859 = !DILocalVariable(name: "style", arg: 3, scope: !3826, file: !3, line: 3489, type: !3832)
!3860 = !DILocation(line: 3489, column: 59, scope: !3826)
!3861 = !DILocalVariable(name: "but", arg: 4, scope: !3826, file: !3, line: 3489, type: !1464)
!3862 = !DILocation(line: 3489, column: 73, scope: !3826)
!3863 = !DILocalVariable(name: "rect", arg: 5, scope: !3826, file: !3, line: 3489, type: !1451)
!3864 = !DILocation(line: 3489, column: 84, scope: !3826)
!3865 = !DILocalVariable(name: "btheme", scope: !3826, file: !3, line: 3491, type: !3866)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTheme", file: !945, line: 387, baseType: !3868)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTheme", file: !945, line: 356, size: 108224, elements: !3869)
!3869 = !{!3870, !3872, !3873, !3877, !3878, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4096, !4097}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3868, file: !945, line: 357, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3868, file: !945, line: 357, baseType: !3871, size: 64, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3868, file: !945, line: 358, baseType: !3874, size: 256, offset: 128)
!3874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 256, elements: !3875)
!3875 = !{!3876}
!3876 = !DISubrange(count: 32)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "tui", scope: !3868, file: !945, line: 360, baseType: !2172, size: 7296, offset: 384)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "tbuts", scope: !3868, file: !945, line: 364, baseType: !3879, size: 5760, offset: 7680)
!3879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeSpace", file: !945, line: 336, baseType: !3880)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeSpace", file: !945, line: 189, size: 5760, elements: !3881)
!3881 = !{!3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3880, file: !945, line: 191, baseType: !1349, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !3880, file: !945, line: 192, baseType: !1349, size: 32, offset: 32)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3880, file: !945, line: 193, baseType: !1349, size: 32, offset: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "text_hi", scope: !3880, file: !945, line: 194, baseType: !1349, size: 32, offset: 96)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3880, file: !945, line: 197, baseType: !1349, size: 32, offset: 128)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "header_title", scope: !3880, file: !945, line: 198, baseType: !1349, size: 32, offset: 160)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "header_text", scope: !3880, file: !945, line: 199, baseType: !1349, size: 32, offset: 192)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "header_text_hi", scope: !3880, file: !945, line: 200, baseType: !1349, size: 32, offset: 224)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "tab_active", scope: !3880, file: !945, line: 203, baseType: !1349, size: 32, offset: 256)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "tab_inactive", scope: !3880, file: !945, line: 204, baseType: !1349, size: 32, offset: 288)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "tab_back", scope: !3880, file: !945, line: 205, baseType: !1349, size: 32, offset: 320)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "tab_outline", scope: !3880, file: !945, line: 206, baseType: !1349, size: 32, offset: 352)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !3880, file: !945, line: 209, baseType: !1349, size: 32, offset: 384)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "button_title", scope: !3880, file: !945, line: 210, baseType: !1349, size: 32, offset: 416)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "button_text", scope: !3880, file: !945, line: 211, baseType: !1349, size: 32, offset: 448)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "button_text_hi", scope: !3880, file: !945, line: 212, baseType: !1349, size: 32, offset: 480)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3880, file: !945, line: 215, baseType: !1349, size: 32, offset: 512)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "list_title", scope: !3880, file: !945, line: 216, baseType: !1349, size: 32, offset: 544)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "list_text", scope: !3880, file: !945, line: 217, baseType: !1349, size: 32, offset: 576)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "list_text_hi", scope: !3880, file: !945, line: 218, baseType: !1349, size: 32, offset: 608)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "panelcolors", scope: !3880, file: !945, line: 227, baseType: !2195, size: 128, offset: 640)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "gradients", scope: !3880, file: !945, line: 229, baseType: !3904, size: 128, offset: 768)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiGradientColors", file: !945, line: 157, baseType: !3905)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiGradientColors", file: !945, line: 152, size: 128, elements: !3906)
!3906 = !{!3907, !3908, !3909, !3910}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !3905, file: !945, line: 153, baseType: !1349, size: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "high_gradient", scope: !3905, file: !945, line: 154, baseType: !1349, size: 32, offset: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "show_grad", scope: !3905, file: !945, line: 155, baseType: !1254, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3905, file: !945, line: 156, baseType: !1254, size: 32, offset: 96)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "shade1", scope: !3880, file: !945, line: 231, baseType: !1349, size: 32, offset: 896)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "shade2", scope: !3880, file: !945, line: 232, baseType: !1349, size: 32, offset: 928)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "hilite", scope: !3880, file: !945, line: 234, baseType: !1349, size: 32, offset: 960)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !3880, file: !945, line: 235, baseType: !1349, size: 32, offset: 992)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "view_overlay", scope: !3880, file: !945, line: 237, baseType: !1349, size: 32, offset: 1024)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !3880, file: !945, line: 239, baseType: !1349, size: 32, offset: 1056)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "wire_edit", scope: !3880, file: !945, line: 239, baseType: !1349, size: 32, offset: 1088)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3880, file: !945, line: 239, baseType: !1349, size: 32, offset: 1120)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3880, file: !945, line: 240, baseType: !1349, size: 32, offset: 1152)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3880, file: !945, line: 240, baseType: !1349, size: 32, offset: 1184)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !3880, file: !945, line: 240, baseType: !1349, size: 32, offset: 1216)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3880, file: !945, line: 240, baseType: !1349, size: 32, offset: 1248)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3880, file: !945, line: 241, baseType: !1349, size: 32, offset: 1280)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3880, file: !945, line: 241, baseType: !1349, size: 32, offset: 1312)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "group_active", scope: !3880, file: !945, line: 241, baseType: !1349, size: 32, offset: 1344)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !3880, file: !945, line: 241, baseType: !1349, size: 32, offset: 1376)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "vertex", scope: !3880, file: !945, line: 242, baseType: !1349, size: 32, offset: 1408)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_select", scope: !3880, file: !945, line: 242, baseType: !1349, size: 32, offset: 1440)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_unreferenced", scope: !3880, file: !945, line: 242, baseType: !1349, size: 32, offset: 1472)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !3880, file: !945, line: 243, baseType: !1349, size: 32, offset: 1504)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "edge_select", scope: !3880, file: !945, line: 243, baseType: !1349, size: 32, offset: 1536)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "edge_seam", scope: !3880, file: !945, line: 244, baseType: !1349, size: 32, offset: 1568)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "edge_sharp", scope: !3880, file: !945, line: 244, baseType: !1349, size: 32, offset: 1600)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "edge_facesel", scope: !3880, file: !945, line: 244, baseType: !1349, size: 32, offset: 1632)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "edge_crease", scope: !3880, file: !945, line: 244, baseType: !1349, size: 32, offset: 1664)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3880, file: !945, line: 245, baseType: !1349, size: 32, offset: 1696)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "face_select", scope: !3880, file: !945, line: 245, baseType: !1349, size: 32, offset: 1728)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "face_dot", scope: !3880, file: !945, line: 246, baseType: !1349, size: 32, offset: 1760)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_len", scope: !3880, file: !945, line: 247, baseType: !1349, size: 32, offset: 1792)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_angle", scope: !3880, file: !945, line: 247, baseType: !1349, size: 32, offset: 1824)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_angle", scope: !3880, file: !945, line: 247, baseType: !1349, size: 32, offset: 1856)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_area", scope: !3880, file: !945, line: 247, baseType: !1349, size: 32, offset: 1888)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !3880, file: !945, line: 248, baseType: !1349, size: 32, offset: 1920)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_normal", scope: !3880, file: !945, line: 249, baseType: !1349, size: 32, offset: 1952)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "loop_normal", scope: !3880, file: !945, line: 250, baseType: !1349, size: 32, offset: 1984)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "bone_solid", scope: !3880, file: !945, line: 251, baseType: !1349, size: 32, offset: 2016)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose", scope: !3880, file: !945, line: 251, baseType: !1349, size: 32, offset: 2048)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose_active", scope: !3880, file: !945, line: 251, baseType: !1349, size: 32, offset: 2080)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !3880, file: !945, line: 252, baseType: !1349, size: 32, offset: 2112)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "strip_select", scope: !3880, file: !945, line: 252, baseType: !1349, size: 32, offset: 2144)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !3880, file: !945, line: 253, baseType: !1349, size: 32, offset: 2176)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_edge_mark", scope: !3880, file: !945, line: 254, baseType: !1349, size: 32, offset: 2208)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_face_mark", scope: !3880, file: !945, line: 254, baseType: !1349, size: 32, offset: 2240)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_uline", scope: !3880, file: !945, line: 256, baseType: !1349, size: 32, offset: 2272)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_vline", scope: !3880, file: !945, line: 256, baseType: !1349, size: 32, offset: 2304)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !3880, file: !945, line: 257, baseType: !1349, size: 32, offset: 2336)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_uline", scope: !3880, file: !945, line: 257, baseType: !1349, size: 32, offset: 2368)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_vline", scope: !3880, file: !945, line: 257, baseType: !1349, size: 32, offset: 2400)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "lastsel_point", scope: !3880, file: !945, line: 257, baseType: !1349, size: 32, offset: 2432)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "handle_free", scope: !3880, file: !945, line: 259, baseType: !1349, size: 32, offset: 2464)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto", scope: !3880, file: !945, line: 259, baseType: !1349, size: 32, offset: 2496)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vect", scope: !3880, file: !945, line: 259, baseType: !1349, size: 32, offset: 2528)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "handle_align", scope: !3880, file: !945, line: 259, baseType: !1349, size: 32, offset: 2560)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto_clamped", scope: !3880, file: !945, line: 259, baseType: !1349, size: 32, offset: 2592)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_free", scope: !3880, file: !945, line: 260, baseType: !1349, size: 32, offset: 2624)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto", scope: !3880, file: !945, line: 260, baseType: !1349, size: 32, offset: 2656)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_vect", scope: !3880, file: !945, line: 260, baseType: !1349, size: 32, offset: 2688)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_align", scope: !3880, file: !945, line: 260, baseType: !1349, size: 32, offset: 2720)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto_clamped", scope: !3880, file: !945, line: 260, baseType: !1349, size: 32, offset: 2752)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "ds_channel", scope: !3880, file: !945, line: 262, baseType: !1349, size: 32, offset: 2784)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "ds_subchannel", scope: !3880, file: !945, line: 262, baseType: !1349, size: 32, offset: 2816)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe", scope: !3880, file: !945, line: 263, baseType: !1349, size: 32, offset: 2848)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme", scope: !3880, file: !945, line: 263, baseType: !1349, size: 32, offset: 2880)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown", scope: !3880, file: !945, line: 263, baseType: !1349, size: 32, offset: 2912)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter", scope: !3880, file: !945, line: 263, baseType: !1349, size: 32, offset: 2944)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe_select", scope: !3880, file: !945, line: 264, baseType: !1349, size: 32, offset: 2976)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme_select", scope: !3880, file: !945, line: 264, baseType: !1349, size: 32, offset: 3008)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown_select", scope: !3880, file: !945, line: 264, baseType: !1349, size: 32, offset: 3040)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter_select", scope: !3880, file: !945, line: 264, baseType: !1349, size: 32, offset: 3072)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder", scope: !3880, file: !945, line: 265, baseType: !1349, size: 32, offset: 3104)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder_select", scope: !3880, file: !945, line: 265, baseType: !1349, size: 32, offset: 3136)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "console_output", scope: !3880, file: !945, line: 267, baseType: !1349, size: 32, offset: 3168)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "console_input", scope: !3880, file: !945, line: 267, baseType: !1349, size: 32, offset: 3200)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "console_info", scope: !3880, file: !945, line: 267, baseType: !1349, size: 32, offset: 3232)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "console_error", scope: !3880, file: !945, line: 267, baseType: !1349, size: 32, offset: 3264)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "console_cursor", scope: !3880, file: !945, line: 268, baseType: !1349, size: 32, offset: 3296)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "console_select", scope: !3880, file: !945, line: 268, baseType: !1349, size: 32, offset: 3328)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_size", scope: !3880, file: !945, line: 270, baseType: !1260, size: 8, offset: 3360)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "outline_width", scope: !3880, file: !945, line: 270, baseType: !1260, size: 8, offset: 3368)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "facedot_size", scope: !3880, file: !945, line: 270, baseType: !1260, size: 8, offset: 3376)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "noodle_curving", scope: !3880, file: !945, line: 271, baseType: !1260, size: 8, offset: 3384)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxl", scope: !3880, file: !945, line: 274, baseType: !1349, size: 32, offset: 3392)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxs", scope: !3880, file: !945, line: 274, baseType: !1349, size: 32, offset: 3424)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxb", scope: !3880, file: !945, line: 275, baseType: !1349, size: 32, offset: 3456)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxn", scope: !3880, file: !945, line: 275, baseType: !1349, size: 32, offset: 3488)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxv", scope: !3880, file: !945, line: 276, baseType: !1349, size: 32, offset: 3520)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxc", scope: !3880, file: !945, line: 276, baseType: !1349, size: 32, offset: 3552)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxd", scope: !3880, file: !945, line: 277, baseType: !1349, size: 32, offset: 3584)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxr", scope: !3880, file: !945, line: 277, baseType: !1349, size: 32, offset: 3616)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_output", scope: !3880, file: !945, line: 279, baseType: !1349, size: 32, offset: 3648)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_filter", scope: !3880, file: !945, line: 279, baseType: !1349, size: 32, offset: 3680)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_vector", scope: !3880, file: !945, line: 280, baseType: !1349, size: 32, offset: 3712)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_texture", scope: !3880, file: !945, line: 280, baseType: !1349, size: 32, offset: 3744)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_shader", scope: !3880, file: !945, line: 281, baseType: !1349, size: 32, offset: 3776)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_script", scope: !3880, file: !945, line: 281, baseType: !1349, size: 32, offset: 3808)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_pattern", scope: !3880, file: !945, line: 282, baseType: !1349, size: 32, offset: 3840)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_layout", scope: !3880, file: !945, line: 282, baseType: !1349, size: 32, offset: 3872)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "movie", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 3904)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 3936)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 3968)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 4000)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 4032)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !3880, file: !945, line: 284, baseType: !1349, size: 32, offset: 4064)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !3880, file: !945, line: 285, baseType: !1349, size: 32, offset: 4096)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "transition", scope: !3880, file: !945, line: 285, baseType: !1349, size: 32, offset: 4128)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "meta", scope: !3880, file: !945, line: 285, baseType: !1349, size: 32, offset: 4160)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "editmesh_active", scope: !3880, file: !945, line: 286, baseType: !1349, size: 32, offset: 4192)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex", scope: !3880, file: !945, line: 288, baseType: !1349, size: 32, offset: 4224)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_select", scope: !3880, file: !945, line: 289, baseType: !1349, size: 32, offset: 4256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3880, file: !945, line: 290, baseType: !1349, size: 32, offset: 4288)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_size", scope: !3880, file: !945, line: 292, baseType: !1260, size: 8, offset: 4320)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "marker_outline", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4328)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4360)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "act_marker", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4392)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "sel_marker", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4424)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "dis_marker", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4456)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "lock_marker", scope: !3880, file: !945, line: 294, baseType: !1349, size: 32, offset: 4488)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_solid", scope: !3880, file: !945, line: 295, baseType: !1349, size: 32, offset: 4520)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "path_before", scope: !3880, file: !945, line: 296, baseType: !1349, size: 32, offset: 4552)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "path_after", scope: !3880, file: !945, line: 296, baseType: !1349, size: 32, offset: 4584)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "camera_path", scope: !3880, file: !945, line: 297, baseType: !1349, size: 32, offset: 4616)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "hpad", scope: !3880, file: !945, line: 298, baseType: !4033, size: 24, offset: 4648)
!4033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 24, elements: !1907)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "preview_back", scope: !3880, file: !945, line: 300, baseType: !1349, size: 32, offset: 4672)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_face", scope: !3880, file: !945, line: 301, baseType: !1349, size: 32, offset: 4704)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_edge", scope: !3880, file: !945, line: 302, baseType: !1349, size: 32, offset: 4736)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_vert", scope: !3880, file: !945, line: 303, baseType: !1349, size: 32, offset: 4768)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_stitchable", scope: !3880, file: !945, line: 304, baseType: !1349, size: 32, offset: 4800)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_unstitchable", scope: !3880, file: !945, line: 305, baseType: !1349, size: 32, offset: 4832)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_active", scope: !3880, file: !945, line: 306, baseType: !1349, size: 32, offset: 4864)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "uv_shadow", scope: !3880, file: !945, line: 308, baseType: !1349, size: 32, offset: 4896)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "uv_others", scope: !3880, file: !945, line: 309, baseType: !1349, size: 32, offset: 4928)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3880, file: !945, line: 311, baseType: !1349, size: 32, offset: 4960)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "selected_highlight", scope: !3880, file: !945, line: 312, baseType: !1349, size: 32, offset: 4992)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "skin_root", scope: !3880, file: !945, line: 314, baseType: !1349, size: 32, offset: 5024)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "anim_active", scope: !3880, file: !945, line: 317, baseType: !1349, size: 32, offset: 5056)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "anim_non_active", scope: !3880, file: !945, line: 318, baseType: !1349, size: 32, offset: 5088)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweaking", scope: !3880, file: !945, line: 320, baseType: !1349, size: 32, offset: 5120)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweakdupli", scope: !3880, file: !945, line: 321, baseType: !1349, size: 32, offset: 5152)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition", scope: !3880, file: !945, line: 323, baseType: !1349, size: 32, offset: 5184)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition_sel", scope: !3880, file: !945, line: 323, baseType: !1349, size: 32, offset: 5216)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta", scope: !3880, file: !945, line: 324, baseType: !1349, size: 32, offset: 5248)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta_sel", scope: !3880, file: !945, line: 324, baseType: !1349, size: 32, offset: 5280)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound", scope: !3880, file: !945, line: 325, baseType: !1349, size: 32, offset: 5312)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound_sel", scope: !3880, file: !945, line: 325, baseType: !1349, size: 32, offset: 5344)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected", scope: !3880, file: !945, line: 328, baseType: !1349, size: 32, offset: 5376)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected_text", scope: !3880, file: !945, line: 328, baseType: !1349, size: 32, offset: 5408)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "info_error", scope: !3880, file: !945, line: 329, baseType: !1349, size: 32, offset: 5440)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "info_error_text", scope: !3880, file: !945, line: 329, baseType: !1349, size: 32, offset: 5472)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning", scope: !3880, file: !945, line: 330, baseType: !1349, size: 32, offset: 5504)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning_text", scope: !3880, file: !945, line: 330, baseType: !1349, size: 32, offset: 5536)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "info_info", scope: !3880, file: !945, line: 331, baseType: !1349, size: 32, offset: 5568)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "info_info_text", scope: !3880, file: !945, line: 331, baseType: !1349, size: 32, offset: 5600)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug", scope: !3880, file: !945, line: 332, baseType: !1349, size: 32, offset: 5632)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug_text", scope: !3880, file: !945, line: 332, baseType: !1349, size: 32, offset: 5664)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_pivot", scope: !3880, file: !945, line: 334, baseType: !1349, size: 32, offset: 5696)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_handle", scope: !3880, file: !945, line: 335, baseType: !1349, size: 32, offset: 5728)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "tv3d", scope: !3868, file: !945, line: 365, baseType: !3879, size: 5760, offset: 13440)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "tfile", scope: !3868, file: !945, line: 366, baseType: !3879, size: 5760, offset: 19200)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "tipo", scope: !3868, file: !945, line: 367, baseType: !3879, size: 5760, offset: 24960)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "tinfo", scope: !3868, file: !945, line: 368, baseType: !3879, size: 5760, offset: 30720)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "tact", scope: !3868, file: !945, line: 369, baseType: !3879, size: 5760, offset: 36480)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "tnla", scope: !3868, file: !945, line: 370, baseType: !3879, size: 5760, offset: 42240)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "tseq", scope: !3868, file: !945, line: 371, baseType: !3879, size: 5760, offset: 48000)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "tima", scope: !3868, file: !945, line: 372, baseType: !3879, size: 5760, offset: 53760)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3868, file: !945, line: 373, baseType: !3879, size: 5760, offset: 59520)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "toops", scope: !3868, file: !945, line: 374, baseType: !3879, size: 5760, offset: 65280)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "ttime", scope: !3868, file: !945, line: 375, baseType: !3879, size: 5760, offset: 71040)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3868, file: !945, line: 376, baseType: !3879, size: 5760, offset: 76800)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "tlogic", scope: !3868, file: !945, line: 377, baseType: !3879, size: 5760, offset: 82560)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "tuserpref", scope: !3868, file: !945, line: 378, baseType: !3879, size: 5760, offset: 88320)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "tconsole", scope: !3868, file: !945, line: 379, baseType: !3879, size: 5760, offset: 94080)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "tclip", scope: !3868, file: !945, line: 380, baseType: !3879, size: 5760, offset: 99840)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "tarm", scope: !3868, file: !945, line: 383, baseType: !4085, size: 2560, offset: 105600)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4086, size: 2560, elements: !4094)
!4086 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !945, line: 347, baseType: !4087)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !945, line: 340, size: 128, elements: !4088)
!4088 = !{!4089, !4090, !4091, !4092, !4093}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !4087, file: !945, line: 341, baseType: !1349, size: 32)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4087, file: !945, line: 342, baseType: !1349, size: 32, offset: 32)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4087, file: !945, line: 343, baseType: !1349, size: 32, offset: 64)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4087, file: !945, line: 345, baseType: !1300, size: 16, offset: 96)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4087, file: !945, line: 346, baseType: !1300, size: 16, offset: 112)
!4094 = !{!4095}
!4095 = !DISubrange(count: 20)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "active_theme_area", scope: !3868, file: !945, line: 386, baseType: !1254, size: 32, offset: 108160)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3868, file: !945, line: 386, baseType: !1254, size: 32, offset: 108192)
!4098 = !DILocation(line: 3491, column: 10, scope: !3826)
!4099 = !DILocation(line: 3491, column: 19, scope: !3826)
!4100 = !DILocalVariable(name: "tui", scope: !3826, file: !3, line: 3492, type: !2171)
!4101 = !DILocation(line: 3492, column: 11, scope: !3826)
!4102 = !DILocation(line: 3492, column: 18, scope: !3826)
!4103 = !DILocation(line: 3492, column: 26, scope: !3826)
!4104 = !DILocalVariable(name: "fstyle", scope: !3826, file: !3, line: 3493, type: !1970)
!4105 = !DILocation(line: 3493, column: 15, scope: !3826)
!4106 = !DILocation(line: 3493, column: 25, scope: !3826)
!4107 = !DILocation(line: 3493, column: 32, scope: !3826)
!4108 = !DILocalVariable(name: "wt", scope: !3826, file: !3, line: 3494, type: !1431)
!4109 = !DILocation(line: 3494, column: 16, scope: !3826)
!4110 = !DILocation(line: 3497, column: 6, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 3497, column: 6)
!4112 = !DILocation(line: 3497, column: 11, scope: !4111)
!4113 = !DILocation(line: 3497, column: 14, scope: !4111)
!4114 = !DILocation(line: 3497, column: 6, scope: !3826)
!4115 = !DILocation(line: 3498, column: 11, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 3497, column: 29)
!4117 = !DILocation(line: 3498, column: 16, scope: !4116)
!4118 = !DILocation(line: 3498, column: 3, scope: !4116)
!4119 = !DILocation(line: 3500, column: 28, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 3498, column: 22)
!4121 = !DILocation(line: 3500, column: 35, scope: !4120)
!4122 = !DILocation(line: 3500, column: 49, scope: !4120)
!4123 = !DILocation(line: 3500, column: 54, scope: !4120)
!4124 = !DILocation(line: 3500, column: 70, scope: !4120)
!4125 = !DILocation(line: 3500, column: 75, scope: !4120)
!4126 = !DILocation(line: 3500, column: 5, scope: !4120)
!4127 = !DILocation(line: 3501, column: 5, scope: !4120)
!4128 = !DILocation(line: 3503, column: 23, scope: !4120)
!4129 = !DILocation(line: 3503, column: 30, scope: !4120)
!4130 = !DILocation(line: 3503, column: 35, scope: !4120)
!4131 = !DILocation(line: 3503, column: 5, scope: !4120)
!4132 = !DILocation(line: 3504, column: 5, scope: !4120)
!4133 = !DILocation(line: 3506, column: 10, scope: !4120)
!4134 = !DILocation(line: 3506, column: 8, scope: !4120)
!4135 = !DILocation(line: 3507, column: 5, scope: !4120)
!4136 = !DILocation(line: 3509, column: 2, scope: !4116)
!4137 = !DILocation(line: 3510, column: 11, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 3510, column: 11)
!4139 = !DILocation(line: 3510, column: 16, scope: !4138)
!4140 = !DILocation(line: 3510, column: 19, scope: !4138)
!4141 = !DILocation(line: 3510, column: 11, scope: !4111)
!4142 = !DILocation(line: 3512, column: 8, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 3510, column: 34)
!4144 = !DILocation(line: 3512, column: 6, scope: !4143)
!4145 = !DILocation(line: 3513, column: 2, scope: !4143)
!4146 = !DILocation(line: 3514, column: 11, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 3514, column: 11)
!4148 = !DILocation(line: 3514, column: 16, scope: !4147)
!4149 = !DILocation(line: 3514, column: 19, scope: !4147)
!4150 = !DILocation(line: 3514, column: 11, scope: !4138)
!4151 = !DILocation(line: 3515, column: 8, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 3514, column: 34)
!4153 = !DILocation(line: 3515, column: 6, scope: !4152)
!4154 = !DILocation(line: 3516, column: 2, scope: !4152)
!4155 = !DILocation(line: 3519, column: 11, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 3517, column: 7)
!4157 = !DILocation(line: 3519, column: 16, scope: !4156)
!4158 = !DILocation(line: 3519, column: 3, scope: !4156)
!4159 = !DILocation(line: 3521, column: 9, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3521, column: 9)
!4161 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 3519, column: 22)
!4162 = !DILocation(line: 3521, column: 14, scope: !4160)
!4163 = !DILocation(line: 3521, column: 21, scope: !4160)
!4164 = !DILocation(line: 3521, column: 26, scope: !4160)
!4165 = !DILocation(line: 3521, column: 9, scope: !4161)
!4166 = !DILocation(line: 3522, column: 29, scope: !4160)
!4167 = !DILocation(line: 3522, column: 36, scope: !4160)
!4168 = !DILocation(line: 3522, column: 50, scope: !4160)
!4169 = !DILocation(line: 3522, column: 55, scope: !4160)
!4170 = !DILocation(line: 3522, column: 71, scope: !4160)
!4171 = !DILocation(line: 3522, column: 76, scope: !4160)
!4172 = !DILocation(line: 3522, column: 6, scope: !4160)
!4173 = !DILocation(line: 3524, column: 11, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4160, file: !3, line: 3523, column: 10)
!4175 = !DILocation(line: 3524, column: 9, scope: !4174)
!4176 = !DILocation(line: 3525, column: 16, scope: !4174)
!4177 = !DILocation(line: 3525, column: 23, scope: !4174)
!4178 = !DILocation(line: 3525, column: 13, scope: !4174)
!4179 = !DILocation(line: 3527, column: 5, scope: !4161)
!4180 = !DILocation(line: 3531, column: 5, scope: !4161)
!4181 = !DILocation(line: 3534, column: 10, scope: !4161)
!4182 = !DILocation(line: 3534, column: 8, scope: !4161)
!4183 = !DILocation(line: 3535, column: 5, scope: !4161)
!4184 = !DILocation(line: 3538, column: 10, scope: !4161)
!4185 = !DILocation(line: 3538, column: 8, scope: !4161)
!4186 = !DILocation(line: 3539, column: 5, scope: !4161)
!4187 = !DILocation(line: 3542, column: 10, scope: !4161)
!4188 = !DILocation(line: 3542, column: 8, scope: !4161)
!4189 = !DILocation(line: 3543, column: 5, scope: !4161)
!4190 = !DILocation(line: 3546, column: 10, scope: !4161)
!4191 = !DILocation(line: 3546, column: 8, scope: !4161)
!4192 = !DILocation(line: 3547, column: 5, scope: !4161)
!4193 = !DILocation(line: 3550, column: 10, scope: !4161)
!4194 = !DILocation(line: 3550, column: 8, scope: !4161)
!4195 = !DILocation(line: 3551, column: 5, scope: !4161)
!4196 = !DILocation(line: 3554, column: 10, scope: !4161)
!4197 = !DILocation(line: 3554, column: 8, scope: !4161)
!4198 = !DILocation(line: 3555, column: 5, scope: !4161)
!4199 = !DILocation(line: 3559, column: 10, scope: !4161)
!4200 = !DILocation(line: 3559, column: 8, scope: !4161)
!4201 = !DILocation(line: 3560, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3560, column: 9)
!4203 = !DILocation(line: 3560, column: 14, scope: !4202)
!4204 = !DILocation(line: 3560, column: 21, scope: !4202)
!4205 = !DILocation(line: 3560, column: 26, scope: !4202)
!4206 = !DILocation(line: 3560, column: 9, scope: !4161)
!4207 = !DILocation(line: 3561, column: 24, scope: !4202)
!4208 = !DILocation(line: 3561, column: 32, scope: !4202)
!4209 = !DILocation(line: 3561, column: 36, scope: !4202)
!4210 = !DILocation(line: 3561, column: 6, scope: !4202)
!4211 = !DILocation(line: 3561, column: 10, scope: !4202)
!4212 = !DILocation(line: 3561, column: 21, scope: !4202)
!4213 = !DILocation(line: 3562, column: 5, scope: !4161)
!4214 = !DILocation(line: 3567, column: 10, scope: !4161)
!4215 = !DILocation(line: 3567, column: 8, scope: !4161)
!4216 = !DILocation(line: 3568, column: 5, scope: !4161)
!4217 = !DILocation(line: 3572, column: 11, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3572, column: 9)
!4219 = !DILocation(line: 3572, column: 16, scope: !4218)
!4220 = !DILocation(line: 3572, column: 21, scope: !4218)
!4221 = !DILocation(line: 3572, column: 9, scope: !4161)
!4222 = !DILocation(line: 3573, column: 11, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 3572, column: 37)
!4224 = !DILocation(line: 3573, column: 9, scope: !4223)
!4225 = !DILocation(line: 3574, column: 6, scope: !4223)
!4226 = !DILocation(line: 3574, column: 11, scope: !4223)
!4227 = !DILocation(line: 3574, column: 20, scope: !4223)
!4228 = !DILocation(line: 3575, column: 5, scope: !4223)
!4229 = !DILocation(line: 3577, column: 11, scope: !4218)
!4230 = !DILocation(line: 3577, column: 9, scope: !4218)
!4231 = !DILocation(line: 3580, column: 9, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3580, column: 9)
!4233 = !DILocation(line: 3580, column: 14, scope: !4232)
!4234 = !DILocation(line: 3580, column: 21, scope: !4232)
!4235 = !DILocation(line: 3580, column: 26, scope: !4232)
!4236 = !DILocation(line: 3580, column: 9, scope: !4161)
!4237 = !DILocation(line: 3581, column: 6, scope: !4232)
!4238 = !DILocation(line: 3581, column: 10, scope: !4232)
!4239 = !DILocation(line: 3581, column: 16, scope: !4232)
!4240 = !DILocation(line: 3583, column: 5, scope: !4161)
!4241 = !DILocation(line: 3587, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3587, column: 9)
!4243 = !DILocation(line: 3587, column: 14, scope: !4242)
!4244 = !DILocation(line: 3587, column: 19, scope: !4242)
!4245 = !DILocation(line: 3587, column: 9, scope: !4161)
!4246 = !DILocation(line: 3589, column: 11, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 3587, column: 39)
!4248 = !DILocation(line: 3589, column: 9, scope: !4247)
!4249 = !DILocation(line: 3590, column: 5, scope: !4247)
!4250 = !DILocation(line: 3596, column: 12, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 3596, column: 10)
!4252 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 3591, column: 10)
!4253 = !DILocation(line: 3596, column: 17, scope: !4251)
!4254 = !DILocation(line: 3596, column: 24, scope: !4251)
!4255 = !DILocation(line: 3596, column: 27, scope: !4251)
!4256 = !DILocation(line: 3596, column: 32, scope: !4251)
!4257 = !DILocation(line: 3596, column: 37, scope: !4251)
!4258 = !DILocation(line: 3596, column: 57, scope: !4251)
!4259 = !DILocation(line: 3596, column: 41, scope: !4251)
!4260 = !DILocation(line: 3596, column: 81, scope: !4251)
!4261 = !DILocation(line: 3596, column: 65, scope: !4251)
!4262 = !DILocation(line: 3596, column: 87, scope: !4251)
!4263 = !DILocation(line: 3596, column: 63, scope: !4251)
!4264 = !DILocation(line: 3596, column: 93, scope: !4251)
!4265 = !DILocation(line: 3598, column: 11, scope: !4251)
!4266 = !DILocation(line: 3598, column: 16, scope: !4251)
!4267 = !DILocation(line: 3598, column: 21, scope: !4251)
!4268 = !DILocation(line: 3596, column: 10, scope: !4252)
!4269 = !DILocation(line: 3601, column: 12, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 3599, column: 6)
!4271 = !DILocation(line: 3601, column: 10, scope: !4270)
!4272 = !DILocation(line: 3602, column: 6, scope: !4270)
!4273 = !DILocation(line: 3604, column: 12, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 3603, column: 11)
!4275 = !DILocation(line: 3604, column: 10, scope: !4274)
!4276 = !DILocation(line: 3607, column: 5, scope: !4161)
!4277 = !DILocation(line: 3610, column: 10, scope: !4161)
!4278 = !DILocation(line: 3610, column: 8, scope: !4161)
!4279 = !DILocation(line: 3611, column: 5, scope: !4161)
!4280 = !DILocation(line: 3614, column: 10, scope: !4161)
!4281 = !DILocation(line: 3614, column: 8, scope: !4161)
!4282 = !DILocation(line: 3615, column: 5, scope: !4161)
!4283 = !DILocation(line: 3618, column: 10, scope: !4161)
!4284 = !DILocation(line: 3618, column: 8, scope: !4161)
!4285 = !DILocation(line: 3619, column: 5, scope: !4161)
!4286 = !DILocation(line: 3623, column: 10, scope: !4161)
!4287 = !DILocation(line: 3623, column: 8, scope: !4161)
!4288 = !DILocation(line: 3624, column: 5, scope: !4161)
!4289 = !DILocation(line: 3628, column: 10, scope: !4161)
!4290 = !DILocation(line: 3628, column: 8, scope: !4161)
!4291 = !DILocation(line: 3629, column: 5, scope: !4161)
!4292 = !DILocation(line: 3629, column: 9, scope: !4161)
!4293 = !DILocation(line: 3629, column: 16, scope: !4161)
!4294 = !DILocation(line: 3631, column: 5, scope: !4161)
!4295 = !DILocation(line: 3634, column: 28, scope: !4161)
!4296 = !DILocation(line: 3634, column: 31, scope: !4161)
!4297 = !DILocation(line: 3634, column: 36, scope: !4161)
!4298 = !DILocation(line: 3634, column: 63, scope: !4161)
!4299 = !DILocation(line: 3634, column: 5, scope: !4161)
!4300 = !DILocation(line: 3635, column: 5, scope: !4161)
!4301 = !DILocation(line: 3638, column: 9, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3638, column: 9)
!4303 = !DILocation(line: 3638, column: 9, scope: !4161)
!4304 = !DILocation(line: 3639, column: 24, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 3638, column: 54)
!4306 = !DILocation(line: 3639, column: 29, scope: !4305)
!4307 = !DILocation(line: 3639, column: 6, scope: !4305)
!4308 = !DILocation(line: 3640, column: 5, scope: !4305)
!4309 = !DILocation(line: 3642, column: 26, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 3641, column: 10)
!4311 = !DILocation(line: 3642, column: 31, scope: !4310)
!4312 = !DILocation(line: 3642, column: 6, scope: !4310)
!4313 = !DILocation(line: 3644, column: 5, scope: !4161)
!4314 = !DILocation(line: 3647, column: 27, scope: !4161)
!4315 = !DILocation(line: 3647, column: 33, scope: !4161)
!4316 = !DILocation(line: 3647, column: 38, scope: !4161)
!4317 = !DILocation(line: 3647, column: 52, scope: !4161)
!4318 = !DILocation(line: 3647, column: 5, scope: !4161)
!4319 = !DILocation(line: 3648, column: 5, scope: !4161)
!4320 = !DILocation(line: 3651, column: 27, scope: !4161)
!4321 = !DILocation(line: 3651, column: 33, scope: !4161)
!4322 = !DILocation(line: 3651, column: 38, scope: !4161)
!4323 = !DILocation(line: 3651, column: 52, scope: !4161)
!4324 = !DILocation(line: 3651, column: 5, scope: !4161)
!4325 = !DILocation(line: 3652, column: 5, scope: !4161)
!4326 = !DILocation(line: 3655, column: 10, scope: !4161)
!4327 = !DILocation(line: 3655, column: 8, scope: !4161)
!4328 = !DILocation(line: 3656, column: 5, scope: !4161)
!4329 = !DILocation(line: 3659, column: 23, scope: !4161)
!4330 = !DILocation(line: 3659, column: 27, scope: !4161)
!4331 = !DILocation(line: 3659, column: 33, scope: !4161)
!4332 = !DILocation(line: 3659, column: 38, scope: !4161)
!4333 = !DILocation(line: 3659, column: 52, scope: !4161)
!4334 = !DILocation(line: 3659, column: 5, scope: !4161)
!4335 = !DILocation(line: 3660, column: 5, scope: !4161)
!4336 = !DILocation(line: 3663, column: 27, scope: !4161)
!4337 = !DILocation(line: 3663, column: 31, scope: !4161)
!4338 = !DILocation(line: 3663, column: 37, scope: !4161)
!4339 = !DILocation(line: 3663, column: 42, scope: !4161)
!4340 = !DILocation(line: 3663, column: 56, scope: !4161)
!4341 = !DILocation(line: 3663, column: 5, scope: !4161)
!4342 = !DILocation(line: 3664, column: 5, scope: !4161)
!4343 = !DILocation(line: 3667, column: 26, scope: !4161)
!4344 = !DILocation(line: 3667, column: 30, scope: !4161)
!4345 = !DILocation(line: 3667, column: 36, scope: !4161)
!4346 = !DILocation(line: 3667, column: 41, scope: !4161)
!4347 = !DILocation(line: 3667, column: 55, scope: !4161)
!4348 = !DILocation(line: 3667, column: 5, scope: !4161)
!4349 = !DILocation(line: 3668, column: 5, scope: !4161)
!4350 = !DILocation(line: 3671, column: 29, scope: !4161)
!4351 = !DILocation(line: 3671, column: 33, scope: !4161)
!4352 = !DILocation(line: 3671, column: 39, scope: !4161)
!4353 = !DILocation(line: 3671, column: 44, scope: !4161)
!4354 = !DILocation(line: 3671, column: 58, scope: !4161)
!4355 = !DILocation(line: 3671, column: 5, scope: !4161)
!4356 = !DILocation(line: 3672, column: 5, scope: !4161)
!4357 = !DILocation(line: 3675, column: 23, scope: !4161)
!4358 = !DILocation(line: 3675, column: 27, scope: !4161)
!4359 = !DILocation(line: 3675, column: 33, scope: !4161)
!4360 = !DILocation(line: 3675, column: 38, scope: !4161)
!4361 = !DILocation(line: 3675, column: 52, scope: !4161)
!4362 = !DILocation(line: 3675, column: 5, scope: !4161)
!4363 = !DILocation(line: 3676, column: 5, scope: !4161)
!4364 = !DILocation(line: 3679, column: 10, scope: !4161)
!4365 = !DILocation(line: 3679, column: 8, scope: !4161)
!4366 = !DILocation(line: 3680, column: 15, scope: !4161)
!4367 = !DILocation(line: 3680, column: 22, scope: !4161)
!4368 = !DILocation(line: 3680, column: 12, scope: !4161)
!4369 = !DILocation(line: 3681, column: 5, scope: !4161)
!4370 = !DILocation(line: 3684, column: 10, scope: !4161)
!4371 = !DILocation(line: 3684, column: 8, scope: !4161)
!4372 = !DILocation(line: 3685, column: 5, scope: !4161)
!4373 = !DILocation(line: 3688, column: 10, scope: !4161)
!4374 = !DILocation(line: 3688, column: 8, scope: !4161)
!4375 = !DILocation(line: 3689, column: 5, scope: !4161)
!4376 = !DILocation(line: 3692, column: 30, scope: !4161)
!4377 = !DILocation(line: 3692, column: 34, scope: !4161)
!4378 = !DILocation(line: 3692, column: 40, scope: !4161)
!4379 = !DILocation(line: 3692, column: 45, scope: !4161)
!4380 = !DILocation(line: 3692, column: 59, scope: !4161)
!4381 = !DILocation(line: 3692, column: 5, scope: !4161)
!4382 = !DILocation(line: 3693, column: 5, scope: !4161)
!4383 = !DILocation(line: 3696, column: 28, scope: !4161)
!4384 = !DILocation(line: 3696, column: 32, scope: !4161)
!4385 = !DILocation(line: 3696, column: 38, scope: !4161)
!4386 = !DILocation(line: 3696, column: 43, scope: !4161)
!4387 = !DILocation(line: 3696, column: 57, scope: !4161)
!4388 = !DILocation(line: 3696, column: 5, scope: !4161)
!4389 = !DILocation(line: 3697, column: 5, scope: !4161)
!4390 = !DILocation(line: 3700, column: 10, scope: !4161)
!4391 = !DILocation(line: 3700, column: 8, scope: !4161)
!4392 = !DILocation(line: 3701, column: 5, scope: !4161)
!4393 = !DILocation(line: 3705, column: 6, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 3705, column: 6)
!4395 = !DILocation(line: 3705, column: 6, scope: !3826)
!4396 = !DILocalVariable(name: "roundboxalign", scope: !4397, file: !3, line: 3707, type: !1254)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 3705, column: 10)
!4398 = !DILocation(line: 3707, column: 7, scope: !4397)
!4399 = !DILocalVariable(name: "state", scope: !4397, file: !3, line: 3707, type: !1254)
!4400 = !DILocation(line: 3707, column: 22, scope: !4397)
!4401 = !DILocalVariable(name: "disabled", scope: !4397, file: !3, line: 3708, type: !1256)
!4402 = !DILocation(line: 3708, column: 8, scope: !4397)
!4403 = !DILocation(line: 3710, column: 39, scope: !4397)
!4404 = !DILocation(line: 3710, column: 44, scope: !4397)
!4405 = !DILocation(line: 3710, column: 19, scope: !4397)
!4406 = !DILocation(line: 3710, column: 17, scope: !4397)
!4407 = !DILocation(line: 3712, column: 11, scope: !4397)
!4408 = !DILocation(line: 3712, column: 16, scope: !4397)
!4409 = !DILocation(line: 3712, column: 9, scope: !4397)
!4410 = !DILocation(line: 3714, column: 8, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3714, column: 7)
!4412 = !DILocation(line: 3714, column: 13, scope: !4411)
!4413 = !DILocation(line: 3714, column: 7, scope: !4411)
!4414 = !DILocation(line: 3714, column: 22, scope: !4411)
!4415 = !DILocation(line: 3715, column: 8, scope: !4411)
!4416 = !DILocation(line: 3715, column: 48, scope: !4411)
!4417 = !DILocation(line: 3715, column: 78, scope: !4411)
!4418 = !DILocation(line: 3715, column: 51, scope: !4411)
!4419 = !DILocation(line: 3714, column: 7, scope: !4397)
!4420 = !DILocation(line: 3717, column: 10, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 3716, column: 3)
!4422 = !DILocation(line: 3718, column: 3, scope: !4421)
!4423 = !DILocation(line: 3720, column: 7, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3720, column: 7)
!4425 = !DILocation(line: 3720, column: 13, scope: !4424)
!4426 = !DILocation(line: 3720, column: 7, scope: !4397)
!4427 = !DILocation(line: 3721, column: 8, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 3721, column: 8)
!4429 = !DILocation(line: 3721, column: 13, scope: !4428)
!4430 = !DILocation(line: 3721, column: 16, scope: !4428)
!4431 = !DILocation(line: 3721, column: 8, scope: !4424)
!4432 = !DILocation(line: 3722, column: 14, scope: !4428)
!4433 = !DILocation(line: 3722, column: 5, scope: !4428)
!4434 = !DILocation(line: 3721, column: 19, scope: !4428)
!4435 = !DILocation(line: 3724, column: 7, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3724, column: 7)
!4437 = !DILocation(line: 3724, column: 7, scope: !4397)
!4438 = !DILocation(line: 3725, column: 29, scope: !4436)
!4439 = !DILocation(line: 3725, column: 4, scope: !4436)
!4440 = !DILocation(line: 3727, column: 3, scope: !4397)
!4441 = !DILocation(line: 3727, column: 7, scope: !4397)
!4442 = !DILocation(line: 3727, column: 13, scope: !4397)
!4443 = !DILocation(line: 3727, column: 17, scope: !4397)
!4444 = !DILocation(line: 3728, column: 7, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3728, column: 7)
!4446 = !DILocation(line: 3728, column: 11, scope: !4445)
!4447 = !DILocation(line: 3728, column: 7, scope: !4397)
!4448 = !DILocation(line: 3729, column: 4, scope: !4445)
!4449 = !DILocation(line: 3729, column: 8, scope: !4445)
!4450 = !DILocation(line: 3729, column: 15, scope: !4445)
!4451 = !DILocation(line: 3729, column: 21, scope: !4445)
!4452 = !DILocation(line: 3729, column: 25, scope: !4445)
!4453 = !DILocation(line: 3729, column: 31, scope: !4445)
!4454 = !DILocation(line: 3729, column: 37, scope: !4445)
!4455 = !DILocation(line: 3729, column: 44, scope: !4445)
!4456 = !DILocation(line: 3730, column: 12, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 3730, column: 12)
!4458 = !DILocation(line: 3730, column: 16, scope: !4457)
!4459 = !DILocation(line: 3730, column: 12, scope: !4445)
!4460 = !DILocation(line: 3731, column: 4, scope: !4457)
!4461 = !DILocation(line: 3731, column: 8, scope: !4457)
!4462 = !DILocation(line: 3731, column: 14, scope: !4457)
!4463 = !DILocation(line: 3731, column: 18, scope: !4457)
!4464 = !DILocation(line: 3731, column: 24, scope: !4457)
!4465 = !DILocation(line: 3731, column: 30, scope: !4457)
!4466 = !DILocation(line: 3731, column: 37, scope: !4457)
!4467 = !DILocation(line: 3733, column: 7, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3733, column: 7)
!4469 = !DILocation(line: 3733, column: 7, scope: !4397)
!4470 = !DILocation(line: 3734, column: 4, scope: !4468)
!4471 = !DILocation(line: 3735, column: 3, scope: !4397)
!4472 = !DILocation(line: 3735, column: 7, scope: !4397)
!4473 = !DILocation(line: 3735, column: 12, scope: !4397)
!4474 = !DILocation(line: 3735, column: 21, scope: !4397)
!4475 = !DILocation(line: 3735, column: 25, scope: !4397)
!4476 = !DILocation(line: 3735, column: 31, scope: !4397)
!4477 = !DILocation(line: 3735, column: 36, scope: !4397)
!4478 = !DILocation(line: 3736, column: 7, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 3736, column: 7)
!4480 = !DILocation(line: 3736, column: 7, scope: !4397)
!4481 = !DILocation(line: 3737, column: 4, scope: !4479)
!4482 = !DILocation(line: 3742, column: 2, scope: !4397)
!4483 = !DILocation(line: 3743, column: 1, scope: !3826)
!4484 = distinct !DISubprogram(name: "widget_draw_text_icon", scope: !3, file: !3, line: 1409, type: !1968, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!4485 = !DILocalVariable(name: "fstyle", arg: 1, scope: !4484, file: !3, line: 1409, type: !1970)
!4486 = !DILocation(line: 1409, column: 48, scope: !4484)
!4487 = !DILocalVariable(name: "wcol", arg: 2, scope: !4484, file: !3, line: 1409, type: !1436)
!4488 = !DILocation(line: 1409, column: 72, scope: !4484)
!4489 = !DILocalVariable(name: "but", arg: 3, scope: !4484, file: !3, line: 1409, type: !1464)
!4490 = !DILocation(line: 1409, column: 85, scope: !4484)
!4491 = !DILocalVariable(name: "rect", arg: 4, scope: !4484, file: !3, line: 1409, type: !1451)
!4492 = !DILocation(line: 1409, column: 96, scope: !4484)
!4493 = !DILocalVariable(name: "show_menu_icon", scope: !4484, file: !3, line: 1411, type: !3622)
!4494 = !DILocation(line: 1411, column: 13, scope: !4484)
!4495 = !DILocation(line: 1411, column: 52, scope: !4484)
!4496 = !DILocation(line: 1411, column: 30, scope: !4484)
!4497 = !DILocalVariable(name: "alpha", scope: !4484, file: !3, line: 1412, type: !1253)
!4498 = !DILocation(line: 1412, column: 8, scope: !4484)
!4499 = !DILocation(line: 1412, column: 23, scope: !4484)
!4500 = !DILocation(line: 1412, column: 29, scope: !4484)
!4501 = !DILocation(line: 1412, column: 16, scope: !4484)
!4502 = !DILocation(line: 1412, column: 37, scope: !4484)
!4503 = !DILocalVariable(name: "password_str", scope: !4484, file: !3, line: 1413, type: !1493)
!4504 = !DILocation(line: 1413, column: 7, scope: !4484)
!4505 = !DILocation(line: 1415, column: 31, scope: !4484)
!4506 = !DILocation(line: 1415, column: 45, scope: !4484)
!4507 = !DILocation(line: 1415, column: 2, scope: !4484)
!4508 = !DILocation(line: 1418, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1418, column: 6)
!4510 = !DILocation(line: 1418, column: 11, scope: !4509)
!4511 = !DILocation(line: 1418, column: 16, scope: !4509)
!4512 = !DILocation(line: 1418, column: 24, scope: !4509)
!4513 = !DILocation(line: 1418, column: 28, scope: !4509)
!4514 = !DILocation(line: 1418, column: 33, scope: !4509)
!4515 = !DILocation(line: 1418, column: 38, scope: !4509)
!4516 = !DILocation(line: 1418, column: 6, scope: !4484)
!4517 = !DILocalVariable(name: "temp", scope: !4518, file: !3, line: 1419, type: !1452)
!4518 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1418, column: 59)
!4519 = !DILocation(line: 1419, column: 8, scope: !4518)
!4520 = !DILocation(line: 1419, column: 16, scope: !4518)
!4521 = !DILocation(line: 1419, column: 15, scope: !4518)
!4522 = !DILocation(line: 1420, column: 15, scope: !4518)
!4523 = !DILocation(line: 1420, column: 21, scope: !4518)
!4524 = !DILocation(line: 1420, column: 44, scope: !4518)
!4525 = !DILocation(line: 1420, column: 28, scope: !4518)
!4526 = !DILocation(line: 1420, column: 26, scope: !4518)
!4527 = !DILocation(line: 1420, column: 50, scope: !4518)
!4528 = !DILocation(line: 1420, column: 8, scope: !4518)
!4529 = !DILocation(line: 1420, column: 13, scope: !4518)
!4530 = !DILocation(line: 1421, column: 20, scope: !4518)
!4531 = !DILocation(line: 1421, column: 42, scope: !4518)
!4532 = !DILocation(line: 1421, column: 3, scope: !4518)
!4533 = !DILocation(line: 1422, column: 2, scope: !4518)
!4534 = !DILocation(line: 1427, column: 6, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1427, column: 6)
!4536 = !DILocation(line: 1427, column: 11, scope: !4535)
!4537 = !DILocation(line: 1427, column: 16, scope: !4535)
!4538 = !DILocation(line: 1427, column: 30, scope: !4535)
!4539 = !DILocation(line: 1427, column: 33, scope: !4535)
!4540 = !DILocation(line: 1427, column: 6, scope: !4484)
!4541 = !DILocalVariable(name: "icon", scope: !4542, file: !3, line: 1428, type: !4543)
!4542 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1427, column: 49)
!4543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!4544 = !DILocation(line: 1428, column: 19, scope: !4542)
!4545 = !DILocation(line: 1428, column: 27, scope: !4542)
!4546 = !DILocation(line: 1428, column: 32, scope: !4542)
!4547 = !DILocation(line: 1428, column: 37, scope: !4542)
!4548 = !DILocation(line: 1428, column: 26, scope: !4542)
!4549 = !DILocation(line: 1428, column: 54, scope: !4542)
!4550 = !DILocation(line: 1428, column: 59, scope: !4542)
!4551 = !DILocation(line: 1428, column: 66, scope: !4542)
!4552 = !DILocation(line: 1428, column: 71, scope: !4542)
!4553 = !DILocation(line: 1428, column: 64, scope: !4542)
!4554 = !DILocalVariable(name: "icon_size", scope: !4542, file: !3, line: 1429, type: !1410)
!4555 = !DILocation(line: 1429, column: 15, scope: !4542)
!4556 = !DILocation(line: 1429, column: 27, scope: !4542)
!4557 = !DILocation(line: 1433, column: 24, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1433, column: 7)
!4559 = !DILocation(line: 1433, column: 29, scope: !4558)
!4560 = !DILocation(line: 1433, column: 7, scope: !4558)
!4561 = !DILocation(line: 1433, column: 7, scope: !4542)
!4562 = !DILocation(line: 1434, column: 27, scope: !4558)
!4563 = !DILocation(line: 1434, column: 25, scope: !4558)
!4564 = !DILocation(line: 1434, column: 23, scope: !4558)
!4565 = !DILocation(line: 1434, column: 4, scope: !4558)
!4566 = !DILocation(line: 1434, column: 10, scope: !4558)
!4567 = !DILocation(line: 1434, column: 15, scope: !4558)
!4568 = !DILocation(line: 1436, column: 20, scope: !4542)
!4569 = !DILocation(line: 1436, column: 25, scope: !4542)
!4570 = !DILocation(line: 1436, column: 31, scope: !4542)
!4571 = !DILocation(line: 1436, column: 38, scope: !4542)
!4572 = !DILocation(line: 1436, column: 44, scope: !4542)
!4573 = !DILocation(line: 1436, column: 3, scope: !4542)
!4574 = !DILocation(line: 1438, column: 17, scope: !4542)
!4575 = !DILocation(line: 1438, column: 3, scope: !4542)
!4576 = !DILocation(line: 1438, column: 9, scope: !4542)
!4577 = !DILocation(line: 1438, column: 14, scope: !4542)
!4578 = !DILocation(line: 1440, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1440, column: 7)
!4580 = !DILocation(line: 1440, column: 7, scope: !4542)
!4581 = !DILocation(line: 1441, column: 18, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 1440, column: 23)
!4583 = !DILocation(line: 1441, column: 28, scope: !4582)
!4584 = !DILocation(line: 1441, column: 4, scope: !4582)
!4585 = !DILocation(line: 1441, column: 10, scope: !4582)
!4586 = !DILocation(line: 1441, column: 15, scope: !4582)
!4587 = !DILocation(line: 1442, column: 3, scope: !4582)
!4588 = !DILocation(line: 1443, column: 2, scope: !4542)
!4589 = !DILocation(line: 1445, column: 6, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1445, column: 6)
!4591 = !DILocation(line: 1445, column: 11, scope: !4590)
!4592 = !DILocation(line: 1445, column: 19, scope: !4590)
!4593 = !DILocation(line: 1445, column: 23, scope: !4590)
!4594 = !DILocation(line: 1445, column: 28, scope: !4590)
!4595 = !DILocation(line: 1445, column: 37, scope: !4590)
!4596 = !DILocation(line: 1445, column: 6, scope: !4484)
!4597 = !DILocation(line: 1446, column: 39, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1445, column: 58)
!4599 = !DILocation(line: 1446, column: 37, scope: !4598)
!4600 = !DILocation(line: 1446, column: 35, scope: !4598)
!4601 = !DILocation(line: 1446, column: 54, scope: !4598)
!4602 = !DILocation(line: 1446, column: 59, scope: !4598)
!4603 = !DILocation(line: 1446, column: 66, scope: !4598)
!4604 = !DILocation(line: 1446, column: 52, scope: !4598)
!4605 = !DILocation(line: 1446, column: 3, scope: !4598)
!4606 = !DILocation(line: 1446, column: 9, scope: !4598)
!4607 = !DILocation(line: 1446, column: 14, scope: !4598)
!4608 = !DILocation(line: 1447, column: 2, scope: !4598)
!4609 = !DILocation(line: 1448, column: 12, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1448, column: 11)
!4611 = !DILocation(line: 1448, column: 17, scope: !4610)
!4612 = !DILocation(line: 1448, column: 26, scope: !4610)
!4613 = !DILocation(line: 1448, column: 11, scope: !4590)
!4614 = !DILocation(line: 1449, column: 39, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1448, column: 48)
!4616 = !DILocation(line: 1449, column: 37, scope: !4615)
!4617 = !DILocation(line: 1449, column: 35, scope: !4615)
!4618 = !DILocation(line: 1449, column: 54, scope: !4615)
!4619 = !DILocation(line: 1449, column: 59, scope: !4615)
!4620 = !DILocation(line: 1449, column: 66, scope: !4615)
!4621 = !DILocation(line: 1449, column: 52, scope: !4615)
!4622 = !DILocation(line: 1449, column: 3, scope: !4615)
!4623 = !DILocation(line: 1449, column: 9, scope: !4615)
!4624 = !DILocation(line: 1449, column: 14, scope: !4615)
!4625 = !DILocation(line: 1450, column: 2, scope: !4615)
!4626 = !DILocation(line: 1453, column: 7, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1453, column: 6)
!4628 = !DILocation(line: 1453, column: 12, scope: !4627)
!4629 = !DILocation(line: 1453, column: 17, scope: !4627)
!4630 = !DILocation(line: 1453, column: 40, scope: !4627)
!4631 = !DILocation(line: 1453, column: 75, scope: !4627)
!4632 = !DILocation(line: 1453, column: 43, scope: !4627)
!4633 = !DILocation(line: 1453, column: 6, scope: !4484)
!4634 = !DILocalVariable(name: "temp", scope: !4635, file: !3, line: 1454, type: !1452)
!4635 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 1453, column: 81)
!4636 = !DILocation(line: 1454, column: 8, scope: !4635)
!4637 = !DILocation(line: 1454, column: 16, scope: !4635)
!4638 = !DILocation(line: 1454, column: 15, scope: !4635)
!4639 = !DILocation(line: 1456, column: 20, scope: !4635)
!4640 = !DILocation(line: 1456, column: 15, scope: !4635)
!4641 = !DILocation(line: 1456, column: 44, scope: !4635)
!4642 = !DILocation(line: 1456, column: 28, scope: !4635)
!4643 = !DILocation(line: 1456, column: 50, scope: !4635)
!4644 = !DILocation(line: 1456, column: 25, scope: !4635)
!4645 = !DILocation(line: 1456, column: 8, scope: !4635)
!4646 = !DILocation(line: 1456, column: 13, scope: !4635)
!4647 = !DILocation(line: 1457, column: 20, scope: !4635)
!4648 = !DILocation(line: 1457, column: 33, scope: !4635)
!4649 = !DILocation(line: 1457, column: 3, scope: !4635)
!4650 = !DILocation(line: 1458, column: 17, scope: !4635)
!4651 = !DILocation(line: 1458, column: 3, scope: !4635)
!4652 = !DILocation(line: 1458, column: 9, scope: !4635)
!4653 = !DILocation(line: 1458, column: 14, scope: !4635)
!4654 = !DILocation(line: 1459, column: 2, scope: !4635)
!4655 = !DILocation(line: 1462, column: 6, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1462, column: 6)
!4657 = !DILocation(line: 1462, column: 11, scope: !4656)
!4658 = !DILocation(line: 1462, column: 19, scope: !4656)
!4659 = !DILocation(line: 1462, column: 22, scope: !4656)
!4660 = !DILocation(line: 1462, column: 27, scope: !4656)
!4661 = !DILocation(line: 1462, column: 31, scope: !4656)
!4662 = !DILocation(line: 1462, column: 6, scope: !4484)
!4663 = !DILocation(line: 1463, column: 23, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 1462, column: 37)
!4665 = !DILocation(line: 1463, column: 31, scope: !4664)
!4666 = !DILocation(line: 1463, column: 36, scope: !4664)
!4667 = !DILocation(line: 1463, column: 3, scope: !4664)
!4668 = !DILocation(line: 1464, column: 2, scope: !4664)
!4669 = !DILocation(line: 1465, column: 11, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 1465, column: 11)
!4671 = !DILocation(line: 1465, column: 16, scope: !4670)
!4672 = !DILocation(line: 1465, column: 27, scope: !4670)
!4673 = !DILocation(line: 1465, column: 11, scope: !4656)
!4674 = !DILocation(line: 1467, column: 3, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1465, column: 36)
!4676 = !DILocation(line: 1467, column: 8, scope: !4675)
!4677 = !DILocation(line: 1467, column: 12, scope: !4675)
!4678 = !DILocation(line: 1468, column: 3, scope: !4675)
!4679 = !DILocation(line: 1468, column: 8, scope: !4675)
!4680 = !DILocation(line: 1468, column: 17, scope: !4675)
!4681 = !DILocation(line: 1469, column: 2, scope: !4675)
!4682 = !DILocation(line: 1470, column: 11, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1470, column: 11)
!4684 = !DILocation(line: 1470, column: 11, scope: !4670)
!4685 = !DILocation(line: 1471, column: 28, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1470, column: 41)
!4687 = !DILocation(line: 1471, column: 36, scope: !4686)
!4688 = !DILocation(line: 1471, column: 41, scope: !4686)
!4689 = !DILocation(line: 1471, column: 3, scope: !4686)
!4690 = !DILocation(line: 1472, column: 2, scope: !4686)
!4691 = !DILocation(line: 1473, column: 12, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1473, column: 11)
!4693 = !DILocation(line: 1473, column: 17, scope: !4692)
!4694 = !DILocation(line: 1473, column: 24, scope: !4692)
!4695 = !DILocation(line: 1473, column: 29, scope: !4692)
!4696 = !DILocation(line: 1473, column: 46, scope: !4692)
!4697 = !DILocation(line: 1473, column: 50, scope: !4692)
!4698 = !DILocation(line: 1473, column: 55, scope: !4692)
!4699 = !DILocation(line: 1473, column: 60, scope: !4692)
!4700 = !DILocation(line: 1473, column: 11, scope: !4683)
!4701 = !DILocation(line: 1475, column: 37, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 1473, column: 69)
!4703 = !DILocation(line: 1475, column: 45, scope: !4702)
!4704 = !DILocation(line: 1475, column: 50, scope: !4702)
!4705 = !DILocation(line: 1475, column: 3, scope: !4702)
!4706 = !DILocation(line: 1476, column: 2, scope: !4702)
!4707 = !DILocation(line: 1478, column: 23, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 1477, column: 7)
!4709 = !DILocation(line: 1478, column: 31, scope: !4708)
!4710 = !DILocation(line: 1478, column: 36, scope: !4708)
!4711 = !DILocation(line: 1478, column: 3, scope: !4708)
!4712 = !DILocation(line: 1482, column: 19, scope: !4484)
!4713 = !DILocation(line: 1482, column: 27, scope: !4484)
!4714 = !DILocation(line: 1482, column: 33, scope: !4484)
!4715 = !DILocation(line: 1482, column: 38, scope: !4484)
!4716 = !DILocation(line: 1482, column: 2, scope: !4484)
!4717 = !DILocation(line: 1484, column: 31, scope: !4484)
!4718 = !DILocation(line: 1484, column: 45, scope: !4484)
!4719 = !DILocation(line: 1484, column: 2, scope: !4484)
!4720 = !DILocation(line: 1485, column: 1, scope: !4484)
!4721 = distinct !DISubprogram(name: "ui_draw_separator", scope: !3, file: !3, line: 2487, type: !4722, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{null, !2279, !1436}
!4724 = !DILocalVariable(name: "rect", arg: 1, scope: !4721, file: !3, line: 2487, type: !2279)
!4725 = !DILocation(line: 2487, column: 43, scope: !4721)
!4726 = !DILocalVariable(name: "wcol", arg: 2, scope: !4721, file: !3, line: 2487, type: !1436)
!4727 = !DILocation(line: 2487, column: 66, scope: !4721)
!4728 = !DILocalVariable(name: "y", scope: !4721, file: !3, line: 2489, type: !1254)
!4729 = !DILocation(line: 2489, column: 6, scope: !4721)
!4730 = !DILocation(line: 2489, column: 10, scope: !4721)
!4731 = !DILocation(line: 2489, column: 16, scope: !4721)
!4732 = !DILocation(line: 2489, column: 39, scope: !4721)
!4733 = !DILocation(line: 2489, column: 23, scope: !4721)
!4734 = !DILocation(line: 2489, column: 45, scope: !4721)
!4735 = !DILocation(line: 2489, column: 21, scope: !4721)
!4736 = !DILocation(line: 2489, column: 49, scope: !4721)
!4737 = !DILocalVariable(name: "col", scope: !4721, file: !3, line: 2490, type: !1512)
!4738 = !DILocation(line: 2490, column: 16, scope: !4721)
!4739 = !DILocation(line: 2492, column: 11, scope: !4721)
!4740 = !DILocation(line: 2492, column: 17, scope: !4721)
!4741 = !DILocation(line: 2492, column: 2, scope: !4721)
!4742 = !DILocation(line: 2492, column: 9, scope: !4721)
!4743 = !DILocation(line: 2493, column: 11, scope: !4721)
!4744 = !DILocation(line: 2493, column: 17, scope: !4721)
!4745 = !DILocation(line: 2493, column: 2, scope: !4721)
!4746 = !DILocation(line: 2493, column: 9, scope: !4721)
!4747 = !DILocation(line: 2494, column: 11, scope: !4721)
!4748 = !DILocation(line: 2494, column: 17, scope: !4721)
!4749 = !DILocation(line: 2494, column: 2, scope: !4721)
!4750 = !DILocation(line: 2494, column: 9, scope: !4721)
!4751 = !DILocation(line: 2495, column: 2, scope: !4721)
!4752 = !DILocation(line: 2495, column: 9, scope: !4721)
!4753 = !DILocation(line: 2497, column: 2, scope: !4721)
!4754 = !DILocation(line: 2498, column: 14, scope: !4721)
!4755 = !DILocation(line: 2498, column: 2, scope: !4721)
!4756 = !DILocation(line: 2499, column: 12, scope: !4721)
!4757 = !DILocation(line: 2499, column: 18, scope: !4721)
!4758 = !DILocation(line: 2499, column: 24, scope: !4721)
!4759 = !DILocation(line: 2499, column: 27, scope: !4721)
!4760 = !DILocation(line: 2499, column: 33, scope: !4721)
!4761 = !DILocation(line: 2499, column: 39, scope: !4721)
!4762 = !DILocation(line: 2499, column: 2, scope: !4721)
!4763 = !DILocation(line: 2500, column: 2, scope: !4721)
!4764 = !DILocation(line: 2501, column: 1, scope: !4721)
!4765 = !DILocalVariable(name: "type", arg: 1, scope: !1428, file: !3, line: 3253, type: !1989)
!4766 = !DILocation(line: 3253, column: 51, scope: !1428)
!4767 = !DILocalVariable(name: "btheme", scope: !1428, file: !3, line: 3255, type: !3866)
!4768 = !DILocation(line: 3255, column: 10, scope: !1428)
!4769 = !DILocation(line: 3255, column: 19, scope: !1428)
!4770 = !DILocation(line: 3259, column: 19, scope: !1428)
!4771 = !DILocation(line: 3259, column: 27, scope: !1428)
!4772 = !DILocation(line: 3259, column: 31, scope: !1428)
!4773 = !DILocation(line: 3259, column: 16, scope: !1428)
!4774 = !DILocation(line: 3260, column: 19, scope: !1428)
!4775 = !DILocation(line: 3260, column: 27, scope: !1428)
!4776 = !DILocation(line: 3260, column: 31, scope: !1428)
!4777 = !DILocation(line: 3260, column: 16, scope: !1428)
!4778 = !DILocation(line: 3261, column: 11, scope: !1428)
!4779 = !DILocation(line: 3262, column: 10, scope: !1428)
!4780 = !DILocation(line: 3263, column: 12, scope: !1428)
!4781 = !DILocation(line: 3264, column: 10, scope: !1428)
!4782 = !DILocation(line: 3266, column: 10, scope: !1428)
!4783 = !DILocation(line: 3266, column: 2, scope: !1428)
!4784 = !DILocation(line: 3268, column: 4, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !1428, file: !3, line: 3266, column: 16)
!4786 = !DILocation(line: 3271, column: 12, scope: !4785)
!4787 = !DILocation(line: 3272, column: 13, scope: !4785)
!4788 = !DILocation(line: 3273, column: 4, scope: !4785)
!4789 = !DILocation(line: 3276, column: 21, scope: !4785)
!4790 = !DILocation(line: 3276, column: 29, scope: !4785)
!4791 = !DILocation(line: 3276, column: 33, scope: !4785)
!4792 = !DILocation(line: 3276, column: 18, scope: !4785)
!4793 = !DILocation(line: 3277, column: 4, scope: !4785)
!4794 = !DILocation(line: 3280, column: 21, scope: !4785)
!4795 = !DILocation(line: 3280, column: 29, scope: !4785)
!4796 = !DILocation(line: 3280, column: 33, scope: !4785)
!4797 = !DILocation(line: 3280, column: 18, scope: !4785)
!4798 = !DILocation(line: 3281, column: 12, scope: !4785)
!4799 = !DILocation(line: 3282, column: 4, scope: !4785)
!4800 = !DILocation(line: 3285, column: 21, scope: !4785)
!4801 = !DILocation(line: 3285, column: 29, scope: !4785)
!4802 = !DILocation(line: 3285, column: 33, scope: !4785)
!4803 = !DILocation(line: 3285, column: 18, scope: !4785)
!4804 = !DILocation(line: 3286, column: 12, scope: !4785)
!4805 = !DILocation(line: 3287, column: 4, scope: !4785)
!4806 = !DILocation(line: 3290, column: 21, scope: !4785)
!4807 = !DILocation(line: 3290, column: 29, scope: !4785)
!4808 = !DILocation(line: 3290, column: 33, scope: !4785)
!4809 = !DILocation(line: 3290, column: 18, scope: !4785)
!4810 = !DILocation(line: 3291, column: 12, scope: !4785)
!4811 = !DILocation(line: 3292, column: 4, scope: !4785)
!4812 = !DILocation(line: 3295, column: 21, scope: !4785)
!4813 = !DILocation(line: 3295, column: 29, scope: !4785)
!4814 = !DILocation(line: 3295, column: 33, scope: !4785)
!4815 = !DILocation(line: 3295, column: 18, scope: !4785)
!4816 = !DILocation(line: 3296, column: 14, scope: !4785)
!4817 = !DILocation(line: 3297, column: 13, scope: !4785)
!4818 = !DILocation(line: 3298, column: 4, scope: !4785)
!4819 = !DILocation(line: 3301, column: 21, scope: !4785)
!4820 = !DILocation(line: 3301, column: 29, scope: !4785)
!4821 = !DILocation(line: 3301, column: 33, scope: !4785)
!4822 = !DILocation(line: 3301, column: 18, scope: !4785)
!4823 = !DILocation(line: 3302, column: 12, scope: !4785)
!4824 = !DILocation(line: 3303, column: 4, scope: !4785)
!4825 = !DILocation(line: 3306, column: 21, scope: !4785)
!4826 = !DILocation(line: 3306, column: 29, scope: !4785)
!4827 = !DILocation(line: 3306, column: 33, scope: !4785)
!4828 = !DILocation(line: 3306, column: 18, scope: !4785)
!4829 = !DILocation(line: 3307, column: 12, scope: !4785)
!4830 = !DILocation(line: 3308, column: 4, scope: !4785)
!4831 = !DILocation(line: 3313, column: 21, scope: !4785)
!4832 = !DILocation(line: 3313, column: 29, scope: !4785)
!4833 = !DILocation(line: 3313, column: 33, scope: !4785)
!4834 = !DILocation(line: 3313, column: 18, scope: !4785)
!4835 = !DILocation(line: 3314, column: 12, scope: !4785)
!4836 = !DILocation(line: 3315, column: 4, scope: !4785)
!4837 = !DILocation(line: 3318, column: 4, scope: !4785)
!4838 = !DILocation(line: 3321, column: 4, scope: !4785)
!4839 = !DILocation(line: 3324, column: 4, scope: !4785)
!4840 = !DILocation(line: 3329, column: 21, scope: !4785)
!4841 = !DILocation(line: 3329, column: 29, scope: !4785)
!4842 = !DILocation(line: 3329, column: 33, scope: !4785)
!4843 = !DILocation(line: 3329, column: 18, scope: !4785)
!4844 = !DILocation(line: 3330, column: 12, scope: !4785)
!4845 = !DILocation(line: 3331, column: 4, scope: !4785)
!4846 = !DILocation(line: 3334, column: 21, scope: !4785)
!4847 = !DILocation(line: 3334, column: 29, scope: !4785)
!4848 = !DILocation(line: 3334, column: 33, scope: !4785)
!4849 = !DILocation(line: 3334, column: 18, scope: !4785)
!4850 = !DILocation(line: 3335, column: 12, scope: !4785)
!4851 = !DILocation(line: 3336, column: 4, scope: !4785)
!4852 = !DILocation(line: 3339, column: 21, scope: !4785)
!4853 = !DILocation(line: 3339, column: 29, scope: !4785)
!4854 = !DILocation(line: 3339, column: 33, scope: !4785)
!4855 = !DILocation(line: 3339, column: 18, scope: !4785)
!4856 = !DILocation(line: 3340, column: 12, scope: !4785)
!4857 = !DILocation(line: 3341, column: 4, scope: !4785)
!4858 = !DILocation(line: 3344, column: 21, scope: !4785)
!4859 = !DILocation(line: 3344, column: 29, scope: !4785)
!4860 = !DILocation(line: 3344, column: 33, scope: !4785)
!4861 = !DILocation(line: 3344, column: 18, scope: !4785)
!4862 = !DILocation(line: 3345, column: 12, scope: !4785)
!4863 = !DILocation(line: 3346, column: 4, scope: !4785)
!4864 = !DILocation(line: 3349, column: 21, scope: !4785)
!4865 = !DILocation(line: 3349, column: 29, scope: !4785)
!4866 = !DILocation(line: 3349, column: 33, scope: !4785)
!4867 = !DILocation(line: 3349, column: 18, scope: !4785)
!4868 = !DILocation(line: 3350, column: 12, scope: !4785)
!4869 = !DILocation(line: 3351, column: 13, scope: !4785)
!4870 = !DILocation(line: 3352, column: 4, scope: !4785)
!4871 = !DILocation(line: 3356, column: 21, scope: !4785)
!4872 = !DILocation(line: 3356, column: 29, scope: !4785)
!4873 = !DILocation(line: 3356, column: 33, scope: !4785)
!4874 = !DILocation(line: 3356, column: 18, scope: !4785)
!4875 = !DILocation(line: 3357, column: 12, scope: !4785)
!4876 = !DILocation(line: 3358, column: 13, scope: !4785)
!4877 = !DILocation(line: 3359, column: 4, scope: !4785)
!4878 = !DILocation(line: 3362, column: 21, scope: !4785)
!4879 = !DILocation(line: 3362, column: 29, scope: !4785)
!4880 = !DILocation(line: 3362, column: 33, scope: !4785)
!4881 = !DILocation(line: 3362, column: 18, scope: !4785)
!4882 = !DILocation(line: 3363, column: 12, scope: !4785)
!4883 = !DILocation(line: 3364, column: 4, scope: !4785)
!4884 = !DILocation(line: 3368, column: 14, scope: !4785)
!4885 = !DILocation(line: 3369, column: 4, scope: !4785)
!4886 = !DILocation(line: 3372, column: 14, scope: !4785)
!4887 = !DILocation(line: 3373, column: 4, scope: !4785)
!4888 = !DILocation(line: 3376, column: 14, scope: !4785)
!4889 = !DILocation(line: 3377, column: 21, scope: !4785)
!4890 = !DILocation(line: 3377, column: 29, scope: !4785)
!4891 = !DILocation(line: 3377, column: 33, scope: !4785)
!4892 = !DILocation(line: 3377, column: 18, scope: !4785)
!4893 = !DILocation(line: 3378, column: 4, scope: !4785)
!4894 = !DILocation(line: 3381, column: 4, scope: !4785)
!4895 = !DILocation(line: 3384, column: 14, scope: !4785)
!4896 = !DILocation(line: 3385, column: 4, scope: !4785)
!4897 = !DILocation(line: 3388, column: 21, scope: !4785)
!4898 = !DILocation(line: 3388, column: 29, scope: !4785)
!4899 = !DILocation(line: 3388, column: 33, scope: !4785)
!4900 = !DILocation(line: 3388, column: 18, scope: !4785)
!4901 = !DILocation(line: 3389, column: 13, scope: !4785)
!4902 = !DILocation(line: 3390, column: 14, scope: !4785)
!4903 = !DILocation(line: 3391, column: 4, scope: !4785)
!4904 = !DILocation(line: 3394, column: 21, scope: !4785)
!4905 = !DILocation(line: 3394, column: 29, scope: !4785)
!4906 = !DILocation(line: 3394, column: 33, scope: !4785)
!4907 = !DILocation(line: 3394, column: 18, scope: !4785)
!4908 = !DILocation(line: 3395, column: 12, scope: !4785)
!4909 = !DILocation(line: 3396, column: 4, scope: !4785)
!4910 = !DILocation(line: 3399, column: 21, scope: !4785)
!4911 = !DILocation(line: 3399, column: 29, scope: !4785)
!4912 = !DILocation(line: 3399, column: 33, scope: !4785)
!4913 = !DILocation(line: 3399, column: 18, scope: !4785)
!4914 = !DILocation(line: 3400, column: 14, scope: !4785)
!4915 = !DILocation(line: 3401, column: 4, scope: !4785)
!4916 = !DILocation(line: 3404, column: 21, scope: !4785)
!4917 = !DILocation(line: 3404, column: 29, scope: !4785)
!4918 = !DILocation(line: 3404, column: 33, scope: !4785)
!4919 = !DILocation(line: 3404, column: 18, scope: !4785)
!4920 = !DILocation(line: 3405, column: 14, scope: !4785)
!4921 = !DILocation(line: 3406, column: 13, scope: !4785)
!4922 = !DILocation(line: 3407, column: 4, scope: !4785)
!4923 = !DILocation(line: 3410, column: 2, scope: !1428)
!4924 = distinct !DISubprogram(name: "widget_state_option_menu", scope: !3, file: !3, line: 1912, type: !4925, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{null, !1431, !1254}
!4927 = !DILocalVariable(name: "wt", arg: 1, scope: !4924, file: !3, line: 1912, type: !1431)
!4928 = !DILocation(line: 1912, column: 52, scope: !4924)
!4929 = !DILocalVariable(name: "state", arg: 2, scope: !4924, file: !3, line: 1912, type: !1254)
!4930 = !DILocation(line: 1912, column: 60, scope: !4924)
!4931 = !DILocalVariable(name: "btheme", scope: !4924, file: !3, line: 1914, type: !3866)
!4932 = !DILocation(line: 1914, column: 10, scope: !4924)
!4933 = !DILocation(line: 1914, column: 19, scope: !4924)
!4934 = !DILocation(line: 1917, column: 15, scope: !4924)
!4935 = !DILocation(line: 1917, column: 19, scope: !4924)
!4936 = !DILocation(line: 1917, column: 2, scope: !4924)
!4937 = !DILocation(line: 1920, column: 6, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1920, column: 6)
!4939 = !DILocation(line: 1920, column: 12, scope: !4938)
!4940 = !DILocation(line: 1920, column: 6, scope: !4924)
!4941 = !DILocation(line: 1921, column: 19, scope: !4938)
!4942 = !DILocation(line: 1921, column: 23, scope: !4938)
!4943 = !DILocation(line: 1921, column: 28, scope: !4938)
!4944 = !DILocation(line: 1921, column: 34, scope: !4938)
!4945 = !DILocation(line: 1921, column: 42, scope: !4938)
!4946 = !DILocation(line: 1921, column: 46, scope: !4938)
!4947 = !DILocation(line: 1921, column: 61, scope: !4938)
!4948 = !DILocation(line: 1921, column: 3, scope: !4938)
!4949 = !DILocation(line: 1923, column: 19, scope: !4938)
!4950 = !DILocation(line: 1923, column: 23, scope: !4938)
!4951 = !DILocation(line: 1923, column: 28, scope: !4938)
!4952 = !DILocation(line: 1923, column: 34, scope: !4938)
!4953 = !DILocation(line: 1923, column: 42, scope: !4938)
!4954 = !DILocation(line: 1923, column: 46, scope: !4938)
!4955 = !DILocation(line: 1923, column: 61, scope: !4938)
!4956 = !DILocation(line: 1923, column: 3, scope: !4938)
!4957 = !DILocation(line: 1924, column: 1, scope: !4924)
!4958 = distinct !DISubprogram(name: "widget_link", scope: !3, file: !3, line: 2759, type: !1462, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!4959 = !DILocalVariable(name: "but", arg: 1, scope: !4958, file: !3, line: 2759, type: !1464)
!4960 = !DILocation(line: 2759, column: 32, scope: !4958)
!4961 = !DILocalVariable(name: "UNUSED_wcol", arg: 2, scope: !4958, file: !3, line: 2759, type: !1436)
!4962 = !DILocation(line: 2759, column: 53, scope: !4958)
!4963 = !DILocalVariable(name: "rect", arg: 3, scope: !4958, file: !3, line: 2759, type: !1451)
!4964 = !DILocation(line: 2759, column: 73, scope: !4958)
!4965 = !DILocalVariable(name: "UNUSED_state", arg: 4, scope: !4958, file: !3, line: 2759, type: !1254)
!4966 = !DILocation(line: 2759, column: 83, scope: !4958)
!4967 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 5, scope: !4958, file: !3, line: 2759, type: !1254)
!4968 = !DILocation(line: 2759, column: 102, scope: !4958)
!4969 = !DILocation(line: 2762, column: 6, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 2762, column: 6)
!4971 = !DILocation(line: 2762, column: 11, scope: !4970)
!4972 = !DILocation(line: 2762, column: 16, scope: !4970)
!4973 = !DILocation(line: 2762, column: 6, scope: !4958)
!4974 = !DILocalVariable(name: "rectlink", scope: !4975, file: !3, line: 2763, type: !1452)
!4975 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 2762, column: 29)
!4976 = !DILocation(line: 2763, column: 8, scope: !4975)
!4977 = !DILocation(line: 2765, column: 3, scope: !4975)
!4978 = !DILocation(line: 2767, column: 35, scope: !4975)
!4979 = !DILocation(line: 2767, column: 19, scope: !4975)
!4980 = !DILocation(line: 2767, column: 12, scope: !4975)
!4981 = !DILocation(line: 2767, column: 17, scope: !4975)
!4982 = !DILocation(line: 2768, column: 35, scope: !4975)
!4983 = !DILocation(line: 2768, column: 19, scope: !4975)
!4984 = !DILocation(line: 2768, column: 12, scope: !4975)
!4985 = !DILocation(line: 2768, column: 17, scope: !4975)
!4986 = !DILocation(line: 2769, column: 19, scope: !4975)
!4987 = !DILocation(line: 2769, column: 24, scope: !4975)
!4988 = !DILocation(line: 2769, column: 12, scope: !4975)
!4989 = !DILocation(line: 2769, column: 17, scope: !4975)
!4990 = !DILocation(line: 2770, column: 19, scope: !4975)
!4991 = !DILocation(line: 2770, column: 24, scope: !4975)
!4992 = !DILocation(line: 2770, column: 12, scope: !4975)
!4993 = !DILocation(line: 2770, column: 17, scope: !4975)
!4994 = !DILocation(line: 2772, column: 3, scope: !4975)
!4995 = !DILocation(line: 2773, column: 2, scope: !4975)
!4996 = !DILocation(line: 2774, column: 1, scope: !4958)
!4997 = distinct !DISubprogram(name: "widget_draw_extra_mask", scope: !3, file: !3, line: 3222, type: !4998, scopeLine: 3223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{null, !3829, !1464, !1431, !1451}
!5000 = !DILocalVariable(name: "C", arg: 1, scope: !4997, file: !3, line: 3222, type: !3829)
!5001 = !DILocation(line: 3222, column: 52, scope: !4997)
!5002 = !DILocalVariable(name: "but", arg: 2, scope: !4997, file: !3, line: 3222, type: !1464)
!5003 = !DILocation(line: 3222, column: 62, scope: !4997)
!5004 = !DILocalVariable(name: "wt", arg: 3, scope: !4997, file: !3, line: 3222, type: !1431)
!5005 = !DILocation(line: 3222, column: 81, scope: !4997)
!5006 = !DILocalVariable(name: "rect", arg: 4, scope: !4997, file: !3, line: 3222, type: !1451)
!5007 = !DILocation(line: 3222, column: 91, scope: !4997)
!5008 = !DILocalVariable(name: "wtb", scope: !4997, file: !3, line: 3224, type: !3146)
!5009 = !DILocation(line: 3224, column: 15, scope: !4997)
!5010 = !DILocalVariable(name: "rad", scope: !4997, file: !3, line: 3225, type: !1410)
!5011 = !DILocation(line: 3225, column: 14, scope: !4997)
!5012 = !DILocation(line: 3225, column: 30, scope: !4997)
!5013 = !DILocation(line: 3225, column: 28, scope: !4997)
!5014 = !DILocation(line: 3225, column: 26, scope: !4997)
!5015 = !DILocalVariable(name: "col", scope: !4997, file: !3, line: 3226, type: !1512)
!5016 = !DILocation(line: 3226, column: 16, scope: !4997)
!5017 = !DILocation(line: 3229, column: 2, scope: !4997)
!5018 = !DILocation(line: 3229, column: 6, scope: !4997)
!5019 = !DILocation(line: 3229, column: 15, scope: !4997)
!5020 = !DILocation(line: 3229, column: 19, scope: !4997)
!5021 = !DILocation(line: 3229, column: 13, scope: !4997)
!5022 = !DILocation(line: 3231, column: 2, scope: !4997)
!5023 = !DILocation(line: 3233, column: 6, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 3233, column: 6)
!5025 = !DILocation(line: 3233, column: 11, scope: !5024)
!5026 = !DILocation(line: 3233, column: 18, scope: !5024)
!5027 = !DILocation(line: 3233, column: 6, scope: !4997)
!5028 = !DILocation(line: 3235, column: 3, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 3233, column: 29)
!5030 = !DILocation(line: 3235, column: 8, scope: !5029)
!5031 = !DILocation(line: 3235, column: 15, scope: !5029)
!5032 = !DILocation(line: 3235, column: 25, scope: !5029)
!5033 = !DILocation(line: 3235, column: 28, scope: !5029)
!5034 = !DILocation(line: 3235, column: 33, scope: !5029)
!5035 = !DILocation(line: 3235, column: 39, scope: !5029)
!5036 = !DILocation(line: 3235, column: 44, scope: !5029)
!5037 = !DILocation(line: 3235, column: 51, scope: !5029)
!5038 = !DILocation(line: 3235, column: 67, scope: !5029)
!5039 = !DILocation(line: 3235, column: 72, scope: !5029)
!5040 = !DILocation(line: 3235, column: 79, scope: !5029)
!5041 = !DILocation(line: 3235, column: 95, scope: !5029)
!5042 = !DILocation(line: 3238, column: 33, scope: !5029)
!5043 = !DILocation(line: 3238, column: 3, scope: !5029)
!5044 = !DILocation(line: 3239, column: 15, scope: !5029)
!5045 = !DILocation(line: 3239, column: 3, scope: !5029)
!5046 = !DILocation(line: 3241, column: 38, scope: !5029)
!5047 = !DILocation(line: 3241, column: 50, scope: !5029)
!5048 = !DILocation(line: 3241, column: 3, scope: !5029)
!5049 = !DILocation(line: 3242, column: 3, scope: !5029)
!5050 = !DILocation(line: 3243, column: 2, scope: !5029)
!5051 = !DILocation(line: 3246, column: 36, scope: !4997)
!5052 = !DILocation(line: 3246, column: 42, scope: !4997)
!5053 = !DILocation(line: 3246, column: 2, scope: !4997)
!5054 = !DILocation(line: 3247, column: 6, scope: !4997)
!5055 = !DILocation(line: 3247, column: 14, scope: !4997)
!5056 = !DILocation(line: 3248, column: 6, scope: !4997)
!5057 = !DILocation(line: 3248, column: 12, scope: !4997)
!5058 = !DILocation(line: 3249, column: 25, scope: !4997)
!5059 = !DILocation(line: 3249, column: 29, scope: !4997)
!5060 = !DILocation(line: 3249, column: 2, scope: !4997)
!5061 = !DILocation(line: 3251, column: 1, scope: !4997)
!5062 = distinct !DISubprogram(name: "ui_draw_but_HSV_v", scope: !3, file: !3, line: 2434, type: !5063, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{null, !1464, !2279}
!5065 = !DILocalVariable(name: "but", arg: 1, scope: !5062, file: !3, line: 2434, type: !1464)
!5066 = !DILocation(line: 2434, column: 38, scope: !5062)
!5067 = !DILocalVariable(name: "rect", arg: 2, scope: !5062, file: !3, line: 2434, type: !2279)
!5068 = !DILocation(line: 2434, column: 55, scope: !5062)
!5069 = !DILocalVariable(name: "wtb", scope: !5062, file: !3, line: 2436, type: !3146)
!5070 = !DILocation(line: 2436, column: 15, scope: !5062)
!5071 = !DILocalVariable(name: "rad", scope: !5062, file: !3, line: 2437, type: !1410)
!5072 = !DILocation(line: 2437, column: 14, scope: !5062)
!5073 = !DILocation(line: 2437, column: 43, scope: !5062)
!5074 = !DILocation(line: 2437, column: 27, scope: !5062)
!5075 = !DILocation(line: 2437, column: 25, scope: !5062)
!5076 = !DILocalVariable(name: "x", scope: !5062, file: !3, line: 2438, type: !1253)
!5077 = !DILocation(line: 2438, column: 8, scope: !5062)
!5078 = !DILocalVariable(name: "y", scope: !5062, file: !3, line: 2438, type: !1253)
!5079 = !DILocation(line: 2438, column: 11, scope: !5062)
!5080 = !DILocalVariable(name: "rgb", scope: !5062, file: !3, line: 2439, type: !1906)
!5081 = !DILocation(line: 2439, column: 8, scope: !5062)
!5082 = !DILocalVariable(name: "hsv", scope: !5062, file: !3, line: 2439, type: !1906)
!5083 = !DILocation(line: 2439, column: 16, scope: !5062)
!5084 = !DILocalVariable(name: "v", scope: !5062, file: !3, line: 2439, type: !1253)
!5085 = !DILocation(line: 2439, column: 24, scope: !5062)
!5086 = !DILocalVariable(name: "color_profile", scope: !5062, file: !3, line: 2440, type: !1256)
!5087 = !DILocation(line: 2440, column: 7, scope: !5062)
!5088 = !DILocation(line: 2440, column: 23, scope: !5062)
!5089 = !DILocation(line: 2440, column: 28, scope: !5062)
!5090 = !DILocation(line: 2440, column: 35, scope: !5062)
!5091 = !DILocation(line: 2442, column: 6, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2442, column: 6)
!5093 = !DILocation(line: 2442, column: 11, scope: !5092)
!5094 = !DILocation(line: 2442, column: 19, scope: !5092)
!5095 = !DILocation(line: 2442, column: 43, scope: !5092)
!5096 = !DILocation(line: 2442, column: 48, scope: !5092)
!5097 = !DILocation(line: 2442, column: 22, scope: !5092)
!5098 = !DILocation(line: 2442, column: 57, scope: !5092)
!5099 = !DILocation(line: 2442, column: 6, scope: !5062)
!5100 = !DILocation(line: 2443, column: 17, scope: !5092)
!5101 = !DILocation(line: 2443, column: 3, scope: !5092)
!5102 = !DILocation(line: 2445, column: 21, scope: !5062)
!5103 = !DILocation(line: 2445, column: 26, scope: !5062)
!5104 = !DILocation(line: 2445, column: 2, scope: !5062)
!5105 = !DILocation(line: 2447, column: 6, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2447, column: 6)
!5107 = !DILocation(line: 2447, column: 6, scope: !5062)
!5108 = !DILocation(line: 2448, column: 32, scope: !5106)
!5109 = !DILocation(line: 2448, column: 37, scope: !5106)
!5110 = !DILocation(line: 2448, column: 44, scope: !5106)
!5111 = !DILocation(line: 2448, column: 3, scope: !5106)
!5112 = !DILocation(line: 2450, column: 6, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2450, column: 6)
!5114 = !DILocation(line: 2450, column: 11, scope: !5113)
!5115 = !DILocation(line: 2450, column: 14, scope: !5113)
!5116 = !DILocation(line: 2450, column: 6, scope: !5062)
!5117 = !DILocation(line: 2451, column: 16, scope: !5113)
!5118 = !DILocation(line: 2451, column: 21, scope: !5113)
!5119 = !DILocation(line: 2451, column: 3, scope: !5113)
!5120 = !DILocation(line: 2453, column: 16, scope: !5113)
!5121 = !DILocation(line: 2453, column: 21, scope: !5113)
!5122 = !DILocation(line: 2453, column: 3, scope: !5113)
!5123 = !DILocation(line: 2454, column: 6, scope: !5062)
!5124 = !DILocation(line: 2454, column: 4, scope: !5062)
!5125 = !DILocation(line: 2457, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2457, column: 6)
!5127 = !DILocation(line: 2457, column: 11, scope: !5126)
!5128 = !DILocation(line: 2457, column: 14, scope: !5126)
!5129 = !DILocation(line: 2457, column: 6, scope: !5062)
!5130 = !DILocalVariable(name: "range", scope: !5131, file: !3, line: 2458, type: !1253)
!5131 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2457, column: 32)
!5132 = !DILocation(line: 2458, column: 9, scope: !5131)
!5133 = !DILocation(line: 2458, column: 17, scope: !5131)
!5134 = !DILocation(line: 2458, column: 22, scope: !5131)
!5135 = !DILocation(line: 2458, column: 32, scope: !5131)
!5136 = !DILocation(line: 2458, column: 37, scope: !5131)
!5137 = !DILocation(line: 2458, column: 30, scope: !5131)
!5138 = !DILocation(line: 2459, column: 8, scope: !5131)
!5139 = !DILocation(line: 2459, column: 12, scope: !5131)
!5140 = !DILocation(line: 2459, column: 17, scope: !5131)
!5141 = !DILocation(line: 2459, column: 10, scope: !5131)
!5142 = !DILocation(line: 2459, column: 28, scope: !5131)
!5143 = !DILocation(line: 2459, column: 26, scope: !5131)
!5144 = !DILocation(line: 2459, column: 5, scope: !5131)
!5145 = !DILocation(line: 2460, column: 2, scope: !5131)
!5146 = !DILocation(line: 2462, column: 2, scope: !5062)
!5147 = !DILocation(line: 2465, column: 36, scope: !5062)
!5148 = !DILocation(line: 2465, column: 42, scope: !5062)
!5149 = !DILocation(line: 2465, column: 2, scope: !5062)
!5150 = !DILocation(line: 2468, column: 66, scope: !5062)
!5151 = !DILocation(line: 2468, column: 44, scope: !5062)
!5152 = !DILocation(line: 2468, column: 22, scope: !5062)
!5153 = !DILocation(line: 2469, column: 60, scope: !5062)
!5154 = !DILocation(line: 2469, column: 40, scope: !5062)
!5155 = !DILocation(line: 2469, column: 20, scope: !5062)
!5156 = !DILocation(line: 2470, column: 20, scope: !5062)
!5157 = !DILocation(line: 2471, column: 21, scope: !5062)
!5158 = !DILocation(line: 2472, column: 18, scope: !5062)
!5159 = !DILocation(line: 2474, column: 2, scope: !5062)
!5160 = !DILocation(line: 2477, column: 6, scope: !5062)
!5161 = !DILocation(line: 2477, column: 12, scope: !5062)
!5162 = !DILocation(line: 2477, column: 42, scope: !5062)
!5163 = !DILocation(line: 2477, column: 26, scope: !5062)
!5164 = !DILocation(line: 2477, column: 24, scope: !5062)
!5165 = !DILocation(line: 2477, column: 17, scope: !5062)
!5166 = !DILocation(line: 2477, column: 4, scope: !5062)
!5167 = !DILocation(line: 2478, column: 6, scope: !5062)
!5168 = !DILocation(line: 2478, column: 12, scope: !5062)
!5169 = !DILocation(line: 2478, column: 19, scope: !5062)
!5170 = !DILocation(line: 2478, column: 42, scope: !5062)
!5171 = !DILocation(line: 2478, column: 26, scope: !5062)
!5172 = !DILocation(line: 2478, column: 24, scope: !5062)
!5173 = !DILocation(line: 2478, column: 17, scope: !5062)
!5174 = !DILocation(line: 2478, column: 4, scope: !5062)
!5175 = !DILocation(line: 2479, column: 2, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 2479, column: 2)
!5177 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2479, column: 2)
!5178 = !DILocation(line: 2479, column: 2, scope: !5177)
!5179 = !DILocation(line: 2479, column: 2, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 2479, column: 2)
!5181 = !DILocation(line: 2481, column: 16, scope: !5062)
!5182 = !DILocation(line: 2481, column: 19, scope: !5062)
!5183 = !DILocation(line: 2481, column: 2, scope: !5062)
!5184 = !DILocation(line: 2483, column: 1, scope: !5062)
!5185 = distinct !DISubprogram(name: "ui_draw_but_HSVCUBE", scope: !3, file: !3, line: 2403, type: !5063, scopeLine: 2404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5186 = !DILocalVariable(name: "but", arg: 1, scope: !5185, file: !3, line: 2403, type: !1464)
!5187 = !DILocation(line: 2403, column: 40, scope: !5185)
!5188 = !DILocalVariable(name: "rect", arg: 2, scope: !5185, file: !3, line: 2403, type: !2279)
!5189 = !DILocation(line: 2403, column: 57, scope: !5185)
!5190 = !DILocalVariable(name: "rgb", scope: !5185, file: !3, line: 2405, type: !1906)
!5191 = !DILocation(line: 2405, column: 8, scope: !5185)
!5192 = !DILocalVariable(name: "x", scope: !5185, file: !3, line: 2406, type: !1253)
!5193 = !DILocation(line: 2406, column: 8, scope: !5185)
!5194 = !DILocalVariable(name: "y", scope: !5185, file: !3, line: 2406, type: !1253)
!5195 = !DILocation(line: 2406, column: 18, scope: !5185)
!5196 = !DILocalVariable(name: "hsv", scope: !5185, file: !3, line: 2407, type: !2408)
!5197 = !DILocation(line: 2407, column: 15, scope: !5185)
!5198 = !DILocation(line: 2407, column: 38, scope: !5185)
!5199 = !DILocation(line: 2407, column: 43, scope: !5185)
!5200 = !DILocation(line: 2407, column: 21, scope: !5185)
!5201 = !DILocalVariable(name: "hsv_n", scope: !5185, file: !3, line: 2408, type: !1906)
!5202 = !DILocation(line: 2408, column: 8, scope: !5185)
!5203 = !DILocalVariable(name: "use_display_colorspace", scope: !5185, file: !3, line: 2409, type: !1256)
!5204 = !DILocation(line: 2409, column: 7, scope: !5185)
!5205 = !DILocation(line: 2409, column: 71, scope: !5185)
!5206 = !DILocation(line: 2409, column: 32, scope: !5185)
!5207 = !DILocation(line: 2411, column: 13, scope: !5185)
!5208 = !DILocation(line: 2411, column: 20, scope: !5185)
!5209 = !DILocation(line: 2411, column: 2, scope: !5185)
!5210 = !DILocation(line: 2413, column: 21, scope: !5185)
!5211 = !DILocation(line: 2413, column: 26, scope: !5185)
!5212 = !DILocation(line: 2413, column: 2, scope: !5185)
!5213 = !DILocation(line: 2415, column: 6, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 2415, column: 6)
!5215 = !DILocation(line: 2415, column: 6, scope: !5185)
!5216 = !DILocation(line: 2416, column: 32, scope: !5214)
!5217 = !DILocation(line: 2416, column: 37, scope: !5214)
!5218 = !DILocation(line: 2416, column: 44, scope: !5214)
!5219 = !DILocation(line: 2416, column: 3, scope: !5214)
!5220 = !DILocation(line: 2418, column: 22, scope: !5185)
!5221 = !DILocation(line: 2418, column: 27, scope: !5185)
!5222 = !DILocation(line: 2418, column: 2, scope: !5185)
!5223 = !DILocation(line: 2420, column: 19, scope: !5185)
!5224 = !DILocation(line: 2420, column: 25, scope: !5185)
!5225 = !DILocation(line: 2420, column: 32, scope: !5185)
!5226 = !DILocation(line: 2420, column: 37, scope: !5185)
!5227 = !DILocation(line: 2420, column: 2, scope: !5185)
!5228 = !DILocation(line: 2422, column: 27, scope: !5185)
!5229 = !DILocation(line: 2422, column: 32, scope: !5185)
!5230 = !DILocation(line: 2422, column: 38, scope: !5185)
!5231 = !DILocation(line: 2422, column: 2, scope: !5185)
!5232 = !DILocation(line: 2423, column: 2, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 2423, column: 2)
!5234 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 2423, column: 2)
!5235 = !DILocation(line: 2423, column: 2, scope: !5234)
!5236 = !DILocation(line: 2423, column: 2, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2423, column: 2)
!5238 = !DILocation(line: 2424, column: 2, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2424, column: 2)
!5240 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 2424, column: 2)
!5241 = !DILocation(line: 2424, column: 2, scope: !5240)
!5242 = !DILocation(line: 2424, column: 2, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 2424, column: 2)
!5244 = !DILocation(line: 2426, column: 16, scope: !5185)
!5245 = !DILocation(line: 2426, column: 19, scope: !5185)
!5246 = !DILocation(line: 2426, column: 2, scope: !5185)
!5247 = !DILocation(line: 2429, column: 2, scope: !5185)
!5248 = !DILocation(line: 2430, column: 12, scope: !5185)
!5249 = !DILocation(line: 2430, column: 18, scope: !5185)
!5250 = !DILocation(line: 2430, column: 11, scope: !5185)
!5251 = !DILocation(line: 2430, column: 26, scope: !5185)
!5252 = !DILocation(line: 2430, column: 32, scope: !5185)
!5253 = !DILocation(line: 2430, column: 25, scope: !5185)
!5254 = !DILocation(line: 2430, column: 40, scope: !5185)
!5255 = !DILocation(line: 2430, column: 46, scope: !5185)
!5256 = !DILocation(line: 2430, column: 39, scope: !5185)
!5257 = !DILocation(line: 2430, column: 54, scope: !5185)
!5258 = !DILocation(line: 2430, column: 60, scope: !5185)
!5259 = !DILocation(line: 2430, column: 53, scope: !5185)
!5260 = !DILocation(line: 2430, column: 2, scope: !5185)
!5261 = !DILocation(line: 2431, column: 1, scope: !5185)
!5262 = distinct !DISubprogram(name: "ui_draw_but_HSVCIRCLE", scope: !3, file: !3, line: 2131, type: !5263, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{null, !1464, !1436, !2279}
!5265 = !DILocalVariable(name: "but", arg: 1, scope: !5262, file: !3, line: 2131, type: !1464)
!5266 = !DILocation(line: 2131, column: 42, scope: !5262)
!5267 = !DILocalVariable(name: "wcol", arg: 2, scope: !5262, file: !3, line: 2131, type: !1436)
!5268 = !DILocation(line: 2131, column: 63, scope: !5262)
!5269 = !DILocalVariable(name: "rect", arg: 3, scope: !5262, file: !3, line: 2131, type: !2279)
!5270 = !DILocation(line: 2131, column: 81, scope: !5262)
!5271 = !DILocalVariable(name: "tot", scope: !5262, file: !3, line: 2133, type: !2500)
!5272 = !DILocation(line: 2133, column: 12, scope: !5262)
!5273 = !DILocalVariable(name: "radstep", scope: !5262, file: !3, line: 2134, type: !1410)
!5274 = !DILocation(line: 2134, column: 14, scope: !5262)
!5275 = !DILocalVariable(name: "centx", scope: !5262, file: !3, line: 2135, type: !1410)
!5276 = !DILocation(line: 2135, column: 14, scope: !5262)
!5277 = !DILocation(line: 2135, column: 41, scope: !5262)
!5278 = !DILocation(line: 2135, column: 22, scope: !5262)
!5279 = !DILocalVariable(name: "centy", scope: !5262, file: !3, line: 2136, type: !1410)
!5280 = !DILocation(line: 2136, column: 14, scope: !5262)
!5281 = !DILocation(line: 2136, column: 41, scope: !5262)
!5282 = !DILocation(line: 2136, column: 22, scope: !5262)
!5283 = !DILocalVariable(name: "radius", scope: !5262, file: !3, line: 2137, type: !1253)
!5284 = !DILocation(line: 2137, column: 8, scope: !5262)
!5285 = !DILocation(line: 2137, column: 47, scope: !5262)
!5286 = !DILocation(line: 2137, column: 31, scope: !5262)
!5287 = !DILocation(line: 2137, column: 70, scope: !5262)
!5288 = !DILocation(line: 2137, column: 54, scope: !5262)
!5289 = !DILocation(line: 2137, column: 24, scope: !5262)
!5290 = !DILocation(line: 2137, column: 17, scope: !5262)
!5291 = !DILocation(line: 2137, column: 77, scope: !5262)
!5292 = !DILocalVariable(name: "hsv_ptr", scope: !5262, file: !3, line: 2140, type: !2408)
!5293 = !DILocation(line: 2140, column: 15, scope: !5262)
!5294 = !DILocation(line: 2140, column: 42, scope: !5262)
!5295 = !DILocation(line: 2140, column: 47, scope: !5262)
!5296 = !DILocation(line: 2140, column: 25, scope: !5262)
!5297 = !DILocalVariable(name: "xpos", scope: !5262, file: !3, line: 2141, type: !1253)
!5298 = !DILocation(line: 2141, column: 8, scope: !5262)
!5299 = !DILocalVariable(name: "ypos", scope: !5262, file: !3, line: 2141, type: !1253)
!5300 = !DILocation(line: 2141, column: 14, scope: !5262)
!5301 = !DILocalVariable(name: "ang", scope: !5262, file: !3, line: 2141, type: !1253)
!5302 = !DILocation(line: 2141, column: 20, scope: !5262)
!5303 = !DILocalVariable(name: "rgb", scope: !5262, file: !3, line: 2142, type: !1906)
!5304 = !DILocation(line: 2142, column: 8, scope: !5262)
!5305 = !DILocalVariable(name: "hsvo", scope: !5262, file: !3, line: 2142, type: !1906)
!5306 = !DILocation(line: 2142, column: 16, scope: !5262)
!5307 = !DILocalVariable(name: "hsv", scope: !5262, file: !3, line: 2142, type: !1906)
!5308 = !DILocation(line: 2142, column: 25, scope: !5262)
!5309 = !DILocalVariable(name: "col", scope: !5262, file: !3, line: 2142, type: !1906)
!5310 = !DILocation(line: 2142, column: 33, scope: !5262)
!5311 = !DILocalVariable(name: "colcent", scope: !5262, file: !3, line: 2142, type: !1906)
!5312 = !DILocation(line: 2142, column: 41, scope: !5262)
!5313 = !DILocalVariable(name: "a", scope: !5262, file: !3, line: 2143, type: !1254)
!5314 = !DILocation(line: 2143, column: 6, scope: !5262)
!5315 = !DILocalVariable(name: "color_profile", scope: !5262, file: !3, line: 2144, type: !1256)
!5316 = !DILocation(line: 2144, column: 7, scope: !5262)
!5317 = !DILocation(line: 2144, column: 62, scope: !5262)
!5318 = !DILocation(line: 2144, column: 23, scope: !5262)
!5319 = !DILocation(line: 2147, column: 21, scope: !5262)
!5320 = !DILocation(line: 2147, column: 26, scope: !5262)
!5321 = !DILocation(line: 2147, column: 2, scope: !5262)
!5322 = !DILocation(line: 2150, column: 21, scope: !5262)
!5323 = !DILocation(line: 2150, column: 12, scope: !5262)
!5324 = !DILocation(line: 2150, column: 19, scope: !5262)
!5325 = !DILocation(line: 2150, column: 2, scope: !5262)
!5326 = !DILocation(line: 2150, column: 10, scope: !5262)
!5327 = !DILocation(line: 2151, column: 21, scope: !5262)
!5328 = !DILocation(line: 2151, column: 12, scope: !5262)
!5329 = !DILocation(line: 2151, column: 19, scope: !5262)
!5330 = !DILocation(line: 2151, column: 2, scope: !5262)
!5331 = !DILocation(line: 2151, column: 10, scope: !5262)
!5332 = !DILocation(line: 2152, column: 21, scope: !5262)
!5333 = !DILocation(line: 2152, column: 12, scope: !5262)
!5334 = !DILocation(line: 2152, column: 19, scope: !5262)
!5335 = !DILocation(line: 2152, column: 2, scope: !5262)
!5336 = !DILocation(line: 2152, column: 10, scope: !5262)
!5337 = !DILocation(line: 2154, column: 6, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2154, column: 6)
!5339 = !DILocation(line: 2154, column: 6, scope: !5262)
!5340 = !DILocation(line: 2155, column: 32, scope: !5338)
!5341 = !DILocation(line: 2155, column: 37, scope: !5338)
!5342 = !DILocation(line: 2155, column: 44, scope: !5338)
!5343 = !DILocation(line: 2155, column: 3, scope: !5338)
!5344 = !DILocation(line: 2157, column: 34, scope: !5262)
!5345 = !DILocation(line: 2157, column: 39, scope: !5262)
!5346 = !DILocation(line: 2157, column: 2, scope: !5262)
!5347 = !DILocation(line: 2158, column: 13, scope: !5262)
!5348 = !DILocation(line: 2158, column: 19, scope: !5262)
!5349 = !DILocation(line: 2158, column: 2, scope: !5262)
!5350 = !DILocation(line: 2160, column: 2, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 2160, column: 2)
!5352 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2160, column: 2)
!5353 = !DILocation(line: 2160, column: 2, scope: !5352)
!5354 = !DILocation(line: 2160, column: 2, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 2160, column: 2)
!5356 = !DILocation(line: 2165, column: 6, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2165, column: 6)
!5358 = !DILocation(line: 2165, column: 11, scope: !5357)
!5359 = !DILocation(line: 2165, column: 16, scope: !5357)
!5360 = !DILocation(line: 2165, column: 6, scope: !5262)
!5361 = !DILocation(line: 2166, column: 9, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 2166, column: 7)
!5363 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2165, column: 37)
!5364 = !DILocation(line: 2166, column: 7, scope: !5362)
!5365 = !DILocation(line: 2166, column: 27, scope: !5362)
!5366 = !DILocation(line: 2166, column: 7, scope: !5363)
!5367 = !DILocation(line: 2167, column: 4, scope: !5362)
!5368 = !DILocation(line: 2167, column: 11, scope: !5362)
!5369 = !DILocation(line: 2169, column: 4, scope: !5362)
!5370 = !DILocation(line: 2169, column: 11, scope: !5362)
!5371 = !DILocation(line: 2170, column: 2, scope: !5363)
!5372 = !DILocation(line: 2172, column: 35, scope: !5262)
!5373 = !DILocation(line: 2172, column: 43, scope: !5262)
!5374 = !DILocation(line: 2172, column: 52, scope: !5262)
!5375 = !DILocation(line: 2172, column: 60, scope: !5262)
!5376 = !DILocation(line: 2172, column: 65, scope: !5262)
!5377 = !DILocation(line: 2172, column: 73, scope: !5262)
!5378 = !DILocation(line: 2172, column: 2, scope: !5262)
!5379 = !DILocation(line: 2174, column: 2, scope: !5262)
!5380 = !DILocation(line: 2176, column: 2, scope: !5262)
!5381 = !DILocation(line: 2177, column: 13, scope: !5262)
!5382 = !DILocation(line: 2177, column: 2, scope: !5262)
!5383 = !DILocation(line: 2178, column: 13, scope: !5262)
!5384 = !DILocation(line: 2178, column: 20, scope: !5262)
!5385 = !DILocation(line: 2178, column: 2, scope: !5262)
!5386 = !DILocation(line: 2180, column: 9, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2180, column: 2)
!5388 = !DILocation(line: 2180, column: 7, scope: !5387)
!5389 = !DILocation(line: 2180, column: 14, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 2180, column: 2)
!5391 = !DILocation(line: 2180, column: 16, scope: !5390)
!5392 = !DILocation(line: 2180, column: 2, scope: !5387)
!5393 = !DILocalVariable(name: "si", scope: !5394, file: !3, line: 2181, type: !1253)
!5394 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 2180, column: 45)
!5395 = !DILocation(line: 2181, column: 9, scope: !5394)
!5396 = !DILocation(line: 2181, column: 19, scope: !5394)
!5397 = !DILocation(line: 2181, column: 14, scope: !5394)
!5398 = !DILocalVariable(name: "co", scope: !5394, file: !3, line: 2182, type: !1253)
!5399 = !DILocation(line: 2182, column: 9, scope: !5394)
!5400 = !DILocation(line: 2182, column: 19, scope: !5394)
!5401 = !DILocation(line: 2182, column: 14, scope: !5394)
!5402 = !DILocation(line: 2184, column: 30, scope: !5394)
!5403 = !DILocation(line: 2184, column: 35, scope: !5394)
!5404 = !DILocation(line: 2184, column: 39, scope: !5394)
!5405 = !DILocation(line: 2184, column: 44, scope: !5394)
!5406 = !DILocation(line: 2184, column: 50, scope: !5394)
!5407 = !DILocation(line: 2184, column: 58, scope: !5394)
!5408 = !DILocation(line: 2184, column: 63, scope: !5394)
!5409 = !DILocation(line: 2184, column: 61, scope: !5394)
!5410 = !DILocation(line: 2184, column: 56, scope: !5394)
!5411 = !DILocation(line: 2184, column: 71, scope: !5394)
!5412 = !DILocation(line: 2184, column: 79, scope: !5394)
!5413 = !DILocation(line: 2184, column: 84, scope: !5394)
!5414 = !DILocation(line: 2184, column: 82, scope: !5394)
!5415 = !DILocation(line: 2184, column: 77, scope: !5394)
!5416 = !DILocation(line: 2184, column: 3, scope: !5394)
!5417 = !DILocation(line: 2186, column: 28, scope: !5394)
!5418 = !DILocation(line: 2186, column: 33, scope: !5394)
!5419 = !DILocation(line: 2186, column: 3, scope: !5394)
!5420 = !DILocation(line: 2188, column: 14, scope: !5394)
!5421 = !DILocation(line: 2188, column: 3, scope: !5394)
!5422 = !DILocation(line: 2189, column: 14, scope: !5394)
!5423 = !DILocation(line: 2189, column: 22, scope: !5394)
!5424 = !DILocation(line: 2189, column: 27, scope: !5394)
!5425 = !DILocation(line: 2189, column: 25, scope: !5394)
!5426 = !DILocation(line: 2189, column: 20, scope: !5394)
!5427 = !DILocation(line: 2189, column: 35, scope: !5394)
!5428 = !DILocation(line: 2189, column: 43, scope: !5394)
!5429 = !DILocation(line: 2189, column: 48, scope: !5394)
!5430 = !DILocation(line: 2189, column: 46, scope: !5394)
!5431 = !DILocation(line: 2189, column: 41, scope: !5394)
!5432 = !DILocation(line: 2189, column: 3, scope: !5394)
!5433 = !DILocation(line: 2190, column: 2, scope: !5394)
!5434 = !DILocation(line: 2180, column: 25, scope: !5390)
!5435 = !DILocation(line: 2180, column: 33, scope: !5390)
!5436 = !DILocation(line: 2180, column: 2, scope: !5390)
!5437 = distinct !{!5437, !5392, !5438}
!5438 = !DILocation(line: 2190, column: 2, scope: !5387)
!5439 = !DILocation(line: 2191, column: 2, scope: !5262)
!5440 = !DILocation(line: 2193, column: 2, scope: !5262)
!5441 = !DILocation(line: 2196, column: 2, scope: !5262)
!5442 = !DILocation(line: 2197, column: 15, scope: !5262)
!5443 = !DILocation(line: 2197, column: 22, scope: !5262)
!5444 = !DILocation(line: 2197, column: 2, scope: !5262)
!5445 = !DILocation(line: 2198, column: 2, scope: !5262)
!5446 = !DILocation(line: 2199, column: 2, scope: !5262)
!5447 = !DILocation(line: 2200, column: 31, scope: !5262)
!5448 = !DILocation(line: 2200, column: 37, scope: !5262)
!5449 = !DILocation(line: 2200, column: 2, scope: !5262)
!5450 = !DILocation(line: 2201, column: 42, scope: !5262)
!5451 = !DILocation(line: 2201, column: 2, scope: !5262)
!5452 = !DILocation(line: 2202, column: 2, scope: !5262)
!5453 = !DILocation(line: 2203, column: 2, scope: !5262)
!5454 = !DILocation(line: 2204, column: 2, scope: !5262)
!5455 = !DILocation(line: 2207, column: 29, scope: !5262)
!5456 = !DILocation(line: 2207, column: 34, scope: !5262)
!5457 = !DILocation(line: 2207, column: 40, scope: !5262)
!5458 = !DILocation(line: 2207, column: 2, scope: !5262)
!5459 = !DILocation(line: 2209, column: 16, scope: !5262)
!5460 = !DILocation(line: 2209, column: 22, scope: !5262)
!5461 = !DILocation(line: 2209, column: 2, scope: !5262)
!5462 = !DILocation(line: 2210, column: 1, scope: !5262)
!5463 = distinct !DISubprogram(name: "widget_roundbox_set", scope: !3, file: !3, line: 3414, type: !5464, scopeLine: 3415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!1254, !1464, !1451}
!5466 = !DILocalVariable(name: "but", arg: 1, scope: !5463, file: !3, line: 3414, type: !1464)
!5467 = !DILocation(line: 3414, column: 39, scope: !5463)
!5468 = !DILocalVariable(name: "rect", arg: 2, scope: !5463, file: !3, line: 3414, type: !1451)
!5469 = !DILocation(line: 3414, column: 50, scope: !5463)
!5470 = !DILocalVariable(name: "roundbox", scope: !5463, file: !3, line: 3416, type: !1254)
!5471 = !DILocation(line: 3416, column: 6, scope: !5463)
!5472 = !DILocation(line: 3419, column: 7, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 3419, column: 6)
!5474 = !DILocation(line: 3419, column: 12, scope: !5473)
!5475 = !DILocation(line: 3419, column: 21, scope: !5473)
!5476 = !DILocation(line: 3419, column: 37, scope: !5473)
!5477 = !DILocation(line: 3419, column: 40, scope: !5473)
!5478 = !DILocation(line: 3419, column: 45, scope: !5473)
!5479 = !DILocation(line: 3419, column: 50, scope: !5473)
!5480 = !DILocation(line: 3419, column: 6, scope: !5463)
!5481 = !DILocation(line: 3422, column: 7, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 3422, column: 7)
!5483 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 3419, column: 63)
!5484 = !DILocation(line: 3422, column: 12, scope: !5482)
!5485 = !DILocation(line: 3422, column: 21, scope: !5482)
!5486 = !DILocation(line: 3422, column: 7, scope: !5483)
!5487 = !DILocation(line: 3423, column: 20, scope: !5482)
!5488 = !DILocation(line: 3423, column: 4, scope: !5482)
!5489 = !DILocation(line: 3423, column: 10, scope: !5482)
!5490 = !DILocation(line: 3423, column: 15, scope: !5482)
!5491 = !DILocation(line: 3424, column: 7, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 3424, column: 7)
!5493 = !DILocation(line: 3424, column: 12, scope: !5492)
!5494 = !DILocation(line: 3424, column: 21, scope: !5492)
!5495 = !DILocation(line: 3424, column: 7, scope: !5483)
!5496 = !DILocation(line: 3425, column: 20, scope: !5492)
!5497 = !DILocation(line: 3425, column: 4, scope: !5492)
!5498 = !DILocation(line: 3425, column: 10, scope: !5492)
!5499 = !DILocation(line: 3425, column: 15, scope: !5492)
!5500 = !DILocation(line: 3427, column: 11, scope: !5483)
!5501 = !DILocation(line: 3427, column: 16, scope: !5483)
!5502 = !DILocation(line: 3427, column: 25, scope: !5483)
!5503 = !DILocation(line: 3427, column: 3, scope: !5483)
!5504 = !DILocation(line: 3429, column: 14, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 3427, column: 41)
!5506 = !DILocation(line: 3430, column: 5, scope: !5505)
!5507 = !DILocation(line: 3432, column: 14, scope: !5505)
!5508 = !DILocation(line: 3433, column: 5, scope: !5505)
!5509 = !DILocation(line: 3435, column: 14, scope: !5505)
!5510 = !DILocation(line: 3436, column: 5, scope: !5505)
!5511 = !DILocation(line: 3438, column: 14, scope: !5505)
!5512 = !DILocation(line: 3439, column: 5, scope: !5505)
!5513 = !DILocation(line: 3441, column: 14, scope: !5505)
!5514 = !DILocation(line: 3442, column: 5, scope: !5505)
!5515 = !DILocation(line: 3444, column: 14, scope: !5505)
!5516 = !DILocation(line: 3445, column: 5, scope: !5505)
!5517 = !DILocation(line: 3447, column: 14, scope: !5505)
!5518 = !DILocation(line: 3448, column: 5, scope: !5505)
!5519 = !DILocation(line: 3450, column: 14, scope: !5505)
!5520 = !DILocation(line: 3451, column: 5, scope: !5505)
!5521 = !DILocation(line: 3453, column: 14, scope: !5505)
!5522 = !DILocation(line: 3454, column: 5, scope: !5505)
!5523 = !DILocation(line: 3456, column: 2, scope: !5483)
!5524 = !DILocation(line: 3459, column: 6, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 3459, column: 6)
!5526 = !DILocation(line: 3459, column: 11, scope: !5525)
!5527 = !DILocation(line: 3459, column: 6, scope: !5463)
!5528 = !DILocalVariable(name: "direction", scope: !5529, file: !3, line: 3460, type: !1254)
!5529 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 3459, column: 19)
!5530 = !DILocation(line: 3460, column: 7, scope: !5529)
!5531 = !DILocation(line: 3460, column: 49, scope: !5529)
!5532 = !DILocation(line: 3460, column: 19, scope: !5529)
!5533 = !DILocation(line: 3462, column: 12, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 3462, column: 12)
!5535 = !DILocation(line: 3462, column: 22, scope: !5534)
!5536 = !DILocation(line: 3462, column: 12, scope: !5529)
!5537 = !DILocation(line: 3462, column: 44, scope: !5534)
!5538 = !DILocation(line: 3462, column: 35, scope: !5534)
!5539 = !DILocation(line: 3463, column: 12, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 3463, column: 12)
!5541 = !DILocation(line: 3463, column: 22, scope: !5540)
!5542 = !DILocation(line: 3463, column: 12, scope: !5534)
!5543 = !DILocation(line: 3463, column: 44, scope: !5540)
!5544 = !DILocation(line: 3463, column: 35, scope: !5540)
!5545 = !DILocation(line: 3464, column: 12, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 3464, column: 12)
!5547 = !DILocation(line: 3464, column: 22, scope: !5546)
!5548 = !DILocation(line: 3464, column: 12, scope: !5540)
!5549 = !DILocation(line: 3464, column: 44, scope: !5546)
!5550 = !DILocation(line: 3464, column: 35, scope: !5546)
!5551 = !DILocation(line: 3465, column: 12, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3465, column: 12)
!5553 = !DILocation(line: 3465, column: 22, scope: !5552)
!5554 = !DILocation(line: 3465, column: 12, scope: !5546)
!5555 = !DILocation(line: 3465, column: 44, scope: !5552)
!5556 = !DILocation(line: 3465, column: 35, scope: !5552)
!5557 = !DILocation(line: 3466, column: 2, scope: !5529)
!5558 = !DILocation(line: 3468, column: 9, scope: !5463)
!5559 = !DILocation(line: 3468, column: 2, scope: !5463)
!5560 = !DILocalVariable(name: "wt", arg: 1, scope: !2018, file: !3, line: 3472, type: !1431)
!5561 = !DILocation(line: 3472, column: 52, scope: !2018)
!5562 = !DILocation(line: 3476, column: 18, scope: !2018)
!5563 = !DILocation(line: 3476, column: 22, scope: !2018)
!5564 = !DILocation(line: 3476, column: 17, scope: !2018)
!5565 = !DILocation(line: 3478, column: 26, scope: !2018)
!5566 = !DILocation(line: 3479, column: 24, scope: !2018)
!5567 = !DILocation(line: 3480, column: 28, scope: !2018)
!5568 = !DILocation(line: 3481, column: 23, scope: !2018)
!5569 = !DILocation(line: 3482, column: 23, scope: !2018)
!5570 = !DILocation(line: 3483, column: 27, scope: !2018)
!5571 = !DILocation(line: 3485, column: 2, scope: !2018)
!5572 = !DILocation(line: 3485, column: 6, scope: !2018)
!5573 = !DILocation(line: 3485, column: 17, scope: !2018)
!5574 = !DILocation(line: 3486, column: 1, scope: !2018)
!5575 = distinct !DISubprogram(name: "ui_draw_menu_back", scope: !3, file: !3, line: 3745, type: !5576, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{null, !3832, !1596, !1451}
!5578 = !DILocalVariable(name: "UNUSED_style", arg: 1, scope: !5575, file: !3, line: 3745, type: !3832)
!5579 = !DILocation(line: 3745, column: 33, scope: !5575)
!5580 = !DILocalVariable(name: "block", arg: 2, scope: !5575, file: !3, line: 3745, type: !1596)
!5581 = !DILocation(line: 3745, column: 57, scope: !5575)
!5582 = !DILocalVariable(name: "rect", arg: 3, scope: !5575, file: !3, line: 3745, type: !1451)
!5583 = !DILocation(line: 3745, column: 70, scope: !5575)
!5584 = !DILocalVariable(name: "wt", scope: !5575, file: !3, line: 3747, type: !1431)
!5585 = !DILocation(line: 3747, column: 16, scope: !5575)
!5586 = !DILocation(line: 3747, column: 21, scope: !5575)
!5587 = !DILocation(line: 3749, column: 2, scope: !5575)
!5588 = !DILocation(line: 3749, column: 6, scope: !5575)
!5589 = !DILocation(line: 3749, column: 12, scope: !5575)
!5590 = !DILocation(line: 3750, column: 6, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 3750, column: 6)
!5592 = !DILocation(line: 3750, column: 6, scope: !5575)
!5593 = !DILocation(line: 3751, column: 3, scope: !5591)
!5594 = !DILocation(line: 3751, column: 7, scope: !5591)
!5595 = !DILocation(line: 3751, column: 13, scope: !5591)
!5596 = !DILocation(line: 3751, column: 17, scope: !5591)
!5597 = !DILocation(line: 3751, column: 23, scope: !5591)
!5598 = !DILocation(line: 3751, column: 29, scope: !5591)
!5599 = !DILocation(line: 3751, column: 36, scope: !5591)
!5600 = !DILocation(line: 3751, column: 42, scope: !5591)
!5601 = !DILocation(line: 3751, column: 49, scope: !5591)
!5602 = !DILocation(line: 3753, column: 3, scope: !5591)
!5603 = !DILocation(line: 3753, column: 7, scope: !5591)
!5604 = !DILocation(line: 3753, column: 13, scope: !5591)
!5605 = !DILocation(line: 3753, column: 17, scope: !5591)
!5606 = !DILocation(line: 3753, column: 23, scope: !5591)
!5607 = !DILocation(line: 3755, column: 6, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 3755, column: 6)
!5609 = !DILocation(line: 3755, column: 6, scope: !5575)
!5610 = !DILocation(line: 3756, column: 7, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 3756, column: 7)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 3755, column: 13)
!5613 = !DILocation(line: 3756, column: 14, scope: !5611)
!5614 = !DILocation(line: 3756, column: 19, scope: !5611)
!5615 = !DILocation(line: 3756, column: 7, scope: !5612)
!5616 = !DILocation(line: 3758, column: 33, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 3756, column: 39)
!5618 = !DILocation(line: 3758, column: 37, scope: !5617)
!5619 = !DILocation(line: 3758, column: 42, scope: !5617)
!5620 = !DILocation(line: 3758, column: 4, scope: !5617)
!5621 = !DILocation(line: 3759, column: 35, scope: !5617)
!5622 = !DILocation(line: 3759, column: 19, scope: !5617)
!5623 = !DILocation(line: 3759, column: 42, scope: !5617)
!5624 = !DILocation(line: 3759, column: 48, scope: !5617)
!5625 = !DILocation(line: 3759, column: 53, scope: !5617)
!5626 = !DILocation(line: 3759, column: 4, scope: !5617)
!5627 = !DILocation(line: 3760, column: 3, scope: !5617)
!5628 = !DILocation(line: 3761, column: 7, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 3761, column: 7)
!5630 = !DILocation(line: 3761, column: 14, scope: !5629)
!5631 = !DILocation(line: 3761, column: 19, scope: !5629)
!5632 = !DILocation(line: 3761, column: 7, scope: !5612)
!5633 = !DILocation(line: 3763, column: 33, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 3761, column: 42)
!5635 = !DILocation(line: 3763, column: 37, scope: !5634)
!5636 = !DILocation(line: 3763, column: 42, scope: !5634)
!5637 = !DILocation(line: 3763, column: 4, scope: !5634)
!5638 = !DILocation(line: 3764, column: 35, scope: !5634)
!5639 = !DILocation(line: 3764, column: 19, scope: !5634)
!5640 = !DILocation(line: 3764, column: 42, scope: !5634)
!5641 = !DILocation(line: 3764, column: 48, scope: !5634)
!5642 = !DILocation(line: 3764, column: 53, scope: !5634)
!5643 = !DILocation(line: 3764, column: 4, scope: !5634)
!5644 = !DILocation(line: 3765, column: 3, scope: !5634)
!5645 = !DILocation(line: 3766, column: 2, scope: !5612)
!5646 = !DILocation(line: 3767, column: 1, scope: !5575)
!5647 = distinct !DISubprogram(name: "BLI_rcti_cent_x", scope: !2343, file: !2343, line: 100, type: !2385, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5648 = !DILocalVariable(name: "rct", arg: 1, scope: !5647, file: !2343, line: 100, type: !2346)
!5649 = !DILocation(line: 100, column: 53, scope: !5647)
!5650 = !DILocation(line: 100, column: 68, scope: !5647)
!5651 = !DILocation(line: 100, column: 73, scope: !5647)
!5652 = !DILocation(line: 100, column: 80, scope: !5647)
!5653 = !DILocation(line: 100, column: 85, scope: !5647)
!5654 = !DILocation(line: 100, column: 78, scope: !5647)
!5655 = !DILocation(line: 100, column: 91, scope: !5647)
!5656 = !DILocation(line: 100, column: 60, scope: !5647)
!5657 = distinct !DISubprogram(name: "ui_draw_pie_center", scope: !3, file: !3, line: 3837, type: !5658, scopeLine: 3838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{null, !1596}
!5660 = !DILocalVariable(name: "block", arg: 1, scope: !5657, file: !3, line: 3837, type: !1596)
!5661 = !DILocation(line: 3837, column: 34, scope: !5657)
!5662 = !DILocalVariable(name: "btheme", scope: !5657, file: !3, line: 3839, type: !3866)
!5663 = !DILocation(line: 3839, column: 10, scope: !5657)
!5664 = !DILocation(line: 3839, column: 19, scope: !5657)
!5665 = !DILocalVariable(name: "cx", scope: !5657, file: !3, line: 3840, type: !1253)
!5666 = !DILocation(line: 3840, column: 8, scope: !5657)
!5667 = !DILocation(line: 3840, column: 13, scope: !5657)
!5668 = !DILocation(line: 3840, column: 20, scope: !5657)
!5669 = !DILocation(line: 3840, column: 29, scope: !5657)
!5670 = !DILocalVariable(name: "cy", scope: !5657, file: !3, line: 3841, type: !1253)
!5671 = !DILocation(line: 3841, column: 8, scope: !5657)
!5672 = !DILocation(line: 3841, column: 13, scope: !5657)
!5673 = !DILocation(line: 3841, column: 20, scope: !5657)
!5674 = !DILocation(line: 3841, column: 29, scope: !5657)
!5675 = !DILocalVariable(name: "pie_dir", scope: !5657, file: !3, line: 3843, type: !1737)
!5676 = !DILocation(line: 3843, column: 9, scope: !5657)
!5677 = !DILocation(line: 3843, column: 19, scope: !5657)
!5678 = !DILocation(line: 3843, column: 26, scope: !5657)
!5679 = !DILocation(line: 3843, column: 35, scope: !5657)
!5680 = !DILocalVariable(name: "pie_radius_internal", scope: !5657, file: !3, line: 3845, type: !1253)
!5681 = !DILocation(line: 3845, column: 8, scope: !5657)
!5682 = !DILocation(line: 3845, column: 32, scope: !5657)
!5683 = !DILocation(line: 3845, column: 46, scope: !5657)
!5684 = !DILocation(line: 3845, column: 44, scope: !5657)
!5685 = !DILocation(line: 3845, column: 42, scope: !5657)
!5686 = !DILocalVariable(name: "pie_radius_external", scope: !5657, file: !3, line: 3846, type: !1253)
!5687 = !DILocation(line: 3846, column: 8, scope: !5657)
!5688 = !DILocation(line: 3846, column: 32, scope: !5657)
!5689 = !DILocation(line: 3846, column: 47, scope: !5657)
!5690 = !DILocation(line: 3846, column: 45, scope: !5657)
!5691 = !DILocation(line: 3846, column: 66, scope: !5657)
!5692 = !DILocation(line: 3846, column: 42, scope: !5657)
!5693 = !DILocalVariable(name: "subd", scope: !5657, file: !3, line: 3848, type: !1254)
!5694 = !DILocation(line: 3848, column: 6, scope: !5657)
!5695 = !DILocalVariable(name: "angle", scope: !5657, file: !3, line: 3850, type: !1253)
!5696 = !DILocation(line: 3850, column: 8, scope: !5657)
!5697 = !DILocation(line: 3850, column: 23, scope: !5657)
!5698 = !DILocation(line: 3850, column: 35, scope: !5657)
!5699 = !DILocation(line: 3850, column: 16, scope: !5657)
!5700 = !DILocalVariable(name: "range", scope: !5657, file: !3, line: 3851, type: !1253)
!5701 = !DILocation(line: 3851, column: 8, scope: !5657)
!5702 = !DILocation(line: 3851, column: 17, scope: !5657)
!5703 = !DILocation(line: 3851, column: 24, scope: !5657)
!5704 = !DILocation(line: 3851, column: 33, scope: !5657)
!5705 = !DILocation(line: 3851, column: 39, scope: !5657)
!5706 = !DILocation(line: 3851, column: 16, scope: !5657)
!5707 = !DILocation(line: 3853, column: 2, scope: !5657)
!5708 = !DILocation(line: 3854, column: 15, scope: !5657)
!5709 = !DILocation(line: 3854, column: 19, scope: !5657)
!5710 = !DILocation(line: 3854, column: 2, scope: !5657)
!5711 = !DILocation(line: 3856, column: 2, scope: !5657)
!5712 = !DILocation(line: 3857, column: 6, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3857, column: 6)
!5714 = !DILocation(line: 3857, column: 14, scope: !5713)
!5715 = !DILocation(line: 3857, column: 18, scope: !5713)
!5716 = !DILocation(line: 3857, column: 32, scope: !5713)
!5717 = !DILocation(line: 3857, column: 6, scope: !5657)
!5718 = !DILocalVariable(name: "col1", scope: !5719, file: !3, line: 3858, type: !1349)
!5719 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 3857, column: 40)
!5720 = !DILocation(line: 3858, column: 8, scope: !5719)
!5721 = !DILocalVariable(name: "col2", scope: !5719, file: !3, line: 3858, type: !1349)
!5722 = !DILocation(line: 3858, column: 17, scope: !5719)
!5723 = !DILocation(line: 3859, column: 16, scope: !5719)
!5724 = !DILocation(line: 3859, column: 22, scope: !5719)
!5725 = !DILocation(line: 3859, column: 28, scope: !5719)
!5726 = !DILocation(line: 3859, column: 36, scope: !5719)
!5727 = !DILocation(line: 3859, column: 40, scope: !5719)
!5728 = !DILocation(line: 3859, column: 54, scope: !5719)
!5729 = !DILocation(line: 3859, column: 61, scope: !5719)
!5730 = !DILocation(line: 3859, column: 69, scope: !5719)
!5731 = !DILocation(line: 3859, column: 73, scope: !5719)
!5732 = !DILocation(line: 3859, column: 87, scope: !5719)
!5733 = !DILocation(line: 3859, column: 97, scope: !5719)
!5734 = !DILocation(line: 3859, column: 105, scope: !5719)
!5735 = !DILocation(line: 3859, column: 109, scope: !5719)
!5736 = !DILocation(line: 3859, column: 123, scope: !5719)
!5737 = !DILocation(line: 3859, column: 3, scope: !5719)
!5738 = !DILocation(line: 3860, column: 47, scope: !5719)
!5739 = !DILocation(line: 3860, column: 68, scope: !5719)
!5740 = !DILocation(line: 3860, column: 89, scope: !5719)
!5741 = !DILocation(line: 3860, column: 95, scope: !5719)
!5742 = !DILocation(line: 3860, column: 101, scope: !5719)
!5743 = !DILocation(line: 3860, column: 3, scope: !5719)
!5744 = !DILocation(line: 3861, column: 2, scope: !5719)
!5745 = !DILocation(line: 3863, column: 26, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 3862, column: 7)
!5747 = !DILocation(line: 3863, column: 34, scope: !5746)
!5748 = !DILocation(line: 3863, column: 38, scope: !5746)
!5749 = !DILocation(line: 3863, column: 52, scope: !5746)
!5750 = !DILocation(line: 3863, column: 3, scope: !5746)
!5751 = !DILocation(line: 3864, column: 47, scope: !5746)
!5752 = !DILocation(line: 3864, column: 68, scope: !5746)
!5753 = !DILocation(line: 3864, column: 89, scope: !5746)
!5754 = !DILocation(line: 3864, column: 3, scope: !5746)
!5755 = !DILocation(line: 3867, column: 8, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3867, column: 6)
!5757 = !DILocation(line: 3867, column: 15, scope: !5756)
!5758 = !DILocation(line: 3867, column: 24, scope: !5756)
!5759 = !DILocation(line: 3867, column: 30, scope: !5756)
!5760 = !DILocation(line: 3867, column: 6, scope: !5657)
!5761 = !DILocation(line: 3868, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 3868, column: 7)
!5763 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3867, column: 53)
!5764 = !DILocation(line: 3868, column: 15, scope: !5762)
!5765 = !DILocation(line: 3868, column: 19, scope: !5762)
!5766 = !DILocation(line: 3868, column: 33, scope: !5762)
!5767 = !DILocation(line: 3868, column: 7, scope: !5763)
!5768 = !DILocalVariable(name: "col1", scope: !5769, file: !3, line: 3869, type: !1349)
!5769 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3868, column: 41)
!5770 = !DILocation(line: 3869, column: 9, scope: !5769)
!5771 = !DILocalVariable(name: "col2", scope: !5769, file: !3, line: 3869, type: !1349)
!5772 = !DILocation(line: 3869, column: 18, scope: !5769)
!5773 = !DILocation(line: 3870, column: 17, scope: !5769)
!5774 = !DILocation(line: 3870, column: 23, scope: !5769)
!5775 = !DILocation(line: 3870, column: 29, scope: !5769)
!5776 = !DILocation(line: 3870, column: 37, scope: !5769)
!5777 = !DILocation(line: 3870, column: 41, scope: !5769)
!5778 = !DILocation(line: 3870, column: 55, scope: !5769)
!5779 = !DILocation(line: 3870, column: 66, scope: !5769)
!5780 = !DILocation(line: 3870, column: 74, scope: !5769)
!5781 = !DILocation(line: 3870, column: 78, scope: !5769)
!5782 = !DILocation(line: 3870, column: 92, scope: !5769)
!5783 = !DILocation(line: 3870, column: 102, scope: !5769)
!5784 = !DILocation(line: 3870, column: 110, scope: !5769)
!5785 = !DILocation(line: 3870, column: 114, scope: !5769)
!5786 = !DILocation(line: 3870, column: 128, scope: !5769)
!5787 = !DILocation(line: 3870, column: 4, scope: !5769)
!5788 = !DILocation(line: 3871, column: 21, scope: !5769)
!5789 = !DILocation(line: 3871, column: 29, scope: !5769)
!5790 = !DILocation(line: 3871, column: 35, scope: !5769)
!5791 = !DILocation(line: 3871, column: 27, scope: !5769)
!5792 = !DILocation(line: 3871, column: 43, scope: !5769)
!5793 = !DILocation(line: 3871, column: 50, scope: !5769)
!5794 = !DILocation(line: 3871, column: 71, scope: !5769)
!5795 = !DILocation(line: 3871, column: 92, scope: !5769)
!5796 = !DILocation(line: 3871, column: 98, scope: !5769)
!5797 = !DILocation(line: 3871, column: 104, scope: !5769)
!5798 = !DILocation(line: 3871, column: 4, scope: !5769)
!5799 = !DILocation(line: 3872, column: 3, scope: !5769)
!5800 = !DILocation(line: 3874, column: 27, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3873, column: 8)
!5802 = !DILocation(line: 3874, column: 35, scope: !5801)
!5803 = !DILocation(line: 3874, column: 39, scope: !5801)
!5804 = !DILocation(line: 3874, column: 53, scope: !5801)
!5805 = !DILocation(line: 3874, column: 4, scope: !5801)
!5806 = !DILocation(line: 3875, column: 21, scope: !5801)
!5807 = !DILocation(line: 3875, column: 29, scope: !5801)
!5808 = !DILocation(line: 3875, column: 35, scope: !5801)
!5809 = !DILocation(line: 3875, column: 27, scope: !5801)
!5810 = !DILocation(line: 3875, column: 43, scope: !5801)
!5811 = !DILocation(line: 3875, column: 50, scope: !5801)
!5812 = !DILocation(line: 3875, column: 71, scope: !5801)
!5813 = !DILocation(line: 3875, column: 92, scope: !5801)
!5814 = !DILocation(line: 3875, column: 4, scope: !5801)
!5815 = !DILocation(line: 3877, column: 2, scope: !5763)
!5816 = !DILocation(line: 3879, column: 25, scope: !5657)
!5817 = !DILocation(line: 3879, column: 33, scope: !5657)
!5818 = !DILocation(line: 3879, column: 37, scope: !5657)
!5819 = !DILocation(line: 3879, column: 51, scope: !5657)
!5820 = !DILocation(line: 3879, column: 2, scope: !5657)
!5821 = !DILocation(line: 3880, column: 50, scope: !5657)
!5822 = !DILocation(line: 3880, column: 71, scope: !5657)
!5823 = !DILocation(line: 3880, column: 2, scope: !5657)
!5824 = !DILocation(line: 3881, column: 50, scope: !5657)
!5825 = !DILocation(line: 3881, column: 71, scope: !5657)
!5826 = !DILocation(line: 3881, column: 2, scope: !5657)
!5827 = !DILocation(line: 3883, column: 8, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3883, column: 6)
!5829 = !DILocation(line: 3883, column: 6, scope: !5828)
!5830 = !DILocation(line: 3883, column: 25, scope: !5828)
!5831 = !DILocation(line: 3883, column: 29, scope: !5828)
!5832 = !DILocation(line: 3883, column: 34, scope: !5828)
!5833 = !DILocation(line: 3883, column: 41, scope: !5828)
!5834 = !DILocation(line: 3883, column: 50, scope: !5828)
!5835 = !DILocation(line: 3883, column: 56, scope: !5828)
!5836 = !DILocation(line: 3883, column: 6, scope: !5657)
!5837 = !DILocalVariable(name: "pie_confirm_radius", scope: !5838, file: !3, line: 3884, type: !1253)
!5838 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 3883, column: 102)
!5839 = !DILocation(line: 3884, column: 9, scope: !5838)
!5840 = !DILocation(line: 3884, column: 32, scope: !5838)
!5841 = !DILocation(line: 3884, column: 45, scope: !5838)
!5842 = !DILocation(line: 3884, column: 69, scope: !5838)
!5843 = !DILocation(line: 3884, column: 67, scope: !5838)
!5844 = !DILocation(line: 3884, column: 65, scope: !5838)
!5845 = !DILocation(line: 3884, column: 42, scope: !5838)
!5846 = !DILocalVariable(name: "pie_confirm_external", scope: !5838, file: !3, line: 3885, type: !1253)
!5847 = !DILocation(line: 3885, column: 9, scope: !5838)
!5848 = !DILocation(line: 3885, column: 34, scope: !5838)
!5849 = !DILocation(line: 3885, column: 47, scope: !5838)
!5850 = !DILocation(line: 3885, column: 71, scope: !5838)
!5851 = !DILocation(line: 3885, column: 69, scope: !5838)
!5852 = !DILocation(line: 3885, column: 67, scope: !5838)
!5853 = !DILocation(line: 3885, column: 88, scope: !5838)
!5854 = !DILocation(line: 3885, column: 44, scope: !5838)
!5855 = !DILocation(line: 3887, column: 14, scope: !5838)
!5856 = !DILocation(line: 3887, column: 22, scope: !5838)
!5857 = !DILocation(line: 3887, column: 26, scope: !5838)
!5858 = !DILocation(line: 3887, column: 40, scope: !5838)
!5859 = !DILocation(line: 3887, column: 53, scope: !5838)
!5860 = !DILocation(line: 3887, column: 61, scope: !5838)
!5861 = !DILocation(line: 3887, column: 65, scope: !5838)
!5862 = !DILocation(line: 3887, column: 79, scope: !5838)
!5863 = !DILocation(line: 3887, column: 92, scope: !5838)
!5864 = !DILocation(line: 3887, column: 100, scope: !5838)
!5865 = !DILocation(line: 3887, column: 104, scope: !5838)
!5866 = !DILocation(line: 3887, column: 118, scope: !5838)
!5867 = !DILocation(line: 3887, column: 3, scope: !5838)
!5868 = !DILocation(line: 3888, column: 20, scope: !5838)
!5869 = !DILocation(line: 3888, column: 28, scope: !5838)
!5870 = !DILocation(line: 3888, column: 34, scope: !5838)
!5871 = !DILocation(line: 3888, column: 26, scope: !5838)
!5872 = !DILocation(line: 3888, column: 42, scope: !5838)
!5873 = !DILocation(line: 3888, column: 49, scope: !5838)
!5874 = !DILocation(line: 3888, column: 69, scope: !5838)
!5875 = !DILocation(line: 3888, column: 91, scope: !5838)
!5876 = !DILocation(line: 3888, column: 3, scope: !5838)
!5877 = !DILocation(line: 3889, column: 2, scope: !5838)
!5878 = !DILocation(line: 3891, column: 2, scope: !5657)
!5879 = !DILocation(line: 3892, column: 2, scope: !5657)
!5880 = !DILocation(line: 3893, column: 1, scope: !5657)
!5881 = distinct !DISubprogram(name: "shadecolors4", scope: !3, file: !3, line: 584, type: !5882, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5882 = !DISubroutineType(types: !5883)
!5883 = !{null, !1487, !1487, !1547, !1300, !1300}
!5884 = !DILocalVariable(name: "coltop", arg: 1, scope: !5881, file: !3, line: 584, type: !1487)
!5885 = !DILocation(line: 584, column: 31, scope: !5881)
!5886 = !DILocalVariable(name: "coldown", arg: 2, scope: !5881, file: !3, line: 584, type: !1487)
!5887 = !DILocation(line: 584, column: 47, scope: !5881)
!5888 = !DILocalVariable(name: "color", arg: 3, scope: !5881, file: !3, line: 584, type: !1547)
!5889 = !DILocation(line: 584, column: 71, scope: !5881)
!5890 = !DILocalVariable(name: "shadetop", arg: 4, scope: !5881, file: !3, line: 584, type: !1300)
!5891 = !DILocation(line: 584, column: 84, scope: !5881)
!5892 = !DILocalVariable(name: "shadedown", arg: 5, scope: !5881, file: !3, line: 584, type: !1300)
!5893 = !DILocation(line: 584, column: 100, scope: !5881)
!5894 = !DILocation(line: 587, column: 14, scope: !5881)
!5895 = !DILocation(line: 587, column: 2, scope: !5881)
!5896 = !DILocation(line: 587, column: 12, scope: !5881)
!5897 = !DILocation(line: 588, column: 14, scope: !5881)
!5898 = !DILocation(line: 588, column: 2, scope: !5881)
!5899 = !DILocation(line: 588, column: 12, scope: !5881)
!5900 = !DILocation(line: 589, column: 14, scope: !5881)
!5901 = !DILocation(line: 589, column: 2, scope: !5881)
!5902 = !DILocation(line: 589, column: 12, scope: !5881)
!5903 = !DILocation(line: 590, column: 14, scope: !5881)
!5904 = !DILocation(line: 590, column: 2, scope: !5881)
!5905 = !DILocation(line: 590, column: 12, scope: !5881)
!5906 = !DILocation(line: 592, column: 15, scope: !5881)
!5907 = !DILocation(line: 592, column: 2, scope: !5881)
!5908 = !DILocation(line: 592, column: 13, scope: !5881)
!5909 = !DILocation(line: 593, column: 15, scope: !5881)
!5910 = !DILocation(line: 593, column: 2, scope: !5881)
!5911 = !DILocation(line: 593, column: 13, scope: !5881)
!5912 = !DILocation(line: 594, column: 15, scope: !5881)
!5913 = !DILocation(line: 594, column: 2, scope: !5881)
!5914 = !DILocation(line: 594, column: 13, scope: !5881)
!5915 = !DILocation(line: 595, column: 15, scope: !5881)
!5916 = !DILocation(line: 595, column: 2, scope: !5881)
!5917 = !DILocation(line: 595, column: 13, scope: !5881)
!5918 = !DILocation(line: 596, column: 1, scope: !5881)
!5919 = distinct !DISubprogram(name: "draw_disk_shaded", scope: !3, file: !3, line: 3769, type: !5920, scopeLine: 3774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{null, !1253, !1253, !1253, !1253, !1254, !1547, !1547, !1256}
!5922 = !DILocalVariable(name: "start", arg: 1, scope: !5919, file: !3, line: 3770, type: !1253)
!5923 = !DILocation(line: 3770, column: 15, scope: !5919)
!5924 = !DILocalVariable(name: "angle", arg: 2, scope: !5919, file: !3, line: 3770, type: !1253)
!5925 = !DILocation(line: 3770, column: 28, scope: !5919)
!5926 = !DILocalVariable(name: "radius_int", arg: 3, scope: !5919, file: !3, line: 3771, type: !1253)
!5927 = !DILocation(line: 3771, column: 15, scope: !5919)
!5928 = !DILocalVariable(name: "radius_ext", arg: 4, scope: !5919, file: !3, line: 3771, type: !1253)
!5929 = !DILocation(line: 3771, column: 33, scope: !5919)
!5930 = !DILocalVariable(name: "subd", arg: 5, scope: !5919, file: !3, line: 3771, type: !1254)
!5931 = !DILocation(line: 3771, column: 49, scope: !5919)
!5932 = !DILocalVariable(name: "col1", arg: 6, scope: !5919, file: !3, line: 3772, type: !1547)
!5933 = !DILocation(line: 3772, column: 20, scope: !5919)
!5934 = !DILocalVariable(name: "col2", arg: 7, scope: !5919, file: !3, line: 3772, type: !1547)
!5935 = !DILocation(line: 3772, column: 40, scope: !5919)
!5936 = !DILocalVariable(name: "shaded", arg: 8, scope: !5919, file: !3, line: 3773, type: !1256)
!5937 = !DILocation(line: 3773, column: 14, scope: !5919)
!5938 = !DILocalVariable(name: "radius_ext_scale", scope: !5919, file: !3, line: 3775, type: !1410)
!5939 = !DILocation(line: 3775, column: 14, scope: !5919)
!5940 = !DILocation(line: 3775, column: 41, scope: !5919)
!5941 = !DILocation(line: 3775, column: 39, scope: !5919)
!5942 = !DILocalVariable(name: "i", scope: !5919, file: !3, line: 3776, type: !1254)
!5943 = !DILocation(line: 3776, column: 6, scope: !5919)
!5944 = !DILocalVariable(name: "s", scope: !5919, file: !3, line: 3778, type: !1253)
!5945 = !DILocation(line: 3778, column: 8, scope: !5919)
!5946 = !DILocalVariable(name: "c", scope: !5919, file: !3, line: 3778, type: !1253)
!5947 = !DILocation(line: 3778, column: 11, scope: !5919)
!5948 = !DILocalVariable(name: "y1", scope: !5919, file: !3, line: 3779, type: !1253)
!5949 = !DILocation(line: 3779, column: 8, scope: !5919)
!5950 = !DILocalVariable(name: "y2", scope: !5919, file: !3, line: 3779, type: !1253)
!5951 = !DILocation(line: 3779, column: 12, scope: !5919)
!5952 = !DILocalVariable(name: "fac", scope: !5919, file: !3, line: 3780, type: !1253)
!5953 = !DILocation(line: 3780, column: 8, scope: !5919)
!5954 = !DILocalVariable(name: "r_col", scope: !5919, file: !3, line: 3781, type: !1512)
!5955 = !DILocation(line: 3781, column: 16, scope: !5919)
!5956 = !DILocation(line: 3783, column: 2, scope: !5919)
!5957 = !DILocation(line: 3785, column: 11, scope: !5919)
!5958 = !DILocation(line: 3785, column: 6, scope: !5919)
!5959 = !DILocation(line: 3785, column: 4, scope: !5919)
!5960 = !DILocation(line: 3786, column: 11, scope: !5919)
!5961 = !DILocation(line: 3786, column: 6, scope: !5919)
!5962 = !DILocation(line: 3786, column: 4, scope: !5919)
!5963 = !DILocation(line: 3788, column: 7, scope: !5919)
!5964 = !DILocation(line: 3788, column: 11, scope: !5919)
!5965 = !DILocation(line: 3788, column: 9, scope: !5919)
!5966 = !DILocation(line: 3788, column: 5, scope: !5919)
!5967 = !DILocation(line: 3789, column: 7, scope: !5919)
!5968 = !DILocation(line: 3789, column: 11, scope: !5919)
!5969 = !DILocation(line: 3789, column: 9, scope: !5919)
!5970 = !DILocation(line: 3789, column: 5, scope: !5919)
!5971 = !DILocation(line: 3791, column: 6, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3791, column: 6)
!5973 = !DILocation(line: 3791, column: 6, scope: !5919)
!5974 = !DILocation(line: 3792, column: 10, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 3791, column: 14)
!5976 = !DILocation(line: 3792, column: 15, scope: !5975)
!5977 = !DILocation(line: 3792, column: 13, scope: !5975)
!5978 = !DILocation(line: 3792, column: 29, scope: !5975)
!5979 = !DILocation(line: 3792, column: 27, scope: !5975)
!5980 = !DILocation(line: 3792, column: 7, scope: !5975)
!5981 = !DILocation(line: 3793, column: 26, scope: !5975)
!5982 = !DILocation(line: 3793, column: 33, scope: !5975)
!5983 = !DILocation(line: 3793, column: 39, scope: !5975)
!5984 = !DILocation(line: 3793, column: 45, scope: !5975)
!5985 = !DILocation(line: 3793, column: 3, scope: !5975)
!5986 = !DILocation(line: 3795, column: 15, scope: !5975)
!5987 = !DILocation(line: 3795, column: 3, scope: !5975)
!5988 = !DILocation(line: 3796, column: 2, scope: !5975)
!5989 = !DILocation(line: 3798, column: 13, scope: !5919)
!5990 = !DILocation(line: 3798, column: 17, scope: !5919)
!5991 = !DILocation(line: 3798, column: 15, scope: !5919)
!5992 = !DILocation(line: 3798, column: 29, scope: !5919)
!5993 = !DILocation(line: 3798, column: 33, scope: !5919)
!5994 = !DILocation(line: 3798, column: 31, scope: !5919)
!5995 = !DILocation(line: 3798, column: 2, scope: !5919)
!5996 = !DILocation(line: 3800, column: 6, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3800, column: 6)
!5998 = !DILocation(line: 3800, column: 6, scope: !5919)
!5999 = !DILocation(line: 3801, column: 10, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 3800, column: 14)
!6001 = !DILocation(line: 3801, column: 15, scope: !6000)
!6002 = !DILocation(line: 3801, column: 13, scope: !6000)
!6003 = !DILocation(line: 3801, column: 29, scope: !6000)
!6004 = !DILocation(line: 3801, column: 27, scope: !6000)
!6005 = !DILocation(line: 3801, column: 7, scope: !6000)
!6006 = !DILocation(line: 3802, column: 26, scope: !6000)
!6007 = !DILocation(line: 3802, column: 33, scope: !6000)
!6008 = !DILocation(line: 3802, column: 39, scope: !6000)
!6009 = !DILocation(line: 3802, column: 45, scope: !6000)
!6010 = !DILocation(line: 3802, column: 3, scope: !6000)
!6011 = !DILocation(line: 3804, column: 15, scope: !6000)
!6012 = !DILocation(line: 3804, column: 3, scope: !6000)
!6013 = !DILocation(line: 3805, column: 2, scope: !6000)
!6014 = !DILocation(line: 3806, column: 13, scope: !5919)
!6015 = !DILocation(line: 3806, column: 17, scope: !5919)
!6016 = !DILocation(line: 3806, column: 15, scope: !5919)
!6017 = !DILocation(line: 3806, column: 29, scope: !5919)
!6018 = !DILocation(line: 3806, column: 33, scope: !5919)
!6019 = !DILocation(line: 3806, column: 31, scope: !5919)
!6020 = !DILocation(line: 3806, column: 2, scope: !5919)
!6021 = !DILocation(line: 3808, column: 9, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3808, column: 2)
!6023 = !DILocation(line: 3808, column: 7, scope: !6022)
!6024 = !DILocation(line: 3808, column: 14, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 3808, column: 2)
!6026 = !DILocation(line: 3808, column: 18, scope: !6025)
!6027 = !DILocation(line: 3808, column: 16, scope: !6025)
!6028 = !DILocation(line: 3808, column: 2, scope: !6022)
!6029 = !DILocalVariable(name: "a", scope: !6030, file: !3, line: 3809, type: !1253)
!6030 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 3808, column: 29)
!6031 = !DILocation(line: 3809, column: 9, scope: !6030)
!6032 = !DILocation(line: 3811, column: 7, scope: !6030)
!6033 = !DILocation(line: 3811, column: 17, scope: !6030)
!6034 = !DILocation(line: 3811, column: 16, scope: !6030)
!6035 = !DILocation(line: 3811, column: 30, scope: !6030)
!6036 = !DILocation(line: 3811, column: 35, scope: !6030)
!6037 = !DILocation(line: 3811, column: 22, scope: !6030)
!6038 = !DILocation(line: 3811, column: 20, scope: !6030)
!6039 = !DILocation(line: 3811, column: 43, scope: !6030)
!6040 = !DILocation(line: 3811, column: 41, scope: !6030)
!6041 = !DILocation(line: 3811, column: 13, scope: !6030)
!6042 = !DILocation(line: 3811, column: 5, scope: !6030)
!6043 = !DILocation(line: 3812, column: 12, scope: !6030)
!6044 = !DILocation(line: 3812, column: 7, scope: !6030)
!6045 = !DILocation(line: 3812, column: 5, scope: !6030)
!6046 = !DILocation(line: 3813, column: 12, scope: !6030)
!6047 = !DILocation(line: 3813, column: 7, scope: !6030)
!6048 = !DILocation(line: 3813, column: 5, scope: !6030)
!6049 = !DILocation(line: 3814, column: 8, scope: !6030)
!6050 = !DILocation(line: 3814, column: 12, scope: !6030)
!6051 = !DILocation(line: 3814, column: 10, scope: !6030)
!6052 = !DILocation(line: 3814, column: 6, scope: !6030)
!6053 = !DILocation(line: 3815, column: 8, scope: !6030)
!6054 = !DILocation(line: 3815, column: 12, scope: !6030)
!6055 = !DILocation(line: 3815, column: 10, scope: !6030)
!6056 = !DILocation(line: 3815, column: 6, scope: !6030)
!6057 = !DILocation(line: 3817, column: 7, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 3817, column: 7)
!6059 = !DILocation(line: 3817, column: 7, scope: !6030)
!6060 = !DILocation(line: 3818, column: 11, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 3817, column: 15)
!6062 = !DILocation(line: 3818, column: 16, scope: !6061)
!6063 = !DILocation(line: 3818, column: 14, scope: !6061)
!6064 = !DILocation(line: 3818, column: 30, scope: !6061)
!6065 = !DILocation(line: 3818, column: 28, scope: !6061)
!6066 = !DILocation(line: 3818, column: 8, scope: !6061)
!6067 = !DILocation(line: 3819, column: 27, scope: !6061)
!6068 = !DILocation(line: 3819, column: 34, scope: !6061)
!6069 = !DILocation(line: 3819, column: 40, scope: !6061)
!6070 = !DILocation(line: 3819, column: 46, scope: !6061)
!6071 = !DILocation(line: 3819, column: 4, scope: !6061)
!6072 = !DILocation(line: 3821, column: 16, scope: !6061)
!6073 = !DILocation(line: 3821, column: 4, scope: !6061)
!6074 = !DILocation(line: 3822, column: 3, scope: !6061)
!6075 = !DILocation(line: 3823, column: 14, scope: !6030)
!6076 = !DILocation(line: 3823, column: 18, scope: !6030)
!6077 = !DILocation(line: 3823, column: 16, scope: !6030)
!6078 = !DILocation(line: 3823, column: 30, scope: !6030)
!6079 = !DILocation(line: 3823, column: 34, scope: !6030)
!6080 = !DILocation(line: 3823, column: 32, scope: !6030)
!6081 = !DILocation(line: 3823, column: 3, scope: !6030)
!6082 = !DILocation(line: 3825, column: 7, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 3825, column: 7)
!6084 = !DILocation(line: 3825, column: 7, scope: !6030)
!6085 = !DILocation(line: 3826, column: 11, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3825, column: 15)
!6087 = !DILocation(line: 3826, column: 16, scope: !6086)
!6088 = !DILocation(line: 3826, column: 14, scope: !6086)
!6089 = !DILocation(line: 3826, column: 30, scope: !6086)
!6090 = !DILocation(line: 3826, column: 28, scope: !6086)
!6091 = !DILocation(line: 3826, column: 8, scope: !6086)
!6092 = !DILocation(line: 3827, column: 27, scope: !6086)
!6093 = !DILocation(line: 3827, column: 34, scope: !6086)
!6094 = !DILocation(line: 3827, column: 40, scope: !6086)
!6095 = !DILocation(line: 3827, column: 46, scope: !6086)
!6096 = !DILocation(line: 3827, column: 4, scope: !6086)
!6097 = !DILocation(line: 3829, column: 16, scope: !6086)
!6098 = !DILocation(line: 3829, column: 4, scope: !6086)
!6099 = !DILocation(line: 3830, column: 3, scope: !6086)
!6100 = !DILocation(line: 3831, column: 14, scope: !6030)
!6101 = !DILocation(line: 3831, column: 18, scope: !6030)
!6102 = !DILocation(line: 3831, column: 16, scope: !6030)
!6103 = !DILocation(line: 3831, column: 30, scope: !6030)
!6104 = !DILocation(line: 3831, column: 34, scope: !6030)
!6105 = !DILocation(line: 3831, column: 32, scope: !6030)
!6106 = !DILocation(line: 3831, column: 3, scope: !6030)
!6107 = !DILocation(line: 3832, column: 2, scope: !6030)
!6108 = !DILocation(line: 3808, column: 25, scope: !6025)
!6109 = !DILocation(line: 3808, column: 2, scope: !6025)
!6110 = distinct !{!6110, !6028, !6111}
!6111 = !DILocation(line: 3832, column: 2, scope: !6022)
!6112 = !DILocation(line: 3833, column: 2, scope: !5919)
!6113 = !DILocation(line: 3835, column: 1, scope: !5919)
!6114 = distinct !DISubprogram(name: "ui_tooltip_get_theme", scope: !3, file: !3, line: 3896, type: !6115, scopeLine: 3897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!1436}
!6117 = !DILocalVariable(name: "wt", scope: !6114, file: !3, line: 3898, type: !1431)
!6118 = !DILocation(line: 3898, column: 16, scope: !6114)
!6119 = !DILocation(line: 3898, column: 21, scope: !6114)
!6120 = !DILocation(line: 3899, column: 9, scope: !6114)
!6121 = !DILocation(line: 3899, column: 13, scope: !6114)
!6122 = !DILocation(line: 3899, column: 2, scope: !6114)
!6123 = distinct !DISubprogram(name: "ui_draw_tooltip_background", scope: !3, file: !3, line: 3902, type: !5576, scopeLine: 3903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6124 = !DILocalVariable(name: "UNUSED_style", arg: 1, scope: !6123, file: !3, line: 3902, type: !3832)
!6125 = !DILocation(line: 3902, column: 42, scope: !6123)
!6126 = !DILocalVariable(name: "UNUSED_block", arg: 2, scope: !6123, file: !3, line: 3902, type: !1596)
!6127 = !DILocation(line: 3902, column: 66, scope: !6123)
!6128 = !DILocalVariable(name: "rect", arg: 3, scope: !6123, file: !3, line: 3902, type: !1451)
!6129 = !DILocation(line: 3902, column: 87, scope: !6123)
!6130 = !DILocalVariable(name: "wt", scope: !6123, file: !3, line: 3904, type: !1431)
!6131 = !DILocation(line: 3904, column: 16, scope: !6123)
!6132 = !DILocation(line: 3904, column: 21, scope: !6123)
!6133 = !DILocation(line: 3905, column: 2, scope: !6123)
!6134 = !DILocation(line: 3905, column: 6, scope: !6123)
!6135 = !DILocation(line: 3905, column: 12, scope: !6123)
!6136 = !DILocation(line: 3907, column: 2, scope: !6123)
!6137 = !DILocation(line: 3907, column: 6, scope: !6123)
!6138 = !DILocation(line: 3907, column: 12, scope: !6123)
!6139 = !DILocation(line: 3907, column: 16, scope: !6123)
!6140 = !DILocation(line: 3907, column: 22, scope: !6123)
!6141 = !DILocation(line: 3908, column: 1, scope: !6123)
!6142 = distinct !DISubprogram(name: "ui_draw_search_back", scope: !3, file: !3, line: 3910, type: !5576, scopeLine: 3911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6143 = !DILocalVariable(name: "UNUSED_style", arg: 1, scope: !6142, file: !3, line: 3910, type: !3832)
!6144 = !DILocation(line: 3910, column: 35, scope: !6142)
!6145 = !DILocalVariable(name: "block", arg: 2, scope: !6142, file: !3, line: 3910, type: !1596)
!6146 = !DILocation(line: 3910, column: 59, scope: !6142)
!6147 = !DILocalVariable(name: "rect", arg: 3, scope: !6142, file: !3, line: 3910, type: !1451)
!6148 = !DILocation(line: 3910, column: 72, scope: !6142)
!6149 = !DILocalVariable(name: "wt", scope: !6142, file: !3, line: 3912, type: !1431)
!6150 = !DILocation(line: 3912, column: 16, scope: !6142)
!6151 = !DILocation(line: 3912, column: 21, scope: !6142)
!6152 = !DILocation(line: 3914, column: 2, scope: !6142)
!6153 = !DILocation(line: 3915, column: 20, scope: !6142)
!6154 = !DILocation(line: 3915, column: 48, scope: !6142)
!6155 = !DILocation(line: 3915, column: 46, scope: !6142)
!6156 = !DILocation(line: 3915, column: 44, scope: !6142)
!6157 = !DILocation(line: 3915, column: 2, scope: !6142)
!6158 = !DILocation(line: 3916, column: 2, scope: !6142)
!6159 = !DILocation(line: 3918, column: 2, scope: !6142)
!6160 = !DILocation(line: 3918, column: 6, scope: !6142)
!6161 = !DILocation(line: 3918, column: 12, scope: !6142)
!6162 = !DILocation(line: 3919, column: 6, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 3919, column: 6)
!6164 = !DILocation(line: 3919, column: 6, scope: !6142)
!6165 = !DILocation(line: 3920, column: 3, scope: !6163)
!6166 = !DILocation(line: 3920, column: 7, scope: !6163)
!6167 = !DILocation(line: 3920, column: 13, scope: !6163)
!6168 = !DILocation(line: 3920, column: 17, scope: !6163)
!6169 = !DILocation(line: 3920, column: 23, scope: !6163)
!6170 = !DILocation(line: 3920, column: 29, scope: !6163)
!6171 = !DILocation(line: 3920, column: 36, scope: !6163)
!6172 = !DILocation(line: 3922, column: 3, scope: !6163)
!6173 = !DILocation(line: 3922, column: 7, scope: !6163)
!6174 = !DILocation(line: 3922, column: 13, scope: !6163)
!6175 = !DILocation(line: 3922, column: 17, scope: !6163)
!6176 = !DILocation(line: 3922, column: 23, scope: !6163)
!6177 = !DILocation(line: 3924, column: 1, scope: !6142)
!6178 = distinct !DISubprogram(name: "widget_softshadow", scope: !3, file: !3, line: 2000, type: !6179, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{null, !2279, !1254, !1410}
!6181 = !DILocalVariable(name: "rect", arg: 1, scope: !6178, file: !3, line: 2000, type: !2279)
!6182 = !DILocation(line: 2000, column: 43, scope: !6178)
!6183 = !DILocalVariable(name: "roundboxalign", arg: 2, scope: !6178, file: !3, line: 2000, type: !1254)
!6184 = !DILocation(line: 2000, column: 53, scope: !6178)
!6185 = !DILocalVariable(name: "radin", arg: 3, scope: !6178, file: !3, line: 2000, type: !1410)
!6186 = !DILocation(line: 2000, column: 80, scope: !6178)
!6187 = !DILocalVariable(name: "btheme", scope: !6178, file: !3, line: 2002, type: !3866)
!6188 = !DILocation(line: 2002, column: 10, scope: !6178)
!6189 = !DILocation(line: 2002, column: 19, scope: !6178)
!6190 = !DILocalVariable(name: "wtb", scope: !6178, file: !3, line: 2003, type: !3146)
!6191 = !DILocation(line: 2003, column: 15, scope: !6178)
!6192 = !DILocalVariable(name: "rect1", scope: !6178, file: !3, line: 2004, type: !1452)
!6193 = !DILocation(line: 2004, column: 7, scope: !6178)
!6194 = !DILocation(line: 2004, column: 16, scope: !6178)
!6195 = !DILocation(line: 2004, column: 15, scope: !6178)
!6196 = !DILocalVariable(name: "alphastep", scope: !6178, file: !3, line: 2005, type: !1253)
!6197 = !DILocation(line: 2005, column: 8, scope: !6178)
!6198 = !DILocalVariable(name: "step", scope: !6178, file: !3, line: 2006, type: !1254)
!6199 = !DILocation(line: 2006, column: 6, scope: !6178)
!6200 = !DILocalVariable(name: "totvert", scope: !6178, file: !3, line: 2006, type: !1254)
!6201 = !DILocation(line: 2006, column: 12, scope: !6178)
!6202 = !DILocalVariable(name: "quad_strip", scope: !6178, file: !3, line: 2007, type: !3611)
!6203 = !DILocation(line: 2007, column: 8, scope: !6178)
!6204 = !DILocalVariable(name: "radout", scope: !6178, file: !3, line: 2008, type: !1410)
!6205 = !DILocation(line: 2008, column: 14, scope: !6178)
!6206 = !DILocation(line: 2008, column: 23, scope: !6178)
!6207 = !DILocation(line: 2011, column: 6, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2011, column: 6)
!6209 = !DILocation(line: 2011, column: 13, scope: !6208)
!6210 = !DILocation(line: 2011, column: 6, scope: !6178)
!6211 = !DILocation(line: 2012, column: 3, scope: !6208)
!6212 = !DILocation(line: 2015, column: 6, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2015, column: 6)
!6214 = !DILocation(line: 2015, column: 22, scope: !6213)
!6215 = !DILocation(line: 2015, column: 20, scope: !6213)
!6216 = !DILocation(line: 2015, column: 13, scope: !6213)
!6217 = !DILocation(line: 2015, column: 6, scope: !6178)
!6218 = !DILocation(line: 2016, column: 24, scope: !6213)
!6219 = !DILocation(line: 2016, column: 22, scope: !6213)
!6220 = !DILocation(line: 2016, column: 9, scope: !6213)
!6221 = !DILocation(line: 2016, column: 14, scope: !6213)
!6222 = !DILocation(line: 2016, column: 3, scope: !6213)
!6223 = !DILocation(line: 2018, column: 17, scope: !6213)
!6224 = !DILocation(line: 2018, column: 9, scope: !6213)
!6225 = !DILocation(line: 2018, column: 14, scope: !6213)
!6226 = !DILocation(line: 2021, column: 39, scope: !6178)
!6227 = !DILocation(line: 2021, column: 35, scope: !6178)
!6228 = !DILocation(line: 2021, column: 56, scope: !6178)
!6229 = !DILocation(line: 2021, column: 63, scope: !6178)
!6230 = !DILocation(line: 2021, column: 77, scope: !6178)
!6231 = !DILocation(line: 2021, column: 12, scope: !6178)
!6232 = !DILocation(line: 2021, column: 10, scope: !6178)
!6233 = !DILocation(line: 2024, column: 21, scope: !6178)
!6234 = !DILocation(line: 2024, column: 29, scope: !6178)
!6235 = !DILocation(line: 2024, column: 33, scope: !6178)
!6236 = !DILocation(line: 2024, column: 19, scope: !6178)
!6237 = !DILocation(line: 2024, column: 51, scope: !6178)
!6238 = !DILocation(line: 2024, column: 49, scope: !6178)
!6239 = !DILocation(line: 2024, column: 12, scope: !6178)
!6240 = !DILocation(line: 2026, column: 2, scope: !6178)
!6241 = !DILocation(line: 2028, column: 12, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2028, column: 2)
!6243 = !DILocation(line: 2028, column: 7, scope: !6242)
!6244 = !DILocation(line: 2028, column: 17, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2028, column: 2)
!6246 = !DILocation(line: 2028, column: 30, scope: !6245)
!6247 = !DILocation(line: 2028, column: 25, scope: !6245)
!6248 = !DILocation(line: 2028, column: 22, scope: !6245)
!6249 = !DILocation(line: 2028, column: 2, scope: !6242)
!6250 = !DILocalVariable(name: "expfac", scope: !6251, file: !3, line: 2029, type: !1253)
!6251 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 2028, column: 46)
!6252 = !DILocation(line: 2029, column: 9, scope: !6251)
!6253 = !DILocation(line: 2029, column: 24, scope: !6251)
!6254 = !DILocation(line: 2029, column: 31, scope: !6251)
!6255 = !DILocation(line: 2029, column: 29, scope: !6251)
!6256 = !DILocation(line: 2029, column: 18, scope: !6251)
!6257 = !DILocation(line: 2031, column: 30, scope: !6251)
!6258 = !DILocation(line: 2031, column: 26, scope: !6251)
!6259 = !DILocation(line: 2031, column: 47, scope: !6251)
!6260 = !DILocation(line: 2031, column: 73, scope: !6251)
!6261 = !DILocation(line: 2031, column: 66, scope: !6251)
!6262 = !DILocation(line: 2031, column: 3, scope: !6251)
!6263 = !DILocation(line: 2033, column: 31, scope: !6251)
!6264 = !DILocation(line: 2033, column: 51, scope: !6251)
!6265 = !DILocation(line: 2033, column: 49, scope: !6251)
!6266 = !DILocation(line: 2033, column: 41, scope: !6251)
!6267 = !DILocation(line: 2033, column: 3, scope: !6251)
!6268 = !DILocation(line: 2035, column: 36, scope: !6251)
!6269 = !DILocation(line: 2035, column: 45, scope: !6251)
!6270 = !DILocation(line: 2035, column: 3, scope: !6251)
!6271 = !DILocation(line: 2037, column: 35, scope: !6251)
!6272 = !DILocation(line: 2037, column: 3, scope: !6251)
!6273 = !DILocation(line: 2038, column: 34, scope: !6251)
!6274 = !DILocation(line: 2038, column: 42, scope: !6251)
!6275 = !DILocation(line: 2038, column: 3, scope: !6251)
!6276 = !DILocation(line: 2039, column: 2, scope: !6251)
!6277 = !DILocation(line: 2028, column: 42, scope: !6245)
!6278 = !DILocation(line: 2028, column: 2, scope: !6245)
!6279 = distinct !{!6279, !6249, !6280}
!6280 = !DILocation(line: 2039, column: 2, scope: !6242)
!6281 = !DILocation(line: 2041, column: 2, scope: !6178)
!6282 = !DILocation(line: 2042, column: 1, scope: !6178)
!6283 = distinct !DISubprogram(name: "ui_draw_menu_item", scope: !3, file: !3, line: 3929, type: !6284, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{null, !1970, !1451, !1547, !1254, !1254, !1256}
!6286 = !DILocalVariable(name: "fstyle", arg: 1, scope: !6283, file: !3, line: 3929, type: !1970)
!6287 = !DILocation(line: 3929, column: 37, scope: !6283)
!6288 = !DILocalVariable(name: "rect", arg: 2, scope: !6283, file: !3, line: 3929, type: !1451)
!6289 = !DILocation(line: 3929, column: 51, scope: !6283)
!6290 = !DILocalVariable(name: "name", arg: 3, scope: !6283, file: !3, line: 3929, type: !1547)
!6291 = !DILocation(line: 3929, column: 69, scope: !6283)
!6292 = !DILocalVariable(name: "iconid", arg: 4, scope: !6283, file: !3, line: 3929, type: !1254)
!6293 = !DILocation(line: 3929, column: 79, scope: !6283)
!6294 = !DILocalVariable(name: "state", arg: 5, scope: !6283, file: !3, line: 3929, type: !1254)
!6295 = !DILocation(line: 3929, column: 91, scope: !6283)
!6296 = !DILocalVariable(name: "use_sep", arg: 6, scope: !6283, file: !3, line: 3929, type: !1256)
!6297 = !DILocation(line: 3929, column: 103, scope: !6283)
!6298 = !DILocalVariable(name: "wt", scope: !6283, file: !3, line: 3931, type: !1431)
!6299 = !DILocation(line: 3931, column: 16, scope: !6283)
!6300 = !DILocation(line: 3931, column: 21, scope: !6283)
!6301 = !DILocalVariable(name: "_rect", scope: !6283, file: !3, line: 3932, type: !1452)
!6302 = !DILocation(line: 3932, column: 7, scope: !6283)
!6303 = !DILocation(line: 3932, column: 16, scope: !6283)
!6304 = !DILocation(line: 3932, column: 15, scope: !6283)
!6305 = !DILocalVariable(name: "cpoin", scope: !6283, file: !3, line: 3933, type: !1487)
!6306 = !DILocation(line: 3933, column: 8, scope: !6283)
!6307 = !DILocation(line: 3935, column: 2, scope: !6283)
!6308 = !DILocation(line: 3935, column: 6, scope: !6283)
!6309 = !DILocation(line: 3935, column: 12, scope: !6283)
!6310 = !DILocation(line: 3935, column: 16, scope: !6283)
!6311 = !DILocation(line: 3936, column: 2, scope: !6283)
!6312 = !DILocation(line: 3936, column: 6, scope: !6283)
!6313 = !DILocation(line: 3936, column: 12, scope: !6283)
!6314 = !DILocation(line: 3936, column: 16, scope: !6283)
!6315 = !DILocation(line: 3936, column: 22, scope: !6283)
!6316 = !DILocation(line: 3938, column: 17, scope: !6283)
!6317 = !DILocation(line: 3938, column: 2, scope: !6283)
!6318 = !DILocation(line: 3939, column: 2, scope: !6283)
!6319 = !DILocation(line: 3939, column: 10, scope: !6283)
!6320 = !DILocation(line: 3939, column: 16, scope: !6283)
!6321 = !DILocation(line: 3942, column: 24, scope: !6283)
!6322 = !DILocation(line: 3942, column: 22, scope: !6283)
!6323 = !DILocation(line: 3942, column: 2, scope: !6283)
!6324 = !DILocation(line: 3942, column: 8, scope: !6283)
!6325 = !DILocation(line: 3942, column: 13, scope: !6283)
!6326 = !DILocation(line: 3943, column: 6, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3943, column: 6)
!6328 = !DILocation(line: 3943, column: 6, scope: !6283)
!6329 = !DILocation(line: 3943, column: 28, scope: !6327)
!6330 = !DILocation(line: 3943, column: 14, scope: !6327)
!6331 = !DILocation(line: 3943, column: 20, scope: !6327)
!6332 = !DILocation(line: 3943, column: 25, scope: !6327)
!6333 = !DILocation(line: 3946, column: 6, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3946, column: 6)
!6335 = !DILocation(line: 3946, column: 6, scope: !6283)
!6336 = !DILocation(line: 3947, column: 18, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3946, column: 15)
!6338 = !DILocation(line: 3947, column: 11, scope: !6337)
!6339 = !DILocation(line: 3947, column: 9, scope: !6337)
!6340 = !DILocation(line: 3948, column: 7, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 3948, column: 7)
!6342 = !DILocation(line: 3948, column: 7, scope: !6337)
!6343 = !DILocation(line: 3949, column: 5, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 3948, column: 14)
!6345 = !DILocation(line: 3949, column: 11, scope: !6344)
!6346 = !DILocation(line: 3952, column: 19, scope: !6344)
!6347 = !DILocation(line: 3952, column: 4, scope: !6344)
!6348 = !DILocation(line: 3954, column: 8, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3954, column: 8)
!6350 = !DILocation(line: 3954, column: 16, scope: !6349)
!6351 = !DILocation(line: 3954, column: 24, scope: !6349)
!6352 = !DILocation(line: 3954, column: 8, scope: !6344)
!6353 = !DILocation(line: 3955, column: 16, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 3954, column: 30)
!6355 = !DILocation(line: 3955, column: 24, scope: !6354)
!6356 = !DILocation(line: 3955, column: 5, scope: !6354)
!6357 = !DILocation(line: 3956, column: 4, scope: !6354)
!6358 = !DILocation(line: 3958, column: 28, scope: !6344)
!6359 = !DILocation(line: 3958, column: 36, scope: !6344)
!6360 = !DILocation(line: 3958, column: 47, scope: !6344)
!6361 = !DILocation(line: 3958, column: 53, scope: !6344)
!6362 = !DILocation(line: 3958, column: 18, scope: !6344)
!6363 = !DILocation(line: 3958, column: 69, scope: !6344)
!6364 = !DILocation(line: 3958, column: 67, scope: !6344)
!6365 = !DILocation(line: 3958, column: 4, scope: !6344)
!6366 = !DILocation(line: 3958, column: 10, scope: !6344)
!6367 = !DILocation(line: 3958, column: 15, scope: !6344)
!6368 = !DILocation(line: 3960, column: 8, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3960, column: 8)
!6370 = !DILocation(line: 3960, column: 16, scope: !6369)
!6371 = !DILocation(line: 3960, column: 24, scope: !6369)
!6372 = !DILocation(line: 3960, column: 8, scope: !6344)
!6373 = !DILocation(line: 3961, column: 17, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 3960, column: 30)
!6375 = !DILocation(line: 3961, column: 25, scope: !6374)
!6376 = !DILocation(line: 3961, column: 5, scope: !6374)
!6377 = !DILocation(line: 3962, column: 4, scope: !6374)
!6378 = !DILocation(line: 3963, column: 3, scope: !6344)
!6379 = !DILocation(line: 3964, column: 2, scope: !6337)
!6380 = !DILocalVariable(name: "drawstr", scope: !6381, file: !3, line: 3967, type: !1493)
!6381 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3966, column: 2)
!6382 = !DILocation(line: 3967, column: 8, scope: !6381)
!6383 = !DILocalVariable(name: "okwidth", scope: !6381, file: !3, line: 3968, type: !1410)
!6384 = !DILocation(line: 3968, column: 15, scope: !6381)
!6385 = !DILocation(line: 3968, column: 48, scope: !6381)
!6386 = !DILocation(line: 3968, column: 32, scope: !6381)
!6387 = !DILocation(line: 3968, column: 25, scope: !6381)
!6388 = !DILocalVariable(name: "max_len", scope: !6381, file: !3, line: 3969, type: !6389)
!6389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!6390 = !DILocation(line: 3969, column: 16, scope: !6381)
!6391 = !DILocalVariable(name: "minwidth", scope: !6381, file: !3, line: 3970, type: !1410)
!6392 = !DILocation(line: 3970, column: 15, scope: !6381)
!6393 = !DILocation(line: 3970, column: 34, scope: !6381)
!6394 = !DILocation(line: 3972, column: 15, scope: !6381)
!6395 = !DILocation(line: 3972, column: 24, scope: !6381)
!6396 = !DILocation(line: 3972, column: 3, scope: !6381)
!6397 = !DILocation(line: 3973, column: 26, scope: !6381)
!6398 = !DILocation(line: 3973, column: 34, scope: !6381)
!6399 = !DILocation(line: 3973, column: 43, scope: !6381)
!6400 = !DILocation(line: 3973, column: 52, scope: !6381)
!6401 = !DILocation(line: 3973, column: 3, scope: !6381)
!6402 = !DILocation(line: 3975, column: 32, scope: !6381)
!6403 = !DILocation(line: 3975, column: 36, scope: !6381)
!6404 = !DILocation(line: 3975, column: 41, scope: !6381)
!6405 = !DILocation(line: 3975, column: 3, scope: !6381)
!6406 = !DILocation(line: 3976, column: 19, scope: !6381)
!6407 = !DILocation(line: 3976, column: 27, scope: !6381)
!6408 = !DILocation(line: 3976, column: 33, scope: !6381)
!6409 = !DILocation(line: 3976, column: 3, scope: !6381)
!6410 = !DILocation(line: 3980, column: 6, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3980, column: 6)
!6412 = !DILocation(line: 3980, column: 6, scope: !6283)
!6413 = !DILocation(line: 3981, column: 7, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3981, column: 7)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 3980, column: 15)
!6416 = !DILocation(line: 3981, column: 7, scope: !6415)
!6417 = !DILocation(line: 3982, column: 4, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3981, column: 14)
!6419 = !DILocation(line: 3982, column: 12, scope: !6418)
!6420 = !DILocation(line: 3982, column: 18, scope: !6418)
!6421 = !DILocation(line: 3983, column: 23, scope: !6418)
!6422 = !DILocation(line: 3983, column: 28, scope: !6418)
!6423 = !DILocation(line: 3983, column: 4, scope: !6418)
!6424 = !DILocation(line: 3983, column: 10, scope: !6418)
!6425 = !DILocation(line: 3983, column: 15, scope: !6418)
!6426 = !DILocation(line: 3984, column: 20, scope: !6418)
!6427 = !DILocation(line: 3984, column: 28, scope: !6418)
!6428 = !DILocation(line: 3984, column: 34, scope: !6418)
!6429 = !DILocation(line: 3984, column: 40, scope: !6418)
!6430 = !DILocation(line: 3984, column: 4, scope: !6418)
!6431 = !DILocation(line: 3985, column: 5, scope: !6418)
!6432 = !DILocation(line: 3985, column: 11, scope: !6418)
!6433 = !DILocation(line: 3986, column: 3, scope: !6418)
!6434 = !DILocation(line: 3987, column: 2, scope: !6415)
!6435 = !DILocation(line: 3990, column: 3, scope: !6283)
!6436 = !DILocation(line: 3990, column: 10, scope: !6283)
!6437 = !DILocation(line: 3992, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3992, column: 6)
!6439 = !DILocation(line: 3992, column: 6, scope: !6283)
!6440 = !DILocalVariable(name: "height", scope: !6441, file: !3, line: 3993, type: !1253)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 3992, column: 14)
!6442 = !DILocation(line: 3993, column: 9, scope: !6441)
!6443 = !DILocalVariable(name: "aspect", scope: !6441, file: !3, line: 3993, type: !1253)
!6444 = !DILocation(line: 3993, column: 17, scope: !6441)
!6445 = !DILocalVariable(name: "xs", scope: !6441, file: !3, line: 3994, type: !1254)
!6446 = !DILocation(line: 3994, column: 7, scope: !6441)
!6447 = !DILocation(line: 3994, column: 12, scope: !6441)
!6448 = !DILocation(line: 3994, column: 18, scope: !6441)
!6449 = !DILocation(line: 3994, column: 32, scope: !6441)
!6450 = !DILocation(line: 3994, column: 30, scope: !6441)
!6451 = !DILocation(line: 3994, column: 23, scope: !6441)
!6452 = !DILocalVariable(name: "ys", scope: !6441, file: !3, line: 3995, type: !1254)
!6453 = !DILocation(line: 3995, column: 7, scope: !6441)
!6454 = !DILocation(line: 3995, column: 12, scope: !6441)
!6455 = !DILocation(line: 3995, column: 18, scope: !6441)
!6456 = !DILocation(line: 3995, column: 48, scope: !6441)
!6457 = !DILocation(line: 3995, column: 32, scope: !6441)
!6458 = !DILocation(line: 3995, column: 30, scope: !6441)
!6459 = !DILocation(line: 3995, column: 23, scope: !6441)
!6460 = !DILocation(line: 3997, column: 12, scope: !6441)
!6461 = !DILocation(line: 3997, column: 10, scope: !6441)
!6462 = !DILocation(line: 3998, column: 34, scope: !6441)
!6463 = !DILocation(line: 3998, column: 32, scope: !6441)
!6464 = !DILocation(line: 3998, column: 10, scope: !6441)
!6465 = !DILocation(line: 4000, column: 3, scope: !6441)
!6466 = !DILocation(line: 4001, column: 23, scope: !6441)
!6467 = !DILocation(line: 4001, column: 27, scope: !6441)
!6468 = !DILocation(line: 4001, column: 31, scope: !6441)
!6469 = !DILocation(line: 4001, column: 39, scope: !6441)
!6470 = !DILocation(line: 4001, column: 3, scope: !6441)
!6471 = !DILocation(line: 4002, column: 3, scope: !6441)
!6472 = !DILocation(line: 4003, column: 2, scope: !6441)
!6473 = !DILocation(line: 4004, column: 1, scope: !6283)
!6474 = distinct !DISubprogram(name: "ui_text_clip_middle_ex", scope: !3, file: !3, line: 968, type: !6475, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6475 = !DISubroutineType(types: !6476)
!6476 = !{!1253, !1970, !1487, !1253, !1410, !6389, !1547}
!6477 = !DILocalVariable(name: "fstyle", arg: 1, scope: !6474, file: !3, line: 968, type: !1970)
!6478 = !DILocation(line: 968, column: 50, scope: !6474)
!6479 = !DILocalVariable(name: "str", arg: 2, scope: !6474, file: !3, line: 968, type: !1487)
!6480 = !DILocation(line: 968, column: 64, scope: !6474)
!6481 = !DILocalVariable(name: "okwidth", arg: 3, scope: !6474, file: !3, line: 968, type: !1253)
!6482 = !DILocation(line: 968, column: 75, scope: !6474)
!6483 = !DILocalVariable(name: "minwidth", arg: 4, scope: !6474, file: !3, line: 968, type: !1410)
!6484 = !DILocation(line: 968, column: 96, scope: !6474)
!6485 = !DILocalVariable(name: "max_len", arg: 5, scope: !6474, file: !3, line: 969, type: !6389)
!6486 = !DILocation(line: 969, column: 50, scope: !6474)
!6487 = !DILocalVariable(name: "rpart_sep", arg: 6, scope: !6474, file: !3, line: 969, type: !1547)
!6488 = !DILocation(line: 969, column: 71, scope: !6474)
!6489 = !DILocalVariable(name: "strwidth", scope: !6474, file: !3, line: 971, type: !1253)
!6490 = !DILocation(line: 971, column: 8, scope: !6474)
!6491 = !DILocation(line: 976, column: 17, scope: !6474)
!6492 = !DILocation(line: 976, column: 2, scope: !6474)
!6493 = !DILocation(line: 978, column: 6, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 978, column: 6)
!6495 = !DILocation(line: 978, column: 14, scope: !6494)
!6496 = !DILocation(line: 978, column: 22, scope: !6494)
!6497 = !DILocation(line: 978, column: 6, scope: !6474)
!6498 = !DILocation(line: 979, column: 14, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 978, column: 28)
!6500 = !DILocation(line: 979, column: 22, scope: !6499)
!6501 = !DILocation(line: 979, column: 3, scope: !6499)
!6502 = !DILocation(line: 980, column: 2, scope: !6499)
!6503 = !DILocation(line: 982, column: 23, scope: !6474)
!6504 = !DILocation(line: 982, column: 31, scope: !6474)
!6505 = !DILocation(line: 982, column: 42, scope: !6474)
!6506 = !DILocation(line: 982, column: 47, scope: !6474)
!6507 = !DILocation(line: 982, column: 13, scope: !6474)
!6508 = !DILocation(line: 982, column: 11, scope: !6474)
!6509 = !DILocation(line: 984, column: 7, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 984, column: 6)
!6511 = !DILocation(line: 984, column: 15, scope: !6510)
!6512 = !DILocation(line: 984, column: 23, scope: !6510)
!6513 = !DILocation(line: 984, column: 27, scope: !6510)
!6514 = !DILocation(line: 984, column: 38, scope: !6510)
!6515 = !DILocation(line: 984, column: 36, scope: !6510)
!6516 = !DILocation(line: 984, column: 6, scope: !6474)
!6517 = !DILocalVariable(name: "sep", scope: !6518, file: !3, line: 986, type: !6519)
!6518 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 984, column: 48)
!6519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1548, size: 32, elements: !1350)
!6520 = !DILocation(line: 986, column: 14, scope: !6518)
!6521 = !DILocalVariable(name: "sep_len", scope: !6518, file: !3, line: 987, type: !2500)
!6522 = !DILocation(line: 987, column: 13, scope: !6518)
!6523 = !DILocalVariable(name: "sep_strwidth", scope: !6518, file: !3, line: 988, type: !1410)
!6524 = !DILocation(line: 988, column: 15, scope: !6518)
!6525 = !DILocation(line: 988, column: 40, scope: !6518)
!6526 = !DILocation(line: 988, column: 48, scope: !6518)
!6527 = !DILocation(line: 988, column: 59, scope: !6518)
!6528 = !DILocation(line: 988, column: 30, scope: !6518)
!6529 = !DILocalVariable(name: "parts_strwidth", scope: !6518, file: !3, line: 989, type: !1253)
!6530 = !DILocation(line: 989, column: 9, scope: !6518)
!6531 = !DILocalVariable(name: "l_end", scope: !6518, file: !3, line: 990, type: !1340)
!6532 = !DILocation(line: 990, column: 10, scope: !6518)
!6533 = !DILocalVariable(name: "rpart", scope: !6518, file: !3, line: 992, type: !1487)
!6534 = !DILocation(line: 992, column: 9, scope: !6518)
!6535 = !DILocalVariable(name: "rpart_buf", scope: !6518, file: !3, line: 992, type: !1493)
!6536 = !DILocation(line: 992, column: 23, scope: !6518)
!6537 = !DILocalVariable(name: "rpart_width", scope: !6518, file: !3, line: 993, type: !1253)
!6538 = !DILocation(line: 993, column: 9, scope: !6518)
!6539 = !DILocalVariable(name: "rpart_len", scope: !6518, file: !3, line: 994, type: !1340)
!6540 = !DILocation(line: 994, column: 10, scope: !6518)
!6541 = !DILocalVariable(name: "final_lpart_len", scope: !6518, file: !3, line: 995, type: !1340)
!6542 = !DILocation(line: 995, column: 10, scope: !6518)
!6543 = !DILocation(line: 997, column: 7, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 997, column: 7)
!6545 = !DILocation(line: 997, column: 7, scope: !6518)
!6546 = !DILocation(line: 998, column: 19, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 997, column: 18)
!6548 = !DILocation(line: 998, column: 24, scope: !6547)
!6549 = !DILocation(line: 998, column: 12, scope: !6547)
!6550 = !DILocation(line: 998, column: 10, scope: !6547)
!6551 = !DILocation(line: 1000, column: 8, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1000, column: 8)
!6553 = !DILocation(line: 1000, column: 8, scope: !6547)
!6554 = !DILocation(line: 1001, column: 24, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1000, column: 15)
!6556 = !DILocation(line: 1001, column: 17, scope: !6555)
!6557 = !DILocation(line: 1001, column: 15, scope: !6555)
!6558 = !DILocation(line: 1002, column: 29, scope: !6555)
!6559 = !DILocation(line: 1002, column: 37, scope: !6555)
!6560 = !DILocation(line: 1002, column: 48, scope: !6555)
!6561 = !DILocation(line: 1002, column: 55, scope: !6555)
!6562 = !DILocation(line: 1002, column: 19, scope: !6555)
!6563 = !DILocation(line: 1002, column: 17, scope: !6555)
!6564 = !DILocation(line: 1003, column: 16, scope: !6555)
!6565 = !DILocation(line: 1003, column: 13, scope: !6555)
!6566 = !DILocation(line: 1004, column: 17, scope: !6555)
!6567 = !DILocation(line: 1004, column: 14, scope: !6555)
!6568 = !DILocation(line: 1006, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 1006, column: 9)
!6570 = !DILocation(line: 1006, column: 17, scope: !6569)
!6571 = !DILocation(line: 1006, column: 9, scope: !6555)
!6572 = !DILocation(line: 1009, column: 14, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 1006, column: 25)
!6574 = !DILocation(line: 1009, column: 19, scope: !6573)
!6575 = !DILocation(line: 1009, column: 26, scope: !6573)
!6576 = !DILocation(line: 1009, column: 36, scope: !6573)
!6577 = !DILocation(line: 1009, column: 6, scope: !6573)
!6578 = !DILocation(line: 1010, column: 12, scope: !6573)
!6579 = !DILocation(line: 1011, column: 17, scope: !6573)
!6580 = !DILocation(line: 1011, column: 14, scope: !6573)
!6581 = !DILocation(line: 1012, column: 17, scope: !6573)
!6582 = !DILocation(line: 1012, column: 15, scope: !6573)
!6583 = !DILocation(line: 1013, column: 5, scope: !6573)
!6584 = !DILocation(line: 1014, column: 4, scope: !6555)
!6585 = !DILocation(line: 1015, column: 3, scope: !6547)
!6586 = !DILocation(line: 1017, column: 21, scope: !6518)
!6587 = !DILocation(line: 1017, column: 31, scope: !6518)
!6588 = !DILocation(line: 1017, column: 29, scope: !6518)
!6589 = !DILocation(line: 1017, column: 45, scope: !6518)
!6590 = !DILocation(line: 1017, column: 18, scope: !6518)
!6591 = !DILocation(line: 1019, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 1019, column: 7)
!6593 = !DILocation(line: 1019, column: 7, scope: !6518)
!6594 = !DILocation(line: 1020, column: 11, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1019, column: 14)
!6596 = !DILocation(line: 1020, column: 22, scope: !6595)
!6597 = !DILocation(line: 1020, column: 4, scope: !6595)
!6598 = !DILocation(line: 1021, column: 5, scope: !6595)
!6599 = !DILocation(line: 1021, column: 11, scope: !6595)
!6600 = !DILocation(line: 1022, column: 12, scope: !6595)
!6601 = !DILocation(line: 1022, column: 10, scope: !6595)
!6602 = !DILocation(line: 1023, column: 3, scope: !6595)
!6603 = !DILocation(line: 1025, column: 31, scope: !6518)
!6604 = !DILocation(line: 1025, column: 39, scope: !6518)
!6605 = !DILocation(line: 1025, column: 50, scope: !6518)
!6606 = !DILocation(line: 1025, column: 55, scope: !6518)
!6607 = !DILocation(line: 1025, column: 64, scope: !6518)
!6608 = !DILocation(line: 1025, column: 11, scope: !6518)
!6609 = !DILocation(line: 1025, column: 9, scope: !6518)
!6610 = !DILocation(line: 1026, column: 7, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 1026, column: 7)
!6612 = !DILocation(line: 1026, column: 13, scope: !6611)
!6613 = !DILocation(line: 1026, column: 18, scope: !6611)
!6614 = !DILocation(line: 1026, column: 28, scope: !6611)
!6615 = !DILocation(line: 1026, column: 44, scope: !6611)
!6616 = !DILocation(line: 1026, column: 55, scope: !6611)
!6617 = !DILocation(line: 1026, column: 53, scope: !6611)
!6618 = !DILocation(line: 1026, column: 21, scope: !6611)
!6619 = !DILocation(line: 1026, column: 66, scope: !6611)
!6620 = !DILocation(line: 1026, column: 64, scope: !6611)
!6621 = !DILocation(line: 1026, column: 7, scope: !6518)
!6622 = !DILocation(line: 1030, column: 26, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 1026, column: 76)
!6624 = !DILocation(line: 1030, column: 34, scope: !6623)
!6625 = !DILocation(line: 1030, column: 39, scope: !6623)
!6626 = !DILocation(line: 1030, column: 48, scope: !6623)
!6627 = !DILocation(line: 1030, column: 57, scope: !6623)
!6628 = !DILocation(line: 1030, column: 71, scope: !6623)
!6629 = !DILocation(line: 1030, column: 4, scope: !6623)
!6630 = !DILocation(line: 1031, column: 3, scope: !6623)
!6631 = !DILocalVariable(name: "r_offset", scope: !6632, file: !3, line: 1033, type: !1340)
!6632 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 1032, column: 8)
!6633 = !DILocation(line: 1033, column: 11, scope: !6632)
!6634 = !DILocalVariable(name: "r_len", scope: !6632, file: !3, line: 1033, type: !1340)
!6635 = !DILocation(line: 1033, column: 21, scope: !6632)
!6636 = !DILocation(line: 1035, column: 36, scope: !6632)
!6637 = !DILocation(line: 1035, column: 44, scope: !6632)
!6638 = !DILocation(line: 1035, column: 55, scope: !6632)
!6639 = !DILocation(line: 1035, column: 60, scope: !6632)
!6640 = !DILocation(line: 1035, column: 69, scope: !6632)
!6641 = !DILocation(line: 1035, column: 15, scope: !6632)
!6642 = !DILocation(line: 1035, column: 13, scope: !6632)
!6643 = !DILocation(line: 1036, column: 19, scope: !6632)
!6644 = !DILocation(line: 1036, column: 25, scope: !6632)
!6645 = !DILocation(line: 1036, column: 23, scope: !6632)
!6646 = !DILocation(line: 1036, column: 12, scope: !6632)
!6647 = !DILocation(line: 1036, column: 35, scope: !6632)
!6648 = !DILocation(line: 1036, column: 10, scope: !6632)
!6649 = !DILocation(line: 1038, column: 8, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1038, column: 8)
!6651 = !DILocation(line: 1038, column: 14, scope: !6650)
!6652 = !DILocation(line: 1038, column: 26, scope: !6650)
!6653 = !DILocation(line: 1038, column: 24, scope: !6650)
!6654 = !DILocation(line: 1038, column: 34, scope: !6650)
!6655 = !DILocation(line: 1038, column: 32, scope: !6650)
!6656 = !DILocation(line: 1038, column: 46, scope: !6650)
!6657 = !DILocation(line: 1038, column: 44, scope: !6650)
!6658 = !DILocation(line: 1038, column: 8, scope: !6632)
!6659 = !DILocation(line: 1044, column: 27, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1038, column: 55)
!6661 = !DILocation(line: 1044, column: 35, scope: !6660)
!6662 = !DILocation(line: 1044, column: 40, scope: !6660)
!6663 = !DILocation(line: 1044, column: 49, scope: !6660)
!6664 = !DILocation(line: 1044, column: 58, scope: !6660)
!6665 = !DILocation(line: 1044, column: 72, scope: !6660)
!6666 = !DILocation(line: 1044, column: 5, scope: !6660)
!6667 = !DILocation(line: 1045, column: 4, scope: !6660)
!6668 = !DILocation(line: 1047, column: 13, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1046, column: 9)
!6670 = !DILocation(line: 1047, column: 19, scope: !6669)
!6671 = !DILocation(line: 1047, column: 17, scope: !6669)
!6672 = !DILocation(line: 1047, column: 25, scope: !6669)
!6673 = !DILocation(line: 1047, column: 36, scope: !6669)
!6674 = !DILocation(line: 1047, column: 42, scope: !6669)
!6675 = !DILocation(line: 1047, column: 40, scope: !6669)
!6676 = !DILocation(line: 1047, column: 52, scope: !6669)
!6677 = !DILocation(line: 1047, column: 5, scope: !6669)
!6678 = !DILocation(line: 1048, column: 12, scope: !6669)
!6679 = !DILocation(line: 1048, column: 18, scope: !6669)
!6680 = !DILocation(line: 1048, column: 16, scope: !6669)
!6681 = !DILocation(line: 1048, column: 5, scope: !6669)
!6682 = !DILocation(line: 1049, column: 32, scope: !6669)
!6683 = !DILocation(line: 1049, column: 38, scope: !6669)
!6684 = !DILocation(line: 1049, column: 50, scope: !6669)
!6685 = !DILocation(line: 1049, column: 48, scope: !6669)
!6686 = !DILocation(line: 1049, column: 56, scope: !6669)
!6687 = !DILocation(line: 1049, column: 21, scope: !6669)
!6688 = !DILocation(line: 1053, column: 7, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 1053, column: 7)
!6690 = !DILocation(line: 1053, column: 7, scope: !6518)
!6691 = !DILocation(line: 1055, column: 11, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1053, column: 14)
!6693 = !DILocation(line: 1055, column: 17, scope: !6692)
!6694 = !DILocation(line: 1055, column: 15, scope: !6692)
!6695 = !DILocation(line: 1055, column: 34, scope: !6692)
!6696 = !DILocation(line: 1055, column: 41, scope: !6692)
!6697 = !DILocation(line: 1055, column: 51, scope: !6692)
!6698 = !DILocation(line: 1055, column: 4, scope: !6692)
!6699 = !DILocation(line: 1056, column: 3, scope: !6692)
!6700 = !DILocation(line: 1058, column: 24, scope: !6518)
!6701 = !DILocation(line: 1058, column: 32, scope: !6518)
!6702 = !DILocation(line: 1058, column: 43, scope: !6518)
!6703 = !DILocation(line: 1058, column: 48, scope: !6518)
!6704 = !DILocation(line: 1058, column: 14, scope: !6518)
!6705 = !DILocation(line: 1058, column: 12, scope: !6518)
!6706 = !DILocation(line: 1059, column: 2, scope: !6518)
!6707 = !DILocation(line: 1061, column: 6, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1061, column: 6)
!6709 = !DILocation(line: 1061, column: 14, scope: !6708)
!6710 = !DILocation(line: 1061, column: 22, scope: !6708)
!6711 = !DILocation(line: 1061, column: 6, scope: !6474)
!6712 = !DILocation(line: 1062, column: 15, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 1061, column: 28)
!6714 = !DILocation(line: 1062, column: 23, scope: !6713)
!6715 = !DILocation(line: 1062, column: 3, scope: !6713)
!6716 = !DILocation(line: 1063, column: 2, scope: !6713)
!6717 = !DILocation(line: 1065, column: 9, scope: !6474)
!6718 = !DILocation(line: 1065, column: 2, scope: !6474)
!6719 = distinct !DISubprogram(name: "ui_draw_preview_item", scope: !3, file: !3, line: 4006, type: !6720, scopeLine: 4007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !1970, !1451, !1547, !1254, !1254}
!6722 = !DILocalVariable(name: "fstyle", arg: 1, scope: !6719, file: !3, line: 4006, type: !1970)
!6723 = !DILocation(line: 4006, column: 40, scope: !6719)
!6724 = !DILocalVariable(name: "rect", arg: 2, scope: !6719, file: !3, line: 4006, type: !1451)
!6725 = !DILocation(line: 4006, column: 54, scope: !6719)
!6726 = !DILocalVariable(name: "name", arg: 3, scope: !6719, file: !3, line: 4006, type: !1547)
!6727 = !DILocation(line: 4006, column: 72, scope: !6719)
!6728 = !DILocalVariable(name: "iconid", arg: 4, scope: !6719, file: !3, line: 4006, type: !1254)
!6729 = !DILocation(line: 4006, column: 82, scope: !6719)
!6730 = !DILocalVariable(name: "state", arg: 5, scope: !6719, file: !3, line: 4006, type: !1254)
!6731 = !DILocation(line: 4006, column: 94, scope: !6719)
!6732 = !DILocalVariable(name: "trect", scope: !6719, file: !3, line: 4008, type: !1452)
!6733 = !DILocation(line: 4008, column: 7, scope: !6719)
!6734 = !DILocation(line: 4008, column: 16, scope: !6719)
!6735 = !DILocation(line: 4008, column: 15, scope: !6719)
!6736 = !DILocalVariable(name: "bg_rect", scope: !6719, file: !3, line: 4008, type: !1452)
!6737 = !DILocation(line: 4008, column: 22, scope: !6719)
!6738 = !DILocalVariable(name: "font_dims", scope: !6719, file: !3, line: 4009, type: !1720)
!6739 = !DILocation(line: 4009, column: 8, scope: !6719)
!6740 = !DILocalVariable(name: "wt", scope: !6719, file: !3, line: 4010, type: !1431)
!6741 = !DILocation(line: 4010, column: 16, scope: !6719)
!6742 = !DILocation(line: 4010, column: 21, scope: !6719)
!6743 = !DILocation(line: 4012, column: 2, scope: !6719)
!6744 = !DILocation(line: 4012, column: 6, scope: !6719)
!6745 = !DILocation(line: 4012, column: 12, scope: !6719)
!6746 = !DILocation(line: 4012, column: 16, scope: !6719)
!6747 = !DILocation(line: 4013, column: 2, scope: !6719)
!6748 = !DILocation(line: 4013, column: 6, scope: !6719)
!6749 = !DILocation(line: 4013, column: 12, scope: !6719)
!6750 = !DILocation(line: 4013, column: 16, scope: !6719)
!6751 = !DILocation(line: 4013, column: 22, scope: !6719)
!6752 = !DILocation(line: 4015, column: 2, scope: !6719)
!6753 = !DILocation(line: 4016, column: 22, scope: !6719)
!6754 = !DILocation(line: 4016, column: 36, scope: !6719)
!6755 = !DILocation(line: 4016, column: 2, scope: !6719)
!6756 = !DILocation(line: 4018, column: 23, scope: !6719)
!6757 = !DILocation(line: 4018, column: 31, scope: !6719)
!6758 = !DILocation(line: 4018, column: 42, scope: !6719)
!6759 = !DILocation(line: 4018, column: 73, scope: !6719)
!6760 = !DILocation(line: 4018, column: 88, scope: !6719)
!6761 = !DILocation(line: 4018, column: 2, scope: !6719)
!6762 = !DILocation(line: 4021, column: 8, scope: !6719)
!6763 = !DILocation(line: 4021, column: 13, scope: !6719)
!6764 = !DILocation(line: 4022, column: 21, scope: !6719)
!6765 = !DILocation(line: 4022, column: 15, scope: !6719)
!6766 = !DILocation(line: 4022, column: 28, scope: !6719)
!6767 = !DILocation(line: 4022, column: 26, scope: !6719)
!6768 = !DILocation(line: 4022, column: 41, scope: !6719)
!6769 = !DILocation(line: 4022, column: 8, scope: !6719)
!6770 = !DILocation(line: 4022, column: 13, scope: !6719)
!6771 = !DILocation(line: 4023, column: 8, scope: !6719)
!6772 = !DILocation(line: 4023, column: 13, scope: !6719)
!6773 = !DILocation(line: 4024, column: 21, scope: !6719)
!6774 = !DILocation(line: 4024, column: 15, scope: !6719)
!6775 = !DILocation(line: 4024, column: 28, scope: !6719)
!6776 = !DILocation(line: 4024, column: 26, scope: !6719)
!6777 = !DILocation(line: 4024, column: 8, scope: !6719)
!6778 = !DILocation(line: 4024, column: 13, scope: !6719)
!6779 = !DILocation(line: 4025, column: 12, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 4025, column: 6)
!6781 = !DILocation(line: 4025, column: 19, scope: !6780)
!6782 = !DILocation(line: 4025, column: 25, scope: !6780)
!6783 = !DILocation(line: 4025, column: 30, scope: !6780)
!6784 = !DILocation(line: 4025, column: 17, scope: !6780)
!6785 = !DILocation(line: 4025, column: 6, scope: !6719)
!6786 = !DILocation(line: 4026, column: 16, scope: !6780)
!6787 = !DILocation(line: 4026, column: 22, scope: !6780)
!6788 = !DILocation(line: 4026, column: 27, scope: !6780)
!6789 = !DILocation(line: 4026, column: 9, scope: !6780)
!6790 = !DILocation(line: 4026, column: 14, scope: !6780)
!6791 = !DILocation(line: 4026, column: 3, scope: !6780)
!6792 = !DILocation(line: 4028, column: 12, scope: !6719)
!6793 = !DILocation(line: 4029, column: 17, scope: !6719)
!6794 = !DILocation(line: 4029, column: 23, scope: !6719)
!6795 = !DILocation(line: 4029, column: 28, scope: !6719)
!6796 = !DILocation(line: 4029, column: 10, scope: !6719)
!6797 = !DILocation(line: 4029, column: 15, scope: !6719)
!6798 = !DILocation(line: 4030, column: 17, scope: !6719)
!6799 = !DILocation(line: 4030, column: 23, scope: !6719)
!6800 = !DILocation(line: 4030, column: 28, scope: !6719)
!6801 = !DILocation(line: 4030, column: 10, scope: !6719)
!6802 = !DILocation(line: 4030, column: 15, scope: !6719)
!6803 = !DILocation(line: 4031, column: 17, scope: !6719)
!6804 = !DILocation(line: 4031, column: 23, scope: !6719)
!6805 = !DILocation(line: 4031, column: 28, scope: !6719)
!6806 = !DILocation(line: 4031, column: 10, scope: !6719)
!6807 = !DILocation(line: 4031, column: 15, scope: !6719)
!6808 = !DILocation(line: 4032, column: 10, scope: !6719)
!6809 = !DILocation(line: 4032, column: 15, scope: !6719)
!6810 = !DILocation(line: 4034, column: 14, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 4034, column: 6)
!6812 = !DILocation(line: 4034, column: 21, scope: !6811)
!6813 = !DILocation(line: 4034, column: 27, scope: !6811)
!6814 = !DILocation(line: 4034, column: 32, scope: !6811)
!6815 = !DILocation(line: 4034, column: 19, scope: !6811)
!6816 = !DILocation(line: 4034, column: 6, scope: !6719)
!6817 = !DILocation(line: 4035, column: 18, scope: !6811)
!6818 = !DILocation(line: 4035, column: 24, scope: !6811)
!6819 = !DILocation(line: 4035, column: 29, scope: !6811)
!6820 = !DILocation(line: 4035, column: 11, scope: !6811)
!6821 = !DILocation(line: 4035, column: 16, scope: !6811)
!6822 = !DILocation(line: 4035, column: 3, scope: !6811)
!6823 = !DILocation(line: 4037, column: 31, scope: !6719)
!6824 = !DILocation(line: 4037, column: 35, scope: !6719)
!6825 = !DILocation(line: 4037, column: 47, scope: !6719)
!6826 = !DILocation(line: 4037, column: 2, scope: !6719)
!6827 = !DILocation(line: 4038, column: 18, scope: !6719)
!6828 = !DILocation(line: 4038, column: 32, scope: !6719)
!6829 = !DILocation(line: 4038, column: 46, scope: !6719)
!6830 = !DILocation(line: 4038, column: 60, scope: !6719)
!6831 = !DILocation(line: 4038, column: 2, scope: !6719)
!6832 = !DILocation(line: 4039, column: 2, scope: !6719)
!6833 = !DILocalVariable(name: "drawstr", scope: !6834, file: !3, line: 4042, type: !1493)
!6834 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 4041, column: 2)
!6835 = !DILocation(line: 4042, column: 8, scope: !6834)
!6836 = !DILocalVariable(name: "okwidth", scope: !6834, file: !3, line: 4043, type: !1410)
!6837 = !DILocation(line: 4043, column: 15, scope: !6834)
!6838 = !DILocation(line: 4043, column: 32, scope: !6834)
!6839 = !DILocation(line: 4043, column: 25, scope: !6834)
!6840 = !DILocalVariable(name: "max_len", scope: !6834, file: !3, line: 4044, type: !6389)
!6841 = !DILocation(line: 4044, column: 16, scope: !6834)
!6842 = !DILocalVariable(name: "minwidth", scope: !6834, file: !3, line: 4045, type: !1410)
!6843 = !DILocation(line: 4045, column: 15, scope: !6834)
!6844 = !DILocation(line: 4045, column: 34, scope: !6834)
!6845 = !DILocation(line: 4047, column: 15, scope: !6834)
!6846 = !DILocation(line: 4047, column: 24, scope: !6834)
!6847 = !DILocation(line: 4047, column: 3, scope: !6834)
!6848 = !DILocation(line: 4048, column: 26, scope: !6834)
!6849 = !DILocation(line: 4048, column: 34, scope: !6834)
!6850 = !DILocation(line: 4048, column: 43, scope: !6834)
!6851 = !DILocation(line: 4048, column: 52, scope: !6834)
!6852 = !DILocation(line: 4048, column: 3, scope: !6834)
!6853 = !DILocation(line: 4050, column: 32, scope: !6834)
!6854 = !DILocation(line: 4050, column: 36, scope: !6834)
!6855 = !DILocation(line: 4050, column: 41, scope: !6834)
!6856 = !DILocation(line: 4050, column: 3, scope: !6834)
!6857 = !DILocation(line: 4051, column: 19, scope: !6834)
!6858 = !DILocation(line: 4051, column: 35, scope: !6834)
!6859 = !DILocation(line: 4051, column: 3, scope: !6834)
!6860 = !DILocation(line: 4053, column: 1, scope: !6719)
!6861 = distinct !DISubprogram(name: "widget_draw_preview", scope: !3, file: !3, line: 810, type: !6862, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{null, !1582, !1253, !2279}
!6864 = !DILocalVariable(name: "icon", arg: 1, scope: !6861, file: !3, line: 810, type: !1582)
!6865 = !DILocation(line: 810, column: 43, scope: !6861)
!6866 = !DILocalVariable(name: "UNUSED_alpha", arg: 2, scope: !6861, file: !3, line: 810, type: !1253)
!6867 = !DILocation(line: 810, column: 55, scope: !6861)
!6868 = !DILocalVariable(name: "rect", arg: 3, scope: !6861, file: !3, line: 810, type: !2279)
!6869 = !DILocation(line: 810, column: 82, scope: !6861)
!6870 = !DILocalVariable(name: "w", scope: !6861, file: !3, line: 812, type: !1254)
!6871 = !DILocation(line: 812, column: 6, scope: !6861)
!6872 = !DILocalVariable(name: "h", scope: !6861, file: !3, line: 812, type: !1254)
!6873 = !DILocation(line: 812, column: 9, scope: !6861)
!6874 = !DILocalVariable(name: "size", scope: !6861, file: !3, line: 812, type: !1254)
!6875 = !DILocation(line: 812, column: 12, scope: !6861)
!6876 = !DILocation(line: 814, column: 6, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 814, column: 6)
!6878 = !DILocation(line: 814, column: 11, scope: !6877)
!6879 = !DILocation(line: 814, column: 6, scope: !6861)
!6880 = !DILocation(line: 815, column: 3, scope: !6877)
!6881 = !DILocation(line: 817, column: 22, scope: !6861)
!6882 = !DILocation(line: 817, column: 6, scope: !6861)
!6883 = !DILocation(line: 817, column: 4, scope: !6861)
!6884 = !DILocation(line: 818, column: 22, scope: !6861)
!6885 = !DILocation(line: 818, column: 6, scope: !6861)
!6886 = !DILocation(line: 818, column: 4, scope: !6861)
!6887 = !DILocation(line: 819, column: 9, scope: !6861)
!6888 = !DILocation(line: 819, column: 7, scope: !6861)
!6889 = !DILocation(line: 820, column: 7, scope: !6861)
!6890 = !DILocation(line: 822, column: 6, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 822, column: 6)
!6892 = !DILocation(line: 822, column: 11, scope: !6891)
!6893 = !DILocation(line: 822, column: 6, scope: !6861)
!6894 = !DILocalVariable(name: "x", scope: !6895, file: !3, line: 823, type: !1254)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 822, column: 16)
!6896 = !DILocation(line: 823, column: 7, scope: !6895)
!6897 = !DILocation(line: 823, column: 11, scope: !6895)
!6898 = !DILocation(line: 823, column: 17, scope: !6895)
!6899 = !DILocation(line: 823, column: 24, scope: !6895)
!6900 = !DILocation(line: 823, column: 26, scope: !6895)
!6901 = !DILocation(line: 823, column: 22, scope: !6895)
!6902 = !DILocation(line: 823, column: 32, scope: !6895)
!6903 = !DILocation(line: 823, column: 37, scope: !6895)
!6904 = !DILocation(line: 823, column: 30, scope: !6895)
!6905 = !DILocalVariable(name: "y", scope: !6895, file: !3, line: 824, type: !1254)
!6906 = !DILocation(line: 824, column: 7, scope: !6895)
!6907 = !DILocation(line: 824, column: 11, scope: !6895)
!6908 = !DILocation(line: 824, column: 17, scope: !6895)
!6909 = !DILocation(line: 824, column: 24, scope: !6895)
!6910 = !DILocation(line: 824, column: 26, scope: !6895)
!6911 = !DILocation(line: 824, column: 22, scope: !6895)
!6912 = !DILocation(line: 824, column: 32, scope: !6895)
!6913 = !DILocation(line: 824, column: 37, scope: !6895)
!6914 = !DILocation(line: 824, column: 30, scope: !6895)
!6915 = !DILocation(line: 826, column: 36, scope: !6895)
!6916 = !DILocation(line: 826, column: 39, scope: !6895)
!6917 = !DILocation(line: 826, column: 42, scope: !6895)
!6918 = !DILocation(line: 826, column: 54, scope: !6895)
!6919 = !DILocation(line: 826, column: 3, scope: !6895)
!6920 = !DILocation(line: 827, column: 2, scope: !6895)
!6921 = !DILocation(line: 828, column: 1, scope: !6861)
!6922 = distinct !DISubprogram(name: "round_box__edges", scope: !3, file: !3, line: 324, type: !6923, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{null, !3359, !1254, !2279, !1253, !1253}
!6925 = !DILocalVariable(name: "wt", arg: 1, scope: !6922, file: !3, line: 324, type: !3359)
!6926 = !DILocation(line: 324, column: 44, scope: !6922)
!6927 = !DILocalVariable(name: "roundboxalign", arg: 2, scope: !6922, file: !3, line: 324, type: !1254)
!6928 = !DILocation(line: 324, column: 52, scope: !6922)
!6929 = !DILocalVariable(name: "rect", arg: 3, scope: !6922, file: !3, line: 324, type: !2279)
!6930 = !DILocation(line: 324, column: 79, scope: !6922)
!6931 = !DILocalVariable(name: "rad", arg: 4, scope: !6922, file: !3, line: 324, type: !1253)
!6932 = !DILocation(line: 324, column: 91, scope: !6922)
!6933 = !DILocalVariable(name: "radi", arg: 5, scope: !6922, file: !3, line: 324, type: !1253)
!6934 = !DILocation(line: 324, column: 102, scope: !6922)
!6935 = !DILocalVariable(name: "vec", scope: !6922, file: !3, line: 326, type: !6936)
!6936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 576, elements: !1411)
!6937 = !DILocation(line: 326, column: 8, scope: !6922)
!6938 = !DILocalVariable(name: "veci", scope: !6922, file: !3, line: 326, type: !6936)
!6939 = !DILocation(line: 326, column: 37, scope: !6922)
!6940 = !DILocalVariable(name: "minx", scope: !6922, file: !3, line: 327, type: !1253)
!6941 = !DILocation(line: 327, column: 8, scope: !6922)
!6942 = !DILocation(line: 327, column: 15, scope: !6922)
!6943 = !DILocation(line: 327, column: 21, scope: !6922)
!6944 = !DILocalVariable(name: "miny", scope: !6922, file: !3, line: 327, type: !1253)
!6945 = !DILocation(line: 327, column: 27, scope: !6922)
!6946 = !DILocation(line: 327, column: 34, scope: !6922)
!6947 = !DILocation(line: 327, column: 40, scope: !6922)
!6948 = !DILocalVariable(name: "maxx", scope: !6922, file: !3, line: 327, type: !1253)
!6949 = !DILocation(line: 327, column: 46, scope: !6922)
!6950 = !DILocation(line: 327, column: 53, scope: !6922)
!6951 = !DILocation(line: 327, column: 59, scope: !6922)
!6952 = !DILocalVariable(name: "maxy", scope: !6922, file: !3, line: 327, type: !1253)
!6953 = !DILocation(line: 327, column: 65, scope: !6922)
!6954 = !DILocation(line: 327, column: 72, scope: !6922)
!6955 = !DILocation(line: 327, column: 78, scope: !6922)
!6956 = !DILocalVariable(name: "minxi", scope: !6922, file: !3, line: 328, type: !1253)
!6957 = !DILocation(line: 328, column: 8, scope: !6922)
!6958 = !DILocation(line: 328, column: 16, scope: !6922)
!6959 = !DILocation(line: 328, column: 25, scope: !6922)
!6960 = !DILocation(line: 328, column: 21, scope: !6922)
!6961 = !DILocalVariable(name: "maxxi", scope: !6922, file: !3, line: 329, type: !1253)
!6962 = !DILocation(line: 329, column: 8, scope: !6922)
!6963 = !DILocation(line: 329, column: 16, scope: !6922)
!6964 = !DILocation(line: 329, column: 25, scope: !6922)
!6965 = !DILocation(line: 329, column: 21, scope: !6922)
!6966 = !DILocalVariable(name: "minyi", scope: !6922, file: !3, line: 330, type: !1253)
!6967 = !DILocation(line: 330, column: 8, scope: !6922)
!6968 = !DILocation(line: 330, column: 16, scope: !6922)
!6969 = !DILocation(line: 330, column: 25, scope: !6922)
!6970 = !DILocation(line: 330, column: 21, scope: !6922)
!6971 = !DILocalVariable(name: "maxyi", scope: !6922, file: !3, line: 331, type: !1253)
!6972 = !DILocation(line: 331, column: 8, scope: !6922)
!6973 = !DILocation(line: 331, column: 16, scope: !6922)
!6974 = !DILocation(line: 331, column: 25, scope: !6922)
!6975 = !DILocation(line: 331, column: 21, scope: !6922)
!6976 = !DILocalVariable(name: "facxi", scope: !6922, file: !3, line: 332, type: !1253)
!6977 = !DILocation(line: 332, column: 8, scope: !6922)
!6978 = !DILocation(line: 332, column: 17, scope: !6922)
!6979 = !DILocation(line: 332, column: 26, scope: !6922)
!6980 = !DILocation(line: 332, column: 23, scope: !6922)
!6981 = !DILocation(line: 332, column: 16, scope: !6922)
!6982 = !DILocation(line: 332, column: 43, scope: !6922)
!6983 = !DILocation(line: 332, column: 51, scope: !6922)
!6984 = !DILocation(line: 332, column: 49, scope: !6922)
!6985 = !DILocation(line: 332, column: 40, scope: !6922)
!6986 = !DILocalVariable(name: "facyi", scope: !6922, file: !3, line: 333, type: !1253)
!6987 = !DILocation(line: 333, column: 8, scope: !6922)
!6988 = !DILocation(line: 333, column: 17, scope: !6922)
!6989 = !DILocation(line: 333, column: 26, scope: !6922)
!6990 = !DILocation(line: 333, column: 23, scope: !6922)
!6991 = !DILocation(line: 333, column: 16, scope: !6922)
!6992 = !DILocation(line: 333, column: 43, scope: !6922)
!6993 = !DILocation(line: 333, column: 51, scope: !6922)
!6994 = !DILocation(line: 333, column: 49, scope: !6922)
!6995 = !DILocation(line: 333, column: 40, scope: !6922)
!6996 = !DILocalVariable(name: "a", scope: !6922, file: !3, line: 334, type: !1254)
!6997 = !DILocation(line: 334, column: 6, scope: !6922)
!6998 = !DILocalVariable(name: "tot", scope: !6922, file: !3, line: 334, type: !1254)
!6999 = !DILocation(line: 334, column: 9, scope: !6922)
!7000 = !DILocalVariable(name: "minsize", scope: !6922, file: !3, line: 334, type: !1254)
!7001 = !DILocation(line: 334, column: 18, scope: !6922)
!7002 = !DILocalVariable(name: "hnum", scope: !6922, file: !3, line: 335, type: !2500)
!7003 = !DILocation(line: 335, column: 12, scope: !6922)
!7004 = !DILocation(line: 335, column: 21, scope: !6922)
!7005 = !DILocation(line: 335, column: 35, scope: !6922)
!7006 = !DILocation(line: 335, column: 75, scope: !6922)
!7007 = !DILocation(line: 335, column: 115, scope: !6922)
!7008 = !DILocation(line: 336, column: 21, scope: !6922)
!7009 = !DILocation(line: 336, column: 35, scope: !6922)
!7010 = !DILocation(line: 336, column: 81, scope: !6922)
!7011 = !DILocation(line: 335, column: 19, scope: !6922)
!7012 = !DILocalVariable(name: "vnum", scope: !6922, file: !3, line: 337, type: !2500)
!7013 = !DILocation(line: 337, column: 12, scope: !6922)
!7014 = !DILocation(line: 337, column: 21, scope: !6922)
!7015 = !DILocation(line: 337, column: 35, scope: !6922)
!7016 = !DILocation(line: 337, column: 77, scope: !6922)
!7017 = !DILocation(line: 337, column: 119, scope: !6922)
!7018 = !DILocation(line: 338, column: 21, scope: !6922)
!7019 = !DILocation(line: 338, column: 35, scope: !6922)
!7020 = !DILocation(line: 338, column: 79, scope: !6922)
!7021 = !DILocation(line: 337, column: 19, scope: !6922)
!7022 = !DILocation(line: 340, column: 35, scope: !6922)
!7023 = !DILocation(line: 340, column: 19, scope: !6922)
!7024 = !DILocation(line: 340, column: 43, scope: !6922)
!7025 = !DILocation(line: 340, column: 41, scope: !6922)
!7026 = !DILocation(line: 341, column: 35, scope: !6922)
!7027 = !DILocation(line: 341, column: 19, scope: !6922)
!7028 = !DILocation(line: 341, column: 43, scope: !6922)
!7029 = !DILocation(line: 341, column: 41, scope: !6922)
!7030 = !DILocation(line: 340, column: 12, scope: !6922)
!7031 = !DILocation(line: 340, column: 10, scope: !6922)
!7032 = !DILocation(line: 343, column: 13, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 343, column: 6)
!7034 = !DILocation(line: 343, column: 11, scope: !7033)
!7035 = !DILocation(line: 343, column: 19, scope: !7033)
!7036 = !DILocation(line: 343, column: 17, scope: !7033)
!7037 = !DILocation(line: 343, column: 6, scope: !6922)
!7038 = !DILocation(line: 344, column: 16, scope: !7033)
!7039 = !DILocation(line: 344, column: 14, scope: !7033)
!7040 = !DILocation(line: 344, column: 7, scope: !7033)
!7041 = !DILocation(line: 344, column: 3, scope: !7033)
!7042 = !DILocation(line: 346, column: 14, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 346, column: 6)
!7044 = !DILocation(line: 346, column: 19, scope: !7043)
!7045 = !DILocation(line: 346, column: 11, scope: !7043)
!7046 = !DILocation(line: 346, column: 29, scope: !7043)
!7047 = !DILocation(line: 346, column: 27, scope: !7043)
!7048 = !DILocation(line: 346, column: 6, scope: !6922)
!7049 = !DILocation(line: 347, column: 17, scope: !7043)
!7050 = !DILocation(line: 347, column: 15, scope: !7043)
!7051 = !DILocation(line: 347, column: 29, scope: !7043)
!7052 = !DILocation(line: 347, column: 25, scope: !7043)
!7053 = !DILocation(line: 347, column: 8, scope: !7043)
!7054 = !DILocation(line: 347, column: 3, scope: !7043)
!7055 = !DILocation(line: 350, column: 9, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 350, column: 2)
!7057 = !DILocation(line: 350, column: 7, scope: !7056)
!7058 = !DILocation(line: 350, column: 14, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 350, column: 2)
!7060 = !DILocation(line: 350, column: 16, scope: !7059)
!7061 = !DILocation(line: 350, column: 2, scope: !7056)
!7062 = !DILocation(line: 351, column: 16, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 350, column: 44)
!7064 = !DILocation(line: 351, column: 33, scope: !7063)
!7065 = !DILocation(line: 351, column: 23, scope: !7063)
!7066 = !DILocation(line: 351, column: 21, scope: !7063)
!7067 = !DILocation(line: 351, column: 8, scope: !7063)
!7068 = !DILocation(line: 351, column: 3, scope: !7063)
!7069 = !DILocation(line: 351, column: 14, scope: !7063)
!7070 = !DILocation(line: 352, column: 16, scope: !7063)
!7071 = !DILocation(line: 352, column: 33, scope: !7063)
!7072 = !DILocation(line: 352, column: 23, scope: !7063)
!7073 = !DILocation(line: 352, column: 21, scope: !7063)
!7074 = !DILocation(line: 352, column: 8, scope: !7063)
!7075 = !DILocation(line: 352, column: 3, scope: !7063)
!7076 = !DILocation(line: 352, column: 14, scope: !7063)
!7077 = !DILocation(line: 353, column: 15, scope: !7063)
!7078 = !DILocation(line: 353, column: 31, scope: !7063)
!7079 = !DILocation(line: 353, column: 21, scope: !7063)
!7080 = !DILocation(line: 353, column: 19, scope: !7063)
!7081 = !DILocation(line: 353, column: 7, scope: !7063)
!7082 = !DILocation(line: 353, column: 3, scope: !7063)
!7083 = !DILocation(line: 353, column: 13, scope: !7063)
!7084 = !DILocation(line: 354, column: 15, scope: !7063)
!7085 = !DILocation(line: 354, column: 31, scope: !7063)
!7086 = !DILocation(line: 354, column: 21, scope: !7063)
!7087 = !DILocation(line: 354, column: 19, scope: !7063)
!7088 = !DILocation(line: 354, column: 7, scope: !7063)
!7089 = !DILocation(line: 354, column: 3, scope: !7063)
!7090 = !DILocation(line: 354, column: 13, scope: !7063)
!7091 = !DILocation(line: 355, column: 2, scope: !7063)
!7092 = !DILocation(line: 350, column: 40, scope: !7059)
!7093 = !DILocation(line: 350, column: 2, scope: !7059)
!7094 = distinct !{!7094, !7061, !7095}
!7095 = !DILocation(line: 355, column: 2, scope: !7056)
!7096 = !DILocation(line: 358, column: 6, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 358, column: 6)
!7098 = !DILocation(line: 358, column: 20, scope: !7097)
!7099 = !DILocation(line: 358, column: 6, scope: !6922)
!7100 = !DILocation(line: 360, column: 10, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 360, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 358, column: 42)
!7103 = !DILocation(line: 360, column: 8, scope: !7101)
!7104 = !DILocation(line: 360, column: 15, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 360, column: 3)
!7106 = !DILocation(line: 360, column: 17, scope: !7105)
!7107 = !DILocation(line: 360, column: 3, scope: !7101)
!7108 = !DILocation(line: 361, column: 26, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 360, column: 52)
!7110 = !DILocation(line: 361, column: 39, scope: !7109)
!7111 = !DILocation(line: 361, column: 34, scope: !7109)
!7112 = !DILocation(line: 361, column: 32, scope: !7109)
!7113 = !DILocation(line: 361, column: 4, scope: !7109)
!7114 = !DILocation(line: 361, column: 8, scope: !7109)
!7115 = !DILocation(line: 361, column: 16, scope: !7109)
!7116 = !DILocation(line: 361, column: 24, scope: !7109)
!7117 = !DILocation(line: 362, column: 26, scope: !7109)
!7118 = !DILocation(line: 362, column: 34, scope: !7109)
!7119 = !DILocation(line: 362, column: 32, scope: !7109)
!7120 = !DILocation(line: 362, column: 46, scope: !7109)
!7121 = !DILocation(line: 362, column: 41, scope: !7109)
!7122 = !DILocation(line: 362, column: 39, scope: !7109)
!7123 = !DILocation(line: 362, column: 4, scope: !7109)
!7124 = !DILocation(line: 362, column: 8, scope: !7109)
!7125 = !DILocation(line: 362, column: 16, scope: !7109)
!7126 = !DILocation(line: 362, column: 24, scope: !7109)
!7127 = !DILocation(line: 364, column: 26, scope: !7109)
!7128 = !DILocation(line: 364, column: 37, scope: !7109)
!7129 = !DILocation(line: 364, column: 33, scope: !7109)
!7130 = !DILocation(line: 364, column: 31, scope: !7109)
!7131 = !DILocation(line: 364, column: 4, scope: !7109)
!7132 = !DILocation(line: 364, column: 8, scope: !7109)
!7133 = !DILocation(line: 364, column: 16, scope: !7109)
!7134 = !DILocation(line: 364, column: 24, scope: !7109)
!7135 = !DILocation(line: 365, column: 26, scope: !7109)
!7136 = !DILocation(line: 365, column: 33, scope: !7109)
!7137 = !DILocation(line: 365, column: 31, scope: !7109)
!7138 = !DILocation(line: 365, column: 43, scope: !7109)
!7139 = !DILocation(line: 365, column: 39, scope: !7109)
!7140 = !DILocation(line: 365, column: 37, scope: !7109)
!7141 = !DILocation(line: 365, column: 4, scope: !7109)
!7142 = !DILocation(line: 365, column: 8, scope: !7109)
!7143 = !DILocation(line: 365, column: 16, scope: !7109)
!7144 = !DILocation(line: 365, column: 24, scope: !7109)
!7145 = !DILocation(line: 367, column: 27, scope: !7109)
!7146 = !DILocation(line: 367, column: 36, scope: !7109)
!7147 = !DILocation(line: 367, column: 40, scope: !7109)
!7148 = !DILocation(line: 367, column: 48, scope: !7109)
!7149 = !DILocation(line: 367, column: 58, scope: !7109)
!7150 = !DILocation(line: 367, column: 56, scope: !7109)
!7151 = !DILocation(line: 367, column: 33, scope: !7109)
!7152 = !DILocation(line: 367, column: 4, scope: !7109)
!7153 = !DILocation(line: 367, column: 8, scope: !7109)
!7154 = !DILocation(line: 367, column: 17, scope: !7109)
!7155 = !DILocation(line: 367, column: 25, scope: !7109)
!7156 = !DILocation(line: 368, column: 27, scope: !7109)
!7157 = !DILocation(line: 368, column: 36, scope: !7109)
!7158 = !DILocation(line: 368, column: 40, scope: !7109)
!7159 = !DILocation(line: 368, column: 48, scope: !7109)
!7160 = !DILocation(line: 368, column: 58, scope: !7109)
!7161 = !DILocation(line: 368, column: 56, scope: !7109)
!7162 = !DILocation(line: 368, column: 33, scope: !7109)
!7163 = !DILocation(line: 368, column: 4, scope: !7109)
!7164 = !DILocation(line: 368, column: 8, scope: !7109)
!7165 = !DILocation(line: 368, column: 17, scope: !7109)
!7166 = !DILocation(line: 368, column: 25, scope: !7109)
!7167 = !DILocation(line: 369, column: 3, scope: !7109)
!7168 = !DILocation(line: 360, column: 41, scope: !7105)
!7169 = !DILocation(line: 360, column: 48, scope: !7105)
!7170 = !DILocation(line: 360, column: 3, scope: !7105)
!7171 = distinct !{!7171, !7107, !7172}
!7172 = !DILocation(line: 369, column: 3, scope: !7101)
!7173 = !DILocation(line: 370, column: 2, scope: !7102)
!7174 = !DILocation(line: 372, column: 25, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 371, column: 7)
!7176 = !DILocation(line: 372, column: 3, scope: !7175)
!7177 = !DILocation(line: 372, column: 7, scope: !7175)
!7178 = !DILocation(line: 372, column: 15, scope: !7175)
!7179 = !DILocation(line: 372, column: 23, scope: !7175)
!7180 = !DILocation(line: 373, column: 25, scope: !7175)
!7181 = !DILocation(line: 373, column: 3, scope: !7175)
!7182 = !DILocation(line: 373, column: 7, scope: !7175)
!7183 = !DILocation(line: 373, column: 15, scope: !7175)
!7184 = !DILocation(line: 373, column: 23, scope: !7175)
!7185 = !DILocation(line: 375, column: 25, scope: !7175)
!7186 = !DILocation(line: 375, column: 3, scope: !7175)
!7187 = !DILocation(line: 375, column: 7, scope: !7175)
!7188 = !DILocation(line: 375, column: 15, scope: !7175)
!7189 = !DILocation(line: 375, column: 23, scope: !7175)
!7190 = !DILocation(line: 376, column: 25, scope: !7175)
!7191 = !DILocation(line: 376, column: 3, scope: !7175)
!7192 = !DILocation(line: 376, column: 7, scope: !7175)
!7193 = !DILocation(line: 376, column: 15, scope: !7175)
!7194 = !DILocation(line: 376, column: 23, scope: !7175)
!7195 = !DILocation(line: 378, column: 3, scope: !7175)
!7196 = !DILocation(line: 378, column: 7, scope: !7175)
!7197 = !DILocation(line: 378, column: 16, scope: !7175)
!7198 = !DILocation(line: 378, column: 24, scope: !7175)
!7199 = !DILocation(line: 379, column: 3, scope: !7175)
!7200 = !DILocation(line: 379, column: 7, scope: !7175)
!7201 = !DILocation(line: 379, column: 16, scope: !7175)
!7202 = !DILocation(line: 379, column: 24, scope: !7175)
!7203 = !DILocation(line: 381, column: 6, scope: !7175)
!7204 = !DILocation(line: 385, column: 6, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 385, column: 6)
!7206 = !DILocation(line: 385, column: 20, scope: !7205)
!7207 = !DILocation(line: 385, column: 6, scope: !6922)
!7208 = !DILocation(line: 387, column: 10, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 387, column: 3)
!7210 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 385, column: 43)
!7211 = !DILocation(line: 387, column: 8, scope: !7209)
!7212 = !DILocation(line: 387, column: 15, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 387, column: 3)
!7214 = !DILocation(line: 387, column: 17, scope: !7213)
!7215 = !DILocation(line: 387, column: 3, scope: !7209)
!7216 = !DILocation(line: 388, column: 26, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 387, column: 52)
!7218 = !DILocation(line: 388, column: 34, scope: !7217)
!7219 = !DILocation(line: 388, column: 32, scope: !7217)
!7220 = !DILocation(line: 388, column: 46, scope: !7217)
!7221 = !DILocation(line: 388, column: 41, scope: !7217)
!7222 = !DILocation(line: 388, column: 39, scope: !7217)
!7223 = !DILocation(line: 388, column: 4, scope: !7217)
!7224 = !DILocation(line: 388, column: 8, scope: !7217)
!7225 = !DILocation(line: 388, column: 16, scope: !7217)
!7226 = !DILocation(line: 388, column: 24, scope: !7217)
!7227 = !DILocation(line: 389, column: 26, scope: !7217)
!7228 = !DILocation(line: 389, column: 39, scope: !7217)
!7229 = !DILocation(line: 389, column: 34, scope: !7217)
!7230 = !DILocation(line: 389, column: 32, scope: !7217)
!7231 = !DILocation(line: 389, column: 4, scope: !7217)
!7232 = !DILocation(line: 389, column: 8, scope: !7217)
!7233 = !DILocation(line: 389, column: 16, scope: !7217)
!7234 = !DILocation(line: 389, column: 24, scope: !7217)
!7235 = !DILocation(line: 391, column: 26, scope: !7217)
!7236 = !DILocation(line: 391, column: 33, scope: !7217)
!7237 = !DILocation(line: 391, column: 31, scope: !7217)
!7238 = !DILocation(line: 391, column: 43, scope: !7217)
!7239 = !DILocation(line: 391, column: 39, scope: !7217)
!7240 = !DILocation(line: 391, column: 37, scope: !7217)
!7241 = !DILocation(line: 391, column: 4, scope: !7217)
!7242 = !DILocation(line: 391, column: 8, scope: !7217)
!7243 = !DILocation(line: 391, column: 16, scope: !7217)
!7244 = !DILocation(line: 391, column: 24, scope: !7217)
!7245 = !DILocation(line: 392, column: 26, scope: !7217)
!7246 = !DILocation(line: 392, column: 37, scope: !7217)
!7247 = !DILocation(line: 392, column: 33, scope: !7217)
!7248 = !DILocation(line: 392, column: 31, scope: !7217)
!7249 = !DILocation(line: 392, column: 4, scope: !7217)
!7250 = !DILocation(line: 392, column: 8, scope: !7217)
!7251 = !DILocation(line: 392, column: 16, scope: !7217)
!7252 = !DILocation(line: 392, column: 24, scope: !7217)
!7253 = !DILocation(line: 394, column: 27, scope: !7217)
!7254 = !DILocation(line: 394, column: 36, scope: !7217)
!7255 = !DILocation(line: 394, column: 40, scope: !7217)
!7256 = !DILocation(line: 394, column: 48, scope: !7217)
!7257 = !DILocation(line: 394, column: 58, scope: !7217)
!7258 = !DILocation(line: 394, column: 56, scope: !7217)
!7259 = !DILocation(line: 394, column: 33, scope: !7217)
!7260 = !DILocation(line: 394, column: 4, scope: !7217)
!7261 = !DILocation(line: 394, column: 8, scope: !7217)
!7262 = !DILocation(line: 394, column: 17, scope: !7217)
!7263 = !DILocation(line: 394, column: 25, scope: !7217)
!7264 = !DILocation(line: 395, column: 27, scope: !7217)
!7265 = !DILocation(line: 395, column: 36, scope: !7217)
!7266 = !DILocation(line: 395, column: 40, scope: !7217)
!7267 = !DILocation(line: 395, column: 48, scope: !7217)
!7268 = !DILocation(line: 395, column: 58, scope: !7217)
!7269 = !DILocation(line: 395, column: 56, scope: !7217)
!7270 = !DILocation(line: 395, column: 33, scope: !7217)
!7271 = !DILocation(line: 395, column: 4, scope: !7217)
!7272 = !DILocation(line: 395, column: 8, scope: !7217)
!7273 = !DILocation(line: 395, column: 17, scope: !7217)
!7274 = !DILocation(line: 395, column: 25, scope: !7217)
!7275 = !DILocation(line: 396, column: 3, scope: !7217)
!7276 = !DILocation(line: 387, column: 41, scope: !7213)
!7277 = !DILocation(line: 387, column: 48, scope: !7213)
!7278 = !DILocation(line: 387, column: 3, scope: !7213)
!7279 = distinct !{!7279, !7215, !7280}
!7280 = !DILocation(line: 396, column: 3, scope: !7209)
!7281 = !DILocation(line: 397, column: 2, scope: !7210)
!7282 = !DILocation(line: 399, column: 25, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 398, column: 7)
!7284 = !DILocation(line: 399, column: 3, scope: !7283)
!7285 = !DILocation(line: 399, column: 7, scope: !7283)
!7286 = !DILocation(line: 399, column: 15, scope: !7283)
!7287 = !DILocation(line: 399, column: 23, scope: !7283)
!7288 = !DILocation(line: 400, column: 25, scope: !7283)
!7289 = !DILocation(line: 400, column: 3, scope: !7283)
!7290 = !DILocation(line: 400, column: 7, scope: !7283)
!7291 = !DILocation(line: 400, column: 15, scope: !7283)
!7292 = !DILocation(line: 400, column: 23, scope: !7283)
!7293 = !DILocation(line: 402, column: 25, scope: !7283)
!7294 = !DILocation(line: 402, column: 3, scope: !7283)
!7295 = !DILocation(line: 402, column: 7, scope: !7283)
!7296 = !DILocation(line: 402, column: 15, scope: !7283)
!7297 = !DILocation(line: 402, column: 23, scope: !7283)
!7298 = !DILocation(line: 403, column: 25, scope: !7283)
!7299 = !DILocation(line: 403, column: 3, scope: !7283)
!7300 = !DILocation(line: 403, column: 7, scope: !7283)
!7301 = !DILocation(line: 403, column: 15, scope: !7283)
!7302 = !DILocation(line: 403, column: 23, scope: !7283)
!7303 = !DILocation(line: 405, column: 3, scope: !7283)
!7304 = !DILocation(line: 405, column: 7, scope: !7283)
!7305 = !DILocation(line: 405, column: 16, scope: !7283)
!7306 = !DILocation(line: 405, column: 24, scope: !7283)
!7307 = !DILocation(line: 406, column: 3, scope: !7283)
!7308 = !DILocation(line: 406, column: 7, scope: !7283)
!7309 = !DILocation(line: 406, column: 16, scope: !7283)
!7310 = !DILocation(line: 406, column: 24, scope: !7283)
!7311 = !DILocation(line: 408, column: 6, scope: !7283)
!7312 = !DILocation(line: 411, column: 20, scope: !6922)
!7313 = !DILocation(line: 411, column: 2, scope: !6922)
!7314 = !DILocation(line: 411, column: 6, scope: !6922)
!7315 = !DILocation(line: 411, column: 18, scope: !6922)
!7316 = !DILocation(line: 414, column: 6, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 414, column: 6)
!7318 = !DILocation(line: 414, column: 20, scope: !7317)
!7319 = !DILocation(line: 414, column: 6, scope: !6922)
!7320 = !DILocation(line: 416, column: 10, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 416, column: 3)
!7322 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 414, column: 40)
!7323 = !DILocation(line: 416, column: 8, scope: !7321)
!7324 = !DILocation(line: 416, column: 15, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 416, column: 3)
!7326 = !DILocation(line: 416, column: 17, scope: !7325)
!7327 = !DILocation(line: 416, column: 3, scope: !7321)
!7328 = !DILocation(line: 417, column: 26, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 416, column: 52)
!7330 = !DILocation(line: 417, column: 39, scope: !7329)
!7331 = !DILocation(line: 417, column: 34, scope: !7329)
!7332 = !DILocation(line: 417, column: 32, scope: !7329)
!7333 = !DILocation(line: 417, column: 4, scope: !7329)
!7334 = !DILocation(line: 417, column: 8, scope: !7329)
!7335 = !DILocation(line: 417, column: 16, scope: !7329)
!7336 = !DILocation(line: 417, column: 24, scope: !7329)
!7337 = !DILocation(line: 418, column: 26, scope: !7329)
!7338 = !DILocation(line: 418, column: 34, scope: !7329)
!7339 = !DILocation(line: 418, column: 32, scope: !7329)
!7340 = !DILocation(line: 418, column: 46, scope: !7329)
!7341 = !DILocation(line: 418, column: 41, scope: !7329)
!7342 = !DILocation(line: 418, column: 39, scope: !7329)
!7343 = !DILocation(line: 418, column: 4, scope: !7329)
!7344 = !DILocation(line: 418, column: 8, scope: !7329)
!7345 = !DILocation(line: 418, column: 16, scope: !7329)
!7346 = !DILocation(line: 418, column: 24, scope: !7329)
!7347 = !DILocation(line: 420, column: 26, scope: !7329)
!7348 = !DILocation(line: 420, column: 37, scope: !7329)
!7349 = !DILocation(line: 420, column: 33, scope: !7329)
!7350 = !DILocation(line: 420, column: 31, scope: !7329)
!7351 = !DILocation(line: 420, column: 4, scope: !7329)
!7352 = !DILocation(line: 420, column: 8, scope: !7329)
!7353 = !DILocation(line: 420, column: 16, scope: !7329)
!7354 = !DILocation(line: 420, column: 24, scope: !7329)
!7355 = !DILocation(line: 421, column: 26, scope: !7329)
!7356 = !DILocation(line: 421, column: 33, scope: !7329)
!7357 = !DILocation(line: 421, column: 31, scope: !7329)
!7358 = !DILocation(line: 421, column: 43, scope: !7329)
!7359 = !DILocation(line: 421, column: 39, scope: !7329)
!7360 = !DILocation(line: 421, column: 37, scope: !7329)
!7361 = !DILocation(line: 421, column: 4, scope: !7329)
!7362 = !DILocation(line: 421, column: 8, scope: !7329)
!7363 = !DILocation(line: 421, column: 16, scope: !7329)
!7364 = !DILocation(line: 421, column: 24, scope: !7329)
!7365 = !DILocation(line: 423, column: 27, scope: !7329)
!7366 = !DILocation(line: 423, column: 36, scope: !7329)
!7367 = !DILocation(line: 423, column: 40, scope: !7329)
!7368 = !DILocation(line: 423, column: 48, scope: !7329)
!7369 = !DILocation(line: 423, column: 58, scope: !7329)
!7370 = !DILocation(line: 423, column: 56, scope: !7329)
!7371 = !DILocation(line: 423, column: 33, scope: !7329)
!7372 = !DILocation(line: 423, column: 4, scope: !7329)
!7373 = !DILocation(line: 423, column: 8, scope: !7329)
!7374 = !DILocation(line: 423, column: 17, scope: !7329)
!7375 = !DILocation(line: 423, column: 25, scope: !7329)
!7376 = !DILocation(line: 424, column: 27, scope: !7329)
!7377 = !DILocation(line: 424, column: 36, scope: !7329)
!7378 = !DILocation(line: 424, column: 40, scope: !7329)
!7379 = !DILocation(line: 424, column: 48, scope: !7329)
!7380 = !DILocation(line: 424, column: 58, scope: !7329)
!7381 = !DILocation(line: 424, column: 56, scope: !7329)
!7382 = !DILocation(line: 424, column: 33, scope: !7329)
!7383 = !DILocation(line: 424, column: 4, scope: !7329)
!7384 = !DILocation(line: 424, column: 8, scope: !7329)
!7385 = !DILocation(line: 424, column: 17, scope: !7329)
!7386 = !DILocation(line: 424, column: 25, scope: !7329)
!7387 = !DILocation(line: 425, column: 3, scope: !7329)
!7388 = !DILocation(line: 416, column: 41, scope: !7325)
!7389 = !DILocation(line: 416, column: 48, scope: !7325)
!7390 = !DILocation(line: 416, column: 3, scope: !7325)
!7391 = distinct !{!7391, !7327, !7392}
!7392 = !DILocation(line: 425, column: 3, scope: !7321)
!7393 = !DILocation(line: 426, column: 2, scope: !7322)
!7394 = !DILocation(line: 428, column: 25, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 427, column: 7)
!7396 = !DILocation(line: 428, column: 3, scope: !7395)
!7397 = !DILocation(line: 428, column: 7, scope: !7395)
!7398 = !DILocation(line: 428, column: 15, scope: !7395)
!7399 = !DILocation(line: 428, column: 23, scope: !7395)
!7400 = !DILocation(line: 429, column: 25, scope: !7395)
!7401 = !DILocation(line: 429, column: 3, scope: !7395)
!7402 = !DILocation(line: 429, column: 7, scope: !7395)
!7403 = !DILocation(line: 429, column: 15, scope: !7395)
!7404 = !DILocation(line: 429, column: 23, scope: !7395)
!7405 = !DILocation(line: 431, column: 25, scope: !7395)
!7406 = !DILocation(line: 431, column: 3, scope: !7395)
!7407 = !DILocation(line: 431, column: 7, scope: !7395)
!7408 = !DILocation(line: 431, column: 15, scope: !7395)
!7409 = !DILocation(line: 431, column: 23, scope: !7395)
!7410 = !DILocation(line: 432, column: 25, scope: !7395)
!7411 = !DILocation(line: 432, column: 3, scope: !7395)
!7412 = !DILocation(line: 432, column: 7, scope: !7395)
!7413 = !DILocation(line: 432, column: 15, scope: !7395)
!7414 = !DILocation(line: 432, column: 23, scope: !7395)
!7415 = !DILocation(line: 434, column: 3, scope: !7395)
!7416 = !DILocation(line: 434, column: 7, scope: !7395)
!7417 = !DILocation(line: 434, column: 16, scope: !7395)
!7418 = !DILocation(line: 434, column: 24, scope: !7395)
!7419 = !DILocation(line: 435, column: 3, scope: !7395)
!7420 = !DILocation(line: 435, column: 7, scope: !7395)
!7421 = !DILocation(line: 435, column: 16, scope: !7395)
!7422 = !DILocation(line: 435, column: 24, scope: !7395)
!7423 = !DILocation(line: 437, column: 6, scope: !7395)
!7424 = !DILocation(line: 441, column: 6, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 441, column: 6)
!7426 = !DILocation(line: 441, column: 20, scope: !7425)
!7427 = !DILocation(line: 441, column: 6, scope: !6922)
!7428 = !DILocation(line: 443, column: 10, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 443, column: 3)
!7430 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 441, column: 39)
!7431 = !DILocation(line: 443, column: 8, scope: !7429)
!7432 = !DILocation(line: 443, column: 15, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 443, column: 3)
!7434 = !DILocation(line: 443, column: 17, scope: !7433)
!7435 = !DILocation(line: 443, column: 3, scope: !7429)
!7436 = !DILocation(line: 444, column: 26, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 443, column: 52)
!7438 = !DILocation(line: 444, column: 34, scope: !7437)
!7439 = !DILocation(line: 444, column: 32, scope: !7437)
!7440 = !DILocation(line: 444, column: 46, scope: !7437)
!7441 = !DILocation(line: 444, column: 41, scope: !7437)
!7442 = !DILocation(line: 444, column: 39, scope: !7437)
!7443 = !DILocation(line: 444, column: 4, scope: !7437)
!7444 = !DILocation(line: 444, column: 8, scope: !7437)
!7445 = !DILocation(line: 444, column: 16, scope: !7437)
!7446 = !DILocation(line: 444, column: 24, scope: !7437)
!7447 = !DILocation(line: 445, column: 26, scope: !7437)
!7448 = !DILocation(line: 445, column: 39, scope: !7437)
!7449 = !DILocation(line: 445, column: 34, scope: !7437)
!7450 = !DILocation(line: 445, column: 32, scope: !7437)
!7451 = !DILocation(line: 445, column: 4, scope: !7437)
!7452 = !DILocation(line: 445, column: 8, scope: !7437)
!7453 = !DILocation(line: 445, column: 16, scope: !7437)
!7454 = !DILocation(line: 445, column: 24, scope: !7437)
!7455 = !DILocation(line: 447, column: 26, scope: !7437)
!7456 = !DILocation(line: 447, column: 33, scope: !7437)
!7457 = !DILocation(line: 447, column: 31, scope: !7437)
!7458 = !DILocation(line: 447, column: 43, scope: !7437)
!7459 = !DILocation(line: 447, column: 39, scope: !7437)
!7460 = !DILocation(line: 447, column: 37, scope: !7437)
!7461 = !DILocation(line: 447, column: 4, scope: !7437)
!7462 = !DILocation(line: 447, column: 8, scope: !7437)
!7463 = !DILocation(line: 447, column: 16, scope: !7437)
!7464 = !DILocation(line: 447, column: 24, scope: !7437)
!7465 = !DILocation(line: 448, column: 26, scope: !7437)
!7466 = !DILocation(line: 448, column: 37, scope: !7437)
!7467 = !DILocation(line: 448, column: 33, scope: !7437)
!7468 = !DILocation(line: 448, column: 31, scope: !7437)
!7469 = !DILocation(line: 448, column: 4, scope: !7437)
!7470 = !DILocation(line: 448, column: 8, scope: !7437)
!7471 = !DILocation(line: 448, column: 16, scope: !7437)
!7472 = !DILocation(line: 448, column: 24, scope: !7437)
!7473 = !DILocation(line: 450, column: 27, scope: !7437)
!7474 = !DILocation(line: 450, column: 36, scope: !7437)
!7475 = !DILocation(line: 450, column: 40, scope: !7437)
!7476 = !DILocation(line: 450, column: 48, scope: !7437)
!7477 = !DILocation(line: 450, column: 58, scope: !7437)
!7478 = !DILocation(line: 450, column: 56, scope: !7437)
!7479 = !DILocation(line: 450, column: 33, scope: !7437)
!7480 = !DILocation(line: 450, column: 4, scope: !7437)
!7481 = !DILocation(line: 450, column: 8, scope: !7437)
!7482 = !DILocation(line: 450, column: 17, scope: !7437)
!7483 = !DILocation(line: 450, column: 25, scope: !7437)
!7484 = !DILocation(line: 451, column: 27, scope: !7437)
!7485 = !DILocation(line: 451, column: 36, scope: !7437)
!7486 = !DILocation(line: 451, column: 40, scope: !7437)
!7487 = !DILocation(line: 451, column: 48, scope: !7437)
!7488 = !DILocation(line: 451, column: 58, scope: !7437)
!7489 = !DILocation(line: 451, column: 56, scope: !7437)
!7490 = !DILocation(line: 451, column: 33, scope: !7437)
!7491 = !DILocation(line: 451, column: 4, scope: !7437)
!7492 = !DILocation(line: 451, column: 8, scope: !7437)
!7493 = !DILocation(line: 451, column: 17, scope: !7437)
!7494 = !DILocation(line: 451, column: 25, scope: !7437)
!7495 = !DILocation(line: 452, column: 3, scope: !7437)
!7496 = !DILocation(line: 443, column: 41, scope: !7433)
!7497 = !DILocation(line: 443, column: 48, scope: !7433)
!7498 = !DILocation(line: 443, column: 3, scope: !7433)
!7499 = distinct !{!7499, !7435, !7500}
!7500 = !DILocation(line: 452, column: 3, scope: !7429)
!7501 = !DILocation(line: 454, column: 2, scope: !7430)
!7502 = !DILocation(line: 457, column: 25, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 455, column: 7)
!7504 = !DILocation(line: 457, column: 3, scope: !7503)
!7505 = !DILocation(line: 457, column: 7, scope: !7503)
!7506 = !DILocation(line: 457, column: 15, scope: !7503)
!7507 = !DILocation(line: 457, column: 23, scope: !7503)
!7508 = !DILocation(line: 458, column: 25, scope: !7503)
!7509 = !DILocation(line: 458, column: 3, scope: !7503)
!7510 = !DILocation(line: 458, column: 7, scope: !7503)
!7511 = !DILocation(line: 458, column: 15, scope: !7503)
!7512 = !DILocation(line: 458, column: 23, scope: !7503)
!7513 = !DILocation(line: 460, column: 25, scope: !7503)
!7514 = !DILocation(line: 460, column: 3, scope: !7503)
!7515 = !DILocation(line: 460, column: 7, scope: !7503)
!7516 = !DILocation(line: 460, column: 15, scope: !7503)
!7517 = !DILocation(line: 460, column: 23, scope: !7503)
!7518 = !DILocation(line: 461, column: 25, scope: !7503)
!7519 = !DILocation(line: 461, column: 3, scope: !7503)
!7520 = !DILocation(line: 461, column: 7, scope: !7503)
!7521 = !DILocation(line: 461, column: 15, scope: !7503)
!7522 = !DILocation(line: 461, column: 23, scope: !7503)
!7523 = !DILocation(line: 463, column: 3, scope: !7503)
!7524 = !DILocation(line: 463, column: 7, scope: !7503)
!7525 = !DILocation(line: 463, column: 16, scope: !7503)
!7526 = !DILocation(line: 463, column: 24, scope: !7503)
!7527 = !DILocation(line: 464, column: 3, scope: !7503)
!7528 = !DILocation(line: 464, column: 7, scope: !7503)
!7529 = !DILocation(line: 464, column: 16, scope: !7503)
!7530 = !DILocation(line: 464, column: 24, scope: !7503)
!7531 = !DILocation(line: 466, column: 6, scope: !7503)
!7532 = !DILocation(line: 471, column: 16, scope: !6922)
!7533 = !DILocation(line: 471, column: 2, scope: !6922)
!7534 = !DILocation(line: 471, column: 6, scope: !6922)
!7535 = !DILocation(line: 471, column: 14, scope: !6922)
!7536 = !DILocation(line: 472, column: 1, scope: !6922)
!7537 = distinct !DISubprogram(name: "round_box_shade_col4_r", scope: !3, file: !3, line: 598, type: !7538, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{null, !1255, !1547, !1547, !1410}
!7540 = !DILocalVariable(name: "r_col", arg: 1, scope: !7537, file: !3, line: 598, type: !1255)
!7541 = !DILocation(line: 598, column: 50, scope: !7537)
!7542 = !DILocalVariable(name: "col1", arg: 2, scope: !7537, file: !3, line: 598, type: !1547)
!7543 = !DILocation(line: 598, column: 71, scope: !7537)
!7544 = !DILocalVariable(name: "col2", arg: 3, scope: !7537, file: !3, line: 598, type: !1547)
!7545 = !DILocation(line: 598, column: 91, scope: !7537)
!7546 = !DILocalVariable(name: "fac", arg: 4, scope: !7537, file: !3, line: 598, type: !1410)
!7547 = !DILocation(line: 598, column: 112, scope: !7537)
!7548 = !DILocalVariable(name: "faci", scope: !7537, file: !3, line: 600, type: !2500)
!7549 = !DILocation(line: 600, column: 12, scope: !7537)
!7550 = !DILocation(line: 600, column: 19, scope: !7537)
!7551 = !DILocalVariable(name: "facm", scope: !7537, file: !3, line: 601, type: !2500)
!7552 = !DILocation(line: 601, column: 12, scope: !7537)
!7553 = !DILocation(line: 601, column: 25, scope: !7537)
!7554 = !DILocation(line: 601, column: 23, scope: !7537)
!7555 = !DILocation(line: 603, column: 14, scope: !7537)
!7556 = !DILocation(line: 603, column: 21, scope: !7537)
!7557 = !DILocation(line: 603, column: 19, scope: !7537)
!7558 = !DILocation(line: 603, column: 31, scope: !7537)
!7559 = !DILocation(line: 603, column: 38, scope: !7537)
!7560 = !DILocation(line: 603, column: 36, scope: !7537)
!7561 = !DILocation(line: 603, column: 29, scope: !7537)
!7562 = !DILocation(line: 603, column: 47, scope: !7537)
!7563 = !DILocation(line: 603, column: 13, scope: !7537)
!7564 = !DILocation(line: 603, column: 2, scope: !7537)
!7565 = !DILocation(line: 603, column: 11, scope: !7537)
!7566 = !DILocation(line: 604, column: 14, scope: !7537)
!7567 = !DILocation(line: 604, column: 21, scope: !7537)
!7568 = !DILocation(line: 604, column: 19, scope: !7537)
!7569 = !DILocation(line: 604, column: 31, scope: !7537)
!7570 = !DILocation(line: 604, column: 38, scope: !7537)
!7571 = !DILocation(line: 604, column: 36, scope: !7537)
!7572 = !DILocation(line: 604, column: 29, scope: !7537)
!7573 = !DILocation(line: 604, column: 47, scope: !7537)
!7574 = !DILocation(line: 604, column: 13, scope: !7537)
!7575 = !DILocation(line: 604, column: 2, scope: !7537)
!7576 = !DILocation(line: 604, column: 11, scope: !7537)
!7577 = !DILocation(line: 605, column: 14, scope: !7537)
!7578 = !DILocation(line: 605, column: 21, scope: !7537)
!7579 = !DILocation(line: 605, column: 19, scope: !7537)
!7580 = !DILocation(line: 605, column: 31, scope: !7537)
!7581 = !DILocation(line: 605, column: 38, scope: !7537)
!7582 = !DILocation(line: 605, column: 36, scope: !7537)
!7583 = !DILocation(line: 605, column: 29, scope: !7537)
!7584 = !DILocation(line: 605, column: 47, scope: !7537)
!7585 = !DILocation(line: 605, column: 13, scope: !7537)
!7586 = !DILocation(line: 605, column: 2, scope: !7537)
!7587 = !DILocation(line: 605, column: 11, scope: !7537)
!7588 = !DILocation(line: 606, column: 14, scope: !7537)
!7589 = !DILocation(line: 606, column: 21, scope: !7537)
!7590 = !DILocation(line: 606, column: 19, scope: !7537)
!7591 = !DILocation(line: 606, column: 31, scope: !7537)
!7592 = !DILocation(line: 606, column: 38, scope: !7537)
!7593 = !DILocation(line: 606, column: 36, scope: !7537)
!7594 = !DILocation(line: 606, column: 29, scope: !7537)
!7595 = !DILocation(line: 606, column: 47, scope: !7537)
!7596 = !DILocation(line: 606, column: 13, scope: !7537)
!7597 = !DILocation(line: 606, column: 2, scope: !7537)
!7598 = !DILocation(line: 606, column: 11, scope: !7537)
!7599 = !DILocation(line: 607, column: 1, scope: !7537)
!7600 = distinct !DISubprogram(name: "widget_verts_to_quad_strip", scope: !3, file: !3, line: 609, type: !7601, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{null, !3359, !2500, !3041}
!7603 = !DILocalVariable(name: "wtb", arg: 1, scope: !7600, file: !3, line: 609, type: !3359)
!7604 = !DILocation(line: 609, column: 54, scope: !7600)
!7605 = !DILocalVariable(name: "totvert", arg: 2, scope: !7600, file: !3, line: 609, type: !2500)
!7606 = !DILocation(line: 609, column: 69, scope: !7600)
!7607 = !DILocalVariable(name: "quad_strip", arg: 3, scope: !7600, file: !3, line: 609, type: !3041)
!7608 = !DILocation(line: 609, column: 84, scope: !7600)
!7609 = !DILocalVariable(name: "a", scope: !7600, file: !3, line: 611, type: !1254)
!7610 = !DILocation(line: 611, column: 6, scope: !7600)
!7611 = !DILocation(line: 612, column: 9, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 612, column: 2)
!7613 = !DILocation(line: 612, column: 7, scope: !7612)
!7614 = !DILocation(line: 612, column: 14, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 612, column: 2)
!7616 = !DILocation(line: 612, column: 18, scope: !7615)
!7617 = !DILocation(line: 612, column: 16, scope: !7615)
!7618 = !DILocation(line: 612, column: 2, scope: !7612)
!7619 = !DILocation(line: 613, column: 14, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 612, column: 32)
!7621 = !DILocation(line: 613, column: 25, scope: !7620)
!7622 = !DILocation(line: 613, column: 27, scope: !7620)
!7623 = !DILocation(line: 613, column: 33, scope: !7620)
!7624 = !DILocation(line: 613, column: 38, scope: !7620)
!7625 = !DILocation(line: 613, column: 46, scope: !7620)
!7626 = !DILocation(line: 613, column: 3, scope: !7620)
!7627 = !DILocation(line: 614, column: 14, scope: !7620)
!7628 = !DILocation(line: 614, column: 25, scope: !7620)
!7629 = !DILocation(line: 614, column: 27, scope: !7620)
!7630 = !DILocation(line: 614, column: 31, scope: !7620)
!7631 = !DILocation(line: 614, column: 37, scope: !7620)
!7632 = !DILocation(line: 614, column: 42, scope: !7620)
!7633 = !DILocation(line: 614, column: 50, scope: !7620)
!7634 = !DILocation(line: 614, column: 3, scope: !7620)
!7635 = !DILocation(line: 615, column: 2, scope: !7620)
!7636 = !DILocation(line: 612, column: 28, scope: !7615)
!7637 = !DILocation(line: 612, column: 2, scope: !7615)
!7638 = distinct !{!7638, !7618, !7639}
!7639 = !DILocation(line: 615, column: 2, scope: !7612)
!7640 = !DILocation(line: 616, column: 13, scope: !7600)
!7641 = !DILocation(line: 616, column: 24, scope: !7600)
!7642 = !DILocation(line: 616, column: 26, scope: !7600)
!7643 = !DILocation(line: 616, column: 32, scope: !7600)
!7644 = !DILocation(line: 616, column: 37, scope: !7600)
!7645 = !DILocation(line: 616, column: 2, scope: !7600)
!7646 = !DILocation(line: 617, column: 13, scope: !7600)
!7647 = !DILocation(line: 617, column: 24, scope: !7600)
!7648 = !DILocation(line: 617, column: 26, scope: !7600)
!7649 = !DILocation(line: 617, column: 30, scope: !7600)
!7650 = !DILocation(line: 617, column: 36, scope: !7600)
!7651 = !DILocation(line: 617, column: 41, scope: !7600)
!7652 = !DILocation(line: 617, column: 2, scope: !7600)
!7653 = !DILocation(line: 618, column: 1, scope: !7600)
!7654 = distinct !DISubprogram(name: "widget_verts_to_quad_strip_open", scope: !3, file: !3, line: 620, type: !7601, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7655 = !DILocalVariable(name: "wtb", arg: 1, scope: !7654, file: !3, line: 620, type: !3359)
!7656 = !DILocation(line: 620, column: 59, scope: !7654)
!7657 = !DILocalVariable(name: "totvert", arg: 2, scope: !7654, file: !3, line: 620, type: !2500)
!7658 = !DILocation(line: 620, column: 74, scope: !7654)
!7659 = !DILocalVariable(name: "quad_strip", arg: 3, scope: !7654, file: !3, line: 620, type: !3041)
!7660 = !DILocation(line: 620, column: 89, scope: !7654)
!7661 = !DILocalVariable(name: "a", scope: !7654, file: !3, line: 622, type: !1254)
!7662 = !DILocation(line: 622, column: 6, scope: !7654)
!7663 = !DILocation(line: 623, column: 9, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 623, column: 2)
!7665 = !DILocation(line: 623, column: 7, scope: !7664)
!7666 = !DILocation(line: 623, column: 14, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 623, column: 2)
!7668 = !DILocation(line: 623, column: 18, scope: !7667)
!7669 = !DILocation(line: 623, column: 16, scope: !7667)
!7670 = !DILocation(line: 623, column: 2, scope: !7664)
!7671 = !DILocation(line: 624, column: 26, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 623, column: 32)
!7673 = !DILocation(line: 624, column: 31, scope: !7672)
!7674 = !DILocation(line: 624, column: 39, scope: !7672)
!7675 = !DILocation(line: 624, column: 3, scope: !7672)
!7676 = !DILocation(line: 624, column: 14, scope: !7672)
!7677 = !DILocation(line: 624, column: 16, scope: !7672)
!7678 = !DILocation(line: 624, column: 24, scope: !7672)
!7679 = !DILocation(line: 625, column: 26, scope: !7672)
!7680 = !DILocation(line: 625, column: 31, scope: !7672)
!7681 = !DILocation(line: 625, column: 39, scope: !7672)
!7682 = !DILocation(line: 625, column: 3, scope: !7672)
!7683 = !DILocation(line: 625, column: 14, scope: !7672)
!7684 = !DILocation(line: 625, column: 16, scope: !7672)
!7685 = !DILocation(line: 625, column: 24, scope: !7672)
!7686 = !DILocation(line: 626, column: 30, scope: !7672)
!7687 = !DILocation(line: 626, column: 35, scope: !7672)
!7688 = !DILocation(line: 626, column: 43, scope: !7672)
!7689 = !DILocation(line: 626, column: 3, scope: !7672)
!7690 = !DILocation(line: 626, column: 14, scope: !7672)
!7691 = !DILocation(line: 626, column: 16, scope: !7672)
!7692 = !DILocation(line: 626, column: 20, scope: !7672)
!7693 = !DILocation(line: 626, column: 28, scope: !7672)
!7694 = !DILocation(line: 627, column: 30, scope: !7672)
!7695 = !DILocation(line: 627, column: 35, scope: !7672)
!7696 = !DILocation(line: 627, column: 43, scope: !7672)
!7697 = !DILocation(line: 627, column: 49, scope: !7672)
!7698 = !DILocation(line: 627, column: 3, scope: !7672)
!7699 = !DILocation(line: 627, column: 14, scope: !7672)
!7700 = !DILocation(line: 627, column: 16, scope: !7672)
!7701 = !DILocation(line: 627, column: 20, scope: !7672)
!7702 = !DILocation(line: 627, column: 28, scope: !7672)
!7703 = !DILocation(line: 628, column: 2, scope: !7672)
!7704 = !DILocation(line: 623, column: 28, scope: !7667)
!7705 = !DILocation(line: 623, column: 2, scope: !7667)
!7706 = distinct !{!7706, !7670, !7707}
!7707 = !DILocation(line: 628, column: 2, scope: !7664)
!7708 = !DILocation(line: 629, column: 1, scope: !7654)
!7709 = distinct !DISubprogram(name: "widget_trias_draw", scope: !3, file: !3, line: 536, type: !7710, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{null, !3811}
!7712 = !DILocalVariable(name: "tria", arg: 1, scope: !7709, file: !3, line: 536, type: !3811)
!7713 = !DILocation(line: 536, column: 46, scope: !7709)
!7714 = !DILocation(line: 538, column: 2, scope: !7709)
!7715 = !DILocation(line: 539, column: 34, scope: !7709)
!7716 = !DILocation(line: 539, column: 40, scope: !7709)
!7717 = !DILocation(line: 539, column: 2, scope: !7709)
!7718 = !DILocation(line: 540, column: 31, scope: !7709)
!7719 = !DILocation(line: 540, column: 37, scope: !7709)
!7720 = !DILocation(line: 540, column: 41, scope: !7709)
!7721 = !DILocation(line: 540, column: 63, scope: !7709)
!7722 = !DILocation(line: 540, column: 69, scope: !7709)
!7723 = !DILocation(line: 540, column: 2, scope: !7709)
!7724 = !DILocation(line: 541, column: 2, scope: !7709)
!7725 = !DILocation(line: 542, column: 1, scope: !7709)
!7726 = distinct !DISubprogram(name: "copy_v2_v2", scope: !2405, file: !2405, line: 58, type: !2913, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7727 = !DILocalVariable(name: "r", arg: 1, scope: !7726, file: !2405, line: 58, type: !1737)
!7728 = !DILocation(line: 58, column: 31, scope: !7726)
!7729 = !DILocalVariable(name: "a", arg: 2, scope: !7726, file: !2405, line: 58, type: !2408)
!7730 = !DILocation(line: 58, column: 49, scope: !7726)
!7731 = !DILocation(line: 60, column: 9, scope: !7726)
!7732 = !DILocation(line: 60, column: 2, scope: !7726)
!7733 = !DILocation(line: 60, column: 7, scope: !7726)
!7734 = !DILocation(line: 61, column: 9, scope: !7726)
!7735 = !DILocation(line: 61, column: 2, scope: !7726)
!7736 = !DILocation(line: 61, column: 7, scope: !7726)
!7737 = !DILocation(line: 62, column: 1, scope: !7726)
!7738 = distinct !DISubprogram(name: "widget_draw_tria_ex", scope: !3, file: !3, line: 481, type: !7739, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{null, !3811, !2279, !1253, !1260, !7741, !2500, !3169, !2500}
!7741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!7742 = !DILocalVariable(name: "tria", arg: 1, scope: !7738, file: !3, line: 482, type: !3811)
!7743 = !DILocation(line: 482, column: 24, scope: !7738)
!7744 = !DILocalVariable(name: "rect", arg: 2, scope: !7738, file: !3, line: 482, type: !2279)
!7745 = !DILocation(line: 482, column: 42, scope: !7738)
!7746 = !DILocalVariable(name: "triasize", arg: 3, scope: !7738, file: !3, line: 482, type: !1253)
!7747 = !DILocation(line: 482, column: 54, scope: !7738)
!7748 = !DILocalVariable(name: "where", arg: 4, scope: !7738, file: !3, line: 482, type: !1260)
!7749 = !DILocation(line: 482, column: 69, scope: !7738)
!7750 = !DILocalVariable(name: "verts", arg: 5, scope: !7738, file: !3, line: 484, type: !7741)
!7751 = !DILocation(line: 484, column: 21, scope: !7738)
!7752 = !DILocalVariable(name: "verts_tot", arg: 6, scope: !7738, file: !3, line: 484, type: !2500)
!7753 = !DILocation(line: 484, column: 43, scope: !7738)
!7754 = !DILocalVariable(name: "tris", arg: 7, scope: !7738, file: !3, line: 485, type: !3169)
!7755 = !DILocation(line: 485, column: 28, scope: !7738)
!7756 = !DILocalVariable(name: "tris_tot", arg: 8, scope: !7738, file: !3, line: 485, type: !2500)
!7757 = !DILocation(line: 485, column: 49, scope: !7738)
!7758 = !DILocalVariable(name: "centx", scope: !7738, file: !3, line: 487, type: !1253)
!7759 = !DILocation(line: 487, column: 8, scope: !7738)
!7760 = !DILocalVariable(name: "centy", scope: !7738, file: !3, line: 487, type: !1253)
!7761 = !DILocation(line: 487, column: 15, scope: !7738)
!7762 = !DILocalVariable(name: "sizex", scope: !7738, file: !3, line: 487, type: !1253)
!7763 = !DILocation(line: 487, column: 22, scope: !7738)
!7764 = !DILocalVariable(name: "sizey", scope: !7738, file: !3, line: 487, type: !1253)
!7765 = !DILocation(line: 487, column: 29, scope: !7738)
!7766 = !DILocalVariable(name: "minsize", scope: !7738, file: !3, line: 487, type: !1253)
!7767 = !DILocation(line: 487, column: 36, scope: !7738)
!7768 = !DILocalVariable(name: "a", scope: !7738, file: !3, line: 488, type: !1254)
!7769 = !DILocation(line: 488, column: 6, scope: !7738)
!7770 = !DILocalVariable(name: "i1", scope: !7738, file: !3, line: 488, type: !1254)
!7771 = !DILocation(line: 488, column: 9, scope: !7738)
!7772 = !DILocalVariable(name: "i2", scope: !7738, file: !3, line: 488, type: !1254)
!7773 = !DILocation(line: 488, column: 17, scope: !7738)
!7774 = !DILocation(line: 490, column: 35, scope: !7738)
!7775 = !DILocation(line: 490, column: 19, scope: !7738)
!7776 = !DILocation(line: 490, column: 58, scope: !7738)
!7777 = !DILocation(line: 490, column: 42, scope: !7738)
!7778 = !DILocation(line: 490, column: 12, scope: !7738)
!7779 = !DILocation(line: 490, column: 10, scope: !7738)
!7780 = !DILocation(line: 493, column: 17, scope: !7738)
!7781 = !DILocation(line: 493, column: 23, scope: !7738)
!7782 = !DILocation(line: 493, column: 10, scope: !7738)
!7783 = !DILocation(line: 493, column: 37, scope: !7738)
!7784 = !DILocation(line: 493, column: 35, scope: !7738)
!7785 = !DILocation(line: 493, column: 28, scope: !7738)
!7786 = !DILocation(line: 493, column: 8, scope: !7738)
!7787 = !DILocation(line: 494, column: 17, scope: !7738)
!7788 = !DILocation(line: 494, column: 23, scope: !7738)
!7789 = !DILocation(line: 494, column: 10, scope: !7738)
!7790 = !DILocation(line: 494, column: 37, scope: !7738)
!7791 = !DILocation(line: 494, column: 35, scope: !7738)
!7792 = !DILocation(line: 494, column: 28, scope: !7738)
!7793 = !DILocation(line: 494, column: 8, scope: !7738)
!7794 = !DILocation(line: 495, column: 26, scope: !7738)
!7795 = !DILocation(line: 495, column: 24, scope: !7738)
!7796 = !DILocation(line: 495, column: 37, scope: !7738)
!7797 = !DILocation(line: 495, column: 35, scope: !7738)
!7798 = !DILocation(line: 495, column: 16, scope: !7738)
!7799 = !DILocation(line: 495, column: 8, scope: !7738)
!7800 = !DILocation(line: 497, column: 6, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 497, column: 6)
!7802 = !DILocation(line: 497, column: 12, scope: !7801)
!7803 = !DILocation(line: 497, column: 6, scope: !7738)
!7804 = !DILocation(line: 498, column: 18, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 497, column: 20)
!7806 = !DILocation(line: 498, column: 24, scope: !7805)
!7807 = !DILocation(line: 498, column: 11, scope: !7805)
!7808 = !DILocation(line: 498, column: 38, scope: !7805)
!7809 = !DILocation(line: 498, column: 36, scope: !7805)
!7810 = !DILocation(line: 498, column: 29, scope: !7805)
!7811 = !DILocation(line: 498, column: 9, scope: !7805)
!7812 = !DILocation(line: 499, column: 12, scope: !7805)
!7813 = !DILocation(line: 499, column: 11, scope: !7805)
!7814 = !DILocation(line: 499, column: 9, scope: !7805)
!7815 = !DILocation(line: 500, column: 2, scope: !7805)
!7816 = !DILocation(line: 501, column: 11, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 501, column: 11)
!7818 = !DILocation(line: 501, column: 17, scope: !7817)
!7819 = !DILocation(line: 501, column: 11, scope: !7801)
!7820 = !DILocation(line: 502, column: 18, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 501, column: 25)
!7822 = !DILocation(line: 502, column: 24, scope: !7821)
!7823 = !DILocation(line: 502, column: 11, scope: !7821)
!7824 = !DILocation(line: 502, column: 38, scope: !7821)
!7825 = !DILocation(line: 502, column: 36, scope: !7821)
!7826 = !DILocation(line: 502, column: 29, scope: !7821)
!7827 = !DILocation(line: 502, column: 9, scope: !7821)
!7828 = !DILocation(line: 503, column: 12, scope: !7821)
!7829 = !DILocation(line: 503, column: 11, scope: !7821)
!7830 = !DILocation(line: 503, column: 9, scope: !7821)
!7831 = !DILocation(line: 504, column: 6, scope: !7821)
!7832 = !DILocation(line: 504, column: 14, scope: !7821)
!7833 = !DILocation(line: 505, column: 2, scope: !7821)
!7834 = !DILocation(line: 506, column: 11, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 506, column: 11)
!7836 = !DILocation(line: 506, column: 17, scope: !7835)
!7837 = !DILocation(line: 506, column: 11, scope: !7817)
!7838 = !DILocation(line: 507, column: 12, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 506, column: 25)
!7840 = !DILocation(line: 507, column: 11, scope: !7839)
!7841 = !DILocation(line: 507, column: 9, scope: !7839)
!7842 = !DILocation(line: 508, column: 6, scope: !7839)
!7843 = !DILocation(line: 508, column: 14, scope: !7839)
!7844 = !DILocation(line: 509, column: 2, scope: !7839)
!7845 = !DILocation(line: 511, column: 9, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 511, column: 2)
!7847 = !DILocation(line: 511, column: 7, scope: !7846)
!7848 = !DILocation(line: 511, column: 14, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 511, column: 2)
!7850 = !DILocation(line: 511, column: 18, scope: !7849)
!7851 = !DILocation(line: 511, column: 16, scope: !7849)
!7852 = !DILocation(line: 511, column: 2, scope: !7846)
!7853 = !DILocation(line: 512, column: 21, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 511, column: 34)
!7855 = !DILocation(line: 512, column: 29, scope: !7854)
!7856 = !DILocation(line: 512, column: 35, scope: !7854)
!7857 = !DILocation(line: 512, column: 38, scope: !7854)
!7858 = !DILocation(line: 512, column: 27, scope: !7854)
!7859 = !DILocation(line: 512, column: 44, scope: !7854)
!7860 = !DILocation(line: 512, column: 42, scope: !7854)
!7861 = !DILocation(line: 512, column: 3, scope: !7854)
!7862 = !DILocation(line: 512, column: 9, scope: !7854)
!7863 = !DILocation(line: 512, column: 13, scope: !7854)
!7864 = !DILocation(line: 512, column: 19, scope: !7854)
!7865 = !DILocation(line: 513, column: 21, scope: !7854)
!7866 = !DILocation(line: 513, column: 29, scope: !7854)
!7867 = !DILocation(line: 513, column: 35, scope: !7854)
!7868 = !DILocation(line: 513, column: 38, scope: !7854)
!7869 = !DILocation(line: 513, column: 27, scope: !7854)
!7870 = !DILocation(line: 513, column: 44, scope: !7854)
!7871 = !DILocation(line: 513, column: 42, scope: !7854)
!7872 = !DILocation(line: 513, column: 3, scope: !7854)
!7873 = !DILocation(line: 513, column: 9, scope: !7854)
!7874 = !DILocation(line: 513, column: 13, scope: !7854)
!7875 = !DILocation(line: 513, column: 19, scope: !7854)
!7876 = !DILocation(line: 514, column: 2, scope: !7854)
!7877 = !DILocation(line: 511, column: 30, scope: !7849)
!7878 = !DILocation(line: 511, column: 2, scope: !7849)
!7879 = distinct !{!7879, !7852, !7880}
!7880 = !DILocation(line: 514, column: 2, scope: !7846)
!7881 = !DILocation(line: 516, column: 14, scope: !7738)
!7882 = !DILocation(line: 516, column: 2, scope: !7738)
!7883 = !DILocation(line: 516, column: 8, scope: !7738)
!7884 = !DILocation(line: 516, column: 12, scope: !7738)
!7885 = !DILocation(line: 517, column: 16, scope: !7738)
!7886 = !DILocation(line: 517, column: 2, scope: !7738)
!7887 = !DILocation(line: 517, column: 8, scope: !7738)
!7888 = !DILocation(line: 517, column: 14, scope: !7738)
!7889 = !DILocation(line: 518, column: 1, scope: !7738)
!7890 = distinct !DISubprogram(name: "ui_but_draw_menu_icon", scope: !3, file: !3, line: 831, type: !7891, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!1254, !7893}
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 64)
!7894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!7895 = !DILocalVariable(name: "but", arg: 1, scope: !7890, file: !3, line: 831, type: !7893)
!7896 = !DILocation(line: 831, column: 47, scope: !7890)
!7897 = !DILocation(line: 833, column: 10, scope: !7890)
!7898 = !DILocation(line: 833, column: 15, scope: !7890)
!7899 = !DILocation(line: 833, column: 20, scope: !7890)
!7900 = !DILocation(line: 833, column: 39, scope: !7890)
!7901 = !DILocation(line: 833, column: 43, scope: !7890)
!7902 = !DILocation(line: 833, column: 48, scope: !7890)
!7903 = !DILocation(line: 833, column: 51, scope: !7890)
!7904 = !DILocation(line: 0, scope: !7890)
!7905 = !DILocation(line: 833, column: 2, scope: !7890)
!7906 = distinct !DISubprogram(name: "widget_draw_icon", scope: !3, file: !3, line: 838, type: !7907, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !7893, !1582, !1253, !2279, !3622}
!7909 = !DILocalVariable(name: "but", arg: 1, scope: !7906, file: !3, line: 838, type: !7893)
!7910 = !DILocation(line: 838, column: 43, scope: !7906)
!7911 = !DILocalVariable(name: "icon", arg: 2, scope: !7906, file: !3, line: 838, type: !1582)
!7912 = !DILocation(line: 838, column: 58, scope: !7906)
!7913 = !DILocalVariable(name: "alpha", arg: 3, scope: !7906, file: !3, line: 838, type: !1253)
!7914 = !DILocation(line: 838, column: 70, scope: !7906)
!7915 = !DILocalVariable(name: "rect", arg: 4, scope: !7906, file: !3, line: 838, type: !2279)
!7916 = !DILocation(line: 838, column: 89, scope: !7906)
!7917 = !DILocalVariable(name: "show_menu_icon", arg: 5, scope: !7906, file: !3, line: 839, type: !3622)
!7918 = !DILocation(line: 839, column: 41, scope: !7906)
!7919 = !DILocalVariable(name: "xs", scope: !7906, file: !3, line: 841, type: !1253)
!7920 = !DILocation(line: 841, column: 8, scope: !7906)
!7921 = !DILocalVariable(name: "ys", scope: !7906, file: !3, line: 841, type: !1253)
!7922 = !DILocation(line: 841, column: 19, scope: !7906)
!7923 = !DILocalVariable(name: "aspect", scope: !7906, file: !3, line: 842, type: !1253)
!7924 = !DILocation(line: 842, column: 8, scope: !7906)
!7925 = !DILocalVariable(name: "height", scope: !7906, file: !3, line: 842, type: !1253)
!7926 = !DILocation(line: 842, column: 16, scope: !7906)
!7927 = !DILocation(line: 844, column: 6, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 844, column: 6)
!7929 = !DILocation(line: 844, column: 11, scope: !7928)
!7930 = !DILocation(line: 844, column: 16, scope: !7928)
!7931 = !DILocation(line: 844, column: 6, scope: !7906)
!7932 = !DILocation(line: 845, column: 3, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 844, column: 35)
!7934 = !DILocation(line: 846, column: 23, scope: !7933)
!7935 = !DILocation(line: 846, column: 29, scope: !7933)
!7936 = !DILocation(line: 846, column: 36, scope: !7933)
!7937 = !DILocation(line: 846, column: 3, scope: !7933)
!7938 = !DILocation(line: 847, column: 3, scope: !7933)
!7939 = !DILocation(line: 848, column: 3, scope: !7933)
!7940 = !DILocation(line: 852, column: 6, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 852, column: 6)
!7942 = !DILocation(line: 852, column: 11, scope: !7941)
!7943 = !DILocation(line: 852, column: 26, scope: !7941)
!7944 = !DILocation(line: 852, column: 30, scope: !7941)
!7945 = !DILocation(line: 852, column: 35, scope: !7941)
!7946 = !DILocation(line: 852, column: 40, scope: !7941)
!7947 = !DILocation(line: 852, column: 59, scope: !7941)
!7948 = !DILocation(line: 852, column: 6, scope: !7906)
!7949 = !DILocation(line: 852, column: 65, scope: !7941)
!7950 = !DILocation(line: 854, column: 11, scope: !7906)
!7951 = !DILocation(line: 854, column: 16, scope: !7906)
!7952 = !DILocation(line: 854, column: 23, scope: !7906)
!7953 = !DILocation(line: 854, column: 32, scope: !7906)
!7954 = !DILocation(line: 854, column: 30, scope: !7906)
!7955 = !DILocation(line: 854, column: 9, scope: !7906)
!7956 = !DILocation(line: 855, column: 33, scope: !7906)
!7957 = !DILocation(line: 855, column: 31, scope: !7906)
!7958 = !DILocation(line: 855, column: 9, scope: !7906)
!7959 = !DILocation(line: 858, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 858, column: 6)
!7961 = !DILocation(line: 858, column: 6, scope: !7906)
!7962 = !DILocation(line: 859, column: 7, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 859, column: 7)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 858, column: 48)
!7965 = !DILocation(line: 859, column: 12, scope: !7963)
!7966 = !DILocation(line: 859, column: 17, scope: !7963)
!7967 = !DILocation(line: 859, column: 7, scope: !7964)
!7968 = !DILocation(line: 859, column: 31, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 859, column: 30)
!7970 = !DILocation(line: 860, column: 12, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 860, column: 12)
!7972 = !DILocation(line: 860, column: 17, scope: !7971)
!7973 = !DILocation(line: 860, column: 22, scope: !7971)
!7974 = !DILocation(line: 860, column: 12, scope: !7963)
!7975 = !DILocation(line: 860, column: 36, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 860, column: 35)
!7977 = !DILocation(line: 861, column: 14, scope: !7971)
!7978 = !DILocation(line: 862, column: 2, scope: !7964)
!7979 = !DILocation(line: 865, column: 7, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 865, column: 6)
!7981 = !DILocation(line: 865, column: 12, scope: !7980)
!7982 = !DILocation(line: 865, column: 17, scope: !7980)
!7983 = !DILocation(line: 865, column: 27, scope: !7980)
!7984 = !DILocation(line: 865, column: 30, scope: !7980)
!7985 = !DILocation(line: 865, column: 35, scope: !7980)
!7986 = !DILocation(line: 865, column: 38, scope: !7980)
!7987 = !DILocation(line: 865, column: 6, scope: !7906)
!7988 = !DILocation(line: 866, column: 12, scope: !7980)
!7989 = !DILocation(line: 866, column: 17, scope: !7980)
!7990 = !DILocation(line: 866, column: 9, scope: !7980)
!7991 = !DILocation(line: 866, column: 3, scope: !7980)
!7992 = !DILocation(line: 868, column: 2, scope: !7906)
!7993 = !DILocation(line: 870, column: 6, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 870, column: 6)
!7995 = !DILocation(line: 870, column: 11, scope: !7994)
!7996 = !DILocation(line: 870, column: 14, scope: !7994)
!7997 = !DILocation(line: 870, column: 19, scope: !7994)
!7998 = !DILocation(line: 870, column: 6, scope: !7906)
!7999 = !DILocalVariable(name: "ofs", scope: !8000, file: !3, line: 871, type: !1253)
!8000 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 870, column: 35)
!8001 = !DILocation(line: 871, column: 9, scope: !8000)
!8002 = !DILocation(line: 871, column: 22, scope: !8000)
!8003 = !DILocation(line: 871, column: 20, scope: !8000)
!8004 = !DILocation(line: 873, column: 7, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 873, column: 7)
!8006 = !DILocation(line: 873, column: 12, scope: !8005)
!8007 = !DILocation(line: 873, column: 21, scope: !8005)
!8008 = !DILocation(line: 873, column: 7, scope: !8000)
!8009 = !DILocation(line: 874, column: 8, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 874, column: 8)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 873, column: 41)
!8012 = !DILocation(line: 874, column: 13, scope: !8010)
!8013 = !DILocation(line: 874, column: 20, scope: !8010)
!8014 = !DILocation(line: 874, column: 25, scope: !8010)
!8015 = !DILocation(line: 874, column: 8, scope: !8011)
!8016 = !DILocation(line: 875, column: 9, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 875, column: 9)
!8018 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 874, column: 42)
!8019 = !DILocation(line: 875, column: 9, scope: !8018)
!8020 = !DILocation(line: 876, column: 11, scope: !8017)
!8021 = !DILocation(line: 876, column: 17, scope: !8017)
!8022 = !DILocation(line: 876, column: 31, scope: !8017)
!8023 = !DILocation(line: 876, column: 29, scope: !8017)
!8024 = !DILocation(line: 876, column: 22, scope: !8017)
!8025 = !DILocation(line: 876, column: 9, scope: !8017)
!8026 = !DILocation(line: 876, column: 6, scope: !8017)
!8027 = !DILocation(line: 878, column: 11, scope: !8017)
!8028 = !DILocation(line: 878, column: 17, scope: !8017)
!8029 = !DILocation(line: 878, column: 24, scope: !8017)
!8030 = !DILocation(line: 878, column: 22, scope: !8017)
!8031 = !DILocation(line: 878, column: 9, scope: !8017)
!8032 = !DILocation(line: 879, column: 4, scope: !8018)
!8033 = !DILocation(line: 881, column: 10, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 880, column: 9)
!8035 = !DILocation(line: 881, column: 16, scope: !8034)
!8036 = !DILocation(line: 881, column: 30, scope: !8034)
!8037 = !DILocation(line: 881, column: 28, scope: !8034)
!8038 = !DILocation(line: 881, column: 21, scope: !8034)
!8039 = !DILocation(line: 881, column: 8, scope: !8034)
!8040 = !DILocation(line: 883, column: 10, scope: !8011)
!8041 = !DILocation(line: 883, column: 16, scope: !8011)
!8042 = !DILocation(line: 883, column: 23, scope: !8011)
!8043 = !DILocation(line: 883, column: 29, scope: !8011)
!8044 = !DILocation(line: 883, column: 21, scope: !8011)
!8045 = !DILocation(line: 883, column: 36, scope: !8011)
!8046 = !DILocation(line: 883, column: 34, scope: !8011)
!8047 = !DILocation(line: 883, column: 44, scope: !8011)
!8048 = !DILocation(line: 883, column: 7, scope: !8011)
!8049 = !DILocation(line: 884, column: 3, scope: !8011)
!8050 = !DILocation(line: 886, column: 10, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 885, column: 8)
!8052 = !DILocation(line: 886, column: 16, scope: !8051)
!8053 = !DILocation(line: 886, column: 23, scope: !8051)
!8054 = !DILocation(line: 886, column: 29, scope: !8051)
!8055 = !DILocation(line: 886, column: 21, scope: !8051)
!8056 = !DILocation(line: 886, column: 36, scope: !8051)
!8057 = !DILocation(line: 886, column: 34, scope: !8051)
!8058 = !DILocation(line: 886, column: 44, scope: !8051)
!8059 = !DILocation(line: 886, column: 7, scope: !8051)
!8060 = !DILocation(line: 887, column: 10, scope: !8051)
!8061 = !DILocation(line: 887, column: 16, scope: !8051)
!8062 = !DILocation(line: 887, column: 23, scope: !8051)
!8063 = !DILocation(line: 887, column: 29, scope: !8051)
!8064 = !DILocation(line: 887, column: 21, scope: !8051)
!8065 = !DILocation(line: 887, column: 36, scope: !8051)
!8066 = !DILocation(line: 887, column: 34, scope: !8051)
!8067 = !DILocation(line: 887, column: 44, scope: !8051)
!8068 = !DILocation(line: 887, column: 7, scope: !8051)
!8069 = !DILocation(line: 891, column: 7, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 891, column: 7)
!8071 = !DILocation(line: 891, column: 14, scope: !8070)
!8072 = !DILocation(line: 891, column: 22, scope: !8070)
!8073 = !DILocation(line: 891, column: 25, scope: !8070)
!8074 = !DILocation(line: 891, column: 32, scope: !8070)
!8075 = !DILocation(line: 891, column: 7, scope: !8000)
!8076 = !DILocation(line: 892, column: 15, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 891, column: 41)
!8078 = !DILocation(line: 892, column: 18, scope: !8077)
!8079 = !DILocation(line: 892, column: 9, scope: !8077)
!8080 = !DILocation(line: 892, column: 7, scope: !8077)
!8081 = !DILocation(line: 893, column: 15, scope: !8077)
!8082 = !DILocation(line: 893, column: 18, scope: !8077)
!8083 = !DILocation(line: 893, column: 9, scope: !8077)
!8084 = !DILocation(line: 893, column: 7, scope: !8077)
!8085 = !DILocation(line: 894, column: 3, scope: !8077)
!8086 = !DILocation(line: 897, column: 7, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 897, column: 7)
!8088 = !DILocation(line: 897, column: 12, scope: !8087)
!8089 = !DILocation(line: 897, column: 21, scope: !8087)
!8090 = !DILocation(line: 897, column: 25, scope: !8087)
!8091 = !DILocation(line: 897, column: 30, scope: !8087)
!8092 = !DILocation(line: 897, column: 35, scope: !8087)
!8093 = !DILocation(line: 897, column: 7, scope: !8000)
!8094 = !DILocalVariable(name: "rgb", scope: !8095, file: !3, line: 898, type: !1906)
!8095 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 897, column: 49)
!8096 = !DILocation(line: 898, column: 10, scope: !8095)
!8097 = !DILocation(line: 899, column: 30, scope: !8095)
!8098 = !DILocation(line: 899, column: 34, scope: !8095)
!8099 = !DILocation(line: 899, column: 38, scope: !8095)
!8100 = !DILocation(line: 899, column: 44, scope: !8095)
!8101 = !DILocation(line: 899, column: 52, scope: !8095)
!8102 = !DILocation(line: 899, column: 4, scope: !8095)
!8103 = !DILocation(line: 900, column: 3, scope: !8095)
!8104 = !DILocation(line: 902, column: 24, scope: !8087)
!8105 = !DILocation(line: 902, column: 28, scope: !8087)
!8106 = !DILocation(line: 902, column: 32, scope: !8087)
!8107 = !DILocation(line: 902, column: 38, scope: !8087)
!8108 = !DILocation(line: 902, column: 46, scope: !8087)
!8109 = !DILocation(line: 902, column: 4, scope: !8087)
!8110 = !DILocation(line: 903, column: 2, scope: !8000)
!8111 = !DILocation(line: 905, column: 6, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 905, column: 6)
!8113 = !DILocation(line: 905, column: 6, scope: !7906)
!8114 = !DILocation(line: 906, column: 8, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 905, column: 22)
!8116 = !DILocation(line: 906, column: 14, scope: !8115)
!8117 = !DILocation(line: 906, column: 21, scope: !8115)
!8118 = !DILocation(line: 906, column: 19, scope: !8115)
!8119 = !DILocation(line: 906, column: 40, scope: !8115)
!8120 = !DILocation(line: 906, column: 38, scope: !8115)
!8121 = !DILocation(line: 906, column: 6, scope: !8115)
!8122 = !DILocation(line: 907, column: 9, scope: !8115)
!8123 = !DILocation(line: 907, column: 15, scope: !8115)
!8124 = !DILocation(line: 907, column: 22, scope: !8115)
!8125 = !DILocation(line: 907, column: 28, scope: !8115)
!8126 = !DILocation(line: 907, column: 20, scope: !8115)
!8127 = !DILocation(line: 907, column: 35, scope: !8115)
!8128 = !DILocation(line: 907, column: 33, scope: !8115)
!8129 = !DILocation(line: 907, column: 43, scope: !8115)
!8130 = !DILocation(line: 907, column: 6, scope: !8115)
!8131 = !DILocation(line: 909, column: 23, scope: !8115)
!8132 = !DILocation(line: 909, column: 27, scope: !8115)
!8133 = !DILocation(line: 909, column: 53, scope: !8115)
!8134 = !DILocation(line: 909, column: 61, scope: !8115)
!8135 = !DILocation(line: 909, column: 3, scope: !8115)
!8136 = !DILocation(line: 910, column: 2, scope: !8115)
!8137 = !DILocation(line: 912, column: 2, scope: !7906)
!8138 = !DILocation(line: 913, column: 1, scope: !7906)
!8139 = distinct !DISubprogram(name: "ui_text_clip_cursor", scope: !3, file: !3, line: 1102, type: !8140, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{null, !1970, !1464, !2279}
!8142 = !DILocalVariable(name: "fstyle", arg: 1, scope: !8139, file: !3, line: 1102, type: !1970)
!8143 = !DILocation(line: 1102, column: 46, scope: !8139)
!8144 = !DILocalVariable(name: "but", arg: 2, scope: !8139, file: !3, line: 1102, type: !1464)
!8145 = !DILocation(line: 1102, column: 61, scope: !8139)
!8146 = !DILocalVariable(name: "rect", arg: 3, scope: !8139, file: !3, line: 1102, type: !2279)
!8147 = !DILocation(line: 1102, column: 78, scope: !8139)
!8148 = !DILocalVariable(name: "border", scope: !8139, file: !3, line: 1104, type: !2500)
!8149 = !DILocation(line: 1104, column: 12, scope: !8139)
!8150 = !DILocation(line: 1104, column: 27, scope: !8139)
!8151 = !DILocation(line: 1104, column: 47, scope: !8139)
!8152 = !DILocation(line: 1104, column: 21, scope: !8139)
!8153 = !DILocalVariable(name: "okwidth", scope: !8139, file: !3, line: 1105, type: !2500)
!8154 = !DILocation(line: 1105, column: 12, scope: !8139)
!8155 = !DILocation(line: 1105, column: 45, scope: !8139)
!8156 = !DILocation(line: 1105, column: 29, scope: !8139)
!8157 = !DILocation(line: 1105, column: 53, scope: !8139)
!8158 = !DILocation(line: 1105, column: 51, scope: !8139)
!8159 = !DILocation(line: 1105, column: 22, scope: !8139)
!8160 = !DILocation(line: 1110, column: 17, scope: !8139)
!8161 = !DILocation(line: 1110, column: 2, scope: !8139)
!8162 = !DILocation(line: 1112, column: 6, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1112, column: 6)
!8164 = !DILocation(line: 1112, column: 14, scope: !8163)
!8165 = !DILocation(line: 1112, column: 22, scope: !8163)
!8166 = !DILocation(line: 1112, column: 6, scope: !8139)
!8167 = !DILocation(line: 1113, column: 14, scope: !8163)
!8168 = !DILocation(line: 1113, column: 22, scope: !8163)
!8169 = !DILocation(line: 1113, column: 3, scope: !8163)
!8170 = !DILocation(line: 1116, column: 6, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1116, column: 6)
!8172 = !DILocation(line: 1116, column: 11, scope: !8171)
!8173 = !DILocation(line: 1116, column: 17, scope: !8171)
!8174 = !DILocation(line: 1116, column: 22, scope: !8171)
!8175 = !DILocation(line: 1116, column: 15, scope: !8171)
!8176 = !DILocation(line: 1116, column: 6, scope: !8139)
!8177 = !DILocation(line: 1117, column: 14, scope: !8171)
!8178 = !DILocation(line: 1117, column: 19, scope: !8171)
!8179 = !DILocation(line: 1117, column: 3, scope: !8171)
!8180 = !DILocation(line: 1117, column: 8, scope: !8171)
!8181 = !DILocation(line: 1117, column: 12, scope: !8171)
!8182 = !DILocation(line: 1119, column: 16, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1119, column: 6)
!8184 = !DILocation(line: 1119, column: 24, scope: !8183)
!8185 = !DILocation(line: 1119, column: 35, scope: !8183)
!8186 = !DILocation(line: 1119, column: 40, scope: !8183)
!8187 = !DILocation(line: 1119, column: 6, scope: !8183)
!8188 = !DILocation(line: 1119, column: 61, scope: !8183)
!8189 = !DILocation(line: 1119, column: 58, scope: !8183)
!8190 = !DILocation(line: 1119, column: 6, scope: !8139)
!8191 = !DILocation(line: 1120, column: 3, scope: !8183)
!8192 = !DILocation(line: 1120, column: 8, scope: !8183)
!8193 = !DILocation(line: 1120, column: 12, scope: !8183)
!8194 = !DILocation(line: 1122, column: 28, scope: !8139)
!8195 = !DILocation(line: 1122, column: 36, scope: !8139)
!8196 = !DILocation(line: 1122, column: 47, scope: !8139)
!8197 = !DILocation(line: 1122, column: 52, scope: !8139)
!8198 = !DILocation(line: 1122, column: 62, scope: !8139)
!8199 = !DILocation(line: 1122, column: 67, scope: !8139)
!8200 = !DILocation(line: 1122, column: 60, scope: !8139)
!8201 = !DILocation(line: 1122, column: 18, scope: !8139)
!8202 = !DILocation(line: 1122, column: 2, scope: !8139)
!8203 = !DILocation(line: 1122, column: 7, scope: !8139)
!8204 = !DILocation(line: 1122, column: 16, scope: !8139)
!8205 = !DILocation(line: 1124, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1124, column: 6)
!8207 = !DILocation(line: 1124, column: 11, scope: !8206)
!8208 = !DILocation(line: 1124, column: 22, scope: !8206)
!8209 = !DILocation(line: 1124, column: 20, scope: !8206)
!8210 = !DILocation(line: 1124, column: 6, scope: !8139)
!8211 = !DILocalVariable(name: "len", scope: !8212, file: !3, line: 1125, type: !1254)
!8212 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 1124, column: 31)
!8213 = !DILocation(line: 1125, column: 7, scope: !8212)
!8214 = !DILocation(line: 1125, column: 20, scope: !8212)
!8215 = !DILocation(line: 1125, column: 25, scope: !8212)
!8216 = !DILocation(line: 1125, column: 13, scope: !8212)
!8217 = !DILocation(line: 1127, column: 3, scope: !8212)
!8218 = !DILocation(line: 1127, column: 10, scope: !8212)
!8219 = !DILocation(line: 1127, column: 15, scope: !8212)
!8220 = !DILocation(line: 1127, column: 26, scope: !8212)
!8221 = !DILocation(line: 1127, column: 24, scope: !8212)
!8222 = !DILocalVariable(name: "width", scope: !8223, file: !3, line: 1128, type: !1253)
!8223 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 1127, column: 35)
!8224 = !DILocation(line: 1128, column: 10, scope: !8223)
!8225 = !DILocation(line: 1131, column: 22, scope: !8223)
!8226 = !DILocation(line: 1131, column: 30, scope: !8223)
!8227 = !DILocation(line: 1131, column: 41, scope: !8223)
!8228 = !DILocation(line: 1131, column: 46, scope: !8223)
!8229 = !DILocation(line: 1131, column: 56, scope: !8223)
!8230 = !DILocation(line: 1131, column: 61, scope: !8223)
!8231 = !DILocation(line: 1131, column: 54, scope: !8223)
!8232 = !DILocation(line: 1131, column: 67, scope: !8223)
!8233 = !DILocation(line: 1131, column: 72, scope: !8223)
!8234 = !DILocation(line: 1131, column: 78, scope: !8223)
!8235 = !DILocation(line: 1131, column: 83, scope: !8223)
!8236 = !DILocation(line: 1131, column: 76, scope: !8223)
!8237 = !DILocation(line: 1131, column: 66, scope: !8223)
!8238 = !DILocation(line: 1131, column: 12, scope: !8223)
!8239 = !DILocation(line: 1131, column: 10, scope: !8223)
!8240 = !DILocation(line: 1134, column: 8, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1134, column: 8)
!8242 = !DILocation(line: 1134, column: 16, scope: !8241)
!8243 = !DILocation(line: 1134, column: 24, scope: !8241)
!8244 = !DILocation(line: 1134, column: 14, scope: !8241)
!8245 = !DILocation(line: 1134, column: 8, scope: !8223)
!8246 = !DILocation(line: 1135, column: 32, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 1134, column: 30)
!8248 = !DILocation(line: 1135, column: 37, scope: !8247)
!8249 = !DILocation(line: 1135, column: 42, scope: !8247)
!8250 = !DILocation(line: 1135, column: 5, scope: !8247)
!8251 = !DILocation(line: 1136, column: 4, scope: !8247)
!8252 = !DILocalVariable(name: "bytes", scope: !8253, file: !3, line: 1138, type: !1254)
!8253 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 1137, column: 9)
!8254 = !DILocation(line: 1138, column: 9, scope: !8253)
!8255 = !DILocation(line: 1140, column: 9, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 1140, column: 9)
!8257 = !DILocation(line: 1140, column: 15, scope: !8256)
!8258 = !DILocation(line: 1140, column: 20, scope: !8256)
!8259 = !DILocation(line: 1140, column: 23, scope: !8256)
!8260 = !DILocation(line: 1140, column: 28, scope: !8256)
!8261 = !DILocation(line: 1140, column: 32, scope: !8256)
!8262 = !DILocation(line: 1140, column: 9, scope: !8253)
!8263 = !DILocation(line: 1141, column: 33, scope: !8256)
!8264 = !DILocation(line: 1141, column: 38, scope: !8256)
!8265 = !DILocation(line: 1141, column: 43, scope: !8256)
!8266 = !DILocation(line: 1141, column: 6, scope: !8256)
!8267 = !DILocation(line: 1142, column: 59, scope: !8253)
!8268 = !DILocation(line: 1142, column: 64, scope: !8253)
!8269 = !DILocation(line: 1142, column: 73, scope: !8253)
!8270 = !DILocation(line: 1142, column: 78, scope: !8253)
!8271 = !DILocation(line: 1142, column: 88, scope: !8253)
!8272 = !DILocation(line: 1142, column: 86, scope: !8253)
!8273 = !DILocation(line: 1142, column: 31, scope: !8253)
!8274 = !DILocation(line: 1142, column: 13, scope: !8253)
!8275 = !DILocation(line: 1142, column: 11, scope: !8253)
!8276 = !DILocation(line: 1143, column: 9, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 1143, column: 9)
!8278 = !DILocation(line: 1143, column: 15, scope: !8277)
!8279 = !DILocation(line: 1143, column: 9, scope: !8253)
!8280 = !DILocation(line: 1144, column: 12, scope: !8277)
!8281 = !DILocation(line: 1144, column: 6, scope: !8277)
!8282 = !DILocation(line: 1145, column: 12, scope: !8253)
!8283 = !DILocation(line: 1145, column: 9, scope: !8253)
!8284 = !DILocation(line: 1148, column: 30, scope: !8223)
!8285 = !DILocation(line: 1148, column: 38, scope: !8223)
!8286 = !DILocation(line: 1148, column: 49, scope: !8223)
!8287 = !DILocation(line: 1148, column: 54, scope: !8223)
!8288 = !DILocation(line: 1148, column: 64, scope: !8223)
!8289 = !DILocation(line: 1148, column: 69, scope: !8223)
!8290 = !DILocation(line: 1148, column: 62, scope: !8223)
!8291 = !DILocation(line: 1148, column: 74, scope: !8223)
!8292 = !DILocation(line: 1148, column: 80, scope: !8223)
!8293 = !DILocation(line: 1148, column: 85, scope: !8223)
!8294 = !DILocation(line: 1148, column: 78, scope: !8223)
!8295 = !DILocation(line: 1148, column: 20, scope: !8223)
!8296 = !DILocation(line: 1148, column: 4, scope: !8223)
!8297 = !DILocation(line: 1148, column: 9, scope: !8223)
!8298 = !DILocation(line: 1148, column: 18, scope: !8223)
!8299 = !DILocation(line: 1150, column: 8, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1150, column: 8)
!8301 = !DILocation(line: 1150, column: 13, scope: !8300)
!8302 = !DILocation(line: 1150, column: 22, scope: !8300)
!8303 = !DILocation(line: 1150, column: 8, scope: !8223)
!8304 = !DILocation(line: 1150, column: 28, scope: !8300)
!8305 = distinct !{!8305, !8217, !8306}
!8306 = !DILocation(line: 1151, column: 3, scope: !8212)
!8307 = !DILocation(line: 1152, column: 2, scope: !8212)
!8308 = !DILocation(line: 1154, column: 6, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1154, column: 6)
!8310 = !DILocation(line: 1154, column: 14, scope: !8309)
!8311 = !DILocation(line: 1154, column: 22, scope: !8309)
!8312 = !DILocation(line: 1154, column: 6, scope: !8139)
!8313 = !DILocation(line: 1155, column: 15, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 1154, column: 28)
!8315 = !DILocation(line: 1155, column: 23, scope: !8314)
!8316 = !DILocation(line: 1155, column: 3, scope: !8314)
!8317 = !DILocation(line: 1156, column: 2, scope: !8314)
!8318 = !DILocation(line: 1157, column: 1, scope: !8139)
!8319 = distinct !DISubprogram(name: "ui_text_clip_right_label", scope: !3, file: !3, line: 1164, type: !8140, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!8320 = !DILocalVariable(name: "fstyle", arg: 1, scope: !8319, file: !3, line: 1164, type: !1970)
!8321 = !DILocation(line: 1164, column: 51, scope: !8319)
!8322 = !DILocalVariable(name: "but", arg: 2, scope: !8319, file: !3, line: 1164, type: !1464)
!8323 = !DILocation(line: 1164, column: 66, scope: !8319)
!8324 = !DILocalVariable(name: "rect", arg: 3, scope: !8319, file: !3, line: 1164, type: !2279)
!8325 = !DILocation(line: 1164, column: 83, scope: !8319)
!8326 = !DILocalVariable(name: "border", scope: !8319, file: !3, line: 1166, type: !2500)
!8327 = !DILocation(line: 1166, column: 12, scope: !8319)
!8328 = !DILocation(line: 1166, column: 21, scope: !8319)
!8329 = !DILocation(line: 1166, column: 41, scope: !8319)
!8330 = !DILocalVariable(name: "okwidth", scope: !8319, file: !3, line: 1167, type: !2500)
!8331 = !DILocation(line: 1167, column: 12, scope: !8319)
!8332 = !DILocation(line: 1167, column: 45, scope: !8319)
!8333 = !DILocation(line: 1167, column: 29, scope: !8319)
!8334 = !DILocation(line: 1167, column: 53, scope: !8319)
!8335 = !DILocation(line: 1167, column: 51, scope: !8319)
!8336 = !DILocation(line: 1167, column: 22, scope: !8319)
!8337 = !DILocalVariable(name: "cpoin", scope: !8319, file: !3, line: 1168, type: !1487)
!8338 = !DILocation(line: 1168, column: 8, scope: !8319)
!8339 = !DILocalVariable(name: "drawstr_len", scope: !8319, file: !3, line: 1169, type: !1254)
!8340 = !DILocation(line: 1169, column: 6, scope: !8319)
!8341 = !DILocation(line: 1169, column: 27, scope: !8319)
!8342 = !DILocation(line: 1169, column: 32, scope: !8319)
!8343 = !DILocation(line: 1169, column: 20, scope: !8319)
!8344 = !DILocalVariable(name: "cpend", scope: !8319, file: !3, line: 1170, type: !1547)
!8345 = !DILocation(line: 1170, column: 14, scope: !8319)
!8346 = !DILocation(line: 1170, column: 22, scope: !8319)
!8347 = !DILocation(line: 1170, column: 27, scope: !8319)
!8348 = !DILocation(line: 1170, column: 37, scope: !8319)
!8349 = !DILocation(line: 1170, column: 35, scope: !8319)
!8350 = !DILocation(line: 1173, column: 17, scope: !8319)
!8351 = !DILocation(line: 1173, column: 2, scope: !8319)
!8352 = !DILocation(line: 1175, column: 6, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1175, column: 6)
!8354 = !DILocation(line: 1175, column: 14, scope: !8353)
!8355 = !DILocation(line: 1175, column: 22, scope: !8353)
!8356 = !DILocation(line: 1175, column: 6, scope: !8319)
!8357 = !DILocation(line: 1176, column: 14, scope: !8353)
!8358 = !DILocation(line: 1176, column: 22, scope: !8353)
!8359 = !DILocation(line: 1176, column: 3, scope: !8353)
!8360 = !DILocation(line: 1178, column: 28, scope: !8319)
!8361 = !DILocation(line: 1178, column: 36, scope: !8319)
!8362 = !DILocation(line: 1178, column: 47, scope: !8319)
!8363 = !DILocation(line: 1178, column: 52, scope: !8319)
!8364 = !DILocation(line: 1178, column: 18, scope: !8319)
!8365 = !DILocation(line: 1178, column: 2, scope: !8319)
!8366 = !DILocation(line: 1178, column: 7, scope: !8319)
!8367 = !DILocation(line: 1178, column: 16, scope: !8319)
!8368 = !DILocation(line: 1179, column: 2, scope: !8319)
!8369 = !DILocation(line: 1179, column: 7, scope: !8319)
!8370 = !DILocation(line: 1179, column: 11, scope: !8319)
!8371 = !DILocation(line: 1189, column: 18, scope: !8319)
!8372 = !DILocation(line: 1189, column: 23, scope: !8319)
!8373 = !DILocation(line: 1189, column: 10, scope: !8319)
!8374 = !DILocation(line: 1189, column: 8, scope: !8319)
!8375 = !DILocation(line: 1191, column: 6, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1191, column: 6)
!8377 = !DILocation(line: 1191, column: 12, scope: !8376)
!8378 = !DILocation(line: 1191, column: 16, scope: !8376)
!8379 = !DILocation(line: 1191, column: 24, scope: !8376)
!8380 = !DILocation(line: 1191, column: 30, scope: !8376)
!8381 = !DILocation(line: 1191, column: 22, scope: !8376)
!8382 = !DILocation(line: 1191, column: 6, scope: !8319)
!8383 = !DILocalVariable(name: "cp2", scope: !8384, file: !3, line: 1192, type: !1487)
!8384 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 1191, column: 36)
!8385 = !DILocation(line: 1192, column: 9, scope: !8384)
!8386 = !DILocation(line: 1192, column: 15, scope: !8384)
!8387 = !DILocation(line: 1195, column: 3, scope: !8384)
!8388 = !DILocation(line: 1195, column: 10, scope: !8384)
!8389 = !DILocation(line: 1195, column: 15, scope: !8384)
!8390 = !DILocation(line: 1195, column: 26, scope: !8384)
!8391 = !DILocation(line: 1195, column: 24, scope: !8384)
!8392 = !DILocation(line: 1195, column: 34, scope: !8384)
!8393 = !DILocation(line: 1195, column: 37, scope: !8384)
!8394 = !DILocation(line: 1195, column: 43, scope: !8384)
!8395 = !DILocation(line: 1195, column: 48, scope: !8384)
!8396 = !DILocation(line: 1195, column: 41, scope: !8384)
!8397 = !DILocation(line: 0, scope: !8384)
!8398 = !DILocalVariable(name: "prev_utf8", scope: !8399, file: !3, line: 1196, type: !1547)
!8399 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1195, column: 57)
!8400 = !DILocation(line: 1196, column: 16, scope: !8399)
!8401 = !DILocation(line: 1196, column: 56, scope: !8399)
!8402 = !DILocation(line: 1196, column: 61, scope: !8399)
!8403 = !DILocation(line: 1196, column: 70, scope: !8399)
!8404 = !DILocation(line: 1196, column: 28, scope: !8399)
!8405 = !DILocalVariable(name: "bytes", scope: !8399, file: !3, line: 1197, type: !1254)
!8406 = !DILocation(line: 1197, column: 8, scope: !8399)
!8407 = !DILocation(line: 1197, column: 16, scope: !8399)
!8408 = !DILocation(line: 1197, column: 22, scope: !8399)
!8409 = !DILocation(line: 1197, column: 20, scope: !8399)
!8410 = !DILocation(line: 1200, column: 12, scope: !8399)
!8411 = !DILocation(line: 1200, column: 18, scope: !8399)
!8412 = !DILocation(line: 1200, column: 16, scope: !8399)
!8413 = !DILocation(line: 1200, column: 25, scope: !8399)
!8414 = !DILocation(line: 1200, column: 30, scope: !8399)
!8415 = !DILocation(line: 1200, column: 42, scope: !8399)
!8416 = !DILocation(line: 1200, column: 4, scope: !8399)
!8417 = !DILocation(line: 1201, column: 11, scope: !8399)
!8418 = !DILocation(line: 1201, column: 8, scope: !8399)
!8419 = !DILocation(line: 1203, column: 19, scope: !8399)
!8420 = !DILocation(line: 1203, column: 16, scope: !8399)
!8421 = !DILocation(line: 1206, column: 30, scope: !8399)
!8422 = !DILocation(line: 1206, column: 38, scope: !8399)
!8423 = !DILocation(line: 1206, column: 49, scope: !8399)
!8424 = !DILocation(line: 1206, column: 54, scope: !8399)
!8425 = !DILocation(line: 1206, column: 64, scope: !8399)
!8426 = !DILocation(line: 1206, column: 69, scope: !8399)
!8427 = !DILocation(line: 1206, column: 62, scope: !8399)
!8428 = !DILocation(line: 1206, column: 97, scope: !8399)
!8429 = !DILocation(line: 1206, column: 102, scope: !8399)
!8430 = !DILocation(line: 1206, column: 95, scope: !8399)
!8431 = !DILocation(line: 1206, column: 20, scope: !8399)
!8432 = !DILocation(line: 1206, column: 4, scope: !8399)
!8433 = !DILocation(line: 1206, column: 9, scope: !8399)
!8434 = !DILocation(line: 1206, column: 18, scope: !8399)
!8435 = !DILocation(line: 1207, column: 8, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1207, column: 8)
!8437 = !DILocation(line: 1207, column: 13, scope: !8436)
!8438 = !DILocation(line: 1207, column: 22, scope: !8436)
!8439 = !DILocation(line: 1207, column: 8, scope: !8399)
!8440 = !DILocation(line: 1207, column: 28, scope: !8436)
!8441 = distinct !{!8441, !8387, !8442}
!8442 = !DILocation(line: 1208, column: 3, scope: !8384)
!8443 = !DILocation(line: 1212, column: 3, scope: !8384)
!8444 = !DILocation(line: 1212, column: 11, scope: !8384)
!8445 = !DILocation(line: 1212, column: 16, scope: !8384)
!8446 = !DILocation(line: 1212, column: 27, scope: !8384)
!8447 = !DILocation(line: 1212, column: 25, scope: !8384)
!8448 = !DILocation(line: 1212, column: 36, scope: !8384)
!8449 = !DILocation(line: 1212, column: 40, scope: !8384)
!8450 = !DILocation(line: 1212, column: 45, scope: !8384)
!8451 = !DILocation(line: 1212, column: 49, scope: !8384)
!8452 = !DILocation(line: 1213, column: 31, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1212, column: 55)
!8454 = !DILocation(line: 1213, column: 36, scope: !8453)
!8455 = !DILocation(line: 1213, column: 41, scope: !8453)
!8456 = !DILocation(line: 1213, column: 4, scope: !8453)
!8457 = !DILocation(line: 1214, column: 30, scope: !8453)
!8458 = !DILocation(line: 1214, column: 38, scope: !8453)
!8459 = !DILocation(line: 1214, column: 49, scope: !8453)
!8460 = !DILocation(line: 1214, column: 54, scope: !8453)
!8461 = !DILocation(line: 1214, column: 64, scope: !8453)
!8462 = !DILocation(line: 1214, column: 69, scope: !8453)
!8463 = !DILocation(line: 1214, column: 62, scope: !8453)
!8464 = !DILocation(line: 1214, column: 97, scope: !8453)
!8465 = !DILocation(line: 1214, column: 102, scope: !8453)
!8466 = !DILocation(line: 1214, column: 95, scope: !8453)
!8467 = !DILocation(line: 1214, column: 20, scope: !8453)
!8468 = !DILocation(line: 1214, column: 4, scope: !8453)
!8469 = !DILocation(line: 1214, column: 9, scope: !8453)
!8470 = !DILocation(line: 1214, column: 18, scope: !8453)
!8471 = !DILocation(line: 1215, column: 8, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 1215, column: 8)
!8473 = !DILocation(line: 1215, column: 13, scope: !8472)
!8474 = !DILocation(line: 1215, column: 22, scope: !8472)
!8475 = !DILocation(line: 1215, column: 8, scope: !8453)
!8476 = !DILocation(line: 1215, column: 28, scope: !8472)
!8477 = distinct !{!8477, !8443, !8478}
!8478 = !DILocation(line: 1216, column: 3, scope: !8384)
!8479 = !DILocation(line: 1218, column: 2, scope: !8384)
!8480 = !DILocation(line: 1223, column: 6, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1223, column: 6)
!8482 = !DILocation(line: 1223, column: 11, scope: !8481)
!8483 = !DILocation(line: 1223, column: 22, scope: !8481)
!8484 = !DILocation(line: 1223, column: 20, scope: !8481)
!8485 = !DILocation(line: 1223, column: 6, scope: !8319)
!8486 = !DILocalVariable(name: "strwidth", scope: !8487, file: !3, line: 1224, type: !1253)
!8487 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 1223, column: 31)
!8488 = !DILocation(line: 1224, column: 9, scope: !8487)
!8489 = !DILocation(line: 1225, column: 37, scope: !8487)
!8490 = !DILocation(line: 1225, column: 45, scope: !8487)
!8491 = !DILocation(line: 1225, column: 56, scope: !8487)
!8492 = !DILocation(line: 1225, column: 61, scope: !8487)
!8493 = !DILocation(line: 1225, column: 71, scope: !8487)
!8494 = !DILocation(line: 1225, column: 76, scope: !8487)
!8495 = !DILocation(line: 1225, column: 69, scope: !8487)
!8496 = !DILocation(line: 1226, column: 37, scope: !8487)
!8497 = !DILocation(line: 1226, column: 51, scope: !8487)
!8498 = !DILocation(line: 1226, column: 56, scope: !8487)
!8499 = !DILocation(line: 1226, column: 49, scope: !8487)
!8500 = !DILocation(line: 1226, column: 61, scope: !8487)
!8501 = !DILocation(line: 1225, column: 17, scope: !8487)
!8502 = !DILocation(line: 1226, column: 83, scope: !8487)
!8503 = !DILocation(line: 1226, column: 88, scope: !8487)
!8504 = !DILocation(line: 1226, column: 81, scope: !8487)
!8505 = !DILocation(line: 1225, column: 15, scope: !8487)
!8506 = !DILocation(line: 1227, column: 19, scope: !8487)
!8507 = !DILocation(line: 1227, column: 3, scope: !8487)
!8508 = !DILocation(line: 1227, column: 8, scope: !8487)
!8509 = !DILocation(line: 1227, column: 17, scope: !8487)
!8510 = !DILocation(line: 1228, column: 3, scope: !8487)
!8511 = !DILocation(line: 1228, column: 8, scope: !8487)
!8512 = !DILocation(line: 1228, column: 16, scope: !8487)
!8513 = !DILocation(line: 1228, column: 29, scope: !8487)
!8514 = !DILocation(line: 1229, column: 2, scope: !8487)
!8515 = !DILocation(line: 1231, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1231, column: 6)
!8517 = !DILocation(line: 1231, column: 14, scope: !8516)
!8518 = !DILocation(line: 1231, column: 22, scope: !8516)
!8519 = !DILocation(line: 1231, column: 6, scope: !8319)
!8520 = !DILocation(line: 1232, column: 15, scope: !8516)
!8521 = !DILocation(line: 1232, column: 23, scope: !8516)
!8522 = !DILocation(line: 1232, column: 3, scope: !8516)
!8523 = !DILocation(line: 1233, column: 1, scope: !8319)
!8524 = distinct !DISubprogram(name: "ui_text_clip_middle_protect_right", scope: !3, file: !3, line: 1087, type: !8525, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{null, !1970, !1464, !2279, !1547}
!8527 = !DILocalVariable(name: "fstyle", arg: 1, scope: !8524, file: !3, line: 1087, type: !1970)
!8528 = !DILocation(line: 1087, column: 60, scope: !8524)
!8529 = !DILocalVariable(name: "but", arg: 2, scope: !8524, file: !3, line: 1087, type: !1464)
!8530 = !DILocation(line: 1087, column: 75, scope: !8524)
!8531 = !DILocalVariable(name: "rect", arg: 3, scope: !8524, file: !3, line: 1087, type: !2279)
!8532 = !DILocation(line: 1087, column: 92, scope: !8524)
!8533 = !DILocalVariable(name: "rsep", arg: 4, scope: !8524, file: !3, line: 1087, type: !1547)
!8534 = !DILocation(line: 1087, column: 110, scope: !8524)
!8535 = !DILocalVariable(name: "border", scope: !8524, file: !3, line: 1090, type: !2500)
!8536 = !DILocation(line: 1090, column: 12, scope: !8524)
!8537 = !DILocation(line: 1090, column: 21, scope: !8524)
!8538 = !DILocation(line: 1090, column: 62, scope: !8524)
!8539 = !DILocation(line: 1090, column: 82, scope: !8524)
!8540 = !DILocation(line: 1090, column: 56, scope: !8524)
!8541 = !DILocalVariable(name: "okwidth", scope: !8524, file: !3, line: 1091, type: !1410)
!8542 = !DILocation(line: 1091, column: 14, scope: !8524)
!8543 = !DILocation(line: 1091, column: 54, scope: !8524)
!8544 = !DILocation(line: 1091, column: 38, scope: !8524)
!8545 = !DILocation(line: 1091, column: 62, scope: !8524)
!8546 = !DILocation(line: 1091, column: 60, scope: !8524)
!8547 = !DILocation(line: 1091, column: 31, scope: !8524)
!8548 = !DILocation(line: 1091, column: 24, scope: !8524)
!8549 = !DILocalVariable(name: "max_len", scope: !8524, file: !3, line: 1092, type: !6389)
!8550 = !DILocation(line: 1092, column: 15, scope: !8524)
!8551 = !DILocalVariable(name: "minwidth", scope: !8524, file: !3, line: 1093, type: !1410)
!8552 = !DILocation(line: 1093, column: 14, scope: !8524)
!8553 = !DILocation(line: 1093, column: 33, scope: !8524)
!8554 = !DILocation(line: 1093, column: 53, scope: !8524)
!8555 = !DILocation(line: 1093, column: 58, scope: !8524)
!8556 = !DILocation(line: 1093, column: 65, scope: !8524)
!8557 = !DILocation(line: 1093, column: 51, scope: !8524)
!8558 = !DILocation(line: 1093, column: 72, scope: !8524)
!8559 = !DILocation(line: 1095, column: 2, scope: !8524)
!8560 = !DILocation(line: 1095, column: 7, scope: !8524)
!8561 = !DILocation(line: 1095, column: 11, scope: !8524)
!8562 = !DILocation(line: 1096, column: 41, scope: !8524)
!8563 = !DILocation(line: 1096, column: 49, scope: !8524)
!8564 = !DILocation(line: 1096, column: 54, scope: !8524)
!8565 = !DILocation(line: 1096, column: 63, scope: !8524)
!8566 = !DILocation(line: 1096, column: 72, scope: !8524)
!8567 = !DILocation(line: 1096, column: 91, scope: !8524)
!8568 = !DILocation(line: 1096, column: 18, scope: !8524)
!8569 = !DILocation(line: 1096, column: 2, scope: !8524)
!8570 = !DILocation(line: 1096, column: 7, scope: !8524)
!8571 = !DILocation(line: 1096, column: 16, scope: !8524)
!8572 = !DILocation(line: 1097, column: 1, scope: !8524)
!8573 = distinct !DISubprogram(name: "ui_text_clip_middle", scope: !3, file: !3, line: 1071, type: !8140, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!8574 = !DILocalVariable(name: "fstyle", arg: 1, scope: !8573, file: !3, line: 1071, type: !1970)
!8575 = !DILocation(line: 1071, column: 46, scope: !8573)
!8576 = !DILocalVariable(name: "but", arg: 2, scope: !8573, file: !3, line: 1071, type: !1464)
!8577 = !DILocation(line: 1071, column: 61, scope: !8573)
!8578 = !DILocalVariable(name: "rect", arg: 3, scope: !8573, file: !3, line: 1071, type: !2279)
!8579 = !DILocation(line: 1071, column: 78, scope: !8573)
!8580 = !DILocalVariable(name: "border", scope: !8573, file: !3, line: 1074, type: !2500)
!8581 = !DILocation(line: 1074, column: 12, scope: !8573)
!8582 = !DILocation(line: 1074, column: 21, scope: !8573)
!8583 = !DILocation(line: 1074, column: 62, scope: !8573)
!8584 = !DILocation(line: 1074, column: 82, scope: !8573)
!8585 = !DILocation(line: 1074, column: 56, scope: !8573)
!8586 = !DILocalVariable(name: "okwidth", scope: !8573, file: !3, line: 1075, type: !1410)
!8587 = !DILocation(line: 1075, column: 14, scope: !8573)
!8588 = !DILocation(line: 1075, column: 54, scope: !8573)
!8589 = !DILocation(line: 1075, column: 38, scope: !8573)
!8590 = !DILocation(line: 1075, column: 62, scope: !8573)
!8591 = !DILocation(line: 1075, column: 60, scope: !8573)
!8592 = !DILocation(line: 1075, column: 31, scope: !8573)
!8593 = !DILocation(line: 1075, column: 24, scope: !8573)
!8594 = !DILocalVariable(name: "max_len", scope: !8573, file: !3, line: 1076, type: !6389)
!8595 = !DILocation(line: 1076, column: 15, scope: !8573)
!8596 = !DILocalVariable(name: "minwidth", scope: !8573, file: !3, line: 1077, type: !1410)
!8597 = !DILocation(line: 1077, column: 14, scope: !8573)
!8598 = !DILocation(line: 1077, column: 33, scope: !8573)
!8599 = !DILocation(line: 1077, column: 53, scope: !8573)
!8600 = !DILocation(line: 1077, column: 58, scope: !8573)
!8601 = !DILocation(line: 1077, column: 65, scope: !8573)
!8602 = !DILocation(line: 1077, column: 51, scope: !8573)
!8603 = !DILocation(line: 1077, column: 72, scope: !8573)
!8604 = !DILocation(line: 1079, column: 2, scope: !8573)
!8605 = !DILocation(line: 1079, column: 7, scope: !8573)
!8606 = !DILocation(line: 1079, column: 11, scope: !8573)
!8607 = !DILocation(line: 1080, column: 41, scope: !8573)
!8608 = !DILocation(line: 1080, column: 49, scope: !8573)
!8609 = !DILocation(line: 1080, column: 54, scope: !8573)
!8610 = !DILocation(line: 1080, column: 63, scope: !8573)
!8611 = !DILocation(line: 1080, column: 72, scope: !8573)
!8612 = !DILocation(line: 1080, column: 18, scope: !8573)
!8613 = !DILocation(line: 1080, column: 2, scope: !8573)
!8614 = !DILocation(line: 1080, column: 7, scope: !8573)
!8615 = !DILocation(line: 1080, column: 16, scope: !8573)
!8616 = !DILocation(line: 1081, column: 1, scope: !8573)
!8617 = distinct !DISubprogram(name: "widget_draw_text", scope: !3, file: !3, line: 1235, type: !1968, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!8618 = !DILocalVariable(name: "fstyle", arg: 1, scope: !8617, file: !3, line: 1235, type: !1970)
!8619 = !DILocation(line: 1235, column: 43, scope: !8617)
!8620 = !DILocalVariable(name: "wcol", arg: 2, scope: !8617, file: !3, line: 1235, type: !1436)
!8621 = !DILocation(line: 1235, column: 67, scope: !8617)
!8622 = !DILocalVariable(name: "but", arg: 3, scope: !8617, file: !3, line: 1235, type: !1464)
!8623 = !DILocation(line: 1235, column: 80, scope: !8617)
!8624 = !DILocalVariable(name: "rect", arg: 4, scope: !8617, file: !3, line: 1235, type: !1451)
!8625 = !DILocation(line: 1235, column: 91, scope: !8617)
!8626 = !DILocalVariable(name: "drawstr_left_len", scope: !8617, file: !3, line: 1237, type: !1254)
!8627 = !DILocation(line: 1237, column: 6, scope: !8617)
!8628 = !DILocalVariable(name: "drawstr", scope: !8617, file: !3, line: 1238, type: !1547)
!8629 = !DILocation(line: 1238, column: 14, scope: !8617)
!8630 = !DILocation(line: 1238, column: 24, scope: !8617)
!8631 = !DILocation(line: 1238, column: 29, scope: !8617)
!8632 = !DILocalVariable(name: "drawstr_right", scope: !8617, file: !3, line: 1239, type: !1547)
!8633 = !DILocation(line: 1239, column: 14, scope: !8617)
!8634 = !DILocalVariable(name: "use_right_only", scope: !8617, file: !3, line: 1240, type: !1256)
!8635 = !DILocation(line: 1240, column: 7, scope: !8617)
!8636 = !DILocation(line: 1242, column: 17, scope: !8617)
!8637 = !DILocation(line: 1242, column: 2, scope: !8617)
!8638 = !DILocation(line: 1244, column: 6, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1244, column: 6)
!8640 = !DILocation(line: 1244, column: 11, scope: !8639)
!8641 = !DILocation(line: 1244, column: 19, scope: !8639)
!8642 = !DILocation(line: 1244, column: 23, scope: !8639)
!8643 = !DILocation(line: 1244, column: 28, scope: !8639)
!8644 = !DILocation(line: 1244, column: 37, scope: !8639)
!8645 = !DILocation(line: 1244, column: 6, scope: !8617)
!8646 = !DILocation(line: 1245, column: 3, scope: !8639)
!8647 = !DILocation(line: 1245, column: 11, scope: !8639)
!8648 = !DILocation(line: 1245, column: 17, scope: !8639)
!8649 = !DILocation(line: 1246, column: 11, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1246, column: 11)
!8651 = !DILocation(line: 1246, column: 16, scope: !8650)
!8652 = !DILocation(line: 1246, column: 25, scope: !8650)
!8653 = !DILocation(line: 1246, column: 11, scope: !8639)
!8654 = !DILocation(line: 1247, column: 3, scope: !8650)
!8655 = !DILocation(line: 1247, column: 11, scope: !8650)
!8656 = !DILocation(line: 1247, column: 17, scope: !8650)
!8657 = !DILocation(line: 1249, column: 3, scope: !8650)
!8658 = !DILocation(line: 1249, column: 11, scope: !8650)
!8659 = !DILocation(line: 1249, column: 17, scope: !8650)
!8660 = !DILocation(line: 1251, column: 6, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1251, column: 6)
!8662 = !DILocation(line: 1251, column: 14, scope: !8661)
!8663 = !DILocation(line: 1251, column: 22, scope: !8661)
!8664 = !DILocation(line: 1251, column: 6, scope: !8617)
!8665 = !DILocation(line: 1252, column: 14, scope: !8661)
!8666 = !DILocation(line: 1252, column: 22, scope: !8661)
!8667 = !DILocation(line: 1252, column: 3, scope: !8661)
!8668 = !DILocation(line: 1257, column: 6, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1257, column: 6)
!8670 = !DILocation(line: 1257, column: 6, scope: !8617)
!8671 = !DILocalVariable(name: "but_edit", scope: !8672, file: !3, line: 1258, type: !1464)
!8672 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 1257, column: 47)
!8673 = !DILocation(line: 1258, column: 10, scope: !8672)
!8674 = !DILocation(line: 1258, column: 48, scope: !8672)
!8675 = !DILocation(line: 1258, column: 21, scope: !8672)
!8676 = !DILocation(line: 1259, column: 7, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1259, column: 7)
!8678 = !DILocation(line: 1259, column: 7, scope: !8672)
!8679 = !DILocation(line: 1260, column: 14, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 1259, column: 17)
!8681 = !DILocation(line: 1260, column: 24, scope: !8680)
!8682 = !DILocation(line: 1260, column: 12, scope: !8680)
!8683 = !DILocation(line: 1261, column: 4, scope: !8680)
!8684 = !DILocation(line: 1261, column: 12, scope: !8680)
!8685 = !DILocation(line: 1261, column: 18, scope: !8680)
!8686 = !DILocation(line: 1262, column: 3, scope: !8680)
!8687 = !DILocation(line: 1263, column: 2, scope: !8672)
!8688 = !DILocation(line: 1265, column: 7, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1265, column: 7)
!8690 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 1264, column: 7)
!8691 = !DILocation(line: 1265, column: 12, scope: !8689)
!8692 = !DILocation(line: 1265, column: 7, scope: !8690)
!8693 = !DILocation(line: 1268, column: 21, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 1265, column: 21)
!8695 = !DILocation(line: 1269, column: 14, scope: !8694)
!8696 = !DILocation(line: 1269, column: 19, scope: !8694)
!8697 = !DILocation(line: 1269, column: 12, scope: !8694)
!8698 = !DILocation(line: 1270, column: 3, scope: !8694)
!8699 = !DILocation(line: 1275, column: 6, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1275, column: 6)
!8701 = !DILocation(line: 1275, column: 11, scope: !8700)
!8702 = !DILocation(line: 1275, column: 19, scope: !8700)
!8703 = !DILocation(line: 1275, column: 22, scope: !8700)
!8704 = !DILocation(line: 1275, column: 27, scope: !8700)
!8705 = !DILocation(line: 1275, column: 31, scope: !8700)
!8706 = !DILocation(line: 1275, column: 6, scope: !8617)
!8707 = !DILocation(line: 1278, column: 8, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1278, column: 7)
!8709 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1275, column: 38)
!8710 = !DILocation(line: 1278, column: 13, scope: !8708)
!8711 = !DILocation(line: 1278, column: 22, scope: !8708)
!8712 = !DILocation(line: 1278, column: 27, scope: !8708)
!8713 = !DILocation(line: 1278, column: 20, scope: !8708)
!8714 = !DILocation(line: 1278, column: 35, scope: !8708)
!8715 = !DILocation(line: 1278, column: 7, scope: !8709)
!8716 = !DILocalVariable(name: "selsta_draw", scope: !8717, file: !3, line: 1279, type: !1254)
!8717 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 1278, column: 40)
!8718 = !DILocation(line: 1279, column: 8, scope: !8717)
!8719 = !DILocalVariable(name: "selwidth_draw", scope: !8717, file: !3, line: 1279, type: !1254)
!8720 = !DILocation(line: 1279, column: 21, scope: !8717)
!8721 = !DILocation(line: 1281, column: 8, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 1281, column: 8)
!8723 = !DILocation(line: 1281, column: 19, scope: !8722)
!8724 = !DILocation(line: 1281, column: 8, scope: !8717)
!8725 = !DILocation(line: 1283, column: 9, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 1283, column: 9)
!8727 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 1281, column: 25)
!8728 = !DILocation(line: 1283, column: 14, scope: !8726)
!8729 = !DILocation(line: 1283, column: 24, scope: !8726)
!8730 = !DILocation(line: 1283, column: 29, scope: !8726)
!8731 = !DILocation(line: 1283, column: 21, scope: !8726)
!8732 = !DILocation(line: 1283, column: 9, scope: !8727)
!8733 = !DILocation(line: 1284, column: 30, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 1283, column: 34)
!8735 = !DILocation(line: 1284, column: 38, scope: !8734)
!8736 = !DILocation(line: 1284, column: 49, scope: !8734)
!8737 = !DILocation(line: 1284, column: 59, scope: !8734)
!8738 = !DILocation(line: 1284, column: 64, scope: !8734)
!8739 = !DILocation(line: 1284, column: 57, scope: !8734)
!8740 = !DILocation(line: 1284, column: 69, scope: !8734)
!8741 = !DILocation(line: 1284, column: 74, scope: !8734)
!8742 = !DILocation(line: 1284, column: 83, scope: !8734)
!8743 = !DILocation(line: 1284, column: 88, scope: !8734)
!8744 = !DILocation(line: 1284, column: 81, scope: !8734)
!8745 = !DILocation(line: 1284, column: 20, scope: !8734)
!8746 = !DILocation(line: 1284, column: 18, scope: !8734)
!8747 = !DILocation(line: 1285, column: 5, scope: !8734)
!8748 = !DILocation(line: 1287, column: 18, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 1286, column: 10)
!8750 = !DILocation(line: 1290, column: 31, scope: !8727)
!8751 = !DILocation(line: 1290, column: 39, scope: !8727)
!8752 = !DILocation(line: 1290, column: 50, scope: !8727)
!8753 = !DILocation(line: 1290, column: 60, scope: !8727)
!8754 = !DILocation(line: 1290, column: 65, scope: !8727)
!8755 = !DILocation(line: 1290, column: 58, scope: !8727)
!8756 = !DILocation(line: 1290, column: 70, scope: !8727)
!8757 = !DILocation(line: 1290, column: 75, scope: !8727)
!8758 = !DILocation(line: 1290, column: 84, scope: !8727)
!8759 = !DILocation(line: 1290, column: 89, scope: !8727)
!8760 = !DILocation(line: 1290, column: 82, scope: !8727)
!8761 = !DILocation(line: 1290, column: 21, scope: !8727)
!8762 = !DILocation(line: 1290, column: 19, scope: !8727)
!8763 = !DILocation(line: 1292, column: 34, scope: !8727)
!8764 = !DILocation(line: 1292, column: 40, scope: !8727)
!8765 = !DILocation(line: 1292, column: 5, scope: !8727)
!8766 = !DILocation(line: 1293, column: 13, scope: !8727)
!8767 = !DILocation(line: 1293, column: 19, scope: !8727)
!8768 = !DILocation(line: 1293, column: 26, scope: !8727)
!8769 = !DILocation(line: 1293, column: 24, scope: !8727)
!8770 = !DILocation(line: 1294, column: 13, scope: !8727)
!8771 = !DILocation(line: 1294, column: 19, scope: !8727)
!8772 = !DILocation(line: 1294, column: 24, scope: !8727)
!8773 = !DILocation(line: 1295, column: 20, scope: !8727)
!8774 = !DILocation(line: 1295, column: 26, scope: !8727)
!8775 = !DILocation(line: 1295, column: 33, scope: !8727)
!8776 = !DILocation(line: 1295, column: 31, scope: !8727)
!8777 = !DILocation(line: 1295, column: 48, scope: !8727)
!8778 = !DILocation(line: 1295, column: 54, scope: !8727)
!8779 = !DILocation(line: 1295, column: 59, scope: !8727)
!8780 = !DILocation(line: 1295, column: 13, scope: !8727)
!8781 = !DILocation(line: 1296, column: 13, scope: !8727)
!8782 = !DILocation(line: 1296, column: 19, scope: !8727)
!8783 = !DILocation(line: 1296, column: 24, scope: !8727)
!8784 = !DILocation(line: 1293, column: 5, scope: !8727)
!8785 = !DILocation(line: 1297, column: 4, scope: !8727)
!8786 = !DILocation(line: 1298, column: 3, scope: !8717)
!8787 = !DILocation(line: 1301, column: 7, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1301, column: 7)
!8789 = !DILocation(line: 1301, column: 12, scope: !8788)
!8790 = !DILocation(line: 1301, column: 19, scope: !8788)
!8791 = !DILocation(line: 1301, column: 24, scope: !8788)
!8792 = !DILocation(line: 1301, column: 16, scope: !8788)
!8793 = !DILocation(line: 1301, column: 7, scope: !8709)
!8794 = !DILocalVariable(name: "t", scope: !8795, file: !3, line: 1302, type: !1254)
!8795 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 1301, column: 29)
!8796 = !DILocation(line: 1302, column: 8, scope: !8795)
!8797 = !DILocation(line: 1303, column: 8, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1303, column: 8)
!8799 = !DILocation(line: 1303, column: 19, scope: !8798)
!8800 = !DILocation(line: 1303, column: 8, scope: !8795)
!8801 = !DILocation(line: 1304, column: 19, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 1303, column: 25)
!8803 = !DILocation(line: 1304, column: 27, scope: !8802)
!8804 = !DILocation(line: 1304, column: 38, scope: !8802)
!8805 = !DILocation(line: 1304, column: 48, scope: !8802)
!8806 = !DILocation(line: 1304, column: 53, scope: !8802)
!8807 = !DILocation(line: 1304, column: 46, scope: !8802)
!8808 = !DILocation(line: 1304, column: 58, scope: !8802)
!8809 = !DILocation(line: 1304, column: 63, scope: !8802)
!8810 = !DILocation(line: 1304, column: 69, scope: !8802)
!8811 = !DILocation(line: 1304, column: 74, scope: !8802)
!8812 = !DILocation(line: 1304, column: 67, scope: !8802)
!8813 = !DILocation(line: 1304, column: 9, scope: !8802)
!8814 = !DILocation(line: 1304, column: 7, scope: !8802)
!8815 = !DILocation(line: 1305, column: 4, scope: !8802)
!8816 = !DILocation(line: 1307, column: 7, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 1306, column: 9)
!8818 = !DILocation(line: 1310, column: 4, scope: !8795)
!8819 = !DILocation(line: 1311, column: 12, scope: !8795)
!8820 = !DILocation(line: 1311, column: 18, scope: !8795)
!8821 = !DILocation(line: 1311, column: 25, scope: !8795)
!8822 = !DILocation(line: 1311, column: 23, scope: !8795)
!8823 = !DILocation(line: 1311, column: 28, scope: !8795)
!8824 = !DILocation(line: 1311, column: 34, scope: !8795)
!8825 = !DILocation(line: 1311, column: 39, scope: !8795)
!8826 = !DILocation(line: 1311, column: 44, scope: !8795)
!8827 = !DILocation(line: 1311, column: 50, scope: !8795)
!8828 = !DILocation(line: 1311, column: 57, scope: !8795)
!8829 = !DILocation(line: 1311, column: 55, scope: !8795)
!8830 = !DILocation(line: 1311, column: 59, scope: !8795)
!8831 = !DILocation(line: 1311, column: 64, scope: !8795)
!8832 = !DILocation(line: 1311, column: 70, scope: !8795)
!8833 = !DILocation(line: 1311, column: 75, scope: !8795)
!8834 = !DILocation(line: 1311, column: 4, scope: !8795)
!8835 = !DILocation(line: 1312, column: 3, scope: !8795)
!8836 = !DILocation(line: 1313, column: 2, scope: !8709)
!8837 = !DILocation(line: 1315, column: 6, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1315, column: 6)
!8839 = !DILocation(line: 1315, column: 14, scope: !8838)
!8840 = !DILocation(line: 1315, column: 22, scope: !8838)
!8841 = !DILocation(line: 1315, column: 6, scope: !8617)
!8842 = !DILocation(line: 1316, column: 15, scope: !8838)
!8843 = !DILocation(line: 1316, column: 23, scope: !8838)
!8844 = !DILocation(line: 1316, column: 3, scope: !8838)
!8845 = !DILocation(line: 1324, column: 7, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1324, column: 6)
!8847 = !DILocation(line: 1324, column: 12, scope: !8846)
!8848 = !DILocation(line: 1324, column: 19, scope: !8846)
!8849 = !DILocation(line: 1324, column: 24, scope: !8846)
!8850 = !DILocation(line: 1324, column: 41, scope: !8846)
!8851 = !DILocation(line: 1325, column: 7, scope: !8846)
!8852 = !DILocation(line: 1325, column: 12, scope: !8846)
!8853 = !DILocation(line: 1325, column: 20, scope: !8846)
!8854 = !DILocation(line: 1324, column: 6, scope: !8617)
!8855 = !DILocation(line: 1327, column: 7, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 1327, column: 7)
!8857 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 1326, column: 2)
!8858 = !DILocation(line: 1327, column: 12, scope: !8856)
!8859 = !DILocation(line: 1327, column: 17, scope: !8856)
!8860 = !DILocation(line: 1327, column: 7, scope: !8857)
!8861 = !DILocation(line: 1328, column: 28, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 1327, column: 40)
!8863 = !DILocation(line: 1328, column: 20, scope: !8862)
!8864 = !DILocation(line: 1328, column: 18, scope: !8862)
!8865 = !DILocation(line: 1329, column: 8, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 1329, column: 8)
!8867 = !DILocation(line: 1329, column: 8, scope: !8862)
!8868 = !DILocation(line: 1330, column: 25, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 1329, column: 23)
!8870 = !DILocation(line: 1330, column: 41, scope: !8869)
!8871 = !DILocation(line: 1330, column: 39, scope: !8869)
!8872 = !DILocation(line: 1330, column: 24, scope: !8869)
!8873 = !DILocation(line: 1330, column: 22, scope: !8869)
!8874 = !DILocation(line: 1331, column: 18, scope: !8869)
!8875 = !DILocation(line: 1332, column: 4, scope: !8869)
!8876 = !DILocation(line: 1333, column: 3, scope: !8862)
!8877 = !DILocation(line: 1334, column: 2, scope: !8857)
!8878 = !DILocation(line: 1337, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1337, column: 6)
!8880 = !DILocation(line: 1337, column: 21, scope: !8879)
!8881 = !DILocation(line: 1337, column: 24, scope: !8879)
!8882 = !DILocation(line: 1337, column: 53, scope: !8879)
!8883 = !DILocation(line: 1339, column: 7, scope: !8879)
!8884 = !DILocation(line: 1339, column: 12, scope: !8879)
!8885 = !DILocation(line: 1339, column: 20, scope: !8879)
!8886 = !DILocation(line: 1339, column: 29, scope: !8879)
!8887 = !DILocation(line: 1339, column: 33, scope: !8879)
!8888 = !DILocation(line: 1339, column: 44, scope: !8879)
!8889 = !DILocation(line: 1339, column: 49, scope: !8879)
!8890 = !DILocation(line: 1339, column: 41, scope: !8879)
!8891 = !DILocation(line: 1337, column: 6, scope: !8617)
!8892 = !DILocation(line: 1341, column: 26, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1340, column: 2)
!8894 = !DILocation(line: 1341, column: 36, scope: !8893)
!8895 = !DILocation(line: 1341, column: 41, scope: !8893)
!8896 = !DILocation(line: 1341, column: 34, scope: !8893)
!8897 = !DILocation(line: 1341, column: 19, scope: !8893)
!8898 = !DILocation(line: 1341, column: 17, scope: !8893)
!8899 = !DILocation(line: 1342, column: 7, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 1342, column: 7)
!8901 = !DILocation(line: 1342, column: 7, scope: !8893)
!8902 = !DILocation(line: 1343, column: 17, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 1342, column: 22)
!8904 = !DILocation(line: 1344, column: 24, scope: !8903)
!8905 = !DILocation(line: 1344, column: 40, scope: !8903)
!8906 = !DILocation(line: 1344, column: 38, scope: !8903)
!8907 = !DILocation(line: 1344, column: 23, scope: !8903)
!8908 = !DILocation(line: 1344, column: 21, scope: !8903)
!8909 = !DILocation(line: 1346, column: 4, scope: !8903)
!8910 = !DILocation(line: 1346, column: 12, scope: !8903)
!8911 = !DILocation(line: 1346, column: 11, scope: !8903)
!8912 = !DILocation(line: 1346, column: 26, scope: !8903)
!8913 = !DILocation(line: 1347, column: 18, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 1346, column: 34)
!8915 = distinct !{!8915, !8909, !8916}
!8916 = !DILocation(line: 1348, column: 4, scope: !8903)
!8917 = !DILocation(line: 1349, column: 3, scope: !8903)
!8918 = !DILocation(line: 1352, column: 20, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 1350, column: 8)
!8920 = !DILocation(line: 1352, column: 30, scope: !8919)
!8921 = !DILocation(line: 1352, column: 35, scope: !8919)
!8922 = !DILocation(line: 1352, column: 28, scope: !8919)
!8923 = !DILocation(line: 1352, column: 18, scope: !8919)
!8924 = !DILocation(line: 1353, column: 19, scope: !8919)
!8925 = !DILocation(line: 1355, column: 2, scope: !8893)
!8926 = !DILocation(line: 1358, column: 31, scope: !8617)
!8927 = !DILocation(line: 1358, column: 37, scope: !8617)
!8928 = !DILocation(line: 1358, column: 2, scope: !8617)
!8929 = !DILocation(line: 1360, column: 7, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1360, column: 6)
!8931 = !DILocation(line: 1360, column: 6, scope: !8617)
!8932 = !DILocalVariable(name: "font_xofs", scope: !8933, file: !3, line: 1362, type: !1253)
!8933 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1360, column: 23)
!8934 = !DILocation(line: 1362, column: 9, scope: !8933)
!8935 = !DILocalVariable(name: "font_yofs", scope: !8933, file: !3, line: 1362, type: !1253)
!8936 = !DILocation(line: 1362, column: 20, scope: !8933)
!8937 = !DILocation(line: 1364, column: 22, scope: !8933)
!8938 = !DILocation(line: 1364, column: 30, scope: !8933)
!8939 = !DILocation(line: 1364, column: 36, scope: !8933)
!8940 = !DILocation(line: 1364, column: 46, scope: !8933)
!8941 = !DILocation(line: 1364, column: 51, scope: !8933)
!8942 = !DILocation(line: 1364, column: 44, scope: !8933)
!8943 = !DILocation(line: 1365, column: 22, scope: !8933)
!8944 = !DILocation(line: 1365, column: 41, scope: !8933)
!8945 = !DILocation(line: 1365, column: 46, scope: !8933)
!8946 = !DILocation(line: 1365, column: 39, scope: !8933)
!8947 = !DILocation(line: 1364, column: 3, scope: !8933)
!8948 = !DILocation(line: 1367, column: 7, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1367, column: 7)
!8950 = !DILocation(line: 1367, column: 12, scope: !8949)
!8951 = !DILocation(line: 1367, column: 21, scope: !8949)
!8952 = !DILocation(line: 1367, column: 7, scope: !8933)
!8953 = !DILocalVariable(name: "fixedbuf", scope: !8954, file: !3, line: 1368, type: !1489)
!8954 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 1367, column: 30)
!8955 = !DILocation(line: 1368, column: 9, scope: !8954)
!8956 = !DILocalVariable(name: "str", scope: !8954, file: !3, line: 1369, type: !1547)
!8957 = !DILocation(line: 1369, column: 16, scope: !8954)
!8958 = !DILocation(line: 1371, column: 16, scope: !8954)
!8959 = !DILocation(line: 1371, column: 26, scope: !8954)
!8960 = !DILocation(line: 1371, column: 36, scope: !8954)
!8961 = !DILocation(line: 1371, column: 41, scope: !8954)
!8962 = !DILocation(line: 1371, column: 34, scope: !8954)
!8963 = !DILocation(line: 1371, column: 71, scope: !8954)
!8964 = !DILocation(line: 1371, column: 46, scope: !8954)
!8965 = !DILocation(line: 1371, column: 4, scope: !8954)
!8966 = !DILocation(line: 1373, column: 17, scope: !8954)
!8967 = !DILocation(line: 1373, column: 27, scope: !8954)
!8968 = !DILocation(line: 1373, column: 32, scope: !8954)
!8969 = !DILocation(line: 1373, column: 41, scope: !8954)
!8970 = !DILocation(line: 1373, column: 10, scope: !8954)
!8971 = !DILocation(line: 1373, column: 8, scope: !8954)
!8972 = !DILocation(line: 1374, column: 8, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 1374, column: 8)
!8974 = !DILocation(line: 1374, column: 12, scope: !8973)
!8975 = !DILocation(line: 1374, column: 8, scope: !8954)
!8976 = !DILocation(line: 1375, column: 18, scope: !8973)
!8977 = !DILocation(line: 1375, column: 28, scope: !8973)
!8978 = !DILocation(line: 1375, column: 33, scope: !8973)
!8979 = !DILocation(line: 1375, column: 11, scope: !8973)
!8980 = !DILocation(line: 1375, column: 9, scope: !8973)
!8981 = !DILocation(line: 1375, column: 5, scope: !8973)
!8982 = !DILocation(line: 1377, column: 8, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 1377, column: 8)
!8984 = !DILocation(line: 1377, column: 8, scope: !8954)
!8985 = !DILocalVariable(name: "ul_index", scope: !8986, file: !3, line: 1378, type: !1254)
!8986 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 1377, column: 13)
!8987 = !DILocation(line: 1378, column: 9, scope: !8986)
!8988 = !DILocalVariable(name: "ul_advance", scope: !8986, file: !3, line: 1379, type: !1253)
!8989 = !DILocation(line: 1379, column: 11, scope: !8986)
!8990 = !DILocation(line: 1381, column: 22, scope: !8986)
!8991 = !DILocation(line: 1381, column: 28, scope: !8986)
!8992 = !DILocation(line: 1381, column: 26, scope: !8986)
!8993 = !DILocation(line: 1381, column: 16, scope: !8986)
!8994 = !DILocation(line: 1381, column: 14, scope: !8986)
!8995 = !DILocation(line: 1383, column: 9, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1383, column: 9)
!8997 = !DILocation(line: 1383, column: 17, scope: !8996)
!8998 = !DILocation(line: 1383, column: 25, scope: !8996)
!8999 = !DILocation(line: 1383, column: 9, scope: !8986)
!9000 = !DILocation(line: 1384, column: 17, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 1383, column: 31)
!9002 = !DILocation(line: 1384, column: 25, scope: !9001)
!9003 = !DILocation(line: 1384, column: 6, scope: !9001)
!9004 = !DILocation(line: 1385, column: 5, scope: !9001)
!9005 = !DILocation(line: 1387, column: 14, scope: !8986)
!9006 = !DILocation(line: 1387, column: 5, scope: !8986)
!9007 = !DILocation(line: 1387, column: 24, scope: !8986)
!9008 = !DILocation(line: 1388, column: 28, scope: !8986)
!9009 = !DILocation(line: 1388, column: 36, scope: !8986)
!9010 = !DILocation(line: 1388, column: 47, scope: !8986)
!9011 = !DILocation(line: 1388, column: 57, scope: !8986)
!9012 = !DILocation(line: 1388, column: 18, scope: !8986)
!9013 = !DILocation(line: 1388, column: 16, scope: !8986)
!9014 = !DILocation(line: 1390, column: 18, scope: !8986)
!9015 = !DILocation(line: 1390, column: 26, scope: !8986)
!9016 = !DILocation(line: 1390, column: 37, scope: !8986)
!9017 = !DILocation(line: 1390, column: 43, scope: !8986)
!9018 = !DILocation(line: 1390, column: 50, scope: !8986)
!9019 = !DILocation(line: 1390, column: 48, scope: !8986)
!9020 = !DILocation(line: 1390, column: 62, scope: !8986)
!9021 = !DILocation(line: 1390, column: 60, scope: !8986)
!9022 = !DILocation(line: 1390, column: 74, scope: !8986)
!9023 = !DILocation(line: 1390, column: 80, scope: !8986)
!9024 = !DILocation(line: 1390, column: 87, scope: !8986)
!9025 = !DILocation(line: 1390, column: 85, scope: !8986)
!9026 = !DILocation(line: 1390, column: 5, scope: !8986)
!9027 = !DILocation(line: 1391, column: 14, scope: !8986)
!9028 = !DILocation(line: 1391, column: 22, scope: !8986)
!9029 = !DILocation(line: 1391, column: 5, scope: !8986)
!9030 = !DILocation(line: 1393, column: 9, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1393, column: 9)
!9032 = !DILocation(line: 1393, column: 17, scope: !9031)
!9033 = !DILocation(line: 1393, column: 25, scope: !9031)
!9034 = !DILocation(line: 1393, column: 9, scope: !8986)
!9035 = !DILocation(line: 1394, column: 18, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 1393, column: 31)
!9037 = !DILocation(line: 1394, column: 26, scope: !9036)
!9038 = !DILocation(line: 1394, column: 6, scope: !9036)
!9039 = !DILocation(line: 1395, column: 5, scope: !9036)
!9040 = !DILocation(line: 1396, column: 4, scope: !8986)
!9041 = !DILocation(line: 1397, column: 3, scope: !8954)
!9042 = !DILocation(line: 1398, column: 2, scope: !8933)
!9043 = !DILocation(line: 1401, column: 6, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1401, column: 6)
!9045 = !DILocation(line: 1401, column: 6, scope: !8617)
!9046 = !DILocation(line: 1402, column: 3, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1401, column: 21)
!9048 = !DILocation(line: 1402, column: 11, scope: !9047)
!9049 = !DILocation(line: 1402, column: 17, scope: !9047)
!9050 = !DILocation(line: 1403, column: 17, scope: !9047)
!9051 = !DILocation(line: 1403, column: 3, scope: !9047)
!9052 = !DILocation(line: 1403, column: 9, scope: !9047)
!9053 = !DILocation(line: 1403, column: 14, scope: !9047)
!9054 = !DILocation(line: 1404, column: 19, scope: !9047)
!9055 = !DILocation(line: 1404, column: 27, scope: !9047)
!9056 = !DILocation(line: 1404, column: 33, scope: !9047)
!9057 = !DILocation(line: 1404, column: 3, scope: !9047)
!9058 = !DILocation(line: 1405, column: 2, scope: !9047)
!9059 = !DILocation(line: 1406, column: 1, scope: !8617)
!9060 = distinct !DISubprogram(name: "max_ii", scope: !2370, file: !2370, line: 215, type: !2371, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9061 = !DILocalVariable(name: "a", arg: 1, scope: !9060, file: !2370, line: 215, type: !1254)
!9062 = !DILocation(line: 215, column: 24, scope: !9060)
!9063 = !DILocalVariable(name: "b", arg: 2, scope: !9060, file: !2370, line: 215, type: !1254)
!9064 = !DILocation(line: 215, column: 31, scope: !9060)
!9065 = !DILocation(line: 217, column: 10, scope: !9060)
!9066 = !DILocation(line: 217, column: 14, scope: !9060)
!9067 = !DILocation(line: 217, column: 12, scope: !9060)
!9068 = !DILocation(line: 217, column: 9, scope: !9060)
!9069 = !DILocation(line: 217, column: 19, scope: !9060)
!9070 = !DILocation(line: 217, column: 23, scope: !9060)
!9071 = !DILocation(line: 217, column: 2, scope: !9060)
!9072 = distinct !DISubprogram(name: "ui_text_clip_give_next_off", scope: !3, file: !3, line: 923, type: !9073, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{null, !1464, !1547}
!9075 = !DILocalVariable(name: "but", arg: 1, scope: !9072, file: !3, line: 923, type: !1464)
!9076 = !DILocation(line: 923, column: 47, scope: !9072)
!9077 = !DILocalVariable(name: "str", arg: 2, scope: !9072, file: !3, line: 923, type: !1547)
!9078 = !DILocation(line: 923, column: 64, scope: !9072)
!9079 = !DILocalVariable(name: "next_utf8", scope: !9072, file: !3, line: 925, type: !1547)
!9080 = !DILocation(line: 925, column: 14, scope: !9072)
!9081 = !DILocation(line: 925, column: 54, scope: !9072)
!9082 = !DILocation(line: 925, column: 60, scope: !9072)
!9083 = !DILocation(line: 925, column: 65, scope: !9072)
!9084 = !DILocation(line: 925, column: 58, scope: !9072)
!9085 = !DILocation(line: 925, column: 26, scope: !9072)
!9086 = !DILocalVariable(name: "bytes", scope: !9072, file: !3, line: 926, type: !1254)
!9087 = !DILocation(line: 926, column: 6, scope: !9072)
!9088 = !DILocation(line: 926, column: 14, scope: !9072)
!9089 = !DILocation(line: 926, column: 27, scope: !9072)
!9090 = !DILocation(line: 926, column: 33, scope: !9072)
!9091 = !DILocation(line: 926, column: 38, scope: !9072)
!9092 = !DILocation(line: 926, column: 31, scope: !9072)
!9093 = !DILocation(line: 926, column: 24, scope: !9072)
!9094 = !DILocation(line: 928, column: 14, scope: !9072)
!9095 = !DILocation(line: 928, column: 2, scope: !9072)
!9096 = !DILocation(line: 928, column: 7, scope: !9072)
!9097 = !DILocation(line: 928, column: 11, scope: !9072)
!9098 = !DILocation(line: 929, column: 1, scope: !9072)
!9099 = distinct !DISubprogram(name: "ui_text_clip_give_prev_off", scope: !3, file: !3, line: 915, type: !9073, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9100 = !DILocalVariable(name: "but", arg: 1, scope: !9099, file: !3, line: 915, type: !1464)
!9101 = !DILocation(line: 915, column: 47, scope: !9099)
!9102 = !DILocalVariable(name: "str", arg: 2, scope: !9099, file: !3, line: 915, type: !1547)
!9103 = !DILocation(line: 915, column: 64, scope: !9099)
!9104 = !DILocalVariable(name: "prev_utf8", scope: !9099, file: !3, line: 917, type: !1547)
!9105 = !DILocation(line: 917, column: 14, scope: !9099)
!9106 = !DILocation(line: 917, column: 54, scope: !9099)
!9107 = !DILocation(line: 917, column: 59, scope: !9099)
!9108 = !DILocation(line: 917, column: 65, scope: !9099)
!9109 = !DILocation(line: 917, column: 70, scope: !9099)
!9110 = !DILocation(line: 917, column: 63, scope: !9099)
!9111 = !DILocation(line: 917, column: 26, scope: !9099)
!9112 = !DILocalVariable(name: "bytes", scope: !9099, file: !3, line: 918, type: !1254)
!9113 = !DILocation(line: 918, column: 6, scope: !9099)
!9114 = !DILocation(line: 918, column: 14, scope: !9099)
!9115 = !DILocation(line: 918, column: 20, scope: !9099)
!9116 = !DILocation(line: 918, column: 25, scope: !9099)
!9117 = !DILocation(line: 918, column: 18, scope: !9099)
!9118 = !DILocation(line: 918, column: 31, scope: !9099)
!9119 = !DILocation(line: 918, column: 29, scope: !9099)
!9120 = !DILocation(line: 920, column: 14, scope: !9099)
!9121 = !DILocation(line: 920, column: 2, scope: !9099)
!9122 = !DILocation(line: 920, column: 7, scope: !9099)
!9123 = !DILocation(line: 920, column: 11, scope: !9099)
!9124 = !DILocation(line: 921, column: 1, scope: !9099)
!9125 = distinct !DISubprogram(name: "widget_state", scope: !3, file: !3, line: 1818, type: !4925, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9126 = !DILocalVariable(name: "wt", arg: 1, scope: !9125, file: !3, line: 1818, type: !1431)
!9127 = !DILocation(line: 1818, column: 40, scope: !9125)
!9128 = !DILocalVariable(name: "state", arg: 2, scope: !9125, file: !3, line: 1818, type: !1254)
!9129 = !DILocation(line: 1818, column: 48, scope: !9125)
!9130 = !DILocalVariable(name: "wcol_state", scope: !9125, file: !3, line: 1820, type: !1439)
!9131 = !DILocation(line: 1820, column: 23, scope: !9125)
!9132 = !DILocation(line: 1820, column: 36, scope: !9125)
!9133 = !DILocation(line: 1820, column: 40, scope: !9125)
!9134 = !DILocation(line: 1822, column: 7, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 1822, column: 6)
!9136 = !DILocation(line: 1822, column: 13, scope: !9135)
!9137 = !DILocation(line: 1822, column: 33, scope: !9135)
!9138 = !DILocation(line: 1822, column: 38, scope: !9135)
!9139 = !DILocation(line: 1822, column: 44, scope: !9135)
!9140 = !DILocation(line: 1822, column: 6, scope: !9125)
!9141 = !DILocalVariable(name: "btheme", scope: !9142, file: !3, line: 1824, type: !3866)
!9142 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 1822, column: 61)
!9143 = !DILocation(line: 1824, column: 11, scope: !9142)
!9144 = !DILocation(line: 1824, column: 20, scope: !9142)
!9145 = !DILocation(line: 1825, column: 21, scope: !9142)
!9146 = !DILocation(line: 1825, column: 29, scope: !9142)
!9147 = !DILocation(line: 1825, column: 33, scope: !9142)
!9148 = !DILocation(line: 1825, column: 3, scope: !9142)
!9149 = !DILocation(line: 1825, column: 7, scope: !9142)
!9150 = !DILocation(line: 1825, column: 18, scope: !9142)
!9151 = !DILocation(line: 1826, column: 2, scope: !9142)
!9152 = !DILocation(line: 1828, column: 2, scope: !9125)
!9153 = !DILocation(line: 1828, column: 6, scope: !9125)
!9154 = !DILocation(line: 1828, column: 15, scope: !9125)
!9155 = !DILocation(line: 1828, column: 19, scope: !9125)
!9156 = !DILocation(line: 1828, column: 13, scope: !9125)
!9157 = !DILocation(line: 1830, column: 6, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 1830, column: 6)
!9159 = !DILocation(line: 1830, column: 12, scope: !9158)
!9160 = !DILocation(line: 1830, column: 6, scope: !9125)
!9161 = !DILocation(line: 1831, column: 19, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 1830, column: 25)
!9163 = !DILocation(line: 1831, column: 23, scope: !9162)
!9164 = !DILocation(line: 1831, column: 28, scope: !9162)
!9165 = !DILocation(line: 1831, column: 35, scope: !9162)
!9166 = !DILocation(line: 1831, column: 39, scope: !9162)
!9167 = !DILocation(line: 1831, column: 44, scope: !9162)
!9168 = !DILocation(line: 1831, column: 3, scope: !9162)
!9169 = !DILocation(line: 1833, column: 7, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 1833, column: 7)
!9171 = !DILocation(line: 1833, column: 13, scope: !9170)
!9172 = !DILocation(line: 1833, column: 7, scope: !9162)
!9173 = !DILocation(line: 1834, column: 23, scope: !9170)
!9174 = !DILocation(line: 1834, column: 27, scope: !9170)
!9175 = !DILocation(line: 1834, column: 32, scope: !9170)
!9176 = !DILocation(line: 1834, column: 39, scope: !9170)
!9177 = !DILocation(line: 1834, column: 51, scope: !9170)
!9178 = !DILocation(line: 1834, column: 66, scope: !9170)
!9179 = !DILocation(line: 1834, column: 78, scope: !9170)
!9180 = !DILocation(line: 1834, column: 4, scope: !9170)
!9181 = !DILocation(line: 1835, column: 12, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 1835, column: 12)
!9183 = !DILocation(line: 1835, column: 18, scope: !9182)
!9184 = !DILocation(line: 1835, column: 12, scope: !9170)
!9185 = !DILocation(line: 1836, column: 23, scope: !9182)
!9186 = !DILocation(line: 1836, column: 27, scope: !9182)
!9187 = !DILocation(line: 1836, column: 32, scope: !9182)
!9188 = !DILocation(line: 1836, column: 39, scope: !9182)
!9189 = !DILocation(line: 1836, column: 51, scope: !9182)
!9190 = !DILocation(line: 1836, column: 67, scope: !9182)
!9191 = !DILocation(line: 1836, column: 79, scope: !9182)
!9192 = !DILocation(line: 1836, column: 4, scope: !9182)
!9193 = !DILocation(line: 1837, column: 12, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 1837, column: 12)
!9195 = !DILocation(line: 1837, column: 18, scope: !9194)
!9196 = !DILocation(line: 1837, column: 12, scope: !9182)
!9197 = !DILocation(line: 1838, column: 23, scope: !9194)
!9198 = !DILocation(line: 1838, column: 27, scope: !9194)
!9199 = !DILocation(line: 1838, column: 32, scope: !9194)
!9200 = !DILocation(line: 1838, column: 39, scope: !9194)
!9201 = !DILocation(line: 1838, column: 51, scope: !9194)
!9202 = !DILocation(line: 1838, column: 69, scope: !9194)
!9203 = !DILocation(line: 1838, column: 81, scope: !9194)
!9204 = !DILocation(line: 1838, column: 4, scope: !9194)
!9205 = !DILocation(line: 1840, column: 19, scope: !9162)
!9206 = !DILocation(line: 1840, column: 23, scope: !9162)
!9207 = !DILocation(line: 1840, column: 28, scope: !9162)
!9208 = !DILocation(line: 1840, column: 34, scope: !9162)
!9209 = !DILocation(line: 1840, column: 38, scope: !9162)
!9210 = !DILocation(line: 1840, column: 43, scope: !9162)
!9211 = !DILocation(line: 1840, column: 3, scope: !9162)
!9212 = !DILocation(line: 1842, column: 7, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 1842, column: 7)
!9214 = !DILocation(line: 1842, column: 13, scope: !9213)
!9215 = !DILocation(line: 1842, column: 7, scope: !9162)
!9216 = !DILocalVariable(name: "sw_ap", scope: !9217, file: !3, line: 1843, type: !1300)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 1843, column: 4)
!9218 = !DILocation(line: 1843, column: 4, scope: !9217)
!9219 = !DILocation(line: 1844, column: 2, scope: !9162)
!9220 = !DILocation(line: 1846, column: 7, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1846, column: 7)
!9222 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 1845, column: 7)
!9223 = !DILocation(line: 1846, column: 13, scope: !9221)
!9224 = !DILocation(line: 1846, column: 7, scope: !9222)
!9225 = !DILocation(line: 1847, column: 23, scope: !9221)
!9226 = !DILocation(line: 1847, column: 27, scope: !9221)
!9227 = !DILocation(line: 1847, column: 32, scope: !9221)
!9228 = !DILocation(line: 1847, column: 39, scope: !9221)
!9229 = !DILocation(line: 1847, column: 51, scope: !9221)
!9230 = !DILocation(line: 1847, column: 62, scope: !9221)
!9231 = !DILocation(line: 1847, column: 74, scope: !9221)
!9232 = !DILocation(line: 1847, column: 4, scope: !9221)
!9233 = !DILocation(line: 1848, column: 12, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 1848, column: 12)
!9235 = !DILocation(line: 1848, column: 18, scope: !9234)
!9236 = !DILocation(line: 1848, column: 12, scope: !9221)
!9237 = !DILocation(line: 1849, column: 23, scope: !9234)
!9238 = !DILocation(line: 1849, column: 27, scope: !9234)
!9239 = !DILocation(line: 1849, column: 32, scope: !9234)
!9240 = !DILocation(line: 1849, column: 39, scope: !9234)
!9241 = !DILocation(line: 1849, column: 51, scope: !9234)
!9242 = !DILocation(line: 1849, column: 63, scope: !9234)
!9243 = !DILocation(line: 1849, column: 75, scope: !9234)
!9244 = !DILocation(line: 1849, column: 4, scope: !9234)
!9245 = !DILocation(line: 1850, column: 12, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1850, column: 12)
!9247 = !DILocation(line: 1850, column: 18, scope: !9246)
!9248 = !DILocation(line: 1850, column: 12, scope: !9234)
!9249 = !DILocation(line: 1851, column: 23, scope: !9246)
!9250 = !DILocation(line: 1851, column: 27, scope: !9246)
!9251 = !DILocation(line: 1851, column: 32, scope: !9246)
!9252 = !DILocation(line: 1851, column: 39, scope: !9246)
!9253 = !DILocation(line: 1851, column: 51, scope: !9246)
!9254 = !DILocation(line: 1851, column: 65, scope: !9246)
!9255 = !DILocation(line: 1851, column: 77, scope: !9246)
!9256 = !DILocation(line: 1851, column: 4, scope: !9246)
!9257 = !DILocation(line: 1853, column: 7, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1853, column: 7)
!9259 = !DILocation(line: 1853, column: 13, scope: !9258)
!9260 = !DILocation(line: 1853, column: 7, scope: !9222)
!9261 = !DILocation(line: 1854, column: 24, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1853, column: 26)
!9263 = !DILocation(line: 1854, column: 28, scope: !9262)
!9264 = !DILocation(line: 1854, column: 33, scope: !9262)
!9265 = !DILocation(line: 1854, column: 42, scope: !9262)
!9266 = !DILocation(line: 1854, column: 57, scope: !9262)
!9267 = !DILocation(line: 1854, column: 61, scope: !9262)
!9268 = !DILocation(line: 1854, column: 66, scope: !9262)
!9269 = !DILocation(line: 1854, column: 75, scope: !9262)
!9270 = !DILocation(line: 1854, column: 4, scope: !9262)
!9271 = !DILocation(line: 1854, column: 8, scope: !9262)
!9272 = !DILocation(line: 1854, column: 13, scope: !9262)
!9273 = !DILocation(line: 1854, column: 22, scope: !9262)
!9274 = !DILocation(line: 1855, column: 24, scope: !9262)
!9275 = !DILocation(line: 1855, column: 28, scope: !9262)
!9276 = !DILocation(line: 1855, column: 33, scope: !9262)
!9277 = !DILocation(line: 1855, column: 42, scope: !9262)
!9278 = !DILocation(line: 1855, column: 57, scope: !9262)
!9279 = !DILocation(line: 1855, column: 61, scope: !9262)
!9280 = !DILocation(line: 1855, column: 66, scope: !9262)
!9281 = !DILocation(line: 1855, column: 75, scope: !9262)
!9282 = !DILocation(line: 1855, column: 4, scope: !9262)
!9283 = !DILocation(line: 1855, column: 8, scope: !9262)
!9284 = !DILocation(line: 1855, column: 13, scope: !9262)
!9285 = !DILocation(line: 1855, column: 22, scope: !9262)
!9286 = !DILocation(line: 1856, column: 24, scope: !9262)
!9287 = !DILocation(line: 1856, column: 28, scope: !9262)
!9288 = !DILocation(line: 1856, column: 33, scope: !9262)
!9289 = !DILocation(line: 1856, column: 42, scope: !9262)
!9290 = !DILocation(line: 1856, column: 57, scope: !9262)
!9291 = !DILocation(line: 1856, column: 61, scope: !9262)
!9292 = !DILocation(line: 1856, column: 66, scope: !9262)
!9293 = !DILocation(line: 1856, column: 75, scope: !9262)
!9294 = !DILocation(line: 1856, column: 4, scope: !9262)
!9295 = !DILocation(line: 1856, column: 8, scope: !9262)
!9296 = !DILocation(line: 1856, column: 13, scope: !9262)
!9297 = !DILocation(line: 1856, column: 22, scope: !9262)
!9298 = !DILocation(line: 1857, column: 3, scope: !9262)
!9299 = !DILocation(line: 1860, column: 6, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 1860, column: 6)
!9301 = !DILocation(line: 1860, column: 12, scope: !9300)
!9302 = !DILocation(line: 1860, column: 6, scope: !9125)
!9303 = !DILocalVariable(name: "red", scope: !9304, file: !3, line: 1861, type: !1349)
!9304 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 1860, column: 31)
!9305 = !DILocation(line: 1861, column: 8, scope: !9304)
!9306 = !DILocation(line: 1862, column: 22, scope: !9304)
!9307 = !DILocation(line: 1862, column: 26, scope: !9304)
!9308 = !DILocation(line: 1862, column: 31, scope: !9304)
!9309 = !DILocation(line: 1862, column: 38, scope: !9304)
!9310 = !DILocation(line: 1862, column: 3, scope: !9304)
!9311 = !DILocation(line: 1863, column: 2, scope: !9304)
!9312 = !DILocation(line: 1865, column: 6, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 1865, column: 6)
!9314 = !DILocation(line: 1865, column: 12, scope: !9313)
!9315 = !DILocation(line: 1865, column: 6, scope: !9125)
!9316 = !DILocation(line: 1867, column: 19, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 1865, column: 33)
!9318 = !DILocation(line: 1867, column: 23, scope: !9317)
!9319 = !DILocation(line: 1867, column: 28, scope: !9317)
!9320 = !DILocation(line: 1867, column: 35, scope: !9317)
!9321 = !DILocation(line: 1867, column: 39, scope: !9317)
!9322 = !DILocation(line: 1867, column: 44, scope: !9317)
!9323 = !DILocation(line: 1867, column: 3, scope: !9317)
!9324 = !DILocalVariable(name: "sw_ap", scope: !9325, file: !3, line: 1868, type: !1300)
!9325 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 1868, column: 3)
!9326 = !DILocation(line: 1868, column: 3, scope: !9325)
!9327 = !DILocation(line: 1869, column: 22, scope: !9317)
!9328 = !DILocation(line: 1869, column: 26, scope: !9317)
!9329 = !DILocation(line: 1869, column: 31, scope: !9317)
!9330 = !DILocation(line: 1869, column: 37, scope: !9317)
!9331 = !DILocation(line: 1869, column: 41, scope: !9317)
!9332 = !DILocation(line: 1869, column: 46, scope: !9317)
!9333 = !DILocation(line: 1869, column: 3, scope: !9317)
!9334 = !DILocation(line: 1870, column: 2, scope: !9317)
!9335 = !DILocation(line: 1872, column: 6, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 1872, column: 6)
!9337 = !DILocation(line: 1872, column: 12, scope: !9336)
!9338 = !DILocation(line: 1872, column: 6, scope: !9125)
!9339 = !DILocalVariable(name: "blue", scope: !9340, file: !3, line: 1873, type: !1349)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1872, column: 34)
!9341 = !DILocation(line: 1873, column: 8, scope: !9340)
!9342 = !DILocation(line: 1874, column: 22, scope: !9340)
!9343 = !DILocation(line: 1874, column: 26, scope: !9340)
!9344 = !DILocation(line: 1874, column: 31, scope: !9340)
!9345 = !DILocation(line: 1874, column: 38, scope: !9340)
!9346 = !DILocation(line: 1874, column: 3, scope: !9340)
!9347 = !DILocation(line: 1875, column: 2, scope: !9340)
!9348 = !DILocation(line: 1876, column: 1, scope: !9125)
!9349 = distinct !DISubprogram(name: "widget_but", scope: !3, file: !3, line: 3194, type: !1449, scopeLine: 3195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9350 = !DILocalVariable(name: "wcol", arg: 1, scope: !9349, file: !3, line: 3194, type: !1436)
!9351 = !DILocation(line: 3194, column: 40, scope: !9349)
!9352 = !DILocalVariable(name: "rect", arg: 2, scope: !9349, file: !3, line: 3194, type: !1451)
!9353 = !DILocation(line: 3194, column: 52, scope: !9349)
!9354 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9349, file: !3, line: 3194, type: !1254)
!9355 = !DILocation(line: 3194, column: 62, scope: !9349)
!9356 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9349, file: !3, line: 3194, type: !1254)
!9357 = !DILocation(line: 3194, column: 81, scope: !9349)
!9358 = !DILocalVariable(name: "wtb", scope: !9349, file: !3, line: 3196, type: !3146)
!9359 = !DILocation(line: 3196, column: 15, scope: !9349)
!9360 = !DILocalVariable(name: "rad", scope: !9349, file: !3, line: 3197, type: !1253)
!9361 = !DILocation(line: 3197, column: 8, scope: !9349)
!9362 = !DILocation(line: 3199, column: 2, scope: !9349)
!9363 = !DILocation(line: 3202, column: 17, scope: !9349)
!9364 = !DILocation(line: 3202, column: 15, scope: !9349)
!9365 = !DILocation(line: 3202, column: 13, scope: !9349)
!9366 = !DILocation(line: 3202, column: 6, scope: !9349)
!9367 = !DILocation(line: 3203, column: 24, scope: !9349)
!9368 = !DILocation(line: 3203, column: 39, scope: !9349)
!9369 = !DILocation(line: 3203, column: 45, scope: !9349)
!9370 = !DILocation(line: 3203, column: 2, scope: !9349)
!9371 = !DILocation(line: 3205, column: 24, scope: !9349)
!9372 = !DILocation(line: 3205, column: 2, scope: !9349)
!9373 = !DILocation(line: 3207, column: 1, scope: !9349)
!9374 = distinct !DISubprogram(name: "widget_state_label", scope: !3, file: !3, line: 3134, type: !4925, scopeLine: 3135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9375 = !DILocalVariable(name: "wt", arg: 1, scope: !9374, file: !3, line: 3134, type: !1431)
!9376 = !DILocation(line: 3134, column: 46, scope: !9374)
!9377 = !DILocalVariable(name: "state", arg: 2, scope: !9374, file: !3, line: 3134, type: !1254)
!9378 = !DILocation(line: 3134, column: 54, scope: !9374)
!9379 = !DILocation(line: 3136, column: 6, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 3136, column: 6)
!9381 = !DILocation(line: 3136, column: 12, scope: !9380)
!9382 = !DILocation(line: 3136, column: 6, scope: !9374)
!9383 = !DILocalVariable(name: "btheme", scope: !9384, file: !3, line: 3138, type: !3866)
!9384 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 3136, column: 32)
!9385 = !DILocation(line: 3138, column: 11, scope: !9384)
!9386 = !DILocation(line: 3138, column: 20, scope: !9384)
!9387 = !DILocation(line: 3139, column: 21, scope: !9384)
!9388 = !DILocation(line: 3139, column: 29, scope: !9384)
!9389 = !DILocation(line: 3139, column: 33, scope: !9384)
!9390 = !DILocation(line: 3139, column: 3, scope: !9384)
!9391 = !DILocation(line: 3139, column: 7, scope: !9384)
!9392 = !DILocation(line: 3139, column: 18, scope: !9384)
!9393 = !DILocation(line: 3141, column: 16, scope: !9384)
!9394 = !DILocation(line: 3141, column: 20, scope: !9384)
!9395 = !DILocation(line: 3141, column: 3, scope: !9384)
!9396 = !DILocation(line: 3142, column: 2, scope: !9384)
!9397 = !DILocation(line: 3145, column: 16, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 3143, column: 7)
!9399 = !DILocation(line: 3145, column: 20, scope: !9398)
!9400 = !DILocation(line: 3145, column: 3, scope: !9398)
!9401 = !DILocation(line: 3146, column: 7, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 3146, column: 7)
!9403 = !DILocation(line: 3146, column: 13, scope: !9402)
!9404 = !DILocation(line: 3146, column: 7, scope: !9398)
!9405 = !DILocation(line: 3147, column: 54, scope: !9402)
!9406 = !DILocation(line: 3147, column: 58, scope: !9402)
!9407 = !DILocation(line: 3147, column: 63, scope: !9402)
!9408 = !DILocation(line: 3147, column: 4, scope: !9402)
!9409 = !DILocation(line: 3149, column: 51, scope: !9402)
!9410 = !DILocation(line: 3149, column: 55, scope: !9402)
!9411 = !DILocation(line: 3149, column: 60, scope: !9402)
!9412 = !DILocation(line: 3149, column: 4, scope: !9402)
!9413 = !DILocation(line: 3151, column: 1, scope: !9374)
!9414 = distinct !DISubprogram(name: "widget_optionbut", scope: !3, file: !3, line: 3099, type: !1449, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9415 = !DILocalVariable(name: "wcol", arg: 1, scope: !9414, file: !3, line: 3099, type: !1436)
!9416 = !DILocation(line: 3099, column: 46, scope: !9414)
!9417 = !DILocalVariable(name: "rect", arg: 2, scope: !9414, file: !3, line: 3099, type: !1451)
!9418 = !DILocation(line: 3099, column: 58, scope: !9414)
!9419 = !DILocalVariable(name: "state", arg: 3, scope: !9414, file: !3, line: 3099, type: !1254)
!9420 = !DILocation(line: 3099, column: 68, scope: !9414)
!9421 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 4, scope: !9414, file: !3, line: 3099, type: !1254)
!9422 = !DILocation(line: 3099, column: 79, scope: !9414)
!9423 = !DILocalVariable(name: "wtb", scope: !9414, file: !3, line: 3101, type: !3146)
!9424 = !DILocation(line: 3101, column: 15, scope: !9414)
!9425 = !DILocalVariable(name: "recttemp", scope: !9414, file: !3, line: 3102, type: !1452)
!9426 = !DILocation(line: 3102, column: 7, scope: !9414)
!9427 = !DILocation(line: 3102, column: 19, scope: !9414)
!9428 = !DILocation(line: 3102, column: 18, scope: !9414)
!9429 = !DILocalVariable(name: "rad", scope: !9414, file: !3, line: 3103, type: !1253)
!9430 = !DILocation(line: 3103, column: 8, scope: !9414)
!9431 = !DILocalVariable(name: "delta", scope: !9414, file: !3, line: 3104, type: !1254)
!9432 = !DILocation(line: 3104, column: 6, scope: !9414)
!9433 = !DILocation(line: 3106, column: 2, scope: !9414)
!9434 = !DILocation(line: 3109, column: 27, scope: !9414)
!9435 = !DILocation(line: 3109, column: 34, scope: !9414)
!9436 = !DILocation(line: 3109, column: 32, scope: !9414)
!9437 = !DILocation(line: 3109, column: 11, scope: !9414)
!9438 = !DILocation(line: 3109, column: 16, scope: !9414)
!9439 = !DILocation(line: 3112, column: 14, scope: !9414)
!9440 = !DILocation(line: 3112, column: 41, scope: !9414)
!9441 = !DILocation(line: 3112, column: 12, scope: !9414)
!9442 = !DILocation(line: 3112, column: 8, scope: !9414)
!9443 = !DILocation(line: 3113, column: 19, scope: !9414)
!9444 = !DILocation(line: 3113, column: 11, scope: !9414)
!9445 = !DILocation(line: 3113, column: 16, scope: !9414)
!9446 = !DILocation(line: 3114, column: 19, scope: !9414)
!9447 = !DILocation(line: 3114, column: 11, scope: !9414)
!9448 = !DILocation(line: 3114, column: 16, scope: !9414)
!9449 = !DILocation(line: 3115, column: 19, scope: !9414)
!9450 = !DILocation(line: 3115, column: 11, scope: !9414)
!9451 = !DILocation(line: 3115, column: 16, scope: !9414)
!9452 = !DILocation(line: 3116, column: 19, scope: !9414)
!9453 = !DILocation(line: 3116, column: 11, scope: !9414)
!9454 = !DILocation(line: 3116, column: 16, scope: !9414)
!9455 = !DILocation(line: 3119, column: 17, scope: !9414)
!9456 = !DILocation(line: 3119, column: 15, scope: !9414)
!9457 = !DILocation(line: 3119, column: 13, scope: !9414)
!9458 = !DILocation(line: 3119, column: 6, scope: !9414)
!9459 = !DILocation(line: 3120, column: 47, scope: !9414)
!9460 = !DILocation(line: 3120, column: 2, scope: !9414)
!9461 = !DILocation(line: 3123, column: 6, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3123, column: 6)
!9463 = !DILocation(line: 3123, column: 12, scope: !9462)
!9464 = !DILocation(line: 3123, column: 6, scope: !9414)
!9465 = !DILocation(line: 3124, column: 27, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 3123, column: 25)
!9467 = !DILocation(line: 3124, column: 3, scope: !9466)
!9468 = !DILocation(line: 3125, column: 2, scope: !9466)
!9469 = !DILocation(line: 3127, column: 24, scope: !9414)
!9470 = !DILocation(line: 3127, column: 2, scope: !9414)
!9471 = !DILocation(line: 3130, column: 32, scope: !9414)
!9472 = !DILocation(line: 3130, column: 16, scope: !9414)
!9473 = !DILocation(line: 3130, column: 38, scope: !9414)
!9474 = !DILocation(line: 3130, column: 46, scope: !9414)
!9475 = !DILocation(line: 3130, column: 44, scope: !9414)
!9476 = !DILocation(line: 3130, column: 2, scope: !9414)
!9477 = !DILocation(line: 3130, column: 8, scope: !9414)
!9478 = !DILocation(line: 3130, column: 13, scope: !9414)
!9479 = !DILocation(line: 3131, column: 1, scope: !9414)
!9480 = distinct !DISubprogram(name: "widget_radiobut", scope: !3, file: !3, line: 3153, type: !1449, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9481 = !DILocalVariable(name: "wcol", arg: 1, scope: !9480, file: !3, line: 3153, type: !1436)
!9482 = !DILocation(line: 3153, column: 45, scope: !9480)
!9483 = !DILocalVariable(name: "rect", arg: 2, scope: !9480, file: !3, line: 3153, type: !1451)
!9484 = !DILocation(line: 3153, column: 57, scope: !9480)
!9485 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9480, file: !3, line: 3153, type: !1254)
!9486 = !DILocation(line: 3153, column: 67, scope: !9480)
!9487 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9480, file: !3, line: 3153, type: !1254)
!9488 = !DILocation(line: 3153, column: 86, scope: !9480)
!9489 = !DILocalVariable(name: "wtb", scope: !9480, file: !3, line: 3155, type: !3146)
!9490 = !DILocation(line: 3155, column: 15, scope: !9480)
!9491 = !DILocalVariable(name: "rad", scope: !9480, file: !3, line: 3156, type: !1253)
!9492 = !DILocation(line: 3156, column: 8, scope: !9480)
!9493 = !DILocation(line: 3158, column: 2, scope: !9480)
!9494 = !DILocation(line: 3161, column: 17, scope: !9480)
!9495 = !DILocation(line: 3161, column: 15, scope: !9480)
!9496 = !DILocation(line: 3161, column: 13, scope: !9480)
!9497 = !DILocation(line: 3161, column: 6, scope: !9480)
!9498 = !DILocation(line: 3162, column: 24, scope: !9480)
!9499 = !DILocation(line: 3162, column: 39, scope: !9480)
!9500 = !DILocation(line: 3162, column: 45, scope: !9480)
!9501 = !DILocation(line: 3162, column: 2, scope: !9480)
!9502 = !DILocation(line: 3164, column: 24, scope: !9480)
!9503 = !DILocation(line: 3164, column: 2, scope: !9480)
!9504 = !DILocation(line: 3166, column: 1, scope: !9480)
!9505 = distinct !DISubprogram(name: "widget_numbut", scope: !3, file: !3, line: 2534, type: !1449, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9506 = !DILocalVariable(name: "wcol", arg: 1, scope: !9505, file: !3, line: 2534, type: !1436)
!9507 = !DILocation(line: 2534, column: 43, scope: !9505)
!9508 = !DILocalVariable(name: "rect", arg: 2, scope: !9505, file: !3, line: 2534, type: !1451)
!9509 = !DILocation(line: 2534, column: 55, scope: !9505)
!9510 = !DILocalVariable(name: "state", arg: 3, scope: !9505, file: !3, line: 2534, type: !1254)
!9511 = !DILocation(line: 2534, column: 65, scope: !9505)
!9512 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9505, file: !3, line: 2534, type: !1254)
!9513 = !DILocation(line: 2534, column: 76, scope: !9505)
!9514 = !DILocation(line: 2536, column: 21, scope: !9505)
!9515 = !DILocation(line: 2536, column: 27, scope: !9505)
!9516 = !DILocation(line: 2536, column: 33, scope: !9505)
!9517 = !DILocation(line: 2536, column: 40, scope: !9505)
!9518 = !DILocation(line: 2536, column: 2, scope: !9505)
!9519 = !DILocation(line: 2537, column: 1, scope: !9505)
!9520 = distinct !DISubprogram(name: "widget_numslider", scope: !3, file: !3, line: 2776, type: !1462, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9521 = !DILocalVariable(name: "but", arg: 1, scope: !9520, file: !3, line: 2776, type: !1464)
!9522 = !DILocation(line: 2776, column: 37, scope: !9520)
!9523 = !DILocalVariable(name: "wcol", arg: 2, scope: !9520, file: !3, line: 2776, type: !1436)
!9524 = !DILocation(line: 2776, column: 58, scope: !9520)
!9525 = !DILocalVariable(name: "rect", arg: 3, scope: !9520, file: !3, line: 2776, type: !1451)
!9526 = !DILocation(line: 2776, column: 70, scope: !9520)
!9527 = !DILocalVariable(name: "state", arg: 4, scope: !9520, file: !3, line: 2776, type: !1254)
!9528 = !DILocation(line: 2776, column: 80, scope: !9520)
!9529 = !DILocalVariable(name: "roundboxalign", arg: 5, scope: !9520, file: !3, line: 2776, type: !1254)
!9530 = !DILocation(line: 2776, column: 91, scope: !9520)
!9531 = !DILocalVariable(name: "wtb", scope: !9520, file: !3, line: 2778, type: !3146)
!9532 = !DILocation(line: 2778, column: 15, scope: !9520)
!9533 = !DILocalVariable(name: "wtb1", scope: !9520, file: !3, line: 2778, type: !3146)
!9534 = !DILocation(line: 2778, column: 20, scope: !9520)
!9535 = !DILocalVariable(name: "rect1", scope: !9520, file: !3, line: 2779, type: !1452)
!9536 = !DILocation(line: 2779, column: 7, scope: !9520)
!9537 = !DILocalVariable(name: "value", scope: !9520, file: !3, line: 2780, type: !1684)
!9538 = !DILocation(line: 2780, column: 9, scope: !9520)
!9539 = !DILocalVariable(name: "offs", scope: !9520, file: !3, line: 2781, type: !1253)
!9540 = !DILocation(line: 2781, column: 8, scope: !9520)
!9541 = !DILocalVariable(name: "toffs", scope: !9520, file: !3, line: 2781, type: !1253)
!9542 = !DILocation(line: 2781, column: 14, scope: !9520)
!9543 = !DILocalVariable(name: "fac", scope: !9520, file: !3, line: 2781, type: !1253)
!9544 = !DILocation(line: 2781, column: 21, scope: !9520)
!9545 = !DILocalVariable(name: "outline", scope: !9520, file: !3, line: 2782, type: !4033)
!9546 = !DILocation(line: 2782, column: 7, scope: !9520)
!9547 = !DILocation(line: 2784, column: 2, scope: !9520)
!9548 = !DILocation(line: 2785, column: 2, scope: !9520)
!9549 = !DILocation(line: 2790, column: 32, scope: !9520)
!9550 = !DILocation(line: 2790, column: 16, scope: !9520)
!9551 = !DILocation(line: 2790, column: 14, scope: !9520)
!9552 = !DILocation(line: 2790, column: 7, scope: !9520)
!9553 = !DILocation(line: 2791, column: 10, scope: !9520)
!9554 = !DILocation(line: 2791, column: 15, scope: !9520)
!9555 = !DILocation(line: 2791, column: 8, scope: !9520)
!9556 = !DILocation(line: 2792, column: 24, scope: !9520)
!9557 = !DILocation(line: 2792, column: 39, scope: !9520)
!9558 = !DILocation(line: 2792, column: 45, scope: !9520)
!9559 = !DILocation(line: 2792, column: 2, scope: !9520)
!9560 = !DILocation(line: 2794, column: 6, scope: !9520)
!9561 = !DILocation(line: 2794, column: 14, scope: !9520)
!9562 = !DILocation(line: 2795, column: 24, scope: !9520)
!9563 = !DILocation(line: 2795, column: 2, scope: !9520)
!9564 = !DILocation(line: 2798, column: 8, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 2798, column: 6)
!9566 = !DILocation(line: 2798, column: 14, scope: !9565)
!9567 = !DILocation(line: 2798, column: 6, scope: !9520)
!9568 = !DILocalVariable(name: "roundboxalign_slider", scope: !9569, file: !3, line: 2799, type: !1254)
!9569 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 2798, column: 31)
!9570 = !DILocation(line: 2799, column: 7, scope: !9569)
!9571 = !DILocation(line: 2802, column: 19, scope: !9569)
!9572 = !DILocation(line: 2802, column: 28, scope: !9569)
!9573 = !DILocation(line: 2802, column: 34, scope: !9569)
!9574 = !DILocation(line: 2802, column: 3, scope: !9569)
!9575 = !DILocation(line: 2803, column: 19, scope: !9569)
!9576 = !DILocation(line: 2803, column: 25, scope: !9569)
!9577 = !DILocation(line: 2803, column: 34, scope: !9569)
!9578 = !DILocation(line: 2803, column: 40, scope: !9569)
!9579 = !DILocation(line: 2803, column: 3, scope: !9569)
!9580 = !DILocation(line: 2804, column: 19, scope: !9569)
!9581 = !DILocation(line: 2804, column: 25, scope: !9569)
!9582 = !DILocation(line: 2804, column: 32, scope: !9569)
!9583 = !DILocation(line: 2804, column: 38, scope: !9569)
!9584 = !DILocation(line: 2804, column: 3, scope: !9569)
!9585 = !DILocation(line: 2806, column: 9, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2806, column: 7)
!9587 = !DILocation(line: 2806, column: 15, scope: !9586)
!9588 = !DILocation(line: 2806, column: 7, scope: !9569)
!9589 = !DILocalVariable(name: "sw_ap", scope: !9590, file: !3, line: 2807, type: !1300)
!9590 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2807, column: 4)
!9591 = !DILocation(line: 2807, column: 4, scope: !9590)
!9592 = !DILocation(line: 2809, column: 12, scope: !9569)
!9593 = !DILocation(line: 2809, column: 11, scope: !9569)
!9594 = !DILocation(line: 2811, column: 26, scope: !9569)
!9595 = !DILocation(line: 2811, column: 11, scope: !9569)
!9596 = !DILocation(line: 2811, column: 9, scope: !9569)
!9597 = !DILocation(line: 2812, column: 17, scope: !9569)
!9598 = !DILocation(line: 2812, column: 10, scope: !9569)
!9599 = !DILocation(line: 2812, column: 25, scope: !9569)
!9600 = !DILocation(line: 2812, column: 30, scope: !9569)
!9601 = !DILocation(line: 2812, column: 23, scope: !9569)
!9602 = !DILocation(line: 2812, column: 42, scope: !9569)
!9603 = !DILocation(line: 2812, column: 68, scope: !9569)
!9604 = !DILocation(line: 2812, column: 66, scope: !9569)
!9605 = !DILocation(line: 2812, column: 39, scope: !9569)
!9606 = !DILocation(line: 2812, column: 77, scope: !9569)
!9607 = !DILocation(line: 2812, column: 82, scope: !9569)
!9608 = !DILocation(line: 2812, column: 92, scope: !9569)
!9609 = !DILocation(line: 2812, column: 97, scope: !9569)
!9610 = !DILocation(line: 2812, column: 90, scope: !9569)
!9611 = !DILocation(line: 2812, column: 74, scope: !9569)
!9612 = !DILocation(line: 2812, column: 7, scope: !9569)
!9613 = !DILocation(line: 2815, column: 22, scope: !9569)
!9614 = !DILocation(line: 2815, column: 16, scope: !9569)
!9615 = !DILocation(line: 2815, column: 34, scope: !9569)
!9616 = !DILocation(line: 2815, column: 43, scope: !9569)
!9617 = !DILocation(line: 2815, column: 39, scope: !9569)
!9618 = !DILocation(line: 2815, column: 29, scope: !9569)
!9619 = !DILocation(line: 2815, column: 27, scope: !9569)
!9620 = !DILocation(line: 2815, column: 9, scope: !9569)
!9621 = !DILocation(line: 2815, column: 14, scope: !9569)
!9622 = !DILocation(line: 2816, column: 26, scope: !9569)
!9623 = !DILocation(line: 2816, column: 40, scope: !9569)
!9624 = !DILocation(line: 2816, column: 93, scope: !9569)
!9625 = !DILocation(line: 2816, column: 3, scope: !9569)
!9626 = !DILocation(line: 2817, column: 8, scope: !9569)
!9627 = !DILocation(line: 2817, column: 16, scope: !9569)
!9628 = !DILocation(line: 2818, column: 26, scope: !9569)
!9629 = !DILocation(line: 2818, column: 3, scope: !9569)
!9630 = !DILocation(line: 2821, column: 22, scope: !9569)
!9631 = !DILocation(line: 2821, column: 16, scope: !9569)
!9632 = !DILocation(line: 2821, column: 29, scope: !9569)
!9633 = !DILocation(line: 2821, column: 27, scope: !9569)
!9634 = !DILocation(line: 2821, column: 35, scope: !9569)
!9635 = !DILocation(line: 2821, column: 33, scope: !9569)
!9636 = !DILocation(line: 2821, column: 9, scope: !9569)
!9637 = !DILocation(line: 2821, column: 14, scope: !9569)
!9638 = !DILocation(line: 2822, column: 24, scope: !9569)
!9639 = !DILocation(line: 2822, column: 33, scope: !9569)
!9640 = !DILocation(line: 2822, column: 29, scope: !9569)
!9641 = !DILocation(line: 2822, column: 18, scope: !9569)
!9642 = !DILocation(line: 2822, column: 9, scope: !9569)
!9643 = !DILocation(line: 2822, column: 14, scope: !9569)
!9644 = !DILocation(line: 2824, column: 13, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2824, column: 7)
!9646 = !DILocation(line: 2824, column: 7, scope: !9645)
!9647 = !DILocation(line: 2824, column: 20, scope: !9645)
!9648 = !DILocation(line: 2824, column: 18, scope: !9645)
!9649 = !DILocation(line: 2824, column: 27, scope: !9645)
!9650 = !DILocation(line: 2824, column: 33, scope: !9645)
!9651 = !DILocation(line: 2824, column: 25, scope: !9645)
!9652 = !DILocation(line: 2824, column: 7, scope: !9569)
!9653 = !DILocation(line: 2825, column: 27, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2824, column: 39)
!9655 = !DILocation(line: 2825, column: 41, scope: !9654)
!9656 = !DILocation(line: 2825, column: 25, scope: !9654)
!9657 = !DILocation(line: 2826, column: 19, scope: !9654)
!9658 = !DILocation(line: 2826, column: 13, scope: !9654)
!9659 = !DILocation(line: 2826, column: 26, scope: !9654)
!9660 = !DILocation(line: 2826, column: 24, scope: !9654)
!9661 = !DILocation(line: 2826, column: 33, scope: !9654)
!9662 = !DILocation(line: 2826, column: 39, scope: !9654)
!9663 = !DILocation(line: 2826, column: 31, scope: !9654)
!9664 = !DILocation(line: 2826, column: 47, scope: !9654)
!9665 = !DILocation(line: 2826, column: 45, scope: !9654)
!9666 = !DILocation(line: 2826, column: 9, scope: !9654)
!9667 = !DILocation(line: 2827, column: 3, scope: !9654)
!9668 = !DILocation(line: 2829, column: 25, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2828, column: 8)
!9670 = !DILocation(line: 2830, column: 9, scope: !9669)
!9671 = !DILocation(line: 2832, column: 26, scope: !9569)
!9672 = !DILocation(line: 2832, column: 56, scope: !9569)
!9673 = !DILocation(line: 2832, column: 3, scope: !9569)
!9674 = !DILocation(line: 2834, column: 26, scope: !9569)
!9675 = !DILocation(line: 2834, column: 3, scope: !9569)
!9676 = !DILocation(line: 2835, column: 19, scope: !9569)
!9677 = !DILocation(line: 2835, column: 25, scope: !9569)
!9678 = !DILocation(line: 2835, column: 34, scope: !9569)
!9679 = !DILocation(line: 2835, column: 3, scope: !9569)
!9680 = !DILocation(line: 2837, column: 9, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2837, column: 7)
!9682 = !DILocation(line: 2837, column: 15, scope: !9681)
!9683 = !DILocation(line: 2837, column: 7, scope: !9569)
!9684 = !DILocalVariable(name: "sw_ap", scope: !9685, file: !3, line: 2838, type: !1300)
!9685 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2838, column: 4)
!9686 = !DILocation(line: 2838, column: 4, scope: !9685)
!9687 = !DILocation(line: 2839, column: 2, scope: !9569)
!9688 = !DILocation(line: 2842, column: 6, scope: !9520)
!9689 = !DILocation(line: 2842, column: 14, scope: !9520)
!9690 = !DILocation(line: 2843, column: 6, scope: !9520)
!9691 = !DILocation(line: 2843, column: 12, scope: !9520)
!9692 = !DILocation(line: 2844, column: 24, scope: !9520)
!9693 = !DILocation(line: 2844, column: 2, scope: !9520)
!9694 = !DILocation(line: 2847, column: 8, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 2847, column: 6)
!9696 = !DILocation(line: 2847, column: 14, scope: !9695)
!9697 = !DILocation(line: 2847, column: 6, scope: !9520)
!9698 = !DILocation(line: 2848, column: 17, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2847, column: 31)
!9700 = !DILocation(line: 2848, column: 3, scope: !9699)
!9701 = !DILocation(line: 2848, column: 9, scope: !9699)
!9702 = !DILocation(line: 2848, column: 14, scope: !9699)
!9703 = !DILocation(line: 2849, column: 17, scope: !9699)
!9704 = !DILocation(line: 2849, column: 3, scope: !9699)
!9705 = !DILocation(line: 2849, column: 9, scope: !9699)
!9706 = !DILocation(line: 2849, column: 14, scope: !9699)
!9707 = !DILocation(line: 2850, column: 2, scope: !9699)
!9708 = !DILocation(line: 2852, column: 1, scope: !9520)
!9709 = distinct !DISubprogram(name: "widget_state_numslider", scope: !3, file: !3, line: 1879, type: !4925, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9710 = !DILocalVariable(name: "wt", arg: 1, scope: !9709, file: !3, line: 1879, type: !1431)
!9711 = !DILocation(line: 1879, column: 50, scope: !9709)
!9712 = !DILocalVariable(name: "state", arg: 2, scope: !9709, file: !3, line: 1879, type: !1254)
!9713 = !DILocation(line: 1879, column: 58, scope: !9709)
!9714 = !DILocalVariable(name: "wcol_state", scope: !9709, file: !3, line: 1881, type: !1439)
!9715 = !DILocation(line: 1881, column: 23, scope: !9709)
!9716 = !DILocation(line: 1881, column: 36, scope: !9709)
!9717 = !DILocation(line: 1881, column: 40, scope: !9709)
!9718 = !DILocalVariable(name: "blend", scope: !9709, file: !3, line: 1882, type: !1253)
!9719 = !DILocation(line: 1882, column: 8, scope: !9709)
!9720 = !DILocation(line: 1882, column: 16, scope: !9709)
!9721 = !DILocation(line: 1882, column: 28, scope: !9709)
!9722 = !DILocation(line: 1882, column: 34, scope: !9709)
!9723 = !DILocation(line: 1885, column: 15, scope: !9709)
!9724 = !DILocation(line: 1885, column: 19, scope: !9709)
!9725 = !DILocation(line: 1885, column: 2, scope: !9709)
!9726 = !DILocation(line: 1889, column: 6, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 1889, column: 6)
!9728 = !DILocation(line: 1889, column: 12, scope: !9727)
!9729 = !DILocation(line: 1889, column: 6, scope: !9709)
!9730 = !DILocation(line: 1891, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1891, column: 7)
!9732 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 1889, column: 25)
!9733 = !DILocation(line: 1891, column: 13, scope: !9731)
!9734 = !DILocation(line: 1891, column: 7, scope: !9732)
!9735 = !DILocation(line: 1892, column: 23, scope: !9731)
!9736 = !DILocation(line: 1892, column: 27, scope: !9731)
!9737 = !DILocation(line: 1892, column: 32, scope: !9731)
!9738 = !DILocation(line: 1892, column: 38, scope: !9731)
!9739 = !DILocation(line: 1892, column: 50, scope: !9731)
!9740 = !DILocation(line: 1892, column: 65, scope: !9731)
!9741 = !DILocation(line: 1892, column: 4, scope: !9731)
!9742 = !DILocation(line: 1893, column: 12, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 1893, column: 12)
!9744 = !DILocation(line: 1893, column: 18, scope: !9743)
!9745 = !DILocation(line: 1893, column: 12, scope: !9731)
!9746 = !DILocation(line: 1894, column: 23, scope: !9743)
!9747 = !DILocation(line: 1894, column: 27, scope: !9743)
!9748 = !DILocation(line: 1894, column: 32, scope: !9743)
!9749 = !DILocation(line: 1894, column: 38, scope: !9743)
!9750 = !DILocation(line: 1894, column: 50, scope: !9743)
!9751 = !DILocation(line: 1894, column: 66, scope: !9743)
!9752 = !DILocation(line: 1894, column: 4, scope: !9743)
!9753 = !DILocation(line: 1895, column: 12, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 1895, column: 12)
!9755 = !DILocation(line: 1895, column: 18, scope: !9754)
!9756 = !DILocation(line: 1895, column: 12, scope: !9743)
!9757 = !DILocation(line: 1896, column: 23, scope: !9754)
!9758 = !DILocation(line: 1896, column: 27, scope: !9754)
!9759 = !DILocation(line: 1896, column: 32, scope: !9754)
!9760 = !DILocation(line: 1896, column: 38, scope: !9754)
!9761 = !DILocation(line: 1896, column: 50, scope: !9754)
!9762 = !DILocation(line: 1896, column: 68, scope: !9754)
!9763 = !DILocation(line: 1896, column: 4, scope: !9754)
!9764 = !DILocation(line: 1898, column: 7, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1898, column: 7)
!9766 = !DILocation(line: 1898, column: 13, scope: !9765)
!9767 = !DILocation(line: 1898, column: 7, scope: !9732)
!9768 = !DILocalVariable(name: "sw_ap", scope: !9769, file: !3, line: 1899, type: !1300)
!9769 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 1899, column: 4)
!9770 = !DILocation(line: 1899, column: 4, scope: !9769)
!9771 = !DILocation(line: 1900, column: 2, scope: !9732)
!9772 = !DILocation(line: 1902, column: 7, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 1902, column: 7)
!9774 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 1901, column: 7)
!9775 = !DILocation(line: 1902, column: 13, scope: !9773)
!9776 = !DILocation(line: 1902, column: 7, scope: !9774)
!9777 = !DILocation(line: 1903, column: 23, scope: !9773)
!9778 = !DILocation(line: 1903, column: 27, scope: !9773)
!9779 = !DILocation(line: 1903, column: 32, scope: !9773)
!9780 = !DILocation(line: 1903, column: 38, scope: !9773)
!9781 = !DILocation(line: 1903, column: 50, scope: !9773)
!9782 = !DILocation(line: 1903, column: 61, scope: !9773)
!9783 = !DILocation(line: 1903, column: 4, scope: !9773)
!9784 = !DILocation(line: 1904, column: 12, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1904, column: 12)
!9786 = !DILocation(line: 1904, column: 18, scope: !9785)
!9787 = !DILocation(line: 1904, column: 12, scope: !9773)
!9788 = !DILocation(line: 1905, column: 23, scope: !9785)
!9789 = !DILocation(line: 1905, column: 27, scope: !9785)
!9790 = !DILocation(line: 1905, column: 32, scope: !9785)
!9791 = !DILocation(line: 1905, column: 38, scope: !9785)
!9792 = !DILocation(line: 1905, column: 50, scope: !9785)
!9793 = !DILocation(line: 1905, column: 62, scope: !9785)
!9794 = !DILocation(line: 1905, column: 4, scope: !9785)
!9795 = !DILocation(line: 1906, column: 12, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 1906, column: 12)
!9797 = !DILocation(line: 1906, column: 18, scope: !9796)
!9798 = !DILocation(line: 1906, column: 12, scope: !9785)
!9799 = !DILocation(line: 1907, column: 23, scope: !9796)
!9800 = !DILocation(line: 1907, column: 27, scope: !9796)
!9801 = !DILocation(line: 1907, column: 32, scope: !9796)
!9802 = !DILocation(line: 1907, column: 38, scope: !9796)
!9803 = !DILocation(line: 1907, column: 50, scope: !9796)
!9804 = !DILocation(line: 1907, column: 64, scope: !9796)
!9805 = !DILocation(line: 1907, column: 4, scope: !9796)
!9806 = !DILocation(line: 1909, column: 1, scope: !9709)
!9807 = distinct !DISubprogram(name: "widget_roundbut", scope: !3, file: !3, line: 3209, type: !1449, scopeLine: 3210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9808 = !DILocalVariable(name: "wcol", arg: 1, scope: !9807, file: !3, line: 3209, type: !1436)
!9809 = !DILocation(line: 3209, column: 45, scope: !9807)
!9810 = !DILocalVariable(name: "rect", arg: 2, scope: !9807, file: !3, line: 3209, type: !1451)
!9811 = !DILocation(line: 3209, column: 57, scope: !9807)
!9812 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9807, file: !3, line: 3209, type: !1254)
!9813 = !DILocation(line: 3209, column: 67, scope: !9807)
!9814 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9807, file: !3, line: 3209, type: !1254)
!9815 = !DILocation(line: 3209, column: 86, scope: !9807)
!9816 = !DILocalVariable(name: "wtb", scope: !9807, file: !3, line: 3211, type: !3146)
!9817 = !DILocation(line: 3211, column: 15, scope: !9807)
!9818 = !DILocalVariable(name: "rad", scope: !9807, file: !3, line: 3212, type: !1410)
!9819 = !DILocation(line: 3212, column: 14, scope: !9807)
!9820 = !DILocation(line: 3212, column: 30, scope: !9807)
!9821 = !DILocation(line: 3212, column: 28, scope: !9807)
!9822 = !DILocation(line: 3212, column: 26, scope: !9807)
!9823 = !DILocation(line: 3214, column: 2, scope: !9807)
!9824 = !DILocation(line: 3217, column: 24, scope: !9807)
!9825 = !DILocation(line: 3217, column: 39, scope: !9807)
!9826 = !DILocation(line: 3217, column: 45, scope: !9807)
!9827 = !DILocation(line: 3217, column: 2, scope: !9807)
!9828 = !DILocation(line: 3219, column: 24, scope: !9807)
!9829 = !DILocation(line: 3219, column: 2, scope: !9807)
!9830 = !DILocation(line: 3220, column: 1, scope: !9807)
!9831 = distinct !DISubprogram(name: "widget_menu_back", scope: !3, file: !3, line: 2044, type: !1449, scopeLine: 2045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9832 = !DILocalVariable(name: "wcol", arg: 1, scope: !9831, file: !3, line: 2044, type: !1436)
!9833 = !DILocation(line: 2044, column: 46, scope: !9831)
!9834 = !DILocalVariable(name: "rect", arg: 2, scope: !9831, file: !3, line: 2044, type: !1451)
!9835 = !DILocation(line: 2044, column: 58, scope: !9831)
!9836 = !DILocalVariable(name: "flag", arg: 3, scope: !9831, file: !3, line: 2044, type: !1254)
!9837 = !DILocation(line: 2044, column: 68, scope: !9831)
!9838 = !DILocalVariable(name: "direction", arg: 4, scope: !9831, file: !3, line: 2044, type: !1254)
!9839 = !DILocation(line: 2044, column: 78, scope: !9831)
!9840 = !DILocalVariable(name: "wtb", scope: !9831, file: !3, line: 2046, type: !3146)
!9841 = !DILocation(line: 2046, column: 15, scope: !9831)
!9842 = !DILocalVariable(name: "roundboxalign", scope: !9831, file: !3, line: 2047, type: !1254)
!9843 = !DILocation(line: 2047, column: 6, scope: !9831)
!9844 = !DILocation(line: 2049, column: 2, scope: !9831)
!9845 = !DILocation(line: 2052, column: 6, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 2052, column: 6)
!9847 = !DILocation(line: 2052, column: 11, scope: !9846)
!9848 = !DILocation(line: 2052, column: 6, scope: !9831)
!9849 = !DILocation(line: 2055, column: 2, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 2052, column: 29)
!9851 = !DILocation(line: 2056, column: 11, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 2056, column: 11)
!9853 = !DILocation(line: 2056, column: 21, scope: !9852)
!9854 = !DILocation(line: 2056, column: 11, scope: !9846)
!9855 = !DILocation(line: 2057, column: 17, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 2056, column: 33)
!9857 = !DILocation(line: 2058, column: 26, scope: !9856)
!9858 = !DILocation(line: 2058, column: 24, scope: !9856)
!9859 = !DILocation(line: 2058, column: 22, scope: !9856)
!9860 = !DILocation(line: 2058, column: 3, scope: !9856)
!9861 = !DILocation(line: 2058, column: 9, scope: !9856)
!9862 = !DILocation(line: 2058, column: 14, scope: !9856)
!9863 = !DILocation(line: 2059, column: 2, scope: !9856)
!9864 = !DILocation(line: 2060, column: 11, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 2060, column: 11)
!9866 = !DILocation(line: 2060, column: 21, scope: !9865)
!9867 = !DILocation(line: 2060, column: 11, scope: !9852)
!9868 = !DILocation(line: 2061, column: 17, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2060, column: 32)
!9870 = !DILocation(line: 2062, column: 26, scope: !9869)
!9871 = !DILocation(line: 2062, column: 24, scope: !9869)
!9872 = !DILocation(line: 2062, column: 22, scope: !9869)
!9873 = !DILocation(line: 2062, column: 3, scope: !9869)
!9874 = !DILocation(line: 2062, column: 9, scope: !9869)
!9875 = !DILocation(line: 2062, column: 14, scope: !9869)
!9876 = !DILocation(line: 2063, column: 2, scope: !9869)
!9877 = !DILocation(line: 2065, column: 2, scope: !9831)
!9878 = !DILocation(line: 2066, column: 20, scope: !9831)
!9879 = !DILocation(line: 2066, column: 26, scope: !9831)
!9880 = !DILocation(line: 2066, column: 51, scope: !9831)
!9881 = !DILocation(line: 2066, column: 49, scope: !9831)
!9882 = !DILocation(line: 2066, column: 47, scope: !9831)
!9883 = !DILocation(line: 2066, column: 2, scope: !9831)
!9884 = !DILocation(line: 2068, column: 24, scope: !9831)
!9885 = !DILocation(line: 2068, column: 39, scope: !9831)
!9886 = !DILocation(line: 2068, column: 55, scope: !9831)
!9887 = !DILocation(line: 2068, column: 53, scope: !9831)
!9888 = !DILocation(line: 2068, column: 51, scope: !9831)
!9889 = !DILocation(line: 2068, column: 2, scope: !9831)
!9890 = !DILocation(line: 2069, column: 6, scope: !9831)
!9891 = !DILocation(line: 2069, column: 13, scope: !9831)
!9892 = !DILocation(line: 2070, column: 24, scope: !9831)
!9893 = !DILocation(line: 2070, column: 2, scope: !9831)
!9894 = !DILocation(line: 2072, column: 2, scope: !9831)
!9895 = !DILocation(line: 2073, column: 1, scope: !9831)
!9896 = distinct !DISubprogram(name: "widget_textbut", scope: !3, file: !3, line: 2954, type: !1449, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9897 = !DILocalVariable(name: "wcol", arg: 1, scope: !9896, file: !3, line: 2954, type: !1436)
!9898 = !DILocation(line: 2954, column: 44, scope: !9896)
!9899 = !DILocalVariable(name: "rect", arg: 2, scope: !9896, file: !3, line: 2954, type: !1451)
!9900 = !DILocation(line: 2954, column: 56, scope: !9896)
!9901 = !DILocalVariable(name: "state", arg: 3, scope: !9896, file: !3, line: 2954, type: !1254)
!9902 = !DILocation(line: 2954, column: 66, scope: !9896)
!9903 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9896, file: !3, line: 2954, type: !1254)
!9904 = !DILocation(line: 2954, column: 77, scope: !9896)
!9905 = !DILocalVariable(name: "wtb", scope: !9896, file: !3, line: 2956, type: !3146)
!9906 = !DILocation(line: 2956, column: 15, scope: !9896)
!9907 = !DILocalVariable(name: "rad", scope: !9896, file: !3, line: 2957, type: !1253)
!9908 = !DILocation(line: 2957, column: 8, scope: !9896)
!9909 = !DILocation(line: 2959, column: 6, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 2959, column: 6)
!9911 = !DILocation(line: 2959, column: 12, scope: !9910)
!9912 = !DILocation(line: 2959, column: 6, scope: !9896)
!9913 = !DILocalVariable(name: "sw_ap", scope: !9914, file: !3, line: 2960, type: !1300)
!9914 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 2960, column: 3)
!9915 = !DILocation(line: 2960, column: 3, scope: !9914)
!9916 = !DILocation(line: 2962, column: 2, scope: !9896)
!9917 = !DILocation(line: 2965, column: 17, scope: !9896)
!9918 = !DILocation(line: 2965, column: 15, scope: !9896)
!9919 = !DILocation(line: 2965, column: 13, scope: !9896)
!9920 = !DILocation(line: 2965, column: 6, scope: !9896)
!9921 = !DILocation(line: 2966, column: 24, scope: !9896)
!9922 = !DILocation(line: 2966, column: 39, scope: !9896)
!9923 = !DILocation(line: 2966, column: 45, scope: !9896)
!9924 = !DILocation(line: 2966, column: 2, scope: !9896)
!9925 = !DILocation(line: 2968, column: 24, scope: !9896)
!9926 = !DILocation(line: 2968, column: 2, scope: !9896)
!9927 = !DILocation(line: 2970, column: 1, scope: !9896)
!9928 = distinct !DISubprogram(name: "widget_menubut", scope: !3, file: !3, line: 2973, type: !1449, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9929 = !DILocalVariable(name: "wcol", arg: 1, scope: !9928, file: !3, line: 2973, type: !1436)
!9930 = !DILocation(line: 2973, column: 44, scope: !9928)
!9931 = !DILocalVariable(name: "rect", arg: 2, scope: !9928, file: !3, line: 2973, type: !1451)
!9932 = !DILocation(line: 2973, column: 56, scope: !9928)
!9933 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9928, file: !3, line: 2973, type: !1254)
!9934 = !DILocation(line: 2973, column: 66, scope: !9928)
!9935 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9928, file: !3, line: 2973, type: !1254)
!9936 = !DILocation(line: 2973, column: 85, scope: !9928)
!9937 = !DILocalVariable(name: "wtb", scope: !9928, file: !3, line: 2975, type: !3146)
!9938 = !DILocation(line: 2975, column: 15, scope: !9928)
!9939 = !DILocalVariable(name: "rad", scope: !9928, file: !3, line: 2976, type: !1253)
!9940 = !DILocation(line: 2976, column: 8, scope: !9928)
!9941 = !DILocation(line: 2978, column: 2, scope: !9928)
!9942 = !DILocation(line: 2981, column: 17, scope: !9928)
!9943 = !DILocation(line: 2981, column: 15, scope: !9928)
!9944 = !DILocation(line: 2981, column: 13, scope: !9928)
!9945 = !DILocation(line: 2981, column: 6, scope: !9928)
!9946 = !DILocation(line: 2982, column: 24, scope: !9928)
!9947 = !DILocation(line: 2982, column: 39, scope: !9928)
!9948 = !DILocation(line: 2982, column: 45, scope: !9928)
!9949 = !DILocation(line: 2982, column: 2, scope: !9928)
!9950 = !DILocation(line: 2985, column: 25, scope: !9928)
!9951 = !DILocation(line: 2985, column: 32, scope: !9928)
!9952 = !DILocation(line: 2985, column: 2, scope: !9928)
!9953 = !DILocation(line: 2987, column: 24, scope: !9928)
!9954 = !DILocation(line: 2987, column: 2, scope: !9928)
!9955 = !DILocation(line: 2990, column: 37, scope: !9928)
!9956 = !DILocation(line: 2990, column: 21, scope: !9928)
!9957 = !DILocation(line: 2990, column: 19, scope: !9928)
!9958 = !DILocation(line: 2990, column: 44, scope: !9928)
!9959 = !DILocation(line: 2990, column: 2, scope: !9928)
!9960 = !DILocation(line: 2990, column: 8, scope: !9928)
!9961 = !DILocation(line: 2990, column: 13, scope: !9928)
!9962 = !DILocation(line: 2991, column: 1, scope: !9928)
!9963 = distinct !DISubprogram(name: "widget_menuiconbut", scope: !3, file: !3, line: 2993, type: !1449, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9964 = !DILocalVariable(name: "wcol", arg: 1, scope: !9963, file: !3, line: 2993, type: !1436)
!9965 = !DILocation(line: 2993, column: 48, scope: !9963)
!9966 = !DILocalVariable(name: "rect", arg: 2, scope: !9963, file: !3, line: 2993, type: !1451)
!9967 = !DILocation(line: 2993, column: 60, scope: !9963)
!9968 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9963, file: !3, line: 2993, type: !1254)
!9969 = !DILocation(line: 2993, column: 70, scope: !9963)
!9970 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9963, file: !3, line: 2993, type: !1254)
!9971 = !DILocation(line: 2993, column: 89, scope: !9963)
!9972 = !DILocalVariable(name: "wtb", scope: !9963, file: !3, line: 2995, type: !3146)
!9973 = !DILocation(line: 2995, column: 15, scope: !9963)
!9974 = !DILocalVariable(name: "rad", scope: !9963, file: !3, line: 2996, type: !1253)
!9975 = !DILocation(line: 2996, column: 8, scope: !9963)
!9976 = !DILocation(line: 2998, column: 2, scope: !9963)
!9977 = !DILocation(line: 3001, column: 17, scope: !9963)
!9978 = !DILocation(line: 3001, column: 15, scope: !9963)
!9979 = !DILocation(line: 3001, column: 13, scope: !9963)
!9980 = !DILocation(line: 3001, column: 6, scope: !9963)
!9981 = !DILocation(line: 3002, column: 24, scope: !9963)
!9982 = !DILocation(line: 3002, column: 39, scope: !9963)
!9983 = !DILocation(line: 3002, column: 45, scope: !9963)
!9984 = !DILocation(line: 3002, column: 2, scope: !9963)
!9985 = !DILocation(line: 3005, column: 24, scope: !9963)
!9986 = !DILocation(line: 3005, column: 2, scope: !9963)
!9987 = !DILocation(line: 3006, column: 1, scope: !9963)
!9988 = distinct !DISubprogram(name: "widget_menunodebut", scope: !3, file: !3, line: 3008, type: !1449, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!9989 = !DILocalVariable(name: "wcol", arg: 1, scope: !9988, file: !3, line: 3008, type: !1436)
!9990 = !DILocation(line: 3008, column: 48, scope: !9988)
!9991 = !DILocalVariable(name: "rect", arg: 2, scope: !9988, file: !3, line: 3008, type: !1451)
!9992 = !DILocation(line: 3008, column: 60, scope: !9988)
!9993 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !9988, file: !3, line: 3008, type: !1254)
!9994 = !DILocation(line: 3008, column: 70, scope: !9988)
!9995 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !9988, file: !3, line: 3008, type: !1254)
!9996 = !DILocation(line: 3008, column: 89, scope: !9988)
!9997 = !DILocalVariable(name: "wtb", scope: !9988, file: !3, line: 3011, type: !3146)
!9998 = !DILocation(line: 3011, column: 15, scope: !9988)
!9999 = !DILocalVariable(name: "wcol_backup", scope: !9988, file: !3, line: 3012, type: !1437)
!10000 = !DILocation(line: 3012, column: 17, scope: !9988)
!10001 = !DILocation(line: 3012, column: 32, scope: !9988)
!10002 = !DILocation(line: 3012, column: 31, scope: !9988)
!10003 = !DILocalVariable(name: "rad", scope: !9988, file: !3, line: 3013, type: !1253)
!10004 = !DILocation(line: 3013, column: 8, scope: !9988)
!10005 = !DILocation(line: 3015, column: 2, scope: !9988)
!10006 = !DILocation(line: 3018, column: 17, scope: !9988)
!10007 = !DILocation(line: 3018, column: 15, scope: !9988)
!10008 = !DILocation(line: 3018, column: 13, scope: !9988)
!10009 = !DILocation(line: 3018, column: 6, scope: !9988)
!10010 = !DILocation(line: 3019, column: 24, scope: !9988)
!10011 = !DILocation(line: 3019, column: 39, scope: !9988)
!10012 = !DILocation(line: 3019, column: 45, scope: !9988)
!10013 = !DILocation(line: 3019, column: 2, scope: !9988)
!10014 = !DILocation(line: 3021, column: 26, scope: !9988)
!10015 = !DILocation(line: 3021, column: 32, scope: !9988)
!10016 = !DILocation(line: 3021, column: 41, scope: !9988)
!10017 = !DILocation(line: 3021, column: 19, scope: !9988)
!10018 = !DILocation(line: 3021, column: 2, scope: !9988)
!10019 = !DILocation(line: 3021, column: 8, scope: !9988)
!10020 = !DILocation(line: 3021, column: 17, scope: !9988)
!10021 = !DILocation(line: 3022, column: 26, scope: !9988)
!10022 = !DILocation(line: 3022, column: 32, scope: !9988)
!10023 = !DILocation(line: 3022, column: 41, scope: !9988)
!10024 = !DILocation(line: 3022, column: 19, scope: !9988)
!10025 = !DILocation(line: 3022, column: 2, scope: !9988)
!10026 = !DILocation(line: 3022, column: 8, scope: !9988)
!10027 = !DILocation(line: 3022, column: 17, scope: !9988)
!10028 = !DILocation(line: 3023, column: 26, scope: !9988)
!10029 = !DILocation(line: 3023, column: 32, scope: !9988)
!10030 = !DILocation(line: 3023, column: 41, scope: !9988)
!10031 = !DILocation(line: 3023, column: 19, scope: !9988)
!10032 = !DILocation(line: 3023, column: 2, scope: !9988)
!10033 = !DILocation(line: 3023, column: 8, scope: !9988)
!10034 = !DILocation(line: 3023, column: 17, scope: !9988)
!10035 = !DILocation(line: 3024, column: 28, scope: !9988)
!10036 = !DILocation(line: 3024, column: 34, scope: !9988)
!10037 = !DILocation(line: 3024, column: 45, scope: !9988)
!10038 = !DILocation(line: 3024, column: 21, scope: !9988)
!10039 = !DILocation(line: 3024, column: 2, scope: !9988)
!10040 = !DILocation(line: 3024, column: 8, scope: !9988)
!10041 = !DILocation(line: 3024, column: 19, scope: !9988)
!10042 = !DILocation(line: 3025, column: 28, scope: !9988)
!10043 = !DILocation(line: 3025, column: 34, scope: !9988)
!10044 = !DILocation(line: 3025, column: 45, scope: !9988)
!10045 = !DILocation(line: 3025, column: 21, scope: !9988)
!10046 = !DILocation(line: 3025, column: 2, scope: !9988)
!10047 = !DILocation(line: 3025, column: 8, scope: !9988)
!10048 = !DILocation(line: 3025, column: 19, scope: !9988)
!10049 = !DILocation(line: 3026, column: 28, scope: !9988)
!10050 = !DILocation(line: 3026, column: 34, scope: !9988)
!10051 = !DILocation(line: 3026, column: 45, scope: !9988)
!10052 = !DILocation(line: 3026, column: 21, scope: !9988)
!10053 = !DILocation(line: 3026, column: 2, scope: !9988)
!10054 = !DILocation(line: 3026, column: 8, scope: !9988)
!10055 = !DILocation(line: 3026, column: 19, scope: !9988)
!10056 = !DILocation(line: 3029, column: 24, scope: !9988)
!10057 = !DILocation(line: 3029, column: 2, scope: !9988)
!10058 = !DILocation(line: 3030, column: 3, scope: !9988)
!10059 = !DILocation(line: 3030, column: 10, scope: !9988)
!10060 = !DILocation(line: 3031, column: 1, scope: !9988)
!10061 = distinct !DISubprogram(name: "widget_pulldownbut", scope: !3, file: !3, line: 3033, type: !1449, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10062 = !DILocalVariable(name: "wcol", arg: 1, scope: !10061, file: !3, line: 3033, type: !1436)
!10063 = !DILocation(line: 3033, column: 48, scope: !10061)
!10064 = !DILocalVariable(name: "rect", arg: 2, scope: !10061, file: !3, line: 3033, type: !1451)
!10065 = !DILocation(line: 3033, column: 60, scope: !10061)
!10066 = !DILocalVariable(name: "state", arg: 3, scope: !10061, file: !3, line: 3033, type: !1254)
!10067 = !DILocation(line: 3033, column: 70, scope: !10061)
!10068 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !10061, file: !3, line: 3033, type: !1254)
!10069 = !DILocation(line: 3033, column: 81, scope: !10061)
!10070 = !DILocation(line: 3035, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 3035, column: 6)
!10072 = !DILocation(line: 3035, column: 12, scope: !10071)
!10073 = !DILocation(line: 3035, column: 6, scope: !10061)
!10074 = !DILocalVariable(name: "wtb", scope: !10075, file: !3, line: 3036, type: !3146)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 3035, column: 25)
!10076 = !DILocation(line: 3036, column: 16, scope: !10075)
!10077 = !DILocalVariable(name: "rad", scope: !10075, file: !3, line: 3037, type: !1410)
!10078 = !DILocation(line: 3037, column: 15, scope: !10075)
!10079 = !DILocation(line: 3037, column: 30, scope: !10075)
!10080 = !DILocation(line: 3037, column: 28, scope: !10075)
!10081 = !DILocation(line: 3037, column: 26, scope: !10075)
!10082 = !DILocation(line: 3039, column: 3, scope: !10075)
!10083 = !DILocation(line: 3042, column: 25, scope: !10075)
!10084 = !DILocation(line: 3042, column: 40, scope: !10075)
!10085 = !DILocation(line: 3042, column: 46, scope: !10075)
!10086 = !DILocation(line: 3042, column: 3, scope: !10075)
!10087 = !DILocation(line: 3044, column: 25, scope: !10075)
!10088 = !DILocation(line: 3044, column: 3, scope: !10075)
!10089 = !DILocation(line: 3045, column: 2, scope: !10075)
!10090 = !DILocation(line: 3046, column: 1, scope: !10061)
!10091 = distinct !DISubprogram(name: "widget_state_pulldown", scope: !3, file: !3, line: 1933, type: !4925, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10092 = !DILocalVariable(name: "wt", arg: 1, scope: !10091, file: !3, line: 1933, type: !1431)
!10093 = !DILocation(line: 1933, column: 49, scope: !10091)
!10094 = !DILocalVariable(name: "state", arg: 2, scope: !10091, file: !3, line: 1933, type: !1254)
!10095 = !DILocation(line: 1933, column: 57, scope: !10091)
!10096 = !DILocation(line: 1935, column: 2, scope: !10091)
!10097 = !DILocation(line: 1935, column: 6, scope: !10091)
!10098 = !DILocation(line: 1935, column: 15, scope: !10091)
!10099 = !DILocation(line: 1935, column: 19, scope: !10091)
!10100 = !DILocation(line: 1935, column: 13, scope: !10091)
!10101 = !DILocation(line: 1937, column: 18, scope: !10091)
!10102 = !DILocation(line: 1937, column: 22, scope: !10091)
!10103 = !DILocation(line: 1937, column: 27, scope: !10091)
!10104 = !DILocation(line: 1937, column: 34, scope: !10091)
!10105 = !DILocation(line: 1937, column: 38, scope: !10091)
!10106 = !DILocation(line: 1937, column: 43, scope: !10091)
!10107 = !DILocation(line: 1937, column: 2, scope: !10091)
!10108 = !DILocation(line: 1938, column: 18, scope: !10091)
!10109 = !DILocation(line: 1938, column: 22, scope: !10091)
!10110 = !DILocation(line: 1938, column: 27, scope: !10091)
!10111 = !DILocation(line: 1938, column: 36, scope: !10091)
!10112 = !DILocation(line: 1938, column: 40, scope: !10091)
!10113 = !DILocation(line: 1938, column: 45, scope: !10091)
!10114 = !DILocation(line: 1938, column: 2, scope: !10091)
!10115 = !DILocation(line: 1940, column: 6, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1940, column: 6)
!10117 = !DILocation(line: 1940, column: 12, scope: !10116)
!10118 = !DILocation(line: 1940, column: 6, scope: !10091)
!10119 = !DILocation(line: 1941, column: 19, scope: !10116)
!10120 = !DILocation(line: 1941, column: 23, scope: !10116)
!10121 = !DILocation(line: 1941, column: 28, scope: !10116)
!10122 = !DILocation(line: 1941, column: 34, scope: !10116)
!10123 = !DILocation(line: 1941, column: 38, scope: !10116)
!10124 = !DILocation(line: 1941, column: 43, scope: !10116)
!10125 = !DILocation(line: 1941, column: 3, scope: !10116)
!10126 = !DILocation(line: 1942, column: 1, scope: !10091)
!10127 = distinct !DISubprogram(name: "widget_menu_itembut", scope: !3, file: !3, line: 3048, type: !1449, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10128 = !DILocalVariable(name: "wcol", arg: 1, scope: !10127, file: !3, line: 3048, type: !1436)
!10129 = !DILocation(line: 3048, column: 49, scope: !10127)
!10130 = !DILocalVariable(name: "rect", arg: 2, scope: !10127, file: !3, line: 3048, type: !1451)
!10131 = !DILocation(line: 3048, column: 61, scope: !10127)
!10132 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !10127, file: !3, line: 3048, type: !1254)
!10133 = !DILocation(line: 3048, column: 71, scope: !10127)
!10134 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 4, scope: !10127, file: !3, line: 3048, type: !1254)
!10135 = !DILocation(line: 3048, column: 90, scope: !10127)
!10136 = !DILocalVariable(name: "wtb", scope: !10127, file: !3, line: 3050, type: !3146)
!10137 = !DILocation(line: 3050, column: 15, scope: !10127)
!10138 = !DILocation(line: 3052, column: 2, scope: !10127)
!10139 = !DILocation(line: 3055, column: 6, scope: !10127)
!10140 = !DILocation(line: 3055, column: 14, scope: !10127)
!10141 = !DILocation(line: 3056, column: 27, scope: !10127)
!10142 = !DILocation(line: 3056, column: 2, scope: !10127)
!10143 = !DILocation(line: 3058, column: 24, scope: !10127)
!10144 = !DILocation(line: 3058, column: 2, scope: !10127)
!10145 = !DILocation(line: 3059, column: 1, scope: !10127)
!10146 = distinct !DISubprogram(name: "widget_state_menu_item", scope: !3, file: !3, line: 1973, type: !4925, scopeLine: 1974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10147 = !DILocalVariable(name: "wt", arg: 1, scope: !10146, file: !3, line: 1973, type: !1431)
!10148 = !DILocation(line: 1973, column: 50, scope: !10146)
!10149 = !DILocalVariable(name: "state", arg: 2, scope: !10146, file: !3, line: 1973, type: !1254)
!10150 = !DILocation(line: 1973, column: 58, scope: !10146)
!10151 = !DILocation(line: 1975, column: 2, scope: !10146)
!10152 = !DILocation(line: 1975, column: 6, scope: !10146)
!10153 = !DILocation(line: 1975, column: 15, scope: !10146)
!10154 = !DILocation(line: 1975, column: 19, scope: !10146)
!10155 = !DILocation(line: 1975, column: 13, scope: !10146)
!10156 = !DILocation(line: 1978, column: 7, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 1978, column: 6)
!10158 = !DILocation(line: 1978, column: 13, scope: !10157)
!10159 = !DILocation(line: 1978, column: 32, scope: !10157)
!10160 = !DILocation(line: 1978, column: 36, scope: !10157)
!10161 = !DILocation(line: 1978, column: 42, scope: !10157)
!10162 = !DILocation(line: 1978, column: 6, scope: !10146)
!10163 = !DILocation(line: 1979, column: 22, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1978, column: 56)
!10165 = !DILocation(line: 1979, column: 26, scope: !10164)
!10166 = !DILocation(line: 1979, column: 31, scope: !10164)
!10167 = !DILocation(line: 1979, column: 37, scope: !10164)
!10168 = !DILocation(line: 1979, column: 41, scope: !10164)
!10169 = !DILocation(line: 1979, column: 46, scope: !10164)
!10170 = !DILocation(line: 1979, column: 3, scope: !10164)
!10171 = !DILocation(line: 1982, column: 19, scope: !10164)
!10172 = !DILocation(line: 1982, column: 23, scope: !10164)
!10173 = !DILocation(line: 1982, column: 28, scope: !10164)
!10174 = !DILocation(line: 1982, column: 35, scope: !10164)
!10175 = !DILocation(line: 1982, column: 39, scope: !10164)
!10176 = !DILocation(line: 1982, column: 44, scope: !10164)
!10177 = !DILocation(line: 1982, column: 3, scope: !10164)
!10178 = !DILocation(line: 1983, column: 3, scope: !10164)
!10179 = !DILocation(line: 1983, column: 7, scope: !10164)
!10180 = !DILocation(line: 1983, column: 12, scope: !10164)
!10181 = !DILocation(line: 1983, column: 21, scope: !10164)
!10182 = !DILocation(line: 1984, column: 2, scope: !10164)
!10183 = !DILocation(line: 1986, column: 11, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1986, column: 11)
!10185 = !DILocation(line: 1986, column: 17, scope: !10184)
!10186 = !DILocation(line: 1986, column: 11, scope: !10157)
!10187 = !DILocation(line: 1987, column: 22, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 1986, column: 56)
!10189 = !DILocation(line: 1987, column: 26, scope: !10188)
!10190 = !DILocation(line: 1987, column: 31, scope: !10188)
!10191 = !DILocation(line: 1987, column: 37, scope: !10188)
!10192 = !DILocation(line: 1987, column: 41, scope: !10188)
!10193 = !DILocation(line: 1987, column: 46, scope: !10188)
!10194 = !DILocation(line: 1987, column: 3, scope: !10188)
!10195 = !DILocation(line: 1988, column: 2, scope: !10188)
!10196 = !DILocation(line: 1990, column: 11, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 1990, column: 11)
!10198 = !DILocation(line: 1990, column: 17, scope: !10197)
!10199 = !DILocation(line: 1990, column: 11, scope: !10184)
!10200 = !DILocation(line: 1991, column: 19, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1990, column: 30)
!10202 = !DILocation(line: 1991, column: 23, scope: !10201)
!10203 = !DILocation(line: 1991, column: 28, scope: !10201)
!10204 = !DILocation(line: 1991, column: 35, scope: !10201)
!10205 = !DILocation(line: 1991, column: 39, scope: !10201)
!10206 = !DILocation(line: 1991, column: 44, scope: !10201)
!10207 = !DILocation(line: 1991, column: 3, scope: !10201)
!10208 = !DILocation(line: 1992, column: 19, scope: !10201)
!10209 = !DILocation(line: 1992, column: 23, scope: !10201)
!10210 = !DILocation(line: 1992, column: 28, scope: !10201)
!10211 = !DILocation(line: 1992, column: 34, scope: !10201)
!10212 = !DILocation(line: 1992, column: 38, scope: !10201)
!10213 = !DILocation(line: 1992, column: 43, scope: !10201)
!10214 = !DILocation(line: 1992, column: 3, scope: !10201)
!10215 = !DILocation(line: 1993, column: 2, scope: !10201)
!10216 = !DILocation(line: 1994, column: 1, scope: !10146)
!10217 = distinct !DISubprogram(name: "widget_icon_has_anim", scope: !3, file: !3, line: 2932, type: !1462, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10218 = !DILocalVariable(name: "but", arg: 1, scope: !10217, file: !3, line: 2932, type: !1464)
!10219 = !DILocation(line: 2932, column: 41, scope: !10217)
!10220 = !DILocalVariable(name: "wcol", arg: 2, scope: !10217, file: !3, line: 2932, type: !1436)
!10221 = !DILocation(line: 2932, column: 62, scope: !10217)
!10222 = !DILocalVariable(name: "rect", arg: 3, scope: !10217, file: !3, line: 2932, type: !1451)
!10223 = !DILocation(line: 2932, column: 74, scope: !10217)
!10224 = !DILocalVariable(name: "state", arg: 4, scope: !10217, file: !3, line: 2932, type: !1254)
!10225 = !DILocation(line: 2932, column: 84, scope: !10217)
!10226 = !DILocalVariable(name: "roundboxalign", arg: 5, scope: !10217, file: !3, line: 2932, type: !1254)
!10227 = !DILocation(line: 2932, column: 95, scope: !10217)
!10228 = !DILocation(line: 2934, column: 6, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 2934, column: 6)
!10230 = !DILocation(line: 2934, column: 12, scope: !10229)
!10231 = !DILocation(line: 2934, column: 6, scope: !10217)
!10232 = !DILocalVariable(name: "wtb", scope: !10233, file: !3, line: 2935, type: !3146)
!10233 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2934, column: 89)
!10234 = !DILocation(line: 2935, column: 16, scope: !10233)
!10235 = !DILocalVariable(name: "rad", scope: !10233, file: !3, line: 2936, type: !1253)
!10236 = !DILocation(line: 2936, column: 9, scope: !10233)
!10237 = !DILocation(line: 2938, column: 3, scope: !10233)
!10238 = !DILocation(line: 2939, column: 7, scope: !10233)
!10239 = !DILocation(line: 2939, column: 15, scope: !10233)
!10240 = !DILocation(line: 2942, column: 32, scope: !10233)
!10241 = !DILocation(line: 2942, column: 16, scope: !10233)
!10242 = !DILocation(line: 2942, column: 14, scope: !10233)
!10243 = !DILocation(line: 2942, column: 7, scope: !10233)
!10244 = !DILocation(line: 2943, column: 37, scope: !10233)
!10245 = !DILocation(line: 2943, column: 43, scope: !10233)
!10246 = !DILocation(line: 2943, column: 3, scope: !10233)
!10247 = !DILocation(line: 2944, column: 25, scope: !10233)
!10248 = !DILocation(line: 2944, column: 3, scope: !10233)
!10249 = !DILocation(line: 2945, column: 2, scope: !10233)
!10250 = !DILocation(line: 2946, column: 11, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2946, column: 11)
!10252 = !DILocation(line: 2946, column: 16, scope: !10251)
!10253 = !DILocation(line: 2946, column: 21, scope: !10251)
!10254 = !DILocation(line: 2946, column: 11, scope: !10229)
!10255 = !DILocation(line: 2949, column: 25, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 2946, column: 29)
!10257 = !DILocation(line: 2949, column: 30, scope: !10256)
!10258 = !DILocation(line: 2949, column: 36, scope: !10256)
!10259 = !DILocation(line: 2949, column: 42, scope: !10256)
!10260 = !DILocation(line: 2949, column: 49, scope: !10256)
!10261 = !DILocation(line: 2949, column: 3, scope: !10256)
!10262 = !DILocation(line: 2950, column: 2, scope: !10256)
!10263 = !DILocation(line: 2951, column: 1, scope: !10217)
!10264 = distinct !DISubprogram(name: "widget_swatch", scope: !3, file: !3, line: 2857, type: !1462, scopeLine: 2858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10265 = !DILocalVariable(name: "but", arg: 1, scope: !10264, file: !3, line: 2857, type: !1464)
!10266 = !DILocation(line: 2857, column: 34, scope: !10264)
!10267 = !DILocalVariable(name: "wcol", arg: 2, scope: !10264, file: !3, line: 2857, type: !1436)
!10268 = !DILocation(line: 2857, column: 55, scope: !10264)
!10269 = !DILocalVariable(name: "rect", arg: 3, scope: !10264, file: !3, line: 2857, type: !1451)
!10270 = !DILocation(line: 2857, column: 67, scope: !10264)
!10271 = !DILocalVariable(name: "state", arg: 4, scope: !10264, file: !3, line: 2857, type: !1254)
!10272 = !DILocation(line: 2857, column: 77, scope: !10264)
!10273 = !DILocalVariable(name: "roundboxalign", arg: 5, scope: !10264, file: !3, line: 2857, type: !1254)
!10274 = !DILocation(line: 2857, column: 88, scope: !10264)
!10275 = !DILocalVariable(name: "wtb", scope: !10264, file: !3, line: 2859, type: !3146)
!10276 = !DILocation(line: 2859, column: 15, scope: !10264)
!10277 = !DILocalVariable(name: "rad", scope: !10264, file: !3, line: 2860, type: !1253)
!10278 = !DILocation(line: 2860, column: 8, scope: !10264)
!10279 = !DILocalVariable(name: "col", scope: !10264, file: !3, line: 2860, type: !1894)
!10280 = !DILocation(line: 2860, column: 13, scope: !10264)
!10281 = !DILocalVariable(name: "color_profile", scope: !10264, file: !3, line: 2861, type: !1256)
!10282 = !DILocation(line: 2861, column: 7, scope: !10264)
!10283 = !DILocation(line: 2861, column: 23, scope: !10264)
!10284 = !DILocation(line: 2861, column: 28, scope: !10264)
!10285 = !DILocation(line: 2861, column: 35, scope: !10264)
!10286 = !DILocation(line: 2863, column: 2, scope: !10264)
!10287 = !DILocation(line: 2863, column: 9, scope: !10264)
!10288 = !DILocation(line: 2865, column: 6, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 2865, column: 6)
!10290 = !DILocation(line: 2865, column: 11, scope: !10289)
!10291 = !DILocation(line: 2865, column: 6, scope: !10264)
!10292 = !DILocation(line: 2868, column: 28, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 2868, column: 7)
!10294 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 2865, column: 20)
!10295 = !DILocation(line: 2868, column: 33, scope: !10293)
!10296 = !DILocation(line: 2868, column: 7, scope: !10293)
!10297 = !DILocation(line: 2868, column: 42, scope: !10293)
!10298 = !DILocation(line: 2868, column: 7, scope: !10294)
!10299 = !DILocation(line: 2869, column: 18, scope: !10293)
!10300 = !DILocation(line: 2869, column: 4, scope: !10293)
!10301 = !DILocation(line: 2871, column: 34, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 2871, column: 7)
!10303 = !DILocation(line: 2871, column: 39, scope: !10302)
!10304 = !DILocation(line: 2871, column: 48, scope: !10302)
!10305 = !DILocation(line: 2871, column: 53, scope: !10302)
!10306 = !DILocation(line: 2871, column: 7, scope: !10302)
!10307 = !DILocation(line: 2871, column: 62, scope: !10302)
!10308 = !DILocation(line: 2871, column: 7, scope: !10294)
!10309 = !DILocation(line: 2872, column: 43, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 2871, column: 68)
!10311 = !DILocation(line: 2872, column: 48, scope: !10310)
!10312 = !DILocation(line: 2872, column: 57, scope: !10310)
!10313 = !DILocation(line: 2872, column: 62, scope: !10310)
!10314 = !DILocation(line: 2872, column: 13, scope: !10310)
!10315 = !DILocation(line: 2872, column: 4, scope: !10310)
!10316 = !DILocation(line: 2872, column: 11, scope: !10310)
!10317 = !DILocation(line: 2873, column: 3, scope: !10310)
!10318 = !DILocation(line: 2874, column: 2, scope: !10294)
!10319 = !DILocation(line: 2876, column: 2, scope: !10264)
!10320 = !DILocation(line: 2879, column: 18, scope: !10264)
!10321 = !DILocation(line: 2879, column: 16, scope: !10264)
!10322 = !DILocation(line: 2879, column: 14, scope: !10264)
!10323 = !DILocation(line: 2879, column: 6, scope: !10264)
!10324 = !DILocation(line: 2880, column: 24, scope: !10264)
!10325 = !DILocation(line: 2880, column: 39, scope: !10264)
!10326 = !DILocation(line: 2880, column: 45, scope: !10264)
!10327 = !DILocation(line: 2880, column: 2, scope: !10264)
!10328 = !DILocation(line: 2882, column: 21, scope: !10264)
!10329 = !DILocation(line: 2882, column: 26, scope: !10264)
!10330 = !DILocation(line: 2882, column: 2, scope: !10264)
!10331 = !DILocation(line: 2884, column: 6, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 2884, column: 6)
!10333 = !DILocation(line: 2884, column: 12, scope: !10332)
!10334 = !DILocation(line: 2884, column: 6, scope: !10264)
!10335 = !DILocation(line: 2886, column: 25, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 2884, column: 89)
!10337 = !DILocation(line: 2886, column: 3, scope: !10336)
!10338 = !DILocation(line: 2889, column: 3, scope: !10336)
!10339 = !DILocation(line: 2889, column: 9, scope: !10336)
!10340 = !DILocation(line: 2889, column: 14, scope: !10336)
!10341 = !DILocation(line: 2890, column: 3, scope: !10336)
!10342 = !DILocation(line: 2890, column: 9, scope: !10336)
!10343 = !DILocation(line: 2890, column: 14, scope: !10336)
!10344 = !DILocation(line: 2891, column: 3, scope: !10336)
!10345 = !DILocation(line: 2891, column: 9, scope: !10336)
!10346 = !DILocation(line: 2891, column: 14, scope: !10336)
!10347 = !DILocation(line: 2892, column: 3, scope: !10336)
!10348 = !DILocation(line: 2892, column: 9, scope: !10336)
!10349 = !DILocation(line: 2892, column: 14, scope: !10336)
!10350 = !DILocation(line: 2894, column: 25, scope: !10336)
!10351 = !DILocation(line: 2894, column: 40, scope: !10336)
!10352 = !DILocation(line: 2894, column: 46, scope: !10336)
!10353 = !DILocation(line: 2894, column: 3, scope: !10336)
!10354 = !DILocation(line: 2895, column: 2, scope: !10336)
!10355 = !DILocation(line: 2897, column: 6, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 2897, column: 6)
!10357 = !DILocation(line: 2897, column: 6, scope: !10264)
!10358 = !DILocation(line: 2898, column: 32, scope: !10356)
!10359 = !DILocation(line: 2898, column: 37, scope: !10356)
!10360 = !DILocation(line: 2898, column: 44, scope: !10356)
!10361 = !DILocation(line: 2898, column: 3, scope: !10356)
!10362 = !DILocation(line: 2900, column: 39, scope: !10264)
!10363 = !DILocation(line: 2900, column: 45, scope: !10264)
!10364 = !DILocation(line: 2900, column: 52, scope: !10264)
!10365 = !DILocation(line: 2900, column: 2, scope: !10264)
!10366 = !DILocation(line: 2902, column: 2, scope: !10264)
!10367 = !DILocation(line: 2902, column: 8, scope: !10264)
!10368 = !DILocation(line: 2902, column: 15, scope: !10264)
!10369 = !DILocation(line: 2903, column: 23, scope: !10264)
!10370 = !DILocation(line: 2903, column: 29, scope: !10264)
!10371 = !DILocation(line: 2903, column: 38, scope: !10264)
!10372 = !DILocation(line: 2903, column: 22, scope: !10264)
!10373 = !DILocation(line: 2903, column: 2, scope: !10264)
!10374 = !DILocation(line: 2903, column: 8, scope: !10264)
!10375 = !DILocation(line: 2903, column: 20, scope: !10264)
!10376 = !DILocation(line: 2905, column: 24, scope: !10264)
!10377 = !DILocation(line: 2905, column: 2, scope: !10264)
!10378 = !DILocation(line: 2907, column: 6, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 2907, column: 6)
!10380 = !DILocation(line: 2907, column: 11, scope: !10379)
!10381 = !DILocation(line: 2907, column: 14, scope: !10379)
!10382 = !DILocation(line: 2907, column: 34, scope: !10379)
!10383 = !DILocation(line: 2907, column: 49, scope: !10379)
!10384 = !DILocation(line: 2907, column: 54, scope: !10379)
!10385 = !DILocation(line: 2907, column: 62, scope: !10379)
!10386 = !DILocation(line: 2907, column: 65, scope: !10379)
!10387 = !DILocation(line: 2907, column: 38, scope: !10379)
!10388 = !DILocation(line: 2907, column: 72, scope: !10379)
!10389 = !DILocation(line: 2907, column: 93, scope: !10379)
!10390 = !DILocation(line: 2907, column: 98, scope: !10379)
!10391 = !DILocation(line: 2907, column: 88, scope: !10379)
!10392 = !DILocation(line: 2907, column: 85, scope: !10379)
!10393 = !DILocation(line: 2907, column: 6, scope: !10264)
!10394 = !DILocalVariable(name: "width", scope: !10395, file: !3, line: 2908, type: !1253)
!10395 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2907, column: 102)
!10396 = !DILocation(line: 2908, column: 9, scope: !10395)
!10397 = !DILocation(line: 2908, column: 17, scope: !10395)
!10398 = !DILocation(line: 2908, column: 23, scope: !10395)
!10399 = !DILocation(line: 2908, column: 30, scope: !10395)
!10400 = !DILocation(line: 2908, column: 36, scope: !10395)
!10401 = !DILocation(line: 2908, column: 28, scope: !10395)
!10402 = !DILocalVariable(name: "height", scope: !10395, file: !3, line: 2909, type: !1253)
!10403 = !DILocation(line: 2909, column: 9, scope: !10395)
!10404 = !DILocation(line: 2909, column: 18, scope: !10395)
!10405 = !DILocation(line: 2909, column: 24, scope: !10395)
!10406 = !DILocation(line: 2909, column: 31, scope: !10395)
!10407 = !DILocation(line: 2909, column: 37, scope: !10395)
!10408 = !DILocation(line: 2909, column: 29, scope: !10395)
!10409 = !DILocalVariable(name: "bw", scope: !10395, file: !3, line: 2911, type: !1253)
!10410 = !DILocation(line: 2911, column: 9, scope: !10395)
!10411 = !DILocation(line: 2911, column: 24, scope: !10395)
!10412 = !DILocation(line: 2911, column: 14, scope: !10395)
!10413 = !DILocation(line: 2913, column: 7, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 2913, column: 7)
!10415 = !DILocation(line: 2913, column: 10, scope: !10414)
!10416 = !DILocation(line: 2913, column: 7, scope: !10395)
!10417 = !DILocation(line: 2914, column: 7, scope: !10414)
!10418 = !DILocation(line: 2914, column: 4, scope: !10414)
!10419 = !DILocation(line: 2916, column: 7, scope: !10414)
!10420 = !DILocation(line: 2918, column: 13, scope: !10395)
!10421 = !DILocation(line: 2918, column: 17, scope: !10395)
!10422 = !DILocation(line: 2918, column: 21, scope: !10395)
!10423 = !DILocation(line: 2918, column: 3, scope: !10395)
!10424 = !DILocation(line: 2919, column: 3, scope: !10395)
!10425 = !DILocation(line: 2920, column: 14, scope: !10395)
!10426 = !DILocation(line: 2920, column: 20, scope: !10395)
!10427 = !DILocation(line: 2920, column: 34, scope: !10395)
!10428 = !DILocation(line: 2920, column: 32, scope: !10395)
!10429 = !DILocation(line: 2920, column: 25, scope: !10395)
!10430 = !DILocation(line: 2920, column: 41, scope: !10395)
!10431 = !DILocation(line: 2920, column: 47, scope: !10395)
!10432 = !DILocation(line: 2920, column: 61, scope: !10395)
!10433 = !DILocation(line: 2920, column: 59, scope: !10395)
!10434 = !DILocation(line: 2920, column: 52, scope: !10395)
!10435 = !DILocation(line: 2920, column: 3, scope: !10395)
!10436 = !DILocation(line: 2921, column: 14, scope: !10395)
!10437 = !DILocation(line: 2921, column: 20, scope: !10395)
!10438 = !DILocation(line: 2921, column: 34, scope: !10395)
!10439 = !DILocation(line: 2921, column: 32, scope: !10395)
!10440 = !DILocation(line: 2921, column: 25, scope: !10395)
!10441 = !DILocation(line: 2921, column: 41, scope: !10395)
!10442 = !DILocation(line: 2921, column: 47, scope: !10395)
!10443 = !DILocation(line: 2921, column: 61, scope: !10395)
!10444 = !DILocation(line: 2921, column: 59, scope: !10395)
!10445 = !DILocation(line: 2921, column: 52, scope: !10395)
!10446 = !DILocation(line: 2921, column: 3, scope: !10395)
!10447 = !DILocation(line: 2922, column: 14, scope: !10395)
!10448 = !DILocation(line: 2922, column: 20, scope: !10395)
!10449 = !DILocation(line: 2922, column: 34, scope: !10395)
!10450 = !DILocation(line: 2922, column: 32, scope: !10395)
!10451 = !DILocation(line: 2922, column: 25, scope: !10395)
!10452 = !DILocation(line: 2922, column: 41, scope: !10395)
!10453 = !DILocation(line: 2922, column: 47, scope: !10395)
!10454 = !DILocation(line: 2922, column: 61, scope: !10395)
!10455 = !DILocation(line: 2922, column: 59, scope: !10395)
!10456 = !DILocation(line: 2922, column: 52, scope: !10395)
!10457 = !DILocation(line: 2922, column: 3, scope: !10395)
!10458 = !DILocation(line: 2923, column: 3, scope: !10395)
!10459 = !DILocation(line: 2924, column: 2, scope: !10395)
!10460 = !DILocation(line: 2925, column: 1, scope: !10264)
!10461 = distinct !DISubprogram(name: "widget_box", scope: !3, file: !3, line: 3168, type: !1462, scopeLine: 3169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10462 = !DILocalVariable(name: "but", arg: 1, scope: !10461, file: !3, line: 3168, type: !1464)
!10463 = !DILocation(line: 3168, column: 31, scope: !10461)
!10464 = !DILocalVariable(name: "wcol", arg: 2, scope: !10461, file: !3, line: 3168, type: !1436)
!10465 = !DILocation(line: 3168, column: 52, scope: !10461)
!10466 = !DILocalVariable(name: "rect", arg: 3, scope: !10461, file: !3, line: 3168, type: !1451)
!10467 = !DILocation(line: 3168, column: 64, scope: !10461)
!10468 = !DILocalVariable(name: "UNUSED_state", arg: 4, scope: !10461, file: !3, line: 3168, type: !1254)
!10469 = !DILocation(line: 3168, column: 74, scope: !10461)
!10470 = !DILocalVariable(name: "roundboxalign", arg: 5, scope: !10461, file: !3, line: 3168, type: !1254)
!10471 = !DILocation(line: 3168, column: 93, scope: !10461)
!10472 = !DILocalVariable(name: "wtb", scope: !10461, file: !3, line: 3170, type: !3146)
!10473 = !DILocation(line: 3170, column: 15, scope: !10461)
!10474 = !DILocalVariable(name: "rad", scope: !10461, file: !3, line: 3171, type: !1253)
!10475 = !DILocation(line: 3171, column: 8, scope: !10461)
!10476 = !DILocalVariable(name: "old_col", scope: !10461, file: !3, line: 3172, type: !4033)
!10477 = !DILocation(line: 3172, column: 7, scope: !10461)
!10478 = !DILocation(line: 3174, column: 2, scope: !10461)
!10479 = !DILocation(line: 3176, column: 18, scope: !10461)
!10480 = !DILocation(line: 3176, column: 27, scope: !10461)
!10481 = !DILocation(line: 3176, column: 33, scope: !10461)
!10482 = !DILocation(line: 3176, column: 2, scope: !10461)
!10483 = !DILocation(line: 3179, column: 6, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 3179, column: 6)
!10485 = !DILocation(line: 3179, column: 11, scope: !10484)
!10486 = !DILocation(line: 3179, column: 6, scope: !10461)
!10487 = !DILocation(line: 3180, column: 20, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3179, column: 19)
!10489 = !DILocation(line: 3180, column: 25, scope: !10488)
!10490 = !DILocation(line: 3180, column: 3, scope: !10488)
!10491 = !DILocation(line: 3180, column: 9, scope: !10488)
!10492 = !DILocation(line: 3180, column: 18, scope: !10488)
!10493 = !DILocation(line: 3181, column: 20, scope: !10488)
!10494 = !DILocation(line: 3181, column: 25, scope: !10488)
!10495 = !DILocation(line: 3181, column: 3, scope: !10488)
!10496 = !DILocation(line: 3181, column: 9, scope: !10488)
!10497 = !DILocation(line: 3181, column: 18, scope: !10488)
!10498 = !DILocation(line: 3182, column: 20, scope: !10488)
!10499 = !DILocation(line: 3182, column: 25, scope: !10488)
!10500 = !DILocation(line: 3182, column: 3, scope: !10488)
!10501 = !DILocation(line: 3182, column: 9, scope: !10488)
!10502 = !DILocation(line: 3182, column: 18, scope: !10488)
!10503 = !DILocation(line: 3183, column: 2, scope: !10488)
!10504 = !DILocation(line: 3186, column: 17, scope: !10461)
!10505 = !DILocation(line: 3186, column: 15, scope: !10461)
!10506 = !DILocation(line: 3186, column: 13, scope: !10461)
!10507 = !DILocation(line: 3186, column: 6, scope: !10461)
!10508 = !DILocation(line: 3187, column: 24, scope: !10461)
!10509 = !DILocation(line: 3187, column: 39, scope: !10461)
!10510 = !DILocation(line: 3187, column: 45, scope: !10461)
!10511 = !DILocation(line: 3187, column: 2, scope: !10461)
!10512 = !DILocation(line: 3189, column: 24, scope: !10461)
!10513 = !DILocation(line: 3189, column: 2, scope: !10461)
!10514 = !DILocation(line: 3191, column: 18, scope: !10461)
!10515 = !DILocation(line: 3191, column: 24, scope: !10461)
!10516 = !DILocation(line: 3191, column: 31, scope: !10461)
!10517 = !DILocation(line: 3191, column: 2, scope: !10461)
!10518 = !DILocation(line: 3192, column: 1, scope: !10461)
!10519 = distinct !DISubprogram(name: "widget_normal", scope: !3, file: !3, line: 2927, type: !1462, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10520 = !DILocalVariable(name: "but", arg: 1, scope: !10519, file: !3, line: 2927, type: !1464)
!10521 = !DILocation(line: 2927, column: 34, scope: !10519)
!10522 = !DILocalVariable(name: "wcol", arg: 2, scope: !10519, file: !3, line: 2927, type: !1436)
!10523 = !DILocation(line: 2927, column: 55, scope: !10519)
!10524 = !DILocalVariable(name: "rect", arg: 3, scope: !10519, file: !3, line: 2927, type: !1451)
!10525 = !DILocation(line: 2927, column: 67, scope: !10519)
!10526 = !DILocalVariable(name: "UNUSED_state", arg: 4, scope: !10519, file: !3, line: 2927, type: !1254)
!10527 = !DILocation(line: 2927, column: 77, scope: !10519)
!10528 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 5, scope: !10519, file: !3, line: 2927, type: !1254)
!10529 = !DILocation(line: 2927, column: 96, scope: !10519)
!10530 = !DILocation(line: 2929, column: 21, scope: !10519)
!10531 = !DILocation(line: 2929, column: 26, scope: !10519)
!10532 = !DILocation(line: 2929, column: 32, scope: !10519)
!10533 = !DILocation(line: 2929, column: 2, scope: !10519)
!10534 = !DILocation(line: 2930, column: 1, scope: !10519)
!10535 = distinct !DISubprogram(name: "widget_state_nothing", scope: !3, file: !3, line: 1927, type: !4925, scopeLine: 1928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10536 = !DILocalVariable(name: "wt", arg: 1, scope: !10535, file: !3, line: 1927, type: !1431)
!10537 = !DILocation(line: 1927, column: 48, scope: !10535)
!10538 = !DILocalVariable(name: "UNUSED_state", arg: 2, scope: !10535, file: !3, line: 1927, type: !1254)
!10539 = !DILocation(line: 1927, column: 56, scope: !10535)
!10540 = !DILocation(line: 1929, column: 2, scope: !10535)
!10541 = !DILocation(line: 1929, column: 6, scope: !10535)
!10542 = !DILocation(line: 1929, column: 15, scope: !10535)
!10543 = !DILocation(line: 1929, column: 19, scope: !10535)
!10544 = !DILocation(line: 1929, column: 13, scope: !10535)
!10545 = !DILocation(line: 1930, column: 1, scope: !10535)
!10546 = distinct !DISubprogram(name: "widget_scroll", scope: !3, file: !3, line: 2672, type: !1462, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10547 = !DILocalVariable(name: "but", arg: 1, scope: !10546, file: !3, line: 2672, type: !1464)
!10548 = !DILocation(line: 2672, column: 34, scope: !10546)
!10549 = !DILocalVariable(name: "wcol", arg: 2, scope: !10546, file: !3, line: 2672, type: !1436)
!10550 = !DILocation(line: 2672, column: 55, scope: !10546)
!10551 = !DILocalVariable(name: "rect", arg: 3, scope: !10546, file: !3, line: 2672, type: !1451)
!10552 = !DILocation(line: 2672, column: 67, scope: !10546)
!10553 = !DILocalVariable(name: "state", arg: 4, scope: !10546, file: !3, line: 2672, type: !1254)
!10554 = !DILocation(line: 2672, column: 77, scope: !10546)
!10555 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 5, scope: !10546, file: !3, line: 2672, type: !1254)
!10556 = !DILocation(line: 2672, column: 88, scope: !10546)
!10557 = !DILocalVariable(name: "rect1", scope: !10546, file: !3, line: 2674, type: !1452)
!10558 = !DILocation(line: 2674, column: 7, scope: !10546)
!10559 = !DILocalVariable(name: "value", scope: !10546, file: !3, line: 2675, type: !1684)
!10560 = !DILocation(line: 2675, column: 9, scope: !10546)
!10561 = !DILocalVariable(name: "fac", scope: !10546, file: !3, line: 2676, type: !1253)
!10562 = !DILocation(line: 2676, column: 8, scope: !10546)
!10563 = !DILocalVariable(name: "size", scope: !10546, file: !3, line: 2676, type: !1253)
!10564 = !DILocation(line: 2676, column: 13, scope: !10546)
!10565 = !DILocalVariable(name: "min", scope: !10546, file: !3, line: 2676, type: !1253)
!10566 = !DILocation(line: 2676, column: 19, scope: !10546)
!10567 = !DILocalVariable(name: "horizontal", scope: !10546, file: !3, line: 2677, type: !1254)
!10568 = !DILocation(line: 2677, column: 6, scope: !10546)
!10569 = !DILocation(line: 2680, column: 25, scope: !10546)
!10570 = !DILocation(line: 2680, column: 10, scope: !10546)
!10571 = !DILocation(line: 2680, column: 8, scope: !10546)
!10572 = !DILocation(line: 2682, column: 10, scope: !10546)
!10573 = !DILocation(line: 2682, column: 15, scope: !10546)
!10574 = !DILocation(line: 2682, column: 25, scope: !10546)
!10575 = !DILocation(line: 2682, column: 30, scope: !10546)
!10576 = !DILocation(line: 2682, column: 23, scope: !10546)
!10577 = !DILocation(line: 2682, column: 35, scope: !10546)
!10578 = !DILocation(line: 2682, column: 40, scope: !10546)
!10579 = !DILocation(line: 2682, column: 33, scope: !10546)
!10580 = !DILocation(line: 2682, column: 7, scope: !10546)
!10581 = !DILocation(line: 2683, column: 16, scope: !10546)
!10582 = !DILocation(line: 2683, column: 9, scope: !10546)
!10583 = !DILocation(line: 2683, column: 7, scope: !10546)
!10584 = !DILocation(line: 2686, column: 11, scope: !10546)
!10585 = !DILocation(line: 2686, column: 10, scope: !10546)
!10586 = !DILocation(line: 2689, column: 32, scope: !10546)
!10587 = !DILocation(line: 2689, column: 16, scope: !10546)
!10588 = !DILocation(line: 2689, column: 56, scope: !10546)
!10589 = !DILocation(line: 2689, column: 40, scope: !10546)
!10590 = !DILocation(line: 2689, column: 38, scope: !10546)
!10591 = !DILocation(line: 2689, column: 13, scope: !10546)
!10592 = !DILocation(line: 2691, column: 6, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 2691, column: 6)
!10594 = !DILocation(line: 2691, column: 6, scope: !10546)
!10595 = !DILocation(line: 2692, column: 25, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2691, column: 18)
!10597 = !DILocation(line: 2692, column: 9, scope: !10596)
!10598 = !DILocation(line: 2692, column: 33, scope: !10596)
!10599 = !DILocation(line: 2692, column: 31, scope: !10596)
!10600 = !DILocation(line: 2692, column: 7, scope: !10596)
!10601 = !DILocation(line: 2693, column: 22, scope: !10596)
!10602 = !DILocation(line: 2693, column: 16, scope: !10596)
!10603 = !DILocation(line: 2693, column: 35, scope: !10596)
!10604 = !DILocation(line: 2693, column: 49, scope: !10596)
!10605 = !DILocation(line: 2693, column: 42, scope: !10596)
!10606 = !DILocation(line: 2693, column: 57, scope: !10596)
!10607 = !DILocation(line: 2693, column: 62, scope: !10596)
!10608 = !DILocation(line: 2693, column: 55, scope: !10596)
!10609 = !DILocation(line: 2693, column: 39, scope: !10596)
!10610 = !DILocation(line: 2693, column: 29, scope: !10596)
!10611 = !DILocation(line: 2693, column: 27, scope: !10596)
!10612 = !DILocation(line: 2693, column: 9, scope: !10596)
!10613 = !DILocation(line: 2693, column: 14, scope: !10596)
!10614 = !DILocation(line: 2694, column: 22, scope: !10596)
!10615 = !DILocation(line: 2694, column: 16, scope: !10596)
!10616 = !DILocation(line: 2694, column: 35, scope: !10596)
!10617 = !DILocation(line: 2694, column: 42, scope: !10596)
!10618 = !DILocation(line: 2694, column: 47, scope: !10596)
!10619 = !DILocation(line: 2694, column: 52, scope: !10596)
!10620 = !DILocation(line: 2694, column: 57, scope: !10596)
!10621 = !DILocation(line: 2694, column: 50, scope: !10596)
!10622 = !DILocation(line: 2694, column: 39, scope: !10596)
!10623 = !DILocation(line: 2694, column: 29, scope: !10596)
!10624 = !DILocation(line: 2694, column: 27, scope: !10596)
!10625 = !DILocation(line: 2694, column: 9, scope: !10596)
!10626 = !DILocation(line: 2694, column: 14, scope: !10596)
!10627 = !DILocation(line: 2697, column: 25, scope: !10596)
!10628 = !DILocation(line: 2697, column: 9, scope: !10596)
!10629 = !DILocation(line: 2697, column: 7, scope: !10596)
!10630 = !DILocation(line: 2699, column: 7, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 2699, column: 7)
!10632 = !DILocation(line: 2699, column: 33, scope: !10631)
!10633 = !DILocation(line: 2699, column: 31, scope: !10631)
!10634 = !DILocation(line: 2699, column: 7, scope: !10596)
!10635 = !DILocation(line: 2700, column: 23, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 2699, column: 38)
!10637 = !DILocation(line: 2700, column: 17, scope: !10636)
!10638 = !DILocation(line: 2700, column: 30, scope: !10636)
!10639 = !DILocation(line: 2700, column: 28, scope: !10636)
!10640 = !DILocation(line: 2700, column: 10, scope: !10636)
!10641 = !DILocation(line: 2700, column: 15, scope: !10636)
!10642 = !DILocation(line: 2702, column: 14, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 2702, column: 8)
!10644 = !DILocation(line: 2702, column: 21, scope: !10643)
!10645 = !DILocation(line: 2702, column: 27, scope: !10643)
!10646 = !DILocation(line: 2702, column: 19, scope: !10643)
!10647 = !DILocation(line: 2702, column: 8, scope: !10636)
!10648 = !DILocation(line: 2703, column: 18, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 2702, column: 33)
!10650 = !DILocation(line: 2703, column: 24, scope: !10649)
!10651 = !DILocation(line: 2703, column: 11, scope: !10649)
!10652 = !DILocation(line: 2703, column: 16, scope: !10649)
!10653 = !DILocation(line: 2704, column: 31, scope: !10649)
!10654 = !DILocation(line: 2704, column: 25, scope: !10649)
!10655 = !DILocation(line: 2704, column: 38, scope: !10649)
!10656 = !DILocation(line: 2704, column: 36, scope: !10649)
!10657 = !DILocation(line: 2704, column: 43, scope: !10649)
!10658 = !DILocation(line: 2704, column: 49, scope: !10649)
!10659 = !DILocation(line: 2704, column: 18, scope: !10649)
!10660 = !DILocation(line: 2704, column: 11, scope: !10649)
!10661 = !DILocation(line: 2704, column: 16, scope: !10649)
!10662 = !DILocation(line: 2705, column: 4, scope: !10649)
!10663 = !DILocation(line: 2706, column: 3, scope: !10636)
!10664 = !DILocation(line: 2707, column: 2, scope: !10596)
!10665 = !DILocation(line: 2709, column: 25, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2708, column: 7)
!10667 = !DILocation(line: 2709, column: 9, scope: !10666)
!10668 = !DILocation(line: 2709, column: 33, scope: !10666)
!10669 = !DILocation(line: 2709, column: 31, scope: !10666)
!10670 = !DILocation(line: 2709, column: 7, scope: !10666)
!10671 = !DILocation(line: 2710, column: 22, scope: !10666)
!10672 = !DILocation(line: 2710, column: 16, scope: !10666)
!10673 = !DILocation(line: 2710, column: 35, scope: !10666)
!10674 = !DILocation(line: 2710, column: 49, scope: !10666)
!10675 = !DILocation(line: 2710, column: 42, scope: !10666)
!10676 = !DILocation(line: 2710, column: 57, scope: !10666)
!10677 = !DILocation(line: 2710, column: 62, scope: !10666)
!10678 = !DILocation(line: 2710, column: 55, scope: !10666)
!10679 = !DILocation(line: 2710, column: 39, scope: !10666)
!10680 = !DILocation(line: 2710, column: 29, scope: !10666)
!10681 = !DILocation(line: 2710, column: 27, scope: !10666)
!10682 = !DILocation(line: 2710, column: 9, scope: !10666)
!10683 = !DILocation(line: 2710, column: 14, scope: !10666)
!10684 = !DILocation(line: 2711, column: 22, scope: !10666)
!10685 = !DILocation(line: 2711, column: 16, scope: !10666)
!10686 = !DILocation(line: 2711, column: 35, scope: !10666)
!10687 = !DILocation(line: 2711, column: 42, scope: !10666)
!10688 = !DILocation(line: 2711, column: 47, scope: !10666)
!10689 = !DILocation(line: 2711, column: 52, scope: !10666)
!10690 = !DILocation(line: 2711, column: 57, scope: !10666)
!10691 = !DILocation(line: 2711, column: 50, scope: !10666)
!10692 = !DILocation(line: 2711, column: 39, scope: !10666)
!10693 = !DILocation(line: 2711, column: 29, scope: !10666)
!10694 = !DILocation(line: 2711, column: 27, scope: !10666)
!10695 = !DILocation(line: 2711, column: 9, scope: !10666)
!10696 = !DILocation(line: 2711, column: 14, scope: !10666)
!10697 = !DILocation(line: 2714, column: 25, scope: !10666)
!10698 = !DILocation(line: 2714, column: 9, scope: !10666)
!10699 = !DILocation(line: 2714, column: 7, scope: !10666)
!10700 = !DILocation(line: 2716, column: 7, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2716, column: 7)
!10702 = !DILocation(line: 2716, column: 33, scope: !10701)
!10703 = !DILocation(line: 2716, column: 31, scope: !10701)
!10704 = !DILocation(line: 2716, column: 7, scope: !10666)
!10705 = !DILocation(line: 2717, column: 23, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2716, column: 38)
!10707 = !DILocation(line: 2717, column: 17, scope: !10706)
!10708 = !DILocation(line: 2717, column: 30, scope: !10706)
!10709 = !DILocation(line: 2717, column: 28, scope: !10706)
!10710 = !DILocation(line: 2717, column: 10, scope: !10706)
!10711 = !DILocation(line: 2717, column: 15, scope: !10706)
!10712 = !DILocation(line: 2719, column: 14, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2719, column: 8)
!10714 = !DILocation(line: 2719, column: 21, scope: !10713)
!10715 = !DILocation(line: 2719, column: 27, scope: !10713)
!10716 = !DILocation(line: 2719, column: 19, scope: !10713)
!10717 = !DILocation(line: 2719, column: 8, scope: !10706)
!10718 = !DILocation(line: 2720, column: 18, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 2719, column: 33)
!10720 = !DILocation(line: 2720, column: 24, scope: !10719)
!10721 = !DILocation(line: 2720, column: 11, scope: !10719)
!10722 = !DILocation(line: 2720, column: 16, scope: !10719)
!10723 = !DILocation(line: 2721, column: 31, scope: !10719)
!10724 = !DILocation(line: 2721, column: 25, scope: !10719)
!10725 = !DILocation(line: 2721, column: 38, scope: !10719)
!10726 = !DILocation(line: 2721, column: 36, scope: !10719)
!10727 = !DILocation(line: 2721, column: 43, scope: !10719)
!10728 = !DILocation(line: 2721, column: 49, scope: !10719)
!10729 = !DILocation(line: 2721, column: 18, scope: !10719)
!10730 = !DILocation(line: 2721, column: 11, scope: !10719)
!10731 = !DILocation(line: 2721, column: 16, scope: !10719)
!10732 = !DILocation(line: 2722, column: 4, scope: !10719)
!10733 = !DILocation(line: 2723, column: 3, scope: !10706)
!10734 = !DILocation(line: 2726, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 2726, column: 6)
!10736 = !DILocation(line: 2726, column: 12, scope: !10735)
!10737 = !DILocation(line: 2726, column: 6, scope: !10546)
!10738 = !DILocation(line: 2727, column: 9, scope: !10735)
!10739 = !DILocation(line: 2727, column: 3, scope: !10735)
!10740 = !DILocation(line: 2729, column: 9, scope: !10735)
!10741 = !DILocation(line: 2730, column: 21, scope: !10546)
!10742 = !DILocation(line: 2730, column: 27, scope: !10546)
!10743 = !DILocation(line: 2730, column: 41, scope: !10546)
!10744 = !DILocation(line: 2730, column: 2, scope: !10546)
!10745 = !DILocation(line: 2731, column: 1, scope: !10546)
!10746 = distinct !DISubprogram(name: "widget_list_itembut", scope: !3, file: !3, line: 3084, type: !1449, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10747 = !DILocalVariable(name: "wcol", arg: 1, scope: !10746, file: !3, line: 3084, type: !1436)
!10748 = !DILocation(line: 3084, column: 49, scope: !10746)
!10749 = !DILocalVariable(name: "rect", arg: 2, scope: !10746, file: !3, line: 3084, type: !1451)
!10750 = !DILocation(line: 3084, column: 61, scope: !10746)
!10751 = !DILocalVariable(name: "UNUSED_state", arg: 3, scope: !10746, file: !3, line: 3084, type: !1254)
!10752 = !DILocation(line: 3084, column: 71, scope: !10746)
!10753 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 4, scope: !10746, file: !3, line: 3084, type: !1254)
!10754 = !DILocation(line: 3084, column: 90, scope: !10746)
!10755 = !DILocalVariable(name: "wtb", scope: !10746, file: !3, line: 3086, type: !3146)
!10756 = !DILocation(line: 3086, column: 15, scope: !10746)
!10757 = !DILocalVariable(name: "rad", scope: !10746, file: !3, line: 3087, type: !1253)
!10758 = !DILocation(line: 3087, column: 8, scope: !10746)
!10759 = !DILocation(line: 3089, column: 2, scope: !10746)
!10760 = !DILocation(line: 3092, column: 6, scope: !10746)
!10761 = !DILocation(line: 3092, column: 14, scope: !10746)
!10762 = !DILocation(line: 3093, column: 17, scope: !10746)
!10763 = !DILocation(line: 3093, column: 15, scope: !10746)
!10764 = !DILocation(line: 3093, column: 13, scope: !10746)
!10765 = !DILocation(line: 3093, column: 6, scope: !10746)
!10766 = !DILocation(line: 3094, column: 36, scope: !10746)
!10767 = !DILocation(line: 3094, column: 42, scope: !10746)
!10768 = !DILocation(line: 3094, column: 2, scope: !10746)
!10769 = !DILocation(line: 3096, column: 24, scope: !10746)
!10770 = !DILocation(line: 3096, column: 2, scope: !10746)
!10771 = !DILocation(line: 3097, column: 1, scope: !10746)
!10772 = distinct !DISubprogram(name: "widget_progressbar", scope: !3, file: !3, line: 2733, type: !1462, scopeLine: 2734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10773 = !DILocalVariable(name: "but", arg: 1, scope: !10772, file: !3, line: 2733, type: !1464)
!10774 = !DILocation(line: 2733, column: 39, scope: !10772)
!10775 = !DILocalVariable(name: "wcol", arg: 2, scope: !10772, file: !3, line: 2733, type: !1436)
!10776 = !DILocation(line: 2733, column: 60, scope: !10772)
!10777 = !DILocalVariable(name: "rect", arg: 3, scope: !10772, file: !3, line: 2733, type: !1451)
!10778 = !DILocation(line: 2733, column: 72, scope: !10772)
!10779 = !DILocalVariable(name: "UNUSED_state", arg: 4, scope: !10772, file: !3, line: 2733, type: !1254)
!10780 = !DILocation(line: 2733, column: 82, scope: !10772)
!10781 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 5, scope: !10772, file: !3, line: 2733, type: !1254)
!10782 = !DILocation(line: 2733, column: 101, scope: !10772)
!10783 = !DILocalVariable(name: "rect_prog", scope: !10772, file: !3, line: 2735, type: !1452)
!10784 = !DILocation(line: 2735, column: 7, scope: !10772)
!10785 = !DILocation(line: 2735, column: 20, scope: !10772)
!10786 = !DILocation(line: 2735, column: 19, scope: !10772)
!10787 = !DILocalVariable(name: "rect_bar", scope: !10772, file: !3, line: 2735, type: !1452)
!10788 = !DILocation(line: 2735, column: 26, scope: !10772)
!10789 = !DILocation(line: 2735, column: 38, scope: !10772)
!10790 = !DILocation(line: 2735, column: 37, scope: !10772)
!10791 = !DILocalVariable(name: "value", scope: !10772, file: !3, line: 2736, type: !1253)
!10792 = !DILocation(line: 2736, column: 8, scope: !10772)
!10793 = !DILocation(line: 2736, column: 16, scope: !10772)
!10794 = !DILocation(line: 2736, column: 21, scope: !10772)
!10795 = !DILocalVariable(name: "w", scope: !10772, file: !3, line: 2737, type: !1253)
!10796 = !DILocation(line: 2737, column: 8, scope: !10772)
!10797 = !DILocalVariable(name: "min", scope: !10772, file: !3, line: 2737, type: !1253)
!10798 = !DILocation(line: 2737, column: 11, scope: !10772)
!10799 = !DILocation(line: 2741, column: 29, scope: !10772)
!10800 = !DILocation(line: 2741, column: 19, scope: !10772)
!10801 = !DILocation(line: 2741, column: 40, scope: !10772)
!10802 = !DILocation(line: 2741, column: 38, scope: !10772)
!10803 = !DILocation(line: 2741, column: 34, scope: !10772)
!10804 = !DILocation(line: 2741, column: 12, scope: !10772)
!10805 = !DILocation(line: 2741, column: 17, scope: !10772)
!10806 = !DILocation(line: 2742, column: 27, scope: !10772)
!10807 = !DILocation(line: 2742, column: 18, scope: !10772)
!10808 = !DILocation(line: 2742, column: 38, scope: !10772)
!10809 = !DILocation(line: 2742, column: 36, scope: !10772)
!10810 = !DILocation(line: 2742, column: 32, scope: !10772)
!10811 = !DILocation(line: 2742, column: 11, scope: !10772)
!10812 = !DILocation(line: 2742, column: 16, scope: !10772)
!10813 = !DILocation(line: 2744, column: 6, scope: !10772)
!10814 = !DILocation(line: 2744, column: 14, scope: !10772)
!10815 = !DILocation(line: 2744, column: 12, scope: !10772)
!10816 = !DILocation(line: 2744, column: 4, scope: !10772)
!10817 = !DILocation(line: 2747, column: 8, scope: !10772)
!10818 = !DILocation(line: 2747, column: 6, scope: !10772)
!10819 = !DILocation(line: 2748, column: 6, scope: !10772)
!10820 = !DILocation(line: 2748, column: 4, scope: !10772)
!10821 = !DILocation(line: 2750, column: 27, scope: !10772)
!10822 = !DILocation(line: 2750, column: 18, scope: !10772)
!10823 = !DILocation(line: 2750, column: 34, scope: !10772)
!10824 = !DILocation(line: 2750, column: 32, scope: !10772)
!10825 = !DILocation(line: 2750, column: 11, scope: !10772)
!10826 = !DILocation(line: 2750, column: 16, scope: !10772)
!10827 = !DILocation(line: 2752, column: 21, scope: !10772)
!10828 = !DILocation(line: 2752, column: 2, scope: !10772)
!10829 = !DILocation(line: 2755, column: 20, scope: !10772)
!10830 = !DILocation(line: 2755, column: 18, scope: !10772)
!10831 = !DILocation(line: 2755, column: 2, scope: !10772)
!10832 = !DILocation(line: 2755, column: 8, scope: !10772)
!10833 = !DILocation(line: 2755, column: 13, scope: !10772)
!10834 = !DILocation(line: 2756, column: 20, scope: !10772)
!10835 = !DILocation(line: 2756, column: 18, scope: !10772)
!10836 = !DILocation(line: 2756, column: 2, scope: !10772)
!10837 = !DILocation(line: 2756, column: 8, scope: !10772)
!10838 = !DILocation(line: 2756, column: 13, scope: !10772)
!10839 = !DILocation(line: 2757, column: 1, scope: !10772)
!10840 = distinct !DISubprogram(name: "widget_menu_radial_itembut", scope: !3, file: !3, line: 3061, type: !1462, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10841 = !DILocalVariable(name: "but", arg: 1, scope: !10840, file: !3, line: 3061, type: !1464)
!10842 = !DILocation(line: 3061, column: 47, scope: !10840)
!10843 = !DILocalVariable(name: "wcol", arg: 2, scope: !10840, file: !3, line: 3061, type: !1436)
!10844 = !DILocation(line: 3061, column: 68, scope: !10840)
!10845 = !DILocalVariable(name: "rect", arg: 3, scope: !10840, file: !3, line: 3061, type: !1451)
!10846 = !DILocation(line: 3061, column: 80, scope: !10840)
!10847 = !DILocalVariable(name: "UNUSED_state", arg: 4, scope: !10840, file: !3, line: 3061, type: !1254)
!10848 = !DILocation(line: 3061, column: 90, scope: !10840)
!10849 = !DILocalVariable(name: "UNUSED_roundboxalign", arg: 5, scope: !10840, file: !3, line: 3061, type: !1254)
!10850 = !DILocation(line: 3061, column: 109, scope: !10840)
!10851 = !DILocalVariable(name: "wtb", scope: !10840, file: !3, line: 3063, type: !3146)
!10852 = !DILocation(line: 3063, column: 15, scope: !10840)
!10853 = !DILocalVariable(name: "rad", scope: !10840, file: !3, line: 3064, type: !1253)
!10854 = !DILocation(line: 3064, column: 8, scope: !10840)
!10855 = !DILocalVariable(name: "fac", scope: !10840, file: !3, line: 3065, type: !1253)
!10856 = !DILocation(line: 3065, column: 8, scope: !10840)
!10857 = !DILocation(line: 3065, column: 14, scope: !10840)
!10858 = !DILocation(line: 3065, column: 19, scope: !10840)
!10859 = !DILocation(line: 3065, column: 26, scope: !10840)
!10860 = !DILocation(line: 3065, column: 35, scope: !10840)
!10861 = !DILocation(line: 3067, column: 2, scope: !10840)
!10862 = !DILocation(line: 3069, column: 6, scope: !10840)
!10863 = !DILocation(line: 3069, column: 13, scope: !10840)
!10864 = !DILocation(line: 3071, column: 31, scope: !10840)
!10865 = !DILocation(line: 3071, column: 15, scope: !10840)
!10866 = !DILocation(line: 3071, column: 13, scope: !10840)
!10867 = !DILocation(line: 3071, column: 6, scope: !10840)
!10868 = !DILocation(line: 3072, column: 36, scope: !10840)
!10869 = !DILocation(line: 3072, column: 42, scope: !10840)
!10870 = !DILocation(line: 3072, column: 2, scope: !10840)
!10871 = !DILocation(line: 3074, column: 20, scope: !10840)
!10872 = !DILocation(line: 3074, column: 2, scope: !10840)
!10873 = !DILocation(line: 3074, column: 8, scope: !10840)
!10874 = !DILocation(line: 3074, column: 17, scope: !10840)
!10875 = !DILocation(line: 3075, column: 24, scope: !10840)
!10876 = !DILocation(line: 3075, column: 2, scope: !10840)
!10877 = !DILocation(line: 3075, column: 8, scope: !10840)
!10878 = !DILocation(line: 3075, column: 21, scope: !10840)
!10879 = !DILocation(line: 3076, column: 19, scope: !10840)
!10880 = !DILocation(line: 3076, column: 2, scope: !10840)
!10881 = !DILocation(line: 3076, column: 8, scope: !10840)
!10882 = !DILocation(line: 3076, column: 16, scope: !10840)
!10883 = !DILocation(line: 3077, column: 19, scope: !10840)
!10884 = !DILocation(line: 3077, column: 2, scope: !10840)
!10885 = !DILocation(line: 3077, column: 8, scope: !10840)
!10886 = !DILocation(line: 3077, column: 16, scope: !10840)
!10887 = !DILocation(line: 3078, column: 23, scope: !10840)
!10888 = !DILocation(line: 3078, column: 2, scope: !10840)
!10889 = !DILocation(line: 3078, column: 8, scope: !10840)
!10890 = !DILocation(line: 3078, column: 20, scope: !10840)
!10891 = !DILocation(line: 3079, column: 22, scope: !10840)
!10892 = !DILocation(line: 3079, column: 2, scope: !10840)
!10893 = !DILocation(line: 3079, column: 8, scope: !10840)
!10894 = !DILocation(line: 3079, column: 19, scope: !10840)
!10895 = !DILocation(line: 3081, column: 24, scope: !10840)
!10896 = !DILocation(line: 3081, column: 2, scope: !10840)
!10897 = !DILocation(line: 3082, column: 1, scope: !10840)
!10898 = distinct !DISubprogram(name: "widget_state_pie_menu_item", scope: !3, file: !3, line: 1945, type: !4925, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10899 = !DILocalVariable(name: "wt", arg: 1, scope: !10898, file: !3, line: 1945, type: !1431)
!10900 = !DILocation(line: 1945, column: 54, scope: !10898)
!10901 = !DILocalVariable(name: "state", arg: 2, scope: !10898, file: !3, line: 1945, type: !1254)
!10902 = !DILocation(line: 1945, column: 62, scope: !10898)
!10903 = !DILocation(line: 1947, column: 2, scope: !10898)
!10904 = !DILocation(line: 1947, column: 6, scope: !10898)
!10905 = !DILocation(line: 1947, column: 15, scope: !10898)
!10906 = !DILocation(line: 1947, column: 19, scope: !10898)
!10907 = !DILocation(line: 1947, column: 13, scope: !10898)
!10908 = !DILocation(line: 1950, column: 7, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 1950, column: 6)
!10910 = !DILocation(line: 1950, column: 13, scope: !10909)
!10911 = !DILocation(line: 1950, column: 32, scope: !10909)
!10912 = !DILocation(line: 1950, column: 36, scope: !10909)
!10913 = !DILocation(line: 1950, column: 42, scope: !10909)
!10914 = !DILocation(line: 1950, column: 6, scope: !10898)
!10915 = !DILocation(line: 1951, column: 22, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 1950, column: 56)
!10917 = !DILocation(line: 1951, column: 26, scope: !10916)
!10918 = !DILocation(line: 1951, column: 31, scope: !10916)
!10919 = !DILocation(line: 1951, column: 37, scope: !10916)
!10920 = !DILocation(line: 1951, column: 41, scope: !10916)
!10921 = !DILocation(line: 1951, column: 46, scope: !10916)
!10922 = !DILocation(line: 1951, column: 3, scope: !10916)
!10923 = !DILocation(line: 1954, column: 19, scope: !10916)
!10924 = !DILocation(line: 1954, column: 23, scope: !10916)
!10925 = !DILocation(line: 1954, column: 28, scope: !10916)
!10926 = !DILocation(line: 1954, column: 35, scope: !10916)
!10927 = !DILocation(line: 1954, column: 39, scope: !10916)
!10928 = !DILocation(line: 1954, column: 44, scope: !10916)
!10929 = !DILocation(line: 1954, column: 3, scope: !10916)
!10930 = !DILocation(line: 1955, column: 3, scope: !10916)
!10931 = !DILocation(line: 1955, column: 7, scope: !10916)
!10932 = !DILocation(line: 1955, column: 12, scope: !10916)
!10933 = !DILocation(line: 1955, column: 21, scope: !10916)
!10934 = !DILocation(line: 1956, column: 2, scope: !10916)
!10935 = !DILocation(line: 1958, column: 11, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 1958, column: 11)
!10937 = !DILocation(line: 1958, column: 17, scope: !10936)
!10938 = !DILocation(line: 1958, column: 11, scope: !10909)
!10939 = !DILocation(line: 1959, column: 22, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 1958, column: 56)
!10941 = !DILocation(line: 1959, column: 26, scope: !10940)
!10942 = !DILocation(line: 1959, column: 31, scope: !10940)
!10943 = !DILocation(line: 1959, column: 37, scope: !10940)
!10944 = !DILocation(line: 1959, column: 41, scope: !10940)
!10945 = !DILocation(line: 1959, column: 46, scope: !10940)
!10946 = !DILocation(line: 1959, column: 3, scope: !10940)
!10947 = !DILocation(line: 1960, column: 2, scope: !10940)
!10948 = !DILocation(line: 1962, column: 11, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 1962, column: 11)
!10950 = !DILocation(line: 1962, column: 17, scope: !10949)
!10951 = !DILocation(line: 1962, column: 11, scope: !10936)
!10952 = !DILocation(line: 1963, column: 19, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1962, column: 30)
!10954 = !DILocation(line: 1963, column: 23, scope: !10953)
!10955 = !DILocation(line: 1963, column: 28, scope: !10953)
!10956 = !DILocation(line: 1963, column: 37, scope: !10953)
!10957 = !DILocation(line: 1963, column: 41, scope: !10953)
!10958 = !DILocation(line: 1963, column: 46, scope: !10953)
!10959 = !DILocation(line: 1963, column: 3, scope: !10953)
!10960 = !DILocation(line: 1964, column: 19, scope: !10953)
!10961 = !DILocation(line: 1964, column: 23, scope: !10953)
!10962 = !DILocation(line: 1964, column: 28, scope: !10953)
!10963 = !DILocation(line: 1964, column: 34, scope: !10953)
!10964 = !DILocation(line: 1964, column: 38, scope: !10953)
!10965 = !DILocation(line: 1964, column: 43, scope: !10953)
!10966 = !DILocation(line: 1964, column: 3, scope: !10953)
!10967 = !DILocation(line: 1965, column: 2, scope: !10953)
!10968 = !DILocation(line: 1966, column: 11, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1966, column: 11)
!10970 = !DILocation(line: 1966, column: 17, scope: !10969)
!10971 = !DILocation(line: 1966, column: 11, scope: !10949)
!10972 = !DILocation(line: 1967, column: 19, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 1966, column: 30)
!10974 = !DILocation(line: 1967, column: 23, scope: !10973)
!10975 = !DILocation(line: 1967, column: 28, scope: !10973)
!10976 = !DILocation(line: 1967, column: 35, scope: !10973)
!10977 = !DILocation(line: 1967, column: 39, scope: !10973)
!10978 = !DILocation(line: 1967, column: 44, scope: !10973)
!10979 = !DILocation(line: 1967, column: 3, scope: !10973)
!10980 = !DILocation(line: 1968, column: 19, scope: !10973)
!10981 = !DILocation(line: 1968, column: 23, scope: !10973)
!10982 = !DILocation(line: 1968, column: 28, scope: !10973)
!10983 = !DILocation(line: 1968, column: 34, scope: !10973)
!10984 = !DILocation(line: 1968, column: 38, scope: !10973)
!10985 = !DILocation(line: 1968, column: 43, scope: !10973)
!10986 = !DILocation(line: 1968, column: 3, scope: !10973)
!10987 = !DILocation(line: 1969, column: 2, scope: !10973)
!10988 = !DILocation(line: 1970, column: 1, scope: !10898)
!10989 = distinct !DISubprogram(name: "widget_state_blend", scope: !3, file: !3, line: 1808, type: !10990, scopeLine: 1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!10990 = !DISubroutineType(types: !10991)
!10991 = !{null, !1487, !1547, !1410}
!10992 = !DILocalVariable(name: "cp", arg: 1, scope: !10989, file: !3, line: 1808, type: !1487)
!10993 = !DILocation(line: 1808, column: 37, scope: !10989)
!10994 = !DILocalVariable(name: "cpstate", arg: 2, scope: !10989, file: !3, line: 1808, type: !1547)
!10995 = !DILocation(line: 1808, column: 55, scope: !10989)
!10996 = !DILocalVariable(name: "fac", arg: 3, scope: !10989, file: !3, line: 1808, type: !1410)
!10997 = !DILocation(line: 1808, column: 79, scope: !10989)
!10998 = !DILocation(line: 1810, column: 6, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1810, column: 6)
!11000 = !DILocation(line: 1810, column: 10, scope: !10999)
!11001 = !DILocation(line: 1810, column: 6, scope: !10989)
!11002 = !DILocation(line: 1811, column: 25, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 1810, column: 19)
!11004 = !DILocation(line: 1811, column: 23, scope: !11003)
!11005 = !DILocation(line: 1811, column: 32, scope: !11003)
!11006 = !DILocation(line: 1811, column: 30, scope: !11003)
!11007 = !DILocation(line: 1811, column: 40, scope: !11003)
!11008 = !DILocation(line: 1811, column: 46, scope: !11003)
!11009 = !DILocation(line: 1811, column: 44, scope: !11003)
!11010 = !DILocation(line: 1811, column: 38, scope: !11003)
!11011 = !DILocation(line: 1811, column: 11, scope: !11003)
!11012 = !DILocation(line: 1811, column: 3, scope: !11003)
!11013 = !DILocation(line: 1811, column: 9, scope: !11003)
!11014 = !DILocation(line: 1812, column: 25, scope: !11003)
!11015 = !DILocation(line: 1812, column: 23, scope: !11003)
!11016 = !DILocation(line: 1812, column: 32, scope: !11003)
!11017 = !DILocation(line: 1812, column: 30, scope: !11003)
!11018 = !DILocation(line: 1812, column: 40, scope: !11003)
!11019 = !DILocation(line: 1812, column: 46, scope: !11003)
!11020 = !DILocation(line: 1812, column: 44, scope: !11003)
!11021 = !DILocation(line: 1812, column: 38, scope: !11003)
!11022 = !DILocation(line: 1812, column: 11, scope: !11003)
!11023 = !DILocation(line: 1812, column: 3, scope: !11003)
!11024 = !DILocation(line: 1812, column: 9, scope: !11003)
!11025 = !DILocation(line: 1813, column: 25, scope: !11003)
!11026 = !DILocation(line: 1813, column: 23, scope: !11003)
!11027 = !DILocation(line: 1813, column: 32, scope: !11003)
!11028 = !DILocation(line: 1813, column: 30, scope: !11003)
!11029 = !DILocation(line: 1813, column: 40, scope: !11003)
!11030 = !DILocation(line: 1813, column: 46, scope: !11003)
!11031 = !DILocation(line: 1813, column: 44, scope: !11003)
!11032 = !DILocation(line: 1813, column: 38, scope: !11003)
!11033 = !DILocation(line: 1813, column: 11, scope: !11003)
!11034 = !DILocation(line: 1813, column: 3, scope: !11003)
!11035 = !DILocation(line: 1813, column: 9, scope: !11003)
!11036 = !DILocation(line: 1814, column: 2, scope: !11003)
!11037 = !DILocation(line: 1815, column: 1, scope: !10989)
!11038 = distinct !DISubprogram(name: "copy_v3_v3_char", scope: !2405, file: !2405, line: 107, type: !3789, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11039 = !DILocalVariable(name: "r", arg: 1, scope: !11038, file: !2405, line: 107, type: !1487)
!11040 = !DILocation(line: 107, column: 35, scope: !11038)
!11041 = !DILocalVariable(name: "a", arg: 2, scope: !11038, file: !2405, line: 107, type: !1547)
!11042 = !DILocation(line: 107, column: 52, scope: !11038)
!11043 = !DILocation(line: 109, column: 9, scope: !11038)
!11044 = !DILocation(line: 109, column: 2, scope: !11038)
!11045 = !DILocation(line: 109, column: 7, scope: !11038)
!11046 = !DILocation(line: 110, column: 9, scope: !11038)
!11047 = !DILocation(line: 110, column: 2, scope: !11038)
!11048 = !DILocation(line: 110, column: 7, scope: !11038)
!11049 = !DILocation(line: 111, column: 9, scope: !11038)
!11050 = !DILocation(line: 111, column: 2, scope: !11038)
!11051 = !DILocation(line: 111, column: 7, scope: !11038)
!11052 = !DILocation(line: 112, column: 1, scope: !11038)
!11053 = distinct !DISubprogram(name: "widget_check_trias", scope: !3, file: !3, line: 563, type: !11054, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11054 = !DISubroutineType(types: !11055)
!11055 = !{null, !3811, !2279}
!11056 = !DILocalVariable(name: "tria", arg: 1, scope: !11053, file: !3, line: 563, type: !3811)
!11057 = !DILocation(line: 563, column: 47, scope: !11053)
!11058 = !DILocalVariable(name: "rect", arg: 2, scope: !11053, file: !3, line: 563, type: !2279)
!11059 = !DILocation(line: 563, column: 65, scope: !11053)
!11060 = !DILocalVariable(name: "centx", scope: !11053, file: !3, line: 565, type: !1253)
!11061 = !DILocation(line: 565, column: 8, scope: !11053)
!11062 = !DILocalVariable(name: "centy", scope: !11053, file: !3, line: 565, type: !1253)
!11063 = !DILocation(line: 565, column: 15, scope: !11053)
!11064 = !DILocalVariable(name: "size", scope: !11053, file: !3, line: 565, type: !1253)
!11065 = !DILocation(line: 565, column: 22, scope: !11053)
!11066 = !DILocalVariable(name: "a", scope: !11053, file: !3, line: 566, type: !1254)
!11067 = !DILocation(line: 566, column: 6, scope: !11053)
!11068 = !DILocation(line: 569, column: 10, scope: !11053)
!11069 = !DILocation(line: 569, column: 16, scope: !11053)
!11070 = !DILocation(line: 569, column: 46, scope: !11053)
!11071 = !DILocation(line: 569, column: 30, scope: !11053)
!11072 = !DILocation(line: 569, column: 28, scope: !11053)
!11073 = !DILocation(line: 569, column: 21, scope: !11053)
!11074 = !DILocation(line: 569, column: 8, scope: !11053)
!11075 = !DILocation(line: 570, column: 10, scope: !11053)
!11076 = !DILocation(line: 570, column: 16, scope: !11053)
!11077 = !DILocation(line: 570, column: 46, scope: !11053)
!11078 = !DILocation(line: 570, column: 30, scope: !11053)
!11079 = !DILocation(line: 570, column: 28, scope: !11053)
!11080 = !DILocation(line: 570, column: 21, scope: !11053)
!11081 = !DILocation(line: 570, column: 8, scope: !11053)
!11082 = !DILocation(line: 571, column: 32, scope: !11053)
!11083 = !DILocation(line: 571, column: 16, scope: !11053)
!11084 = !DILocation(line: 571, column: 14, scope: !11053)
!11085 = !DILocation(line: 571, column: 7, scope: !11053)
!11086 = !DILocation(line: 573, column: 9, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 573, column: 2)
!11088 = !DILocation(line: 573, column: 7, scope: !11087)
!11089 = !DILocation(line: 573, column: 14, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 573, column: 2)
!11091 = !DILocation(line: 573, column: 16, scope: !11090)
!11092 = !DILocation(line: 573, column: 2, scope: !11087)
!11093 = !DILocation(line: 574, column: 21, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 573, column: 26)
!11095 = !DILocation(line: 574, column: 44, scope: !11094)
!11096 = !DILocation(line: 574, column: 28, scope: !11094)
!11097 = !DILocation(line: 574, column: 26, scope: !11094)
!11098 = !DILocation(line: 574, column: 52, scope: !11094)
!11099 = !DILocation(line: 574, column: 50, scope: !11094)
!11100 = !DILocation(line: 574, column: 3, scope: !11094)
!11101 = !DILocation(line: 574, column: 9, scope: !11094)
!11102 = !DILocation(line: 574, column: 13, scope: !11094)
!11103 = !DILocation(line: 574, column: 19, scope: !11094)
!11104 = !DILocation(line: 575, column: 21, scope: !11094)
!11105 = !DILocation(line: 575, column: 44, scope: !11094)
!11106 = !DILocation(line: 575, column: 28, scope: !11094)
!11107 = !DILocation(line: 575, column: 26, scope: !11094)
!11108 = !DILocation(line: 575, column: 52, scope: !11094)
!11109 = !DILocation(line: 575, column: 50, scope: !11094)
!11110 = !DILocation(line: 575, column: 3, scope: !11094)
!11111 = !DILocation(line: 575, column: 9, scope: !11094)
!11112 = !DILocation(line: 575, column: 13, scope: !11094)
!11113 = !DILocation(line: 575, column: 19, scope: !11094)
!11114 = !DILocation(line: 576, column: 2, scope: !11094)
!11115 = !DILocation(line: 573, column: 22, scope: !11090)
!11116 = !DILocation(line: 573, column: 2, scope: !11090)
!11117 = distinct !{!11117, !11092, !11118}
!11118 = !DILocation(line: 576, column: 2, scope: !11087)
!11119 = !DILocation(line: 578, column: 2, scope: !11053)
!11120 = !DILocation(line: 578, column: 8, scope: !11053)
!11121 = !DILocation(line: 578, column: 12, scope: !11053)
!11122 = !DILocation(line: 579, column: 2, scope: !11053)
!11123 = !DILocation(line: 579, column: 8, scope: !11053)
!11124 = !DILocation(line: 579, column: 14, scope: !11053)
!11125 = !DILocation(line: 580, column: 1, scope: !11053)
!11126 = distinct !DISubprogram(name: "widget_numbut_draw", scope: !3, file: !3, line: 2504, type: !11127, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{null, !1436, !1451, !1254, !1254, !1256}
!11129 = !DILocalVariable(name: "wcol", arg: 1, scope: !11126, file: !3, line: 2504, type: !1436)
!11130 = !DILocation(line: 2504, column: 48, scope: !11126)
!11131 = !DILocalVariable(name: "rect", arg: 2, scope: !11126, file: !3, line: 2504, type: !1451)
!11132 = !DILocation(line: 2504, column: 60, scope: !11126)
!11133 = !DILocalVariable(name: "state", arg: 3, scope: !11126, file: !3, line: 2504, type: !1254)
!11134 = !DILocation(line: 2504, column: 70, scope: !11126)
!11135 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !11126, file: !3, line: 2504, type: !1254)
!11136 = !DILocation(line: 2504, column: 81, scope: !11126)
!11137 = !DILocalVariable(name: "emboss", arg: 5, scope: !11126, file: !3, line: 2504, type: !1256)
!11138 = !DILocation(line: 2504, column: 101, scope: !11126)
!11139 = !DILocalVariable(name: "wtb", scope: !11126, file: !3, line: 2506, type: !3146)
!11140 = !DILocation(line: 2506, column: 15, scope: !11126)
!11141 = !DILocalVariable(name: "rad", scope: !11126, file: !3, line: 2507, type: !1410)
!11142 = !DILocation(line: 2507, column: 14, scope: !11126)
!11143 = !DILocation(line: 2507, column: 43, scope: !11126)
!11144 = !DILocation(line: 2507, column: 27, scope: !11126)
!11145 = !DILocation(line: 2507, column: 25, scope: !11126)
!11146 = !DILocalVariable(name: "textofs", scope: !11126, file: !3, line: 2508, type: !1253)
!11147 = !DILocation(line: 2508, column: 8, scope: !11126)
!11148 = !DILocation(line: 2508, column: 18, scope: !11126)
!11149 = !DILocation(line: 2508, column: 22, scope: !11126)
!11150 = !DILocation(line: 2510, column: 6, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2510, column: 6)
!11152 = !DILocation(line: 2510, column: 12, scope: !11151)
!11153 = !DILocation(line: 2510, column: 6, scope: !11126)
!11154 = !DILocalVariable(name: "sw_ap", scope: !11155, file: !3, line: 2511, type: !1300)
!11155 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 2511, column: 3)
!11156 = !DILocation(line: 2511, column: 3, scope: !11155)
!11157 = !DILocation(line: 2513, column: 2, scope: !11126)
!11158 = !DILocation(line: 2515, column: 7, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2515, column: 6)
!11160 = !DILocation(line: 2515, column: 6, scope: !11126)
!11161 = !DILocation(line: 2516, column: 25, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2515, column: 15)
!11163 = !DILocation(line: 2516, column: 40, scope: !11162)
!11164 = !DILocation(line: 2516, column: 46, scope: !11162)
!11165 = !DILocation(line: 2516, column: 3, scope: !11162)
!11166 = !DILocation(line: 2517, column: 2, scope: !11162)
!11167 = !DILocation(line: 2520, column: 8, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2520, column: 6)
!11169 = !DILocation(line: 2520, column: 14, scope: !11168)
!11170 = !DILocation(line: 2520, column: 6, scope: !11126)
!11171 = !DILocation(line: 2521, column: 24, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 2520, column: 31)
!11173 = !DILocation(line: 2521, column: 31, scope: !11172)
!11174 = !DILocation(line: 2521, column: 3, scope: !11172)
!11175 = !DILocation(line: 2522, column: 24, scope: !11172)
!11176 = !DILocation(line: 2522, column: 31, scope: !11172)
!11177 = !DILocation(line: 2522, column: 3, scope: !11172)
!11178 = !DILocation(line: 2523, column: 2, scope: !11172)
!11179 = !DILocation(line: 2525, column: 24, scope: !11126)
!11180 = !DILocation(line: 2525, column: 2, scope: !11126)
!11181 = !DILocation(line: 2527, column: 8, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2527, column: 6)
!11183 = !DILocation(line: 2527, column: 14, scope: !11182)
!11184 = !DILocation(line: 2527, column: 6, scope: !11126)
!11185 = !DILocation(line: 2529, column: 17, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2527, column: 31)
!11187 = !DILocation(line: 2529, column: 3, scope: !11186)
!11188 = !DILocation(line: 2529, column: 9, scope: !11186)
!11189 = !DILocation(line: 2529, column: 14, scope: !11186)
!11190 = !DILocation(line: 2530, column: 17, scope: !11186)
!11191 = !DILocation(line: 2530, column: 3, scope: !11186)
!11192 = !DILocation(line: 2530, column: 9, scope: !11186)
!11193 = !DILocation(line: 2530, column: 14, scope: !11186)
!11194 = !DILocation(line: 2531, column: 2, scope: !11186)
!11195 = !DILocation(line: 2532, column: 1, scope: !11126)
!11196 = distinct !DISubprogram(name: "widget_num_tria", scope: !3, file: !3, line: 520, type: !3809, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11197 = !DILocalVariable(name: "tria", arg: 1, scope: !11196, file: !3, line: 520, type: !3811)
!11198 = !DILocation(line: 520, column: 44, scope: !11196)
!11199 = !DILocalVariable(name: "rect", arg: 2, scope: !11196, file: !3, line: 520, type: !2279)
!11200 = !DILocation(line: 520, column: 62, scope: !11196)
!11201 = !DILocalVariable(name: "triasize", arg: 3, scope: !11196, file: !3, line: 520, type: !1253)
!11202 = !DILocation(line: 520, column: 74, scope: !11196)
!11203 = !DILocalVariable(name: "where", arg: 4, scope: !11196, file: !3, line: 520, type: !1260)
!11204 = !DILocation(line: 520, column: 89, scope: !11196)
!11205 = !DILocation(line: 523, column: 10, scope: !11196)
!11206 = !DILocation(line: 523, column: 16, scope: !11196)
!11207 = !DILocation(line: 523, column: 22, scope: !11196)
!11208 = !DILocation(line: 523, column: 32, scope: !11196)
!11209 = !DILocation(line: 522, column: 2, scope: !11196)
!11210 = !DILocation(line: 526, column: 1, scope: !11196)
!11211 = distinct !DISubprogram(name: "widget_menu_trias", scope: !3, file: !3, line: 544, type: !11054, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11212 = !DILocalVariable(name: "tria", arg: 1, scope: !11211, file: !3, line: 544, type: !3811)
!11213 = !DILocation(line: 544, column: 46, scope: !11211)
!11214 = !DILocalVariable(name: "rect", arg: 2, scope: !11211, file: !3, line: 544, type: !2279)
!11215 = !DILocation(line: 544, column: 64, scope: !11211)
!11216 = !DILocalVariable(name: "centx", scope: !11211, file: !3, line: 546, type: !1253)
!11217 = !DILocation(line: 546, column: 8, scope: !11211)
!11218 = !DILocalVariable(name: "centy", scope: !11211, file: !3, line: 546, type: !1253)
!11219 = !DILocation(line: 546, column: 15, scope: !11211)
!11220 = !DILocalVariable(name: "size", scope: !11211, file: !3, line: 546, type: !1253)
!11221 = !DILocation(line: 546, column: 22, scope: !11211)
!11222 = !DILocalVariable(name: "a", scope: !11211, file: !3, line: 547, type: !1254)
!11223 = !DILocation(line: 547, column: 6, scope: !11211)
!11224 = !DILocation(line: 550, column: 10, scope: !11211)
!11225 = !DILocation(line: 550, column: 16, scope: !11211)
!11226 = !DILocation(line: 550, column: 47, scope: !11211)
!11227 = !DILocation(line: 550, column: 31, scope: !11211)
!11228 = !DILocation(line: 550, column: 29, scope: !11211)
!11229 = !DILocation(line: 550, column: 21, scope: !11211)
!11230 = !DILocation(line: 550, column: 8, scope: !11211)
!11231 = !DILocation(line: 551, column: 10, scope: !11211)
!11232 = !DILocation(line: 551, column: 16, scope: !11211)
!11233 = !DILocation(line: 551, column: 47, scope: !11211)
!11234 = !DILocation(line: 551, column: 31, scope: !11211)
!11235 = !DILocation(line: 551, column: 29, scope: !11211)
!11236 = !DILocation(line: 551, column: 21, scope: !11211)
!11237 = !DILocation(line: 551, column: 8, scope: !11211)
!11238 = !DILocation(line: 552, column: 39, scope: !11211)
!11239 = !DILocation(line: 552, column: 23, scope: !11211)
!11240 = !DILocation(line: 552, column: 16, scope: !11211)
!11241 = !DILocation(line: 552, column: 14, scope: !11211)
!11242 = !DILocation(line: 552, column: 7, scope: !11211)
!11243 = !DILocation(line: 554, column: 9, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 554, column: 2)
!11245 = !DILocation(line: 554, column: 7, scope: !11244)
!11246 = !DILocation(line: 554, column: 14, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 554, column: 2)
!11248 = !DILocation(line: 554, column: 16, scope: !11247)
!11249 = !DILocation(line: 554, column: 2, scope: !11244)
!11250 = !DILocation(line: 555, column: 21, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 554, column: 26)
!11252 = !DILocation(line: 555, column: 43, scope: !11251)
!11253 = !DILocation(line: 555, column: 28, scope: !11251)
!11254 = !DILocation(line: 555, column: 26, scope: !11251)
!11255 = !DILocation(line: 555, column: 51, scope: !11251)
!11256 = !DILocation(line: 555, column: 49, scope: !11251)
!11257 = !DILocation(line: 555, column: 3, scope: !11251)
!11258 = !DILocation(line: 555, column: 9, scope: !11251)
!11259 = !DILocation(line: 555, column: 13, scope: !11251)
!11260 = !DILocation(line: 555, column: 19, scope: !11251)
!11261 = !DILocation(line: 556, column: 21, scope: !11251)
!11262 = !DILocation(line: 556, column: 43, scope: !11251)
!11263 = !DILocation(line: 556, column: 28, scope: !11251)
!11264 = !DILocation(line: 556, column: 26, scope: !11251)
!11265 = !DILocation(line: 556, column: 51, scope: !11251)
!11266 = !DILocation(line: 556, column: 49, scope: !11251)
!11267 = !DILocation(line: 556, column: 3, scope: !11251)
!11268 = !DILocation(line: 556, column: 9, scope: !11251)
!11269 = !DILocation(line: 556, column: 13, scope: !11251)
!11270 = !DILocation(line: 556, column: 19, scope: !11251)
!11271 = !DILocation(line: 557, column: 2, scope: !11251)
!11272 = !DILocation(line: 554, column: 22, scope: !11247)
!11273 = !DILocation(line: 554, column: 2, scope: !11247)
!11274 = distinct !{!11274, !11249, !11275}
!11275 = !DILocation(line: 557, column: 2, scope: !11244)
!11276 = !DILocation(line: 559, column: 2, scope: !11211)
!11277 = !DILocation(line: 559, column: 8, scope: !11211)
!11278 = !DILocation(line: 559, column: 12, scope: !11211)
!11279 = !DILocation(line: 560, column: 2, scope: !11211)
!11280 = !DILocation(line: 560, column: 8, scope: !11211)
!11281 = !DILocation(line: 560, column: 14, scope: !11211)
!11282 = !DILocation(line: 561, column: 1, scope: !11211)
!11283 = distinct !DISubprogram(name: "widget_numbut_embossn", scope: !3, file: !3, line: 2542, type: !1462, scopeLine: 2543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11284 = !DILocalVariable(name: "UNUSED_but", arg: 1, scope: !11283, file: !3, line: 2542, type: !1464)
!11285 = !DILocation(line: 2542, column: 42, scope: !11283)
!11286 = !DILocalVariable(name: "wcol", arg: 2, scope: !11283, file: !3, line: 2542, type: !1436)
!11287 = !DILocation(line: 2542, column: 71, scope: !11283)
!11288 = !DILocalVariable(name: "rect", arg: 3, scope: !11283, file: !3, line: 2542, type: !1451)
!11289 = !DILocation(line: 2542, column: 83, scope: !11283)
!11290 = !DILocalVariable(name: "state", arg: 4, scope: !11283, file: !3, line: 2542, type: !1254)
!11291 = !DILocation(line: 2542, column: 93, scope: !11283)
!11292 = !DILocalVariable(name: "roundboxalign", arg: 5, scope: !11283, file: !3, line: 2542, type: !1254)
!11293 = !DILocation(line: 2542, column: 104, scope: !11283)
!11294 = !DILocation(line: 2544, column: 21, scope: !11283)
!11295 = !DILocation(line: 2544, column: 27, scope: !11283)
!11296 = !DILocation(line: 2544, column: 33, scope: !11283)
!11297 = !DILocation(line: 2544, column: 40, scope: !11283)
!11298 = !DILocation(line: 2544, column: 2, scope: !11283)
!11299 = !DILocation(line: 2545, column: 1, scope: !11283)
!11300 = distinct !DISubprogram(name: "rgb_to_bw", scope: !11301, file: !11301, line: 211, type: !2406, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11301 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11302 = !DILocalVariable(name: "rgb", arg: 1, scope: !11300, file: !11301, line: 211, type: !2408)
!11303 = !DILocation(line: 211, column: 37, scope: !11300)
!11304 = !DILocation(line: 213, column: 17, scope: !11300)
!11305 = !DILocation(line: 213, column: 15, scope: !11300)
!11306 = !DILocation(line: 213, column: 34, scope: !11300)
!11307 = !DILocation(line: 213, column: 32, scope: !11300)
!11308 = !DILocation(line: 213, column: 24, scope: !11300)
!11309 = !DILocation(line: 213, column: 50, scope: !11300)
!11310 = !DILocation(line: 213, column: 48, scope: !11300)
!11311 = !DILocation(line: 213, column: 41, scope: !11300)
!11312 = !DILocation(line: 213, column: 2, scope: !11300)
!11313 = distinct !DISubprogram(name: "max_ff", scope: !2370, file: !2370, line: 206, type: !11314, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!1253, !1253, !1253}
!11316 = !DILocalVariable(name: "a", arg: 1, scope: !11313, file: !2370, line: 206, type: !1253)
!11317 = !DILocation(line: 206, column: 28, scope: !11313)
!11318 = !DILocalVariable(name: "b", arg: 2, scope: !11313, file: !2370, line: 206, type: !1253)
!11319 = !DILocation(line: 206, column: 37, scope: !11313)
!11320 = !DILocation(line: 208, column: 10, scope: !11313)
!11321 = !DILocation(line: 208, column: 14, scope: !11313)
!11322 = !DILocation(line: 208, column: 12, scope: !11313)
!11323 = !DILocation(line: 208, column: 9, scope: !11313)
!11324 = !DILocation(line: 208, column: 19, scope: !11313)
!11325 = !DILocation(line: 208, column: 23, scope: !11313)
!11326 = !DILocation(line: 208, column: 2, scope: !11313)
!11327 = distinct !DISubprogram(name: "BLI_rcti_cent_y", scope: !2343, file: !2343, line: 101, type: !2385, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11328 = !DILocalVariable(name: "rct", arg: 1, scope: !11327, file: !2343, line: 101, type: !2346)
!11329 = !DILocation(line: 101, column: 53, scope: !11327)
!11330 = !DILocation(line: 101, column: 68, scope: !11327)
!11331 = !DILocation(line: 101, column: 73, scope: !11327)
!11332 = !DILocation(line: 101, column: 80, scope: !11327)
!11333 = !DILocation(line: 101, column: 85, scope: !11327)
!11334 = !DILocation(line: 101, column: 78, scope: !11327)
!11335 = !DILocation(line: 101, column: 91, scope: !11327)
!11336 = !DILocation(line: 101, column: 60, scope: !11327)
!11337 = distinct !DISubprogram(name: "widgetbase_outline", scope: !3, file: !3, line: 631, type: !3357, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11338 = !DILocalVariable(name: "wtb", arg: 1, scope: !11337, file: !3, line: 631, type: !3359)
!11339 = !DILocation(line: 631, column: 46, scope: !11337)
!11340 = !DILocalVariable(name: "quad_strip", scope: !11337, file: !3, line: 633, type: !3611)
!11341 = !DILocation(line: 633, column: 8, scope: !11337)
!11342 = !DILocation(line: 634, column: 29, scope: !11337)
!11343 = !DILocation(line: 634, column: 34, scope: !11337)
!11344 = !DILocation(line: 634, column: 39, scope: !11337)
!11345 = !DILocation(line: 634, column: 48, scope: !11337)
!11346 = !DILocation(line: 634, column: 2, scope: !11337)
!11347 = !DILocation(line: 636, column: 2, scope: !11337)
!11348 = !DILocation(line: 637, column: 34, scope: !11337)
!11349 = !DILocation(line: 637, column: 2, scope: !11337)
!11350 = !DILocation(line: 638, column: 33, scope: !11337)
!11351 = !DILocation(line: 638, column: 38, scope: !11337)
!11352 = !DILocation(line: 638, column: 46, scope: !11337)
!11353 = !DILocation(line: 638, column: 50, scope: !11337)
!11354 = !DILocation(line: 638, column: 2, scope: !11337)
!11355 = !DILocation(line: 639, column: 2, scope: !11337)
!11356 = !DILocation(line: 640, column: 1, scope: !11337)
!11357 = distinct !DISubprogram(name: "ui_hsv_cursor", scope: !3, file: !3, line: 2076, type: !11358, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{null, !1253, !1253}
!11360 = !DILocalVariable(name: "x", arg: 1, scope: !11357, file: !3, line: 2076, type: !1253)
!11361 = !DILocation(line: 2076, column: 33, scope: !11357)
!11362 = !DILocalVariable(name: "y", arg: 2, scope: !11357, file: !3, line: 2076, type: !1253)
!11363 = !DILocation(line: 2076, column: 42, scope: !11357)
!11364 = !DILocation(line: 2079, column: 2, scope: !11357)
!11365 = !DILocation(line: 2080, column: 15, scope: !11357)
!11366 = !DILocation(line: 2080, column: 18, scope: !11357)
!11367 = !DILocation(line: 2080, column: 2, scope: !11357)
!11368 = !DILocation(line: 2082, column: 2, scope: !11357)
!11369 = !DILocation(line: 2083, column: 52, scope: !11357)
!11370 = !DILocation(line: 2083, column: 48, scope: !11357)
!11371 = !DILocation(line: 2083, column: 2, scope: !11357)
!11372 = !DILocation(line: 2085, column: 2, scope: !11357)
!11373 = !DILocation(line: 2086, column: 2, scope: !11357)
!11374 = !DILocation(line: 2087, column: 2, scope: !11357)
!11375 = !DILocation(line: 2088, column: 51, scope: !11357)
!11376 = !DILocation(line: 2088, column: 47, scope: !11357)
!11377 = !DILocation(line: 2088, column: 2, scope: !11357)
!11378 = !DILocation(line: 2089, column: 2, scope: !11357)
!11379 = !DILocation(line: 2090, column: 2, scope: !11357)
!11380 = !DILocation(line: 2092, column: 2, scope: !11357)
!11381 = !DILocation(line: 2094, column: 1, scope: !11357)
!11382 = distinct !DISubprogram(name: "round_box_shadow_edges", scope: !3, file: !3, line: 246, type: !11383, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11383 = !DISubroutineType(types: !11384)
!11384 = !{!1254, !3041, !2279, !1253, !1254, !1253}
!11385 = !DILocalVariable(name: "vert", arg: 1, scope: !11382, file: !3, line: 246, type: !3041)
!11386 = !DILocation(line: 246, column: 43, scope: !11382)
!11387 = !DILocalVariable(name: "rect", arg: 2, scope: !11382, file: !3, line: 246, type: !2279)
!11388 = !DILocation(line: 246, column: 65, scope: !11382)
!11389 = !DILocalVariable(name: "rad", arg: 3, scope: !11382, file: !3, line: 246, type: !1253)
!11390 = !DILocation(line: 246, column: 77, scope: !11382)
!11391 = !DILocalVariable(name: "roundboxalign", arg: 4, scope: !11382, file: !3, line: 246, type: !1254)
!11392 = !DILocation(line: 246, column: 86, scope: !11382)
!11393 = !DILocalVariable(name: "step", arg: 5, scope: !11382, file: !3, line: 246, type: !1253)
!11394 = !DILocation(line: 246, column: 107, scope: !11382)
!11395 = !DILocalVariable(name: "vec", scope: !11382, file: !3, line: 248, type: !6936)
!11396 = !DILocation(line: 248, column: 8, scope: !11382)
!11397 = !DILocalVariable(name: "minx", scope: !11382, file: !3, line: 249, type: !1253)
!11398 = !DILocation(line: 249, column: 8, scope: !11382)
!11399 = !DILocalVariable(name: "miny", scope: !11382, file: !3, line: 249, type: !1253)
!11400 = !DILocation(line: 249, column: 14, scope: !11382)
!11401 = !DILocalVariable(name: "maxx", scope: !11382, file: !3, line: 249, type: !1253)
!11402 = !DILocation(line: 249, column: 20, scope: !11382)
!11403 = !DILocalVariable(name: "maxy", scope: !11382, file: !3, line: 249, type: !1253)
!11404 = !DILocation(line: 249, column: 26, scope: !11382)
!11405 = !DILocalVariable(name: "a", scope: !11382, file: !3, line: 250, type: !1254)
!11406 = !DILocation(line: 250, column: 6, scope: !11382)
!11407 = !DILocalVariable(name: "tot", scope: !11382, file: !3, line: 250, type: !1254)
!11408 = !DILocation(line: 250, column: 9, scope: !11382)
!11409 = !DILocation(line: 252, column: 9, scope: !11382)
!11410 = !DILocation(line: 252, column: 6, scope: !11382)
!11411 = !DILocation(line: 254, column: 13, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 254, column: 6)
!11413 = !DILocation(line: 254, column: 11, scope: !11412)
!11414 = !DILocation(line: 254, column: 35, scope: !11412)
!11415 = !DILocation(line: 254, column: 19, scope: !11412)
!11416 = !DILocation(line: 254, column: 17, scope: !11412)
!11417 = !DILocation(line: 254, column: 6, scope: !11382)
!11418 = !DILocation(line: 255, column: 32, scope: !11412)
!11419 = !DILocation(line: 255, column: 16, scope: !11412)
!11420 = !DILocation(line: 255, column: 14, scope: !11412)
!11421 = !DILocation(line: 255, column: 7, scope: !11412)
!11422 = !DILocation(line: 255, column: 3, scope: !11412)
!11423 = !DILocation(line: 257, column: 9, scope: !11382)
!11424 = !DILocation(line: 257, column: 15, scope: !11382)
!11425 = !DILocation(line: 257, column: 22, scope: !11382)
!11426 = !DILocation(line: 257, column: 20, scope: !11382)
!11427 = !DILocation(line: 257, column: 7, scope: !11382)
!11428 = !DILocation(line: 258, column: 9, scope: !11382)
!11429 = !DILocation(line: 258, column: 15, scope: !11382)
!11430 = !DILocation(line: 258, column: 22, scope: !11382)
!11431 = !DILocation(line: 258, column: 20, scope: !11382)
!11432 = !DILocation(line: 258, column: 7, scope: !11382)
!11433 = !DILocation(line: 259, column: 9, scope: !11382)
!11434 = !DILocation(line: 259, column: 15, scope: !11382)
!11435 = !DILocation(line: 259, column: 22, scope: !11382)
!11436 = !DILocation(line: 259, column: 20, scope: !11382)
!11437 = !DILocation(line: 259, column: 7, scope: !11382)
!11438 = !DILocation(line: 260, column: 9, scope: !11382)
!11439 = !DILocation(line: 260, column: 15, scope: !11382)
!11440 = !DILocation(line: 260, column: 22, scope: !11382)
!11441 = !DILocation(line: 260, column: 20, scope: !11382)
!11442 = !DILocation(line: 260, column: 7, scope: !11382)
!11443 = !DILocation(line: 263, column: 9, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 263, column: 2)
!11445 = !DILocation(line: 263, column: 7, scope: !11444)
!11446 = !DILocation(line: 263, column: 14, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 263, column: 2)
!11448 = !DILocation(line: 263, column: 16, scope: !11447)
!11449 = !DILocation(line: 263, column: 2, scope: !11444)
!11450 = !DILocation(line: 264, column: 15, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 263, column: 44)
!11452 = !DILocation(line: 264, column: 31, scope: !11451)
!11453 = !DILocation(line: 264, column: 21, scope: !11451)
!11454 = !DILocation(line: 264, column: 19, scope: !11451)
!11455 = !DILocation(line: 264, column: 7, scope: !11451)
!11456 = !DILocation(line: 264, column: 3, scope: !11451)
!11457 = !DILocation(line: 264, column: 13, scope: !11451)
!11458 = !DILocation(line: 265, column: 15, scope: !11451)
!11459 = !DILocation(line: 265, column: 31, scope: !11451)
!11460 = !DILocation(line: 265, column: 21, scope: !11451)
!11461 = !DILocation(line: 265, column: 19, scope: !11451)
!11462 = !DILocation(line: 265, column: 7, scope: !11451)
!11463 = !DILocation(line: 265, column: 3, scope: !11451)
!11464 = !DILocation(line: 265, column: 13, scope: !11451)
!11465 = !DILocation(line: 266, column: 2, scope: !11451)
!11466 = !DILocation(line: 263, column: 40, scope: !11447)
!11467 = !DILocation(line: 263, column: 2, scope: !11447)
!11468 = distinct !{!11468, !11449, !11469}
!11469 = !DILocation(line: 266, column: 2, scope: !11444)
!11470 = !DILocation(line: 269, column: 6, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 269, column: 6)
!11472 = !DILocation(line: 269, column: 20, scope: !11471)
!11473 = !DILocation(line: 269, column: 6, scope: !11382)
!11474 = !DILocation(line: 270, column: 10, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !3, line: 270, column: 3)
!11476 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 269, column: 39)
!11477 = !DILocation(line: 270, column: 8, scope: !11475)
!11478 = !DILocation(line: 270, column: 15, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 270, column: 3)
!11480 = !DILocation(line: 270, column: 17, scope: !11479)
!11481 = !DILocation(line: 270, column: 3, scope: !11475)
!11482 = !DILocation(line: 271, column: 19, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 270, column: 52)
!11484 = !DILocation(line: 271, column: 26, scope: !11483)
!11485 = !DILocation(line: 271, column: 24, scope: !11483)
!11486 = !DILocation(line: 271, column: 36, scope: !11483)
!11487 = !DILocation(line: 271, column: 32, scope: !11483)
!11488 = !DILocation(line: 271, column: 30, scope: !11483)
!11489 = !DILocation(line: 271, column: 4, scope: !11483)
!11490 = !DILocation(line: 271, column: 9, scope: !11483)
!11491 = !DILocation(line: 271, column: 17, scope: !11483)
!11492 = !DILocation(line: 272, column: 19, scope: !11483)
!11493 = !DILocation(line: 272, column: 30, scope: !11483)
!11494 = !DILocation(line: 272, column: 26, scope: !11483)
!11495 = !DILocation(line: 272, column: 24, scope: !11483)
!11496 = !DILocation(line: 272, column: 4, scope: !11483)
!11497 = !DILocation(line: 272, column: 9, scope: !11483)
!11498 = !DILocation(line: 272, column: 17, scope: !11483)
!11499 = !DILocation(line: 273, column: 3, scope: !11483)
!11500 = !DILocation(line: 270, column: 41, scope: !11479)
!11501 = !DILocation(line: 270, column: 48, scope: !11479)
!11502 = !DILocation(line: 270, column: 3, scope: !11479)
!11503 = distinct !{!11503, !11481, !11504}
!11504 = !DILocation(line: 273, column: 3, scope: !11475)
!11505 = !DILocation(line: 274, column: 2, scope: !11476)
!11506 = !DILocation(line: 276, column: 10, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 276, column: 3)
!11508 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 275, column: 7)
!11509 = !DILocation(line: 276, column: 8, scope: !11507)
!11510 = !DILocation(line: 276, column: 15, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 276, column: 3)
!11512 = !DILocation(line: 276, column: 17, scope: !11511)
!11513 = !DILocation(line: 276, column: 3, scope: !11507)
!11514 = !DILocation(line: 277, column: 19, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 276, column: 52)
!11516 = !DILocation(line: 277, column: 4, scope: !11515)
!11517 = !DILocation(line: 277, column: 9, scope: !11515)
!11518 = !DILocation(line: 277, column: 17, scope: !11515)
!11519 = !DILocation(line: 278, column: 19, scope: !11515)
!11520 = !DILocation(line: 278, column: 4, scope: !11515)
!11521 = !DILocation(line: 278, column: 9, scope: !11515)
!11522 = !DILocation(line: 278, column: 17, scope: !11515)
!11523 = !DILocation(line: 279, column: 3, scope: !11515)
!11524 = !DILocation(line: 276, column: 41, scope: !11511)
!11525 = !DILocation(line: 276, column: 48, scope: !11511)
!11526 = !DILocation(line: 276, column: 3, scope: !11511)
!11527 = distinct !{!11527, !11513, !11528}
!11528 = !DILocation(line: 279, column: 3, scope: !11507)
!11529 = !DILocation(line: 282, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 282, column: 6)
!11531 = !DILocation(line: 282, column: 20, scope: !11530)
!11532 = !DILocation(line: 282, column: 6, scope: !11382)
!11533 = !DILocation(line: 283, column: 10, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 283, column: 3)
!11535 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 282, column: 42)
!11536 = !DILocation(line: 283, column: 8, scope: !11534)
!11537 = !DILocation(line: 283, column: 15, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 283, column: 3)
!11539 = !DILocation(line: 283, column: 17, scope: !11538)
!11540 = !DILocation(line: 283, column: 3, scope: !11534)
!11541 = !DILocation(line: 284, column: 19, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 283, column: 52)
!11543 = !DILocation(line: 284, column: 30, scope: !11542)
!11544 = !DILocation(line: 284, column: 26, scope: !11542)
!11545 = !DILocation(line: 284, column: 24, scope: !11542)
!11546 = !DILocation(line: 284, column: 4, scope: !11542)
!11547 = !DILocation(line: 284, column: 9, scope: !11542)
!11548 = !DILocation(line: 284, column: 17, scope: !11542)
!11549 = !DILocation(line: 285, column: 19, scope: !11542)
!11550 = !DILocation(line: 285, column: 26, scope: !11542)
!11551 = !DILocation(line: 285, column: 24, scope: !11542)
!11552 = !DILocation(line: 285, column: 36, scope: !11542)
!11553 = !DILocation(line: 285, column: 32, scope: !11542)
!11554 = !DILocation(line: 285, column: 30, scope: !11542)
!11555 = !DILocation(line: 285, column: 4, scope: !11542)
!11556 = !DILocation(line: 285, column: 9, scope: !11542)
!11557 = !DILocation(line: 285, column: 17, scope: !11542)
!11558 = !DILocation(line: 286, column: 3, scope: !11542)
!11559 = !DILocation(line: 283, column: 41, scope: !11538)
!11560 = !DILocation(line: 283, column: 48, scope: !11538)
!11561 = !DILocation(line: 283, column: 3, scope: !11538)
!11562 = distinct !{!11562, !11540, !11563}
!11563 = !DILocation(line: 286, column: 3, scope: !11534)
!11564 = !DILocation(line: 287, column: 2, scope: !11535)
!11565 = !DILocation(line: 289, column: 10, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 289, column: 3)
!11567 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 288, column: 7)
!11568 = !DILocation(line: 289, column: 8, scope: !11566)
!11569 = !DILocation(line: 289, column: 15, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 289, column: 3)
!11571 = !DILocation(line: 289, column: 17, scope: !11570)
!11572 = !DILocation(line: 289, column: 3, scope: !11566)
!11573 = !DILocation(line: 290, column: 19, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 289, column: 52)
!11575 = !DILocation(line: 290, column: 4, scope: !11574)
!11576 = !DILocation(line: 290, column: 9, scope: !11574)
!11577 = !DILocation(line: 290, column: 17, scope: !11574)
!11578 = !DILocation(line: 291, column: 19, scope: !11574)
!11579 = !DILocation(line: 291, column: 4, scope: !11574)
!11580 = !DILocation(line: 291, column: 9, scope: !11574)
!11581 = !DILocation(line: 291, column: 17, scope: !11574)
!11582 = !DILocation(line: 292, column: 3, scope: !11574)
!11583 = !DILocation(line: 289, column: 41, scope: !11570)
!11584 = !DILocation(line: 289, column: 48, scope: !11570)
!11585 = !DILocation(line: 289, column: 3, scope: !11570)
!11586 = distinct !{!11586, !11572, !11587}
!11587 = !DILocation(line: 292, column: 3, scope: !11566)
!11588 = !DILocation(line: 295, column: 6, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 295, column: 6)
!11590 = !DILocation(line: 295, column: 20, scope: !11589)
!11591 = !DILocation(line: 295, column: 6, scope: !11382)
!11592 = !DILocation(line: 296, column: 10, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 296, column: 3)
!11594 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 295, column: 43)
!11595 = !DILocation(line: 296, column: 8, scope: !11593)
!11596 = !DILocation(line: 296, column: 15, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 296, column: 3)
!11598 = !DILocation(line: 296, column: 17, scope: !11597)
!11599 = !DILocation(line: 296, column: 3, scope: !11593)
!11600 = !DILocation(line: 297, column: 19, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 296, column: 52)
!11602 = !DILocation(line: 297, column: 26, scope: !11601)
!11603 = !DILocation(line: 297, column: 24, scope: !11601)
!11604 = !DILocation(line: 297, column: 36, scope: !11601)
!11605 = !DILocation(line: 297, column: 32, scope: !11601)
!11606 = !DILocation(line: 297, column: 30, scope: !11601)
!11607 = !DILocation(line: 297, column: 4, scope: !11601)
!11608 = !DILocation(line: 297, column: 9, scope: !11601)
!11609 = !DILocation(line: 297, column: 17, scope: !11601)
!11610 = !DILocation(line: 298, column: 19, scope: !11601)
!11611 = !DILocation(line: 298, column: 30, scope: !11601)
!11612 = !DILocation(line: 298, column: 26, scope: !11601)
!11613 = !DILocation(line: 298, column: 24, scope: !11601)
!11614 = !DILocation(line: 298, column: 4, scope: !11601)
!11615 = !DILocation(line: 298, column: 9, scope: !11601)
!11616 = !DILocation(line: 298, column: 17, scope: !11601)
!11617 = !DILocation(line: 299, column: 3, scope: !11601)
!11618 = !DILocation(line: 296, column: 41, scope: !11597)
!11619 = !DILocation(line: 296, column: 48, scope: !11597)
!11620 = !DILocation(line: 296, column: 3, scope: !11597)
!11621 = distinct !{!11621, !11599, !11622}
!11622 = !DILocation(line: 299, column: 3, scope: !11593)
!11623 = !DILocation(line: 300, column: 2, scope: !11594)
!11624 = !DILocation(line: 302, column: 10, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 302, column: 3)
!11626 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 301, column: 7)
!11627 = !DILocation(line: 302, column: 8, scope: !11625)
!11628 = !DILocation(line: 302, column: 15, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 302, column: 3)
!11630 = !DILocation(line: 302, column: 17, scope: !11629)
!11631 = !DILocation(line: 302, column: 3, scope: !11625)
!11632 = !DILocation(line: 303, column: 19, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 302, column: 52)
!11634 = !DILocation(line: 303, column: 4, scope: !11633)
!11635 = !DILocation(line: 303, column: 9, scope: !11633)
!11636 = !DILocation(line: 303, column: 17, scope: !11633)
!11637 = !DILocation(line: 304, column: 19, scope: !11633)
!11638 = !DILocation(line: 304, column: 4, scope: !11633)
!11639 = !DILocation(line: 304, column: 9, scope: !11633)
!11640 = !DILocation(line: 304, column: 17, scope: !11633)
!11641 = !DILocation(line: 305, column: 3, scope: !11633)
!11642 = !DILocation(line: 302, column: 41, scope: !11629)
!11643 = !DILocation(line: 302, column: 48, scope: !11629)
!11644 = !DILocation(line: 302, column: 3, scope: !11629)
!11645 = distinct !{!11645, !11631, !11646}
!11646 = !DILocation(line: 305, column: 3, scope: !11625)
!11647 = !DILocation(line: 308, column: 6, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 308, column: 6)
!11649 = !DILocation(line: 308, column: 20, scope: !11648)
!11650 = !DILocation(line: 308, column: 6, scope: !11382)
!11651 = !DILocation(line: 309, column: 10, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 309, column: 3)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 308, column: 40)
!11654 = !DILocation(line: 309, column: 8, scope: !11652)
!11655 = !DILocation(line: 309, column: 15, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 309, column: 3)
!11657 = !DILocation(line: 309, column: 17, scope: !11656)
!11658 = !DILocation(line: 309, column: 3, scope: !11652)
!11659 = !DILocation(line: 310, column: 19, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 309, column: 52)
!11661 = !DILocation(line: 310, column: 30, scope: !11660)
!11662 = !DILocation(line: 310, column: 26, scope: !11660)
!11663 = !DILocation(line: 310, column: 24, scope: !11660)
!11664 = !DILocation(line: 310, column: 4, scope: !11660)
!11665 = !DILocation(line: 310, column: 9, scope: !11660)
!11666 = !DILocation(line: 310, column: 17, scope: !11660)
!11667 = !DILocation(line: 311, column: 19, scope: !11660)
!11668 = !DILocation(line: 311, column: 26, scope: !11660)
!11669 = !DILocation(line: 311, column: 24, scope: !11660)
!11670 = !DILocation(line: 311, column: 36, scope: !11660)
!11671 = !DILocation(line: 311, column: 32, scope: !11660)
!11672 = !DILocation(line: 311, column: 30, scope: !11660)
!11673 = !DILocation(line: 311, column: 4, scope: !11660)
!11674 = !DILocation(line: 311, column: 9, scope: !11660)
!11675 = !DILocation(line: 311, column: 17, scope: !11660)
!11676 = !DILocation(line: 312, column: 3, scope: !11660)
!11677 = !DILocation(line: 309, column: 41, scope: !11656)
!11678 = !DILocation(line: 309, column: 48, scope: !11656)
!11679 = !DILocation(line: 309, column: 3, scope: !11656)
!11680 = distinct !{!11680, !11658, !11681}
!11681 = !DILocation(line: 312, column: 3, scope: !11652)
!11682 = !DILocation(line: 313, column: 2, scope: !11653)
!11683 = !DILocation(line: 315, column: 10, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 315, column: 3)
!11685 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 314, column: 7)
!11686 = !DILocation(line: 315, column: 8, scope: !11684)
!11687 = !DILocation(line: 315, column: 15, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 315, column: 3)
!11689 = !DILocation(line: 315, column: 17, scope: !11688)
!11690 = !DILocation(line: 315, column: 3, scope: !11684)
!11691 = !DILocation(line: 316, column: 19, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 315, column: 52)
!11693 = !DILocation(line: 316, column: 4, scope: !11692)
!11694 = !DILocation(line: 316, column: 9, scope: !11692)
!11695 = !DILocation(line: 316, column: 17, scope: !11692)
!11696 = !DILocation(line: 317, column: 19, scope: !11692)
!11697 = !DILocation(line: 317, column: 4, scope: !11692)
!11698 = !DILocation(line: 317, column: 9, scope: !11692)
!11699 = !DILocation(line: 317, column: 17, scope: !11692)
!11700 = !DILocation(line: 318, column: 3, scope: !11692)
!11701 = !DILocation(line: 315, column: 41, scope: !11688)
!11702 = !DILocation(line: 315, column: 48, scope: !11688)
!11703 = !DILocation(line: 315, column: 3, scope: !11688)
!11704 = distinct !{!11704, !11690, !11705}
!11705 = !DILocation(line: 318, column: 3, scope: !11684)
!11706 = !DILocation(line: 320, column: 9, scope: !11382)
!11707 = !DILocation(line: 320, column: 2, scope: !11382)
!11708 = distinct !DISubprogram(name: "min_ff", scope: !2370, file: !2370, line: 202, type: !11314, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11709 = !DILocalVariable(name: "a", arg: 1, scope: !11708, file: !2370, line: 202, type: !1253)
!11710 = !DILocation(line: 202, column: 28, scope: !11708)
!11711 = !DILocalVariable(name: "b", arg: 2, scope: !11708, file: !2370, line: 202, type: !1253)
!11712 = !DILocation(line: 202, column: 37, scope: !11708)
!11713 = !DILocation(line: 204, column: 10, scope: !11708)
!11714 = !DILocation(line: 204, column: 14, scope: !11708)
!11715 = !DILocation(line: 204, column: 12, scope: !11708)
!11716 = !DILocation(line: 204, column: 9, scope: !11708)
!11717 = !DILocation(line: 204, column: 19, scope: !11708)
!11718 = !DILocation(line: 204, column: 23, scope: !11708)
!11719 = !DILocation(line: 204, column: 2, scope: !11708)
!11720 = distinct !DISubprogram(name: "ui_text_clip_right_ex", scope: !3, file: !3, line: 935, type: !11721, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1990)
!11721 = !DISubroutineType(types: !11722)
!11722 = !{null, !1970, !1487, !6389, !1410, !1547, !2500, !1410, !11723}
!11723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!11724 = !DILocalVariable(name: "fstyle", arg: 1, scope: !11720, file: !3, line: 935, type: !1970)
!11725 = !DILocation(line: 935, column: 48, scope: !11720)
!11726 = !DILocalVariable(name: "str", arg: 2, scope: !11720, file: !3, line: 935, type: !1487)
!11727 = !DILocation(line: 935, column: 62, scope: !11720)
!11728 = !DILocalVariable(name: "max_len", arg: 3, scope: !11720, file: !3, line: 935, type: !6389)
!11729 = !DILocation(line: 935, column: 80, scope: !11720)
!11730 = !DILocalVariable(name: "okwidth", arg: 4, scope: !11720, file: !3, line: 935, type: !1410)
!11731 = !DILocation(line: 935, column: 101, scope: !11720)
!11732 = !DILocalVariable(name: "sep", arg: 5, scope: !11720, file: !3, line: 936, type: !1547)
!11733 = !DILocation(line: 936, column: 47, scope: !11720)
!11734 = !DILocalVariable(name: "sep_len", arg: 6, scope: !11720, file: !3, line: 936, type: !2500)
!11735 = !DILocation(line: 936, column: 62, scope: !11720)
!11736 = !DILocalVariable(name: "sep_strwidth", arg: 7, scope: !11720, file: !3, line: 936, type: !1410)
!11737 = !DILocation(line: 936, column: 83, scope: !11720)
!11738 = !DILocalVariable(name: "r_final_len", arg: 8, scope: !11720, file: !3, line: 936, type: !11723)
!11739 = !DILocation(line: 936, column: 105, scope: !11720)
!11740 = !DILocalVariable(name: "tmp", scope: !11720, file: !3, line: 938, type: !1253)
!11741 = !DILocation(line: 938, column: 8, scope: !11720)
!11742 = !DILocalVariable(name: "l_end", scope: !11720, file: !3, line: 939, type: !1254)
!11743 = !DILocation(line: 939, column: 6, scope: !11720)
!11744 = !DILocation(line: 946, column: 6, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 946, column: 6)
!11746 = !DILocation(line: 946, column: 21, scope: !11745)
!11747 = !DILocation(line: 946, column: 19, scope: !11745)
!11748 = !DILocation(line: 946, column: 29, scope: !11745)
!11749 = !DILocation(line: 946, column: 6, scope: !11720)
!11750 = !DILocation(line: 947, column: 31, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 946, column: 37)
!11752 = !DILocation(line: 947, column: 39, scope: !11751)
!11753 = !DILocation(line: 947, column: 50, scope: !11751)
!11754 = !DILocation(line: 947, column: 55, scope: !11751)
!11755 = !DILocation(line: 947, column: 64, scope: !11751)
!11756 = !DILocation(line: 947, column: 11, scope: !11751)
!11757 = !DILocation(line: 947, column: 9, scope: !11751)
!11758 = !DILocation(line: 948, column: 3, scope: !11751)
!11759 = !DILocation(line: 948, column: 7, scope: !11751)
!11760 = !DILocation(line: 948, column: 14, scope: !11751)
!11761 = !DILocation(line: 949, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11751, file: !3, line: 949, column: 7)
!11763 = !DILocation(line: 949, column: 7, scope: !11751)
!11764 = !DILocation(line: 950, column: 27, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 949, column: 20)
!11766 = !DILocation(line: 950, column: 19, scope: !11765)
!11767 = !DILocation(line: 950, column: 5, scope: !11765)
!11768 = !DILocation(line: 950, column: 17, scope: !11765)
!11769 = !DILocation(line: 951, column: 3, scope: !11765)
!11770 = !DILocation(line: 952, column: 2, scope: !11751)
!11771 = !DILocation(line: 954, column: 31, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 953, column: 7)
!11773 = !DILocation(line: 954, column: 39, scope: !11772)
!11774 = !DILocation(line: 954, column: 50, scope: !11772)
!11775 = !DILocation(line: 954, column: 55, scope: !11772)
!11776 = !DILocation(line: 954, column: 64, scope: !11772)
!11777 = !DILocation(line: 954, column: 74, scope: !11772)
!11778 = !DILocation(line: 954, column: 72, scope: !11772)
!11779 = !DILocation(line: 954, column: 11, scope: !11772)
!11780 = !DILocation(line: 954, column: 9, scope: !11772)
!11781 = !DILocation(line: 955, column: 10, scope: !11772)
!11782 = !DILocation(line: 955, column: 16, scope: !11772)
!11783 = !DILocation(line: 955, column: 14, scope: !11772)
!11784 = !DILocation(line: 955, column: 23, scope: !11772)
!11785 = !DILocation(line: 955, column: 28, scope: !11772)
!11786 = !DILocation(line: 955, column: 36, scope: !11772)
!11787 = !DILocation(line: 955, column: 3, scope: !11772)
!11788 = !DILocation(line: 956, column: 7, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 956, column: 7)
!11790 = !DILocation(line: 956, column: 7, scope: !11772)
!11791 = !DILocation(line: 957, column: 28, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 956, column: 20)
!11793 = !DILocation(line: 957, column: 36, scope: !11792)
!11794 = !DILocation(line: 957, column: 34, scope: !11792)
!11795 = !DILocation(line: 957, column: 19, scope: !11792)
!11796 = !DILocation(line: 957, column: 5, scope: !11792)
!11797 = !DILocation(line: 957, column: 17, scope: !11792)
!11798 = !DILocation(line: 958, column: 3, scope: !11792)
!11799 = !DILocation(line: 960, column: 1, scope: !11720)
