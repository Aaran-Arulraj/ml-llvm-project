; ModuleID = 'rtlanal.c'
source_filename = "rtlanal.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.set_of_data = type { %struct.rtx_def*, %struct.rtx_def* }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.replace_label_data = type { %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.subreg_info = type { i32, i32, i8 }
%struct.parms_set_data = type { i32, i64 }

@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@fixed_regs = external dso_local global [53 x i8], align 16
@pic_offset_table_rtx = external dso_local global %struct.rtx_def*, align 8
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@rtx_class = external dso_local constant [139 x i32], align 16
@mode_size = external dso_local global [87 x i8], align 16
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@regs_invalidated_by_call = external dso_local global i64, align 8
@.str = private unnamed_addr constant [10 x i8] c"rtlanal.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@targetm = external dso_local global %struct.gcc_target, align 8
@flag_stack_check = external dso_local global i32, align 4
@flag_signaling_nans = external dso_local global i32, align 4
@mode_class = external dso_local constant [87 x i8], align 16
@real_format_for_mode = external dso_local global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local constant [87 x i8], align 16
@flag_finite_math_only = external dso_local global i32, align 4
@flag_trapping_math = external dso_local global i32, align 4
@non_rtx_starting_operands = internal global [139 x i32] zeroinitializer, align 16, !dbg !0
@target_flags = common dso_local global i32 0, align 4, !dbg !1721
@mode_nunits = external dso_local constant [87 x i8], align 16
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@regclass_map = external dso_local constant [53 x i32], align 16
@reload_completed = external dso_local global i32, align 4
@x_rtl = external dso_local global %struct.rtl_data, align 8
@const_tiny_rtx = external dso_local global [3 x [87 x %struct.rtx_def*]], align 16
@mode_mask_array = external dso_local constant [87 x i64], align 16
@rtl_hooks = external dso_local global %struct.rtl_hooks, align 8
@num_sign_bit_copies_in_rep = internal global [20 x [20 x i32]] zeroinitializer, align 16, !dbg !1723
@.str.2 = private unnamed_addr constant [4 x i8] c"eEV\00", align 1
@tree_code_type = external dso_local constant [0 x i32], align 4
@class_narrowest_mode = external dso_local constant [18 x i8], align 16
@mode_wider = external dso_local constant [87 x i8], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rtx_unstable_p(%struct.rtx_def* %x) #0 !dbg !1735 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !1739, metadata !DIExpression()), !dbg !1740
  call void @llvm.dbg.declare(metadata i32* %code, metadata !1741, metadata !DIExpression()), !dbg !1743
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1744
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1744
  %bf.load = load i32, i32* %1, align 8, !dbg !1744
  %bf.clear = and i32 %bf.load, 65535, !dbg !1744
  store i32 %bf.clear, i32* %code, align 4, !dbg !1743
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1745, metadata !DIExpression()), !dbg !1746
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1747, metadata !DIExpression()), !dbg !1748
  %2 = load i32, i32* %code, align 4, !dbg !1749
  switch i32 %2, label %sw.default [
    i32 43, label %sw.bb
    i32 35, label %sw.bb4
    i32 30, label %sw.bb4
    i32 32, label %sw.bb4
    i32 31, label %sw.bb4
    i32 33, label %sw.bb4
    i32 45, label %sw.bb4
    i32 44, label %sw.bb4
    i32 37, label %sw.bb5
    i32 17, label %sw.bb14
  ], !dbg !1750

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1751
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !1751
  %bf.load1 = load i32, i32* %4, align 8, !dbg !1751
  %bf.lshr = lshr i32 %bf.load1, 26, !dbg !1751
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !1751
  %tobool = icmp ne i32 %bf.clear2, 0, !dbg !1751
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !1753

lor.rhs:                                          ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1754
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !1754
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !1754
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !1754
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1754
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !1754
  %call = call i32 @rtx_unstable_p(%struct.rtx_def* %6), !dbg !1755
  %tobool3 = icmp ne i32 %call, 0, !dbg !1753
  br label %lor.end, !dbg !1753

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %7 = phi i1 [ true, %sw.bb ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !1753
  store i32 %lor.ext, i32* %retval, align 4, !dbg !1756
  br label %return, !dbg !1756

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !1757
  br label %return, !dbg !1757

sw.bb5:                                           ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1758
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !1760
  %cmp = icmp eq %struct.rtx_def* %8, %9, !dbg !1761
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1762

lor.lhs.false:                                    ; preds = %sw.bb5
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1763
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !1764
  %cmp6 = icmp eq %struct.rtx_def* %10, %11, !dbg !1765
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !1766

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1767
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !1768
  %cmp8 = icmp eq %struct.rtx_def* %12, %13, !dbg !1769
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !1770

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %14 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !1771
  %conv = sext i8 %14 to i32, !dbg !1771
  %tobool9 = icmp ne i32 %conv, 0, !dbg !1771
  br i1 %tobool9, label %if.then, label %if.end, !dbg !1772

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %sw.bb5
  store i32 0, i32* %retval, align 4, !dbg !1773
  br label %return, !dbg !1773

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1774
  %16 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !1776
  %cmp10 = icmp eq %struct.rtx_def* %15, %16, !dbg !1777
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !1778

if.then12:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1779
  br label %return, !dbg !1779

if.end13:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !1780
  br label %return, !dbg !1780

sw.bb14:                                          ; preds = %entry
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1781
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !1781
  %bf.load15 = load i32, i32* %18, align 8, !dbg !1781
  %bf.lshr16 = lshr i32 %bf.load15, 27, !dbg !1781
  %bf.clear17 = and i32 %bf.lshr16, 1, !dbg !1781
  %tobool18 = icmp ne i32 %bf.clear17, 0, !dbg !1781
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !1783

if.then19:                                        ; preds = %sw.bb14
  store i32 1, i32* %retval, align 4, !dbg !1784
  br label %return, !dbg !1784

if.end20:                                         ; preds = %sw.bb14
  br label %sw.default, !dbg !1781

sw.default:                                       ; preds = %entry, %if.end20
  br label %sw.epilog, !dbg !1785

sw.epilog:                                        ; preds = %sw.default
  %19 = load i32, i32* %code, align 4, !dbg !1786
  %idxprom = sext i32 %19 to i64, !dbg !1786
  %arrayidx21 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !1786
  %20 = load i8*, i8** %arrayidx21, align 8, !dbg !1786
  store i8* %20, i8** %fmt, align 8, !dbg !1787
  %21 = load i32, i32* %code, align 4, !dbg !1788
  %idxprom22 = sext i32 %21 to i64, !dbg !1788
  %arrayidx23 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom22, !dbg !1788
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !1788
  %conv24 = zext i8 %22 to i32, !dbg !1788
  %sub = sub nsw i32 %conv24, 1, !dbg !1790
  store i32 %sub, i32* %i, align 4, !dbg !1791
  br label %for.cond, !dbg !1792

for.cond:                                         ; preds = %for.inc69, %sw.epilog
  %23 = load i32, i32* %i, align 4, !dbg !1793
  %cmp25 = icmp sge i32 %23, 0, !dbg !1795
  br i1 %cmp25, label %for.body, label %for.end70, !dbg !1796

for.body:                                         ; preds = %for.cond
  %24 = load i8*, i8** %fmt, align 8, !dbg !1797
  %25 = load i32, i32* %i, align 4, !dbg !1799
  %idxprom27 = sext i32 %25 to i64, !dbg !1797
  %arrayidx28 = getelementptr inbounds i8, i8* %24, i64 %idxprom27, !dbg !1797
  %26 = load i8, i8* %arrayidx28, align 1, !dbg !1797
  %conv29 = sext i8 %26 to i32, !dbg !1797
  %cmp30 = icmp eq i32 %conv29, 101, !dbg !1800
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !1801

if.then32:                                        ; preds = %for.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1802
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !1802
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !1802
  %28 = load i32, i32* %i, align 4, !dbg !1802
  %idxprom35 = sext i32 %28 to i64, !dbg !1802
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %idxprom35, !dbg !1802
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !1802
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !1802
  %call38 = call i32 @rtx_unstable_p(%struct.rtx_def* %29), !dbg !1805
  %tobool39 = icmp ne i32 %call38, 0, !dbg !1805
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !1806

if.then40:                                        ; preds = %if.then32
  store i32 1, i32* %retval, align 4, !dbg !1807
  br label %return, !dbg !1807

if.end41:                                         ; preds = %if.then32
  br label %if.end68, !dbg !1808

if.else:                                          ; preds = %for.body
  %30 = load i8*, i8** %fmt, align 8, !dbg !1809
  %31 = load i32, i32* %i, align 4, !dbg !1811
  %idxprom42 = sext i32 %31 to i64, !dbg !1809
  %arrayidx43 = getelementptr inbounds i8, i8* %30, i64 %idxprom42, !dbg !1809
  %32 = load i8, i8* %arrayidx43, align 1, !dbg !1809
  %conv44 = sext i8 %32 to i32, !dbg !1809
  %cmp45 = icmp eq i32 %conv44, 69, !dbg !1812
  br i1 %cmp45, label %if.then47, label %if.end67, !dbg !1813

if.then47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1814, metadata !DIExpression()), !dbg !1816
  store i32 0, i32* %j, align 4, !dbg !1817
  br label %for.cond48, !dbg !1819

for.cond48:                                       ; preds = %for.inc, %if.then47
  %33 = load i32, i32* %j, align 4, !dbg !1820
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1822
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !1822
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !1822
  %35 = load i32, i32* %i, align 4, !dbg !1822
  %idxprom51 = sext i32 %35 to i64, !dbg !1822
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 %idxprom51, !dbg !1822
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtvec_def**, !dbg !1822
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !1822
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 0, !dbg !1822
  %37 = load i32, i32* %num_elem, align 8, !dbg !1822
  %cmp53 = icmp slt i32 %33, %37, !dbg !1823
  br i1 %cmp53, label %for.body55, label %for.end, !dbg !1824

for.body55:                                       ; preds = %for.cond48
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1825
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !1825
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !1825
  %39 = load i32, i32* %i, align 4, !dbg !1825
  %idxprom58 = sext i32 %39 to i64, !dbg !1825
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 %idxprom58, !dbg !1825
  %rt_rtvec60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtvec_def**, !dbg !1825
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec60, align 8, !dbg !1825
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !1825
  %41 = load i32, i32* %j, align 4, !dbg !1825
  %idxprom61 = sext i32 %41 to i64, !dbg !1825
  %arrayidx62 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom61, !dbg !1825
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8, !dbg !1825
  %call63 = call i32 @rtx_unstable_p(%struct.rtx_def* %42), !dbg !1827
  %tobool64 = icmp ne i32 %call63, 0, !dbg !1827
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !1828

if.then65:                                        ; preds = %for.body55
  store i32 1, i32* %retval, align 4, !dbg !1829
  br label %return, !dbg !1829

if.end66:                                         ; preds = %for.body55
  br label %for.inc, !dbg !1830

for.inc:                                          ; preds = %if.end66
  %43 = load i32, i32* %j, align 4, !dbg !1831
  %inc = add nsw i32 %43, 1, !dbg !1831
  store i32 %inc, i32* %j, align 4, !dbg !1831
  br label %for.cond48, !dbg !1832, !llvm.loop !1833

for.end:                                          ; preds = %for.cond48
  br label %if.end67, !dbg !1835

if.end67:                                         ; preds = %for.end, %if.else
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end41
  br label %for.inc69, !dbg !1836

for.inc69:                                        ; preds = %if.end68
  %44 = load i32, i32* %i, align 4, !dbg !1837
  %dec = add nsw i32 %44, -1, !dbg !1837
  store i32 %dec, i32* %i, align 4, !dbg !1837
  br label %for.cond, !dbg !1838, !llvm.loop !1839

for.end70:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !1841
  br label %return, !dbg !1841

return:                                           ; preds = %for.end70, %if.then65, %if.then40, %if.then19, %if.end13, %if.then12, %if.then, %sw.bb4, %lor.end
  %45 = load i32, i32* %retval, align 4, !dbg !1842
  ret i32 %45, !dbg !1842
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def* %x, i8 zeroext %for_alias) #0 !dbg !1843 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %for_alias.addr = alloca i8, align 1
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !1846, metadata !DIExpression()), !dbg !1847
  store i8 %for_alias, i8* %for_alias.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_alias.addr, metadata !1848, metadata !DIExpression()), !dbg !1849
  call void @llvm.dbg.declare(metadata i32* %code, metadata !1850, metadata !DIExpression()), !dbg !1851
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1852, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1854, metadata !DIExpression()), !dbg !1855
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1856
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !1856
  br i1 %tobool, label %if.end, label %if.then, !dbg !1858

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !1859
  br label %return, !dbg !1859

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1860
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !1860
  %bf.load = load i32, i32* %2, align 8, !dbg !1860
  %bf.clear = and i32 %bf.load, 65535, !dbg !1860
  store i32 %bf.clear, i32* %code, align 4, !dbg !1861
  %3 = load i32, i32* %code, align 4, !dbg !1862
  switch i32 %3, label %sw.default [
    i32 43, label %sw.bb
    i32 35, label %sw.bb6
    i32 30, label %sw.bb6
    i32 32, label %sw.bb6
    i32 31, label %sw.bb6
    i32 33, label %sw.bb6
    i32 45, label %sw.bb6
    i32 44, label %sw.bb6
    i32 37, label %sw.bb7
    i32 122, label %sw.bb22
    i32 17, label %sw.bb43
  ], !dbg !1863

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1864
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !1864
  %bf.load1 = load i32, i32* %5, align 8, !dbg !1864
  %bf.lshr = lshr i32 %bf.load1, 26, !dbg !1864
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !1864
  %tobool3 = icmp ne i32 %bf.clear2, 0, !dbg !1864
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !1866

lor.rhs:                                          ; preds = %sw.bb
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1867
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !1867
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !1867
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !1867
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1867
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !1867
  %8 = load i8, i8* %for_alias.addr, align 1, !dbg !1868
  %call = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %7, i8 zeroext %8), !dbg !1869
  %conv = zext i8 %call to i32, !dbg !1869
  %tobool4 = icmp ne i32 %conv, 0, !dbg !1866
  br label %lor.end, !dbg !1866

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %9 = phi i1 [ true, %sw.bb ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !1866
  %conv5 = trunc i32 %lor.ext to i8, !dbg !1870
  store i8 %conv5, i8* %retval, align 1, !dbg !1871
  br label %return, !dbg !1871

sw.bb6:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i8 0, i8* %retval, align 1, !dbg !1872
  br label %return, !dbg !1872

sw.bb7:                                           ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1873
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !1875
  %cmp = icmp eq %struct.rtx_def* %10, %11, !dbg !1876
  br i1 %cmp, label %if.then16, label %lor.lhs.false, !dbg !1877

lor.lhs.false:                                    ; preds = %sw.bb7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1878
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !1879
  %cmp9 = icmp eq %struct.rtx_def* %12, %13, !dbg !1880
  br i1 %cmp9, label %if.then16, label %lor.lhs.false11, !dbg !1881

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1882
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !1883
  %cmp12 = icmp eq %struct.rtx_def* %14, %15, !dbg !1884
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !1885

land.lhs.true:                                    ; preds = %lor.lhs.false11
  %16 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !1886
  %conv14 = sext i8 %16 to i32, !dbg !1886
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !1886
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !1887

if.then16:                                        ; preds = %land.lhs.true, %lor.lhs.false, %sw.bb7
  store i8 0, i8* %retval, align 1, !dbg !1888
  br label %return, !dbg !1888

if.end17:                                         ; preds = %land.lhs.true, %lor.lhs.false11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1889
  %18 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !1891
  %cmp18 = icmp eq %struct.rtx_def* %17, %18, !dbg !1892
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !1893

if.then20:                                        ; preds = %if.end17
  store i8 0, i8* %retval, align 1, !dbg !1894
  br label %return, !dbg !1894

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %retval, align 1, !dbg !1895
  br label %return, !dbg !1895

sw.bb22:                                          ; preds = %if.end
  %19 = load i8, i8* %for_alias.addr, align 1, !dbg !1896
  %tobool23 = icmp ne i8 %19, 0, !dbg !1896
  br i1 %tobool23, label %lor.rhs32, label %land.lhs.true24, !dbg !1897

land.lhs.true24:                                  ; preds = %sw.bb22
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1898
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !1898
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !1898
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !1898
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !1898
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !1898
  %22 = load i8, i8* %for_alias.addr, align 1, !dbg !1899
  %call29 = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %21, i8 zeroext %22), !dbg !1900
  %conv30 = zext i8 %call29 to i32, !dbg !1900
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !1900
  br i1 %tobool31, label %lor.end40, label %lor.rhs32, !dbg !1901

lor.rhs32:                                        ; preds = %land.lhs.true24, %sw.bb22
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1902
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !1902
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !1902
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 1, !dbg !1902
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !1902
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !1902
  %25 = load i8, i8* %for_alias.addr, align 1, !dbg !1903
  %call37 = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %24, i8 zeroext %25), !dbg !1904
  %conv38 = zext i8 %call37 to i32, !dbg !1904
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !1901
  br label %lor.end40, !dbg !1901

lor.end40:                                        ; preds = %lor.rhs32, %land.lhs.true24
  %26 = phi i1 [ true, %land.lhs.true24 ], [ %tobool39, %lor.rhs32 ]
  %lor.ext41 = zext i1 %26 to i32, !dbg !1901
  %conv42 = trunc i32 %lor.ext41 to i8, !dbg !1905
  store i8 %conv42, i8* %retval, align 1, !dbg !1906
  br label %return, !dbg !1906

sw.bb43:                                          ; preds = %if.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1907
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !1907
  %bf.load44 = load i32, i32* %28, align 8, !dbg !1907
  %bf.lshr45 = lshr i32 %bf.load44, 27, !dbg !1907
  %bf.clear46 = and i32 %bf.lshr45, 1, !dbg !1907
  %tobool47 = icmp ne i32 %bf.clear46, 0, !dbg !1907
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !1909

if.then48:                                        ; preds = %sw.bb43
  store i8 1, i8* %retval, align 1, !dbg !1910
  br label %return, !dbg !1910

if.end49:                                         ; preds = %sw.bb43
  br label %sw.default, !dbg !1907

sw.default:                                       ; preds = %if.end, %if.end49
  br label %sw.epilog, !dbg !1911

sw.epilog:                                        ; preds = %sw.default
  %29 = load i32, i32* %code, align 4, !dbg !1912
  %idxprom = sext i32 %29 to i64, !dbg !1912
  %arrayidx50 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !1912
  %30 = load i8*, i8** %arrayidx50, align 8, !dbg !1912
  store i8* %30, i8** %fmt, align 8, !dbg !1913
  %31 = load i32, i32* %code, align 4, !dbg !1914
  %idxprom51 = sext i32 %31 to i64, !dbg !1914
  %arrayidx52 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom51, !dbg !1914
  %32 = load i8, i8* %arrayidx52, align 1, !dbg !1914
  %conv53 = zext i8 %32 to i32, !dbg !1914
  %sub = sub nsw i32 %conv53, 1, !dbg !1916
  store i32 %sub, i32* %i, align 4, !dbg !1917
  br label %for.cond, !dbg !1918

for.cond:                                         ; preds = %for.inc98, %sw.epilog
  %33 = load i32, i32* %i, align 4, !dbg !1919
  %cmp54 = icmp sge i32 %33, 0, !dbg !1921
  br i1 %cmp54, label %for.body, label %for.end99, !dbg !1922

for.body:                                         ; preds = %for.cond
  %34 = load i8*, i8** %fmt, align 8, !dbg !1923
  %35 = load i32, i32* %i, align 4, !dbg !1925
  %idxprom56 = sext i32 %35 to i64, !dbg !1923
  %arrayidx57 = getelementptr inbounds i8, i8* %34, i64 %idxprom56, !dbg !1923
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !1923
  %conv58 = sext i8 %36 to i32, !dbg !1923
  %cmp59 = icmp eq i32 %conv58, 101, !dbg !1926
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !1927

if.then61:                                        ; preds = %for.body
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1928
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !1928
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !1928
  %38 = load i32, i32* %i, align 4, !dbg !1928
  %idxprom64 = sext i32 %38 to i64, !dbg !1928
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %idxprom64, !dbg !1928
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !1928
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !1928
  %40 = load i8, i8* %for_alias.addr, align 1, !dbg !1931
  %call67 = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %39, i8 zeroext %40), !dbg !1932
  %tobool68 = icmp ne i8 %call67, 0, !dbg !1932
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !1933

if.then69:                                        ; preds = %if.then61
  store i8 1, i8* %retval, align 1, !dbg !1934
  br label %return, !dbg !1934

if.end70:                                         ; preds = %if.then61
  br label %if.end97, !dbg !1935

if.else:                                          ; preds = %for.body
  %41 = load i8*, i8** %fmt, align 8, !dbg !1936
  %42 = load i32, i32* %i, align 4, !dbg !1938
  %idxprom71 = sext i32 %42 to i64, !dbg !1936
  %arrayidx72 = getelementptr inbounds i8, i8* %41, i64 %idxprom71, !dbg !1936
  %43 = load i8, i8* %arrayidx72, align 1, !dbg !1936
  %conv73 = sext i8 %43 to i32, !dbg !1936
  %cmp74 = icmp eq i32 %conv73, 69, !dbg !1939
  br i1 %cmp74, label %if.then76, label %if.end96, !dbg !1940

if.then76:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1941, metadata !DIExpression()), !dbg !1943
  store i32 0, i32* %j, align 4, !dbg !1944
  br label %for.cond77, !dbg !1946

for.cond77:                                       ; preds = %for.inc, %if.then76
  %44 = load i32, i32* %j, align 4, !dbg !1947
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1949
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !1949
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !1949
  %46 = load i32, i32* %i, align 4, !dbg !1949
  %idxprom80 = sext i32 %46 to i64, !dbg !1949
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 %idxprom80, !dbg !1949
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtvec_def**, !dbg !1949
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !1949
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i32 0, i32 0, !dbg !1949
  %48 = load i32, i32* %num_elem, align 8, !dbg !1949
  %cmp82 = icmp slt i32 %44, %48, !dbg !1950
  br i1 %cmp82, label %for.body84, label %for.end, !dbg !1951

for.body84:                                       ; preds = %for.cond77
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1952
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !1952
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !1952
  %50 = load i32, i32* %i, align 4, !dbg !1952
  %idxprom87 = sext i32 %50 to i64, !dbg !1952
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 %idxprom87, !dbg !1952
  %rt_rtvec89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtvec_def**, !dbg !1952
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec89, align 8, !dbg !1952
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 1, !dbg !1952
  %52 = load i32, i32* %j, align 4, !dbg !1952
  %idxprom90 = sext i32 %52 to i64, !dbg !1952
  %arrayidx91 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom90, !dbg !1952
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91, align 8, !dbg !1952
  %54 = load i8, i8* %for_alias.addr, align 1, !dbg !1954
  %call92 = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %53, i8 zeroext %54), !dbg !1955
  %tobool93 = icmp ne i8 %call92, 0, !dbg !1955
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !1956

if.then94:                                        ; preds = %for.body84
  store i8 1, i8* %retval, align 1, !dbg !1957
  br label %return, !dbg !1957

if.end95:                                         ; preds = %for.body84
  br label %for.inc, !dbg !1958

for.inc:                                          ; preds = %if.end95
  %55 = load i32, i32* %j, align 4, !dbg !1959
  %inc = add nsw i32 %55, 1, !dbg !1959
  store i32 %inc, i32* %j, align 4, !dbg !1959
  br label %for.cond77, !dbg !1960, !llvm.loop !1961

for.end:                                          ; preds = %for.cond77
  br label %if.end96, !dbg !1963

if.end96:                                         ; preds = %for.end, %if.else
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end70
  br label %for.inc98, !dbg !1964

for.inc98:                                        ; preds = %if.end97
  %56 = load i32, i32* %i, align 4, !dbg !1965
  %dec = add nsw i32 %56, -1, !dbg !1965
  store i32 %dec, i32* %i, align 4, !dbg !1965
  br label %for.cond, !dbg !1966, !llvm.loop !1967

for.end99:                                        ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !1969
  br label %return, !dbg !1969

return:                                           ; preds = %for.end99, %if.then94, %if.then69, %if.then48, %lor.end40, %if.end21, %if.then20, %if.then16, %sw.bb6, %lor.end, %if.then
  %57 = load i8, i8* %retval, align 1, !dbg !1970
  ret i8 %57, !dbg !1970
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rtx_addr_can_trap_p(%struct.rtx_def* %x) #0 !dbg !1971 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !1972, metadata !DIExpression()), !dbg !1973
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1974
  %call = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %0, i64 0, i64 0, i32 0, i8 zeroext 0), !dbg !1975
  ret i32 %call, !dbg !1976
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %x, i64 %offset, i64 %size, i32 %mode, i8 zeroext %unaligned_mems) #0 !dbg !1977 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %unaligned_mems.addr = alloca i8, align 1
  %code = alloca i32, align 4
  %decl = alloca %union.tree_node*, align 8
  %decl_size = alloca i64, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !1980, metadata !DIExpression()), !dbg !1981
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1982, metadata !DIExpression()), !dbg !1983
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1984, metadata !DIExpression()), !dbg !1985
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !1986, metadata !DIExpression()), !dbg !1987
  store i8 %unaligned_mems, i8* %unaligned_mems.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unaligned_mems.addr, metadata !1988, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata i32* %code, metadata !1990, metadata !DIExpression()), !dbg !1991
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1992
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !1992
  %bf.load = load i32, i32* %1, align 8, !dbg !1992
  %bf.clear = and i32 %bf.load, 65535, !dbg !1992
  store i32 %bf.clear, i32* %code, align 4, !dbg !1991
  %2 = load i32, i32* %code, align 4, !dbg !1993
  switch i32 %2, label %sw.default [
    i32 45, label %sw.bb
    i32 44, label %sw.bb77
    i32 37, label %sw.bb78
    i32 35, label %sw.bb103
    i32 49, label %sw.bb108
    i32 122, label %sw.bb152
    i32 78, label %sw.bb152
    i32 74, label %sw.bb158
    i32 75, label %sw.bb158
    i32 76, label %sw.bb158
    i32 77, label %sw.bb158
    i32 79, label %sw.bb158
  ], !dbg !1994

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !1995
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !1995
  %bf.load1 = load i32, i32* %4, align 8, !dbg !1995
  %bf.lshr = lshr i32 %bf.load1, 31, !dbg !1995
  %tobool = icmp ne i32 %bf.lshr, 0, !dbg !1995
  br i1 %tobool, label %if.then, label %if.end, !dbg !1998

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !1999
  br label %return, !dbg !1999

if.end:                                           ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2000
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !2000
  %bf.load2 = load i32, i32* %6, align 8, !dbg !2000
  %bf.lshr3 = lshr i32 %bf.load2, 26, !dbg !2000
  %bf.clear4 = and i32 %bf.lshr3, 1, !dbg !2000
  %tobool5 = icmp ne i32 %bf.clear4, 0, !dbg !2000
  br i1 %tobool5, label %if.end76, label %if.then6, !dbg !2002

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !2003, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.declare(metadata i64* %decl_size, metadata !2006, metadata !DIExpression()), !dbg !2007
  %7 = load i64, i64* %offset.addr, align 8, !dbg !2008
  %cmp = icmp slt i64 %7, 0, !dbg !2010
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !2011

if.then7:                                         ; preds = %if.then6
  store i32 1, i32* %retval, align 4, !dbg !2012
  br label %return, !dbg !2012

if.end8:                                          ; preds = %if.then6
  %8 = load i64, i64* %size.addr, align 8, !dbg !2013
  %cmp9 = icmp eq i64 %8, 0, !dbg !2015
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2016

if.then10:                                        ; preds = %if.end8
  %9 = load i32, i32* %mode.addr, align 4, !dbg !2017
  %idxprom = zext i32 %9 to i64, !dbg !2017
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2017
  %10 = load i8, i8* %arrayidx, align 1, !dbg !2017
  %conv = zext i8 %10 to i16, !dbg !2017
  %conv11 = zext i16 %conv to i64, !dbg !2017
  store i64 %conv11, i64* %size.addr, align 8, !dbg !2018
  br label %if.end12, !dbg !2019

if.end12:                                         ; preds = %if.then10, %if.end8
  %11 = load i64, i64* %size.addr, align 8, !dbg !2020
  %cmp13 = icmp eq i64 %11, 0, !dbg !2022
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !2023

if.then15:                                        ; preds = %if.end12
  %12 = load i64, i64* %offset.addr, align 8, !dbg !2024
  %cmp16 = icmp ne i64 %12, 0, !dbg !2025
  %conv17 = zext i1 %cmp16 to i32, !dbg !2025
  store i32 %conv17, i32* %retval, align 4, !dbg !2026
  br label %return, !dbg !2026

if.end18:                                         ; preds = %if.end12
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2027
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !2027
  %bf.load19 = load i32, i32* %14, align 8, !dbg !2027
  %bf.lshr20 = lshr i32 %bf.load19, 26, !dbg !2027
  %bf.clear21 = and i32 %bf.lshr20, 1, !dbg !2027
  %tobool22 = icmp ne i32 %bf.clear21, 0, !dbg !2027
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !2027

cond.true:                                        ; preds = %if.end18
  br label %cond.end, !dbg !2027

cond.false:                                       ; preds = %if.end18
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2027
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !2027
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2027
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !2027
  %rt_tree = bitcast %union.rtunion_def* %arrayidx23 to %union.tree_node**, !dbg !2027
  %16 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !2027
  br label %cond.end, !dbg !2027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %16, %cond.false ], !dbg !2027
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !2028
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2029
  %tobool24 = icmp ne %union.tree_node* %17, null, !dbg !2029
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !2031

if.then25:                                        ; preds = %cond.end
  store i64 -1, i64* %decl_size, align 8, !dbg !2032
  br label %if.end65, !dbg !2033

if.else:                                          ; preds = %cond.end
  %18 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2034
  %base = bitcast %union.tree_node* %18 to %struct.tree_base*, !dbg !2034
  %19 = bitcast %struct.tree_base* %base to i64*, !dbg !2034
  %bf.load26 = load i64, i64* %19, align 8, !dbg !2034
  %bf.clear27 = and i64 %bf.load26, 65535, !dbg !2034
  %bf.cast = trunc i64 %bf.clear27 to i32, !dbg !2034
  %idxprom28 = sext i32 %bf.cast to i64, !dbg !2034
  %arrayidx29 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom28, !dbg !2034
  %20 = load i32, i32* %arrayidx29, align 4, !dbg !2034
  %cmp30 = icmp eq i32 %20, 3, !dbg !2034
  br i1 %cmp30, label %land.lhs.true, label %if.else44, !dbg !2036

land.lhs.true:                                    ; preds = %if.else
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2037
  %decl_common = bitcast %union.tree_node* %21 to %struct.tree_decl_common*, !dbg !2037
  %size_unit = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 4, !dbg !2037
  %22 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !2037
  %tobool32 = icmp ne %union.tree_node* %22, null, !dbg !2037
  br i1 %tobool32, label %if.then33, label %if.else44, !dbg !2038

if.then33:                                        ; preds = %land.lhs.true
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2039
  %decl_common34 = bitcast %union.tree_node* %23 to %struct.tree_decl_common*, !dbg !2039
  %size_unit35 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common34, i32 0, i32 4, !dbg !2039
  %24 = load %union.tree_node*, %union.tree_node** %size_unit35, align 8, !dbg !2039
  %call = call i32 @host_integerp(%union.tree_node* %24, i32 0), !dbg !2040
  %tobool36 = icmp ne i32 %call, 0, !dbg !2040
  br i1 %tobool36, label %cond.true37, label %cond.false41, !dbg !2040

cond.true37:                                      ; preds = %if.then33
  %25 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2041
  %decl_common38 = bitcast %union.tree_node* %25 to %struct.tree_decl_common*, !dbg !2041
  %size_unit39 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common38, i32 0, i32 4, !dbg !2041
  %26 = load %union.tree_node*, %union.tree_node** %size_unit39, align 8, !dbg !2041
  %call40 = call i64 @tree_low_cst(%union.tree_node* %26, i32 0), !dbg !2042
  br label %cond.end42, !dbg !2040

cond.false41:                                     ; preds = %if.then33
  br label %cond.end42, !dbg !2040

cond.end42:                                       ; preds = %cond.false41, %cond.true37
  %cond43 = phi i64 [ %call40, %cond.true37 ], [ -1, %cond.false41 ], !dbg !2040
  store i64 %cond43, i64* %decl_size, align 8, !dbg !2043
  br label %if.end64, !dbg !2044

if.else44:                                        ; preds = %land.lhs.true, %if.else
  %27 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2045
  %base45 = bitcast %union.tree_node* %27 to %struct.tree_base*, !dbg !2045
  %28 = bitcast %struct.tree_base* %base45 to i64*, !dbg !2045
  %bf.load46 = load i64, i64* %28, align 8, !dbg !2045
  %bf.clear47 = and i64 %bf.load46, 65535, !dbg !2045
  %bf.cast48 = trunc i64 %bf.clear47 to i32, !dbg !2045
  %cmp49 = icmp eq i32 %bf.cast48, 28, !dbg !2047
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !2048

if.then51:                                        ; preds = %if.else44
  %29 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2049
  %string = bitcast %union.tree_node* %29 to %struct.tree_string*, !dbg !2049
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 1, !dbg !2049
  %30 = load i32, i32* %length, align 8, !dbg !2049
  %conv52 = sext i32 %30 to i64, !dbg !2049
  store i64 %conv52, i64* %decl_size, align 8, !dbg !2050
  br label %if.end63, !dbg !2051

if.else53:                                        ; preds = %if.else44
  %31 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2052
  %common = bitcast %union.tree_node* %31 to %struct.tree_common*, !dbg !2052
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2, !dbg !2052
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2052
  %type54 = bitcast %union.tree_node* %32 to %struct.tree_type*, !dbg !2052
  %size_unit55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i32 0, i32 3, !dbg !2052
  %33 = load %union.tree_node*, %union.tree_node** %size_unit55, align 8, !dbg !2052
  %tobool56 = icmp ne %union.tree_node* %33, null, !dbg !2052
  br i1 %tobool56, label %if.then57, label %if.else61, !dbg !2054

if.then57:                                        ; preds = %if.else53
  %34 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2055
  %common58 = bitcast %union.tree_node* %34 to %struct.tree_common*, !dbg !2055
  %type59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 2, !dbg !2055
  %35 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !2055
  %call60 = call i64 @int_size_in_bytes(%union.tree_node* %35), !dbg !2056
  store i64 %call60, i64* %decl_size, align 8, !dbg !2057
  br label %if.end62, !dbg !2058

if.else61:                                        ; preds = %if.else53
  store i64 -1, i64* %decl_size, align 8, !dbg !2059
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then57
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then51
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %cond.end42
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then25
  %36 = load i64, i64* %decl_size, align 8, !dbg !2060
  %cmp66 = icmp sle i64 %36, 0, !dbg !2061
  br i1 %cmp66, label %cond.true68, label %cond.false71, !dbg !2060

cond.true68:                                      ; preds = %if.end65
  %37 = load i64, i64* %offset.addr, align 8, !dbg !2062
  %cmp69 = icmp ne i64 %37, 0, !dbg !2063
  %conv70 = zext i1 %cmp69 to i32, !dbg !2063
  br label %cond.end74, !dbg !2060

cond.false71:                                     ; preds = %if.end65
  %38 = load i64, i64* %offset.addr, align 8, !dbg !2064
  %39 = load i64, i64* %size.addr, align 8, !dbg !2065
  %add = add nsw i64 %38, %39, !dbg !2066
  %40 = load i64, i64* %decl_size, align 8, !dbg !2067
  %cmp72 = icmp sgt i64 %add, %40, !dbg !2068
  %conv73 = zext i1 %cmp72 to i32, !dbg !2068
  br label %cond.end74, !dbg !2060

cond.end74:                                       ; preds = %cond.false71, %cond.true68
  %cond75 = phi i32 [ %conv70, %cond.true68 ], [ %conv73, %cond.false71 ], !dbg !2060
  store i32 %cond75, i32* %retval, align 4, !dbg !2069
  br label %return, !dbg !2069

if.end76:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2070
  br label %return, !dbg !2070

sw.bb77:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2071
  br label %return, !dbg !2071

sw.bb78:                                          ; preds = %entry
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2072
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2074
  %cmp79 = icmp eq %struct.rtx_def* %41, %42, !dbg !2075
  br i1 %cmp79, label %if.then92, label %lor.lhs.false, !dbg !2076

lor.lhs.false:                                    ; preds = %sw.bb78
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2077
  %44 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2078
  %cmp81 = icmp eq %struct.rtx_def* %43, %44, !dbg !2079
  br i1 %cmp81, label %if.then92, label %lor.lhs.false83, !dbg !2080

lor.lhs.false83:                                  ; preds = %lor.lhs.false
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2081
  %46 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2082
  %cmp84 = icmp eq %struct.rtx_def* %45, %46, !dbg !2083
  br i1 %cmp84, label %if.then92, label %lor.lhs.false86, !dbg !2084

lor.lhs.false86:                                  ; preds = %lor.lhs.false83
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2085
  %48 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2086
  %cmp87 = icmp eq %struct.rtx_def* %47, %48, !dbg !2087
  br i1 %cmp87, label %land.lhs.true89, label %if.end93, !dbg !2088

land.lhs.true89:                                  ; preds = %lor.lhs.false86
  %49 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2089
  %conv90 = sext i8 %49 to i32, !dbg !2089
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !2089
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !2090

if.then92:                                        ; preds = %land.lhs.true89, %lor.lhs.false83, %lor.lhs.false, %sw.bb78
  store i32 0, i32* %retval, align 4, !dbg !2091
  br label %return, !dbg !2091

if.end93:                                         ; preds = %land.lhs.true89, %lor.lhs.false86
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2092
  %call94 = call i32 @rhs_regno(%struct.rtx_def* %50), !dbg !2092
  %cmp95 = icmp uge i32 %call94, 53, !dbg !2094
  br i1 %cmp95, label %land.lhs.true97, label %if.end102, !dbg !2095

land.lhs.true97:                                  ; preds = %if.end93
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2096
  %call98 = call i32 @rhs_regno(%struct.rtx_def* %51), !dbg !2096
  %cmp99 = icmp ule i32 %call98, 57, !dbg !2097
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !2098

if.then101:                                       ; preds = %land.lhs.true97
  store i32 0, i32* %retval, align 4, !dbg !2099
  br label %return, !dbg !2099

if.end102:                                        ; preds = %land.lhs.true97, %if.end93
  store i32 1, i32* %retval, align 4, !dbg !2100
  br label %return, !dbg !2100

sw.bb103:                                         ; preds = %entry
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2101
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !2101
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !2101
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !2101
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !2101
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2101
  %54 = load i64, i64* %offset.addr, align 8, !dbg !2102
  %55 = load i64, i64* %size.addr, align 8, !dbg !2103
  %56 = load i32, i32* %mode.addr, align 4, !dbg !2104
  %57 = load i8, i8* %unaligned_mems.addr, align 1, !dbg !2105
  %call107 = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %53, i64 %54, i64 %55, i32 %56, i8 zeroext %57), !dbg !2106
  store i32 %call107, i32* %retval, align 4, !dbg !2107
  br label %return, !dbg !2107

sw.bb108:                                         ; preds = %entry
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2108
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !2108
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !2108
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 0, !dbg !2108
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !2108
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !2108
  %60 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2110
  %cmp113 = icmp eq %struct.rtx_def* %59, %60, !dbg !2111
  br i1 %cmp113, label %land.lhs.true115, label %if.end127, !dbg !2112

land.lhs.true115:                                 ; preds = %sw.bb108
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2113
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !2113
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !2113
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 1, !dbg !2113
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !2113
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !2113
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !2113
  %bf.load120 = load i32, i32* %63, align 8, !dbg !2113
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !2113
  %idxprom122 = sext i32 %bf.clear121 to i64, !dbg !2113
  %arrayidx123 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom122, !dbg !2113
  %64 = load i32, i32* %arrayidx123, align 4, !dbg !2113
  %cmp124 = icmp eq i32 %64, 9, !dbg !2113
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !2114

if.then126:                                       ; preds = %land.lhs.true115
  store i32 0, i32* %retval, align 4, !dbg !2115
  br label %return, !dbg !2115

if.end127:                                        ; preds = %land.lhs.true115, %sw.bb108
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2116
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !2116
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !2116
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 1, !dbg !2116
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !2116
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !2116
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !2116
  %bf.load132 = load i32, i32* %67, align 8, !dbg !2116
  %bf.clear133 = and i32 %bf.load132, 65535, !dbg !2116
  %cmp134 = icmp eq i32 %bf.clear133, 30, !dbg !2116
  br i1 %cmp134, label %land.lhs.true136, label %if.end151, !dbg !2118

land.lhs.true136:                                 ; preds = %if.end127
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2119
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !2119
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !2119
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 0, !dbg !2119
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !2119
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !2119
  %70 = load i64, i64* %offset.addr, align 8, !dbg !2120
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2121
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !2121
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !2121
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 1, !dbg !2121
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !2121
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !2121
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !2121
  %hwint = bitcast %union.u* %u145 to [1 x i64]*, !dbg !2121
  %arrayidx146 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2121
  %73 = load i64, i64* %arrayidx146, align 8, !dbg !2121
  %add147 = add nsw i64 %70, %73, !dbg !2122
  %74 = load i64, i64* %size.addr, align 8, !dbg !2123
  %75 = load i32, i32* %mode.addr, align 4, !dbg !2124
  %76 = load i8, i8* %unaligned_mems.addr, align 1, !dbg !2125
  %call148 = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %69, i64 %add147, i64 %74, i32 %75, i8 zeroext %76), !dbg !2126
  %tobool149 = icmp ne i32 %call148, 0, !dbg !2126
  br i1 %tobool149, label %if.end151, label %if.then150, !dbg !2127

if.then150:                                       ; preds = %land.lhs.true136
  store i32 0, i32* %retval, align 4, !dbg !2128
  br label %return, !dbg !2128

if.end151:                                        ; preds = %land.lhs.true136, %if.end127
  store i32 1, i32* %retval, align 4, !dbg !2129
  br label %return, !dbg !2129

sw.bb152:                                         ; preds = %entry, %entry
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2130
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !2130
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !2130
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 1, !dbg !2130
  %rt_rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**, !dbg !2130
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx156, align 8, !dbg !2130
  %79 = load i64, i64* %offset.addr, align 8, !dbg !2131
  %80 = load i64, i64* %size.addr, align 8, !dbg !2132
  %81 = load i32, i32* %mode.addr, align 4, !dbg !2133
  %82 = load i8, i8* %unaligned_mems.addr, align 1, !dbg !2134
  %call157 = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %78, i64 %79, i64 %80, i32 %81, i8 zeroext %82), !dbg !2135
  store i32 %call157, i32* %retval, align 4, !dbg !2136
  br label %return, !dbg !2136

sw.bb158:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2137
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !2137
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !2137
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !2137
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !2137
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !2137
  %85 = load i64, i64* %offset.addr, align 8, !dbg !2138
  %86 = load i64, i64* %size.addr, align 8, !dbg !2139
  %87 = load i32, i32* %mode.addr, align 4, !dbg !2140
  %88 = load i8, i8* %unaligned_mems.addr, align 1, !dbg !2141
  %call163 = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %84, i64 %85, i64 %86, i32 %87, i8 zeroext %88), !dbg !2142
  store i32 %call163, i32* %retval, align 4, !dbg !2143
  br label %return, !dbg !2143

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !2144

sw.epilog:                                        ; preds = %sw.default
  store i32 1, i32* %retval, align 4, !dbg !2145
  br label %return, !dbg !2145

return:                                           ; preds = %sw.epilog, %sw.bb158, %sw.bb152, %if.end151, %if.then150, %if.then126, %sw.bb103, %if.end102, %if.then101, %if.then92, %sw.bb77, %if.end76, %cond.end74, %if.then15, %if.then7, %if.then
  %89 = load i32, i32* %retval, align 4, !dbg !2146
  ret i32 %89, !dbg !2146
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nonzero_address_p(%struct.rtx_def* %x) #0 !dbg !2147 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2150, metadata !DIExpression()), !dbg !2151
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2152, metadata !DIExpression()), !dbg !2153
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2154
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2154
  %bf.load = load i32, i32* %1, align 8, !dbg !2154
  %bf.clear = and i32 %bf.load, 65535, !dbg !2154
  store i32 %bf.clear, i32* %code, align 4, !dbg !2153
  %2 = load i32, i32* %code, align 4, !dbg !2155
  switch i32 %2, label %sw.default [
    i32 45, label %sw.bb
    i32 44, label %sw.bb2
    i32 37, label %sw.bb3
    i32 35, label %sw.bb23
    i32 49, label %sw.bb25
    i32 78, label %sw.bb59
    i32 75, label %sw.bb84
    i32 74, label %sw.bb85
    i32 76, label %sw.bb85
    i32 77, label %sw.bb85
    i32 79, label %sw.bb85
    i32 122, label %sw.bb91
  ], !dbg !2156

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2157
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2157
  %bf.load1 = load i32, i32* %4, align 8, !dbg !2157
  %bf.lshr = lshr i32 %bf.load1, 31, !dbg !2157
  %tobool = icmp ne i32 %bf.lshr, 0, !dbg !2159
  %lnot = xor i1 %tobool, true, !dbg !2159
  %lnot.ext = zext i1 %lnot to i32, !dbg !2159
  %conv = trunc i32 %lnot.ext to i8, !dbg !2159
  store i8 %conv, i8* %retval, align 1, !dbg !2160
  br label %return, !dbg !2160

sw.bb2:                                           ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2161
  br label %return, !dbg !2161

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2162
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2164
  %cmp = icmp eq %struct.rtx_def* %5, %6, !dbg !2165
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2166

lor.lhs.false:                                    ; preds = %sw.bb3
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2167
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2168
  %cmp5 = icmp eq %struct.rtx_def* %7, %8, !dbg !2169
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !2170

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2171
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2172
  %cmp8 = icmp eq %struct.rtx_def* %9, %10, !dbg !2173
  br i1 %cmp8, label %if.then, label %lor.lhs.false10, !dbg !2174

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2175
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2176
  %cmp11 = icmp eq %struct.rtx_def* %11, %12, !dbg !2177
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !2178

land.lhs.true:                                    ; preds = %lor.lhs.false10
  %13 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2179
  %conv13 = sext i8 %13 to i32, !dbg !2179
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !2179
  br i1 %tobool14, label %if.then, label %if.end, !dbg !2180

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false7, %lor.lhs.false, %sw.bb3
  store i8 1, i8* %retval, align 1, !dbg !2181
  br label %return, !dbg !2181

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false10
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2182
  %call = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !2182
  %cmp15 = icmp uge i32 %call, 53, !dbg !2184
  br i1 %cmp15, label %land.lhs.true17, label %if.end22, !dbg !2185

land.lhs.true17:                                  ; preds = %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2186
  %call18 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !2186
  %cmp19 = icmp ule i32 %call18, 57, !dbg !2187
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2188

if.then21:                                        ; preds = %land.lhs.true17
  store i8 1, i8* %retval, align 1, !dbg !2189
  br label %return, !dbg !2189

if.end22:                                         ; preds = %land.lhs.true17, %if.end
  store i8 0, i8* %retval, align 1, !dbg !2190
  br label %return, !dbg !2190

sw.bb23:                                          ; preds = %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2191
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2191
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2191
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2191
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2191
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2191
  %call24 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %17), !dbg !2192
  store i8 %call24, i8* %retval, align 1, !dbg !2193
  br label %return, !dbg !2193

sw.bb25:                                          ; preds = %entry
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2194
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !2194
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !2194
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !2194
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !2194
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2194
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !2194
  %bf.load30 = load i32, i32* %20, align 8, !dbg !2194
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !2194
  %cmp32 = icmp eq i32 %bf.clear31, 30, !dbg !2194
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !2196

if.then34:                                        ; preds = %sw.bb25
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2197
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !2197
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !2197
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !2197
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !2197
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !2197
  %call39 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %22), !dbg !2198
  store i8 %call39, i8* %retval, align 1, !dbg !2199
  br label %return, !dbg !2199

if.else:                                          ; preds = %sw.bb25
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2200
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !2200
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !2200
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !2200
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !2200
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !2200
  %25 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2202
  %cmp44 = icmp eq %struct.rtx_def* %24, %25, !dbg !2203
  br i1 %cmp44, label %land.lhs.true46, label %if.end57, !dbg !2204

land.lhs.true46:                                  ; preds = %if.else
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2205
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !2205
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !2205
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !2205
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !2205
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !2205
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !2205
  %bf.load51 = load i32, i32* %28, align 8, !dbg !2205
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !2205
  %idxprom = sext i32 %bf.clear52 to i64, !dbg !2205
  %arrayidx53 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2205
  %29 = load i32, i32* %arrayidx53, align 4, !dbg !2205
  %cmp54 = icmp eq i32 %29, 9, !dbg !2205
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !2206

if.then56:                                        ; preds = %land.lhs.true46
  store i8 1, i8* %retval, align 1, !dbg !2207
  br label %return, !dbg !2207

if.end57:                                         ; preds = %land.lhs.true46, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  store i8 0, i8* %retval, align 1, !dbg !2208
  br label %return, !dbg !2208

sw.bb59:                                          ; preds = %entry
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2209
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !2209
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !2209
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !2209
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !2209
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !2209
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !2209
  %bf.load64 = load i32, i32* %32, align 8, !dbg !2209
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !2209
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !2209
  br i1 %cmp66, label %land.lhs.true68, label %if.end78, !dbg !2211

land.lhs.true68:                                  ; preds = %sw.bb59
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2212
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !2212
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !2212
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 1, !dbg !2212
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !2212
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !2212
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !2212
  %hwint = bitcast %union.u* %u73 to [1 x i64]*, !dbg !2212
  %arrayidx74 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2212
  %35 = load i64, i64* %arrayidx74, align 8, !dbg !2212
  %cmp75 = icmp sgt i64 %35, 0, !dbg !2213
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !2214

if.then77:                                        ; preds = %land.lhs.true68
  store i8 1, i8* %retval, align 1, !dbg !2215
  br label %return, !dbg !2215

if.end78:                                         ; preds = %land.lhs.true68, %sw.bb59
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2216
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !2216
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !2216
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 0, !dbg !2216
  %rt_rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**, !dbg !2216
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !2216
  %call83 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %37), !dbg !2217
  store i8 %call83, i8* %retval, align 1, !dbg !2218
  br label %return, !dbg !2218

sw.bb84:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2219
  br label %return, !dbg !2219

sw.bb85:                                          ; preds = %entry, %entry, %entry, %entry
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2220
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !2220
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !2220
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 0, !dbg !2220
  %rt_rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !2220
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !2220
  %call90 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %39), !dbg !2221
  store i8 %call90, i8* %retval, align 1, !dbg !2222
  br label %return, !dbg !2222

sw.bb91:                                          ; preds = %entry
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2223
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !2223
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !2223
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 1, !dbg !2223
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !2223
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !2223
  %call96 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %41), !dbg !2224
  store i8 %call96, i8* %retval, align 1, !dbg !2225
  br label %return, !dbg !2225

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !2226

sw.epilog:                                        ; preds = %sw.default
  store i8 0, i8* %retval, align 1, !dbg !2227
  br label %return, !dbg !2227

return:                                           ; preds = %sw.epilog, %sw.bb91, %sw.bb85, %sw.bb84, %if.end78, %if.then77, %if.end58, %if.then56, %if.then34, %sw.bb23, %if.end22, %if.then21, %if.then, %sw.bb2, %sw.bb
  %42 = load i8, i8* %retval, align 1, !dbg !2228
  ret i8 %42, !dbg !2228
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !2229 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2232, metadata !DIExpression()), !dbg !2233
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2234
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2234
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2234
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2234
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2234
  %1 = load i32, i32* %rt_uint, align 8, !dbg !2234
  ret i32 %1, !dbg !2235
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %x, i8 zeroext %for_alias) #0 !dbg !2236 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %for_alias.addr = alloca i8, align 1
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2237, metadata !DIExpression()), !dbg !2238
  store i8 %for_alias, i8* %for_alias.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_alias.addr, metadata !2239, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2241, metadata !DIExpression()), !dbg !2242
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2243, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !2245, metadata !DIExpression()), !dbg !2246
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2247
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !2249
  br i1 %cmp, label %if.then, label %if.end, !dbg !2250

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2251
  br label %return, !dbg !2251

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2252
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !2252
  %bf.load = load i32, i32* %2, align 8, !dbg !2252
  %bf.clear = and i32 %bf.load, 65535, !dbg !2252
  store i32 %bf.clear, i32* %code, align 4, !dbg !2253
  %3 = load i32, i32* %code, align 4, !dbg !2254
  %cmp1 = icmp eq i32 %3, 43, !dbg !2256
  br i1 %cmp1, label %if.then2, label %if.end7, !dbg !2257

if.then2:                                         ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2258
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2258
  %bf.load3 = load i32, i32* %5, align 8, !dbg !2258
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !2258
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !2258
  %cmp5 = icmp eq i32 %bf.clear4, 1, !dbg !2259
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !2260

lor.rhs:                                          ; preds = %if.then2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2261
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2261
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2261
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2261
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2261
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2261
  %8 = load i8, i8* %for_alias.addr, align 1, !dbg !2262
  %call = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %7, i8 zeroext %8), !dbg !2263
  %conv = zext i8 %call to i32, !dbg !2263
  %tobool = icmp ne i32 %conv, 0, !dbg !2260
  br label %lor.end, !dbg !2260

lor.end:                                          ; preds = %lor.rhs, %if.then2
  %9 = phi i1 [ true, %if.then2 ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !2260
  %conv6 = trunc i32 %lor.ext to i8, !dbg !2258
  store i8 %conv6, i8* %retval, align 1, !dbg !2264
  br label %return, !dbg !2264

if.end7:                                          ; preds = %if.end
  %10 = load i32, i32* %code, align 4, !dbg !2265
  %idxprom = sext i32 %10 to i64, !dbg !2265
  %arrayidx8 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2265
  %11 = load i8*, i8** %arrayidx8, align 8, !dbg !2265
  store i8* %11, i8** %fmt, align 8, !dbg !2266
  %12 = load i32, i32* %code, align 4, !dbg !2267
  %idxprom9 = sext i32 %12 to i64, !dbg !2267
  %arrayidx10 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom9, !dbg !2267
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !2267
  %conv11 = zext i8 %13 to i32, !dbg !2267
  %sub = sub nsw i32 %conv11, 1, !dbg !2269
  store i32 %sub, i32* %i, align 4, !dbg !2270
  br label %for.cond, !dbg !2271

for.cond:                                         ; preds = %for.inc56, %if.end7
  %14 = load i32, i32* %i, align 4, !dbg !2272
  %cmp12 = icmp sge i32 %14, 0, !dbg !2274
  br i1 %cmp12, label %for.body, label %for.end57, !dbg !2275

for.body:                                         ; preds = %for.cond
  %15 = load i8*, i8** %fmt, align 8, !dbg !2276
  %16 = load i32, i32* %i, align 4, !dbg !2278
  %idxprom14 = sext i32 %16 to i64, !dbg !2276
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i64 %idxprom14, !dbg !2276
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !2276
  %conv16 = sext i8 %17 to i32, !dbg !2276
  %cmp17 = icmp eq i32 %conv16, 101, !dbg !2279
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !2280

if.then19:                                        ; preds = %for.body
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2281
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !2281
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !2281
  %19 = load i32, i32* %i, align 4, !dbg !2281
  %idxprom22 = sext i32 %19 to i64, !dbg !2281
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 %idxprom22, !dbg !2281
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !2281
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !2281
  %21 = load i8, i8* %for_alias.addr, align 1, !dbg !2284
  %call25 = call zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %20, i8 zeroext %21), !dbg !2285
  %tobool26 = icmp ne i8 %call25, 0, !dbg !2285
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2286

if.then27:                                        ; preds = %if.then19
  store i8 1, i8* %retval, align 1, !dbg !2287
  br label %return, !dbg !2287

if.end28:                                         ; preds = %if.then19
  br label %if.end55, !dbg !2288

if.else:                                          ; preds = %for.body
  %22 = load i8*, i8** %fmt, align 8, !dbg !2289
  %23 = load i32, i32* %i, align 4, !dbg !2291
  %idxprom29 = sext i32 %23 to i64, !dbg !2289
  %arrayidx30 = getelementptr inbounds i8, i8* %22, i64 %idxprom29, !dbg !2289
  %24 = load i8, i8* %arrayidx30, align 1, !dbg !2289
  %conv31 = sext i8 %24 to i32, !dbg !2289
  %cmp32 = icmp eq i32 %conv31, 69, !dbg !2292
  br i1 %cmp32, label %if.then34, label %if.end54, !dbg !2293

if.then34:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2294, metadata !DIExpression()), !dbg !2296
  store i32 0, i32* %j, align 4, !dbg !2297
  br label %for.cond35, !dbg !2299

for.cond35:                                       ; preds = %for.inc, %if.then34
  %25 = load i32, i32* %j, align 4, !dbg !2300
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2302
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !2302
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !2302
  %27 = load i32, i32* %i, align 4, !dbg !2302
  %idxprom38 = sext i32 %27 to i64, !dbg !2302
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 %idxprom38, !dbg !2302
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtvec_def**, !dbg !2302
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2302
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %28, i32 0, i32 0, !dbg !2302
  %29 = load i32, i32* %num_elem, align 8, !dbg !2302
  %cmp40 = icmp slt i32 %25, %29, !dbg !2303
  br i1 %cmp40, label %for.body42, label %for.end, !dbg !2304

for.body42:                                       ; preds = %for.cond35
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2305
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !2305
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !2305
  %31 = load i32, i32* %i, align 4, !dbg !2305
  %idxprom45 = sext i32 %31 to i64, !dbg !2305
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 %idxprom45, !dbg !2305
  %rt_rtvec47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtvec_def**, !dbg !2305
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !2305
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i32 0, i32 1, !dbg !2305
  %33 = load i32, i32* %j, align 4, !dbg !2305
  %idxprom48 = sext i32 %33 to i64, !dbg !2305
  %arrayidx49 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom48, !dbg !2305
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !2305
  %35 = load i8, i8* %for_alias.addr, align 1, !dbg !2307
  %call50 = call zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %34, i8 zeroext %35), !dbg !2308
  %tobool51 = icmp ne i8 %call50, 0, !dbg !2308
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !2309

if.then52:                                        ; preds = %for.body42
  store i8 1, i8* %retval, align 1, !dbg !2310
  br label %return, !dbg !2310

if.end53:                                         ; preds = %for.body42
  br label %for.inc, !dbg !2311

for.inc:                                          ; preds = %if.end53
  %36 = load i32, i32* %j, align 4, !dbg !2312
  %inc = add nsw i32 %36, 1, !dbg !2312
  store i32 %inc, i32* %j, align 4, !dbg !2312
  br label %for.cond35, !dbg !2313, !llvm.loop !2314

for.end:                                          ; preds = %for.cond35
  br label %if.end54, !dbg !2316

if.end54:                                         ; preds = %for.end, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end28
  br label %for.inc56, !dbg !2317

for.inc56:                                        ; preds = %if.end55
  %37 = load i32, i32* %i, align 4, !dbg !2318
  %dec = add nsw i32 %37, -1, !dbg !2318
  store i32 %dec, i32* %i, align 4, !dbg !2318
  br label %for.cond, !dbg !2319, !llvm.loop !2320

for.end57:                                        ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !2322
  br label %return, !dbg !2322

return:                                           ; preds = %for.end57, %if.then52, %if.then27, %lor.end, %if.then
  %38 = load i8, i8* %retval, align 1, !dbg !2323
  ret i8 %38, !dbg !2323
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @get_integer_term(%struct.rtx_def* %x) #0 !dbg !2324 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2327, metadata !DIExpression()), !dbg !2328
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2329
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2329
  %bf.load = load i32, i32* %1, align 8, !dbg !2329
  %bf.clear = and i32 %bf.load, 65535, !dbg !2329
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !2331
  br i1 %cmp, label %if.then, label %if.end, !dbg !2332

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2333
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2333
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2333
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2333
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2333
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2333
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8, !dbg !2334
  br label %if.end, !dbg !2335

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2336
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2336
  %bf.load1 = load i32, i32* %5, align 8, !dbg !2336
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2336
  %cmp3 = icmp eq i32 %bf.clear2, 50, !dbg !2338
  br i1 %cmp3, label %land.lhs.true, label %if.end18, !dbg !2339

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2340
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2340
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !2340
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !2340
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !2340
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !2340
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2340
  %bf.load8 = load i32, i32* %8, align 8, !dbg !2340
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2340
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2340
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !2341

if.then11:                                        ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2342
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !2342
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !2342
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !2342
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !2342
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !2342
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !2342
  %hwint = bitcast %union.u* %u16 to [1 x i64]*, !dbg !2342
  %arrayidx17 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2342
  %11 = load i64, i64* %arrayidx17, align 8, !dbg !2342
  %sub = sub nsw i64 0, %11, !dbg !2343
  store i64 %sub, i64* %retval, align 8, !dbg !2344
  br label %return, !dbg !2344

if.end18:                                         ; preds = %land.lhs.true, %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2345
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !2345
  %bf.load19 = load i32, i32* %13, align 8, !dbg !2345
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !2345
  %cmp21 = icmp eq i32 %bf.clear20, 49, !dbg !2347
  br i1 %cmp21, label %land.lhs.true22, label %if.end38, !dbg !2348

land.lhs.true22:                                  ; preds = %if.end18
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2349
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !2349
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !2349
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 1, !dbg !2349
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !2349
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !2349
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !2349
  %bf.load27 = load i32, i32* %16, align 8, !dbg !2349
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !2349
  %cmp29 = icmp eq i32 %bf.clear28, 30, !dbg !2349
  br i1 %cmp29, label %if.then30, label %if.end38, !dbg !2350

if.then30:                                        ; preds = %land.lhs.true22
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2351
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2351
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !2351
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 1, !dbg !2351
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !2351
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !2351
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !2351
  %hwint36 = bitcast %union.u* %u35 to [1 x i64]*, !dbg !2351
  %arrayidx37 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint36, i64 0, i64 0, !dbg !2351
  %19 = load i64, i64* %arrayidx37, align 8, !dbg !2351
  store i64 %19, i64* %retval, align 8, !dbg !2352
  br label %return, !dbg !2352

if.end38:                                         ; preds = %land.lhs.true22, %if.end18
  store i64 0, i64* %retval, align 8, !dbg !2353
  br label %return, !dbg !2353

return:                                           ; preds = %if.end38, %if.then30, %if.then11
  %20 = load i64, i64* %retval, align 8, !dbg !2354
  ret i64 %20, !dbg !2354
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @get_related_value(%struct.rtx_def* %x) #0 !dbg !2355 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2358, metadata !DIExpression()), !dbg !2359
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2360
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2360
  %bf.load = load i32, i32* %1, align 8, !dbg !2360
  %bf.clear = and i32 %bf.load, 65535, !dbg !2360
  %cmp = icmp ne i32 %bf.clear, 35, !dbg !2362
  br i1 %cmp, label %if.then, label %if.end, !dbg !2363

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2364
  br label %return, !dbg !2364

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2365
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2365
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2365
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2365
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2365
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2365
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8, !dbg !2366
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2367
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2367
  %bf.load1 = load i32, i32* %5, align 8, !dbg !2367
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2367
  %cmp3 = icmp eq i32 %bf.clear2, 49, !dbg !2369
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !2370

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2371
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2371
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !2371
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !2371
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !2371
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !2371
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2371
  %bf.load8 = load i32, i32* %8, align 8, !dbg !2371
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2371
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2371
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2372

if.then11:                                        ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2373
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !2373
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !2373
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !2373
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !2373
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !2373
  store %struct.rtx_def* %10, %struct.rtx_def** %retval, align 8, !dbg !2374
  br label %return, !dbg !2374

if.else:                                          ; preds = %land.lhs.true, %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2375
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !2375
  %bf.load16 = load i32, i32* %12, align 8, !dbg !2375
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !2375
  %cmp18 = icmp eq i32 %bf.clear17, 50, !dbg !2377
  br i1 %cmp18, label %land.lhs.true19, label %if.end32, !dbg !2378

land.lhs.true19:                                  ; preds = %if.else
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2379
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2379
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !2379
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !2379
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !2379
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !2379
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !2379
  %bf.load24 = load i32, i32* %15, align 8, !dbg !2379
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !2379
  %cmp26 = icmp eq i32 %bf.clear25, 30, !dbg !2379
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !2380

if.then27:                                        ; preds = %land.lhs.true19
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2381
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2381
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !2381
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !2381
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !2381
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !2381
  store %struct.rtx_def* %17, %struct.rtx_def** %retval, align 8, !dbg !2382
  br label %return, !dbg !2382

if.end32:                                         ; preds = %land.lhs.true19, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2383
  br label %return, !dbg !2383

return:                                           ; preds = %if.end33, %if.then27, %if.then11, %if.then
  %18 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !2384
  ret %struct.rtx_def* %18, !dbg !2384
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @offset_within_block_p(%struct.rtx_def* %symbol, i64 %offset) #0 !dbg !2385 {
entry:
  %retval = alloca i8, align 1
  %symbol.addr = alloca %struct.rtx_def*, align 8
  %offset.addr = alloca i64, align 8
  %decl = alloca %union.tree_node*, align 8
  store %struct.rtx_def* %symbol, %struct.rtx_def** %symbol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %symbol.addr, metadata !2388, metadata !DIExpression()), !dbg !2389
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2390, metadata !DIExpression()), !dbg !2391
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !2392, metadata !DIExpression()), !dbg !2393
  %0 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2394
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2394
  %bf.load = load i32, i32* %1, align 8, !dbg !2394
  %bf.clear = and i32 %bf.load, 65535, !dbg !2394
  %cmp = icmp ne i32 %bf.clear, 45, !dbg !2396
  br i1 %cmp, label %if.then, label %if.end, !dbg !2397

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2398
  br label %return, !dbg !2398

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %offset.addr, align 8, !dbg !2399
  %cmp1 = icmp eq i64 %2, 0, !dbg !2401
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2402

if.then2:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !2403
  br label %return, !dbg !2403

if.end3:                                          ; preds = %if.end
  %3 = load i64, i64* %offset.addr, align 8, !dbg !2404
  %cmp4 = icmp sgt i64 %3, 0, !dbg !2406
  br i1 %cmp4, label %if.then5, label %if.end26, !dbg !2407

if.then5:                                         ; preds = %if.end3
  %4 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2408
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2408
  %bf.load6 = load i32, i32* %5, align 8, !dbg !2408
  %bf.lshr = lshr i32 %bf.load6, 26, !dbg !2408
  %bf.clear7 = and i32 %bf.lshr, 1, !dbg !2408
  %tobool = icmp ne i32 %bf.clear7, 0, !dbg !2408
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !2411

land.lhs.true:                                    ; preds = %if.then5
  %6 = load i64, i64* %offset.addr, align 8, !dbg !2412
  %7 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2413
  %call = call i32 @get_pool_mode(%struct.rtx_def* %7), !dbg !2413
  %idxprom = zext i32 %call to i64, !dbg !2413
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2413
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2413
  %conv = zext i8 %8 to i16, !dbg !2413
  %conv8 = zext i16 %conv to i32, !dbg !2414
  %conv9 = sext i32 %conv8 to i64, !dbg !2414
  %cmp10 = icmp slt i64 %6, %conv9, !dbg !2415
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2416

if.then12:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !2417
  br label %return, !dbg !2417

if.end13:                                         ; preds = %land.lhs.true, %if.then5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2418
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !2418
  %bf.load14 = load i32, i32* %10, align 8, !dbg !2418
  %bf.lshr15 = lshr i32 %bf.load14, 26, !dbg !2418
  %bf.clear16 = and i32 %bf.lshr15, 1, !dbg !2418
  %tobool17 = icmp ne i32 %bf.clear16, 0, !dbg !2418
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !2418

cond.true:                                        ; preds = %if.end13
  br label %cond.end, !dbg !2418

cond.false:                                       ; preds = %if.end13
  %11 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2418
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !2418
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2418
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !2418
  %rt_tree = bitcast %union.rtunion_def* %arrayidx18 to %union.tree_node**, !dbg !2418
  %12 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !2418
  br label %cond.end, !dbg !2418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %12, %cond.false ], !dbg !2418
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !2419
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2420
  %tobool19 = icmp ne %union.tree_node* %13, null, !dbg !2420
  br i1 %tobool19, label %land.lhs.true20, label %if.end25, !dbg !2422

land.lhs.true20:                                  ; preds = %cond.end
  %14 = load i64, i64* %offset.addr, align 8, !dbg !2423
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2424
  %common = bitcast %union.tree_node* %15 to %struct.tree_common*, !dbg !2424
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2, !dbg !2424
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2424
  %call21 = call i64 @int_size_in_bytes(%union.tree_node* %16), !dbg !2425
  %cmp22 = icmp slt i64 %14, %call21, !dbg !2426
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2427

if.then24:                                        ; preds = %land.lhs.true20
  store i8 1, i8* %retval, align 1, !dbg !2428
  br label %return, !dbg !2428

if.end25:                                         ; preds = %land.lhs.true20, %cond.end
  br label %if.end26, !dbg !2429

if.end26:                                         ; preds = %if.end25, %if.end3
  %17 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2430
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2430
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !2430
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 1, !dbg !2430
  %rt_int = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !2430
  %18 = load i32, i32* %rt_int, align 8, !dbg !2430
  %and = and i32 %18, 128, !dbg !2430
  %cmp30 = icmp ne i32 %and, 0, !dbg !2430
  br i1 %cmp30, label %land.lhs.true32, label %if.end51, !dbg !2432

land.lhs.true32:                                  ; preds = %if.end26
  %19 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2433
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2433
  %block_sym = bitcast %union.u* %u33 to %struct.block_symbol*, !dbg !2433
  %block = getelementptr inbounds %struct.block_symbol, %struct.block_symbol* %block_sym, i32 0, i32 1, !dbg !2433
  %20 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !2433
  %tobool34 = icmp ne %struct.object_block* %20, null, !dbg !2433
  br i1 %tobool34, label %land.lhs.true35, label %if.end51, !dbg !2434

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %21 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2435
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !2435
  %block_sym37 = bitcast %union.u* %u36 to %struct.block_symbol*, !dbg !2435
  %offset38 = getelementptr inbounds %struct.block_symbol, %struct.block_symbol* %block_sym37, i32 0, i32 2, !dbg !2435
  %22 = load i64, i64* %offset38, align 8, !dbg !2435
  %cmp39 = icmp sge i64 %22, 0, !dbg !2436
  br i1 %cmp39, label %land.lhs.true41, label %if.end51, !dbg !2437

land.lhs.true41:                                  ; preds = %land.lhs.true35
  %23 = load i64, i64* %offset.addr, align 8, !dbg !2438
  %24 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2439
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !2439
  %block_sym43 = bitcast %union.u* %u42 to %struct.block_symbol*, !dbg !2439
  %offset44 = getelementptr inbounds %struct.block_symbol, %struct.block_symbol* %block_sym43, i32 0, i32 2, !dbg !2439
  %25 = load i64, i64* %offset44, align 8, !dbg !2439
  %add = add i64 %23, %25, !dbg !2440
  %26 = load %struct.rtx_def*, %struct.rtx_def** %symbol.addr, align 8, !dbg !2441
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !2441
  %block_sym46 = bitcast %union.u* %u45 to %struct.block_symbol*, !dbg !2441
  %block47 = getelementptr inbounds %struct.block_symbol, %struct.block_symbol* %block_sym46, i32 0, i32 1, !dbg !2441
  %27 = load %struct.object_block*, %struct.object_block** %block47, align 8, !dbg !2441
  %size = getelementptr inbounds %struct.object_block, %struct.object_block* %27, i32 0, i32 2, !dbg !2442
  %28 = load i64, i64* %size, align 8, !dbg !2442
  %cmp48 = icmp ult i64 %add, %28, !dbg !2443
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2444

if.then50:                                        ; preds = %land.lhs.true41
  store i8 1, i8* %retval, align 1, !dbg !2445
  br label %return, !dbg !2445

if.end51:                                         ; preds = %land.lhs.true41, %land.lhs.true35, %land.lhs.true32, %if.end26
  store i8 0, i8* %retval, align 1, !dbg !2446
  br label %return, !dbg !2446

return:                                           ; preds = %if.end51, %if.then50, %if.then24, %if.then12, %if.then2, %if.then
  %29 = load i8, i8* %retval, align 1, !dbg !2447
  ret i8 %29, !dbg !2447
}

declare dso_local i32 @get_pool_mode(%struct.rtx_def*) #2

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @split_const(%struct.rtx_def* %x, %struct.rtx_def** %base_out, %struct.rtx_def** %offset_out) #0 !dbg !2448 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %base_out.addr = alloca %struct.rtx_def**, align 8
  %offset_out.addr = alloca %struct.rtx_def**, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2451, metadata !DIExpression()), !dbg !2452
  store %struct.rtx_def** %base_out, %struct.rtx_def*** %base_out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %base_out.addr, metadata !2453, metadata !DIExpression()), !dbg !2454
  store %struct.rtx_def** %offset_out, %struct.rtx_def*** %offset_out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %offset_out.addr, metadata !2455, metadata !DIExpression()), !dbg !2456
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2457
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2457
  %bf.load = load i32, i32* %1, align 8, !dbg !2457
  %bf.clear = and i32 %bf.load, 65535, !dbg !2457
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !2459
  br i1 %cmp, label %if.then, label %if.end20, !dbg !2460

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2461
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2461
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2461
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2461
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2461
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2461
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8, !dbg !2463
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2464
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2464
  %bf.load1 = load i32, i32* %5, align 8, !dbg !2464
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2464
  %cmp3 = icmp eq i32 %bf.clear2, 49, !dbg !2466
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !2467

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2468
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2468
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !2468
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !2468
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !2468
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !2468
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2468
  %bf.load8 = load i32, i32* %8, align 8, !dbg !2468
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2468
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2468
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !2469

if.then11:                                        ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2470
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !2470
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !2470
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !2470
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !2470
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !2470
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %base_out.addr, align 8, !dbg !2472
  store %struct.rtx_def* %10, %struct.rtx_def** %11, align 8, !dbg !2473
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2474
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !2474
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !2474
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !2474
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !2474
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !2474
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %offset_out.addr, align 8, !dbg !2475
  store %struct.rtx_def* %13, %struct.rtx_def** %14, align 8, !dbg !2476
  br label %return, !dbg !2477

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end20, !dbg !2478

if.end20:                                         ; preds = %if.end, %entry
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2479
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %base_out.addr, align 8, !dbg !2480
  store %struct.rtx_def* %15, %struct.rtx_def** %16, align 8, !dbg !2481
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2482
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %offset_out.addr, align 8, !dbg !2483
  store %struct.rtx_def* %17, %struct.rtx_def** %18, align 8, !dbg !2484
  br label %return, !dbg !2485

return:                                           ; preds = %if.end20, %if.then11
  ret void, !dbg !2485
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @count_occurrences(%struct.rtx_def* %x, %struct.rtx_def* %find, i32 %count_dest) #0 !dbg !2486 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %find.addr = alloca %struct.rtx_def*, align 8
  %count_dest.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %format_ptr = alloca i8*, align 8
  %count = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2489, metadata !DIExpression()), !dbg !2490
  store %struct.rtx_def* %find, %struct.rtx_def** %find.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %find.addr, metadata !2491, metadata !DIExpression()), !dbg !2492
  store i32 %count_dest, i32* %count_dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count_dest.addr, metadata !2493, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2497, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2499, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.declare(metadata i8** %format_ptr, metadata !2501, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.declare(metadata i32* %count, metadata !2503, metadata !DIExpression()), !dbg !2504
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2505
  %1 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2507
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !2508
  br i1 %cmp, label %if.then, label %if.end, !dbg !2509

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2510
  br label %return, !dbg !2510

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2511
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2511
  %bf.load = load i32, i32* %3, align 8, !dbg !2511
  %bf.clear = and i32 %bf.load, 65535, !dbg !2511
  store i32 %bf.clear, i32* %code, align 4, !dbg !2512
  %4 = load i32, i32* %code, align 4, !dbg !2513
  switch i32 %4, label %sw.default [
    i32 37, label %sw.bb
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 45, label %sw.bb
    i32 12, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 3, label %sw.bb1
    i32 43, label %sw.bb13
    i32 23, label %sw.bb21
  ], !dbg !2514

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !2515
  br label %return, !dbg !2515

sw.bb1:                                           ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2517
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !2517
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2517
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2517
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2517
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2517
  %7 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2518
  %8 = load i32, i32* %count_dest.addr, align 4, !dbg !2519
  %call = call i32 @count_occurrences(%struct.rtx_def* %6, %struct.rtx_def* %7, i32 %8), !dbg !2520
  store i32 %call, i32* %count, align 4, !dbg !2521
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2522
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !2522
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !2522
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !2522
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !2522
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !2522
  %tobool = icmp ne %struct.rtx_def* %10, null, !dbg !2522
  br i1 %tobool, label %if.then6, label %if.end12, !dbg !2524

if.then6:                                         ; preds = %sw.bb1
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2525
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !2525
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !2525
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !2525
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !2525
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !2525
  %13 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2526
  %14 = load i32, i32* %count_dest.addr, align 4, !dbg !2527
  %call11 = call i32 @count_occurrences(%struct.rtx_def* %12, %struct.rtx_def* %13, i32 %14), !dbg !2528
  %15 = load i32, i32* %count, align 4, !dbg !2529
  %add = add nsw i32 %15, %call11, !dbg !2529
  store i32 %add, i32* %count, align 4, !dbg !2529
  br label %if.end12, !dbg !2530

if.end12:                                         ; preds = %if.then6, %sw.bb1
  %16 = load i32, i32* %count, align 4, !dbg !2531
  store i32 %16, i32* %retval, align 4, !dbg !2532
  br label %return, !dbg !2532

sw.bb13:                                          ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2533
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !2533
  %bf.load14 = load i32, i32* %18, align 8, !dbg !2533
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !2533
  %cmp16 = icmp eq i32 %bf.clear15, 43, !dbg !2533
  br i1 %cmp16, label %land.lhs.true, label %if.end20, !dbg !2535

land.lhs.true:                                    ; preds = %sw.bb13
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2536
  %20 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2537
  %call17 = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %20), !dbg !2538
  %tobool18 = icmp ne i32 %call17, 0, !dbg !2538
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !2539

if.then19:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2540
  br label %return, !dbg !2540

if.end20:                                         ; preds = %land.lhs.true, %sw.bb13
  br label %sw.epilog, !dbg !2541

sw.bb21:                                          ; preds = %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2542
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !2542
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !2542
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !2542
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !2542
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !2542
  %23 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2544
  %cmp26 = icmp eq %struct.rtx_def* %22, %23, !dbg !2545
  br i1 %cmp26, label %land.lhs.true27, label %if.end35, !dbg !2546

land.lhs.true27:                                  ; preds = %sw.bb21
  %24 = load i32, i32* %count_dest.addr, align 4, !dbg !2547
  %tobool28 = icmp ne i32 %24, 0, !dbg !2547
  br i1 %tobool28, label %if.end35, label %if.then29, !dbg !2548

if.then29:                                        ; preds = %land.lhs.true27
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2549
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !2549
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !2549
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !2549
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !2549
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2549
  %27 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2550
  %28 = load i32, i32* %count_dest.addr, align 4, !dbg !2551
  %call34 = call i32 @count_occurrences(%struct.rtx_def* %26, %struct.rtx_def* %27, i32 %28), !dbg !2552
  store i32 %call34, i32* %retval, align 4, !dbg !2553
  br label %return, !dbg !2553

if.end35:                                         ; preds = %land.lhs.true27, %sw.bb21
  br label %sw.epilog, !dbg !2554

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !2555

sw.epilog:                                        ; preds = %sw.default, %if.end35, %if.end20
  %29 = load i32, i32* %code, align 4, !dbg !2556
  %idxprom = sext i32 %29 to i64, !dbg !2556
  %arrayidx36 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2556
  %30 = load i8*, i8** %arrayidx36, align 8, !dbg !2556
  store i8* %30, i8** %format_ptr, align 8, !dbg !2557
  store i32 0, i32* %count, align 4, !dbg !2558
  store i32 0, i32* %i, align 4, !dbg !2559
  br label %for.cond, !dbg !2561

for.cond:                                         ; preds = %for.inc69, %sw.epilog
  %31 = load i32, i32* %i, align 4, !dbg !2562
  %32 = load i32, i32* %code, align 4, !dbg !2564
  %idxprom37 = sext i32 %32 to i64, !dbg !2564
  %arrayidx38 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom37, !dbg !2564
  %33 = load i8, i8* %arrayidx38, align 1, !dbg !2564
  %conv = zext i8 %33 to i32, !dbg !2564
  %cmp39 = icmp slt i32 %31, %conv, !dbg !2565
  br i1 %cmp39, label %for.body, label %for.end71, !dbg !2566

for.body:                                         ; preds = %for.cond
  %34 = load i8*, i8** %format_ptr, align 8, !dbg !2567
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1, !dbg !2567
  store i8* %incdec.ptr, i8** %format_ptr, align 8, !dbg !2567
  %35 = load i8, i8* %34, align 1, !dbg !2569
  %conv41 = sext i8 %35 to i32, !dbg !2569
  switch i32 %conv41, label %sw.epilog68 [
    i32 101, label %sw.bb42
    i32 69, label %sw.bb50
  ], !dbg !2570

sw.bb42:                                          ; preds = %for.body
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2571
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !2571
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !2571
  %37 = load i32, i32* %i, align 4, !dbg !2571
  %idxprom45 = sext i32 %37 to i64, !dbg !2571
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 %idxprom45, !dbg !2571
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !2571
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !2571
  %39 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2573
  %40 = load i32, i32* %count_dest.addr, align 4, !dbg !2574
  %call48 = call i32 @count_occurrences(%struct.rtx_def* %38, %struct.rtx_def* %39, i32 %40), !dbg !2575
  %41 = load i32, i32* %count, align 4, !dbg !2576
  %add49 = add nsw i32 %41, %call48, !dbg !2576
  store i32 %add49, i32* %count, align 4, !dbg !2576
  br label %sw.epilog68, !dbg !2577

sw.bb50:                                          ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !2578
  br label %for.cond51, !dbg !2580

for.cond51:                                       ; preds = %for.inc, %sw.bb50
  %42 = load i32, i32* %j, align 4, !dbg !2581
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2583
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !2583
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !2583
  %44 = load i32, i32* %i, align 4, !dbg !2583
  %idxprom54 = sext i32 %44 to i64, !dbg !2583
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %idxprom54, !dbg !2583
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtvec_def**, !dbg !2583
  %45 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2583
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %45, i32 0, i32 0, !dbg !2583
  %46 = load i32, i32* %num_elem, align 8, !dbg !2583
  %cmp56 = icmp slt i32 %42, %46, !dbg !2584
  br i1 %cmp56, label %for.body58, label %for.end, !dbg !2585

for.body58:                                       ; preds = %for.cond51
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2586
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !2586
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !2586
  %48 = load i32, i32* %i, align 4, !dbg !2586
  %idxprom61 = sext i32 %48 to i64, !dbg !2586
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 %idxprom61, !dbg !2586
  %rt_rtvec63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtvec_def**, !dbg !2586
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec63, align 8, !dbg !2586
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i32 0, i32 1, !dbg !2586
  %50 = load i32, i32* %j, align 4, !dbg !2586
  %idxprom64 = sext i32 %50 to i64, !dbg !2586
  %arrayidx65 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom64, !dbg !2586
  %51 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8, !dbg !2586
  %52 = load %struct.rtx_def*, %struct.rtx_def** %find.addr, align 8, !dbg !2587
  %53 = load i32, i32* %count_dest.addr, align 4, !dbg !2588
  %call66 = call i32 @count_occurrences(%struct.rtx_def* %51, %struct.rtx_def* %52, i32 %53), !dbg !2589
  %54 = load i32, i32* %count, align 4, !dbg !2590
  %add67 = add nsw i32 %54, %call66, !dbg !2590
  store i32 %add67, i32* %count, align 4, !dbg !2590
  br label %for.inc, !dbg !2591

for.inc:                                          ; preds = %for.body58
  %55 = load i32, i32* %j, align 4, !dbg !2592
  %inc = add nsw i32 %55, 1, !dbg !2592
  store i32 %inc, i32* %j, align 4, !dbg !2592
  br label %for.cond51, !dbg !2593, !llvm.loop !2594

for.end:                                          ; preds = %for.cond51
  br label %sw.epilog68, !dbg !2596

sw.epilog68:                                      ; preds = %for.body, %for.end, %sw.bb42
  br label %for.inc69, !dbg !2597

for.inc69:                                        ; preds = %sw.epilog68
  %56 = load i32, i32* %i, align 4, !dbg !2598
  %inc70 = add nsw i32 %56, 1, !dbg !2598
  store i32 %inc70, i32* %i, align 4, !dbg !2598
  br label %for.cond, !dbg !2599, !llvm.loop !2600

for.end71:                                        ; preds = %for.cond
  %57 = load i32, i32* %count, align 4, !dbg !2602
  store i32 %57, i32* %retval, align 4, !dbg !2603
  br label %return, !dbg !2603

return:                                           ; preds = %for.end71, %if.then29, %if.then19, %if.end12, %sw.bb, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !2604
  ret i32 %58, !dbg !2604
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %in) #0 !dbg !2605 {
entry:
  %retval = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !2608, metadata !DIExpression()), !dbg !2609
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in.addr, metadata !2610, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !2612, metadata !DIExpression()), !dbg !2613
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2614, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2616, metadata !DIExpression()), !dbg !2617
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2618
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !2620
  br i1 %cmp, label %if.then, label %if.end, !dbg !2621

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2622
  br label %return, !dbg !2622

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2623
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2625
  %cmp1 = icmp eq %struct.rtx_def* %1, %2, !dbg !2626
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2627

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !2628
  br label %return, !dbg !2628

if.end3:                                          ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2629
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2629
  %bf.load = load i32, i32* %4, align 8, !dbg !2629
  %bf.clear = and i32 %bf.load, 65535, !dbg !2629
  %cmp4 = icmp eq i32 %bf.clear, 44, !dbg !2631
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2632

if.then5:                                         ; preds = %if.end3
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2633
  %6 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2634
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2634
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2634
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2634
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2634
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2634
  %cmp6 = icmp eq %struct.rtx_def* %5, %7, !dbg !2635
  %conv = zext i1 %cmp6 to i32, !dbg !2635
  store i32 %conv, i32* %retval, align 4, !dbg !2636
  br label %return, !dbg !2636

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2637
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !2637
  %bf.load8 = load i32, i32* %9, align 8, !dbg !2637
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2637
  store i32 %bf.clear9, i32* %code, align 4, !dbg !2638
  %10 = load i32, i32* %code, align 4, !dbg !2639
  switch i32 %10, label %sw.default [
    i32 37, label %sw.bb
    i32 38, label %sw.bb17
    i32 46, label %sw.bb17
    i32 36, label %sw.bb17
    i32 30, label %sw.bb18
    i32 33, label %sw.bb18
    i32 32, label %sw.bb18
    i32 31, label %sw.bb18
  ], !dbg !2640

sw.bb:                                            ; preds = %if.end7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2641
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !2641
  %bf.load10 = load i32, i32* %12, align 8, !dbg !2641
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !2641
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !2641
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !2643

land.rhs:                                         ; preds = %sw.bb
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2644
  %call = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !2644
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2645
  %call14 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !2645
  %cmp15 = icmp eq i32 %call, %call14, !dbg !2646
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb
  %15 = phi i1 [ false, %sw.bb ], [ %cmp15, %land.rhs ], !dbg !2647
  %land.ext = zext i1 %15 to i32, !dbg !2643
  store i32 %land.ext, i32* %retval, align 4, !dbg !2648
  br label %return, !dbg !2648

sw.bb17:                                          ; preds = %if.end7, %if.end7, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2649
  br label %return, !dbg !2649

sw.bb18:                                          ; preds = %if.end7, %if.end7, %if.end7, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2650
  br label %return, !dbg !2650

sw.default:                                       ; preds = %if.end7
  br label %sw.epilog, !dbg !2651

sw.epilog:                                        ; preds = %sw.default
  %16 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2652
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !2652
  %bf.load19 = load i32, i32* %17, align 8, !dbg !2652
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !2652
  %18 = load i32, i32* %code, align 4, !dbg !2654
  %cmp21 = icmp eq i32 %bf.clear20, %18, !dbg !2655
  br i1 %cmp21, label %land.lhs.true, label %if.end25, !dbg !2656

land.lhs.true:                                    ; preds = %sw.epilog
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2657
  %20 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2658
  %call23 = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %20), !dbg !2659
  %tobool = icmp ne i32 %call23, 0, !dbg !2659
  br i1 %tobool, label %if.then24, label %if.end25, !dbg !2660

if.then24:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2661
  br label %return, !dbg !2661

if.end25:                                         ; preds = %land.lhs.true, %sw.epilog
  %21 = load i32, i32* %code, align 4, !dbg !2662
  %idxprom = sext i32 %21 to i64, !dbg !2662
  %arrayidx26 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2662
  %22 = load i8*, i8** %arrayidx26, align 8, !dbg !2662
  store i8* %22, i8** %fmt, align 8, !dbg !2663
  %23 = load i32, i32* %code, align 4, !dbg !2664
  %idxprom27 = sext i32 %23 to i64, !dbg !2664
  %arrayidx28 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom27, !dbg !2664
  %24 = load i8, i8* %arrayidx28, align 1, !dbg !2664
  %conv29 = zext i8 %24 to i32, !dbg !2664
  %sub = sub nsw i32 %conv29, 1, !dbg !2666
  store i32 %sub, i32* %i, align 4, !dbg !2667
  br label %for.cond, !dbg !2668

for.cond:                                         ; preds = %for.inc74, %if.end25
  %25 = load i32, i32* %i, align 4, !dbg !2669
  %cmp30 = icmp sge i32 %25, 0, !dbg !2671
  br i1 %cmp30, label %for.body, label %for.end76, !dbg !2672

for.body:                                         ; preds = %for.cond
  %26 = load i8*, i8** %fmt, align 8, !dbg !2673
  %27 = load i32, i32* %i, align 4, !dbg !2676
  %idxprom32 = sext i32 %27 to i64, !dbg !2673
  %arrayidx33 = getelementptr inbounds i8, i8* %26, i64 %idxprom32, !dbg !2673
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !2673
  %conv34 = sext i8 %28 to i32, !dbg !2673
  %cmp35 = icmp eq i32 %conv34, 69, !dbg !2677
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !2678

if.then37:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2679, metadata !DIExpression()), !dbg !2681
  %29 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2682
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !2682
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !2682
  %30 = load i32, i32* %i, align 4, !dbg !2682
  %idxprom40 = sext i32 %30 to i64, !dbg !2682
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 %idxprom40, !dbg !2682
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtvec_def**, !dbg !2682
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2682
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 0, !dbg !2682
  %32 = load i32, i32* %num_elem, align 8, !dbg !2682
  %sub42 = sub nsw i32 %32, 1, !dbg !2684
  store i32 %sub42, i32* %j, align 4, !dbg !2685
  br label %for.cond43, !dbg !2686

for.cond43:                                       ; preds = %for.inc, %if.then37
  %33 = load i32, i32* %j, align 4, !dbg !2687
  %cmp44 = icmp sge i32 %33, 0, !dbg !2689
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !2690

for.body46:                                       ; preds = %for.cond43
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2691
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2693
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !2693
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !2693
  %36 = load i32, i32* %i, align 4, !dbg !2693
  %idxprom49 = sext i32 %36 to i64, !dbg !2693
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 %idxprom49, !dbg !2693
  %rt_rtvec51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtvec_def**, !dbg !2693
  %37 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec51, align 8, !dbg !2693
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %37, i32 0, i32 1, !dbg !2693
  %38 = load i32, i32* %j, align 4, !dbg !2693
  %idxprom52 = sext i32 %38 to i64, !dbg !2693
  %arrayidx53 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom52, !dbg !2693
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8, !dbg !2693
  %call54 = call i32 @reg_mentioned_p(%struct.rtx_def* %34, %struct.rtx_def* %39), !dbg !2694
  %tobool55 = icmp ne i32 %call54, 0, !dbg !2694
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !2695

if.then56:                                        ; preds = %for.body46
  store i32 1, i32* %retval, align 4, !dbg !2696
  br label %return, !dbg !2696

if.end57:                                         ; preds = %for.body46
  br label %for.inc, !dbg !2697

for.inc:                                          ; preds = %if.end57
  %40 = load i32, i32* %j, align 4, !dbg !2698
  %dec = add nsw i32 %40, -1, !dbg !2698
  store i32 %dec, i32* %j, align 4, !dbg !2698
  br label %for.cond43, !dbg !2699, !llvm.loop !2700

for.end:                                          ; preds = %for.cond43
  br label %if.end73, !dbg !2702

if.else:                                          ; preds = %for.body
  %41 = load i8*, i8** %fmt, align 8, !dbg !2703
  %42 = load i32, i32* %i, align 4, !dbg !2705
  %idxprom58 = sext i32 %42 to i64, !dbg !2703
  %arrayidx59 = getelementptr inbounds i8, i8* %41, i64 %idxprom58, !dbg !2703
  %43 = load i8, i8* %arrayidx59, align 1, !dbg !2703
  %conv60 = sext i8 %43 to i32, !dbg !2703
  %cmp61 = icmp eq i32 %conv60, 101, !dbg !2706
  br i1 %cmp61, label %land.lhs.true63, label %if.end72, !dbg !2707

land.lhs.true63:                                  ; preds = %if.else
  %44 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2708
  %45 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2709
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !2709
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !2709
  %46 = load i32, i32* %i, align 4, !dbg !2709
  %idxprom66 = sext i32 %46 to i64, !dbg !2709
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 %idxprom66, !dbg !2709
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !2709
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !2709
  %call69 = call i32 @reg_mentioned_p(%struct.rtx_def* %44, %struct.rtx_def* %47), !dbg !2710
  %tobool70 = icmp ne i32 %call69, 0, !dbg !2710
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !2711

if.then71:                                        ; preds = %land.lhs.true63
  store i32 1, i32* %retval, align 4, !dbg !2712
  br label %return, !dbg !2712

if.end72:                                         ; preds = %land.lhs.true63, %if.else
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %for.end
  br label %for.inc74, !dbg !2713

for.inc74:                                        ; preds = %if.end73
  %48 = load i32, i32* %i, align 4, !dbg !2714
  %dec75 = add nsw i32 %48, -1, !dbg !2714
  store i32 %dec75, i32* %i, align 4, !dbg !2714
  br label %for.cond, !dbg !2715, !llvm.loop !2716

for.end76:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2718
  br label %return, !dbg !2718

return:                                           ; preds = %for.end76, %if.then71, %if.then56, %if.then24, %sw.bb18, %sw.bb17, %land.end, %if.then5, %if.then2, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !2719
  ret i32 %49, !dbg !2719
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @no_labels_between_p(%struct.rtx_def* %beg, %struct.rtx_def* %end) #0 !dbg !2720 {
entry:
  %retval = alloca i32, align 4
  %beg.addr = alloca %struct.rtx_def*, align 8
  %end.addr = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %beg, %struct.rtx_def** %beg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %beg.addr, metadata !2721, metadata !DIExpression()), !dbg !2722
  store %struct.rtx_def* %end, %struct.rtx_def** %end.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %end.addr, metadata !2723, metadata !DIExpression()), !dbg !2724
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %p, metadata !2725, metadata !DIExpression()), !dbg !2726
  %0 = load %struct.rtx_def*, %struct.rtx_def** %beg.addr, align 8, !dbg !2727
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !2729
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !2730
  br i1 %cmp, label %if.then, label %if.end, !dbg !2731

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2732
  br label %return, !dbg !2732

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %beg.addr, align 8, !dbg !2733
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2733
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2733
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !2733
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2733
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2733
  store %struct.rtx_def* %3, %struct.rtx_def** %p, align 8, !dbg !2735
  br label %for.cond, !dbg !2736

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !2737
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !2739
  %cmp1 = icmp ne %struct.rtx_def* %4, %5, !dbg !2740
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2741

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !2742
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2742
  %bf.load = load i32, i32* %7, align 8, !dbg !2742
  %bf.clear = and i32 %bf.load, 65535, !dbg !2742
  %cmp2 = icmp eq i32 %bf.clear, 12, !dbg !2742
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2744

if.then3:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !2745
  br label %return, !dbg !2745

if.end4:                                          ; preds = %for.body
  br label %for.inc, !dbg !2742

for.inc:                                          ; preds = %if.end4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !2746
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !2746
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !2746
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 2, !dbg !2746
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !2746
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !2746
  store %struct.rtx_def* %9, %struct.rtx_def** %p, align 8, !dbg !2747
  br label %for.cond, !dbg !2748, !llvm.loop !2749

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !2751
  br label %return, !dbg !2751

return:                                           ; preds = %for.end, %if.then3, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2752
  ret i32 %10, !dbg !2752
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_used_between_p(%struct.rtx_def* %reg, %struct.rtx_def* %from_insn, %struct.rtx_def* %to_insn) #0 !dbg !2753 {
entry:
  %retval = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %from_insn.addr = alloca %struct.rtx_def*, align 8
  %to_insn.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  store %struct.rtx_def* %from_insn, %struct.rtx_def** %from_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from_insn.addr, metadata !2758, metadata !DIExpression()), !dbg !2759
  store %struct.rtx_def* %to_insn, %struct.rtx_def** %to_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to_insn.addr, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !2762, metadata !DIExpression()), !dbg !2763
  %0 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8, !dbg !2764
  %1 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8, !dbg !2766
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !2767
  br i1 %cmp, label %if.then, label %if.end, !dbg !2768

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2769
  br label %return, !dbg !2769

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8, !dbg !2770
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2770
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2770
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !2770
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2770
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2770
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !2772
  br label %for.cond, !dbg !2773

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2774
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8, !dbg !2776
  %cmp1 = icmp ne %struct.rtx_def* %4, %5, !dbg !2777
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2778

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2779
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2779
  %bf.load = load i32, i32* %7, align 8, !dbg !2779
  %bf.clear = and i32 %bf.load, 65535, !dbg !2779
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !2779
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !2779

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2779
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !2779
  %bf.load3 = load i32, i32* %9, align 8, !dbg !2779
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !2779
  %cmp5 = icmp eq i32 %bf.clear4, 7, !dbg !2779
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !2779

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2779
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !2779
  %bf.load7 = load i32, i32* %11, align 8, !dbg !2779
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !2779
  %cmp9 = icmp eq i32 %bf.clear8, 9, !dbg !2779
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !2779

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2779
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !2779
  %bf.load11 = load i32, i32* %13, align 8, !dbg !2779
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !2779
  %cmp13 = icmp eq i32 %bf.clear12, 10, !dbg !2779
  br i1 %cmp13, label %land.lhs.true, label %if.end30, !dbg !2779

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2779
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !2779
  %bf.load14 = load i32, i32* %15, align 8, !dbg !2779
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !2779
  %cmp16 = icmp eq i32 %bf.clear15, 7, !dbg !2779
  br i1 %cmp16, label %if.end30, label %land.lhs.true17, !dbg !2781

land.lhs.true17:                                  ; preds = %land.lhs.true
  %16 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2782
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2783
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2783
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !2783
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 5, !dbg !2783
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !2783
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !2783
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %16, %struct.rtx_def* %18), !dbg !2784
  %tobool = icmp ne i32 %call, 0, !dbg !2784
  br i1 %tobool, label %if.then29, label %lor.lhs.false22, !dbg !2785

lor.lhs.false22:                                  ; preds = %land.lhs.true17
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2786
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !2786
  %bf.load23 = load i32, i32* %20, align 8, !dbg !2786
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !2786
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !2786
  br i1 %cmp25, label %land.lhs.true26, label %if.end30, !dbg !2787

land.lhs.true26:                                  ; preds = %lor.lhs.false22
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2788
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !2789
  %call27 = call i32 @find_reg_fusage(%struct.rtx_def* %21, i32 24, %struct.rtx_def* %22), !dbg !2790
  %tobool28 = icmp ne i32 %call27, 0, !dbg !2790
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2791

if.then29:                                        ; preds = %land.lhs.true26, %land.lhs.true17
  store i32 1, i32* %retval, align 4, !dbg !2792
  br label %return, !dbg !2792

if.end30:                                         ; preds = %land.lhs.true26, %lor.lhs.false22, %land.lhs.true, %lor.lhs.false10
  br label %for.inc, !dbg !2793

for.inc:                                          ; preds = %if.end30
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2794
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !2794
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !2794
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 2, !dbg !2794
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !2794
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !2794
  store %struct.rtx_def* %24, %struct.rtx_def** %insn, align 8, !dbg !2795
  br label %for.cond, !dbg !2796, !llvm.loop !2797

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2799
  br label %return, !dbg !2799

return:                                           ; preds = %for.end, %if.then29, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !2800
  ret i32 %25, !dbg !2800
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %in) #0 !dbg !2801 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i94 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2802, metadata !DIExpression()), !dbg !2803
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in.addr, metadata !2804, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !2806, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !2808, metadata !DIExpression()), !dbg !2809
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2810
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2810
  %bf.load = load i32, i32* %1, align 8, !dbg !2810
  %bf.clear = and i32 %bf.load, 65535, !dbg !2810
  %idxprom = sext i32 %bf.clear to i64, !dbg !2810
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2810
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2810
  %cmp = icmp eq i32 %2, 9, !dbg !2810
  br i1 %cmp, label %if.then, label %if.end, !dbg !2812

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2813
  br label %return, !dbg !2813

if.end:                                           ; preds = %entry
  br label %recurse, !dbg !2810

recurse:                                          ; preds = %sw.bb, %if.end
  call void @llvm.dbg.label(metadata !2814), !dbg !2815
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2816
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2816
  %bf.load1 = load i32, i32* %4, align 8, !dbg !2816
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2816
  switch i32 %bf.clear2, label %sw.default [
    i32 40, label %sw.bb
    i32 120, label %sw.bb
    i32 119, label %sw.bb
    i32 39, label %sw.bb4
    i32 37, label %sw.bb15
    i32 43, label %sw.bb30
    i32 38, label %sw.bb91
    i32 36, label %sw.bb91
    i32 46, label %sw.bb91
    i32 15, label %sw.bb93
  ], !dbg !2817

sw.bb:                                            ; preds = %recurse, %recurse, %recurse
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2818
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !2818
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2818
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2818
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !2818
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2818
  store %struct.rtx_def* %6, %struct.rtx_def** %x.addr, align 8, !dbg !2820
  br label %recurse, !dbg !2821

sw.bb4:                                           ; preds = %recurse
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2822
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !2822
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !2822
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !2822
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !2822
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !2822
  %call = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !2822
  store i32 %call, i32* %regno, align 4, !dbg !2823
  %9 = load i32, i32* %regno, align 4, !dbg !2824
  %cmp9 = icmp ult i32 %9, 53, !dbg !2826
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2827

if.then10:                                        ; preds = %sw.bb4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2828
  %call11 = call i32 @subreg_regno(%struct.rtx_def* %10), !dbg !2829
  store i32 %call11, i32* %regno, align 4, !dbg !2830
  br label %if.end12, !dbg !2831

if.end12:                                         ; preds = %if.then10, %sw.bb4
  %11 = load i32, i32* %regno, align 4, !dbg !2832
  %12 = load i32, i32* %regno, align 4, !dbg !2833
  %cmp13 = icmp ult i32 %12, 53, !dbg !2834
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !2833

cond.true:                                        ; preds = %if.end12
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2835
  %call14 = call i32 @subreg_nregs(%struct.rtx_def* %13), !dbg !2836
  br label %cond.end, !dbg !2833

cond.false:                                       ; preds = %if.end12
  br label %cond.end, !dbg !2833

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ 1, %cond.false ], !dbg !2833
  %add = add i32 %11, %cond, !dbg !2837
  store i32 %add, i32* %endregno, align 4, !dbg !2838
  br label %do_reg, !dbg !2839

sw.bb15:                                          ; preds = %recurse
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2840
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !2840
  store i32 %call16, i32* %regno, align 4, !dbg !2841
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2842
  %call17 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !2842
  %cmp18 = icmp ult i32 %call17, 53, !dbg !2842
  br i1 %cmp18, label %cond.true19, label %cond.false24, !dbg !2842

cond.true19:                                      ; preds = %sw.bb15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2842
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !2842
  %bf.load20 = load i32, i32* %17, align 8, !dbg !2842
  %bf.lshr = lshr i32 %bf.load20, 16, !dbg !2842
  %bf.clear21 = and i32 %bf.lshr, 255, !dbg !2842
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2842
  %call22 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !2842
  %call23 = call i32 @end_hard_regno(i32 %bf.clear21, i32 %call22), !dbg !2842
  br label %cond.end27, !dbg !2842

cond.false24:                                     ; preds = %sw.bb15
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2842
  %call25 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !2842
  %add26 = add i32 %call25, 1, !dbg !2842
  br label %cond.end27, !dbg !2842

cond.end27:                                       ; preds = %cond.false24, %cond.true19
  %cond28 = phi i32 [ %call23, %cond.true19 ], [ %add26, %cond.false24 ], !dbg !2842
  store i32 %cond28, i32* %endregno, align 4, !dbg !2843
  br label %do_reg, !dbg !2844

do_reg:                                           ; preds = %cond.end27, %cond.end
  call void @llvm.dbg.label(metadata !2845), !dbg !2846
  %20 = load i32, i32* %regno, align 4, !dbg !2847
  %21 = load i32, i32* %endregno, align 4, !dbg !2848
  %22 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2849
  %call29 = call i32 @refers_to_regno_p(i32 %20, i32 %21, %struct.rtx_def* %22, %struct.rtx_def** null), !dbg !2850
  store i32 %call29, i32* %retval, align 4, !dbg !2851
  br label %return, !dbg !2851

sw.bb30:                                          ; preds = %recurse
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !2852, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2855, metadata !DIExpression()), !dbg !2856
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2857
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !2857
  %bf.load31 = load i32, i32* %24, align 8, !dbg !2857
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !2857
  %cmp33 = icmp eq i32 %bf.clear32, 43, !dbg !2857
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !2859

if.then34:                                        ; preds = %sw.bb30
  store i32 1, i32* %retval, align 4, !dbg !2860
  br label %return, !dbg !2860

if.end35:                                         ; preds = %sw.bb30
  %25 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2861
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !2861
  %bf.load36 = load i32, i32* %26, align 8, !dbg !2861
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !2861
  %idxprom38 = sext i32 %bf.clear37 to i64, !dbg !2861
  %arrayidx39 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom38, !dbg !2861
  %27 = load i8*, i8** %arrayidx39, align 8, !dbg !2861
  store i8* %27, i8** %fmt, align 8, !dbg !2862
  %28 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2863
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !2863
  %bf.load40 = load i32, i32* %29, align 8, !dbg !2863
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !2863
  %idxprom42 = sext i32 %bf.clear41 to i64, !dbg !2863
  %arrayidx43 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom42, !dbg !2863
  %30 = load i8, i8* %arrayidx43, align 1, !dbg !2863
  %conv = zext i8 %30 to i32, !dbg !2863
  %sub = sub nsw i32 %conv, 1, !dbg !2865
  store i32 %sub, i32* %i, align 4, !dbg !2866
  br label %for.cond, !dbg !2867

for.cond:                                         ; preds = %for.inc88, %if.end35
  %31 = load i32, i32* %i, align 4, !dbg !2868
  %cmp44 = icmp sge i32 %31, 0, !dbg !2870
  br i1 %cmp44, label %for.body, label %for.end90, !dbg !2871

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %fmt, align 8, !dbg !2872
  %33 = load i32, i32* %i, align 4, !dbg !2874
  %idxprom46 = sext i32 %33 to i64, !dbg !2872
  %arrayidx47 = getelementptr inbounds i8, i8* %32, i64 %idxprom46, !dbg !2872
  %34 = load i8, i8* %arrayidx47, align 1, !dbg !2872
  %conv48 = sext i8 %34 to i32, !dbg !2872
  %cmp49 = icmp eq i32 %conv48, 101, !dbg !2875
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !2876

if.then51:                                        ; preds = %for.body
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2877
  %36 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2880
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !2880
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !2880
  %37 = load i32, i32* %i, align 4, !dbg !2880
  %idxprom54 = sext i32 %37 to i64, !dbg !2880
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %idxprom54, !dbg !2880
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !2880
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !2880
  %call57 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %35, %struct.rtx_def* %38), !dbg !2881
  %tobool = icmp ne i32 %call57, 0, !dbg !2881
  br i1 %tobool, label %if.then58, label %if.end59, !dbg !2882

if.then58:                                        ; preds = %if.then51
  store i32 1, i32* %retval, align 4, !dbg !2883
  br label %return, !dbg !2883

if.end59:                                         ; preds = %if.then51
  br label %if.end87, !dbg !2884

if.else:                                          ; preds = %for.body
  %39 = load i8*, i8** %fmt, align 8, !dbg !2885
  %40 = load i32, i32* %i, align 4, !dbg !2887
  %idxprom60 = sext i32 %40 to i64, !dbg !2885
  %arrayidx61 = getelementptr inbounds i8, i8* %39, i64 %idxprom60, !dbg !2885
  %41 = load i8, i8* %arrayidx61, align 1, !dbg !2885
  %conv62 = sext i8 %41 to i32, !dbg !2885
  %cmp63 = icmp eq i32 %conv62, 69, !dbg !2888
  br i1 %cmp63, label %if.then65, label %if.end86, !dbg !2889

if.then65:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2890, metadata !DIExpression()), !dbg !2892
  %42 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2893
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !2893
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !2893
  %43 = load i32, i32* %i, align 4, !dbg !2893
  %idxprom68 = sext i32 %43 to i64, !dbg !2893
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 %idxprom68, !dbg !2893
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtvec_def**, !dbg !2893
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2893
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 0, !dbg !2893
  %45 = load i32, i32* %num_elem, align 8, !dbg !2893
  %sub70 = sub nsw i32 %45, 1, !dbg !2895
  store i32 %sub70, i32* %j, align 4, !dbg !2896
  br label %for.cond71, !dbg !2897

for.cond71:                                       ; preds = %for.inc, %if.then65
  %46 = load i32, i32* %j, align 4, !dbg !2898
  %cmp72 = icmp sge i32 %46, 0, !dbg !2900
  br i1 %cmp72, label %for.body74, label %for.end, !dbg !2901

for.body74:                                       ; preds = %for.cond71
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2902
  %48 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2904
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !2904
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !2904
  %49 = load i32, i32* %i, align 4, !dbg !2904
  %idxprom77 = sext i32 %49 to i64, !dbg !2904
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 %idxprom77, !dbg !2904
  %rt_rtvec79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**, !dbg !2904
  %50 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec79, align 8, !dbg !2904
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %50, i32 0, i32 1, !dbg !2904
  %51 = load i32, i32* %j, align 4, !dbg !2904
  %idxprom80 = sext i32 %51 to i64, !dbg !2904
  %arrayidx81 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom80, !dbg !2904
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx81, align 8, !dbg !2904
  %call82 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %47, %struct.rtx_def* %52), !dbg !2905
  %tobool83 = icmp ne i32 %call82, 0, !dbg !2905
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !2906

if.then84:                                        ; preds = %for.body74
  store i32 1, i32* %retval, align 4, !dbg !2907
  br label %return, !dbg !2907

if.end85:                                         ; preds = %for.body74
  br label %for.inc, !dbg !2908

for.inc:                                          ; preds = %if.end85
  %53 = load i32, i32* %j, align 4, !dbg !2909
  %dec = add nsw i32 %53, -1, !dbg !2909
  store i32 %dec, i32* %j, align 4, !dbg !2909
  br label %for.cond71, !dbg !2910, !llvm.loop !2911

for.end:                                          ; preds = %for.cond71
  br label %if.end86, !dbg !2913

if.end86:                                         ; preds = %for.end, %if.else
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end59
  br label %for.inc88, !dbg !2914

for.inc88:                                        ; preds = %if.end87
  %54 = load i32, i32* %i, align 4, !dbg !2915
  %dec89 = add nsw i32 %54, -1, !dbg !2915
  store i32 %dec89, i32* %i, align 4, !dbg !2915
  br label %for.cond, !dbg !2916, !llvm.loop !2917

for.end90:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2919
  br label %return, !dbg !2919

sw.bb91:                                          ; preds = %recurse, %recurse, %recurse
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2920
  %56 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2921
  %call92 = call i32 @reg_mentioned_p(%struct.rtx_def* %55, %struct.rtx_def* %56), !dbg !2922
  store i32 %call92, i32* %retval, align 4, !dbg !2923
  br label %return, !dbg !2923

sw.bb93:                                          ; preds = %recurse
  call void @llvm.dbg.declare(metadata i32* %i94, metadata !2924, metadata !DIExpression()), !dbg !2926
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2927
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !2927
  %fld96 = bitcast %union.u* %u95 to [1 x %union.rtunion_def]*, !dbg !2927
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i64 0, i64 0, !dbg !2927
  %rt_rtvec98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtvec_def**, !dbg !2927
  %58 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec98, align 8, !dbg !2927
  %num_elem99 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %58, i32 0, i32 0, !dbg !2927
  %59 = load i32, i32* %num_elem99, align 8, !dbg !2927
  %sub100 = sub nsw i32 %59, 1, !dbg !2929
  store i32 %sub100, i32* %i94, align 4, !dbg !2930
  br label %for.cond101, !dbg !2931

for.cond101:                                      ; preds = %for.inc133, %sw.bb93
  %60 = load i32, i32* %i94, align 4, !dbg !2932
  %cmp102 = icmp sge i32 %60, 0, !dbg !2934
  br i1 %cmp102, label %for.body104, label %for.end135, !dbg !2935

for.body104:                                      ; preds = %for.cond101
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2936
  %u105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !2936
  %fld106 = bitcast %union.u* %u105 to [1 x %union.rtunion_def]*, !dbg !2936
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i64 0, i64 0, !dbg !2936
  %rt_rtvec108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtvec_def**, !dbg !2936
  %62 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec108, align 8, !dbg !2936
  %elem109 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i32 0, i32 1, !dbg !2936
  %63 = load i32, i32* %i94, align 4, !dbg !2936
  %idxprom110 = sext i32 %63 to i64, !dbg !2936
  %arrayidx111 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem109, i64 0, i64 %idxprom110, !dbg !2936
  %64 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx111, align 8, !dbg !2936
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !2936
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !2936
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 0, !dbg !2936
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !2936
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !2936
  %cmp116 = icmp ne %struct.rtx_def* %65, null, !dbg !2938
  br i1 %cmp116, label %land.lhs.true, label %if.end132, !dbg !2939

land.lhs.true:                                    ; preds = %for.body104
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2940
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !2940
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !2940
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 0, !dbg !2940
  %rt_rtvec121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtvec_def**, !dbg !2940
  %67 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec121, align 8, !dbg !2940
  %elem122 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %67, i32 0, i32 1, !dbg !2940
  %68 = load i32, i32* %i94, align 4, !dbg !2940
  %idxprom123 = sext i32 %68 to i64, !dbg !2940
  %arrayidx124 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem122, i64 0, i64 %idxprom123, !dbg !2940
  %69 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8, !dbg !2940
  %u125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !2940
  %fld126 = bitcast %union.u* %u125 to [1 x %union.rtunion_def]*, !dbg !2940
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i64 0, i64 0, !dbg !2940
  %rt_rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**, !dbg !2940
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx128, align 8, !dbg !2940
  %71 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !2941
  %call129 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %70, %struct.rtx_def* %71), !dbg !2942
  %tobool130 = icmp ne i32 %call129, 0, !dbg !2942
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !2943

if.then131:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2944
  br label %return, !dbg !2944

if.end132:                                        ; preds = %land.lhs.true, %for.body104
  br label %for.inc133, !dbg !2945

for.inc133:                                       ; preds = %if.end132
  %72 = load i32, i32* %i94, align 4, !dbg !2946
  %dec134 = add nsw i32 %72, -1, !dbg !2946
  store i32 %dec134, i32* %i94, align 4, !dbg !2946
  br label %for.cond101, !dbg !2947, !llvm.loop !2948

for.end135:                                       ; preds = %for.cond101
  store i32 0, i32* %retval, align 4, !dbg !2950
  br label %return, !dbg !2950

sw.default:                                       ; preds = %recurse
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2951
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !2951
  %bf.load136 = load i32, i32* %74, align 8, !dbg !2951
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !2951
  %idxprom138 = sext i32 %bf.clear137 to i64, !dbg !2951
  %arrayidx139 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom138, !dbg !2951
  %75 = load i32, i32* %arrayidx139, align 4, !dbg !2951
  %cmp140 = icmp eq i32 %75, 9, !dbg !2951
  br i1 %cmp140, label %cond.false143, label %cond.true142, !dbg !2951

cond.true142:                                     ; preds = %sw.default
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2951
  br label %cond.end144, !dbg !2951

cond.false143:                                    ; preds = %sw.default
  br label %cond.end144, !dbg !2951

cond.end144:                                      ; preds = %cond.false143, %cond.true142
  %cond145 = phi i32 [ 0, %cond.true142 ], [ 0, %cond.false143 ], !dbg !2951
  store i32 0, i32* %retval, align 4, !dbg !2952
  br label %return, !dbg !2952

return:                                           ; preds = %cond.end144, %for.end135, %if.then131, %sw.bb91, %for.end90, %if.then84, %if.then58, %if.then34, %do_reg, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !2953
  ret i32 %76, !dbg !2953
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @find_reg_fusage(%struct.rtx_def* %insn, i32 %code, %struct.rtx_def* %datum) #0 !dbg !2954 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %datum.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %end_regno = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2957, metadata !DIExpression()), !dbg !2958
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !2959, metadata !DIExpression()), !dbg !2960
  store %struct.rtx_def* %datum, %struct.rtx_def** %datum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %datum.addr, metadata !2961, metadata !DIExpression()), !dbg !2962
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2963
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2963
  %bf.load = load i32, i32* %1, align 8, !dbg !2963
  %bf.clear = and i32 %bf.load, 65535, !dbg !2963
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !2963
  br i1 %cmp, label %if.end, label %if.then, !dbg !2965

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2966
  br label %return, !dbg !2966

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !2967
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !2967
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2967

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1804, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2967
  br label %cond.end, !dbg !2967

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !2967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2967
  %3 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !2968
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2968
  %bf.load1 = load i32, i32* %4, align 8, !dbg !2968
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2968
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !2968
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !2970

if.then4:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !2971, metadata !DIExpression()), !dbg !2973
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2974
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !2974
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2974
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !2974
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2974
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2974
  store %struct.rtx_def* %6, %struct.rtx_def** %link, align 8, !dbg !2976
  br label %for.cond, !dbg !2977

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !2978
  %tobool5 = icmp ne %struct.rtx_def* %7, null, !dbg !2980
  br i1 %tobool5, label %for.body, label %for.end, !dbg !2980

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !2981
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !2981
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !2981
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !2981
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !2981
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !2981
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !2981
  %bf.load10 = load i32, i32* %10, align 8, !dbg !2981
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !2981
  %11 = load i32, i32* %code.addr, align 4, !dbg !2983
  %cmp12 = icmp eq i32 %bf.clear11, %11, !dbg !2984
  br i1 %cmp12, label %land.lhs.true, label %if.end23, !dbg !2985

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !2986
  %13 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !2987
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2987
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !2987
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !2987
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !2987
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !2987
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !2987
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !2987
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !2987
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !2987
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !2987
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %15), !dbg !2988
  %tobool21 = icmp ne i32 %call, 0, !dbg !2988
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !2989

if.then22:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2990
  br label %return, !dbg !2990

if.end23:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !2991

for.inc:                                          ; preds = %if.end23
  %16 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !2992
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2992
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !2992
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 1, !dbg !2992
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !2992
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !2992
  store %struct.rtx_def* %17, %struct.rtx_def** %link, align 8, !dbg !2993
  br label %for.cond, !dbg !2994, !llvm.loop !2995

for.end:                                          ; preds = %for.cond
  br label %if.end45, !dbg !2997

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !2998, metadata !DIExpression()), !dbg !3000
  %18 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !3001
  %call28 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !3001
  store i32 %call28, i32* %regno, align 4, !dbg !3000
  %19 = load i32, i32* %regno, align 4, !dbg !3002
  %cmp29 = icmp ult i32 %19, 53, !dbg !3004
  br i1 %cmp29, label %if.then30, label %if.end44, !dbg !3005

if.then30:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !3006, metadata !DIExpression()), !dbg !3008
  %20 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !3009
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !3009
  %bf.load31 = load i32, i32* %21, align 8, !dbg !3009
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !3009
  %bf.clear32 = and i32 %bf.lshr, 255, !dbg !3009
  %22 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !3009
  %call33 = call i32 @rhs_regno(%struct.rtx_def* %22), !dbg !3009
  %call34 = call i32 @end_hard_regno(i32 %bf.clear32, i32 %call33), !dbg !3009
  store i32 %call34, i32* %end_regno, align 4, !dbg !3008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3010, metadata !DIExpression()), !dbg !3011
  %23 = load i32, i32* %regno, align 4, !dbg !3012
  store i32 %23, i32* %i, align 4, !dbg !3014
  br label %for.cond35, !dbg !3015

for.cond35:                                       ; preds = %for.inc42, %if.then30
  %24 = load i32, i32* %i, align 4, !dbg !3016
  %25 = load i32, i32* %end_regno, align 4, !dbg !3018
  %cmp36 = icmp ult i32 %24, %25, !dbg !3019
  br i1 %cmp36, label %for.body37, label %for.end43, !dbg !3020

for.body37:                                       ; preds = %for.cond35
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3021
  %27 = load i32, i32* %code.addr, align 4, !dbg !3023
  %28 = load i32, i32* %i, align 4, !dbg !3024
  %call38 = call i32 @find_regno_fusage(%struct.rtx_def* %26, i32 %27, i32 %28), !dbg !3025
  %tobool39 = icmp ne i32 %call38, 0, !dbg !3025
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !3026

if.then40:                                        ; preds = %for.body37
  store i32 1, i32* %retval, align 4, !dbg !3027
  br label %return, !dbg !3027

if.end41:                                         ; preds = %for.body37
  br label %for.inc42, !dbg !3028

for.inc42:                                        ; preds = %if.end41
  %29 = load i32, i32* %i, align 4, !dbg !3029
  %inc = add i32 %29, 1, !dbg !3029
  store i32 %inc, i32* %i, align 4, !dbg !3029
  br label %for.cond35, !dbg !3030, !llvm.loop !3031

for.end43:                                        ; preds = %for.cond35
  br label %if.end44, !dbg !3033

if.end44:                                         ; preds = %for.end43, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %for.end
  store i32 0, i32* %retval, align 4, !dbg !3034
  br label %return, !dbg !3034

return:                                           ; preds = %if.end45, %if.then40, %if.then22, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3035
  ret i32 %30, !dbg !3035
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_referenced_p(%struct.rtx_def* %x, %struct.rtx_def* %body) #0 !dbg !3036 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %body.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3037, metadata !DIExpression()), !dbg !3038
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body.addr, metadata !3039, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3041, metadata !DIExpression()), !dbg !3042
  %0 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3043
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3043
  %bf.load = load i32, i32* %1, align 8, !dbg !3043
  %bf.clear = and i32 %bf.load, 65535, !dbg !3043
  switch i32 %bf.clear, label %sw.default [
    i32 23, label %sw.bb
    i32 17, label %sw.bb79
    i32 26, label %sw.bb95
    i32 24, label %sw.bb95
    i32 47, label %sw.bb95
    i32 29, label %sw.bb97
    i32 22, label %sw.bb103
    i32 18, label %sw.bb109
    i32 19, label %sw.bb109
    i32 15, label %sw.bb134
    i32 25, label %sw.bb159
    i32 14, label %sw.bb182
  ], !dbg !3044

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3045
  %3 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3048
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3048
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3048
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3048
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3048
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3048
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %2, %struct.rtx_def* %4), !dbg !3049
  %tobool = icmp ne i32 %call, 0, !dbg !3049
  br i1 %tobool, label %if.then, label %if.end, !dbg !3050

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !3051
  br label %return, !dbg !3051

if.end:                                           ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3052
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !3052
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !3052
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !3052
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3052
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3052
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3052
  %bf.load5 = load i32, i32* %7, align 8, !dbg !3052
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3052
  %cmp = icmp ne i32 %bf.clear6, 46, !dbg !3054
  br i1 %cmp, label %land.lhs.true, label %if.end78, !dbg !3055

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3056
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !3056
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !3056
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !3056
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !3056
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !3056
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !3056
  %bf.load11 = load i32, i32* %10, align 8, !dbg !3056
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3056
  %cmp13 = icmp ne i32 %bf.clear12, 36, !dbg !3057
  br i1 %cmp13, label %land.lhs.true14, label %if.end78, !dbg !3058

land.lhs.true14:                                  ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3059
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3059
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !3059
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !3059
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !3059
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !3059
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !3059
  %bf.load19 = load i32, i32* %13, align 8, !dbg !3059
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3059
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !3059
  br i1 %cmp21, label %if.end78, label %land.lhs.true22, !dbg !3060

land.lhs.true22:                                  ; preds = %land.lhs.true14
  %14 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3061
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3061
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !3061
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !3061
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !3061
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !3061
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !3061
  %bf.load27 = load i32, i32* %16, align 8, !dbg !3061
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3061
  %cmp29 = icmp eq i32 %bf.clear28, 39, !dbg !3062
  br i1 %cmp29, label %land.lhs.true30, label %land.lhs.true70, !dbg !3063

land.lhs.true30:                                  ; preds = %land.lhs.true22
  %17 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3064
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3064
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !3064
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !3064
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !3064
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !3064
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3064
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !3064
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !3064
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !3064
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !3064
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !3064
  %bf.load39 = load i32, i32* %20, align 8, !dbg !3064
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !3064
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !3064
  br i1 %cmp41, label %land.lhs.true42, label %land.lhs.true70, !dbg !3065

land.lhs.true42:                                  ; preds = %land.lhs.true30
  %21 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3066
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !3066
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !3066
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !3066
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !3066
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !3066
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !3066
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !3066
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !3066
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !3066
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !3066
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !3066
  %bf.load51 = load i32, i32* %24, align 8, !dbg !3066
  %bf.lshr = lshr i32 %bf.load51, 16, !dbg !3066
  %bf.clear52 = and i32 %bf.lshr, 255, !dbg !3066
  %idxprom = zext i32 %bf.clear52 to i64, !dbg !3066
  %arrayidx53 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3066
  %25 = load i8, i8* %arrayidx53, align 1, !dbg !3066
  %conv = zext i8 %25 to i16, !dbg !3066
  %conv54 = zext i16 %conv to i32, !dbg !3066
  %add = add nsw i32 %conv54, 3, !dbg !3067
  %div = sdiv i32 %add, 4, !dbg !3068
  %26 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3069
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3069
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !3069
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !3069
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !3069
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !3069
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !3069
  %bf.load59 = load i32, i32* %28, align 8, !dbg !3069
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !3069
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !3069
  %idxprom62 = zext i32 %bf.clear61 to i64, !dbg !3069
  %arrayidx63 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom62, !dbg !3069
  %29 = load i8, i8* %arrayidx63, align 1, !dbg !3069
  %conv64 = zext i8 %29 to i16, !dbg !3069
  %conv65 = zext i16 %conv64 to i32, !dbg !3069
  %add66 = add nsw i32 %conv65, 3, !dbg !3070
  %div67 = sdiv i32 %add66, 4, !dbg !3071
  %cmp68 = icmp eq i32 %div, %div67, !dbg !3072
  br i1 %cmp68, label %if.end78, label %land.lhs.true70, !dbg !3073

land.lhs.true70:                                  ; preds = %land.lhs.true42, %land.lhs.true30, %land.lhs.true22
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3074
  %31 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3075
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !3075
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !3075
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 0, !dbg !3075
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !3075
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !3075
  %call75 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %30, %struct.rtx_def* %32), !dbg !3076
  %tobool76 = icmp ne i32 %call75, 0, !dbg !3076
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3077

if.then77:                                        ; preds = %land.lhs.true70
  store i32 1, i32* %retval, align 4, !dbg !3078
  br label %return, !dbg !3078

if.end78:                                         ; preds = %land.lhs.true70, %land.lhs.true42, %land.lhs.true14, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3079
  br label %return, !dbg !3079

sw.bb79:                                          ; preds = %entry
  %33 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3080
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !3080
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !3080
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 3, !dbg !3080
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtvec_def**, !dbg !3080
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3080
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i32 0, i32 0, !dbg !3080
  %35 = load i32, i32* %num_elem, align 8, !dbg !3080
  %sub = sub nsw i32 %35, 1, !dbg !3082
  store i32 %sub, i32* %i, align 4, !dbg !3083
  br label %for.cond, !dbg !3084

for.cond:                                         ; preds = %for.inc, %sw.bb79
  %36 = load i32, i32* %i, align 4, !dbg !3085
  %cmp83 = icmp sge i32 %36, 0, !dbg !3087
  br i1 %cmp83, label %for.body, label %for.end, !dbg !3088

for.body:                                         ; preds = %for.cond
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3089
  %38 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3091
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !3091
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !3091
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 3, !dbg !3091
  %rt_rtvec88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtvec_def**, !dbg !3091
  %39 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec88, align 8, !dbg !3091
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %39, i32 0, i32 1, !dbg !3091
  %40 = load i32, i32* %i, align 4, !dbg !3091
  %idxprom89 = sext i32 %40 to i64, !dbg !3091
  %arrayidx90 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom89, !dbg !3091
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8, !dbg !3091
  %call91 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %37, %struct.rtx_def* %41), !dbg !3092
  %tobool92 = icmp ne i32 %call91, 0, !dbg !3092
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !3093

if.then93:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !3094
  br label %return, !dbg !3094

if.end94:                                         ; preds = %for.body
  br label %for.inc, !dbg !3095

for.inc:                                          ; preds = %if.end94
  %42 = load i32, i32* %i, align 4, !dbg !3096
  %dec = add nsw i32 %42, -1, !dbg !3096
  store i32 %dec, i32* %i, align 4, !dbg !3096
  br label %for.cond, !dbg !3097, !llvm.loop !3098

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3100
  br label %return, !dbg !3100

sw.bb95:                                          ; preds = %entry, %entry, %entry
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3101
  %44 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3102
  %call96 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %43, %struct.rtx_def* %44), !dbg !3103
  store i32 %call96, i32* %retval, align 4, !dbg !3104
  br label %return, !dbg !3104

sw.bb97:                                          ; preds = %entry
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3105
  %46 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3106
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !3106
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !3106
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 0, !dbg !3106
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !3106
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !3106
  %call102 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %45, %struct.rtx_def* %47), !dbg !3107
  store i32 %call102, i32* %retval, align 4, !dbg !3108
  br label %return, !dbg !3108

sw.bb103:                                         ; preds = %entry
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3109
  %49 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3110
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !3110
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !3110
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !3110
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !3110
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !3110
  %call108 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %48, %struct.rtx_def* %50), !dbg !3111
  store i32 %call108, i32* %retval, align 4, !dbg !3112
  br label %return, !dbg !3112

sw.bb109:                                         ; preds = %entry, %entry
  %51 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3113
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !3113
  %fld111 = bitcast %union.u* %u110 to [1 x %union.rtunion_def]*, !dbg !3113
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i64 0, i64 0, !dbg !3113
  %rt_rtvec113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtvec_def**, !dbg !3113
  %52 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec113, align 8, !dbg !3113
  %num_elem114 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %52, i32 0, i32 0, !dbg !3113
  %53 = load i32, i32* %num_elem114, align 8, !dbg !3113
  %sub115 = sub nsw i32 %53, 1, !dbg !3115
  store i32 %sub115, i32* %i, align 4, !dbg !3116
  br label %for.cond116, !dbg !3117

for.cond116:                                      ; preds = %for.inc131, %sw.bb109
  %54 = load i32, i32* %i, align 4, !dbg !3118
  %cmp117 = icmp sge i32 %54, 0, !dbg !3120
  br i1 %cmp117, label %for.body119, label %for.end133, !dbg !3121

for.body119:                                      ; preds = %for.cond116
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3122
  %56 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3124
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !3124
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !3124
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !3124
  %rt_rtvec123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtvec_def**, !dbg !3124
  %57 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec123, align 8, !dbg !3124
  %elem124 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %57, i32 0, i32 1, !dbg !3124
  %58 = load i32, i32* %i, align 4, !dbg !3124
  %idxprom125 = sext i32 %58 to i64, !dbg !3124
  %arrayidx126 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem124, i64 0, i64 %idxprom125, !dbg !3124
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx126, align 8, !dbg !3124
  %call127 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %55, %struct.rtx_def* %59), !dbg !3125
  %tobool128 = icmp ne i32 %call127, 0, !dbg !3125
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !3126

if.then129:                                       ; preds = %for.body119
  store i32 1, i32* %retval, align 4, !dbg !3127
  br label %return, !dbg !3127

if.end130:                                        ; preds = %for.body119
  br label %for.inc131, !dbg !3128

for.inc131:                                       ; preds = %if.end130
  %60 = load i32, i32* %i, align 4, !dbg !3129
  %dec132 = add nsw i32 %60, -1, !dbg !3129
  store i32 %dec132, i32* %i, align 4, !dbg !3129
  br label %for.cond116, !dbg !3130, !llvm.loop !3131

for.end133:                                       ; preds = %for.cond116
  store i32 0, i32* %retval, align 4, !dbg !3133
  br label %return, !dbg !3133

sw.bb134:                                         ; preds = %entry
  %61 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3134
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !3134
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !3134
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 0, !dbg !3134
  %rt_rtvec138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtvec_def**, !dbg !3134
  %62 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec138, align 8, !dbg !3134
  %num_elem139 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i32 0, i32 0, !dbg !3134
  %63 = load i32, i32* %num_elem139, align 8, !dbg !3134
  %sub140 = sub nsw i32 %63, 1, !dbg !3136
  store i32 %sub140, i32* %i, align 4, !dbg !3137
  br label %for.cond141, !dbg !3138

for.cond141:                                      ; preds = %for.inc156, %sw.bb134
  %64 = load i32, i32* %i, align 4, !dbg !3139
  %cmp142 = icmp sge i32 %64, 0, !dbg !3141
  br i1 %cmp142, label %for.body144, label %for.end158, !dbg !3142

for.body144:                                      ; preds = %for.cond141
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3143
  %66 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3145
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !3145
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !3145
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 0, !dbg !3145
  %rt_rtvec148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtvec_def**, !dbg !3145
  %67 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec148, align 8, !dbg !3145
  %elem149 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %67, i32 0, i32 1, !dbg !3145
  %68 = load i32, i32* %i, align 4, !dbg !3145
  %idxprom150 = sext i32 %68 to i64, !dbg !3145
  %arrayidx151 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem149, i64 0, i64 %idxprom150, !dbg !3145
  %69 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx151, align 8, !dbg !3145
  %call152 = call i32 @reg_referenced_p(%struct.rtx_def* %65, %struct.rtx_def* %69), !dbg !3146
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3146
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !3147

if.then154:                                       ; preds = %for.body144
  store i32 1, i32* %retval, align 4, !dbg !3148
  br label %return, !dbg !3148

if.end155:                                        ; preds = %for.body144
  br label %for.inc156, !dbg !3149

for.inc156:                                       ; preds = %if.end155
  %70 = load i32, i32* %i, align 4, !dbg !3150
  %dec157 = add nsw i32 %70, -1, !dbg !3150
  store i32 %dec157, i32* %i, align 4, !dbg !3150
  br label %for.cond141, !dbg !3151, !llvm.loop !3152

for.end158:                                       ; preds = %for.cond141
  store i32 0, i32* %retval, align 4, !dbg !3154
  br label %return, !dbg !3154

sw.bb159:                                         ; preds = %entry
  %71 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3155
  %u160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !3155
  %fld161 = bitcast %union.u* %u160 to [1 x %union.rtunion_def]*, !dbg !3155
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i64 0, i64 0, !dbg !3155
  %rt_rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**, !dbg !3155
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx163, align 8, !dbg !3155
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !3155
  %bf.load164 = load i32, i32* %73, align 8, !dbg !3155
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !3155
  %cmp166 = icmp eq i32 %bf.clear165, 43, !dbg !3155
  br i1 %cmp166, label %if.then168, label %if.end181, !dbg !3157

if.then168:                                       ; preds = %sw.bb159
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3158
  %75 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3160
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !3160
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !3160
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 0, !dbg !3160
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !3160
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !3160
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !3160
  %fld174 = bitcast %union.u* %u173 to [1 x %union.rtunion_def]*, !dbg !3160
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i64 0, i64 0, !dbg !3160
  %rt_rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**, !dbg !3160
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !3160
  %call177 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %74, %struct.rtx_def* %77), !dbg !3161
  %tobool178 = icmp ne i32 %call177, 0, !dbg !3161
  br i1 %tobool178, label %if.then179, label %if.end180, !dbg !3162

if.then179:                                       ; preds = %if.then168
  store i32 1, i32* %retval, align 4, !dbg !3163
  br label %return, !dbg !3163

if.end180:                                        ; preds = %if.then168
  br label %if.end181, !dbg !3164

if.end181:                                        ; preds = %if.end180, %sw.bb159
  store i32 0, i32* %retval, align 4, !dbg !3165
  br label %return, !dbg !3165

sw.bb182:                                         ; preds = %entry
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3166
  %79 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3168
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !3168
  %fld184 = bitcast %union.u* %u183 to [1 x %union.rtunion_def]*, !dbg !3168
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i64 0, i64 0, !dbg !3168
  %rt_rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**, !dbg !3168
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx186, align 8, !dbg !3168
  %call187 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %78, %struct.rtx_def* %80), !dbg !3169
  %tobool188 = icmp ne i32 %call187, 0, !dbg !3169
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !3170

if.then189:                                       ; preds = %sw.bb182
  store i32 1, i32* %retval, align 4, !dbg !3171
  br label %return, !dbg !3171

if.end190:                                        ; preds = %sw.bb182
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3172
  %82 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3173
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !3173
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !3173
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 1, !dbg !3173
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !3173
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !3173
  %call195 = call i32 @reg_referenced_p(%struct.rtx_def* %81, %struct.rtx_def* %83), !dbg !3174
  store i32 %call195, i32* %retval, align 4, !dbg !3175
  br label %return, !dbg !3175

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3176
  br label %return, !dbg !3176

return:                                           ; preds = %sw.default, %if.end190, %if.then189, %if.end181, %if.then179, %for.end158, %if.then154, %for.end133, %if.then129, %sw.bb103, %sw.bb97, %sw.bb95, %for.end, %if.then93, %if.end78, %if.then77, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !3177
  ret i32 %84, !dbg !3177
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_set_between_p(%struct.rtx_def* %reg, %struct.rtx_def* %from_insn, %struct.rtx_def* %to_insn) #0 !dbg !3178 {
entry:
  %retval = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %from_insn.addr = alloca %struct.rtx_def*, align 8
  %to_insn.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !3179, metadata !DIExpression()), !dbg !3180
  store %struct.rtx_def* %from_insn, %struct.rtx_def** %from_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from_insn.addr, metadata !3181, metadata !DIExpression()), !dbg !3182
  store %struct.rtx_def* %to_insn, %struct.rtx_def** %to_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to_insn.addr, metadata !3183, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3185, metadata !DIExpression()), !dbg !3186
  %0 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8, !dbg !3187
  %1 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8, !dbg !3189
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !3190
  br i1 %cmp, label %if.then, label %if.end, !dbg !3191

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3192
  br label %return, !dbg !3192

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %from_insn.addr, align 8, !dbg !3193
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3193
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3193
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !3193
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3193
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3193
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !3195
  br label %for.cond, !dbg !3196

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3197
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to_insn.addr, align 8, !dbg !3199
  %cmp1 = icmp ne %struct.rtx_def* %4, %5, !dbg !3200
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3201

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3202
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3202
  %bf.load = load i32, i32* %7, align 8, !dbg !3202
  %bf.clear = and i32 %bf.load, 65535, !dbg !3202
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !3202
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !3202

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3202
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3202
  %bf.load3 = load i32, i32* %9, align 8, !dbg !3202
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !3202
  %cmp5 = icmp eq i32 %bf.clear4, 7, !dbg !3202
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !3202

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3202
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3202
  %bf.load7 = load i32, i32* %11, align 8, !dbg !3202
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3202
  %cmp9 = icmp eq i32 %bf.clear8, 9, !dbg !3202
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !3202

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3202
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !3202
  %bf.load11 = load i32, i32* %13, align 8, !dbg !3202
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3202
  %cmp13 = icmp eq i32 %bf.clear12, 10, !dbg !3202
  br i1 %cmp13, label %land.lhs.true, label %if.end15, !dbg !3204

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3205
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3206
  %call = call i32 @reg_set_p(%struct.rtx_def* %14, %struct.rtx_def* %15), !dbg !3207
  %tobool = icmp ne i32 %call, 0, !dbg !3207
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !3208

if.then14:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3209
  br label %return, !dbg !3209

if.end15:                                         ; preds = %land.lhs.true, %lor.lhs.false10
  br label %for.inc, !dbg !3210

for.inc:                                          ; preds = %if.end15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3211
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !3211
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !3211
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 2, !dbg !3211
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3211
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3211
  store %struct.rtx_def* %17, %struct.rtx_def** %insn, align 8, !dbg !3212
  br label %for.cond, !dbg !3213, !llvm.loop !3214

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3216
  br label %return, !dbg !3216

return:                                           ; preds = %for.end, %if.then14, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3217
  ret i32 %18, !dbg !3217
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn) #0 !dbg !3218 {
entry:
  %retval = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !3219, metadata !DIExpression()), !dbg !3220
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3221, metadata !DIExpression()), !dbg !3222
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3223
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3223
  %bf.load = load i32, i32* %1, align 8, !dbg !3223
  %bf.clear = and i32 %bf.load, 65535, !dbg !3223
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3223
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3223

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3223
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3223
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3223
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3223
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3223
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3223

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3223
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3223
  %bf.load5 = load i32, i32* %5, align 8, !dbg !3223
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3223
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3223
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3223

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3223
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3223
  %bf.load9 = load i32, i32* %7, align 8, !dbg !3223
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3223
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3223
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !3225

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3226
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3226
  %bf.load12 = load i32, i32* %9, align 8, !dbg !3226
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3226
  %cmp14 = icmp eq i32 %bf.clear13, 10, !dbg !3226
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !3227

land.lhs.true15:                                  ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3228
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3228
  %bf.load16 = load i32, i32* %11, align 8, !dbg !3228
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !3228
  %cmp18 = icmp eq i32 %bf.clear17, 37, !dbg !3228
  br i1 %cmp18, label %land.lhs.true19, label %lor.lhs.false26, !dbg !3229

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3230
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !3230
  %cmp20 = icmp ult i32 %call, 53, !dbg !3231
  br i1 %cmp20, label %land.lhs.true21, label %lor.lhs.false26, !dbg !3232

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %13 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !3233
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3234
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !3234
  %bf.load22 = load i32, i32* %15, align 8, !dbg !3234
  %bf.lshr = lshr i32 %bf.load22, 16, !dbg !3234
  %bf.clear23 = and i32 %bf.lshr, 255, !dbg !3234
  %16 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3235
  %call24 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !3235
  %call25 = call zeroext i8 @overlaps_hard_reg_set_p(i64 %13, i32 %bf.clear23, i32 %call24), !dbg !3236
  %conv = zext i8 %call25 to i32, !dbg !3236
  %tobool = icmp ne i32 %conv, 0, !dbg !3236
  br i1 %tobool, label %if.then, label %lor.lhs.false26, !dbg !3237

lor.lhs.false26:                                  ; preds = %land.lhs.true21, %land.lhs.true19, %land.lhs.true15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3238
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !3238
  %bf.load27 = load i32, i32* %18, align 8, !dbg !3238
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3238
  %cmp29 = icmp eq i32 %bf.clear28, 43, !dbg !3238
  br i1 %cmp29, label %if.then, label %lor.lhs.false31, !dbg !3239

lor.lhs.false31:                                  ; preds = %lor.lhs.false26
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3240
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3241
  %call32 = call i32 @find_reg_fusage(%struct.rtx_def* %19, i32 25, %struct.rtx_def* %20), !dbg !3242
  %tobool33 = icmp ne i32 %call32, 0, !dbg !3242
  br i1 %tobool33, label %if.then, label %if.end, !dbg !3243

if.then:                                          ; preds = %lor.lhs.false31, %lor.lhs.false26, %land.lhs.true21
  store i32 1, i32* %retval, align 4, !dbg !3244
  br label %return, !dbg !3244

if.end:                                           ; preds = %lor.lhs.false31, %land.lhs.true, %lor.lhs.false8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3245
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3246
  %call34 = call %struct.rtx_def* @set_of(%struct.rtx_def* %21, %struct.rtx_def* %22), !dbg !3247
  %cmp35 = icmp ne %struct.rtx_def* %call34, null, !dbg !3248
  %conv36 = zext i1 %cmp35 to i32, !dbg !3248
  store i32 %conv36, i32* %retval, align 4, !dbg !3249
  br label %return, !dbg !3249

return:                                           ; preds = %if.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !3250
  ret i32 %23, !dbg !3250
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @overlaps_hard_reg_set_p(i64 %regs, i32 %mode, i32 %regno) #0 !dbg !3251 {
entry:
  %retval = alloca i8, align 1
  %regs.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %end_regno = alloca i32, align 4
  store i64 %regs, i64* %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %regs.addr, metadata !3256, metadata !DIExpression()), !dbg !3257
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !3262, metadata !DIExpression()), !dbg !3263
  %0 = load i64, i64* %regs.addr, align 8, !dbg !3264
  %1 = load i32, i32* %regno.addr, align 4, !dbg !3264
  %sh_prom = zext i32 %1 to i64, !dbg !3264
  %shl = shl i64 1, %sh_prom, !dbg !3264
  %and = and i64 %0, %shl, !dbg !3264
  %tobool = icmp ne i64 %and, 0, !dbg !3264
  br i1 %tobool, label %if.then, label %if.end, !dbg !3266

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3267
  br label %return, !dbg !3267

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !3268
  %3 = load i32, i32* %regno.addr, align 4, !dbg !3269
  %call = call i32 @end_hard_regno(i32 %2, i32 %3), !dbg !3270
  store i32 %call, i32* %end_regno, align 4, !dbg !3271
  br label %while.cond, !dbg !3272

while.cond:                                       ; preds = %if.end6, %if.end
  %4 = load i32, i32* %regno.addr, align 4, !dbg !3273
  %inc = add i32 %4, 1, !dbg !3273
  store i32 %inc, i32* %regno.addr, align 4, !dbg !3273
  %5 = load i32, i32* %end_regno, align 4, !dbg !3274
  %cmp = icmp ult i32 %inc, %5, !dbg !3275
  br i1 %cmp, label %while.body, label %while.end, !dbg !3272

while.body:                                       ; preds = %while.cond
  %6 = load i64, i64* %regs.addr, align 8, !dbg !3276
  %7 = load i32, i32* %regno.addr, align 4, !dbg !3276
  %sh_prom1 = zext i32 %7 to i64, !dbg !3276
  %shl2 = shl i64 1, %sh_prom1, !dbg !3276
  %and3 = and i64 %6, %shl2, !dbg !3276
  %tobool4 = icmp ne i64 %and3, 0, !dbg !3276
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3278

if.then5:                                         ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !3279
  br label %return, !dbg !3279

if.end6:                                          ; preds = %while.body
  br label %while.cond, !dbg !3272, !llvm.loop !3280

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !3282
  br label %return, !dbg !3282

return:                                           ; preds = %while.end, %if.then5, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !3283
  ret i8 %8, !dbg !3283
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @set_of(%struct.rtx_def* %pat, %struct.rtx_def* %insn) #0 !dbg !3284 {
entry:
  %pat.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %data = alloca %struct.set_of_data, align 8
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3289, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.declare(metadata %struct.set_of_data* %data, metadata !3291, metadata !DIExpression()), !dbg !3292
  %found = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %data, i32 0, i32 0, !dbg !3293
  store %struct.rtx_def* null, %struct.rtx_def** %found, align 8, !dbg !3294
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !3295
  %pat1 = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %data, i32 0, i32 1, !dbg !3296
  store %struct.rtx_def* %0, %struct.rtx_def** %pat1, align 8, !dbg !3297
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3298
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !3298
  %bf.load = load i32, i32* %2, align 8, !dbg !3298
  %bf.clear = and i32 %bf.load, 65535, !dbg !3298
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3298
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !3298

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3298
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !3298
  %bf.load2 = load i32, i32* %4, align 8, !dbg !3298
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !3298
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !3298
  br i1 %cmp4, label %cond.true, label %lor.lhs.false5, !dbg !3298

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3298
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3298
  %bf.load6 = load i32, i32* %6, align 8, !dbg !3298
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !3298
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !3298
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !3298

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3298
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !3298
  %bf.load10 = load i32, i32* %8, align 8, !dbg !3298
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !3298
  %cmp12 = icmp eq i32 %bf.clear11, 10, !dbg !3298
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !3298

cond.true:                                        ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3299
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !3299
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3299
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !3299
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3299
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3299
  br label %cond.end, !dbg !3298

cond.false:                                       ; preds = %lor.lhs.false9
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3300
  br label %cond.end, !dbg !3298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %10, %cond.true ], [ %11, %cond.false ], !dbg !3298
  %12 = bitcast %struct.set_of_data* %data to i8*, !dbg !3301
  call void @note_stores(%struct.rtx_def* %cond, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @set_of_1, i8* %12), !dbg !3302
  %found13 = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %data, i32 0, i32 0, !dbg !3303
  %13 = load %struct.rtx_def*, %struct.rtx_def** %found13, align 8, !dbg !3303
  ret %struct.rtx_def* %13, !dbg !3304
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @modified_between_p(%struct.rtx_def* %x, %struct.rtx_def* %start, %struct.rtx_def* %end) #0 !dbg !3305 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %start.addr = alloca %struct.rtx_def*, align 8
  %end.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3306, metadata !DIExpression()), !dbg !3307
  store %struct.rtx_def* %start, %struct.rtx_def** %start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %start.addr, metadata !3308, metadata !DIExpression()), !dbg !3309
  store %struct.rtx_def* %end, %struct.rtx_def** %end.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %end.addr, metadata !3310, metadata !DIExpression()), !dbg !3311
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3312, metadata !DIExpression()), !dbg !3313
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3314
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3314
  %bf.load = load i32, i32* %1, align 8, !dbg !3314
  %bf.clear = and i32 %bf.load, 65535, !dbg !3314
  store i32 %bf.clear, i32* %code, align 4, !dbg !3313
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !3315, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3317, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3321, metadata !DIExpression()), !dbg !3322
  %2 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3323
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3325
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !3326
  br i1 %cmp, label %if.then, label %if.end, !dbg !3327

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %code, align 4, !dbg !3329
  switch i32 %4, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 36, label %sw.bb1
    i32 46, label %sw.bb1
    i32 43, label %sw.bb2
    i32 37, label %sw.bb23
  ], !dbg !3330

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3331
  br label %return, !dbg !3331

sw.bb1:                                           ; preds = %if.end, %if.end
  store i32 1, i32* %retval, align 4, !dbg !3333
  br label %return, !dbg !3333

sw.bb2:                                           ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3334
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !3334
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3334
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3334
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3334
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3334
  %7 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3336
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3337
  %call = call i32 @modified_between_p(%struct.rtx_def* %6, %struct.rtx_def* %7, %struct.rtx_def* %8), !dbg !3338
  %tobool = icmp ne i32 %call, 0, !dbg !3338
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !3339

if.then3:                                         ; preds = %sw.bb2
  store i32 1, i32* %retval, align 4, !dbg !3340
  br label %return, !dbg !3340

if.end4:                                          ; preds = %sw.bb2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3341
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !3341
  %bf.load5 = load i32, i32* %10, align 8, !dbg !3341
  %bf.lshr = lshr i32 %bf.load5, 26, !dbg !3341
  %bf.clear6 = and i32 %bf.lshr, 1, !dbg !3341
  %tobool7 = icmp ne i32 %bf.clear6, 0, !dbg !3341
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !3343

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !3344
  br label %return, !dbg !3344

if.end9:                                          ; preds = %if.end4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3345
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3345
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !3345
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 2, !dbg !3345
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !3345
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !3345
  store %struct.rtx_def* %12, %struct.rtx_def** %insn, align 8, !dbg !3347
  br label %for.cond, !dbg !3348

for.cond:                                         ; preds = %for.inc, %if.end9
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3349
  %14 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3351
  %cmp14 = icmp ne %struct.rtx_def* %13, %14, !dbg !3352
  br i1 %cmp14, label %for.body, label %for.end, !dbg !3353

for.body:                                         ; preds = %for.cond
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3354
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3356
  %call15 = call zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !3357
  %tobool16 = icmp ne i8 %call15, 0, !dbg !3357
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !3358

if.then17:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !3359
  br label %return, !dbg !3359

if.end18:                                         ; preds = %for.body
  br label %for.inc, !dbg !3360

for.inc:                                          ; preds = %if.end18
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3361
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3361
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !3361
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 2, !dbg !3361
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3361
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3361
  store %struct.rtx_def* %18, %struct.rtx_def** %insn, align 8, !dbg !3362
  br label %for.cond, !dbg !3363, !llvm.loop !3364

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3366
  br label %return, !dbg !3366

sw.bb23:                                          ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3367
  %20 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3368
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3369
  %call24 = call i32 @reg_set_between_p(%struct.rtx_def* %19, %struct.rtx_def* %20, %struct.rtx_def* %21), !dbg !3370
  store i32 %call24, i32* %retval, align 4, !dbg !3371
  br label %return, !dbg !3371

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !3372

sw.epilog:                                        ; preds = %sw.default
  %22 = load i32, i32* %code, align 4, !dbg !3373
  %idxprom = sext i32 %22 to i64, !dbg !3373
  %arrayidx25 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3373
  %23 = load i8*, i8** %arrayidx25, align 8, !dbg !3373
  store i8* %23, i8** %fmt, align 8, !dbg !3374
  %24 = load i32, i32* %code, align 4, !dbg !3375
  %idxprom26 = sext i32 %24 to i64, !dbg !3375
  %arrayidx27 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom26, !dbg !3375
  %25 = load i8, i8* %arrayidx27, align 1, !dbg !3375
  %conv = zext i8 %25 to i32, !dbg !3375
  %sub = sub nsw i32 %conv, 1, !dbg !3377
  store i32 %sub, i32* %i, align 4, !dbg !3378
  br label %for.cond28, !dbg !3379

for.cond28:                                       ; preds = %for.inc75, %sw.epilog
  %26 = load i32, i32* %i, align 4, !dbg !3380
  %cmp29 = icmp sge i32 %26, 0, !dbg !3382
  br i1 %cmp29, label %for.body31, label %for.end77, !dbg !3383

for.body31:                                       ; preds = %for.cond28
  %27 = load i8*, i8** %fmt, align 8, !dbg !3384
  %28 = load i32, i32* %i, align 4, !dbg !3387
  %idxprom32 = sext i32 %28 to i64, !dbg !3384
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 %idxprom32, !dbg !3384
  %29 = load i8, i8* %arrayidx33, align 1, !dbg !3384
  %conv34 = sext i8 %29 to i32, !dbg !3384
  %cmp35 = icmp eq i32 %conv34, 101, !dbg !3388
  br i1 %cmp35, label %land.lhs.true, label %if.else, !dbg !3389

land.lhs.true:                                    ; preds = %for.body31
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3390
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3390
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !3390
  %31 = load i32, i32* %i, align 4, !dbg !3390
  %idxprom39 = sext i32 %31 to i64, !dbg !3390
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 %idxprom39, !dbg !3390
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !3390
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !3390
  %33 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3391
  %34 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3392
  %call42 = call i32 @modified_between_p(%struct.rtx_def* %32, %struct.rtx_def* %33, %struct.rtx_def* %34), !dbg !3393
  %tobool43 = icmp ne i32 %call42, 0, !dbg !3393
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !3394

if.then44:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3395
  br label %return, !dbg !3395

if.else:                                          ; preds = %land.lhs.true, %for.body31
  %35 = load i8*, i8** %fmt, align 8, !dbg !3396
  %36 = load i32, i32* %i, align 4, !dbg !3398
  %idxprom45 = sext i32 %36 to i64, !dbg !3396
  %arrayidx46 = getelementptr inbounds i8, i8* %35, i64 %idxprom45, !dbg !3396
  %37 = load i8, i8* %arrayidx46, align 1, !dbg !3396
  %conv47 = sext i8 %37 to i32, !dbg !3396
  %cmp48 = icmp eq i32 %conv47, 69, !dbg !3399
  br i1 %cmp48, label %if.then50, label %if.end73, !dbg !3400

if.then50:                                        ; preds = %if.else
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3401
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !3401
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !3401
  %39 = load i32, i32* %i, align 4, !dbg !3401
  %idxprom53 = sext i32 %39 to i64, !dbg !3401
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 %idxprom53, !dbg !3401
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtvec_def**, !dbg !3401
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3401
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 0, !dbg !3401
  %41 = load i32, i32* %num_elem, align 8, !dbg !3401
  %sub55 = sub nsw i32 %41, 1, !dbg !3403
  store i32 %sub55, i32* %j, align 4, !dbg !3404
  br label %for.cond56, !dbg !3405

for.cond56:                                       ; preds = %for.inc71, %if.then50
  %42 = load i32, i32* %j, align 4, !dbg !3406
  %cmp57 = icmp sge i32 %42, 0, !dbg !3408
  br i1 %cmp57, label %for.body59, label %for.end72, !dbg !3409

for.body59:                                       ; preds = %for.cond56
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3410
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !3410
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !3410
  %44 = load i32, i32* %i, align 4, !dbg !3410
  %idxprom62 = sext i32 %44 to i64, !dbg !3410
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 %idxprom62, !dbg !3410
  %rt_rtvec64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtvec_def**, !dbg !3410
  %45 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec64, align 8, !dbg !3410
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %45, i32 0, i32 1, !dbg !3410
  %46 = load i32, i32* %j, align 4, !dbg !3410
  %idxprom65 = sext i32 %46 to i64, !dbg !3410
  %arrayidx66 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom65, !dbg !3410
  %47 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx66, align 8, !dbg !3410
  %48 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !3412
  %49 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !3413
  %call67 = call i32 @modified_between_p(%struct.rtx_def* %47, %struct.rtx_def* %48, %struct.rtx_def* %49), !dbg !3414
  %tobool68 = icmp ne i32 %call67, 0, !dbg !3414
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !3415

if.then69:                                        ; preds = %for.body59
  store i32 1, i32* %retval, align 4, !dbg !3416
  br label %return, !dbg !3416

if.end70:                                         ; preds = %for.body59
  br label %for.inc71, !dbg !3417

for.inc71:                                        ; preds = %if.end70
  %50 = load i32, i32* %j, align 4, !dbg !3418
  %dec = add nsw i32 %50, -1, !dbg !3418
  store i32 %dec, i32* %j, align 4, !dbg !3418
  br label %for.cond56, !dbg !3419, !llvm.loop !3420

for.end72:                                        ; preds = %for.cond56
  br label %if.end73, !dbg !3421

if.end73:                                         ; preds = %for.end72, %if.else
  br label %if.end74

if.end74:                                         ; preds = %if.end73
  br label %for.inc75, !dbg !3422

for.inc75:                                        ; preds = %if.end74
  %51 = load i32, i32* %i, align 4, !dbg !3423
  %dec76 = add nsw i32 %51, -1, !dbg !3423
  store i32 %dec76, i32* %i, align 4, !dbg !3423
  br label %for.cond28, !dbg !3424, !llvm.loop !3425

for.end77:                                        ; preds = %for.cond28
  store i32 0, i32* %retval, align 4, !dbg !3427
  br label %return, !dbg !3427

return:                                           ; preds = %for.end77, %if.then69, %if.then44, %sw.bb23, %for.end, %if.then17, %if.then8, %if.then3, %sw.bb1, %sw.bb, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !3428
  ret i32 %52, !dbg !3428
}

declare dso_local zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @modified_in_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !3429 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3434, metadata !DIExpression()), !dbg !3435
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3436
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3436
  %bf.load = load i32, i32* %1, align 8, !dbg !3436
  %bf.clear = and i32 %bf.load, 65535, !dbg !3436
  store i32 %bf.clear, i32* %code, align 4, !dbg !3435
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !3437, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3441, metadata !DIExpression()), !dbg !3442
  %2 = load i32, i32* %code, align 4, !dbg !3443
  switch i32 %2, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 36, label %sw.bb1
    i32 46, label %sw.bb1
    i32 43, label %sw.bb2
    i32 37, label %sw.bb12
  ], !dbg !3444

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !3445
  br label %return, !dbg !3445

sw.bb1:                                           ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !3447
  br label %return, !dbg !3447

sw.bb2:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3448
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3448
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3448
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3448
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3448
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3448
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3450
  %call = call i32 @modified_in_p(%struct.rtx_def* %4, %struct.rtx_def* %5), !dbg !3451
  %tobool = icmp ne i32 %call, 0, !dbg !3451
  br i1 %tobool, label %if.then, label %if.end, !dbg !3452

if.then:                                          ; preds = %sw.bb2
  store i32 1, i32* %retval, align 4, !dbg !3453
  br label %return, !dbg !3453

if.end:                                           ; preds = %sw.bb2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3454
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3454
  %bf.load3 = load i32, i32* %7, align 8, !dbg !3454
  %bf.lshr = lshr i32 %bf.load3, 26, !dbg !3454
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !3454
  %tobool5 = icmp ne i32 %bf.clear4, 0, !dbg !3454
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !3456

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3457
  br label %return, !dbg !3457

if.end7:                                          ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3458
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3460
  %call8 = call zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !3461
  %tobool9 = icmp ne i8 %call8, 0, !dbg !3461
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3462

if.then10:                                        ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !3463
  br label %return, !dbg !3463

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3464
  br label %return, !dbg !3464

sw.bb12:                                          ; preds = %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3465
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3466
  %call13 = call i32 @reg_set_p(%struct.rtx_def* %10, %struct.rtx_def* %11), !dbg !3467
  store i32 %call13, i32* %retval, align 4, !dbg !3468
  br label %return, !dbg !3468

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !3469

sw.epilog:                                        ; preds = %sw.default
  %12 = load i32, i32* %code, align 4, !dbg !3470
  %idxprom = sext i32 %12 to i64, !dbg !3470
  %arrayidx14 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3470
  %13 = load i8*, i8** %arrayidx14, align 8, !dbg !3470
  store i8* %13, i8** %fmt, align 8, !dbg !3471
  %14 = load i32, i32* %code, align 4, !dbg !3472
  %idxprom15 = sext i32 %14 to i64, !dbg !3472
  %arrayidx16 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom15, !dbg !3472
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !3472
  %conv = zext i8 %15 to i32, !dbg !3472
  %sub = sub nsw i32 %conv, 1, !dbg !3474
  store i32 %sub, i32* %i, align 4, !dbg !3475
  br label %for.cond, !dbg !3476

for.cond:                                         ; preds = %for.inc59, %sw.epilog
  %16 = load i32, i32* %i, align 4, !dbg !3477
  %cmp = icmp sge i32 %16, 0, !dbg !3479
  br i1 %cmp, label %for.body, label %for.end61, !dbg !3480

for.body:                                         ; preds = %for.cond
  %17 = load i8*, i8** %fmt, align 8, !dbg !3481
  %18 = load i32, i32* %i, align 4, !dbg !3484
  %idxprom18 = sext i32 %18 to i64, !dbg !3481
  %arrayidx19 = getelementptr inbounds i8, i8* %17, i64 %idxprom18, !dbg !3481
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !3481
  %conv20 = sext i8 %19 to i32, !dbg !3481
  %cmp21 = icmp eq i32 %conv20, 101, !dbg !3485
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !3486

land.lhs.true:                                    ; preds = %for.body
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3487
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !3487
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !3487
  %21 = load i32, i32* %i, align 4, !dbg !3487
  %idxprom25 = sext i32 %21 to i64, !dbg !3487
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 %idxprom25, !dbg !3487
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !3487
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3487
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3488
  %call28 = call i32 @modified_in_p(%struct.rtx_def* %22, %struct.rtx_def* %23), !dbg !3489
  %tobool29 = icmp ne i32 %call28, 0, !dbg !3489
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !3490

if.then30:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3491
  br label %return, !dbg !3491

if.else:                                          ; preds = %land.lhs.true, %for.body
  %24 = load i8*, i8** %fmt, align 8, !dbg !3492
  %25 = load i32, i32* %i, align 4, !dbg !3494
  %idxprom31 = sext i32 %25 to i64, !dbg !3492
  %arrayidx32 = getelementptr inbounds i8, i8* %24, i64 %idxprom31, !dbg !3492
  %26 = load i8, i8* %arrayidx32, align 1, !dbg !3492
  %conv33 = sext i8 %26 to i32, !dbg !3492
  %cmp34 = icmp eq i32 %conv33, 69, !dbg !3495
  br i1 %cmp34, label %if.then36, label %if.end57, !dbg !3496

if.then36:                                        ; preds = %if.else
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3497
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !3497
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !3497
  %28 = load i32, i32* %i, align 4, !dbg !3497
  %idxprom39 = sext i32 %28 to i64, !dbg !3497
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 %idxprom39, !dbg !3497
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**, !dbg !3497
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3497
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 0, !dbg !3497
  %30 = load i32, i32* %num_elem, align 8, !dbg !3497
  %sub41 = sub nsw i32 %30, 1, !dbg !3499
  store i32 %sub41, i32* %j, align 4, !dbg !3500
  br label %for.cond42, !dbg !3501

for.cond42:                                       ; preds = %for.inc, %if.then36
  %31 = load i32, i32* %j, align 4, !dbg !3502
  %cmp43 = icmp sge i32 %31, 0, !dbg !3504
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !3505

for.body45:                                       ; preds = %for.cond42
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3506
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !3506
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !3506
  %33 = load i32, i32* %i, align 4, !dbg !3506
  %idxprom48 = sext i32 %33 to i64, !dbg !3506
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 %idxprom48, !dbg !3506
  %rt_rtvec50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtvec_def**, !dbg !3506
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec50, align 8, !dbg !3506
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i32 0, i32 1, !dbg !3506
  %35 = load i32, i32* %j, align 4, !dbg !3506
  %idxprom51 = sext i32 %35 to i64, !dbg !3506
  %arrayidx52 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom51, !dbg !3506
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx52, align 8, !dbg !3506
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3508
  %call53 = call i32 @modified_in_p(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !3509
  %tobool54 = icmp ne i32 %call53, 0, !dbg !3509
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !3510

if.then55:                                        ; preds = %for.body45
  store i32 1, i32* %retval, align 4, !dbg !3511
  br label %return, !dbg !3511

if.end56:                                         ; preds = %for.body45
  br label %for.inc, !dbg !3512

for.inc:                                          ; preds = %if.end56
  %38 = load i32, i32* %j, align 4, !dbg !3513
  %dec = add nsw i32 %38, -1, !dbg !3513
  store i32 %dec, i32* %j, align 4, !dbg !3513
  br label %for.cond42, !dbg !3514, !llvm.loop !3515

for.end:                                          ; preds = %for.cond42
  br label %if.end57, !dbg !3516

if.end57:                                         ; preds = %for.end, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  br label %for.inc59, !dbg !3517

for.inc59:                                        ; preds = %if.end58
  %39 = load i32, i32* %i, align 4, !dbg !3518
  %dec60 = add nsw i32 %39, -1, !dbg !3518
  store i32 %dec60, i32* %i, align 4, !dbg !3518
  br label %for.cond, !dbg !3519, !llvm.loop !3520

for.end61:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3522
  br label %return, !dbg !3522

return:                                           ; preds = %for.end61, %if.then55, %if.then30, %sw.bb12, %if.end11, %if.then10, %if.then6, %if.then, %sw.bb1, %sw.bb
  %40 = load i32, i32* %retval, align 4, !dbg !3523
  ret i32 %40, !dbg !3523
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @note_stores(%struct.rtx_def* %x, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fun, i8* %data) #0 !dbg !3524 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %fun.addr = alloca void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %dest = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3530, metadata !DIExpression()), !dbg !3531
  store void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fun, void (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fun.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fun.addr, metadata !3532, metadata !DIExpression()), !dbg !3533
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3534, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3536, metadata !DIExpression()), !dbg !3537
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3538
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3538
  %bf.load = load i32, i32* %1, align 8, !dbg !3538
  %bf.clear = and i32 %bf.load, 65535, !dbg !3538
  %cmp = icmp eq i32 %bf.clear, 14, !dbg !3540
  br i1 %cmp, label %if.then, label %if.end, !dbg !3541

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3542
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3542
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3542
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3542
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3542
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3542
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8, !dbg !3543
  br label %if.end, !dbg !3544

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3545
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3545
  %bf.load1 = load i32, i32* %5, align 8, !dbg !3545
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3545
  %cmp3 = icmp eq i32 %bf.clear2, 23, !dbg !3547
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !3548

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3549
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3549
  %bf.load4 = load i32, i32* %7, align 8, !dbg !3549
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !3549
  %cmp6 = icmp eq i32 %bf.clear5, 25, !dbg !3550
  br i1 %cmp6, label %if.then7, label %if.else71, !dbg !3551

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !3552, metadata !DIExpression()), !dbg !3554
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3555
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !3555
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !3555
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !3555
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !3555
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !3555
  store %struct.rtx_def* %9, %struct.rtx_def** %dest, align 8, !dbg !3554
  br label %while.cond, !dbg !3556

while.cond:                                       ; preds = %while.body, %if.then7
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3557
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3557
  %bf.load12 = load i32, i32* %11, align 8, !dbg !3557
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3557
  %cmp14 = icmp eq i32 %bf.clear13, 39, !dbg !3558
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false28, !dbg !3559

land.lhs.true:                                    ; preds = %while.cond
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3560
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !3560
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !3560
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !3560
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !3560
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !3560
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !3560
  %bf.load19 = load i32, i32* %14, align 8, !dbg !3560
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3560
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !3560
  br i1 %cmp21, label %lor.lhs.false22, label %lor.end, !dbg !3561

lor.lhs.false22:                                  ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3562
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !3562
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !3562
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !3562
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !3562
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !3562
  %call = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !3562
  %cmp27 = icmp uge i32 %call, 53, !dbg !3563
  br i1 %cmp27, label %lor.end, label %lor.lhs.false28, !dbg !3564

lor.lhs.false28:                                  ; preds = %lor.lhs.false22, %while.cond
  %17 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3565
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !3565
  %bf.load29 = load i32, i32* %18, align 8, !dbg !3565
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !3565
  %cmp31 = icmp eq i32 %bf.clear30, 120, !dbg !3566
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !3567

lor.rhs:                                          ; preds = %lor.lhs.false28
  %19 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3568
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !3568
  %bf.load32 = load i32, i32* %20, align 8, !dbg !3568
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !3568
  %cmp34 = icmp eq i32 %bf.clear33, 40, !dbg !3569
  br label %lor.end, !dbg !3567

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false28, %lor.lhs.false22, %land.lhs.true
  %21 = phi i1 [ true, %lor.lhs.false28 ], [ true, %lor.lhs.false22 ], [ true, %land.lhs.true ], [ %cmp34, %lor.rhs ]
  br i1 %21, label %while.body, label %while.end, !dbg !3556

while.body:                                       ; preds = %lor.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3570
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !3570
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !3570
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !3570
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !3570
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !3570
  store %struct.rtx_def* %23, %struct.rtx_def** %dest, align 8, !dbg !3571
  br label %while.cond, !dbg !3556, !llvm.loop !3572

while.end:                                        ; preds = %lor.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3573
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !3573
  %bf.load39 = load i32, i32* %25, align 8, !dbg !3573
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !3573
  %cmp41 = icmp eq i32 %bf.clear40, 15, !dbg !3575
  br i1 %cmp41, label %if.then42, label %if.else, !dbg !3576

if.then42:                                        ; preds = %while.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3577
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3577
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !3577
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !3577
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtvec_def**, !dbg !3577
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3577
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i32 0, i32 0, !dbg !3577
  %28 = load i32, i32* %num_elem, align 8, !dbg !3577
  %sub = sub nsw i32 %28, 1, !dbg !3580
  store i32 %sub, i32* %i, align 4, !dbg !3581
  br label %for.cond, !dbg !3582

for.cond:                                         ; preds = %for.inc, %if.then42
  %29 = load i32, i32* %i, align 4, !dbg !3583
  %cmp46 = icmp sge i32 %29, 0, !dbg !3585
  br i1 %cmp46, label %for.body, label %for.end, !dbg !3586

for.body:                                         ; preds = %for.cond
  %30 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3587
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3587
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !3587
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !3587
  %rt_rtvec50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtvec_def**, !dbg !3587
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec50, align 8, !dbg !3587
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 1, !dbg !3587
  %32 = load i32, i32* %i, align 4, !dbg !3587
  %idxprom = sext i32 %32 to i64, !dbg !3587
  %arrayidx51 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !3587
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx51, align 8, !dbg !3587
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !3587
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !3587
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !3587
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !3587
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !3587
  %cmp56 = icmp ne %struct.rtx_def* %34, null, !dbg !3589
  br i1 %cmp56, label %if.then57, label %if.end69, !dbg !3590

if.then57:                                        ; preds = %for.body
  %35 = load void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fun.addr, align 8, !dbg !3591
  %36 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3592
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !3592
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !3592
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !3592
  %rt_rtvec61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**, !dbg !3592
  %37 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec61, align 8, !dbg !3592
  %elem62 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %37, i32 0, i32 1, !dbg !3592
  %38 = load i32, i32* %i, align 4, !dbg !3592
  %idxprom63 = sext i32 %38 to i64, !dbg !3592
  %arrayidx64 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem62, i64 0, i64 %idxprom63, !dbg !3592
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx64, align 8, !dbg !3592
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !3592
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !3592
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 0, !dbg !3592
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !3592
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !3592
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3593
  %42 = load i8*, i8** %data.addr, align 8, !dbg !3594
  call void %35(%struct.rtx_def* %40, %struct.rtx_def* %41, i8* %42), !dbg !3595
  br label %if.end69, !dbg !3595

if.end69:                                         ; preds = %if.then57, %for.body
  br label %for.inc, !dbg !3596

for.inc:                                          ; preds = %if.end69
  %43 = load i32, i32* %i, align 4, !dbg !3597
  %dec = add nsw i32 %43, -1, !dbg !3597
  store i32 %dec, i32* %i, align 4, !dbg !3597
  br label %for.cond, !dbg !3598, !llvm.loop !3599

for.end:                                          ; preds = %for.cond
  br label %if.end70, !dbg !3601

if.else:                                          ; preds = %while.end
  %44 = load void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fun.addr, align 8, !dbg !3602
  %45 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !3603
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3604
  %47 = load i8*, i8** %data.addr, align 8, !dbg !3605
  call void %44(%struct.rtx_def* %45, %struct.rtx_def* %46, i8* %47), !dbg !3606
  br label %if.end70

if.end70:                                         ; preds = %if.else, %for.end
  br label %if.end96, !dbg !3607

if.else71:                                        ; preds = %lor.lhs.false
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3608
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !3608
  %bf.load72 = load i32, i32* %49, align 8, !dbg !3608
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !3608
  %cmp74 = icmp eq i32 %bf.clear73, 15, !dbg !3610
  br i1 %cmp74, label %if.then75, label %if.end95, !dbg !3611

if.then75:                                        ; preds = %if.else71
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3612
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !3612
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !3612
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !3612
  %rt_rtvec79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**, !dbg !3612
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec79, align 8, !dbg !3612
  %num_elem80 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 0, !dbg !3612
  %52 = load i32, i32* %num_elem80, align 8, !dbg !3612
  %sub81 = sub nsw i32 %52, 1, !dbg !3614
  store i32 %sub81, i32* %i, align 4, !dbg !3615
  br label %for.cond82, !dbg !3616

for.cond82:                                       ; preds = %for.inc92, %if.then75
  %53 = load i32, i32* %i, align 4, !dbg !3617
  %cmp83 = icmp sge i32 %53, 0, !dbg !3619
  br i1 %cmp83, label %for.body84, label %for.end94, !dbg !3620

for.body84:                                       ; preds = %for.cond82
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3621
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !3621
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !3621
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 0, !dbg !3621
  %rt_rtvec88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtvec_def**, !dbg !3621
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec88, align 8, !dbg !3621
  %elem89 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 1, !dbg !3621
  %56 = load i32, i32* %i, align 4, !dbg !3621
  %idxprom90 = sext i32 %56 to i64, !dbg !3621
  %arrayidx91 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem89, i64 0, i64 %idxprom90, !dbg !3621
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91, align 8, !dbg !3621
  %58 = load void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fun.addr, align 8, !dbg !3622
  %59 = load i8*, i8** %data.addr, align 8, !dbg !3623
  call void @note_stores(%struct.rtx_def* %57, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %58, i8* %59), !dbg !3624
  br label %for.inc92, !dbg !3624

for.inc92:                                        ; preds = %for.body84
  %60 = load i32, i32* %i, align 4, !dbg !3625
  %dec93 = add nsw i32 %60, -1, !dbg !3625
  store i32 %dec93, i32* %i, align 4, !dbg !3625
  br label %for.cond82, !dbg !3626, !llvm.loop !3627

for.end94:                                        ; preds = %for.cond82
  br label %if.end95, !dbg !3628

if.end95:                                         ; preds = %for.end94, %if.else71
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end70
  ret void, !dbg !3629
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_of_1(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data1) #0 !dbg !3630 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %pat.addr = alloca %struct.rtx_def*, align 8
  %data1.addr = alloca i8*, align 8
  %data = alloca %struct.set_of_data*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3631, metadata !DIExpression()), !dbg !3632
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat.addr, metadata !3633, metadata !DIExpression()), !dbg !3634
  store i8* %data1, i8** %data1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data1.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.declare(metadata %struct.set_of_data** %data, metadata !3637, metadata !DIExpression()), !dbg !3639
  %0 = load i8*, i8** %data1.addr, align 8, !dbg !3640
  %1 = bitcast i8* %0 to %struct.set_of_data*, !dbg !3641
  store %struct.set_of_data* %1, %struct.set_of_data** %data, align 8, !dbg !3639
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3642
  %3 = load %struct.set_of_data*, %struct.set_of_data** %data, align 8, !dbg !3644
  %pat1 = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %3, i32 0, i32 1, !dbg !3645
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pat1, align 8, !dbg !3645
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %4), !dbg !3646
  %tobool = icmp ne i32 %call, 0, !dbg !3646
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3647

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3648
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3648
  %bf.load = load i32, i32* %6, align 8, !dbg !3648
  %bf.clear = and i32 %bf.load, 65535, !dbg !3648
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !3648
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3649

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.set_of_data*, %struct.set_of_data** %data, align 8, !dbg !3650
  %pat2 = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %7, i32 0, i32 1, !dbg !3651
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pat2, align 8, !dbg !3651
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3652
  %call3 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !3653
  %tobool4 = icmp ne i32 %call3, 0, !dbg !3653
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3654

if.then:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !3655
  %11 = load %struct.set_of_data*, %struct.set_of_data** %data, align 8, !dbg !3656
  %found = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %11, i32 0, i32 0, !dbg !3657
  store %struct.rtx_def* %10, %struct.rtx_def** %found, align 8, !dbg !3658
  br label %if.end, !dbg !3656

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  ret void, !dbg !3659
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %pat) #0 !dbg !3660 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pat.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %set_verified = alloca i32, align 4
  %i = alloca i32, align 4
  %sub = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3663, metadata !DIExpression()), !dbg !3664
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !3667, metadata !DIExpression()), !dbg !3668
  store %struct.rtx_def* null, %struct.rtx_def** %set, align 8, !dbg !3668
  call void @llvm.dbg.declare(metadata i32* %set_verified, metadata !3669, metadata !DIExpression()), !dbg !3670
  store i32 1, i32* %set_verified, align 4, !dbg !3670
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3671, metadata !DIExpression()), !dbg !3672
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !3673
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3673
  %bf.load = load i32, i32* %1, align 8, !dbg !3673
  %bf.clear = and i32 %bf.load, 65535, !dbg !3673
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !3675
  br i1 %cmp, label %if.then, label %if.end33, !dbg !3676

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3677
  br label %for.cond, !dbg !3680

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !3681
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !3683
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3683
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3683
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3683
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !3683
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3683
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i32 0, i32 0, !dbg !3683
  %5 = load i32, i32* %num_elem, align 8, !dbg !3683
  %cmp1 = icmp slt i32 %2, %5, !dbg !3684
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3685

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %sub, metadata !3686, metadata !DIExpression()), !dbg !3688
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !3689
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !3689
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !3689
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !3689
  %rt_rtvec5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtvec_def**, !dbg !3689
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5, align 8, !dbg !3689
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i32 0, i32 1, !dbg !3689
  %8 = load i32, i32* %i, align 4, !dbg !3689
  %idxprom = sext i32 %8 to i64, !dbg !3689
  %arrayidx6 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !3689
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !3689
  store %struct.rtx_def* %9, %struct.rtx_def** %sub, align 8, !dbg !3688
  %10 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !3690
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3690
  %bf.load7 = load i32, i32* %11, align 8, !dbg !3690
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3690
  switch i32 %bf.clear8, label %sw.default [
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 23, label %sw.bb9
  ], !dbg !3691

sw.bb:                                            ; preds = %for.body, %for.body
  br label %sw.epilog, !dbg !3692

sw.bb9:                                           ; preds = %for.body
  %12 = load i32, i32* %set_verified, align 4, !dbg !3694
  %tobool = icmp ne i32 %12, 0, !dbg !3694
  br i1 %tobool, label %if.end18, label %if.then10, !dbg !3696

if.then10:                                        ; preds = %sw.bb9
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3697
  %14 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !3700
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3700
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !3700
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !3700
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !3700
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3700
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %13, i32 6, %struct.rtx_def* %15), !dbg !3701
  %tobool14 = icmp ne %struct.rtx_def* %call, null, !dbg !3701
  br i1 %tobool14, label %land.lhs.true, label %if.else, !dbg !3702

land.lhs.true:                                    ; preds = %if.then10
  %16 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !3703
  %call15 = call i32 @side_effects_p(%struct.rtx_def* %16), !dbg !3704
  %tobool16 = icmp ne i32 %call15, 0, !dbg !3704
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !3705

if.then17:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %set, align 8, !dbg !3706
  br label %if.end, !dbg !3707

if.else:                                          ; preds = %land.lhs.true, %if.then10
  store i32 1, i32* %set_verified, align 4, !dbg !3708
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  br label %if.end18, !dbg !3709

if.end18:                                         ; preds = %if.end, %sw.bb9
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !3710
  %tobool19 = icmp ne %struct.rtx_def* %17, null, !dbg !3710
  br i1 %tobool19, label %if.else21, label %if.then20, !dbg !3712

if.then20:                                        ; preds = %if.end18
  %18 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !3713
  store %struct.rtx_def* %18, %struct.rtx_def** %set, align 8, !dbg !3714
  store i32 0, i32* %set_verified, align 4, !dbg !3715
  br label %if.end32, !dbg !3716

if.else21:                                        ; preds = %if.end18
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3717
  %20 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !3719
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !3719
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !3719
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !3719
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !3719
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !3719
  %call26 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %19, i32 6, %struct.rtx_def* %21), !dbg !3720
  %tobool27 = icmp ne %struct.rtx_def* %call26, null, !dbg !3720
  br i1 %tobool27, label %lor.lhs.false, label %if.then30, !dbg !3721

lor.lhs.false:                                    ; preds = %if.else21
  %22 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !3722
  %call28 = call i32 @side_effects_p(%struct.rtx_def* %22), !dbg !3723
  %tobool29 = icmp ne i32 %call28, 0, !dbg !3723
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !3724

if.then30:                                        ; preds = %lor.lhs.false, %if.else21
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3725
  br label %return, !dbg !3725

if.end31:                                         ; preds = %lor.lhs.false
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then20
  br label %sw.epilog, !dbg !3726

sw.default:                                       ; preds = %for.body
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3727
  br label %return, !dbg !3727

sw.epilog:                                        ; preds = %if.end32, %sw.bb
  br label %for.inc, !dbg !3728

for.inc:                                          ; preds = %sw.epilog
  %23 = load i32, i32* %i, align 4, !dbg !3729
  %inc = add nsw i32 %23, 1, !dbg !3729
  store i32 %inc, i32* %i, align 4, !dbg !3729
  br label %for.cond, !dbg !3730, !llvm.loop !3731

for.end:                                          ; preds = %for.cond
  br label %if.end33, !dbg !3733

if.end33:                                         ; preds = %for.end, %entry
  %24 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !3734
  store %struct.rtx_def* %24, %struct.rtx_def** %retval, align 8, !dbg !3735
  br label %return, !dbg !3735

return:                                           ; preds = %if.end33, %sw.default, %if.then30
  %25 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3736
  ret %struct.rtx_def* %25, !dbg !3736
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) #0 !dbg !3737 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %kind.addr = alloca i32, align 4
  %datum.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3740, metadata !DIExpression()), !dbg !3741
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !3742, metadata !DIExpression()), !dbg !3743
  store %struct.rtx_def* %datum, %struct.rtx_def** %datum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %datum.addr, metadata !3744, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !3746, metadata !DIExpression()), !dbg !3747
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3748
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !3748
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3748

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1697, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3748
  br label %cond.end, !dbg !3748

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3748
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3749
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !3749
  %bf.load = load i32, i32* %2, align 8, !dbg !3749
  %bf.clear = and i32 %bf.load, 65535, !dbg !3749
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3749
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3749

lor.lhs.false:                                    ; preds = %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3749
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !3749
  %bf.load1 = load i32, i32* %4, align 8, !dbg !3749
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3749
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3749
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3749

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3749
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3749
  %bf.load5 = load i32, i32* %6, align 8, !dbg !3749
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3749
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3749
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3749

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3749
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !3749
  %bf.load9 = load i32, i32* %8, align 8, !dbg !3749
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3749
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3749
  br i1 %cmp11, label %if.end, label %if.then, !dbg !3751

if.then:                                          ; preds = %lor.lhs.false8
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3752
  br label %return, !dbg !3752

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %cond.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !3753
  %cmp12 = icmp eq %struct.rtx_def* %9, null, !dbg !3755
  br i1 %cmp12, label %if.then13, label %if.end24, !dbg !3756

if.then13:                                        ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3757
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3757
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3757
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !3757
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3757
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3757
  store %struct.rtx_def* %11, %struct.rtx_def** %link, align 8, !dbg !3760
  br label %for.cond, !dbg !3761

for.cond:                                         ; preds = %for.inc, %if.then13
  %12 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3762
  %tobool14 = icmp ne %struct.rtx_def* %12, null, !dbg !3764
  br i1 %tobool14, label %for.body, label %for.end, !dbg !3764

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3765
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !3765
  %bf.load15 = load i32, i32* %14, align 8, !dbg !3765
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !3765
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !3765
  %15 = load i32, i32* %kind.addr, align 4, !dbg !3767
  %cmp17 = icmp eq i32 %bf.clear16, %15, !dbg !3768
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3769

if.then18:                                        ; preds = %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3770
  store %struct.rtx_def* %16, %struct.rtx_def** %retval, align 8, !dbg !3771
  br label %return, !dbg !3771

if.end19:                                         ; preds = %for.body
  br label %for.inc, !dbg !3767

for.inc:                                          ; preds = %if.end19
  %17 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3772
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3772
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !3772
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !3772
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !3772
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3772
  store %struct.rtx_def* %18, %struct.rtx_def** %link, align 8, !dbg !3773
  br label %for.cond, !dbg !3774, !llvm.loop !3775

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3777
  br label %return, !dbg !3777

if.end24:                                         ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3778
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !3778
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !3778
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 7, !dbg !3778
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !3778
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !3778
  store %struct.rtx_def* %20, %struct.rtx_def** %link, align 8, !dbg !3780
  br label %for.cond29, !dbg !3781

for.cond29:                                       ; preds = %for.inc43, %if.end24
  %21 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3782
  %tobool30 = icmp ne %struct.rtx_def* %21, null, !dbg !3784
  br i1 %tobool30, label %for.body31, label %for.end48, !dbg !3784

for.body31:                                       ; preds = %for.cond29
  %22 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3785
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !3785
  %bf.load32 = load i32, i32* %23, align 8, !dbg !3785
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !3785
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !3785
  %24 = load i32, i32* %kind.addr, align 4, !dbg !3787
  %cmp35 = icmp eq i32 %bf.clear34, %24, !dbg !3788
  br i1 %cmp35, label %land.lhs.true, label %if.end42, !dbg !3789

land.lhs.true:                                    ; preds = %for.body31
  %25 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !3790
  %26 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3791
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3791
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !3791
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !3791
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !3791
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !3791
  %cmp40 = icmp eq %struct.rtx_def* %25, %27, !dbg !3792
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !3793

if.then41:                                        ; preds = %land.lhs.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3794
  store %struct.rtx_def* %28, %struct.rtx_def** %retval, align 8, !dbg !3795
  br label %return, !dbg !3795

if.end42:                                         ; preds = %land.lhs.true, %for.body31
  br label %for.inc43, !dbg !3791

for.inc43:                                        ; preds = %if.end42
  %29 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3796
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !3796
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3796
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 1, !dbg !3796
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !3796
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !3796
  store %struct.rtx_def* %30, %struct.rtx_def** %link, align 8, !dbg !3797
  br label %for.cond29, !dbg !3798, !llvm.loop !3799

for.end48:                                        ; preds = %for.cond29
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3801
  br label %return, !dbg !3801

return:                                           ; preds = %for.end48, %if.then41, %for.end, %if.then18, %if.then
  %31 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3802
  ret %struct.rtx_def* %31, !dbg !3802
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @side_effects_p(%struct.rtx_def* %x) #0 !dbg !3803 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3806, metadata !DIExpression()), !dbg !3807
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3808
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3808
  %bf.load = load i32, i32* %1, align 8, !dbg !3808
  %bf.clear = and i32 %bf.load, 65535, !dbg !3808
  store i32 %bf.clear, i32* %code, align 4, !dbg !3807
  %2 = load i32, i32* %code, align 4, !dbg !3809
  switch i32 %2, label %sw.default [
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 46, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 138, label %sw.bb
    i32 25, label %sw.bb1
    i32 75, label %sw.bb4
    i32 74, label %sw.bb4
    i32 77, label %sw.bb4
    i32 76, label %sw.bb4
    i32 78, label %sw.bb4
    i32 79, label %sw.bb4
    i32 26, label %sw.bb4
    i32 19, label %sw.bb4
    i32 43, label %sw.bb5
    i32 16, label %sw.bb5
    i32 17, label %sw.bb5
  ], !dbg !3810

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !3811
  br label %return, !dbg !3811

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3813
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !3813
  %bf.load2 = load i32, i32* %4, align 8, !dbg !3813
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !3813
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !3813
  %cmp = icmp ne i32 %bf.clear3, 0, !dbg !3814
  %conv = zext i1 %cmp to i32, !dbg !3814
  store i32 %conv, i32* %retval, align 4, !dbg !3815
  br label %return, !dbg !3815

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !3816
  br label %return, !dbg !3816

sw.bb5:                                           ; preds = %entry, %entry, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3817
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3817
  %bf.load6 = load i32, i32* %6, align 8, !dbg !3817
  %bf.lshr7 = lshr i32 %bf.load6, 27, !dbg !3817
  %bf.clear8 = and i32 %bf.lshr7, 1, !dbg !3817
  %tobool = icmp ne i32 %bf.clear8, 0, !dbg !3817
  br i1 %tobool, label %if.then, label %if.end, !dbg !3819

if.then:                                          ; preds = %sw.bb5
  store i32 1, i32* %retval, align 4, !dbg !3820
  br label %return, !dbg !3820

if.end:                                           ; preds = %sw.bb5
  br label %sw.default, !dbg !3817

sw.default:                                       ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !3821

sw.epilog:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !3822, metadata !DIExpression()), !dbg !3824
  %7 = load i32, i32* %code, align 4, !dbg !3825
  %idxprom = sext i32 %7 to i64, !dbg !3825
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3825
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !3825
  store i8* %8, i8** %fmt, align 8, !dbg !3824
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3826, metadata !DIExpression()), !dbg !3827
  %9 = load i32, i32* %code, align 4, !dbg !3828
  %idxprom9 = sext i32 %9 to i64, !dbg !3828
  %arrayidx10 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom9, !dbg !3828
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !3828
  %conv11 = zext i8 %10 to i32, !dbg !3828
  %sub = sub nsw i32 %conv11, 1, !dbg !3830
  store i32 %sub, i32* %i, align 4, !dbg !3831
  br label %for.cond, !dbg !3832

for.cond:                                         ; preds = %for.inc52, %sw.epilog
  %11 = load i32, i32* %i, align 4, !dbg !3833
  %cmp12 = icmp sge i32 %11, 0, !dbg !3835
  br i1 %cmp12, label %for.body, label %for.end53, !dbg !3836

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %fmt, align 8, !dbg !3837
  %13 = load i32, i32* %i, align 4, !dbg !3840
  %idxprom14 = sext i32 %13 to i64, !dbg !3837
  %arrayidx15 = getelementptr inbounds i8, i8* %12, i64 %idxprom14, !dbg !3837
  %14 = load i8, i8* %arrayidx15, align 1, !dbg !3837
  %conv16 = sext i8 %14 to i32, !dbg !3837
  %cmp17 = icmp eq i32 %conv16, 101, !dbg !3841
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !3842

if.then19:                                        ; preds = %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3843
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !3843
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3843
  %16 = load i32, i32* %i, align 4, !dbg !3843
  %idxprom20 = sext i32 %16 to i64, !dbg !3843
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom20, !dbg !3843
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3843
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3843
  %call = call i32 @side_effects_p(%struct.rtx_def* %17), !dbg !3846
  %tobool22 = icmp ne i32 %call, 0, !dbg !3846
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3847

if.then23:                                        ; preds = %if.then19
  store i32 1, i32* %retval, align 4, !dbg !3848
  br label %return, !dbg !3848

if.end24:                                         ; preds = %if.then19
  br label %if.end51, !dbg !3849

if.else:                                          ; preds = %for.body
  %18 = load i8*, i8** %fmt, align 8, !dbg !3850
  %19 = load i32, i32* %i, align 4, !dbg !3852
  %idxprom25 = sext i32 %19 to i64, !dbg !3850
  %arrayidx26 = getelementptr inbounds i8, i8* %18, i64 %idxprom25, !dbg !3850
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !3850
  %conv27 = sext i8 %20 to i32, !dbg !3850
  %cmp28 = icmp eq i32 %conv27, 69, !dbg !3853
  br i1 %cmp28, label %if.then30, label %if.end50, !dbg !3854

if.then30:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3855, metadata !DIExpression()), !dbg !3857
  store i32 0, i32* %j, align 4, !dbg !3858
  br label %for.cond31, !dbg !3860

for.cond31:                                       ; preds = %for.inc, %if.then30
  %21 = load i32, i32* %j, align 4, !dbg !3861
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3863
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !3863
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !3863
  %23 = load i32, i32* %i, align 4, !dbg !3863
  %idxprom34 = sext i32 %23 to i64, !dbg !3863
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 %idxprom34, !dbg !3863
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !3863
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3863
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i32 0, i32 0, !dbg !3863
  %25 = load i32, i32* %num_elem, align 8, !dbg !3863
  %cmp36 = icmp slt i32 %21, %25, !dbg !3864
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !3865

for.body38:                                       ; preds = %for.cond31
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3866
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3866
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !3866
  %27 = load i32, i32* %i, align 4, !dbg !3866
  %idxprom41 = sext i32 %27 to i64, !dbg !3866
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 %idxprom41, !dbg !3866
  %rt_rtvec43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtvec_def**, !dbg !3866
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec43, align 8, !dbg !3866
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %28, i32 0, i32 1, !dbg !3866
  %29 = load i32, i32* %j, align 4, !dbg !3866
  %idxprom44 = sext i32 %29 to i64, !dbg !3866
  %arrayidx45 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom44, !dbg !3866
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx45, align 8, !dbg !3866
  %call46 = call i32 @side_effects_p(%struct.rtx_def* %30), !dbg !3868
  %tobool47 = icmp ne i32 %call46, 0, !dbg !3868
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !3869

if.then48:                                        ; preds = %for.body38
  store i32 1, i32* %retval, align 4, !dbg !3870
  br label %return, !dbg !3870

if.end49:                                         ; preds = %for.body38
  br label %for.inc, !dbg !3871

for.inc:                                          ; preds = %if.end49
  %31 = load i32, i32* %j, align 4, !dbg !3872
  %inc = add nsw i32 %31, 1, !dbg !3872
  store i32 %inc, i32* %j, align 4, !dbg !3872
  br label %for.cond31, !dbg !3873, !llvm.loop !3874

for.end:                                          ; preds = %for.cond31
  br label %if.end50, !dbg !3876

if.end50:                                         ; preds = %for.end, %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end24
  br label %for.inc52, !dbg !3877

for.inc52:                                        ; preds = %if.end51
  %32 = load i32, i32* %i, align 4, !dbg !3878
  %dec = add nsw i32 %32, -1, !dbg !3878
  store i32 %dec, i32* %i, align 4, !dbg !3878
  br label %for.cond, !dbg !3879, !llvm.loop !3880

for.end53:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3882
  br label %return, !dbg !3882

return:                                           ; preds = %for.end53, %if.then48, %if.then23, %if.then, %sw.bb4, %sw.bb1, %sw.bb
  %33 = load i32, i32* %retval, align 4, !dbg !3883
  ret i32 %33, !dbg !3883
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multiple_sets(%struct.rtx_def* %insn) #0 !dbg !3884 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %found = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3885, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata i32* %found, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3889, metadata !DIExpression()), !dbg !3890
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3891
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3891
  %bf.load = load i32, i32* %1, align 8, !dbg !3891
  %bf.clear = and i32 %bf.load, 65535, !dbg !3891
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3891
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3891

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3891
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3891
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3891
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3891
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3891
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3891

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3891
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3891
  %bf.load5 = load i32, i32* %5, align 8, !dbg !3891
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3891
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3891
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3891

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3891
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3891
  %bf.load9 = load i32, i32* %7, align 8, !dbg !3891
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3891
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3891
  br i1 %cmp11, label %if.end, label %if.then, !dbg !3893

if.then:                                          ; preds = %lor.lhs.false8
  store i32 0, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3895
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !3895
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3895
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !3895
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3895
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3895
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !3895
  %bf.load12 = load i32, i32* %10, align 8, !dbg !3895
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3895
  %cmp14 = icmp eq i32 %bf.clear13, 15, !dbg !3897
  br i1 %cmp14, label %if.then15, label %if.end40, !dbg !3898

if.then15:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !3899
  store i32 0, i32* %found, align 4, !dbg !3902
  br label %for.cond, !dbg !3903

for.cond:                                         ; preds = %for.inc, %if.then15
  %11 = load i32, i32* %i, align 4, !dbg !3904
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3906
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !3906
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !3906
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !3906
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3906
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3906
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !3906
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !3906
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !3906
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !3906
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3906
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i32 0, i32 0, !dbg !3906
  %15 = load i32, i32* %num_elem, align 8, !dbg !3906
  %cmp23 = icmp slt i32 %11, %15, !dbg !3907
  br i1 %cmp23, label %for.body, label %for.end, !dbg !3908

for.body:                                         ; preds = %for.cond
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3909
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !3909
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3909
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 5, !dbg !3909
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !3909
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3909
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3909
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !3909
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !3909
  %rt_rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !3909
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec31, align 8, !dbg !3909
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i32 0, i32 1, !dbg !3909
  %19 = load i32, i32* %i, align 4, !dbg !3909
  %idxprom = sext i32 %19 to i64, !dbg !3909
  %arrayidx32 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !3909
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !3909
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !3909
  %bf.load33 = load i32, i32* %21, align 8, !dbg !3909
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !3909
  %cmp35 = icmp eq i32 %bf.clear34, 23, !dbg !3911
  br i1 %cmp35, label %if.then36, label %if.end39, !dbg !3912

if.then36:                                        ; preds = %for.body
  %22 = load i32, i32* %found, align 4, !dbg !3913
  %tobool = icmp ne i32 %22, 0, !dbg !3913
  br i1 %tobool, label %if.then37, label %if.else, !dbg !3916

if.then37:                                        ; preds = %if.then36
  store i32 1, i32* %retval, align 4, !dbg !3917
  br label %return, !dbg !3917

if.else:                                          ; preds = %if.then36
  store i32 1, i32* %found, align 4, !dbg !3918
  br label %if.end38

if.end38:                                         ; preds = %if.else
  br label %if.end39, !dbg !3919

if.end39:                                         ; preds = %if.end38, %for.body
  br label %for.inc, !dbg !3920

for.inc:                                          ; preds = %if.end39
  %23 = load i32, i32* %i, align 4, !dbg !3921
  %inc = add nsw i32 %23, 1, !dbg !3921
  store i32 %inc, i32* %i, align 4, !dbg !3921
  br label %for.cond, !dbg !3922, !llvm.loop !3923

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !3925

if.end40:                                         ; preds = %for.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3926
  br label %return, !dbg !3926

return:                                           ; preds = %if.end40, %if.then37, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !3927
  ret i32 %24, !dbg !3927
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_noop_p(%struct.rtx_def* %set) #0 !dbg !3928 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set.addr, metadata !3929, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !3931, metadata !DIExpression()), !dbg !3932
  %0 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8, !dbg !3933
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3933
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3933
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3933
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3933
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3933
  store %struct.rtx_def* %1, %struct.rtx_def** %src, align 8, !dbg !3932
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst, metadata !3934, metadata !DIExpression()), !dbg !3935
  %2 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8, !dbg !3936
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3936
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !3936
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !3936
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3936
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3936
  store %struct.rtx_def* %3, %struct.rtx_def** %dst, align 8, !dbg !3935
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3937
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3939
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !3940
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3941

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3942
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3943
  %cmp5 = icmp eq %struct.rtx_def* %6, %7, !dbg !3944
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3945

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3946
  br label %return, !dbg !3946

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3947
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3947
  %bf.load = load i32, i32* %9, align 8, !dbg !3947
  %bf.clear = and i32 %bf.load, 65535, !dbg !3947
  %cmp6 = icmp eq i32 %bf.clear, 43, !dbg !3947
  br i1 %cmp6, label %land.lhs.true7, label %if.end14, !dbg !3949

land.lhs.true7:                                   ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3950
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3950
  %bf.load8 = load i32, i32* %11, align 8, !dbg !3950
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !3950
  %cmp10 = icmp eq i32 %bf.clear9, 43, !dbg !3950
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !3951

if.then11:                                        ; preds = %land.lhs.true7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3952
  %13 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3953
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %13), !dbg !3954
  %tobool = icmp ne i32 %call, 0, !dbg !3954
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3955

land.rhs:                                         ; preds = %if.then11
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3956
  %call12 = call i32 @side_effects_p(%struct.rtx_def* %14), !dbg !3957
  %tobool13 = icmp ne i32 %call12, 0, !dbg !3958
  %lnot = xor i1 %tobool13, true, !dbg !3958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then11
  %15 = phi i1 [ false, %if.then11 ], [ %lnot, %land.rhs ], !dbg !3959
  %land.ext = zext i1 %15 to i32, !dbg !3955
  store i32 %land.ext, i32* %retval, align 4, !dbg !3960
  br label %return, !dbg !3960

if.end14:                                         ; preds = %land.lhs.true7, %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3961
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !3961
  %bf.load15 = load i32, i32* %17, align 8, !dbg !3961
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3961
  %cmp17 = icmp eq i32 %bf.clear16, 120, !dbg !3963
  br i1 %cmp17, label %if.then18, label %if.end37, !dbg !3964

if.then18:                                        ; preds = %if.end14
  %18 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3965
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3965
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !3965
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 0, !dbg !3965
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3965
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3965
  %20 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3966
  %call23 = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %20), !dbg !3967
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3967
  br i1 %tobool24, label %land.lhs.true25, label %land.end35, !dbg !3968

land.lhs.true25:                                  ; preds = %if.then18
  %21 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3969
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !3969
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !3969
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 2, !dbg !3969
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !3969
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !3969
  %23 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3970
  %cmp30 = icmp eq %struct.rtx_def* %22, %23, !dbg !3971
  br i1 %cmp30, label %land.rhs31, label %land.end35, !dbg !3972

land.rhs31:                                       ; preds = %land.lhs.true25
  %24 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3973
  %call32 = call i32 @side_effects_p(%struct.rtx_def* %24), !dbg !3974
  %tobool33 = icmp ne i32 %call32, 0, !dbg !3975
  %lnot34 = xor i1 %tobool33, true, !dbg !3975
  br label %land.end35

land.end35:                                       ; preds = %land.rhs31, %land.lhs.true25, %if.then18
  %25 = phi i1 [ false, %land.lhs.true25 ], [ false, %if.then18 ], [ %lnot34, %land.rhs31 ], !dbg !3976
  %land.ext36 = zext i1 %25 to i32, !dbg !3972
  store i32 %land.ext36, i32* %retval, align 4, !dbg !3977
  br label %return, !dbg !3977

if.end37:                                         ; preds = %if.end14
  %26 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3978
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !3978
  %bf.load38 = load i32, i32* %27, align 8, !dbg !3978
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !3978
  %cmp40 = icmp eq i32 %bf.clear39, 40, !dbg !3980
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !3981

if.then41:                                        ; preds = %if.end37
  %28 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3982
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !3982
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !3982
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !3982
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !3982
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !3982
  store %struct.rtx_def* %29, %struct.rtx_def** %dst, align 8, !dbg !3983
  br label %if.end46, !dbg !3984

if.end46:                                         ; preds = %if.then41, %if.end37
  %30 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3985
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !3985
  %bf.load47 = load i32, i32* %31, align 8, !dbg !3985
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !3985
  %cmp49 = icmp eq i32 %bf.clear48, 39, !dbg !3987
  br i1 %cmp49, label %land.lhs.true50, label %if.end73, !dbg !3988

land.lhs.true50:                                  ; preds = %if.end46
  %32 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3989
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !3989
  %bf.load51 = load i32, i32* %33, align 8, !dbg !3989
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !3989
  %cmp53 = icmp eq i32 %bf.clear52, 39, !dbg !3990
  br i1 %cmp53, label %if.then54, label %if.end73, !dbg !3991

if.then54:                                        ; preds = %land.lhs.true50
  %34 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3992
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !3992
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !3992
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 1, !dbg !3992
  %rt_uint = bitcast %union.rtunion_def* %arrayidx57 to i32*, !dbg !3992
  %35 = load i32, i32* %rt_uint, align 8, !dbg !3992
  %36 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !3995
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !3995
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !3995
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 1, !dbg !3995
  %rt_uint61 = bitcast %union.rtunion_def* %arrayidx60 to i32*, !dbg !3995
  %37 = load i32, i32* %rt_uint61, align 8, !dbg !3995
  %cmp62 = icmp ne i32 %35, %37, !dbg !3996
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !3997

if.then63:                                        ; preds = %if.then54
  store i32 0, i32* %retval, align 4, !dbg !3998
  br label %return, !dbg !3998

if.end64:                                         ; preds = %if.then54
  %38 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !3999
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !3999
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !3999
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 0, !dbg !3999
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !3999
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !3999
  store %struct.rtx_def* %39, %struct.rtx_def** %src, align 8, !dbg !4000
  %40 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !4001
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4001
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !4001
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !4001
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !4001
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !4001
  store %struct.rtx_def* %41, %struct.rtx_def** %dst, align 8, !dbg !4002
  br label %if.end73, !dbg !4003

if.end73:                                         ; preds = %if.end64, %land.lhs.true50, %if.end46
  %42 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4004
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !4004
  %bf.load74 = load i32, i32* %43, align 8, !dbg !4004
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !4004
  %cmp76 = icmp eq i32 %bf.clear75, 37, !dbg !4004
  br i1 %cmp76, label %land.lhs.true77, label %land.end85, !dbg !4005

land.lhs.true77:                                  ; preds = %if.end73
  %44 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !4006
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !4006
  %bf.load78 = load i32, i32* %45, align 8, !dbg !4006
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4006
  %cmp80 = icmp eq i32 %bf.clear79, 37, !dbg !4006
  br i1 %cmp80, label %land.rhs81, label %land.end85, !dbg !4007

land.rhs81:                                       ; preds = %land.lhs.true77
  %46 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4008
  %call82 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !4008
  %47 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !4009
  %call83 = call i32 @rhs_regno(%struct.rtx_def* %47), !dbg !4009
  %cmp84 = icmp eq i32 %call82, %call83, !dbg !4010
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true77, %if.end73
  %48 = phi i1 [ false, %land.lhs.true77 ], [ false, %if.end73 ], [ %cmp84, %land.rhs81 ], !dbg !4011
  %land.ext86 = zext i1 %48 to i32, !dbg !4007
  store i32 %land.ext86, i32* %retval, align 4, !dbg !4012
  br label %return, !dbg !4012

return:                                           ; preds = %land.end85, %if.then63, %land.end35, %land.end, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !4013
  ret i32 %49, !dbg !4013
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @noop_move_p(%struct.rtx_def* %insn) #0 !dbg !4014 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4015, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !4017, metadata !DIExpression()), !dbg !4018
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4019
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4019
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4019
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4019
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4019
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4019
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !4018
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4020
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4020
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4020
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 6, !dbg !4020
  %rt_int = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !4020
  %3 = load i32, i32* %rt_int, align 8, !dbg !4020
  %cmp = icmp eq i32 %3, 2147483647, !dbg !4022
  br i1 %cmp, label %if.then, label %if.end, !dbg !4023

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4024
  br label %return, !dbg !4024

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4025
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %4, i32 4, %struct.rtx_def* null), !dbg !4027
  %tobool = icmp ne %struct.rtx_def* %call, null, !dbg !4027
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !4028

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4029
  br label %return, !dbg !4029

if.end5:                                          ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4030
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !4030
  %bf.load = load i32, i32* %6, align 8, !dbg !4030
  %bf.clear = and i32 %bf.load, 65535, !dbg !4030
  %cmp6 = icmp eq i32 %bf.clear, 23, !dbg !4032
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !4033

land.lhs.true:                                    ; preds = %if.end5
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4034
  %call7 = call i32 @set_noop_p(%struct.rtx_def* %7), !dbg !4035
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4035
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !4036

if.then9:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4037
  br label %return, !dbg !4037

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4038
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4038
  %bf.load11 = load i32, i32* %9, align 8, !dbg !4038
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !4038
  %cmp13 = icmp eq i32 %bf.clear12, 15, !dbg !4040
  br i1 %cmp13, label %if.then14, label %if.end40, !dbg !4041

if.then14:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4042, metadata !DIExpression()), !dbg !4044
  store i32 0, i32* %i, align 4, !dbg !4045
  br label %for.cond, !dbg !4047

for.cond:                                         ; preds = %for.inc, %if.then14
  %10 = load i32, i32* %i, align 4, !dbg !4048
  %11 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4050
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4050
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !4050
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !4050
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !4050
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4050
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i32 0, i32 0, !dbg !4050
  %13 = load i32, i32* %num_elem, align 8, !dbg !4050
  %cmp18 = icmp slt i32 %10, %13, !dbg !4051
  br i1 %cmp18, label %for.body, label %for.end, !dbg !4052

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !4053, metadata !DIExpression()), !dbg !4055
  %14 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4056
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4056
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !4056
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 0, !dbg !4056
  %rt_rtvec22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**, !dbg !4056
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec22, align 8, !dbg !4056
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !4056
  %16 = load i32, i32* %i, align 4, !dbg !4056
  %idxprom = sext i32 %16 to i64, !dbg !4056
  %arrayidx23 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4056
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8, !dbg !4056
  store %struct.rtx_def* %17, %struct.rtx_def** %tem, align 8, !dbg !4055
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4057
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !4057
  %bf.load24 = load i32, i32* %19, align 8, !dbg !4057
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !4057
  %cmp26 = icmp eq i32 %bf.clear25, 24, !dbg !4059
  br i1 %cmp26, label %if.then30, label %lor.lhs.false, !dbg !4060

lor.lhs.false:                                    ; preds = %for.body
  %20 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4061
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4061
  %bf.load27 = load i32, i32* %21, align 8, !dbg !4061
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !4061
  %cmp29 = icmp eq i32 %bf.clear28, 25, !dbg !4062
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !4063

if.then30:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !4064

if.end31:                                         ; preds = %lor.lhs.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4065
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4065
  %bf.load32 = load i32, i32* %23, align 8, !dbg !4065
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4065
  %cmp34 = icmp ne i32 %bf.clear33, 23, !dbg !4067
  br i1 %cmp34, label %if.then38, label %lor.lhs.false35, !dbg !4068

lor.lhs.false35:                                  ; preds = %if.end31
  %24 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4069
  %call36 = call i32 @set_noop_p(%struct.rtx_def* %24), !dbg !4070
  %tobool37 = icmp ne i32 %call36, 0, !dbg !4070
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !4071

if.then38:                                        ; preds = %lor.lhs.false35, %if.end31
  store i32 0, i32* %retval, align 4, !dbg !4072
  br label %return, !dbg !4072

if.end39:                                         ; preds = %lor.lhs.false35
  br label %for.inc, !dbg !4073

for.inc:                                          ; preds = %if.end39, %if.then30
  %25 = load i32, i32* %i, align 4, !dbg !4074
  %inc = add nsw i32 %25, 1, !dbg !4074
  store i32 %inc, i32* %i, align 4, !dbg !4074
  br label %for.cond, !dbg !4075, !llvm.loop !4076

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !4078
  br label %return, !dbg !4078

if.end40:                                         ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !4079
  br label %return, !dbg !4079

return:                                           ; preds = %if.end40, %for.end, %if.then38, %if.then9, %if.then4, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !4080
  ret i32 %26, !dbg !4080
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_last_value(%struct.rtx_def* %x, %struct.rtx_def** %pinsn, %struct.rtx_def* %valid_to, i32 %allow_hwreg) #0 !dbg !4081 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %pinsn.addr = alloca %struct.rtx_def**, align 8
  %valid_to.addr = alloca %struct.rtx_def*, align 8
  %allow_hwreg.addr = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  store %struct.rtx_def** %pinsn, %struct.rtx_def*** %pinsn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %pinsn.addr, metadata !4086, metadata !DIExpression()), !dbg !4087
  store %struct.rtx_def* %valid_to, %struct.rtx_def** %valid_to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %valid_to.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store i32 %allow_hwreg, i32* %allow_hwreg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allow_hwreg.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %p, metadata !4092, metadata !DIExpression()), !dbg !4093
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %pinsn.addr, align 8, !dbg !4094
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !4094
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !4094
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4094
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !4094
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4094
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4094
  store %struct.rtx_def* %2, %struct.rtx_def** %p, align 8, !dbg !4096
  br label %for.cond, !dbg !4097

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4098
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !4098
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4100

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4101
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4101
  %bf.load = load i32, i32* %5, align 8, !dbg !4101
  %bf.clear = and i32 %bf.load, 65535, !dbg !4101
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !4101
  %lnot = xor i1 %cmp, true, !dbg !4102
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !4103
  br i1 %6, label %for.body, label %for.end, !dbg !4104

for.body:                                         ; preds = %land.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4105
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4105
  %bf.load1 = load i32, i32* %8, align 8, !dbg !4105
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4105
  %cmp3 = icmp eq i32 %bf.clear2, 8, !dbg !4105
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4105

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4105
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4105
  %bf.load4 = load i32, i32* %10, align 8, !dbg !4105
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !4105
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !4105
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !4105

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4105
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4105
  %bf.load8 = load i32, i32* %12, align 8, !dbg !4105
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4105
  %cmp10 = icmp eq i32 %bf.clear9, 9, !dbg !4105
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !4105

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4105
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !4105
  %bf.load12 = load i32, i32* %14, align 8, !dbg !4105
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4105
  %cmp14 = icmp eq i32 %bf.clear13, 10, !dbg !4105
  br i1 %cmp14, label %if.then, label %if.end100, !dbg !4107

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false7, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !4108, metadata !DIExpression()), !dbg !4110
  %15 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4111
  %bf.load15 = load i32, i32* %16, align 8, !dbg !4111
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4111
  %cmp17 = icmp eq i32 %bf.clear16, 8, !dbg !4111
  br i1 %cmp17, label %cond.true, label %lor.lhs.false18, !dbg !4111

lor.lhs.false18:                                  ; preds = %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4111
  %bf.load19 = load i32, i32* %18, align 8, !dbg !4111
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4111
  %cmp21 = icmp eq i32 %bf.clear20, 7, !dbg !4111
  br i1 %cmp21, label %cond.true, label %lor.lhs.false22, !dbg !4111

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %19 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !4111
  %bf.load23 = load i32, i32* %20, align 8, !dbg !4111
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4111
  %cmp25 = icmp eq i32 %bf.clear24, 9, !dbg !4111
  br i1 %cmp25, label %cond.true, label %lor.lhs.false26, !dbg !4111

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %21 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !4111
  %bf.load27 = load i32, i32* %22, align 8, !dbg !4111
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !4111
  %cmp29 = icmp eq i32 %bf.clear28, 10, !dbg !4111
  br i1 %cmp29, label %cond.true, label %cond.false46, !dbg !4111

cond.true:                                        ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false18, %if.then
  %23 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4111
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !4111
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 5, !dbg !4111
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !4111
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !4111
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !4111
  %bf.load34 = load i32, i32* %25, align 8, !dbg !4111
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !4111
  %cmp36 = icmp eq i32 %bf.clear35, 23, !dbg !4111
  br i1 %cmp36, label %cond.true37, label %cond.false, !dbg !4111

cond.true37:                                      ; preds = %cond.true
  %26 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !4111
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !4111
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 5, !dbg !4111
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !4111
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4111
  br label %cond.end, !dbg !4111

cond.false:                                       ; preds = %cond.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %29 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4111
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !4111
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !4111
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 5, !dbg !4111
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !4111
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4111
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %28, %struct.rtx_def* %30), !dbg !4111
  br label %cond.end, !dbg !4111

cond.end:                                         ; preds = %cond.false, %cond.true37
  %cond = phi %struct.rtx_def* [ %27, %cond.true37 ], [ %call, %cond.false ], !dbg !4111
  br label %cond.end47, !dbg !4111

cond.false46:                                     ; preds = %lor.lhs.false26
  br label %cond.end47, !dbg !4111

cond.end47:                                       ; preds = %cond.false46, %cond.end
  %cond48 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false46 ], !dbg !4111
  store %struct.rtx_def* %cond48, %struct.rtx_def** %set, align 8, !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4112, metadata !DIExpression()), !dbg !4113
  %31 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4114
  %call49 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %31, i32 4, %struct.rtx_def* null), !dbg !4115
  store %struct.rtx_def* %call49, %struct.rtx_def** %note, align 8, !dbg !4113
  %32 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4116
  %tobool50 = icmp ne %struct.rtx_def* %32, null, !dbg !4116
  br i1 %tobool50, label %land.lhs.true, label %if.end95, !dbg !4118

land.lhs.true:                                    ; preds = %cond.end47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4119
  %34 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4120
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !4120
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !4120
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !4120
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !4120
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !4120
  %call55 = call i32 @rtx_equal_p(%struct.rtx_def* %33, %struct.rtx_def* %35), !dbg !4121
  %tobool56 = icmp ne i32 %call55, 0, !dbg !4121
  br i1 %tobool56, label %if.then57, label %if.end95, !dbg !4122

if.then57:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !4123, metadata !DIExpression()), !dbg !4125
  %36 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4126
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !4126
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !4126
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 1, !dbg !4126
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !4126
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !4126
  store %struct.rtx_def* %37, %struct.rtx_def** %src, align 8, !dbg !4125
  %38 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4127
  %tobool62 = icmp ne %struct.rtx_def* %38, null, !dbg !4127
  br i1 %tobool62, label %land.lhs.true63, label %if.end, !dbg !4129

land.lhs.true63:                                  ; preds = %if.then57
  %39 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4130
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !4130
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !4130
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !4130
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4130
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !4130
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !4130
  %bf.load68 = load i32, i32* %41, align 8, !dbg !4130
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !4130
  %cmp70 = icmp ne i32 %bf.clear69, 3, !dbg !4131
  br i1 %cmp70, label %if.then71, label %if.end, !dbg !4132

if.then71:                                        ; preds = %land.lhs.true63
  %42 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4133
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !4133
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !4133
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !4133
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !4133
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !4133
  store %struct.rtx_def* %43, %struct.rtx_def** %src, align 8, !dbg !4134
  br label %if.end, !dbg !4135

if.end:                                           ; preds = %if.then71, %land.lhs.true63, %if.then57
  %44 = load %struct.rtx_def*, %struct.rtx_def** %valid_to.addr, align 8, !dbg !4136
  %cmp76 = icmp eq %struct.rtx_def* %44, null, !dbg !4138
  br i1 %cmp76, label %land.lhs.true84, label %lor.lhs.false77, !dbg !4139

lor.lhs.false77:                                  ; preds = %if.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4140
  %46 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4141
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4141
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !4141
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 1, !dbg !4141
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !4141
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !4141
  %48 = load %struct.rtx_def*, %struct.rtx_def** %valid_to.addr, align 8, !dbg !4142
  %call82 = call i32 @modified_between_p(%struct.rtx_def* %45, %struct.rtx_def* %47, %struct.rtx_def* %48), !dbg !4143
  %tobool83 = icmp ne i32 %call82, 0, !dbg !4143
  br i1 %tobool83, label %if.end94, label %land.lhs.true84, !dbg !4144

land.lhs.true84:                                  ; preds = %lor.lhs.false77, %if.end
  %49 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4145
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !4145
  %bf.load85 = load i32, i32* %50, align 8, !dbg !4145
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !4145
  %cmp87 = icmp eq i32 %bf.clear86, 37, !dbg !4145
  br i1 %cmp87, label %land.lhs.true88, label %if.then93, !dbg !4146

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %51 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4147
  %call89 = call i32 @rhs_regno(%struct.rtx_def* %51), !dbg !4147
  %cmp90 = icmp ult i32 %call89, 53, !dbg !4148
  br i1 %cmp90, label %lor.lhs.false91, label %if.then93, !dbg !4149

lor.lhs.false91:                                  ; preds = %land.lhs.true88
  %52 = load i32, i32* %allow_hwreg.addr, align 4, !dbg !4150
  %tobool92 = icmp ne i32 %52, 0, !dbg !4150
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !4151

if.then93:                                        ; preds = %lor.lhs.false91, %land.lhs.true88, %land.lhs.true84
  %53 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4152
  %54 = load %struct.rtx_def**, %struct.rtx_def*** %pinsn.addr, align 8, !dbg !4154
  store %struct.rtx_def* %53, %struct.rtx_def** %54, align 8, !dbg !4155
  %55 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !4156
  store %struct.rtx_def* %55, %struct.rtx_def** %retval, align 8, !dbg !4157
  br label %return, !dbg !4157

if.end94:                                         ; preds = %lor.lhs.false91, %lor.lhs.false77
  br label %if.end95, !dbg !4158

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %cond.end47
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4159
  %57 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4161
  %call96 = call i32 @reg_set_p(%struct.rtx_def* %56, %struct.rtx_def* %57), !dbg !4162
  %tobool97 = icmp ne i32 %call96, 0, !dbg !4162
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !4163

if.then98:                                        ; preds = %if.end95
  br label %for.end, !dbg !4164

if.end99:                                         ; preds = %if.end95
  br label %if.end100, !dbg !4165

if.end100:                                        ; preds = %if.end99, %lor.lhs.false11
  br label %for.inc, !dbg !4105

for.inc:                                          ; preds = %if.end100
  %58 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !4166
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !4166
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !4166
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 1, !dbg !4166
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !4166
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !4166
  store %struct.rtx_def* %59, %struct.rtx_def** %p, align 8, !dbg !4167
  br label %for.cond, !dbg !4168, !llvm.loop !4169

for.end:                                          ; preds = %if.then98, %land.end
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4171
  store %struct.rtx_def* %60, %struct.rtx_def** %retval, align 8, !dbg !4172
  br label %return, !dbg !4172

return:                                           ; preds = %for.end, %if.then93
  %61 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4173
  ret %struct.rtx_def* %61, !dbg !4173
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %x, %struct.rtx_def** %loc) #0 !dbg !4174 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %endregno.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  %x_regno = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %inner_regno = alloca i32, align 4
  %inner_endregno = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  store i32 %endregno, i32* %endregno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endregno.addr, metadata !4179, metadata !DIExpression()), !dbg !4180
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4181, metadata !DIExpression()), !dbg !4182
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4185, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata i32* %x_regno, metadata !4187, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4189, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4191, metadata !DIExpression()), !dbg !4192
  br label %repeat, !dbg !4193

repeat:                                           ; preds = %if.then153, %if.end127, %entry
  call void @llvm.dbg.label(metadata !4194), !dbg !4195
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4196
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !4198
  br i1 %cmp, label %if.then, label %if.end, !dbg !4199

if.then:                                          ; preds = %repeat
  store i32 0, i32* %retval, align 4, !dbg !4200
  br label %return, !dbg !4200

if.end:                                           ; preds = %repeat
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4201
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !4201
  %bf.load = load i32, i32* %2, align 8, !dbg !4201
  %bf.clear = and i32 %bf.load, 65535, !dbg !4201
  store i32 %bf.clear, i32* %code, align 4, !dbg !4202
  %3 = load i32, i32* %code, align 4, !dbg !4203
  switch i32 %3, label %sw.default [
    i32 37, label %sw.bb
    i32 39, label %sw.bb19
    i32 25, label %sw.bb45
    i32 23, label %sw.bb45
  ], !dbg !4204

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4205
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !4205
  store i32 %call, i32* %x_regno, align 4, !dbg !4207
  %5 = load i32, i32* %x_regno, align 4, !dbg !4208
  %cmp1 = icmp eq i32 %5, 7, !dbg !4210
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !4211

lor.lhs.false:                                    ; preds = %sw.bb
  %6 = load i32, i32* %x_regno, align 4, !dbg !4212
  %cmp2 = icmp eq i32 %6, 16, !dbg !4213
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false3, !dbg !4214

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load i32, i32* %x_regno, align 4, !dbg !4215
  %cmp4 = icmp eq i32 %7, 20, !dbg !4216
  br i1 %cmp4, label %land.lhs.true, label %if.end9, !dbg !4217

land.lhs.true:                                    ; preds = %lor.lhs.false3, %lor.lhs.false, %sw.bb
  %8 = load i32, i32* %regno.addr, align 4, !dbg !4218
  %cmp5 = icmp uge i32 %8, 53, !dbg !4219
  br i1 %cmp5, label %land.lhs.true6, label %if.end9, !dbg !4220

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* %regno.addr, align 4, !dbg !4221
  %cmp7 = icmp ule i32 %9, 57, !dbg !4222
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4223

if.then8:                                         ; preds = %land.lhs.true6
  store i32 1, i32* %retval, align 4, !dbg !4224
  br label %return, !dbg !4224

if.end9:                                          ; preds = %land.lhs.true6, %land.lhs.true, %lor.lhs.false3
  %10 = load i32, i32* %endregno.addr, align 4, !dbg !4225
  %11 = load i32, i32* %x_regno, align 4, !dbg !4226
  %cmp10 = icmp ugt i32 %10, %11, !dbg !4227
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !4228

land.rhs:                                         ; preds = %if.end9
  %12 = load i32, i32* %regno.addr, align 4, !dbg !4229
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4230
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !4230
  %cmp12 = icmp ult i32 %call11, 53, !dbg !4230
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !4230

cond.true:                                        ; preds = %land.rhs
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4230
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !4230
  %bf.load13 = load i32, i32* %15, align 8, !dbg !4230
  %bf.lshr = lshr i32 %bf.load13, 16, !dbg !4230
  %bf.clear14 = and i32 %bf.lshr, 255, !dbg !4230
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4230
  %call15 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !4230
  %call16 = call i32 @end_hard_regno(i32 %bf.clear14, i32 %call15), !dbg !4230
  br label %cond.end, !dbg !4230

cond.false:                                       ; preds = %land.rhs
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4230
  %call17 = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !4230
  %add = add i32 %call17, 1, !dbg !4230
  br label %cond.end, !dbg !4230

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call16, %cond.true ], [ %add, %cond.false ], !dbg !4230
  %cmp18 = icmp ult i32 %12, %cond, !dbg !4231
  br label %land.end

land.end:                                         ; preds = %cond.end, %if.end9
  %18 = phi i1 [ false, %if.end9 ], [ %cmp18, %cond.end ], !dbg !4232
  %land.ext = zext i1 %18 to i32, !dbg !4228
  store i32 %land.ext, i32* %retval, align 4, !dbg !4233
  br label %return, !dbg !4233

sw.bb19:                                          ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4234
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !4234
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4234
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4234
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4234
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4234
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4234
  %bf.load20 = load i32, i32* %21, align 8, !dbg !4234
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !4234
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !4234
  br i1 %cmp22, label %land.lhs.true23, label %if.end44, !dbg !4236

land.lhs.true23:                                  ; preds = %sw.bb19
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4237
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !4237
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !4237
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !4237
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !4237
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4237
  %call28 = call i32 @rhs_regno(%struct.rtx_def* %23), !dbg !4237
  %cmp29 = icmp ult i32 %call28, 53, !dbg !4238
  br i1 %cmp29, label %if.then30, label %if.end44, !dbg !4239

if.then30:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata i32* %inner_regno, metadata !4240, metadata !DIExpression()), !dbg !4242
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4243
  %call31 = call i32 @subreg_regno(%struct.rtx_def* %24), !dbg !4244
  store i32 %call31, i32* %inner_regno, align 4, !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %inner_endregno, metadata !4245, metadata !DIExpression()), !dbg !4246
  %25 = load i32, i32* %inner_regno, align 4, !dbg !4247
  %26 = load i32, i32* %inner_regno, align 4, !dbg !4248
  %cmp32 = icmp ult i32 %26, 53, !dbg !4249
  br i1 %cmp32, label %cond.true33, label %cond.false35, !dbg !4248

cond.true33:                                      ; preds = %if.then30
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4250
  %call34 = call i32 @subreg_nregs(%struct.rtx_def* %27), !dbg !4251
  br label %cond.end36, !dbg !4248

cond.false35:                                     ; preds = %if.then30
  br label %cond.end36, !dbg !4248

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %call34, %cond.true33 ], [ 1, %cond.false35 ], !dbg !4248
  %add38 = add i32 %25, %cond37, !dbg !4252
  store i32 %add38, i32* %inner_endregno, align 4, !dbg !4246
  %28 = load i32, i32* %endregno.addr, align 4, !dbg !4253
  %29 = load i32, i32* %inner_regno, align 4, !dbg !4254
  %cmp39 = icmp ugt i32 %28, %29, !dbg !4255
  br i1 %cmp39, label %land.rhs40, label %land.end42, !dbg !4256

land.rhs40:                                       ; preds = %cond.end36
  %30 = load i32, i32* %regno.addr, align 4, !dbg !4257
  %31 = load i32, i32* %inner_endregno, align 4, !dbg !4258
  %cmp41 = icmp ult i32 %30, %31, !dbg !4259
  br label %land.end42

land.end42:                                       ; preds = %land.rhs40, %cond.end36
  %32 = phi i1 [ false, %cond.end36 ], [ %cmp41, %land.rhs40 ], !dbg !4260
  %land.ext43 = zext i1 %32 to i32, !dbg !4256
  store i32 %land.ext43, i32* %retval, align 4, !dbg !4261
  br label %return, !dbg !4261

if.end44:                                         ; preds = %land.lhs.true23, %sw.bb19
  br label %sw.epilog, !dbg !4262

sw.bb45:                                          ; preds = %if.end, %if.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4263
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !4263
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !4263
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !4263
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !4263
  %34 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4265
  %cmp50 = icmp ne %struct.rtx_def** %rt_rtx49, %34, !dbg !4266
  br i1 %cmp50, label %land.lhs.true51, label %if.end118, !dbg !4267

land.lhs.true51:                                  ; preds = %sw.bb45
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4268
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !4268
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !4268
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !4268
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !4268
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !4268
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !4268
  %bf.load56 = load i32, i32* %37, align 8, !dbg !4268
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !4268
  %cmp58 = icmp eq i32 %bf.clear57, 39, !dbg !4269
  br i1 %cmp58, label %land.lhs.true59, label %lor.lhs.false102, !dbg !4270

land.lhs.true59:                                  ; preds = %land.lhs.true51
  %38 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4271
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4272
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !4272
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !4272
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 0, !dbg !4272
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !4272
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !4272
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4272
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !4272
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !4272
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4272
  %cmp68 = icmp ne %struct.rtx_def** %38, %rt_rtx67, !dbg !4273
  br i1 %cmp68, label %land.lhs.true69, label %lor.lhs.false102, !dbg !4274

land.lhs.true69:                                  ; preds = %land.lhs.true59
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4275
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !4275
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !4275
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !4275
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !4275
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !4275
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !4275
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !4275
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 0, !dbg !4275
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !4275
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !4275
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !4275
  %bf.load78 = load i32, i32* %44, align 8, !dbg !4275
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4275
  %cmp80 = icmp eq i32 %bf.clear79, 37, !dbg !4275
  br i1 %cmp80, label %land.lhs.true81, label %lor.lhs.false102, !dbg !4276

land.lhs.true81:                                  ; preds = %land.lhs.true69
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4277
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !4277
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !4277
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !4277
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !4277
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !4277
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4277
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !4277
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 0, !dbg !4277
  %rt_rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !4277
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !4277
  %call90 = call i32 @rhs_regno(%struct.rtx_def* %47), !dbg !4277
  %cmp91 = icmp uge i32 %call90, 53, !dbg !4278
  br i1 %cmp91, label %land.lhs.true92, label %lor.lhs.false102, !dbg !4279

land.lhs.true92:                                  ; preds = %land.lhs.true81
  %48 = load i32, i32* %regno.addr, align 4, !dbg !4280
  %49 = load i32, i32* %endregno.addr, align 4, !dbg !4281
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4282
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !4282
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !4282
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !4282
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !4282
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !4282
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !4282
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !4282
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !4282
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !4282
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !4282
  %53 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4283
  %call101 = call i32 @refers_to_regno_p(i32 %48, i32 %49, %struct.rtx_def* %52, %struct.rtx_def** %53), !dbg !4284
  %tobool = icmp ne i32 %call101, 0, !dbg !4284
  br i1 %tobool, label %if.then117, label %lor.lhs.false102, !dbg !4285

lor.lhs.false102:                                 ; preds = %land.lhs.true92, %land.lhs.true81, %land.lhs.true69, %land.lhs.true59, %land.lhs.true51
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4286
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !4286
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !4286
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 0, !dbg !4286
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !4286
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !4286
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !4286
  %bf.load107 = load i32, i32* %56, align 8, !dbg !4286
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !4286
  %cmp109 = icmp eq i32 %bf.clear108, 37, !dbg !4286
  br i1 %cmp109, label %if.end118, label %land.lhs.true110, !dbg !4287

land.lhs.true110:                                 ; preds = %lor.lhs.false102
  %57 = load i32, i32* %regno.addr, align 4, !dbg !4288
  %58 = load i32, i32* %endregno.addr, align 4, !dbg !4289
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4290
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !4290
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !4290
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 0, !dbg !4290
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !4290
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !4290
  %61 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4291
  %call115 = call i32 @refers_to_regno_p(i32 %57, i32 %58, %struct.rtx_def* %60, %struct.rtx_def** %61), !dbg !4292
  %tobool116 = icmp ne i32 %call115, 0, !dbg !4292
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !4293

if.then117:                                       ; preds = %land.lhs.true110, %land.lhs.true92
  store i32 1, i32* %retval, align 4, !dbg !4294
  br label %return, !dbg !4294

if.end118:                                        ; preds = %land.lhs.true110, %lor.lhs.false102, %sw.bb45
  %62 = load i32, i32* %code, align 4, !dbg !4295
  %cmp119 = icmp eq i32 %62, 25, !dbg !4297
  br i1 %cmp119, label %if.then126, label %lor.lhs.false120, !dbg !4298

lor.lhs.false120:                                 ; preds = %if.end118
  %63 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4299
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4300
  %u121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !4300
  %fld122 = bitcast %union.u* %u121 to [1 x %union.rtunion_def]*, !dbg !4300
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i64 0, i64 1, !dbg !4300
  %rt_rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**, !dbg !4300
  %cmp125 = icmp eq %struct.rtx_def** %63, %rt_rtx124, !dbg !4301
  br i1 %cmp125, label %if.then126, label %if.end127, !dbg !4302

if.then126:                                       ; preds = %lor.lhs.false120, %if.end118
  store i32 0, i32* %retval, align 4, !dbg !4303
  br label %return, !dbg !4303

if.end127:                                        ; preds = %lor.lhs.false120
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4304
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !4304
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !4304
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 1, !dbg !4304
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !4304
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !4304
  store %struct.rtx_def* %66, %struct.rtx_def** %x.addr, align 8, !dbg !4305
  br label %repeat, !dbg !4306

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !4307

sw.epilog:                                        ; preds = %sw.default, %if.end44
  %67 = load i32, i32* %code, align 4, !dbg !4308
  %idxprom = sext i32 %67 to i64, !dbg !4308
  %arrayidx132 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4308
  %68 = load i8*, i8** %arrayidx132, align 8, !dbg !4308
  store i8* %68, i8** %fmt, align 8, !dbg !4309
  %69 = load i32, i32* %code, align 4, !dbg !4310
  %idxprom133 = sext i32 %69 to i64, !dbg !4310
  %arrayidx134 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom133, !dbg !4310
  %70 = load i8, i8* %arrayidx134, align 1, !dbg !4310
  %conv = zext i8 %70 to i32, !dbg !4310
  %sub = sub nsw i32 %conv, 1, !dbg !4312
  store i32 %sub, i32* %i, align 4, !dbg !4313
  br label %for.cond, !dbg !4314

for.cond:                                         ; preds = %for.inc208, %sw.epilog
  %71 = load i32, i32* %i, align 4, !dbg !4315
  %cmp135 = icmp sge i32 %71, 0, !dbg !4317
  br i1 %cmp135, label %for.body, label %for.end210, !dbg !4318

for.body:                                         ; preds = %for.cond
  %72 = load i8*, i8** %fmt, align 8, !dbg !4319
  %73 = load i32, i32* %i, align 4, !dbg !4322
  %idxprom137 = sext i32 %73 to i64, !dbg !4319
  %arrayidx138 = getelementptr inbounds i8, i8* %72, i64 %idxprom137, !dbg !4319
  %74 = load i8, i8* %arrayidx138, align 1, !dbg !4319
  %conv139 = sext i8 %74 to i32, !dbg !4319
  %cmp140 = icmp eq i32 %conv139, 101, !dbg !4323
  br i1 %cmp140, label %land.lhs.true142, label %if.else168, !dbg !4324

land.lhs.true142:                                 ; preds = %for.body
  %75 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4325
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4326
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !4326
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !4326
  %77 = load i32, i32* %i, align 4, !dbg !4326
  %idxprom145 = sext i32 %77 to i64, !dbg !4326
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 %idxprom145, !dbg !4326
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !4326
  %cmp148 = icmp ne %struct.rtx_def** %75, %rt_rtx147, !dbg !4327
  br i1 %cmp148, label %if.then150, label %if.else168, !dbg !4328

if.then150:                                       ; preds = %land.lhs.true142
  %78 = load i32, i32* %i, align 4, !dbg !4329
  %cmp151 = icmp eq i32 %78, 0, !dbg !4332
  br i1 %cmp151, label %if.then153, label %if.else, !dbg !4333

if.then153:                                       ; preds = %if.then150
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4334
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !4334
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !4334
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 0, !dbg !4334
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !4334
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !4334
  store %struct.rtx_def* %80, %struct.rtx_def** %x.addr, align 8, !dbg !4336
  br label %repeat, !dbg !4337

if.else:                                          ; preds = %if.then150
  %81 = load i32, i32* %regno.addr, align 4, !dbg !4338
  %82 = load i32, i32* %endregno.addr, align 4, !dbg !4340
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4341
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !4341
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !4341
  %84 = load i32, i32* %i, align 4, !dbg !4341
  %idxprom160 = sext i32 %84 to i64, !dbg !4341
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 %idxprom160, !dbg !4341
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !4341
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !4341
  %86 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4342
  %call163 = call i32 @refers_to_regno_p(i32 %81, i32 %82, %struct.rtx_def* %85, %struct.rtx_def** %86), !dbg !4343
  %tobool164 = icmp ne i32 %call163, 0, !dbg !4343
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !4344

if.then165:                                       ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !4345
  br label %return, !dbg !4345

if.end166:                                        ; preds = %if.else
  br label %if.end167

if.end167:                                        ; preds = %if.end166
  br label %if.end207, !dbg !4346

if.else168:                                       ; preds = %land.lhs.true142, %for.body
  %87 = load i8*, i8** %fmt, align 8, !dbg !4347
  %88 = load i32, i32* %i, align 4, !dbg !4349
  %idxprom169 = sext i32 %88 to i64, !dbg !4347
  %arrayidx170 = getelementptr inbounds i8, i8* %87, i64 %idxprom169, !dbg !4347
  %89 = load i8, i8* %arrayidx170, align 1, !dbg !4347
  %conv171 = sext i8 %89 to i32, !dbg !4347
  %cmp172 = icmp eq i32 %conv171, 69, !dbg !4350
  br i1 %cmp172, label %if.then174, label %if.end206, !dbg !4351

if.then174:                                       ; preds = %if.else168
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4352, metadata !DIExpression()), !dbg !4354
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4355
  %u175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !4355
  %fld176 = bitcast %union.u* %u175 to [1 x %union.rtunion_def]*, !dbg !4355
  %91 = load i32, i32* %i, align 4, !dbg !4355
  %idxprom177 = sext i32 %91 to i64, !dbg !4355
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i64 0, i64 %idxprom177, !dbg !4355
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtvec_def**, !dbg !4355
  %92 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4355
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %92, i32 0, i32 0, !dbg !4355
  %93 = load i32, i32* %num_elem, align 8, !dbg !4355
  %sub179 = sub nsw i32 %93, 1, !dbg !4357
  store i32 %sub179, i32* %j, align 4, !dbg !4358
  br label %for.cond180, !dbg !4359

for.cond180:                                      ; preds = %for.inc, %if.then174
  %94 = load i32, i32* %j, align 4, !dbg !4360
  %cmp181 = icmp sge i32 %94, 0, !dbg !4362
  br i1 %cmp181, label %for.body183, label %for.end, !dbg !4363

for.body183:                                      ; preds = %for.cond180
  %95 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4364
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4366
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !4366
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !4366
  %97 = load i32, i32* %i, align 4, !dbg !4366
  %idxprom186 = sext i32 %97 to i64, !dbg !4366
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 %idxprom186, !dbg !4366
  %rt_rtvec188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtvec_def**, !dbg !4366
  %98 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec188, align 8, !dbg !4366
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %98, i32 0, i32 1, !dbg !4366
  %99 = load i32, i32* %j, align 4, !dbg !4366
  %idxprom189 = sext i32 %99 to i64, !dbg !4366
  %arrayidx190 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom189, !dbg !4366
  %cmp191 = icmp ne %struct.rtx_def** %95, %arrayidx190, !dbg !4367
  br i1 %cmp191, label %land.lhs.true193, label %if.end205, !dbg !4368

land.lhs.true193:                                 ; preds = %for.body183
  %100 = load i32, i32* %regno.addr, align 4, !dbg !4369
  %101 = load i32, i32* %endregno.addr, align 4, !dbg !4370
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4371
  %u194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !4371
  %fld195 = bitcast %union.u* %u194 to [1 x %union.rtunion_def]*, !dbg !4371
  %103 = load i32, i32* %i, align 4, !dbg !4371
  %idxprom196 = sext i32 %103 to i64, !dbg !4371
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld195, i64 0, i64 %idxprom196, !dbg !4371
  %rt_rtvec198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtvec_def**, !dbg !4371
  %104 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec198, align 8, !dbg !4371
  %elem199 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %104, i32 0, i32 1, !dbg !4371
  %105 = load i32, i32* %j, align 4, !dbg !4371
  %idxprom200 = sext i32 %105 to i64, !dbg !4371
  %arrayidx201 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem199, i64 0, i64 %idxprom200, !dbg !4371
  %106 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx201, align 8, !dbg !4371
  %107 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4372
  %call202 = call i32 @refers_to_regno_p(i32 %100, i32 %101, %struct.rtx_def* %106, %struct.rtx_def** %107), !dbg !4373
  %tobool203 = icmp ne i32 %call202, 0, !dbg !4373
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !4374

if.then204:                                       ; preds = %land.lhs.true193
  store i32 1, i32* %retval, align 4, !dbg !4375
  br label %return, !dbg !4375

if.end205:                                        ; preds = %land.lhs.true193, %for.body183
  br label %for.inc, !dbg !4376

for.inc:                                          ; preds = %if.end205
  %108 = load i32, i32* %j, align 4, !dbg !4377
  %dec = add nsw i32 %108, -1, !dbg !4377
  store i32 %dec, i32* %j, align 4, !dbg !4377
  br label %for.cond180, !dbg !4378, !llvm.loop !4379

for.end:                                          ; preds = %for.cond180
  br label %if.end206, !dbg !4381

if.end206:                                        ; preds = %for.end, %if.else168
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end167
  br label %for.inc208, !dbg !4382

for.inc208:                                       ; preds = %if.end207
  %109 = load i32, i32* %i, align 4, !dbg !4383
  %dec209 = add nsw i32 %109, -1, !dbg !4383
  store i32 %dec209, i32* %i, align 4, !dbg !4383
  br label %for.cond, !dbg !4384, !llvm.loop !4385

for.end210:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4387
  br label %return, !dbg !4387

return:                                           ; preds = %for.end210, %if.then204, %if.then165, %if.then126, %if.then117, %land.end42, %land.end, %if.then8, %if.then
  %110 = load i32, i32* %retval, align 4, !dbg !4388
  ret i32 %110, !dbg !4388
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !4389 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4392, metadata !DIExpression()), !dbg !4393
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4394, metadata !DIExpression()), !dbg !4395
  %0 = load i32, i32* %regno.addr, align 4, !dbg !4396
  %1 = load i32, i32* %regno.addr, align 4, !dbg !4397
  %idxprom = zext i32 %1 to i64, !dbg !4398
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !4398
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4399
  %idxprom1 = sext i32 %2 to i64, !dbg !4398
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !4398
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4398
  %conv = zext i8 %3 to i32, !dbg !4398
  %add = add i32 %0, %conv, !dbg !4400
  ret i32 %add, !dbg !4401
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_regno(%struct.rtx_def* %x) #0 !dbg !4402 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %ret = alloca i32, align 4
  %subreg = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4405, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subreg, metadata !4407, metadata !DIExpression()), !dbg !4408
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4409
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4409
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4409
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4409
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4409
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4409
  store %struct.rtx_def* %1, %struct.rtx_def** %subreg, align 8, !dbg !4408
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4410, metadata !DIExpression()), !dbg !4411
  %2 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !4412
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !4412
  store i32 %call, i32* %regno, align 4, !dbg !4411
  %3 = load i32, i32* %regno, align 4, !dbg !4413
  %4 = load i32, i32* %regno, align 4, !dbg !4414
  %5 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !4415
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !4415
  %bf.load = load i32, i32* %6, align 8, !dbg !4415
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4415
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4415
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4416
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !4416
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4416
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !4416
  %rt_uint = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !4416
  %8 = load i32, i32* %rt_uint, align 8, !dbg !4416
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4417
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4417
  %bf.load4 = load i32, i32* %10, align 8, !dbg !4417
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !4417
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !4417
  %call7 = call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear, i32 %8, i32 %bf.clear6), !dbg !4418
  %add = add i32 %3, %call7, !dbg !4419
  store i32 %add, i32* %ret, align 4, !dbg !4420
  %11 = load i32, i32* %ret, align 4, !dbg !4421
  ret i32 %11, !dbg !4422
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_nregs(%struct.rtx_def* %x) #0 !dbg !4423 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4426
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4426
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4426
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4426
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4426
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4426
  %call = call i32 @rhs_regno(%struct.rtx_def* %1), !dbg !4426
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4427
  %call1 = call i32 @subreg_nregs_with_regno(i32 %call, %struct.rtx_def* %2), !dbg !4428
  ret i32 %call1, !dbg !4429
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @note_uses(%struct.rtx_def** %pbody, void (%struct.rtx_def**, i8*)* %fun, i8* %data) #0 !dbg !4430 {
entry:
  %pbody.addr = alloca %struct.rtx_def**, align 8
  %fun.addr = alloca void (%struct.rtx_def**, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %body = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %dest = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %pbody, %struct.rtx_def*** %pbody.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %pbody.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  store void (%struct.rtx_def**, i8*)* %fun, void (%struct.rtx_def**, i8*)** %fun.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.rtx_def**, i8*)** %fun.addr, metadata !4438, metadata !DIExpression()), !dbg !4439
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4440, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body, metadata !4442, metadata !DIExpression()), !dbg !4443
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %pbody.addr, align 8, !dbg !4444
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !4445
  store %struct.rtx_def* %1, %struct.rtx_def** %body, align 8, !dbg !4443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4446, metadata !DIExpression()), !dbg !4447
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4448
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4448
  %bf.load = load i32, i32* %3, align 8, !dbg !4448
  %bf.clear = and i32 %bf.load, 65535, !dbg !4448
  switch i32 %bf.clear, label %sw.default [
    i32 14, label %sw.bb
    i32 15, label %sw.bb5
    i32 5, label %sw.bb14
    i32 24, label %sw.bb38
    i32 17, label %sw.bb43
    i32 29, label %sw.bb63
    i32 22, label %sw.bb68
    i32 18, label %sw.bb73
    i32 19, label %sw.bb73
    i32 25, label %sw.bb93
    i32 23, label %sw.bb109
  ], !dbg !4449

sw.bb:                                            ; preds = %entry
  %4 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4450
  %5 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4452
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !4452
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4452
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4452
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4452
  %6 = load i8*, i8** %data.addr, align 8, !dbg !4453
  call void %4(%struct.rtx_def** %rt_rtx, i8* %6), !dbg !4454
  %7 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4455
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !4455
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4455
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !4455
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4455
  %8 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4456
  %9 = load i8*, i8** %data.addr, align 8, !dbg !4457
  call void @note_uses(%struct.rtx_def** %rt_rtx4, void (%struct.rtx_def**, i8*)* %8, i8* %9), !dbg !4458
  br label %return, !dbg !4459

sw.bb5:                                           ; preds = %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4460
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4460
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !4460
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !4460
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtvec_def**, !dbg !4460
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4460
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 0, !dbg !4460
  %12 = load i32, i32* %num_elem, align 8, !dbg !4460
  %sub = sub nsw i32 %12, 1, !dbg !4462
  store i32 %sub, i32* %i, align 4, !dbg !4463
  br label %for.cond, !dbg !4464

for.cond:                                         ; preds = %for.inc, %sw.bb5
  %13 = load i32, i32* %i, align 4, !dbg !4465
  %cmp = icmp sge i32 %13, 0, !dbg !4467
  br i1 %cmp, label %for.body, label %for.end, !dbg !4468

for.body:                                         ; preds = %for.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4469
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4469
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4469
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !4469
  %rt_rtvec12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtvec_def**, !dbg !4469
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec12, align 8, !dbg !4469
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !4469
  %16 = load i32, i32* %i, align 4, !dbg !4469
  %idxprom = sext i32 %16 to i64, !dbg !4469
  %arrayidx13 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4469
  %17 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4470
  %18 = load i8*, i8** %data.addr, align 8, !dbg !4471
  call void @note_uses(%struct.rtx_def** %arrayidx13, void (%struct.rtx_def**, i8*)* %17, i8* %18), !dbg !4472
  br label %for.inc, !dbg !4472

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4473
  %dec = add nsw i32 %19, -1, !dbg !4473
  store i32 %dec, i32* %i, align 4, !dbg !4473
  br label %for.cond, !dbg !4474, !llvm.loop !4475

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !4477

sw.bb14:                                          ; preds = %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4478
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4478
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !4478
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !4478
  %rt_rtvec18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !4478
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec18, align 8, !dbg !4478
  %num_elem19 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0, !dbg !4478
  %22 = load i32, i32* %num_elem19, align 8, !dbg !4478
  %sub20 = sub nsw i32 %22, 1, !dbg !4480
  store i32 %sub20, i32* %i, align 4, !dbg !4481
  br label %for.cond21, !dbg !4482

for.cond21:                                       ; preds = %for.inc35, %sw.bb14
  %23 = load i32, i32* %i, align 4, !dbg !4483
  %cmp22 = icmp sge i32 %23, 0, !dbg !4485
  br i1 %cmp22, label %for.body23, label %for.end37, !dbg !4486

for.body23:                                       ; preds = %for.cond21
  %24 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4487
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4487
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !4487
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !4487
  %rt_rtvec27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtvec_def**, !dbg !4487
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec27, align 8, !dbg !4487
  %elem28 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 1, !dbg !4487
  %26 = load i32, i32* %i, align 4, !dbg !4487
  %idxprom29 = sext i32 %26 to i64, !dbg !4487
  %arrayidx30 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem28, i64 0, i64 %idxprom29, !dbg !4487
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30, align 8, !dbg !4487
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4487
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !4487
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 5, !dbg !4487
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !4487
  %28 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4488
  %29 = load i8*, i8** %data.addr, align 8, !dbg !4489
  call void @note_uses(%struct.rtx_def** %rt_rtx34, void (%struct.rtx_def**, i8*)* %28, i8* %29), !dbg !4490
  br label %for.inc35, !dbg !4490

for.inc35:                                        ; preds = %for.body23
  %30 = load i32, i32* %i, align 4, !dbg !4491
  %dec36 = add nsw i32 %30, -1, !dbg !4491
  store i32 %dec36, i32* %i, align 4, !dbg !4491
  br label %for.cond21, !dbg !4492, !llvm.loop !4493

for.end37:                                        ; preds = %for.cond21
  br label %return, !dbg !4495

sw.bb38:                                          ; preds = %entry
  %31 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4496
  %32 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4497
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !4497
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !4497
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !4497
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !4497
  %33 = load i8*, i8** %data.addr, align 8, !dbg !4498
  call void %31(%struct.rtx_def** %rt_rtx42, i8* %33), !dbg !4499
  br label %return, !dbg !4500

sw.bb43:                                          ; preds = %entry
  %34 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4501
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !4501
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !4501
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 3, !dbg !4501
  %rt_rtvec47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtvec_def**, !dbg !4501
  %35 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !4501
  %num_elem48 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %35, i32 0, i32 0, !dbg !4501
  %36 = load i32, i32* %num_elem48, align 8, !dbg !4501
  %sub49 = sub nsw i32 %36, 1, !dbg !4503
  store i32 %sub49, i32* %i, align 4, !dbg !4504
  br label %for.cond50, !dbg !4505

for.cond50:                                       ; preds = %for.inc60, %sw.bb43
  %37 = load i32, i32* %i, align 4, !dbg !4506
  %cmp51 = icmp sge i32 %37, 0, !dbg !4508
  br i1 %cmp51, label %for.body52, label %for.end62, !dbg !4509

for.body52:                                       ; preds = %for.cond50
  %38 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4510
  %39 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4511
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !4511
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !4511
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 3, !dbg !4511
  %rt_rtvec56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtvec_def**, !dbg !4511
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec56, align 8, !dbg !4511
  %elem57 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !4511
  %41 = load i32, i32* %i, align 4, !dbg !4511
  %idxprom58 = sext i32 %41 to i64, !dbg !4511
  %arrayidx59 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem57, i64 0, i64 %idxprom58, !dbg !4511
  %42 = load i8*, i8** %data.addr, align 8, !dbg !4512
  call void %38(%struct.rtx_def** %arrayidx59, i8* %42), !dbg !4513
  br label %for.inc60, !dbg !4513

for.inc60:                                        ; preds = %for.body52
  %43 = load i32, i32* %i, align 4, !dbg !4514
  %dec61 = add nsw i32 %43, -1, !dbg !4514
  store i32 %dec61, i32* %i, align 4, !dbg !4514
  br label %for.cond50, !dbg !4515, !llvm.loop !4516

for.end62:                                        ; preds = %for.cond50
  br label %return, !dbg !4518

sw.bb63:                                          ; preds = %entry
  %44 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4519
  %45 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4520
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !4520
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !4520
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !4520
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4520
  %46 = load i8*, i8** %data.addr, align 8, !dbg !4521
  call void %44(%struct.rtx_def** %rt_rtx67, i8* %46), !dbg !4522
  br label %return, !dbg !4523

sw.bb68:                                          ; preds = %entry
  %47 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4524
  %48 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4525
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !4525
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !4525
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !4525
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !4525
  %49 = load i8*, i8** %data.addr, align 8, !dbg !4526
  call void %47(%struct.rtx_def** %rt_rtx72, i8* %49), !dbg !4527
  br label %return, !dbg !4528

sw.bb73:                                          ; preds = %entry, %entry
  %50 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4529
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !4529
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !4529
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 0, !dbg !4529
  %rt_rtvec77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtvec_def**, !dbg !4529
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec77, align 8, !dbg !4529
  %num_elem78 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 0, !dbg !4529
  %52 = load i32, i32* %num_elem78, align 8, !dbg !4529
  %sub79 = sub nsw i32 %52, 1, !dbg !4531
  store i32 %sub79, i32* %i, align 4, !dbg !4532
  br label %for.cond80, !dbg !4533

for.cond80:                                       ; preds = %for.inc90, %sw.bb73
  %53 = load i32, i32* %i, align 4, !dbg !4534
  %cmp81 = icmp sge i32 %53, 0, !dbg !4536
  br i1 %cmp81, label %for.body82, label %for.end92, !dbg !4537

for.body82:                                       ; preds = %for.cond80
  %54 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4538
  %55 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4539
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !4539
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !4539
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !4539
  %rt_rtvec86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtvec_def**, !dbg !4539
  %56 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec86, align 8, !dbg !4539
  %elem87 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %56, i32 0, i32 1, !dbg !4539
  %57 = load i32, i32* %i, align 4, !dbg !4539
  %idxprom88 = sext i32 %57 to i64, !dbg !4539
  %arrayidx89 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem87, i64 0, i64 %idxprom88, !dbg !4539
  %58 = load i8*, i8** %data.addr, align 8, !dbg !4540
  call void %54(%struct.rtx_def** %arrayidx89, i8* %58), !dbg !4541
  br label %for.inc90, !dbg !4541

for.inc90:                                        ; preds = %for.body82
  %59 = load i32, i32* %i, align 4, !dbg !4542
  %dec91 = add nsw i32 %59, -1, !dbg !4542
  store i32 %dec91, i32* %i, align 4, !dbg !4542
  br label %for.cond80, !dbg !4543, !llvm.loop !4544

for.end92:                                        ; preds = %for.cond80
  br label %return, !dbg !4546

sw.bb93:                                          ; preds = %entry
  %60 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4547
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !4547
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !4547
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !4547
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !4547
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !4547
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !4547
  %bf.load98 = load i32, i32* %62, align 8, !dbg !4547
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !4547
  %cmp100 = icmp eq i32 %bf.clear99, 43, !dbg !4547
  br i1 %cmp100, label %if.then, label %if.end, !dbg !4549

if.then:                                          ; preds = %sw.bb93
  %63 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4550
  %64 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4551
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !4551
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !4551
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !4551
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !4551
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !4551
  %u105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !4551
  %fld106 = bitcast %union.u* %u105 to [1 x %union.rtunion_def]*, !dbg !4551
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i64 0, i64 0, !dbg !4551
  %rt_rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**, !dbg !4551
  %66 = load i8*, i8** %data.addr, align 8, !dbg !4552
  call void %63(%struct.rtx_def** %rt_rtx108, i8* %66), !dbg !4553
  br label %if.end, !dbg !4553

if.end:                                           ; preds = %if.then, %sw.bb93
  br label %return, !dbg !4554

sw.bb109:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !4555, metadata !DIExpression()), !dbg !4557
  %67 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4558
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !4558
  %fld111 = bitcast %union.u* %u110 to [1 x %union.rtunion_def]*, !dbg !4558
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i64 0, i64 0, !dbg !4558
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !4558
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !4558
  store %struct.rtx_def* %68, %struct.rtx_def** %dest, align 8, !dbg !4557
  %69 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4559
  %70 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4560
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !4560
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !4560
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 1, !dbg !4560
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !4560
  %71 = load i8*, i8** %data.addr, align 8, !dbg !4561
  call void %69(%struct.rtx_def** %rt_rtx117, i8* %71), !dbg !4562
  %72 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4563
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !4563
  %bf.load118 = load i32, i32* %73, align 8, !dbg !4563
  %bf.clear119 = and i32 %bf.load118, 65535, !dbg !4563
  %cmp120 = icmp eq i32 %bf.clear119, 120, !dbg !4565
  br i1 %cmp120, label %if.then121, label %if.end130, !dbg !4566

if.then121:                                       ; preds = %sw.bb109
  %74 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4567
  %75 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4569
  %u122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !4569
  %fld123 = bitcast %union.u* %u122 to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 1, !dbg !4569
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !4569
  %76 = load i8*, i8** %data.addr, align 8, !dbg !4570
  call void %74(%struct.rtx_def** %rt_rtx125, i8* %76), !dbg !4571
  %77 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4572
  %78 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4573
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !4573
  %fld127 = bitcast %union.u* %u126 to [1 x %union.rtunion_def]*, !dbg !4573
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i64 0, i64 2, !dbg !4573
  %rt_rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**, !dbg !4573
  %79 = load i8*, i8** %data.addr, align 8, !dbg !4574
  call void %77(%struct.rtx_def** %rt_rtx129, i8* %79), !dbg !4575
  br label %if.end130, !dbg !4576

if.end130:                                        ; preds = %if.then121, %sw.bb109
  br label %while.cond, !dbg !4577

while.cond:                                       ; preds = %while.body, %if.end130
  %80 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4578
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !4578
  %bf.load131 = load i32, i32* %81, align 8, !dbg !4578
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !4578
  %cmp133 = icmp eq i32 %bf.clear132, 39, !dbg !4579
  br i1 %cmp133, label %lor.end, label %lor.rhs, !dbg !4580

lor.rhs:                                          ; preds = %while.cond
  %82 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4581
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !4581
  %bf.load134 = load i32, i32* %83, align 8, !dbg !4581
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !4581
  %cmp136 = icmp eq i32 %bf.clear135, 40, !dbg !4582
  br label %lor.end, !dbg !4580

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %84 = phi i1 [ true, %while.cond ], [ %cmp136, %lor.rhs ]
  br i1 %84, label %while.body, label %while.end, !dbg !4577

while.body:                                       ; preds = %lor.end
  %85 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4583
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !4583
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !4583
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 0, !dbg !4583
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !4583
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !4583
  store %struct.rtx_def* %86, %struct.rtx_def** %dest, align 8, !dbg !4584
  br label %while.cond, !dbg !4577, !llvm.loop !4585

while.end:                                        ; preds = %lor.end
  %87 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4586
  %88 = bitcast %struct.rtx_def* %87 to i32*, !dbg !4586
  %bf.load141 = load i32, i32* %88, align 8, !dbg !4586
  %bf.clear142 = and i32 %bf.load141, 65535, !dbg !4586
  %cmp143 = icmp eq i32 %bf.clear142, 43, !dbg !4586
  br i1 %cmp143, label %if.then144, label %if.end149, !dbg !4588

if.then144:                                       ; preds = %while.end
  %89 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4589
  %90 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !4590
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !4590
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !4590
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 0, !dbg !4590
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !4590
  %91 = load i8*, i8** %data.addr, align 8, !dbg !4591
  call void %89(%struct.rtx_def** %rt_rtx148, i8* %91), !dbg !4592
  br label %if.end149, !dbg !4592

if.end149:                                        ; preds = %if.then144, %while.end
  br label %return, !dbg !4593

sw.default:                                       ; preds = %entry
  %92 = load void (%struct.rtx_def**, i8*)*, void (%struct.rtx_def**, i8*)** %fun.addr, align 8, !dbg !4594
  %93 = load %struct.rtx_def**, %struct.rtx_def*** %pbody.addr, align 8, !dbg !4595
  %94 = load i8*, i8** %data.addr, align 8, !dbg !4596
  call void %92(%struct.rtx_def** %93, i8* %94), !dbg !4597
  br label %return, !dbg !4598

return:                                           ; preds = %sw.default, %if.end149, %if.end, %for.end92, %sw.bb68, %sw.bb63, %for.end62, %sw.bb38, %for.end37, %for.end, %sw.bb
  ret void, !dbg !4599
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dead_or_set_p(%struct.rtx_def* %insn, %struct.rtx_def* %x) #0 !dbg !4600 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %end_regno = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4601, metadata !DIExpression()), !dbg !4602
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4603, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4605, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !4607, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4609, metadata !DIExpression()), !dbg !4610
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4611
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4611
  %bf.load = load i32, i32* %1, align 8, !dbg !4611
  %bf.clear = and i32 %bf.load, 65535, !dbg !4611
  %cmp = icmp eq i32 %bf.clear, 46, !dbg !4613
  br i1 %cmp, label %if.then, label %if.end, !dbg !4614

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4615
  br label %return, !dbg !4615

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4616
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4616
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4616
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4616
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !4616
  br i1 %cmp3, label %cond.false, label %cond.true, !dbg !4616

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4616
  br label %cond.end, !dbg !4616

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !4616

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4616
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4617
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !4617
  store i32 %call, i32* %regno, align 4, !dbg !4618
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4619
  %call4 = call i32 @rhs_regno(%struct.rtx_def* %5), !dbg !4619
  %cmp5 = icmp ult i32 %call4, 53, !dbg !4619
  br i1 %cmp5, label %cond.true6, label %cond.false11, !dbg !4619

cond.true6:                                       ; preds = %cond.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4619
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4619
  %bf.load7 = load i32, i32* %7, align 8, !dbg !4619
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !4619
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !4619
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4619
  %call9 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !4619
  %call10 = call i32 @end_hard_regno(i32 %bf.clear8, i32 %call9), !dbg !4619
  br label %cond.end13, !dbg !4619

cond.false11:                                     ; preds = %cond.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4619
  %call12 = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !4619
  %add = add i32 %call12, 1, !dbg !4619
  br label %cond.end13, !dbg !4619

cond.end13:                                       ; preds = %cond.false11, %cond.true6
  %cond14 = phi i32 [ %call10, %cond.true6 ], [ %add, %cond.false11 ], !dbg !4619
  store i32 %cond14, i32* %end_regno, align 4, !dbg !4620
  %10 = load i32, i32* %regno, align 4, !dbg !4621
  store i32 %10, i32* %i, align 4, !dbg !4623
  br label %for.cond, !dbg !4624

for.cond:                                         ; preds = %for.inc, %cond.end13
  %11 = load i32, i32* %i, align 4, !dbg !4625
  %12 = load i32, i32* %end_regno, align 4, !dbg !4627
  %cmp15 = icmp ult i32 %11, %12, !dbg !4628
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4629

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4630
  %14 = load i32, i32* %i, align 4, !dbg !4632
  %call16 = call i32 @dead_or_set_regno_p(%struct.rtx_def* %13, i32 %14), !dbg !4633
  %tobool = icmp ne i32 %call16, 0, !dbg !4633
  br i1 %tobool, label %if.end18, label %if.then17, !dbg !4634

if.then17:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !4635
  br label %return, !dbg !4635

if.end18:                                         ; preds = %for.body
  br label %for.inc, !dbg !4636

for.inc:                                          ; preds = %if.end18
  %15 = load i32, i32* %i, align 4, !dbg !4637
  %inc = add i32 %15, 1, !dbg !4637
  store i32 %inc, i32* %i, align 4, !dbg !4637
  br label %for.cond, !dbg !4638, !llvm.loop !4639

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !4641
  br label %return, !dbg !4641

return:                                           ; preds = %for.end, %if.then17, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4642
  ret i32 %16, !dbg !4642
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %test_regno) #0 !dbg !4643 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %test_regno.addr = alloca i32, align 4
  %pattern = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %body = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store i32 %test_regno, i32* %test_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %test_regno.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pattern, metadata !4650, metadata !DIExpression()), !dbg !4651
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4652
  %1 = load i32, i32* %test_regno.addr, align 4, !dbg !4654
  %call = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %0, i32 1, i32 %1), !dbg !4655
  %tobool = icmp ne %struct.rtx_def* %call, null, !dbg !4655
  br i1 %tobool, label %if.then, label %if.end, !dbg !4656

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4657
  br label %return, !dbg !4657

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4658
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4658
  %bf.load = load i32, i32* %3, align 8, !dbg !4658
  %bf.clear = and i32 %bf.load, 65535, !dbg !4658
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !4658
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !4660

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4661
  %5 = load i32, i32* %test_regno.addr, align 4, !dbg !4662
  %call1 = call i32 @find_regno_fusage(%struct.rtx_def* %4, i32 25, i32 %5), !dbg !4663
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4663
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4664

if.then3:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4665
  br label %return, !dbg !4665

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4666
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4666
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4666
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4666
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4666
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4666
  store %struct.rtx_def* %7, %struct.rtx_def** %pattern, align 8, !dbg !4667
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4668
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4668
  %bf.load5 = load i32, i32* %9, align 8, !dbg !4668
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4668
  %cmp7 = icmp eq i32 %bf.clear6, 14, !dbg !4670
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !4671

if.then8:                                         ; preds = %if.end4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4672
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4672
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4672
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 1, !dbg !4672
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4672
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !4672
  store %struct.rtx_def* %11, %struct.rtx_def** %pattern, align 8, !dbg !4673
  br label %if.end13, !dbg !4674

if.end13:                                         ; preds = %if.then8, %if.end4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4675
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !4675
  %bf.load14 = load i32, i32* %13, align 8, !dbg !4675
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4675
  %cmp16 = icmp eq i32 %bf.clear15, 23, !dbg !4677
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !4678

if.then17:                                        ; preds = %if.end13
  %14 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4679
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4679
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !4679
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !4679
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !4679
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4679
  %16 = load i32, i32* %test_regno.addr, align 4, !dbg !4680
  %call22 = call zeroext i8 @covers_regno_p(%struct.rtx_def* %15, i32 %16), !dbg !4681
  %conv = zext i8 %call22 to i32, !dbg !4681
  store i32 %conv, i32* %retval, align 4, !dbg !4682
  br label %return, !dbg !4682

if.else:                                          ; preds = %if.end13
  %17 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4683
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4683
  %bf.load23 = load i32, i32* %18, align 8, !dbg !4683
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4683
  %cmp25 = icmp eq i32 %bf.clear24, 15, !dbg !4685
  br i1 %cmp25, label %if.then27, label %if.end66, !dbg !4686

if.then27:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4687, metadata !DIExpression()), !dbg !4689
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4690
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !4690
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !4690
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !4690
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !4690
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4690
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 0, !dbg !4690
  %21 = load i32, i32* %num_elem, align 8, !dbg !4690
  %sub = sub nsw i32 %21, 1, !dbg !4692
  store i32 %sub, i32* %i, align 4, !dbg !4693
  br label %for.cond, !dbg !4694

for.cond:                                         ; preds = %for.inc, %if.then27
  %22 = load i32, i32* %i, align 4, !dbg !4695
  %cmp31 = icmp sge i32 %22, 0, !dbg !4697
  br i1 %cmp31, label %for.body, label %for.end, !dbg !4698

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body, metadata !4699, metadata !DIExpression()), !dbg !4701
  %23 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4702
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4702
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !4702
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !4702
  %rt_rtvec36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !4702
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec36, align 8, !dbg !4702
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i32 0, i32 1, !dbg !4702
  %25 = load i32, i32* %i, align 4, !dbg !4702
  %idxprom = sext i32 %25 to i64, !dbg !4702
  %arrayidx37 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4702
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !4702
  store %struct.rtx_def* %26, %struct.rtx_def** %body, align 8, !dbg !4701
  %27 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4703
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4703
  %bf.load38 = load i32, i32* %28, align 8, !dbg !4703
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !4703
  %cmp40 = icmp eq i32 %bf.clear39, 14, !dbg !4705
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !4706

if.then42:                                        ; preds = %for.body
  %29 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4707
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !4707
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !4707
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 1, !dbg !4707
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4707
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4707
  store %struct.rtx_def* %30, %struct.rtx_def** %body, align 8, !dbg !4708
  br label %if.end47, !dbg !4709

if.end47:                                         ; preds = %if.then42, %for.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4710
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !4710
  %bf.load48 = load i32, i32* %32, align 8, !dbg !4710
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !4710
  %cmp50 = icmp eq i32 %bf.clear49, 23, !dbg !4712
  br i1 %cmp50, label %land.lhs.true56, label %lor.lhs.false, !dbg !4713

lor.lhs.false:                                    ; preds = %if.end47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4714
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !4714
  %bf.load52 = load i32, i32* %34, align 8, !dbg !4714
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !4714
  %cmp54 = icmp eq i32 %bf.clear53, 25, !dbg !4715
  br i1 %cmp54, label %land.lhs.true56, label %if.end65, !dbg !4716

land.lhs.true56:                                  ; preds = %lor.lhs.false, %if.end47
  %35 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !4717
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !4717
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !4717
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 0, !dbg !4717
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !4717
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !4717
  %37 = load i32, i32* %test_regno.addr, align 4, !dbg !4718
  %call61 = call zeroext i8 @covers_regno_p(%struct.rtx_def* %36, i32 %37), !dbg !4719
  %conv62 = zext i8 %call61 to i32, !dbg !4719
  %tobool63 = icmp ne i32 %conv62, 0, !dbg !4719
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !4720

if.then64:                                        ; preds = %land.lhs.true56
  store i32 1, i32* %retval, align 4, !dbg !4721
  br label %return, !dbg !4721

if.end65:                                         ; preds = %land.lhs.true56, %lor.lhs.false
  br label %for.inc, !dbg !4722

for.inc:                                          ; preds = %if.end65
  %38 = load i32, i32* %i, align 4, !dbg !4723
  %dec = add nsw i32 %38, -1, !dbg !4723
  store i32 %dec, i32* %i, align 4, !dbg !4723
  br label %for.cond, !dbg !4724, !llvm.loop !4725

for.end:                                          ; preds = %for.cond
  br label %if.end66, !dbg !4727

if.end66:                                         ; preds = %for.end, %if.else
  br label %if.end67

if.end67:                                         ; preds = %if.end66
  store i32 0, i32* %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

return:                                           ; preds = %if.end67, %if.then64, %if.then17, %if.then3, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !4729
  ret i32 %39, !dbg !4729
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 %kind, i32 %regno) #0 !dbg !4730 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %kind.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4733, metadata !DIExpression()), !dbg !4734
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !4735, metadata !DIExpression()), !dbg !4736
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4737, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !4739, metadata !DIExpression()), !dbg !4740
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4741
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4741
  %bf.load = load i32, i32* %1, align 8, !dbg !4741
  %bf.clear = and i32 %bf.load, 65535, !dbg !4741
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4741
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4741

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4741
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4741
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4741
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4741
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !4741
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4741

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4741
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4741
  %bf.load5 = load i32, i32* %5, align 8, !dbg !4741
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4741
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !4741
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4741

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4741
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4741
  %bf.load9 = load i32, i32* %7, align 8, !dbg !4741
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4741
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !4741
  br i1 %cmp11, label %if.end, label %if.then, !dbg !4743

if.then:                                          ; preds = %lor.lhs.false8
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4744
  br label %return, !dbg !4744

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4745
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4745
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4745
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !4745
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4745
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4745
  store %struct.rtx_def* %9, %struct.rtx_def** %link, align 8, !dbg !4747
  br label %for.cond, !dbg !4748

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4749
  %tobool = icmp ne %struct.rtx_def* %10, null, !dbg !4751
  br i1 %tobool, label %for.body, label %for.end, !dbg !4751

for.body:                                         ; preds = %for.cond
  %11 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4752
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4752
  %bf.load12 = load i32, i32* %12, align 8, !dbg !4752
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4752
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4752
  %13 = load i32, i32* %kind.addr, align 4, !dbg !4754
  %cmp14 = icmp eq i32 %bf.clear13, %13, !dbg !4755
  br i1 %cmp14, label %land.lhs.true, label %if.end55, !dbg !4756

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4757
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4757
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !4757
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !4757
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !4757
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !4757
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4757
  %bf.load19 = load i32, i32* %16, align 8, !dbg !4757
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4757
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !4757
  br i1 %cmp21, label %land.lhs.true22, label %if.end55, !dbg !4758

land.lhs.true22:                                  ; preds = %land.lhs.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4759
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4759
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !4759
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !4759
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !4759
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !4759
  %call = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !4759
  %19 = load i32, i32* %regno.addr, align 4, !dbg !4760
  %cmp27 = icmp ule i32 %call, %19, !dbg !4761
  br i1 %cmp27, label %land.lhs.true28, label %if.end55, !dbg !4762

land.lhs.true28:                                  ; preds = %land.lhs.true22
  %20 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4763
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4763
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !4763
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !4763
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !4763
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !4763
  %call33 = call i32 @rhs_regno(%struct.rtx_def* %21), !dbg !4763
  %cmp34 = icmp ult i32 %call33, 53, !dbg !4763
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !4763

cond.true:                                        ; preds = %land.lhs.true28
  %22 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4763
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !4763
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !4763
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !4763
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !4763
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !4763
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4763
  %bf.load39 = load i32, i32* %24, align 8, !dbg !4763
  %bf.lshr40 = lshr i32 %bf.load39, 16, !dbg !4763
  %bf.clear41 = and i32 %bf.lshr40, 255, !dbg !4763
  %25 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4763
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !4763
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !4763
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !4763
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !4763
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4763
  %call46 = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !4763
  %call47 = call i32 @end_hard_regno(i32 %bf.clear41, i32 %call46), !dbg !4763
  br label %cond.end, !dbg !4763

cond.false:                                       ; preds = %land.lhs.true28
  %27 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4763
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4763
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !4763
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !4763
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !4763
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !4763
  %call52 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !4763
  %add = add i32 %call52, 1, !dbg !4763
  br label %cond.end, !dbg !4763

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call47, %cond.true ], [ %add, %cond.false ], !dbg !4763
  %29 = load i32, i32* %regno.addr, align 4, !dbg !4764
  %cmp53 = icmp ugt i32 %cond, %29, !dbg !4765
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !4766

if.then54:                                        ; preds = %cond.end
  %30 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4767
  store %struct.rtx_def* %30, %struct.rtx_def** %retval, align 8, !dbg !4768
  br label %return, !dbg !4768

if.end55:                                         ; preds = %cond.end, %land.lhs.true22, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4764

for.inc:                                          ; preds = %if.end55
  %31 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4769
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !4769
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !4769
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 1, !dbg !4769
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !4769
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !4769
  store %struct.rtx_def* %32, %struct.rtx_def** %link, align 8, !dbg !4770
  br label %for.cond, !dbg !4771, !llvm.loop !4772

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4774
  br label %return, !dbg !4774

return:                                           ; preds = %for.end, %if.then54, %if.then
  %33 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4775
  ret %struct.rtx_def* %33, !dbg !4775
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 %code, i32 %regno) #0 !dbg !4776 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  %op = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4781, metadata !DIExpression()), !dbg !4782
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !4785, metadata !DIExpression()), !dbg !4786
  %0 = load i32, i32* %regno.addr, align 4, !dbg !4787
  %cmp = icmp uge i32 %0, 53, !dbg !4789
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4790

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4791
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !4791
  %bf.load = load i32, i32* %2, align 8, !dbg !4791
  %bf.clear = and i32 %bf.load, 65535, !dbg !4791
  %cmp1 = icmp eq i32 %bf.clear, 10, !dbg !4791
  br i1 %cmp1, label %if.end, label %if.then, !dbg !4792

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4793
  br label %return, !dbg !4793

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4794
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !4794
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4794
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !4794
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4794
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4794
  store %struct.rtx_def* %4, %struct.rtx_def** %link, align 8, !dbg !4796
  br label %for.cond, !dbg !4797

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4798
  %tobool = icmp ne %struct.rtx_def* %5, null, !dbg !4800
  br i1 %tobool, label %for.body, label %for.end, !dbg !4800

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op, metadata !4801, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !4804, metadata !DIExpression()), !dbg !4805
  %6 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4806
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4806
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !4806
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !4806
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !4806
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !4806
  store %struct.rtx_def* %7, %struct.rtx_def** %op, align 8, !dbg !4806
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4806
  %bf.load6 = load i32, i32* %8, align 8, !dbg !4806
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !4806
  %9 = load i32, i32* %code.addr, align 4, !dbg !4808
  %cmp8 = icmp eq i32 %bf.clear7, %9, !dbg !4809
  br i1 %cmp8, label %land.lhs.true, label %if.end25, !dbg !4810

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !4811
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4811
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4811
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !4811
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4811
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !4811
  store %struct.rtx_def* %11, %struct.rtx_def** %reg, align 8, !dbg !4811
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4811
  %bf.load13 = load i32, i32* %12, align 8, !dbg !4811
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4811
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !4811
  br i1 %cmp15, label %land.lhs.true16, label %if.end25, !dbg !4812

land.lhs.true16:                                  ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4813
  %call = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !4813
  %14 = load i32, i32* %regno.addr, align 4, !dbg !4814
  %cmp17 = icmp ule i32 %call, %14, !dbg !4815
  br i1 %cmp17, label %land.lhs.true18, label %if.end25, !dbg !4816

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4817
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4817
  %bf.load19 = load i32, i32* %16, align 8, !dbg !4817
  %bf.lshr = lshr i32 %bf.load19, 16, !dbg !4817
  %bf.clear20 = and i32 %bf.lshr, 255, !dbg !4817
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4817
  %call21 = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !4817
  %call22 = call i32 @end_hard_regno(i32 %bf.clear20, i32 %call21), !dbg !4817
  %18 = load i32, i32* %regno.addr, align 4, !dbg !4818
  %cmp23 = icmp ugt i32 %call22, %18, !dbg !4819
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !4820

if.then24:                                        ; preds = %land.lhs.true18
  store i32 1, i32* %retval, align 4, !dbg !4821
  br label %return, !dbg !4821

if.end25:                                         ; preds = %land.lhs.true18, %land.lhs.true16, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4822

for.inc:                                          ; preds = %if.end25
  %19 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4823
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !4823
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !4823
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !4823
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !4823
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !4823
  store %struct.rtx_def* %20, %struct.rtx_def** %link, align 8, !dbg !4824
  br label %for.cond, !dbg !4825, !llvm.loop !4826

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4828
  br label %return, !dbg !4828

return:                                           ; preds = %for.end, %if.then24, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4829
  ret i32 %21, !dbg !4829
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @covers_regno_p(%struct.rtx_def* %dest, i32 %test_regno) #0 !dbg !4830 {
entry:
  %retval = alloca i8, align 1
  %dest.addr = alloca %struct.rtx_def*, align 8
  %test_regno.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %inner = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  store i32 %test_regno, i32* %test_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %test_regno.addr, metadata !4835, metadata !DIExpression()), !dbg !4836
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4837
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4837
  %bf.load = load i32, i32* %1, align 8, !dbg !4837
  %bf.clear = and i32 %bf.load, 65535, !dbg !4837
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !4839
  br i1 %cmp, label %if.then, label %if.else, !dbg !4840

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4841, metadata !DIExpression()), !dbg !4843
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4844
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4844
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4844
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4844
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !4844
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4844
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i32 0, i32 0, !dbg !4844
  %4 = load i32, i32* %num_elem, align 8, !dbg !4844
  %sub = sub nsw i32 %4, 1, !dbg !4846
  store i32 %sub, i32* %i, align 4, !dbg !4847
  br label %for.cond, !dbg !4848

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !4849
  %cmp1 = icmp sge i32 %5, 0, !dbg !4851
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4852

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner, metadata !4853, metadata !DIExpression()), !dbg !4855
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4856
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4856
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !4856
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !4856
  %rt_rtvec5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtvec_def**, !dbg !4856
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5, align 8, !dbg !4856
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i32 0, i32 1, !dbg !4856
  %8 = load i32, i32* %i, align 4, !dbg !4856
  %idxprom = sext i32 %8 to i64, !dbg !4856
  %arrayidx6 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4856
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !4856
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !4856
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !4856
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !4856
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !4856
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4856
  store %struct.rtx_def* %10, %struct.rtx_def** %inner, align 8, !dbg !4855
  %11 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !4857
  %cmp10 = icmp ne %struct.rtx_def* %11, null, !dbg !4859
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !4860

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !4861
  %13 = load i32, i32* %test_regno.addr, align 4, !dbg !4862
  %call = call zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* %12, i32 %13), !dbg !4863
  %conv = zext i8 %call to i32, !dbg !4863
  %tobool = icmp ne i32 %conv, 0, !dbg !4863
  br i1 %tobool, label %if.then11, label %if.end, !dbg !4864

if.then11:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !4865
  br label %return, !dbg !4865

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4866

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4867
  %dec = add nsw i32 %14, -1, !dbg !4867
  store i32 %dec, i32* %i, align 4, !dbg !4867
  br label %for.cond, !dbg !4868, !llvm.loop !4869

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !4871
  br label %return, !dbg !4871

if.else:                                          ; preds = %entry
  %15 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4872
  %16 = load i32, i32* %test_regno.addr, align 4, !dbg !4873
  %call12 = call zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* %15, i32 %16), !dbg !4874
  store i8 %call12, i8* %retval, align 1, !dbg !4875
  br label %return, !dbg !4875

return:                                           ; preds = %if.else, %for.end, %if.then11
  %17 = load i8, i8* %retval, align 1, !dbg !4876
  ret i8 %17, !dbg !4876
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #0 !dbg !4877 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !4880, metadata !DIExpression()), !dbg !4881
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4882
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4882
  %bf.load = load i32, i32* %1, align 8, !dbg !4882
  %bf.clear = and i32 %bf.load, 65535, !dbg !4882
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4882
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4882

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4882
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4882
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4882
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4882
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !4882
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4882

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4882
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4882
  %bf.load5 = load i32, i32* %5, align 8, !dbg !4882
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4882
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !4882
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4882

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4882
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4882
  %bf.load9 = load i32, i32* %7, align 8, !dbg !4882
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4882
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !4882
  br i1 %cmp11, label %if.end, label %if.then, !dbg !4884

if.then:                                          ; preds = %lor.lhs.false8
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4885
  br label %return, !dbg !4885

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4886
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4886
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4886
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !4886
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4886
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4886
  store %struct.rtx_def* %9, %struct.rtx_def** %link, align 8, !dbg !4888
  br label %for.cond, !dbg !4889

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4890
  %tobool = icmp ne %struct.rtx_def* %10, null, !dbg !4892
  br i1 %tobool, label %for.body, label %for.end, !dbg !4892

for.body:                                         ; preds = %for.cond
  %11 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4893
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4893
  %bf.load12 = load i32, i32* %12, align 8, !dbg !4893
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4893
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4893
  %cmp14 = icmp eq i32 %bf.clear13, 4, !dbg !4895
  br i1 %cmp14, label %if.then20, label %lor.lhs.false15, !dbg !4896

lor.lhs.false15:                                  ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4897
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !4897
  %bf.load16 = load i32, i32* %14, align 8, !dbg !4897
  %bf.lshr17 = lshr i32 %bf.load16, 16, !dbg !4897
  %bf.clear18 = and i32 %bf.lshr17, 255, !dbg !4897
  %cmp19 = icmp eq i32 %bf.clear18, 3, !dbg !4898
  br i1 %cmp19, label %if.then20, label %if.end31, !dbg !4899

if.then20:                                        ; preds = %lor.lhs.false15, %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4900
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4900
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !4900
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 5, !dbg !4900
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !4900
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !4900
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !4900
  %bf.load25 = load i32, i32* %17, align 8, !dbg !4900
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4900
  %cmp27 = icmp eq i32 %bf.clear26, 15, !dbg !4903
  br i1 %cmp27, label %land.lhs.true, label %if.end30, !dbg !4904

land.lhs.true:                                    ; preds = %if.then20
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4905
  %call = call i32 @multiple_sets(%struct.rtx_def* %18), !dbg !4906
  %tobool28 = icmp ne i32 %call, 0, !dbg !4906
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !4907

if.then29:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4908
  br label %return, !dbg !4908

if.end30:                                         ; preds = %land.lhs.true, %if.then20
  %19 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4909
  store %struct.rtx_def* %19, %struct.rtx_def** %retval, align 8, !dbg !4910
  br label %return, !dbg !4910

if.end31:                                         ; preds = %lor.lhs.false15
  br label %for.inc, !dbg !4911

for.inc:                                          ; preds = %if.end31
  %20 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4912
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4912
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !4912
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 1, !dbg !4912
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !4912
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !4912
  store %struct.rtx_def* %21, %struct.rtx_def** %link, align 8, !dbg !4913
  br label %for.cond, !dbg !4914, !llvm.loop !4915

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4917
  br label %return, !dbg !4917

return:                                           ; preds = %for.end, %if.end30, %if.then29, %if.then
  %22 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4918
  ret %struct.rtx_def* %22, !dbg !4918
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_constant_src(%struct.rtx_def* %insn) #0 !dbg !4919 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4920, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !4924, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !4926, metadata !DIExpression()), !dbg !4927
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4928
  %bf.load = load i32, i32* %1, align 8, !dbg !4928
  %bf.clear = and i32 %bf.load, 65535, !dbg !4928
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4928
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !4928

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4928
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4928
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4928
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !4928
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !4928

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4928
  %bf.load5 = load i32, i32* %5, align 8, !dbg !4928
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4928
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !4928
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !4928

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4928
  %bf.load9 = load i32, i32* %7, align 8, !dbg !4928
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4928
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !4928
  br i1 %cmp11, label %cond.true, label %cond.false24, !dbg !4928

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4928
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4928
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4928
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4928
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4928
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4928
  %bf.load12 = load i32, i32* %10, align 8, !dbg !4928
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4928
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !4928
  br i1 %cmp14, label %cond.true15, label %cond.false, !dbg !4928

cond.true15:                                      ; preds = %cond.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4928
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !4928
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !4928
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4928
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !4928
  br label %cond.end, !dbg !4928

cond.false:                                       ; preds = %cond.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4928
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4928
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !4928
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 5, !dbg !4928
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !4928
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4928
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !4928
  br label %cond.end, !dbg !4928

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi %struct.rtx_def* [ %12, %cond.true15 ], [ %call, %cond.false ], !dbg !4928
  br label %cond.end25, !dbg !4928

cond.false24:                                     ; preds = %lor.lhs.false8
  br label %cond.end25, !dbg !4928

cond.end25:                                       ; preds = %cond.false24, %cond.end
  %cond26 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false24 ], !dbg !4928
  store %struct.rtx_def* %cond26, %struct.rtx_def** %set, align 8, !dbg !4929
  %16 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4930
  %tobool = icmp ne %struct.rtx_def* %16, null, !dbg !4930
  br i1 %tobool, label %if.then, label %if.end37, !dbg !4932

if.then:                                          ; preds = %cond.end25
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4933
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4933
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !4933
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 1, !dbg !4933
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !4933
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !4933
  %call31 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %18), !dbg !4935
  store %struct.rtx_def* %call31, %struct.rtx_def** %x, align 8, !dbg !4936
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4937
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !4937
  %bf.load32 = load i32, i32* %20, align 8, !dbg !4937
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4937
  %idxprom = sext i32 %bf.clear33 to i64, !dbg !4937
  %arrayidx34 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4937
  %21 = load i32, i32* %arrayidx34, align 4, !dbg !4937
  %cmp35 = icmp eq i32 %21, 9, !dbg !4937
  br i1 %cmp35, label %if.then36, label %if.end, !dbg !4939

if.then36:                                        ; preds = %if.then
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4940
  store %struct.rtx_def* %22, %struct.rtx_def** %retval, align 8, !dbg !4941
  br label %return, !dbg !4941

if.end:                                           ; preds = %if.then
  br label %if.end37, !dbg !4942

if.end37:                                         ; preds = %if.end, %cond.end25
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4943
  %call38 = call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %23), !dbg !4944
  store %struct.rtx_def* %call38, %struct.rtx_def** %note, align 8, !dbg !4945
  %24 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4946
  %tobool39 = icmp ne %struct.rtx_def* %24, null, !dbg !4946
  br i1 %tobool39, label %land.lhs.true, label %if.end54, !dbg !4948

land.lhs.true:                                    ; preds = %if.end37
  %25 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4949
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !4949
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !4949
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !4949
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !4949
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !4949
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !4949
  %bf.load44 = load i32, i32* %27, align 8, !dbg !4949
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4949
  %idxprom46 = sext i32 %bf.clear45 to i64, !dbg !4949
  %arrayidx47 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom46, !dbg !4949
  %28 = load i32, i32* %arrayidx47, align 4, !dbg !4949
  %cmp48 = icmp eq i32 %28, 9, !dbg !4949
  br i1 %cmp48, label %if.then49, label %if.end54, !dbg !4950

if.then49:                                        ; preds = %land.lhs.true
  %29 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4951
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !4951
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !4951
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 0, !dbg !4951
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !4951
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !4951
  store %struct.rtx_def* %30, %struct.rtx_def** %retval, align 8, !dbg !4952
  br label %return, !dbg !4952

if.end54:                                         ; preds = %land.lhs.true, %if.end37
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4953
  br label %return, !dbg !4953

return:                                           ; preds = %if.end54, %if.then49, %if.then36
  %31 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4954
  ret %struct.rtx_def* %31, !dbg !4954
}

declare dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @alloc_reg_note(i32 %kind, %struct.rtx_def* %datum, %struct.rtx_def* %list) #0 !dbg !4955 {
entry:
  %kind.addr = alloca i32, align 4
  %datum.addr = alloca %struct.rtx_def*, align 8
  %list.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !4958, metadata !DIExpression()), !dbg !4959
  store %struct.rtx_def* %datum, %struct.rtx_def** %datum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %datum.addr, metadata !4960, metadata !DIExpression()), !dbg !4961
  store %struct.rtx_def* %list, %struct.rtx_def** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %list.addr, metadata !4962, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4964, metadata !DIExpression()), !dbg !4965
  %0 = load i32, i32* %kind.addr, align 4, !dbg !4966
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
  ], !dbg !4967

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !4968
  %2 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !4970
  %call = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %1, %struct.rtx_def* %2), !dbg !4971
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8, !dbg !4972
  %3 = load i32, i32* %kind.addr, align 4, !dbg !4973
  %4 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4973
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4973
  %bf.load = load i32, i32* %5, align 8, !dbg !4973
  %bf.value = and i32 %3, 255, !dbg !4973
  %bf.shl = shl i32 %bf.value, 16, !dbg !4973
  %bf.clear = and i32 %bf.load, -16711681, !dbg !4973
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !4973
  store i32 %bf.set, i32* %5, align 8, !dbg !4973
  br label %sw.epilog, !dbg !4974

sw.default:                                       ; preds = %entry
  %6 = load i32, i32* %kind.addr, align 4, !dbg !4975
  %7 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !4976
  %8 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !4977
  %call1 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 %6, %struct.rtx_def* %7, %struct.rtx_def* %8), !dbg !4978
  store %struct.rtx_def* %call1, %struct.rtx_def** %note, align 8, !dbg !4979
  br label %sw.epilog, !dbg !4980

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %9 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4981
  ret %struct.rtx_def* %9, !dbg !4982
}

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @add_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) #0 !dbg !4983 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %kind.addr = alloca i32, align 4
  %datum.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  store %struct.rtx_def* %datum, %struct.rtx_def** %datum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %datum.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  %0 = load i32, i32* %kind.addr, align 4, !dbg !4992
  %1 = load %struct.rtx_def*, %struct.rtx_def** %datum.addr, align 8, !dbg !4993
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4994
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4994
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4994
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !4994
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4994
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4994
  %call = call %struct.rtx_def* @alloc_reg_note(i32 %0, %struct.rtx_def* %1, %struct.rtx_def* %3), !dbg !4995
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4996
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4996
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4996
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 7, !dbg !4996
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4996
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4997
  ret void, !dbg !4998
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* %note) #0 !dbg !4999 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %note.addr = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  store %struct.rtx_def* %note, %struct.rtx_def** %note.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note.addr, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !5006, metadata !DIExpression()), !dbg !5007
  %0 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5008
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !5010
  br i1 %cmp, label %if.then, label %if.end, !dbg !5011

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !5012

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5013
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !5013
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5013
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !5013
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5013
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5013
  %3 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5015
  %cmp1 = icmp eq %struct.rtx_def* %2, %3, !dbg !5016
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !5017

if.then2:                                         ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5018
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !5018
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !5018
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 1, !dbg !5018
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !5018
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !5018
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5019
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5019
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !5019
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 7, !dbg !5019
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !5019
  store %struct.rtx_def* %5, %struct.rtx_def** %rt_rtx10, align 8, !dbg !5020
  br label %if.end34, !dbg !5019

if.else:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5021
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !5021
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5021
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 7, !dbg !5021
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !5021
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !5021
  store %struct.rtx_def* %8, %struct.rtx_def** %link, align 8, !dbg !5023
  br label %for.cond, !dbg !5024

for.cond:                                         ; preds = %for.inc, %if.else
  %9 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !5025
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !5027
  br i1 %tobool, label %for.body, label %for.end, !dbg !5027

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !5028
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5028
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !5028
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 1, !dbg !5028
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !5028
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !5028
  %12 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5030
  %cmp19 = icmp eq %struct.rtx_def* %11, %12, !dbg !5031
  br i1 %cmp19, label %if.then20, label %if.end29, !dbg !5032

if.then20:                                        ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5033
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5033
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !5033
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 1, !dbg !5033
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !5033
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !5033
  %15 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !5035
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5035
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !5035
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !5035
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !5035
  store %struct.rtx_def* %14, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5036
  br label %for.end, !dbg !5037

if.end29:                                         ; preds = %for.body
  br label %for.inc, !dbg !5030

for.inc:                                          ; preds = %if.end29
  %16 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !5038
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !5038
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !5038
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !5038
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5038
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !5038
  store %struct.rtx_def* %17, %struct.rtx_def** %link, align 8, !dbg !5039
  br label %for.cond, !dbg !5040, !llvm.loop !5041

for.end:                                          ; preds = %if.then20, %for.cond
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.then2
  %18 = load %struct.rtx_def*, %struct.rtx_def** %note.addr, align 8, !dbg !5043
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5043
  %bf.load = load i32, i32* %19, align 8, !dbg !5043
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5043
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5043
  switch i32 %bf.clear, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb
  ], !dbg !5044

sw.bb:                                            ; preds = %if.end34, %if.end34
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5045
  call void @df_notes_rescan(%struct.rtx_def* %20), !dbg !5047
  br label %sw.epilog, !dbg !5048

sw.default:                                       ; preds = %if.end34
  br label %sw.epilog, !dbg !5049

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb
  ret void, !dbg !5050
}

declare dso_local void @df_notes_rescan(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_reg_equal_equiv_notes(%struct.rtx_def* %insn) #0 !dbg !5051 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %loc = alloca %struct.rtx_def**, align 8
  %kind = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5054, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc, metadata !5056, metadata !DIExpression()), !dbg !5057
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5058
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5058
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5058
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !5058
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5058
  store %struct.rtx_def** %rt_rtx, %struct.rtx_def*** %loc, align 8, !dbg !5059
  br label %while.cond, !dbg !5060

while.cond:                                       ; preds = %if.end, %entry
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !5061
  %2 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8, !dbg !5062
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !5060
  br i1 %tobool, label %while.body, label %while.end, !dbg !5060

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !5063, metadata !DIExpression()), !dbg !5065
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !5066
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !5066
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5066
  %bf.load = load i32, i32* %5, align 8, !dbg !5066
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5066
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5066
  store i32 %bf.clear, i32* %kind, align 4, !dbg !5065
  %6 = load i32, i32* %kind, align 4, !dbg !5067
  %cmp = icmp eq i32 %6, 4, !dbg !5069
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5070

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i32, i32* %kind, align 4, !dbg !5071
  %cmp1 = icmp eq i32 %7, 3, !dbg !5072
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5073

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !5074
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !5074
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !5074
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !5074
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !5074
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !5074
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !5074
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !5075
  store %struct.rtx_def* %10, %struct.rtx_def** %11, align 8, !dbg !5076
  br label %if.end, !dbg !5077

if.else:                                          ; preds = %lor.lhs.false
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !5078
  %13 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8, !dbg !5078
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5078
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !5078
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !5078
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5078
  store %struct.rtx_def** %rt_rtx9, %struct.rtx_def*** %loc, align 8, !dbg !5079
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !5060, !llvm.loop !5080

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5082
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @in_expr_list_p(%struct.rtx_def* %listp, %struct.rtx_def* %node) #0 !dbg !5083 {
entry:
  %retval = alloca i32, align 4
  %listp.addr = alloca %struct.rtx_def*, align 8
  %node.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %listp, %struct.rtx_def** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %listp.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store %struct.rtx_def* %node, %struct.rtx_def** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %node.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !5088, metadata !DIExpression()), !dbg !5089
  %0 = load %struct.rtx_def*, %struct.rtx_def** %listp.addr, align 8, !dbg !5090
  store %struct.rtx_def* %0, %struct.rtx_def** %x, align 8, !dbg !5092
  br label %for.cond, !dbg !5093

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5094
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !5096
  br i1 %tobool, label %for.body, label %for.end, !dbg !5096

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def*, %struct.rtx_def** %node.addr, align 8, !dbg !5097
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5099
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5099
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5099
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5099
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5099
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5099
  %cmp = icmp eq %struct.rtx_def* %2, %4, !dbg !5100
  br i1 %cmp, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !5102
  br label %return, !dbg !5102

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5099

for.inc:                                          ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5103
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !5103
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !5103
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !5103
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5103
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5103
  store %struct.rtx_def* %6, %struct.rtx_def** %x, align 8, !dbg !5104
  br label %for.cond, !dbg !5105, !llvm.loop !5106

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5108
  br label %return, !dbg !5108

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5109
  ret i32 %7, !dbg !5109
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_node_from_expr_list(%struct.rtx_def* %node, %struct.rtx_def** %listp) #0 !dbg !5110 {
entry:
  %node.addr = alloca %struct.rtx_def*, align 8
  %listp.addr = alloca %struct.rtx_def**, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %node, %struct.rtx_def** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %node.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  store %struct.rtx_def** %listp, %struct.rtx_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %listp.addr, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !5117, metadata !DIExpression()), !dbg !5118
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !5119
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !5120
  store %struct.rtx_def* %1, %struct.rtx_def** %temp, align 8, !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !5121, metadata !DIExpression()), !dbg !5122
  store %struct.rtx_def* null, %struct.rtx_def** %prev, align 8, !dbg !5122
  br label %while.cond, !dbg !5123

while.cond:                                       ; preds = %if.end15, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5124
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !5123
  br i1 %tobool, label %while.body, label %while.end, !dbg !5123

while.body:                                       ; preds = %while.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %node.addr, align 8, !dbg !5125
  %4 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5128
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !5128
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5128
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5128
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5128
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5128
  %cmp = icmp eq %struct.rtx_def* %3, %5, !dbg !5129
  br i1 %cmp, label %if.then, label %if.end15, !dbg !5130

if.then:                                          ; preds = %while.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !5131
  %tobool1 = icmp ne %struct.rtx_def* %6, null, !dbg !5131
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5134

if.then2:                                         ; preds = %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5135
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !5135
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !5135
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 1, !dbg !5135
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !5135
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !5135
  %9 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !5136
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !5136
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !5136
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !5136
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !5136
  store %struct.rtx_def* %8, %struct.rtx_def** %rt_rtx10, align 8, !dbg !5137
  br label %if.end, !dbg !5136

if.else:                                          ; preds = %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5138
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5138
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5138
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 1, !dbg !5138
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !5138
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !5138
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !5139
  store %struct.rtx_def* %11, %struct.rtx_def** %12, align 8, !dbg !5140
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %while.end, !dbg !5141

if.end15:                                         ; preds = %while.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5142
  store %struct.rtx_def* %13, %struct.rtx_def** %prev, align 8, !dbg !5143
  %14 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5144
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5144
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !5144
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !5144
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !5144
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !5144
  store %struct.rtx_def* %15, %struct.rtx_def** %temp, align 8, !dbg !5145
  br label %while.cond, !dbg !5123, !llvm.loop !5146

while.end:                                        ; preds = %if.end, %while.cond
  ret void, !dbg !5148
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @volatile_insn_p(%struct.rtx_def* %x) #0 !dbg !5149 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5154
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5154
  %bf.load = load i32, i32* %1, align 8, !dbg !5154
  %bf.clear = and i32 %bf.load, 65535, !dbg !5154
  store i32 %bf.clear, i32* %code, align 4, !dbg !5153
  %2 = load i32, i32* %code, align 4, !dbg !5155
  switch i32 %2, label %sw.default [
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 46, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 25, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 26, label %sw.bb
    i32 43, label %sw.bb
    i32 19, label %sw.bb1
    i32 16, label %sw.bb2
    i32 17, label %sw.bb2
  ], !dbg !5156

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !5157
  br label %return, !dbg !5157

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5159
  br label %return, !dbg !5159

sw.bb2:                                           ; preds = %entry, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5160
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5160
  %bf.load3 = load i32, i32* %4, align 8, !dbg !5160
  %bf.lshr = lshr i32 %bf.load3, 27, !dbg !5160
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !5160
  %tobool = icmp ne i32 %bf.clear4, 0, !dbg !5160
  br i1 %tobool, label %if.then, label %if.end, !dbg !5162

if.then:                                          ; preds = %sw.bb2
  store i32 1, i32* %retval, align 4, !dbg !5163
  br label %return, !dbg !5163

if.end:                                           ; preds = %sw.bb2
  br label %sw.default, !dbg !5160

sw.default:                                       ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !5164

sw.epilog:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5165, metadata !DIExpression()), !dbg !5168
  %5 = load i32, i32* %code, align 4, !dbg !5169
  %idxprom = sext i32 %5 to i64, !dbg !5169
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5169
  %6 = load i8*, i8** %arrayidx, align 8, !dbg !5169
  store i8* %6, i8** %fmt, align 8, !dbg !5168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5170, metadata !DIExpression()), !dbg !5171
  %7 = load i32, i32* %code, align 4, !dbg !5172
  %idxprom5 = sext i32 %7 to i64, !dbg !5172
  %arrayidx6 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom5, !dbg !5172
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !5172
  %conv = zext i8 %8 to i32, !dbg !5172
  %sub = sub nsw i32 %conv, 1, !dbg !5174
  store i32 %sub, i32* %i, align 4, !dbg !5175
  br label %for.cond, !dbg !5176

for.cond:                                         ; preds = %for.inc46, %sw.epilog
  %9 = load i32, i32* %i, align 4, !dbg !5177
  %cmp = icmp sge i32 %9, 0, !dbg !5179
  br i1 %cmp, label %for.body, label %for.end47, !dbg !5180

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %fmt, align 8, !dbg !5181
  %11 = load i32, i32* %i, align 4, !dbg !5184
  %idxprom8 = sext i32 %11 to i64, !dbg !5181
  %arrayidx9 = getelementptr inbounds i8, i8* %10, i64 %idxprom8, !dbg !5181
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !5181
  %conv10 = sext i8 %12 to i32, !dbg !5181
  %cmp11 = icmp eq i32 %conv10, 101, !dbg !5185
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5186

if.then13:                                        ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5187
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5187
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5187
  %14 = load i32, i32* %i, align 4, !dbg !5187
  %idxprom14 = sext i32 %14 to i64, !dbg !5187
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom14, !dbg !5187
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !5187
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5187
  %call = call i32 @volatile_insn_p(%struct.rtx_def* %15), !dbg !5190
  %tobool16 = icmp ne i32 %call, 0, !dbg !5190
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5191

if.then17:                                        ; preds = %if.then13
  store i32 1, i32* %retval, align 4, !dbg !5192
  br label %return, !dbg !5192

if.end18:                                         ; preds = %if.then13
  br label %if.end45, !dbg !5193

if.else:                                          ; preds = %for.body
  %16 = load i8*, i8** %fmt, align 8, !dbg !5194
  %17 = load i32, i32* %i, align 4, !dbg !5196
  %idxprom19 = sext i32 %17 to i64, !dbg !5194
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !5194
  %18 = load i8, i8* %arrayidx20, align 1, !dbg !5194
  %conv21 = sext i8 %18 to i32, !dbg !5194
  %cmp22 = icmp eq i32 %conv21, 69, !dbg !5197
  br i1 %cmp22, label %if.then24, label %if.end44, !dbg !5198

if.then24:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5199, metadata !DIExpression()), !dbg !5201
  store i32 0, i32* %j, align 4, !dbg !5202
  br label %for.cond25, !dbg !5204

for.cond25:                                       ; preds = %for.inc, %if.then24
  %19 = load i32, i32* %j, align 4, !dbg !5205
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5207
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5207
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !5207
  %21 = load i32, i32* %i, align 4, !dbg !5207
  %idxprom28 = sext i32 %21 to i64, !dbg !5207
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 %idxprom28, !dbg !5207
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtvec_def**, !dbg !5207
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5207
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i32 0, i32 0, !dbg !5207
  %23 = load i32, i32* %num_elem, align 8, !dbg !5207
  %cmp30 = icmp slt i32 %19, %23, !dbg !5208
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !5209

for.body32:                                       ; preds = %for.cond25
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5210
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !5210
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5210
  %25 = load i32, i32* %i, align 4, !dbg !5210
  %idxprom35 = sext i32 %25 to i64, !dbg !5210
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %idxprom35, !dbg !5210
  %rt_rtvec37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !5210
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec37, align 8, !dbg !5210
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 1, !dbg !5210
  %27 = load i32, i32* %j, align 4, !dbg !5210
  %idxprom38 = sext i32 %27 to i64, !dbg !5210
  %arrayidx39 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom38, !dbg !5210
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !5210
  %call40 = call i32 @volatile_insn_p(%struct.rtx_def* %28), !dbg !5212
  %tobool41 = icmp ne i32 %call40, 0, !dbg !5212
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !5213

if.then42:                                        ; preds = %for.body32
  store i32 1, i32* %retval, align 4, !dbg !5214
  br label %return, !dbg !5214

if.end43:                                         ; preds = %for.body32
  br label %for.inc, !dbg !5215

for.inc:                                          ; preds = %if.end43
  %29 = load i32, i32* %j, align 4, !dbg !5216
  %inc = add nsw i32 %29, 1, !dbg !5216
  store i32 %inc, i32* %j, align 4, !dbg !5216
  br label %for.cond25, !dbg !5217, !llvm.loop !5218

for.end:                                          ; preds = %for.cond25
  br label %if.end44, !dbg !5220

if.end44:                                         ; preds = %for.end, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end18
  br label %for.inc46, !dbg !5221

for.inc46:                                        ; preds = %if.end45
  %30 = load i32, i32* %i, align 4, !dbg !5222
  %dec = add nsw i32 %30, -1, !dbg !5222
  store i32 %dec, i32* %i, align 4, !dbg !5222
  br label %for.cond, !dbg !5223, !llvm.loop !5224

for.end47:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5226
  br label %return, !dbg !5226

return:                                           ; preds = %for.end47, %if.then42, %if.then17, %if.then, %sw.bb1, %sw.bb
  %31 = load i32, i32* %retval, align 4, !dbg !5227
  ret i32 %31, !dbg !5227
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @volatile_refs_p(%struct.rtx_def* %x) #0 !dbg !5228 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5229, metadata !DIExpression()), !dbg !5230
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5231, metadata !DIExpression()), !dbg !5232
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5233
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5233
  %bf.load = load i32, i32* %1, align 8, !dbg !5233
  %bf.clear = and i32 %bf.load, 65535, !dbg !5233
  store i32 %bf.clear, i32* %code, align 4, !dbg !5232
  %2 = load i32, i32* %code, align 4, !dbg !5234
  switch i32 %2, label %sw.default [
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 46, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 25, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 19, label %sw.bb1
    i32 43, label %sw.bb2
    i32 16, label %sw.bb2
    i32 17, label %sw.bb2
  ], !dbg !5235

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !5236
  br label %return, !dbg !5236

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5238
  br label %return, !dbg !5238

sw.bb2:                                           ; preds = %entry, %entry, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5239
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5239
  %bf.load3 = load i32, i32* %4, align 8, !dbg !5239
  %bf.lshr = lshr i32 %bf.load3, 27, !dbg !5239
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !5239
  %tobool = icmp ne i32 %bf.clear4, 0, !dbg !5239
  br i1 %tobool, label %if.then, label %if.end, !dbg !5241

if.then:                                          ; preds = %sw.bb2
  store i32 1, i32* %retval, align 4, !dbg !5242
  br label %return, !dbg !5242

if.end:                                           ; preds = %sw.bb2
  br label %sw.default, !dbg !5239

sw.default:                                       ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !5243

sw.epilog:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5244, metadata !DIExpression()), !dbg !5246
  %5 = load i32, i32* %code, align 4, !dbg !5247
  %idxprom = sext i32 %5 to i64, !dbg !5247
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5247
  %6 = load i8*, i8** %arrayidx, align 8, !dbg !5247
  store i8* %6, i8** %fmt, align 8, !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5248, metadata !DIExpression()), !dbg !5249
  %7 = load i32, i32* %code, align 4, !dbg !5250
  %idxprom5 = sext i32 %7 to i64, !dbg !5250
  %arrayidx6 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom5, !dbg !5250
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !5250
  %conv = zext i8 %8 to i32, !dbg !5250
  %sub = sub nsw i32 %conv, 1, !dbg !5252
  store i32 %sub, i32* %i, align 4, !dbg !5253
  br label %for.cond, !dbg !5254

for.cond:                                         ; preds = %for.inc46, %sw.epilog
  %9 = load i32, i32* %i, align 4, !dbg !5255
  %cmp = icmp sge i32 %9, 0, !dbg !5257
  br i1 %cmp, label %for.body, label %for.end47, !dbg !5258

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %fmt, align 8, !dbg !5259
  %11 = load i32, i32* %i, align 4, !dbg !5262
  %idxprom8 = sext i32 %11 to i64, !dbg !5259
  %arrayidx9 = getelementptr inbounds i8, i8* %10, i64 %idxprom8, !dbg !5259
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !5259
  %conv10 = sext i8 %12 to i32, !dbg !5259
  %cmp11 = icmp eq i32 %conv10, 101, !dbg !5263
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5264

if.then13:                                        ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5265
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5265
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5265
  %14 = load i32, i32* %i, align 4, !dbg !5265
  %idxprom14 = sext i32 %14 to i64, !dbg !5265
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom14, !dbg !5265
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !5265
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5265
  %call = call i32 @volatile_refs_p(%struct.rtx_def* %15), !dbg !5268
  %tobool16 = icmp ne i32 %call, 0, !dbg !5268
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5269

if.then17:                                        ; preds = %if.then13
  store i32 1, i32* %retval, align 4, !dbg !5270
  br label %return, !dbg !5270

if.end18:                                         ; preds = %if.then13
  br label %if.end45, !dbg !5271

if.else:                                          ; preds = %for.body
  %16 = load i8*, i8** %fmt, align 8, !dbg !5272
  %17 = load i32, i32* %i, align 4, !dbg !5274
  %idxprom19 = sext i32 %17 to i64, !dbg !5272
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !5272
  %18 = load i8, i8* %arrayidx20, align 1, !dbg !5272
  %conv21 = sext i8 %18 to i32, !dbg !5272
  %cmp22 = icmp eq i32 %conv21, 69, !dbg !5275
  br i1 %cmp22, label %if.then24, label %if.end44, !dbg !5276

if.then24:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5277, metadata !DIExpression()), !dbg !5279
  store i32 0, i32* %j, align 4, !dbg !5280
  br label %for.cond25, !dbg !5282

for.cond25:                                       ; preds = %for.inc, %if.then24
  %19 = load i32, i32* %j, align 4, !dbg !5283
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5285
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5285
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !5285
  %21 = load i32, i32* %i, align 4, !dbg !5285
  %idxprom28 = sext i32 %21 to i64, !dbg !5285
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 %idxprom28, !dbg !5285
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtvec_def**, !dbg !5285
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5285
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i32 0, i32 0, !dbg !5285
  %23 = load i32, i32* %num_elem, align 8, !dbg !5285
  %cmp30 = icmp slt i32 %19, %23, !dbg !5286
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !5287

for.body32:                                       ; preds = %for.cond25
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5288
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !5288
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5288
  %25 = load i32, i32* %i, align 4, !dbg !5288
  %idxprom35 = sext i32 %25 to i64, !dbg !5288
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %idxprom35, !dbg !5288
  %rt_rtvec37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !5288
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec37, align 8, !dbg !5288
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 1, !dbg !5288
  %27 = load i32, i32* %j, align 4, !dbg !5288
  %idxprom38 = sext i32 %27 to i64, !dbg !5288
  %arrayidx39 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom38, !dbg !5288
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !5288
  %call40 = call i32 @volatile_refs_p(%struct.rtx_def* %28), !dbg !5290
  %tobool41 = icmp ne i32 %call40, 0, !dbg !5290
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !5291

if.then42:                                        ; preds = %for.body32
  store i32 1, i32* %retval, align 4, !dbg !5292
  br label %return, !dbg !5292

if.end43:                                         ; preds = %for.body32
  br label %for.inc, !dbg !5293

for.inc:                                          ; preds = %if.end43
  %29 = load i32, i32* %j, align 4, !dbg !5294
  %inc = add nsw i32 %29, 1, !dbg !5294
  store i32 %inc, i32* %j, align 4, !dbg !5294
  br label %for.cond25, !dbg !5295, !llvm.loop !5296

for.end:                                          ; preds = %for.cond25
  br label %if.end44, !dbg !5298

if.end44:                                         ; preds = %for.end, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end18
  br label %for.inc46, !dbg !5299

for.inc46:                                        ; preds = %if.end45
  %30 = load i32, i32* %i, align 4, !dbg !5300
  %dec = add nsw i32 %30, -1, !dbg !5300
  store i32 %dec, i32* %i, align 4, !dbg !5300
  br label %for.cond, !dbg !5301, !llvm.loop !5302

for.end47:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5304
  br label %return, !dbg !5304

return:                                           ; preds = %for.end47, %if.then42, %if.then17, %if.then, %sw.bb1, %sw.bb
  %31 = load i32, i32* %retval, align 4, !dbg !5305
  ret i32 %31, !dbg !5305
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @may_trap_p_1(%struct.rtx_def* %x, i32 %flags) #0 !dbg !5306 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %code_changed = alloca i8, align 1
  %size = alloca i64, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5307, metadata !DIExpression()), !dbg !5308
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5309, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5311, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5315, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata i8* %code_changed, metadata !5317, metadata !DIExpression()), !dbg !5318
  %0 = load i32, i32* %flags.addr, align 4, !dbg !5319
  %cmp = icmp ne i32 %0, 0, !dbg !5320
  %conv = zext i1 %cmp to i32, !dbg !5320
  %conv1 = trunc i32 %conv to i8, !dbg !5319
  store i8 %conv1, i8* %code_changed, align 1, !dbg !5318
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5321
  %cmp2 = icmp eq %struct.rtx_def* %1, null, !dbg !5323
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5324

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5325
  br label %return, !dbg !5325

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5326
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5326
  %bf.load = load i32, i32* %3, align 8, !dbg !5326
  %bf.clear = and i32 %bf.load, 65535, !dbg !5326
  store i32 %bf.clear, i32* %code, align 4, !dbg !5327
  %4 = load i32, i32* %code, align 4, !dbg !5328
  switch i32 %4, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 18, label %sw.bb4
    i32 19, label %sw.bb4
    i32 16, label %sw.bb5
    i32 29, label %sw.bb5
    i32 17, label %sw.bb6
    i32 43, label %sw.bb9
    i32 55, label %sw.bb97
    i32 58, label %sw.bb97
    i32 59, label %sw.bb97
    i32 60, label %sw.bb97
    i32 3, label %sw.bb282
    i32 82, label %sw.bb283
    i32 83, label %sw.bb283
    i32 84, label %sw.bb283
    i32 85, label %sw.bb283
    i32 97, label %sw.bb283
    i32 48, label %sw.bb283
    i32 81, label %sw.bb855
    i32 80, label %sw.bb855
    i32 104, label %sw.bb1430
    i32 51, label %sw.bb1644
    i32 111, label %sw.bb1644
    i32 39, label %sw.bb1644
  ], !dbg !5329

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !5330
  br label %return, !dbg !5330

sw.bb4:                                           ; preds = %if.end, %if.end
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 63), align 8, !dbg !5332
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5333
  %7 = load i32, i32* %flags.addr, align 4, !dbg !5334
  %call = call i32 %5(%struct.rtx_def* %6, i32 %7), !dbg !5335
  store i32 %call, i32* %retval, align 4, !dbg !5336
  br label %return, !dbg !5336

sw.bb5:                                           ; preds = %if.end, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5337
  br label %return, !dbg !5337

sw.bb6:                                           ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5338
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5338
  %bf.load7 = load i32, i32* %9, align 8, !dbg !5338
  %bf.lshr = lshr i32 %bf.load7, 27, !dbg !5338
  %bf.clear8 = and i32 %bf.lshr, 1, !dbg !5338
  store i32 %bf.clear8, i32* %retval, align 4, !dbg !5339
  br label %return, !dbg !5339

sw.bb9:                                           ; preds = %if.end
  %10 = load i32, i32* @flag_stack_check, align 4, !dbg !5340
  %tobool = icmp ne i32 %10, 0, !dbg !5340
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !5342

land.lhs.true:                                    ; preds = %sw.bb9
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5343
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5343
  %bf.load10 = load i32, i32* %12, align 8, !dbg !5343
  %bf.lshr11 = lshr i32 %bf.load10, 27, !dbg !5343
  %bf.clear12 = and i32 %bf.lshr11, 1, !dbg !5343
  %tobool13 = icmp ne i32 %bf.clear12, 0, !dbg !5343
  br i1 %tobool13, label %land.lhs.true14, label %if.end18, !dbg !5344

land.lhs.true14:                                  ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5345
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5345
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5345
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5345
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5345
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5345
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5346
  %cmp15 = icmp eq %struct.rtx_def* %14, %15, !dbg !5347
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5348

if.then17:                                        ; preds = %land.lhs.true14
  store i32 1, i32* %retval, align 4, !dbg !5349
  br label %return, !dbg !5349

if.end18:                                         ; preds = %land.lhs.true14, %land.lhs.true, %sw.bb9
  %16 = load i8, i8* %code_changed, align 1, !dbg !5350
  %conv19 = zext i8 %16 to i32, !dbg !5350
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !5350
  br i1 %tobool20, label %if.then25, label %lor.lhs.false, !dbg !5352

lor.lhs.false:                                    ; preds = %if.end18
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5353
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !5353
  %bf.load21 = load i32, i32* %18, align 8, !dbg !5353
  %bf.lshr22 = lshr i32 %bf.load21, 25, !dbg !5353
  %bf.clear23 = and i32 %bf.lshr22, 1, !dbg !5353
  %tobool24 = icmp ne i32 %bf.clear23, 0, !dbg !5353
  br i1 %tobool24, label %if.end96, label %if.then25, !dbg !5354

if.then25:                                        ; preds = %lor.lhs.false, %if.end18
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5355, metadata !DIExpression()), !dbg !5357
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5358
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !5358
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !5358
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !5358
  %rt_mem = bitcast %union.rtunion_def* %arrayidx28 to %struct.mem_attrs**, !dbg !5358
  %20 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5358
  %cmp29 = icmp ne %struct.mem_attrs* %20, null, !dbg !5358
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !5358

cond.true:                                        ; preds = %if.then25
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5358
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !5358
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !5358
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 1, !dbg !5358
  %rt_mem34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.mem_attrs**, !dbg !5358
  %22 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem34, align 8, !dbg !5358
  %size35 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %22, i32 0, i32 2, !dbg !5358
  %23 = load %struct.rtx_def*, %struct.rtx_def** %size35, align 8, !dbg !5358
  %tobool36 = icmp ne %struct.rtx_def* %23, null, !dbg !5358
  br i1 %tobool36, label %cond.true52, label %cond.false85, !dbg !5358

cond.false:                                       ; preds = %if.then25
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5358
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !5358
  %bf.load37 = load i32, i32* %25, align 8, !dbg !5358
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !5358
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !5358
  %cmp40 = icmp ne i32 %bf.clear39, 1, !dbg !5358
  br i1 %cmp40, label %cond.true42, label %cond.false51, !dbg !5358

cond.true42:                                      ; preds = %cond.false
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5358
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !5358
  %bf.load43 = load i32, i32* %27, align 8, !dbg !5358
  %bf.lshr44 = lshr i32 %bf.load43, 16, !dbg !5358
  %bf.clear45 = and i32 %bf.lshr44, 255, !dbg !5358
  %idxprom = zext i32 %bf.clear45 to i64, !dbg !5358
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5358
  %28 = load i8, i8* %arrayidx46, align 1, !dbg !5358
  %conv47 = zext i8 %28 to i16, !dbg !5358
  %conv48 = zext i16 %conv47 to i64, !dbg !5358
  %call49 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv48), !dbg !5358
  %tobool50 = icmp ne %struct.rtx_def* %call49, null, !dbg !5358
  br i1 %tobool50, label %cond.true52, label %cond.false85, !dbg !5358

cond.false51:                                     ; preds = %cond.false
  br i1 false, label %cond.true52, label %cond.false85, !dbg !5358

cond.true52:                                      ; preds = %cond.false51, %cond.true42, %cond.true
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5359
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5359
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !5359
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 1, !dbg !5359
  %rt_mem56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.mem_attrs**, !dbg !5359
  %30 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem56, align 8, !dbg !5359
  %cmp57 = icmp ne %struct.mem_attrs* %30, null, !dbg !5359
  br i1 %cmp57, label %cond.true59, label %cond.false65, !dbg !5359

cond.true59:                                      ; preds = %cond.true52
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5359
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5359
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !5359
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !5359
  %rt_mem63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.mem_attrs**, !dbg !5359
  %32 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem63, align 8, !dbg !5359
  %size64 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %32, i32 0, i32 2, !dbg !5359
  %33 = load %struct.rtx_def*, %struct.rtx_def** %size64, align 8, !dbg !5359
  br label %cond.end81, !dbg !5359

cond.false65:                                     ; preds = %cond.true52
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5359
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !5359
  %bf.load66 = load i32, i32* %35, align 8, !dbg !5359
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !5359
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !5359
  %cmp69 = icmp ne i32 %bf.clear68, 1, !dbg !5359
  br i1 %cmp69, label %cond.true71, label %cond.false80, !dbg !5359

cond.true71:                                      ; preds = %cond.false65
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5359
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !5359
  %bf.load72 = load i32, i32* %37, align 8, !dbg !5359
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !5359
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !5359
  %idxprom75 = zext i32 %bf.clear74 to i64, !dbg !5359
  %arrayidx76 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom75, !dbg !5359
  %38 = load i8, i8* %arrayidx76, align 1, !dbg !5359
  %conv77 = zext i8 %38 to i16, !dbg !5359
  %conv78 = zext i16 %conv77 to i64, !dbg !5359
  %call79 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv78), !dbg !5359
  br label %cond.end, !dbg !5359

cond.false80:                                     ; preds = %cond.false65
  br label %cond.end, !dbg !5359

cond.end:                                         ; preds = %cond.false80, %cond.true71
  %cond = phi %struct.rtx_def* [ %call79, %cond.true71 ], [ null, %cond.false80 ], !dbg !5359
  br label %cond.end81, !dbg !5359

cond.end81:                                       ; preds = %cond.end, %cond.true59
  %cond82 = phi %struct.rtx_def* [ %33, %cond.true59 ], [ %cond, %cond.end ], !dbg !5359
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond82, i32 0, i32 1, !dbg !5359
  %hwint = bitcast %union.u* %u83 to [1 x i64]*, !dbg !5359
  %arrayidx84 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5359
  %39 = load i64, i64* %arrayidx84, align 8, !dbg !5359
  br label %cond.end86, !dbg !5358

cond.false85:                                     ; preds = %cond.false51, %cond.true42, %cond.true
  br label %cond.end86, !dbg !5358

cond.end86:                                       ; preds = %cond.false85, %cond.end81
  %cond87 = phi i64 [ %39, %cond.end81 ], [ 0, %cond.false85 ], !dbg !5358
  store i64 %cond87, i64* %size, align 8, !dbg !5357
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5360
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !5360
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !5360
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 0, !dbg !5360
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !5360
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !5360
  %42 = load i64, i64* %size, align 8, !dbg !5361
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5362
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !5362
  %bf.load92 = load i32, i32* %44, align 8, !dbg !5362
  %bf.lshr93 = lshr i32 %bf.load92, 16, !dbg !5362
  %bf.clear94 = and i32 %bf.lshr93, 255, !dbg !5362
  %45 = load i8, i8* %code_changed, align 1, !dbg !5363
  %call95 = call i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %41, i64 0, i64 %42, i32 %bf.clear94, i8 zeroext %45), !dbg !5364
  store i32 %call95, i32* %retval, align 4, !dbg !5365
  br label %return, !dbg !5365

if.end96:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !5366
  br label %return, !dbg !5366

sw.bb97:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %46 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5367
  %tobool98 = icmp ne i32 %46, 0, !dbg !5367
  br i1 %tobool98, label %land.lhs.true99, label %if.end243, !dbg !5367

land.lhs.true99:                                  ; preds = %sw.bb97
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !5367
  %bf.load100 = load i32, i32* %48, align 8, !dbg !5367
  %bf.lshr101 = lshr i32 %bf.load100, 16, !dbg !5367
  %bf.clear102 = and i32 %bf.lshr101, 255, !dbg !5367
  %idxprom103 = zext i32 %bf.clear102 to i64, !dbg !5367
  %arrayidx104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom103, !dbg !5367
  %49 = load i8, i8* %arrayidx104, align 1, !dbg !5367
  %conv105 = zext i8 %49 to i32, !dbg !5367
  %cmp106 = icmp eq i32 %conv105, 8, !dbg !5367
  br i1 %cmp106, label %land.lhs.true135, label %lor.lhs.false108, !dbg !5367

lor.lhs.false108:                                 ; preds = %land.lhs.true99
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !5367
  %bf.load109 = load i32, i32* %51, align 8, !dbg !5367
  %bf.lshr110 = lshr i32 %bf.load109, 16, !dbg !5367
  %bf.clear111 = and i32 %bf.lshr110, 255, !dbg !5367
  %idxprom112 = zext i32 %bf.clear111 to i64, !dbg !5367
  %arrayidx113 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom112, !dbg !5367
  %52 = load i8, i8* %arrayidx113, align 1, !dbg !5367
  %conv114 = zext i8 %52 to i32, !dbg !5367
  %cmp115 = icmp eq i32 %conv114, 9, !dbg !5367
  br i1 %cmp115, label %land.lhs.true135, label %lor.lhs.false117, !dbg !5367

lor.lhs.false117:                                 ; preds = %lor.lhs.false108
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !5367
  %bf.load118 = load i32, i32* %54, align 8, !dbg !5367
  %bf.lshr119 = lshr i32 %bf.load118, 16, !dbg !5367
  %bf.clear120 = and i32 %bf.lshr119, 255, !dbg !5367
  %idxprom121 = zext i32 %bf.clear120 to i64, !dbg !5367
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom121, !dbg !5367
  %55 = load i8, i8* %arrayidx122, align 1, !dbg !5367
  %conv123 = zext i8 %55 to i32, !dbg !5367
  %cmp124 = icmp eq i32 %conv123, 11, !dbg !5367
  br i1 %cmp124, label %land.lhs.true135, label %lor.lhs.false126, !dbg !5367

lor.lhs.false126:                                 ; preds = %lor.lhs.false117
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !5367
  %bf.load127 = load i32, i32* %57, align 8, !dbg !5367
  %bf.lshr128 = lshr i32 %bf.load127, 16, !dbg !5367
  %bf.clear129 = and i32 %bf.lshr128, 255, !dbg !5367
  %idxprom130 = zext i32 %bf.clear129 to i64, !dbg !5367
  %arrayidx131 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom130, !dbg !5367
  %58 = load i8, i8* %arrayidx131, align 1, !dbg !5367
  %conv132 = zext i8 %58 to i32, !dbg !5367
  %cmp133 = icmp eq i32 %conv132, 17, !dbg !5367
  br i1 %cmp133, label %land.lhs.true135, label %if.end243, !dbg !5367

land.lhs.true135:                                 ; preds = %lor.lhs.false126, %lor.lhs.false117, %lor.lhs.false108, %land.lhs.true99
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !5367
  %bf.load136 = load i32, i32* %60, align 8, !dbg !5367
  %bf.lshr137 = lshr i32 %bf.load136, 16, !dbg !5367
  %bf.clear138 = and i32 %bf.lshr137, 255, !dbg !5367
  %idxprom139 = zext i32 %bf.clear138 to i64, !dbg !5367
  %arrayidx140 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom139, !dbg !5367
  %61 = load i8, i8* %arrayidx140, align 1, !dbg !5367
  %conv141 = zext i8 %61 to i32, !dbg !5367
  %cmp142 = icmp eq i32 %conv141, 8, !dbg !5367
  br i1 %cmp142, label %cond.true153, label %lor.lhs.false144, !dbg !5367

lor.lhs.false144:                                 ; preds = %land.lhs.true135
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !5367
  %bf.load145 = load i32, i32* %63, align 8, !dbg !5367
  %bf.lshr146 = lshr i32 %bf.load145, 16, !dbg !5367
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !5367
  %idxprom148 = zext i32 %bf.clear147 to i64, !dbg !5367
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom148, !dbg !5367
  %64 = load i8, i8* %arrayidx149, align 1, !dbg !5367
  %conv150 = zext i8 %64 to i32, !dbg !5367
  %cmp151 = icmp eq i32 %conv150, 9, !dbg !5367
  br i1 %cmp151, label %cond.true153, label %cond.false157, !dbg !5367

cond.true153:                                     ; preds = %lor.lhs.false144, %land.lhs.true135
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !5367
  %bf.load154 = load i32, i32* %66, align 8, !dbg !5367
  %bf.lshr155 = lshr i32 %bf.load154, 16, !dbg !5367
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !5367
  br label %cond.end164, !dbg !5367

cond.false157:                                    ; preds = %lor.lhs.false144
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !5367
  %bf.load158 = load i32, i32* %68, align 8, !dbg !5367
  %bf.lshr159 = lshr i32 %bf.load158, 16, !dbg !5367
  %bf.clear160 = and i32 %bf.lshr159, 255, !dbg !5367
  %idxprom161 = zext i32 %bf.clear160 to i64, !dbg !5367
  %arrayidx162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom161, !dbg !5367
  %69 = load i8, i8* %arrayidx162, align 1, !dbg !5367
  %conv163 = zext i8 %69 to i32, !dbg !5367
  br label %cond.end164, !dbg !5367

cond.end164:                                      ; preds = %cond.false157, %cond.true153
  %cond165 = phi i32 [ %bf.clear156, %cond.true153 ], [ %conv163, %cond.false157 ], !dbg !5367
  %idxprom166 = zext i32 %cond165 to i64, !dbg !5367
  %arrayidx167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom166, !dbg !5367
  %70 = load i8, i8* %arrayidx167, align 1, !dbg !5367
  %conv168 = zext i8 %70 to i32, !dbg !5367
  %cmp169 = icmp eq i32 %conv168, 9, !dbg !5367
  br i1 %cmp169, label %cond.true171, label %cond.false202, !dbg !5367

cond.true171:                                     ; preds = %cond.end164
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !5367
  %bf.load172 = load i32, i32* %72, align 8, !dbg !5367
  %bf.lshr173 = lshr i32 %bf.load172, 16, !dbg !5367
  %bf.clear174 = and i32 %bf.lshr173, 255, !dbg !5367
  %idxprom175 = zext i32 %bf.clear174 to i64, !dbg !5367
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom175, !dbg !5367
  %73 = load i8, i8* %arrayidx176, align 1, !dbg !5367
  %conv177 = zext i8 %73 to i32, !dbg !5367
  %cmp178 = icmp eq i32 %conv177, 8, !dbg !5367
  br i1 %cmp178, label %cond.true189, label %lor.lhs.false180, !dbg !5367

lor.lhs.false180:                                 ; preds = %cond.true171
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !5367
  %bf.load181 = load i32, i32* %75, align 8, !dbg !5367
  %bf.lshr182 = lshr i32 %bf.load181, 16, !dbg !5367
  %bf.clear183 = and i32 %bf.lshr182, 255, !dbg !5367
  %idxprom184 = zext i32 %bf.clear183 to i64, !dbg !5367
  %arrayidx185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom184, !dbg !5367
  %76 = load i8, i8* %arrayidx185, align 1, !dbg !5367
  %conv186 = zext i8 %76 to i32, !dbg !5367
  %cmp187 = icmp eq i32 %conv186, 9, !dbg !5367
  br i1 %cmp187, label %cond.true189, label %cond.false193, !dbg !5367

cond.true189:                                     ; preds = %lor.lhs.false180, %cond.true171
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !5367
  %bf.load190 = load i32, i32* %78, align 8, !dbg !5367
  %bf.lshr191 = lshr i32 %bf.load190, 16, !dbg !5367
  %bf.clear192 = and i32 %bf.lshr191, 255, !dbg !5367
  br label %cond.end200, !dbg !5367

cond.false193:                                    ; preds = %lor.lhs.false180
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !5367
  %bf.load194 = load i32, i32* %80, align 8, !dbg !5367
  %bf.lshr195 = lshr i32 %bf.load194, 16, !dbg !5367
  %bf.clear196 = and i32 %bf.lshr195, 255, !dbg !5367
  %idxprom197 = zext i32 %bf.clear196 to i64, !dbg !5367
  %arrayidx198 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom197, !dbg !5367
  %81 = load i8, i8* %arrayidx198, align 1, !dbg !5367
  %conv199 = zext i8 %81 to i32, !dbg !5367
  br label %cond.end200, !dbg !5367

cond.end200:                                      ; preds = %cond.false193, %cond.true189
  %cond201 = phi i32 [ %bf.clear192, %cond.true189 ], [ %conv199, %cond.false193 ], !dbg !5367
  %sub = sub i32 %cond201, 42, !dbg !5367
  %add = add i32 %sub, 4, !dbg !5367
  br label %cond.end234, !dbg !5367

cond.false202:                                    ; preds = %cond.end164
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !5367
  %bf.load203 = load i32, i32* %83, align 8, !dbg !5367
  %bf.lshr204 = lshr i32 %bf.load203, 16, !dbg !5367
  %bf.clear205 = and i32 %bf.lshr204, 255, !dbg !5367
  %idxprom206 = zext i32 %bf.clear205 to i64, !dbg !5367
  %arrayidx207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom206, !dbg !5367
  %84 = load i8, i8* %arrayidx207, align 1, !dbg !5367
  %conv208 = zext i8 %84 to i32, !dbg !5367
  %cmp209 = icmp eq i32 %conv208, 8, !dbg !5367
  br i1 %cmp209, label %cond.true220, label %lor.lhs.false211, !dbg !5367

lor.lhs.false211:                                 ; preds = %cond.false202
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !5367
  %bf.load212 = load i32, i32* %86, align 8, !dbg !5367
  %bf.lshr213 = lshr i32 %bf.load212, 16, !dbg !5367
  %bf.clear214 = and i32 %bf.lshr213, 255, !dbg !5367
  %idxprom215 = zext i32 %bf.clear214 to i64, !dbg !5367
  %arrayidx216 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom215, !dbg !5367
  %87 = load i8, i8* %arrayidx216, align 1, !dbg !5367
  %conv217 = zext i8 %87 to i32, !dbg !5367
  %cmp218 = icmp eq i32 %conv217, 9, !dbg !5367
  br i1 %cmp218, label %cond.true220, label %cond.false224, !dbg !5367

cond.true220:                                     ; preds = %lor.lhs.false211, %cond.false202
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !5367
  %bf.load221 = load i32, i32* %89, align 8, !dbg !5367
  %bf.lshr222 = lshr i32 %bf.load221, 16, !dbg !5367
  %bf.clear223 = and i32 %bf.lshr222, 255, !dbg !5367
  br label %cond.end231, !dbg !5367

cond.false224:                                    ; preds = %lor.lhs.false211
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5367
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !5367
  %bf.load225 = load i32, i32* %91, align 8, !dbg !5367
  %bf.lshr226 = lshr i32 %bf.load225, 16, !dbg !5367
  %bf.clear227 = and i32 %bf.lshr226, 255, !dbg !5367
  %idxprom228 = zext i32 %bf.clear227 to i64, !dbg !5367
  %arrayidx229 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom228, !dbg !5367
  %92 = load i8, i8* %arrayidx229, align 1, !dbg !5367
  %conv230 = zext i8 %92 to i32, !dbg !5367
  br label %cond.end231, !dbg !5367

cond.end231:                                      ; preds = %cond.false224, %cond.true220
  %cond232 = phi i32 [ %bf.clear223, %cond.true220 ], [ %conv230, %cond.false224 ], !dbg !5367
  %sub233 = sub i32 %cond232, 38, !dbg !5367
  br label %cond.end234, !dbg !5367

cond.end234:                                      ; preds = %cond.end231, %cond.end200
  %cond235 = phi i32 [ %add, %cond.end200 ], [ %sub233, %cond.end231 ], !dbg !5367
  %idxprom236 = zext i32 %cond235 to i64, !dbg !5367
  %arrayidx237 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom236, !dbg !5367
  %93 = load %struct.real_format*, %struct.real_format** %arrayidx237, align 8, !dbg !5367
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %93, i32 0, i32 11, !dbg !5367
  %94 = load i8, i8* %has_nans, align 2, !dbg !5367
  %conv238 = zext i8 %94 to i32, !dbg !5367
  %tobool239 = icmp ne i32 %conv238, 0, !dbg !5367
  br i1 %tobool239, label %land.lhs.true240, label %if.end243, !dbg !5367

land.lhs.true240:                                 ; preds = %cond.end234
  %95 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5367
  %tobool241 = icmp ne i32 %95, 0, !dbg !5367
  br i1 %tobool241, label %if.end243, label %if.then242, !dbg !5369

if.then242:                                       ; preds = %land.lhs.true240
  store i32 1, i32* %retval, align 4, !dbg !5370
  br label %return, !dbg !5370

if.end243:                                        ; preds = %land.lhs.true240, %cond.end234, %lor.lhs.false126, %sw.bb97
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5371
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !5371
  %bf.load244 = load i32, i32* %97, align 8, !dbg !5371
  %bf.lshr245 = lshr i32 %bf.load244, 16, !dbg !5371
  %bf.clear246 = and i32 %bf.lshr245, 255, !dbg !5371
  %idxprom247 = zext i32 %bf.clear246 to i64, !dbg !5371
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom247, !dbg !5371
  %98 = load i8, i8* %arrayidx248, align 1, !dbg !5371
  %conv249 = zext i8 %98 to i32, !dbg !5371
  %cmp250 = icmp eq i32 %conv249, 8, !dbg !5371
  br i1 %cmp250, label %if.then261, label %lor.lhs.false252, !dbg !5371

lor.lhs.false252:                                 ; preds = %if.end243
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5371
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !5371
  %bf.load253 = load i32, i32* %100, align 8, !dbg !5371
  %bf.lshr254 = lshr i32 %bf.load253, 16, !dbg !5371
  %bf.clear255 = and i32 %bf.lshr254, 255, !dbg !5371
  %idxprom256 = zext i32 %bf.clear255 to i64, !dbg !5371
  %arrayidx257 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom256, !dbg !5371
  %101 = load i8, i8* %arrayidx257, align 1, !dbg !5371
  %conv258 = zext i8 %101 to i32, !dbg !5371
  %cmp259 = icmp eq i32 %conv258, 9, !dbg !5371
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !5373

if.then261:                                       ; preds = %lor.lhs.false252, %if.end243
  %102 = load i32, i32* @flag_trapping_math, align 4, !dbg !5374
  store i32 %102, i32* %retval, align 4, !dbg !5375
  br label %return, !dbg !5375

if.end262:                                        ; preds = %lor.lhs.false252
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5376
  %u263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !5376
  %fld264 = bitcast %union.u* %u263 to [1 x %union.rtunion_def]*, !dbg !5376
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i64 0, i64 1, !dbg !5376
  %rt_rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**, !dbg !5376
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx266, align 8, !dbg !5376
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !5376
  %bf.load267 = load i32, i32* %105, align 8, !dbg !5376
  %bf.clear268 = and i32 %bf.load267, 65535, !dbg !5376
  %idxprom269 = sext i32 %bf.clear268 to i64, !dbg !5376
  %arrayidx270 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom269, !dbg !5376
  %106 = load i32, i32* %arrayidx270, align 4, !dbg !5376
  %cmp271 = icmp eq i32 %106, 9, !dbg !5376
  br i1 %cmp271, label %lor.lhs.false273, label %if.then280, !dbg !5378

lor.lhs.false273:                                 ; preds = %if.end262
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5379
  %u274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !5379
  %fld275 = bitcast %union.u* %u274 to [1 x %union.rtunion_def]*, !dbg !5379
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i64 0, i64 1, !dbg !5379
  %rt_rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**, !dbg !5379
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx277, align 8, !dbg !5379
  %109 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5380
  %cmp278 = icmp eq %struct.rtx_def* %108, %109, !dbg !5381
  br i1 %cmp278, label %if.then280, label %if.end281, !dbg !5382

if.then280:                                       ; preds = %lor.lhs.false273, %if.end262
  store i32 1, i32* %retval, align 4, !dbg !5383
  br label %return, !dbg !5383

if.end281:                                        ; preds = %lor.lhs.false273
  br label %sw.epilog, !dbg !5384

sw.bb282:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5385
  br label %return, !dbg !5385

sw.bb283:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %110 = load i32, i32* @flag_trapping_math, align 4, !dbg !5386
  %tobool284 = icmp ne i32 %110, 0, !dbg !5386
  br i1 %tobool284, label %if.end286, label %if.then285, !dbg !5388

if.then285:                                       ; preds = %sw.bb283
  br label %sw.epilog, !dbg !5389

if.end286:                                        ; preds = %sw.bb283
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !5390
  %bf.load287 = load i32, i32* %112, align 8, !dbg !5390
  %bf.lshr288 = lshr i32 %bf.load287, 16, !dbg !5390
  %bf.clear289 = and i32 %bf.lshr288, 255, !dbg !5390
  %idxprom290 = zext i32 %bf.clear289 to i64, !dbg !5390
  %arrayidx291 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom290, !dbg !5390
  %113 = load i8, i8* %arrayidx291, align 1, !dbg !5390
  %conv292 = zext i8 %113 to i32, !dbg !5390
  %cmp293 = icmp eq i32 %conv292, 8, !dbg !5390
  br i1 %cmp293, label %land.lhs.true322, label %lor.lhs.false295, !dbg !5390

lor.lhs.false295:                                 ; preds = %if.end286
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !5390
  %bf.load296 = load i32, i32* %115, align 8, !dbg !5390
  %bf.lshr297 = lshr i32 %bf.load296, 16, !dbg !5390
  %bf.clear298 = and i32 %bf.lshr297, 255, !dbg !5390
  %idxprom299 = zext i32 %bf.clear298 to i64, !dbg !5390
  %arrayidx300 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom299, !dbg !5390
  %116 = load i8, i8* %arrayidx300, align 1, !dbg !5390
  %conv301 = zext i8 %116 to i32, !dbg !5390
  %cmp302 = icmp eq i32 %conv301, 9, !dbg !5390
  br i1 %cmp302, label %land.lhs.true322, label %lor.lhs.false304, !dbg !5390

lor.lhs.false304:                                 ; preds = %lor.lhs.false295
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !5390
  %bf.load305 = load i32, i32* %118, align 8, !dbg !5390
  %bf.lshr306 = lshr i32 %bf.load305, 16, !dbg !5390
  %bf.clear307 = and i32 %bf.lshr306, 255, !dbg !5390
  %idxprom308 = zext i32 %bf.clear307 to i64, !dbg !5390
  %arrayidx309 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom308, !dbg !5390
  %119 = load i8, i8* %arrayidx309, align 1, !dbg !5390
  %conv310 = zext i8 %119 to i32, !dbg !5390
  %cmp311 = icmp eq i32 %conv310, 11, !dbg !5390
  br i1 %cmp311, label %land.lhs.true322, label %lor.lhs.false313, !dbg !5390

lor.lhs.false313:                                 ; preds = %lor.lhs.false304
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !5390
  %bf.load314 = load i32, i32* %121, align 8, !dbg !5390
  %bf.lshr315 = lshr i32 %bf.load314, 16, !dbg !5390
  %bf.clear316 = and i32 %bf.lshr315, 255, !dbg !5390
  %idxprom317 = zext i32 %bf.clear316 to i64, !dbg !5390
  %arrayidx318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom317, !dbg !5390
  %122 = load i8, i8* %arrayidx318, align 1, !dbg !5390
  %conv319 = zext i8 %122 to i32, !dbg !5390
  %cmp320 = icmp eq i32 %conv319, 17, !dbg !5390
  br i1 %cmp320, label %land.lhs.true322, label %if.end433, !dbg !5390

land.lhs.true322:                                 ; preds = %lor.lhs.false313, %lor.lhs.false304, %lor.lhs.false295, %if.end286
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %124 = bitcast %struct.rtx_def* %123 to i32*, !dbg !5390
  %bf.load323 = load i32, i32* %124, align 8, !dbg !5390
  %bf.lshr324 = lshr i32 %bf.load323, 16, !dbg !5390
  %bf.clear325 = and i32 %bf.lshr324, 255, !dbg !5390
  %idxprom326 = zext i32 %bf.clear325 to i64, !dbg !5390
  %arrayidx327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom326, !dbg !5390
  %125 = load i8, i8* %arrayidx327, align 1, !dbg !5390
  %conv328 = zext i8 %125 to i32, !dbg !5390
  %cmp329 = icmp eq i32 %conv328, 8, !dbg !5390
  br i1 %cmp329, label %cond.true340, label %lor.lhs.false331, !dbg !5390

lor.lhs.false331:                                 ; preds = %land.lhs.true322
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !5390
  %bf.load332 = load i32, i32* %127, align 8, !dbg !5390
  %bf.lshr333 = lshr i32 %bf.load332, 16, !dbg !5390
  %bf.clear334 = and i32 %bf.lshr333, 255, !dbg !5390
  %idxprom335 = zext i32 %bf.clear334 to i64, !dbg !5390
  %arrayidx336 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom335, !dbg !5390
  %128 = load i8, i8* %arrayidx336, align 1, !dbg !5390
  %conv337 = zext i8 %128 to i32, !dbg !5390
  %cmp338 = icmp eq i32 %conv337, 9, !dbg !5390
  br i1 %cmp338, label %cond.true340, label %cond.false344, !dbg !5390

cond.true340:                                     ; preds = %lor.lhs.false331, %land.lhs.true322
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !5390
  %bf.load341 = load i32, i32* %130, align 8, !dbg !5390
  %bf.lshr342 = lshr i32 %bf.load341, 16, !dbg !5390
  %bf.clear343 = and i32 %bf.lshr342, 255, !dbg !5390
  br label %cond.end351, !dbg !5390

cond.false344:                                    ; preds = %lor.lhs.false331
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !5390
  %bf.load345 = load i32, i32* %132, align 8, !dbg !5390
  %bf.lshr346 = lshr i32 %bf.load345, 16, !dbg !5390
  %bf.clear347 = and i32 %bf.lshr346, 255, !dbg !5390
  %idxprom348 = zext i32 %bf.clear347 to i64, !dbg !5390
  %arrayidx349 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom348, !dbg !5390
  %133 = load i8, i8* %arrayidx349, align 1, !dbg !5390
  %conv350 = zext i8 %133 to i32, !dbg !5390
  br label %cond.end351, !dbg !5390

cond.end351:                                      ; preds = %cond.false344, %cond.true340
  %cond352 = phi i32 [ %bf.clear343, %cond.true340 ], [ %conv350, %cond.false344 ], !dbg !5390
  %idxprom353 = zext i32 %cond352 to i64, !dbg !5390
  %arrayidx354 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom353, !dbg !5390
  %134 = load i8, i8* %arrayidx354, align 1, !dbg !5390
  %conv355 = zext i8 %134 to i32, !dbg !5390
  %cmp356 = icmp eq i32 %conv355, 9, !dbg !5390
  br i1 %cmp356, label %cond.true358, label %cond.false391, !dbg !5390

cond.true358:                                     ; preds = %cond.end351
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !5390
  %bf.load359 = load i32, i32* %136, align 8, !dbg !5390
  %bf.lshr360 = lshr i32 %bf.load359, 16, !dbg !5390
  %bf.clear361 = and i32 %bf.lshr360, 255, !dbg !5390
  %idxprom362 = zext i32 %bf.clear361 to i64, !dbg !5390
  %arrayidx363 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom362, !dbg !5390
  %137 = load i8, i8* %arrayidx363, align 1, !dbg !5390
  %conv364 = zext i8 %137 to i32, !dbg !5390
  %cmp365 = icmp eq i32 %conv364, 8, !dbg !5390
  br i1 %cmp365, label %cond.true376, label %lor.lhs.false367, !dbg !5390

lor.lhs.false367:                                 ; preds = %cond.true358
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !5390
  %bf.load368 = load i32, i32* %139, align 8, !dbg !5390
  %bf.lshr369 = lshr i32 %bf.load368, 16, !dbg !5390
  %bf.clear370 = and i32 %bf.lshr369, 255, !dbg !5390
  %idxprom371 = zext i32 %bf.clear370 to i64, !dbg !5390
  %arrayidx372 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom371, !dbg !5390
  %140 = load i8, i8* %arrayidx372, align 1, !dbg !5390
  %conv373 = zext i8 %140 to i32, !dbg !5390
  %cmp374 = icmp eq i32 %conv373, 9, !dbg !5390
  br i1 %cmp374, label %cond.true376, label %cond.false380, !dbg !5390

cond.true376:                                     ; preds = %lor.lhs.false367, %cond.true358
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %142 = bitcast %struct.rtx_def* %141 to i32*, !dbg !5390
  %bf.load377 = load i32, i32* %142, align 8, !dbg !5390
  %bf.lshr378 = lshr i32 %bf.load377, 16, !dbg !5390
  %bf.clear379 = and i32 %bf.lshr378, 255, !dbg !5390
  br label %cond.end387, !dbg !5390

cond.false380:                                    ; preds = %lor.lhs.false367
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %144 = bitcast %struct.rtx_def* %143 to i32*, !dbg !5390
  %bf.load381 = load i32, i32* %144, align 8, !dbg !5390
  %bf.lshr382 = lshr i32 %bf.load381, 16, !dbg !5390
  %bf.clear383 = and i32 %bf.lshr382, 255, !dbg !5390
  %idxprom384 = zext i32 %bf.clear383 to i64, !dbg !5390
  %arrayidx385 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom384, !dbg !5390
  %145 = load i8, i8* %arrayidx385, align 1, !dbg !5390
  %conv386 = zext i8 %145 to i32, !dbg !5390
  br label %cond.end387, !dbg !5390

cond.end387:                                      ; preds = %cond.false380, %cond.true376
  %cond388 = phi i32 [ %bf.clear379, %cond.true376 ], [ %conv386, %cond.false380 ], !dbg !5390
  %sub389 = sub i32 %cond388, 42, !dbg !5390
  %add390 = add i32 %sub389, 4, !dbg !5390
  br label %cond.end423, !dbg !5390

cond.false391:                                    ; preds = %cond.end351
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !5390
  %bf.load392 = load i32, i32* %147, align 8, !dbg !5390
  %bf.lshr393 = lshr i32 %bf.load392, 16, !dbg !5390
  %bf.clear394 = and i32 %bf.lshr393, 255, !dbg !5390
  %idxprom395 = zext i32 %bf.clear394 to i64, !dbg !5390
  %arrayidx396 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom395, !dbg !5390
  %148 = load i8, i8* %arrayidx396, align 1, !dbg !5390
  %conv397 = zext i8 %148 to i32, !dbg !5390
  %cmp398 = icmp eq i32 %conv397, 8, !dbg !5390
  br i1 %cmp398, label %cond.true409, label %lor.lhs.false400, !dbg !5390

lor.lhs.false400:                                 ; preds = %cond.false391
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !5390
  %bf.load401 = load i32, i32* %150, align 8, !dbg !5390
  %bf.lshr402 = lshr i32 %bf.load401, 16, !dbg !5390
  %bf.clear403 = and i32 %bf.lshr402, 255, !dbg !5390
  %idxprom404 = zext i32 %bf.clear403 to i64, !dbg !5390
  %arrayidx405 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom404, !dbg !5390
  %151 = load i8, i8* %arrayidx405, align 1, !dbg !5390
  %conv406 = zext i8 %151 to i32, !dbg !5390
  %cmp407 = icmp eq i32 %conv406, 9, !dbg !5390
  br i1 %cmp407, label %cond.true409, label %cond.false413, !dbg !5390

cond.true409:                                     ; preds = %lor.lhs.false400, %cond.false391
  %152 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %153 = bitcast %struct.rtx_def* %152 to i32*, !dbg !5390
  %bf.load410 = load i32, i32* %153, align 8, !dbg !5390
  %bf.lshr411 = lshr i32 %bf.load410, 16, !dbg !5390
  %bf.clear412 = and i32 %bf.lshr411, 255, !dbg !5390
  br label %cond.end420, !dbg !5390

cond.false413:                                    ; preds = %lor.lhs.false400
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5390
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !5390
  %bf.load414 = load i32, i32* %155, align 8, !dbg !5390
  %bf.lshr415 = lshr i32 %bf.load414, 16, !dbg !5390
  %bf.clear416 = and i32 %bf.lshr415, 255, !dbg !5390
  %idxprom417 = zext i32 %bf.clear416 to i64, !dbg !5390
  %arrayidx418 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom417, !dbg !5390
  %156 = load i8, i8* %arrayidx418, align 1, !dbg !5390
  %conv419 = zext i8 %156 to i32, !dbg !5390
  br label %cond.end420, !dbg !5390

cond.end420:                                      ; preds = %cond.false413, %cond.true409
  %cond421 = phi i32 [ %bf.clear412, %cond.true409 ], [ %conv419, %cond.false413 ], !dbg !5390
  %sub422 = sub i32 %cond421, 38, !dbg !5390
  br label %cond.end423, !dbg !5390

cond.end423:                                      ; preds = %cond.end420, %cond.end387
  %cond424 = phi i32 [ %add390, %cond.end387 ], [ %sub422, %cond.end420 ], !dbg !5390
  %idxprom425 = zext i32 %cond424 to i64, !dbg !5390
  %arrayidx426 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom425, !dbg !5390
  %157 = load %struct.real_format*, %struct.real_format** %arrayidx426, align 8, !dbg !5390
  %has_nans427 = getelementptr inbounds %struct.real_format, %struct.real_format* %157, i32 0, i32 11, !dbg !5390
  %158 = load i8, i8* %has_nans427, align 2, !dbg !5390
  %conv428 = zext i8 %158 to i32, !dbg !5390
  %tobool429 = icmp ne i32 %conv428, 0, !dbg !5390
  br i1 %tobool429, label %land.lhs.true430, label %if.end433, !dbg !5390

land.lhs.true430:                                 ; preds = %cond.end423
  %159 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5390
  %tobool431 = icmp ne i32 %159, 0, !dbg !5390
  br i1 %tobool431, label %if.end433, label %if.then432, !dbg !5392

if.then432:                                       ; preds = %land.lhs.true430
  store i32 1, i32* %retval, align 4, !dbg !5393
  br label %return, !dbg !5393

if.end433:                                        ; preds = %land.lhs.true430, %cond.end423, %lor.lhs.false313
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !5394
  %fld435 = bitcast %union.u* %u434 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i64 0, i64 0, !dbg !5394
  %rt_rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**, !dbg !5394
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx437, align 8, !dbg !5394
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !5394
  %bf.load438 = load i32, i32* %162, align 8, !dbg !5394
  %bf.lshr439 = lshr i32 %bf.load438, 16, !dbg !5394
  %bf.clear440 = and i32 %bf.lshr439, 255, !dbg !5394
  %idxprom441 = zext i32 %bf.clear440 to i64, !dbg !5394
  %arrayidx442 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom441, !dbg !5394
  %163 = load i8, i8* %arrayidx442, align 1, !dbg !5394
  %conv443 = zext i8 %163 to i32, !dbg !5394
  %cmp444 = icmp eq i32 %conv443, 8, !dbg !5394
  br i1 %cmp444, label %land.lhs.true485, label %lor.lhs.false446, !dbg !5394

lor.lhs.false446:                                 ; preds = %if.end433
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !5394
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 0, !dbg !5394
  %rt_rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**, !dbg !5394
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx450, align 8, !dbg !5394
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !5394
  %bf.load451 = load i32, i32* %166, align 8, !dbg !5394
  %bf.lshr452 = lshr i32 %bf.load451, 16, !dbg !5394
  %bf.clear453 = and i32 %bf.lshr452, 255, !dbg !5394
  %idxprom454 = zext i32 %bf.clear453 to i64, !dbg !5394
  %arrayidx455 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom454, !dbg !5394
  %167 = load i8, i8* %arrayidx455, align 1, !dbg !5394
  %conv456 = zext i8 %167 to i32, !dbg !5394
  %cmp457 = icmp eq i32 %conv456, 9, !dbg !5394
  br i1 %cmp457, label %land.lhs.true485, label %lor.lhs.false459, !dbg !5394

lor.lhs.false459:                                 ; preds = %lor.lhs.false446
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1, !dbg !5394
  %fld461 = bitcast %union.u* %u460 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i64 0, i64 0, !dbg !5394
  %rt_rtx463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtx_def**, !dbg !5394
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx463, align 8, !dbg !5394
  %170 = bitcast %struct.rtx_def* %169 to i32*, !dbg !5394
  %bf.load464 = load i32, i32* %170, align 8, !dbg !5394
  %bf.lshr465 = lshr i32 %bf.load464, 16, !dbg !5394
  %bf.clear466 = and i32 %bf.lshr465, 255, !dbg !5394
  %idxprom467 = zext i32 %bf.clear466 to i64, !dbg !5394
  %arrayidx468 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom467, !dbg !5394
  %171 = load i8, i8* %arrayidx468, align 1, !dbg !5394
  %conv469 = zext i8 %171 to i32, !dbg !5394
  %cmp470 = icmp eq i32 %conv469, 11, !dbg !5394
  br i1 %cmp470, label %land.lhs.true485, label %lor.lhs.false472, !dbg !5394

lor.lhs.false472:                                 ; preds = %lor.lhs.false459
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !5394
  %fld474 = bitcast %union.u* %u473 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx475 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld474, i64 0, i64 0, !dbg !5394
  %rt_rtx476 = bitcast %union.rtunion_def* %arrayidx475 to %struct.rtx_def**, !dbg !5394
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx476, align 8, !dbg !5394
  %174 = bitcast %struct.rtx_def* %173 to i32*, !dbg !5394
  %bf.load477 = load i32, i32* %174, align 8, !dbg !5394
  %bf.lshr478 = lshr i32 %bf.load477, 16, !dbg !5394
  %bf.clear479 = and i32 %bf.lshr478, 255, !dbg !5394
  %idxprom480 = zext i32 %bf.clear479 to i64, !dbg !5394
  %arrayidx481 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom480, !dbg !5394
  %175 = load i8, i8* %arrayidx481, align 1, !dbg !5394
  %conv482 = zext i8 %175 to i32, !dbg !5394
  %cmp483 = icmp eq i32 %conv482, 17, !dbg !5394
  br i1 %cmp483, label %land.lhs.true485, label %lor.lhs.false643, !dbg !5394

land.lhs.true485:                                 ; preds = %lor.lhs.false472, %lor.lhs.false459, %lor.lhs.false446, %if.end433
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !5394
  %fld487 = bitcast %union.u* %u486 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx488 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld487, i64 0, i64 0, !dbg !5394
  %rt_rtx489 = bitcast %union.rtunion_def* %arrayidx488 to %struct.rtx_def**, !dbg !5394
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx489, align 8, !dbg !5394
  %178 = bitcast %struct.rtx_def* %177 to i32*, !dbg !5394
  %bf.load490 = load i32, i32* %178, align 8, !dbg !5394
  %bf.lshr491 = lshr i32 %bf.load490, 16, !dbg !5394
  %bf.clear492 = and i32 %bf.lshr491, 255, !dbg !5394
  %idxprom493 = zext i32 %bf.clear492 to i64, !dbg !5394
  %arrayidx494 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom493, !dbg !5394
  %179 = load i8, i8* %arrayidx494, align 1, !dbg !5394
  %conv495 = zext i8 %179 to i32, !dbg !5394
  %cmp496 = icmp eq i32 %conv495, 8, !dbg !5394
  br i1 %cmp496, label %cond.true511, label %lor.lhs.false498, !dbg !5394

lor.lhs.false498:                                 ; preds = %land.lhs.true485
  %180 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1, !dbg !5394
  %fld500 = bitcast %union.u* %u499 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx501 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld500, i64 0, i64 0, !dbg !5394
  %rt_rtx502 = bitcast %union.rtunion_def* %arrayidx501 to %struct.rtx_def**, !dbg !5394
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx502, align 8, !dbg !5394
  %182 = bitcast %struct.rtx_def* %181 to i32*, !dbg !5394
  %bf.load503 = load i32, i32* %182, align 8, !dbg !5394
  %bf.lshr504 = lshr i32 %bf.load503, 16, !dbg !5394
  %bf.clear505 = and i32 %bf.lshr504, 255, !dbg !5394
  %idxprom506 = zext i32 %bf.clear505 to i64, !dbg !5394
  %arrayidx507 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom506, !dbg !5394
  %183 = load i8, i8* %arrayidx507, align 1, !dbg !5394
  %conv508 = zext i8 %183 to i32, !dbg !5394
  %cmp509 = icmp eq i32 %conv508, 9, !dbg !5394
  br i1 %cmp509, label %cond.true511, label %cond.false519, !dbg !5394

cond.true511:                                     ; preds = %lor.lhs.false498, %land.lhs.true485
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1, !dbg !5394
  %fld513 = bitcast %union.u* %u512 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx514 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld513, i64 0, i64 0, !dbg !5394
  %rt_rtx515 = bitcast %union.rtunion_def* %arrayidx514 to %struct.rtx_def**, !dbg !5394
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx515, align 8, !dbg !5394
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !5394
  %bf.load516 = load i32, i32* %186, align 8, !dbg !5394
  %bf.lshr517 = lshr i32 %bf.load516, 16, !dbg !5394
  %bf.clear518 = and i32 %bf.lshr517, 255, !dbg !5394
  br label %cond.end530, !dbg !5394

cond.false519:                                    ; preds = %lor.lhs.false498
  %187 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1, !dbg !5394
  %fld521 = bitcast %union.u* %u520 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i64 0, i64 0, !dbg !5394
  %rt_rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**, !dbg !5394
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx523, align 8, !dbg !5394
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !5394
  %bf.load524 = load i32, i32* %189, align 8, !dbg !5394
  %bf.lshr525 = lshr i32 %bf.load524, 16, !dbg !5394
  %bf.clear526 = and i32 %bf.lshr525, 255, !dbg !5394
  %idxprom527 = zext i32 %bf.clear526 to i64, !dbg !5394
  %arrayidx528 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom527, !dbg !5394
  %190 = load i8, i8* %arrayidx528, align 1, !dbg !5394
  %conv529 = zext i8 %190 to i32, !dbg !5394
  br label %cond.end530, !dbg !5394

cond.end530:                                      ; preds = %cond.false519, %cond.true511
  %cond531 = phi i32 [ %bf.clear518, %cond.true511 ], [ %conv529, %cond.false519 ], !dbg !5394
  %idxprom532 = zext i32 %cond531 to i64, !dbg !5394
  %arrayidx533 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom532, !dbg !5394
  %191 = load i8, i8* %arrayidx533, align 1, !dbg !5394
  %conv534 = zext i8 %191 to i32, !dbg !5394
  %cmp535 = icmp eq i32 %conv534, 9, !dbg !5394
  br i1 %cmp535, label %cond.true537, label %cond.false586, !dbg !5394

cond.true537:                                     ; preds = %cond.end530
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u538 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1, !dbg !5394
  %fld539 = bitcast %union.u* %u538 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i64 0, i64 0, !dbg !5394
  %rt_rtx541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtx_def**, !dbg !5394
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx541, align 8, !dbg !5394
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !5394
  %bf.load542 = load i32, i32* %194, align 8, !dbg !5394
  %bf.lshr543 = lshr i32 %bf.load542, 16, !dbg !5394
  %bf.clear544 = and i32 %bf.lshr543, 255, !dbg !5394
  %idxprom545 = zext i32 %bf.clear544 to i64, !dbg !5394
  %arrayidx546 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom545, !dbg !5394
  %195 = load i8, i8* %arrayidx546, align 1, !dbg !5394
  %conv547 = zext i8 %195 to i32, !dbg !5394
  %cmp548 = icmp eq i32 %conv547, 8, !dbg !5394
  br i1 %cmp548, label %cond.true563, label %lor.lhs.false550, !dbg !5394

lor.lhs.false550:                                 ; preds = %cond.true537
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !5394
  %fld552 = bitcast %union.u* %u551 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i64 0, i64 0, !dbg !5394
  %rt_rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**, !dbg !5394
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx554, align 8, !dbg !5394
  %198 = bitcast %struct.rtx_def* %197 to i32*, !dbg !5394
  %bf.load555 = load i32, i32* %198, align 8, !dbg !5394
  %bf.lshr556 = lshr i32 %bf.load555, 16, !dbg !5394
  %bf.clear557 = and i32 %bf.lshr556, 255, !dbg !5394
  %idxprom558 = zext i32 %bf.clear557 to i64, !dbg !5394
  %arrayidx559 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom558, !dbg !5394
  %199 = load i8, i8* %arrayidx559, align 1, !dbg !5394
  %conv560 = zext i8 %199 to i32, !dbg !5394
  %cmp561 = icmp eq i32 %conv560, 9, !dbg !5394
  br i1 %cmp561, label %cond.true563, label %cond.false571, !dbg !5394

cond.true563:                                     ; preds = %lor.lhs.false550, %cond.true537
  %200 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u564 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1, !dbg !5394
  %fld565 = bitcast %union.u* %u564 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx566 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld565, i64 0, i64 0, !dbg !5394
  %rt_rtx567 = bitcast %union.rtunion_def* %arrayidx566 to %struct.rtx_def**, !dbg !5394
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx567, align 8, !dbg !5394
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !5394
  %bf.load568 = load i32, i32* %202, align 8, !dbg !5394
  %bf.lshr569 = lshr i32 %bf.load568, 16, !dbg !5394
  %bf.clear570 = and i32 %bf.lshr569, 255, !dbg !5394
  br label %cond.end582, !dbg !5394

cond.false571:                                    ; preds = %lor.lhs.false550
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u572 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !5394
  %fld573 = bitcast %union.u* %u572 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld573, i64 0, i64 0, !dbg !5394
  %rt_rtx575 = bitcast %union.rtunion_def* %arrayidx574 to %struct.rtx_def**, !dbg !5394
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx575, align 8, !dbg !5394
  %205 = bitcast %struct.rtx_def* %204 to i32*, !dbg !5394
  %bf.load576 = load i32, i32* %205, align 8, !dbg !5394
  %bf.lshr577 = lshr i32 %bf.load576, 16, !dbg !5394
  %bf.clear578 = and i32 %bf.lshr577, 255, !dbg !5394
  %idxprom579 = zext i32 %bf.clear578 to i64, !dbg !5394
  %arrayidx580 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom579, !dbg !5394
  %206 = load i8, i8* %arrayidx580, align 1, !dbg !5394
  %conv581 = zext i8 %206 to i32, !dbg !5394
  br label %cond.end582, !dbg !5394

cond.end582:                                      ; preds = %cond.false571, %cond.true563
  %cond583 = phi i32 [ %bf.clear570, %cond.true563 ], [ %conv581, %cond.false571 ], !dbg !5394
  %sub584 = sub i32 %cond583, 42, !dbg !5394
  %add585 = add i32 %sub584, 4, !dbg !5394
  br label %cond.end634, !dbg !5394

cond.false586:                                    ; preds = %cond.end530
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1, !dbg !5394
  %fld588 = bitcast %union.u* %u587 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i64 0, i64 0, !dbg !5394
  %rt_rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**, !dbg !5394
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx590, align 8, !dbg !5394
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !5394
  %bf.load591 = load i32, i32* %209, align 8, !dbg !5394
  %bf.lshr592 = lshr i32 %bf.load591, 16, !dbg !5394
  %bf.clear593 = and i32 %bf.lshr592, 255, !dbg !5394
  %idxprom594 = zext i32 %bf.clear593 to i64, !dbg !5394
  %arrayidx595 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom594, !dbg !5394
  %210 = load i8, i8* %arrayidx595, align 1, !dbg !5394
  %conv596 = zext i8 %210 to i32, !dbg !5394
  %cmp597 = icmp eq i32 %conv596, 8, !dbg !5394
  br i1 %cmp597, label %cond.true612, label %lor.lhs.false599, !dbg !5394

lor.lhs.false599:                                 ; preds = %cond.false586
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !5394
  %fld601 = bitcast %union.u* %u600 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx602 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld601, i64 0, i64 0, !dbg !5394
  %rt_rtx603 = bitcast %union.rtunion_def* %arrayidx602 to %struct.rtx_def**, !dbg !5394
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx603, align 8, !dbg !5394
  %213 = bitcast %struct.rtx_def* %212 to i32*, !dbg !5394
  %bf.load604 = load i32, i32* %213, align 8, !dbg !5394
  %bf.lshr605 = lshr i32 %bf.load604, 16, !dbg !5394
  %bf.clear606 = and i32 %bf.lshr605, 255, !dbg !5394
  %idxprom607 = zext i32 %bf.clear606 to i64, !dbg !5394
  %arrayidx608 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom607, !dbg !5394
  %214 = load i8, i8* %arrayidx608, align 1, !dbg !5394
  %conv609 = zext i8 %214 to i32, !dbg !5394
  %cmp610 = icmp eq i32 %conv609, 9, !dbg !5394
  br i1 %cmp610, label %cond.true612, label %cond.false620, !dbg !5394

cond.true612:                                     ; preds = %lor.lhs.false599, %cond.false586
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u613 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1, !dbg !5394
  %fld614 = bitcast %union.u* %u613 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx615 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld614, i64 0, i64 0, !dbg !5394
  %rt_rtx616 = bitcast %union.rtunion_def* %arrayidx615 to %struct.rtx_def**, !dbg !5394
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx616, align 8, !dbg !5394
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !5394
  %bf.load617 = load i32, i32* %217, align 8, !dbg !5394
  %bf.lshr618 = lshr i32 %bf.load617, 16, !dbg !5394
  %bf.clear619 = and i32 %bf.lshr618, 255, !dbg !5394
  br label %cond.end631, !dbg !5394

cond.false620:                                    ; preds = %lor.lhs.false599
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5394
  %u621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !5394
  %fld622 = bitcast %union.u* %u621 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i64 0, i64 0, !dbg !5394
  %rt_rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**, !dbg !5394
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx624, align 8, !dbg !5394
  %220 = bitcast %struct.rtx_def* %219 to i32*, !dbg !5394
  %bf.load625 = load i32, i32* %220, align 8, !dbg !5394
  %bf.lshr626 = lshr i32 %bf.load625, 16, !dbg !5394
  %bf.clear627 = and i32 %bf.lshr626, 255, !dbg !5394
  %idxprom628 = zext i32 %bf.clear627 to i64, !dbg !5394
  %arrayidx629 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom628, !dbg !5394
  %221 = load i8, i8* %arrayidx629, align 1, !dbg !5394
  %conv630 = zext i8 %221 to i32, !dbg !5394
  br label %cond.end631, !dbg !5394

cond.end631:                                      ; preds = %cond.false620, %cond.true612
  %cond632 = phi i32 [ %bf.clear619, %cond.true612 ], [ %conv630, %cond.false620 ], !dbg !5394
  %sub633 = sub i32 %cond632, 38, !dbg !5394
  br label %cond.end634, !dbg !5394

cond.end634:                                      ; preds = %cond.end631, %cond.end582
  %cond635 = phi i32 [ %add585, %cond.end582 ], [ %sub633, %cond.end631 ], !dbg !5394
  %idxprom636 = zext i32 %cond635 to i64, !dbg !5394
  %arrayidx637 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom636, !dbg !5394
  %222 = load %struct.real_format*, %struct.real_format** %arrayidx637, align 8, !dbg !5394
  %has_nans638 = getelementptr inbounds %struct.real_format, %struct.real_format* %222, i32 0, i32 11, !dbg !5394
  %223 = load i8, i8* %has_nans638, align 2, !dbg !5394
  %conv639 = zext i8 %223 to i32, !dbg !5394
  %tobool640 = icmp ne i32 %conv639, 0, !dbg !5394
  br i1 %tobool640, label %land.lhs.true641, label %lor.lhs.false643, !dbg !5394

land.lhs.true641:                                 ; preds = %cond.end634
  %224 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5394
  %tobool642 = icmp ne i32 %224, 0, !dbg !5394
  br i1 %tobool642, label %lor.lhs.false643, label %if.then853, !dbg !5396

lor.lhs.false643:                                 ; preds = %land.lhs.true641, %cond.end634, %lor.lhs.false472
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1, !dbg !5397
  %fld645 = bitcast %union.u* %u644 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i64 0, i64 1, !dbg !5397
  %rt_rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**, !dbg !5397
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx647, align 8, !dbg !5397
  %227 = bitcast %struct.rtx_def* %226 to i32*, !dbg !5397
  %bf.load648 = load i32, i32* %227, align 8, !dbg !5397
  %bf.lshr649 = lshr i32 %bf.load648, 16, !dbg !5397
  %bf.clear650 = and i32 %bf.lshr649, 255, !dbg !5397
  %idxprom651 = zext i32 %bf.clear650 to i64, !dbg !5397
  %arrayidx652 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom651, !dbg !5397
  %228 = load i8, i8* %arrayidx652, align 1, !dbg !5397
  %conv653 = zext i8 %228 to i32, !dbg !5397
  %cmp654 = icmp eq i32 %conv653, 8, !dbg !5397
  br i1 %cmp654, label %land.lhs.true695, label %lor.lhs.false656, !dbg !5397

lor.lhs.false656:                                 ; preds = %lor.lhs.false643
  %229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1, !dbg !5397
  %fld658 = bitcast %union.u* %u657 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld658, i64 0, i64 1, !dbg !5397
  %rt_rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**, !dbg !5397
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx660, align 8, !dbg !5397
  %231 = bitcast %struct.rtx_def* %230 to i32*, !dbg !5397
  %bf.load661 = load i32, i32* %231, align 8, !dbg !5397
  %bf.lshr662 = lshr i32 %bf.load661, 16, !dbg !5397
  %bf.clear663 = and i32 %bf.lshr662, 255, !dbg !5397
  %idxprom664 = zext i32 %bf.clear663 to i64, !dbg !5397
  %arrayidx665 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom664, !dbg !5397
  %232 = load i8, i8* %arrayidx665, align 1, !dbg !5397
  %conv666 = zext i8 %232 to i32, !dbg !5397
  %cmp667 = icmp eq i32 %conv666, 9, !dbg !5397
  br i1 %cmp667, label %land.lhs.true695, label %lor.lhs.false669, !dbg !5397

lor.lhs.false669:                                 ; preds = %lor.lhs.false656
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1, !dbg !5397
  %fld671 = bitcast %union.u* %u670 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i64 0, i64 1, !dbg !5397
  %rt_rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**, !dbg !5397
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx673, align 8, !dbg !5397
  %235 = bitcast %struct.rtx_def* %234 to i32*, !dbg !5397
  %bf.load674 = load i32, i32* %235, align 8, !dbg !5397
  %bf.lshr675 = lshr i32 %bf.load674, 16, !dbg !5397
  %bf.clear676 = and i32 %bf.lshr675, 255, !dbg !5397
  %idxprom677 = zext i32 %bf.clear676 to i64, !dbg !5397
  %arrayidx678 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom677, !dbg !5397
  %236 = load i8, i8* %arrayidx678, align 1, !dbg !5397
  %conv679 = zext i8 %236 to i32, !dbg !5397
  %cmp680 = icmp eq i32 %conv679, 11, !dbg !5397
  br i1 %cmp680, label %land.lhs.true695, label %lor.lhs.false682, !dbg !5397

lor.lhs.false682:                                 ; preds = %lor.lhs.false669
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1, !dbg !5397
  %fld684 = bitcast %union.u* %u683 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i64 0, i64 1, !dbg !5397
  %rt_rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**, !dbg !5397
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx686, align 8, !dbg !5397
  %239 = bitcast %struct.rtx_def* %238 to i32*, !dbg !5397
  %bf.load687 = load i32, i32* %239, align 8, !dbg !5397
  %bf.lshr688 = lshr i32 %bf.load687, 16, !dbg !5397
  %bf.clear689 = and i32 %bf.lshr688, 255, !dbg !5397
  %idxprom690 = zext i32 %bf.clear689 to i64, !dbg !5397
  %arrayidx691 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom690, !dbg !5397
  %240 = load i8, i8* %arrayidx691, align 1, !dbg !5397
  %conv692 = zext i8 %240 to i32, !dbg !5397
  %cmp693 = icmp eq i32 %conv692, 17, !dbg !5397
  br i1 %cmp693, label %land.lhs.true695, label %if.end854, !dbg !5397

land.lhs.true695:                                 ; preds = %lor.lhs.false682, %lor.lhs.false669, %lor.lhs.false656, %lor.lhs.false643
  %241 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1, !dbg !5397
  %fld697 = bitcast %union.u* %u696 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i64 0, i64 1, !dbg !5397
  %rt_rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**, !dbg !5397
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx699, align 8, !dbg !5397
  %243 = bitcast %struct.rtx_def* %242 to i32*, !dbg !5397
  %bf.load700 = load i32, i32* %243, align 8, !dbg !5397
  %bf.lshr701 = lshr i32 %bf.load700, 16, !dbg !5397
  %bf.clear702 = and i32 %bf.lshr701, 255, !dbg !5397
  %idxprom703 = zext i32 %bf.clear702 to i64, !dbg !5397
  %arrayidx704 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom703, !dbg !5397
  %244 = load i8, i8* %arrayidx704, align 1, !dbg !5397
  %conv705 = zext i8 %244 to i32, !dbg !5397
  %cmp706 = icmp eq i32 %conv705, 8, !dbg !5397
  br i1 %cmp706, label %cond.true721, label %lor.lhs.false708, !dbg !5397

lor.lhs.false708:                                 ; preds = %land.lhs.true695
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1, !dbg !5397
  %fld710 = bitcast %union.u* %u709 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx711 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld710, i64 0, i64 1, !dbg !5397
  %rt_rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**, !dbg !5397
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx712, align 8, !dbg !5397
  %247 = bitcast %struct.rtx_def* %246 to i32*, !dbg !5397
  %bf.load713 = load i32, i32* %247, align 8, !dbg !5397
  %bf.lshr714 = lshr i32 %bf.load713, 16, !dbg !5397
  %bf.clear715 = and i32 %bf.lshr714, 255, !dbg !5397
  %idxprom716 = zext i32 %bf.clear715 to i64, !dbg !5397
  %arrayidx717 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom716, !dbg !5397
  %248 = load i8, i8* %arrayidx717, align 1, !dbg !5397
  %conv718 = zext i8 %248 to i32, !dbg !5397
  %cmp719 = icmp eq i32 %conv718, 9, !dbg !5397
  br i1 %cmp719, label %cond.true721, label %cond.false729, !dbg !5397

cond.true721:                                     ; preds = %lor.lhs.false708, %land.lhs.true695
  %249 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1, !dbg !5397
  %fld723 = bitcast %union.u* %u722 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx724 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld723, i64 0, i64 1, !dbg !5397
  %rt_rtx725 = bitcast %union.rtunion_def* %arrayidx724 to %struct.rtx_def**, !dbg !5397
  %250 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx725, align 8, !dbg !5397
  %251 = bitcast %struct.rtx_def* %250 to i32*, !dbg !5397
  %bf.load726 = load i32, i32* %251, align 8, !dbg !5397
  %bf.lshr727 = lshr i32 %bf.load726, 16, !dbg !5397
  %bf.clear728 = and i32 %bf.lshr727, 255, !dbg !5397
  br label %cond.end740, !dbg !5397

cond.false729:                                    ; preds = %lor.lhs.false708
  %252 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1, !dbg !5397
  %fld731 = bitcast %union.u* %u730 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx732 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld731, i64 0, i64 1, !dbg !5397
  %rt_rtx733 = bitcast %union.rtunion_def* %arrayidx732 to %struct.rtx_def**, !dbg !5397
  %253 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx733, align 8, !dbg !5397
  %254 = bitcast %struct.rtx_def* %253 to i32*, !dbg !5397
  %bf.load734 = load i32, i32* %254, align 8, !dbg !5397
  %bf.lshr735 = lshr i32 %bf.load734, 16, !dbg !5397
  %bf.clear736 = and i32 %bf.lshr735, 255, !dbg !5397
  %idxprom737 = zext i32 %bf.clear736 to i64, !dbg !5397
  %arrayidx738 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom737, !dbg !5397
  %255 = load i8, i8* %arrayidx738, align 1, !dbg !5397
  %conv739 = zext i8 %255 to i32, !dbg !5397
  br label %cond.end740, !dbg !5397

cond.end740:                                      ; preds = %cond.false729, %cond.true721
  %cond741 = phi i32 [ %bf.clear728, %cond.true721 ], [ %conv739, %cond.false729 ], !dbg !5397
  %idxprom742 = zext i32 %cond741 to i64, !dbg !5397
  %arrayidx743 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom742, !dbg !5397
  %256 = load i8, i8* %arrayidx743, align 1, !dbg !5397
  %conv744 = zext i8 %256 to i32, !dbg !5397
  %cmp745 = icmp eq i32 %conv744, 9, !dbg !5397
  br i1 %cmp745, label %cond.true747, label %cond.false796, !dbg !5397

cond.true747:                                     ; preds = %cond.end740
  %257 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u748 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i32 0, i32 1, !dbg !5397
  %fld749 = bitcast %union.u* %u748 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx750 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld749, i64 0, i64 1, !dbg !5397
  %rt_rtx751 = bitcast %union.rtunion_def* %arrayidx750 to %struct.rtx_def**, !dbg !5397
  %258 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx751, align 8, !dbg !5397
  %259 = bitcast %struct.rtx_def* %258 to i32*, !dbg !5397
  %bf.load752 = load i32, i32* %259, align 8, !dbg !5397
  %bf.lshr753 = lshr i32 %bf.load752, 16, !dbg !5397
  %bf.clear754 = and i32 %bf.lshr753, 255, !dbg !5397
  %idxprom755 = zext i32 %bf.clear754 to i64, !dbg !5397
  %arrayidx756 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom755, !dbg !5397
  %260 = load i8, i8* %arrayidx756, align 1, !dbg !5397
  %conv757 = zext i8 %260 to i32, !dbg !5397
  %cmp758 = icmp eq i32 %conv757, 8, !dbg !5397
  br i1 %cmp758, label %cond.true773, label %lor.lhs.false760, !dbg !5397

lor.lhs.false760:                                 ; preds = %cond.true747
  %261 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u761 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1, !dbg !5397
  %fld762 = bitcast %union.u* %u761 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx763 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld762, i64 0, i64 1, !dbg !5397
  %rt_rtx764 = bitcast %union.rtunion_def* %arrayidx763 to %struct.rtx_def**, !dbg !5397
  %262 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx764, align 8, !dbg !5397
  %263 = bitcast %struct.rtx_def* %262 to i32*, !dbg !5397
  %bf.load765 = load i32, i32* %263, align 8, !dbg !5397
  %bf.lshr766 = lshr i32 %bf.load765, 16, !dbg !5397
  %bf.clear767 = and i32 %bf.lshr766, 255, !dbg !5397
  %idxprom768 = zext i32 %bf.clear767 to i64, !dbg !5397
  %arrayidx769 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom768, !dbg !5397
  %264 = load i8, i8* %arrayidx769, align 1, !dbg !5397
  %conv770 = zext i8 %264 to i32, !dbg !5397
  %cmp771 = icmp eq i32 %conv770, 9, !dbg !5397
  br i1 %cmp771, label %cond.true773, label %cond.false781, !dbg !5397

cond.true773:                                     ; preds = %lor.lhs.false760, %cond.true747
  %265 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1, !dbg !5397
  %fld775 = bitcast %union.u* %u774 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx776 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld775, i64 0, i64 1, !dbg !5397
  %rt_rtx777 = bitcast %union.rtunion_def* %arrayidx776 to %struct.rtx_def**, !dbg !5397
  %266 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx777, align 8, !dbg !5397
  %267 = bitcast %struct.rtx_def* %266 to i32*, !dbg !5397
  %bf.load778 = load i32, i32* %267, align 8, !dbg !5397
  %bf.lshr779 = lshr i32 %bf.load778, 16, !dbg !5397
  %bf.clear780 = and i32 %bf.lshr779, 255, !dbg !5397
  br label %cond.end792, !dbg !5397

cond.false781:                                    ; preds = %lor.lhs.false760
  %268 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1, !dbg !5397
  %fld783 = bitcast %union.u* %u782 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx784 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld783, i64 0, i64 1, !dbg !5397
  %rt_rtx785 = bitcast %union.rtunion_def* %arrayidx784 to %struct.rtx_def**, !dbg !5397
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx785, align 8, !dbg !5397
  %270 = bitcast %struct.rtx_def* %269 to i32*, !dbg !5397
  %bf.load786 = load i32, i32* %270, align 8, !dbg !5397
  %bf.lshr787 = lshr i32 %bf.load786, 16, !dbg !5397
  %bf.clear788 = and i32 %bf.lshr787, 255, !dbg !5397
  %idxprom789 = zext i32 %bf.clear788 to i64, !dbg !5397
  %arrayidx790 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom789, !dbg !5397
  %271 = load i8, i8* %arrayidx790, align 1, !dbg !5397
  %conv791 = zext i8 %271 to i32, !dbg !5397
  br label %cond.end792, !dbg !5397

cond.end792:                                      ; preds = %cond.false781, %cond.true773
  %cond793 = phi i32 [ %bf.clear780, %cond.true773 ], [ %conv791, %cond.false781 ], !dbg !5397
  %sub794 = sub i32 %cond793, 42, !dbg !5397
  %add795 = add i32 %sub794, 4, !dbg !5397
  br label %cond.end844, !dbg !5397

cond.false796:                                    ; preds = %cond.end740
  %272 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1, !dbg !5397
  %fld798 = bitcast %union.u* %u797 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld798, i64 0, i64 1, !dbg !5397
  %rt_rtx800 = bitcast %union.rtunion_def* %arrayidx799 to %struct.rtx_def**, !dbg !5397
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx800, align 8, !dbg !5397
  %274 = bitcast %struct.rtx_def* %273 to i32*, !dbg !5397
  %bf.load801 = load i32, i32* %274, align 8, !dbg !5397
  %bf.lshr802 = lshr i32 %bf.load801, 16, !dbg !5397
  %bf.clear803 = and i32 %bf.lshr802, 255, !dbg !5397
  %idxprom804 = zext i32 %bf.clear803 to i64, !dbg !5397
  %arrayidx805 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom804, !dbg !5397
  %275 = load i8, i8* %arrayidx805, align 1, !dbg !5397
  %conv806 = zext i8 %275 to i32, !dbg !5397
  %cmp807 = icmp eq i32 %conv806, 8, !dbg !5397
  br i1 %cmp807, label %cond.true822, label %lor.lhs.false809, !dbg !5397

lor.lhs.false809:                                 ; preds = %cond.false796
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u810 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !5397
  %fld811 = bitcast %union.u* %u810 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx812 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld811, i64 0, i64 1, !dbg !5397
  %rt_rtx813 = bitcast %union.rtunion_def* %arrayidx812 to %struct.rtx_def**, !dbg !5397
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx813, align 8, !dbg !5397
  %278 = bitcast %struct.rtx_def* %277 to i32*, !dbg !5397
  %bf.load814 = load i32, i32* %278, align 8, !dbg !5397
  %bf.lshr815 = lshr i32 %bf.load814, 16, !dbg !5397
  %bf.clear816 = and i32 %bf.lshr815, 255, !dbg !5397
  %idxprom817 = zext i32 %bf.clear816 to i64, !dbg !5397
  %arrayidx818 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom817, !dbg !5397
  %279 = load i8, i8* %arrayidx818, align 1, !dbg !5397
  %conv819 = zext i8 %279 to i32, !dbg !5397
  %cmp820 = icmp eq i32 %conv819, 9, !dbg !5397
  br i1 %cmp820, label %cond.true822, label %cond.false830, !dbg !5397

cond.true822:                                     ; preds = %lor.lhs.false809, %cond.false796
  %280 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u823 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1, !dbg !5397
  %fld824 = bitcast %union.u* %u823 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx825 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld824, i64 0, i64 1, !dbg !5397
  %rt_rtx826 = bitcast %union.rtunion_def* %arrayidx825 to %struct.rtx_def**, !dbg !5397
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx826, align 8, !dbg !5397
  %282 = bitcast %struct.rtx_def* %281 to i32*, !dbg !5397
  %bf.load827 = load i32, i32* %282, align 8, !dbg !5397
  %bf.lshr828 = lshr i32 %bf.load827, 16, !dbg !5397
  %bf.clear829 = and i32 %bf.lshr828, 255, !dbg !5397
  br label %cond.end841, !dbg !5397

cond.false830:                                    ; preds = %lor.lhs.false809
  %283 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5397
  %u831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1, !dbg !5397
  %fld832 = bitcast %union.u* %u831 to [1 x %union.rtunion_def]*, !dbg !5397
  %arrayidx833 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld832, i64 0, i64 1, !dbg !5397
  %rt_rtx834 = bitcast %union.rtunion_def* %arrayidx833 to %struct.rtx_def**, !dbg !5397
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx834, align 8, !dbg !5397
  %285 = bitcast %struct.rtx_def* %284 to i32*, !dbg !5397
  %bf.load835 = load i32, i32* %285, align 8, !dbg !5397
  %bf.lshr836 = lshr i32 %bf.load835, 16, !dbg !5397
  %bf.clear837 = and i32 %bf.lshr836, 255, !dbg !5397
  %idxprom838 = zext i32 %bf.clear837 to i64, !dbg !5397
  %arrayidx839 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom838, !dbg !5397
  %286 = load i8, i8* %arrayidx839, align 1, !dbg !5397
  %conv840 = zext i8 %286 to i32, !dbg !5397
  br label %cond.end841, !dbg !5397

cond.end841:                                      ; preds = %cond.false830, %cond.true822
  %cond842 = phi i32 [ %bf.clear829, %cond.true822 ], [ %conv840, %cond.false830 ], !dbg !5397
  %sub843 = sub i32 %cond842, 38, !dbg !5397
  br label %cond.end844, !dbg !5397

cond.end844:                                      ; preds = %cond.end841, %cond.end792
  %cond845 = phi i32 [ %add795, %cond.end792 ], [ %sub843, %cond.end841 ], !dbg !5397
  %idxprom846 = zext i32 %cond845 to i64, !dbg !5397
  %arrayidx847 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom846, !dbg !5397
  %287 = load %struct.real_format*, %struct.real_format** %arrayidx847, align 8, !dbg !5397
  %has_nans848 = getelementptr inbounds %struct.real_format, %struct.real_format* %287, i32 0, i32 11, !dbg !5397
  %288 = load i8, i8* %has_nans848, align 2, !dbg !5397
  %conv849 = zext i8 %288 to i32, !dbg !5397
  %tobool850 = icmp ne i32 %conv849, 0, !dbg !5397
  br i1 %tobool850, label %land.lhs.true851, label %if.end854, !dbg !5397

land.lhs.true851:                                 ; preds = %cond.end844
  %289 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5397
  %tobool852 = icmp ne i32 %289, 0, !dbg !5397
  br i1 %tobool852, label %if.end854, label %if.then853, !dbg !5398

if.then853:                                       ; preds = %land.lhs.true851, %land.lhs.true641
  store i32 1, i32* %retval, align 4, !dbg !5399
  br label %return, !dbg !5399

if.end854:                                        ; preds = %land.lhs.true851, %cond.end844, %lor.lhs.false682
  br label %sw.epilog, !dbg !5400

sw.bb855:                                         ; preds = %if.end, %if.end
  %290 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5401
  %tobool856 = icmp ne i32 %290, 0, !dbg !5401
  br i1 %tobool856, label %land.lhs.true857, label %if.end1004, !dbg !5401

land.lhs.true857:                                 ; preds = %sw.bb855
  %291 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %292 = bitcast %struct.rtx_def* %291 to i32*, !dbg !5401
  %bf.load858 = load i32, i32* %292, align 8, !dbg !5401
  %bf.lshr859 = lshr i32 %bf.load858, 16, !dbg !5401
  %bf.clear860 = and i32 %bf.lshr859, 255, !dbg !5401
  %idxprom861 = zext i32 %bf.clear860 to i64, !dbg !5401
  %arrayidx862 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom861, !dbg !5401
  %293 = load i8, i8* %arrayidx862, align 1, !dbg !5401
  %conv863 = zext i8 %293 to i32, !dbg !5401
  %cmp864 = icmp eq i32 %conv863, 8, !dbg !5401
  br i1 %cmp864, label %land.lhs.true893, label %lor.lhs.false866, !dbg !5401

lor.lhs.false866:                                 ; preds = %land.lhs.true857
  %294 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %295 = bitcast %struct.rtx_def* %294 to i32*, !dbg !5401
  %bf.load867 = load i32, i32* %295, align 8, !dbg !5401
  %bf.lshr868 = lshr i32 %bf.load867, 16, !dbg !5401
  %bf.clear869 = and i32 %bf.lshr868, 255, !dbg !5401
  %idxprom870 = zext i32 %bf.clear869 to i64, !dbg !5401
  %arrayidx871 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom870, !dbg !5401
  %296 = load i8, i8* %arrayidx871, align 1, !dbg !5401
  %conv872 = zext i8 %296 to i32, !dbg !5401
  %cmp873 = icmp eq i32 %conv872, 9, !dbg !5401
  br i1 %cmp873, label %land.lhs.true893, label %lor.lhs.false875, !dbg !5401

lor.lhs.false875:                                 ; preds = %lor.lhs.false866
  %297 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %298 = bitcast %struct.rtx_def* %297 to i32*, !dbg !5401
  %bf.load876 = load i32, i32* %298, align 8, !dbg !5401
  %bf.lshr877 = lshr i32 %bf.load876, 16, !dbg !5401
  %bf.clear878 = and i32 %bf.lshr877, 255, !dbg !5401
  %idxprom879 = zext i32 %bf.clear878 to i64, !dbg !5401
  %arrayidx880 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom879, !dbg !5401
  %299 = load i8, i8* %arrayidx880, align 1, !dbg !5401
  %conv881 = zext i8 %299 to i32, !dbg !5401
  %cmp882 = icmp eq i32 %conv881, 11, !dbg !5401
  br i1 %cmp882, label %land.lhs.true893, label %lor.lhs.false884, !dbg !5401

lor.lhs.false884:                                 ; preds = %lor.lhs.false875
  %300 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %301 = bitcast %struct.rtx_def* %300 to i32*, !dbg !5401
  %bf.load885 = load i32, i32* %301, align 8, !dbg !5401
  %bf.lshr886 = lshr i32 %bf.load885, 16, !dbg !5401
  %bf.clear887 = and i32 %bf.lshr886, 255, !dbg !5401
  %idxprom888 = zext i32 %bf.clear887 to i64, !dbg !5401
  %arrayidx889 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom888, !dbg !5401
  %302 = load i8, i8* %arrayidx889, align 1, !dbg !5401
  %conv890 = zext i8 %302 to i32, !dbg !5401
  %cmp891 = icmp eq i32 %conv890, 17, !dbg !5401
  br i1 %cmp891, label %land.lhs.true893, label %if.end1004, !dbg !5401

land.lhs.true893:                                 ; preds = %lor.lhs.false884, %lor.lhs.false875, %lor.lhs.false866, %land.lhs.true857
  %303 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %304 = bitcast %struct.rtx_def* %303 to i32*, !dbg !5401
  %bf.load894 = load i32, i32* %304, align 8, !dbg !5401
  %bf.lshr895 = lshr i32 %bf.load894, 16, !dbg !5401
  %bf.clear896 = and i32 %bf.lshr895, 255, !dbg !5401
  %idxprom897 = zext i32 %bf.clear896 to i64, !dbg !5401
  %arrayidx898 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom897, !dbg !5401
  %305 = load i8, i8* %arrayidx898, align 1, !dbg !5401
  %conv899 = zext i8 %305 to i32, !dbg !5401
  %cmp900 = icmp eq i32 %conv899, 8, !dbg !5401
  br i1 %cmp900, label %cond.true911, label %lor.lhs.false902, !dbg !5401

lor.lhs.false902:                                 ; preds = %land.lhs.true893
  %306 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %307 = bitcast %struct.rtx_def* %306 to i32*, !dbg !5401
  %bf.load903 = load i32, i32* %307, align 8, !dbg !5401
  %bf.lshr904 = lshr i32 %bf.load903, 16, !dbg !5401
  %bf.clear905 = and i32 %bf.lshr904, 255, !dbg !5401
  %idxprom906 = zext i32 %bf.clear905 to i64, !dbg !5401
  %arrayidx907 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom906, !dbg !5401
  %308 = load i8, i8* %arrayidx907, align 1, !dbg !5401
  %conv908 = zext i8 %308 to i32, !dbg !5401
  %cmp909 = icmp eq i32 %conv908, 9, !dbg !5401
  br i1 %cmp909, label %cond.true911, label %cond.false915, !dbg !5401

cond.true911:                                     ; preds = %lor.lhs.false902, %land.lhs.true893
  %309 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %310 = bitcast %struct.rtx_def* %309 to i32*, !dbg !5401
  %bf.load912 = load i32, i32* %310, align 8, !dbg !5401
  %bf.lshr913 = lshr i32 %bf.load912, 16, !dbg !5401
  %bf.clear914 = and i32 %bf.lshr913, 255, !dbg !5401
  br label %cond.end922, !dbg !5401

cond.false915:                                    ; preds = %lor.lhs.false902
  %311 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %312 = bitcast %struct.rtx_def* %311 to i32*, !dbg !5401
  %bf.load916 = load i32, i32* %312, align 8, !dbg !5401
  %bf.lshr917 = lshr i32 %bf.load916, 16, !dbg !5401
  %bf.clear918 = and i32 %bf.lshr917, 255, !dbg !5401
  %idxprom919 = zext i32 %bf.clear918 to i64, !dbg !5401
  %arrayidx920 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom919, !dbg !5401
  %313 = load i8, i8* %arrayidx920, align 1, !dbg !5401
  %conv921 = zext i8 %313 to i32, !dbg !5401
  br label %cond.end922, !dbg !5401

cond.end922:                                      ; preds = %cond.false915, %cond.true911
  %cond923 = phi i32 [ %bf.clear914, %cond.true911 ], [ %conv921, %cond.false915 ], !dbg !5401
  %idxprom924 = zext i32 %cond923 to i64, !dbg !5401
  %arrayidx925 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom924, !dbg !5401
  %314 = load i8, i8* %arrayidx925, align 1, !dbg !5401
  %conv926 = zext i8 %314 to i32, !dbg !5401
  %cmp927 = icmp eq i32 %conv926, 9, !dbg !5401
  br i1 %cmp927, label %cond.true929, label %cond.false962, !dbg !5401

cond.true929:                                     ; preds = %cond.end922
  %315 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %316 = bitcast %struct.rtx_def* %315 to i32*, !dbg !5401
  %bf.load930 = load i32, i32* %316, align 8, !dbg !5401
  %bf.lshr931 = lshr i32 %bf.load930, 16, !dbg !5401
  %bf.clear932 = and i32 %bf.lshr931, 255, !dbg !5401
  %idxprom933 = zext i32 %bf.clear932 to i64, !dbg !5401
  %arrayidx934 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom933, !dbg !5401
  %317 = load i8, i8* %arrayidx934, align 1, !dbg !5401
  %conv935 = zext i8 %317 to i32, !dbg !5401
  %cmp936 = icmp eq i32 %conv935, 8, !dbg !5401
  br i1 %cmp936, label %cond.true947, label %lor.lhs.false938, !dbg !5401

lor.lhs.false938:                                 ; preds = %cond.true929
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %319 = bitcast %struct.rtx_def* %318 to i32*, !dbg !5401
  %bf.load939 = load i32, i32* %319, align 8, !dbg !5401
  %bf.lshr940 = lshr i32 %bf.load939, 16, !dbg !5401
  %bf.clear941 = and i32 %bf.lshr940, 255, !dbg !5401
  %idxprom942 = zext i32 %bf.clear941 to i64, !dbg !5401
  %arrayidx943 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom942, !dbg !5401
  %320 = load i8, i8* %arrayidx943, align 1, !dbg !5401
  %conv944 = zext i8 %320 to i32, !dbg !5401
  %cmp945 = icmp eq i32 %conv944, 9, !dbg !5401
  br i1 %cmp945, label %cond.true947, label %cond.false951, !dbg !5401

cond.true947:                                     ; preds = %lor.lhs.false938, %cond.true929
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %322 = bitcast %struct.rtx_def* %321 to i32*, !dbg !5401
  %bf.load948 = load i32, i32* %322, align 8, !dbg !5401
  %bf.lshr949 = lshr i32 %bf.load948, 16, !dbg !5401
  %bf.clear950 = and i32 %bf.lshr949, 255, !dbg !5401
  br label %cond.end958, !dbg !5401

cond.false951:                                    ; preds = %lor.lhs.false938
  %323 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %324 = bitcast %struct.rtx_def* %323 to i32*, !dbg !5401
  %bf.load952 = load i32, i32* %324, align 8, !dbg !5401
  %bf.lshr953 = lshr i32 %bf.load952, 16, !dbg !5401
  %bf.clear954 = and i32 %bf.lshr953, 255, !dbg !5401
  %idxprom955 = zext i32 %bf.clear954 to i64, !dbg !5401
  %arrayidx956 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom955, !dbg !5401
  %325 = load i8, i8* %arrayidx956, align 1, !dbg !5401
  %conv957 = zext i8 %325 to i32, !dbg !5401
  br label %cond.end958, !dbg !5401

cond.end958:                                      ; preds = %cond.false951, %cond.true947
  %cond959 = phi i32 [ %bf.clear950, %cond.true947 ], [ %conv957, %cond.false951 ], !dbg !5401
  %sub960 = sub i32 %cond959, 42, !dbg !5401
  %add961 = add i32 %sub960, 4, !dbg !5401
  br label %cond.end994, !dbg !5401

cond.false962:                                    ; preds = %cond.end922
  %326 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %327 = bitcast %struct.rtx_def* %326 to i32*, !dbg !5401
  %bf.load963 = load i32, i32* %327, align 8, !dbg !5401
  %bf.lshr964 = lshr i32 %bf.load963, 16, !dbg !5401
  %bf.clear965 = and i32 %bf.lshr964, 255, !dbg !5401
  %idxprom966 = zext i32 %bf.clear965 to i64, !dbg !5401
  %arrayidx967 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom966, !dbg !5401
  %328 = load i8, i8* %arrayidx967, align 1, !dbg !5401
  %conv968 = zext i8 %328 to i32, !dbg !5401
  %cmp969 = icmp eq i32 %conv968, 8, !dbg !5401
  br i1 %cmp969, label %cond.true980, label %lor.lhs.false971, !dbg !5401

lor.lhs.false971:                                 ; preds = %cond.false962
  %329 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %330 = bitcast %struct.rtx_def* %329 to i32*, !dbg !5401
  %bf.load972 = load i32, i32* %330, align 8, !dbg !5401
  %bf.lshr973 = lshr i32 %bf.load972, 16, !dbg !5401
  %bf.clear974 = and i32 %bf.lshr973, 255, !dbg !5401
  %idxprom975 = zext i32 %bf.clear974 to i64, !dbg !5401
  %arrayidx976 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom975, !dbg !5401
  %331 = load i8, i8* %arrayidx976, align 1, !dbg !5401
  %conv977 = zext i8 %331 to i32, !dbg !5401
  %cmp978 = icmp eq i32 %conv977, 9, !dbg !5401
  br i1 %cmp978, label %cond.true980, label %cond.false984, !dbg !5401

cond.true980:                                     ; preds = %lor.lhs.false971, %cond.false962
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %333 = bitcast %struct.rtx_def* %332 to i32*, !dbg !5401
  %bf.load981 = load i32, i32* %333, align 8, !dbg !5401
  %bf.lshr982 = lshr i32 %bf.load981, 16, !dbg !5401
  %bf.clear983 = and i32 %bf.lshr982, 255, !dbg !5401
  br label %cond.end991, !dbg !5401

cond.false984:                                    ; preds = %lor.lhs.false971
  %334 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5401
  %335 = bitcast %struct.rtx_def* %334 to i32*, !dbg !5401
  %bf.load985 = load i32, i32* %335, align 8, !dbg !5401
  %bf.lshr986 = lshr i32 %bf.load985, 16, !dbg !5401
  %bf.clear987 = and i32 %bf.lshr986, 255, !dbg !5401
  %idxprom988 = zext i32 %bf.clear987 to i64, !dbg !5401
  %arrayidx989 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom988, !dbg !5401
  %336 = load i8, i8* %arrayidx989, align 1, !dbg !5401
  %conv990 = zext i8 %336 to i32, !dbg !5401
  br label %cond.end991, !dbg !5401

cond.end991:                                      ; preds = %cond.false984, %cond.true980
  %cond992 = phi i32 [ %bf.clear983, %cond.true980 ], [ %conv990, %cond.false984 ], !dbg !5401
  %sub993 = sub i32 %cond992, 38, !dbg !5401
  br label %cond.end994, !dbg !5401

cond.end994:                                      ; preds = %cond.end991, %cond.end958
  %cond995 = phi i32 [ %add961, %cond.end958 ], [ %sub993, %cond.end991 ], !dbg !5401
  %idxprom996 = zext i32 %cond995 to i64, !dbg !5401
  %arrayidx997 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom996, !dbg !5401
  %337 = load %struct.real_format*, %struct.real_format** %arrayidx997, align 8, !dbg !5401
  %has_nans998 = getelementptr inbounds %struct.real_format, %struct.real_format* %337, i32 0, i32 11, !dbg !5401
  %338 = load i8, i8* %has_nans998, align 2, !dbg !5401
  %conv999 = zext i8 %338 to i32, !dbg !5401
  %tobool1000 = icmp ne i32 %conv999, 0, !dbg !5401
  br i1 %tobool1000, label %land.lhs.true1001, label %if.end1004, !dbg !5401

land.lhs.true1001:                                ; preds = %cond.end994
  %339 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5401
  %tobool1002 = icmp ne i32 %339, 0, !dbg !5401
  br i1 %tobool1002, label %if.end1004, label %if.then1003, !dbg !5403

if.then1003:                                      ; preds = %land.lhs.true1001
  store i32 1, i32* %retval, align 4, !dbg !5404
  br label %return, !dbg !5404

if.end1004:                                       ; preds = %land.lhs.true1001, %cond.end994, %lor.lhs.false884, %sw.bb855
  %340 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5405
  %tobool1005 = icmp ne i32 %340, 0, !dbg !5405
  br i1 %tobool1005, label %land.lhs.true1006, label %lor.lhs.false1216, !dbg !5405

land.lhs.true1006:                                ; preds = %if.end1004
  %341 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1007 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1, !dbg !5405
  %fld1008 = bitcast %union.u* %u1007 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1009 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1008, i64 0, i64 0, !dbg !5405
  %rt_rtx1010 = bitcast %union.rtunion_def* %arrayidx1009 to %struct.rtx_def**, !dbg !5405
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1010, align 8, !dbg !5405
  %343 = bitcast %struct.rtx_def* %342 to i32*, !dbg !5405
  %bf.load1011 = load i32, i32* %343, align 8, !dbg !5405
  %bf.lshr1012 = lshr i32 %bf.load1011, 16, !dbg !5405
  %bf.clear1013 = and i32 %bf.lshr1012, 255, !dbg !5405
  %idxprom1014 = zext i32 %bf.clear1013 to i64, !dbg !5405
  %arrayidx1015 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1014, !dbg !5405
  %344 = load i8, i8* %arrayidx1015, align 1, !dbg !5405
  %conv1016 = zext i8 %344 to i32, !dbg !5405
  %cmp1017 = icmp eq i32 %conv1016, 8, !dbg !5405
  br i1 %cmp1017, label %land.lhs.true1058, label %lor.lhs.false1019, !dbg !5405

lor.lhs.false1019:                                ; preds = %land.lhs.true1006
  %345 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1020 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1, !dbg !5405
  %fld1021 = bitcast %union.u* %u1020 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1022 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1021, i64 0, i64 0, !dbg !5405
  %rt_rtx1023 = bitcast %union.rtunion_def* %arrayidx1022 to %struct.rtx_def**, !dbg !5405
  %346 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1023, align 8, !dbg !5405
  %347 = bitcast %struct.rtx_def* %346 to i32*, !dbg !5405
  %bf.load1024 = load i32, i32* %347, align 8, !dbg !5405
  %bf.lshr1025 = lshr i32 %bf.load1024, 16, !dbg !5405
  %bf.clear1026 = and i32 %bf.lshr1025, 255, !dbg !5405
  %idxprom1027 = zext i32 %bf.clear1026 to i64, !dbg !5405
  %arrayidx1028 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1027, !dbg !5405
  %348 = load i8, i8* %arrayidx1028, align 1, !dbg !5405
  %conv1029 = zext i8 %348 to i32, !dbg !5405
  %cmp1030 = icmp eq i32 %conv1029, 9, !dbg !5405
  br i1 %cmp1030, label %land.lhs.true1058, label %lor.lhs.false1032, !dbg !5405

lor.lhs.false1032:                                ; preds = %lor.lhs.false1019
  %349 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1033 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1, !dbg !5405
  %fld1034 = bitcast %union.u* %u1033 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1034, i64 0, i64 0, !dbg !5405
  %rt_rtx1036 = bitcast %union.rtunion_def* %arrayidx1035 to %struct.rtx_def**, !dbg !5405
  %350 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1036, align 8, !dbg !5405
  %351 = bitcast %struct.rtx_def* %350 to i32*, !dbg !5405
  %bf.load1037 = load i32, i32* %351, align 8, !dbg !5405
  %bf.lshr1038 = lshr i32 %bf.load1037, 16, !dbg !5405
  %bf.clear1039 = and i32 %bf.lshr1038, 255, !dbg !5405
  %idxprom1040 = zext i32 %bf.clear1039 to i64, !dbg !5405
  %arrayidx1041 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1040, !dbg !5405
  %352 = load i8, i8* %arrayidx1041, align 1, !dbg !5405
  %conv1042 = zext i8 %352 to i32, !dbg !5405
  %cmp1043 = icmp eq i32 %conv1042, 11, !dbg !5405
  br i1 %cmp1043, label %land.lhs.true1058, label %lor.lhs.false1045, !dbg !5405

lor.lhs.false1045:                                ; preds = %lor.lhs.false1032
  %353 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1046 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1, !dbg !5405
  %fld1047 = bitcast %union.u* %u1046 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1048 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1047, i64 0, i64 0, !dbg !5405
  %rt_rtx1049 = bitcast %union.rtunion_def* %arrayidx1048 to %struct.rtx_def**, !dbg !5405
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1049, align 8, !dbg !5405
  %355 = bitcast %struct.rtx_def* %354 to i32*, !dbg !5405
  %bf.load1050 = load i32, i32* %355, align 8, !dbg !5405
  %bf.lshr1051 = lshr i32 %bf.load1050, 16, !dbg !5405
  %bf.clear1052 = and i32 %bf.lshr1051, 255, !dbg !5405
  %idxprom1053 = zext i32 %bf.clear1052 to i64, !dbg !5405
  %arrayidx1054 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1053, !dbg !5405
  %356 = load i8, i8* %arrayidx1054, align 1, !dbg !5405
  %conv1055 = zext i8 %356 to i32, !dbg !5405
  %cmp1056 = icmp eq i32 %conv1055, 17, !dbg !5405
  br i1 %cmp1056, label %land.lhs.true1058, label %lor.lhs.false1216, !dbg !5405

land.lhs.true1058:                                ; preds = %lor.lhs.false1045, %lor.lhs.false1032, %lor.lhs.false1019, %land.lhs.true1006
  %357 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1059 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1, !dbg !5405
  %fld1060 = bitcast %union.u* %u1059 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1061 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1060, i64 0, i64 0, !dbg !5405
  %rt_rtx1062 = bitcast %union.rtunion_def* %arrayidx1061 to %struct.rtx_def**, !dbg !5405
  %358 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1062, align 8, !dbg !5405
  %359 = bitcast %struct.rtx_def* %358 to i32*, !dbg !5405
  %bf.load1063 = load i32, i32* %359, align 8, !dbg !5405
  %bf.lshr1064 = lshr i32 %bf.load1063, 16, !dbg !5405
  %bf.clear1065 = and i32 %bf.lshr1064, 255, !dbg !5405
  %idxprom1066 = zext i32 %bf.clear1065 to i64, !dbg !5405
  %arrayidx1067 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1066, !dbg !5405
  %360 = load i8, i8* %arrayidx1067, align 1, !dbg !5405
  %conv1068 = zext i8 %360 to i32, !dbg !5405
  %cmp1069 = icmp eq i32 %conv1068, 8, !dbg !5405
  br i1 %cmp1069, label %cond.true1084, label %lor.lhs.false1071, !dbg !5405

lor.lhs.false1071:                                ; preds = %land.lhs.true1058
  %361 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1072 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1, !dbg !5405
  %fld1073 = bitcast %union.u* %u1072 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1074 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1073, i64 0, i64 0, !dbg !5405
  %rt_rtx1075 = bitcast %union.rtunion_def* %arrayidx1074 to %struct.rtx_def**, !dbg !5405
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1075, align 8, !dbg !5405
  %363 = bitcast %struct.rtx_def* %362 to i32*, !dbg !5405
  %bf.load1076 = load i32, i32* %363, align 8, !dbg !5405
  %bf.lshr1077 = lshr i32 %bf.load1076, 16, !dbg !5405
  %bf.clear1078 = and i32 %bf.lshr1077, 255, !dbg !5405
  %idxprom1079 = zext i32 %bf.clear1078 to i64, !dbg !5405
  %arrayidx1080 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1079, !dbg !5405
  %364 = load i8, i8* %arrayidx1080, align 1, !dbg !5405
  %conv1081 = zext i8 %364 to i32, !dbg !5405
  %cmp1082 = icmp eq i32 %conv1081, 9, !dbg !5405
  br i1 %cmp1082, label %cond.true1084, label %cond.false1092, !dbg !5405

cond.true1084:                                    ; preds = %lor.lhs.false1071, %land.lhs.true1058
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1085 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1, !dbg !5405
  %fld1086 = bitcast %union.u* %u1085 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1087 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1086, i64 0, i64 0, !dbg !5405
  %rt_rtx1088 = bitcast %union.rtunion_def* %arrayidx1087 to %struct.rtx_def**, !dbg !5405
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1088, align 8, !dbg !5405
  %367 = bitcast %struct.rtx_def* %366 to i32*, !dbg !5405
  %bf.load1089 = load i32, i32* %367, align 8, !dbg !5405
  %bf.lshr1090 = lshr i32 %bf.load1089, 16, !dbg !5405
  %bf.clear1091 = and i32 %bf.lshr1090, 255, !dbg !5405
  br label %cond.end1103, !dbg !5405

cond.false1092:                                   ; preds = %lor.lhs.false1071
  %368 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1093 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1, !dbg !5405
  %fld1094 = bitcast %union.u* %u1093 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1094, i64 0, i64 0, !dbg !5405
  %rt_rtx1096 = bitcast %union.rtunion_def* %arrayidx1095 to %struct.rtx_def**, !dbg !5405
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1096, align 8, !dbg !5405
  %370 = bitcast %struct.rtx_def* %369 to i32*, !dbg !5405
  %bf.load1097 = load i32, i32* %370, align 8, !dbg !5405
  %bf.lshr1098 = lshr i32 %bf.load1097, 16, !dbg !5405
  %bf.clear1099 = and i32 %bf.lshr1098, 255, !dbg !5405
  %idxprom1100 = zext i32 %bf.clear1099 to i64, !dbg !5405
  %arrayidx1101 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1100, !dbg !5405
  %371 = load i8, i8* %arrayidx1101, align 1, !dbg !5405
  %conv1102 = zext i8 %371 to i32, !dbg !5405
  br label %cond.end1103, !dbg !5405

cond.end1103:                                     ; preds = %cond.false1092, %cond.true1084
  %cond1104 = phi i32 [ %bf.clear1091, %cond.true1084 ], [ %conv1102, %cond.false1092 ], !dbg !5405
  %idxprom1105 = zext i32 %cond1104 to i64, !dbg !5405
  %arrayidx1106 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1105, !dbg !5405
  %372 = load i8, i8* %arrayidx1106, align 1, !dbg !5405
  %conv1107 = zext i8 %372 to i32, !dbg !5405
  %cmp1108 = icmp eq i32 %conv1107, 9, !dbg !5405
  br i1 %cmp1108, label %cond.true1110, label %cond.false1159, !dbg !5405

cond.true1110:                                    ; preds = %cond.end1103
  %373 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1, !dbg !5405
  %fld1112 = bitcast %union.u* %u1111 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1112, i64 0, i64 0, !dbg !5405
  %rt_rtx1114 = bitcast %union.rtunion_def* %arrayidx1113 to %struct.rtx_def**, !dbg !5405
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1114, align 8, !dbg !5405
  %375 = bitcast %struct.rtx_def* %374 to i32*, !dbg !5405
  %bf.load1115 = load i32, i32* %375, align 8, !dbg !5405
  %bf.lshr1116 = lshr i32 %bf.load1115, 16, !dbg !5405
  %bf.clear1117 = and i32 %bf.lshr1116, 255, !dbg !5405
  %idxprom1118 = zext i32 %bf.clear1117 to i64, !dbg !5405
  %arrayidx1119 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1118, !dbg !5405
  %376 = load i8, i8* %arrayidx1119, align 1, !dbg !5405
  %conv1120 = zext i8 %376 to i32, !dbg !5405
  %cmp1121 = icmp eq i32 %conv1120, 8, !dbg !5405
  br i1 %cmp1121, label %cond.true1136, label %lor.lhs.false1123, !dbg !5405

lor.lhs.false1123:                                ; preds = %cond.true1110
  %377 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %377, i32 0, i32 1, !dbg !5405
  %fld1125 = bitcast %union.u* %u1124 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1125, i64 0, i64 0, !dbg !5405
  %rt_rtx1127 = bitcast %union.rtunion_def* %arrayidx1126 to %struct.rtx_def**, !dbg !5405
  %378 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1127, align 8, !dbg !5405
  %379 = bitcast %struct.rtx_def* %378 to i32*, !dbg !5405
  %bf.load1128 = load i32, i32* %379, align 8, !dbg !5405
  %bf.lshr1129 = lshr i32 %bf.load1128, 16, !dbg !5405
  %bf.clear1130 = and i32 %bf.lshr1129, 255, !dbg !5405
  %idxprom1131 = zext i32 %bf.clear1130 to i64, !dbg !5405
  %arrayidx1132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1131, !dbg !5405
  %380 = load i8, i8* %arrayidx1132, align 1, !dbg !5405
  %conv1133 = zext i8 %380 to i32, !dbg !5405
  %cmp1134 = icmp eq i32 %conv1133, 9, !dbg !5405
  br i1 %cmp1134, label %cond.true1136, label %cond.false1144, !dbg !5405

cond.true1136:                                    ; preds = %lor.lhs.false1123, %cond.true1110
  %381 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %381, i32 0, i32 1, !dbg !5405
  %fld1138 = bitcast %union.u* %u1137 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1138, i64 0, i64 0, !dbg !5405
  %rt_rtx1140 = bitcast %union.rtunion_def* %arrayidx1139 to %struct.rtx_def**, !dbg !5405
  %382 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1140, align 8, !dbg !5405
  %383 = bitcast %struct.rtx_def* %382 to i32*, !dbg !5405
  %bf.load1141 = load i32, i32* %383, align 8, !dbg !5405
  %bf.lshr1142 = lshr i32 %bf.load1141, 16, !dbg !5405
  %bf.clear1143 = and i32 %bf.lshr1142, 255, !dbg !5405
  br label %cond.end1155, !dbg !5405

cond.false1144:                                   ; preds = %lor.lhs.false1123
  %384 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1, !dbg !5405
  %fld1146 = bitcast %union.u* %u1145 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1146, i64 0, i64 0, !dbg !5405
  %rt_rtx1148 = bitcast %union.rtunion_def* %arrayidx1147 to %struct.rtx_def**, !dbg !5405
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1148, align 8, !dbg !5405
  %386 = bitcast %struct.rtx_def* %385 to i32*, !dbg !5405
  %bf.load1149 = load i32, i32* %386, align 8, !dbg !5405
  %bf.lshr1150 = lshr i32 %bf.load1149, 16, !dbg !5405
  %bf.clear1151 = and i32 %bf.lshr1150, 255, !dbg !5405
  %idxprom1152 = zext i32 %bf.clear1151 to i64, !dbg !5405
  %arrayidx1153 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1152, !dbg !5405
  %387 = load i8, i8* %arrayidx1153, align 1, !dbg !5405
  %conv1154 = zext i8 %387 to i32, !dbg !5405
  br label %cond.end1155, !dbg !5405

cond.end1155:                                     ; preds = %cond.false1144, %cond.true1136
  %cond1156 = phi i32 [ %bf.clear1143, %cond.true1136 ], [ %conv1154, %cond.false1144 ], !dbg !5405
  %sub1157 = sub i32 %cond1156, 42, !dbg !5405
  %add1158 = add i32 %sub1157, 4, !dbg !5405
  br label %cond.end1207, !dbg !5405

cond.false1159:                                   ; preds = %cond.end1103
  %388 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1, !dbg !5405
  %fld1161 = bitcast %union.u* %u1160 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1161, i64 0, i64 0, !dbg !5405
  %rt_rtx1163 = bitcast %union.rtunion_def* %arrayidx1162 to %struct.rtx_def**, !dbg !5405
  %389 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1163, align 8, !dbg !5405
  %390 = bitcast %struct.rtx_def* %389 to i32*, !dbg !5405
  %bf.load1164 = load i32, i32* %390, align 8, !dbg !5405
  %bf.lshr1165 = lshr i32 %bf.load1164, 16, !dbg !5405
  %bf.clear1166 = and i32 %bf.lshr1165, 255, !dbg !5405
  %idxprom1167 = zext i32 %bf.clear1166 to i64, !dbg !5405
  %arrayidx1168 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1167, !dbg !5405
  %391 = load i8, i8* %arrayidx1168, align 1, !dbg !5405
  %conv1169 = zext i8 %391 to i32, !dbg !5405
  %cmp1170 = icmp eq i32 %conv1169, 8, !dbg !5405
  br i1 %cmp1170, label %cond.true1185, label %lor.lhs.false1172, !dbg !5405

lor.lhs.false1172:                                ; preds = %cond.false1159
  %392 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !5405
  %fld1174 = bitcast %union.u* %u1173 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1174, i64 0, i64 0, !dbg !5405
  %rt_rtx1176 = bitcast %union.rtunion_def* %arrayidx1175 to %struct.rtx_def**, !dbg !5405
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1176, align 8, !dbg !5405
  %394 = bitcast %struct.rtx_def* %393 to i32*, !dbg !5405
  %bf.load1177 = load i32, i32* %394, align 8, !dbg !5405
  %bf.lshr1178 = lshr i32 %bf.load1177, 16, !dbg !5405
  %bf.clear1179 = and i32 %bf.lshr1178, 255, !dbg !5405
  %idxprom1180 = zext i32 %bf.clear1179 to i64, !dbg !5405
  %arrayidx1181 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1180, !dbg !5405
  %395 = load i8, i8* %arrayidx1181, align 1, !dbg !5405
  %conv1182 = zext i8 %395 to i32, !dbg !5405
  %cmp1183 = icmp eq i32 %conv1182, 9, !dbg !5405
  br i1 %cmp1183, label %cond.true1185, label %cond.false1193, !dbg !5405

cond.true1185:                                    ; preds = %lor.lhs.false1172, %cond.false1159
  %396 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %396, i32 0, i32 1, !dbg !5405
  %fld1187 = bitcast %union.u* %u1186 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1187, i64 0, i64 0, !dbg !5405
  %rt_rtx1189 = bitcast %union.rtunion_def* %arrayidx1188 to %struct.rtx_def**, !dbg !5405
  %397 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1189, align 8, !dbg !5405
  %398 = bitcast %struct.rtx_def* %397 to i32*, !dbg !5405
  %bf.load1190 = load i32, i32* %398, align 8, !dbg !5405
  %bf.lshr1191 = lshr i32 %bf.load1190, 16, !dbg !5405
  %bf.clear1192 = and i32 %bf.lshr1191, 255, !dbg !5405
  br label %cond.end1204, !dbg !5405

cond.false1193:                                   ; preds = %lor.lhs.false1172
  %399 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5405
  %u1194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %399, i32 0, i32 1, !dbg !5405
  %fld1195 = bitcast %union.u* %u1194 to [1 x %union.rtunion_def]*, !dbg !5405
  %arrayidx1196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1195, i64 0, i64 0, !dbg !5405
  %rt_rtx1197 = bitcast %union.rtunion_def* %arrayidx1196 to %struct.rtx_def**, !dbg !5405
  %400 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1197, align 8, !dbg !5405
  %401 = bitcast %struct.rtx_def* %400 to i32*, !dbg !5405
  %bf.load1198 = load i32, i32* %401, align 8, !dbg !5405
  %bf.lshr1199 = lshr i32 %bf.load1198, 16, !dbg !5405
  %bf.clear1200 = and i32 %bf.lshr1199, 255, !dbg !5405
  %idxprom1201 = zext i32 %bf.clear1200 to i64, !dbg !5405
  %arrayidx1202 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1201, !dbg !5405
  %402 = load i8, i8* %arrayidx1202, align 1, !dbg !5405
  %conv1203 = zext i8 %402 to i32, !dbg !5405
  br label %cond.end1204, !dbg !5405

cond.end1204:                                     ; preds = %cond.false1193, %cond.true1185
  %cond1205 = phi i32 [ %bf.clear1192, %cond.true1185 ], [ %conv1203, %cond.false1193 ], !dbg !5405
  %sub1206 = sub i32 %cond1205, 38, !dbg !5405
  br label %cond.end1207, !dbg !5405

cond.end1207:                                     ; preds = %cond.end1204, %cond.end1155
  %cond1208 = phi i32 [ %add1158, %cond.end1155 ], [ %sub1206, %cond.end1204 ], !dbg !5405
  %idxprom1209 = zext i32 %cond1208 to i64, !dbg !5405
  %arrayidx1210 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1209, !dbg !5405
  %403 = load %struct.real_format*, %struct.real_format** %arrayidx1210, align 8, !dbg !5405
  %has_nans1211 = getelementptr inbounds %struct.real_format, %struct.real_format* %403, i32 0, i32 11, !dbg !5405
  %404 = load i8, i8* %has_nans1211, align 2, !dbg !5405
  %conv1212 = zext i8 %404 to i32, !dbg !5405
  %tobool1213 = icmp ne i32 %conv1212, 0, !dbg !5405
  br i1 %tobool1213, label %land.lhs.true1214, label %lor.lhs.false1216, !dbg !5405

land.lhs.true1214:                                ; preds = %cond.end1207
  %405 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5405
  %tobool1215 = icmp ne i32 %405, 0, !dbg !5405
  br i1 %tobool1215, label %lor.lhs.false1216, label %if.then1428, !dbg !5407

lor.lhs.false1216:                                ; preds = %land.lhs.true1214, %cond.end1207, %lor.lhs.false1045, %if.end1004
  %406 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5408
  %tobool1217 = icmp ne i32 %406, 0, !dbg !5408
  br i1 %tobool1217, label %land.lhs.true1218, label %if.end1429, !dbg !5408

land.lhs.true1218:                                ; preds = %lor.lhs.false1216
  %407 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1, !dbg !5408
  %fld1220 = bitcast %union.u* %u1219 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1220, i64 0, i64 1, !dbg !5408
  %rt_rtx1222 = bitcast %union.rtunion_def* %arrayidx1221 to %struct.rtx_def**, !dbg !5408
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1222, align 8, !dbg !5408
  %409 = bitcast %struct.rtx_def* %408 to i32*, !dbg !5408
  %bf.load1223 = load i32, i32* %409, align 8, !dbg !5408
  %bf.lshr1224 = lshr i32 %bf.load1223, 16, !dbg !5408
  %bf.clear1225 = and i32 %bf.lshr1224, 255, !dbg !5408
  %idxprom1226 = zext i32 %bf.clear1225 to i64, !dbg !5408
  %arrayidx1227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1226, !dbg !5408
  %410 = load i8, i8* %arrayidx1227, align 1, !dbg !5408
  %conv1228 = zext i8 %410 to i32, !dbg !5408
  %cmp1229 = icmp eq i32 %conv1228, 8, !dbg !5408
  br i1 %cmp1229, label %land.lhs.true1270, label %lor.lhs.false1231, !dbg !5408

lor.lhs.false1231:                                ; preds = %land.lhs.true1218
  %411 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %411, i32 0, i32 1, !dbg !5408
  %fld1233 = bitcast %union.u* %u1232 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1233, i64 0, i64 1, !dbg !5408
  %rt_rtx1235 = bitcast %union.rtunion_def* %arrayidx1234 to %struct.rtx_def**, !dbg !5408
  %412 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1235, align 8, !dbg !5408
  %413 = bitcast %struct.rtx_def* %412 to i32*, !dbg !5408
  %bf.load1236 = load i32, i32* %413, align 8, !dbg !5408
  %bf.lshr1237 = lshr i32 %bf.load1236, 16, !dbg !5408
  %bf.clear1238 = and i32 %bf.lshr1237, 255, !dbg !5408
  %idxprom1239 = zext i32 %bf.clear1238 to i64, !dbg !5408
  %arrayidx1240 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1239, !dbg !5408
  %414 = load i8, i8* %arrayidx1240, align 1, !dbg !5408
  %conv1241 = zext i8 %414 to i32, !dbg !5408
  %cmp1242 = icmp eq i32 %conv1241, 9, !dbg !5408
  br i1 %cmp1242, label %land.lhs.true1270, label %lor.lhs.false1244, !dbg !5408

lor.lhs.false1244:                                ; preds = %lor.lhs.false1231
  %415 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %415, i32 0, i32 1, !dbg !5408
  %fld1246 = bitcast %union.u* %u1245 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1246, i64 0, i64 1, !dbg !5408
  %rt_rtx1248 = bitcast %union.rtunion_def* %arrayidx1247 to %struct.rtx_def**, !dbg !5408
  %416 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1248, align 8, !dbg !5408
  %417 = bitcast %struct.rtx_def* %416 to i32*, !dbg !5408
  %bf.load1249 = load i32, i32* %417, align 8, !dbg !5408
  %bf.lshr1250 = lshr i32 %bf.load1249, 16, !dbg !5408
  %bf.clear1251 = and i32 %bf.lshr1250, 255, !dbg !5408
  %idxprom1252 = zext i32 %bf.clear1251 to i64, !dbg !5408
  %arrayidx1253 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1252, !dbg !5408
  %418 = load i8, i8* %arrayidx1253, align 1, !dbg !5408
  %conv1254 = zext i8 %418 to i32, !dbg !5408
  %cmp1255 = icmp eq i32 %conv1254, 11, !dbg !5408
  br i1 %cmp1255, label %land.lhs.true1270, label %lor.lhs.false1257, !dbg !5408

lor.lhs.false1257:                                ; preds = %lor.lhs.false1244
  %419 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %419, i32 0, i32 1, !dbg !5408
  %fld1259 = bitcast %union.u* %u1258 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1259, i64 0, i64 1, !dbg !5408
  %rt_rtx1261 = bitcast %union.rtunion_def* %arrayidx1260 to %struct.rtx_def**, !dbg !5408
  %420 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1261, align 8, !dbg !5408
  %421 = bitcast %struct.rtx_def* %420 to i32*, !dbg !5408
  %bf.load1262 = load i32, i32* %421, align 8, !dbg !5408
  %bf.lshr1263 = lshr i32 %bf.load1262, 16, !dbg !5408
  %bf.clear1264 = and i32 %bf.lshr1263, 255, !dbg !5408
  %idxprom1265 = zext i32 %bf.clear1264 to i64, !dbg !5408
  %arrayidx1266 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1265, !dbg !5408
  %422 = load i8, i8* %arrayidx1266, align 1, !dbg !5408
  %conv1267 = zext i8 %422 to i32, !dbg !5408
  %cmp1268 = icmp eq i32 %conv1267, 17, !dbg !5408
  br i1 %cmp1268, label %land.lhs.true1270, label %if.end1429, !dbg !5408

land.lhs.true1270:                                ; preds = %lor.lhs.false1257, %lor.lhs.false1244, %lor.lhs.false1231, %land.lhs.true1218
  %423 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %423, i32 0, i32 1, !dbg !5408
  %fld1272 = bitcast %union.u* %u1271 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1272, i64 0, i64 1, !dbg !5408
  %rt_rtx1274 = bitcast %union.rtunion_def* %arrayidx1273 to %struct.rtx_def**, !dbg !5408
  %424 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1274, align 8, !dbg !5408
  %425 = bitcast %struct.rtx_def* %424 to i32*, !dbg !5408
  %bf.load1275 = load i32, i32* %425, align 8, !dbg !5408
  %bf.lshr1276 = lshr i32 %bf.load1275, 16, !dbg !5408
  %bf.clear1277 = and i32 %bf.lshr1276, 255, !dbg !5408
  %idxprom1278 = zext i32 %bf.clear1277 to i64, !dbg !5408
  %arrayidx1279 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1278, !dbg !5408
  %426 = load i8, i8* %arrayidx1279, align 1, !dbg !5408
  %conv1280 = zext i8 %426 to i32, !dbg !5408
  %cmp1281 = icmp eq i32 %conv1280, 8, !dbg !5408
  br i1 %cmp1281, label %cond.true1296, label %lor.lhs.false1283, !dbg !5408

lor.lhs.false1283:                                ; preds = %land.lhs.true1270
  %427 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1, !dbg !5408
  %fld1285 = bitcast %union.u* %u1284 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1285, i64 0, i64 1, !dbg !5408
  %rt_rtx1287 = bitcast %union.rtunion_def* %arrayidx1286 to %struct.rtx_def**, !dbg !5408
  %428 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1287, align 8, !dbg !5408
  %429 = bitcast %struct.rtx_def* %428 to i32*, !dbg !5408
  %bf.load1288 = load i32, i32* %429, align 8, !dbg !5408
  %bf.lshr1289 = lshr i32 %bf.load1288, 16, !dbg !5408
  %bf.clear1290 = and i32 %bf.lshr1289, 255, !dbg !5408
  %idxprom1291 = zext i32 %bf.clear1290 to i64, !dbg !5408
  %arrayidx1292 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1291, !dbg !5408
  %430 = load i8, i8* %arrayidx1292, align 1, !dbg !5408
  %conv1293 = zext i8 %430 to i32, !dbg !5408
  %cmp1294 = icmp eq i32 %conv1293, 9, !dbg !5408
  br i1 %cmp1294, label %cond.true1296, label %cond.false1304, !dbg !5408

cond.true1296:                                    ; preds = %lor.lhs.false1283, %land.lhs.true1270
  %431 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1, !dbg !5408
  %fld1298 = bitcast %union.u* %u1297 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1298, i64 0, i64 1, !dbg !5408
  %rt_rtx1300 = bitcast %union.rtunion_def* %arrayidx1299 to %struct.rtx_def**, !dbg !5408
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1300, align 8, !dbg !5408
  %433 = bitcast %struct.rtx_def* %432 to i32*, !dbg !5408
  %bf.load1301 = load i32, i32* %433, align 8, !dbg !5408
  %bf.lshr1302 = lshr i32 %bf.load1301, 16, !dbg !5408
  %bf.clear1303 = and i32 %bf.lshr1302, 255, !dbg !5408
  br label %cond.end1315, !dbg !5408

cond.false1304:                                   ; preds = %lor.lhs.false1283
  %434 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %434, i32 0, i32 1, !dbg !5408
  %fld1306 = bitcast %union.u* %u1305 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1306, i64 0, i64 1, !dbg !5408
  %rt_rtx1308 = bitcast %union.rtunion_def* %arrayidx1307 to %struct.rtx_def**, !dbg !5408
  %435 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1308, align 8, !dbg !5408
  %436 = bitcast %struct.rtx_def* %435 to i32*, !dbg !5408
  %bf.load1309 = load i32, i32* %436, align 8, !dbg !5408
  %bf.lshr1310 = lshr i32 %bf.load1309, 16, !dbg !5408
  %bf.clear1311 = and i32 %bf.lshr1310, 255, !dbg !5408
  %idxprom1312 = zext i32 %bf.clear1311 to i64, !dbg !5408
  %arrayidx1313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1312, !dbg !5408
  %437 = load i8, i8* %arrayidx1313, align 1, !dbg !5408
  %conv1314 = zext i8 %437 to i32, !dbg !5408
  br label %cond.end1315, !dbg !5408

cond.end1315:                                     ; preds = %cond.false1304, %cond.true1296
  %cond1316 = phi i32 [ %bf.clear1303, %cond.true1296 ], [ %conv1314, %cond.false1304 ], !dbg !5408
  %idxprom1317 = zext i32 %cond1316 to i64, !dbg !5408
  %arrayidx1318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1317, !dbg !5408
  %438 = load i8, i8* %arrayidx1318, align 1, !dbg !5408
  %conv1319 = zext i8 %438 to i32, !dbg !5408
  %cmp1320 = icmp eq i32 %conv1319, 9, !dbg !5408
  br i1 %cmp1320, label %cond.true1322, label %cond.false1371, !dbg !5408

cond.true1322:                                    ; preds = %cond.end1315
  %439 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1, !dbg !5408
  %fld1324 = bitcast %union.u* %u1323 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1324, i64 0, i64 1, !dbg !5408
  %rt_rtx1326 = bitcast %union.rtunion_def* %arrayidx1325 to %struct.rtx_def**, !dbg !5408
  %440 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1326, align 8, !dbg !5408
  %441 = bitcast %struct.rtx_def* %440 to i32*, !dbg !5408
  %bf.load1327 = load i32, i32* %441, align 8, !dbg !5408
  %bf.lshr1328 = lshr i32 %bf.load1327, 16, !dbg !5408
  %bf.clear1329 = and i32 %bf.lshr1328, 255, !dbg !5408
  %idxprom1330 = zext i32 %bf.clear1329 to i64, !dbg !5408
  %arrayidx1331 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1330, !dbg !5408
  %442 = load i8, i8* %arrayidx1331, align 1, !dbg !5408
  %conv1332 = zext i8 %442 to i32, !dbg !5408
  %cmp1333 = icmp eq i32 %conv1332, 8, !dbg !5408
  br i1 %cmp1333, label %cond.true1348, label %lor.lhs.false1335, !dbg !5408

lor.lhs.false1335:                                ; preds = %cond.true1322
  %443 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1, !dbg !5408
  %fld1337 = bitcast %union.u* %u1336 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1337, i64 0, i64 1, !dbg !5408
  %rt_rtx1339 = bitcast %union.rtunion_def* %arrayidx1338 to %struct.rtx_def**, !dbg !5408
  %444 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1339, align 8, !dbg !5408
  %445 = bitcast %struct.rtx_def* %444 to i32*, !dbg !5408
  %bf.load1340 = load i32, i32* %445, align 8, !dbg !5408
  %bf.lshr1341 = lshr i32 %bf.load1340, 16, !dbg !5408
  %bf.clear1342 = and i32 %bf.lshr1341, 255, !dbg !5408
  %idxprom1343 = zext i32 %bf.clear1342 to i64, !dbg !5408
  %arrayidx1344 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1343, !dbg !5408
  %446 = load i8, i8* %arrayidx1344, align 1, !dbg !5408
  %conv1345 = zext i8 %446 to i32, !dbg !5408
  %cmp1346 = icmp eq i32 %conv1345, 9, !dbg !5408
  br i1 %cmp1346, label %cond.true1348, label %cond.false1356, !dbg !5408

cond.true1348:                                    ; preds = %lor.lhs.false1335, %cond.true1322
  %447 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1, !dbg !5408
  %fld1350 = bitcast %union.u* %u1349 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1350, i64 0, i64 1, !dbg !5408
  %rt_rtx1352 = bitcast %union.rtunion_def* %arrayidx1351 to %struct.rtx_def**, !dbg !5408
  %448 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1352, align 8, !dbg !5408
  %449 = bitcast %struct.rtx_def* %448 to i32*, !dbg !5408
  %bf.load1353 = load i32, i32* %449, align 8, !dbg !5408
  %bf.lshr1354 = lshr i32 %bf.load1353, 16, !dbg !5408
  %bf.clear1355 = and i32 %bf.lshr1354, 255, !dbg !5408
  br label %cond.end1367, !dbg !5408

cond.false1356:                                   ; preds = %lor.lhs.false1335
  %450 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1, !dbg !5408
  %fld1358 = bitcast %union.u* %u1357 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1358, i64 0, i64 1, !dbg !5408
  %rt_rtx1360 = bitcast %union.rtunion_def* %arrayidx1359 to %struct.rtx_def**, !dbg !5408
  %451 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1360, align 8, !dbg !5408
  %452 = bitcast %struct.rtx_def* %451 to i32*, !dbg !5408
  %bf.load1361 = load i32, i32* %452, align 8, !dbg !5408
  %bf.lshr1362 = lshr i32 %bf.load1361, 16, !dbg !5408
  %bf.clear1363 = and i32 %bf.lshr1362, 255, !dbg !5408
  %idxprom1364 = zext i32 %bf.clear1363 to i64, !dbg !5408
  %arrayidx1365 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1364, !dbg !5408
  %453 = load i8, i8* %arrayidx1365, align 1, !dbg !5408
  %conv1366 = zext i8 %453 to i32, !dbg !5408
  br label %cond.end1367, !dbg !5408

cond.end1367:                                     ; preds = %cond.false1356, %cond.true1348
  %cond1368 = phi i32 [ %bf.clear1355, %cond.true1348 ], [ %conv1366, %cond.false1356 ], !dbg !5408
  %sub1369 = sub i32 %cond1368, 42, !dbg !5408
  %add1370 = add i32 %sub1369, 4, !dbg !5408
  br label %cond.end1419, !dbg !5408

cond.false1371:                                   ; preds = %cond.end1315
  %454 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %454, i32 0, i32 1, !dbg !5408
  %fld1373 = bitcast %union.u* %u1372 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1373, i64 0, i64 1, !dbg !5408
  %rt_rtx1375 = bitcast %union.rtunion_def* %arrayidx1374 to %struct.rtx_def**, !dbg !5408
  %455 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1375, align 8, !dbg !5408
  %456 = bitcast %struct.rtx_def* %455 to i32*, !dbg !5408
  %bf.load1376 = load i32, i32* %456, align 8, !dbg !5408
  %bf.lshr1377 = lshr i32 %bf.load1376, 16, !dbg !5408
  %bf.clear1378 = and i32 %bf.lshr1377, 255, !dbg !5408
  %idxprom1379 = zext i32 %bf.clear1378 to i64, !dbg !5408
  %arrayidx1380 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1379, !dbg !5408
  %457 = load i8, i8* %arrayidx1380, align 1, !dbg !5408
  %conv1381 = zext i8 %457 to i32, !dbg !5408
  %cmp1382 = icmp eq i32 %conv1381, 8, !dbg !5408
  br i1 %cmp1382, label %cond.true1397, label %lor.lhs.false1384, !dbg !5408

lor.lhs.false1384:                                ; preds = %cond.false1371
  %458 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %458, i32 0, i32 1, !dbg !5408
  %fld1386 = bitcast %union.u* %u1385 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1386, i64 0, i64 1, !dbg !5408
  %rt_rtx1388 = bitcast %union.rtunion_def* %arrayidx1387 to %struct.rtx_def**, !dbg !5408
  %459 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1388, align 8, !dbg !5408
  %460 = bitcast %struct.rtx_def* %459 to i32*, !dbg !5408
  %bf.load1389 = load i32, i32* %460, align 8, !dbg !5408
  %bf.lshr1390 = lshr i32 %bf.load1389, 16, !dbg !5408
  %bf.clear1391 = and i32 %bf.lshr1390, 255, !dbg !5408
  %idxprom1392 = zext i32 %bf.clear1391 to i64, !dbg !5408
  %arrayidx1393 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1392, !dbg !5408
  %461 = load i8, i8* %arrayidx1393, align 1, !dbg !5408
  %conv1394 = zext i8 %461 to i32, !dbg !5408
  %cmp1395 = icmp eq i32 %conv1394, 9, !dbg !5408
  br i1 %cmp1395, label %cond.true1397, label %cond.false1405, !dbg !5408

cond.true1397:                                    ; preds = %lor.lhs.false1384, %cond.false1371
  %462 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %462, i32 0, i32 1, !dbg !5408
  %fld1399 = bitcast %union.u* %u1398 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1399, i64 0, i64 1, !dbg !5408
  %rt_rtx1401 = bitcast %union.rtunion_def* %arrayidx1400 to %struct.rtx_def**, !dbg !5408
  %463 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1401, align 8, !dbg !5408
  %464 = bitcast %struct.rtx_def* %463 to i32*, !dbg !5408
  %bf.load1402 = load i32, i32* %464, align 8, !dbg !5408
  %bf.lshr1403 = lshr i32 %bf.load1402, 16, !dbg !5408
  %bf.clear1404 = and i32 %bf.lshr1403, 255, !dbg !5408
  br label %cond.end1416, !dbg !5408

cond.false1405:                                   ; preds = %lor.lhs.false1384
  %465 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5408
  %u1406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %465, i32 0, i32 1, !dbg !5408
  %fld1407 = bitcast %union.u* %u1406 to [1 x %union.rtunion_def]*, !dbg !5408
  %arrayidx1408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1407, i64 0, i64 1, !dbg !5408
  %rt_rtx1409 = bitcast %union.rtunion_def* %arrayidx1408 to %struct.rtx_def**, !dbg !5408
  %466 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1409, align 8, !dbg !5408
  %467 = bitcast %struct.rtx_def* %466 to i32*, !dbg !5408
  %bf.load1410 = load i32, i32* %467, align 8, !dbg !5408
  %bf.lshr1411 = lshr i32 %bf.load1410, 16, !dbg !5408
  %bf.clear1412 = and i32 %bf.lshr1411, 255, !dbg !5408
  %idxprom1413 = zext i32 %bf.clear1412 to i64, !dbg !5408
  %arrayidx1414 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1413, !dbg !5408
  %468 = load i8, i8* %arrayidx1414, align 1, !dbg !5408
  %conv1415 = zext i8 %468 to i32, !dbg !5408
  br label %cond.end1416, !dbg !5408

cond.end1416:                                     ; preds = %cond.false1405, %cond.true1397
  %cond1417 = phi i32 [ %bf.clear1404, %cond.true1397 ], [ %conv1415, %cond.false1405 ], !dbg !5408
  %sub1418 = sub i32 %cond1417, 38, !dbg !5408
  br label %cond.end1419, !dbg !5408

cond.end1419:                                     ; preds = %cond.end1416, %cond.end1367
  %cond1420 = phi i32 [ %add1370, %cond.end1367 ], [ %sub1418, %cond.end1416 ], !dbg !5408
  %idxprom1421 = zext i32 %cond1420 to i64, !dbg !5408
  %arrayidx1422 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1421, !dbg !5408
  %469 = load %struct.real_format*, %struct.real_format** %arrayidx1422, align 8, !dbg !5408
  %has_nans1423 = getelementptr inbounds %struct.real_format, %struct.real_format* %469, i32 0, i32 11, !dbg !5408
  %470 = load i8, i8* %has_nans1423, align 2, !dbg !5408
  %conv1424 = zext i8 %470 to i32, !dbg !5408
  %tobool1425 = icmp ne i32 %conv1424, 0, !dbg !5408
  br i1 %tobool1425, label %land.lhs.true1426, label %if.end1429, !dbg !5408

land.lhs.true1426:                                ; preds = %cond.end1419
  %471 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5408
  %tobool1427 = icmp ne i32 %471, 0, !dbg !5408
  br i1 %tobool1427, label %if.end1429, label %if.then1428, !dbg !5409

if.then1428:                                      ; preds = %land.lhs.true1426, %land.lhs.true1214
  store i32 1, i32* %retval, align 4, !dbg !5410
  br label %return, !dbg !5410

if.end1429:                                       ; preds = %land.lhs.true1426, %cond.end1419, %lor.lhs.false1257, %lor.lhs.false1216
  br label %sw.epilog, !dbg !5411

sw.bb1430:                                        ; preds = %if.end
  %472 = load i32, i32* @flag_trapping_math, align 4, !dbg !5412
  %tobool1431 = icmp ne i32 %472, 0, !dbg !5412
  br i1 %tobool1431, label %land.lhs.true1432, label %if.end1643, !dbg !5414

land.lhs.true1432:                                ; preds = %sw.bb1430
  %473 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1, !dbg !5415
  %fld1434 = bitcast %union.u* %u1433 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1434, i64 0, i64 0, !dbg !5415
  %rt_rtx1436 = bitcast %union.rtunion_def* %arrayidx1435 to %struct.rtx_def**, !dbg !5415
  %474 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1436, align 8, !dbg !5415
  %475 = bitcast %struct.rtx_def* %474 to i32*, !dbg !5415
  %bf.load1437 = load i32, i32* %475, align 8, !dbg !5415
  %bf.lshr1438 = lshr i32 %bf.load1437, 16, !dbg !5415
  %bf.clear1439 = and i32 %bf.lshr1438, 255, !dbg !5415
  %idxprom1440 = zext i32 %bf.clear1439 to i64, !dbg !5415
  %arrayidx1441 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1440, !dbg !5415
  %476 = load i8, i8* %arrayidx1441, align 1, !dbg !5415
  %conv1442 = zext i8 %476 to i32, !dbg !5415
  %cmp1443 = icmp eq i32 %conv1442, 8, !dbg !5415
  br i1 %cmp1443, label %land.lhs.true1484, label %lor.lhs.false1445, !dbg !5415

lor.lhs.false1445:                                ; preds = %land.lhs.true1432
  %477 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %477, i32 0, i32 1, !dbg !5415
  %fld1447 = bitcast %union.u* %u1446 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1447, i64 0, i64 0, !dbg !5415
  %rt_rtx1449 = bitcast %union.rtunion_def* %arrayidx1448 to %struct.rtx_def**, !dbg !5415
  %478 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1449, align 8, !dbg !5415
  %479 = bitcast %struct.rtx_def* %478 to i32*, !dbg !5415
  %bf.load1450 = load i32, i32* %479, align 8, !dbg !5415
  %bf.lshr1451 = lshr i32 %bf.load1450, 16, !dbg !5415
  %bf.clear1452 = and i32 %bf.lshr1451, 255, !dbg !5415
  %idxprom1453 = zext i32 %bf.clear1452 to i64, !dbg !5415
  %arrayidx1454 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1453, !dbg !5415
  %480 = load i8, i8* %arrayidx1454, align 1, !dbg !5415
  %conv1455 = zext i8 %480 to i32, !dbg !5415
  %cmp1456 = icmp eq i32 %conv1455, 9, !dbg !5415
  br i1 %cmp1456, label %land.lhs.true1484, label %lor.lhs.false1458, !dbg !5415

lor.lhs.false1458:                                ; preds = %lor.lhs.false1445
  %481 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1, !dbg !5415
  %fld1460 = bitcast %union.u* %u1459 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1460, i64 0, i64 0, !dbg !5415
  %rt_rtx1462 = bitcast %union.rtunion_def* %arrayidx1461 to %struct.rtx_def**, !dbg !5415
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1462, align 8, !dbg !5415
  %483 = bitcast %struct.rtx_def* %482 to i32*, !dbg !5415
  %bf.load1463 = load i32, i32* %483, align 8, !dbg !5415
  %bf.lshr1464 = lshr i32 %bf.load1463, 16, !dbg !5415
  %bf.clear1465 = and i32 %bf.lshr1464, 255, !dbg !5415
  %idxprom1466 = zext i32 %bf.clear1465 to i64, !dbg !5415
  %arrayidx1467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1466, !dbg !5415
  %484 = load i8, i8* %arrayidx1467, align 1, !dbg !5415
  %conv1468 = zext i8 %484 to i32, !dbg !5415
  %cmp1469 = icmp eq i32 %conv1468, 11, !dbg !5415
  br i1 %cmp1469, label %land.lhs.true1484, label %lor.lhs.false1471, !dbg !5415

lor.lhs.false1471:                                ; preds = %lor.lhs.false1458
  %485 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1, !dbg !5415
  %fld1473 = bitcast %union.u* %u1472 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1473, i64 0, i64 0, !dbg !5415
  %rt_rtx1475 = bitcast %union.rtunion_def* %arrayidx1474 to %struct.rtx_def**, !dbg !5415
  %486 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1475, align 8, !dbg !5415
  %487 = bitcast %struct.rtx_def* %486 to i32*, !dbg !5415
  %bf.load1476 = load i32, i32* %487, align 8, !dbg !5415
  %bf.lshr1477 = lshr i32 %bf.load1476, 16, !dbg !5415
  %bf.clear1478 = and i32 %bf.lshr1477, 255, !dbg !5415
  %idxprom1479 = zext i32 %bf.clear1478 to i64, !dbg !5415
  %arrayidx1480 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1479, !dbg !5415
  %488 = load i8, i8* %arrayidx1480, align 1, !dbg !5415
  %conv1481 = zext i8 %488 to i32, !dbg !5415
  %cmp1482 = icmp eq i32 %conv1481, 17, !dbg !5415
  br i1 %cmp1482, label %land.lhs.true1484, label %if.end1643, !dbg !5415

land.lhs.true1484:                                ; preds = %lor.lhs.false1471, %lor.lhs.false1458, %lor.lhs.false1445, %land.lhs.true1432
  %489 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %489, i32 0, i32 1, !dbg !5415
  %fld1486 = bitcast %union.u* %u1485 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1486, i64 0, i64 0, !dbg !5415
  %rt_rtx1488 = bitcast %union.rtunion_def* %arrayidx1487 to %struct.rtx_def**, !dbg !5415
  %490 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1488, align 8, !dbg !5415
  %491 = bitcast %struct.rtx_def* %490 to i32*, !dbg !5415
  %bf.load1489 = load i32, i32* %491, align 8, !dbg !5415
  %bf.lshr1490 = lshr i32 %bf.load1489, 16, !dbg !5415
  %bf.clear1491 = and i32 %bf.lshr1490, 255, !dbg !5415
  %idxprom1492 = zext i32 %bf.clear1491 to i64, !dbg !5415
  %arrayidx1493 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1492, !dbg !5415
  %492 = load i8, i8* %arrayidx1493, align 1, !dbg !5415
  %conv1494 = zext i8 %492 to i32, !dbg !5415
  %cmp1495 = icmp eq i32 %conv1494, 8, !dbg !5415
  br i1 %cmp1495, label %cond.true1510, label %lor.lhs.false1497, !dbg !5415

lor.lhs.false1497:                                ; preds = %land.lhs.true1484
  %493 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %493, i32 0, i32 1, !dbg !5415
  %fld1499 = bitcast %union.u* %u1498 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1500 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1499, i64 0, i64 0, !dbg !5415
  %rt_rtx1501 = bitcast %union.rtunion_def* %arrayidx1500 to %struct.rtx_def**, !dbg !5415
  %494 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1501, align 8, !dbg !5415
  %495 = bitcast %struct.rtx_def* %494 to i32*, !dbg !5415
  %bf.load1502 = load i32, i32* %495, align 8, !dbg !5415
  %bf.lshr1503 = lshr i32 %bf.load1502, 16, !dbg !5415
  %bf.clear1504 = and i32 %bf.lshr1503, 255, !dbg !5415
  %idxprom1505 = zext i32 %bf.clear1504 to i64, !dbg !5415
  %arrayidx1506 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1505, !dbg !5415
  %496 = load i8, i8* %arrayidx1506, align 1, !dbg !5415
  %conv1507 = zext i8 %496 to i32, !dbg !5415
  %cmp1508 = icmp eq i32 %conv1507, 9, !dbg !5415
  br i1 %cmp1508, label %cond.true1510, label %cond.false1518, !dbg !5415

cond.true1510:                                    ; preds = %lor.lhs.false1497, %land.lhs.true1484
  %497 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %497, i32 0, i32 1, !dbg !5415
  %fld1512 = bitcast %union.u* %u1511 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1512, i64 0, i64 0, !dbg !5415
  %rt_rtx1514 = bitcast %union.rtunion_def* %arrayidx1513 to %struct.rtx_def**, !dbg !5415
  %498 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1514, align 8, !dbg !5415
  %499 = bitcast %struct.rtx_def* %498 to i32*, !dbg !5415
  %bf.load1515 = load i32, i32* %499, align 8, !dbg !5415
  %bf.lshr1516 = lshr i32 %bf.load1515, 16, !dbg !5415
  %bf.clear1517 = and i32 %bf.lshr1516, 255, !dbg !5415
  br label %cond.end1529, !dbg !5415

cond.false1518:                                   ; preds = %lor.lhs.false1497
  %500 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1519 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1, !dbg !5415
  %fld1520 = bitcast %union.u* %u1519 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1520, i64 0, i64 0, !dbg !5415
  %rt_rtx1522 = bitcast %union.rtunion_def* %arrayidx1521 to %struct.rtx_def**, !dbg !5415
  %501 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1522, align 8, !dbg !5415
  %502 = bitcast %struct.rtx_def* %501 to i32*, !dbg !5415
  %bf.load1523 = load i32, i32* %502, align 8, !dbg !5415
  %bf.lshr1524 = lshr i32 %bf.load1523, 16, !dbg !5415
  %bf.clear1525 = and i32 %bf.lshr1524, 255, !dbg !5415
  %idxprom1526 = zext i32 %bf.clear1525 to i64, !dbg !5415
  %arrayidx1527 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1526, !dbg !5415
  %503 = load i8, i8* %arrayidx1527, align 1, !dbg !5415
  %conv1528 = zext i8 %503 to i32, !dbg !5415
  br label %cond.end1529, !dbg !5415

cond.end1529:                                     ; preds = %cond.false1518, %cond.true1510
  %cond1530 = phi i32 [ %bf.clear1517, %cond.true1510 ], [ %conv1528, %cond.false1518 ], !dbg !5415
  %idxprom1531 = zext i32 %cond1530 to i64, !dbg !5415
  %arrayidx1532 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1531, !dbg !5415
  %504 = load i8, i8* %arrayidx1532, align 1, !dbg !5415
  %conv1533 = zext i8 %504 to i32, !dbg !5415
  %cmp1534 = icmp eq i32 %conv1533, 9, !dbg !5415
  br i1 %cmp1534, label %cond.true1536, label %cond.false1585, !dbg !5415

cond.true1536:                                    ; preds = %cond.end1529
  %505 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %505, i32 0, i32 1, !dbg !5415
  %fld1538 = bitcast %union.u* %u1537 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1539 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1538, i64 0, i64 0, !dbg !5415
  %rt_rtx1540 = bitcast %union.rtunion_def* %arrayidx1539 to %struct.rtx_def**, !dbg !5415
  %506 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1540, align 8, !dbg !5415
  %507 = bitcast %struct.rtx_def* %506 to i32*, !dbg !5415
  %bf.load1541 = load i32, i32* %507, align 8, !dbg !5415
  %bf.lshr1542 = lshr i32 %bf.load1541, 16, !dbg !5415
  %bf.clear1543 = and i32 %bf.lshr1542, 255, !dbg !5415
  %idxprom1544 = zext i32 %bf.clear1543 to i64, !dbg !5415
  %arrayidx1545 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1544, !dbg !5415
  %508 = load i8, i8* %arrayidx1545, align 1, !dbg !5415
  %conv1546 = zext i8 %508 to i32, !dbg !5415
  %cmp1547 = icmp eq i32 %conv1546, 8, !dbg !5415
  br i1 %cmp1547, label %cond.true1562, label %lor.lhs.false1549, !dbg !5415

lor.lhs.false1549:                                ; preds = %cond.true1536
  %509 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1550 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %509, i32 0, i32 1, !dbg !5415
  %fld1551 = bitcast %union.u* %u1550 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1551, i64 0, i64 0, !dbg !5415
  %rt_rtx1553 = bitcast %union.rtunion_def* %arrayidx1552 to %struct.rtx_def**, !dbg !5415
  %510 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1553, align 8, !dbg !5415
  %511 = bitcast %struct.rtx_def* %510 to i32*, !dbg !5415
  %bf.load1554 = load i32, i32* %511, align 8, !dbg !5415
  %bf.lshr1555 = lshr i32 %bf.load1554, 16, !dbg !5415
  %bf.clear1556 = and i32 %bf.lshr1555, 255, !dbg !5415
  %idxprom1557 = zext i32 %bf.clear1556 to i64, !dbg !5415
  %arrayidx1558 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1557, !dbg !5415
  %512 = load i8, i8* %arrayidx1558, align 1, !dbg !5415
  %conv1559 = zext i8 %512 to i32, !dbg !5415
  %cmp1560 = icmp eq i32 %conv1559, 9, !dbg !5415
  br i1 %cmp1560, label %cond.true1562, label %cond.false1570, !dbg !5415

cond.true1562:                                    ; preds = %lor.lhs.false1549, %cond.true1536
  %513 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %513, i32 0, i32 1, !dbg !5415
  %fld1564 = bitcast %union.u* %u1563 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1565 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1564, i64 0, i64 0, !dbg !5415
  %rt_rtx1566 = bitcast %union.rtunion_def* %arrayidx1565 to %struct.rtx_def**, !dbg !5415
  %514 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1566, align 8, !dbg !5415
  %515 = bitcast %struct.rtx_def* %514 to i32*, !dbg !5415
  %bf.load1567 = load i32, i32* %515, align 8, !dbg !5415
  %bf.lshr1568 = lshr i32 %bf.load1567, 16, !dbg !5415
  %bf.clear1569 = and i32 %bf.lshr1568, 255, !dbg !5415
  br label %cond.end1581, !dbg !5415

cond.false1570:                                   ; preds = %lor.lhs.false1549
  %516 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %516, i32 0, i32 1, !dbg !5415
  %fld1572 = bitcast %union.u* %u1571 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1572, i64 0, i64 0, !dbg !5415
  %rt_rtx1574 = bitcast %union.rtunion_def* %arrayidx1573 to %struct.rtx_def**, !dbg !5415
  %517 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1574, align 8, !dbg !5415
  %518 = bitcast %struct.rtx_def* %517 to i32*, !dbg !5415
  %bf.load1575 = load i32, i32* %518, align 8, !dbg !5415
  %bf.lshr1576 = lshr i32 %bf.load1575, 16, !dbg !5415
  %bf.clear1577 = and i32 %bf.lshr1576, 255, !dbg !5415
  %idxprom1578 = zext i32 %bf.clear1577 to i64, !dbg !5415
  %arrayidx1579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1578, !dbg !5415
  %519 = load i8, i8* %arrayidx1579, align 1, !dbg !5415
  %conv1580 = zext i8 %519 to i32, !dbg !5415
  br label %cond.end1581, !dbg !5415

cond.end1581:                                     ; preds = %cond.false1570, %cond.true1562
  %cond1582 = phi i32 [ %bf.clear1569, %cond.true1562 ], [ %conv1580, %cond.false1570 ], !dbg !5415
  %sub1583 = sub i32 %cond1582, 42, !dbg !5415
  %add1584 = add i32 %sub1583, 4, !dbg !5415
  br label %cond.end1633, !dbg !5415

cond.false1585:                                   ; preds = %cond.end1529
  %520 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %520, i32 0, i32 1, !dbg !5415
  %fld1587 = bitcast %union.u* %u1586 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1587, i64 0, i64 0, !dbg !5415
  %rt_rtx1589 = bitcast %union.rtunion_def* %arrayidx1588 to %struct.rtx_def**, !dbg !5415
  %521 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1589, align 8, !dbg !5415
  %522 = bitcast %struct.rtx_def* %521 to i32*, !dbg !5415
  %bf.load1590 = load i32, i32* %522, align 8, !dbg !5415
  %bf.lshr1591 = lshr i32 %bf.load1590, 16, !dbg !5415
  %bf.clear1592 = and i32 %bf.lshr1591, 255, !dbg !5415
  %idxprom1593 = zext i32 %bf.clear1592 to i64, !dbg !5415
  %arrayidx1594 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1593, !dbg !5415
  %523 = load i8, i8* %arrayidx1594, align 1, !dbg !5415
  %conv1595 = zext i8 %523 to i32, !dbg !5415
  %cmp1596 = icmp eq i32 %conv1595, 8, !dbg !5415
  br i1 %cmp1596, label %cond.true1611, label %lor.lhs.false1598, !dbg !5415

lor.lhs.false1598:                                ; preds = %cond.false1585
  %524 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %524, i32 0, i32 1, !dbg !5415
  %fld1600 = bitcast %union.u* %u1599 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1600, i64 0, i64 0, !dbg !5415
  %rt_rtx1602 = bitcast %union.rtunion_def* %arrayidx1601 to %struct.rtx_def**, !dbg !5415
  %525 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1602, align 8, !dbg !5415
  %526 = bitcast %struct.rtx_def* %525 to i32*, !dbg !5415
  %bf.load1603 = load i32, i32* %526, align 8, !dbg !5415
  %bf.lshr1604 = lshr i32 %bf.load1603, 16, !dbg !5415
  %bf.clear1605 = and i32 %bf.lshr1604, 255, !dbg !5415
  %idxprom1606 = zext i32 %bf.clear1605 to i64, !dbg !5415
  %arrayidx1607 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1606, !dbg !5415
  %527 = load i8, i8* %arrayidx1607, align 1, !dbg !5415
  %conv1608 = zext i8 %527 to i32, !dbg !5415
  %cmp1609 = icmp eq i32 %conv1608, 9, !dbg !5415
  br i1 %cmp1609, label %cond.true1611, label %cond.false1619, !dbg !5415

cond.true1611:                                    ; preds = %lor.lhs.false1598, %cond.false1585
  %528 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %528, i32 0, i32 1, !dbg !5415
  %fld1613 = bitcast %union.u* %u1612 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1613, i64 0, i64 0, !dbg !5415
  %rt_rtx1615 = bitcast %union.rtunion_def* %arrayidx1614 to %struct.rtx_def**, !dbg !5415
  %529 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1615, align 8, !dbg !5415
  %530 = bitcast %struct.rtx_def* %529 to i32*, !dbg !5415
  %bf.load1616 = load i32, i32* %530, align 8, !dbg !5415
  %bf.lshr1617 = lshr i32 %bf.load1616, 16, !dbg !5415
  %bf.clear1618 = and i32 %bf.lshr1617, 255, !dbg !5415
  br label %cond.end1630, !dbg !5415

cond.false1619:                                   ; preds = %lor.lhs.false1598
  %531 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5415
  %u1620 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1, !dbg !5415
  %fld1621 = bitcast %union.u* %u1620 to [1 x %union.rtunion_def]*, !dbg !5415
  %arrayidx1622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1621, i64 0, i64 0, !dbg !5415
  %rt_rtx1623 = bitcast %union.rtunion_def* %arrayidx1622 to %struct.rtx_def**, !dbg !5415
  %532 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1623, align 8, !dbg !5415
  %533 = bitcast %struct.rtx_def* %532 to i32*, !dbg !5415
  %bf.load1624 = load i32, i32* %533, align 8, !dbg !5415
  %bf.lshr1625 = lshr i32 %bf.load1624, 16, !dbg !5415
  %bf.clear1626 = and i32 %bf.lshr1625, 255, !dbg !5415
  %idxprom1627 = zext i32 %bf.clear1626 to i64, !dbg !5415
  %arrayidx1628 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1627, !dbg !5415
  %534 = load i8, i8* %arrayidx1628, align 1, !dbg !5415
  %conv1629 = zext i8 %534 to i32, !dbg !5415
  br label %cond.end1630, !dbg !5415

cond.end1630:                                     ; preds = %cond.false1619, %cond.true1611
  %cond1631 = phi i32 [ %bf.clear1618, %cond.true1611 ], [ %conv1629, %cond.false1619 ], !dbg !5415
  %sub1632 = sub i32 %cond1631, 38, !dbg !5415
  br label %cond.end1633, !dbg !5415

cond.end1633:                                     ; preds = %cond.end1630, %cond.end1581
  %cond1634 = phi i32 [ %add1584, %cond.end1581 ], [ %sub1632, %cond.end1630 ], !dbg !5415
  %idxprom1635 = zext i32 %cond1634 to i64, !dbg !5415
  %arrayidx1636 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1635, !dbg !5415
  %535 = load %struct.real_format*, %struct.real_format** %arrayidx1636, align 8, !dbg !5415
  %has_nans1637 = getelementptr inbounds %struct.real_format, %struct.real_format* %535, i32 0, i32 11, !dbg !5415
  %536 = load i8, i8* %has_nans1637, align 2, !dbg !5415
  %conv1638 = zext i8 %536 to i32, !dbg !5415
  %tobool1639 = icmp ne i32 %conv1638, 0, !dbg !5415
  br i1 %tobool1639, label %land.lhs.true1640, label %if.end1643, !dbg !5415

land.lhs.true1640:                                ; preds = %cond.end1633
  %537 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5415
  %tobool1641 = icmp ne i32 %537, 0, !dbg !5415
  br i1 %tobool1641, label %if.end1643, label %if.then1642, !dbg !5416

if.then1642:                                      ; preds = %land.lhs.true1640
  store i32 1, i32* %retval, align 4, !dbg !5417
  br label %return, !dbg !5417

if.end1643:                                       ; preds = %land.lhs.true1640, %cond.end1633, %lor.lhs.false1471, %sw.bb1430
  br label %sw.epilog, !dbg !5418

sw.bb1644:                                        ; preds = %if.end, %if.end, %if.end
  br label %sw.epilog, !dbg !5419

sw.default:                                       ; preds = %if.end
  %538 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5420
  %539 = bitcast %struct.rtx_def* %538 to i32*, !dbg !5420
  %bf.load1645 = load i32, i32* %539, align 8, !dbg !5420
  %bf.lshr1646 = lshr i32 %bf.load1645, 16, !dbg !5420
  %bf.clear1647 = and i32 %bf.lshr1646, 255, !dbg !5420
  %idxprom1648 = zext i32 %bf.clear1647 to i64, !dbg !5420
  %arrayidx1649 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1648, !dbg !5420
  %540 = load i8, i8* %arrayidx1649, align 1, !dbg !5420
  %conv1650 = zext i8 %540 to i32, !dbg !5420
  %cmp1651 = icmp eq i32 %conv1650, 8, !dbg !5420
  br i1 %cmp1651, label %land.lhs.true1662, label %lor.lhs.false1653, !dbg !5420

lor.lhs.false1653:                                ; preds = %sw.default
  %541 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5420
  %542 = bitcast %struct.rtx_def* %541 to i32*, !dbg !5420
  %bf.load1654 = load i32, i32* %542, align 8, !dbg !5420
  %bf.lshr1655 = lshr i32 %bf.load1654, 16, !dbg !5420
  %bf.clear1656 = and i32 %bf.lshr1655, 255, !dbg !5420
  %idxprom1657 = zext i32 %bf.clear1656 to i64, !dbg !5420
  %arrayidx1658 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1657, !dbg !5420
  %543 = load i8, i8* %arrayidx1658, align 1, !dbg !5420
  %conv1659 = zext i8 %543 to i32, !dbg !5420
  %cmp1660 = icmp eq i32 %conv1659, 9, !dbg !5420
  br i1 %cmp1660, label %land.lhs.true1662, label %if.end1665, !dbg !5422

land.lhs.true1662:                                ; preds = %lor.lhs.false1653, %sw.default
  %544 = load i32, i32* @flag_trapping_math, align 4, !dbg !5423
  %tobool1663 = icmp ne i32 %544, 0, !dbg !5423
  br i1 %tobool1663, label %if.then1664, label %if.end1665, !dbg !5424

if.then1664:                                      ; preds = %land.lhs.true1662
  store i32 1, i32* %retval, align 4, !dbg !5425
  br label %return, !dbg !5425

if.end1665:                                       ; preds = %land.lhs.true1662, %lor.lhs.false1653
  br label %sw.epilog, !dbg !5426

sw.epilog:                                        ; preds = %if.end1665, %sw.bb1644, %if.end1643, %if.end1429, %if.end854, %if.then285, %if.end281
  %545 = load i32, i32* %code, align 4, !dbg !5427
  %idxprom1666 = sext i32 %545 to i64, !dbg !5427
  %arrayidx1667 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom1666, !dbg !5427
  %546 = load i8*, i8** %arrayidx1667, align 8, !dbg !5427
  store i8* %546, i8** %fmt, align 8, !dbg !5428
  %547 = load i32, i32* %code, align 4, !dbg !5429
  %idxprom1668 = sext i32 %547 to i64, !dbg !5429
  %arrayidx1669 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom1668, !dbg !5429
  %548 = load i8, i8* %arrayidx1669, align 1, !dbg !5429
  %conv1670 = zext i8 %548 to i32, !dbg !5429
  %sub1671 = sub nsw i32 %conv1670, 1, !dbg !5431
  store i32 %sub1671, i32* %i, align 4, !dbg !5432
  br label %for.cond, !dbg !5433

for.cond:                                         ; preds = %for.inc1716, %sw.epilog
  %549 = load i32, i32* %i, align 4, !dbg !5434
  %cmp1672 = icmp sge i32 %549, 0, !dbg !5436
  br i1 %cmp1672, label %for.body, label %for.end1717, !dbg !5437

for.body:                                         ; preds = %for.cond
  %550 = load i8*, i8** %fmt, align 8, !dbg !5438
  %551 = load i32, i32* %i, align 4, !dbg !5441
  %idxprom1674 = sext i32 %551 to i64, !dbg !5438
  %arrayidx1675 = getelementptr inbounds i8, i8* %550, i64 %idxprom1674, !dbg !5438
  %552 = load i8, i8* %arrayidx1675, align 1, !dbg !5438
  %conv1676 = sext i8 %552 to i32, !dbg !5438
  %cmp1677 = icmp eq i32 %conv1676, 101, !dbg !5442
  br i1 %cmp1677, label %if.then1679, label %if.else, !dbg !5443

if.then1679:                                      ; preds = %for.body
  %553 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5444
  %u1680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %553, i32 0, i32 1, !dbg !5444
  %fld1681 = bitcast %union.u* %u1680 to [1 x %union.rtunion_def]*, !dbg !5444
  %554 = load i32, i32* %i, align 4, !dbg !5444
  %idxprom1682 = sext i32 %554 to i64, !dbg !5444
  %arrayidx1683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1681, i64 0, i64 %idxprom1682, !dbg !5444
  %rt_rtx1684 = bitcast %union.rtunion_def* %arrayidx1683 to %struct.rtx_def**, !dbg !5444
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1684, align 8, !dbg !5444
  %556 = load i32, i32* %flags.addr, align 4, !dbg !5447
  %call1685 = call i32 @may_trap_p_1(%struct.rtx_def* %555, i32 %556), !dbg !5448
  %tobool1686 = icmp ne i32 %call1685, 0, !dbg !5448
  br i1 %tobool1686, label %if.then1687, label %if.end1688, !dbg !5449

if.then1687:                                      ; preds = %if.then1679
  store i32 1, i32* %retval, align 4, !dbg !5450
  br label %return, !dbg !5450

if.end1688:                                       ; preds = %if.then1679
  br label %if.end1715, !dbg !5451

if.else:                                          ; preds = %for.body
  %557 = load i8*, i8** %fmt, align 8, !dbg !5452
  %558 = load i32, i32* %i, align 4, !dbg !5454
  %idxprom1689 = sext i32 %558 to i64, !dbg !5452
  %arrayidx1690 = getelementptr inbounds i8, i8* %557, i64 %idxprom1689, !dbg !5452
  %559 = load i8, i8* %arrayidx1690, align 1, !dbg !5452
  %conv1691 = sext i8 %559 to i32, !dbg !5452
  %cmp1692 = icmp eq i32 %conv1691, 69, !dbg !5455
  br i1 %cmp1692, label %if.then1694, label %if.end1714, !dbg !5456

if.then1694:                                      ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5457, metadata !DIExpression()), !dbg !5459
  store i32 0, i32* %j, align 4, !dbg !5460
  br label %for.cond1695, !dbg !5462

for.cond1695:                                     ; preds = %for.inc, %if.then1694
  %560 = load i32, i32* %j, align 4, !dbg !5463
  %561 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5465
  %u1696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %561, i32 0, i32 1, !dbg !5465
  %fld1697 = bitcast %union.u* %u1696 to [1 x %union.rtunion_def]*, !dbg !5465
  %562 = load i32, i32* %i, align 4, !dbg !5465
  %idxprom1698 = sext i32 %562 to i64, !dbg !5465
  %arrayidx1699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1697, i64 0, i64 %idxprom1698, !dbg !5465
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx1699 to %struct.rtvec_def**, !dbg !5465
  %563 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5465
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %563, i32 0, i32 0, !dbg !5465
  %564 = load i32, i32* %num_elem, align 8, !dbg !5465
  %cmp1700 = icmp slt i32 %560, %564, !dbg !5466
  br i1 %cmp1700, label %for.body1702, label %for.end, !dbg !5467

for.body1702:                                     ; preds = %for.cond1695
  %565 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5468
  %u1703 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %565, i32 0, i32 1, !dbg !5468
  %fld1704 = bitcast %union.u* %u1703 to [1 x %union.rtunion_def]*, !dbg !5468
  %566 = load i32, i32* %i, align 4, !dbg !5468
  %idxprom1705 = sext i32 %566 to i64, !dbg !5468
  %arrayidx1706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1704, i64 0, i64 %idxprom1705, !dbg !5468
  %rt_rtvec1707 = bitcast %union.rtunion_def* %arrayidx1706 to %struct.rtvec_def**, !dbg !5468
  %567 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec1707, align 8, !dbg !5468
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %567, i32 0, i32 1, !dbg !5468
  %568 = load i32, i32* %j, align 4, !dbg !5468
  %idxprom1708 = sext i32 %568 to i64, !dbg !5468
  %arrayidx1709 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom1708, !dbg !5468
  %569 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1709, align 8, !dbg !5468
  %570 = load i32, i32* %flags.addr, align 4, !dbg !5470
  %call1710 = call i32 @may_trap_p_1(%struct.rtx_def* %569, i32 %570), !dbg !5471
  %tobool1711 = icmp ne i32 %call1710, 0, !dbg !5471
  br i1 %tobool1711, label %if.then1712, label %if.end1713, !dbg !5472

if.then1712:                                      ; preds = %for.body1702
  store i32 1, i32* %retval, align 4, !dbg !5473
  br label %return, !dbg !5473

if.end1713:                                       ; preds = %for.body1702
  br label %for.inc, !dbg !5474

for.inc:                                          ; preds = %if.end1713
  %571 = load i32, i32* %j, align 4, !dbg !5475
  %inc = add nsw i32 %571, 1, !dbg !5475
  store i32 %inc, i32* %j, align 4, !dbg !5475
  br label %for.cond1695, !dbg !5476, !llvm.loop !5477

for.end:                                          ; preds = %for.cond1695
  br label %if.end1714, !dbg !5479

if.end1714:                                       ; preds = %for.end, %if.else
  br label %if.end1715

if.end1715:                                       ; preds = %if.end1714, %if.end1688
  br label %for.inc1716, !dbg !5480

for.inc1716:                                      ; preds = %if.end1715
  %572 = load i32, i32* %i, align 4, !dbg !5481
  %dec = add nsw i32 %572, -1, !dbg !5481
  store i32 %dec, i32* %i, align 4, !dbg !5481
  br label %for.cond, !dbg !5482, !llvm.loop !5483

for.end1717:                                      ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5485
  br label %return, !dbg !5485

return:                                           ; preds = %for.end1717, %if.then1712, %if.then1687, %if.then1664, %if.then1642, %if.then1428, %if.then1003, %if.then853, %if.then432, %sw.bb282, %if.then280, %if.then261, %if.then242, %if.end96, %cond.end86, %if.then17, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb, %if.then
  %573 = load i32, i32* %retval, align 4, !dbg !5486
  ret i32 %573, !dbg !5486
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @may_trap_p(%struct.rtx_def* %x) #0 !dbg !5487 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5488, metadata !DIExpression()), !dbg !5489
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5490
  %call = call i32 @may_trap_p_1(%struct.rtx_def* %0, i32 0), !dbg !5491
  ret i32 %call, !dbg !5492
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @may_trap_or_fault_p(%struct.rtx_def* %x) #0 !dbg !5493 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5496
  %call = call i32 @may_trap_p_1(%struct.rtx_def* %0, i32 1), !dbg !5497
  ret i32 %call, !dbg !5498
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @inequality_comparisons_p(%struct.rtx_def* %x) #0 !dbg !5499 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5502, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5504, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5506, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5508, metadata !DIExpression()), !dbg !5509
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5510
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5510
  %bf.load = load i32, i32* %1, align 8, !dbg !5510
  %bf.clear = and i32 %bf.load, 65535, !dbg !5510
  store i32 %bf.clear, i32* %code, align 4, !dbg !5509
  %2 = load i32, i32* %code, align 4, !dbg !5511
  switch i32 %2, label %sw.default [
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 85, label %sw.bb1
    i32 89, label %sw.bb1
    i32 83, label %sw.bb1
    i32 87, label %sw.bb1
    i32 84, label %sw.bb1
    i32 88, label %sw.bb1
    i32 82, label %sw.bb1
    i32 86, label %sw.bb1
  ], !dbg !5512

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !5513
  br label %return, !dbg !5513

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5515
  br label %return, !dbg !5515

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5516

sw.epilog:                                        ; preds = %sw.default
  %3 = load i32, i32* %code, align 4, !dbg !5517
  %idxprom = sext i32 %3 to i64, !dbg !5517
  %arrayidx = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5517
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5517
  %conv = zext i8 %4 to i32, !dbg !5517
  store i32 %conv, i32* %len, align 4, !dbg !5518
  %5 = load i32, i32* %code, align 4, !dbg !5519
  %idxprom2 = sext i32 %5 to i64, !dbg !5519
  %arrayidx3 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom2, !dbg !5519
  %6 = load i8*, i8** %arrayidx3, align 8, !dbg !5519
  store i8* %6, i8** %fmt, align 8, !dbg !5520
  store i32 0, i32* %i, align 4, !dbg !5521
  br label %for.cond, !dbg !5523

for.cond:                                         ; preds = %for.inc40, %sw.epilog
  %7 = load i32, i32* %i, align 4, !dbg !5524
  %8 = load i32, i32* %len, align 4, !dbg !5526
  %cmp = icmp slt i32 %7, %8, !dbg !5527
  br i1 %cmp, label %for.body, label %for.end41, !dbg !5528

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %fmt, align 8, !dbg !5529
  %10 = load i32, i32* %i, align 4, !dbg !5532
  %idxprom5 = sext i32 %10 to i64, !dbg !5529
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 %idxprom5, !dbg !5529
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !5529
  %conv7 = sext i8 %11 to i32, !dbg !5529
  %cmp8 = icmp eq i32 %conv7, 101, !dbg !5533
  br i1 %cmp8, label %if.then, label %if.else, !dbg !5534

if.then:                                          ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5535
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5535
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5535
  %13 = load i32, i32* %i, align 4, !dbg !5535
  %idxprom10 = sext i32 %13 to i64, !dbg !5535
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom10, !dbg !5535
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5535
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5535
  %call = call i32 @inequality_comparisons_p(%struct.rtx_def* %14), !dbg !5538
  %tobool = icmp ne i32 %call, 0, !dbg !5538
  br i1 %tobool, label %if.then12, label %if.end, !dbg !5539

if.then12:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !5540
  br label %return, !dbg !5540

if.end:                                           ; preds = %if.then
  br label %if.end39, !dbg !5541

if.else:                                          ; preds = %for.body
  %15 = load i8*, i8** %fmt, align 8, !dbg !5542
  %16 = load i32, i32* %i, align 4, !dbg !5544
  %idxprom13 = sext i32 %16 to i64, !dbg !5542
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 %idxprom13, !dbg !5542
  %17 = load i8, i8* %arrayidx14, align 1, !dbg !5542
  %conv15 = sext i8 %17 to i32, !dbg !5542
  %cmp16 = icmp eq i32 %conv15, 69, !dbg !5545
  br i1 %cmp16, label %if.then18, label %if.end38, !dbg !5546

if.then18:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5547, metadata !DIExpression()), !dbg !5549
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5550
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !5550
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !5550
  %19 = load i32, i32* %i, align 4, !dbg !5550
  %idxprom21 = sext i32 %19 to i64, !dbg !5550
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 %idxprom21, !dbg !5550
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !5550
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5550
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 0, !dbg !5550
  %21 = load i32, i32* %num_elem, align 8, !dbg !5550
  %sub = sub nsw i32 %21, 1, !dbg !5552
  store i32 %sub, i32* %j, align 4, !dbg !5553
  br label %for.cond23, !dbg !5554

for.cond23:                                       ; preds = %for.inc, %if.then18
  %22 = load i32, i32* %j, align 4, !dbg !5555
  %cmp24 = icmp sge i32 %22, 0, !dbg !5557
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !5558

for.body26:                                       ; preds = %for.cond23
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5559
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !5559
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !5559
  %24 = load i32, i32* %i, align 4, !dbg !5559
  %idxprom29 = sext i32 %24 to i64, !dbg !5559
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 %idxprom29, !dbg !5559
  %rt_rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !5559
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec31, align 8, !dbg !5559
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 1, !dbg !5559
  %26 = load i32, i32* %j, align 4, !dbg !5559
  %idxprom32 = sext i32 %26 to i64, !dbg !5559
  %arrayidx33 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom32, !dbg !5559
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8, !dbg !5559
  %call34 = call i32 @inequality_comparisons_p(%struct.rtx_def* %27), !dbg !5561
  %tobool35 = icmp ne i32 %call34, 0, !dbg !5561
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !5562

if.then36:                                        ; preds = %for.body26
  store i32 1, i32* %retval, align 4, !dbg !5563
  br label %return, !dbg !5563

if.end37:                                         ; preds = %for.body26
  br label %for.inc, !dbg !5564

for.inc:                                          ; preds = %if.end37
  %28 = load i32, i32* %j, align 4, !dbg !5565
  %dec = add nsw i32 %28, -1, !dbg !5565
  store i32 %dec, i32* %j, align 4, !dbg !5565
  br label %for.cond23, !dbg !5566, !llvm.loop !5567

for.end:                                          ; preds = %for.cond23
  br label %if.end38, !dbg !5569

if.end38:                                         ; preds = %for.end, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  br label %for.inc40, !dbg !5570

for.inc40:                                        ; preds = %if.end39
  %29 = load i32, i32* %i, align 4, !dbg !5571
  %inc = add nsw i32 %29, 1, !dbg !5571
  store i32 %inc, i32* %i, align 4, !dbg !5571
  br label %for.cond, !dbg !5572, !llvm.loop !5573

for.end41:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5575
  br label %return, !dbg !5575

return:                                           ; preds = %for.end41, %if.then36, %if.then12, %sw.bb1, %sw.bb
  %30 = load i32, i32* %retval, align 4, !dbg !5576
  ret i32 %30, !dbg !5576
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @replace_rtx(%struct.rtx_def* %x, %struct.rtx_def* %from, %struct.rtx_def* %to) #0 !dbg !5577 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  %new_rtx39 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5586, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5588, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5590, metadata !DIExpression()), !dbg !5591
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5592
  %cmp = icmp ne %struct.rtx_def* %0, null, !dbg !5594
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5595

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5596
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5596
  %bf.load = load i32, i32* %2, align 8, !dbg !5596
  %bf.clear = and i32 %bf.load, 65535, !dbg !5596
  %cmp1 = icmp eq i32 %bf.clear, 32, !dbg !5597
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5598

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5599
  store %struct.rtx_def* %3, %struct.rtx_def** %retval, align 8, !dbg !5600
  br label %return, !dbg !5600

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5601
  %5 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !5603
  %cmp2 = icmp eq %struct.rtx_def* %4, %5, !dbg !5604
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5605

if.then3:                                         ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !5606
  store %struct.rtx_def* %6, %struct.rtx_def** %retval, align 8, !dbg !5607
  br label %return, !dbg !5607

if.end4:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5608
  %cmp5 = icmp eq %struct.rtx_def* %7, null, !dbg !5610
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5611

if.then6:                                         ; preds = %if.end4
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5612
  br label %return, !dbg !5612

if.end7:                                          ; preds = %if.end4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5613
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5613
  %bf.load8 = load i32, i32* %9, align 8, !dbg !5613
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5613
  %cmp10 = icmp eq i32 %bf.clear9, 39, !dbg !5615
  br i1 %cmp10, label %if.then11, label %if.else34, !dbg !5616

if.then11:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !5617, metadata !DIExpression()), !dbg !5619
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5620
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5620
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5620
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5620
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5620
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5620
  %12 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !5621
  %13 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !5622
  %call = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %11, %struct.rtx_def* %12, %struct.rtx_def* %13), !dbg !5623
  store %struct.rtx_def* %call, %struct.rtx_def** %new_rtx, align 8, !dbg !5619
  %14 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5624
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5624
  %bf.load12 = load i32, i32* %15, align 8, !dbg !5624
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5624
  %cmp14 = icmp eq i32 %bf.clear13, 30, !dbg !5624
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !5626

if.then15:                                        ; preds = %if.then11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5627
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !5627
  %bf.load16 = load i32, i32* %17, align 8, !dbg !5627
  %bf.lshr = lshr i32 %bf.load16, 16, !dbg !5627
  %bf.clear17 = and i32 %bf.lshr, 255, !dbg !5627
  %18 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5629
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5630
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !5630
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !5630
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !5630
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !5630
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5630
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !5630
  %bf.load22 = load i32, i32* %21, align 8, !dbg !5630
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !5630
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !5630
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5631
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5631
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !5631
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !5631
  %rt_uint = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !5631
  %23 = load i32, i32* %rt_uint, align 8, !dbg !5631
  %call28 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear17, %struct.rtx_def* %18, i32 %bf.clear24, i32 %23), !dbg !5632
  store %struct.rtx_def* %call28, %struct.rtx_def** %x.addr, align 8, !dbg !5633
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5634
  %tobool = icmp ne %struct.rtx_def* %24, null, !dbg !5634
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5634

cond.true:                                        ; preds = %if.then15
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5634
  br label %cond.end, !dbg !5634

cond.false:                                       ; preds = %if.then15
  br label %cond.end, !dbg !5634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5634
  br label %if.end33, !dbg !5635

if.else:                                          ; preds = %if.then11
  %25 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5636
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5637
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !5637
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !5637
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !5637
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5637
  store %struct.rtx_def* %25, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5638
  br label %if.end33

if.end33:                                         ; preds = %if.else, %cond.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5639
  store %struct.rtx_def* %27, %struct.rtx_def** %retval, align 8, !dbg !5640
  br label %return, !dbg !5640

if.else34:                                        ; preds = %if.end7
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5641
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !5641
  %bf.load35 = load i32, i32* %29, align 8, !dbg !5641
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !5641
  %cmp37 = icmp eq i32 %bf.clear36, 99, !dbg !5643
  br i1 %cmp37, label %if.then38, label %if.end71, !dbg !5644

if.then38:                                        ; preds = %if.else34
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx39, metadata !5645, metadata !DIExpression()), !dbg !5647
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5648
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !5648
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !5648
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !5648
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !5648
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5648
  %32 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !5649
  %33 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !5650
  %call44 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %31, %struct.rtx_def* %32, %struct.rtx_def* %33), !dbg !5651
  store %struct.rtx_def* %call44, %struct.rtx_def** %new_rtx39, align 8, !dbg !5647
  %34 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx39, align 8, !dbg !5652
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !5652
  %bf.load45 = load i32, i32* %35, align 8, !dbg !5652
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !5652
  %cmp47 = icmp eq i32 %bf.clear46, 30, !dbg !5652
  br i1 %cmp47, label %if.then48, label %if.else65, !dbg !5654

if.then48:                                        ; preds = %if.then38
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5655
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !5655
  %bf.load49 = load i32, i32* %37, align 8, !dbg !5655
  %bf.lshr50 = lshr i32 %bf.load49, 16, !dbg !5655
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !5655
  %38 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx39, align 8, !dbg !5657
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5658
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !5658
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !5658
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !5658
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !5658
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !5658
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !5658
  %bf.load56 = load i32, i32* %41, align 8, !dbg !5658
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !5658
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !5658
  %call59 = call %struct.rtx_def* @simplify_unary_operation(i32 99, i32 %bf.clear51, %struct.rtx_def* %38, i32 %bf.clear58), !dbg !5659
  store %struct.rtx_def* %call59, %struct.rtx_def** %x.addr, align 8, !dbg !5660
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5661
  %tobool60 = icmp ne %struct.rtx_def* %42, null, !dbg !5661
  br i1 %tobool60, label %cond.false62, label %cond.true61, !dbg !5661

cond.true61:                                      ; preds = %if.then48
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5661
  br label %cond.end63, !dbg !5661

cond.false62:                                     ; preds = %if.then48
  br label %cond.end63, !dbg !5661

cond.end63:                                       ; preds = %cond.false62, %cond.true61
  %cond64 = phi i32 [ 0, %cond.true61 ], [ 0, %cond.false62 ], !dbg !5661
  br label %if.end70, !dbg !5662

if.else65:                                        ; preds = %if.then38
  %43 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx39, align 8, !dbg !5663
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5664
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !5664
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !5664
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 0, !dbg !5664
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !5664
  store %struct.rtx_def* %43, %struct.rtx_def** %rt_rtx69, align 8, !dbg !5665
  br label %if.end70

if.end70:                                         ; preds = %if.else65, %cond.end63
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5666
  store %struct.rtx_def* %45, %struct.rtx_def** %retval, align 8, !dbg !5667
  br label %return, !dbg !5667

if.end71:                                         ; preds = %if.else34
  br label %if.end72

if.end72:                                         ; preds = %if.end71
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5668
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !5668
  %bf.load73 = load i32, i32* %47, align 8, !dbg !5668
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !5668
  %idxprom = sext i32 %bf.clear74 to i64, !dbg !5668
  %arrayidx75 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5668
  %48 = load i8*, i8** %arrayidx75, align 8, !dbg !5668
  store i8* %48, i8** %fmt, align 8, !dbg !5669
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5670
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !5670
  %bf.load76 = load i32, i32* %50, align 8, !dbg !5670
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !5670
  %idxprom78 = sext i32 %bf.clear77 to i64, !dbg !5670
  %arrayidx79 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom78, !dbg !5670
  %51 = load i8, i8* %arrayidx79, align 1, !dbg !5670
  %conv = zext i8 %51 to i32, !dbg !5670
  %sub = sub nsw i32 %conv, 1, !dbg !5672
  store i32 %sub, i32* %i, align 4, !dbg !5673
  br label %for.cond, !dbg !5674

for.cond:                                         ; preds = %for.inc133, %if.end72
  %52 = load i32, i32* %i, align 4, !dbg !5675
  %cmp80 = icmp sge i32 %52, 0, !dbg !5677
  br i1 %cmp80, label %for.body, label %for.end135, !dbg !5678

for.body:                                         ; preds = %for.cond
  %53 = load i8*, i8** %fmt, align 8, !dbg !5679
  %54 = load i32, i32* %i, align 4, !dbg !5682
  %idxprom82 = sext i32 %54 to i64, !dbg !5679
  %arrayidx83 = getelementptr inbounds i8, i8* %53, i64 %idxprom82, !dbg !5679
  %55 = load i8, i8* %arrayidx83, align 1, !dbg !5679
  %conv84 = sext i8 %55 to i32, !dbg !5679
  %cmp85 = icmp eq i32 %conv84, 101, !dbg !5683
  br i1 %cmp85, label %if.then87, label %if.else99, !dbg !5684

if.then87:                                        ; preds = %for.body
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5685
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !5685
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !5685
  %57 = load i32, i32* %i, align 4, !dbg !5685
  %idxprom90 = sext i32 %57 to i64, !dbg !5685
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 %idxprom90, !dbg !5685
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !5685
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !5685
  %59 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !5686
  %60 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !5687
  %call93 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %58, %struct.rtx_def* %59, %struct.rtx_def* %60), !dbg !5688
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5689
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !5689
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !5689
  %62 = load i32, i32* %i, align 4, !dbg !5689
  %idxprom96 = sext i32 %62 to i64, !dbg !5689
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 %idxprom96, !dbg !5689
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !5689
  store %struct.rtx_def* %call93, %struct.rtx_def** %rt_rtx98, align 8, !dbg !5690
  br label %if.end132, !dbg !5689

if.else99:                                        ; preds = %for.body
  %63 = load i8*, i8** %fmt, align 8, !dbg !5691
  %64 = load i32, i32* %i, align 4, !dbg !5693
  %idxprom100 = sext i32 %64 to i64, !dbg !5691
  %arrayidx101 = getelementptr inbounds i8, i8* %63, i64 %idxprom100, !dbg !5691
  %65 = load i8, i8* %arrayidx101, align 1, !dbg !5691
  %conv102 = sext i8 %65 to i32, !dbg !5691
  %cmp103 = icmp eq i32 %conv102, 69, !dbg !5694
  br i1 %cmp103, label %if.then105, label %if.end131, !dbg !5695

if.then105:                                       ; preds = %if.else99
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5696
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !5696
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !5696
  %67 = load i32, i32* %i, align 4, !dbg !5696
  %idxprom108 = sext i32 %67 to i64, !dbg !5696
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 %idxprom108, !dbg !5696
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtvec_def**, !dbg !5696
  %68 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5696
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %68, i32 0, i32 0, !dbg !5696
  %69 = load i32, i32* %num_elem, align 8, !dbg !5696
  %sub110 = sub nsw i32 %69, 1, !dbg !5698
  store i32 %sub110, i32* %j, align 4, !dbg !5699
  br label %for.cond111, !dbg !5700

for.cond111:                                      ; preds = %for.inc, %if.then105
  %70 = load i32, i32* %j, align 4, !dbg !5701
  %cmp112 = icmp sge i32 %70, 0, !dbg !5703
  br i1 %cmp112, label %for.body114, label %for.end, !dbg !5704

for.body114:                                      ; preds = %for.cond111
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5705
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !5705
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !5705
  %72 = load i32, i32* %i, align 4, !dbg !5705
  %idxprom117 = sext i32 %72 to i64, !dbg !5705
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 %idxprom117, !dbg !5705
  %rt_rtvec119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtvec_def**, !dbg !5705
  %73 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec119, align 8, !dbg !5705
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %73, i32 0, i32 1, !dbg !5705
  %74 = load i32, i32* %j, align 4, !dbg !5705
  %idxprom120 = sext i32 %74 to i64, !dbg !5705
  %arrayidx121 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom120, !dbg !5705
  %75 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx121, align 8, !dbg !5705
  %76 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !5706
  %77 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !5707
  %call122 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %75, %struct.rtx_def* %76, %struct.rtx_def* %77), !dbg !5708
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5709
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !5709
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !5709
  %79 = load i32, i32* %i, align 4, !dbg !5709
  %idxprom125 = sext i32 %79 to i64, !dbg !5709
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 %idxprom125, !dbg !5709
  %rt_rtvec127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtvec_def**, !dbg !5709
  %80 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec127, align 8, !dbg !5709
  %elem128 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %80, i32 0, i32 1, !dbg !5709
  %81 = load i32, i32* %j, align 4, !dbg !5709
  %idxprom129 = sext i32 %81 to i64, !dbg !5709
  %arrayidx130 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem128, i64 0, i64 %idxprom129, !dbg !5709
  store %struct.rtx_def* %call122, %struct.rtx_def** %arrayidx130, align 8, !dbg !5710
  br label %for.inc, !dbg !5709

for.inc:                                          ; preds = %for.body114
  %82 = load i32, i32* %j, align 4, !dbg !5711
  %dec = add nsw i32 %82, -1, !dbg !5711
  store i32 %dec, i32* %j, align 4, !dbg !5711
  br label %for.cond111, !dbg !5712, !llvm.loop !5713

for.end:                                          ; preds = %for.cond111
  br label %if.end131, !dbg !5714

if.end131:                                        ; preds = %for.end, %if.else99
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then87
  br label %for.inc133, !dbg !5715

for.inc133:                                       ; preds = %if.end132
  %83 = load i32, i32* %i, align 4, !dbg !5716
  %dec134 = add nsw i32 %83, -1, !dbg !5716
  store i32 %dec134, i32* %i, align 4, !dbg !5716
  br label %for.cond, !dbg !5717, !llvm.loop !5718

for.end135:                                       ; preds = %for.cond
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5720
  store %struct.rtx_def* %84, %struct.rtx_def** %retval, align 8, !dbg !5721
  br label %return, !dbg !5721

return:                                           ; preds = %for.end135, %if.end70, %if.end33, %if.then6, %if.then3, %if.then
  %85 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !5722
  ret %struct.rtx_def* %85, !dbg !5722
}

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @replace_label(%struct.rtx_def** %x, i8* %data) #0 !dbg !5723 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %l = alloca %struct.rtx_def*, align 8
  %old_label = alloca %struct.rtx_def*, align 8
  %new_label = alloca %struct.rtx_def*, align 8
  %update_label_nuses = alloca i8, align 1
  %c = alloca %struct.rtx_def*, align 8
  %new_c = alloca %struct.rtx_def*, align 8
  %new_l = alloca %struct.rtx_def*, align 8
  %d = alloca %struct.replace_label_data*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %l, metadata !5730, metadata !DIExpression()), !dbg !5731
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5732
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !5733
  store %struct.rtx_def* %1, %struct.rtx_def** %l, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_label, metadata !5734, metadata !DIExpression()), !dbg !5735
  %2 = load i8*, i8** %data.addr, align 8, !dbg !5736
  %3 = bitcast i8* %2 to %struct.replace_label_data*, !dbg !5737
  %r1 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %3, i32 0, i32 0, !dbg !5738
  %4 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !5738
  store %struct.rtx_def* %4, %struct.rtx_def** %old_label, align 8, !dbg !5735
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_label, metadata !5739, metadata !DIExpression()), !dbg !5740
  %5 = load i8*, i8** %data.addr, align 8, !dbg !5741
  %6 = bitcast i8* %5 to %struct.replace_label_data*, !dbg !5742
  %r2 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %6, i32 0, i32 1, !dbg !5743
  %7 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !5743
  store %struct.rtx_def* %7, %struct.rtx_def** %new_label, align 8, !dbg !5740
  call void @llvm.dbg.declare(metadata i8* %update_label_nuses, metadata !5744, metadata !DIExpression()), !dbg !5745
  %8 = load i8*, i8** %data.addr, align 8, !dbg !5746
  %9 = bitcast i8* %8 to %struct.replace_label_data*, !dbg !5747
  %update_label_nuses1 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %9, i32 0, i32 2, !dbg !5748
  %10 = load i8, i8* %update_label_nuses1, align 8, !dbg !5748
  store i8 %10, i8* %update_label_nuses, align 1, !dbg !5745
  %11 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5749
  %cmp = icmp eq %struct.rtx_def* %11, null, !dbg !5751
  br i1 %cmp, label %if.then, label %if.end, !dbg !5752

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5753
  br label %return, !dbg !5753

if.end:                                           ; preds = %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5754
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !5754
  %bf.load = load i32, i32* %13, align 8, !dbg !5754
  %bf.clear = and i32 %bf.load, 65535, !dbg !5754
  %cmp2 = icmp eq i32 %bf.clear, 45, !dbg !5756
  br i1 %cmp2, label %land.lhs.true, label %if.end17, !dbg !5757

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5758
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5758
  %bf.load3 = load i32, i32* %15, align 8, !dbg !5758
  %bf.lshr = lshr i32 %bf.load3, 26, !dbg !5758
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !5758
  %tobool = icmp ne i32 %bf.clear4, 0, !dbg !5758
  br i1 %tobool, label %if.then5, label %if.end17, !dbg !5759

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %c, metadata !5760, metadata !DIExpression()), !dbg !5762
  %16 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5763
  %call = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %16), !dbg !5764
  store %struct.rtx_def* %call, %struct.rtx_def** %c, align 8, !dbg !5762
  %17 = load %struct.rtx_def*, %struct.rtx_def** %old_label, align 8, !dbg !5765
  %18 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !5767
  %call6 = call i32 @rtx_referenced_p(%struct.rtx_def* %17, %struct.rtx_def* %18), !dbg !5768
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5768
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !5769

if.then8:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_c, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_l, metadata !5773, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.declare(metadata %struct.replace_label_data** %d, metadata !5775, metadata !DIExpression()), !dbg !5776
  %19 = load i8*, i8** %data.addr, align 8, !dbg !5777
  %20 = bitcast i8* %19 to %struct.replace_label_data*, !dbg !5778
  store %struct.replace_label_data* %20, %struct.replace_label_data** %d, align 8, !dbg !5776
  %21 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !5779
  %call9 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %21), !dbg !5780
  store %struct.rtx_def* %call9, %struct.rtx_def** %new_c, align 8, !dbg !5781
  %22 = load %struct.replace_label_data*, %struct.replace_label_data** %d, align 8, !dbg !5782
  %update_label_nuses10 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %22, i32 0, i32 2, !dbg !5783
  store i8 0, i8* %update_label_nuses10, align 8, !dbg !5784
  %23 = load i8*, i8** %data.addr, align 8, !dbg !5785
  %call11 = call i32 @for_each_rtx(%struct.rtx_def** %new_c, i32 (%struct.rtx_def**, i8*)* @replace_label, i8* %23), !dbg !5786
  %24 = load i8, i8* %update_label_nuses, align 1, !dbg !5787
  %25 = load %struct.replace_label_data*, %struct.replace_label_data** %d, align 8, !dbg !5788
  %update_label_nuses12 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %25, i32 0, i32 2, !dbg !5789
  store i8 %24, i8* %update_label_nuses12, align 8, !dbg !5790
  %26 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5791
  %call13 = call i32 @get_pool_mode(%struct.rtx_def* %26), !dbg !5791
  %27 = load %struct.rtx_def*, %struct.rtx_def** %new_c, align 8, !dbg !5791
  %call14 = call %struct.rtx_def* @force_const_mem(i32 %call13, %struct.rtx_def* %27), !dbg !5791
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i32 0, i32 1, !dbg !5791
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5791
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5791
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5791
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5791
  store %struct.rtx_def* %28, %struct.rtx_def** %new_l, align 8, !dbg !5792
  %29 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5793
  %30 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5794
  %31 = load %struct.rtx_def*, %struct.rtx_def** %new_l, align 8, !dbg !5795
  %call15 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %29, %struct.rtx_def* %30, %struct.rtx_def* %31), !dbg !5796
  %32 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5797
  store %struct.rtx_def* %call15, %struct.rtx_def** %32, align 8, !dbg !5798
  br label %if.end16, !dbg !5799

if.end16:                                         ; preds = %if.then8, %if.then5
  store i32 0, i32* %retval, align 4, !dbg !5800
  br label %return, !dbg !5800

if.end17:                                         ; preds = %land.lhs.true, %if.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5801
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !5801
  %bf.load18 = load i32, i32* %34, align 8, !dbg !5801
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !5801
  %cmp20 = icmp eq i32 %bf.clear19, 9, !dbg !5801
  br i1 %cmp20, label %land.lhs.true21, label %if.end32, !dbg !5803

land.lhs.true21:                                  ; preds = %if.end17
  %35 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5804
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5804
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !5804
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 8, !dbg !5804
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !5804
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !5804
  %37 = load %struct.rtx_def*, %struct.rtx_def** %old_label, align 8, !dbg !5805
  %cmp26 = icmp eq %struct.rtx_def* %36, %37, !dbg !5806
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !5807

if.then27:                                        ; preds = %land.lhs.true21
  %38 = load %struct.rtx_def*, %struct.rtx_def** %new_label, align 8, !dbg !5808
  %39 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5809
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !5809
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !5809
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 8, !dbg !5809
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !5809
  store %struct.rtx_def* %38, %struct.rtx_def** %rt_rtx31, align 8, !dbg !5810
  br label %if.end32, !dbg !5809

if.end32:                                         ; preds = %if.then27, %land.lhs.true21, %if.end17
  %40 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5811
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !5811
  %bf.load33 = load i32, i32* %41, align 8, !dbg !5811
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !5811
  %cmp35 = icmp eq i32 %bf.clear34, 44, !dbg !5813
  br i1 %cmp35, label %land.lhs.true39, label %lor.lhs.false, !dbg !5814

lor.lhs.false:                                    ; preds = %if.end32
  %42 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5815
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !5815
  %bf.load36 = load i32, i32* %43, align 8, !dbg !5815
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !5815
  %cmp38 = icmp eq i32 %bf.clear37, 4, !dbg !5816
  br i1 %cmp38, label %land.lhs.true39, label %if.end60, !dbg !5817

land.lhs.true39:                                  ; preds = %lor.lhs.false, %if.end32
  %44 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5818
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !5818
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !5818
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !5818
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !5818
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5818
  %46 = load %struct.rtx_def*, %struct.rtx_def** %old_label, align 8, !dbg !5819
  %cmp44 = icmp eq %struct.rtx_def* %45, %46, !dbg !5820
  br i1 %cmp44, label %if.then45, label %if.end60, !dbg !5821

if.then45:                                        ; preds = %land.lhs.true39
  %47 = load %struct.rtx_def*, %struct.rtx_def** %new_label, align 8, !dbg !5822
  %48 = load %struct.rtx_def*, %struct.rtx_def** %l, align 8, !dbg !5824
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !5824
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !5824
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !5824
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !5824
  store %struct.rtx_def* %47, %struct.rtx_def** %rt_rtx49, align 8, !dbg !5825
  %49 = load i8, i8* %update_label_nuses, align 1, !dbg !5826
  %tobool50 = icmp ne i8 %49, 0, !dbg !5826
  br i1 %tobool50, label %if.then51, label %if.end59, !dbg !5828

if.then51:                                        ; preds = %if.then45
  %50 = load %struct.rtx_def*, %struct.rtx_def** %new_label, align 8, !dbg !5829
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !5829
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !5829
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 4, !dbg !5829
  %rt_int = bitcast %union.rtunion_def* %arrayidx54 to i32*, !dbg !5829
  %51 = load i32, i32* %rt_int, align 8, !dbg !5831
  %inc = add nsw i32 %51, 1, !dbg !5831
  store i32 %inc, i32* %rt_int, align 8, !dbg !5831
  %52 = load %struct.rtx_def*, %struct.rtx_def** %old_label, align 8, !dbg !5832
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !5832
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !5832
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 4, !dbg !5832
  %rt_int58 = bitcast %union.rtunion_def* %arrayidx57 to i32*, !dbg !5832
  %53 = load i32, i32* %rt_int58, align 8, !dbg !5833
  %dec = add nsw i32 %53, -1, !dbg !5833
  store i32 %dec, i32* %rt_int58, align 8, !dbg !5833
  br label %if.end59, !dbg !5834

if.end59:                                         ; preds = %if.then51, %if.then45
  store i32 0, i32* %retval, align 4, !dbg !5835
  br label %return, !dbg !5835

if.end60:                                         ; preds = %land.lhs.true39, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !5836
  br label %return, !dbg !5836

return:                                           ; preds = %if.end60, %if.end59, %if.end16, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !5837
  ret i32 %54, !dbg !5837
}

declare dso_local %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rtx_referenced_p(%struct.rtx_def* %x, %struct.rtx_def* %body) #0 !dbg !5838 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %body.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5845
  %1 = bitcast %struct.rtx_def* %0 to i8*, !dbg !5845
  %call = call i32 @for_each_rtx(%struct.rtx_def** %body.addr, i32 (%struct.rtx_def**, i8*)* @rtx_referenced_p_1, i8* %1), !dbg !5846
  ret i32 %call, !dbg !5847
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @for_each_rtx(%struct.rtx_def** %x, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) #0 !dbg !5848 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def**, align 8
  %f.addr = alloca i32 (%struct.rtx_def**, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  store i32 (%struct.rtx_def**, i8*)* %f, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.rtx_def**, i8*)** %f.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5861, metadata !DIExpression()), !dbg !5862
  %0 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !5863
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5864
  %2 = load i8*, i8** %data.addr, align 8, !dbg !5865
  %call = call i32 %0(%struct.rtx_def** %1, i8* %2), !dbg !5866
  store i32 %call, i32* %result, align 4, !dbg !5867
  %3 = load i32, i32* %result, align 4, !dbg !5868
  %cmp = icmp eq i32 %3, -1, !dbg !5870
  br i1 %cmp, label %if.then, label %if.else, !dbg !5871

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %result, align 4, !dbg !5873
  %cmp1 = icmp ne i32 %4, 0, !dbg !5875
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !5876

if.then2:                                         ; preds = %if.else
  %5 = load i32, i32* %result, align 4, !dbg !5877
  store i32 %5, i32* %retval, align 4, !dbg !5878
  br label %return, !dbg !5878

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5879
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !5881
  %cmp4 = icmp eq %struct.rtx_def* %7, null, !dbg !5882
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5883

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !5884
  br label %return, !dbg !5884

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5885
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !5885
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5885
  %bf.load = load i32, i32* %10, align 8, !dbg !5885
  %bf.clear = and i32 %bf.load, 65535, !dbg !5885
  %idxprom = zext i32 %bf.clear to i64, !dbg !5886
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom, !dbg !5886
  %11 = load i32, i32* %arrayidx, align 4, !dbg !5886
  store i32 %11, i32* %i, align 4, !dbg !5887
  %12 = load i32, i32* %i, align 4, !dbg !5888
  %cmp7 = icmp slt i32 %12, 0, !dbg !5890
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5891

if.then8:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5892
  br label %return, !dbg !5892

if.end9:                                          ; preds = %if.end6
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !5893
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8, !dbg !5894
  %15 = load i32, i32* %i, align 4, !dbg !5895
  %16 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !5896
  %17 = load i8*, i8** %data.addr, align 8, !dbg !5897
  %call10 = call i32 @for_each_rtx_1(%struct.rtx_def* %14, i32 %15, i32 (%struct.rtx_def**, i8*)* %16, i8* %17), !dbg !5898
  store i32 %call10, i32* %retval, align 4, !dbg !5899
  br label %return, !dbg !5899

return:                                           ; preds = %if.end9, %if.then8, %if.then5, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !5900
  ret i32 %18, !dbg !5900
}

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rtx_referenced_p_1(%struct.rtx_def** %body, i8* %x) #0 !dbg !5901 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.rtx_def**, align 8
  %x.addr = alloca i8*, align 8
  %y = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %body, %struct.rtx_def*** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %body.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !5904, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load i8*, i8** %x.addr, align 8, !dbg !5908
  %1 = bitcast i8* %0 to %struct.rtx_def*, !dbg !5909
  store %struct.rtx_def* %1, %struct.rtx_def** %y, align 8, !dbg !5907
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5910
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !5912
  %cmp = icmp eq %struct.rtx_def* %3, null, !dbg !5913
  br i1 %cmp, label %if.then, label %if.end, !dbg !5914

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5915
  %cmp1 = icmp eq %struct.rtx_def* %4, null, !dbg !5916
  %conv = zext i1 %cmp1 to i32, !dbg !5916
  store i32 %conv, i32* %retval, align 4, !dbg !5917
  br label %return, !dbg !5917

if.end:                                           ; preds = %entry
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5918
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !5918
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5918
  %bf.load = load i32, i32* %7, align 8, !dbg !5918
  %bf.clear = and i32 %bf.load, 65535, !dbg !5918
  %cmp2 = icmp eq i32 %bf.clear, 44, !dbg !5920
  br i1 %cmp2, label %land.lhs.true, label %if.end11, !dbg !5921

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5922
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5922
  %bf.load4 = load i32, i32* %9, align 8, !dbg !5922
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5922
  %cmp6 = icmp eq i32 %bf.clear5, 12, !dbg !5922
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !5923

if.then8:                                         ; preds = %land.lhs.true
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5924
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8, !dbg !5924
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !5924
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5924
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5924
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5924
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5924
  %13 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5925
  %cmp9 = icmp eq %struct.rtx_def* %12, %13, !dbg !5926
  %conv10 = zext i1 %cmp9 to i32, !dbg !5926
  store i32 %conv10, i32* %retval, align 4, !dbg !5927
  br label %return, !dbg !5927

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5928
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !5928
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !5928
  %bf.load12 = load i32, i32* %16, align 8, !dbg !5928
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5928
  %cmp14 = icmp eq i32 %bf.clear13, 45, !dbg !5930
  br i1 %cmp14, label %land.lhs.true16, label %if.end21, !dbg !5931

land.lhs.true16:                                  ; preds = %if.end11
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5932
  %18 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8, !dbg !5932
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5932
  %bf.load17 = load i32, i32* %19, align 8, !dbg !5932
  %bf.lshr = lshr i32 %bf.load17, 26, !dbg !5932
  %bf.clear18 = and i32 %bf.lshr, 1, !dbg !5932
  %tobool = icmp ne i32 %bf.clear18, 0, !dbg !5932
  br i1 %tobool, label %if.then19, label %if.end21, !dbg !5933

if.then19:                                        ; preds = %land.lhs.true16
  %20 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5934
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5935
  %22 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8, !dbg !5936
  %call = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %22), !dbg !5937
  %call20 = call i32 @rtx_referenced_p(%struct.rtx_def* %20, %struct.rtx_def* %call), !dbg !5938
  store i32 %call20, i32* %retval, align 4, !dbg !5939
  br label %return, !dbg !5939

if.end21:                                         ; preds = %land.lhs.true16, %if.end11
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %body.addr, align 8, !dbg !5940
  %24 = load %struct.rtx_def*, %struct.rtx_def** %23, align 8, !dbg !5941
  %25 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5942
  %call22 = call i32 @rtx_equal_p(%struct.rtx_def* %24, %struct.rtx_def* %25), !dbg !5943
  store i32 %call22, i32* %retval, align 4, !dbg !5944
  br label %return, !dbg !5944

return:                                           ; preds = %if.end21, %if.then19, %if.then8, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !5945
  ret i32 %26, !dbg !5945
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @tablejump_p(%struct.rtx_def* %insn, %struct.rtx_def** %labelp, %struct.rtx_def** %tablep) #0 !dbg !5946 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %labelp.addr = alloca %struct.rtx_def**, align 8
  %tablep.addr = alloca %struct.rtx_def**, align 8
  %label = alloca %struct.rtx_def*, align 8
  %table = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  store %struct.rtx_def** %labelp, %struct.rtx_def*** %labelp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %labelp.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  store %struct.rtx_def** %tablep, %struct.rtx_def*** %tablep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %tablep.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %label, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %table, metadata !5957, metadata !DIExpression()), !dbg !5958
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5959
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5959
  %bf.load = load i32, i32* %1, align 8, !dbg !5959
  %bf.clear = and i32 %bf.load, 65535, !dbg !5959
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5959
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !5961

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5962
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !5962
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5962
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !5962
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5962
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5962
  store %struct.rtx_def* %3, %struct.rtx_def** %label, align 8, !dbg !5963
  %cmp1 = icmp ne %struct.rtx_def* %3, null, !dbg !5964
  br i1 %cmp1, label %land.lhs.true2, label %if.end27, !dbg !5965

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !5966
  %call = call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %4), !dbg !5967
  store %struct.rtx_def* %call, %struct.rtx_def** %table, align 8, !dbg !5968
  %cmp3 = icmp ne %struct.rtx_def* %call, null, !dbg !5969
  br i1 %cmp3, label %land.lhs.true4, label %if.end27, !dbg !5970

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8, !dbg !5971
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5971
  %bf.load5 = load i32, i32* %6, align 8, !dbg !5971
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5971
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !5971
  br i1 %cmp7, label %land.lhs.true8, label %if.end27, !dbg !5971

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8, !dbg !5971
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !5971
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !5971
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 5, !dbg !5971
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5971
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5971
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5971
  %bf.load13 = load i32, i32* %9, align 8, !dbg !5971
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5971
  %cmp15 = icmp eq i32 %bf.clear14, 20, !dbg !5971
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !5971

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8, !dbg !5971
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5971
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !5971
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !5971
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !5971
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !5971
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5971
  %bf.load20 = load i32, i32* %12, align 8, !dbg !5971
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5971
  %cmp22 = icmp eq i32 %bf.clear21, 21, !dbg !5971
  br i1 %cmp22, label %if.then, label %if.end27, !dbg !5972

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true8
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %labelp.addr, align 8, !dbg !5973
  %tobool = icmp ne %struct.rtx_def** %13, null, !dbg !5973
  br i1 %tobool, label %if.then23, label %if.end, !dbg !5976

if.then23:                                        ; preds = %if.then
  %14 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !5977
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %labelp.addr, align 8, !dbg !5978
  store %struct.rtx_def* %14, %struct.rtx_def** %15, align 8, !dbg !5979
  br label %if.end, !dbg !5980

if.end:                                           ; preds = %if.then23, %if.then
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %tablep.addr, align 8, !dbg !5981
  %tobool24 = icmp ne %struct.rtx_def** %16, null, !dbg !5981
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5983

if.then25:                                        ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8, !dbg !5984
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %tablep.addr, align 8, !dbg !5985
  store %struct.rtx_def* %17, %struct.rtx_def** %18, align 8, !dbg !5986
  br label %if.end26, !dbg !5987

if.end26:                                         ; preds = %if.then25, %if.end
  store i8 1, i8* %retval, align 1, !dbg !5988
  br label %return, !dbg !5988

if.end27:                                         ; preds = %lor.lhs.false, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !5989
  br label %return, !dbg !5989

return:                                           ; preds = %if.end27, %if.end26
  %19 = load i8, i8* %retval, align 1, !dbg !5990
  ret i8 %19, !dbg !5990
}

declare dso_local %struct.rtx_def* @next_active_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @computed_jump_p(%struct.rtx_def* %insn) #0 !dbg !5991 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %pat = alloca %struct.rtx_def*, align 8
  %len = alloca i32, align 4
  %has_use_labelref = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5994, metadata !DIExpression()), !dbg !5995
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5996
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5996
  %bf.load = load i32, i32* %1, align 8, !dbg !5996
  %bf.clear = and i32 %bf.load, 65535, !dbg !5996
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5996
  br i1 %cmp, label %if.then, label %if.end105, !dbg !5998

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !5999, metadata !DIExpression()), !dbg !6001
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6002
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6002
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6002
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !6002
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6002
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6002
  store %struct.rtx_def* %3, %struct.rtx_def** %pat, align 8, !dbg !6001
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6003
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !6003
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6003
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 8, !dbg !6003
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6003
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6003
  %cmp5 = icmp ne %struct.rtx_def* %5, null, !dbg !6005
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6006

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !6007
  br label %return, !dbg !6007

if.end:                                           ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6008
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6008
  %bf.load7 = load i32, i32* %7, align 8, !dbg !6008
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !6008
  %cmp9 = icmp eq i32 %bf.clear8, 15, !dbg !6010
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !6011

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6012, metadata !DIExpression()), !dbg !6014
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6015
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !6015
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !6015
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !6015
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !6015
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6015
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i32 0, i32 0, !dbg !6015
  %10 = load i32, i32* %num_elem, align 8, !dbg !6015
  store i32 %10, i32* %len, align 4, !dbg !6014
  call void @llvm.dbg.declare(metadata i32* %has_use_labelref, metadata !6016, metadata !DIExpression()), !dbg !6017
  store i32 0, i32* %has_use_labelref, align 4, !dbg !6017
  %11 = load i32, i32* %len, align 4, !dbg !6018
  %sub = sub nsw i32 %11, 1, !dbg !6020
  store i32 %sub, i32* %i, align 4, !dbg !6021
  br label %for.cond, !dbg !6022

for.cond:                                         ; preds = %for.inc, %if.then10
  %12 = load i32, i32* %i, align 4, !dbg !6023
  %cmp14 = icmp sge i32 %12, 0, !dbg !6025
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6026

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6027
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !6027
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !6027
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !6027
  %rt_rtvec18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !6027
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec18, align 8, !dbg !6027
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i32 0, i32 1, !dbg !6027
  %15 = load i32, i32* %i, align 4, !dbg !6027
  %idxprom = sext i32 %15 to i64, !dbg !6027
  %arrayidx19 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !6027
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !6027
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6027
  %bf.load20 = load i32, i32* %17, align 8, !dbg !6027
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6027
  %cmp22 = icmp eq i32 %bf.clear21, 24, !dbg !6029
  br i1 %cmp22, label %land.lhs.true, label %if.end38, !dbg !6030

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6031
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !6031
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !6031
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !6031
  %rt_rtvec26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtvec_def**, !dbg !6031
  %19 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec26, align 8, !dbg !6031
  %elem27 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %19, i32 0, i32 1, !dbg !6031
  %20 = load i32, i32* %i, align 4, !dbg !6031
  %idxprom28 = sext i32 %20 to i64, !dbg !6031
  %arrayidx29 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem27, i64 0, i64 %idxprom28, !dbg !6031
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8, !dbg !6031
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !6031
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !6031
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !6031
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !6031
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !6031
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6031
  %bf.load34 = load i32, i32* %23, align 8, !dbg !6031
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6031
  %cmp36 = icmp eq i32 %bf.clear35, 44, !dbg !6032
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !6033

if.then37:                                        ; preds = %land.lhs.true
  store i32 1, i32* %has_use_labelref, align 4, !dbg !6034
  br label %if.end38, !dbg !6035

if.end38:                                         ; preds = %if.then37, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6036

for.inc:                                          ; preds = %if.end38
  %24 = load i32, i32* %i, align 4, !dbg !6037
  %dec = add nsw i32 %24, -1, !dbg !6037
  store i32 %dec, i32* %i, align 4, !dbg !6037
  br label %for.cond, !dbg !6038, !llvm.loop !6039

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %has_use_labelref, align 4, !dbg !6041
  %tobool = icmp ne i32 %25, 0, !dbg !6041
  br i1 %tobool, label %if.end85, label %if.then39, !dbg !6043

if.then39:                                        ; preds = %for.end
  %26 = load i32, i32* %len, align 4, !dbg !6044
  %sub40 = sub nsw i32 %26, 1, !dbg !6046
  store i32 %sub40, i32* %i, align 4, !dbg !6047
  br label %for.cond41, !dbg !6048

for.cond41:                                       ; preds = %for.inc82, %if.then39
  %27 = load i32, i32* %i, align 4, !dbg !6049
  %cmp42 = icmp sge i32 %27, 0, !dbg !6051
  br i1 %cmp42, label %for.body43, label %for.end84, !dbg !6052

for.body43:                                       ; preds = %for.cond41
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6053
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !6053
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !6053
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !6053
  %rt_rtvec47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtvec_def**, !dbg !6053
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !6053
  %elem48 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1, !dbg !6053
  %30 = load i32, i32* %i, align 4, !dbg !6053
  %idxprom49 = sext i32 %30 to i64, !dbg !6053
  %arrayidx50 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem48, i64 0, i64 %idxprom49, !dbg !6053
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx50, align 8, !dbg !6053
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !6053
  %bf.load51 = load i32, i32* %32, align 8, !dbg !6053
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !6053
  %cmp53 = icmp eq i32 %bf.clear52, 23, !dbg !6055
  br i1 %cmp53, label %land.lhs.true54, label %if.end81, !dbg !6056

land.lhs.true54:                                  ; preds = %for.body43
  %33 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6057
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !6057
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !6057
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !6057
  %rt_rtvec58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**, !dbg !6057
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec58, align 8, !dbg !6057
  %elem59 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i32 0, i32 1, !dbg !6057
  %35 = load i32, i32* %i, align 4, !dbg !6057
  %idxprom60 = sext i32 %35 to i64, !dbg !6057
  %arrayidx61 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem59, i64 0, i64 %idxprom60, !dbg !6057
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx61, align 8, !dbg !6057
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !6057
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !6057
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !6057
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !6057
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !6057
  %38 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6058
  %cmp66 = icmp eq %struct.rtx_def* %37, %38, !dbg !6059
  br i1 %cmp66, label %land.lhs.true67, label %if.end81, !dbg !6060

land.lhs.true67:                                  ; preds = %land.lhs.true54
  %39 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6061
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !6061
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !6061
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !6061
  %rt_rtvec71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtvec_def**, !dbg !6061
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec71, align 8, !dbg !6061
  %elem72 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !6061
  %41 = load i32, i32* %i, align 4, !dbg !6061
  %idxprom73 = sext i32 %41 to i64, !dbg !6061
  %arrayidx74 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem72, i64 0, i64 %idxprom73, !dbg !6061
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx74, align 8, !dbg !6061
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !6061
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !6061
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 1, !dbg !6061
  %rt_rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !6061
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !6061
  %call = call i32 @computed_jump_p_1(%struct.rtx_def* %43), !dbg !6062
  %tobool79 = icmp ne i32 %call, 0, !dbg !6062
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !6063

if.then80:                                        ; preds = %land.lhs.true67
  store i32 1, i32* %retval, align 4, !dbg !6064
  br label %return, !dbg !6064

if.end81:                                         ; preds = %land.lhs.true67, %land.lhs.true54, %for.body43
  br label %for.inc82, !dbg !6065

for.inc82:                                        ; preds = %if.end81
  %44 = load i32, i32* %i, align 4, !dbg !6066
  %dec83 = add nsw i32 %44, -1, !dbg !6066
  store i32 %dec83, i32* %i, align 4, !dbg !6066
  br label %for.cond41, !dbg !6067, !llvm.loop !6068

for.end84:                                        ; preds = %for.cond41
  br label %if.end85, !dbg !6069

if.end85:                                         ; preds = %for.end84, %for.end
  br label %if.end104, !dbg !6070

if.else:                                          ; preds = %if.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6071
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !6071
  %bf.load86 = load i32, i32* %46, align 8, !dbg !6071
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !6071
  %cmp88 = icmp eq i32 %bf.clear87, 23, !dbg !6073
  br i1 %cmp88, label %land.lhs.true89, label %if.end103, !dbg !6074

land.lhs.true89:                                  ; preds = %if.else
  %47 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6075
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !6075
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !6075
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !6075
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !6075
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !6075
  %49 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6076
  %cmp94 = icmp eq %struct.rtx_def* %48, %49, !dbg !6077
  br i1 %cmp94, label %land.lhs.true95, label %if.end103, !dbg !6078

land.lhs.true95:                                  ; preds = %land.lhs.true89
  %50 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6079
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !6079
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !6079
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 1, !dbg !6079
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !6079
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !6079
  %call100 = call i32 @computed_jump_p_1(%struct.rtx_def* %51), !dbg !6080
  %tobool101 = icmp ne i32 %call100, 0, !dbg !6080
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !6081

if.then102:                                       ; preds = %land.lhs.true95
  store i32 1, i32* %retval, align 4, !dbg !6082
  br label %return, !dbg !6082

if.end103:                                        ; preds = %land.lhs.true95, %land.lhs.true89, %if.else
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end85
  br label %if.end105, !dbg !6083

if.end105:                                        ; preds = %if.end104, %entry
  store i32 0, i32* %retval, align 4, !dbg !6084
  br label %return, !dbg !6084

return:                                           ; preds = %if.end105, %if.then102, %if.then80, %if.then6
  %52 = load i32, i32* %retval, align 4, !dbg !6085
  ret i32 %52, !dbg !6085
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @computed_jump_p_1(%struct.rtx_def* %x) #0 !dbg !6086 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6087, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6089, metadata !DIExpression()), !dbg !6090
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6091
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6091
  %bf.load = load i32, i32* %1, align 8, !dbg !6091
  %bf.clear = and i32 %bf.load, 65535, !dbg !6091
  store i32 %bf.clear, i32* %code, align 4, !dbg !6090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6092, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !6096, metadata !DIExpression()), !dbg !6097
  %2 = load i32, i32* %code, align 4, !dbg !6098
  switch i32 %2, label %sw.default [
    i32 44, label %sw.bb
    i32 36, label %sw.bb
    i32 35, label %sw.bb1
    i32 30, label %sw.bb1
    i32 32, label %sw.bb1
    i32 31, label %sw.bb1
    i32 33, label %sw.bb1
    i32 45, label %sw.bb1
    i32 37, label %sw.bb1
    i32 43, label %sw.bb2
    i32 47, label %sw.bb11
  ], !dbg !6099

sw.bb:                                            ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !6100
  br label %return, !dbg !6100

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !6102
  br label %return, !dbg !6102

sw.bb2:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6103
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !6103
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6103
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6103
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6103
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6103
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !6103
  %bf.load3 = load i32, i32* %5, align 8, !dbg !6103
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !6103
  %cmp = icmp eq i32 %bf.clear4, 45, !dbg !6104
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6105

land.rhs:                                         ; preds = %sw.bb2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6106
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !6106
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !6106
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !6106
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !6106
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6106
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !6106
  %bf.load9 = load i32, i32* %8, align 8, !dbg !6106
  %bf.lshr = lshr i32 %bf.load9, 26, !dbg !6106
  %bf.clear10 = and i32 %bf.lshr, 1, !dbg !6106
  %tobool = icmp ne i32 %bf.clear10, 0, !dbg !6105
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb2
  %9 = phi i1 [ false, %sw.bb2 ], [ %tobool, %land.rhs ], !dbg !6107
  %lnot = xor i1 %9, true, !dbg !6108
  %lnot.ext = zext i1 %lnot to i32, !dbg !6108
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !6109
  br label %return, !dbg !6109

sw.bb11:                                          ; preds = %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6110
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !6110
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !6110
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !6110
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !6110
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !6110
  %call = call i32 @computed_jump_p_1(%struct.rtx_def* %11), !dbg !6111
  %tobool16 = icmp ne i32 %call, 0, !dbg !6111
  br i1 %tobool16, label %lor.end, label %lor.rhs, !dbg !6112

lor.rhs:                                          ; preds = %sw.bb11
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6113
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !6113
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !6113
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 2, !dbg !6113
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !6113
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !6113
  %call21 = call i32 @computed_jump_p_1(%struct.rtx_def* %13), !dbg !6114
  %tobool22 = icmp ne i32 %call21, 0, !dbg !6112
  br label %lor.end, !dbg !6112

lor.end:                                          ; preds = %lor.rhs, %sw.bb11
  %14 = phi i1 [ true, %sw.bb11 ], [ %tobool22, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32, !dbg !6112
  store i32 %lor.ext, i32* %retval, align 4, !dbg !6115
  br label %return, !dbg !6115

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !6116

sw.epilog:                                        ; preds = %sw.default
  %15 = load i32, i32* %code, align 4, !dbg !6117
  %idxprom = sext i32 %15 to i64, !dbg !6117
  %arrayidx23 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6117
  %16 = load i8*, i8** %arrayidx23, align 8, !dbg !6117
  store i8* %16, i8** %fmt, align 8, !dbg !6118
  %17 = load i32, i32* %code, align 4, !dbg !6119
  %idxprom24 = sext i32 %17 to i64, !dbg !6119
  %arrayidx25 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom24, !dbg !6119
  %18 = load i8, i8* %arrayidx25, align 1, !dbg !6119
  %conv = zext i8 %18 to i32, !dbg !6119
  %sub = sub nsw i32 %conv, 1, !dbg !6121
  store i32 %sub, i32* %i, align 4, !dbg !6122
  br label %for.cond, !dbg !6123

for.cond:                                         ; preds = %for.inc66, %sw.epilog
  %19 = load i32, i32* %i, align 4, !dbg !6124
  %cmp26 = icmp sge i32 %19, 0, !dbg !6126
  br i1 %cmp26, label %for.body, label %for.end67, !dbg !6127

for.body:                                         ; preds = %for.cond
  %20 = load i8*, i8** %fmt, align 8, !dbg !6128
  %21 = load i32, i32* %i, align 4, !dbg !6131
  %idxprom28 = sext i32 %21 to i64, !dbg !6128
  %arrayidx29 = getelementptr inbounds i8, i8* %20, i64 %idxprom28, !dbg !6128
  %22 = load i8, i8* %arrayidx29, align 1, !dbg !6128
  %conv30 = sext i8 %22 to i32, !dbg !6128
  %cmp31 = icmp eq i32 %conv30, 101, !dbg !6132
  br i1 %cmp31, label %land.lhs.true, label %if.else, !dbg !6133

land.lhs.true:                                    ; preds = %for.body
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6134
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !6134
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !6134
  %24 = load i32, i32* %i, align 4, !dbg !6134
  %idxprom35 = sext i32 %24 to i64, !dbg !6134
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %idxprom35, !dbg !6134
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !6134
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !6134
  %call38 = call i32 @computed_jump_p_1(%struct.rtx_def* %25), !dbg !6135
  %tobool39 = icmp ne i32 %call38, 0, !dbg !6135
  br i1 %tobool39, label %if.then, label %if.else, !dbg !6136

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6137
  br label %return, !dbg !6137

if.else:                                          ; preds = %land.lhs.true, %for.body
  %26 = load i8*, i8** %fmt, align 8, !dbg !6138
  %27 = load i32, i32* %i, align 4, !dbg !6140
  %idxprom40 = sext i32 %27 to i64, !dbg !6138
  %arrayidx41 = getelementptr inbounds i8, i8* %26, i64 %idxprom40, !dbg !6138
  %28 = load i8, i8* %arrayidx41, align 1, !dbg !6138
  %conv42 = sext i8 %28 to i32, !dbg !6138
  %cmp43 = icmp eq i32 %conv42, 69, !dbg !6141
  br i1 %cmp43, label %if.then45, label %if.end64, !dbg !6142

if.then45:                                        ; preds = %if.else
  store i32 0, i32* %j, align 4, !dbg !6143
  br label %for.cond46, !dbg !6145

for.cond46:                                       ; preds = %for.inc, %if.then45
  %29 = load i32, i32* %j, align 4, !dbg !6146
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6148
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !6148
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !6148
  %31 = load i32, i32* %i, align 4, !dbg !6148
  %idxprom49 = sext i32 %31 to i64, !dbg !6148
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 %idxprom49, !dbg !6148
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtvec_def**, !dbg !6148
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6148
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i32 0, i32 0, !dbg !6148
  %33 = load i32, i32* %num_elem, align 8, !dbg !6148
  %cmp51 = icmp slt i32 %29, %33, !dbg !6149
  br i1 %cmp51, label %for.body53, label %for.end, !dbg !6150

for.body53:                                       ; preds = %for.cond46
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6151
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !6151
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !6151
  %35 = load i32, i32* %i, align 4, !dbg !6151
  %idxprom56 = sext i32 %35 to i64, !dbg !6151
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 %idxprom56, !dbg !6151
  %rt_rtvec58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**, !dbg !6151
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec58, align 8, !dbg !6151
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 1, !dbg !6151
  %37 = load i32, i32* %j, align 4, !dbg !6151
  %idxprom59 = sext i32 %37 to i64, !dbg !6151
  %arrayidx60 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom59, !dbg !6151
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx60, align 8, !dbg !6151
  %call61 = call i32 @computed_jump_p_1(%struct.rtx_def* %38), !dbg !6153
  %tobool62 = icmp ne i32 %call61, 0, !dbg !6153
  br i1 %tobool62, label %if.then63, label %if.end, !dbg !6154

if.then63:                                        ; preds = %for.body53
  store i32 1, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

if.end:                                           ; preds = %for.body53
  br label %for.inc, !dbg !6156

for.inc:                                          ; preds = %if.end
  %39 = load i32, i32* %j, align 4, !dbg !6157
  %inc = add nsw i32 %39, 1, !dbg !6157
  store i32 %inc, i32* %j, align 4, !dbg !6157
  br label %for.cond46, !dbg !6158, !llvm.loop !6159

for.end:                                          ; preds = %for.cond46
  br label %if.end64, !dbg !6160

if.end64:                                         ; preds = %for.end, %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.end64
  br label %for.inc66, !dbg !6161

for.inc66:                                        ; preds = %if.end65
  %40 = load i32, i32* %i, align 4, !dbg !6162
  %dec = add nsw i32 %40, -1, !dbg !6162
  store i32 %dec, i32* %i, align 4, !dbg !6162
  br label %for.cond, !dbg !6163, !llvm.loop !6164

for.end67:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6166
  br label %return, !dbg !6166

return:                                           ; preds = %for.end67, %if.then63, %if.then, %lor.end, %land.end, %sw.bb1, %sw.bb
  %41 = load i32, i32* %retval, align 4, !dbg !6167
  ret i32 %41, !dbg !6167
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @for_each_rtx_1(%struct.rtx_def* %exp, i32 %n, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) #0 !dbg !6168 {
entry:
  %retval = alloca i32, align 4
  %exp.addr = alloca %struct.rtx_def*, align 8
  %n.addr = alloca i32, align 4
  %f.addr = alloca i32 (%struct.rtx_def**, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %format = alloca i8*, align 8
  %x = alloca %struct.rtx_def**, align 8
  store %struct.rtx_def* %exp, %struct.rtx_def** %exp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %exp.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  store i32 (%struct.rtx_def**, i8*)* %f, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.rtx_def**, i8*)** %f.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata i8** %format, metadata !6185, metadata !DIExpression()), !dbg !6186
  %0 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8, !dbg !6187
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6187
  %bf.load = load i32, i32* %1, align 8, !dbg !6187
  %bf.clear = and i32 %bf.load, 65535, !dbg !6187
  %idxprom = sext i32 %bf.clear to i64, !dbg !6187
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6187
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !6187
  store i8* %2, i8** %format, align 8, !dbg !6186
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x, metadata !6188, metadata !DIExpression()), !dbg !6189
  br label %for.cond, !dbg !6190

for.cond:                                         ; preds = %for.inc84, %entry
  %3 = load i8*, i8** %format, align 8, !dbg !6191
  %4 = load i32, i32* %n.addr, align 4, !dbg !6194
  %idxprom1 = sext i32 %4 to i64, !dbg !6191
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !6191
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !6191
  %conv = sext i8 %5 to i32, !dbg !6191
  %cmp = icmp ne i32 %conv, 0, !dbg !6195
  br i1 %cmp, label %for.body, label %for.end86, !dbg !6196

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %format, align 8, !dbg !6197
  %7 = load i32, i32* %n.addr, align 4, !dbg !6199
  %idxprom4 = sext i32 %7 to i64, !dbg !6197
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %idxprom4, !dbg !6197
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !6197
  %conv6 = sext i8 %8 to i32, !dbg !6197
  switch i32 %conv6, label %sw.default [
    i32 101, label %sw.bb
    i32 86, label %sw.bb32
    i32 69, label %sw.bb32
  ], !dbg !6200

sw.bb:                                            ; preds = %for.body
  %9 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8, !dbg !6201
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !6201
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6201
  %10 = load i32, i32* %n.addr, align 4, !dbg !6201
  %idxprom7 = sext i32 %10 to i64, !dbg !6201
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom7, !dbg !6201
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !6201
  store %struct.rtx_def** %rt_rtx, %struct.rtx_def*** %x, align 8, !dbg !6203
  %11 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !6204
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6205
  %13 = load i8*, i8** %data.addr, align 8, !dbg !6206
  %call = call i32 %11(%struct.rtx_def** %12, i8* %13), !dbg !6207
  store i32 %call, i32* %result, align 4, !dbg !6208
  %14 = load i32, i32* %result, align 4, !dbg !6209
  %cmp9 = icmp eq i32 %14, -1, !dbg !6211
  br i1 %cmp9, label %if.then, label %if.else, !dbg !6212

if.then:                                          ; preds = %sw.bb
  br label %for.inc84, !dbg !6213

if.else:                                          ; preds = %sw.bb
  %15 = load i32, i32* %result, align 4, !dbg !6214
  %cmp11 = icmp ne i32 %15, 0, !dbg !6216
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !6217

if.then13:                                        ; preds = %if.else
  %16 = load i32, i32* %result, align 4, !dbg !6218
  store i32 %16, i32* %retval, align 4, !dbg !6219
  br label %return, !dbg !6219

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6220
  %18 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8, !dbg !6222
  %cmp15 = icmp eq %struct.rtx_def* %18, null, !dbg !6223
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6224

if.then17:                                        ; preds = %if.end14
  br label %for.inc84, !dbg !6225

if.end18:                                         ; preds = %if.end14
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6226
  %20 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8, !dbg !6226
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6226
  %bf.load19 = load i32, i32* %21, align 8, !dbg !6226
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !6226
  %idxprom21 = zext i32 %bf.clear20 to i64, !dbg !6227
  %arrayidx22 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom21, !dbg !6227
  %22 = load i32, i32* %arrayidx22, align 4, !dbg !6227
  store i32 %22, i32* %i, align 4, !dbg !6228
  %23 = load i32, i32* %i, align 4, !dbg !6229
  %cmp23 = icmp sge i32 %23, 0, !dbg !6231
  br i1 %cmp23, label %if.then25, label %if.end31, !dbg !6232

if.then25:                                        ; preds = %if.end18
  %24 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6233
  %25 = load %struct.rtx_def*, %struct.rtx_def** %24, align 8, !dbg !6235
  %26 = load i32, i32* %i, align 4, !dbg !6236
  %27 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !6237
  %28 = load i8*, i8** %data.addr, align 8, !dbg !6238
  %call26 = call i32 @for_each_rtx_1(%struct.rtx_def* %25, i32 %26, i32 (%struct.rtx_def**, i8*)* %27, i8* %28), !dbg !6239
  store i32 %call26, i32* %result, align 4, !dbg !6240
  %29 = load i32, i32* %result, align 4, !dbg !6241
  %cmp27 = icmp ne i32 %29, 0, !dbg !6243
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !6244

if.then29:                                        ; preds = %if.then25
  %30 = load i32, i32* %result, align 4, !dbg !6245
  store i32 %30, i32* %retval, align 4, !dbg !6246
  br label %return, !dbg !6246

if.end30:                                         ; preds = %if.then25
  br label %if.end31, !dbg !6247

if.end31:                                         ; preds = %if.end30, %if.end18
  br label %sw.epilog, !dbg !6248

sw.bb32:                                          ; preds = %for.body, %for.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8, !dbg !6249
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !6249
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !6249
  %32 = load i32, i32* %n.addr, align 4, !dbg !6249
  %idxprom35 = sext i32 %32 to i64, !dbg !6249
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %idxprom35, !dbg !6249
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !6249
  %33 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6249
  %cmp37 = icmp eq %struct.rtvec_def* %33, null, !dbg !6251
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6252

if.then39:                                        ; preds = %sw.bb32
  br label %for.inc84, !dbg !6253

if.end40:                                         ; preds = %sw.bb32
  store i32 0, i32* %j, align 4, !dbg !6254
  br label %for.cond41, !dbg !6256

for.cond41:                                       ; preds = %for.inc, %if.end40
  %34 = load i32, i32* %j, align 4, !dbg !6257
  %35 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8, !dbg !6259
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !6259
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !6259
  %36 = load i32, i32* %n.addr, align 4, !dbg !6259
  %idxprom44 = sext i32 %36 to i64, !dbg !6259
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 %idxprom44, !dbg !6259
  %rt_rtvec46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtvec_def**, !dbg !6259
  %37 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec46, align 8, !dbg !6259
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %37, i32 0, i32 0, !dbg !6259
  %38 = load i32, i32* %num_elem, align 8, !dbg !6259
  %cmp47 = icmp slt i32 %34, %38, !dbg !6260
  br i1 %cmp47, label %for.body49, label %for.end, !dbg !6261

for.body49:                                       ; preds = %for.cond41
  %39 = load %struct.rtx_def*, %struct.rtx_def** %exp.addr, align 8, !dbg !6262
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !6262
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !6262
  %40 = load i32, i32* %n.addr, align 4, !dbg !6262
  %idxprom52 = sext i32 %40 to i64, !dbg !6262
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 %idxprom52, !dbg !6262
  %rt_rtvec54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtvec_def**, !dbg !6262
  %41 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec54, align 8, !dbg !6262
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %41, i32 0, i32 1, !dbg !6262
  %42 = load i32, i32* %j, align 4, !dbg !6262
  %idxprom55 = sext i32 %42 to i64, !dbg !6262
  %arrayidx56 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom55, !dbg !6262
  store %struct.rtx_def** %arrayidx56, %struct.rtx_def*** %x, align 8, !dbg !6264
  %43 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !6265
  %44 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6266
  %45 = load i8*, i8** %data.addr, align 8, !dbg !6267
  %call57 = call i32 %43(%struct.rtx_def** %44, i8* %45), !dbg !6268
  store i32 %call57, i32* %result, align 4, !dbg !6269
  %46 = load i32, i32* %result, align 4, !dbg !6270
  %cmp58 = icmp eq i32 %46, -1, !dbg !6272
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !6273

if.then60:                                        ; preds = %for.body49
  br label %for.inc, !dbg !6274

if.else61:                                        ; preds = %for.body49
  %47 = load i32, i32* %result, align 4, !dbg !6275
  %cmp62 = icmp ne i32 %47, 0, !dbg !6277
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !6278

if.then64:                                        ; preds = %if.else61
  %48 = load i32, i32* %result, align 4, !dbg !6279
  store i32 %48, i32* %retval, align 4, !dbg !6280
  br label %return, !dbg !6280

if.end65:                                         ; preds = %if.else61
  br label %if.end66

if.end66:                                         ; preds = %if.end65
  %49 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6281
  %50 = load %struct.rtx_def*, %struct.rtx_def** %49, align 8, !dbg !6283
  %cmp67 = icmp eq %struct.rtx_def* %50, null, !dbg !6284
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !6285

if.then69:                                        ; preds = %if.end66
  br label %for.inc, !dbg !6286

if.end70:                                         ; preds = %if.end66
  %51 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6287
  %52 = load %struct.rtx_def*, %struct.rtx_def** %51, align 8, !dbg !6287
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !6287
  %bf.load71 = load i32, i32* %53, align 8, !dbg !6287
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !6287
  %idxprom73 = zext i32 %bf.clear72 to i64, !dbg !6288
  %arrayidx74 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom73, !dbg !6288
  %54 = load i32, i32* %arrayidx74, align 4, !dbg !6288
  store i32 %54, i32* %i, align 4, !dbg !6289
  %55 = load i32, i32* %i, align 4, !dbg !6290
  %cmp75 = icmp sge i32 %55, 0, !dbg !6292
  br i1 %cmp75, label %if.then77, label %if.end83, !dbg !6293

if.then77:                                        ; preds = %if.end70
  %56 = load %struct.rtx_def**, %struct.rtx_def*** %x, align 8, !dbg !6294
  %57 = load %struct.rtx_def*, %struct.rtx_def** %56, align 8, !dbg !6296
  %58 = load i32, i32* %i, align 4, !dbg !6297
  %59 = load i32 (%struct.rtx_def**, i8*)*, i32 (%struct.rtx_def**, i8*)** %f.addr, align 8, !dbg !6298
  %60 = load i8*, i8** %data.addr, align 8, !dbg !6299
  %call78 = call i32 @for_each_rtx_1(%struct.rtx_def* %57, i32 %58, i32 (%struct.rtx_def**, i8*)* %59, i8* %60), !dbg !6300
  store i32 %call78, i32* %result, align 4, !dbg !6301
  %61 = load i32, i32* %result, align 4, !dbg !6302
  %cmp79 = icmp ne i32 %61, 0, !dbg !6304
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !6305

if.then81:                                        ; preds = %if.then77
  %62 = load i32, i32* %result, align 4, !dbg !6306
  store i32 %62, i32* %retval, align 4, !dbg !6307
  br label %return, !dbg !6307

if.end82:                                         ; preds = %if.then77
  br label %if.end83, !dbg !6308

if.end83:                                         ; preds = %if.end82, %if.end70
  br label %for.inc, !dbg !6309

for.inc:                                          ; preds = %if.end83, %if.then69, %if.then60
  %63 = load i32, i32* %j, align 4, !dbg !6310
  %inc = add nsw i32 %63, 1, !dbg !6310
  store i32 %inc, i32* %j, align 4, !dbg !6310
  br label %for.cond41, !dbg !6311, !llvm.loop !6312

for.end:                                          ; preds = %for.cond41
  br label %sw.epilog, !dbg !6314

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !6315

sw.epilog:                                        ; preds = %sw.default, %for.end, %if.end31
  br label %for.inc84, !dbg !6316

for.inc84:                                        ; preds = %sw.epilog, %if.then39, %if.then17, %if.then
  %64 = load i32, i32* %n.addr, align 4, !dbg !6317
  %inc85 = add nsw i32 %64, 1, !dbg !6317
  store i32 %inc85, i32* %n.addr, align 4, !dbg !6317
  br label %for.cond, !dbg !6318, !llvm.loop !6319

for.end86:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6321
  br label %return, !dbg !6321

return:                                           ; preds = %for.end86, %if.then81, %if.then64, %if.then29, %if.then13
  %65 = load i32, i32* %retval, align 4, !dbg !6322
  ret i32 %65, !dbg !6322
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @regno_use_in(i32 %regno, %struct.rtx_def* %x) #0 !dbg !6323 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !6330, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6334, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !6336, metadata !DIExpression()), !dbg !6337
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6338
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6338
  %bf.load = load i32, i32* %1, align 8, !dbg !6338
  %bf.clear = and i32 %bf.load, 65535, !dbg !6338
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6338
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6340

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6341
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !6341
  %3 = load i32, i32* %regno.addr, align 4, !dbg !6342
  %cmp1 = icmp eq i32 %call, %3, !dbg !6343
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6344

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6345
  store %struct.rtx_def* %4, %struct.rtx_def** %retval, align 8, !dbg !6346
  br label %return, !dbg !6346

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6347
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !6347
  %bf.load2 = load i32, i32* %6, align 8, !dbg !6347
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6347
  %idxprom = sext i32 %bf.clear3 to i64, !dbg !6347
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6347
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !6347
  store i8* %7, i8** %fmt, align 8, !dbg !6348
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6349
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !6349
  %bf.load4 = load i32, i32* %9, align 8, !dbg !6349
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !6349
  %idxprom6 = sext i32 %bf.clear5 to i64, !dbg !6349
  %arrayidx7 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom6, !dbg !6349
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !6349
  %conv = zext i8 %10 to i32, !dbg !6349
  %sub = sub nsw i32 %conv, 1, !dbg !6351
  store i32 %sub, i32* %i, align 4, !dbg !6352
  br label %for.cond, !dbg !6353

for.cond:                                         ; preds = %for.inc49, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !6354
  %cmp8 = icmp sge i32 %11, 0, !dbg !6356
  br i1 %cmp8, label %for.body, label %for.end51, !dbg !6357

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %fmt, align 8, !dbg !6358
  %13 = load i32, i32* %i, align 4, !dbg !6361
  %idxprom10 = sext i32 %13 to i64, !dbg !6358
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 %idxprom10, !dbg !6358
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !6358
  %conv12 = sext i8 %14 to i32, !dbg !6358
  %cmp13 = icmp eq i32 %conv12, 101, !dbg !6362
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !6363

if.then15:                                        ; preds = %for.body
  %15 = load i32, i32* %regno.addr, align 4, !dbg !6364
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6367
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !6367
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6367
  %17 = load i32, i32* %i, align 4, !dbg !6367
  %idxprom16 = sext i32 %17 to i64, !dbg !6367
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom16, !dbg !6367
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6367
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6367
  %call18 = call %struct.rtx_def* @regno_use_in(i32 %15, %struct.rtx_def* %18), !dbg !6368
  store %struct.rtx_def* %call18, %struct.rtx_def** %tem, align 8, !dbg !6369
  %tobool = icmp ne %struct.rtx_def* %call18, null, !dbg !6369
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !6370

if.then19:                                        ; preds = %if.then15
  %19 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !6371
  store %struct.rtx_def* %19, %struct.rtx_def** %retval, align 8, !dbg !6372
  br label %return, !dbg !6372

if.end20:                                         ; preds = %if.then15
  br label %if.end48, !dbg !6373

if.else:                                          ; preds = %for.body
  %20 = load i8*, i8** %fmt, align 8, !dbg !6374
  %21 = load i32, i32* %i, align 4, !dbg !6376
  %idxprom21 = sext i32 %21 to i64, !dbg !6374
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 %idxprom21, !dbg !6374
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !6374
  %conv23 = sext i8 %22 to i32, !dbg !6374
  %cmp24 = icmp eq i32 %conv23, 69, !dbg !6377
  br i1 %cmp24, label %if.then26, label %if.end47, !dbg !6378

if.then26:                                        ; preds = %if.else
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6379
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !6379
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !6379
  %24 = load i32, i32* %i, align 4, !dbg !6379
  %idxprom29 = sext i32 %24 to i64, !dbg !6379
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 %idxprom29, !dbg !6379
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !6379
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6379
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 0, !dbg !6379
  %26 = load i32, i32* %num_elem, align 8, !dbg !6379
  %sub31 = sub nsw i32 %26, 1, !dbg !6381
  store i32 %sub31, i32* %j, align 4, !dbg !6382
  br label %for.cond32, !dbg !6383

for.cond32:                                       ; preds = %for.inc, %if.then26
  %27 = load i32, i32* %j, align 4, !dbg !6384
  %cmp33 = icmp sge i32 %27, 0, !dbg !6386
  br i1 %cmp33, label %for.body35, label %for.end, !dbg !6387

for.body35:                                       ; preds = %for.cond32
  %28 = load i32, i32* %regno.addr, align 4, !dbg !6388
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6390
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !6390
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !6390
  %30 = load i32, i32* %i, align 4, !dbg !6390
  %idxprom38 = sext i32 %30 to i64, !dbg !6390
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 %idxprom38, !dbg !6390
  %rt_rtvec40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtvec_def**, !dbg !6390
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec40, align 8, !dbg !6390
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 1, !dbg !6390
  %32 = load i32, i32* %j, align 4, !dbg !6390
  %idxprom41 = sext i32 %32 to i64, !dbg !6390
  %arrayidx42 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom41, !dbg !6390
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !6390
  %call43 = call %struct.rtx_def* @regno_use_in(i32 %28, %struct.rtx_def* %33), !dbg !6391
  store %struct.rtx_def* %call43, %struct.rtx_def** %tem, align 8, !dbg !6392
  %tobool44 = icmp ne %struct.rtx_def* %call43, null, !dbg !6392
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !6393

if.then45:                                        ; preds = %for.body35
  %34 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !6394
  store %struct.rtx_def* %34, %struct.rtx_def** %retval, align 8, !dbg !6395
  br label %return, !dbg !6395

if.end46:                                         ; preds = %for.body35
  br label %for.inc, !dbg !6396

for.inc:                                          ; preds = %if.end46
  %35 = load i32, i32* %j, align 4, !dbg !6397
  %dec = add nsw i32 %35, -1, !dbg !6397
  store i32 %dec, i32* %j, align 4, !dbg !6397
  br label %for.cond32, !dbg !6398, !llvm.loop !6399

for.end:                                          ; preds = %for.cond32
  br label %if.end47, !dbg !6400

if.end47:                                         ; preds = %for.end, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end20
  br label %for.inc49, !dbg !6401

for.inc49:                                        ; preds = %if.end48
  %36 = load i32, i32* %i, align 4, !dbg !6402
  %dec50 = add nsw i32 %36, -1, !dbg !6402
  store i32 %dec50, i32* %i, align 4, !dbg !6402
  br label %for.cond, !dbg !6403, !llvm.loop !6404

for.end51:                                        ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6406
  br label %return, !dbg !6406

return:                                           ; preds = %for.end51, %if.then45, %if.then19, %if.then
  %37 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !6407
  ret %struct.rtx_def* %37, !dbg !6407
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @commutative_operand_precedence(%struct.rtx_def* %op) #0 !dbg !6408 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6413, metadata !DIExpression()), !dbg !6414
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6415
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6415
  %bf.load = load i32, i32* %1, align 8, !dbg !6415
  %bf.clear = and i32 %bf.load, 65535, !dbg !6415
  store i32 %bf.clear, i32* %code, align 4, !dbg !6414
  %2 = load i32, i32* %code, align 4, !dbg !6416
  %cmp = icmp eq i32 %2, 30, !dbg !6418
  br i1 %cmp, label %if.then, label %if.end, !dbg !6419

if.then:                                          ; preds = %entry
  store i32 -8, i32* %retval, align 4, !dbg !6420
  br label %return, !dbg !6420

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %code, align 4, !dbg !6421
  %cmp1 = icmp eq i32 %3, 32, !dbg !6423
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6424

if.then2:                                         ; preds = %if.end
  store i32 -7, i32* %retval, align 4, !dbg !6425
  br label %return, !dbg !6425

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %code, align 4, !dbg !6426
  %cmp4 = icmp eq i32 %4, 31, !dbg !6428
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6429

if.then5:                                         ; preds = %if.end3
  store i32 -7, i32* %retval, align 4, !dbg !6430
  br label %return, !dbg !6430

if.end6:                                          ; preds = %if.end3
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6431
  %call = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %5), !dbg !6432
  store %struct.rtx_def* %call, %struct.rtx_def** %op.addr, align 8, !dbg !6433
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6434
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6434
  %bf.load7 = load i32, i32* %7, align 8, !dbg !6434
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !6434
  store i32 %bf.clear8, i32* %code, align 4, !dbg !6435
  %8 = load i32, i32* %code, align 4, !dbg !6436
  %idxprom = sext i32 %8 to i64, !dbg !6436
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6436
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6436
  switch i32 %9, label %sw.default [
    i32 9, label %sw.bb
    i32 5, label %sw.bb18
    i32 8, label %sw.bb28
    i32 3, label %sw.bb45
    i32 2, label %sw.bb46
    i32 4, label %sw.bb47
  ], !dbg !6437

sw.bb:                                            ; preds = %if.end6
  %10 = load i32, i32* %code, align 4, !dbg !6438
  %cmp9 = icmp eq i32 %10, 30, !dbg !6441
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6442

if.then10:                                        ; preds = %sw.bb
  store i32 -6, i32* %retval, align 4, !dbg !6443
  br label %return, !dbg !6443

if.end11:                                         ; preds = %sw.bb
  %11 = load i32, i32* %code, align 4, !dbg !6444
  %cmp12 = icmp eq i32 %11, 32, !dbg !6446
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6447

if.then13:                                        ; preds = %if.end11
  store i32 -5, i32* %retval, align 4, !dbg !6448
  br label %return, !dbg !6448

if.end14:                                         ; preds = %if.end11
  %12 = load i32, i32* %code, align 4, !dbg !6449
  %cmp15 = icmp eq i32 %12, 31, !dbg !6451
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !6452

if.then16:                                        ; preds = %if.end14
  store i32 -5, i32* %retval, align 4, !dbg !6453
  br label %return, !dbg !6453

if.end17:                                         ; preds = %if.end14
  store i32 -4, i32* %retval, align 4, !dbg !6454
  br label %return, !dbg !6454

sw.bb18:                                          ; preds = %if.end6
  %13 = load i32, i32* %code, align 4, !dbg !6455
  %cmp19 = icmp eq i32 %13, 39, !dbg !6457
  br i1 %cmp19, label %land.lhs.true, label %if.end27, !dbg !6458

land.lhs.true:                                    ; preds = %sw.bb18
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6459
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !6459
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6459
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6459
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !6459
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6459
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !6459
  %bf.load21 = load i32, i32* %16, align 8, !dbg !6459
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6459
  %idxprom23 = sext i32 %bf.clear22 to i64, !dbg !6459
  %arrayidx24 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom23, !dbg !6459
  %17 = load i32, i32* %arrayidx24, align 4, !dbg !6459
  %and = and i32 %17, -2, !dbg !6459
  %cmp25 = icmp eq i32 %and, 8, !dbg !6459
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !6460

if.then26:                                        ; preds = %land.lhs.true
  store i32 -3, i32* %retval, align 4, !dbg !6461
  br label %return, !dbg !6461

if.end27:                                         ; preds = %land.lhs.true, %sw.bb18
  store i32 0, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

sw.bb28:                                          ; preds = %if.end6
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6463
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !6463
  %bf.load29 = load i32, i32* %19, align 8, !dbg !6463
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !6463
  %cmp31 = icmp eq i32 %bf.clear30, 37, !dbg !6463
  br i1 %cmp31, label %land.lhs.true32, label %lor.lhs.false, !dbg !6465

land.lhs.true32:                                  ; preds = %sw.bb28
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6466
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6466
  %bf.load33 = load i32, i32* %21, align 8, !dbg !6466
  %bf.lshr = lshr i32 %bf.load33, 30, !dbg !6466
  %bf.clear34 = and i32 %bf.lshr, 1, !dbg !6466
  %tobool = icmp ne i32 %bf.clear34, 0, !dbg !6466
  br i1 %tobool, label %if.then43, label %lor.lhs.false, !dbg !6467

lor.lhs.false:                                    ; preds = %land.lhs.true32, %sw.bb28
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6468
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6468
  %bf.load35 = load i32, i32* %23, align 8, !dbg !6468
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !6468
  %cmp37 = icmp eq i32 %bf.clear36, 43, !dbg !6468
  br i1 %cmp37, label %land.lhs.true38, label %if.end44, !dbg !6469

land.lhs.true38:                                  ; preds = %lor.lhs.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6470
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !6470
  %bf.load39 = load i32, i32* %25, align 8, !dbg !6470
  %bf.lshr40 = lshr i32 %bf.load39, 30, !dbg !6470
  %bf.clear41 = and i32 %bf.lshr40, 1, !dbg !6470
  %tobool42 = icmp ne i32 %bf.clear41, 0, !dbg !6470
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6471

if.then43:                                        ; preds = %land.lhs.true38, %land.lhs.true32
  store i32 -1, i32* %retval, align 4, !dbg !6472
  br label %return, !dbg !6472

if.end44:                                         ; preds = %land.lhs.true38, %lor.lhs.false
  store i32 -2, i32* %retval, align 4, !dbg !6473
  br label %return, !dbg !6473

sw.bb45:                                          ; preds = %if.end6
  store i32 4, i32* %retval, align 4, !dbg !6474
  br label %return, !dbg !6474

sw.bb46:                                          ; preds = %if.end6
  store i32 2, i32* %retval, align 4, !dbg !6475
  br label %return, !dbg !6475

sw.bb47:                                          ; preds = %if.end6
  %26 = load i32, i32* %code, align 4, !dbg !6476
  %cmp48 = icmp eq i32 %26, 51, !dbg !6478
  br i1 %cmp48, label %if.then51, label %lor.lhs.false49, !dbg !6479

lor.lhs.false49:                                  ; preds = %sw.bb47
  %27 = load i32, i32* %code, align 4, !dbg !6480
  %cmp50 = icmp eq i32 %27, 64, !dbg !6481
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !6482

if.then51:                                        ; preds = %lor.lhs.false49, %sw.bb47
  store i32 1, i32* %retval, align 4, !dbg !6483
  br label %return, !dbg !6483

if.end52:                                         ; preds = %lor.lhs.false49
  br label %sw.default, !dbg !6484

sw.default:                                       ; preds = %if.end6, %if.end52
  store i32 0, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

return:                                           ; preds = %sw.default, %if.then51, %sw.bb46, %sw.bb45, %if.end44, %if.then43, %if.end27, %if.then26, %if.end17, %if.then16, %if.then13, %if.then10, %if.then5, %if.then2, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6486
  ret i32 %28, !dbg !6486
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 !dbg !6487 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6490, metadata !DIExpression()), !dbg !6491
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y.addr, metadata !6492, metadata !DIExpression()), !dbg !6493
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6494
  %call = call i32 @commutative_operand_precedence(%struct.rtx_def* %0), !dbg !6495
  %1 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6496
  %call1 = call i32 @commutative_operand_precedence(%struct.rtx_def* %1), !dbg !6497
  %cmp = icmp slt i32 %call, %call1, !dbg !6498
  %conv = zext i1 %cmp to i32, !dbg !6498
  %conv2 = trunc i32 %conv to i8, !dbg !6499
  ret i8 %conv2, !dbg !6500
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @auto_inc_p(%struct.rtx_def* %x) #0 !dbg !6501 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6504
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6504
  %bf.load = load i32, i32* %1, align 8, !dbg !6504
  %bf.clear = and i32 %bf.load, 65535, !dbg !6504
  switch i32 %bf.clear, label %sw.default [
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 74, label %sw.bb
    i32 76, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
  ], !dbg !6505

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6506
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6506
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6506
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6506
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6506
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6506
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !6509
  %cmp = icmp ne %struct.rtx_def* %3, %4, !dbg !6510
  br i1 %cmp, label %if.then, label %if.end, !dbg !6511

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !6512
  br label %return, !dbg !6512

if.end:                                           ; preds = %sw.bb
  br label %sw.default, !dbg !6509

sw.default:                                       ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !6513

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !6514
  br label %return, !dbg !6514

return:                                           ; preds = %sw.epilog, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6515
  ret i32 %5, !dbg !6515
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @loc_mentioned_in_p(%struct.rtx_def** %loc, %struct.rtx_def* %in) #0 !dbg !6516 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6523, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !6525, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6527, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6529, metadata !DIExpression()), !dbg !6530
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6531
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !6531
  br i1 %tobool, label %if.end, label %if.then, !dbg !6533

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6534
  br label %return, !dbg !6534

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6535
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !6535
  %bf.load = load i32, i32* %2, align 8, !dbg !6535
  %bf.clear = and i32 %bf.load, 65535, !dbg !6535
  store i32 %bf.clear, i32* %code, align 4, !dbg !6536
  %3 = load i32, i32* %code, align 4, !dbg !6537
  %idxprom = sext i32 %3 to i64, !dbg !6537
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6537
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !6537
  store i8* %4, i8** %fmt, align 8, !dbg !6538
  %5 = load i32, i32* %code, align 4, !dbg !6539
  %idxprom1 = sext i32 %5 to i64, !dbg !6539
  %arrayidx2 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom1, !dbg !6539
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !6539
  %conv = zext i8 %6 to i32, !dbg !6539
  %sub = sub nsw i32 %conv, 1, !dbg !6541
  store i32 %sub, i32* %i, align 4, !dbg !6542
  br label %for.cond, !dbg !6543

for.cond:                                         ; preds = %for.inc61, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !6544
  %cmp = icmp sge i32 %7, 0, !dbg !6546
  br i1 %cmp, label %for.body, label %for.end63, !dbg !6547

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %fmt, align 8, !dbg !6548
  %9 = load i32, i32* %i, align 4, !dbg !6551
  %idxprom4 = sext i32 %9 to i64, !dbg !6548
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !6548
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !6548
  %conv6 = sext i8 %10 to i32, !dbg !6548
  %cmp7 = icmp eq i32 %conv6, 101, !dbg !6552
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !6553

if.then9:                                         ; preds = %for.body
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6554
  %12 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6557
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !6557
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6557
  %13 = load i32, i32* %i, align 4, !dbg !6557
  %idxprom10 = sext i32 %13 to i64, !dbg !6557
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom10, !dbg !6557
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6557
  %cmp12 = icmp eq %struct.rtx_def** %11, %rt_rtx, !dbg !6558
  br i1 %cmp12, label %if.then20, label %lor.lhs.false, !dbg !6559

lor.lhs.false:                                    ; preds = %if.then9
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6560
  %15 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6561
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !6561
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !6561
  %16 = load i32, i32* %i, align 4, !dbg !6561
  %idxprom16 = sext i32 %16 to i64, !dbg !6561
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 %idxprom16, !dbg !6561
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6561
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !6561
  %call = call i32 @loc_mentioned_in_p(%struct.rtx_def** %14, %struct.rtx_def* %17), !dbg !6562
  %tobool19 = icmp ne i32 %call, 0, !dbg !6562
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6563

if.then20:                                        ; preds = %lor.lhs.false, %if.then9
  store i32 1, i32* %retval, align 4, !dbg !6564
  br label %return, !dbg !6564

if.end21:                                         ; preds = %lor.lhs.false
  br label %if.end60, !dbg !6565

if.else:                                          ; preds = %for.body
  %18 = load i8*, i8** %fmt, align 8, !dbg !6566
  %19 = load i32, i32* %i, align 4, !dbg !6568
  %idxprom22 = sext i32 %19 to i64, !dbg !6566
  %arrayidx23 = getelementptr inbounds i8, i8* %18, i64 %idxprom22, !dbg !6566
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !6566
  %conv24 = sext i8 %20 to i32, !dbg !6566
  %cmp25 = icmp eq i32 %conv24, 69, !dbg !6569
  br i1 %cmp25, label %if.then27, label %if.end59, !dbg !6570

if.then27:                                        ; preds = %if.else
  %21 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6571
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !6571
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !6571
  %22 = load i32, i32* %i, align 4, !dbg !6571
  %idxprom30 = sext i32 %22 to i64, !dbg !6571
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 %idxprom30, !dbg !6571
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !6571
  %23 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6571
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %23, i32 0, i32 0, !dbg !6571
  %24 = load i32, i32* %num_elem, align 8, !dbg !6571
  %sub32 = sub nsw i32 %24, 1, !dbg !6573
  store i32 %sub32, i32* %j, align 4, !dbg !6574
  br label %for.cond33, !dbg !6575

for.cond33:                                       ; preds = %for.inc, %if.then27
  %25 = load i32, i32* %j, align 4, !dbg !6576
  %cmp34 = icmp sge i32 %25, 0, !dbg !6578
  br i1 %cmp34, label %for.body36, label %for.end, !dbg !6579

for.body36:                                       ; preds = %for.cond33
  %26 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6580
  %27 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6582
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !6582
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !6582
  %28 = load i32, i32* %i, align 4, !dbg !6582
  %idxprom39 = sext i32 %28 to i64, !dbg !6582
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 %idxprom39, !dbg !6582
  %rt_rtvec41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**, !dbg !6582
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec41, align 8, !dbg !6582
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1, !dbg !6582
  %30 = load i32, i32* %j, align 4, !dbg !6582
  %idxprom42 = sext i32 %30 to i64, !dbg !6582
  %arrayidx43 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom42, !dbg !6582
  %cmp44 = icmp eq %struct.rtx_def** %26, %arrayidx43, !dbg !6583
  br i1 %cmp44, label %if.then57, label %lor.lhs.false46, !dbg !6584

lor.lhs.false46:                                  ; preds = %for.body36
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6585
  %32 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !6586
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !6586
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !6586
  %33 = load i32, i32* %i, align 4, !dbg !6586
  %idxprom49 = sext i32 %33 to i64, !dbg !6586
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 %idxprom49, !dbg !6586
  %rt_rtvec51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtvec_def**, !dbg !6586
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec51, align 8, !dbg !6586
  %elem52 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i32 0, i32 1, !dbg !6586
  %35 = load i32, i32* %j, align 4, !dbg !6586
  %idxprom53 = sext i32 %35 to i64, !dbg !6586
  %arrayidx54 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem52, i64 0, i64 %idxprom53, !dbg !6586
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8, !dbg !6586
  %call55 = call i32 @loc_mentioned_in_p(%struct.rtx_def** %31, %struct.rtx_def* %36), !dbg !6587
  %tobool56 = icmp ne i32 %call55, 0, !dbg !6587
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !6588

if.then57:                                        ; preds = %lor.lhs.false46, %for.body36
  store i32 1, i32* %retval, align 4, !dbg !6589
  br label %return, !dbg !6589

if.end58:                                         ; preds = %lor.lhs.false46
  br label %for.inc, !dbg !6590

for.inc:                                          ; preds = %if.end58
  %37 = load i32, i32* %j, align 4, !dbg !6591
  %dec = add nsw i32 %37, -1, !dbg !6591
  store i32 %dec, i32* %j, align 4, !dbg !6591
  br label %for.cond33, !dbg !6592, !llvm.loop !6593

for.end:                                          ; preds = %for.cond33
  br label %if.end59, !dbg !6594

if.end59:                                         ; preds = %for.end, %if.else
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end21
  br label %for.inc61, !dbg !6595

for.inc61:                                        ; preds = %if.end60
  %38 = load i32, i32* %i, align 4, !dbg !6596
  %dec62 = add nsw i32 %38, -1, !dbg !6596
  store i32 %dec62, i32* %i, align 4, !dbg !6596
  br label %for.cond, !dbg !6597, !llvm.loop !6598

for.end63:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6600
  br label %return, !dbg !6600

return:                                           ; preds = %for.end63, %if.then57, %if.then20, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6601
  ret i32 %39, !dbg !6601
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_lsb_1(i32 %outer_mode, i32 %inner_mode, i32 %subreg_byte) #0 !dbg !6602 {
entry:
  %retval = alloca i32, align 4
  %outer_mode.addr = alloca i32, align 4
  %inner_mode.addr = alloca i32, align 4
  %subreg_byte.addr = alloca i32, align 4
  %bitpos = alloca i32, align 4
  %byte = alloca i32, align 4
  %word = alloca i32, align 4
  store i32 %outer_mode, i32* %outer_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outer_mode.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  store i32 %inner_mode, i32* %inner_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inner_mode.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  store i32 %subreg_byte, i32* %subreg_byte.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subreg_byte.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.declare(metadata i32* %bitpos, metadata !6611, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.declare(metadata i32* %byte, metadata !6613, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.declare(metadata i32* %word, metadata !6615, metadata !DIExpression()), !dbg !6616
  %0 = load i32, i32* %outer_mode.addr, align 4, !dbg !6617
  %idxprom = zext i32 %0 to i64, !dbg !6617
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6617
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6617
  %conv = zext i8 %1 to i16, !dbg !6617
  %conv1 = zext i16 %conv to i32, !dbg !6617
  %mul = mul nsw i32 %conv1, 8, !dbg !6617
  %conv2 = trunc i32 %mul to i16, !dbg !6617
  %conv3 = zext i16 %conv2 to i32, !dbg !6617
  %2 = load i32, i32* %inner_mode.addr, align 4, !dbg !6619
  %idxprom4 = zext i32 %2 to i64, !dbg !6619
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom4, !dbg !6619
  %3 = load i8, i8* %arrayidx5, align 1, !dbg !6619
  %conv6 = zext i8 %3 to i16, !dbg !6619
  %conv7 = zext i16 %conv6 to i32, !dbg !6619
  %mul8 = mul nsw i32 %conv7, 8, !dbg !6619
  %conv9 = trunc i32 %mul8 to i16, !dbg !6619
  %conv10 = zext i16 %conv9 to i32, !dbg !6619
  %cmp = icmp sgt i32 %conv3, %conv10, !dbg !6620
  br i1 %cmp, label %if.then, label %if.end, !dbg !6621

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6622
  br label %return, !dbg !6622

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %subreg_byte.addr, align 4, !dbg !6623
  %div = udiv i32 %4, 4, !dbg !6625
  store i32 %div, i32* %word, align 4, !dbg !6626
  %5 = load i32, i32* %word, align 4, !dbg !6627
  %mul12 = mul i32 %5, 32, !dbg !6628
  store i32 %mul12, i32* %bitpos, align 4, !dbg !6629
  %6 = load i32, i32* %subreg_byte.addr, align 4, !dbg !6630
  %rem = urem i32 %6, 4, !dbg !6632
  store i32 %rem, i32* %byte, align 4, !dbg !6633
  %7 = load i32, i32* %byte, align 4, !dbg !6634
  %mul13 = mul i32 %7, 8, !dbg !6635
  %8 = load i32, i32* %bitpos, align 4, !dbg !6636
  %add = add i32 %8, %mul13, !dbg !6636
  store i32 %add, i32* %bitpos, align 4, !dbg !6636
  %9 = load i32, i32* %bitpos, align 4, !dbg !6637
  store i32 %9, i32* %retval, align 4, !dbg !6638
  br label %return, !dbg !6638

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6639
  ret i32 %10, !dbg !6639
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_lsb(%struct.rtx_def* %x) #0 !dbg !6640 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6643
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6643
  %bf.load = load i32, i32* %1, align 8, !dbg !6643
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6643
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6643
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6644
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6644
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6644
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6644
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6644
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6644
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6644
  %bf.load1 = load i32, i32* %4, align 8, !dbg !6644
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !6644
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !6644
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6645
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !6645
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !6645
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !6645
  %rt_uint = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !6645
  %6 = load i32, i32* %rt_uint, align 8, !dbg !6645
  %call = call i32 @subreg_lsb_1(i32 %bf.clear, i32 %bf.clear3, i32 %6), !dbg !6646
  ret i32 %call, !dbg !6647
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @subreg_get_info(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode, %struct.subreg_info* %info) #0 !dbg !6648 {
entry:
  %xregno.addr = alloca i32, align 4
  %xmode.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ymode.addr = alloca i32, align 4
  %info.addr = alloca %struct.subreg_info*, align 8
  %nregs_xmode = alloca i32, align 4
  %nregs_ymode = alloca i32, align 4
  %mode_multiple = alloca i32, align 4
  %nregs_multiple = alloca i32, align 4
  %offset_adj = alloca i32, align 4
  %y_offset = alloca i32, align 4
  %y_offset_adj = alloca i32, align 4
  %regsize_xmode = alloca i32, align 4
  %regsize_ymode = alloca i32, align 4
  %rknown = alloca i8, align 1
  %xmode_unit = alloca i32, align 4
  store i32 %xregno, i32* %xregno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xregno.addr, metadata !6657, metadata !DIExpression()), !dbg !6658
  store i32 %xmode, i32* %xmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmode.addr, metadata !6659, metadata !DIExpression()), !dbg !6660
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6661, metadata !DIExpression()), !dbg !6662
  store i32 %ymode, i32* %ymode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymode.addr, metadata !6663, metadata !DIExpression()), !dbg !6664
  store %struct.subreg_info* %info, %struct.subreg_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.subreg_info** %info.addr, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %nregs_xmode, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %nregs_ymode, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %mode_multiple, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %nregs_multiple, metadata !6673, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.declare(metadata i32* %offset_adj, metadata !6675, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.declare(metadata i32* %y_offset, metadata !6677, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.declare(metadata i32* %y_offset_adj, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata i32* %regsize_xmode, metadata !6681, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.declare(metadata i32* %regsize_ymode, metadata !6683, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.declare(metadata i8* %rknown, metadata !6685, metadata !DIExpression()), !dbg !6686
  %0 = load i32, i32* %xregno.addr, align 4, !dbg !6687
  %cmp = icmp ult i32 %0, 53, !dbg !6687
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6687

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6687
  br label %cond.end, !dbg !6687

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6687

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6687
  store i8 0, i8* %rknown, align 1, !dbg !6688
  %1 = load i32, i32* @target_flags, align 4, !dbg !6689
  %and = and i32 %1, 1, !dbg !6689
  %cmp1 = icmp ne i32 %and, 0, !dbg !6689
  br i1 %cmp1, label %cond.true2, label %cond.false26, !dbg !6691

cond.true2:                                       ; preds = %cond.end
  %2 = load i32, i32* %xregno.addr, align 4, !dbg !6689
  %conv = zext i32 %2 to i64, !dbg !6689
  %sub = sub i64 %conv, 8, !dbg !6689
  %cmp3 = icmp ule i64 %sub, 7, !dbg !6689
  br i1 %cmp3, label %cond.true19, label %lor.lhs.false, !dbg !6689

lor.lhs.false:                                    ; preds = %cond.true2
  %3 = load i32, i32* %xregno.addr, align 4, !dbg !6689
  %conv5 = zext i32 %3 to i64, !dbg !6689
  %sub6 = sub i64 %conv5, 21, !dbg !6689
  %cmp7 = icmp ule i64 %sub6, 7, !dbg !6689
  br i1 %cmp7, label %cond.true19, label %lor.lhs.false9, !dbg !6689

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %xregno.addr, align 4, !dbg !6689
  %conv10 = zext i32 %4 to i64, !dbg !6689
  %sub11 = sub i64 %conv10, 45, !dbg !6689
  %cmp12 = icmp ule i64 %sub11, 7, !dbg !6689
  br i1 %cmp12, label %cond.true19, label %lor.lhs.false14, !dbg !6689

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %5 = load i32, i32* %xregno.addr, align 4, !dbg !6689
  %conv15 = zext i32 %5 to i64, !dbg !6689
  %sub16 = sub i64 %conv15, 29, !dbg !6689
  %cmp17 = icmp ule i64 %sub16, 7, !dbg !6689
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !6689

cond.true19:                                      ; preds = %lor.lhs.false14, %lor.lhs.false9, %lor.lhs.false, %cond.true2
  br i1 false, label %if.then, label %if.else133, !dbg !6689

cond.false20:                                     ; preds = %lor.lhs.false14
  %6 = load i32, i32* %xmode.addr, align 4, !dbg !6689
  %cmp21 = icmp eq i32 %6, 40, !dbg !6689
  br i1 %cmp21, label %if.then, label %lor.lhs.false23, !dbg !6689

lor.lhs.false23:                                  ; preds = %cond.false20
  %7 = load i32, i32* %xmode.addr, align 4, !dbg !6689
  %cmp24 = icmp eq i32 %7, 53, !dbg !6689
  br i1 %cmp24, label %if.then, label %if.else133, !dbg !6689

cond.false26:                                     ; preds = %cond.end
  br i1 false, label %if.then, label %if.else133, !dbg !6691

if.then:                                          ; preds = %cond.false26, %lor.lhs.false23, %cond.false20, %cond.true19
  call void @llvm.dbg.declare(metadata i32* %xmode_unit, metadata !6692, metadata !DIExpression()), !dbg !6694
  %8 = load i32, i32* %xmode.addr, align 4, !dbg !6695
  %cmp27 = icmp eq i32 %8, 40, !dbg !6695
  %9 = zext i1 %cmp27 to i64, !dbg !6695
  %cond29 = select i1 %cmp27, i32 4, i32 8, !dbg !6695
  store i32 %cond29, i32* %nregs_xmode, align 4, !dbg !6696
  %10 = load i32, i32* %xmode.addr, align 4, !dbg !6697
  %idxprom = zext i32 %10 to i64, !dbg !6697
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !6697
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6697
  %conv30 = zext i8 %11 to i32, !dbg !6697
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !6699
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !6700

if.then33:                                        ; preds = %if.then
  %12 = load i32, i32* %xmode.addr, align 4, !dbg !6701
  store i32 %12, i32* %xmode_unit, align 4, !dbg !6702
  br label %if.end, !dbg !6703

if.else:                                          ; preds = %if.then
  %13 = load i32, i32* %xmode.addr, align 4, !dbg !6704
  %idxprom34 = zext i32 %13 to i64, !dbg !6704
  %arrayidx35 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom34, !dbg !6704
  %14 = load i8, i8* %arrayidx35, align 1, !dbg !6704
  %conv36 = zext i8 %14 to i32, !dbg !6704
  store i32 %conv36, i32* %xmode_unit, align 4, !dbg !6705
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then33
  %15 = load i32, i32* @target_flags, align 4, !dbg !6706
  %and37 = and i32 %15, 1, !dbg !6706
  %cmp38 = icmp ne i32 %and37, 0, !dbg !6706
  br i1 %cmp38, label %cond.true40, label %cond.false67, !dbg !6706

cond.true40:                                      ; preds = %if.end
  %16 = load i32, i32* %xregno.addr, align 4, !dbg !6706
  %conv41 = zext i32 %16 to i64, !dbg !6706
  %sub42 = sub i64 %conv41, 8, !dbg !6706
  %cmp43 = icmp ule i64 %sub42, 7, !dbg !6706
  br i1 %cmp43, label %cond.true60, label %lor.lhs.false45, !dbg !6706

lor.lhs.false45:                                  ; preds = %cond.true40
  %17 = load i32, i32* %xregno.addr, align 4, !dbg !6706
  %conv46 = zext i32 %17 to i64, !dbg !6706
  %sub47 = sub i64 %conv46, 21, !dbg !6706
  %cmp48 = icmp ule i64 %sub47, 7, !dbg !6706
  br i1 %cmp48, label %cond.true60, label %lor.lhs.false50, !dbg !6706

lor.lhs.false50:                                  ; preds = %lor.lhs.false45
  %18 = load i32, i32* %xregno.addr, align 4, !dbg !6706
  %conv51 = zext i32 %18 to i64, !dbg !6706
  %sub52 = sub i64 %conv51, 45, !dbg !6706
  %cmp53 = icmp ule i64 %sub52, 7, !dbg !6706
  br i1 %cmp53, label %cond.true60, label %lor.lhs.false55, !dbg !6706

lor.lhs.false55:                                  ; preds = %lor.lhs.false50
  %19 = load i32, i32* %xregno.addr, align 4, !dbg !6706
  %conv56 = zext i32 %19 to i64, !dbg !6706
  %sub57 = sub i64 %conv56, 29, !dbg !6706
  %cmp58 = icmp ule i64 %sub57, 7, !dbg !6706
  br i1 %cmp58, label %cond.true60, label %cond.false61, !dbg !6706

cond.true60:                                      ; preds = %lor.lhs.false55, %lor.lhs.false50, %lor.lhs.false45, %cond.true40
  br i1 false, label %cond.false69, label %cond.true68, !dbg !6706

cond.false61:                                     ; preds = %lor.lhs.false55
  %20 = load i32, i32* %xmode_unit, align 4, !dbg !6706
  %cmp62 = icmp eq i32 %20, 40, !dbg !6706
  br i1 %cmp62, label %cond.false69, label %lor.lhs.false64, !dbg !6706

lor.lhs.false64:                                  ; preds = %cond.false61
  %21 = load i32, i32* %xmode_unit, align 4, !dbg !6706
  %cmp65 = icmp eq i32 %21, 53, !dbg !6706
  br i1 %cmp65, label %cond.false69, label %cond.true68, !dbg !6706

cond.false67:                                     ; preds = %if.end
  br i1 false, label %cond.false69, label %cond.true68, !dbg !6706

cond.true68:                                      ; preds = %cond.false67, %lor.lhs.false64, %cond.true60
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6706
  br label %cond.end70, !dbg !6706

cond.false69:                                     ; preds = %cond.false67, %lor.lhs.false64, %cond.false61, %cond.true60
  br label %cond.end70, !dbg !6706

cond.end70:                                       ; preds = %cond.false69, %cond.true68
  %cond71 = phi i32 [ 0, %cond.true68 ], [ 0, %cond.false69 ], !dbg !6706
  %22 = load i32, i32* %nregs_xmode, align 4, !dbg !6707
  %23 = load i32, i32* %xmode.addr, align 4, !dbg !6707
  %idxprom72 = zext i32 %23 to i64, !dbg !6707
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom72, !dbg !6707
  %24 = load i8, i8* %arrayidx73, align 1, !dbg !6707
  %conv74 = zext i8 %24 to i32, !dbg !6707
  %25 = load i32, i32* %xmode_unit, align 4, !dbg !6707
  %cmp75 = icmp eq i32 %25, 40, !dbg !6707
  %26 = zext i1 %cmp75 to i64, !dbg !6707
  %cond77 = select i1 %cmp75, i32 4, i32 8, !dbg !6707
  %mul = mul nsw i32 %conv74, %cond77, !dbg !6707
  %cmp78 = icmp eq i32 %22, %mul, !dbg !6707
  br i1 %cmp78, label %cond.false81, label %cond.true80, !dbg !6707

cond.true80:                                      ; preds = %cond.end70
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6707
  br label %cond.end82, !dbg !6707

cond.false81:                                     ; preds = %cond.end70
  br label %cond.end82, !dbg !6707

cond.end82:                                       ; preds = %cond.false81, %cond.true80
  %cond83 = phi i32 [ 0, %cond.true80 ], [ 0, %cond.false81 ], !dbg !6707
  %27 = load i32, i32* %xregno.addr, align 4, !dbg !6708
  %idxprom84 = zext i32 %27 to i64, !dbg !6708
  %arrayidx85 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom84, !dbg !6708
  %28 = load i32, i32* %xmode.addr, align 4, !dbg !6708
  %idxprom86 = zext i32 %28 to i64, !dbg !6708
  %arrayidx87 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx85, i64 0, i64 %idxprom86, !dbg !6708
  %29 = load i8, i8* %arrayidx87, align 1, !dbg !6708
  %conv88 = zext i8 %29 to i32, !dbg !6708
  %30 = load i32, i32* %xregno.addr, align 4, !dbg !6708
  %idxprom89 = zext i32 %30 to i64, !dbg !6708
  %arrayidx90 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom89, !dbg !6708
  %31 = load i32, i32* %xmode_unit, align 4, !dbg !6708
  %idxprom91 = zext i32 %31 to i64, !dbg !6708
  %arrayidx92 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx90, i64 0, i64 %idxprom91, !dbg !6708
  %32 = load i8, i8* %arrayidx92, align 1, !dbg !6708
  %conv93 = zext i8 %32 to i32, !dbg !6708
  %33 = load i32, i32* %xmode.addr, align 4, !dbg !6708
  %idxprom94 = zext i32 %33 to i64, !dbg !6708
  %arrayidx95 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom94, !dbg !6708
  %34 = load i8, i8* %arrayidx95, align 1, !dbg !6708
  %conv96 = zext i8 %34 to i32, !dbg !6708
  %mul97 = mul nsw i32 %conv93, %conv96, !dbg !6708
  %cmp98 = icmp eq i32 %conv88, %mul97, !dbg !6708
  br i1 %cmp98, label %cond.false101, label %cond.true100, !dbg !6708

cond.true100:                                     ; preds = %cond.end82
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3123, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6708
  br label %cond.end102, !dbg !6708

cond.false101:                                    ; preds = %cond.end82
  br label %cond.end102, !dbg !6708

cond.end102:                                      ; preds = %cond.false101, %cond.true100
  %cond103 = phi i32 [ 0, %cond.true100 ], [ 0, %cond.false101 ], !dbg !6708
  %35 = load i32, i32* %offset.addr, align 4, !dbg !6709
  %36 = load i32, i32* %xmode_unit, align 4, !dbg !6711
  %idxprom104 = zext i32 %36 to i64, !dbg !6711
  %arrayidx105 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom104, !dbg !6711
  %37 = load i8, i8* %arrayidx105, align 1, !dbg !6711
  %conv106 = zext i8 %37 to i16, !dbg !6711
  %conv107 = zext i16 %conv106 to i32, !dbg !6711
  %div = udiv i32 %35, %conv107, !dbg !6712
  %add = add i32 %div, 1, !dbg !6713
  %38 = load i32, i32* %xmode.addr, align 4, !dbg !6714
  %idxprom108 = zext i32 %38 to i64, !dbg !6714
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom108, !dbg !6714
  %39 = load i8, i8* %arrayidx109, align 1, !dbg !6714
  %conv110 = zext i8 %39 to i32, !dbg !6714
  %cmp111 = icmp ult i32 %add, %conv110, !dbg !6715
  br i1 %cmp111, label %land.lhs.true, label %if.end132, !dbg !6716

land.lhs.true:                                    ; preds = %cond.end102
  %40 = load i32, i32* %offset.addr, align 4, !dbg !6717
  %41 = load i32, i32* %xmode_unit, align 4, !dbg !6718
  %idxprom113 = zext i32 %41 to i64, !dbg !6718
  %arrayidx114 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom113, !dbg !6718
  %42 = load i8, i8* %arrayidx114, align 1, !dbg !6718
  %conv115 = zext i8 %42 to i16, !dbg !6718
  %conv116 = zext i16 %conv115 to i32, !dbg !6718
  %div117 = udiv i32 %40, %conv116, !dbg !6719
  %43 = load i32, i32* %offset.addr, align 4, !dbg !6720
  %44 = load i32, i32* %ymode.addr, align 4, !dbg !6721
  %idxprom118 = zext i32 %44 to i64, !dbg !6721
  %arrayidx119 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom118, !dbg !6721
  %45 = load i8, i8* %arrayidx119, align 1, !dbg !6721
  %conv120 = zext i8 %45 to i16, !dbg !6721
  %conv121 = zext i16 %conv120 to i32, !dbg !6721
  %add122 = add i32 %43, %conv121, !dbg !6722
  %sub123 = sub i32 %add122, 1, !dbg !6723
  %46 = load i32, i32* %xmode_unit, align 4, !dbg !6724
  %idxprom124 = zext i32 %46 to i64, !dbg !6724
  %arrayidx125 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom124, !dbg !6724
  %47 = load i8, i8* %arrayidx125, align 1, !dbg !6724
  %conv126 = zext i8 %47 to i16, !dbg !6724
  %conv127 = zext i16 %conv126 to i32, !dbg !6724
  %div128 = udiv i32 %sub123, %conv127, !dbg !6725
  %cmp129 = icmp ne i32 %div117, %div128, !dbg !6726
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !6727

if.then131:                                       ; preds = %land.lhs.true
  %48 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6728
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %48, i32 0, i32 2, !dbg !6730
  store i8 0, i8* %representable_p, align 4, !dbg !6731
  store i8 1, i8* %rknown, align 1, !dbg !6732
  br label %if.end132, !dbg !6733

if.end132:                                        ; preds = %if.then131, %land.lhs.true, %cond.end102
  br label %if.end139, !dbg !6734

if.else133:                                       ; preds = %cond.false26, %lor.lhs.false23, %cond.true19
  %49 = load i32, i32* %xregno.addr, align 4, !dbg !6735
  %idxprom134 = zext i32 %49 to i64, !dbg !6736
  %arrayidx135 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom134, !dbg !6736
  %50 = load i32, i32* %xmode.addr, align 4, !dbg !6737
  %idxprom136 = zext i32 %50 to i64, !dbg !6736
  %arrayidx137 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx135, i64 0, i64 %idxprom136, !dbg !6736
  %51 = load i8, i8* %arrayidx137, align 1, !dbg !6736
  %conv138 = zext i8 %51 to i32, !dbg !6736
  store i32 %conv138, i32* %nregs_xmode, align 4, !dbg !6738
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %if.end132
  %52 = load i32, i32* %xregno.addr, align 4, !dbg !6739
  %idxprom140 = zext i32 %52 to i64, !dbg !6740
  %arrayidx141 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom140, !dbg !6740
  %53 = load i32, i32* %ymode.addr, align 4, !dbg !6741
  %idxprom142 = zext i32 %53 to i64, !dbg !6740
  %arrayidx143 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx141, i64 0, i64 %idxprom142, !dbg !6740
  %54 = load i8, i8* %arrayidx143, align 1, !dbg !6740
  %conv144 = zext i8 %54 to i32, !dbg !6740
  store i32 %conv144, i32* %nregs_ymode, align 4, !dbg !6742
  %55 = load i8, i8* %rknown, align 1, !dbg !6743
  %tobool = icmp ne i8 %55, 0, !dbg !6743
  br i1 %tobool, label %if.end175, label %land.lhs.true145, !dbg !6745

land.lhs.true145:                                 ; preds = %if.end139
  %56 = load i32, i32* %offset.addr, align 4, !dbg !6746
  %cmp146 = icmp eq i32 %56, 0, !dbg !6747
  br i1 %cmp146, label %land.lhs.true148, label %if.end175, !dbg !6748

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %57 = load i32, i32* %ymode.addr, align 4, !dbg !6749
  %idxprom149 = zext i32 %57 to i64, !dbg !6749
  %arrayidx150 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom149, !dbg !6749
  %58 = load i8, i8* %arrayidx150, align 1, !dbg !6749
  %conv151 = zext i8 %58 to i16, !dbg !6749
  %conv152 = zext i16 %conv151 to i32, !dbg !6749
  %59 = load i32, i32* %xmode.addr, align 4, !dbg !6750
  %idxprom153 = zext i32 %59 to i64, !dbg !6750
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom153, !dbg !6750
  %60 = load i8, i8* %arrayidx154, align 1, !dbg !6750
  %conv155 = zext i8 %60 to i16, !dbg !6750
  %conv156 = zext i16 %conv155 to i32, !dbg !6750
  %cmp157 = icmp sgt i32 %conv152, %conv156, !dbg !6751
  br i1 %cmp157, label %if.then159, label %if.end175, !dbg !6752

if.then159:                                       ; preds = %land.lhs.true148
  %61 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6753
  %representable_p160 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %61, i32 0, i32 2, !dbg !6755
  store i8 1, i8* %representable_p160, align 4, !dbg !6756
  %62 = load i32, i32* %ymode.addr, align 4, !dbg !6757
  %idxprom161 = zext i32 %62 to i64, !dbg !6757
  %arrayidx162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom161, !dbg !6757
  %63 = load i8, i8* %arrayidx162, align 1, !dbg !6757
  %conv163 = zext i8 %63 to i16, !dbg !6757
  %conv164 = zext i16 %conv163 to i32, !dbg !6757
  %cmp165 = icmp sgt i32 %conv164, 4, !dbg !6759
  br i1 %cmp165, label %cond.true167, label %cond.false168, !dbg !6760

cond.true167:                                     ; preds = %if.then159
  br i1 false, label %if.then169, label %if.else172, !dbg !6757

cond.false168:                                    ; preds = %if.then159
  br i1 false, label %if.then169, label %if.else172, !dbg !6760

if.then169:                                       ; preds = %cond.false168, %cond.true167
  %64 = load i32, i32* %nregs_xmode, align 4, !dbg !6761
  %65 = load i32, i32* %nregs_ymode, align 4, !dbg !6762
  %sub170 = sub nsw i32 %64, %65, !dbg !6763
  %66 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6764
  %offset171 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %66, i32 0, i32 0, !dbg !6765
  store i32 %sub170, i32* %offset171, align 4, !dbg !6766
  br label %if.end174, !dbg !6764

if.else172:                                       ; preds = %cond.false168, %cond.true167
  %67 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6767
  %offset173 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %67, i32 0, i32 0, !dbg !6768
  store i32 0, i32* %offset173, align 4, !dbg !6769
  br label %if.end174

if.end174:                                        ; preds = %if.else172, %if.then169
  %68 = load i32, i32* %nregs_ymode, align 4, !dbg !6770
  %69 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6771
  %nregs = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %69, i32 0, i32 1, !dbg !6772
  store i32 %68, i32* %nregs, align 4, !dbg !6773
  br label %return, !dbg !6774

if.end175:                                        ; preds = %land.lhs.true148, %land.lhs.true145, %if.end139
  %70 = load i32, i32* @target_flags, align 4, !dbg !6775
  %and176 = and i32 %70, 1, !dbg !6775
  %cmp177 = icmp ne i32 %and176, 0, !dbg !6775
  br i1 %cmp177, label %cond.true179, label %cond.false206, !dbg !6777

cond.true179:                                     ; preds = %if.end175
  %71 = load i32, i32* %xregno.addr, align 4, !dbg !6775
  %conv180 = zext i32 %71 to i64, !dbg !6775
  %sub181 = sub i64 %conv180, 8, !dbg !6775
  %cmp182 = icmp ule i64 %sub181, 7, !dbg !6775
  br i1 %cmp182, label %cond.true199, label %lor.lhs.false184, !dbg !6775

lor.lhs.false184:                                 ; preds = %cond.true179
  %72 = load i32, i32* %xregno.addr, align 4, !dbg !6775
  %conv185 = zext i32 %72 to i64, !dbg !6775
  %sub186 = sub i64 %conv185, 21, !dbg !6775
  %cmp187 = icmp ule i64 %sub186, 7, !dbg !6775
  br i1 %cmp187, label %cond.true199, label %lor.lhs.false189, !dbg !6775

lor.lhs.false189:                                 ; preds = %lor.lhs.false184
  %73 = load i32, i32* %xregno.addr, align 4, !dbg !6775
  %conv190 = zext i32 %73 to i64, !dbg !6775
  %sub191 = sub i64 %conv190, 45, !dbg !6775
  %cmp192 = icmp ule i64 %sub191, 7, !dbg !6775
  br i1 %cmp192, label %cond.true199, label %lor.lhs.false194, !dbg !6775

lor.lhs.false194:                                 ; preds = %lor.lhs.false189
  %74 = load i32, i32* %xregno.addr, align 4, !dbg !6775
  %conv195 = zext i32 %74 to i64, !dbg !6775
  %sub196 = sub i64 %conv195, 29, !dbg !6775
  %cmp197 = icmp ule i64 %sub196, 7, !dbg !6775
  br i1 %cmp197, label %cond.true199, label %cond.false200, !dbg !6775

cond.true199:                                     ; preds = %lor.lhs.false194, %lor.lhs.false189, %lor.lhs.false184, %cond.true179
  br i1 false, label %if.end305, label %land.lhs.true207, !dbg !6775

cond.false200:                                    ; preds = %lor.lhs.false194
  %75 = load i32, i32* %xmode.addr, align 4, !dbg !6775
  %cmp201 = icmp eq i32 %75, 40, !dbg !6775
  br i1 %cmp201, label %if.end305, label %lor.lhs.false203, !dbg !6775

lor.lhs.false203:                                 ; preds = %cond.false200
  %76 = load i32, i32* %xmode.addr, align 4, !dbg !6775
  %cmp204 = icmp eq i32 %76, 53, !dbg !6775
  br i1 %cmp204, label %if.end305, label %land.lhs.true207, !dbg !6775

cond.false206:                                    ; preds = %if.end175
  br i1 false, label %if.end305, label %land.lhs.true207, !dbg !6777

land.lhs.true207:                                 ; preds = %cond.false206, %lor.lhs.false203, %cond.true199
  %77 = load i32, i32* @target_flags, align 4, !dbg !6778
  %and208 = and i32 %77, 1, !dbg !6778
  %cmp209 = icmp ne i32 %and208, 0, !dbg !6778
  br i1 %cmp209, label %cond.true211, label %cond.false238, !dbg !6779

cond.true211:                                     ; preds = %land.lhs.true207
  %78 = load i32, i32* %xregno.addr, align 4, !dbg !6778
  %conv212 = zext i32 %78 to i64, !dbg !6778
  %sub213 = sub i64 %conv212, 8, !dbg !6778
  %cmp214 = icmp ule i64 %sub213, 7, !dbg !6778
  br i1 %cmp214, label %cond.true231, label %lor.lhs.false216, !dbg !6778

lor.lhs.false216:                                 ; preds = %cond.true211
  %79 = load i32, i32* %xregno.addr, align 4, !dbg !6778
  %conv217 = zext i32 %79 to i64, !dbg !6778
  %sub218 = sub i64 %conv217, 21, !dbg !6778
  %cmp219 = icmp ule i64 %sub218, 7, !dbg !6778
  br i1 %cmp219, label %cond.true231, label %lor.lhs.false221, !dbg !6778

lor.lhs.false221:                                 ; preds = %lor.lhs.false216
  %80 = load i32, i32* %xregno.addr, align 4, !dbg !6778
  %conv222 = zext i32 %80 to i64, !dbg !6778
  %sub223 = sub i64 %conv222, 45, !dbg !6778
  %cmp224 = icmp ule i64 %sub223, 7, !dbg !6778
  br i1 %cmp224, label %cond.true231, label %lor.lhs.false226, !dbg !6778

lor.lhs.false226:                                 ; preds = %lor.lhs.false221
  %81 = load i32, i32* %xregno.addr, align 4, !dbg !6778
  %conv227 = zext i32 %81 to i64, !dbg !6778
  %sub228 = sub i64 %conv227, 29, !dbg !6778
  %cmp229 = icmp ule i64 %sub228, 7, !dbg !6778
  br i1 %cmp229, label %cond.true231, label %cond.false232, !dbg !6778

cond.true231:                                     ; preds = %lor.lhs.false226, %lor.lhs.false221, %lor.lhs.false216, %cond.true211
  br i1 false, label %if.end305, label %land.lhs.true239, !dbg !6778

cond.false232:                                    ; preds = %lor.lhs.false226
  %82 = load i32, i32* %ymode.addr, align 4, !dbg !6778
  %cmp233 = icmp eq i32 %82, 40, !dbg !6778
  br i1 %cmp233, label %if.end305, label %lor.lhs.false235, !dbg !6778

lor.lhs.false235:                                 ; preds = %cond.false232
  %83 = load i32, i32* %ymode.addr, align 4, !dbg !6778
  %cmp236 = icmp eq i32 %83, 53, !dbg !6778
  br i1 %cmp236, label %if.end305, label %land.lhs.true239, !dbg !6778

cond.false238:                                    ; preds = %land.lhs.true207
  br i1 false, label %if.end305, label %land.lhs.true239, !dbg !6779

land.lhs.true239:                                 ; preds = %cond.false238, %lor.lhs.false235, %cond.true231
  %84 = load i32, i32* %xmode.addr, align 4, !dbg !6780
  %idxprom240 = zext i32 %84 to i64, !dbg !6780
  %arrayidx241 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom240, !dbg !6780
  %85 = load i8, i8* %arrayidx241, align 1, !dbg !6780
  %conv242 = zext i8 %85 to i16, !dbg !6780
  %conv243 = zext i16 %conv242 to i32, !dbg !6780
  %86 = load i32, i32* %nregs_xmode, align 4, !dbg !6781
  %rem = srem i32 %conv243, %86, !dbg !6782
  %cmp244 = icmp eq i32 %rem, 0, !dbg !6783
  br i1 %cmp244, label %land.lhs.true246, label %if.end305, !dbg !6784

land.lhs.true246:                                 ; preds = %land.lhs.true239
  %87 = load i32, i32* %ymode.addr, align 4, !dbg !6785
  %idxprom247 = zext i32 %87 to i64, !dbg !6785
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom247, !dbg !6785
  %88 = load i8, i8* %arrayidx248, align 1, !dbg !6785
  %conv249 = zext i8 %88 to i16, !dbg !6785
  %conv250 = zext i16 %conv249 to i32, !dbg !6785
  %89 = load i32, i32* %nregs_ymode, align 4, !dbg !6786
  %rem251 = srem i32 %conv250, %89, !dbg !6787
  %cmp252 = icmp eq i32 %rem251, 0, !dbg !6788
  br i1 %cmp252, label %if.then254, label %if.end305, !dbg !6789

if.then254:                                       ; preds = %land.lhs.true246
  %90 = load i32, i32* %xmode.addr, align 4, !dbg !6790
  %idxprom255 = zext i32 %90 to i64, !dbg !6790
  %arrayidx256 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom255, !dbg !6790
  %91 = load i8, i8* %arrayidx256, align 1, !dbg !6790
  %conv257 = zext i8 %91 to i16, !dbg !6790
  %conv258 = zext i16 %conv257 to i32, !dbg !6790
  %92 = load i32, i32* %nregs_xmode, align 4, !dbg !6792
  %div259 = sdiv i32 %conv258, %92, !dbg !6793
  store i32 %div259, i32* %regsize_xmode, align 4, !dbg !6794
  %93 = load i32, i32* %ymode.addr, align 4, !dbg !6795
  %idxprom260 = zext i32 %93 to i64, !dbg !6795
  %arrayidx261 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom260, !dbg !6795
  %94 = load i8, i8* %arrayidx261, align 1, !dbg !6795
  %conv262 = zext i8 %94 to i16, !dbg !6795
  %conv263 = zext i16 %conv262 to i32, !dbg !6795
  %95 = load i32, i32* %nregs_ymode, align 4, !dbg !6796
  %div264 = sdiv i32 %conv263, %95, !dbg !6797
  store i32 %div264, i32* %regsize_ymode, align 4, !dbg !6798
  %96 = load i8, i8* %rknown, align 1, !dbg !6799
  %tobool265 = icmp ne i8 %96, 0, !dbg !6799
  br i1 %tobool265, label %if.end284, label %land.lhs.true266, !dbg !6801

land.lhs.true266:                                 ; preds = %if.then254
  %97 = load i32, i32* %regsize_xmode, align 4, !dbg !6802
  %98 = load i32, i32* %regsize_ymode, align 4, !dbg !6803
  %cmp267 = icmp sgt i32 %97, %98, !dbg !6804
  br i1 %cmp267, label %land.lhs.true269, label %if.end284, !dbg !6805

land.lhs.true269:                                 ; preds = %land.lhs.true266
  %99 = load i32, i32* %nregs_ymode, align 4, !dbg !6806
  %cmp270 = icmp sgt i32 %99, 1, !dbg !6807
  br i1 %cmp270, label %if.then272, label %if.end284, !dbg !6808

if.then272:                                       ; preds = %land.lhs.true269
  %100 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6809
  %representable_p273 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %100, i32 0, i32 2, !dbg !6811
  store i8 0, i8* %representable_p273, align 4, !dbg !6812
  %101 = load i32, i32* %ymode.addr, align 4, !dbg !6813
  %idxprom274 = zext i32 %101 to i64, !dbg !6813
  %arrayidx275 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom274, !dbg !6813
  %102 = load i8, i8* %arrayidx275, align 1, !dbg !6813
  %conv276 = zext i8 %102 to i16, !dbg !6813
  %conv277 = zext i16 %conv276 to i32, !dbg !6813
  %103 = load i32, i32* %regsize_xmode, align 4, !dbg !6814
  %add278 = add nsw i32 %conv277, %103, !dbg !6815
  %sub279 = sub nsw i32 %add278, 1, !dbg !6816
  %104 = load i32, i32* %regsize_xmode, align 4, !dbg !6817
  %div280 = sdiv i32 %sub279, %104, !dbg !6818
  %105 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6819
  %nregs281 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %105, i32 0, i32 1, !dbg !6820
  store i32 %div280, i32* %nregs281, align 4, !dbg !6821
  %106 = load i32, i32* %offset.addr, align 4, !dbg !6822
  %107 = load i32, i32* %regsize_xmode, align 4, !dbg !6823
  %div282 = udiv i32 %106, %107, !dbg !6824
  %108 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6825
  %offset283 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %108, i32 0, i32 0, !dbg !6826
  store i32 %div282, i32* %offset283, align 4, !dbg !6827
  br label %return, !dbg !6828

if.end284:                                        ; preds = %land.lhs.true269, %land.lhs.true266, %if.then254
  %109 = load i8, i8* %rknown, align 1, !dbg !6829
  %tobool285 = icmp ne i8 %109, 0, !dbg !6829
  br i1 %tobool285, label %if.end304, label %land.lhs.true286, !dbg !6831

land.lhs.true286:                                 ; preds = %if.end284
  %110 = load i32, i32* %regsize_ymode, align 4, !dbg !6832
  %111 = load i32, i32* %regsize_xmode, align 4, !dbg !6833
  %cmp287 = icmp sgt i32 %110, %111, !dbg !6834
  br i1 %cmp287, label %land.lhs.true289, label %if.end304, !dbg !6835

land.lhs.true289:                                 ; preds = %land.lhs.true286
  %112 = load i32, i32* %nregs_xmode, align 4, !dbg !6836
  %cmp290 = icmp sgt i32 %112, 1, !dbg !6837
  br i1 %cmp290, label %if.then292, label %if.end304, !dbg !6838

if.then292:                                       ; preds = %land.lhs.true289
  %113 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6839
  %representable_p293 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %113, i32 0, i32 2, !dbg !6841
  store i8 0, i8* %representable_p293, align 4, !dbg !6842
  %114 = load i32, i32* %ymode.addr, align 4, !dbg !6843
  %idxprom294 = zext i32 %114 to i64, !dbg !6843
  %arrayidx295 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom294, !dbg !6843
  %115 = load i8, i8* %arrayidx295, align 1, !dbg !6843
  %conv296 = zext i8 %115 to i16, !dbg !6843
  %conv297 = zext i16 %conv296 to i32, !dbg !6843
  %116 = load i32, i32* %regsize_xmode, align 4, !dbg !6844
  %add298 = add nsw i32 %conv297, %116, !dbg !6845
  %sub299 = sub nsw i32 %add298, 1, !dbg !6846
  %117 = load i32, i32* %regsize_xmode, align 4, !dbg !6847
  %div300 = sdiv i32 %sub299, %117, !dbg !6848
  %118 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6849
  %nregs301 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %118, i32 0, i32 1, !dbg !6850
  store i32 %div300, i32* %nregs301, align 4, !dbg !6851
  %119 = load i32, i32* %offset.addr, align 4, !dbg !6852
  %120 = load i32, i32* %regsize_xmode, align 4, !dbg !6853
  %div302 = udiv i32 %119, %120, !dbg !6854
  %121 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6855
  %offset303 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %121, i32 0, i32 0, !dbg !6856
  store i32 %div302, i32* %offset303, align 4, !dbg !6857
  br label %return, !dbg !6858

if.end304:                                        ; preds = %land.lhs.true289, %land.lhs.true286, %if.end284
  br label %if.end305, !dbg !6859

if.end305:                                        ; preds = %if.end304, %land.lhs.true246, %land.lhs.true239, %cond.false238, %lor.lhs.false235, %cond.false232, %cond.true231, %cond.false206, %lor.lhs.false203, %cond.false200, %cond.true199
  %122 = load i8, i8* %rknown, align 1, !dbg !6860
  %tobool306 = icmp ne i8 %122, 0, !dbg !6860
  br i1 %tobool306, label %if.end321, label %land.lhs.true307, !dbg !6862

land.lhs.true307:                                 ; preds = %if.end305
  %123 = load i32, i32* %offset.addr, align 4, !dbg !6863
  %124 = load i32, i32* %ymode.addr, align 4, !dbg !6864
  %125 = load i32, i32* %xmode.addr, align 4, !dbg !6865
  %call = call i32 @subreg_lowpart_offset(i32 %124, i32 %125), !dbg !6866
  %cmp308 = icmp eq i32 %123, %call, !dbg !6867
  br i1 %cmp308, label %if.then310, label %if.end321, !dbg !6868

if.then310:                                       ; preds = %land.lhs.true307
  %126 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6869
  %representable_p311 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %126, i32 0, i32 2, !dbg !6871
  store i8 1, i8* %representable_p311, align 4, !dbg !6872
  store i8 1, i8* %rknown, align 1, !dbg !6873
  %127 = load i32, i32* %offset.addr, align 4, !dbg !6874
  %cmp312 = icmp eq i32 %127, 0, !dbg !6876
  br i1 %cmp312, label %if.then317, label %lor.lhs.false314, !dbg !6877

lor.lhs.false314:                                 ; preds = %if.then310
  %128 = load i32, i32* %nregs_xmode, align 4, !dbg !6878
  %129 = load i32, i32* %nregs_ymode, align 4, !dbg !6879
  %cmp315 = icmp eq i32 %128, %129, !dbg !6880
  br i1 %cmp315, label %if.then317, label %if.end320, !dbg !6881

if.then317:                                       ; preds = %lor.lhs.false314, %if.then310
  %130 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6882
  %offset318 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %130, i32 0, i32 0, !dbg !6884
  store i32 0, i32* %offset318, align 4, !dbg !6885
  %131 = load i32, i32* %nregs_ymode, align 4, !dbg !6886
  %132 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6887
  %nregs319 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %132, i32 0, i32 1, !dbg !6888
  store i32 %131, i32* %nregs319, align 4, !dbg !6889
  br label %return, !dbg !6890

if.end320:                                        ; preds = %lor.lhs.false314
  br label %if.end321, !dbg !6891

if.end321:                                        ; preds = %if.end320, %land.lhs.true307, %if.end305
  %133 = load i32, i32* %xmode.addr, align 4, !dbg !6892
  %idxprom322 = zext i32 %133 to i64, !dbg !6892
  %arrayidx323 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom322, !dbg !6892
  %134 = load i8, i8* %arrayidx323, align 1, !dbg !6892
  %conv324 = zext i8 %134 to i16, !dbg !6892
  %conv325 = zext i16 %conv324 to i32, !dbg !6892
  %135 = load i32, i32* %ymode.addr, align 4, !dbg !6892
  %idxprom326 = zext i32 %135 to i64, !dbg !6892
  %arrayidx327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom326, !dbg !6892
  %136 = load i8, i8* %arrayidx327, align 1, !dbg !6892
  %conv328 = zext i8 %136 to i16, !dbg !6892
  %conv329 = zext i16 %conv328 to i32, !dbg !6892
  %rem330 = srem i32 %conv325, %conv329, !dbg !6892
  %cmp331 = icmp eq i32 %rem330, 0, !dbg !6892
  br i1 %cmp331, label %cond.false334, label %cond.true333, !dbg !6892

cond.true333:                                     ; preds = %if.end321
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6892
  br label %cond.end335, !dbg !6892

cond.false334:                                    ; preds = %if.end321
  br label %cond.end335, !dbg !6892

cond.end335:                                      ; preds = %cond.false334, %cond.true333
  %cond336 = phi i32 [ 0, %cond.true333 ], [ 0, %cond.false334 ], !dbg !6892
  %137 = load i32, i32* %nregs_xmode, align 4, !dbg !6893
  %138 = load i32, i32* %nregs_ymode, align 4, !dbg !6893
  %rem337 = srem i32 %137, %138, !dbg !6893
  %cmp338 = icmp eq i32 %rem337, 0, !dbg !6893
  br i1 %cmp338, label %cond.false341, label %cond.true340, !dbg !6893

cond.true340:                                     ; preds = %cond.end335
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6893
  br label %cond.end342, !dbg !6893

cond.false341:                                    ; preds = %cond.end335
  br label %cond.end342, !dbg !6893

cond.end342:                                      ; preds = %cond.false341, %cond.true340
  %cond343 = phi i32 [ 0, %cond.true340 ], [ 0, %cond.false341 ], !dbg !6893
  %139 = load i32, i32* %offset.addr, align 4, !dbg !6894
  store i32 %139, i32* %offset_adj, align 4, !dbg !6895
  %140 = load i32, i32* %ymode.addr, align 4, !dbg !6896
  %141 = load i32, i32* %xmode.addr, align 4, !dbg !6897
  %idxprom344 = zext i32 %141 to i64, !dbg !6897
  %arrayidx345 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom344, !dbg !6897
  %142 = load i8, i8* %arrayidx345, align 1, !dbg !6897
  %conv346 = zext i8 %142 to i16, !dbg !6897
  %conv347 = zext i16 %conv346 to i32, !dbg !6897
  %mul348 = mul nsw i32 %conv347, 8, !dbg !6897
  %conv349 = trunc i32 %mul348 to i16, !dbg !6897
  %conv350 = zext i16 %conv349 to i32, !dbg !6897
  %143 = load i32, i32* %nregs_xmode, align 4, !dbg !6898
  %div351 = sdiv i32 %conv350, %143, !dbg !6899
  %call352 = call i32 @mode_for_size(i32 %div351, i32 2, i32 0), !dbg !6900
  %call353 = call i32 @subreg_lowpart_offset(i32 %140, i32 %call352), !dbg !6901
  %144 = load i32, i32* %offset_adj, align 4, !dbg !6902
  %sub354 = sub i32 %144, %call353, !dbg !6902
  store i32 %sub354, i32* %offset_adj, align 4, !dbg !6902
  %145 = load i32, i32* %xmode.addr, align 4, !dbg !6903
  %idxprom355 = zext i32 %145 to i64, !dbg !6903
  %arrayidx356 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom355, !dbg !6903
  %146 = load i8, i8* %arrayidx356, align 1, !dbg !6903
  %conv357 = zext i8 %146 to i16, !dbg !6903
  %conv358 = zext i16 %conv357 to i32, !dbg !6903
  %147 = load i32, i32* %ymode.addr, align 4, !dbg !6904
  %idxprom359 = zext i32 %147 to i64, !dbg !6904
  %arrayidx360 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom359, !dbg !6904
  %148 = load i8, i8* %arrayidx360, align 1, !dbg !6904
  %conv361 = zext i8 %148 to i16, !dbg !6904
  %conv362 = zext i16 %conv361 to i32, !dbg !6904
  %div363 = sdiv i32 %conv358, %conv362, !dbg !6905
  store i32 %div363, i32* %mode_multiple, align 4, !dbg !6906
  %149 = load i32, i32* %mode_multiple, align 4, !dbg !6907
  %cmp364 = icmp ne i32 %149, 0, !dbg !6907
  br i1 %cmp364, label %cond.false367, label %cond.true366, !dbg !6907

cond.true366:                                     ; preds = %cond.end342
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3225, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6907
  br label %cond.end368, !dbg !6907

cond.false367:                                    ; preds = %cond.end342
  br label %cond.end368, !dbg !6907

cond.end368:                                      ; preds = %cond.false367, %cond.true366
  %cond369 = phi i32 [ 0, %cond.true366 ], [ 0, %cond.false367 ], !dbg !6907
  %150 = load i32, i32* %offset.addr, align 4, !dbg !6908
  %151 = load i32, i32* %ymode.addr, align 4, !dbg !6909
  %idxprom370 = zext i32 %151 to i64, !dbg !6909
  %arrayidx371 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom370, !dbg !6909
  %152 = load i8, i8* %arrayidx371, align 1, !dbg !6909
  %conv372 = zext i8 %152 to i16, !dbg !6909
  %conv373 = zext i16 %conv372 to i32, !dbg !6909
  %div374 = udiv i32 %150, %conv373, !dbg !6910
  store i32 %div374, i32* %y_offset, align 4, !dbg !6911
  %153 = load i32, i32* %offset_adj, align 4, !dbg !6912
  %154 = load i32, i32* %ymode.addr, align 4, !dbg !6913
  %idxprom375 = zext i32 %154 to i64, !dbg !6913
  %arrayidx376 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom375, !dbg !6913
  %155 = load i8, i8* %arrayidx376, align 1, !dbg !6913
  %conv377 = zext i8 %155 to i16, !dbg !6913
  %conv378 = zext i16 %conv377 to i32, !dbg !6913
  %div379 = sdiv i32 %153, %conv378, !dbg !6914
  store i32 %div379, i32* %y_offset_adj, align 4, !dbg !6915
  %156 = load i32, i32* %nregs_xmode, align 4, !dbg !6916
  %157 = load i32, i32* %nregs_ymode, align 4, !dbg !6917
  %div380 = sdiv i32 %156, %157, !dbg !6918
  store i32 %div380, i32* %nregs_multiple, align 4, !dbg !6919
  %158 = load i32, i32* %offset_adj, align 4, !dbg !6920
  %159 = load i32, i32* %ymode.addr, align 4, !dbg !6920
  %idxprom381 = zext i32 %159 to i64, !dbg !6920
  %arrayidx382 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom381, !dbg !6920
  %160 = load i8, i8* %arrayidx382, align 1, !dbg !6920
  %conv383 = zext i8 %160 to i16, !dbg !6920
  %conv384 = zext i16 %conv383 to i32, !dbg !6920
  %rem385 = srem i32 %158, %conv384, !dbg !6920
  %cmp386 = icmp eq i32 %rem385, 0, !dbg !6920
  br i1 %cmp386, label %cond.false389, label %cond.true388, !dbg !6920

cond.true388:                                     ; preds = %cond.end368
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6920
  br label %cond.end390, !dbg !6920

cond.false389:                                    ; preds = %cond.end368
  br label %cond.end390, !dbg !6920

cond.end390:                                      ; preds = %cond.false389, %cond.true388
  %cond391 = phi i32 [ 0, %cond.true388 ], [ 0, %cond.false389 ], !dbg !6920
  %161 = load i32, i32* %mode_multiple, align 4, !dbg !6921
  %162 = load i32, i32* %nregs_multiple, align 4, !dbg !6921
  %rem392 = srem i32 %161, %162, !dbg !6921
  %cmp393 = icmp eq i32 %rem392, 0, !dbg !6921
  br i1 %cmp393, label %cond.false396, label %cond.true395, !dbg !6921

cond.true395:                                     ; preds = %cond.end390
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6921
  br label %cond.end397, !dbg !6921

cond.false396:                                    ; preds = %cond.end390
  br label %cond.end397, !dbg !6921

cond.end397:                                      ; preds = %cond.false396, %cond.true395
  %cond398 = phi i32 [ 0, %cond.true395 ], [ 0, %cond.false396 ], !dbg !6921
  %163 = load i8, i8* %rknown, align 1, !dbg !6922
  %tobool399 = icmp ne i8 %163, 0, !dbg !6922
  br i1 %tobool399, label %if.end406, label %if.then400, !dbg !6924

if.then400:                                       ; preds = %cond.end397
  %164 = load i32, i32* %y_offset_adj, align 4, !dbg !6925
  %165 = load i32, i32* %mode_multiple, align 4, !dbg !6927
  %166 = load i32, i32* %nregs_multiple, align 4, !dbg !6928
  %div401 = sdiv i32 %165, %166, !dbg !6929
  %rem402 = srem i32 %164, %div401, !dbg !6930
  %tobool403 = icmp ne i32 %rem402, 0, !dbg !6931
  %lnot = xor i1 %tobool403, true, !dbg !6931
  %lnot.ext = zext i1 %lnot to i32, !dbg !6931
  %conv404 = trunc i32 %lnot.ext to i8, !dbg !6932
  %167 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6933
  %representable_p405 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %167, i32 0, i32 2, !dbg !6934
  store i8 %conv404, i8* %representable_p405, align 4, !dbg !6935
  store i8 1, i8* %rknown, align 1, !dbg !6936
  br label %if.end406, !dbg !6937

if.end406:                                        ; preds = %if.then400, %cond.end397
  %168 = load i32, i32* %y_offset, align 4, !dbg !6938
  %169 = load i32, i32* %mode_multiple, align 4, !dbg !6939
  %170 = load i32, i32* %nregs_multiple, align 4, !dbg !6940
  %div407 = sdiv i32 %169, %170, !dbg !6941
  %div408 = sdiv i32 %168, %div407, !dbg !6942
  %171 = load i32, i32* %nregs_ymode, align 4, !dbg !6943
  %mul409 = mul nsw i32 %div408, %171, !dbg !6944
  %172 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6945
  %offset410 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %172, i32 0, i32 0, !dbg !6946
  store i32 %mul409, i32* %offset410, align 4, !dbg !6947
  %173 = load i32, i32* %nregs_ymode, align 4, !dbg !6948
  %174 = load %struct.subreg_info*, %struct.subreg_info** %info.addr, align 8, !dbg !6949
  %nregs411 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %174, i32 0, i32 1, !dbg !6950
  store i32 %173, i32* %nregs411, align 4, !dbg !6951
  br label %return, !dbg !6952

return:                                           ; preds = %if.end406, %if.then317, %if.then292, %if.then272, %if.end174
  ret void, !dbg !6952
}

declare dso_local i32 @subreg_lowpart_offset(i32, i32) #2

declare dso_local i32 @mode_for_size(i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_regno_offset(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) #0 !dbg !6953 {
entry:
  %xregno.addr = alloca i32, align 4
  %xmode.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ymode.addr = alloca i32, align 4
  %info = alloca %struct.subreg_info, align 4
  store i32 %xregno, i32* %xregno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xregno.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store i32 %xmode, i32* %xmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmode.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  store i32 %ymode, i32* %ymode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymode.addr, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata %struct.subreg_info* %info, metadata !6964, metadata !DIExpression()), !dbg !6965
  %0 = load i32, i32* %xregno.addr, align 4, !dbg !6966
  %1 = load i32, i32* %xmode.addr, align 4, !dbg !6967
  %2 = load i32, i32* %offset.addr, align 4, !dbg !6968
  %3 = load i32, i32* %ymode.addr, align 4, !dbg !6969
  call void @subreg_get_info(i32 %0, i32 %1, i32 %2, i32 %3, %struct.subreg_info* %info), !dbg !6970
  %offset1 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i32 0, i32 0, !dbg !6971
  %4 = load i32, i32* %offset1, align 4, !dbg !6971
  ret i32 %4, !dbg !6972
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @subreg_offset_representable_p(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) #0 !dbg !6973 {
entry:
  %xregno.addr = alloca i32, align 4
  %xmode.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ymode.addr = alloca i32, align 4
  %info = alloca %struct.subreg_info, align 4
  store i32 %xregno, i32* %xregno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xregno.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  store i32 %xmode, i32* %xmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmode.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6980, metadata !DIExpression()), !dbg !6981
  store i32 %ymode, i32* %ymode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymode.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.declare(metadata %struct.subreg_info* %info, metadata !6984, metadata !DIExpression()), !dbg !6985
  %0 = load i32, i32* %xregno.addr, align 4, !dbg !6986
  %1 = load i32, i32* %xmode.addr, align 4, !dbg !6987
  %2 = load i32, i32* %offset.addr, align 4, !dbg !6988
  %3 = load i32, i32* %ymode.addr, align 4, !dbg !6989
  call void @subreg_get_info(i32 %0, i32 %1, i32 %2, i32 %3, %struct.subreg_info* %info), !dbg !6990
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i32 0, i32 2, !dbg !6991
  %4 = load i8, i8* %representable_p, align 4, !dbg !6991
  ret i8 %4, !dbg !6992
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @simplify_subreg_regno(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) #0 !dbg !6993 {
entry:
  %retval = alloca i32, align 4
  %xregno.addr = alloca i32, align 4
  %xmode.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %ymode.addr = alloca i32, align 4
  %info = alloca %struct.subreg_info, align 4
  %yregno = alloca i32, align 4
  store i32 %xregno, i32* %xregno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xregno.addr, metadata !6996, metadata !DIExpression()), !dbg !6997
  store i32 %xmode, i32* %xmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmode.addr, metadata !6998, metadata !DIExpression()), !dbg !6999
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7000, metadata !DIExpression()), !dbg !7001
  store i32 %ymode, i32* %ymode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymode.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.declare(metadata %struct.subreg_info* %info, metadata !7004, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.declare(metadata i32* %yregno, metadata !7006, metadata !DIExpression()), !dbg !7007
  %0 = load i32, i32* %xmode.addr, align 4, !dbg !7008
  %idxprom = zext i32 %0 to i64, !dbg !7008
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7008
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7008
  %conv = zext i8 %1 to i32, !dbg !7008
  %cmp = icmp ne i32 %conv, 10, !dbg !7010
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7011

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %xmode.addr, align 4, !dbg !7012
  %idxprom2 = zext i32 %2 to i64, !dbg !7012
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !7012
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !7012
  %conv4 = zext i8 %3 to i32, !dbg !7012
  %cmp5 = icmp ne i32 %conv4, 11, !dbg !7013
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !7014

land.lhs.true7:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %xmode.addr, align 4, !dbg !7015
  %5 = load i32, i32* %ymode.addr, align 4, !dbg !7015
  %6 = load i32, i32* %xregno.addr, align 4, !dbg !7015
  %idxprom8 = zext i32 %6 to i64, !dbg !7015
  %arrayidx9 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom8, !dbg !7015
  %7 = load i32, i32* %arrayidx9, align 4, !dbg !7015
  %call = call zeroext i8 @ix86_cannot_change_mode_class(i32 %4, i32 %5, i32 %7), !dbg !7015
  %conv10 = zext i8 %call to i32, !dbg !7015
  %tobool = icmp ne i32 %conv10, 0, !dbg !7015
  br i1 %tobool, label %if.then, label %if.end, !dbg !7016

if.then:                                          ; preds = %land.lhs.true7
  store i32 -1, i32* %retval, align 4, !dbg !7017
  br label %return, !dbg !7017

if.end:                                           ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %8 = load i32, i32* @reload_completed, align 4, !dbg !7018
  %tobool11 = icmp ne i32 %8, 0, !dbg !7018
  br i1 %tobool11, label %lor.lhs.false, label %land.lhs.true14, !dbg !7020

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !7021
  %conv12 = zext i8 %9 to i32, !dbg !7021
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !7021
  br i1 %tobool13, label %land.lhs.true14, label %if.end21, !dbg !7022

land.lhs.true14:                                  ; preds = %lor.lhs.false, %if.end
  %10 = load i32, i32* %xregno.addr, align 4, !dbg !7023
  %cmp15 = icmp eq i32 %10, 20, !dbg !7024
  br i1 %cmp15, label %if.then20, label %lor.lhs.false17, !dbg !7025

lor.lhs.false17:                                  ; preds = %land.lhs.true14
  %11 = load i32, i32* %xregno.addr, align 4, !dbg !7026
  %cmp18 = icmp eq i32 %11, 6, !dbg !7027
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7028

if.then20:                                        ; preds = %lor.lhs.false17, %land.lhs.true14
  store i32 -1, i32* %retval, align 4, !dbg !7029
  br label %return, !dbg !7029

if.end21:                                         ; preds = %lor.lhs.false17, %lor.lhs.false
  %12 = load i32, i32* %xregno.addr, align 4, !dbg !7030
  %cmp22 = icmp eq i32 %12, 16, !dbg !7032
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7033

if.then24:                                        ; preds = %if.end21
  store i32 -1, i32* %retval, align 4, !dbg !7034
  br label %return, !dbg !7034

if.end25:                                         ; preds = %if.end21
  %13 = load i32, i32* %xregno.addr, align 4, !dbg !7035
  %cmp26 = icmp eq i32 %13, 7, !dbg !7037
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7038

if.then28:                                        ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !7039
  br label %return, !dbg !7039

if.end29:                                         ; preds = %if.end25
  %14 = load i32, i32* %xregno.addr, align 4, !dbg !7040
  %15 = load i32, i32* %xmode.addr, align 4, !dbg !7041
  %16 = load i32, i32* %offset.addr, align 4, !dbg !7042
  %17 = load i32, i32* %ymode.addr, align 4, !dbg !7043
  call void @subreg_get_info(i32 %14, i32 %15, i32 %16, i32 %17, %struct.subreg_info* %info), !dbg !7044
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i32 0, i32 2, !dbg !7045
  %18 = load i8, i8* %representable_p, align 4, !dbg !7045
  %tobool30 = icmp ne i8 %18, 0, !dbg !7047
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !7048

if.then31:                                        ; preds = %if.end29
  store i32 -1, i32* %retval, align 4, !dbg !7049
  br label %return, !dbg !7049

if.end32:                                         ; preds = %if.end29
  %19 = load i32, i32* %xregno.addr, align 4, !dbg !7050
  %offset33 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i32 0, i32 0, !dbg !7051
  %20 = load i32, i32* %offset33, align 4, !dbg !7051
  %add = add i32 %19, %20, !dbg !7052
  store i32 %add, i32* %yregno, align 4, !dbg !7053
  %21 = load i32, i32* %yregno, align 4, !dbg !7054
  %cmp34 = icmp ult i32 %21, 53, !dbg !7054
  br i1 %cmp34, label %if.end37, label %if.then36, !dbg !7056

if.then36:                                        ; preds = %if.end32
  store i32 -1, i32* %retval, align 4, !dbg !7057
  br label %return, !dbg !7057

if.end37:                                         ; preds = %if.end32
  %22 = load i32, i32* %yregno, align 4, !dbg !7058
  %23 = load i32, i32* %ymode.addr, align 4, !dbg !7058
  %call38 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %22, i32 %23), !dbg !7058
  %tobool39 = icmp ne i8 %call38, 0, !dbg !7058
  br i1 %tobool39, label %if.end45, label %land.lhs.true40, !dbg !7060

land.lhs.true40:                                  ; preds = %if.end37
  %24 = load i32, i32* %xregno.addr, align 4, !dbg !7061
  %25 = load i32, i32* %xmode.addr, align 4, !dbg !7061
  %call41 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %24, i32 %25), !dbg !7061
  %conv42 = zext i8 %call41 to i32, !dbg !7061
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !7061
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !7062

if.then44:                                        ; preds = %land.lhs.true40
  store i32 -1, i32* %retval, align 4, !dbg !7063
  br label %return, !dbg !7063

if.end45:                                         ; preds = %land.lhs.true40, %if.end37
  %26 = load i32, i32* %yregno, align 4, !dbg !7064
  store i32 %26, i32* %retval, align 4, !dbg !7065
  br label %return, !dbg !7065

return:                                           ; preds = %if.end45, %if.then44, %if.then36, %if.then31, %if.then28, %if.then24, %if.then20, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7066
  ret i32 %27, !dbg !7066
}

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @subreg_nregs_with_regno(i32 %regno, %struct.rtx_def* %x) #0 !dbg !7067 {
entry:
  %regno.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %info = alloca %struct.subreg_info, align 4
  %subreg = alloca %struct.rtx_def*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata %struct.subreg_info* %info, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subreg, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7078
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !7078
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7078
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7078
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7078
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7078
  store %struct.rtx_def* %1, %struct.rtx_def** %subreg, align 8, !dbg !7077
  %2 = load i32, i32* %regno.addr, align 4, !dbg !7079
  %3 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !7080
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !7080
  %bf.load = load i32, i32* %4, align 8, !dbg !7080
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7080
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7080
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7081
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !7081
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !7081
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !7081
  %rt_uint = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !7081
  %6 = load i32, i32* %rt_uint, align 8, !dbg !7081
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7082
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !7082
  %bf.load4 = load i32, i32* %8, align 8, !dbg !7082
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !7082
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !7082
  call void @subreg_get_info(i32 %2, i32 %bf.clear, i32 %6, i32 %bf.clear6, %struct.subreg_info* %info), !dbg !7083
  %nregs = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i32 0, i32 1, !dbg !7084
  %9 = load i32, i32* %nregs, align 4, !dbg !7084
  ret i32 %9, !dbg !7085
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def* %call_insn, %struct.rtx_def* %boundary) #0 !dbg !7086 {
entry:
  %call_insn.addr = alloca %struct.rtx_def*, align 8
  %boundary.addr = alloca %struct.rtx_def*, align 8
  %parm = alloca %struct.parms_set_data, align 8
  %p = alloca %struct.rtx_def*, align 8
  %before = alloca %struct.rtx_def*, align 8
  %first_set = alloca %struct.rtx_def*, align 8
  %nregs_old = alloca i32, align 4
  store %struct.rtx_def* %call_insn, %struct.rtx_def** %call_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %call_insn.addr, metadata !7089, metadata !DIExpression()), !dbg !7090
  store %struct.rtx_def* %boundary, %struct.rtx_def** %boundary.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %boundary.addr, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata %struct.parms_set_data* %parm, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %p, metadata !7095, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %before, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first_set, metadata !7099, metadata !DIExpression()), !dbg !7100
  %regs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 1, !dbg !7101
  store i64 0, i64* %regs, align 8, !dbg !7101
  %nregs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 0, !dbg !7102
  store i32 0, i32* %nregs, align 8, !dbg !7103
  %0 = load %struct.rtx_def*, %struct.rtx_def** %call_insn.addr, align 8, !dbg !7104
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !7104
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7104
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !7104
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7104
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7104
  store %struct.rtx_def* %1, %struct.rtx_def** %p, align 8, !dbg !7106
  br label %for.cond, !dbg !7107

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7108
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !7110
  br i1 %tobool, label %for.body, label %for.end, !dbg !7110

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7111
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !7111
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !7111
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !7111
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !7111
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !7111
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !7111
  %bf.load = load i32, i32* %5, align 8, !dbg !7111
  %bf.clear = and i32 %bf.load, 65535, !dbg !7111
  %cmp = icmp eq i32 %bf.clear, 24, !dbg !7113
  br i1 %cmp, label %land.lhs.true, label %if.end48, !dbg !7114

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7115
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7115
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !7115
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !7115
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !7115
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !7115
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !7115
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !7115
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !7115
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !7115
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !7115
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7115
  %bf.load13 = load i32, i32* %9, align 8, !dbg !7115
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7115
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !7115
  br i1 %cmp15, label %if.then, label %if.end48, !dbg !7116

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7117
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !7117
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !7117
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !7117
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !7117
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !7117
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !7117
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !7117
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !7117
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !7117
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7117
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !7117
  %cmp24 = icmp ult i32 %call, 53, !dbg !7117
  br i1 %cmp24, label %cond.false, label %cond.true, !dbg !7117

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7117
  br label %cond.end, !dbg !7117

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7117
  %13 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7119
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !7119
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7119
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !7119
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !7119
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7119
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !7119
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !7119
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !7119
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !7119
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7119
  %call33 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !7119
  %call34 = call zeroext i8 @ix86_function_arg_regno_p(i32 %call33), !dbg !7119
  %tobool35 = icmp ne i8 %call34, 0, !dbg !7119
  br i1 %tobool35, label %if.end, label %if.then36, !dbg !7121

if.then36:                                        ; preds = %cond.end
  br label %for.inc, !dbg !7122

if.end:                                           ; preds = %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7123
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !7123
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !7123
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !7123
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !7123
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !7123
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !7123
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !7123
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !7123
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !7123
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !7123
  %call45 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !7123
  %sh_prom = zext i32 %call45 to i64, !dbg !7123
  %shl = shl i64 1, %sh_prom, !dbg !7123
  %regs46 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 1, !dbg !7123
  %19 = load i64, i64* %regs46, align 8, !dbg !7123
  %or = or i64 %19, %shl, !dbg !7123
  store i64 %or, i64* %regs46, align 8, !dbg !7123
  %nregs47 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 0, !dbg !7124
  %20 = load i32, i32* %nregs47, align 8, !dbg !7125
  %inc = add nsw i32 %20, 1, !dbg !7125
  store i32 %inc, i32* %nregs47, align 8, !dbg !7125
  br label %if.end48, !dbg !7126

if.end48:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7115

for.inc:                                          ; preds = %if.end48, %if.then36
  %21 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7127
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !7127
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !7127
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 1, !dbg !7127
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !7127
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !7127
  store %struct.rtx_def* %22, %struct.rtx_def** %p, align 8, !dbg !7128
  br label %for.cond, !dbg !7129, !llvm.loop !7130

for.end:                                          ; preds = %for.cond
  %23 = load %struct.rtx_def*, %struct.rtx_def** %call_insn.addr, align 8, !dbg !7132
  store %struct.rtx_def* %23, %struct.rtx_def** %before, align 8, !dbg !7133
  %24 = load %struct.rtx_def*, %struct.rtx_def** %call_insn.addr, align 8, !dbg !7134
  store %struct.rtx_def* %24, %struct.rtx_def** %first_set, align 8, !dbg !7135
  br label %while.cond, !dbg !7136

while.cond:                                       ; preds = %if.end99, %for.end
  %nregs53 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 0, !dbg !7137
  %25 = load i32, i32* %nregs53, align 8, !dbg !7137
  %tobool54 = icmp ne i32 %25, 0, !dbg !7138
  br i1 %tobool54, label %land.rhs, label %land.end, !dbg !7139

land.rhs:                                         ; preds = %while.cond
  %26 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7140
  %27 = load %struct.rtx_def*, %struct.rtx_def** %boundary.addr, align 8, !dbg !7141
  %cmp55 = icmp ne %struct.rtx_def* %26, %27, !dbg !7142
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %28 = phi i1 [ false, %while.cond ], [ %cmp55, %land.rhs ], !dbg !7143
  br i1 %28, label %while.body, label %while.end, !dbg !7136

while.body:                                       ; preds = %land.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7144
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !7144
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !7144
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 1, !dbg !7144
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !7144
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !7144
  store %struct.rtx_def* %30, %struct.rtx_def** %before, align 8, !dbg !7146
  %31 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7147
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !7147
  %bf.load60 = load i32, i32* %32, align 8, !dbg !7147
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !7147
  %cmp62 = icmp eq i32 %bf.clear61, 10, !dbg !7147
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !7149

if.then63:                                        ; preds = %while.body
  br label %while.end, !dbg !7150

if.end64:                                         ; preds = %while.body
  %33 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7151
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !7151
  %bf.load65 = load i32, i32* %34, align 8, !dbg !7151
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !7151
  %cmp67 = icmp eq i32 %bf.clear66, 12, !dbg !7151
  br i1 %cmp67, label %if.then68, label %if.end74, !dbg !7153

if.then68:                                        ; preds = %if.end64
  %35 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7154
  %36 = load %struct.rtx_def*, %struct.rtx_def** %boundary.addr, align 8, !dbg !7154
  %cmp69 = icmp eq %struct.rtx_def* %35, %36, !dbg !7154
  br i1 %cmp69, label %cond.false71, label %cond.true70, !dbg !7154

cond.true70:                                      ; preds = %if.then68
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3440, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7154
  br label %cond.end72, !dbg !7154

cond.false71:                                     ; preds = %if.then68
  br label %cond.end72, !dbg !7154

cond.end72:                                       ; preds = %cond.false71, %cond.true70
  %cond73 = phi i32 [ 0, %cond.true70 ], [ 0, %cond.false71 ], !dbg !7154
  br label %while.end, !dbg !7156

if.end74:                                         ; preds = %if.end64
  %37 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7157
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !7157
  %bf.load75 = load i32, i32* %38, align 8, !dbg !7157
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !7157
  %cmp77 = icmp eq i32 %bf.clear76, 8, !dbg !7157
  br i1 %cmp77, label %if.then89, label %lor.lhs.false, !dbg !7157

lor.lhs.false:                                    ; preds = %if.end74
  %39 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7157
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !7157
  %bf.load78 = load i32, i32* %40, align 8, !dbg !7157
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !7157
  %cmp80 = icmp eq i32 %bf.clear79, 7, !dbg !7157
  br i1 %cmp80, label %if.then89, label %lor.lhs.false81, !dbg !7157

lor.lhs.false81:                                  ; preds = %lor.lhs.false
  %41 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7157
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !7157
  %bf.load82 = load i32, i32* %42, align 8, !dbg !7157
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !7157
  %cmp84 = icmp eq i32 %bf.clear83, 9, !dbg !7157
  br i1 %cmp84, label %if.then89, label %lor.lhs.false85, !dbg !7157

lor.lhs.false85:                                  ; preds = %lor.lhs.false81
  %43 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7157
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !7157
  %bf.load86 = load i32, i32* %44, align 8, !dbg !7157
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !7157
  %cmp88 = icmp eq i32 %bf.clear87, 10, !dbg !7157
  br i1 %cmp88, label %if.then89, label %if.end99, !dbg !7159

if.then89:                                        ; preds = %lor.lhs.false85, %lor.lhs.false81, %lor.lhs.false, %if.end74
  call void @llvm.dbg.declare(metadata i32* %nregs_old, metadata !7160, metadata !DIExpression()), !dbg !7162
  %nregs90 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 0, !dbg !7163
  %45 = load i32, i32* %nregs90, align 8, !dbg !7163
  store i32 %45, i32* %nregs_old, align 4, !dbg !7162
  %46 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7164
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !7164
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !7164
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 5, !dbg !7164
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !7164
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !7164
  %48 = bitcast %struct.parms_set_data* %parm to i8*, !dbg !7165
  call void @note_stores(%struct.rtx_def* %47, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @parms_set, i8* %48), !dbg !7166
  %49 = load i32, i32* %nregs_old, align 4, !dbg !7167
  %nregs95 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i32 0, i32 0, !dbg !7169
  %50 = load i32, i32* %nregs95, align 8, !dbg !7169
  %cmp96 = icmp ne i32 %49, %50, !dbg !7170
  br i1 %cmp96, label %if.then97, label %if.else, !dbg !7171

if.then97:                                        ; preds = %if.then89
  %51 = load %struct.rtx_def*, %struct.rtx_def** %before, align 8, !dbg !7172
  store %struct.rtx_def* %51, %struct.rtx_def** %first_set, align 8, !dbg !7173
  br label %if.end98, !dbg !7174

if.else:                                          ; preds = %if.then89
  br label %while.end, !dbg !7175

if.end98:                                         ; preds = %if.then97
  br label %if.end99, !dbg !7176

if.end99:                                         ; preds = %if.end98, %lor.lhs.false85
  br label %while.cond, !dbg !7136, !llvm.loop !7177

while.end:                                        ; preds = %if.else, %cond.end72, %if.then63, %land.end
  %52 = load %struct.rtx_def*, %struct.rtx_def** %first_set, align 8, !dbg !7179
  ret %struct.rtx_def* %52, !dbg !7180
}

declare dso_local zeroext i8 @ix86_function_arg_regno_p(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @parms_set(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #0 !dbg !7181 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %pat.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.parms_set_data*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata %struct.parms_set_data** %d, metadata !7188, metadata !DIExpression()), !dbg !7190
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7191
  %1 = bitcast i8* %0 to %struct.parms_set_data*, !dbg !7192
  store %struct.parms_set_data* %1, %struct.parms_set_data** %d, align 8, !dbg !7190
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7193
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7193
  %bf.load = load i32, i32* %3, align 8, !dbg !7193
  %bf.clear = and i32 %bf.load, 65535, !dbg !7193
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !7193
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7195

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7196
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !7196
  %cmp1 = icmp ult i32 %call, 53, !dbg !7197
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !7198

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.parms_set_data*, %struct.parms_set_data** %d, align 8, !dbg !7199
  %regs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %5, i32 0, i32 1, !dbg !7199
  %6 = load i64, i64* %regs, align 8, !dbg !7199
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7199
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !7199
  %sh_prom = zext i32 %call3 to i64, !dbg !7199
  %shl = shl i64 1, %sh_prom, !dbg !7199
  %and = and i64 %6, %shl, !dbg !7199
  %tobool = icmp ne i64 %and, 0, !dbg !7199
  br i1 %tobool, label %if.then, label %if.end, !dbg !7200

if.then:                                          ; preds = %land.lhs.true2
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7201
  %call4 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !7201
  %sh_prom5 = zext i32 %call4 to i64, !dbg !7201
  %shl6 = shl i64 1, %sh_prom5, !dbg !7201
  %neg = xor i64 %shl6, -1, !dbg !7201
  %9 = load %struct.parms_set_data*, %struct.parms_set_data** %d, align 8, !dbg !7201
  %regs7 = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %9, i32 0, i32 1, !dbg !7201
  %10 = load i64, i64* %regs7, align 8, !dbg !7201
  %and8 = and i64 %10, %neg, !dbg !7201
  store i64 %and8, i64* %regs7, align 8, !dbg !7201
  %11 = load %struct.parms_set_data*, %struct.parms_set_data** %d, align 8, !dbg !7203
  %nregs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %11, i32 0, i32 0, !dbg !7204
  %12 = load i32, i32* %nregs, align 8, !dbg !7205
  %dec = add nsw i32 %12, -1, !dbg !7205
  store i32 %dec, i32* %nregs, align 8, !dbg !7205
  br label %if.end, !dbg !7206

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !7207
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @keep_with_call_p(%struct.rtx_def* %insn) #0 !dbg !7208 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %i2 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !7211, metadata !DIExpression()), !dbg !7212
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7213
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !7213
  %bf.load = load i32, i32* %1, align 8, !dbg !7213
  %bf.clear = and i32 %bf.load, 65535, !dbg !7213
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7213
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7213

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7213
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7213
  %bf.load1 = load i32, i32* %3, align 8, !dbg !7213
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7213
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !7213
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !7213

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7213
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !7213
  %bf.load5 = load i32, i32* %5, align 8, !dbg !7213
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !7213
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !7213
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !7213

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7213
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !7213
  %bf.load9 = load i32, i32* %7, align 8, !dbg !7213
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !7213
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !7213
  br i1 %cmp11, label %land.lhs.true, label %if.end124, !dbg !7215

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7216
  %bf.load12 = load i32, i32* %9, align 8, !dbg !7216
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7216
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !7216
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !7216

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !7216
  %bf.load16 = load i32, i32* %11, align 8, !dbg !7216
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !7216
  %cmp18 = icmp eq i32 %bf.clear17, 7, !dbg !7216
  br i1 %cmp18, label %cond.true, label %lor.lhs.false19, !dbg !7216

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !7216
  %bf.load20 = load i32, i32* %13, align 8, !dbg !7216
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !7216
  %cmp22 = icmp eq i32 %bf.clear21, 9, !dbg !7216
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !7216

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !7216
  %bf.load24 = load i32, i32* %15, align 8, !dbg !7216
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !7216
  %cmp26 = icmp eq i32 %bf.clear25, 10, !dbg !7216
  br i1 %cmp26, label %cond.true, label %cond.false39, !dbg !7216

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !7216
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7216
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !7216
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7216
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7216
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !7216
  %bf.load27 = load i32, i32* %18, align 8, !dbg !7216
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7216
  %cmp29 = icmp eq i32 %bf.clear28, 23, !dbg !7216
  br i1 %cmp29, label %cond.true30, label %cond.false, !dbg !7216

cond.true30:                                      ; preds = %cond.true
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !7216
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !7216
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 5, !dbg !7216
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !7216
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !7216
  br label %cond.end, !dbg !7216

cond.false:                                       ; preds = %cond.true
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7216
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !7216
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !7216
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 5, !dbg !7216
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !7216
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !7216
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %21, %struct.rtx_def* %23), !dbg !7216
  br label %cond.end, !dbg !7216

cond.end:                                         ; preds = %cond.false, %cond.true30
  %cond = phi %struct.rtx_def* [ %20, %cond.true30 ], [ %call, %cond.false ], !dbg !7216
  br label %cond.end40, !dbg !7216

cond.false39:                                     ; preds = %lor.lhs.false23
  br label %cond.end40, !dbg !7216

cond.end40:                                       ; preds = %cond.false39, %cond.end
  %cond41 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false39 ], !dbg !7216
  store %struct.rtx_def* %cond41, %struct.rtx_def** %set, align 8, !dbg !7217
  %cmp42 = icmp ne %struct.rtx_def* %cond41, null, !dbg !7218
  br i1 %cmp42, label %if.then, label %if.end124, !dbg !7219

if.then:                                          ; preds = %cond.end40
  %24 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7220
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !7220
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !7220
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !7220
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !7220
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !7220
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !7220
  %bf.load47 = load i32, i32* %26, align 8, !dbg !7220
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !7220
  %cmp49 = icmp eq i32 %bf.clear48, 37, !dbg !7220
  br i1 %cmp49, label %land.lhs.true50, label %if.end, !dbg !7223

land.lhs.true50:                                  ; preds = %if.then
  %27 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7224
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !7224
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !7224
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !7224
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !7224
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !7224
  %call55 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !7224
  %cmp56 = icmp ult i32 %call55, 53, !dbg !7225
  br i1 %cmp56, label %land.lhs.true57, label %if.end, !dbg !7226

land.lhs.true57:                                  ; preds = %land.lhs.true50
  %29 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7227
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !7227
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !7227
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !7227
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !7227
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !7227
  %call62 = call i32 @rhs_regno(%struct.rtx_def* %30), !dbg !7227
  %idxprom = zext i32 %call62 to i64, !dbg !7228
  %arrayidx63 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !7228
  %31 = load i8, i8* %arrayidx63, align 1, !dbg !7228
  %conv = sext i8 %31 to i32, !dbg !7228
  %tobool = icmp ne i32 %conv, 0, !dbg !7228
  br i1 %tobool, label %land.lhs.true64, label %if.end, !dbg !7229

land.lhs.true64:                                  ; preds = %land.lhs.true57
  %32 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7230
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !7230
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !7230
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 1, !dbg !7230
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !7230
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !7230
  %call69 = call i32 @general_operand(%struct.rtx_def* %33, i32 0), !dbg !7231
  %tobool70 = icmp ne i32 %call69, 0, !dbg !7231
  br i1 %tobool70, label %if.then71, label %if.end, !dbg !7232

if.then71:                                        ; preds = %land.lhs.true64
  store i8 1, i8* %retval, align 1, !dbg !7233
  br label %return, !dbg !7233

if.end:                                           ; preds = %land.lhs.true64, %land.lhs.true57, %land.lhs.true50, %if.then
  %34 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7234
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !7234
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !7234
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 1, !dbg !7234
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !7234
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !7234
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !7234
  %bf.load76 = load i32, i32* %36, align 8, !dbg !7234
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !7234
  %cmp78 = icmp eq i32 %bf.clear77, 37, !dbg !7234
  br i1 %cmp78, label %land.lhs.true80, label %if.end107, !dbg !7236

land.lhs.true80:                                  ; preds = %if.end
  %37 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7237
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !7237
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !7237
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 1, !dbg !7237
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !7237
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !7237
  %call85 = call i32 @rhs_regno(%struct.rtx_def* %38), !dbg !7237
  %call86 = call zeroext i8 @ix86_function_value_regno_p(i32 %call85), !dbg !7237
  %conv87 = zext i8 %call86 to i32, !dbg !7237
  %tobool88 = icmp ne i32 %conv87, 0, !dbg !7237
  br i1 %tobool88, label %land.lhs.true89, label %if.end107, !dbg !7238

land.lhs.true89:                                  ; preds = %land.lhs.true80
  %39 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7239
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !7239
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !7239
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !7239
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !7239
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !7239
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !7239
  %bf.load94 = load i32, i32* %41, align 8, !dbg !7239
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !7239
  %cmp96 = icmp eq i32 %bf.clear95, 37, !dbg !7239
  br i1 %cmp96, label %land.lhs.true98, label %if.end107, !dbg !7240

land.lhs.true98:                                  ; preds = %land.lhs.true89
  %42 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7241
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !7241
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !7241
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 0, !dbg !7241
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !7241
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !7241
  %call103 = call i32 @rhs_regno(%struct.rtx_def* %43), !dbg !7241
  %cmp104 = icmp uge i32 %call103, 53, !dbg !7242
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !7243

if.then106:                                       ; preds = %land.lhs.true98
  store i8 1, i8* %retval, align 1, !dbg !7244
  br label %return, !dbg !7244

if.end107:                                        ; preds = %land.lhs.true98, %land.lhs.true89, %land.lhs.true80, %if.end
  %44 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7245
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !7245
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !7245
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 0, !dbg !7245
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !7245
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !7245
  %46 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7247
  %cmp112 = icmp eq %struct.rtx_def* %45, %46, !dbg !7248
  br i1 %cmp112, label %if.then114, label %if.end123, !dbg !7249

if.then114:                                       ; preds = %if.end107
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i2, metadata !7250, metadata !DIExpression()), !dbg !7252
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7253
  %call115 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %47), !dbg !7254
  store %struct.rtx_def* %call115, %struct.rtx_def** %i2, align 8, !dbg !7252
  %48 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !7255
  %tobool116 = icmp ne %struct.rtx_def* %48, null, !dbg !7255
  br i1 %tobool116, label %land.lhs.true117, label %if.end122, !dbg !7257

land.lhs.true117:                                 ; preds = %if.then114
  %49 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !7258
  %call118 = call zeroext i8 @keep_with_call_p(%struct.rtx_def* %49), !dbg !7259
  %conv119 = zext i8 %call118 to i32, !dbg !7259
  %tobool120 = icmp ne i32 %conv119, 0, !dbg !7259
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !7260

if.then121:                                       ; preds = %land.lhs.true117
  store i8 1, i8* %retval, align 1, !dbg !7261
  br label %return, !dbg !7261

if.end122:                                        ; preds = %land.lhs.true117, %if.then114
  br label %if.end123, !dbg !7262

if.end123:                                        ; preds = %if.end122, %if.end107
  br label %if.end124, !dbg !7263

if.end124:                                        ; preds = %if.end123, %cond.end40, %lor.lhs.false8
  store i8 0, i8* %retval, align 1, !dbg !7264
  br label %return, !dbg !7264

return:                                           ; preds = %if.end124, %if.then121, %if.then106, %if.then71
  %50 = load i8, i8* %retval, align 1, !dbg !7265
  ret i8 %50, !dbg !7265
}

declare dso_local i32 @general_operand(%struct.rtx_def*, i32) #2

declare dso_local zeroext i8 @ix86_function_value_regno_p(i32) #2

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @label_is_jump_target_p(%struct.rtx_def* %label, %struct.rtx_def* %jump_insn) #0 !dbg !7266 {
entry:
  %retval = alloca i8, align 1
  %label.addr = alloca %struct.rtx_def*, align 8
  %jump_insn.addr = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.rtx_def*, align 8
  %vec = alloca %struct.rtvec_def*, align 8
  %i = alloca i32, align 4
  %veclen = alloca i32, align 4
  store %struct.rtx_def* %label, %struct.rtx_def** %label.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %label.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  store %struct.rtx_def* %jump_insn, %struct.rtx_def** %jump_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %jump_insn.addr, metadata !7271, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.rtx_def*, %struct.rtx_def** %jump_insn.addr, align 8, !dbg !7275
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !7275
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7275
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !7275
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7275
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7275
  store %struct.rtx_def* %1, %struct.rtx_def** %tmp, align 8, !dbg !7274
  %2 = load %struct.rtx_def*, %struct.rtx_def** %label.addr, align 8, !dbg !7276
  %3 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !7278
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !7279
  br i1 %cmp, label %if.then, label %if.end, !dbg !7280

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !7281
  br label %return, !dbg !7281

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %jump_insn.addr, align 8, !dbg !7282
  %call = call zeroext i8 @tablejump_p(%struct.rtx_def* %4, %struct.rtx_def** null, %struct.rtx_def** %tmp), !dbg !7284
  %tobool = icmp ne i8 %call, 0, !dbg !7284
  br i1 %tobool, label %if.then1, label %if.end26, !dbg !7285

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %vec, metadata !7286, metadata !DIExpression()), !dbg !7288
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !7289
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !7289
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !7289
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 5, !dbg !7289
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !7289
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !7289
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7289
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !7289
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !7289
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !7289
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !7289
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 5, !dbg !7289
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !7289
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !7289
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7289
  %bf.load = load i32, i32* %9, align 8, !dbg !7289
  %bf.clear = and i32 %bf.load, 65535, !dbg !7289
  %cmp12 = icmp eq i32 %bf.clear, 21, !dbg !7289
  %conv = zext i1 %cmp12 to i32, !dbg !7289
  %idxprom = sext i32 %conv to i64, !dbg !7289
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 %idxprom, !dbg !7289
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !7289
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7289
  store %struct.rtvec_def* %10, %struct.rtvec_def** %vec, align 8, !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata i32* %veclen, metadata !7292, metadata !DIExpression()), !dbg !7293
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !7294
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 0, !dbg !7294
  %12 = load i32, i32* %num_elem, align 8, !dbg !7294
  store i32 %12, i32* %veclen, align 4, !dbg !7293
  store i32 0, i32* %i, align 4, !dbg !7295
  br label %for.cond, !dbg !7297

for.cond:                                         ; preds = %for.inc, %if.then1
  %13 = load i32, i32* %i, align 4, !dbg !7298
  %14 = load i32, i32* %veclen, align 4, !dbg !7300
  %cmp14 = icmp slt i32 %13, %14, !dbg !7301
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7302

for.body:                                         ; preds = %for.cond
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !7303
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !7303
  %16 = load i32, i32* %i, align 4, !dbg !7303
  %idxprom16 = sext i32 %16 to i64, !dbg !7303
  %arrayidx17 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom16, !dbg !7303
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8, !dbg !7303
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !7303
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !7303
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !7303
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !7303
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !7303
  %19 = load %struct.rtx_def*, %struct.rtx_def** %label.addr, align 8, !dbg !7305
  %cmp22 = icmp eq %struct.rtx_def* %18, %19, !dbg !7306
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7307

if.then24:                                        ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !7308
  br label %return, !dbg !7308

if.end25:                                         ; preds = %for.body
  br label %for.inc, !dbg !7305

for.inc:                                          ; preds = %if.end25
  %20 = load i32, i32* %i, align 4, !dbg !7309
  %inc = add nsw i32 %20, 1, !dbg !7309
  store i32 %inc, i32* %i, align 4, !dbg !7309
  br label %for.cond, !dbg !7310, !llvm.loop !7311

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !7313

if.end26:                                         ; preds = %for.end, %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %jump_insn.addr, align 8, !dbg !7314
  %22 = load %struct.rtx_def*, %struct.rtx_def** %label.addr, align 8, !dbg !7316
  %call27 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %21, i32 9, %struct.rtx_def* %22), !dbg !7317
  %tobool28 = icmp ne %struct.rtx_def* %call27, null, !dbg !7317
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !7318

if.then29:                                        ; preds = %if.end26
  store i8 1, i8* %retval, align 1, !dbg !7319
  br label %return, !dbg !7319

if.end30:                                         ; preds = %if.end26
  store i8 0, i8* %retval, align 1, !dbg !7320
  br label %return, !dbg !7320

return:                                           ; preds = %if.end30, %if.then29, %if.then24, %if.then
  %23 = load i8, i8* %retval, align 1, !dbg !7321
  ret i8 %23, !dbg !7321
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rtx_cost(%struct.rtx_def* %x, i32 %outer_code, i8 zeroext %speed) #0 !dbg !7322 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %outer_code.addr = alloca i32, align 4
  %speed.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %total = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7325, metadata !DIExpression()), !dbg !7326
  store i32 %outer_code, i32* %outer_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outer_code.addr, metadata !7327, metadata !DIExpression()), !dbg !7328
  store i8 %speed, i8* %speed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %speed.addr, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata i32* %total, metadata !7339, metadata !DIExpression()), !dbg !7340
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7341
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !7343
  br i1 %cmp, label %if.then, label %if.end, !dbg !7344

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7346
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !7346
  %bf.load = load i32, i32* %2, align 8, !dbg !7346
  %bf.clear = and i32 %bf.load, 65535, !dbg !7346
  store i32 %bf.clear, i32* %code, align 4, !dbg !7347
  %3 = load i32, i32* %code, align 4, !dbg !7348
  switch i32 %3, label %sw.default [
    i32 52, label %sw.bb
    i32 55, label %sw.bb1
    i32 59, label %sw.bb1
    i32 58, label %sw.bb1
    i32 60, label %sw.bb1
    i32 24, label %sw.bb2
  ], !dbg !7349

sw.bb:                                            ; preds = %if.end
  store i32 20, i32* %total, align 4, !dbg !7350
  br label %sw.epilog, !dbg !7352

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  store i32 28, i32* %total, align 4, !dbg !7353
  br label %sw.epilog, !dbg !7354

sw.bb2:                                           ; preds = %if.end
  store i32 0, i32* %total, align 4, !dbg !7355
  br label %sw.epilog, !dbg !7356

sw.default:                                       ; preds = %if.end
  store i32 4, i32* %total, align 4, !dbg !7357
  br label %sw.epilog, !dbg !7358

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %4 = load i32, i32* %code, align 4, !dbg !7359
  switch i32 %4, label %sw.default17 [
    i32 37, label %sw.bb3
    i32 39, label %sw.bb4
  ], !dbg !7360

sw.bb3:                                           ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !7361
  br label %return, !dbg !7361

sw.bb4:                                           ; preds = %sw.epilog
  store i32 0, i32* %total, align 4, !dbg !7363
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7364
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !7364
  %bf.load5 = load i32, i32* %6, align 8, !dbg !7364
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !7364
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !7364
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7364
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !7364
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7364
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7364
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7364
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7364
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7364
  %bf.load7 = load i32, i32* %9, align 8, !dbg !7364
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !7364
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !7364
  %call = call zeroext i8 @ix86_modes_tieable_p(i32 %bf.clear6, i32 %bf.clear9), !dbg !7364
  %tobool = icmp ne i8 %call, 0, !dbg !7364
  br i1 %tobool, label %if.end16, label %if.then10, !dbg !7366

if.then10:                                        ; preds = %sw.bb4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7367
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !7367
  %bf.load11 = load i32, i32* %11, align 8, !dbg !7367
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !7367
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !7367
  %idxprom = zext i32 %bf.clear13 to i64, !dbg !7367
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7367
  %12 = load i8, i8* %arrayidx14, align 1, !dbg !7367
  %conv = zext i8 %12 to i16, !dbg !7367
  %conv15 = zext i16 %conv to i32, !dbg !7367
  %div = sdiv i32 %conv15, 4, !dbg !7367
  %add = add nsw i32 2, %div, !dbg !7367
  %mul = mul nsw i32 %add, 4, !dbg !7367
  store i32 %mul, i32* %retval, align 4, !dbg !7368
  br label %return, !dbg !7368

if.end16:                                         ; preds = %sw.bb4
  br label %sw.epilog22, !dbg !7369

sw.default17:                                     ; preds = %sw.epilog
  %13 = load i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 60), align 8, !dbg !7370
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7372
  %15 = load i32, i32* %code, align 4, !dbg !7373
  %16 = load i32, i32* %outer_code.addr, align 4, !dbg !7374
  %17 = load i8, i8* %speed.addr, align 1, !dbg !7375
  %call18 = call zeroext i8 %13(%struct.rtx_def* %14, i32 %15, i32 %16, i32* %total, i8 zeroext %17), !dbg !7376
  %tobool19 = icmp ne i8 %call18, 0, !dbg !7376
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7377

if.then20:                                        ; preds = %sw.default17
  %18 = load i32, i32* %total, align 4, !dbg !7378
  store i32 %18, i32* %retval, align 4, !dbg !7379
  br label %return, !dbg !7379

if.end21:                                         ; preds = %sw.default17
  br label %sw.epilog22, !dbg !7380

sw.epilog22:                                      ; preds = %if.end21, %if.end16
  %19 = load i32, i32* %code, align 4, !dbg !7381
  %idxprom23 = sext i32 %19 to i64, !dbg !7381
  %arrayidx24 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom23, !dbg !7381
  %20 = load i8*, i8** %arrayidx24, align 8, !dbg !7381
  store i8* %20, i8** %fmt, align 8, !dbg !7382
  %21 = load i32, i32* %code, align 4, !dbg !7383
  %idxprom25 = sext i32 %21 to i64, !dbg !7383
  %arrayidx26 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom25, !dbg !7383
  %22 = load i8, i8* %arrayidx26, align 1, !dbg !7383
  %conv27 = zext i8 %22 to i32, !dbg !7383
  %sub = sub nsw i32 %conv27, 1, !dbg !7385
  store i32 %sub, i32* %i, align 4, !dbg !7386
  br label %for.cond, !dbg !7387

for.cond:                                         ; preds = %for.inc68, %sw.epilog22
  %23 = load i32, i32* %i, align 4, !dbg !7388
  %cmp28 = icmp sge i32 %23, 0, !dbg !7390
  br i1 %cmp28, label %for.body, label %for.end69, !dbg !7391

for.body:                                         ; preds = %for.cond
  %24 = load i8*, i8** %fmt, align 8, !dbg !7392
  %25 = load i32, i32* %i, align 4, !dbg !7394
  %idxprom30 = sext i32 %25 to i64, !dbg !7392
  %arrayidx31 = getelementptr inbounds i8, i8* %24, i64 %idxprom30, !dbg !7392
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !7392
  %conv32 = sext i8 %26 to i32, !dbg !7392
  %cmp33 = icmp eq i32 %conv32, 101, !dbg !7395
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !7396

if.then35:                                        ; preds = %for.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7397
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !7397
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !7397
  %28 = load i32, i32* %i, align 4, !dbg !7397
  %idxprom38 = sext i32 %28 to i64, !dbg !7397
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 %idxprom38, !dbg !7397
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !7397
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !7397
  %30 = load i32, i32* %code, align 4, !dbg !7398
  %31 = load i8, i8* %speed.addr, align 1, !dbg !7399
  %call41 = call i32 @rtx_cost(%struct.rtx_def* %29, i32 %30, i8 zeroext %31), !dbg !7400
  %32 = load i32, i32* %total, align 4, !dbg !7401
  %add42 = add nsw i32 %32, %call41, !dbg !7401
  store i32 %add42, i32* %total, align 4, !dbg !7401
  br label %if.end67, !dbg !7402

if.else:                                          ; preds = %for.body
  %33 = load i8*, i8** %fmt, align 8, !dbg !7403
  %34 = load i32, i32* %i, align 4, !dbg !7405
  %idxprom43 = sext i32 %34 to i64, !dbg !7403
  %arrayidx44 = getelementptr inbounds i8, i8* %33, i64 %idxprom43, !dbg !7403
  %35 = load i8, i8* %arrayidx44, align 1, !dbg !7403
  %conv45 = sext i8 %35 to i32, !dbg !7403
  %cmp46 = icmp eq i32 %conv45, 69, !dbg !7406
  br i1 %cmp46, label %if.then48, label %if.end66, !dbg !7407

if.then48:                                        ; preds = %if.else
  store i32 0, i32* %j, align 4, !dbg !7408
  br label %for.cond49, !dbg !7410

for.cond49:                                       ; preds = %for.inc, %if.then48
  %36 = load i32, i32* %j, align 4, !dbg !7411
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7413
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !7413
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !7413
  %38 = load i32, i32* %i, align 4, !dbg !7413
  %idxprom52 = sext i32 %38 to i64, !dbg !7413
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 %idxprom52, !dbg !7413
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtvec_def**, !dbg !7413
  %39 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7413
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %39, i32 0, i32 0, !dbg !7413
  %40 = load i32, i32* %num_elem, align 8, !dbg !7413
  %cmp54 = icmp slt i32 %36, %40, !dbg !7414
  br i1 %cmp54, label %for.body56, label %for.end, !dbg !7415

for.body56:                                       ; preds = %for.cond49
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7416
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !7416
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !7416
  %42 = load i32, i32* %i, align 4, !dbg !7416
  %idxprom59 = sext i32 %42 to i64, !dbg !7416
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 %idxprom59, !dbg !7416
  %rt_rtvec61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**, !dbg !7416
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec61, align 8, !dbg !7416
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i32 0, i32 1, !dbg !7416
  %44 = load i32, i32* %j, align 4, !dbg !7416
  %idxprom62 = sext i32 %44 to i64, !dbg !7416
  %arrayidx63 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom62, !dbg !7416
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx63, align 8, !dbg !7416
  %46 = load i32, i32* %code, align 4, !dbg !7417
  %47 = load i8, i8* %speed.addr, align 1, !dbg !7418
  %call64 = call i32 @rtx_cost(%struct.rtx_def* %45, i32 %46, i8 zeroext %47), !dbg !7419
  %48 = load i32, i32* %total, align 4, !dbg !7420
  %add65 = add nsw i32 %48, %call64, !dbg !7420
  store i32 %add65, i32* %total, align 4, !dbg !7420
  br label %for.inc, !dbg !7421

for.inc:                                          ; preds = %for.body56
  %49 = load i32, i32* %j, align 4, !dbg !7422
  %inc = add nsw i32 %49, 1, !dbg !7422
  store i32 %inc, i32* %j, align 4, !dbg !7422
  br label %for.cond49, !dbg !7423, !llvm.loop !7424

for.end:                                          ; preds = %for.cond49
  br label %if.end66, !dbg !7425

if.end66:                                         ; preds = %for.end, %if.else
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then35
  br label %for.inc68, !dbg !7426

for.inc68:                                        ; preds = %if.end67
  %50 = load i32, i32* %i, align 4, !dbg !7427
  %dec = add nsw i32 %50, -1, !dbg !7427
  store i32 %dec, i32* %i, align 4, !dbg !7427
  br label %for.cond, !dbg !7428, !llvm.loop !7429

for.end69:                                        ; preds = %for.cond
  %51 = load i32, i32* %total, align 4, !dbg !7431
  store i32 %51, i32* %retval, align 4, !dbg !7432
  br label %return, !dbg !7432

return:                                           ; preds = %for.end69, %if.then20, %if.then10, %sw.bb3, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !7433
  ret i32 %52, !dbg !7433
}

declare dso_local zeroext i8 @ix86_modes_tieable_p(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @address_cost(%struct.rtx_def* %x, i32 %mode, i8 zeroext %as, i8 zeroext %speed) #0 !dbg !7434 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %as.addr = alloca i8, align 1
  %speed.addr = alloca i8, align 1
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i8 %as, i8* %as.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store i8 %speed, i8* %speed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %speed.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7446
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7448
  %2 = load i8, i8* %as.addr, align 1, !dbg !7449
  %call = call i32 @memory_address_addr_space_p(i32 %0, %struct.rtx_def* %1, i8 zeroext %2), !dbg !7450
  %tobool = icmp ne i32 %call, 0, !dbg !7450
  br i1 %tobool, label %if.end, label %if.then, !dbg !7451

if.then:                                          ; preds = %entry
  store i32 1000, i32* %retval, align 4, !dbg !7452
  br label %return, !dbg !7452

if.end:                                           ; preds = %entry
  %3 = load i32 (%struct.rtx_def*, i8)*, i32 (%struct.rtx_def*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 61), align 8, !dbg !7453
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7454
  %5 = load i8, i8* %speed.addr, align 1, !dbg !7455
  %call1 = call i32 %3(%struct.rtx_def* %4, i8 zeroext %5), !dbg !7456
  store i32 %call1, i32* %retval, align 4, !dbg !7457
  br label %return, !dbg !7457

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7458
  ret i32 %6, !dbg !7458
}

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @default_address_cost(%struct.rtx_def* %x, i8 zeroext %speed) #0 !dbg !7459 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %speed.addr = alloca i8, align 1
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  store i8 %speed, i8* %speed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %speed.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7466
  %1 = load i8, i8* %speed.addr, align 1, !dbg !7467
  %call = call i32 @rtx_cost(%struct.rtx_def* %0, i32 43, i8 zeroext %1), !dbg !7468
  ret i32 %call, !dbg !7469
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @nonzero_bits(%struct.rtx_def* %x, i32 %mode) #0 !dbg !7470 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7473, metadata !DIExpression()), !dbg !7474
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7475, metadata !DIExpression()), !dbg !7476
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7477
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7478
  %call = call i64 @cached_nonzero_bits(%struct.rtx_def* %0, i32 %1, %struct.rtx_def* null, i32 0, i64 0), !dbg !7479
  ret i64 %call, !dbg !7480
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @cached_nonzero_bits(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #0 !dbg !7481 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %known_x.addr = alloca %struct.rtx_def*, align 8
  %known_mode.addr = alloca i32, align 4
  %known_ret.addr = alloca i64, align 8
  %x0 = alloca %struct.rtx_def*, align 8
  %x1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  store %struct.rtx_def* %known_x, %struct.rtx_def** %known_x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %known_x.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  store i32 %known_mode, i32* %known_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_mode.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  store i64 %known_ret, i64* %known_ret.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %known_ret.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7494
  %1 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7496
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !7497
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7498

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7499
  %3 = load i32, i32* %known_mode.addr, align 4, !dbg !7500
  %cmp1 = icmp eq i32 %2, %3, !dbg !7501
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7502

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, i64* %known_ret.addr, align 8, !dbg !7503
  store i64 %4, i64* %retval, align 8, !dbg !7504
  br label %return, !dbg !7504

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7505
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !7505
  %bf.load = load i32, i32* %6, align 8, !dbg !7505
  %bf.clear = and i32 %bf.load, 65535, !dbg !7505
  %idxprom = sext i32 %bf.clear to i64, !dbg !7505
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7505
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7505
  %and = and i32 %7, -2, !dbg !7505
  %cmp2 = icmp eq i32 %and, 2, !dbg !7505
  br i1 %cmp2, label %if.then3, label %if.end56, !dbg !7507

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x0, metadata !7508, metadata !DIExpression()), !dbg !7510
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7511
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !7511
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7511
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7511
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !7511
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7511
  store %struct.rtx_def* %9, %struct.rtx_def** %x0, align 8, !dbg !7510
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x1, metadata !7512, metadata !DIExpression()), !dbg !7513
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7514
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !7514
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !7514
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !7514
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !7514
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !7514
  store %struct.rtx_def* %11, %struct.rtx_def** %x1, align 8, !dbg !7513
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7515
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7517
  %cmp9 = icmp eq %struct.rtx_def* %12, %13, !dbg !7518
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !7519

if.then10:                                        ; preds = %if.then3
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7520
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7521
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7522
  %17 = load i32, i32* %mode.addr, align 4, !dbg !7523
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7524
  %19 = load i32, i32* %mode.addr, align 4, !dbg !7525
  %20 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7526
  %21 = load i32, i32* %known_mode.addr, align 4, !dbg !7527
  %22 = load i64, i64* %known_ret.addr, align 8, !dbg !7528
  %call = call i64 @cached_nonzero_bits(%struct.rtx_def* %18, i32 %19, %struct.rtx_def* %20, i32 %21, i64 %22), !dbg !7529
  %call11 = call i64 @nonzero_bits1(%struct.rtx_def* %14, i32 %15, %struct.rtx_def* %16, i32 %17, i64 %call), !dbg !7530
  store i64 %call11, i64* %retval, align 8, !dbg !7531
  br label %return, !dbg !7531

if.end12:                                         ; preds = %if.then3
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7532
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !7532
  %bf.load13 = load i32, i32* %24, align 8, !dbg !7532
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7532
  %idxprom15 = sext i32 %bf.clear14 to i64, !dbg !7532
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !7532
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !7532
  %and17 = and i32 %25, -2, !dbg !7532
  %cmp18 = icmp eq i32 %and17, 2, !dbg !7532
  br i1 %cmp18, label %land.lhs.true19, label %if.end33, !dbg !7534

land.lhs.true19:                                  ; preds = %if.end12
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7535
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7536
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !7536
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !7536
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !7536
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !7536
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7536
  %cmp24 = icmp eq %struct.rtx_def* %26, %28, !dbg !7537
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !7538

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7539
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7540
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !7540
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7540
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !7540
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !7540
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7540
  %cmp29 = icmp eq %struct.rtx_def* %29, %31, !dbg !7541
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !7542

if.then30:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7543
  %33 = load i32, i32* %mode.addr, align 4, !dbg !7544
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7545
  %35 = load i32, i32* %mode.addr, align 4, !dbg !7546
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7547
  %37 = load i32, i32* %mode.addr, align 4, !dbg !7548
  %38 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7549
  %39 = load i32, i32* %known_mode.addr, align 4, !dbg !7550
  %40 = load i64, i64* %known_ret.addr, align 8, !dbg !7551
  %call31 = call i64 @cached_nonzero_bits(%struct.rtx_def* %36, i32 %37, %struct.rtx_def* %38, i32 %39, i64 %40), !dbg !7552
  %call32 = call i64 @nonzero_bits1(%struct.rtx_def* %32, i32 %33, %struct.rtx_def* %34, i32 %35, i64 %call31), !dbg !7553
  store i64 %call32, i64* %retval, align 8, !dbg !7554
  br label %return, !dbg !7554

if.end33:                                         ; preds = %lor.lhs.false, %if.end12
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7555
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !7555
  %bf.load34 = load i32, i32* %42, align 8, !dbg !7555
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !7555
  %idxprom36 = sext i32 %bf.clear35 to i64, !dbg !7555
  %arrayidx37 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom36, !dbg !7555
  %43 = load i32, i32* %arrayidx37, align 4, !dbg !7555
  %and38 = and i32 %43, -2, !dbg !7555
  %cmp39 = icmp eq i32 %and38, 2, !dbg !7555
  br i1 %cmp39, label %land.lhs.true40, label %if.end55, !dbg !7557

land.lhs.true40:                                  ; preds = %if.end33
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7558
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7559
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !7559
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !7559
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !7559
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !7559
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !7559
  %cmp45 = icmp eq %struct.rtx_def* %44, %46, !dbg !7560
  br i1 %cmp45, label %if.then52, label %lor.lhs.false46, !dbg !7561

lor.lhs.false46:                                  ; preds = %land.lhs.true40
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7562
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7563
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !7563
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !7563
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !7563
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !7563
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !7563
  %cmp51 = icmp eq %struct.rtx_def* %47, %49, !dbg !7564
  br i1 %cmp51, label %if.then52, label %if.end55, !dbg !7565

if.then52:                                        ; preds = %lor.lhs.false46, %land.lhs.true40
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7566
  %51 = load i32, i32* %mode.addr, align 4, !dbg !7567
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7568
  %53 = load i32, i32* %mode.addr, align 4, !dbg !7569
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7570
  %55 = load i32, i32* %mode.addr, align 4, !dbg !7571
  %56 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7572
  %57 = load i32, i32* %known_mode.addr, align 4, !dbg !7573
  %58 = load i64, i64* %known_ret.addr, align 8, !dbg !7574
  %call53 = call i64 @cached_nonzero_bits(%struct.rtx_def* %54, i32 %55, %struct.rtx_def* %56, i32 %57, i64 %58), !dbg !7575
  %call54 = call i64 @nonzero_bits1(%struct.rtx_def* %50, i32 %51, %struct.rtx_def* %52, i32 %53, i64 %call53), !dbg !7576
  store i64 %call54, i64* %retval, align 8, !dbg !7577
  br label %return, !dbg !7577

if.end55:                                         ; preds = %lor.lhs.false46, %if.end33
  br label %if.end56, !dbg !7578

if.end56:                                         ; preds = %if.end55, %if.end
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7579
  %60 = load i32, i32* %mode.addr, align 4, !dbg !7580
  %61 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7581
  %62 = load i32, i32* %known_mode.addr, align 4, !dbg !7582
  %63 = load i64, i64* %known_ret.addr, align 8, !dbg !7583
  %call57 = call i64 @nonzero_bits1(%struct.rtx_def* %59, i32 %60, %struct.rtx_def* %61, i32 %62, i64 %63), !dbg !7584
  store i64 %call57, i64* %retval, align 8, !dbg !7585
  br label %return, !dbg !7585

return:                                           ; preds = %if.end56, %if.then52, %if.then30, %if.then10, %if.then
  %64 = load i64, i64* %retval, align 8, !dbg !7586
  ret i64 %64, !dbg !7586
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode) #0 !dbg !7587 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7590, metadata !DIExpression()), !dbg !7591
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7594
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7595
  %call = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %0, i32 %1, %struct.rtx_def* null, i32 0, i32 0), !dbg !7596
  ret i32 %call, !dbg !7597
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cached_num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #0 !dbg !7598 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %known_x.addr = alloca %struct.rtx_def*, align 8
  %known_mode.addr = alloca i32, align 4
  %known_ret.addr = alloca i32, align 4
  %x0 = alloca %struct.rtx_def*, align 8
  %x1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7601, metadata !DIExpression()), !dbg !7602
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  store %struct.rtx_def* %known_x, %struct.rtx_def** %known_x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %known_x.addr, metadata !7605, metadata !DIExpression()), !dbg !7606
  store i32 %known_mode, i32* %known_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_mode.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  store i32 %known_ret, i32* %known_ret.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_ret.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7611
  %1 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7613
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !7614
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7615

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7616
  %3 = load i32, i32* %known_mode.addr, align 4, !dbg !7617
  %cmp1 = icmp eq i32 %2, %3, !dbg !7618
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7619

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %known_ret.addr, align 4, !dbg !7620
  store i32 %4, i32* %retval, align 4, !dbg !7621
  br label %return, !dbg !7621

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7622
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !7622
  %bf.load = load i32, i32* %6, align 8, !dbg !7622
  %bf.clear = and i32 %bf.load, 65535, !dbg !7622
  %idxprom = sext i32 %bf.clear to i64, !dbg !7622
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7622
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7622
  %and = and i32 %7, -2, !dbg !7622
  %cmp2 = icmp eq i32 %and, 2, !dbg !7622
  br i1 %cmp2, label %if.then3, label %if.end56, !dbg !7624

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x0, metadata !7625, metadata !DIExpression()), !dbg !7627
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7628
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !7628
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7628
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7628
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !7628
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7628
  store %struct.rtx_def* %9, %struct.rtx_def** %x0, align 8, !dbg !7627
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x1, metadata !7629, metadata !DIExpression()), !dbg !7630
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7631
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !7631
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !7631
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !7631
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !7631
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !7631
  store %struct.rtx_def* %11, %struct.rtx_def** %x1, align 8, !dbg !7630
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7632
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7634
  %cmp9 = icmp eq %struct.rtx_def* %12, %13, !dbg !7635
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !7636

if.then10:                                        ; preds = %if.then3
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7637
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7638
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7639
  %17 = load i32, i32* %mode.addr, align 4, !dbg !7640
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7641
  %19 = load i32, i32* %mode.addr, align 4, !dbg !7642
  %20 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7643
  %21 = load i32, i32* %known_mode.addr, align 4, !dbg !7644
  %22 = load i32, i32* %known_ret.addr, align 4, !dbg !7645
  %call = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %18, i32 %19, %struct.rtx_def* %20, i32 %21, i32 %22), !dbg !7646
  %call11 = call i32 @num_sign_bit_copies1(%struct.rtx_def* %14, i32 %15, %struct.rtx_def* %16, i32 %17, i32 %call), !dbg !7647
  store i32 %call11, i32* %retval, align 4, !dbg !7648
  br label %return, !dbg !7648

if.end12:                                         ; preds = %if.then3
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7649
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !7649
  %bf.load13 = load i32, i32* %24, align 8, !dbg !7649
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7649
  %idxprom15 = sext i32 %bf.clear14 to i64, !dbg !7649
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !7649
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !7649
  %and17 = and i32 %25, -2, !dbg !7649
  %cmp18 = icmp eq i32 %and17, 2, !dbg !7649
  br i1 %cmp18, label %land.lhs.true19, label %if.end33, !dbg !7651

land.lhs.true19:                                  ; preds = %if.end12
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7652
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7653
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !7653
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !7653
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !7653
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !7653
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7653
  %cmp24 = icmp eq %struct.rtx_def* %26, %28, !dbg !7654
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !7655

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7656
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7657
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !7657
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7657
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !7657
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !7657
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7657
  %cmp29 = icmp eq %struct.rtx_def* %29, %31, !dbg !7658
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !7659

if.then30:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7660
  %33 = load i32, i32* %mode.addr, align 4, !dbg !7661
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7662
  %35 = load i32, i32* %mode.addr, align 4, !dbg !7663
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7664
  %37 = load i32, i32* %mode.addr, align 4, !dbg !7665
  %38 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7666
  %39 = load i32, i32* %known_mode.addr, align 4, !dbg !7667
  %40 = load i32, i32* %known_ret.addr, align 4, !dbg !7668
  %call31 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %36, i32 %37, %struct.rtx_def* %38, i32 %39, i32 %40), !dbg !7669
  %call32 = call i32 @num_sign_bit_copies1(%struct.rtx_def* %32, i32 %33, %struct.rtx_def* %34, i32 %35, i32 %call31), !dbg !7670
  store i32 %call32, i32* %retval, align 4, !dbg !7671
  br label %return, !dbg !7671

if.end33:                                         ; preds = %lor.lhs.false, %if.end12
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7672
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !7672
  %bf.load34 = load i32, i32* %42, align 8, !dbg !7672
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !7672
  %idxprom36 = sext i32 %bf.clear35 to i64, !dbg !7672
  %arrayidx37 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom36, !dbg !7672
  %43 = load i32, i32* %arrayidx37, align 4, !dbg !7672
  %and38 = and i32 %43, -2, !dbg !7672
  %cmp39 = icmp eq i32 %and38, 2, !dbg !7672
  br i1 %cmp39, label %land.lhs.true40, label %if.end55, !dbg !7674

land.lhs.true40:                                  ; preds = %if.end33
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7675
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7676
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !7676
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !7676
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !7676
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !7676
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !7676
  %cmp45 = icmp eq %struct.rtx_def* %44, %46, !dbg !7677
  br i1 %cmp45, label %if.then52, label %lor.lhs.false46, !dbg !7678

lor.lhs.false46:                                  ; preds = %land.lhs.true40
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7679
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !7680
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !7680
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !7680
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !7680
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !7680
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !7680
  %cmp51 = icmp eq %struct.rtx_def* %47, %49, !dbg !7681
  br i1 %cmp51, label %if.then52, label %if.end55, !dbg !7682

if.then52:                                        ; preds = %lor.lhs.false46, %land.lhs.true40
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7683
  %51 = load i32, i32* %mode.addr, align 4, !dbg !7684
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7685
  %53 = load i32, i32* %mode.addr, align 4, !dbg !7686
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x0, align 8, !dbg !7687
  %55 = load i32, i32* %mode.addr, align 4, !dbg !7688
  %56 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7689
  %57 = load i32, i32* %known_mode.addr, align 4, !dbg !7690
  %58 = load i32, i32* %known_ret.addr, align 4, !dbg !7691
  %call53 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %54, i32 %55, %struct.rtx_def* %56, i32 %57, i32 %58), !dbg !7692
  %call54 = call i32 @num_sign_bit_copies1(%struct.rtx_def* %50, i32 %51, %struct.rtx_def* %52, i32 %53, i32 %call53), !dbg !7693
  store i32 %call54, i32* %retval, align 4, !dbg !7694
  br label %return, !dbg !7694

if.end55:                                         ; preds = %lor.lhs.false46, %if.end33
  br label %if.end56, !dbg !7695

if.end56:                                         ; preds = %if.end55, %if.end
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7696
  %60 = load i32, i32* %mode.addr, align 4, !dbg !7697
  %61 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !7698
  %62 = load i32, i32* %known_mode.addr, align 4, !dbg !7699
  %63 = load i32, i32* %known_ret.addr, align 4, !dbg !7700
  %call57 = call i32 @num_sign_bit_copies1(%struct.rtx_def* %59, i32 %60, %struct.rtx_def* %61, i32 %62, i32 %63), !dbg !7701
  store i32 %call57, i32* %retval, align 4, !dbg !7702
  br label %return, !dbg !7702

return:                                           ; preds = %if.end56, %if.then52, %if.then30, %if.then10, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !7703
  ret i32 %64, !dbg !7703
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @insn_rtx_cost(%struct.rtx_def* %pat, i8 zeroext %speed) #0 !dbg !7704 {
entry:
  %retval = alloca i32, align 4
  %pat.addr = alloca %struct.rtx_def*, align 8
  %speed.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %cost = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat.addr, metadata !7705, metadata !DIExpression()), !dbg !7706
  store i8 %speed, i8* %speed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %speed.addr, metadata !7707, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7709, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !7713, metadata !DIExpression()), !dbg !7714
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !7715
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !7715
  %bf.load = load i32, i32* %1, align 8, !dbg !7715
  %bf.clear = and i32 %bf.load, 65535, !dbg !7715
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !7717
  br i1 %cmp, label %if.then, label %if.else, !dbg !7718

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !7719
  store %struct.rtx_def* %2, %struct.rtx_def** %set, align 8, !dbg !7720
  br label %if.end22, !dbg !7721

if.else:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !7722
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !7722
  %bf.load1 = load i32, i32* %4, align 8, !dbg !7722
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7722
  %cmp3 = icmp eq i32 %bf.clear2, 15, !dbg !7724
  br i1 %cmp3, label %if.then4, label %if.else20, !dbg !7725

if.then4:                                         ; preds = %if.else
  store %struct.rtx_def* null, %struct.rtx_def** %set, align 8, !dbg !7726
  store i32 0, i32* %i, align 4, !dbg !7728
  br label %for.cond, !dbg !7730

for.cond:                                         ; preds = %for.inc, %if.then4
  %5 = load i32, i32* %i, align 4, !dbg !7731
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !7733
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7733
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7733
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7733
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !7733
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7733
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i32 0, i32 0, !dbg !7733
  %8 = load i32, i32* %num_elem, align 8, !dbg !7733
  %cmp5 = icmp slt i32 %5, %8, !dbg !7734
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7735

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7736, metadata !DIExpression()), !dbg !7738
  %9 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr, align 8, !dbg !7739
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !7739
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !7739
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !7739
  %rt_rtvec9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtvec_def**, !dbg !7739
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec9, align 8, !dbg !7739
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i32 0, i32 1, !dbg !7739
  %11 = load i32, i32* %i, align 4, !dbg !7739
  %idxprom = sext i32 %11 to i64, !dbg !7739
  %arrayidx10 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !7739
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !7739
  store %struct.rtx_def* %12, %struct.rtx_def** %x, align 8, !dbg !7738
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7740
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !7740
  %bf.load11 = load i32, i32* %14, align 8, !dbg !7740
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !7740
  %cmp13 = icmp eq i32 %bf.clear12, 23, !dbg !7742
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !7743

if.then14:                                        ; preds = %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7744
  %tobool = icmp ne %struct.rtx_def* %15, null, !dbg !7744
  br i1 %tobool, label %if.then15, label %if.end, !dbg !7747

if.then15:                                        ; preds = %if.then14
  store i32 0, i32* %retval, align 4, !dbg !7748
  br label %return, !dbg !7748

if.end:                                           ; preds = %if.then14
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7749
  store %struct.rtx_def* %16, %struct.rtx_def** %set, align 8, !dbg !7750
  br label %if.end16, !dbg !7751

if.end16:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7752

for.inc:                                          ; preds = %if.end16
  %17 = load i32, i32* %i, align 4, !dbg !7753
  %inc = add nsw i32 %17, 1, !dbg !7753
  store i32 %inc, i32* %i, align 4, !dbg !7753
  br label %for.cond, !dbg !7754, !llvm.loop !7755

for.end:                                          ; preds = %for.cond
  %18 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7757
  %tobool17 = icmp ne %struct.rtx_def* %18, null, !dbg !7757
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7759

if.then18:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !7760
  br label %return, !dbg !7760

if.end19:                                         ; preds = %for.end
  br label %if.end21, !dbg !7761

if.else20:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7762
  br label %return, !dbg !7762

if.end21:                                         ; preds = %if.end19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7763
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !7763
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !7763
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 1, !dbg !7763
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !7763
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7763
  %21 = load i8, i8* %speed.addr, align 1, !dbg !7764
  %call = call i32 @rtx_cost(%struct.rtx_def* %20, i32 23, i8 zeroext %21), !dbg !7765
  store i32 %call, i32* %cost, align 4, !dbg !7766
  %22 = load i32, i32* %cost, align 4, !dbg !7767
  %cmp26 = icmp sgt i32 %22, 0, !dbg !7768
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !7767

cond.true:                                        ; preds = %if.end22
  %23 = load i32, i32* %cost, align 4, !dbg !7769
  br label %cond.end, !dbg !7767

cond.false:                                       ; preds = %if.end22
  br label %cond.end, !dbg !7767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ 4, %cond.false ], !dbg !7767
  store i32 %cond, i32* %retval, align 4, !dbg !7770
  br label %return, !dbg !7770

return:                                           ; preds = %cond.end, %if.else20, %if.then18, %if.then15
  %24 = load i32, i32* %retval, align 4, !dbg !7771
  ret i32 %24, !dbg !7771
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %insn, %struct.rtx_def* %cond, i32 %reverse, %struct.rtx_def** %earliest, %struct.rtx_def* %want_reg, i32 %allow_cc_mode, i32 %valid_at_insn_p) #0 !dbg !7772 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %cond.addr = alloca %struct.rtx_def*, align 8
  %reverse.addr = alloca i32, align 4
  %earliest.addr = alloca %struct.rtx_def**, align 8
  %want_reg.addr = alloca %struct.rtx_def*, align 8
  %allow_cc_mode.addr = alloca i32, align 4
  %valid_at_insn_p.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %prev = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %reverse_code = alloca i32, align 4
  %mode = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %inner_mode = alloca i32, align 4
  %const_val = alloca i64, align 8
  %uconst_val = alloca i64, align 8
  %max_val = alloca i64, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store %struct.rtx_def* %cond, %struct.rtx_def** %cond.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store i32 %reverse, i32* %reverse.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reverse.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  store %struct.rtx_def** %earliest, %struct.rtx_def*** %earliest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %earliest.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  store %struct.rtx_def* %want_reg, %struct.rtx_def** %want_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %want_reg.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  store i32 %allow_cc_mode, i32* %allow_cc_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allow_cc_mode.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  store i32 %valid_at_insn_p, i32* %valid_at_insn_p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %valid_at_insn_p.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7793
  store %struct.rtx_def* %0, %struct.rtx_def** %prev, align 8, !dbg !7792
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !7794, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !7800, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i32* %reverse_code, metadata !7802, metadata !DIExpression()), !dbg !7803
  store i32 0, i32* %reverse_code, align 4, !dbg !7803
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7806, metadata !DIExpression()), !dbg !7807
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7808
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !7808
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7808
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !7808
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !7808
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7808
  store %struct.basic_block_def* %2, %struct.basic_block_def** %bb, align 8, !dbg !7807
  %3 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !7809
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !7809
  %bf.load = load i32, i32* %4, align 8, !dbg !7809
  %bf.clear = and i32 %bf.load, 65535, !dbg !7809
  store i32 %bf.clear, i32* %code, align 4, !dbg !7810
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !7811
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !7811
  %bf.load1 = load i32, i32* %6, align 8, !dbg !7811
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !7811
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !7811
  store i32 %bf.clear2, i32* %mode, align 4, !dbg !7812
  %7 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !7813
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !7813
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !7813
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !7813
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !7813
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7813
  store %struct.rtx_def* %8, %struct.rtx_def** %op0, align 8, !dbg !7814
  %9 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !7815
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !7815
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !7815
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !7815
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !7815
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7815
  store %struct.rtx_def* %10, %struct.rtx_def** %op1, align 8, !dbg !7816
  %11 = load i32, i32* %reverse.addr, align 4, !dbg !7817
  %tobool = icmp ne i32 %11, 0, !dbg !7817
  br i1 %tobool, label %if.then, label %if.end, !dbg !7819

if.then:                                          ; preds = %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %cond.addr, align 8, !dbg !7820
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7821
  %call = call i32 @reversed_comparison_code(%struct.rtx_def* %12, %struct.rtx_def* %13), !dbg !7822
  store i32 %call, i32* %code, align 4, !dbg !7823
  br label %if.end, !dbg !7824

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %code, align 4, !dbg !7825
  %cmp = icmp eq i32 %14, 0, !dbg !7827
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7828

if.then10:                                        ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7829
  br label %return, !dbg !7829

if.end11:                                         ; preds = %if.end
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %earliest.addr, align 8, !dbg !7830
  %tobool12 = icmp ne %struct.rtx_def** %15, null, !dbg !7830
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7832

if.then13:                                        ; preds = %if.end11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7833
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %earliest.addr, align 8, !dbg !7834
  store %struct.rtx_def* %16, %struct.rtx_def** %17, align 8, !dbg !7835
  br label %if.end14, !dbg !7836

if.end14:                                         ; preds = %if.then13, %if.end11
  br label %while.cond, !dbg !7837

while.cond:                                       ; preds = %if.end281, %if.then30, %if.end14
  %18 = load i32, i32* %code, align 4, !dbg !7838
  %idxprom = sext i32 %18 to i64, !dbg !7838
  %arrayidx15 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7838
  %19 = load i32, i32* %arrayidx15, align 4, !dbg !7838
  %cmp16 = icmp eq i32 %19, 0, !dbg !7839
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false, !dbg !7840

lor.lhs.false:                                    ; preds = %while.cond
  %20 = load i32, i32* %code, align 4, !dbg !7841
  %idxprom17 = sext i32 %20 to i64, !dbg !7841
  %arrayidx18 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom17, !dbg !7841
  %21 = load i32, i32* %arrayidx18, align 4, !dbg !7841
  %cmp19 = icmp eq i32 %21, 1, !dbg !7842
  br i1 %cmp19, label %land.lhs.true, label %land.end, !dbg !7843

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !7844
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7845
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !7845
  %bf.load20 = load i32, i32* %24, align 8, !dbg !7845
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !7845
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !7845
  %idxprom23 = sext i32 %bf.clear22 to i64, !dbg !7845
  %arrayidx24 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom23, !dbg !7845
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !7845
  %cmp25 = icmp eq %struct.rtx_def* %22, %25, !dbg !7846
  br i1 %cmp25, label %land.rhs, label %land.end, !dbg !7847

land.rhs:                                         ; preds = %land.lhs.true
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7848
  %27 = load %struct.rtx_def*, %struct.rtx_def** %want_reg.addr, align 8, !dbg !7849
  %cmp26 = icmp ne %struct.rtx_def* %26, %27, !dbg !7850
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false
  %28 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp26, %land.rhs ], !dbg !7851
  br i1 %28, label %while.body, label %while.end, !dbg !7837

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7852, metadata !DIExpression()), !dbg !7854
  store %struct.rtx_def* null, %struct.rtx_def** %x, align 8, !dbg !7854
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7855
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !7855
  %bf.load27 = load i32, i32* %30, align 8, !dbg !7855
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7855
  %cmp29 = icmp eq i32 %bf.clear28, 48, !dbg !7857
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !7858

if.then30:                                        ; preds = %while.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7859
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !7859
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !7859
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 1, !dbg !7859
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !7859
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !7859
  store %struct.rtx_def* %32, %struct.rtx_def** %op1, align 8, !dbg !7861
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7862
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !7862
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !7862
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !7862
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !7862
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !7862
  store %struct.rtx_def* %34, %struct.rtx_def** %op0, align 8, !dbg !7863
  br label %while.cond, !dbg !7864, !llvm.loop !7865

if.else:                                          ; preds = %while.body
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7867
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !7867
  %bf.load39 = load i32, i32* %36, align 8, !dbg !7867
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !7867
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !7867
  br i1 %cmp41, label %if.end43, label %if.then42, !dbg !7869

if.then42:                                        ; preds = %if.else
  br label %while.end, !dbg !7870

if.end43:                                         ; preds = %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43
  br label %do.body, !dbg !7871

do.body:                                          ; preds = %land.end51, %if.end44
  %37 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7872
  %call45 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %37), !dbg !7873
  store %struct.rtx_def* %call45, %struct.rtx_def** %prev, align 8, !dbg !7874
  br label %do.cond, !dbg !7875

do.cond:                                          ; preds = %do.body
  %38 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7876
  %tobool46 = icmp ne %struct.rtx_def* %38, null, !dbg !7876
  br i1 %tobool46, label %land.rhs47, label %land.end51, !dbg !7877

land.rhs47:                                       ; preds = %do.cond
  %39 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7878
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !7878
  %bf.load48 = load i32, i32* %40, align 8, !dbg !7878
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !7878
  %cmp50 = icmp eq i32 %bf.clear49, 7, !dbg !7878
  br label %land.end51

land.end51:                                       ; preds = %land.rhs47, %do.cond
  %41 = phi i1 [ false, %do.cond ], [ %cmp50, %land.rhs47 ], !dbg !7879
  br i1 %41, label %do.body, label %do.end, !dbg !7875, !llvm.loop !7880

do.end:                                           ; preds = %land.end51
  %42 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7882
  %cmp52 = icmp eq %struct.rtx_def* %42, null, !dbg !7884
  br i1 %cmp52, label %if.then63, label %lor.lhs.false53, !dbg !7885

lor.lhs.false53:                                  ; preds = %do.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7886
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !7886
  %bf.load54 = load i32, i32* %44, align 8, !dbg !7886
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !7886
  %cmp56 = icmp eq i32 %bf.clear55, 8, !dbg !7886
  br i1 %cmp56, label %lor.lhs.false57, label %if.then63, !dbg !7887

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %45 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7888
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !7888
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !7888
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 3, !dbg !7888
  %rt_bb61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.basic_block_def**, !dbg !7888
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb61, align 8, !dbg !7888
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7889
  %cmp62 = icmp ne %struct.basic_block_def* %46, %47, !dbg !7890
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !7891

if.then63:                                        ; preds = %lor.lhs.false57, %lor.lhs.false53, %do.end
  br label %while.end, !dbg !7892

if.end64:                                         ; preds = %lor.lhs.false57
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7893
  %49 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7894
  %call65 = call %struct.rtx_def* @set_of(%struct.rtx_def* %48, %struct.rtx_def* %49), !dbg !7895
  store %struct.rtx_def* %call65, %struct.rtx_def** %set, align 8, !dbg !7896
  %50 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7897
  %tobool66 = icmp ne %struct.rtx_def* %50, null, !dbg !7897
  br i1 %tobool66, label %land.lhs.true67, label %if.end79, !dbg !7899

land.lhs.true67:                                  ; preds = %if.end64
  %51 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7900
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !7900
  %bf.load68 = load i32, i32* %52, align 8, !dbg !7900
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !7900
  %cmp70 = icmp ne i32 %bf.clear69, 23, !dbg !7901
  br i1 %cmp70, label %if.then78, label %lor.lhs.false71, !dbg !7902

lor.lhs.false71:                                  ; preds = %land.lhs.true67
  %53 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7903
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !7903
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !7903
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !7903
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !7903
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !7903
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7904
  %call76 = call i32 @rtx_equal_p(%struct.rtx_def* %54, %struct.rtx_def* %55), !dbg !7905
  %tobool77 = icmp ne i32 %call76, 0, !dbg !7905
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !7906

if.then78:                                        ; preds = %lor.lhs.false71, %land.lhs.true67
  br label %while.end, !dbg !7907

if.end79:                                         ; preds = %lor.lhs.false71, %if.end64
  %56 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7908
  %tobool80 = icmp ne %struct.rtx_def* %56, null, !dbg !7908
  br i1 %tobool80, label %if.then81, label %if.else233, !dbg !7910

if.then81:                                        ; preds = %if.end79
  call void @llvm.dbg.declare(metadata i32* %inner_mode, metadata !7911, metadata !DIExpression()), !dbg !7913
  %57 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7914
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !7914
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !7914
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !7914
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !7914
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !7914
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !7914
  %bf.load86 = load i32, i32* %59, align 8, !dbg !7914
  %bf.lshr87 = lshr i32 %bf.load86, 16, !dbg !7914
  %bf.clear88 = and i32 %bf.lshr87, 255, !dbg !7914
  store i32 %bf.clear88, i32* %inner_mode, align 4, !dbg !7913
  %60 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7915
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !7915
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !7915
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 1, !dbg !7915
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !7915
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !7915
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !7915
  %bf.load93 = load i32, i32* %62, align 8, !dbg !7915
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !7915
  %cmp95 = icmp eq i32 %bf.clear94, 48, !dbg !7917
  br i1 %cmp95, label %land.lhs.true135, label %lor.lhs.false96, !dbg !7918

lor.lhs.false96:                                  ; preds = %if.then81
  %63 = load i32, i32* %code, align 4, !dbg !7919
  %cmp97 = icmp eq i32 %63, 80, !dbg !7920
  br i1 %cmp97, label %land.lhs.true123, label %lor.lhs.false98, !dbg !7921

lor.lhs.false98:                                  ; preds = %lor.lhs.false96
  %64 = load i32, i32* %code, align 4, !dbg !7922
  %cmp99 = icmp eq i32 %64, 85, !dbg !7923
  br i1 %cmp99, label %land.lhs.true100, label %if.else159, !dbg !7924

land.lhs.true100:                                 ; preds = %lor.lhs.false98
  %65 = load i32, i32* %inner_mode, align 4, !dbg !7925
  %idxprom101 = zext i32 %65 to i64, !dbg !7925
  %arrayidx102 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom101, !dbg !7925
  %66 = load i8, i8* %arrayidx102, align 1, !dbg !7925
  %conv = zext i8 %66 to i32, !dbg !7925
  %cmp103 = icmp eq i32 %conv, 2, !dbg !7926
  br i1 %cmp103, label %land.lhs.true105, label %if.else159, !dbg !7927

land.lhs.true105:                                 ; preds = %land.lhs.true100
  %67 = load i32, i32* %inner_mode, align 4, !dbg !7928
  %idxprom106 = zext i32 %67 to i64, !dbg !7928
  %arrayidx107 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom106, !dbg !7928
  %68 = load i8, i8* %arrayidx107, align 1, !dbg !7928
  %conv108 = zext i8 %68 to i16, !dbg !7928
  %conv109 = zext i16 %conv108 to i32, !dbg !7928
  %mul = mul nsw i32 %conv109, 8, !dbg !7928
  %conv110 = trunc i32 %mul to i16, !dbg !7928
  %conv111 = zext i16 %conv110 to i32, !dbg !7928
  %cmp112 = icmp sle i32 %conv111, 64, !dbg !7929
  br i1 %cmp112, label %land.lhs.true114, label %if.else159, !dbg !7930

land.lhs.true114:                                 ; preds = %land.lhs.true105
  %69 = load i32, i32* %inner_mode, align 4, !dbg !7931
  %idxprom115 = zext i32 %69 to i64, !dbg !7931
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom115, !dbg !7931
  %70 = load i8, i8* %arrayidx116, align 1, !dbg !7931
  %conv117 = zext i8 %70 to i16, !dbg !7931
  %conv118 = zext i16 %conv117 to i32, !dbg !7931
  %mul119 = mul nsw i32 %conv118, 8, !dbg !7931
  %conv120 = trunc i32 %mul119 to i16, !dbg !7931
  %conv121 = zext i16 %conv120 to i32, !dbg !7931
  %sub = sub nsw i32 %conv121, 1, !dbg !7932
  %sh_prom = zext i32 %sub to i64, !dbg !7933
  %shl = shl i64 1, %sh_prom, !dbg !7933
  %and = and i64 1, %shl, !dbg !7934
  %tobool122 = icmp ne i64 %and, 0, !dbg !7934
  br i1 %tobool122, label %land.lhs.true123, label %if.else159, !dbg !7935

land.lhs.true123:                                 ; preds = %land.lhs.true114, %lor.lhs.false96
  %71 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7936
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !7936
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !7936
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 1, !dbg !7936
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !7936
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !7936
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !7936
  %bf.load128 = load i32, i32* %73, align 8, !dbg !7936
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !7936
  %idxprom130 = sext i32 %bf.clear129 to i64, !dbg !7936
  %arrayidx131 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom130, !dbg !7936
  %74 = load i32, i32* %arrayidx131, align 4, !dbg !7936
  %and132 = and i32 %74, -2, !dbg !7936
  %cmp133 = icmp eq i32 %and132, 0, !dbg !7936
  br i1 %cmp133, label %land.lhs.true135, label %if.else159, !dbg !7937

land.lhs.true135:                                 ; preds = %land.lhs.true123, %if.then81
  %75 = load i32, i32* %mode, align 4, !dbg !7938
  %idxprom136 = zext i32 %75 to i64, !dbg !7938
  %arrayidx137 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom136, !dbg !7938
  %76 = load i8, i8* %arrayidx137, align 1, !dbg !7938
  %conv138 = zext i8 %76 to i32, !dbg !7938
  %cmp139 = icmp eq i32 %conv138, 1, !dbg !7939
  %conv140 = zext i1 %cmp139 to i32, !dbg !7939
  %77 = load i32, i32* %inner_mode, align 4, !dbg !7940
  %idxprom141 = zext i32 %77 to i64, !dbg !7940
  %arrayidx142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom141, !dbg !7940
  %78 = load i8, i8* %arrayidx142, align 1, !dbg !7940
  %conv143 = zext i8 %78 to i32, !dbg !7940
  %cmp144 = icmp eq i32 %conv143, 1, !dbg !7941
  %conv145 = zext i1 %cmp144 to i32, !dbg !7941
  %cmp146 = icmp eq i32 %conv140, %conv145, !dbg !7942
  br i1 %cmp146, label %if.then154, label %lor.lhs.false148, !dbg !7943

lor.lhs.false148:                                 ; preds = %land.lhs.true135
  %79 = load i32, i32* %mode, align 4, !dbg !7944
  %cmp149 = icmp eq i32 %79, 0, !dbg !7945
  br i1 %cmp149, label %if.then154, label %lor.lhs.false151, !dbg !7946

lor.lhs.false151:                                 ; preds = %lor.lhs.false148
  %80 = load i32, i32* %inner_mode, align 4, !dbg !7947
  %cmp152 = icmp eq i32 %80, 0, !dbg !7948
  br i1 %cmp152, label %if.then154, label %if.else159, !dbg !7949

if.then154:                                       ; preds = %lor.lhs.false151, %lor.lhs.false148, %land.lhs.true135
  %81 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7950
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !7950
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !7950
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 1, !dbg !7950
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !7950
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !7950
  store %struct.rtx_def* %82, %struct.rtx_def** %x, align 8, !dbg !7951
  br label %if.end232, !dbg !7952

if.else159:                                       ; preds = %lor.lhs.false151, %land.lhs.true123, %land.lhs.true114, %land.lhs.true105, %land.lhs.true100, %lor.lhs.false98
  %83 = load i32, i32* %code, align 4, !dbg !7953
  %cmp160 = icmp eq i32 %83, 81, !dbg !7955
  br i1 %cmp160, label %land.lhs.true194, label %lor.lhs.false162, !dbg !7956

lor.lhs.false162:                                 ; preds = %if.else159
  %84 = load i32, i32* %code, align 4, !dbg !7957
  %cmp163 = icmp eq i32 %84, 82, !dbg !7958
  br i1 %cmp163, label %land.lhs.true165, label %if.else230, !dbg !7959

land.lhs.true165:                                 ; preds = %lor.lhs.false162
  %85 = load i32, i32* %inner_mode, align 4, !dbg !7960
  %idxprom166 = zext i32 %85 to i64, !dbg !7960
  %arrayidx167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom166, !dbg !7960
  %86 = load i8, i8* %arrayidx167, align 1, !dbg !7960
  %conv168 = zext i8 %86 to i16, !dbg !7960
  %conv169 = zext i16 %conv168 to i32, !dbg !7960
  %mul170 = mul nsw i32 %conv169, 8, !dbg !7960
  %conv171 = trunc i32 %mul170 to i16, !dbg !7960
  %conv172 = zext i16 %conv171 to i32, !dbg !7960
  %cmp173 = icmp sle i32 %conv172, 64, !dbg !7961
  br i1 %cmp173, label %land.lhs.true175, label %if.else230, !dbg !7962

land.lhs.true175:                                 ; preds = %land.lhs.true165
  %87 = load i32, i32* %inner_mode, align 4, !dbg !7963
  %idxprom176 = zext i32 %87 to i64, !dbg !7963
  %arrayidx177 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom176, !dbg !7963
  %88 = load i8, i8* %arrayidx177, align 1, !dbg !7963
  %conv178 = zext i8 %88 to i32, !dbg !7963
  %cmp179 = icmp eq i32 %conv178, 2, !dbg !7964
  br i1 %cmp179, label %land.lhs.true181, label %if.else230, !dbg !7965

land.lhs.true181:                                 ; preds = %land.lhs.true175
  %89 = load i32, i32* %inner_mode, align 4, !dbg !7966
  %idxprom182 = zext i32 %89 to i64, !dbg !7966
  %arrayidx183 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom182, !dbg !7966
  %90 = load i8, i8* %arrayidx183, align 1, !dbg !7966
  %conv184 = zext i8 %90 to i16, !dbg !7966
  %conv185 = zext i16 %conv184 to i32, !dbg !7966
  %mul186 = mul nsw i32 %conv185, 8, !dbg !7966
  %conv187 = trunc i32 %mul186 to i16, !dbg !7966
  %conv188 = zext i16 %conv187 to i32, !dbg !7966
  %sub189 = sub nsw i32 %conv188, 1, !dbg !7967
  %sh_prom190 = zext i32 %sub189 to i64, !dbg !7968
  %shl191 = shl i64 1, %sh_prom190, !dbg !7968
  %and192 = and i64 1, %shl191, !dbg !7969
  %tobool193 = icmp ne i64 %and192, 0, !dbg !7969
  br i1 %tobool193, label %land.lhs.true194, label %if.else230, !dbg !7970

land.lhs.true194:                                 ; preds = %land.lhs.true181, %if.else159
  %91 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7971
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !7971
  %fld196 = bitcast %union.u* %u195 to [1 x %union.rtunion_def]*, !dbg !7971
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i64 0, i64 1, !dbg !7971
  %rt_rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**, !dbg !7971
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !7971
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !7971
  %bf.load199 = load i32, i32* %93, align 8, !dbg !7971
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !7971
  %idxprom201 = sext i32 %bf.clear200 to i64, !dbg !7971
  %arrayidx202 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom201, !dbg !7971
  %94 = load i32, i32* %arrayidx202, align 4, !dbg !7971
  %and203 = and i32 %94, -2, !dbg !7971
  %cmp204 = icmp eq i32 %and203, 0, !dbg !7971
  br i1 %cmp204, label %land.lhs.true206, label %if.else230, !dbg !7972

land.lhs.true206:                                 ; preds = %land.lhs.true194
  %95 = load i32, i32* %mode, align 4, !dbg !7973
  %idxprom207 = zext i32 %95 to i64, !dbg !7973
  %arrayidx208 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom207, !dbg !7973
  %96 = load i8, i8* %arrayidx208, align 1, !dbg !7973
  %conv209 = zext i8 %96 to i32, !dbg !7973
  %cmp210 = icmp eq i32 %conv209, 1, !dbg !7974
  %conv211 = zext i1 %cmp210 to i32, !dbg !7974
  %97 = load i32, i32* %inner_mode, align 4, !dbg !7975
  %idxprom212 = zext i32 %97 to i64, !dbg !7975
  %arrayidx213 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom212, !dbg !7975
  %98 = load i8, i8* %arrayidx213, align 1, !dbg !7975
  %conv214 = zext i8 %98 to i32, !dbg !7975
  %cmp215 = icmp eq i32 %conv214, 1, !dbg !7976
  %conv216 = zext i1 %cmp215 to i32, !dbg !7976
  %cmp217 = icmp eq i32 %conv211, %conv216, !dbg !7977
  br i1 %cmp217, label %if.then225, label %lor.lhs.false219, !dbg !7978

lor.lhs.false219:                                 ; preds = %land.lhs.true206
  %99 = load i32, i32* %mode, align 4, !dbg !7979
  %cmp220 = icmp eq i32 %99, 0, !dbg !7980
  br i1 %cmp220, label %if.then225, label %lor.lhs.false222, !dbg !7981

lor.lhs.false222:                                 ; preds = %lor.lhs.false219
  %100 = load i32, i32* %inner_mode, align 4, !dbg !7982
  %cmp223 = icmp eq i32 %100, 0, !dbg !7983
  br i1 %cmp223, label %if.then225, label %if.else230, !dbg !7984

if.then225:                                       ; preds = %lor.lhs.false222, %lor.lhs.false219, %land.lhs.true206
  store i32 1, i32* %reverse_code, align 4, !dbg !7985
  %101 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !7987
  %u226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !7987
  %fld227 = bitcast %union.u* %u226 to [1 x %union.rtunion_def]*, !dbg !7987
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i64 0, i64 1, !dbg !7987
  %rt_rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**, !dbg !7987
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx229, align 8, !dbg !7987
  store %struct.rtx_def* %102, %struct.rtx_def** %x, align 8, !dbg !7988
  br label %if.end231, !dbg !7989

if.else230:                                       ; preds = %lor.lhs.false222, %land.lhs.true194, %land.lhs.true181, %land.lhs.true175, %land.lhs.true165, %lor.lhs.false162
  br label %while.end, !dbg !7990

if.end231:                                        ; preds = %if.then225
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.then154
  br label %if.end238, !dbg !7991

if.else233:                                       ; preds = %if.end79
  %103 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !7992
  %104 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7994
  %call234 = call i32 @reg_set_p(%struct.rtx_def* %103, %struct.rtx_def* %104), !dbg !7995
  %tobool235 = icmp ne i32 %call234, 0, !dbg !7995
  br i1 %tobool235, label %if.then236, label %if.end237, !dbg !7996

if.then236:                                       ; preds = %if.else233
  br label %while.end, !dbg !7997

if.end237:                                        ; preds = %if.else233
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.end232
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7998
  %tobool239 = icmp ne %struct.rtx_def* %105, null, !dbg !7998
  br i1 %tobool239, label %if.then240, label %if.end281, !dbg !8000

if.then240:                                       ; preds = %if.end238
  %106 = load i32, i32* %valid_at_insn_p.addr, align 4, !dbg !8001
  %tobool241 = icmp ne i32 %106, 0, !dbg !8001
  br i1 %tobool241, label %if.then242, label %if.end250, !dbg !8004

if.then242:                                       ; preds = %if.then240
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8005
  %108 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8007
  %call243 = call i32 @modified_in_p(%struct.rtx_def* %107, %struct.rtx_def* %108), !dbg !8008
  %tobool244 = icmp ne i32 %call243, 0, !dbg !8008
  br i1 %tobool244, label %if.then248, label %lor.lhs.false245, !dbg !8009

lor.lhs.false245:                                 ; preds = %if.then242
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8010
  %110 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8011
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8012
  %call246 = call i32 @modified_between_p(%struct.rtx_def* %109, %struct.rtx_def* %110, %struct.rtx_def* %111), !dbg !8013
  %tobool247 = icmp ne i32 %call246, 0, !dbg !8013
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !8014

if.then248:                                       ; preds = %lor.lhs.false245, %if.then242
  br label %while.end, !dbg !8015

if.end249:                                        ; preds = %lor.lhs.false245
  br label %if.end250, !dbg !8016

if.end250:                                        ; preds = %if.end249, %if.then240
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8017
  %113 = bitcast %struct.rtx_def* %112 to i32*, !dbg !8017
  %bf.load251 = load i32, i32* %113, align 8, !dbg !8017
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !8017
  %idxprom253 = sext i32 %bf.clear252 to i64, !dbg !8017
  %arrayidx254 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom253, !dbg !8017
  %114 = load i32, i32* %arrayidx254, align 4, !dbg !8017
  %and255 = and i32 %114, -2, !dbg !8017
  %cmp256 = icmp eq i32 %and255, 0, !dbg !8017
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !8019

if.then258:                                       ; preds = %if.end250
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8020
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !8020
  %bf.load259 = load i32, i32* %116, align 8, !dbg !8020
  %bf.clear260 = and i32 %bf.load259, 65535, !dbg !8020
  store i32 %bf.clear260, i32* %code, align 4, !dbg !8021
  br label %if.end261, !dbg !8022

if.end261:                                        ; preds = %if.then258, %if.end250
  %117 = load i32, i32* %reverse_code, align 4, !dbg !8023
  %tobool262 = icmp ne i32 %117, 0, !dbg !8023
  br i1 %tobool262, label %if.then263, label %if.end269, !dbg !8025

if.then263:                                       ; preds = %if.end261
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8026
  %119 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8028
  %call264 = call i32 @reversed_comparison_code(%struct.rtx_def* %118, %struct.rtx_def* %119), !dbg !8029
  store i32 %call264, i32* %code, align 4, !dbg !8030
  %120 = load i32, i32* %code, align 4, !dbg !8031
  %cmp265 = icmp eq i32 %120, 0, !dbg !8033
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !8034

if.then267:                                       ; preds = %if.then263
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8035
  br label %return, !dbg !8035

if.end268:                                        ; preds = %if.then263
  store i32 0, i32* %reverse_code, align 4, !dbg !8036
  br label %if.end269, !dbg !8037

if.end269:                                        ; preds = %if.end268, %if.end261
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8038
  %u270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1, !dbg !8038
  %fld271 = bitcast %union.u* %u270 to [1 x %union.rtunion_def]*, !dbg !8038
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i64 0, i64 0, !dbg !8038
  %rt_rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**, !dbg !8038
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx273, align 8, !dbg !8038
  store %struct.rtx_def* %122, %struct.rtx_def** %op0, align 8, !dbg !8039
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !8040
  %u274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !8040
  %fld275 = bitcast %union.u* %u274 to [1 x %union.rtunion_def]*, !dbg !8040
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i64 0, i64 1, !dbg !8040
  %rt_rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**, !dbg !8040
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx277, align 8, !dbg !8040
  store %struct.rtx_def* %124, %struct.rtx_def** %op1, align 8, !dbg !8041
  %125 = load %struct.rtx_def**, %struct.rtx_def*** %earliest.addr, align 8, !dbg !8042
  %tobool278 = icmp ne %struct.rtx_def** %125, null, !dbg !8042
  br i1 %tobool278, label %if.then279, label %if.end280, !dbg !8044

if.then279:                                       ; preds = %if.end269
  %126 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8045
  %127 = load %struct.rtx_def**, %struct.rtx_def*** %earliest.addr, align 8, !dbg !8046
  store %struct.rtx_def* %126, %struct.rtx_def** %127, align 8, !dbg !8047
  br label %if.end280, !dbg !8048

if.end280:                                        ; preds = %if.then279, %if.end269
  br label %if.end281, !dbg !8049

if.end281:                                        ; preds = %if.end280, %if.end238
  br label %while.cond, !dbg !7837, !llvm.loop !7865

while.end:                                        ; preds = %if.then248, %if.then236, %if.else230, %if.then78, %if.then63, %if.then42, %land.end
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8050
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !8050
  %bf.load282 = load i32, i32* %129, align 8, !dbg !8050
  %bf.clear283 = and i32 %bf.load282, 65535, !dbg !8050
  %idxprom284 = sext i32 %bf.clear283 to i64, !dbg !8050
  %arrayidx285 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom284, !dbg !8050
  %130 = load i32, i32* %arrayidx285, align 4, !dbg !8050
  %cmp286 = icmp eq i32 %130, 9, !dbg !8050
  br i1 %cmp286, label %if.then288, label %if.end290, !dbg !8052

if.then288:                                       ; preds = %while.end
  %131 = load i32, i32* %code, align 4, !dbg !8053
  %call289 = call i32 @swap_condition(i32 %131), !dbg !8054
  store i32 %call289, i32* %code, align 4, !dbg !8055
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8056
  store %struct.rtx_def* %132, %struct.rtx_def** %tem, align 8, !dbg !8057
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8058
  store %struct.rtx_def* %133, %struct.rtx_def** %op0, align 8, !dbg !8059
  %134 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8060
  store %struct.rtx_def* %134, %struct.rtx_def** %op1, align 8, !dbg !8061
  br label %if.end290, !dbg !8062

if.end290:                                        ; preds = %if.then288, %while.end
  %135 = load i32, i32* %allow_cc_mode.addr, align 4, !dbg !8063
  %tobool291 = icmp ne i32 %135, 0, !dbg !8063
  br i1 %tobool291, label %if.end302, label %land.lhs.true292, !dbg !8065

land.lhs.true292:                                 ; preds = %if.end290
  %136 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8066
  %137 = bitcast %struct.rtx_def* %136 to i32*, !dbg !8066
  %bf.load293 = load i32, i32* %137, align 8, !dbg !8066
  %bf.lshr294 = lshr i32 %bf.load293, 16, !dbg !8066
  %bf.clear295 = and i32 %bf.lshr294, 255, !dbg !8066
  %idxprom296 = zext i32 %bf.clear295 to i64, !dbg !8066
  %arrayidx297 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom296, !dbg !8066
  %138 = load i8, i8* %arrayidx297, align 1, !dbg !8066
  %conv298 = zext i8 %138 to i32, !dbg !8066
  %cmp299 = icmp eq i32 %conv298, 1, !dbg !8067
  br i1 %cmp299, label %if.then301, label %if.end302, !dbg !8068

if.then301:                                       ; preds = %land.lhs.true292
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8069
  br label %return, !dbg !8069

if.end302:                                        ; preds = %land.lhs.true292, %if.end290
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8070
  %140 = bitcast %struct.rtx_def* %139 to i32*, !dbg !8070
  %bf.load303 = load i32, i32* %140, align 8, !dbg !8070
  %bf.lshr304 = lshr i32 %bf.load303, 16, !dbg !8070
  %bf.clear305 = and i32 %bf.lshr304, 255, !dbg !8070
  %idxprom306 = zext i32 %bf.clear305 to i64, !dbg !8070
  %arrayidx307 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom306, !dbg !8070
  %141 = load i8, i8* %arrayidx307, align 1, !dbg !8070
  %conv308 = zext i8 %141 to i32, !dbg !8070
  %cmp309 = icmp ne i32 %conv308, 1, !dbg !8072
  br i1 %cmp309, label %land.lhs.true311, label %if.end395, !dbg !8073

land.lhs.true311:                                 ; preds = %if.end302
  %142 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8074
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !8074
  %bf.load312 = load i32, i32* %143, align 8, !dbg !8074
  %bf.clear313 = and i32 %bf.load312, 65535, !dbg !8074
  %cmp314 = icmp eq i32 %bf.clear313, 30, !dbg !8074
  br i1 %cmp314, label %land.lhs.true316, label %if.end395, !dbg !8075

land.lhs.true316:                                 ; preds = %land.lhs.true311
  %144 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8076
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !8076
  %bf.load317 = load i32, i32* %145, align 8, !dbg !8076
  %bf.lshr318 = lshr i32 %bf.load317, 16, !dbg !8076
  %bf.clear319 = and i32 %bf.lshr318, 255, !dbg !8076
  %cmp320 = icmp ne i32 %bf.clear319, 0, !dbg !8077
  br i1 %cmp320, label %land.lhs.true322, label %if.end395, !dbg !8078

land.lhs.true322:                                 ; preds = %land.lhs.true316
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8079
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !8079
  %bf.load323 = load i32, i32* %147, align 8, !dbg !8079
  %bf.lshr324 = lshr i32 %bf.load323, 16, !dbg !8079
  %bf.clear325 = and i32 %bf.lshr324, 255, !dbg !8079
  %idxprom326 = zext i32 %bf.clear325 to i64, !dbg !8079
  %arrayidx327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom326, !dbg !8079
  %148 = load i8, i8* %arrayidx327, align 1, !dbg !8079
  %conv328 = zext i8 %148 to i16, !dbg !8079
  %conv329 = zext i16 %conv328 to i32, !dbg !8079
  %mul330 = mul nsw i32 %conv329, 8, !dbg !8079
  %conv331 = trunc i32 %mul330 to i16, !dbg !8079
  %conv332 = zext i16 %conv331 to i32, !dbg !8079
  %cmp333 = icmp sle i32 %conv332, 64, !dbg !8080
  br i1 %cmp333, label %if.then335, label %if.end395, !dbg !8081

if.then335:                                       ; preds = %land.lhs.true322
  call void @llvm.dbg.declare(metadata i64* %const_val, metadata !8082, metadata !DIExpression()), !dbg !8084
  %149 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8085
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1, !dbg !8085
  %hwint = bitcast %union.u* %u336 to [1 x i64]*, !dbg !8085
  %arrayidx337 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8085
  %150 = load i64, i64* %arrayidx337, align 8, !dbg !8085
  store i64 %150, i64* %const_val, align 8, !dbg !8084
  call void @llvm.dbg.declare(metadata i64* %uconst_val, metadata !8086, metadata !DIExpression()), !dbg !8087
  %151 = load i64, i64* %const_val, align 8, !dbg !8088
  store i64 %151, i64* %uconst_val, align 8, !dbg !8087
  call void @llvm.dbg.declare(metadata i64* %max_val, metadata !8089, metadata !DIExpression()), !dbg !8090
  %152 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8091
  %153 = bitcast %struct.rtx_def* %152 to i32*, !dbg !8091
  %bf.load338 = load i32, i32* %153, align 8, !dbg !8091
  %bf.lshr339 = lshr i32 %bf.load338, 16, !dbg !8091
  %bf.clear340 = and i32 %bf.lshr339, 255, !dbg !8091
  %idxprom341 = zext i32 %bf.clear340 to i64, !dbg !8091
  %arrayidx342 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom341, !dbg !8091
  %154 = load i64, i64* %arrayidx342, align 8, !dbg !8091
  store i64 %154, i64* %max_val, align 8, !dbg !8090
  %155 = load i32, i32* %code, align 4, !dbg !8092
  switch i32 %155, label %sw.default [
    i32 84, label %sw.bb
    i32 82, label %sw.bb351
    i32 88, label %sw.bb375
    i32 86, label %sw.bb385
  ], !dbg !8093

sw.bb:                                            ; preds = %if.then335
  %156 = load i64, i64* %const_val, align 8, !dbg !8094
  %157 = load i64, i64* %max_val, align 8, !dbg !8097
  %shr = lshr i64 %157, 1, !dbg !8098
  %cmp343 = icmp ne i64 %156, %shr, !dbg !8099
  br i1 %cmp343, label %if.then345, label %if.end350, !dbg !8100

if.then345:                                       ; preds = %sw.bb
  store i32 85, i32* %code, align 4, !dbg !8101
  %158 = load i64, i64* %const_val, align 8, !dbg !8102
  %add = add nsw i64 %158, 1, !dbg !8103
  %159 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8104
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !8104
  %bf.load346 = load i32, i32* %160, align 8, !dbg !8104
  %bf.lshr347 = lshr i32 %bf.load346, 16, !dbg !8104
  %bf.clear348 = and i32 %bf.lshr347, 255, !dbg !8104
  %call349 = call %struct.rtx_def* @gen_int_mode(i64 %add, i32 %bf.clear348), !dbg !8105
  store %struct.rtx_def* %call349, %struct.rtx_def** %op1, align 8, !dbg !8106
  br label %if.end350, !dbg !8107

if.end350:                                        ; preds = %if.then345, %sw.bb
  br label %sw.epilog, !dbg !8108

sw.bb351:                                         ; preds = %if.then335
  %161 = load i64, i64* %const_val, align 8, !dbg !8109
  %162 = load i64, i64* %max_val, align 8, !dbg !8111
  %and352 = and i64 %161, %162, !dbg !8112
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8113
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !8113
  %bf.load353 = load i32, i32* %164, align 8, !dbg !8113
  %bf.lshr354 = lshr i32 %bf.load353, 16, !dbg !8113
  %bf.clear355 = and i32 %bf.lshr354, 255, !dbg !8113
  %idxprom356 = zext i32 %bf.clear355 to i64, !dbg !8113
  %arrayidx357 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom356, !dbg !8113
  %165 = load i8, i8* %arrayidx357, align 1, !dbg !8113
  %conv358 = zext i8 %165 to i16, !dbg !8113
  %conv359 = zext i16 %conv358 to i32, !dbg !8113
  %mul360 = mul nsw i32 %conv359, 8, !dbg !8113
  %conv361 = trunc i32 %mul360 to i16, !dbg !8113
  %conv362 = zext i16 %conv361 to i32, !dbg !8113
  %sub363 = sub nsw i32 %conv362, 1, !dbg !8114
  %sh_prom364 = zext i32 %sub363 to i64, !dbg !8115
  %shl365 = shl i64 1, %sh_prom364, !dbg !8115
  %cmp366 = icmp ne i64 %and352, %shl365, !dbg !8116
  br i1 %cmp366, label %if.then368, label %if.end374, !dbg !8117

if.then368:                                       ; preds = %sw.bb351
  store i32 83, i32* %code, align 4, !dbg !8118
  %166 = load i64, i64* %const_val, align 8, !dbg !8119
  %sub369 = sub nsw i64 %166, 1, !dbg !8120
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8121
  %168 = bitcast %struct.rtx_def* %167 to i32*, !dbg !8121
  %bf.load370 = load i32, i32* %168, align 8, !dbg !8121
  %bf.lshr371 = lshr i32 %bf.load370, 16, !dbg !8121
  %bf.clear372 = and i32 %bf.lshr371, 255, !dbg !8121
  %call373 = call %struct.rtx_def* @gen_int_mode(i64 %sub369, i32 %bf.clear372), !dbg !8122
  store %struct.rtx_def* %call373, %struct.rtx_def** %op1, align 8, !dbg !8123
  br label %if.end374, !dbg !8124

if.end374:                                        ; preds = %if.then368, %sw.bb351
  br label %sw.epilog, !dbg !8125

sw.bb375:                                         ; preds = %if.then335
  %169 = load i64, i64* %uconst_val, align 8, !dbg !8126
  %170 = load i64, i64* %max_val, align 8, !dbg !8128
  %cmp376 = icmp ult i64 %169, %170, !dbg !8129
  br i1 %cmp376, label %if.then378, label %if.end384, !dbg !8130

if.then378:                                       ; preds = %sw.bb375
  store i32 89, i32* %code, align 4, !dbg !8131
  %171 = load i64, i64* %uconst_val, align 8, !dbg !8132
  %add379 = add i64 %171, 1, !dbg !8133
  %172 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8134
  %173 = bitcast %struct.rtx_def* %172 to i32*, !dbg !8134
  %bf.load380 = load i32, i32* %173, align 8, !dbg !8134
  %bf.lshr381 = lshr i32 %bf.load380, 16, !dbg !8134
  %bf.clear382 = and i32 %bf.lshr381, 255, !dbg !8134
  %call383 = call %struct.rtx_def* @gen_int_mode(i64 %add379, i32 %bf.clear382), !dbg !8135
  store %struct.rtx_def* %call383, %struct.rtx_def** %op1, align 8, !dbg !8136
  br label %if.end384, !dbg !8137

if.end384:                                        ; preds = %if.then378, %sw.bb375
  br label %sw.epilog, !dbg !8138

sw.bb385:                                         ; preds = %if.then335
  %174 = load i64, i64* %uconst_val, align 8, !dbg !8139
  %cmp386 = icmp ne i64 %174, 0, !dbg !8141
  br i1 %cmp386, label %if.then388, label %if.end394, !dbg !8142

if.then388:                                       ; preds = %sw.bb385
  store i32 87, i32* %code, align 4, !dbg !8143
  %175 = load i64, i64* %uconst_val, align 8, !dbg !8144
  %sub389 = sub i64 %175, 1, !dbg !8145
  %176 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8146
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !8146
  %bf.load390 = load i32, i32* %177, align 8, !dbg !8146
  %bf.lshr391 = lshr i32 %bf.load390, 16, !dbg !8146
  %bf.clear392 = and i32 %bf.lshr391, 255, !dbg !8146
  %call393 = call %struct.rtx_def* @gen_int_mode(i64 %sub389, i32 %bf.clear392), !dbg !8147
  store %struct.rtx_def* %call393, %struct.rtx_def** %op1, align 8, !dbg !8148
  br label %if.end394, !dbg !8149

if.end394:                                        ; preds = %if.then388, %sw.bb385
  br label %sw.epilog, !dbg !8150

sw.default:                                       ; preds = %if.then335
  br label %sw.epilog, !dbg !8151

sw.epilog:                                        ; preds = %sw.default, %if.end394, %if.end384, %if.end374, %if.end350
  br label %if.end395, !dbg !8152

if.end395:                                        ; preds = %sw.epilog, %land.lhs.true322, %land.lhs.true316, %land.lhs.true311, %if.end302
  %178 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8153
  %tobool396 = icmp ne %struct.rtx_def* %178, null, !dbg !8153
  br i1 %tobool396, label %cond.true, label %cond.false, !dbg !8155

cond.true:                                        ; preds = %if.end395
  br i1 false, label %if.then397, label %if.end398, !dbg !8153

cond.false:                                       ; preds = %if.end395
  br i1 false, label %if.then397, label %if.end398, !dbg !8155

if.then397:                                       ; preds = %cond.false, %cond.true
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8156
  br label %return, !dbg !8156

if.end398:                                        ; preds = %cond.false, %cond.true
  %179 = load i32, i32* %code, align 4, !dbg !8157
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8157
  %181 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8157
  %call399 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %179, i32 0, %struct.rtx_def* %180, %struct.rtx_def* %181), !dbg !8157
  store %struct.rtx_def* %call399, %struct.rtx_def** %retval, align 8, !dbg !8158
  br label %return, !dbg !8158

return:                                           ; preds = %if.end398, %if.then397, %if.then301, %if.then267, %if.then10
  %182 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8159
  ret %struct.rtx_def* %182, !dbg !8159
}

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

declare dso_local i32 @swap_condition(i32) #2

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @get_condition(%struct.rtx_def* %jump, %struct.rtx_def** %earliest, i32 %allow_cc_mode, i32 %valid_at_insn_p) #0 !dbg !8160 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %jump.addr = alloca %struct.rtx_def*, align 8
  %earliest.addr = alloca %struct.rtx_def**, align 8
  %allow_cc_mode.addr = alloca i32, align 4
  %valid_at_insn_p.addr = alloca i32, align 4
  %cond = alloca %struct.rtx_def*, align 8
  %reverse = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %jump, %struct.rtx_def** %jump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %jump.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  store %struct.rtx_def** %earliest, %struct.rtx_def*** %earliest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %earliest.addr, metadata !8165, metadata !DIExpression()), !dbg !8166
  store i32 %allow_cc_mode, i32* %allow_cc_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allow_cc_mode.addr, metadata !8167, metadata !DIExpression()), !dbg !8168
  store i32 %valid_at_insn_p, i32* %valid_at_insn_p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %valid_at_insn_p.addr, metadata !8169, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond, metadata !8171, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.declare(metadata i32* %reverse, metadata !8173, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load %struct.rtx_def*, %struct.rtx_def** %jump.addr, align 8, !dbg !8177
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8177
  %bf.load = load i32, i32* %1, align 8, !dbg !8177
  %bf.clear = and i32 %bf.load, 65535, !dbg !8177
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !8177
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !8179

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %jump.addr, align 8, !dbg !8180
  %call = call i32 @any_condjump_p(%struct.rtx_def* %2), !dbg !8181
  %tobool = icmp ne i32 %call, 0, !dbg !8181
  br i1 %tobool, label %if.end, label %if.then, !dbg !8182

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8183
  br label %return, !dbg !8183

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def*, %struct.rtx_def** %jump.addr, align 8, !dbg !8184
  %call1 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %3), !dbg !8185
  store %struct.rtx_def* %call1, %struct.rtx_def** %set, align 8, !dbg !8186
  %4 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8187
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !8187
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8187
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !8187
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8187
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8187
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8187
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !8187
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !8187
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !8187
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !8187
  store %struct.rtx_def* %6, %struct.rtx_def** %cond, align 8, !dbg !8188
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8189
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8189
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !8189
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !8189
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !8189
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !8189
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8189
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !8189
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 2, !dbg !8189
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !8189
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !8189
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !8189
  %bf.load14 = load i32, i32* %10, align 8, !dbg !8189
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !8189
  %cmp16 = icmp eq i32 %bf.clear15, 44, !dbg !8190
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !8191

land.rhs:                                         ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8192
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8192
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !8192
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 1, !dbg !8192
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !8192
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !8192
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !8192
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !8192
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 2, !dbg !8192
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !8192
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !8192
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !8192
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8192
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !8192
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !8192
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !8192
  %15 = load %struct.rtx_def*, %struct.rtx_def** %jump.addr, align 8, !dbg !8193
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !8193
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !8193
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 8, !dbg !8193
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !8193
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !8193
  %cmp33 = icmp eq %struct.rtx_def* %14, %16, !dbg !8194
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %17 = phi i1 [ false, %if.end ], [ %cmp33, %land.rhs ], !dbg !8195
  %land.ext = zext i1 %17 to i32, !dbg !8191
  store i32 %land.ext, i32* %reverse, align 4, !dbg !8196
  %18 = load %struct.rtx_def*, %struct.rtx_def** %jump.addr, align 8, !dbg !8197
  %19 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !8198
  %20 = load i32, i32* %reverse, align 4, !dbg !8199
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %earliest.addr, align 8, !dbg !8200
  %22 = load i32, i32* %allow_cc_mode.addr, align 4, !dbg !8201
  %23 = load i32, i32* %valid_at_insn_p.addr, align 4, !dbg !8202
  %call34 = call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %18, %struct.rtx_def* %19, i32 %20, %struct.rtx_def** %21, %struct.rtx_def* null, i32 %22, i32 %23), !dbg !8203
  store %struct.rtx_def* %call34, %struct.rtx_def** %retval, align 8, !dbg !8204
  br label %return, !dbg !8204

return:                                           ; preds = %land.end, %if.then
  %24 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8205
  ret %struct.rtx_def* %24, !dbg !8205
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @truncated_to_mode(i32 %mode, %struct.rtx_def* %x) #0 !dbg !8206 {
entry:
  %retval = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8209, metadata !DIExpression()), !dbg !8210
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8211, metadata !DIExpression()), !dbg !8212
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8213
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8213
  %bf.load = load i32, i32* %1, align 8, !dbg !8213
  %bf.clear = and i32 %bf.load, 65535, !dbg !8213
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8213
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8215

land.lhs.true:                                    ; preds = %entry
  %2 = load i8 (i32, %struct.rtx_def*)*, i8 (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 4), align 8, !dbg !8216
  %3 = load i32, i32* %mode.addr, align 4, !dbg !8217
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8218
  %call = call zeroext i8 %2(i32 %3, %struct.rtx_def* %4), !dbg !8219
  %conv = zext i8 %call to i32, !dbg !8219
  %tobool = icmp ne i32 %conv, 0, !dbg !8219
  br i1 %tobool, label %if.then, label %if.end, !dbg !8220

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !8221
  br label %return, !dbg !8221

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8222
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !8222
  %bf.load1 = load i32, i32* %6, align 8, !dbg !8222
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !8222
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !8222
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !8224
  %arrayidx = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom, !dbg !8224
  %7 = load i32, i32* %mode.addr, align 4, !dbg !8225
  %idxprom3 = zext i32 %7 to i64, !dbg !8224
  %arrayidx4 = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx, i64 0, i64 %idxprom3, !dbg !8224
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !8224
  %tobool5 = icmp ne i32 %8, 0, !dbg !8224
  br i1 %tobool5, label %land.lhs.true6, label %if.end21, !dbg !8226

land.lhs.true6:                                   ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8227
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8228
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !8228
  %bf.load7 = load i32, i32* %11, align 8, !dbg !8228
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !8228
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !8228
  %call10 = call i32 @num_sign_bit_copies(%struct.rtx_def* %9, i32 %bf.clear9), !dbg !8229
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8230
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !8230
  %bf.load11 = load i32, i32* %13, align 8, !dbg !8230
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !8230
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !8230
  %idxprom14 = zext i32 %bf.clear13 to i64, !dbg !8231
  %arrayidx15 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom14, !dbg !8231
  %14 = load i32, i32* %mode.addr, align 4, !dbg !8232
  %idxprom16 = zext i32 %14 to i64, !dbg !8231
  %arrayidx17 = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx15, i64 0, i64 %idxprom16, !dbg !8231
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !8231
  %add = add i32 %15, 1, !dbg !8233
  %cmp18 = icmp uge i32 %call10, %add, !dbg !8234
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8235

if.then20:                                        ; preds = %land.lhs.true6
  store i8 1, i8* %retval, align 1, !dbg !8236
  br label %return, !dbg !8236

if.end21:                                         ; preds = %land.lhs.true6, %if.end
  store i8 0, i8* %retval, align 1, !dbg !8237
  br label %return, !dbg !8237

return:                                           ; preds = %if.end21, %if.then20, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !8238
  ret i8 %16, !dbg !8238
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_rtlanal() #0 !dbg !8239 {
entry:
  %i = alloca i32, align 4
  %format = alloca i8*, align 8
  %first = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i32 0, i32* %i, align 4, !dbg !8244
  br label %for.cond, !dbg !8246

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8247
  %cmp = icmp slt i32 %0, 139, !dbg !8249
  br i1 %cmp, label %for.body, label %for.end, !dbg !8250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %format, metadata !8251, metadata !DIExpression()), !dbg !8253
  %1 = load i32, i32* %i, align 4, !dbg !8254
  %idxprom = sext i32 %1 to i64, !dbg !8254
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !8254
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8254
  store i8* %2, i8** %format, align 8, !dbg !8253
  call void @llvm.dbg.declare(metadata i8** %first, metadata !8255, metadata !DIExpression()), !dbg !8256
  %3 = load i8*, i8** %format, align 8, !dbg !8257
  %call = call i8* @strpbrk(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)), !dbg !8258
  store i8* %call, i8** %first, align 8, !dbg !8256
  %4 = load i8*, i8** %first, align 8, !dbg !8259
  %tobool = icmp ne i8* %4, null, !dbg !8259
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8259

cond.true:                                        ; preds = %for.body
  %5 = load i8*, i8** %first, align 8, !dbg !8260
  %6 = load i8*, i8** %format, align 8, !dbg !8261
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !8262
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !8262
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8262
  br label %cond.end, !dbg !8259

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !8259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub, %cond.true ], [ -1, %cond.false ], !dbg !8259
  %conv = trunc i64 %cond to i32, !dbg !8259
  %7 = load i32, i32* %i, align 4, !dbg !8263
  %idxprom1 = sext i32 %7 to i64, !dbg !8264
  %arrayidx2 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom1, !dbg !8264
  store i32 %conv, i32* %arrayidx2, align 4, !dbg !8265
  br label %for.inc, !dbg !8266

for.inc:                                          ; preds = %cond.end
  %8 = load i32, i32* %i, align 4, !dbg !8267
  %inc = add nsw i32 %8, 1, !dbg !8267
  store i32 %inc, i32* %i, align 4, !dbg !8267
  br label %for.cond, !dbg !8268, !llvm.loop !8269

for.end:                                          ; preds = %for.cond
  call void @init_num_sign_bit_copies_in_rep(), !dbg !8271
  ret void, !dbg !8272
}

declare dso_local i8* @strpbrk(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_num_sign_bit_copies_in_rep() #0 !dbg !8273 {
entry:
  %mode = alloca i32, align 4
  %in_mode = alloca i32, align 4
  %i = alloca i32, align 4
  %wider = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata i32* %in_mode, metadata !8276, metadata !DIExpression()), !dbg !8277
  %0 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !8278
  %conv = zext i8 %0 to i32, !dbg !8278
  store i32 %conv, i32* %in_mode, align 4, !dbg !8280
  br label %for.cond, !dbg !8281

for.cond:                                         ; preds = %for.inc52, %entry
  %1 = load i32, i32* %in_mode, align 4, !dbg !8282
  %cmp = icmp ne i32 %1, 0, !dbg !8284
  br i1 %cmp, label %for.body, label %for.end56, !dbg !8285

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !8286
  %conv2 = zext i8 %2 to i32, !dbg !8286
  store i32 %conv2, i32* %mode, align 4, !dbg !8288
  br label %for.cond3, !dbg !8289

for.cond3:                                        ; preds = %for.inc47, %for.body
  %3 = load i32, i32* %mode, align 4, !dbg !8290
  %4 = load i32, i32* %in_mode, align 4, !dbg !8292
  %cmp4 = icmp ne i32 %3, %4, !dbg !8293
  br i1 %cmp4, label %for.body6, label %for.end51, !dbg !8294

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8295, metadata !DIExpression()), !dbg !8297
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 55), align 8, !dbg !8298
  %6 = load i32, i32* %mode, align 4, !dbg !8298
  %7 = load i32, i32* %in_mode, align 4, !dbg !8298
  %call = call i32 %5(i32 %6, i32 %7), !dbg !8298
  %cmp7 = icmp eq i32 %call, 0, !dbg !8298
  br i1 %cmp7, label %cond.false, label %lor.lhs.false, !dbg !8298

lor.lhs.false:                                    ; preds = %for.body6
  %8 = load i32, i32* %mode, align 4, !dbg !8298
  %idxprom = zext i32 %8 to i64, !dbg !8298
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !8298
  %9 = load i8, i8* %arrayidx, align 1, !dbg !8298
  %conv9 = zext i8 %9 to i32, !dbg !8298
  %10 = load i32, i32* %in_mode, align 4, !dbg !8298
  %cmp10 = icmp eq i32 %conv9, %10, !dbg !8298
  br i1 %cmp10, label %cond.false, label %cond.true, !dbg !8298

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 5004, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8298
  br label %cond.end, !dbg !8298

cond.false:                                       ; preds = %lor.lhs.false, %for.body6
  br label %cond.end, !dbg !8298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8298
  %11 = load i32, i32* %mode, align 4, !dbg !8299
  store i32 %11, i32* %i, align 4, !dbg !8301
  br label %for.cond12, !dbg !8302

for.cond12:                                       ; preds = %for.inc, %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !8303
  %13 = load i32, i32* %in_mode, align 4, !dbg !8305
  %cmp13 = icmp ne i32 %12, %13, !dbg !8306
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !8307

for.body15:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata i32* %wider, metadata !8308, metadata !DIExpression()), !dbg !8310
  %14 = load i32, i32* %i, align 4, !dbg !8311
  %idxprom16 = zext i32 %14 to i64, !dbg !8311
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom16, !dbg !8311
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !8311
  %conv18 = zext i8 %15 to i32, !dbg !8311
  store i32 %conv18, i32* %wider, align 4, !dbg !8310
  %16 = load i32 (i32, i32)*, i32 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 55), align 8, !dbg !8312
  %17 = load i32, i32* %i, align 4, !dbg !8314
  %18 = load i32, i32* %wider, align 4, !dbg !8315
  %call19 = call i32 %16(i32 %17, i32 %18), !dbg !8316
  %cmp20 = icmp eq i32 %call19, 98, !dbg !8317
  br i1 %cmp20, label %if.then, label %lor.lhs.false22, !dbg !8318

lor.lhs.false22:                                  ; preds = %for.body15
  %19 = load i32, i32* %in_mode, align 4, !dbg !8319
  %idxprom23 = zext i32 %19 to i64, !dbg !8320
  %arrayidx24 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom23, !dbg !8320
  %20 = load i32, i32* %mode, align 4, !dbg !8321
  %idxprom25 = zext i32 %20 to i64, !dbg !8320
  %arrayidx26 = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx24, i64 0, i64 %idxprom25, !dbg !8320
  %21 = load i32, i32* %arrayidx26, align 4, !dbg !8320
  %tobool = icmp ne i32 %21, 0, !dbg !8320
  br i1 %tobool, label %if.then, label %if.end, !dbg !8322

if.then:                                          ; preds = %lor.lhs.false22, %for.body15
  %22 = load i32, i32* %wider, align 4, !dbg !8323
  %idxprom27 = zext i32 %22 to i64, !dbg !8323
  %arrayidx28 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27, !dbg !8323
  %23 = load i8, i8* %arrayidx28, align 1, !dbg !8323
  %conv29 = zext i8 %23 to i16, !dbg !8323
  %conv30 = zext i16 %conv29 to i32, !dbg !8323
  %mul = mul nsw i32 %conv30, 8, !dbg !8323
  %conv31 = trunc i32 %mul to i16, !dbg !8323
  %conv32 = zext i16 %conv31 to i32, !dbg !8323
  %24 = load i32, i32* %i, align 4, !dbg !8324
  %idxprom33 = zext i32 %24 to i64, !dbg !8324
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom33, !dbg !8324
  %25 = load i8, i8* %arrayidx34, align 1, !dbg !8324
  %conv35 = zext i8 %25 to i16, !dbg !8324
  %conv36 = zext i16 %conv35 to i32, !dbg !8324
  %mul37 = mul nsw i32 %conv36, 8, !dbg !8324
  %conv38 = trunc i32 %mul37 to i16, !dbg !8324
  %conv39 = zext i16 %conv38 to i32, !dbg !8324
  %sub = sub nsw i32 %conv32, %conv39, !dbg !8325
  %26 = load i32, i32* %in_mode, align 4, !dbg !8326
  %idxprom40 = zext i32 %26 to i64, !dbg !8327
  %arrayidx41 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom40, !dbg !8327
  %27 = load i32, i32* %mode, align 4, !dbg !8328
  %idxprom42 = zext i32 %27 to i64, !dbg !8327
  %arrayidx43 = getelementptr inbounds [20 x i32], [20 x i32]* %arrayidx41, i64 0, i64 %idxprom42, !dbg !8327
  %28 = load i32, i32* %arrayidx43, align 4, !dbg !8329
  %add = add i32 %28, %sub, !dbg !8329
  store i32 %add, i32* %arrayidx43, align 4, !dbg !8329
  br label %if.end, !dbg !8327

if.end:                                           ; preds = %if.then, %lor.lhs.false22
  br label %for.inc, !dbg !8330

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %i, align 4, !dbg !8331
  %idxprom44 = zext i32 %29 to i64, !dbg !8331
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom44, !dbg !8331
  %30 = load i8, i8* %arrayidx45, align 1, !dbg !8331
  %conv46 = zext i8 %30 to i32, !dbg !8331
  store i32 %conv46, i32* %i, align 4, !dbg !8332
  br label %for.cond12, !dbg !8333, !llvm.loop !8334

for.end:                                          ; preds = %for.cond12
  br label %for.inc47, !dbg !8336

for.inc47:                                        ; preds = %for.end
  %31 = load i32, i32* %mode, align 4, !dbg !8337
  %idxprom48 = zext i32 %31 to i64, !dbg !8337
  %arrayidx49 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom48, !dbg !8337
  %32 = load i8, i8* %arrayidx49, align 1, !dbg !8337
  %conv50 = zext i8 %32 to i32, !dbg !8337
  store i32 %conv50, i32* %mode, align 4, !dbg !8338
  br label %for.cond3, !dbg !8339, !llvm.loop !8340

for.end51:                                        ; preds = %for.cond3
  br label %for.inc52, !dbg !8341

for.inc52:                                        ; preds = %for.end51
  %33 = load i32, i32* %mode, align 4, !dbg !8342
  %idxprom53 = zext i32 %33 to i64, !dbg !8342
  %arrayidx54 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom53, !dbg !8342
  %34 = load i8, i8* %arrayidx54, align 1, !dbg !8342
  %conv55 = zext i8 %34 to i32, !dbg !8342
  store i32 %conv55, i32* %in_mode, align 4, !dbg !8343
  br label %for.cond, !dbg !8344, !llvm.loop !8345

for.end56:                                        ; preds = %for.cond
  ret void, !dbg !8347
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @constant_pool_constant_p(%struct.rtx_def* %x) #0 !dbg !8348 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8353
  %call = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %0), !dbg !8354
  store %struct.rtx_def* %call, %struct.rtx_def** %x.addr, align 8, !dbg !8355
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8356
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8356
  %bf.load = load i32, i32* %2, align 8, !dbg !8356
  %bf.clear = and i32 %bf.load, 65535, !dbg !8356
  %cmp = icmp eq i32 %bf.clear, 32, !dbg !8357
  %conv = zext i1 %cmp to i32, !dbg !8357
  %conv1 = trunc i32 %conv to i8, !dbg !8356
  ret i8 %conv1, !dbg !8358
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @low_bitmask_len(i32 %mode, i64 %m) #0 !dbg !8359 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %m.addr = alloca i64, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store i64 %m, i64* %m.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %m.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8366
  %cmp = icmp ne i32 %0, 0, !dbg !8368
  br i1 %cmp, label %if.then, label %if.end9, !dbg !8369

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !8370
  %idxprom = zext i32 %1 to i64, !dbg !8370
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8370
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8370
  %conv = zext i8 %2 to i16, !dbg !8370
  %conv1 = zext i16 %conv to i32, !dbg !8370
  %mul = mul nsw i32 %conv1, 8, !dbg !8370
  %conv2 = trunc i32 %mul to i16, !dbg !8370
  %conv3 = zext i16 %conv2 to i32, !dbg !8370
  %cmp4 = icmp sgt i32 %conv3, 64, !dbg !8373
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !8374

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !8375
  br label %return, !dbg !8375

if.end:                                           ; preds = %if.then
  %3 = load i32, i32* %mode.addr, align 4, !dbg !8376
  %idxprom7 = zext i32 %3 to i64, !dbg !8376
  %arrayidx8 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom7, !dbg !8376
  %4 = load i64, i64* %arrayidx8, align 8, !dbg !8376
  %5 = load i64, i64* %m.addr, align 8, !dbg !8377
  %and = and i64 %5, %4, !dbg !8377
  store i64 %and, i64* %m.addr, align 8, !dbg !8377
  br label %if.end9, !dbg !8378

if.end9:                                          ; preds = %if.end, %entry
  %6 = load i64, i64* %m.addr, align 8, !dbg !8379
  %add = add i64 %6, 1, !dbg !8380
  %call = call i32 @exact_log2(i64 %add), !dbg !8381
  store i32 %call, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

return:                                           ; preds = %if.end9, %if.then6
  %7 = load i32, i32* %retval, align 4, !dbg !8383
  ret i32 %7, !dbg !8383
}

declare dso_local i32 @exact_log2(i64) #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* %dest, i32 %test_regno) #0 !dbg !8384 {
entry:
  %retval = alloca i8, align 1
  %dest.addr = alloca %struct.rtx_def*, align 8
  %test_regno.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i32 %test_regno, i32* %test_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %test_regno.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !8391, metadata !DIExpression()), !dbg !8392
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8393
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8393
  %bf.load = load i32, i32* %1, align 8, !dbg !8393
  %bf.clear = and i32 %bf.load, 65535, !dbg !8393
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !8395
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8396

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8397
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !8397
  %bf.load1 = load i32, i32* %3, align 8, !dbg !8397
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !8397
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !8397
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !8397
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8397
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8397
  %conv = zext i8 %4 to i16, !dbg !8397
  %conv3 = zext i16 %conv to i32, !dbg !8397
  %add = add nsw i32 %conv3, 4, !dbg !8398
  %sub = sub nsw i32 %add, 1, !dbg !8399
  %div = sdiv i32 %sub, 4, !dbg !8400
  %5 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8401
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8401
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8401
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8401
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !8401
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8401
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !8401
  %bf.load5 = load i32, i32* %7, align 8, !dbg !8401
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !8401
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !8401
  %idxprom8 = zext i32 %bf.clear7 to i64, !dbg !8401
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom8, !dbg !8401
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !8401
  %conv10 = zext i8 %8 to i16, !dbg !8401
  %conv11 = zext i16 %conv10 to i32, !dbg !8401
  %add12 = add nsw i32 %conv11, 4, !dbg !8402
  %sub13 = sub nsw i32 %add12, 1, !dbg !8403
  %div14 = sdiv i32 %sub13, 4, !dbg !8404
  %cmp15 = icmp eq i32 %div, %div14, !dbg !8405
  br i1 %cmp15, label %if.then, label %if.end, !dbg !8406

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8407
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !8407
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !8407
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !8407
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !8407
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !8407
  store %struct.rtx_def* %10, %struct.rtx_def** %dest.addr, align 8, !dbg !8408
  br label %if.end, !dbg !8409

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8410
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !8410
  %bf.load21 = load i32, i32* %12, align 8, !dbg !8410
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !8410
  %cmp23 = icmp eq i32 %bf.clear22, 37, !dbg !8410
  br i1 %cmp23, label %if.end26, label %if.then25, !dbg !8412

if.then25:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !8413
  br label %return, !dbg !8413

if.end26:                                         ; preds = %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8414
  %call = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !8414
  store i32 %call, i32* %regno, align 4, !dbg !8415
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8416
  %call27 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !8416
  %cmp28 = icmp ult i32 %call27, 53, !dbg !8416
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !8416

cond.true:                                        ; preds = %if.end26
  %15 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8416
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !8416
  %bf.load30 = load i32, i32* %16, align 8, !dbg !8416
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !8416
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !8416
  %17 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8416
  %call33 = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !8416
  %call34 = call i32 @end_hard_regno(i32 %bf.clear32, i32 %call33), !dbg !8416
  br label %cond.end, !dbg !8416

cond.false:                                       ; preds = %if.end26
  %18 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !8416
  %call35 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !8416
  %add36 = add i32 %call35, 1, !dbg !8416
  br label %cond.end, !dbg !8416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ %add36, %cond.false ], !dbg !8416
  store i32 %cond, i32* %endregno, align 4, !dbg !8417
  %19 = load i32, i32* %test_regno.addr, align 4, !dbg !8418
  %20 = load i32, i32* %regno, align 4, !dbg !8419
  %cmp37 = icmp uge i32 %19, %20, !dbg !8420
  br i1 %cmp37, label %land.rhs, label %land.end, !dbg !8421

land.rhs:                                         ; preds = %cond.end
  %21 = load i32, i32* %test_regno.addr, align 4, !dbg !8422
  %22 = load i32, i32* %endregno, align 4, !dbg !8423
  %cmp39 = icmp ult i32 %21, %22, !dbg !8424
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %23 = phi i1 [ false, %cond.end ], [ %cmp39, %land.rhs ], !dbg !8425
  %land.ext = zext i1 %23 to i32, !dbg !8421
  %conv41 = trunc i32 %land.ext to i8, !dbg !8426
  store i8 %conv41, i8* %retval, align 1, !dbg !8427
  br label %return, !dbg !8427

return:                                           ; preds = %land.end, %if.then25
  %24 = load i8, i8* %retval, align 1, !dbg !8428
  ret i8 %24, !dbg !8428
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #0 !dbg !8429 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %known_x.addr = alloca %struct.rtx_def*, align 8
  %known_mode.addr = alloca i32, align 4
  %known_ret.addr = alloca i64, align 8
  %nonzero = alloca i64, align 8
  %inner_nz = alloca i64, align 8
  %code = alloca i32, align 4
  %mode_width = alloca i32, align 4
  %alignment = alloca i64, align 8
  %nonzero_for_hook = alloca i64, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  %nonzero0 = alloca i64, align 8
  %nz0 = alloca i64, align 8
  %nz1 = alloca i64, align 8
  %sign_index = alloca i32, align 4
  %width0 = alloca i32, align 4
  %width1 = alloca i32, align 4
  %low0 = alloca i32, align 4
  %low1 = alloca i32, align 4
  %op0_maybe_minusp = alloca i64, align 8
  %op1_maybe_minusp = alloca i64, align 8
  %result_width = alloca i32, align 4
  %result_low = alloca i32, align 4
  %inner_mode = alloca i32, align 4
  %width = alloca i32, align 4
  %count = alloca i32, align 4
  %mode_mask = alloca i64, align 8
  %op_nonzero = alloca i64, align 8
  %inner = alloca i64, align 8
  %outer = alloca i64, align 8
  %nonzero_true = alloca i64, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8432, metadata !DIExpression()), !dbg !8433
  store %struct.rtx_def* %known_x, %struct.rtx_def** %known_x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %known_x.addr, metadata !8434, metadata !DIExpression()), !dbg !8435
  store i32 %known_mode, i32* %known_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_mode.addr, metadata !8436, metadata !DIExpression()), !dbg !8437
  store i64 %known_ret, i64* %known_ret.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %known_ret.addr, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata i64* %nonzero, metadata !8440, metadata !DIExpression()), !dbg !8441
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8442
  %idxprom = zext i32 %0 to i64, !dbg !8442
  %arrayidx = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !8442
  %1 = load i64, i64* %arrayidx, align 8, !dbg !8442
  store i64 %1, i64* %nonzero, align 8, !dbg !8441
  call void @llvm.dbg.declare(metadata i64* %inner_nz, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8445, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i32* %mode_width, metadata !8447, metadata !DIExpression()), !dbg !8448
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8449
  %idxprom1 = zext i32 %2 to i64, !dbg !8449
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1, !dbg !8449
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !8449
  %conv = zext i8 %3 to i16, !dbg !8449
  %conv3 = zext i16 %conv to i32, !dbg !8449
  %mul = mul nsw i32 %conv3, 8, !dbg !8449
  %conv4 = trunc i32 %mul to i16, !dbg !8449
  %conv5 = zext i16 %conv4 to i32, !dbg !8449
  store i32 %conv5, i32* %mode_width, align 4, !dbg !8448
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8450
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8450
  %bf.load = load i32, i32* %5, align 8, !dbg !8450
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8450
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8450
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !8450
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !8450
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !8450
  %conv8 = zext i8 %6 to i32, !dbg !8450
  %cmp = icmp eq i32 %conv8, 8, !dbg !8450
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8450

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8450
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !8450
  %bf.load10 = load i32, i32* %8, align 8, !dbg !8450
  %bf.lshr11 = lshr i32 %bf.load10, 16, !dbg !8450
  %bf.clear12 = and i32 %bf.lshr11, 255, !dbg !8450
  %idxprom13 = zext i32 %bf.clear12 to i64, !dbg !8450
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom13, !dbg !8450
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !8450
  %conv15 = zext i8 %9 to i32, !dbg !8450
  %cmp16 = icmp eq i32 %conv15, 9, !dbg !8450
  br i1 %cmp16, label %if.then, label %lor.lhs.false18, !dbg !8450

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8450
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !8450
  %bf.load19 = load i32, i32* %11, align 8, !dbg !8450
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !8450
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !8450
  %idxprom22 = zext i32 %bf.clear21 to i64, !dbg !8450
  %arrayidx23 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom22, !dbg !8450
  %12 = load i8, i8* %arrayidx23, align 1, !dbg !8450
  %conv24 = zext i8 %12 to i32, !dbg !8450
  %cmp25 = icmp eq i32 %conv24, 11, !dbg !8450
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !8450

lor.lhs.false27:                                  ; preds = %lor.lhs.false18
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8450
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !8450
  %bf.load28 = load i32, i32* %14, align 8, !dbg !8450
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !8450
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !8450
  %idxprom31 = zext i32 %bf.clear30 to i64, !dbg !8450
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom31, !dbg !8450
  %15 = load i8, i8* %arrayidx32, align 1, !dbg !8450
  %conv33 = zext i8 %15 to i32, !dbg !8450
  %cmp34 = icmp eq i32 %conv33, 17, !dbg !8450
  br i1 %cmp34, label %if.then, label %lor.lhs.false36, !dbg !8452

lor.lhs.false36:                                  ; preds = %lor.lhs.false27
  %16 = load i32, i32* %mode.addr, align 4, !dbg !8453
  %idxprom37 = zext i32 %16 to i64, !dbg !8453
  %arrayidx38 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom37, !dbg !8453
  %17 = load i8, i8* %arrayidx38, align 1, !dbg !8453
  %conv39 = zext i8 %17 to i32, !dbg !8453
  %cmp40 = icmp eq i32 %conv39, 8, !dbg !8453
  br i1 %cmp40, label %if.then, label %lor.lhs.false42, !dbg !8453

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %18 = load i32, i32* %mode.addr, align 4, !dbg !8453
  %idxprom43 = zext i32 %18 to i64, !dbg !8453
  %arrayidx44 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom43, !dbg !8453
  %19 = load i8, i8* %arrayidx44, align 1, !dbg !8453
  %conv45 = zext i8 %19 to i32, !dbg !8453
  %cmp46 = icmp eq i32 %conv45, 9, !dbg !8453
  br i1 %cmp46, label %if.then, label %lor.lhs.false48, !dbg !8453

lor.lhs.false48:                                  ; preds = %lor.lhs.false42
  %20 = load i32, i32* %mode.addr, align 4, !dbg !8453
  %idxprom49 = zext i32 %20 to i64, !dbg !8453
  %arrayidx50 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom49, !dbg !8453
  %21 = load i8, i8* %arrayidx50, align 1, !dbg !8453
  %conv51 = zext i8 %21 to i32, !dbg !8453
  %cmp52 = icmp eq i32 %conv51, 11, !dbg !8453
  br i1 %cmp52, label %if.then, label %lor.lhs.false54, !dbg !8453

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %22 = load i32, i32* %mode.addr, align 4, !dbg !8453
  %idxprom55 = zext i32 %22 to i64, !dbg !8453
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom55, !dbg !8453
  %23 = load i8, i8* %arrayidx56, align 1, !dbg !8453
  %conv57 = zext i8 %23 to i32, !dbg !8453
  %cmp58 = icmp eq i32 %conv57, 17, !dbg !8453
  br i1 %cmp58, label %if.then, label %lor.lhs.false60, !dbg !8454

lor.lhs.false60:                                  ; preds = %lor.lhs.false54
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !8455
  %bf.load61 = load i32, i32* %25, align 8, !dbg !8455
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !8455
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !8455
  %idxprom64 = zext i32 %bf.clear63 to i64, !dbg !8455
  %arrayidx65 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom64, !dbg !8455
  %26 = load i8, i8* %arrayidx65, align 1, !dbg !8455
  %conv66 = zext i8 %26 to i32, !dbg !8455
  %cmp67 = icmp eq i32 %conv66, 12, !dbg !8455
  br i1 %cmp67, label %if.then, label %lor.lhs.false69, !dbg !8455

lor.lhs.false69:                                  ; preds = %lor.lhs.false60
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !8455
  %bf.load70 = load i32, i32* %28, align 8, !dbg !8455
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !8455
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !8455
  %idxprom73 = zext i32 %bf.clear72 to i64, !dbg !8455
  %arrayidx74 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom73, !dbg !8455
  %29 = load i8, i8* %arrayidx74, align 1, !dbg !8455
  %conv75 = zext i8 %29 to i32, !dbg !8455
  %cmp76 = icmp eq i32 %conv75, 17, !dbg !8455
  br i1 %cmp76, label %if.then, label %lor.lhs.false78, !dbg !8455

lor.lhs.false78:                                  ; preds = %lor.lhs.false69
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !8455
  %bf.load79 = load i32, i32* %31, align 8, !dbg !8455
  %bf.lshr80 = lshr i32 %bf.load79, 16, !dbg !8455
  %bf.clear81 = and i32 %bf.lshr80, 255, !dbg !8455
  %idxprom82 = zext i32 %bf.clear81 to i64, !dbg !8455
  %arrayidx83 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom82, !dbg !8455
  %32 = load i8, i8* %arrayidx83, align 1, !dbg !8455
  %conv84 = zext i8 %32 to i32, !dbg !8455
  %cmp85 = icmp eq i32 %conv84, 13, !dbg !8455
  br i1 %cmp85, label %if.then, label %lor.lhs.false87, !dbg !8455

lor.lhs.false87:                                  ; preds = %lor.lhs.false78
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !8455
  %bf.load88 = load i32, i32* %34, align 8, !dbg !8455
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !8455
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !8455
  %idxprom91 = zext i32 %bf.clear90 to i64, !dbg !8455
  %arrayidx92 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom91, !dbg !8455
  %35 = load i8, i8* %arrayidx92, align 1, !dbg !8455
  %conv93 = zext i8 %35 to i32, !dbg !8455
  %cmp94 = icmp eq i32 %conv93, 14, !dbg !8455
  br i1 %cmp94, label %if.then, label %lor.lhs.false96, !dbg !8455

lor.lhs.false96:                                  ; preds = %lor.lhs.false87
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !8455
  %bf.load97 = load i32, i32* %37, align 8, !dbg !8455
  %bf.lshr98 = lshr i32 %bf.load97, 16, !dbg !8455
  %bf.clear99 = and i32 %bf.lshr98, 255, !dbg !8455
  %idxprom100 = zext i32 %bf.clear99 to i64, !dbg !8455
  %arrayidx101 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom100, !dbg !8455
  %38 = load i8, i8* %arrayidx101, align 1, !dbg !8455
  %conv102 = zext i8 %38 to i32, !dbg !8455
  %cmp103 = icmp eq i32 %conv102, 15, !dbg !8455
  br i1 %cmp103, label %if.then, label %lor.lhs.false105, !dbg !8455

lor.lhs.false105:                                 ; preds = %lor.lhs.false96
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8455
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !8455
  %bf.load106 = load i32, i32* %40, align 8, !dbg !8455
  %bf.lshr107 = lshr i32 %bf.load106, 16, !dbg !8455
  %bf.clear108 = and i32 %bf.lshr107, 255, !dbg !8455
  %idxprom109 = zext i32 %bf.clear108 to i64, !dbg !8455
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom109, !dbg !8455
  %41 = load i8, i8* %arrayidx110, align 1, !dbg !8455
  %conv111 = zext i8 %41 to i32, !dbg !8455
  %cmp112 = icmp eq i32 %conv111, 16, !dbg !8455
  br i1 %cmp112, label %if.then, label %lor.lhs.false114, !dbg !8456

lor.lhs.false114:                                 ; preds = %lor.lhs.false105
  %42 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom115 = zext i32 %42 to i64, !dbg !8457
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom115, !dbg !8457
  %43 = load i8, i8* %arrayidx116, align 1, !dbg !8457
  %conv117 = zext i8 %43 to i32, !dbg !8457
  %cmp118 = icmp eq i32 %conv117, 12, !dbg !8457
  br i1 %cmp118, label %if.then, label %lor.lhs.false120, !dbg !8457

lor.lhs.false120:                                 ; preds = %lor.lhs.false114
  %44 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom121 = zext i32 %44 to i64, !dbg !8457
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom121, !dbg !8457
  %45 = load i8, i8* %arrayidx122, align 1, !dbg !8457
  %conv123 = zext i8 %45 to i32, !dbg !8457
  %cmp124 = icmp eq i32 %conv123, 17, !dbg !8457
  br i1 %cmp124, label %if.then, label %lor.lhs.false126, !dbg !8457

lor.lhs.false126:                                 ; preds = %lor.lhs.false120
  %46 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom127 = zext i32 %46 to i64, !dbg !8457
  %arrayidx128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom127, !dbg !8457
  %47 = load i8, i8* %arrayidx128, align 1, !dbg !8457
  %conv129 = zext i8 %47 to i32, !dbg !8457
  %cmp130 = icmp eq i32 %conv129, 13, !dbg !8457
  br i1 %cmp130, label %if.then, label %lor.lhs.false132, !dbg !8457

lor.lhs.false132:                                 ; preds = %lor.lhs.false126
  %48 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom133 = zext i32 %48 to i64, !dbg !8457
  %arrayidx134 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom133, !dbg !8457
  %49 = load i8, i8* %arrayidx134, align 1, !dbg !8457
  %conv135 = zext i8 %49 to i32, !dbg !8457
  %cmp136 = icmp eq i32 %conv135, 14, !dbg !8457
  br i1 %cmp136, label %if.then, label %lor.lhs.false138, !dbg !8457

lor.lhs.false138:                                 ; preds = %lor.lhs.false132
  %50 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom139 = zext i32 %50 to i64, !dbg !8457
  %arrayidx140 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom139, !dbg !8457
  %51 = load i8, i8* %arrayidx140, align 1, !dbg !8457
  %conv141 = zext i8 %51 to i32, !dbg !8457
  %cmp142 = icmp eq i32 %conv141, 15, !dbg !8457
  br i1 %cmp142, label %if.then, label %lor.lhs.false144, !dbg !8457

lor.lhs.false144:                                 ; preds = %lor.lhs.false138
  %52 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %idxprom145 = zext i32 %52 to i64, !dbg !8457
  %arrayidx146 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom145, !dbg !8457
  %53 = load i8, i8* %arrayidx146, align 1, !dbg !8457
  %conv147 = zext i8 %53 to i32, !dbg !8457
  %cmp148 = icmp eq i32 %conv147, 16, !dbg !8457
  br i1 %cmp148, label %if.then, label %if.end, !dbg !8458

if.then:                                          ; preds = %lor.lhs.false144, %lor.lhs.false138, %lor.lhs.false132, %lor.lhs.false126, %lor.lhs.false120, %lor.lhs.false114, %lor.lhs.false105, %lor.lhs.false96, %lor.lhs.false87, %lor.lhs.false78, %lor.lhs.false69, %lor.lhs.false60, %lor.lhs.false54, %lor.lhs.false48, %lor.lhs.false42, %lor.lhs.false36, %lor.lhs.false27, %lor.lhs.false18, %lor.lhs.false, %entry
  %54 = load i64, i64* %nonzero, align 8, !dbg !8459
  store i64 %54, i64* %retval, align 8, !dbg !8460
  br label %return, !dbg !8460

if.end:                                           ; preds = %lor.lhs.false144
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8461
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !8461
  %bf.load150 = load i32, i32* %56, align 8, !dbg !8461
  %bf.lshr151 = lshr i32 %bf.load150, 16, !dbg !8461
  %bf.clear152 = and i32 %bf.lshr151, 255, !dbg !8461
  %idxprom153 = zext i32 %bf.clear152 to i64, !dbg !8461
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom153, !dbg !8461
  %57 = load i8, i8* %arrayidx154, align 1, !dbg !8461
  %conv155 = zext i8 %57 to i16, !dbg !8461
  %conv156 = zext i16 %conv155 to i32, !dbg !8461
  %mul157 = mul nsw i32 %conv156, 8, !dbg !8461
  %conv158 = trunc i32 %mul157 to i16, !dbg !8461
  %conv159 = zext i16 %conv158 to i32, !dbg !8461
  %58 = load i32, i32* %mode_width, align 4, !dbg !8463
  %cmp160 = icmp ugt i32 %conv159, %58, !dbg !8464
  br i1 %cmp160, label %if.then162, label %if.end175, !dbg !8465

if.then162:                                       ; preds = %if.end
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8466
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !8466
  %bf.load163 = load i32, i32* %60, align 8, !dbg !8466
  %bf.lshr164 = lshr i32 %bf.load163, 16, !dbg !8466
  %bf.clear165 = and i32 %bf.lshr164, 255, !dbg !8466
  store i32 %bf.clear165, i32* %mode.addr, align 4, !dbg !8468
  %61 = load i32, i32* %mode.addr, align 4, !dbg !8469
  %idxprom166 = zext i32 %61 to i64, !dbg !8469
  %arrayidx167 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom166, !dbg !8469
  %62 = load i64, i64* %arrayidx167, align 8, !dbg !8469
  store i64 %62, i64* %nonzero, align 8, !dbg !8470
  %63 = load i32, i32* %mode.addr, align 4, !dbg !8471
  %idxprom168 = zext i32 %63 to i64, !dbg !8471
  %arrayidx169 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom168, !dbg !8471
  %64 = load i8, i8* %arrayidx169, align 1, !dbg !8471
  %conv170 = zext i8 %64 to i16, !dbg !8471
  %conv171 = zext i16 %conv170 to i32, !dbg !8471
  %mul172 = mul nsw i32 %conv171, 8, !dbg !8471
  %conv173 = trunc i32 %mul172 to i16, !dbg !8471
  %conv174 = zext i16 %conv173 to i32, !dbg !8471
  store i32 %conv174, i32* %mode_width, align 4, !dbg !8472
  br label %if.end175, !dbg !8473

if.end175:                                        ; preds = %if.then162, %if.end
  %65 = load i32, i32* %mode_width, align 4, !dbg !8474
  %cmp176 = icmp ugt i32 %65, 64, !dbg !8476
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !8477

if.then178:                                       ; preds = %if.end175
  %66 = load i64, i64* %nonzero, align 8, !dbg !8478
  store i64 %66, i64* %retval, align 8, !dbg !8479
  br label %return, !dbg !8479

if.end179:                                        ; preds = %if.end175
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8480
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !8480
  %bf.load180 = load i32, i32* %68, align 8, !dbg !8480
  %bf.lshr181 = lshr i32 %bf.load180, 16, !dbg !8480
  %bf.clear182 = and i32 %bf.lshr181, 255, !dbg !8480
  %cmp183 = icmp ne i32 %bf.clear182, 0, !dbg !8482
  br i1 %cmp183, label %land.lhs.true, label %if.end248, !dbg !8483

land.lhs.true:                                    ; preds = %if.end179
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8484
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !8484
  %bf.load185 = load i32, i32* %70, align 8, !dbg !8484
  %bf.lshr186 = lshr i32 %bf.load185, 16, !dbg !8484
  %bf.clear187 = and i32 %bf.lshr186, 255, !dbg !8484
  %71 = load i32, i32* %mode.addr, align 4, !dbg !8485
  %cmp188 = icmp ne i32 %bf.clear187, %71, !dbg !8486
  br i1 %cmp188, label %land.lhs.true190, label %if.end248, !dbg !8487

land.lhs.true190:                                 ; preds = %land.lhs.true
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8488
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !8488
  %bf.load191 = load i32, i32* %73, align 8, !dbg !8488
  %bf.lshr192 = lshr i32 %bf.load191, 16, !dbg !8488
  %bf.clear193 = and i32 %bf.lshr192, 255, !dbg !8488
  %idxprom194 = zext i32 %bf.clear193 to i64, !dbg !8488
  %arrayidx195 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom194, !dbg !8488
  %74 = load i8, i8* %arrayidx195, align 1, !dbg !8488
  %conv196 = zext i8 %74 to i16, !dbg !8488
  %conv197 = zext i16 %conv196 to i32, !dbg !8488
  %mul198 = mul nsw i32 %conv197, 8, !dbg !8488
  %conv199 = trunc i32 %mul198 to i16, !dbg !8488
  %conv200 = zext i16 %conv199 to i32, !dbg !8488
  %cmp201 = icmp sle i32 %conv200, 32, !dbg !8489
  br i1 %cmp201, label %land.lhs.true203, label %if.end248, !dbg !8490

land.lhs.true203:                                 ; preds = %land.lhs.true190
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8491
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !8491
  %bf.load204 = load i32, i32* %76, align 8, !dbg !8491
  %bf.lshr205 = lshr i32 %bf.load204, 16, !dbg !8491
  %bf.clear206 = and i32 %bf.lshr205, 255, !dbg !8491
  %idxprom207 = zext i32 %bf.clear206 to i64, !dbg !8491
  %arrayidx208 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom207, !dbg !8491
  %77 = load i8, i8* %arrayidx208, align 1, !dbg !8491
  %conv209 = zext i8 %77 to i16, !dbg !8491
  %conv210 = zext i16 %conv209 to i32, !dbg !8491
  %mul211 = mul nsw i32 %conv210, 8, !dbg !8491
  %conv212 = trunc i32 %mul211 to i16, !dbg !8491
  %conv213 = zext i16 %conv212 to i32, !dbg !8491
  %cmp214 = icmp sle i32 %conv213, 64, !dbg !8492
  br i1 %cmp214, label %land.lhs.true216, label %if.end248, !dbg !8493

land.lhs.true216:                                 ; preds = %land.lhs.true203
  %78 = load i32, i32* %mode.addr, align 4, !dbg !8494
  %idxprom217 = zext i32 %78 to i64, !dbg !8494
  %arrayidx218 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom217, !dbg !8494
  %79 = load i8, i8* %arrayidx218, align 1, !dbg !8494
  %conv219 = zext i8 %79 to i16, !dbg !8494
  %conv220 = zext i16 %conv219 to i32, !dbg !8494
  %mul221 = mul nsw i32 %conv220, 8, !dbg !8494
  %conv222 = trunc i32 %mul221 to i16, !dbg !8494
  %conv223 = zext i16 %conv222 to i32, !dbg !8494
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8495
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !8495
  %bf.load224 = load i32, i32* %81, align 8, !dbg !8495
  %bf.lshr225 = lshr i32 %bf.load224, 16, !dbg !8495
  %bf.clear226 = and i32 %bf.lshr225, 255, !dbg !8495
  %idxprom227 = zext i32 %bf.clear226 to i64, !dbg !8495
  %arrayidx228 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom227, !dbg !8495
  %82 = load i8, i8* %arrayidx228, align 1, !dbg !8495
  %conv229 = zext i8 %82 to i16, !dbg !8495
  %conv230 = zext i16 %conv229 to i32, !dbg !8495
  %mul231 = mul nsw i32 %conv230, 8, !dbg !8495
  %conv232 = trunc i32 %mul231 to i16, !dbg !8495
  %conv233 = zext i16 %conv232 to i32, !dbg !8495
  %cmp234 = icmp sgt i32 %conv223, %conv233, !dbg !8496
  br i1 %cmp234, label %if.then236, label %if.end248, !dbg !8497

if.then236:                                       ; preds = %land.lhs.true216
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8498
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8500
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !8500
  %bf.load237 = load i32, i32* %85, align 8, !dbg !8500
  %bf.lshr238 = lshr i32 %bf.load237, 16, !dbg !8500
  %bf.clear239 = and i32 %bf.lshr238, 255, !dbg !8500
  %86 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8501
  %87 = load i32, i32* %known_mode.addr, align 4, !dbg !8502
  %88 = load i64, i64* %known_ret.addr, align 8, !dbg !8503
  %call = call i64 @cached_nonzero_bits(%struct.rtx_def* %83, i32 %bf.clear239, %struct.rtx_def* %86, i32 %87, i64 %88), !dbg !8504
  %89 = load i64, i64* %nonzero, align 8, !dbg !8505
  %and = and i64 %89, %call, !dbg !8505
  store i64 %and, i64* %nonzero, align 8, !dbg !8505
  %90 = load i32, i32* %mode.addr, align 4, !dbg !8506
  %idxprom240 = zext i32 %90 to i64, !dbg !8506
  %arrayidx241 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom240, !dbg !8506
  %91 = load i64, i64* %arrayidx241, align 8, !dbg !8506
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8507
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !8507
  %bf.load242 = load i32, i32* %93, align 8, !dbg !8507
  %bf.lshr243 = lshr i32 %bf.load242, 16, !dbg !8507
  %bf.clear244 = and i32 %bf.lshr243, 255, !dbg !8507
  %idxprom245 = zext i32 %bf.clear244 to i64, !dbg !8507
  %arrayidx246 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom245, !dbg !8507
  %94 = load i64, i64* %arrayidx246, align 8, !dbg !8507
  %neg = xor i64 %94, -1, !dbg !8508
  %and247 = and i64 %91, %neg, !dbg !8509
  %95 = load i64, i64* %nonzero, align 8, !dbg !8510
  %or = or i64 %95, %and247, !dbg !8510
  store i64 %or, i64* %nonzero, align 8, !dbg !8510
  %96 = load i64, i64* %nonzero, align 8, !dbg !8511
  store i64 %96, i64* %retval, align 8, !dbg !8512
  br label %return, !dbg !8512

if.end248:                                        ; preds = %land.lhs.true216, %land.lhs.true203, %land.lhs.true190, %land.lhs.true, %if.end179
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8513
  %98 = bitcast %struct.rtx_def* %97 to i32*, !dbg !8513
  %bf.load249 = load i32, i32* %98, align 8, !dbg !8513
  %bf.clear250 = and i32 %bf.load249, 65535, !dbg !8513
  store i32 %bf.clear250, i32* %code, align 4, !dbg !8514
  %99 = load i32, i32* %code, align 4, !dbg !8515
  switch i32 %99, label %sw.default898 [
    i32 37, label %sw.bb
    i32 30, label %sw.bb297
    i32 43, label %sw.bb299
    i32 81, label %sw.bb300
    i32 80, label %sw.bb300
    i32 92, label %sw.bb300
    i32 97, label %sw.bb300
    i32 83, label %sw.bb300
    i32 87, label %sw.bb300
    i32 94, label %sw.bb300
    i32 85, label %sw.bb300
    i32 89, label %sw.bb300
    i32 96, label %sw.bb300
    i32 82, label %sw.bb300
    i32 86, label %sw.bb300
    i32 93, label %sw.bb300
    i32 84, label %sw.bb300
    i32 88, label %sw.bb300
    i32 95, label %sw.bb300
    i32 90, label %sw.bb300
    i32 91, label %sw.bb300
    i32 51, label %sw.bb314
    i32 111, label %sw.bb336
    i32 100, label %sw.bb337
    i32 99, label %sw.bb345
    i32 98, label %sw.bb373
    i32 61, label %sw.bb434
    i32 63, label %sw.bb447
    i32 62, label %sw.bb447
    i32 72, label %sw.bb447
    i32 73, label %sw.bb447
    i32 70, label %sw.bb447
    i32 71, label %sw.bb447
    i32 49, label %sw.bb465
    i32 50, label %sw.bb465
    i32 52, label %sw.bb465
    i32 55, label %sw.bb465
    i32 59, label %sw.bb465
    i32 58, label %sw.bb465
    i32 60, label %sw.bb465
    i32 120, label %sw.bb597
    i32 39, label %sw.bb628
    i32 67, label %sw.bb743
    i32 68, label %sw.bb743
    i32 65, label %sw.bb743
    i32 66, label %sw.bb743
    i32 114, label %sw.bb871
    i32 117, label %sw.bb871
    i32 115, label %sw.bb877
    i32 116, label %sw.bb878
    i32 118, label %sw.bb879
    i32 47, label %sw.bb880
  ], !dbg !8516

sw.bb:                                            ; preds = %if.end248
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8517
  %101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8520
  %cmp251 = icmp eq %struct.rtx_def* %100, %101, !dbg !8521
  br i1 %cmp251, label %land.lhs.true259, label %lor.lhs.false253, !dbg !8522

lor.lhs.false253:                                 ; preds = %sw.bb
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8523
  %103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !8524
  %cmp254 = icmp eq %struct.rtx_def* %102, %103, !dbg !8525
  br i1 %cmp254, label %land.lhs.true259, label %lor.lhs.false256, !dbg !8526

lor.lhs.false256:                                 ; preds = %lor.lhs.false253
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8527
  %105 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !8528
  %cmp257 = icmp eq %struct.rtx_def* %104, %105, !dbg !8529
  br i1 %cmp257, label %land.lhs.true259, label %if.end290, !dbg !8530

land.lhs.true259:                                 ; preds = %lor.lhs.false256, %lor.lhs.false253, %sw.bb
  %106 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 1, i32 9), align 8, !dbg !8531
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8531
  %call260 = call i32 @rhs_regno(%struct.rtx_def* %107), !dbg !8531
  %idxprom261 = zext i32 %call260 to i64, !dbg !8531
  %arrayidx262 = getelementptr inbounds i8, i8* %106, i64 %idxprom261, !dbg !8531
  %108 = load i8, i8* %arrayidx262, align 1, !dbg !8531
  %conv263 = zext i8 %108 to i32, !dbg !8531
  %tobool = icmp ne i32 %conv263, 0, !dbg !8531
  br i1 %tobool, label %if.then264, label %if.end290, !dbg !8532

if.then264:                                       ; preds = %land.lhs.true259
  call void @llvm.dbg.declare(metadata i64* %alignment, metadata !8533, metadata !DIExpression()), !dbg !8535
  %109 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 1, i32 9), align 8, !dbg !8536
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8536
  %call265 = call i32 @rhs_regno(%struct.rtx_def* %110), !dbg !8536
  %idxprom266 = zext i32 %call265 to i64, !dbg !8536
  %arrayidx267 = getelementptr inbounds i8, i8* %109, i64 %idxprom266, !dbg !8536
  %111 = load i8, i8* %arrayidx267, align 1, !dbg !8536
  %conv268 = zext i8 %111 to i32, !dbg !8536
  %div = sdiv i32 %conv268, 8, !dbg !8537
  %conv269 = sext i32 %div to i64, !dbg !8536
  store i64 %conv269, i64* %alignment, align 8, !dbg !8535
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8538
  %113 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8540
  %cmp270 = icmp eq %struct.rtx_def* %112, %113, !dbg !8541
  br i1 %cmp270, label %land.lhs.true272, label %if.end287, !dbg !8542

land.lhs.true272:                                 ; preds = %if.then264
  %114 = load i32, i32* @target_flags, align 4, !dbg !8543
  %and273 = and i32 %114, 8192, !dbg !8543
  %cmp274 = icmp eq i32 %and273, 0, !dbg !8543
  br i1 %cmp274, label %land.lhs.true276, label %if.end287, !dbg !8543

land.lhs.true276:                                 ; preds = %land.lhs.true272
  %115 = load i32, i32* @target_flags, align 4, !dbg !8543
  %and277 = and i32 %115, 4, !dbg !8543
  %cmp278 = icmp ne i32 %and277, 0, !dbg !8543
  br i1 %cmp278, label %if.end287, label %lor.lhs.false280, !dbg !8543

lor.lhs.false280:                                 ; preds = %land.lhs.true276
  %call281 = call i32 @ix86_cfun_abi(), !dbg !8543
  %cmp282 = icmp eq i32 %call281, 1, !dbg !8543
  br i1 %cmp282, label %if.end287, label %if.then284, !dbg !8544

if.then284:                                       ; preds = %lor.lhs.false280
  %116 = load i64, i64* %alignment, align 8, !dbg !8545
  %cmp285 = icmp ult i64 4, %116, !dbg !8545
  br i1 %cmp285, label %cond.true, label %cond.false, !dbg !8545

cond.true:                                        ; preds = %if.then284
  br label %cond.end, !dbg !8545

cond.false:                                       ; preds = %if.then284
  %117 = load i64, i64* %alignment, align 8, !dbg !8545
  br label %cond.end, !dbg !8545

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4, %cond.true ], [ %117, %cond.false ], !dbg !8545
  store i64 %cond, i64* %alignment, align 8, !dbg !8546
  br label %if.end287, !dbg !8547

if.end287:                                        ; preds = %cond.end, %lor.lhs.false280, %land.lhs.true276, %land.lhs.true272, %if.then264
  %118 = load i64, i64* %alignment, align 8, !dbg !8548
  %sub = sub i64 %118, 1, !dbg !8549
  %neg288 = xor i64 %sub, -1, !dbg !8550
  %119 = load i64, i64* %nonzero, align 8, !dbg !8551
  %and289 = and i64 %119, %neg288, !dbg !8551
  store i64 %and289, i64* %nonzero, align 8, !dbg !8551
  br label %if.end290, !dbg !8552

if.end290:                                        ; preds = %if.end287, %land.lhs.true259, %lor.lhs.false256
  call void @llvm.dbg.declare(metadata i64* %nonzero_for_hook, metadata !8553, metadata !DIExpression()), !dbg !8555
  %120 = load i64, i64* %nonzero, align 8, !dbg !8556
  store i64 %120, i64* %nonzero_for_hook, align 8, !dbg !8555
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !8557, metadata !DIExpression()), !dbg !8558
  %121 = load %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 2), align 8, !dbg !8559
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8560
  %123 = load i32, i32* %mode.addr, align 4, !dbg !8561
  %124 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8562
  %125 = load i32, i32* %known_mode.addr, align 4, !dbg !8563
  %126 = load i64, i64* %known_ret.addr, align 8, !dbg !8564
  %call291 = call %struct.rtx_def* %121(%struct.rtx_def* %122, i32 %123, %struct.rtx_def* %124, i32 %125, i64 %126, i64* %nonzero_for_hook), !dbg !8565
  store %struct.rtx_def* %call291, %struct.rtx_def** %new_rtx, align 8, !dbg !8558
  %127 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8566
  %tobool292 = icmp ne %struct.rtx_def* %127, null, !dbg !8566
  br i1 %tobool292, label %if.then293, label %if.end296, !dbg !8568

if.then293:                                       ; preds = %if.end290
  %128 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8569
  %129 = load i32, i32* %mode.addr, align 4, !dbg !8570
  %130 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8571
  %131 = load i32, i32* %known_mode.addr, align 4, !dbg !8572
  %132 = load i64, i64* %known_ret.addr, align 8, !dbg !8573
  %call294 = call i64 @cached_nonzero_bits(%struct.rtx_def* %128, i32 %129, %struct.rtx_def* %130, i32 %131, i64 %132), !dbg !8574
  %133 = load i64, i64* %nonzero_for_hook, align 8, !dbg !8575
  %and295 = and i64 %133, %call294, !dbg !8575
  store i64 %and295, i64* %nonzero_for_hook, align 8, !dbg !8575
  br label %if.end296, !dbg !8576

if.end296:                                        ; preds = %if.then293, %if.end290
  %134 = load i64, i64* %nonzero_for_hook, align 8, !dbg !8577
  store i64 %134, i64* %retval, align 8, !dbg !8578
  br label %return, !dbg !8578

sw.bb297:                                         ; preds = %if.end248
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8579
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !8579
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !8579
  %arrayidx298 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8579
  %136 = load i64, i64* %arrayidx298, align 8, !dbg !8579
  store i64 %136, i64* %retval, align 8, !dbg !8580
  br label %return, !dbg !8580

sw.bb299:                                         ; preds = %if.end248
  br label %sw.epilog899, !dbg !8581

sw.bb300:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8582
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !8582
  %bf.load301 = load i32, i32* %138, align 8, !dbg !8582
  %bf.lshr302 = lshr i32 %bf.load301, 16, !dbg !8582
  %bf.clear303 = and i32 %bf.lshr302, 255, !dbg !8582
  %idxprom304 = zext i32 %bf.clear303 to i64, !dbg !8582
  %arrayidx305 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom304, !dbg !8582
  %139 = load i8, i8* %arrayidx305, align 1, !dbg !8582
  %conv306 = zext i8 %139 to i32, !dbg !8582
  %cmp307 = icmp eq i32 %conv306, 2, !dbg !8584
  br i1 %cmp307, label %land.lhs.true309, label %if.end313, !dbg !8585

land.lhs.true309:                                 ; preds = %sw.bb300
  %140 = load i32, i32* %mode_width, align 4, !dbg !8586
  %cmp310 = icmp ule i32 %140, 64, !dbg !8587
  br i1 %cmp310, label %if.then312, label %if.end313, !dbg !8588

if.then312:                                       ; preds = %land.lhs.true309
  store i64 1, i64* %nonzero, align 8, !dbg !8589
  br label %if.end313, !dbg !8590

if.end313:                                        ; preds = %if.then312, %land.lhs.true309, %sw.bb300
  br label %sw.epilog899, !dbg !8591

sw.bb314:                                         ; preds = %if.end248
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8592
  %142 = bitcast %struct.rtx_def* %141 to i32*, !dbg !8592
  %bf.load315 = load i32, i32* %142, align 8, !dbg !8592
  %bf.lshr316 = lshr i32 %bf.load315, 16, !dbg !8592
  %bf.clear317 = and i32 %bf.lshr316, 255, !dbg !8592
  %idxprom318 = zext i32 %bf.clear317 to i64, !dbg !8592
  %arrayidx319 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom318, !dbg !8592
  %143 = load i8, i8* %arrayidx319, align 1, !dbg !8592
  %conv320 = zext i8 %143 to i16, !dbg !8592
  %conv321 = zext i16 %conv320 to i32, !dbg !8592
  %144 = load i32, i32* %mode_width, align 4, !dbg !8594
  %cmp322 = icmp ult i32 %conv321, %144, !dbg !8595
  br i1 %cmp322, label %if.then324, label %if.end335, !dbg !8596

if.then324:                                       ; preds = %sw.bb314
  %145 = load i32, i32* %mode.addr, align 4, !dbg !8597
  %idxprom325 = zext i32 %145 to i64, !dbg !8597
  %arrayidx326 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom325, !dbg !8597
  %146 = load i64, i64* %arrayidx326, align 8, !dbg !8597
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8598
  %148 = bitcast %struct.rtx_def* %147 to i32*, !dbg !8598
  %bf.load327 = load i32, i32* %148, align 8, !dbg !8598
  %bf.lshr328 = lshr i32 %bf.load327, 16, !dbg !8598
  %bf.clear329 = and i32 %bf.lshr328, 255, !dbg !8598
  %idxprom330 = zext i32 %bf.clear329 to i64, !dbg !8598
  %arrayidx331 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom330, !dbg !8598
  %149 = load i64, i64* %arrayidx331, align 8, !dbg !8598
  %neg332 = xor i64 %149, -1, !dbg !8599
  %and333 = and i64 %146, %neg332, !dbg !8600
  %150 = load i64, i64* %nonzero, align 8, !dbg !8601
  %or334 = or i64 %150, %and333, !dbg !8601
  store i64 %or334, i64* %nonzero, align 8, !dbg !8601
  br label %if.end335, !dbg !8602

if.end335:                                        ; preds = %if.then324, %sw.bb314
  br label %sw.epilog899, !dbg !8603

sw.bb336:                                         ; preds = %if.end248
  br label %sw.epilog899, !dbg !8604

sw.bb337:                                         ; preds = %if.end248
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8605
  %u338 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1, !dbg !8605
  %fld = bitcast %union.u* %u338 to [1 x %union.rtunion_def]*, !dbg !8605
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8605
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**, !dbg !8605
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8605
  %153 = load i32, i32* %mode.addr, align 4, !dbg !8606
  %154 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8607
  %155 = load i32, i32* %known_mode.addr, align 4, !dbg !8608
  %156 = load i64, i64* %known_ret.addr, align 8, !dbg !8609
  %call340 = call i64 @cached_nonzero_bits(%struct.rtx_def* %152, i32 %153, %struct.rtx_def* %154, i32 %155, i64 %156), !dbg !8610
  %157 = load i32, i32* %mode.addr, align 4, !dbg !8611
  %idxprom341 = zext i32 %157 to i64, !dbg !8611
  %arrayidx342 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom341, !dbg !8611
  %158 = load i64, i64* %arrayidx342, align 8, !dbg !8611
  %and343 = and i64 %call340, %158, !dbg !8612
  %159 = load i64, i64* %nonzero, align 8, !dbg !8613
  %and344 = and i64 %159, %and343, !dbg !8613
  store i64 %and344, i64* %nonzero, align 8, !dbg !8613
  br label %sw.epilog899, !dbg !8614

sw.bb345:                                         ; preds = %if.end248
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8615
  %u346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !8615
  %fld347 = bitcast %union.u* %u346 to [1 x %union.rtunion_def]*, !dbg !8615
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i64 0, i64 0, !dbg !8615
  %rt_rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**, !dbg !8615
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx349, align 8, !dbg !8615
  %162 = load i32, i32* %mode.addr, align 4, !dbg !8616
  %163 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8617
  %164 = load i32, i32* %known_mode.addr, align 4, !dbg !8618
  %165 = load i64, i64* %known_ret.addr, align 8, !dbg !8619
  %call350 = call i64 @cached_nonzero_bits(%struct.rtx_def* %161, i32 %162, %struct.rtx_def* %163, i32 %164, i64 %165), !dbg !8620
  %166 = load i64, i64* %nonzero, align 8, !dbg !8621
  %and351 = and i64 %166, %call350, !dbg !8621
  store i64 %and351, i64* %nonzero, align 8, !dbg !8621
  %167 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8622
  %u352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !8622
  %fld353 = bitcast %union.u* %u352 to [1 x %union.rtunion_def]*, !dbg !8622
  %arrayidx354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, !dbg !8622
  %rt_rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**, !dbg !8622
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx355, align 8, !dbg !8622
  %169 = bitcast %struct.rtx_def* %168 to i32*, !dbg !8622
  %bf.load356 = load i32, i32* %169, align 8, !dbg !8622
  %bf.lshr357 = lshr i32 %bf.load356, 16, !dbg !8622
  %bf.clear358 = and i32 %bf.lshr357, 255, !dbg !8622
  %cmp359 = icmp ne i32 %bf.clear358, 0, !dbg !8624
  br i1 %cmp359, label %if.then361, label %if.end372, !dbg !8625

if.then361:                                       ; preds = %sw.bb345
  %170 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8626
  %u362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !8626
  %fld363 = bitcast %union.u* %u362 to [1 x %union.rtunion_def]*, !dbg !8626
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i64 0, i64 0, !dbg !8626
  %rt_rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**, !dbg !8626
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx365, align 8, !dbg !8626
  %172 = bitcast %struct.rtx_def* %171 to i32*, !dbg !8626
  %bf.load366 = load i32, i32* %172, align 8, !dbg !8626
  %bf.lshr367 = lshr i32 %bf.load366, 16, !dbg !8626
  %bf.clear368 = and i32 %bf.lshr367, 255, !dbg !8626
  %idxprom369 = zext i32 %bf.clear368 to i64, !dbg !8626
  %arrayidx370 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom369, !dbg !8626
  %173 = load i64, i64* %arrayidx370, align 8, !dbg !8626
  %174 = load i64, i64* %nonzero, align 8, !dbg !8627
  %and371 = and i64 %174, %173, !dbg !8627
  store i64 %and371, i64* %nonzero, align 8, !dbg !8627
  br label %if.end372, !dbg !8628

if.end372:                                        ; preds = %if.then361, %sw.bb345
  br label %sw.epilog899, !dbg !8629

sw.bb373:                                         ; preds = %if.end248
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8630
  %u374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !8630
  %fld375 = bitcast %union.u* %u374 to [1 x %union.rtunion_def]*, !dbg !8630
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i64 0, i64 0, !dbg !8630
  %rt_rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**, !dbg !8630
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx377, align 8, !dbg !8630
  %177 = load i32, i32* %mode.addr, align 4, !dbg !8631
  %178 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8632
  %179 = load i32, i32* %known_mode.addr, align 4, !dbg !8633
  %180 = load i64, i64* %known_ret.addr, align 8, !dbg !8634
  %call378 = call i64 @cached_nonzero_bits(%struct.rtx_def* %176, i32 %177, %struct.rtx_def* %178, i32 %179, i64 %180), !dbg !8635
  store i64 %call378, i64* %inner_nz, align 8, !dbg !8636
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8637
  %u379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1, !dbg !8637
  %fld380 = bitcast %union.u* %u379 to [1 x %union.rtunion_def]*, !dbg !8637
  %arrayidx381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld380, i64 0, i64 0, !dbg !8637
  %rt_rtx382 = bitcast %union.rtunion_def* %arrayidx381 to %struct.rtx_def**, !dbg !8637
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx382, align 8, !dbg !8637
  %183 = bitcast %struct.rtx_def* %182 to i32*, !dbg !8637
  %bf.load383 = load i32, i32* %183, align 8, !dbg !8637
  %bf.lshr384 = lshr i32 %bf.load383, 16, !dbg !8637
  %bf.clear385 = and i32 %bf.lshr384, 255, !dbg !8637
  %cmp386 = icmp ne i32 %bf.clear385, 0, !dbg !8639
  br i1 %cmp386, label %if.then388, label %if.end432, !dbg !8640

if.then388:                                       ; preds = %sw.bb373
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8641
  %u389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1, !dbg !8641
  %fld390 = bitcast %union.u* %u389 to [1 x %union.rtunion_def]*, !dbg !8641
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i64 0, i64 0, !dbg !8641
  %rt_rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**, !dbg !8641
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx392, align 8, !dbg !8641
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !8641
  %bf.load393 = load i32, i32* %186, align 8, !dbg !8641
  %bf.lshr394 = lshr i32 %bf.load393, 16, !dbg !8641
  %bf.clear395 = and i32 %bf.lshr394, 255, !dbg !8641
  %idxprom396 = zext i32 %bf.clear395 to i64, !dbg !8641
  %arrayidx397 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom396, !dbg !8641
  %187 = load i64, i64* %arrayidx397, align 8, !dbg !8641
  %188 = load i64, i64* %inner_nz, align 8, !dbg !8643
  %and398 = and i64 %188, %187, !dbg !8643
  store i64 %and398, i64* %inner_nz, align 8, !dbg !8643
  %189 = load i64, i64* %inner_nz, align 8, !dbg !8644
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8646
  %u399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1, !dbg !8646
  %fld400 = bitcast %union.u* %u399 to [1 x %union.rtunion_def]*, !dbg !8646
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i64 0, i64 0, !dbg !8646
  %rt_rtx402 = bitcast %union.rtunion_def* %arrayidx401 to %struct.rtx_def**, !dbg !8646
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx402, align 8, !dbg !8646
  %192 = bitcast %struct.rtx_def* %191 to i32*, !dbg !8646
  %bf.load403 = load i32, i32* %192, align 8, !dbg !8646
  %bf.lshr404 = lshr i32 %bf.load403, 16, !dbg !8646
  %bf.clear405 = and i32 %bf.lshr404, 255, !dbg !8646
  %idxprom406 = zext i32 %bf.clear405 to i64, !dbg !8646
  %arrayidx407 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom406, !dbg !8646
  %193 = load i8, i8* %arrayidx407, align 1, !dbg !8646
  %conv408 = zext i8 %193 to i16, !dbg !8646
  %conv409 = zext i16 %conv408 to i32, !dbg !8646
  %mul410 = mul nsw i32 %conv409, 8, !dbg !8646
  %conv411 = trunc i32 %mul410 to i16, !dbg !8646
  %conv412 = zext i16 %conv411 to i32, !dbg !8646
  %sub413 = sub nsw i32 %conv412, 1, !dbg !8647
  %sh_prom = zext i32 %sub413 to i64, !dbg !8648
  %shl = shl i64 1, %sh_prom, !dbg !8648
  %and414 = and i64 %189, %shl, !dbg !8649
  %tobool415 = icmp ne i64 %and414, 0, !dbg !8649
  br i1 %tobool415, label %if.then416, label %if.end431, !dbg !8650

if.then416:                                       ; preds = %if.then388
  %194 = load i32, i32* %mode.addr, align 4, !dbg !8651
  %idxprom417 = zext i32 %194 to i64, !dbg !8651
  %arrayidx418 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom417, !dbg !8651
  %195 = load i64, i64* %arrayidx418, align 8, !dbg !8651
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8652
  %u419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !8652
  %fld420 = bitcast %union.u* %u419 to [1 x %union.rtunion_def]*, !dbg !8652
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i64 0, i64 0, !dbg !8652
  %rt_rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**, !dbg !8652
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx422, align 8, !dbg !8652
  %198 = bitcast %struct.rtx_def* %197 to i32*, !dbg !8652
  %bf.load423 = load i32, i32* %198, align 8, !dbg !8652
  %bf.lshr424 = lshr i32 %bf.load423, 16, !dbg !8652
  %bf.clear425 = and i32 %bf.lshr424, 255, !dbg !8652
  %idxprom426 = zext i32 %bf.clear425 to i64, !dbg !8652
  %arrayidx427 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom426, !dbg !8652
  %199 = load i64, i64* %arrayidx427, align 8, !dbg !8652
  %neg428 = xor i64 %199, -1, !dbg !8653
  %and429 = and i64 %195, %neg428, !dbg !8654
  %200 = load i64, i64* %inner_nz, align 8, !dbg !8655
  %or430 = or i64 %200, %and429, !dbg !8655
  store i64 %or430, i64* %inner_nz, align 8, !dbg !8655
  br label %if.end431, !dbg !8656

if.end431:                                        ; preds = %if.then416, %if.then388
  br label %if.end432, !dbg !8657

if.end432:                                        ; preds = %if.end431, %sw.bb373
  %201 = load i64, i64* %inner_nz, align 8, !dbg !8658
  %202 = load i64, i64* %nonzero, align 8, !dbg !8659
  %and433 = and i64 %202, %201, !dbg !8659
  store i64 %and433, i64* %nonzero, align 8, !dbg !8659
  br label %sw.epilog899, !dbg !8660

sw.bb434:                                         ; preds = %if.end248
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8661
  %u435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !8661
  %fld436 = bitcast %union.u* %u435 to [1 x %union.rtunion_def]*, !dbg !8661
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i64 0, i64 0, !dbg !8661
  %rt_rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**, !dbg !8661
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx438, align 8, !dbg !8661
  %205 = load i32, i32* %mode.addr, align 4, !dbg !8662
  %206 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8663
  %207 = load i32, i32* %known_mode.addr, align 4, !dbg !8664
  %208 = load i64, i64* %known_ret.addr, align 8, !dbg !8665
  %call439 = call i64 @cached_nonzero_bits(%struct.rtx_def* %204, i32 %205, %struct.rtx_def* %206, i32 %207, i64 %208), !dbg !8666
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8667
  %u440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !8667
  %fld441 = bitcast %union.u* %u440 to [1 x %union.rtunion_def]*, !dbg !8667
  %arrayidx442 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld441, i64 0, i64 1, !dbg !8667
  %rt_rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**, !dbg !8667
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx443, align 8, !dbg !8667
  %211 = load i32, i32* %mode.addr, align 4, !dbg !8668
  %212 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8669
  %213 = load i32, i32* %known_mode.addr, align 4, !dbg !8670
  %214 = load i64, i64* %known_ret.addr, align 8, !dbg !8671
  %call444 = call i64 @cached_nonzero_bits(%struct.rtx_def* %210, i32 %211, %struct.rtx_def* %212, i32 %213, i64 %214), !dbg !8672
  %and445 = and i64 %call439, %call444, !dbg !8673
  %215 = load i64, i64* %nonzero, align 8, !dbg !8674
  %and446 = and i64 %215, %and445, !dbg !8674
  store i64 %and446, i64* %nonzero, align 8, !dbg !8674
  br label %sw.epilog899, !dbg !8675

sw.bb447:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  call void @llvm.dbg.declare(metadata i64* %nonzero0, metadata !8676, metadata !DIExpression()), !dbg !8678
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8679
  %u448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !8679
  %fld449 = bitcast %union.u* %u448 to [1 x %union.rtunion_def]*, !dbg !8679
  %arrayidx450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld449, i64 0, i64 0, !dbg !8679
  %rt_rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**, !dbg !8679
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx451, align 8, !dbg !8679
  %218 = load i32, i32* %mode.addr, align 4, !dbg !8680
  %219 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8681
  %220 = load i32, i32* %known_mode.addr, align 4, !dbg !8682
  %221 = load i64, i64* %known_ret.addr, align 8, !dbg !8683
  %call452 = call i64 @cached_nonzero_bits(%struct.rtx_def* %217, i32 %218, %struct.rtx_def* %219, i32 %220, i64 %221), !dbg !8684
  store i64 %call452, i64* %nonzero0, align 8, !dbg !8678
  %222 = load i64, i64* %nonzero, align 8, !dbg !8685
  %223 = load i64, i64* %nonzero0, align 8, !dbg !8687
  %and453 = and i64 %222, %223, !dbg !8688
  %224 = load i64, i64* %nonzero, align 8, !dbg !8689
  %cmp454 = icmp ne i64 %and453, %224, !dbg !8690
  br i1 %cmp454, label %if.then456, label %if.end464, !dbg !8691

if.then456:                                       ; preds = %sw.bb447
  %225 = load i64, i64* %nonzero0, align 8, !dbg !8692
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8693
  %u457 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1, !dbg !8693
  %fld458 = bitcast %union.u* %u457 to [1 x %union.rtunion_def]*, !dbg !8693
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i64 0, i64 1, !dbg !8693
  %rt_rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**, !dbg !8693
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx460, align 8, !dbg !8693
  %228 = load i32, i32* %mode.addr, align 4, !dbg !8694
  %229 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8695
  %230 = load i32, i32* %known_mode.addr, align 4, !dbg !8696
  %231 = load i64, i64* %known_ret.addr, align 8, !dbg !8697
  %call461 = call i64 @cached_nonzero_bits(%struct.rtx_def* %227, i32 %228, %struct.rtx_def* %229, i32 %230, i64 %231), !dbg !8698
  %or462 = or i64 %225, %call461, !dbg !8699
  %232 = load i64, i64* %nonzero, align 8, !dbg !8700
  %and463 = and i64 %232, %or462, !dbg !8700
  store i64 %and463, i64* %nonzero, align 8, !dbg !8700
  br label %if.end464, !dbg !8701

if.end464:                                        ; preds = %if.then456, %sw.bb447
  br label %sw.epilog899, !dbg !8702

sw.bb465:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  call void @llvm.dbg.declare(metadata i64* %nz0, metadata !8703, metadata !DIExpression()), !dbg !8705
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8706
  %u466 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1, !dbg !8706
  %fld467 = bitcast %union.u* %u466 to [1 x %union.rtunion_def]*, !dbg !8706
  %arrayidx468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld467, i64 0, i64 0, !dbg !8706
  %rt_rtx469 = bitcast %union.rtunion_def* %arrayidx468 to %struct.rtx_def**, !dbg !8706
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx469, align 8, !dbg !8706
  %235 = load i32, i32* %mode.addr, align 4, !dbg !8707
  %236 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8708
  %237 = load i32, i32* %known_mode.addr, align 4, !dbg !8709
  %238 = load i64, i64* %known_ret.addr, align 8, !dbg !8710
  %call470 = call i64 @cached_nonzero_bits(%struct.rtx_def* %234, i32 %235, %struct.rtx_def* %236, i32 %237, i64 %238), !dbg !8711
  store i64 %call470, i64* %nz0, align 8, !dbg !8705
  call void @llvm.dbg.declare(metadata i64* %nz1, metadata !8712, metadata !DIExpression()), !dbg !8713
  %239 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8714
  %u471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1, !dbg !8714
  %fld472 = bitcast %union.u* %u471 to [1 x %union.rtunion_def]*, !dbg !8714
  %arrayidx473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld472, i64 0, i64 1, !dbg !8714
  %rt_rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**, !dbg !8714
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx474, align 8, !dbg !8714
  %241 = load i32, i32* %mode.addr, align 4, !dbg !8715
  %242 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8716
  %243 = load i32, i32* %known_mode.addr, align 4, !dbg !8717
  %244 = load i64, i64* %known_ret.addr, align 8, !dbg !8718
  %call475 = call i64 @cached_nonzero_bits(%struct.rtx_def* %240, i32 %241, %struct.rtx_def* %242, i32 %243, i64 %244), !dbg !8719
  store i64 %call475, i64* %nz1, align 8, !dbg !8713
  call void @llvm.dbg.declare(metadata i32* %sign_index, metadata !8720, metadata !DIExpression()), !dbg !8721
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8722
  %246 = bitcast %struct.rtx_def* %245 to i32*, !dbg !8722
  %bf.load476 = load i32, i32* %246, align 8, !dbg !8722
  %bf.lshr477 = lshr i32 %bf.load476, 16, !dbg !8722
  %bf.clear478 = and i32 %bf.lshr477, 255, !dbg !8722
  %idxprom479 = zext i32 %bf.clear478 to i64, !dbg !8722
  %arrayidx480 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom479, !dbg !8722
  %247 = load i8, i8* %arrayidx480, align 1, !dbg !8722
  %conv481 = zext i8 %247 to i16, !dbg !8722
  %conv482 = zext i16 %conv481 to i32, !dbg !8722
  %mul483 = mul nsw i32 %conv482, 8, !dbg !8722
  %conv484 = trunc i32 %mul483 to i16, !dbg !8722
  %conv485 = zext i16 %conv484 to i32, !dbg !8722
  %sub486 = sub nsw i32 %conv485, 1, !dbg !8723
  store i32 %sub486, i32* %sign_index, align 4, !dbg !8721
  call void @llvm.dbg.declare(metadata i32* %width0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %248 = load i64, i64* %nz0, align 8, !dbg !8726
  %call487 = call i32 @floor_log2(i64 %248), !dbg !8727
  %add = add nsw i32 %call487, 1, !dbg !8728
  store i32 %add, i32* %width0, align 4, !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %width1, metadata !8729, metadata !DIExpression()), !dbg !8730
  %249 = load i64, i64* %nz1, align 8, !dbg !8731
  %call488 = call i32 @floor_log2(i64 %249), !dbg !8732
  %add489 = add nsw i32 %call488, 1, !dbg !8733
  store i32 %add489, i32* %width1, align 4, !dbg !8730
  call void @llvm.dbg.declare(metadata i32* %low0, metadata !8734, metadata !DIExpression()), !dbg !8735
  %250 = load i64, i64* %nz0, align 8, !dbg !8736
  %251 = load i64, i64* %nz0, align 8, !dbg !8737
  %sub490 = sub i64 0, %251, !dbg !8738
  %and491 = and i64 %250, %sub490, !dbg !8739
  %call492 = call i32 @floor_log2(i64 %and491), !dbg !8740
  store i32 %call492, i32* %low0, align 4, !dbg !8735
  call void @llvm.dbg.declare(metadata i32* %low1, metadata !8741, metadata !DIExpression()), !dbg !8742
  %252 = load i64, i64* %nz1, align 8, !dbg !8743
  %253 = load i64, i64* %nz1, align 8, !dbg !8744
  %sub493 = sub i64 0, %253, !dbg !8745
  %and494 = and i64 %252, %sub493, !dbg !8746
  %call495 = call i32 @floor_log2(i64 %and494), !dbg !8747
  store i32 %call495, i32* %low1, align 4, !dbg !8742
  call void @llvm.dbg.declare(metadata i64* %op0_maybe_minusp, metadata !8748, metadata !DIExpression()), !dbg !8749
  %254 = load i64, i64* %nz0, align 8, !dbg !8750
  %255 = load i32, i32* %sign_index, align 4, !dbg !8751
  %sh_prom496 = zext i32 %255 to i64, !dbg !8752
  %shl497 = shl i64 1, %sh_prom496, !dbg !8752
  %and498 = and i64 %254, %shl497, !dbg !8753
  store i64 %and498, i64* %op0_maybe_minusp, align 8, !dbg !8749
  call void @llvm.dbg.declare(metadata i64* %op1_maybe_minusp, metadata !8754, metadata !DIExpression()), !dbg !8755
  %256 = load i64, i64* %nz1, align 8, !dbg !8756
  %257 = load i32, i32* %sign_index, align 4, !dbg !8757
  %sh_prom499 = zext i32 %257 to i64, !dbg !8758
  %shl500 = shl i64 1, %sh_prom499, !dbg !8758
  %and501 = and i64 %256, %shl500, !dbg !8759
  store i64 %and501, i64* %op1_maybe_minusp, align 8, !dbg !8755
  call void @llvm.dbg.declare(metadata i32* %result_width, metadata !8760, metadata !DIExpression()), !dbg !8761
  %258 = load i32, i32* %mode_width, align 4, !dbg !8762
  store i32 %258, i32* %result_width, align 4, !dbg !8761
  call void @llvm.dbg.declare(metadata i32* %result_low, metadata !8763, metadata !DIExpression()), !dbg !8764
  store i32 0, i32* %result_low, align 4, !dbg !8764
  %259 = load i32, i32* %code, align 4, !dbg !8765
  switch i32 %259, label %sw.default [
    i32 49, label %sw.bb502
    i32 50, label %sw.bb516
    i32 52, label %sw.bb523
    i32 55, label %sw.bb526
    i32 59, label %sw.bb536
    i32 58, label %sw.bb541
    i32 60, label %sw.bb563
  ], !dbg !8766

sw.bb502:                                         ; preds = %sw.bb465
  %260 = load i32, i32* %width0, align 4, !dbg !8767
  %261 = load i32, i32* %width1, align 4, !dbg !8767
  %cmp503 = icmp sgt i32 %260, %261, !dbg !8767
  br i1 %cmp503, label %cond.true505, label %cond.false506, !dbg !8767

cond.true505:                                     ; preds = %sw.bb502
  %262 = load i32, i32* %width0, align 4, !dbg !8767
  br label %cond.end507, !dbg !8767

cond.false506:                                    ; preds = %sw.bb502
  %263 = load i32, i32* %width1, align 4, !dbg !8767
  br label %cond.end507, !dbg !8767

cond.end507:                                      ; preds = %cond.false506, %cond.true505
  %cond508 = phi i32 [ %262, %cond.true505 ], [ %263, %cond.false506 ], !dbg !8767
  %add509 = add nsw i32 %cond508, 1, !dbg !8769
  store i32 %add509, i32* %result_width, align 4, !dbg !8770
  %264 = load i32, i32* %low0, align 4, !dbg !8771
  %265 = load i32, i32* %low1, align 4, !dbg !8771
  %cmp510 = icmp slt i32 %264, %265, !dbg !8771
  br i1 %cmp510, label %cond.true512, label %cond.false513, !dbg !8771

cond.true512:                                     ; preds = %cond.end507
  %266 = load i32, i32* %low0, align 4, !dbg !8771
  br label %cond.end514, !dbg !8771

cond.false513:                                    ; preds = %cond.end507
  %267 = load i32, i32* %low1, align 4, !dbg !8771
  br label %cond.end514, !dbg !8771

cond.end514:                                      ; preds = %cond.false513, %cond.true512
  %cond515 = phi i32 [ %266, %cond.true512 ], [ %267, %cond.false513 ], !dbg !8771
  store i32 %cond515, i32* %result_low, align 4, !dbg !8772
  br label %sw.epilog, !dbg !8773

sw.bb516:                                         ; preds = %sw.bb465
  %268 = load i32, i32* %low0, align 4, !dbg !8774
  %269 = load i32, i32* %low1, align 4, !dbg !8774
  %cmp517 = icmp slt i32 %268, %269, !dbg !8774
  br i1 %cmp517, label %cond.true519, label %cond.false520, !dbg !8774

cond.true519:                                     ; preds = %sw.bb516
  %270 = load i32, i32* %low0, align 4, !dbg !8774
  br label %cond.end521, !dbg !8774

cond.false520:                                    ; preds = %sw.bb516
  %271 = load i32, i32* %low1, align 4, !dbg !8774
  br label %cond.end521, !dbg !8774

cond.end521:                                      ; preds = %cond.false520, %cond.true519
  %cond522 = phi i32 [ %270, %cond.true519 ], [ %271, %cond.false520 ], !dbg !8774
  store i32 %cond522, i32* %result_low, align 4, !dbg !8775
  br label %sw.epilog, !dbg !8776

sw.bb523:                                         ; preds = %sw.bb465
  %272 = load i32, i32* %width0, align 4, !dbg !8777
  %273 = load i32, i32* %width1, align 4, !dbg !8778
  %add524 = add nsw i32 %272, %273, !dbg !8779
  store i32 %add524, i32* %result_width, align 4, !dbg !8780
  %274 = load i32, i32* %low0, align 4, !dbg !8781
  %275 = load i32, i32* %low1, align 4, !dbg !8782
  %add525 = add nsw i32 %274, %275, !dbg !8783
  store i32 %add525, i32* %result_low, align 4, !dbg !8784
  br label %sw.epilog, !dbg !8785

sw.bb526:                                         ; preds = %sw.bb465
  %276 = load i32, i32* %width1, align 4, !dbg !8786
  %cmp527 = icmp eq i32 %276, 0, !dbg !8788
  br i1 %cmp527, label %if.then529, label %if.end530, !dbg !8789

if.then529:                                       ; preds = %sw.bb526
  br label %sw.epilog, !dbg !8790

if.end530:                                        ; preds = %sw.bb526
  %277 = load i64, i64* %op0_maybe_minusp, align 8, !dbg !8791
  %tobool531 = icmp ne i64 %277, 0, !dbg !8791
  br i1 %tobool531, label %if.end535, label %land.lhs.true532, !dbg !8793

land.lhs.true532:                                 ; preds = %if.end530
  %278 = load i64, i64* %op1_maybe_minusp, align 8, !dbg !8794
  %tobool533 = icmp ne i64 %278, 0, !dbg !8794
  br i1 %tobool533, label %if.end535, label %if.then534, !dbg !8795

if.then534:                                       ; preds = %land.lhs.true532
  %279 = load i32, i32* %width0, align 4, !dbg !8796
  store i32 %279, i32* %result_width, align 4, !dbg !8797
  br label %if.end535, !dbg !8798

if.end535:                                        ; preds = %if.then534, %land.lhs.true532, %if.end530
  br label %sw.epilog, !dbg !8799

sw.bb536:                                         ; preds = %sw.bb465
  %280 = load i32, i32* %width1, align 4, !dbg !8800
  %cmp537 = icmp eq i32 %280, 0, !dbg !8802
  br i1 %cmp537, label %if.then539, label %if.end540, !dbg !8803

if.then539:                                       ; preds = %sw.bb536
  br label %sw.epilog, !dbg !8804

if.end540:                                        ; preds = %sw.bb536
  %281 = load i32, i32* %width0, align 4, !dbg !8805
  store i32 %281, i32* %result_width, align 4, !dbg !8806
  br label %sw.epilog, !dbg !8807

sw.bb541:                                         ; preds = %sw.bb465
  %282 = load i32, i32* %width1, align 4, !dbg !8808
  %cmp542 = icmp eq i32 %282, 0, !dbg !8810
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !8811

if.then544:                                       ; preds = %sw.bb541
  br label %sw.epilog, !dbg !8812

if.end545:                                        ; preds = %sw.bb541
  %283 = load i64, i64* %op0_maybe_minusp, align 8, !dbg !8813
  %tobool546 = icmp ne i64 %283, 0, !dbg !8813
  br i1 %tobool546, label %if.end556, label %land.lhs.true547, !dbg !8815

land.lhs.true547:                                 ; preds = %if.end545
  %284 = load i64, i64* %op1_maybe_minusp, align 8, !dbg !8816
  %tobool548 = icmp ne i64 %284, 0, !dbg !8816
  br i1 %tobool548, label %if.end556, label %if.then549, !dbg !8817

if.then549:                                       ; preds = %land.lhs.true547
  %285 = load i32, i32* %width0, align 4, !dbg !8818
  %286 = load i32, i32* %width1, align 4, !dbg !8818
  %cmp550 = icmp slt i32 %285, %286, !dbg !8818
  br i1 %cmp550, label %cond.true552, label %cond.false553, !dbg !8818

cond.true552:                                     ; preds = %if.then549
  %287 = load i32, i32* %width0, align 4, !dbg !8818
  br label %cond.end554, !dbg !8818

cond.false553:                                    ; preds = %if.then549
  %288 = load i32, i32* %width1, align 4, !dbg !8818
  br label %cond.end554, !dbg !8818

cond.end554:                                      ; preds = %cond.false553, %cond.true552
  %cond555 = phi i32 [ %287, %cond.true552 ], [ %288, %cond.false553 ], !dbg !8818
  store i32 %cond555, i32* %result_width, align 4, !dbg !8819
  br label %if.end556, !dbg !8820

if.end556:                                        ; preds = %cond.end554, %land.lhs.true547, %if.end545
  %289 = load i32, i32* %low0, align 4, !dbg !8821
  %290 = load i32, i32* %low1, align 4, !dbg !8821
  %cmp557 = icmp slt i32 %289, %290, !dbg !8821
  br i1 %cmp557, label %cond.true559, label %cond.false560, !dbg !8821

cond.true559:                                     ; preds = %if.end556
  %291 = load i32, i32* %low0, align 4, !dbg !8821
  br label %cond.end561, !dbg !8821

cond.false560:                                    ; preds = %if.end556
  %292 = load i32, i32* %low1, align 4, !dbg !8821
  br label %cond.end561, !dbg !8821

cond.end561:                                      ; preds = %cond.false560, %cond.true559
  %cond562 = phi i32 [ %291, %cond.true559 ], [ %292, %cond.false560 ], !dbg !8821
  store i32 %cond562, i32* %result_low, align 4, !dbg !8822
  br label %sw.epilog, !dbg !8823

sw.bb563:                                         ; preds = %sw.bb465
  %293 = load i32, i32* %width1, align 4, !dbg !8824
  %cmp564 = icmp eq i32 %293, 0, !dbg !8826
  br i1 %cmp564, label %if.then566, label %if.end567, !dbg !8827

if.then566:                                       ; preds = %sw.bb563
  br label %sw.epilog, !dbg !8828

if.end567:                                        ; preds = %sw.bb563
  %294 = load i32, i32* %width0, align 4, !dbg !8829
  %295 = load i32, i32* %width1, align 4, !dbg !8829
  %cmp568 = icmp slt i32 %294, %295, !dbg !8829
  br i1 %cmp568, label %cond.true570, label %cond.false571, !dbg !8829

cond.true570:                                     ; preds = %if.end567
  %296 = load i32, i32* %width0, align 4, !dbg !8829
  br label %cond.end572, !dbg !8829

cond.false571:                                    ; preds = %if.end567
  %297 = load i32, i32* %width1, align 4, !dbg !8829
  br label %cond.end572, !dbg !8829

cond.end572:                                      ; preds = %cond.false571, %cond.true570
  %cond573 = phi i32 [ %296, %cond.true570 ], [ %297, %cond.false571 ], !dbg !8829
  store i32 %cond573, i32* %result_width, align 4, !dbg !8830
  %298 = load i32, i32* %low0, align 4, !dbg !8831
  %299 = load i32, i32* %low1, align 4, !dbg !8831
  %cmp574 = icmp slt i32 %298, %299, !dbg !8831
  br i1 %cmp574, label %cond.true576, label %cond.false577, !dbg !8831

cond.true576:                                     ; preds = %cond.end572
  %300 = load i32, i32* %low0, align 4, !dbg !8831
  br label %cond.end578, !dbg !8831

cond.false577:                                    ; preds = %cond.end572
  %301 = load i32, i32* %low1, align 4, !dbg !8831
  br label %cond.end578, !dbg !8831

cond.end578:                                      ; preds = %cond.false577, %cond.true576
  %cond579 = phi i32 [ %300, %cond.true576 ], [ %301, %cond.false577 ], !dbg !8831
  store i32 %cond579, i32* %result_low, align 4, !dbg !8832
  br label %sw.epilog, !dbg !8833

sw.default:                                       ; preds = %sw.bb465
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3984, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8834
  br label %sw.epilog, !dbg !8835

sw.epilog:                                        ; preds = %sw.default, %cond.end578, %if.then566, %cond.end561, %if.then544, %if.end540, %if.then539, %if.end535, %if.then529, %sw.bb523, %cond.end521, %cond.end514
  %302 = load i32, i32* %result_width, align 4, !dbg !8836
  %303 = load i32, i32* %mode_width, align 4, !dbg !8838
  %cmp580 = icmp ult i32 %302, %303, !dbg !8839
  br i1 %cmp580, label %if.then582, label %if.end587, !dbg !8840

if.then582:                                       ; preds = %sw.epilog
  %304 = load i32, i32* %result_width, align 4, !dbg !8841
  %sh_prom583 = zext i32 %304 to i64, !dbg !8842
  %shl584 = shl i64 1, %sh_prom583, !dbg !8842
  %sub585 = sub nsw i64 %shl584, 1, !dbg !8843
  %305 = load i64, i64* %nonzero, align 8, !dbg !8844
  %and586 = and i64 %305, %sub585, !dbg !8844
  store i64 %and586, i64* %nonzero, align 8, !dbg !8844
  br label %if.end587, !dbg !8845

if.end587:                                        ; preds = %if.then582, %sw.epilog
  %306 = load i32, i32* %result_low, align 4, !dbg !8846
  %cmp588 = icmp sgt i32 %306, 0, !dbg !8848
  br i1 %cmp588, label %if.then590, label %if.end596, !dbg !8849

if.then590:                                       ; preds = %if.end587
  %307 = load i32, i32* %result_low, align 4, !dbg !8850
  %sh_prom591 = zext i32 %307 to i64, !dbg !8851
  %shl592 = shl i64 1, %sh_prom591, !dbg !8851
  %sub593 = sub nsw i64 %shl592, 1, !dbg !8852
  %neg594 = xor i64 %sub593, -1, !dbg !8853
  %308 = load i64, i64* %nonzero, align 8, !dbg !8854
  %and595 = and i64 %308, %neg594, !dbg !8854
  store i64 %and595, i64* %nonzero, align 8, !dbg !8854
  br label %if.end596, !dbg !8855

if.end596:                                        ; preds = %if.then590, %if.end587
  br label %sw.epilog899, !dbg !8856

sw.bb597:                                         ; preds = %if.end248
  %309 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8857
  %u598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1, !dbg !8857
  %fld599 = bitcast %union.u* %u598 to [1 x %union.rtunion_def]*, !dbg !8857
  %arrayidx600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld599, i64 0, i64 1, !dbg !8857
  %rt_rtx601 = bitcast %union.rtunion_def* %arrayidx600 to %struct.rtx_def**, !dbg !8857
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx601, align 8, !dbg !8857
  %311 = bitcast %struct.rtx_def* %310 to i32*, !dbg !8857
  %bf.load602 = load i32, i32* %311, align 8, !dbg !8857
  %bf.clear603 = and i32 %bf.load602, 65535, !dbg !8857
  %cmp604 = icmp eq i32 %bf.clear603, 30, !dbg !8857
  br i1 %cmp604, label %land.lhs.true606, label %if.end627, !dbg !8859

land.lhs.true606:                                 ; preds = %sw.bb597
  %312 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8860
  %u607 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1, !dbg !8860
  %fld608 = bitcast %union.u* %u607 to [1 x %union.rtunion_def]*, !dbg !8860
  %arrayidx609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld608, i64 0, i64 1, !dbg !8860
  %rt_rtx610 = bitcast %union.rtunion_def* %arrayidx609 to %struct.rtx_def**, !dbg !8860
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx610, align 8, !dbg !8860
  %u611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1, !dbg !8860
  %hwint612 = bitcast %union.u* %u611 to [1 x i64]*, !dbg !8860
  %arrayidx613 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint612, i64 0, i64 0, !dbg !8860
  %314 = load i64, i64* %arrayidx613, align 8, !dbg !8860
  %cmp614 = icmp slt i64 %314, 64, !dbg !8861
  br i1 %cmp614, label %if.then616, label %if.end627, !dbg !8862

if.then616:                                       ; preds = %land.lhs.true606
  %315 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8863
  %u617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1, !dbg !8863
  %fld618 = bitcast %union.u* %u617 to [1 x %union.rtunion_def]*, !dbg !8863
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i64 0, i64 1, !dbg !8863
  %rt_rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**, !dbg !8863
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx620, align 8, !dbg !8863
  %u621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1, !dbg !8863
  %hwint622 = bitcast %union.u* %u621 to [1 x i64]*, !dbg !8863
  %arrayidx623 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint622, i64 0, i64 0, !dbg !8863
  %317 = load i64, i64* %arrayidx623, align 8, !dbg !8863
  %shl624 = shl i64 1, %317, !dbg !8864
  %sub625 = sub nsw i64 %shl624, 1, !dbg !8865
  %318 = load i64, i64* %nonzero, align 8, !dbg !8866
  %and626 = and i64 %318, %sub625, !dbg !8866
  store i64 %and626, i64* %nonzero, align 8, !dbg !8866
  br label %if.end627, !dbg !8867

if.end627:                                        ; preds = %if.then616, %land.lhs.true606, %sw.bb597
  br label %sw.epilog899, !dbg !8868

sw.bb628:                                         ; preds = %if.end248
  %319 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8869
  %320 = bitcast %struct.rtx_def* %319 to i32*, !dbg !8869
  %bf.load629 = load i32, i32* %320, align 8, !dbg !8869
  %bf.lshr630 = lshr i32 %bf.load629, 28, !dbg !8869
  %bf.clear631 = and i32 %bf.lshr630, 1, !dbg !8869
  %tobool632 = icmp ne i32 %bf.clear631, 0, !dbg !8869
  br i1 %tobool632, label %land.lhs.true633, label %if.end662, !dbg !8871

land.lhs.true633:                                 ; preds = %sw.bb628
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8872
  %322 = bitcast %struct.rtx_def* %321 to i32*, !dbg !8872
  %bf.load634 = load i32, i32* %322, align 8, !dbg !8872
  %bf.lshr635 = lshr i32 %bf.load634, 27, !dbg !8872
  %bf.clear636 = and i32 %bf.lshr635, 1, !dbg !8872
  %tobool637 = icmp ne i32 %bf.clear636, 0, !dbg !8872
  br i1 %tobool637, label %cond.true638, label %cond.false639, !dbg !8872

cond.true638:                                     ; preds = %land.lhs.true633
  br label %cond.end643, !dbg !8872

cond.false639:                                    ; preds = %land.lhs.true633
  %323 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8872
  %324 = bitcast %struct.rtx_def* %323 to i32*, !dbg !8872
  %bf.load640 = load i32, i32* %324, align 8, !dbg !8872
  %bf.lshr641 = lshr i32 %bf.load640, 26, !dbg !8872
  %bf.clear642 = and i32 %bf.lshr641, 1, !dbg !8872
  br label %cond.end643, !dbg !8872

cond.end643:                                      ; preds = %cond.false639, %cond.true638
  %cond644 = phi i32 [ -1, %cond.true638 ], [ %bf.clear642, %cond.false639 ], !dbg !8872
  %cmp645 = icmp sgt i32 %cond644, 0, !dbg !8873
  br i1 %cmp645, label %if.then647, label %if.end662, !dbg !8874

if.then647:                                       ; preds = %cond.end643
  %325 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8875
  %326 = bitcast %struct.rtx_def* %325 to i32*, !dbg !8875
  %bf.load648 = load i32, i32* %326, align 8, !dbg !8875
  %bf.lshr649 = lshr i32 %bf.load648, 16, !dbg !8875
  %bf.clear650 = and i32 %bf.lshr649, 255, !dbg !8875
  %idxprom651 = zext i32 %bf.clear650 to i64, !dbg !8875
  %arrayidx652 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom651, !dbg !8875
  %327 = load i64, i64* %arrayidx652, align 8, !dbg !8875
  %328 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8876
  %u653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %328, i32 0, i32 1, !dbg !8876
  %fld654 = bitcast %union.u* %u653 to [1 x %union.rtunion_def]*, !dbg !8876
  %arrayidx655 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld654, i64 0, i64 0, !dbg !8876
  %rt_rtx656 = bitcast %union.rtunion_def* %arrayidx655 to %struct.rtx_def**, !dbg !8876
  %329 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx656, align 8, !dbg !8876
  %330 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8877
  %331 = bitcast %struct.rtx_def* %330 to i32*, !dbg !8877
  %bf.load657 = load i32, i32* %331, align 8, !dbg !8877
  %bf.lshr658 = lshr i32 %bf.load657, 16, !dbg !8877
  %bf.clear659 = and i32 %bf.lshr658, 255, !dbg !8877
  %332 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8878
  %333 = load i32, i32* %known_mode.addr, align 4, !dbg !8879
  %334 = load i64, i64* %known_ret.addr, align 8, !dbg !8880
  %call660 = call i64 @cached_nonzero_bits(%struct.rtx_def* %329, i32 %bf.clear659, %struct.rtx_def* %332, i32 %333, i64 %334), !dbg !8881
  %and661 = and i64 %327, %call660, !dbg !8882
  store i64 %and661, i64* %nonzero, align 8, !dbg !8883
  br label %if.end662, !dbg !8884

if.end662:                                        ; preds = %if.then647, %cond.end643, %sw.bb628
  %335 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8885
  %u663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1, !dbg !8885
  %fld664 = bitcast %union.u* %u663 to [1 x %union.rtunion_def]*, !dbg !8885
  %arrayidx665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld664, i64 0, i64 0, !dbg !8885
  %rt_rtx666 = bitcast %union.rtunion_def* %arrayidx665 to %struct.rtx_def**, !dbg !8885
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx666, align 8, !dbg !8885
  %337 = bitcast %struct.rtx_def* %336 to i32*, !dbg !8885
  %bf.load667 = load i32, i32* %337, align 8, !dbg !8885
  %bf.lshr668 = lshr i32 %bf.load667, 16, !dbg !8885
  %bf.clear669 = and i32 %bf.lshr668, 255, !dbg !8885
  %idxprom670 = zext i32 %bf.clear669 to i64, !dbg !8885
  %arrayidx671 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom670, !dbg !8885
  %338 = load i8, i8* %arrayidx671, align 1, !dbg !8885
  %conv672 = zext i8 %338 to i16, !dbg !8885
  %conv673 = zext i16 %conv672 to i32, !dbg !8885
  %mul674 = mul nsw i32 %conv673, 8, !dbg !8885
  %conv675 = trunc i32 %mul674 to i16, !dbg !8885
  %conv676 = zext i16 %conv675 to i32, !dbg !8885
  %cmp677 = icmp sle i32 %conv676, 32, !dbg !8887
  br i1 %cmp677, label %land.lhs.true679, label %if.end742, !dbg !8888

land.lhs.true679:                                 ; preds = %if.end662
  %339 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8889
  %u680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1, !dbg !8889
  %fld681 = bitcast %union.u* %u680 to [1 x %union.rtunion_def]*, !dbg !8889
  %arrayidx682 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld681, i64 0, i64 0, !dbg !8889
  %rt_rtx683 = bitcast %union.rtunion_def* %arrayidx682 to %struct.rtx_def**, !dbg !8889
  %340 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx683, align 8, !dbg !8889
  %341 = bitcast %struct.rtx_def* %340 to i32*, !dbg !8889
  %bf.load684 = load i32, i32* %341, align 8, !dbg !8889
  %bf.lshr685 = lshr i32 %bf.load684, 16, !dbg !8889
  %bf.clear686 = and i32 %bf.lshr685, 255, !dbg !8889
  %idxprom687 = zext i32 %bf.clear686 to i64, !dbg !8889
  %arrayidx688 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom687, !dbg !8889
  %342 = load i8, i8* %arrayidx688, align 1, !dbg !8889
  %conv689 = zext i8 %342 to i16, !dbg !8889
  %conv690 = zext i16 %conv689 to i32, !dbg !8889
  %mul691 = mul nsw i32 %conv690, 8, !dbg !8889
  %conv692 = trunc i32 %mul691 to i16, !dbg !8889
  %conv693 = zext i16 %conv692 to i32, !dbg !8889
  %cmp694 = icmp sle i32 %conv693, 64, !dbg !8890
  br i1 %cmp694, label %if.then696, label %if.end742, !dbg !8891

if.then696:                                       ; preds = %land.lhs.true679
  %343 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8892
  %u697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1, !dbg !8892
  %fld698 = bitcast %union.u* %u697 to [1 x %union.rtunion_def]*, !dbg !8892
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i64 0, i64 0, !dbg !8892
  %rt_rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**, !dbg !8892
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx700, align 8, !dbg !8892
  %345 = load i32, i32* %mode.addr, align 4, !dbg !8894
  %346 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8895
  %347 = load i32, i32* %known_mode.addr, align 4, !dbg !8896
  %348 = load i64, i64* %known_ret.addr, align 8, !dbg !8897
  %call701 = call i64 @cached_nonzero_bits(%struct.rtx_def* %344, i32 %345, %struct.rtx_def* %346, i32 %347, i64 %348), !dbg !8898
  %349 = load i64, i64* %nonzero, align 8, !dbg !8899
  %and702 = and i64 %349, %call701, !dbg !8899
  store i64 %and702, i64* %nonzero, align 8, !dbg !8899
  %350 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8900
  %351 = bitcast %struct.rtx_def* %350 to i32*, !dbg !8900
  %bf.load703 = load i32, i32* %351, align 8, !dbg !8900
  %bf.lshr704 = lshr i32 %bf.load703, 16, !dbg !8900
  %bf.clear705 = and i32 %bf.lshr704, 255, !dbg !8900
  %idxprom706 = zext i32 %bf.clear705 to i64, !dbg !8900
  %arrayidx707 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom706, !dbg !8900
  %352 = load i8, i8* %arrayidx707, align 1, !dbg !8900
  %conv708 = zext i8 %352 to i16, !dbg !8900
  %conv709 = zext i16 %conv708 to i32, !dbg !8900
  %353 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8903
  %u710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1, !dbg !8903
  %fld711 = bitcast %union.u* %u710 to [1 x %union.rtunion_def]*, !dbg !8903
  %arrayidx712 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld711, i64 0, i64 0, !dbg !8903
  %rt_rtx713 = bitcast %union.rtunion_def* %arrayidx712 to %struct.rtx_def**, !dbg !8903
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx713, align 8, !dbg !8903
  %355 = bitcast %struct.rtx_def* %354 to i32*, !dbg !8903
  %bf.load714 = load i32, i32* %355, align 8, !dbg !8903
  %bf.lshr715 = lshr i32 %bf.load714, 16, !dbg !8903
  %bf.clear716 = and i32 %bf.lshr715, 255, !dbg !8903
  %idxprom717 = zext i32 %bf.clear716 to i64, !dbg !8903
  %arrayidx718 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom717, !dbg !8903
  %356 = load i8, i8* %arrayidx718, align 1, !dbg !8903
  %conv719 = zext i8 %356 to i16, !dbg !8903
  %conv720 = zext i16 %conv719 to i32, !dbg !8903
  %cmp721 = icmp sgt i32 %conv709, %conv720, !dbg !8904
  br i1 %cmp721, label %if.then723, label %if.end741, !dbg !8905

if.then723:                                       ; preds = %if.then696
  %357 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8906
  %358 = bitcast %struct.rtx_def* %357 to i32*, !dbg !8906
  %bf.load724 = load i32, i32* %358, align 8, !dbg !8906
  %bf.lshr725 = lshr i32 %bf.load724, 16, !dbg !8906
  %bf.clear726 = and i32 %bf.lshr725, 255, !dbg !8906
  %idxprom727 = zext i32 %bf.clear726 to i64, !dbg !8906
  %arrayidx728 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom727, !dbg !8906
  %359 = load i64, i64* %arrayidx728, align 8, !dbg !8906
  %360 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8907
  %u729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1, !dbg !8907
  %fld730 = bitcast %union.u* %u729 to [1 x %union.rtunion_def]*, !dbg !8907
  %arrayidx731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld730, i64 0, i64 0, !dbg !8907
  %rt_rtx732 = bitcast %union.rtunion_def* %arrayidx731 to %struct.rtx_def**, !dbg !8907
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx732, align 8, !dbg !8907
  %362 = bitcast %struct.rtx_def* %361 to i32*, !dbg !8907
  %bf.load733 = load i32, i32* %362, align 8, !dbg !8907
  %bf.lshr734 = lshr i32 %bf.load733, 16, !dbg !8907
  %bf.clear735 = and i32 %bf.lshr734, 255, !dbg !8907
  %idxprom736 = zext i32 %bf.clear735 to i64, !dbg !8907
  %arrayidx737 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom736, !dbg !8907
  %363 = load i64, i64* %arrayidx737, align 8, !dbg !8907
  %neg738 = xor i64 %363, -1, !dbg !8908
  %and739 = and i64 %359, %neg738, !dbg !8909
  %364 = load i64, i64* %nonzero, align 8, !dbg !8910
  %or740 = or i64 %364, %and739, !dbg !8910
  store i64 %or740, i64* %nonzero, align 8, !dbg !8910
  br label %if.end741, !dbg !8911

if.end741:                                        ; preds = %if.then723, %if.then696
  br label %if.end742, !dbg !8912

if.end742:                                        ; preds = %if.end741, %land.lhs.true679, %if.end662
  br label %sw.epilog899, !dbg !8913

sw.bb743:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248
  %365 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8914
  %u744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1, !dbg !8914
  %fld745 = bitcast %union.u* %u744 to [1 x %union.rtunion_def]*, !dbg !8914
  %arrayidx746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld745, i64 0, i64 1, !dbg !8914
  %rt_rtx747 = bitcast %union.rtunion_def* %arrayidx746 to %struct.rtx_def**, !dbg !8914
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx747, align 8, !dbg !8914
  %367 = bitcast %struct.rtx_def* %366 to i32*, !dbg !8914
  %bf.load748 = load i32, i32* %367, align 8, !dbg !8914
  %bf.clear749 = and i32 %bf.load748, 65535, !dbg !8914
  %cmp750 = icmp eq i32 %bf.clear749, 30, !dbg !8914
  br i1 %cmp750, label %land.lhs.true752, label %if.end870, !dbg !8916

land.lhs.true752:                                 ; preds = %sw.bb743
  %368 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8917
  %u753 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1, !dbg !8917
  %fld754 = bitcast %union.u* %u753 to [1 x %union.rtunion_def]*, !dbg !8917
  %arrayidx755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld754, i64 0, i64 1, !dbg !8917
  %rt_rtx756 = bitcast %union.rtunion_def* %arrayidx755 to %struct.rtx_def**, !dbg !8917
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx756, align 8, !dbg !8917
  %u757 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1, !dbg !8917
  %hwint758 = bitcast %union.u* %u757 to [1 x i64]*, !dbg !8917
  %arrayidx759 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint758, i64 0, i64 0, !dbg !8917
  %370 = load i64, i64* %arrayidx759, align 8, !dbg !8917
  %cmp760 = icmp sge i64 %370, 0, !dbg !8918
  br i1 %cmp760, label %land.lhs.true762, label %if.end870, !dbg !8919

land.lhs.true762:                                 ; preds = %land.lhs.true752
  %371 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8920
  %u763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %371, i32 0, i32 1, !dbg !8920
  %fld764 = bitcast %union.u* %u763 to [1 x %union.rtunion_def]*, !dbg !8920
  %arrayidx765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld764, i64 0, i64 1, !dbg !8920
  %rt_rtx766 = bitcast %union.rtunion_def* %arrayidx765 to %struct.rtx_def**, !dbg !8920
  %372 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx766, align 8, !dbg !8920
  %u767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1, !dbg !8920
  %hwint768 = bitcast %union.u* %u767 to [1 x i64]*, !dbg !8920
  %arrayidx769 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint768, i64 0, i64 0, !dbg !8920
  %373 = load i64, i64* %arrayidx769, align 8, !dbg !8920
  %cmp770 = icmp slt i64 %373, 64, !dbg !8921
  br i1 %cmp770, label %land.lhs.true772, label %if.end870, !dbg !8922

land.lhs.true772:                                 ; preds = %land.lhs.true762
  %374 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8923
  %u773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !8923
  %fld774 = bitcast %union.u* %u773 to [1 x %union.rtunion_def]*, !dbg !8923
  %arrayidx775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld774, i64 0, i64 1, !dbg !8923
  %rt_rtx776 = bitcast %union.rtunion_def* %arrayidx775 to %struct.rtx_def**, !dbg !8923
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx776, align 8, !dbg !8923
  %u777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1, !dbg !8923
  %hwint778 = bitcast %union.u* %u777 to [1 x i64]*, !dbg !8923
  %arrayidx779 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint778, i64 0, i64 0, !dbg !8923
  %376 = load i64, i64* %arrayidx779, align 8, !dbg !8923
  %377 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8924
  %378 = bitcast %struct.rtx_def* %377 to i32*, !dbg !8924
  %bf.load780 = load i32, i32* %378, align 8, !dbg !8924
  %bf.lshr781 = lshr i32 %bf.load780, 16, !dbg !8924
  %bf.clear782 = and i32 %bf.lshr781, 255, !dbg !8924
  %idxprom783 = zext i32 %bf.clear782 to i64, !dbg !8924
  %arrayidx784 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom783, !dbg !8924
  %379 = load i8, i8* %arrayidx784, align 1, !dbg !8924
  %conv785 = zext i8 %379 to i16, !dbg !8924
  %conv786 = zext i16 %conv785 to i32, !dbg !8924
  %mul787 = mul nsw i32 %conv786, 8, !dbg !8924
  %conv788 = trunc i32 %mul787 to i16, !dbg !8924
  %conv789 = zext i16 %conv788 to i64, !dbg !8924
  %cmp790 = icmp slt i64 %376, %conv789, !dbg !8925
  br i1 %cmp790, label %if.then792, label %if.end870, !dbg !8926

if.then792:                                       ; preds = %land.lhs.true772
  call void @llvm.dbg.declare(metadata i32* %inner_mode, metadata !8927, metadata !DIExpression()), !dbg !8929
  %380 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8930
  %381 = bitcast %struct.rtx_def* %380 to i32*, !dbg !8930
  %bf.load793 = load i32, i32* %381, align 8, !dbg !8930
  %bf.lshr794 = lshr i32 %bf.load793, 16, !dbg !8930
  %bf.clear795 = and i32 %bf.lshr794, 255, !dbg !8930
  store i32 %bf.clear795, i32* %inner_mode, align 4, !dbg !8929
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8931, metadata !DIExpression()), !dbg !8932
  %382 = load i32, i32* %inner_mode, align 4, !dbg !8933
  %idxprom796 = zext i32 %382 to i64, !dbg !8933
  %arrayidx797 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom796, !dbg !8933
  %383 = load i8, i8* %arrayidx797, align 1, !dbg !8933
  %conv798 = zext i8 %383 to i16, !dbg !8933
  %conv799 = zext i16 %conv798 to i32, !dbg !8933
  %mul800 = mul nsw i32 %conv799, 8, !dbg !8933
  %conv801 = trunc i32 %mul800 to i16, !dbg !8933
  %conv802 = zext i16 %conv801 to i32, !dbg !8933
  store i32 %conv802, i32* %width, align 4, !dbg !8932
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8934, metadata !DIExpression()), !dbg !8935
  %384 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8936
  %u803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1, !dbg !8936
  %fld804 = bitcast %union.u* %u803 to [1 x %union.rtunion_def]*, !dbg !8936
  %arrayidx805 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld804, i64 0, i64 1, !dbg !8936
  %rt_rtx806 = bitcast %union.rtunion_def* %arrayidx805 to %struct.rtx_def**, !dbg !8936
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx806, align 8, !dbg !8936
  %u807 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1, !dbg !8936
  %hwint808 = bitcast %union.u* %u807 to [1 x i64]*, !dbg !8936
  %arrayidx809 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint808, i64 0, i64 0, !dbg !8936
  %386 = load i64, i64* %arrayidx809, align 8, !dbg !8936
  %conv810 = trunc i64 %386 to i32, !dbg !8936
  store i32 %conv810, i32* %count, align 4, !dbg !8935
  call void @llvm.dbg.declare(metadata i64* %mode_mask, metadata !8937, metadata !DIExpression()), !dbg !8938
  %387 = load i32, i32* %inner_mode, align 4, !dbg !8939
  %idxprom811 = zext i32 %387 to i64, !dbg !8939
  %arrayidx812 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom811, !dbg !8939
  %388 = load i64, i64* %arrayidx812, align 8, !dbg !8939
  store i64 %388, i64* %mode_mask, align 8, !dbg !8938
  call void @llvm.dbg.declare(metadata i64* %op_nonzero, metadata !8940, metadata !DIExpression()), !dbg !8941
  %389 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8942
  %u813 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %389, i32 0, i32 1, !dbg !8942
  %fld814 = bitcast %union.u* %u813 to [1 x %union.rtunion_def]*, !dbg !8942
  %arrayidx815 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld814, i64 0, i64 0, !dbg !8942
  %rt_rtx816 = bitcast %union.rtunion_def* %arrayidx815 to %struct.rtx_def**, !dbg !8942
  %390 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx816, align 8, !dbg !8942
  %391 = load i32, i32* %mode.addr, align 4, !dbg !8943
  %392 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !8944
  %393 = load i32, i32* %known_mode.addr, align 4, !dbg !8945
  %394 = load i64, i64* %known_ret.addr, align 8, !dbg !8946
  %call817 = call i64 @cached_nonzero_bits(%struct.rtx_def* %390, i32 %391, %struct.rtx_def* %392, i32 %393, i64 %394), !dbg !8947
  store i64 %call817, i64* %op_nonzero, align 8, !dbg !8941
  call void @llvm.dbg.declare(metadata i64* %inner, metadata !8948, metadata !DIExpression()), !dbg !8949
  %395 = load i64, i64* %op_nonzero, align 8, !dbg !8950
  %396 = load i64, i64* %mode_mask, align 8, !dbg !8951
  %and818 = and i64 %395, %396, !dbg !8952
  store i64 %and818, i64* %inner, align 8, !dbg !8949
  call void @llvm.dbg.declare(metadata i64* %outer, metadata !8953, metadata !DIExpression()), !dbg !8954
  store i64 0, i64* %outer, align 8, !dbg !8954
  %397 = load i32, i32* %mode_width, align 4, !dbg !8955
  %398 = load i32, i32* %width, align 4, !dbg !8957
  %cmp819 = icmp ugt i32 %397, %398, !dbg !8958
  br i1 %cmp819, label %if.then821, label %if.end825, !dbg !8959

if.then821:                                       ; preds = %if.then792
  %399 = load i64, i64* %op_nonzero, align 8, !dbg !8960
  %400 = load i64, i64* %nonzero, align 8, !dbg !8961
  %and822 = and i64 %399, %400, !dbg !8962
  %401 = load i64, i64* %mode_mask, align 8, !dbg !8963
  %neg823 = xor i64 %401, -1, !dbg !8964
  %and824 = and i64 %and822, %neg823, !dbg !8965
  store i64 %and824, i64* %outer, align 8, !dbg !8966
  br label %if.end825, !dbg !8967

if.end825:                                        ; preds = %if.then821, %if.then792
  %402 = load i32, i32* %code, align 4, !dbg !8968
  %cmp826 = icmp eq i32 %402, 68, !dbg !8970
  br i1 %cmp826, label %if.then828, label %if.else, !dbg !8971

if.then828:                                       ; preds = %if.end825
  %403 = load i32, i32* %count, align 4, !dbg !8972
  %404 = load i64, i64* %inner, align 8, !dbg !8973
  %sh_prom829 = zext i32 %403 to i64, !dbg !8973
  %shr = lshr i64 %404, %sh_prom829, !dbg !8973
  store i64 %shr, i64* %inner, align 8, !dbg !8973
  br label %if.end867, !dbg !8974

if.else:                                          ; preds = %if.end825
  %405 = load i32, i32* %code, align 4, !dbg !8975
  %cmp830 = icmp eq i32 %405, 67, !dbg !8977
  br i1 %cmp830, label %if.then832, label %if.else850, !dbg !8978

if.then832:                                       ; preds = %if.else
  %406 = load i32, i32* %count, align 4, !dbg !8979
  %407 = load i64, i64* %inner, align 8, !dbg !8981
  %sh_prom833 = zext i32 %406 to i64, !dbg !8981
  %shr834 = lshr i64 %407, %sh_prom833, !dbg !8981
  store i64 %shr834, i64* %inner, align 8, !dbg !8981
  %408 = load i64, i64* %inner, align 8, !dbg !8982
  %409 = load i32, i32* %width, align 4, !dbg !8984
  %sub835 = sub i32 %409, 1, !dbg !8985
  %410 = load i32, i32* %count, align 4, !dbg !8986
  %sub836 = sub i32 %sub835, %410, !dbg !8987
  %sh_prom837 = zext i32 %sub836 to i64, !dbg !8988
  %shl838 = shl i64 1, %sh_prom837, !dbg !8988
  %and839 = and i64 %408, %shl838, !dbg !8989
  %tobool840 = icmp ne i64 %and839, 0, !dbg !8989
  br i1 %tobool840, label %if.then841, label %if.end849, !dbg !8990

if.then841:                                       ; preds = %if.then832
  %411 = load i32, i32* %count, align 4, !dbg !8991
  %sh_prom842 = zext i32 %411 to i64, !dbg !8992
  %shl843 = shl i64 1, %sh_prom842, !dbg !8992
  %sub844 = sub nsw i64 %shl843, 1, !dbg !8993
  %412 = load i32, i32* %width, align 4, !dbg !8994
  %413 = load i32, i32* %count, align 4, !dbg !8995
  %sub845 = sub i32 %412, %413, !dbg !8996
  %sh_prom846 = zext i32 %sub845 to i64, !dbg !8997
  %shl847 = shl i64 %sub844, %sh_prom846, !dbg !8997
  %414 = load i64, i64* %inner, align 8, !dbg !8998
  %or848 = or i64 %414, %shl847, !dbg !8998
  store i64 %or848, i64* %inner, align 8, !dbg !8998
  br label %if.end849, !dbg !8999

if.end849:                                        ; preds = %if.then841, %if.then832
  br label %if.end866, !dbg !9000

if.else850:                                       ; preds = %if.else
  %415 = load i32, i32* %code, align 4, !dbg !9001
  %cmp851 = icmp eq i32 %415, 65, !dbg !9003
  br i1 %cmp851, label %if.then853, label %if.else856, !dbg !9004

if.then853:                                       ; preds = %if.else850
  %416 = load i32, i32* %count, align 4, !dbg !9005
  %417 = load i64, i64* %inner, align 8, !dbg !9006
  %sh_prom854 = zext i32 %416 to i64, !dbg !9006
  %shl855 = shl i64 %417, %sh_prom854, !dbg !9006
  store i64 %shl855, i64* %inner, align 8, !dbg !9006
  br label %if.end865, !dbg !9007

if.else856:                                       ; preds = %if.else850
  %418 = load i64, i64* %inner, align 8, !dbg !9008
  %419 = load i32, i32* %count, align 4, !dbg !9009
  %420 = load i32, i32* %width, align 4, !dbg !9010
  %rem = urem i32 %419, %420, !dbg !9011
  %sh_prom857 = zext i32 %rem to i64, !dbg !9012
  %shl858 = shl i64 %418, %sh_prom857, !dbg !9012
  %421 = load i64, i64* %inner, align 8, !dbg !9013
  %422 = load i32, i32* %width, align 4, !dbg !9014
  %423 = load i32, i32* %count, align 4, !dbg !9015
  %424 = load i32, i32* %width, align 4, !dbg !9016
  %rem859 = urem i32 %423, %424, !dbg !9017
  %sub860 = sub i32 %422, %rem859, !dbg !9018
  %sh_prom861 = zext i32 %sub860 to i64, !dbg !9019
  %shr862 = lshr i64 %421, %sh_prom861, !dbg !9019
  %or863 = or i64 %shl858, %shr862, !dbg !9020
  %425 = load i64, i64* %mode_mask, align 8, !dbg !9021
  %and864 = and i64 %or863, %425, !dbg !9022
  store i64 %and864, i64* %inner, align 8, !dbg !9023
  br label %if.end865

if.end865:                                        ; preds = %if.else856, %if.then853
  br label %if.end866

if.end866:                                        ; preds = %if.end865, %if.end849
  br label %if.end867

if.end867:                                        ; preds = %if.end866, %if.then828
  %426 = load i64, i64* %outer, align 8, !dbg !9024
  %427 = load i64, i64* %inner, align 8, !dbg !9025
  %or868 = or i64 %426, %427, !dbg !9026
  %428 = load i64, i64* %nonzero, align 8, !dbg !9027
  %and869 = and i64 %428, %or868, !dbg !9027
  store i64 %and869, i64* %nonzero, align 8, !dbg !9027
  br label %if.end870, !dbg !9028

if.end870:                                        ; preds = %if.end867, %land.lhs.true772, %land.lhs.true762, %land.lhs.true752, %sw.bb743
  br label %sw.epilog899, !dbg !9029

sw.bb871:                                         ; preds = %if.end248, %if.end248
  %429 = load i32, i32* %mode_width, align 4, !dbg !9030
  %conv872 = zext i32 %429 to i64, !dbg !9030
  %call873 = call i32 @floor_log2(i64 %conv872), !dbg !9031
  %sh_prom874 = zext i32 %call873 to i64, !dbg !9032
  %shl875 = shl i64 2, %sh_prom874, !dbg !9032
  %sub876 = sub nsw i64 %shl875, 1, !dbg !9033
  store i64 %sub876, i64* %nonzero, align 8, !dbg !9034
  br label %sw.epilog899, !dbg !9035

sw.bb877:                                         ; preds = %if.end248
  store i64 -1, i64* %nonzero, align 8, !dbg !9036
  br label %sw.epilog899, !dbg !9038

sw.bb878:                                         ; preds = %if.end248
  store i64 -1, i64* %nonzero, align 8, !dbg !9039
  br label %sw.epilog899, !dbg !9041

sw.bb879:                                         ; preds = %if.end248
  store i64 1, i64* %nonzero, align 8, !dbg !9042
  br label %sw.epilog899, !dbg !9043

sw.bb880:                                         ; preds = %if.end248
  call void @llvm.dbg.declare(metadata i64* %nonzero_true, metadata !9044, metadata !DIExpression()), !dbg !9046
  %430 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9047
  %u881 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %430, i32 0, i32 1, !dbg !9047
  %fld882 = bitcast %union.u* %u881 to [1 x %union.rtunion_def]*, !dbg !9047
  %arrayidx883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld882, i64 0, i64 1, !dbg !9047
  %rt_rtx884 = bitcast %union.rtunion_def* %arrayidx883 to %struct.rtx_def**, !dbg !9047
  %431 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx884, align 8, !dbg !9047
  %432 = load i32, i32* %mode.addr, align 4, !dbg !9048
  %433 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9049
  %434 = load i32, i32* %known_mode.addr, align 4, !dbg !9050
  %435 = load i64, i64* %known_ret.addr, align 8, !dbg !9051
  %call885 = call i64 @cached_nonzero_bits(%struct.rtx_def* %431, i32 %432, %struct.rtx_def* %433, i32 %434, i64 %435), !dbg !9052
  store i64 %call885, i64* %nonzero_true, align 8, !dbg !9046
  %436 = load i64, i64* %nonzero, align 8, !dbg !9053
  %437 = load i64, i64* %nonzero_true, align 8, !dbg !9055
  %and886 = and i64 %436, %437, !dbg !9056
  %438 = load i64, i64* %nonzero, align 8, !dbg !9057
  %cmp887 = icmp ne i64 %and886, %438, !dbg !9058
  br i1 %cmp887, label %if.then889, label %if.end897, !dbg !9059

if.then889:                                       ; preds = %sw.bb880
  %439 = load i64, i64* %nonzero_true, align 8, !dbg !9060
  %440 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9061
  %u890 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %440, i32 0, i32 1, !dbg !9061
  %fld891 = bitcast %union.u* %u890 to [1 x %union.rtunion_def]*, !dbg !9061
  %arrayidx892 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld891, i64 0, i64 2, !dbg !9061
  %rt_rtx893 = bitcast %union.rtunion_def* %arrayidx892 to %struct.rtx_def**, !dbg !9061
  %441 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx893, align 8, !dbg !9061
  %442 = load i32, i32* %mode.addr, align 4, !dbg !9062
  %443 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9063
  %444 = load i32, i32* %known_mode.addr, align 4, !dbg !9064
  %445 = load i64, i64* %known_ret.addr, align 8, !dbg !9065
  %call894 = call i64 @cached_nonzero_bits(%struct.rtx_def* %441, i32 %442, %struct.rtx_def* %443, i32 %444, i64 %445), !dbg !9066
  %or895 = or i64 %439, %call894, !dbg !9067
  %446 = load i64, i64* %nonzero, align 8, !dbg !9068
  %and896 = and i64 %446, %or895, !dbg !9068
  store i64 %and896, i64* %nonzero, align 8, !dbg !9068
  br label %if.end897, !dbg !9069

if.end897:                                        ; preds = %if.then889, %sw.bb880
  br label %sw.epilog899, !dbg !9070

sw.default898:                                    ; preds = %if.end248
  br label %sw.epilog899, !dbg !9071

sw.epilog899:                                     ; preds = %sw.default898, %if.end897, %sw.bb879, %sw.bb878, %sw.bb877, %sw.bb871, %if.end870, %if.end742, %if.end627, %if.end596, %if.end464, %sw.bb434, %if.end432, %if.end372, %sw.bb337, %sw.bb336, %if.end335, %if.end313, %sw.bb299
  %447 = load i64, i64* %nonzero, align 8, !dbg !9072
  store i64 %447, i64* %retval, align 8, !dbg !9073
  br label %return, !dbg !9073

return:                                           ; preds = %sw.epilog899, %sw.bb297, %if.end296, %if.then236, %if.then178, %if.then
  %448 = load i64, i64* %retval, align 8, !dbg !9074
  ret i64 %448, !dbg !9074
}

declare dso_local i32 @ix86_cfun_abi() #2

declare dso_local i32 @floor_log2(i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #0 !dbg !9075 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %known_x.addr = alloca %struct.rtx_def*, align 8
  %known_mode.addr = alloca i32, align 4
  %known_ret.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %bitwidth = alloca i32, align 4
  %num0 = alloca i32, align 4
  %num1 = alloca i32, align 4
  %result = alloca i32, align 4
  %nonzero = alloca i64, align 8
  %copies_for_hook = alloca i32, align 4
  %copies = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9076, metadata !DIExpression()), !dbg !9077
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  store %struct.rtx_def* %known_x, %struct.rtx_def** %known_x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %known_x.addr, metadata !9080, metadata !DIExpression()), !dbg !9081
  store i32 %known_mode, i32* %known_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_mode.addr, metadata !9082, metadata !DIExpression()), !dbg !9083
  store i32 %known_ret, i32* %known_ret.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_ret.addr, metadata !9084, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9086, metadata !DIExpression()), !dbg !9087
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9088
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9088
  %bf.load = load i32, i32* %1, align 8, !dbg !9088
  %bf.clear = and i32 %bf.load, 65535, !dbg !9088
  store i32 %bf.clear, i32* %code, align 4, !dbg !9087
  call void @llvm.dbg.declare(metadata i32* %bitwidth, metadata !9089, metadata !DIExpression()), !dbg !9090
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9091
  %idxprom = zext i32 %2 to i64, !dbg !9091
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9091
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9091
  %conv = zext i8 %3 to i16, !dbg !9091
  %conv1 = zext i16 %conv to i32, !dbg !9091
  %mul = mul nsw i32 %conv1, 8, !dbg !9091
  %conv2 = trunc i32 %mul to i16, !dbg !9091
  %conv3 = zext i16 %conv2 to i32, !dbg !9091
  store i32 %conv3, i32* %bitwidth, align 4, !dbg !9090
  call void @llvm.dbg.declare(metadata i32* %num0, metadata !9092, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.declare(metadata i32* %num1, metadata !9094, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9096, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.declare(metadata i64* %nonzero, metadata !9098, metadata !DIExpression()), !dbg !9099
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9100
  %cmp = icmp eq i32 %4, 0, !dbg !9102
  br i1 %cmp, label %if.then, label %if.end, !dbg !9103

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9104
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !9104
  %bf.load5 = load i32, i32* %6, align 8, !dbg !9104
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !9104
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !9104
  store i32 %bf.clear6, i32* %mode.addr, align 4, !dbg !9105
  br label %if.end, !dbg !9106

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %mode.addr, align 4, !dbg !9107
  %cmp7 = icmp eq i32 %7, 0, !dbg !9109
  br i1 %cmp7, label %if.then158, label %lor.lhs.false, !dbg !9110

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %mode.addr, align 4, !dbg !9111
  %idxprom9 = zext i32 %8 to i64, !dbg !9111
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom9, !dbg !9111
  %9 = load i8, i8* %arrayidx10, align 1, !dbg !9111
  %conv11 = zext i8 %9 to i32, !dbg !9111
  %cmp12 = icmp eq i32 %conv11, 8, !dbg !9111
  br i1 %cmp12, label %if.then158, label %lor.lhs.false14, !dbg !9111

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %10 = load i32, i32* %mode.addr, align 4, !dbg !9111
  %idxprom15 = zext i32 %10 to i64, !dbg !9111
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom15, !dbg !9111
  %11 = load i8, i8* %arrayidx16, align 1, !dbg !9111
  %conv17 = zext i8 %11 to i32, !dbg !9111
  %cmp18 = icmp eq i32 %conv17, 9, !dbg !9111
  br i1 %cmp18, label %if.then158, label %lor.lhs.false20, !dbg !9111

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %12 = load i32, i32* %mode.addr, align 4, !dbg !9111
  %idxprom21 = zext i32 %12 to i64, !dbg !9111
  %arrayidx22 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom21, !dbg !9111
  %13 = load i8, i8* %arrayidx22, align 1, !dbg !9111
  %conv23 = zext i8 %13 to i32, !dbg !9111
  %cmp24 = icmp eq i32 %conv23, 11, !dbg !9111
  br i1 %cmp24, label %if.then158, label %lor.lhs.false26, !dbg !9111

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %14 = load i32, i32* %mode.addr, align 4, !dbg !9111
  %idxprom27 = zext i32 %14 to i64, !dbg !9111
  %arrayidx28 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom27, !dbg !9111
  %15 = load i8, i8* %arrayidx28, align 1, !dbg !9111
  %conv29 = zext i8 %15 to i32, !dbg !9111
  %cmp30 = icmp eq i32 %conv29, 17, !dbg !9111
  br i1 %cmp30, label %if.then158, label %lor.lhs.false32, !dbg !9112

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9113
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !9113
  %bf.load33 = load i32, i32* %17, align 8, !dbg !9113
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !9113
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !9113
  %idxprom36 = zext i32 %bf.clear35 to i64, !dbg !9113
  %arrayidx37 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom36, !dbg !9113
  %18 = load i8, i8* %arrayidx37, align 1, !dbg !9113
  %conv38 = zext i8 %18 to i32, !dbg !9113
  %cmp39 = icmp eq i32 %conv38, 8, !dbg !9113
  br i1 %cmp39, label %if.then158, label %lor.lhs.false41, !dbg !9113

lor.lhs.false41:                                  ; preds = %lor.lhs.false32
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9113
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !9113
  %bf.load42 = load i32, i32* %20, align 8, !dbg !9113
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !9113
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !9113
  %idxprom45 = zext i32 %bf.clear44 to i64, !dbg !9113
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom45, !dbg !9113
  %21 = load i8, i8* %arrayidx46, align 1, !dbg !9113
  %conv47 = zext i8 %21 to i32, !dbg !9113
  %cmp48 = icmp eq i32 %conv47, 9, !dbg !9113
  br i1 %cmp48, label %if.then158, label %lor.lhs.false50, !dbg !9113

lor.lhs.false50:                                  ; preds = %lor.lhs.false41
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9113
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !9113
  %bf.load51 = load i32, i32* %23, align 8, !dbg !9113
  %bf.lshr52 = lshr i32 %bf.load51, 16, !dbg !9113
  %bf.clear53 = and i32 %bf.lshr52, 255, !dbg !9113
  %idxprom54 = zext i32 %bf.clear53 to i64, !dbg !9113
  %arrayidx55 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom54, !dbg !9113
  %24 = load i8, i8* %arrayidx55, align 1, !dbg !9113
  %conv56 = zext i8 %24 to i32, !dbg !9113
  %cmp57 = icmp eq i32 %conv56, 11, !dbg !9113
  br i1 %cmp57, label %if.then158, label %lor.lhs.false59, !dbg !9113

lor.lhs.false59:                                  ; preds = %lor.lhs.false50
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9113
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !9113
  %bf.load60 = load i32, i32* %26, align 8, !dbg !9113
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !9113
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !9113
  %idxprom63 = zext i32 %bf.clear62 to i64, !dbg !9113
  %arrayidx64 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom63, !dbg !9113
  %27 = load i8, i8* %arrayidx64, align 1, !dbg !9113
  %conv65 = zext i8 %27 to i32, !dbg !9113
  %cmp66 = icmp eq i32 %conv65, 17, !dbg !9113
  br i1 %cmp66, label %if.then158, label %lor.lhs.false68, !dbg !9114

lor.lhs.false68:                                  ; preds = %lor.lhs.false59
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !9115
  %bf.load69 = load i32, i32* %29, align 8, !dbg !9115
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !9115
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !9115
  %idxprom72 = zext i32 %bf.clear71 to i64, !dbg !9115
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom72, !dbg !9115
  %30 = load i8, i8* %arrayidx73, align 1, !dbg !9115
  %conv74 = zext i8 %30 to i32, !dbg !9115
  %cmp75 = icmp eq i32 %conv74, 12, !dbg !9115
  br i1 %cmp75, label %if.then158, label %lor.lhs.false77, !dbg !9115

lor.lhs.false77:                                  ; preds = %lor.lhs.false68
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !9115
  %bf.load78 = load i32, i32* %32, align 8, !dbg !9115
  %bf.lshr79 = lshr i32 %bf.load78, 16, !dbg !9115
  %bf.clear80 = and i32 %bf.lshr79, 255, !dbg !9115
  %idxprom81 = zext i32 %bf.clear80 to i64, !dbg !9115
  %arrayidx82 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom81, !dbg !9115
  %33 = load i8, i8* %arrayidx82, align 1, !dbg !9115
  %conv83 = zext i8 %33 to i32, !dbg !9115
  %cmp84 = icmp eq i32 %conv83, 17, !dbg !9115
  br i1 %cmp84, label %if.then158, label %lor.lhs.false86, !dbg !9115

lor.lhs.false86:                                  ; preds = %lor.lhs.false77
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !9115
  %bf.load87 = load i32, i32* %35, align 8, !dbg !9115
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !9115
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !9115
  %idxprom90 = zext i32 %bf.clear89 to i64, !dbg !9115
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom90, !dbg !9115
  %36 = load i8, i8* %arrayidx91, align 1, !dbg !9115
  %conv92 = zext i8 %36 to i32, !dbg !9115
  %cmp93 = icmp eq i32 %conv92, 13, !dbg !9115
  br i1 %cmp93, label %if.then158, label %lor.lhs.false95, !dbg !9115

lor.lhs.false95:                                  ; preds = %lor.lhs.false86
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !9115
  %bf.load96 = load i32, i32* %38, align 8, !dbg !9115
  %bf.lshr97 = lshr i32 %bf.load96, 16, !dbg !9115
  %bf.clear98 = and i32 %bf.lshr97, 255, !dbg !9115
  %idxprom99 = zext i32 %bf.clear98 to i64, !dbg !9115
  %arrayidx100 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom99, !dbg !9115
  %39 = load i8, i8* %arrayidx100, align 1, !dbg !9115
  %conv101 = zext i8 %39 to i32, !dbg !9115
  %cmp102 = icmp eq i32 %conv101, 14, !dbg !9115
  br i1 %cmp102, label %if.then158, label %lor.lhs.false104, !dbg !9115

lor.lhs.false104:                                 ; preds = %lor.lhs.false95
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !9115
  %bf.load105 = load i32, i32* %41, align 8, !dbg !9115
  %bf.lshr106 = lshr i32 %bf.load105, 16, !dbg !9115
  %bf.clear107 = and i32 %bf.lshr106, 255, !dbg !9115
  %idxprom108 = zext i32 %bf.clear107 to i64, !dbg !9115
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom108, !dbg !9115
  %42 = load i8, i8* %arrayidx109, align 1, !dbg !9115
  %conv110 = zext i8 %42 to i32, !dbg !9115
  %cmp111 = icmp eq i32 %conv110, 15, !dbg !9115
  br i1 %cmp111, label %if.then158, label %lor.lhs.false113, !dbg !9115

lor.lhs.false113:                                 ; preds = %lor.lhs.false104
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9115
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !9115
  %bf.load114 = load i32, i32* %44, align 8, !dbg !9115
  %bf.lshr115 = lshr i32 %bf.load114, 16, !dbg !9115
  %bf.clear116 = and i32 %bf.lshr115, 255, !dbg !9115
  %idxprom117 = zext i32 %bf.clear116 to i64, !dbg !9115
  %arrayidx118 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom117, !dbg !9115
  %45 = load i8, i8* %arrayidx118, align 1, !dbg !9115
  %conv119 = zext i8 %45 to i32, !dbg !9115
  %cmp120 = icmp eq i32 %conv119, 16, !dbg !9115
  br i1 %cmp120, label %if.then158, label %lor.lhs.false122, !dbg !9116

lor.lhs.false122:                                 ; preds = %lor.lhs.false113
  %46 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom123 = zext i32 %46 to i64, !dbg !9117
  %arrayidx124 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom123, !dbg !9117
  %47 = load i8, i8* %arrayidx124, align 1, !dbg !9117
  %conv125 = zext i8 %47 to i32, !dbg !9117
  %cmp126 = icmp eq i32 %conv125, 12, !dbg !9117
  br i1 %cmp126, label %if.then158, label %lor.lhs.false128, !dbg !9117

lor.lhs.false128:                                 ; preds = %lor.lhs.false122
  %48 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom129 = zext i32 %48 to i64, !dbg !9117
  %arrayidx130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom129, !dbg !9117
  %49 = load i8, i8* %arrayidx130, align 1, !dbg !9117
  %conv131 = zext i8 %49 to i32, !dbg !9117
  %cmp132 = icmp eq i32 %conv131, 17, !dbg !9117
  br i1 %cmp132, label %if.then158, label %lor.lhs.false134, !dbg !9117

lor.lhs.false134:                                 ; preds = %lor.lhs.false128
  %50 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom135 = zext i32 %50 to i64, !dbg !9117
  %arrayidx136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom135, !dbg !9117
  %51 = load i8, i8* %arrayidx136, align 1, !dbg !9117
  %conv137 = zext i8 %51 to i32, !dbg !9117
  %cmp138 = icmp eq i32 %conv137, 13, !dbg !9117
  br i1 %cmp138, label %if.then158, label %lor.lhs.false140, !dbg !9117

lor.lhs.false140:                                 ; preds = %lor.lhs.false134
  %52 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom141 = zext i32 %52 to i64, !dbg !9117
  %arrayidx142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom141, !dbg !9117
  %53 = load i8, i8* %arrayidx142, align 1, !dbg !9117
  %conv143 = zext i8 %53 to i32, !dbg !9117
  %cmp144 = icmp eq i32 %conv143, 14, !dbg !9117
  br i1 %cmp144, label %if.then158, label %lor.lhs.false146, !dbg !9117

lor.lhs.false146:                                 ; preds = %lor.lhs.false140
  %54 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom147 = zext i32 %54 to i64, !dbg !9117
  %arrayidx148 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom147, !dbg !9117
  %55 = load i8, i8* %arrayidx148, align 1, !dbg !9117
  %conv149 = zext i8 %55 to i32, !dbg !9117
  %cmp150 = icmp eq i32 %conv149, 15, !dbg !9117
  br i1 %cmp150, label %if.then158, label %lor.lhs.false152, !dbg !9117

lor.lhs.false152:                                 ; preds = %lor.lhs.false146
  %56 = load i32, i32* %mode.addr, align 4, !dbg !9117
  %idxprom153 = zext i32 %56 to i64, !dbg !9117
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom153, !dbg !9117
  %57 = load i8, i8* %arrayidx154, align 1, !dbg !9117
  %conv155 = zext i8 %57 to i32, !dbg !9117
  %cmp156 = icmp eq i32 %conv155, 16, !dbg !9117
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !9118

if.then158:                                       ; preds = %lor.lhs.false152, %lor.lhs.false146, %lor.lhs.false140, %lor.lhs.false134, %lor.lhs.false128, %lor.lhs.false122, %lor.lhs.false113, %lor.lhs.false104, %lor.lhs.false95, %lor.lhs.false86, %lor.lhs.false77, %lor.lhs.false68, %lor.lhs.false59, %lor.lhs.false50, %lor.lhs.false41, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false, %if.end
  store i32 1, i32* %retval, align 4, !dbg !9119
  br label %return, !dbg !9119

if.end159:                                        ; preds = %lor.lhs.false152
  %58 = load i32, i32* %bitwidth, align 4, !dbg !9120
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9122
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !9122
  %bf.load160 = load i32, i32* %60, align 8, !dbg !9122
  %bf.lshr161 = lshr i32 %bf.load160, 16, !dbg !9122
  %bf.clear162 = and i32 %bf.lshr161, 255, !dbg !9122
  %idxprom163 = zext i32 %bf.clear162 to i64, !dbg !9122
  %arrayidx164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom163, !dbg !9122
  %61 = load i8, i8* %arrayidx164, align 1, !dbg !9122
  %conv165 = zext i8 %61 to i16, !dbg !9122
  %conv166 = zext i16 %conv165 to i32, !dbg !9122
  %mul167 = mul nsw i32 %conv166, 8, !dbg !9122
  %conv168 = trunc i32 %mul167 to i16, !dbg !9122
  %conv169 = zext i16 %conv168 to i32, !dbg !9122
  %cmp170 = icmp ult i32 %58, %conv169, !dbg !9123
  br i1 %cmp170, label %if.then172, label %if.end201, !dbg !9124

if.then172:                                       ; preds = %if.end159
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9125
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9127
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !9127
  %bf.load173 = load i32, i32* %64, align 8, !dbg !9127
  %bf.lshr174 = lshr i32 %bf.load173, 16, !dbg !9127
  %bf.clear175 = and i32 %bf.lshr174, 255, !dbg !9127
  %65 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9128
  %66 = load i32, i32* %known_mode.addr, align 4, !dbg !9129
  %67 = load i32, i32* %known_ret.addr, align 4, !dbg !9130
  %call = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %62, i32 %bf.clear175, %struct.rtx_def* %65, i32 %66, i32 %67), !dbg !9131
  store i32 %call, i32* %num0, align 4, !dbg !9132
  %68 = load i32, i32* %num0, align 4, !dbg !9133
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9133
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !9133
  %bf.load176 = load i32, i32* %70, align 8, !dbg !9133
  %bf.lshr177 = lshr i32 %bf.load176, 16, !dbg !9133
  %bf.clear178 = and i32 %bf.lshr177, 255, !dbg !9133
  %idxprom179 = zext i32 %bf.clear178 to i64, !dbg !9133
  %arrayidx180 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom179, !dbg !9133
  %71 = load i8, i8* %arrayidx180, align 1, !dbg !9133
  %conv181 = zext i8 %71 to i16, !dbg !9133
  %conv182 = zext i16 %conv181 to i32, !dbg !9133
  %mul183 = mul nsw i32 %conv182, 8, !dbg !9133
  %conv184 = trunc i32 %mul183 to i16, !dbg !9133
  %conv185 = zext i16 %conv184 to i32, !dbg !9133
  %72 = load i32, i32* %bitwidth, align 4, !dbg !9133
  %sub = sub i32 %conv185, %72, !dbg !9133
  %sub186 = sub nsw i32 %68, %sub, !dbg !9133
  %cmp187 = icmp sgt i32 1, %sub186, !dbg !9133
  br i1 %cmp187, label %cond.true, label %cond.false, !dbg !9133

cond.true:                                        ; preds = %if.then172
  br label %cond.end, !dbg !9133

cond.false:                                       ; preds = %if.then172
  %73 = load i32, i32* %num0, align 4, !dbg !9133
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9133
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !9133
  %bf.load189 = load i32, i32* %75, align 8, !dbg !9133
  %bf.lshr190 = lshr i32 %bf.load189, 16, !dbg !9133
  %bf.clear191 = and i32 %bf.lshr190, 255, !dbg !9133
  %idxprom192 = zext i32 %bf.clear191 to i64, !dbg !9133
  %arrayidx193 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom192, !dbg !9133
  %76 = load i8, i8* %arrayidx193, align 1, !dbg !9133
  %conv194 = zext i8 %76 to i16, !dbg !9133
  %conv195 = zext i16 %conv194 to i32, !dbg !9133
  %mul196 = mul nsw i32 %conv195, 8, !dbg !9133
  %conv197 = trunc i32 %mul196 to i16, !dbg !9133
  %conv198 = zext i16 %conv197 to i32, !dbg !9133
  %77 = load i32, i32* %bitwidth, align 4, !dbg !9133
  %sub199 = sub i32 %conv198, %77, !dbg !9133
  %sub200 = sub nsw i32 %73, %sub199, !dbg !9133
  br label %cond.end, !dbg !9133

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %sub200, %cond.false ], !dbg !9133
  store i32 %cond, i32* %retval, align 4, !dbg !9134
  br label %return, !dbg !9134

if.end201:                                        ; preds = %if.end159
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9135
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !9135
  %bf.load202 = load i32, i32* %79, align 8, !dbg !9135
  %bf.lshr203 = lshr i32 %bf.load202, 16, !dbg !9135
  %bf.clear204 = and i32 %bf.lshr203, 255, !dbg !9135
  %cmp205 = icmp ne i32 %bf.clear204, 0, !dbg !9137
  br i1 %cmp205, label %land.lhs.true, label %if.end220, !dbg !9138

land.lhs.true:                                    ; preds = %if.end201
  %80 = load i32, i32* %bitwidth, align 4, !dbg !9139
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9140
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !9140
  %bf.load207 = load i32, i32* %82, align 8, !dbg !9140
  %bf.lshr208 = lshr i32 %bf.load207, 16, !dbg !9140
  %bf.clear209 = and i32 %bf.lshr208, 255, !dbg !9140
  %idxprom210 = zext i32 %bf.clear209 to i64, !dbg !9140
  %arrayidx211 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom210, !dbg !9140
  %83 = load i8, i8* %arrayidx211, align 1, !dbg !9140
  %conv212 = zext i8 %83 to i16, !dbg !9140
  %conv213 = zext i16 %conv212 to i32, !dbg !9140
  %mul214 = mul nsw i32 %conv213, 8, !dbg !9140
  %conv215 = trunc i32 %mul214 to i16, !dbg !9140
  %conv216 = zext i16 %conv215 to i32, !dbg !9140
  %cmp217 = icmp ugt i32 %80, %conv216, !dbg !9141
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !9142

if.then219:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !9143
  br label %return, !dbg !9143

if.end220:                                        ; preds = %land.lhs.true, %if.end201
  %84 = load i32, i32* %code, align 4, !dbg !9145
  switch i32 %84, label %sw.default [
    i32 37, label %sw.bb
    i32 43, label %sw.bb238
    i32 30, label %sw.bb239
    i32 39, label %sw.bb264
    i32 119, label %sw.bb375
    i32 98, label %sw.bb411
    i32 100, label %sw.bb433
    i32 64, label %sw.bb477
    i32 66, label %sw.bb483
    i32 69, label %sw.bb483
    i32 51, label %sw.bb575
    i32 62, label %sw.bb611
    i32 61, label %sw.bb611
    i32 63, label %sw.bb611
    i32 70, label %sw.bb611
    i32 71, label %sw.bb611
    i32 72, label %sw.bb611
    i32 73, label %sw.bb611
    i32 49, label %sw.bb692
    i32 50, label %sw.bb692
    i32 52, label %sw.bb762
    i32 59, label %sw.bb815
    i32 60, label %sw.bb837
    i32 55, label %sw.bb860
    i32 58, label %sw.bb886
    i32 67, label %sw.bb912
    i32 65, label %sw.bb985
    i32 47, label %sw.bb1067
    i32 81, label %sw.bb1084
    i32 80, label %sw.bb1084
    i32 82, label %sw.bb1084
    i32 83, label %sw.bb1084
    i32 84, label %sw.bb1084
    i32 85, label %sw.bb1084
    i32 92, label %sw.bb1084
    i32 97, label %sw.bb1084
    i32 93, label %sw.bb1084
    i32 94, label %sw.bb1084
    i32 95, label %sw.bb1084
    i32 96, label %sw.bb1084
    i32 86, label %sw.bb1084
    i32 87, label %sw.bb1084
    i32 88, label %sw.bb1084
    i32 89, label %sw.bb1084
    i32 90, label %sw.bb1084
    i32 91, label %sw.bb1084
  ], !dbg !9146

sw.bb:                                            ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i32* %copies_for_hook, metadata !9147, metadata !DIExpression()), !dbg !9150
  store i32 1, i32* %copies_for_hook, align 4, !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %copies, metadata !9151, metadata !DIExpression()), !dbg !9152
  store i32 1, i32* %copies, align 4, !dbg !9152
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !9153, metadata !DIExpression()), !dbg !9154
  %85 = load %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 3), align 8, !dbg !9155
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9156
  %87 = load i32, i32* %mode.addr, align 4, !dbg !9157
  %88 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9158
  %89 = load i32, i32* %known_mode.addr, align 4, !dbg !9159
  %90 = load i32, i32* %known_ret.addr, align 4, !dbg !9160
  %call221 = call %struct.rtx_def* %85(%struct.rtx_def* %86, i32 %87, %struct.rtx_def* %88, i32 %89, i32 %90, i32* %copies_for_hook), !dbg !9161
  store %struct.rtx_def* %call221, %struct.rtx_def** %new_rtx, align 8, !dbg !9154
  %91 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9162
  %tobool = icmp ne %struct.rtx_def* %91, null, !dbg !9162
  br i1 %tobool, label %if.then222, label %if.end224, !dbg !9164

if.then222:                                       ; preds = %sw.bb
  %92 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9165
  %93 = load i32, i32* %mode.addr, align 4, !dbg !9166
  %94 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9167
  %95 = load i32, i32* %known_mode.addr, align 4, !dbg !9168
  %96 = load i32, i32* %known_ret.addr, align 4, !dbg !9169
  %call223 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %92, i32 %93, %struct.rtx_def* %94, i32 %95, i32 %96), !dbg !9170
  store i32 %call223, i32* %copies, align 4, !dbg !9171
  br label %if.end224, !dbg !9172

if.end224:                                        ; preds = %if.then222, %sw.bb
  %97 = load i32, i32* %copies, align 4, !dbg !9173
  %cmp225 = icmp ugt i32 %97, 1, !dbg !9175
  br i1 %cmp225, label %if.then230, label %lor.lhs.false227, !dbg !9176

lor.lhs.false227:                                 ; preds = %if.end224
  %98 = load i32, i32* %copies_for_hook, align 4, !dbg !9177
  %cmp228 = icmp ugt i32 %98, 1, !dbg !9178
  br i1 %cmp228, label %if.then230, label %if.end237, !dbg !9179

if.then230:                                       ; preds = %lor.lhs.false227, %if.end224
  %99 = load i32, i32* %copies, align 4, !dbg !9180
  %100 = load i32, i32* %copies_for_hook, align 4, !dbg !9180
  %cmp231 = icmp ugt i32 %99, %100, !dbg !9180
  br i1 %cmp231, label %cond.true233, label %cond.false234, !dbg !9180

cond.true233:                                     ; preds = %if.then230
  %101 = load i32, i32* %copies, align 4, !dbg !9180
  br label %cond.end235, !dbg !9180

cond.false234:                                    ; preds = %if.then230
  %102 = load i32, i32* %copies_for_hook, align 4, !dbg !9180
  br label %cond.end235, !dbg !9180

cond.end235:                                      ; preds = %cond.false234, %cond.true233
  %cond236 = phi i32 [ %101, %cond.true233 ], [ %102, %cond.false234 ], !dbg !9180
  store i32 %cond236, i32* %retval, align 4, !dbg !9181
  br label %return, !dbg !9181

if.end237:                                        ; preds = %lor.lhs.false227
  br label %sw.epilog, !dbg !9182

sw.bb238:                                         ; preds = %if.end220
  br label %sw.epilog, !dbg !9183

sw.bb239:                                         ; preds = %if.end220
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9184
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !9184
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !9184
  %arrayidx240 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !9184
  %104 = load i64, i64* %arrayidx240, align 8, !dbg !9184
  %105 = load i32, i32* %mode.addr, align 4, !dbg !9185
  %idxprom241 = zext i32 %105 to i64, !dbg !9185
  %arrayidx242 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom241, !dbg !9185
  %106 = load i64, i64* %arrayidx242, align 8, !dbg !9185
  %and = and i64 %104, %106, !dbg !9186
  store i64 %and, i64* %nonzero, align 8, !dbg !9187
  %107 = load i32, i32* %bitwidth, align 4, !dbg !9188
  %cmp243 = icmp ule i32 %107, 64, !dbg !9190
  br i1 %cmp243, label %land.lhs.true245, label %if.end254, !dbg !9191

land.lhs.true245:                                 ; preds = %sw.bb239
  %108 = load i64, i64* %nonzero, align 8, !dbg !9192
  %109 = load i32, i32* %bitwidth, align 4, !dbg !9193
  %sub246 = sub i32 %109, 1, !dbg !9194
  %sh_prom = zext i32 %sub246 to i64, !dbg !9195
  %shl = shl i64 1, %sh_prom, !dbg !9195
  %and247 = and i64 %108, %shl, !dbg !9196
  %cmp248 = icmp ne i64 %and247, 0, !dbg !9197
  br i1 %cmp248, label %if.then250, label %if.end254, !dbg !9198

if.then250:                                       ; preds = %land.lhs.true245
  %110 = load i64, i64* %nonzero, align 8, !dbg !9199
  %neg = xor i64 %110, -1, !dbg !9200
  %111 = load i32, i32* %mode.addr, align 4, !dbg !9201
  %idxprom251 = zext i32 %111 to i64, !dbg !9201
  %arrayidx252 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom251, !dbg !9201
  %112 = load i64, i64* %arrayidx252, align 8, !dbg !9201
  %and253 = and i64 %neg, %112, !dbg !9202
  store i64 %and253, i64* %nonzero, align 8, !dbg !9203
  br label %if.end254, !dbg !9204

if.end254:                                        ; preds = %if.then250, %land.lhs.true245, %sw.bb239
  %113 = load i64, i64* %nonzero, align 8, !dbg !9205
  %cmp255 = icmp eq i64 %113, 0, !dbg !9206
  br i1 %cmp255, label %cond.true257, label %cond.false258, !dbg !9205

cond.true257:                                     ; preds = %if.end254
  %114 = load i32, i32* %bitwidth, align 4, !dbg !9207
  br label %cond.end262, !dbg !9205

cond.false258:                                    ; preds = %if.end254
  %115 = load i32, i32* %bitwidth, align 4, !dbg !9208
  %116 = load i64, i64* %nonzero, align 8, !dbg !9209
  %call259 = call i32 @floor_log2(i64 %116), !dbg !9210
  %sub260 = sub i32 %115, %call259, !dbg !9211
  %sub261 = sub i32 %sub260, 1, !dbg !9212
  br label %cond.end262, !dbg !9205

cond.end262:                                      ; preds = %cond.false258, %cond.true257
  %cond263 = phi i32 [ %114, %cond.true257 ], [ %sub261, %cond.false258 ], !dbg !9205
  store i32 %cond263, i32* %retval, align 4, !dbg !9213
  br label %return, !dbg !9213

sw.bb264:                                         ; preds = %if.end220
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9214
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !9214
  %bf.load265 = load i32, i32* %118, align 8, !dbg !9214
  %bf.lshr266 = lshr i32 %bf.load265, 28, !dbg !9214
  %bf.clear267 = and i32 %bf.lshr266, 1, !dbg !9214
  %tobool268 = icmp ne i32 %bf.clear267, 0, !dbg !9214
  br i1 %tobool268, label %land.lhs.true269, label %if.end313, !dbg !9216

land.lhs.true269:                                 ; preds = %sw.bb264
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9217
  %120 = bitcast %struct.rtx_def* %119 to i32*, !dbg !9217
  %bf.load270 = load i32, i32* %120, align 8, !dbg !9217
  %bf.lshr271 = lshr i32 %bf.load270, 27, !dbg !9217
  %bf.clear272 = and i32 %bf.lshr271, 1, !dbg !9217
  %tobool273 = icmp ne i32 %bf.clear272, 0, !dbg !9217
  br i1 %tobool273, label %cond.true274, label %cond.false275, !dbg !9218

cond.true274:                                     ; preds = %land.lhs.true269
  br i1 true, label %if.end313, label %if.then280, !dbg !9217

cond.false275:                                    ; preds = %land.lhs.true269
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9217
  %122 = bitcast %struct.rtx_def* %121 to i32*, !dbg !9217
  %bf.load276 = load i32, i32* %122, align 8, !dbg !9217
  %bf.lshr277 = lshr i32 %bf.load276, 26, !dbg !9217
  %bf.clear278 = and i32 %bf.lshr277, 1, !dbg !9217
  %tobool279 = icmp ne i32 %bf.clear278, 0, !dbg !9217
  br i1 %tobool279, label %if.end313, label %if.then280, !dbg !9218

if.then280:                                       ; preds = %cond.false275, %cond.true274
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9219
  %u281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !9219
  %fld = bitcast %union.u* %u281 to [1 x %union.rtunion_def]*, !dbg !9219
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9219
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**, !dbg !9219
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9219
  %125 = load i32, i32* %mode.addr, align 4, !dbg !9221
  %126 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9222
  %127 = load i32, i32* %known_mode.addr, align 4, !dbg !9223
  %128 = load i32, i32* %known_ret.addr, align 4, !dbg !9224
  %call283 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %124, i32 %125, %struct.rtx_def* %126, i32 %127, i32 %128), !dbg !9225
  store i32 %call283, i32* %num0, align 4, !dbg !9226
  %129 = load i32, i32* %bitwidth, align 4, !dbg !9227
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9227
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !9227
  %bf.load284 = load i32, i32* %131, align 8, !dbg !9227
  %bf.lshr285 = lshr i32 %bf.load284, 16, !dbg !9227
  %bf.clear286 = and i32 %bf.lshr285, 255, !dbg !9227
  %idxprom287 = zext i32 %bf.clear286 to i64, !dbg !9227
  %arrayidx288 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom287, !dbg !9227
  %132 = load i8, i8* %arrayidx288, align 1, !dbg !9227
  %conv289 = zext i8 %132 to i16, !dbg !9227
  %conv290 = zext i16 %conv289 to i32, !dbg !9227
  %mul291 = mul nsw i32 %conv290, 8, !dbg !9227
  %conv292 = trunc i32 %mul291 to i16, !dbg !9227
  %conv293 = zext i16 %conv292 to i32, !dbg !9227
  %sub294 = sub nsw i32 %129, %conv293, !dbg !9227
  %add = add nsw i32 %sub294, 1, !dbg !9227
  %133 = load i32, i32* %num0, align 4, !dbg !9227
  %cmp295 = icmp sgt i32 %add, %133, !dbg !9227
  br i1 %cmp295, label %cond.true297, label %cond.false310, !dbg !9227

cond.true297:                                     ; preds = %if.then280
  %134 = load i32, i32* %bitwidth, align 4, !dbg !9227
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9227
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !9227
  %bf.load298 = load i32, i32* %136, align 8, !dbg !9227
  %bf.lshr299 = lshr i32 %bf.load298, 16, !dbg !9227
  %bf.clear300 = and i32 %bf.lshr299, 255, !dbg !9227
  %idxprom301 = zext i32 %bf.clear300 to i64, !dbg !9227
  %arrayidx302 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom301, !dbg !9227
  %137 = load i8, i8* %arrayidx302, align 1, !dbg !9227
  %conv303 = zext i8 %137 to i16, !dbg !9227
  %conv304 = zext i16 %conv303 to i32, !dbg !9227
  %mul305 = mul nsw i32 %conv304, 8, !dbg !9227
  %conv306 = trunc i32 %mul305 to i16, !dbg !9227
  %conv307 = zext i16 %conv306 to i32, !dbg !9227
  %sub308 = sub nsw i32 %134, %conv307, !dbg !9227
  %add309 = add nsw i32 %sub308, 1, !dbg !9227
  br label %cond.end311, !dbg !9227

cond.false310:                                    ; preds = %if.then280
  %138 = load i32, i32* %num0, align 4, !dbg !9227
  br label %cond.end311, !dbg !9227

cond.end311:                                      ; preds = %cond.false310, %cond.true297
  %cond312 = phi i32 [ %add309, %cond.true297 ], [ %138, %cond.false310 ], !dbg !9227
  store i32 %cond312, i32* %retval, align 4, !dbg !9228
  br label %return, !dbg !9228

if.end313:                                        ; preds = %cond.false275, %cond.true274, %sw.bb264
  %139 = load i32, i32* %bitwidth, align 4, !dbg !9229
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9231
  %u314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !9231
  %fld315 = bitcast %union.u* %u314 to [1 x %union.rtunion_def]*, !dbg !9231
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i64 0, i64 0, !dbg !9231
  %rt_rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**, !dbg !9231
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx317, align 8, !dbg !9231
  %142 = bitcast %struct.rtx_def* %141 to i32*, !dbg !9231
  %bf.load318 = load i32, i32* %142, align 8, !dbg !9231
  %bf.lshr319 = lshr i32 %bf.load318, 16, !dbg !9231
  %bf.clear320 = and i32 %bf.lshr319, 255, !dbg !9231
  %idxprom321 = zext i32 %bf.clear320 to i64, !dbg !9231
  %arrayidx322 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom321, !dbg !9231
  %143 = load i8, i8* %arrayidx322, align 1, !dbg !9231
  %conv323 = zext i8 %143 to i16, !dbg !9231
  %conv324 = zext i16 %conv323 to i32, !dbg !9231
  %mul325 = mul nsw i32 %conv324, 8, !dbg !9231
  %conv326 = trunc i32 %mul325 to i16, !dbg !9231
  %conv327 = zext i16 %conv326 to i32, !dbg !9231
  %cmp328 = icmp ule i32 %139, %conv327, !dbg !9232
  br i1 %cmp328, label %if.then330, label %if.end374, !dbg !9233

if.then330:                                       ; preds = %if.end313
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9234
  %u331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !9234
  %fld332 = bitcast %union.u* %u331 to [1 x %union.rtunion_def]*, !dbg !9234
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i64 0, i64 0, !dbg !9234
  %rt_rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**, !dbg !9234
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx334, align 8, !dbg !9234
  %146 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9236
  %147 = load i32, i32* %known_mode.addr, align 4, !dbg !9237
  %148 = load i32, i32* %known_ret.addr, align 4, !dbg !9238
  %call335 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %145, i32 0, %struct.rtx_def* %146, i32 %147, i32 %148), !dbg !9239
  store i32 %call335, i32* %num0, align 4, !dbg !9240
  %149 = load i32, i32* %num0, align 4, !dbg !9241
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9241
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1, !dbg !9241
  %fld337 = bitcast %union.u* %u336 to [1 x %union.rtunion_def]*, !dbg !9241
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i64 0, i64 0, !dbg !9241
  %rt_rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**, !dbg !9241
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !9241
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !9241
  %bf.load340 = load i32, i32* %152, align 8, !dbg !9241
  %bf.lshr341 = lshr i32 %bf.load340, 16, !dbg !9241
  %bf.clear342 = and i32 %bf.lshr341, 255, !dbg !9241
  %idxprom343 = zext i32 %bf.clear342 to i64, !dbg !9241
  %arrayidx344 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom343, !dbg !9241
  %153 = load i8, i8* %arrayidx344, align 1, !dbg !9241
  %conv345 = zext i8 %153 to i16, !dbg !9241
  %conv346 = zext i16 %conv345 to i32, !dbg !9241
  %mul347 = mul nsw i32 %conv346, 8, !dbg !9241
  %conv348 = trunc i32 %mul347 to i16, !dbg !9241
  %conv349 = zext i16 %conv348 to i32, !dbg !9241
  %154 = load i32, i32* %bitwidth, align 4, !dbg !9241
  %sub350 = sub i32 %conv349, %154, !dbg !9241
  %sub351 = sub nsw i32 %149, %sub350, !dbg !9241
  %cmp352 = icmp sgt i32 1, %sub351, !dbg !9241
  br i1 %cmp352, label %cond.true354, label %cond.false355, !dbg !9241

cond.true354:                                     ; preds = %if.then330
  br label %cond.end372, !dbg !9241

cond.false355:                                    ; preds = %if.then330
  %155 = load i32, i32* %num0, align 4, !dbg !9241
  %156 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9241
  %u356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !9241
  %fld357 = bitcast %union.u* %u356 to [1 x %union.rtunion_def]*, !dbg !9241
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i64 0, i64 0, !dbg !9241
  %rt_rtx359 = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**, !dbg !9241
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx359, align 8, !dbg !9241
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !9241
  %bf.load360 = load i32, i32* %158, align 8, !dbg !9241
  %bf.lshr361 = lshr i32 %bf.load360, 16, !dbg !9241
  %bf.clear362 = and i32 %bf.lshr361, 255, !dbg !9241
  %idxprom363 = zext i32 %bf.clear362 to i64, !dbg !9241
  %arrayidx364 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom363, !dbg !9241
  %159 = load i8, i8* %arrayidx364, align 1, !dbg !9241
  %conv365 = zext i8 %159 to i16, !dbg !9241
  %conv366 = zext i16 %conv365 to i32, !dbg !9241
  %mul367 = mul nsw i32 %conv366, 8, !dbg !9241
  %conv368 = trunc i32 %mul367 to i16, !dbg !9241
  %conv369 = zext i16 %conv368 to i32, !dbg !9241
  %160 = load i32, i32* %bitwidth, align 4, !dbg !9241
  %sub370 = sub i32 %conv369, %160, !dbg !9241
  %sub371 = sub nsw i32 %155, %sub370, !dbg !9241
  br label %cond.end372, !dbg !9241

cond.end372:                                      ; preds = %cond.false355, %cond.true354
  %cond373 = phi i32 [ 1, %cond.true354 ], [ %sub371, %cond.false355 ], !dbg !9241
  store i32 %cond373, i32* %retval, align 4, !dbg !9242
  br label %return, !dbg !9242

if.end374:                                        ; preds = %if.end313
  br label %sw.epilog, !dbg !9243

sw.bb375:                                         ; preds = %if.end220
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9244
  %u376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1, !dbg !9244
  %fld377 = bitcast %union.u* %u376 to [1 x %union.rtunion_def]*, !dbg !9244
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i64 0, i64 1, !dbg !9244
  %rt_rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**, !dbg !9244
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx379, align 8, !dbg !9244
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !9244
  %bf.load380 = load i32, i32* %163, align 8, !dbg !9244
  %bf.clear381 = and i32 %bf.load380, 65535, !dbg !9244
  %cmp382 = icmp eq i32 %bf.clear381, 30, !dbg !9244
  br i1 %cmp382, label %if.then384, label %if.end410, !dbg !9246

if.then384:                                       ; preds = %sw.bb375
  %164 = load i32, i32* %bitwidth, align 4, !dbg !9247
  %conv385 = sext i32 %164 to i64, !dbg !9247
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9247
  %u386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1, !dbg !9247
  %fld387 = bitcast %union.u* %u386 to [1 x %union.rtunion_def]*, !dbg !9247
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i64 0, i64 1, !dbg !9247
  %rt_rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**, !dbg !9247
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx389, align 8, !dbg !9247
  %u390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !9247
  %hwint391 = bitcast %union.u* %u390 to [1 x i64]*, !dbg !9247
  %arrayidx392 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint391, i64 0, i64 0, !dbg !9247
  %167 = load i64, i64* %arrayidx392, align 8, !dbg !9247
  %sub393 = sub nsw i64 %conv385, %167, !dbg !9247
  %cmp394 = icmp sgt i64 1, %sub393, !dbg !9247
  br i1 %cmp394, label %cond.true396, label %cond.false397, !dbg !9247

cond.true396:                                     ; preds = %if.then384
  br label %cond.end407, !dbg !9247

cond.false397:                                    ; preds = %if.then384
  %168 = load i32, i32* %bitwidth, align 4, !dbg !9247
  %conv398 = sext i32 %168 to i64, !dbg !9247
  %169 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9247
  %u399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !9247
  %fld400 = bitcast %union.u* %u399 to [1 x %union.rtunion_def]*, !dbg !9247
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i64 0, i64 1, !dbg !9247
  %rt_rtx402 = bitcast %union.rtunion_def* %arrayidx401 to %struct.rtx_def**, !dbg !9247
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx402, align 8, !dbg !9247
  %u403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !9247
  %hwint404 = bitcast %union.u* %u403 to [1 x i64]*, !dbg !9247
  %arrayidx405 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint404, i64 0, i64 0, !dbg !9247
  %171 = load i64, i64* %arrayidx405, align 8, !dbg !9247
  %sub406 = sub nsw i64 %conv398, %171, !dbg !9247
  br label %cond.end407, !dbg !9247

cond.end407:                                      ; preds = %cond.false397, %cond.true396
  %cond408 = phi i64 [ 1, %cond.true396 ], [ %sub406, %cond.false397 ], !dbg !9247
  %conv409 = trunc i64 %cond408 to i32, !dbg !9247
  store i32 %conv409, i32* %retval, align 4, !dbg !9248
  br label %return, !dbg !9248

if.end410:                                        ; preds = %sw.bb375
  br label %sw.epilog, !dbg !9249

sw.bb411:                                         ; preds = %if.end220
  %172 = load i32, i32* %bitwidth, align 4, !dbg !9250
  %173 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9251
  %u412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1, !dbg !9251
  %fld413 = bitcast %union.u* %u412 to [1 x %union.rtunion_def]*, !dbg !9251
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i64 0, i64 0, !dbg !9251
  %rt_rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**, !dbg !9251
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx415, align 8, !dbg !9251
  %175 = bitcast %struct.rtx_def* %174 to i32*, !dbg !9251
  %bf.load416 = load i32, i32* %175, align 8, !dbg !9251
  %bf.lshr417 = lshr i32 %bf.load416, 16, !dbg !9251
  %bf.clear418 = and i32 %bf.lshr417, 255, !dbg !9251
  %idxprom419 = zext i32 %bf.clear418 to i64, !dbg !9251
  %arrayidx420 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom419, !dbg !9251
  %176 = load i8, i8* %arrayidx420, align 1, !dbg !9251
  %conv421 = zext i8 %176 to i16, !dbg !9251
  %conv422 = zext i16 %conv421 to i32, !dbg !9251
  %mul423 = mul nsw i32 %conv422, 8, !dbg !9251
  %conv424 = trunc i32 %mul423 to i16, !dbg !9251
  %conv425 = zext i16 %conv424 to i32, !dbg !9251
  %sub426 = sub i32 %172, %conv425, !dbg !9252
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9253
  %u427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1, !dbg !9253
  %fld428 = bitcast %union.u* %u427 to [1 x %union.rtunion_def]*, !dbg !9253
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i64 0, i64 0, !dbg !9253
  %rt_rtx430 = bitcast %union.rtunion_def* %arrayidx429 to %struct.rtx_def**, !dbg !9253
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx430, align 8, !dbg !9253
  %179 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9254
  %180 = load i32, i32* %known_mode.addr, align 4, !dbg !9255
  %181 = load i32, i32* %known_ret.addr, align 4, !dbg !9256
  %call431 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %178, i32 0, %struct.rtx_def* %179, i32 %180, i32 %181), !dbg !9257
  %add432 = add i32 %sub426, %call431, !dbg !9258
  store i32 %add432, i32* %retval, align 4, !dbg !9259
  br label %return, !dbg !9259

sw.bb433:                                         ; preds = %if.end220
  %182 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9260
  %u434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1, !dbg !9260
  %fld435 = bitcast %union.u* %u434 to [1 x %union.rtunion_def]*, !dbg !9260
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i64 0, i64 0, !dbg !9260
  %rt_rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**, !dbg !9260
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx437, align 8, !dbg !9260
  %184 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9261
  %185 = load i32, i32* %known_mode.addr, align 4, !dbg !9262
  %186 = load i32, i32* %known_ret.addr, align 4, !dbg !9263
  %call438 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %183, i32 0, %struct.rtx_def* %184, i32 %185, i32 %186), !dbg !9264
  store i32 %call438, i32* %num0, align 4, !dbg !9265
  %187 = load i32, i32* %num0, align 4, !dbg !9266
  %188 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9266
  %u439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !9266
  %fld440 = bitcast %union.u* %u439 to [1 x %union.rtunion_def]*, !dbg !9266
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i64 0, i64 0, !dbg !9266
  %rt_rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**, !dbg !9266
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx442, align 8, !dbg !9266
  %190 = bitcast %struct.rtx_def* %189 to i32*, !dbg !9266
  %bf.load443 = load i32, i32* %190, align 8, !dbg !9266
  %bf.lshr444 = lshr i32 %bf.load443, 16, !dbg !9266
  %bf.clear445 = and i32 %bf.lshr444, 255, !dbg !9266
  %idxprom446 = zext i32 %bf.clear445 to i64, !dbg !9266
  %arrayidx447 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom446, !dbg !9266
  %191 = load i8, i8* %arrayidx447, align 1, !dbg !9266
  %conv448 = zext i8 %191 to i16, !dbg !9266
  %conv449 = zext i16 %conv448 to i32, !dbg !9266
  %mul450 = mul nsw i32 %conv449, 8, !dbg !9266
  %conv451 = trunc i32 %mul450 to i16, !dbg !9266
  %conv452 = zext i16 %conv451 to i32, !dbg !9266
  %192 = load i32, i32* %bitwidth, align 4, !dbg !9266
  %sub453 = sub i32 %conv452, %192, !dbg !9266
  %sub454 = sub nsw i32 %187, %sub453, !dbg !9266
  %cmp455 = icmp sgt i32 1, %sub454, !dbg !9266
  br i1 %cmp455, label %cond.true457, label %cond.false458, !dbg !9266

cond.true457:                                     ; preds = %sw.bb433
  br label %cond.end475, !dbg !9266

cond.false458:                                    ; preds = %sw.bb433
  %193 = load i32, i32* %num0, align 4, !dbg !9266
  %194 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9266
  %u459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !9266
  %fld460 = bitcast %union.u* %u459 to [1 x %union.rtunion_def]*, !dbg !9266
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i64 0, i64 0, !dbg !9266
  %rt_rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**, !dbg !9266
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx462, align 8, !dbg !9266
  %196 = bitcast %struct.rtx_def* %195 to i32*, !dbg !9266
  %bf.load463 = load i32, i32* %196, align 8, !dbg !9266
  %bf.lshr464 = lshr i32 %bf.load463, 16, !dbg !9266
  %bf.clear465 = and i32 %bf.lshr464, 255, !dbg !9266
  %idxprom466 = zext i32 %bf.clear465 to i64, !dbg !9266
  %arrayidx467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom466, !dbg !9266
  %197 = load i8, i8* %arrayidx467, align 1, !dbg !9266
  %conv468 = zext i8 %197 to i16, !dbg !9266
  %conv469 = zext i16 %conv468 to i32, !dbg !9266
  %mul470 = mul nsw i32 %conv469, 8, !dbg !9266
  %conv471 = trunc i32 %mul470 to i16, !dbg !9266
  %conv472 = zext i16 %conv471 to i32, !dbg !9266
  %198 = load i32, i32* %bitwidth, align 4, !dbg !9266
  %sub473 = sub i32 %conv472, %198, !dbg !9266
  %sub474 = sub nsw i32 %193, %sub473, !dbg !9266
  br label %cond.end475, !dbg !9266

cond.end475:                                      ; preds = %cond.false458, %cond.true457
  %cond476 = phi i32 [ 1, %cond.true457 ], [ %sub474, %cond.false458 ], !dbg !9266
  store i32 %cond476, i32* %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

sw.bb477:                                         ; preds = %if.end220
  %199 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9268
  %u478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1, !dbg !9268
  %fld479 = bitcast %union.u* %u478 to [1 x %union.rtunion_def]*, !dbg !9268
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i64 0, i64 0, !dbg !9268
  %rt_rtx481 = bitcast %union.rtunion_def* %arrayidx480 to %struct.rtx_def**, !dbg !9268
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx481, align 8, !dbg !9268
  %201 = load i32, i32* %mode.addr, align 4, !dbg !9269
  %202 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9270
  %203 = load i32, i32* %known_mode.addr, align 4, !dbg !9271
  %204 = load i32, i32* %known_ret.addr, align 4, !dbg !9272
  %call482 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %200, i32 %201, %struct.rtx_def* %202, i32 %203, i32 %204), !dbg !9273
  store i32 %call482, i32* %retval, align 4, !dbg !9274
  br label %return, !dbg !9274

sw.bb483:                                         ; preds = %if.end220, %if.end220
  %205 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9275
  %u484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !9275
  %fld485 = bitcast %union.u* %u484 to [1 x %union.rtunion_def]*, !dbg !9275
  %arrayidx486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld485, i64 0, i64 1, !dbg !9275
  %rt_rtx487 = bitcast %union.rtunion_def* %arrayidx486 to %struct.rtx_def**, !dbg !9275
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx487, align 8, !dbg !9275
  %207 = bitcast %struct.rtx_def* %206 to i32*, !dbg !9275
  %bf.load488 = load i32, i32* %207, align 8, !dbg !9275
  %bf.clear489 = and i32 %bf.load488, 65535, !dbg !9275
  %cmp490 = icmp eq i32 %bf.clear489, 30, !dbg !9275
  br i1 %cmp490, label %land.lhs.true492, label %if.end574, !dbg !9277

land.lhs.true492:                                 ; preds = %sw.bb483
  %208 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9278
  %u493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1, !dbg !9278
  %fld494 = bitcast %union.u* %u493 to [1 x %union.rtunion_def]*, !dbg !9278
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i64 0, i64 1, !dbg !9278
  %rt_rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**, !dbg !9278
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx496, align 8, !dbg !9278
  %u497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !9278
  %hwint498 = bitcast %union.u* %u497 to [1 x i64]*, !dbg !9278
  %arrayidx499 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint498, i64 0, i64 0, !dbg !9278
  %210 = load i64, i64* %arrayidx499, align 8, !dbg !9278
  %cmp500 = icmp sge i64 %210, 0, !dbg !9279
  br i1 %cmp500, label %land.lhs.true502, label %if.end574, !dbg !9280

land.lhs.true502:                                 ; preds = %land.lhs.true492
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9281
  %u503 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !9281
  %fld504 = bitcast %union.u* %u503 to [1 x %union.rtunion_def]*, !dbg !9281
  %arrayidx505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld504, i64 0, i64 1, !dbg !9281
  %rt_rtx506 = bitcast %union.rtunion_def* %arrayidx505 to %struct.rtx_def**, !dbg !9281
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx506, align 8, !dbg !9281
  %u507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1, !dbg !9281
  %hwint508 = bitcast %union.u* %u507 to [1 x i64]*, !dbg !9281
  %arrayidx509 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint508, i64 0, i64 0, !dbg !9281
  %213 = load i64, i64* %arrayidx509, align 8, !dbg !9281
  %214 = load i32, i32* %bitwidth, align 4, !dbg !9282
  %conv510 = sext i32 %214 to i64, !dbg !9283
  %cmp511 = icmp slt i64 %213, %conv510, !dbg !9284
  br i1 %cmp511, label %if.then513, label %if.end574, !dbg !9285

if.then513:                                       ; preds = %land.lhs.true502
  %215 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9286
  %u514 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1, !dbg !9286
  %fld515 = bitcast %union.u* %u514 to [1 x %union.rtunion_def]*, !dbg !9286
  %arrayidx516 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld515, i64 0, i64 0, !dbg !9286
  %rt_rtx517 = bitcast %union.rtunion_def* %arrayidx516 to %struct.rtx_def**, !dbg !9286
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx517, align 8, !dbg !9286
  %217 = load i32, i32* %mode.addr, align 4, !dbg !9288
  %218 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9289
  %219 = load i32, i32* %known_mode.addr, align 4, !dbg !9290
  %220 = load i32, i32* %known_ret.addr, align 4, !dbg !9291
  %call518 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %216, i32 %217, %struct.rtx_def* %218, i32 %219, i32 %220), !dbg !9292
  store i32 %call518, i32* %num0, align 4, !dbg !9293
  %221 = load i32, i32* %num0, align 4, !dbg !9294
  %conv519 = sext i32 %221 to i64, !dbg !9294
  %222 = load i32, i32* %code, align 4, !dbg !9294
  %cmp520 = icmp eq i32 %222, 66, !dbg !9294
  br i1 %cmp520, label %cond.true522, label %cond.false530, !dbg !9294

cond.true522:                                     ; preds = %if.then513
  %223 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9294
  %u523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1, !dbg !9294
  %fld524 = bitcast %union.u* %u523 to [1 x %union.rtunion_def]*, !dbg !9294
  %arrayidx525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld524, i64 0, i64 1, !dbg !9294
  %rt_rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**, !dbg !9294
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx526, align 8, !dbg !9294
  %u527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1, !dbg !9294
  %hwint528 = bitcast %union.u* %u527 to [1 x i64]*, !dbg !9294
  %arrayidx529 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint528, i64 0, i64 0, !dbg !9294
  %225 = load i64, i64* %arrayidx529, align 8, !dbg !9294
  br label %cond.end540, !dbg !9294

cond.false530:                                    ; preds = %if.then513
  %226 = load i32, i32* %bitwidth, align 4, !dbg !9294
  %conv531 = sext i32 %226 to i64, !dbg !9294
  %227 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9294
  %u532 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1, !dbg !9294
  %fld533 = bitcast %union.u* %u532 to [1 x %union.rtunion_def]*, !dbg !9294
  %arrayidx534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld533, i64 0, i64 1, !dbg !9294
  %rt_rtx535 = bitcast %union.rtunion_def* %arrayidx534 to %struct.rtx_def**, !dbg !9294
  %228 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx535, align 8, !dbg !9294
  %u536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1, !dbg !9294
  %hwint537 = bitcast %union.u* %u536 to [1 x i64]*, !dbg !9294
  %arrayidx538 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint537, i64 0, i64 0, !dbg !9294
  %229 = load i64, i64* %arrayidx538, align 8, !dbg !9294
  %sub539 = sub nsw i64 %conv531, %229, !dbg !9294
  br label %cond.end540, !dbg !9294

cond.end540:                                      ; preds = %cond.false530, %cond.true522
  %cond541 = phi i64 [ %225, %cond.true522 ], [ %sub539, %cond.false530 ], !dbg !9294
  %sub542 = sub nsw i64 %conv519, %cond541, !dbg !9294
  %cmp543 = icmp sgt i64 1, %sub542, !dbg !9294
  br i1 %cmp543, label %cond.true545, label %cond.false546, !dbg !9294

cond.true545:                                     ; preds = %cond.end540
  br label %cond.end571, !dbg !9294

cond.false546:                                    ; preds = %cond.end540
  %230 = load i32, i32* %num0, align 4, !dbg !9294
  %conv547 = sext i32 %230 to i64, !dbg !9294
  %231 = load i32, i32* %code, align 4, !dbg !9294
  %cmp548 = icmp eq i32 %231, 66, !dbg !9294
  br i1 %cmp548, label %cond.true550, label %cond.false558, !dbg !9294

cond.true550:                                     ; preds = %cond.false546
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9294
  %u551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !9294
  %fld552 = bitcast %union.u* %u551 to [1 x %union.rtunion_def]*, !dbg !9294
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i64 0, i64 1, !dbg !9294
  %rt_rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**, !dbg !9294
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx554, align 8, !dbg !9294
  %u555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1, !dbg !9294
  %hwint556 = bitcast %union.u* %u555 to [1 x i64]*, !dbg !9294
  %arrayidx557 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint556, i64 0, i64 0, !dbg !9294
  %234 = load i64, i64* %arrayidx557, align 8, !dbg !9294
  br label %cond.end568, !dbg !9294

cond.false558:                                    ; preds = %cond.false546
  %235 = load i32, i32* %bitwidth, align 4, !dbg !9294
  %conv559 = sext i32 %235 to i64, !dbg !9294
  %236 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9294
  %u560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1, !dbg !9294
  %fld561 = bitcast %union.u* %u560 to [1 x %union.rtunion_def]*, !dbg !9294
  %arrayidx562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld561, i64 0, i64 1, !dbg !9294
  %rt_rtx563 = bitcast %union.rtunion_def* %arrayidx562 to %struct.rtx_def**, !dbg !9294
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx563, align 8, !dbg !9294
  %u564 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1, !dbg !9294
  %hwint565 = bitcast %union.u* %u564 to [1 x i64]*, !dbg !9294
  %arrayidx566 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint565, i64 0, i64 0, !dbg !9294
  %238 = load i64, i64* %arrayidx566, align 8, !dbg !9294
  %sub567 = sub nsw i64 %conv559, %238, !dbg !9294
  br label %cond.end568, !dbg !9294

cond.end568:                                      ; preds = %cond.false558, %cond.true550
  %cond569 = phi i64 [ %234, %cond.true550 ], [ %sub567, %cond.false558 ], !dbg !9294
  %sub570 = sub nsw i64 %conv547, %cond569, !dbg !9294
  br label %cond.end571, !dbg !9294

cond.end571:                                      ; preds = %cond.end568, %cond.true545
  %cond572 = phi i64 [ 1, %cond.true545 ], [ %sub570, %cond.end568 ], !dbg !9294
  %conv573 = trunc i64 %cond572 to i32, !dbg !9294
  store i32 %conv573, i32* %retval, align 4, !dbg !9295
  br label %return, !dbg !9295

if.end574:                                        ; preds = %land.lhs.true502, %land.lhs.true492, %sw.bb483
  br label %sw.epilog, !dbg !9296

sw.bb575:                                         ; preds = %if.end220
  %239 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9297
  %u576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1, !dbg !9297
  %fld577 = bitcast %union.u* %u576 to [1 x %union.rtunion_def]*, !dbg !9297
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i64 0, i64 0, !dbg !9297
  %rt_rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**, !dbg !9297
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx579, align 8, !dbg !9297
  %241 = load i32, i32* %mode.addr, align 4, !dbg !9298
  %242 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9299
  %243 = load i32, i32* %known_mode.addr, align 4, !dbg !9300
  %244 = load i32, i32* %known_ret.addr, align 4, !dbg !9301
  %call580 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %240, i32 %241, %struct.rtx_def* %242, i32 %243, i32 %244), !dbg !9302
  store i32 %call580, i32* %num0, align 4, !dbg !9303
  %245 = load i32, i32* %bitwidth, align 4, !dbg !9304
  %cmp581 = icmp ugt i32 %245, 64, !dbg !9306
  br i1 %cmp581, label %if.then583, label %if.end591, !dbg !9307

if.then583:                                       ; preds = %sw.bb575
  %246 = load i32, i32* %num0, align 4, !dbg !9308
  %cmp584 = icmp sgt i32 %246, 1, !dbg !9309
  br i1 %cmp584, label %cond.true586, label %cond.false588, !dbg !9308

cond.true586:                                     ; preds = %if.then583
  %247 = load i32, i32* %num0, align 4, !dbg !9310
  %sub587 = sub nsw i32 %247, 1, !dbg !9311
  br label %cond.end589, !dbg !9308

cond.false588:                                    ; preds = %if.then583
  br label %cond.end589, !dbg !9308

cond.end589:                                      ; preds = %cond.false588, %cond.true586
  %cond590 = phi i32 [ %sub587, %cond.true586 ], [ 1, %cond.false588 ], !dbg !9308
  store i32 %cond590, i32* %retval, align 4, !dbg !9312
  br label %return, !dbg !9312

if.end591:                                        ; preds = %sw.bb575
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9313
  %u592 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1, !dbg !9313
  %fld593 = bitcast %union.u* %u592 to [1 x %union.rtunion_def]*, !dbg !9313
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i64 0, i64 0, !dbg !9313
  %rt_rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**, !dbg !9313
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx595, align 8, !dbg !9313
  %250 = load i32, i32* %mode.addr, align 4, !dbg !9314
  %call596 = call i64 @nonzero_bits(%struct.rtx_def* %249, i32 %250), !dbg !9315
  store i64 %call596, i64* %nonzero, align 8, !dbg !9316
  %251 = load i64, i64* %nonzero, align 8, !dbg !9317
  %cmp597 = icmp eq i64 %251, 1, !dbg !9319
  br i1 %cmp597, label %if.then599, label %if.end600, !dbg !9320

if.then599:                                       ; preds = %if.end591
  %252 = load i32, i32* %bitwidth, align 4, !dbg !9321
  store i32 %252, i32* %retval, align 4, !dbg !9322
  br label %return, !dbg !9322

if.end600:                                        ; preds = %if.end591
  %253 = load i32, i32* %num0, align 4, !dbg !9323
  %cmp601 = icmp sgt i32 %253, 1, !dbg !9325
  br i1 %cmp601, label %land.lhs.true603, label %if.end610, !dbg !9326

land.lhs.true603:                                 ; preds = %if.end600
  %254 = load i32, i32* %bitwidth, align 4, !dbg !9327
  %sub604 = sub i32 %254, 1, !dbg !9328
  %sh_prom605 = zext i32 %sub604 to i64, !dbg !9329
  %shl606 = shl i64 1, %sh_prom605, !dbg !9329
  %255 = load i64, i64* %nonzero, align 8, !dbg !9330
  %and607 = and i64 %shl606, %255, !dbg !9331
  %tobool608 = icmp ne i64 %and607, 0, !dbg !9331
  br i1 %tobool608, label %if.then609, label %if.end610, !dbg !9332

if.then609:                                       ; preds = %land.lhs.true603
  %256 = load i32, i32* %num0, align 4, !dbg !9333
  %dec = add nsw i32 %256, -1, !dbg !9333
  store i32 %dec, i32* %num0, align 4, !dbg !9333
  br label %if.end610, !dbg !9334

if.end610:                                        ; preds = %if.then609, %land.lhs.true603, %if.end600
  %257 = load i32, i32* %num0, align 4, !dbg !9335
  store i32 %257, i32* %retval, align 4, !dbg !9336
  br label %return, !dbg !9336

sw.bb611:                                         ; preds = %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220
  %258 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9337
  %u612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1, !dbg !9337
  %fld613 = bitcast %union.u* %u612 to [1 x %union.rtunion_def]*, !dbg !9337
  %arrayidx614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld613, i64 0, i64 0, !dbg !9337
  %rt_rtx615 = bitcast %union.rtunion_def* %arrayidx614 to %struct.rtx_def**, !dbg !9337
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx615, align 8, !dbg !9337
  %260 = load i32, i32* %mode.addr, align 4, !dbg !9338
  %261 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9339
  %262 = load i32, i32* %known_mode.addr, align 4, !dbg !9340
  %263 = load i32, i32* %known_ret.addr, align 4, !dbg !9341
  %call616 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %259, i32 %260, %struct.rtx_def* %261, i32 %262, i32 %263), !dbg !9342
  store i32 %call616, i32* %num0, align 4, !dbg !9343
  %264 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9344
  %u617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1, !dbg !9344
  %fld618 = bitcast %union.u* %u617 to [1 x %union.rtunion_def]*, !dbg !9344
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i64 0, i64 1, !dbg !9344
  %rt_rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**, !dbg !9344
  %265 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx620, align 8, !dbg !9344
  %266 = load i32, i32* %mode.addr, align 4, !dbg !9345
  %267 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9346
  %268 = load i32, i32* %known_mode.addr, align 4, !dbg !9347
  %269 = load i32, i32* %known_ret.addr, align 4, !dbg !9348
  %call621 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %265, i32 %266, %struct.rtx_def* %267, i32 %268, i32 %269), !dbg !9349
  store i32 %call621, i32* %num1, align 4, !dbg !9350
  %270 = load i32, i32* %code, align 4, !dbg !9351
  %cmp622 = icmp eq i32 %270, 61, !dbg !9353
  br i1 %cmp622, label %land.lhs.true624, label %if.end653, !dbg !9354

land.lhs.true624:                                 ; preds = %sw.bb611
  %271 = load i32, i32* %num1, align 4, !dbg !9355
  %cmp625 = icmp sgt i32 %271, 1, !dbg !9356
  br i1 %cmp625, label %land.lhs.true627, label %if.end653, !dbg !9357

land.lhs.true627:                                 ; preds = %land.lhs.true624
  %272 = load i32, i32* %bitwidth, align 4, !dbg !9358
  %cmp628 = icmp ule i32 %272, 64, !dbg !9359
  br i1 %cmp628, label %land.lhs.true630, label %if.end653, !dbg !9360

land.lhs.true630:                                 ; preds = %land.lhs.true627
  %273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9361
  %u631 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1, !dbg !9361
  %fld632 = bitcast %union.u* %u631 to [1 x %union.rtunion_def]*, !dbg !9361
  %arrayidx633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld632, i64 0, i64 1, !dbg !9361
  %rt_rtx634 = bitcast %union.rtunion_def* %arrayidx633 to %struct.rtx_def**, !dbg !9361
  %274 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx634, align 8, !dbg !9361
  %275 = bitcast %struct.rtx_def* %274 to i32*, !dbg !9361
  %bf.load635 = load i32, i32* %275, align 8, !dbg !9361
  %bf.clear636 = and i32 %bf.load635, 65535, !dbg !9361
  %cmp637 = icmp eq i32 %bf.clear636, 30, !dbg !9361
  br i1 %cmp637, label %land.lhs.true639, label %if.end653, !dbg !9362

land.lhs.true639:                                 ; preds = %land.lhs.true630
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9363
  %u640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !9363
  %fld641 = bitcast %union.u* %u640 to [1 x %union.rtunion_def]*, !dbg !9363
  %arrayidx642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld641, i64 0, i64 1, !dbg !9363
  %rt_rtx643 = bitcast %union.rtunion_def* %arrayidx642 to %struct.rtx_def**, !dbg !9363
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx643, align 8, !dbg !9363
  %u644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1, !dbg !9363
  %hwint645 = bitcast %union.u* %u644 to [1 x i64]*, !dbg !9363
  %arrayidx646 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint645, i64 0, i64 0, !dbg !9363
  %278 = load i64, i64* %arrayidx646, align 8, !dbg !9363
  %279 = load i32, i32* %bitwidth, align 4, !dbg !9364
  %sub647 = sub i32 %279, 1, !dbg !9365
  %sh_prom648 = zext i32 %sub647 to i64, !dbg !9366
  %shl649 = shl i64 1, %sh_prom648, !dbg !9366
  %and650 = and i64 %278, %shl649, !dbg !9367
  %tobool651 = icmp ne i64 %and650, 0, !dbg !9367
  br i1 %tobool651, label %if.end653, label %if.then652, !dbg !9368

if.then652:                                       ; preds = %land.lhs.true639
  %280 = load i32, i32* %num1, align 4, !dbg !9369
  store i32 %280, i32* %retval, align 4, !dbg !9370
  br label %return, !dbg !9370

if.end653:                                        ; preds = %land.lhs.true639, %land.lhs.true630, %land.lhs.true627, %land.lhs.true624, %sw.bb611
  %281 = load i32, i32* %code, align 4, !dbg !9371
  %cmp654 = icmp eq i32 %281, 62, !dbg !9373
  br i1 %cmp654, label %land.lhs.true656, label %if.end685, !dbg !9374

land.lhs.true656:                                 ; preds = %if.end653
  %282 = load i32, i32* %num1, align 4, !dbg !9375
  %cmp657 = icmp sgt i32 %282, 1, !dbg !9376
  br i1 %cmp657, label %land.lhs.true659, label %if.end685, !dbg !9377

land.lhs.true659:                                 ; preds = %land.lhs.true656
  %283 = load i32, i32* %bitwidth, align 4, !dbg !9378
  %cmp660 = icmp ule i32 %283, 64, !dbg !9379
  br i1 %cmp660, label %land.lhs.true662, label %if.end685, !dbg !9380

land.lhs.true662:                                 ; preds = %land.lhs.true659
  %284 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9381
  %u663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1, !dbg !9381
  %fld664 = bitcast %union.u* %u663 to [1 x %union.rtunion_def]*, !dbg !9381
  %arrayidx665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld664, i64 0, i64 1, !dbg !9381
  %rt_rtx666 = bitcast %union.rtunion_def* %arrayidx665 to %struct.rtx_def**, !dbg !9381
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx666, align 8, !dbg !9381
  %286 = bitcast %struct.rtx_def* %285 to i32*, !dbg !9381
  %bf.load667 = load i32, i32* %286, align 8, !dbg !9381
  %bf.clear668 = and i32 %bf.load667, 65535, !dbg !9381
  %cmp669 = icmp eq i32 %bf.clear668, 30, !dbg !9381
  br i1 %cmp669, label %land.lhs.true671, label %if.end685, !dbg !9382

land.lhs.true671:                                 ; preds = %land.lhs.true662
  %287 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9383
  %u672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1, !dbg !9383
  %fld673 = bitcast %union.u* %u672 to [1 x %union.rtunion_def]*, !dbg !9383
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i64 0, i64 1, !dbg !9383
  %rt_rtx675 = bitcast %union.rtunion_def* %arrayidx674 to %struct.rtx_def**, !dbg !9383
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx675, align 8, !dbg !9383
  %u676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1, !dbg !9383
  %hwint677 = bitcast %union.u* %u676 to [1 x i64]*, !dbg !9383
  %arrayidx678 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint677, i64 0, i64 0, !dbg !9383
  %289 = load i64, i64* %arrayidx678, align 8, !dbg !9383
  %290 = load i32, i32* %bitwidth, align 4, !dbg !9384
  %sub679 = sub i32 %290, 1, !dbg !9385
  %sh_prom680 = zext i32 %sub679 to i64, !dbg !9386
  %shl681 = shl i64 1, %sh_prom680, !dbg !9386
  %and682 = and i64 %289, %shl681, !dbg !9387
  %tobool683 = icmp ne i64 %and682, 0, !dbg !9387
  br i1 %tobool683, label %if.then684, label %if.end685, !dbg !9388

if.then684:                                       ; preds = %land.lhs.true671
  %291 = load i32, i32* %num1, align 4, !dbg !9389
  store i32 %291, i32* %retval, align 4, !dbg !9390
  br label %return, !dbg !9390

if.end685:                                        ; preds = %land.lhs.true671, %land.lhs.true662, %land.lhs.true659, %land.lhs.true656, %if.end653
  %292 = load i32, i32* %num0, align 4, !dbg !9391
  %293 = load i32, i32* %num1, align 4, !dbg !9391
  %cmp686 = icmp slt i32 %292, %293, !dbg !9391
  br i1 %cmp686, label %cond.true688, label %cond.false689, !dbg !9391

cond.true688:                                     ; preds = %if.end685
  %294 = load i32, i32* %num0, align 4, !dbg !9391
  br label %cond.end690, !dbg !9391

cond.false689:                                    ; preds = %if.end685
  %295 = load i32, i32* %num1, align 4, !dbg !9391
  br label %cond.end690, !dbg !9391

cond.end690:                                      ; preds = %cond.false689, %cond.true688
  %cond691 = phi i32 [ %294, %cond.true688 ], [ %295, %cond.false689 ], !dbg !9391
  store i32 %cond691, i32* %retval, align 4, !dbg !9392
  br label %return, !dbg !9392

sw.bb692:                                         ; preds = %if.end220, %if.end220
  %296 = load i32, i32* %code, align 4, !dbg !9393
  %cmp693 = icmp eq i32 %296, 49, !dbg !9395
  br i1 %cmp693, label %land.lhs.true695, label %if.end731, !dbg !9396

land.lhs.true695:                                 ; preds = %sw.bb692
  %297 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9397
  %u696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1, !dbg !9397
  %fld697 = bitcast %union.u* %u696 to [1 x %union.rtunion_def]*, !dbg !9397
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i64 0, i64 1, !dbg !9397
  %rt_rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**, !dbg !9397
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx699, align 8, !dbg !9397
  %299 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !9398
  %cmp700 = icmp eq %struct.rtx_def* %298, %299, !dbg !9399
  br i1 %cmp700, label %land.lhs.true702, label %if.end731, !dbg !9400

land.lhs.true702:                                 ; preds = %land.lhs.true695
  %300 = load i32, i32* %bitwidth, align 4, !dbg !9401
  %cmp703 = icmp ule i32 %300, 64, !dbg !9402
  br i1 %cmp703, label %if.then705, label %if.end731, !dbg !9403

if.then705:                                       ; preds = %land.lhs.true702
  %301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9404
  %u706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1, !dbg !9404
  %fld707 = bitcast %union.u* %u706 to [1 x %union.rtunion_def]*, !dbg !9404
  %arrayidx708 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld707, i64 0, i64 0, !dbg !9404
  %rt_rtx709 = bitcast %union.rtunion_def* %arrayidx708 to %struct.rtx_def**, !dbg !9404
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx709, align 8, !dbg !9404
  %303 = load i32, i32* %mode.addr, align 4, !dbg !9406
  %call710 = call i64 @nonzero_bits(%struct.rtx_def* %302, i32 %303), !dbg !9407
  store i64 %call710, i64* %nonzero, align 8, !dbg !9408
  %304 = load i32, i32* %bitwidth, align 4, !dbg !9409
  %sub711 = sub i32 %304, 1, !dbg !9411
  %sh_prom712 = zext i32 %sub711 to i64, !dbg !9412
  %shl713 = shl i64 1, %sh_prom712, !dbg !9412
  %305 = load i64, i64* %nonzero, align 8, !dbg !9413
  %and714 = and i64 %shl713, %305, !dbg !9414
  %cmp715 = icmp eq i64 %and714, 0, !dbg !9415
  br i1 %cmp715, label %if.then717, label %if.end730, !dbg !9416

if.then717:                                       ; preds = %if.then705
  %306 = load i64, i64* %nonzero, align 8, !dbg !9417
  %cmp718 = icmp eq i64 %306, 1, !dbg !9418
  br i1 %cmp718, label %cond.true723, label %lor.lhs.false720, !dbg !9419

lor.lhs.false720:                                 ; preds = %if.then717
  %307 = load i64, i64* %nonzero, align 8, !dbg !9420
  %cmp721 = icmp eq i64 %307, 0, !dbg !9421
  br i1 %cmp721, label %cond.true723, label %cond.false724, !dbg !9417

cond.true723:                                     ; preds = %lor.lhs.false720, %if.then717
  %308 = load i32, i32* %bitwidth, align 4, !dbg !9422
  br label %cond.end728, !dbg !9417

cond.false724:                                    ; preds = %lor.lhs.false720
  %309 = load i32, i32* %bitwidth, align 4, !dbg !9423
  %310 = load i64, i64* %nonzero, align 8, !dbg !9424
  %call725 = call i32 @floor_log2(i64 %310), !dbg !9425
  %sub726 = sub i32 %309, %call725, !dbg !9426
  %sub727 = sub i32 %sub726, 1, !dbg !9427
  br label %cond.end728, !dbg !9417

cond.end728:                                      ; preds = %cond.false724, %cond.true723
  %cond729 = phi i32 [ %308, %cond.true723 ], [ %sub727, %cond.false724 ], !dbg !9417
  store i32 %cond729, i32* %retval, align 4, !dbg !9428
  br label %return, !dbg !9428

if.end730:                                        ; preds = %if.then705
  br label %if.end731, !dbg !9429

if.end731:                                        ; preds = %if.end730, %land.lhs.true702, %land.lhs.true695, %sw.bb692
  %311 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9430
  %u732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1, !dbg !9430
  %fld733 = bitcast %union.u* %u732 to [1 x %union.rtunion_def]*, !dbg !9430
  %arrayidx734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld733, i64 0, i64 0, !dbg !9430
  %rt_rtx735 = bitcast %union.rtunion_def* %arrayidx734 to %struct.rtx_def**, !dbg !9430
  %312 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx735, align 8, !dbg !9430
  %313 = load i32, i32* %mode.addr, align 4, !dbg !9431
  %314 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9432
  %315 = load i32, i32* %known_mode.addr, align 4, !dbg !9433
  %316 = load i32, i32* %known_ret.addr, align 4, !dbg !9434
  %call736 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %312, i32 %313, %struct.rtx_def* %314, i32 %315, i32 %316), !dbg !9435
  store i32 %call736, i32* %num0, align 4, !dbg !9436
  %317 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9437
  %u737 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1, !dbg !9437
  %fld738 = bitcast %union.u* %u737 to [1 x %union.rtunion_def]*, !dbg !9437
  %arrayidx739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld738, i64 0, i64 1, !dbg !9437
  %rt_rtx740 = bitcast %union.rtunion_def* %arrayidx739 to %struct.rtx_def**, !dbg !9437
  %318 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx740, align 8, !dbg !9437
  %319 = load i32, i32* %mode.addr, align 4, !dbg !9438
  %320 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9439
  %321 = load i32, i32* %known_mode.addr, align 4, !dbg !9440
  %322 = load i32, i32* %known_ret.addr, align 4, !dbg !9441
  %call741 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %318, i32 %319, %struct.rtx_def* %320, i32 %321, i32 %322), !dbg !9442
  store i32 %call741, i32* %num1, align 4, !dbg !9443
  %323 = load i32, i32* %num0, align 4, !dbg !9444
  %324 = load i32, i32* %num1, align 4, !dbg !9444
  %cmp742 = icmp slt i32 %323, %324, !dbg !9444
  br i1 %cmp742, label %cond.true744, label %cond.false745, !dbg !9444

cond.true744:                                     ; preds = %if.end731
  %325 = load i32, i32* %num0, align 4, !dbg !9444
  br label %cond.end746, !dbg !9444

cond.false745:                                    ; preds = %if.end731
  %326 = load i32, i32* %num1, align 4, !dbg !9444
  br label %cond.end746, !dbg !9444

cond.end746:                                      ; preds = %cond.false745, %cond.true744
  %cond747 = phi i32 [ %325, %cond.true744 ], [ %326, %cond.false745 ], !dbg !9444
  %sub748 = sub nsw i32 %cond747, 1, !dbg !9444
  %cmp749 = icmp sgt i32 1, %sub748, !dbg !9444
  br i1 %cmp749, label %cond.true751, label %cond.false752, !dbg !9444

cond.true751:                                     ; preds = %cond.end746
  br label %cond.end760, !dbg !9444

cond.false752:                                    ; preds = %cond.end746
  %327 = load i32, i32* %num0, align 4, !dbg !9444
  %328 = load i32, i32* %num1, align 4, !dbg !9444
  %cmp753 = icmp slt i32 %327, %328, !dbg !9444
  br i1 %cmp753, label %cond.true755, label %cond.false756, !dbg !9444

cond.true755:                                     ; preds = %cond.false752
  %329 = load i32, i32* %num0, align 4, !dbg !9444
  br label %cond.end757, !dbg !9444

cond.false756:                                    ; preds = %cond.false752
  %330 = load i32, i32* %num1, align 4, !dbg !9444
  br label %cond.end757, !dbg !9444

cond.end757:                                      ; preds = %cond.false756, %cond.true755
  %cond758 = phi i32 [ %329, %cond.true755 ], [ %330, %cond.false756 ], !dbg !9444
  %sub759 = sub nsw i32 %cond758, 1, !dbg !9444
  br label %cond.end760, !dbg !9444

cond.end760:                                      ; preds = %cond.end757, %cond.true751
  %cond761 = phi i32 [ 1, %cond.true751 ], [ %sub759, %cond.end757 ], !dbg !9444
  store i32 %cond761, i32* %result, align 4, !dbg !9445
  %331 = load i32, i32* %result, align 4, !dbg !9446
  store i32 %331, i32* %retval, align 4, !dbg !9447
  br label %return, !dbg !9447

sw.bb762:                                         ; preds = %if.end220
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9448
  %u763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1, !dbg !9448
  %fld764 = bitcast %union.u* %u763 to [1 x %union.rtunion_def]*, !dbg !9448
  %arrayidx765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld764, i64 0, i64 0, !dbg !9448
  %rt_rtx766 = bitcast %union.rtunion_def* %arrayidx765 to %struct.rtx_def**, !dbg !9448
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx766, align 8, !dbg !9448
  %334 = load i32, i32* %mode.addr, align 4, !dbg !9449
  %335 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9450
  %336 = load i32, i32* %known_mode.addr, align 4, !dbg !9451
  %337 = load i32, i32* %known_ret.addr, align 4, !dbg !9452
  %call767 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %333, i32 %334, %struct.rtx_def* %335, i32 %336, i32 %337), !dbg !9453
  store i32 %call767, i32* %num0, align 4, !dbg !9454
  %338 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9455
  %u768 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1, !dbg !9455
  %fld769 = bitcast %union.u* %u768 to [1 x %union.rtunion_def]*, !dbg !9455
  %arrayidx770 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld769, i64 0, i64 1, !dbg !9455
  %rt_rtx771 = bitcast %union.rtunion_def* %arrayidx770 to %struct.rtx_def**, !dbg !9455
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx771, align 8, !dbg !9455
  %340 = load i32, i32* %mode.addr, align 4, !dbg !9456
  %341 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9457
  %342 = load i32, i32* %known_mode.addr, align 4, !dbg !9458
  %343 = load i32, i32* %known_ret.addr, align 4, !dbg !9459
  %call772 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %339, i32 %340, %struct.rtx_def* %341, i32 %342, i32 %343), !dbg !9460
  store i32 %call772, i32* %num1, align 4, !dbg !9461
  %344 = load i32, i32* %bitwidth, align 4, !dbg !9462
  %345 = load i32, i32* %bitwidth, align 4, !dbg !9463
  %346 = load i32, i32* %num0, align 4, !dbg !9464
  %sub773 = sub i32 %345, %346, !dbg !9465
  %sub774 = sub i32 %344, %sub773, !dbg !9466
  %347 = load i32, i32* %bitwidth, align 4, !dbg !9467
  %348 = load i32, i32* %num1, align 4, !dbg !9468
  %sub775 = sub i32 %347, %348, !dbg !9469
  %sub776 = sub i32 %sub774, %sub775, !dbg !9470
  store i32 %sub776, i32* %result, align 4, !dbg !9471
  %349 = load i32, i32* %result, align 4, !dbg !9472
  %cmp777 = icmp sgt i32 %349, 0, !dbg !9474
  br i1 %cmp777, label %land.lhs.true779, label %if.end808, !dbg !9475

land.lhs.true779:                                 ; preds = %sw.bb762
  %350 = load i32, i32* %bitwidth, align 4, !dbg !9476
  %cmp780 = icmp ugt i32 %350, 64, !dbg !9477
  br i1 %cmp780, label %if.then806, label %lor.lhs.false782, !dbg !9478

lor.lhs.false782:                                 ; preds = %land.lhs.true779
  %351 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9479
  %u783 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %351, i32 0, i32 1, !dbg !9479
  %fld784 = bitcast %union.u* %u783 to [1 x %union.rtunion_def]*, !dbg !9479
  %arrayidx785 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld784, i64 0, i64 0, !dbg !9479
  %rt_rtx786 = bitcast %union.rtunion_def* %arrayidx785 to %struct.rtx_def**, !dbg !9479
  %352 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx786, align 8, !dbg !9479
  %353 = load i32, i32* %mode.addr, align 4, !dbg !9480
  %call787 = call i64 @nonzero_bits(%struct.rtx_def* %352, i32 %353), !dbg !9481
  %354 = load i32, i32* %bitwidth, align 4, !dbg !9482
  %sub788 = sub i32 %354, 1, !dbg !9483
  %sh_prom789 = zext i32 %sub788 to i64, !dbg !9484
  %shl790 = shl i64 1, %sh_prom789, !dbg !9484
  %and791 = and i64 %call787, %shl790, !dbg !9485
  %cmp792 = icmp ne i64 %and791, 0, !dbg !9486
  br i1 %cmp792, label %land.lhs.true794, label %if.end808, !dbg !9487

land.lhs.true794:                                 ; preds = %lor.lhs.false782
  %355 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9488
  %u795 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1, !dbg !9488
  %fld796 = bitcast %union.u* %u795 to [1 x %union.rtunion_def]*, !dbg !9488
  %arrayidx797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld796, i64 0, i64 1, !dbg !9488
  %rt_rtx798 = bitcast %union.rtunion_def* %arrayidx797 to %struct.rtx_def**, !dbg !9488
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx798, align 8, !dbg !9488
  %357 = load i32, i32* %mode.addr, align 4, !dbg !9489
  %call799 = call i64 @nonzero_bits(%struct.rtx_def* %356, i32 %357), !dbg !9490
  %358 = load i32, i32* %bitwidth, align 4, !dbg !9491
  %sub800 = sub i32 %358, 1, !dbg !9492
  %sh_prom801 = zext i32 %sub800 to i64, !dbg !9493
  %shl802 = shl i64 1, %sh_prom801, !dbg !9493
  %and803 = and i64 %call799, %shl802, !dbg !9494
  %cmp804 = icmp ne i64 %and803, 0, !dbg !9495
  br i1 %cmp804, label %if.then806, label %if.end808, !dbg !9496

if.then806:                                       ; preds = %land.lhs.true794, %land.lhs.true779
  %359 = load i32, i32* %result, align 4, !dbg !9497
  %dec807 = add nsw i32 %359, -1, !dbg !9497
  store i32 %dec807, i32* %result, align 4, !dbg !9497
  br label %if.end808, !dbg !9498

if.end808:                                        ; preds = %if.then806, %land.lhs.true794, %lor.lhs.false782, %sw.bb762
  %360 = load i32, i32* %result, align 4, !dbg !9499
  %cmp809 = icmp sgt i32 1, %360, !dbg !9499
  br i1 %cmp809, label %cond.true811, label %cond.false812, !dbg !9499

cond.true811:                                     ; preds = %if.end808
  br label %cond.end813, !dbg !9499

cond.false812:                                    ; preds = %if.end808
  %361 = load i32, i32* %result, align 4, !dbg !9499
  br label %cond.end813, !dbg !9499

cond.end813:                                      ; preds = %cond.false812, %cond.true811
  %cond814 = phi i32 [ 1, %cond.true811 ], [ %361, %cond.false812 ], !dbg !9499
  store i32 %cond814, i32* %retval, align 4, !dbg !9500
  br label %return, !dbg !9500

sw.bb815:                                         ; preds = %if.end220
  %362 = load i32, i32* %bitwidth, align 4, !dbg !9501
  %cmp816 = icmp ugt i32 %362, 64, !dbg !9503
  br i1 %cmp816, label %if.then818, label %if.else, !dbg !9504

if.then818:                                       ; preds = %sw.bb815
  store i32 1, i32* %retval, align 4, !dbg !9505
  br label %return, !dbg !9505

if.else:                                          ; preds = %sw.bb815
  %363 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9506
  %u819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1, !dbg !9506
  %fld820 = bitcast %union.u* %u819 to [1 x %union.rtunion_def]*, !dbg !9506
  %arrayidx821 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld820, i64 0, i64 0, !dbg !9506
  %rt_rtx822 = bitcast %union.rtunion_def* %arrayidx821 to %struct.rtx_def**, !dbg !9506
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx822, align 8, !dbg !9506
  %365 = load i32, i32* %mode.addr, align 4, !dbg !9508
  %call823 = call i64 @nonzero_bits(%struct.rtx_def* %364, i32 %365), !dbg !9509
  %366 = load i32, i32* %bitwidth, align 4, !dbg !9510
  %sub824 = sub i32 %366, 1, !dbg !9511
  %sh_prom825 = zext i32 %sub824 to i64, !dbg !9512
  %shl826 = shl i64 1, %sh_prom825, !dbg !9512
  %and827 = and i64 %call823, %shl826, !dbg !9513
  %cmp828 = icmp ne i64 %and827, 0, !dbg !9514
  br i1 %cmp828, label %if.then830, label %if.else831, !dbg !9515

if.then830:                                       ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9516
  br label %return, !dbg !9516

if.else831:                                       ; preds = %if.else
  %367 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9517
  %u832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1, !dbg !9517
  %fld833 = bitcast %union.u* %u832 to [1 x %union.rtunion_def]*, !dbg !9517
  %arrayidx834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld833, i64 0, i64 0, !dbg !9517
  %rt_rtx835 = bitcast %union.rtunion_def* %arrayidx834 to %struct.rtx_def**, !dbg !9517
  %368 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx835, align 8, !dbg !9517
  %369 = load i32, i32* %mode.addr, align 4, !dbg !9518
  %370 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9519
  %371 = load i32, i32* %known_mode.addr, align 4, !dbg !9520
  %372 = load i32, i32* %known_ret.addr, align 4, !dbg !9521
  %call836 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %368, i32 %369, %struct.rtx_def* %370, i32 %371, i32 %372), !dbg !9522
  store i32 %call836, i32* %retval, align 4, !dbg !9523
  br label %return, !dbg !9523

sw.bb837:                                         ; preds = %if.end220
  %373 = load i32, i32* %bitwidth, align 4, !dbg !9524
  %cmp838 = icmp ugt i32 %373, 64, !dbg !9526
  br i1 %cmp838, label %if.then840, label %if.else841, !dbg !9527

if.then840:                                       ; preds = %sw.bb837
  store i32 1, i32* %retval, align 4, !dbg !9528
  br label %return, !dbg !9528

if.else841:                                       ; preds = %sw.bb837
  %374 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9529
  %u842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !9529
  %fld843 = bitcast %union.u* %u842 to [1 x %union.rtunion_def]*, !dbg !9529
  %arrayidx844 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld843, i64 0, i64 1, !dbg !9529
  %rt_rtx845 = bitcast %union.rtunion_def* %arrayidx844 to %struct.rtx_def**, !dbg !9529
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx845, align 8, !dbg !9529
  %376 = load i32, i32* %mode.addr, align 4, !dbg !9531
  %call846 = call i64 @nonzero_bits(%struct.rtx_def* %375, i32 %376), !dbg !9532
  %377 = load i32, i32* %bitwidth, align 4, !dbg !9533
  %sub847 = sub i32 %377, 1, !dbg !9534
  %sh_prom848 = zext i32 %sub847 to i64, !dbg !9535
  %shl849 = shl i64 1, %sh_prom848, !dbg !9535
  %and850 = and i64 %call846, %shl849, !dbg !9536
  %cmp851 = icmp ne i64 %and850, 0, !dbg !9537
  br i1 %cmp851, label %if.then853, label %if.else854, !dbg !9538

if.then853:                                       ; preds = %if.else841
  store i32 1, i32* %retval, align 4, !dbg !9539
  br label %return, !dbg !9539

if.else854:                                       ; preds = %if.else841
  %378 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9540
  %u855 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1, !dbg !9540
  %fld856 = bitcast %union.u* %u855 to [1 x %union.rtunion_def]*, !dbg !9540
  %arrayidx857 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld856, i64 0, i64 1, !dbg !9540
  %rt_rtx858 = bitcast %union.rtunion_def* %arrayidx857 to %struct.rtx_def**, !dbg !9540
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx858, align 8, !dbg !9540
  %380 = load i32, i32* %mode.addr, align 4, !dbg !9541
  %381 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9542
  %382 = load i32, i32* %known_mode.addr, align 4, !dbg !9543
  %383 = load i32, i32* %known_ret.addr, align 4, !dbg !9544
  %call859 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %379, i32 %380, %struct.rtx_def* %381, i32 %382, i32 %383), !dbg !9545
  store i32 %call859, i32* %retval, align 4, !dbg !9546
  br label %return, !dbg !9546

sw.bb860:                                         ; preds = %if.end220
  %384 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9547
  %u861 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %384, i32 0, i32 1, !dbg !9547
  %fld862 = bitcast %union.u* %u861 to [1 x %union.rtunion_def]*, !dbg !9547
  %arrayidx863 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld862, i64 0, i64 0, !dbg !9547
  %rt_rtx864 = bitcast %union.rtunion_def* %arrayidx863 to %struct.rtx_def**, !dbg !9547
  %385 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx864, align 8, !dbg !9547
  %386 = load i32, i32* %mode.addr, align 4, !dbg !9548
  %387 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9549
  %388 = load i32, i32* %known_mode.addr, align 4, !dbg !9550
  %389 = load i32, i32* %known_ret.addr, align 4, !dbg !9551
  %call865 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %385, i32 %386, %struct.rtx_def* %387, i32 %388, i32 %389), !dbg !9552
  store i32 %call865, i32* %result, align 4, !dbg !9553
  %390 = load i32, i32* %result, align 4, !dbg !9554
  %cmp866 = icmp sgt i32 %390, 1, !dbg !9556
  br i1 %cmp866, label %land.lhs.true868, label %if.end885, !dbg !9557

land.lhs.true868:                                 ; preds = %sw.bb860
  %391 = load i32, i32* %bitwidth, align 4, !dbg !9558
  %cmp869 = icmp ugt i32 %391, 64, !dbg !9559
  br i1 %cmp869, label %if.then883, label %lor.lhs.false871, !dbg !9560

lor.lhs.false871:                                 ; preds = %land.lhs.true868
  %392 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9561
  %u872 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !9561
  %fld873 = bitcast %union.u* %u872 to [1 x %union.rtunion_def]*, !dbg !9561
  %arrayidx874 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld873, i64 0, i64 1, !dbg !9561
  %rt_rtx875 = bitcast %union.rtunion_def* %arrayidx874 to %struct.rtx_def**, !dbg !9561
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx875, align 8, !dbg !9561
  %394 = load i32, i32* %mode.addr, align 4, !dbg !9562
  %call876 = call i64 @nonzero_bits(%struct.rtx_def* %393, i32 %394), !dbg !9563
  %395 = load i32, i32* %bitwidth, align 4, !dbg !9564
  %sub877 = sub i32 %395, 1, !dbg !9565
  %sh_prom878 = zext i32 %sub877 to i64, !dbg !9566
  %shl879 = shl i64 1, %sh_prom878, !dbg !9566
  %and880 = and i64 %call876, %shl879, !dbg !9567
  %cmp881 = icmp ne i64 %and880, 0, !dbg !9568
  br i1 %cmp881, label %if.then883, label %if.end885, !dbg !9569

if.then883:                                       ; preds = %lor.lhs.false871, %land.lhs.true868
  %396 = load i32, i32* %result, align 4, !dbg !9570
  %dec884 = add nsw i32 %396, -1, !dbg !9570
  store i32 %dec884, i32* %result, align 4, !dbg !9570
  br label %if.end885, !dbg !9571

if.end885:                                        ; preds = %if.then883, %lor.lhs.false871, %sw.bb860
  %397 = load i32, i32* %result, align 4, !dbg !9572
  store i32 %397, i32* %retval, align 4, !dbg !9573
  br label %return, !dbg !9573

sw.bb886:                                         ; preds = %if.end220
  %398 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9574
  %u887 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %398, i32 0, i32 1, !dbg !9574
  %fld888 = bitcast %union.u* %u887 to [1 x %union.rtunion_def]*, !dbg !9574
  %arrayidx889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld888, i64 0, i64 1, !dbg !9574
  %rt_rtx890 = bitcast %union.rtunion_def* %arrayidx889 to %struct.rtx_def**, !dbg !9574
  %399 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx890, align 8, !dbg !9574
  %400 = load i32, i32* %mode.addr, align 4, !dbg !9575
  %401 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9576
  %402 = load i32, i32* %known_mode.addr, align 4, !dbg !9577
  %403 = load i32, i32* %known_ret.addr, align 4, !dbg !9578
  %call891 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %399, i32 %400, %struct.rtx_def* %401, i32 %402, i32 %403), !dbg !9579
  store i32 %call891, i32* %result, align 4, !dbg !9580
  %404 = load i32, i32* %result, align 4, !dbg !9581
  %cmp892 = icmp sgt i32 %404, 1, !dbg !9583
  br i1 %cmp892, label %land.lhs.true894, label %if.end911, !dbg !9584

land.lhs.true894:                                 ; preds = %sw.bb886
  %405 = load i32, i32* %bitwidth, align 4, !dbg !9585
  %cmp895 = icmp ugt i32 %405, 64, !dbg !9586
  br i1 %cmp895, label %if.then909, label %lor.lhs.false897, !dbg !9587

lor.lhs.false897:                                 ; preds = %land.lhs.true894
  %406 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9588
  %u898 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %406, i32 0, i32 1, !dbg !9588
  %fld899 = bitcast %union.u* %u898 to [1 x %union.rtunion_def]*, !dbg !9588
  %arrayidx900 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld899, i64 0, i64 1, !dbg !9588
  %rt_rtx901 = bitcast %union.rtunion_def* %arrayidx900 to %struct.rtx_def**, !dbg !9588
  %407 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx901, align 8, !dbg !9588
  %408 = load i32, i32* %mode.addr, align 4, !dbg !9589
  %call902 = call i64 @nonzero_bits(%struct.rtx_def* %407, i32 %408), !dbg !9590
  %409 = load i32, i32* %bitwidth, align 4, !dbg !9591
  %sub903 = sub i32 %409, 1, !dbg !9592
  %sh_prom904 = zext i32 %sub903 to i64, !dbg !9593
  %shl905 = shl i64 1, %sh_prom904, !dbg !9593
  %and906 = and i64 %call902, %shl905, !dbg !9594
  %cmp907 = icmp ne i64 %and906, 0, !dbg !9595
  br i1 %cmp907, label %if.then909, label %if.end911, !dbg !9596

if.then909:                                       ; preds = %lor.lhs.false897, %land.lhs.true894
  %410 = load i32, i32* %result, align 4, !dbg !9597
  %dec910 = add nsw i32 %410, -1, !dbg !9597
  store i32 %dec910, i32* %result, align 4, !dbg !9597
  br label %if.end911, !dbg !9598

if.end911:                                        ; preds = %if.then909, %lor.lhs.false897, %sw.bb886
  %411 = load i32, i32* %result, align 4, !dbg !9599
  store i32 %411, i32* %retval, align 4, !dbg !9600
  br label %return, !dbg !9600

sw.bb912:                                         ; preds = %if.end220
  %412 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9601
  %u913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %412, i32 0, i32 1, !dbg !9601
  %fld914 = bitcast %union.u* %u913 to [1 x %union.rtunion_def]*, !dbg !9601
  %arrayidx915 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld914, i64 0, i64 0, !dbg !9601
  %rt_rtx916 = bitcast %union.rtunion_def* %arrayidx915 to %struct.rtx_def**, !dbg !9601
  %413 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx916, align 8, !dbg !9601
  %414 = load i32, i32* %mode.addr, align 4, !dbg !9602
  %415 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9603
  %416 = load i32, i32* %known_mode.addr, align 4, !dbg !9604
  %417 = load i32, i32* %known_ret.addr, align 4, !dbg !9605
  %call917 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %413, i32 %414, %struct.rtx_def* %415, i32 %416, i32 %417), !dbg !9606
  store i32 %call917, i32* %num0, align 4, !dbg !9607
  %418 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9608
  %u918 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %418, i32 0, i32 1, !dbg !9608
  %fld919 = bitcast %union.u* %u918 to [1 x %union.rtunion_def]*, !dbg !9608
  %arrayidx920 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld919, i64 0, i64 1, !dbg !9608
  %rt_rtx921 = bitcast %union.rtunion_def* %arrayidx920 to %struct.rtx_def**, !dbg !9608
  %419 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx921, align 8, !dbg !9608
  %420 = bitcast %struct.rtx_def* %419 to i32*, !dbg !9608
  %bf.load922 = load i32, i32* %420, align 8, !dbg !9608
  %bf.clear923 = and i32 %bf.load922, 65535, !dbg !9608
  %cmp924 = icmp eq i32 %bf.clear923, 30, !dbg !9608
  br i1 %cmp924, label %land.lhs.true926, label %if.end984, !dbg !9610

land.lhs.true926:                                 ; preds = %sw.bb912
  %421 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9611
  %u927 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1, !dbg !9611
  %fld928 = bitcast %union.u* %u927 to [1 x %union.rtunion_def]*, !dbg !9611
  %arrayidx929 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld928, i64 0, i64 1, !dbg !9611
  %rt_rtx930 = bitcast %union.rtunion_def* %arrayidx929 to %struct.rtx_def**, !dbg !9611
  %422 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx930, align 8, !dbg !9611
  %u931 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1, !dbg !9611
  %hwint932 = bitcast %union.u* %u931 to [1 x i64]*, !dbg !9611
  %arrayidx933 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint932, i64 0, i64 0, !dbg !9611
  %423 = load i64, i64* %arrayidx933, align 8, !dbg !9611
  %cmp934 = icmp sgt i64 %423, 0, !dbg !9612
  br i1 %cmp934, label %land.lhs.true936, label %if.end984, !dbg !9613

land.lhs.true936:                                 ; preds = %land.lhs.true926
  %424 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9614
  %u937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %424, i32 0, i32 1, !dbg !9614
  %fld938 = bitcast %union.u* %u937 to [1 x %union.rtunion_def]*, !dbg !9614
  %arrayidx939 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld938, i64 0, i64 1, !dbg !9614
  %rt_rtx940 = bitcast %union.rtunion_def* %arrayidx939 to %struct.rtx_def**, !dbg !9614
  %425 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx940, align 8, !dbg !9614
  %u941 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1, !dbg !9614
  %hwint942 = bitcast %union.u* %u941 to [1 x i64]*, !dbg !9614
  %arrayidx943 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint942, i64 0, i64 0, !dbg !9614
  %426 = load i64, i64* %arrayidx943, align 8, !dbg !9614
  %427 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9615
  %428 = bitcast %struct.rtx_def* %427 to i32*, !dbg !9615
  %bf.load944 = load i32, i32* %428, align 8, !dbg !9615
  %bf.lshr945 = lshr i32 %bf.load944, 16, !dbg !9615
  %bf.clear946 = and i32 %bf.lshr945, 255, !dbg !9615
  %idxprom947 = zext i32 %bf.clear946 to i64, !dbg !9615
  %arrayidx948 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom947, !dbg !9615
  %429 = load i8, i8* %arrayidx948, align 1, !dbg !9615
  %conv949 = zext i8 %429 to i16, !dbg !9615
  %conv950 = zext i16 %conv949 to i32, !dbg !9615
  %mul951 = mul nsw i32 %conv950, 8, !dbg !9615
  %conv952 = trunc i32 %mul951 to i16, !dbg !9615
  %conv953 = zext i16 %conv952 to i64, !dbg !9615
  %cmp954 = icmp slt i64 %426, %conv953, !dbg !9616
  br i1 %cmp954, label %if.then956, label %if.end984, !dbg !9617

if.then956:                                       ; preds = %land.lhs.true936
  %430 = load i32, i32* %bitwidth, align 4, !dbg !9618
  %conv957 = sext i32 %430 to i64, !dbg !9618
  %431 = load i32, i32* %num0, align 4, !dbg !9618
  %conv958 = sext i32 %431 to i64, !dbg !9618
  %432 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9618
  %u959 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1, !dbg !9618
  %fld960 = bitcast %union.u* %u959 to [1 x %union.rtunion_def]*, !dbg !9618
  %arrayidx961 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld960, i64 0, i64 1, !dbg !9618
  %rt_rtx962 = bitcast %union.rtunion_def* %arrayidx961 to %struct.rtx_def**, !dbg !9618
  %433 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx962, align 8, !dbg !9618
  %u963 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %433, i32 0, i32 1, !dbg !9618
  %hwint964 = bitcast %union.u* %u963 to [1 x i64]*, !dbg !9618
  %arrayidx965 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint964, i64 0, i64 0, !dbg !9618
  %434 = load i64, i64* %arrayidx965, align 8, !dbg !9618
  %add966 = add nsw i64 %conv958, %434, !dbg !9618
  %cmp967 = icmp slt i64 %conv957, %add966, !dbg !9618
  br i1 %cmp967, label %cond.true969, label %cond.false971, !dbg !9618

cond.true969:                                     ; preds = %if.then956
  %435 = load i32, i32* %bitwidth, align 4, !dbg !9618
  %conv970 = sext i32 %435 to i64, !dbg !9618
  br label %cond.end981, !dbg !9618

cond.false971:                                    ; preds = %if.then956
  %436 = load i32, i32* %num0, align 4, !dbg !9618
  %conv972 = sext i32 %436 to i64, !dbg !9618
  %437 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9618
  %u973 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1, !dbg !9618
  %fld974 = bitcast %union.u* %u973 to [1 x %union.rtunion_def]*, !dbg !9618
  %arrayidx975 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld974, i64 0, i64 1, !dbg !9618
  %rt_rtx976 = bitcast %union.rtunion_def* %arrayidx975 to %struct.rtx_def**, !dbg !9618
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx976, align 8, !dbg !9618
  %u977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %438, i32 0, i32 1, !dbg !9618
  %hwint978 = bitcast %union.u* %u977 to [1 x i64]*, !dbg !9618
  %arrayidx979 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint978, i64 0, i64 0, !dbg !9618
  %439 = load i64, i64* %arrayidx979, align 8, !dbg !9618
  %add980 = add nsw i64 %conv972, %439, !dbg !9618
  br label %cond.end981, !dbg !9618

cond.end981:                                      ; preds = %cond.false971, %cond.true969
  %cond982 = phi i64 [ %conv970, %cond.true969 ], [ %add980, %cond.false971 ], !dbg !9618
  %conv983 = trunc i64 %cond982 to i32, !dbg !9618
  store i32 %conv983, i32* %num0, align 4, !dbg !9619
  br label %if.end984, !dbg !9620

if.end984:                                        ; preds = %cond.end981, %land.lhs.true936, %land.lhs.true926, %sw.bb912
  %440 = load i32, i32* %num0, align 4, !dbg !9621
  store i32 %440, i32* %retval, align 4, !dbg !9622
  br label %return, !dbg !9622

sw.bb985:                                         ; preds = %if.end220
  %441 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9623
  %u986 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %441, i32 0, i32 1, !dbg !9623
  %fld987 = bitcast %union.u* %u986 to [1 x %union.rtunion_def]*, !dbg !9623
  %arrayidx988 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld987, i64 0, i64 1, !dbg !9623
  %rt_rtx989 = bitcast %union.rtunion_def* %arrayidx988 to %struct.rtx_def**, !dbg !9623
  %442 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx989, align 8, !dbg !9623
  %443 = bitcast %struct.rtx_def* %442 to i32*, !dbg !9623
  %bf.load990 = load i32, i32* %443, align 8, !dbg !9623
  %bf.clear991 = and i32 %bf.load990, 65535, !dbg !9623
  %cmp992 = icmp eq i32 %bf.clear991, 30, !dbg !9623
  br i1 %cmp992, label %lor.lhs.false994, label %if.then1035, !dbg !9625

lor.lhs.false994:                                 ; preds = %sw.bb985
  %444 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9626
  %u995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1, !dbg !9626
  %fld996 = bitcast %union.u* %u995 to [1 x %union.rtunion_def]*, !dbg !9626
  %arrayidx997 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld996, i64 0, i64 1, !dbg !9626
  %rt_rtx998 = bitcast %union.rtunion_def* %arrayidx997 to %struct.rtx_def**, !dbg !9626
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx998, align 8, !dbg !9626
  %u999 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %445, i32 0, i32 1, !dbg !9626
  %hwint1000 = bitcast %union.u* %u999 to [1 x i64]*, !dbg !9626
  %arrayidx1001 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1000, i64 0, i64 0, !dbg !9626
  %446 = load i64, i64* %arrayidx1001, align 8, !dbg !9626
  %cmp1002 = icmp slt i64 %446, 0, !dbg !9627
  br i1 %cmp1002, label %if.then1035, label %lor.lhs.false1004, !dbg !9628

lor.lhs.false1004:                                ; preds = %lor.lhs.false994
  %447 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9629
  %u1005 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1, !dbg !9629
  %fld1006 = bitcast %union.u* %u1005 to [1 x %union.rtunion_def]*, !dbg !9629
  %arrayidx1007 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1006, i64 0, i64 1, !dbg !9629
  %rt_rtx1008 = bitcast %union.rtunion_def* %arrayidx1007 to %struct.rtx_def**, !dbg !9629
  %448 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1008, align 8, !dbg !9629
  %u1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1, !dbg !9629
  %hwint1010 = bitcast %union.u* %u1009 to [1 x i64]*, !dbg !9629
  %arrayidx1011 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1010, i64 0, i64 0, !dbg !9629
  %449 = load i64, i64* %arrayidx1011, align 8, !dbg !9629
  %450 = load i32, i32* %bitwidth, align 4, !dbg !9630
  %conv1012 = sext i32 %450 to i64, !dbg !9631
  %cmp1013 = icmp sge i64 %449, %conv1012, !dbg !9632
  br i1 %cmp1013, label %if.then1035, label %lor.lhs.false1015, !dbg !9633

lor.lhs.false1015:                                ; preds = %lor.lhs.false1004
  %451 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9634
  %u1016 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %451, i32 0, i32 1, !dbg !9634
  %fld1017 = bitcast %union.u* %u1016 to [1 x %union.rtunion_def]*, !dbg !9634
  %arrayidx1018 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1017, i64 0, i64 1, !dbg !9634
  %rt_rtx1019 = bitcast %union.rtunion_def* %arrayidx1018 to %struct.rtx_def**, !dbg !9634
  %452 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1019, align 8, !dbg !9634
  %u1020 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %452, i32 0, i32 1, !dbg !9634
  %hwint1021 = bitcast %union.u* %u1020 to [1 x i64]*, !dbg !9634
  %arrayidx1022 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1021, i64 0, i64 0, !dbg !9634
  %453 = load i64, i64* %arrayidx1022, align 8, !dbg !9634
  %454 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9635
  %455 = bitcast %struct.rtx_def* %454 to i32*, !dbg !9635
  %bf.load1023 = load i32, i32* %455, align 8, !dbg !9635
  %bf.lshr1024 = lshr i32 %bf.load1023, 16, !dbg !9635
  %bf.clear1025 = and i32 %bf.lshr1024, 255, !dbg !9635
  %idxprom1026 = zext i32 %bf.clear1025 to i64, !dbg !9635
  %arrayidx1027 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1026, !dbg !9635
  %456 = load i8, i8* %arrayidx1027, align 1, !dbg !9635
  %conv1028 = zext i8 %456 to i16, !dbg !9635
  %conv1029 = zext i16 %conv1028 to i32, !dbg !9635
  %mul1030 = mul nsw i32 %conv1029, 8, !dbg !9635
  %conv1031 = trunc i32 %mul1030 to i16, !dbg !9635
  %conv1032 = zext i16 %conv1031 to i64, !dbg !9635
  %cmp1033 = icmp sge i64 %453, %conv1032, !dbg !9636
  br i1 %cmp1033, label %if.then1035, label %if.end1036, !dbg !9637

if.then1035:                                      ; preds = %lor.lhs.false1015, %lor.lhs.false1004, %lor.lhs.false994, %sw.bb985
  store i32 1, i32* %retval, align 4, !dbg !9638
  br label %return, !dbg !9638

if.end1036:                                       ; preds = %lor.lhs.false1015
  %457 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9639
  %u1037 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %457, i32 0, i32 1, !dbg !9639
  %fld1038 = bitcast %union.u* %u1037 to [1 x %union.rtunion_def]*, !dbg !9639
  %arrayidx1039 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1038, i64 0, i64 0, !dbg !9639
  %rt_rtx1040 = bitcast %union.rtunion_def* %arrayidx1039 to %struct.rtx_def**, !dbg !9639
  %458 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1040, align 8, !dbg !9639
  %459 = load i32, i32* %mode.addr, align 4, !dbg !9640
  %460 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9641
  %461 = load i32, i32* %known_mode.addr, align 4, !dbg !9642
  %462 = load i32, i32* %known_ret.addr, align 4, !dbg !9643
  %call1041 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %458, i32 %459, %struct.rtx_def* %460, i32 %461, i32 %462), !dbg !9644
  store i32 %call1041, i32* %num0, align 4, !dbg !9645
  %463 = load i32, i32* %num0, align 4, !dbg !9646
  %conv1042 = sext i32 %463 to i64, !dbg !9646
  %464 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9646
  %u1043 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %464, i32 0, i32 1, !dbg !9646
  %fld1044 = bitcast %union.u* %u1043 to [1 x %union.rtunion_def]*, !dbg !9646
  %arrayidx1045 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1044, i64 0, i64 1, !dbg !9646
  %rt_rtx1046 = bitcast %union.rtunion_def* %arrayidx1045 to %struct.rtx_def**, !dbg !9646
  %465 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1046, align 8, !dbg !9646
  %u1047 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %465, i32 0, i32 1, !dbg !9646
  %hwint1048 = bitcast %union.u* %u1047 to [1 x i64]*, !dbg !9646
  %arrayidx1049 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1048, i64 0, i64 0, !dbg !9646
  %466 = load i64, i64* %arrayidx1049, align 8, !dbg !9646
  %sub1050 = sub nsw i64 %conv1042, %466, !dbg !9646
  %cmp1051 = icmp sgt i64 1, %sub1050, !dbg !9646
  br i1 %cmp1051, label %cond.true1053, label %cond.false1054, !dbg !9646

cond.true1053:                                    ; preds = %if.end1036
  br label %cond.end1064, !dbg !9646

cond.false1054:                                   ; preds = %if.end1036
  %467 = load i32, i32* %num0, align 4, !dbg !9646
  %conv1055 = sext i32 %467 to i64, !dbg !9646
  %468 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9646
  %u1056 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %468, i32 0, i32 1, !dbg !9646
  %fld1057 = bitcast %union.u* %u1056 to [1 x %union.rtunion_def]*, !dbg !9646
  %arrayidx1058 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1057, i64 0, i64 1, !dbg !9646
  %rt_rtx1059 = bitcast %union.rtunion_def* %arrayidx1058 to %struct.rtx_def**, !dbg !9646
  %469 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1059, align 8, !dbg !9646
  %u1060 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1, !dbg !9646
  %hwint1061 = bitcast %union.u* %u1060 to [1 x i64]*, !dbg !9646
  %arrayidx1062 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1061, i64 0, i64 0, !dbg !9646
  %470 = load i64, i64* %arrayidx1062, align 8, !dbg !9646
  %sub1063 = sub nsw i64 %conv1055, %470, !dbg !9646
  br label %cond.end1064, !dbg !9646

cond.end1064:                                     ; preds = %cond.false1054, %cond.true1053
  %cond1065 = phi i64 [ 1, %cond.true1053 ], [ %sub1063, %cond.false1054 ], !dbg !9646
  %conv1066 = trunc i64 %cond1065 to i32, !dbg !9646
  store i32 %conv1066, i32* %retval, align 4, !dbg !9647
  br label %return, !dbg !9647

sw.bb1067:                                        ; preds = %if.end220
  %471 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9648
  %u1068 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1, !dbg !9648
  %fld1069 = bitcast %union.u* %u1068 to [1 x %union.rtunion_def]*, !dbg !9648
  %arrayidx1070 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1069, i64 0, i64 1, !dbg !9648
  %rt_rtx1071 = bitcast %union.rtunion_def* %arrayidx1070 to %struct.rtx_def**, !dbg !9648
  %472 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1071, align 8, !dbg !9648
  %473 = load i32, i32* %mode.addr, align 4, !dbg !9649
  %474 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9650
  %475 = load i32, i32* %known_mode.addr, align 4, !dbg !9651
  %476 = load i32, i32* %known_ret.addr, align 4, !dbg !9652
  %call1072 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %472, i32 %473, %struct.rtx_def* %474, i32 %475, i32 %476), !dbg !9653
  store i32 %call1072, i32* %num0, align 4, !dbg !9654
  %477 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9655
  %u1073 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %477, i32 0, i32 1, !dbg !9655
  %fld1074 = bitcast %union.u* %u1073 to [1 x %union.rtunion_def]*, !dbg !9655
  %arrayidx1075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1074, i64 0, i64 2, !dbg !9655
  %rt_rtx1076 = bitcast %union.rtunion_def* %arrayidx1075 to %struct.rtx_def**, !dbg !9655
  %478 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1076, align 8, !dbg !9655
  %479 = load i32, i32* %mode.addr, align 4, !dbg !9656
  %480 = load %struct.rtx_def*, %struct.rtx_def** %known_x.addr, align 8, !dbg !9657
  %481 = load i32, i32* %known_mode.addr, align 4, !dbg !9658
  %482 = load i32, i32* %known_ret.addr, align 4, !dbg !9659
  %call1077 = call i32 @cached_num_sign_bit_copies(%struct.rtx_def* %478, i32 %479, %struct.rtx_def* %480, i32 %481, i32 %482), !dbg !9660
  store i32 %call1077, i32* %num1, align 4, !dbg !9661
  %483 = load i32, i32* %num0, align 4, !dbg !9662
  %484 = load i32, i32* %num1, align 4, !dbg !9662
  %cmp1078 = icmp slt i32 %483, %484, !dbg !9662
  br i1 %cmp1078, label %cond.true1080, label %cond.false1081, !dbg !9662

cond.true1080:                                    ; preds = %sw.bb1067
  %485 = load i32, i32* %num0, align 4, !dbg !9662
  br label %cond.end1082, !dbg !9662

cond.false1081:                                   ; preds = %sw.bb1067
  %486 = load i32, i32* %num1, align 4, !dbg !9662
  br label %cond.end1082, !dbg !9662

cond.end1082:                                     ; preds = %cond.false1081, %cond.true1080
  %cond1083 = phi i32 [ %485, %cond.true1080 ], [ %486, %cond.false1081 ], !dbg !9662
  store i32 %cond1083, i32* %retval, align 4, !dbg !9663
  br label %return, !dbg !9663

sw.bb1084:                                        ; preds = %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220
  store i64 1, i64* %nonzero, align 8, !dbg !9664
  %487 = load i32, i32* %bitwidth, align 4, !dbg !9665
  %cmp1085 = icmp ule i32 %487, 64, !dbg !9667
  br i1 %cmp1085, label %land.lhs.true1087, label %if.end1099, !dbg !9668

land.lhs.true1087:                                ; preds = %sw.bb1084
  %488 = load i64, i64* %nonzero, align 8, !dbg !9669
  %489 = load i32, i32* %bitwidth, align 4, !dbg !9670
  %sub1088 = sub i32 %489, 1, !dbg !9671
  %sh_prom1089 = zext i32 %sub1088 to i64, !dbg !9672
  %shl1090 = shl i64 1, %sh_prom1089, !dbg !9672
  %and1091 = and i64 %488, %shl1090, !dbg !9673
  %cmp1092 = icmp ne i64 %and1091, 0, !dbg !9674
  br i1 %cmp1092, label %if.then1094, label %if.end1099, !dbg !9675

if.then1094:                                      ; preds = %land.lhs.true1087
  %490 = load i64, i64* %nonzero, align 8, !dbg !9676
  %neg1095 = xor i64 %490, -1, !dbg !9677
  %491 = load i32, i32* %mode.addr, align 4, !dbg !9678
  %idxprom1096 = zext i32 %491 to i64, !dbg !9678
  %arrayidx1097 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom1096, !dbg !9678
  %492 = load i64, i64* %arrayidx1097, align 8, !dbg !9678
  %and1098 = and i64 %neg1095, %492, !dbg !9679
  store i64 %and1098, i64* %nonzero, align 8, !dbg !9680
  br label %if.end1099, !dbg !9681

if.end1099:                                       ; preds = %if.then1094, %land.lhs.true1087, %sw.bb1084
  %493 = load i64, i64* %nonzero, align 8, !dbg !9682
  %cmp1100 = icmp eq i64 %493, 0, !dbg !9683
  br i1 %cmp1100, label %cond.true1102, label %cond.false1103, !dbg !9682

cond.true1102:                                    ; preds = %if.end1099
  %494 = load i32, i32* %bitwidth, align 4, !dbg !9684
  br label %cond.end1107, !dbg !9682

cond.false1103:                                   ; preds = %if.end1099
  %495 = load i32, i32* %bitwidth, align 4, !dbg !9685
  %496 = load i64, i64* %nonzero, align 8, !dbg !9686
  %call1104 = call i32 @floor_log2(i64 %496), !dbg !9687
  %sub1105 = sub i32 %495, %call1104, !dbg !9688
  %sub1106 = sub i32 %sub1105, 1, !dbg !9689
  br label %cond.end1107, !dbg !9682

cond.end1107:                                     ; preds = %cond.false1103, %cond.true1102
  %cond1108 = phi i32 [ %494, %cond.true1102 ], [ %sub1106, %cond.false1103 ], !dbg !9682
  store i32 %cond1108, i32* %retval, align 4, !dbg !9690
  br label %return, !dbg !9690

sw.default:                                       ; preds = %if.end220
  br label %sw.epilog, !dbg !9691

sw.epilog:                                        ; preds = %sw.default, %if.end574, %if.end410, %if.end374, %sw.bb238, %if.end237
  %497 = load i32, i32* %mode.addr, align 4, !dbg !9692
  %idxprom1109 = zext i32 %497 to i64, !dbg !9692
  %arrayidx1110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1109, !dbg !9692
  %498 = load i8, i8* %arrayidx1110, align 1, !dbg !9692
  %conv1111 = zext i8 %498 to i16, !dbg !9692
  %conv1112 = zext i16 %conv1111 to i32, !dbg !9692
  %mul1113 = mul nsw i32 %conv1112, 8, !dbg !9692
  %conv1114 = trunc i32 %mul1113 to i16, !dbg !9692
  %conv1115 = zext i16 %conv1114 to i32, !dbg !9692
  store i32 %conv1115, i32* %bitwidth, align 4, !dbg !9693
  %499 = load i32, i32* %bitwidth, align 4, !dbg !9694
  %cmp1116 = icmp ugt i32 %499, 64, !dbg !9696
  br i1 %cmp1116, label %if.then1118, label %if.end1119, !dbg !9697

if.then1118:                                      ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !9698
  br label %return, !dbg !9698

if.end1119:                                       ; preds = %sw.epilog
  %500 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9699
  %501 = load i32, i32* %mode.addr, align 4, !dbg !9700
  %call1120 = call i64 @nonzero_bits(%struct.rtx_def* %500, i32 %501), !dbg !9701
  store i64 %call1120, i64* %nonzero, align 8, !dbg !9702
  %502 = load i64, i64* %nonzero, align 8, !dbg !9703
  %503 = load i32, i32* %bitwidth, align 4, !dbg !9704
  %sub1121 = sub i32 %503, 1, !dbg !9705
  %sh_prom1122 = zext i32 %sub1121 to i64, !dbg !9706
  %shl1123 = shl i64 1, %sh_prom1122, !dbg !9706
  %and1124 = and i64 %502, %shl1123, !dbg !9707
  %tobool1125 = icmp ne i64 %and1124, 0, !dbg !9707
  br i1 %tobool1125, label %cond.true1126, label %cond.false1127, !dbg !9703

cond.true1126:                                    ; preds = %if.end1119
  br label %cond.end1131, !dbg !9703

cond.false1127:                                   ; preds = %if.end1119
  %504 = load i32, i32* %bitwidth, align 4, !dbg !9708
  %505 = load i64, i64* %nonzero, align 8, !dbg !9709
  %call1128 = call i32 @floor_log2(i64 %505), !dbg !9710
  %sub1129 = sub i32 %504, %call1128, !dbg !9711
  %sub1130 = sub i32 %sub1129, 1, !dbg !9712
  br label %cond.end1131, !dbg !9703

cond.end1131:                                     ; preds = %cond.false1127, %cond.true1126
  %cond1132 = phi i32 [ 1, %cond.true1126 ], [ %sub1130, %cond.false1127 ], !dbg !9703
  store i32 %cond1132, i32* %retval, align 4, !dbg !9713
  br label %return, !dbg !9713

return:                                           ; preds = %cond.end1131, %if.then1118, %cond.end1107, %cond.end1082, %cond.end1064, %if.then1035, %if.end984, %if.end911, %if.end885, %if.else854, %if.then853, %if.then840, %if.else831, %if.then830, %if.then818, %cond.end813, %cond.end760, %cond.end728, %cond.end690, %if.then684, %if.then652, %if.end610, %if.then599, %cond.end589, %cond.end571, %sw.bb477, %cond.end475, %sw.bb411, %cond.end407, %cond.end372, %cond.end311, %cond.end262, %cond.end235, %if.then219, %cond.end, %if.then158
  %506 = load i32, i32* %retval, align 4, !dbg !9714
  ret i32 %506, !dbg !9714
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1731, !1732, !1733}
!llvm.ident = !{!1734}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "non_rtx_starting_operands", scope: !2, file: !3, line: 64, type: !1728, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !618, globals: !1720, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "rtlanal.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !534, !549, !583, !605}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !378, line: 1994, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533}
!522 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!526 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!527 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!528 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!529 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!530 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!532 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!533 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !378, line: 60, baseType: !7, size: 32, elements: !535)
!535 = !{!536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548}
!536 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!537 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!538 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!539 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!540 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!541 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!542 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!543 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!544 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!545 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!546 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!547 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!548 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582}
!551 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!552 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!553 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!554 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!555 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!556 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!557 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!558 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!559 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!560 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!561 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!562 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!563 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!564 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!565 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!566 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!567 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!568 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!569 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!570 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!571 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!572 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!573 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!574 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!575 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!576 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!577 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!578 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!579 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!580 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!581 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!582 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !584, line: 36, baseType: !7, size: 32, elements: !585)
!584 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604}
!586 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!587 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!588 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!589 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!590 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!591 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!592 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!593 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!594 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!595 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!596 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!597 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!598 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!599 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!600 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!601 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!602 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!603 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!604 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !151, line: 58, baseType: !7, size: 32, elements: !606)
!606 = !{!607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617}
!607 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!608 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!609 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!610 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!611 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!612 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!613 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!614 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!615 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!616 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!617 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!618 = !{!377, !619, !5, !620, !621, !622, !1697, !549, !583, !1698, !732, !1705, !624, !1707, !711, !183, !1709, !1715}
!619 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!620 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!621 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !623, line: 50, baseType: !624)
!623 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !626)
!626 = !{!627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !625, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !625, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !625, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !625, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !625, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !625, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !625, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !625, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !625, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !625, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !625, file: !378, line: 321, baseType: !638, size: 320, offset: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !639)
!639 = !{!640, !1632, !1634, !1695, !1696}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !638, file: !378, line: 316, baseType: !641, size: 64)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 64, elements: !660)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !643)
!643 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !644)
!644 = !{!645, !646, !647, !651, !652, !662, !663, !675, !678, !741, !1610, !1611, !1622, !1629}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !643, file: !378, line: 168, baseType: !619, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !643, file: !378, line: 169, baseType: !7, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !643, file: !378, line: 170, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!650 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !643, file: !378, line: 171, baseType: !622, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !643, file: !378, line: 172, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !623, line: 53, baseType: !654)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !656)
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !655, file: !378, line: 360, baseType: !619, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !655, file: !378, line: 361, baseType: !659, size: 64, offset: 64)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 64, elements: !660)
!660 = !{!661}
!661 = !DISubrange(count: 1)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !643, file: !378, line: 173, baseType: !5, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !643, file: !378, line: 174, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672, !673, !674}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !665, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !665, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !665, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !665, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !665, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !665, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !665, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !665, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !643, file: !378, line: 175, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !643, file: !378, line: 176, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !681, line: 75, size: 256, elements: !682)
!681 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!682 = !{!683, !697, !698, !699}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !680, file: !681, line: 76, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !681, line: 68, baseType: !686)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !681, line: 63, size: 320, elements: !687)
!687 = !{!688, !690, !691, !692}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !686, file: !681, line: 64, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !686, file: !681, line: 65, baseType: !689, size: 64, offset: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !686, file: !681, line: 66, baseType: !7, size: 32, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !686, file: !681, line: 67, baseType: !693, size: 128, offset: 192)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 128, elements: !695)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !681, line: 29, baseType: !621)
!695 = !{!696}
!696 = !DISubrange(count: 2)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !680, file: !681, line: 77, baseType: !684, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !680, file: !681, line: 78, baseType: !7, size: 32, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !680, file: !681, line: 79, baseType: !700, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !681, line: 49, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !681, line: 45, size: 832, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !702, file: !681, line: 46, baseType: !689, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !702, file: !681, line: 47, baseType: !679, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !702, file: !681, line: 48, baseType: !707, size: 704, offset: 128)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !708, line: 164, size: 704, elements: !709)
!708 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!709 = !{!710, !712, !723, !724, !725, !726, !727, !728, !733, !737, !738, !739, !740}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !707, file: !708, line: 166, baseType: !711, size: 64)
!711 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !707, file: !708, line: 167, baseType: !713, size: 64, offset: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !708, line: 157, size: 192, elements: !715)
!715 = !{!716, !718, !719}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !714, file: !708, line: 159, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !714, file: !708, line: 160, baseType: !713, size: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !714, file: !708, line: 161, baseType: !720, size: 32, offset: 128)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 32, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 4)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !707, file: !708, line: 168, baseType: !717, size: 64, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !707, file: !708, line: 169, baseType: !717, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !707, file: !708, line: 170, baseType: !717, size: 64, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !707, file: !708, line: 171, baseType: !711, size: 64, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !707, file: !708, line: 172, baseType: !619, size: 32, offset: 384)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !707, file: !708, line: 176, baseType: !729, size: 64, offset: 448)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!713, !732, !711}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !707, file: !708, line: 177, baseType: !734, size: 64, offset: 512)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !732, !713}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !707, file: !708, line: 178, baseType: !732, size: 64, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !707, file: !708, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !707, file: !708, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !707, file: !708, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !643, file: !378, line: 177, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !623, line: 56, baseType: !743)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !745)
!745 = !{!746, !779, !785, !796, !815, !826, !831, !838, !844, !858, !870, !908, !913, !941, !949, !950, !955, !964, !970, !975, !979, !983, !1234, !1283, !1289, !1296, !1303, !1329, !1354, !1371, !1383, !1405, !1420, !1592}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !744, file: !151, line: 3372, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !747, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !747, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !747, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !747, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !747, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !747, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !747, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !747, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !747, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !747, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !747, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !747, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !747, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !747, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !747, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !747, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !747, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !747, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !747, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !747, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !747, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !747, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !747, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !747, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !747, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !747, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !747, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !747, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !747, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !747, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !744, file: !151, line: 3373, baseType: !780, size: 192)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !781)
!781 = !{!782, !783, !784}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !780, file: !151, line: 403, baseType: !747, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !780, file: !151, line: 404, baseType: !742, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !780, file: !151, line: 405, baseType: !742, size: 64, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !744, file: !151, line: 3374, baseType: !786, size: 320)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !786, file: !151, line: 1385, baseType: !780, size: 192)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !786, file: !151, line: 1386, baseType: !790, size: 128, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !791, line: 58, baseType: !792)
!791 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !791, line: 54, size: 128, elements: !793)
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !792, file: !791, line: 56, baseType: !621, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !792, file: !791, line: 57, baseType: !711, size: 64, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !744, file: !151, line: 3375, baseType: !797, size: 256)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !798)
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !797, file: !151, line: 1398, baseType: !780, size: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !797, file: !151, line: 1399, baseType: !801, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !803, line: 52, size: 256, elements: !804)
!803 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!804 = !{!805, !806, !807, !808, !809, !810, !811}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !802, file: !803, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !802, file: !803, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !802, file: !803, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !802, file: !803, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !802, file: !803, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !802, file: !803, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !802, file: !803, line: 62, baseType: !812, size: 192, offset: 64)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 192, elements: !813)
!813 = !{!814}
!814 = !DISubrange(count: 3)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !744, file: !151, line: 3376, baseType: !816, size: 256)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !817)
!817 = !{!818, !819}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !816, file: !151, line: 1409, baseType: !780, size: 192)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !816, file: !151, line: 1410, baseType: !820, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !822, line: 27, size: 192, elements: !823)
!822 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !821, file: !822, line: 29, baseType: !790, size: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !821, file: !822, line: 30, baseType: !5, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !744, file: !151, line: 3377, baseType: !827, size: 256)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !828)
!828 = !{!829, !830}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !827, file: !151, line: 1438, baseType: !780, size: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !827, file: !151, line: 1439, baseType: !742, size: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !744, file: !151, line: 3378, baseType: !832, size: 256)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !833)
!833 = !{!834, !835, !836}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !832, file: !151, line: 1419, baseType: !780, size: 192)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !832, file: !151, line: 1420, baseType: !619, size: 32, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !832, file: !151, line: 1421, baseType: !837, size: 8, offset: 224)
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 8, elements: !660)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !744, file: !151, line: 3379, baseType: !839, size: 320)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !840)
!840 = !{!841, !842, !843}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !839, file: !151, line: 1429, baseType: !780, size: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !839, file: !151, line: 1430, baseType: !742, size: 64, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !839, file: !151, line: 1431, baseType: !742, size: 64, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !744, file: !151, line: 3380, baseType: !845, size: 320)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !845, file: !151, line: 1461, baseType: !780, size: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !845, file: !151, line: 1462, baseType: !849, size: 128, offset: 192)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !850, line: 31, size: 128, elements: !851)
!850 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!851 = !{!852, !856, !857}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !849, file: !850, line: 32, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !849, file: !850, line: 33, baseType: !7, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !849, file: !850, line: 34, baseType: !7, size: 32, offset: 96)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !744, file: !151, line: 3381, baseType: !859, size: 384)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !860)
!860 = !{!861, !862, !867, !868, !869}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !859, file: !151, line: 2508, baseType: !780, size: 192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !859, file: !151, line: 2509, baseType: !863, size: 32, offset: 192)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !864, line: 58, baseType: !865)
!864 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !866, line: 44, baseType: !7)
!866 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!867 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !859, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !151, line: 2511, baseType: !742, size: 64, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !859, file: !151, line: 2512, baseType: !742, size: 64, offset: 320)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !744, file: !151, line: 3382, baseType: !871, size: 896)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !872)
!872 = !{!873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !871, file: !151, line: 2653, baseType: !859, size: 384)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !871, file: !151, line: 2654, baseType: !742, size: 64, offset: 384)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !871, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !871, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !871, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !871, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !871, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !871, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !871, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !871, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !871, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !871, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !871, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !871, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !871, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !871, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !871, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !871, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !871, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !871, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !871, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !871, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !871, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !871, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !871, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !871, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !871, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !871, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !871, file: !151, line: 2705, baseType: !742, size: 64, offset: 576)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !871, file: !151, line: 2706, baseType: !742, size: 64, offset: 640)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !871, file: !151, line: 2707, baseType: !742, size: 64, offset: 704)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !871, file: !151, line: 2708, baseType: !742, size: 64, offset: 768)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !871, file: !151, line: 2711, baseType: !906, size: 64, offset: 832)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !744, file: !151, line: 3383, baseType: !909, size: 960)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !909, file: !151, line: 2757, baseType: !871, size: 896)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !909, file: !151, line: 2758, baseType: !622, size: 64, offset: 896)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !744, file: !151, line: 3384, baseType: !914, size: 1472)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !915)
!915 = !{!916, !937, !938, !939, !940}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !914, file: !151, line: 3115, baseType: !917, size: 1216)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !917, file: !151, line: 2985, baseType: !909, size: 960)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !917, file: !151, line: 2986, baseType: !742, size: 64, offset: 960)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !917, file: !151, line: 2987, baseType: !742, size: 64, offset: 1024)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !917, file: !151, line: 2988, baseType: !742, size: 64, offset: 1088)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !917, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !917, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !917, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !917, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !917, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !917, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !917, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !917, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !917, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !917, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !917, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !917, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !917, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !917, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !914, file: !151, line: 3117, baseType: !742, size: 64, offset: 1216)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !914, file: !151, line: 3119, baseType: !742, size: 64, offset: 1280)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !914, file: !151, line: 3121, baseType: !742, size: 64, offset: 1344)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !914, file: !151, line: 3123, baseType: !742, size: 64, offset: 1408)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !744, file: !151, line: 3385, baseType: !942, size: 1088)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !943)
!943 = !{!944, !945, !946}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !942, file: !151, line: 2875, baseType: !909, size: 960)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !942, file: !151, line: 2876, baseType: !622, size: 64, offset: 960)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !942, file: !151, line: 2877, baseType: !947, size: 64, offset: 1024)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !744, file: !151, line: 3386, baseType: !917, size: 1216)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !744, file: !151, line: 3387, baseType: !951, size: 1280)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !951, file: !151, line: 3094, baseType: !917, size: 1216)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !951, file: !151, line: 3095, baseType: !947, size: 64, offset: 1216)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !744, file: !151, line: 3388, baseType: !956, size: 1216)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !957)
!957 = !{!958, !959, !960, !961, !962, !963}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !956, file: !151, line: 2825, baseType: !871, size: 896)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !956, file: !151, line: 2827, baseType: !742, size: 64, offset: 896)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !956, file: !151, line: 2828, baseType: !742, size: 64, offset: 960)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !956, file: !151, line: 2829, baseType: !742, size: 64, offset: 1024)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !956, file: !151, line: 2830, baseType: !742, size: 64, offset: 1088)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !956, file: !151, line: 2831, baseType: !742, size: 64, offset: 1152)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !744, file: !151, line: 3389, baseType: !965, size: 1024)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !966)
!966 = !{!967, !968, !969}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !965, file: !151, line: 2851, baseType: !909, size: 960)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !965, file: !151, line: 2852, baseType: !619, size: 32, offset: 960)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !965, file: !151, line: 2853, baseType: !619, size: 32, offset: 992)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !744, file: !151, line: 3390, baseType: !971, size: 1024)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !971, file: !151, line: 2858, baseType: !909, size: 960)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !971, file: !151, line: 2859, baseType: !947, size: 64, offset: 960)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !744, file: !151, line: 3391, baseType: !976, size: 960)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !977)
!977 = !{!978}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !976, file: !151, line: 2863, baseType: !909, size: 960)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !744, file: !151, line: 3392, baseType: !980, size: 1472)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !981)
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !980, file: !151, line: 3305, baseType: !914, size: 1472)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !744, file: !151, line: 3393, baseType: !984, size: 1792)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !985)
!985 = !{!986, !987, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !984, file: !151, line: 3249, baseType: !914, size: 1472)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !984, file: !151, line: 3251, baseType: !988, size: 64, offset: 1472)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !990, line: 463, size: 1152, elements: !991)
!990 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!991 = !{!992, !995, !1099, !1100, !1103, !1106, !1158, !1159, !1160, !1161, !1162, !1186, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !989, file: !990, line: 464, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !990, line: 464, flags: DIFlagFwdDecl)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !989, file: !990, line: 467, baseType: !996, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !998)
!998 = !{!999, !1074, !1075, !1088, !1089, !1090, !1091, !1092, !1093, !1095, !1097, !1098}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !997, file: !135, line: 377, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !623, line: 111, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1003)
!1003 = !{!1004, !1039, !1040, !1041, !1044, !1048, !1049, !1050, !1068, !1069, !1070, !1071, !1072, !1073}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1002, file: !135, line: 219, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1008)
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1007, file: !135, line: 151, baseType: !1010, size: 128)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1012)
!1012 = !{!1013, !1014, !1015}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1011, file: !135, line: 150, baseType: !7, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1011, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1011, file: !135, line: 150, baseType: !1016, size: 64, offset: 64)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 64, elements: !660)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !623, line: 108, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1031, !1032, !1033, !1034, !1035, !1036, !1037}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1019, file: !135, line: 124, baseType: !1001, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1019, file: !135, line: 125, baseType: !1001, size: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1019, file: !135, line: 131, baseType: !1024, size: 64, offset: 128)
!1024 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1025)
!1025 = !{!1026, !1030}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1024, file: !135, line: 129, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !623, line: 66, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !623, line: 65, flags: DIFlagFwdDecl)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1024, file: !135, line: 130, baseType: !622, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1019, file: !135, line: 134, baseType: !732, size: 64, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1019, file: !135, line: 137, baseType: !742, size: 64, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1019, file: !135, line: 138, baseType: !863, size: 32, offset: 320)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1019, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1019, file: !135, line: 144, baseType: !619, size: 32, offset: 384)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1019, file: !135, line: 145, baseType: !619, size: 32, offset: 416)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1019, file: !135, line: 146, baseType: !1038, size: 64, offset: 448)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !711)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1002, file: !135, line: 220, baseType: !1005, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1002, file: !135, line: 223, baseType: !732, size: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1002, file: !135, line: 226, baseType: !1042, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1002, file: !135, line: 229, baseType: !1045, size: 128, offset: 256)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 128, elements: !695)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1002, file: !135, line: 232, baseType: !1001, size: 64, offset: 384)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1002, file: !135, line: 233, baseType: !1001, size: 64, offset: 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1002, file: !135, line: 238, baseType: !1051, size: 64, offset: 512)
!1051 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1052)
!1052 = !{!1053, !1059}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1051, file: !135, line: 236, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1056)
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1055, file: !135, line: 275, baseType: !1027, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1055, file: !135, line: 278, baseType: !1027, size: 64, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1051, file: !135, line: 237, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1067}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1061, file: !135, line: 261, baseType: !622, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1061, file: !135, line: 262, baseType: !622, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1061, file: !135, line: 266, baseType: !622, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1061, file: !135, line: 267, baseType: !622, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1061, file: !135, line: 270, baseType: !619, size: 32, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1002, file: !135, line: 241, baseType: !1038, size: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1002, file: !135, line: 244, baseType: !619, size: 32, offset: 640)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1002, file: !135, line: 247, baseType: !619, size: 32, offset: 672)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1002, file: !135, line: 250, baseType: !619, size: 32, offset: 704)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1002, file: !135, line: 253, baseType: !619, size: 32, offset: 736)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1002, file: !135, line: 256, baseType: !619, size: 32, offset: 768)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !997, file: !135, line: 378, baseType: !1000, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !997, file: !135, line: 381, baseType: !1076, size: 64, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1079)
!1079 = !{!1080}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1078, file: !135, line: 282, baseType: !1081, size: 128)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1083)
!1083 = !{!1084, !1085, !1086}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1082, file: !135, line: 281, baseType: !7, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1082, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1082, file: !135, line: 281, baseType: !1087, size: 64, offset: 64)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 64, elements: !660)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !997, file: !135, line: 384, baseType: !619, size: 32, offset: 192)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !997, file: !135, line: 387, baseType: !619, size: 32, offset: 224)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !997, file: !135, line: 390, baseType: !619, size: 32, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !997, file: !135, line: 394, baseType: !1076, size: 64, offset: 320)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !997, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !997, file: !135, line: 399, baseType: !1094, size: 64, offset: 416)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !695)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !997, file: !135, line: 402, baseType: !1096, size: 64, offset: 480)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !695)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !997, file: !135, line: 406, baseType: !619, size: 32, offset: 544)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !997, file: !135, line: 409, baseType: !619, size: 32, offset: 576)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !989, file: !990, line: 470, baseType: !1028, size: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !989, file: !990, line: 473, baseType: !1101, size: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !990, line: 166, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !989, file: !990, line: 476, baseType: !1104, size: 64, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !990, line: 476, flags: DIFlagFwdDecl)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !989, file: !990, line: 479, baseType: !1107, size: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1108, line: 144, baseType: !1109)
!1108 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1108, line: 100, size: 896, elements: !1111)
!1111 = !{!1112, !1120, !1125, !1130, !1132, !1135, !1136, !1137, !1138, !1139, !1144, !1146, !1147, !1152, !1157}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1110, file: !1108, line: 102, baseType: !1113, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1108, line: 52, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1108, line: 47, baseType: !7)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1110, file: !1108, line: 105, baseType: !1121, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1108, line: 59, baseType: !1122)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!619, !1118, !1118}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1110, file: !1108, line: 108, baseType: !1126, size: 64, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1108, line: 63, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !732}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1110, file: !1108, line: 111, baseType: !1131, size: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1110, file: !1108, line: 114, baseType: !1133, size: 64, offset: 256)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1134, line: 46, baseType: !621)
!1134 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1110, file: !1108, line: 117, baseType: !1133, size: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1110, file: !1108, line: 120, baseType: !1133, size: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1110, file: !1108, line: 124, baseType: !7, size: 32, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1110, file: !1108, line: 128, baseType: !7, size: 32, offset: 480)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1110, file: !1108, line: 131, baseType: !1140, size: 64, offset: 512)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1108, line: 75, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!732, !1133, !1133}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1110, file: !1108, line: 132, baseType: !1145, size: 64, offset: 576)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1108, line: 78, baseType: !1127)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1110, file: !1108, line: 135, baseType: !732, size: 64, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1110, file: !1108, line: 136, baseType: !1148, size: 64, offset: 704)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1108, line: 82, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!732, !732, !1133, !1133}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1110, file: !1108, line: 137, baseType: !1153, size: 64, offset: 768)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1108, line: 83, baseType: !1154)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !732, !732}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1110, file: !1108, line: 141, baseType: !7, size: 32, offset: 832)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !989, file: !990, line: 484, baseType: !742, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !989, file: !990, line: 488, baseType: !742, size: 64, offset: 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !989, file: !990, line: 493, baseType: !742, size: 64, offset: 512)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !989, file: !990, line: 496, baseType: !742, size: 64, offset: 576)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !989, file: !990, line: 501, baseType: !1163, size: 64, offset: 640)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1165)
!1165 = !{!1166, !1169, !1170, !1171, !1172, !1174, !1175, !1180, !1181, !1182, !1183, !1184, !1185}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1164, file: !146, line: 2356, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1164, file: !146, line: 2357, baseType: !648, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1164, file: !146, line: 2358, baseType: !619, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1164, file: !146, line: 2359, baseType: !619, size: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1164, file: !146, line: 2360, baseType: !1173, size: 128, offset: 192)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 128, elements: !721)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1164, file: !146, line: 2364, baseType: !619, size: 32, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1164, file: !146, line: 2367, baseType: !1176, size: 128, offset: 384)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1176, file: !146, line: 2351, baseType: !622, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1176, file: !146, line: 2352, baseType: !711, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1164, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1164, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1164, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1164, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1164, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1164, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !989, file: !990, line: 504, baseType: !1187, size: 64, offset: 704)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !990, line: 504, flags: DIFlagFwdDecl)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !989, file: !990, line: 507, baseType: !1107, size: 64, offset: 768)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !989, file: !990, line: 510, baseType: !619, size: 32, offset: 832)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !989, file: !990, line: 513, baseType: !619, size: 32, offset: 864)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !989, file: !990, line: 516, baseType: !863, size: 32, offset: 896)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !989, file: !990, line: 519, baseType: !863, size: 32, offset: 928)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !989, file: !990, line: 522, baseType: !7, size: 32, offset: 960)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !989, file: !990, line: 523, baseType: !7, size: 32, offset: 992)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !989, file: !990, line: 528, baseType: !648, size: 64, offset: 1024)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !989, file: !990, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !989, file: !990, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !989, file: !990, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !989, file: !990, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !989, file: !990, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !989, file: !990, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !989, file: !990, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !989, file: !990, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !989, file: !990, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !989, file: !990, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !989, file: !990, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !989, file: !990, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !989, file: !990, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !989, file: !990, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !989, file: !990, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !989, file: !990, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !984, file: !151, line: 3254, baseType: !742, size: 64, offset: 1536)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !984, file: !151, line: 3257, baseType: !742, size: 64, offset: 1600)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !984, file: !151, line: 3258, baseType: !742, size: 64, offset: 1664)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !984, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !984, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !984, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !984, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !984, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !984, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !984, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !984, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !984, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !984, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !984, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !984, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !984, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !984, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !984, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !984, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !984, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !984, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !744, file: !151, line: 3394, baseType: !1235, size: 1344)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1262, !1263, !1264, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1235, file: !151, line: 2280, baseType: !780, size: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1235, file: !151, line: 2281, baseType: !742, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !151, line: 2282, baseType: !742, size: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1235, file: !151, line: 2283, baseType: !742, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1235, file: !151, line: 2284, baseType: !742, size: 64, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1235, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1235, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1235, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1235, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1235, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1235, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1235, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1235, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1235, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1235, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1235, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1235, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1235, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1235, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1235, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1235, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1235, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1235, file: !151, line: 2306, baseType: !1260, size: 32, offset: 544)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1261, line: 31, baseType: !619)
!1261 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1235, file: !151, line: 2307, baseType: !742, size: 64, offset: 576)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1235, file: !151, line: 2308, baseType: !742, size: 64, offset: 640)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1235, file: !151, line: 2314, baseType: !1265, size: 64, offset: 704)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1266)
!1266 = !{!1267, !1268, !1269}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1265, file: !151, line: 2310, baseType: !619, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1265, file: !151, line: 2311, baseType: !648, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1265, file: !151, line: 2312, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1235, file: !151, line: 2315, baseType: !742, size: 64, offset: 768)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1235, file: !151, line: 2316, baseType: !742, size: 64, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1235, file: !151, line: 2317, baseType: !742, size: 64, offset: 896)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1235, file: !151, line: 2318, baseType: !742, size: 64, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1235, file: !151, line: 2319, baseType: !742, size: 64, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1235, file: !151, line: 2320, baseType: !742, size: 64, offset: 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1235, file: !151, line: 2321, baseType: !742, size: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1235, file: !151, line: 2322, baseType: !742, size: 64, offset: 1216)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1235, file: !151, line: 2324, baseType: !1281, size: 64, offset: 1280)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !744, file: !151, line: 3395, baseType: !1284, size: 320)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1284, file: !151, line: 1470, baseType: !780, size: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1284, file: !151, line: 1471, baseType: !742, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1284, file: !151, line: 1472, baseType: !742, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !744, file: !151, line: 3396, baseType: !1290, size: 320)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1290, file: !151, line: 1483, baseType: !780, size: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1290, file: !151, line: 1484, baseType: !619, size: 32, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1290, file: !151, line: 1485, baseType: !1295, size: 64, offset: 256)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 64, elements: !660)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !744, file: !151, line: 3397, baseType: !1297, size: 384)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1297, file: !151, line: 1830, baseType: !780, size: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1297, file: !151, line: 1831, baseType: !863, size: 32, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1297, file: !151, line: 1832, baseType: !742, size: 64, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1297, file: !151, line: 1835, baseType: !1295, size: 64, offset: 320)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !744, file: !151, line: 3398, baseType: !1304, size: 704)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1305)
!1305 = !{!1306, !1307, !1308, !1312, !1313, !1316}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1304, file: !151, line: 1899, baseType: !780, size: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1304, file: !151, line: 1902, baseType: !742, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1304, file: !151, line: 1905, baseType: !1309, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !623, line: 58, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !623, line: 57, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1304, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1304, file: !151, line: 1911, baseType: !1314, size: 64, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1304, file: !151, line: 1914, baseType: !1317, size: 256, offset: 448)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1318)
!1318 = !{!1319, !1321, !1322, !1327}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1317, file: !151, line: 1884, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1317, file: !151, line: 1885, baseType: !1320, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1317, file: !151, line: 1891, baseType: !1323, size: 64, offset: 128)
!1323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1317, file: !151, line: 1891, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1323, file: !151, line: 1891, baseType: !1309, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1323, file: !151, line: 1891, baseType: !742, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1317, file: !151, line: 1892, baseType: !1328, size: 64, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !744, file: !151, line: 3399, baseType: !1330, size: 704)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336, !1337, !1349, !1350, !1351, !1352, !1353}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1330, file: !151, line: 2009, baseType: !780, size: 192)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1330, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1330, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1330, file: !151, line: 2014, baseType: !863, size: 32, offset: 224)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1330, file: !151, line: 2016, baseType: !742, size: 64, offset: 256)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1330, file: !151, line: 2017, baseType: !1338, size: 64, offset: 320)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1341)
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1340, file: !151, line: 183, baseType: !1343, size: 128)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1345)
!1345 = !{!1346, !1347, !1348}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1344, file: !151, line: 182, baseType: !7, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1344, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1344, file: !151, line: 182, baseType: !1295, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1330, file: !151, line: 2019, baseType: !742, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1330, file: !151, line: 2020, baseType: !742, size: 64, offset: 448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1330, file: !151, line: 2021, baseType: !742, size: 64, offset: 512)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1330, file: !151, line: 2022, baseType: !742, size: 64, offset: 576)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1330, file: !151, line: 2023, baseType: !742, size: 64, offset: 640)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !744, file: !151, line: 3400, baseType: !1355, size: 832)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1355, file: !151, line: 2431, baseType: !780, size: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1355, file: !151, line: 2433, baseType: !742, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1355, file: !151, line: 2434, baseType: !742, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1355, file: !151, line: 2435, baseType: !742, size: 64, offset: 320)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1355, file: !151, line: 2436, baseType: !742, size: 64, offset: 384)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1355, file: !151, line: 2437, baseType: !1338, size: 64, offset: 448)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1355, file: !151, line: 2438, baseType: !742, size: 64, offset: 512)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1355, file: !151, line: 2440, baseType: !742, size: 64, offset: 576)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1355, file: !151, line: 2441, baseType: !742, size: 64, offset: 640)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1355, file: !151, line: 2443, baseType: !1367, size: 128, offset: 704)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1369)
!1369 = !{!1370}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1368, file: !151, line: 182, baseType: !1343, size: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !744, file: !151, line: 3401, baseType: !1372, size: 320)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1373)
!1373 = !{!1374, !1375, !1382}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !151, line: 3329, baseType: !780, size: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1372, file: !151, line: 3330, baseType: !1376, size: 64, offset: 192)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1378)
!1378 = !{!1379, !1380, !1381}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1377, file: !151, line: 3322, baseType: !1376, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1377, file: !151, line: 3323, baseType: !1376, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1377, file: !151, line: 3324, baseType: !742, size: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1372, file: !151, line: 3331, baseType: !1376, size: 64, offset: 256)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !744, file: !151, line: 3402, baseType: !1384, size: 256)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1384, file: !151, line: 1541, baseType: !780, size: 192)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1384, file: !151, line: 1542, baseType: !1388, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1390, file: !151, line: 1538, baseType: !1393, size: 192)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1395)
!1395 = !{!1396, !1397, !1398}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1394, file: !151, line: 1537, baseType: !7, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1394, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1394, file: !151, line: 1537, baseType: !1399, size: 128, offset: 64)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 128, elements: !660)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1402)
!1402 = !{!1403, !1404}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1401, file: !151, line: 1533, baseType: !742, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1401, file: !151, line: 1534, baseType: !742, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !744, file: !151, line: 3403, baseType: !1406, size: 512)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1417, !1418, !1419}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1406, file: !151, line: 1939, baseType: !780, size: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1406, file: !151, line: 1940, baseType: !863, size: 32, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1406, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1406, file: !151, line: 1946, baseType: !1412, size: 32, offset: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1413)
!1413 = !{!1414, !1415, !1416}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1412, file: !151, line: 1943, baseType: !169, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1412, file: !151, line: 1944, baseType: !176, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1412, file: !151, line: 1945, baseType: !183, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1406, file: !151, line: 1950, baseType: !1027, size: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1406, file: !151, line: 1951, baseType: !1027, size: 64, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1406, file: !151, line: 1953, baseType: !1295, size: 64, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !744, file: !151, line: 3404, baseType: !1421, size: 1664)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1421, file: !151, line: 3338, baseType: !780, size: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1421, file: !151, line: 3341, baseType: !1425, size: 1472, offset: 192)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1426, line: 410, size: 1472, elements: !1427)
!1426 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1425, file: !1426, line: 412, baseType: !619, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1425, file: !1426, line: 413, baseType: !619, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1425, file: !1426, line: 414, baseType: !619, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1425, file: !1426, line: 415, baseType: !619, size: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1425, file: !1426, line: 416, baseType: !619, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1425, file: !1426, line: 417, baseType: !619, size: 32, offset: 160)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1425, file: !1426, line: 418, baseType: !855, size: 8, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1425, file: !1426, line: 419, baseType: !855, size: 8, offset: 200)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1425, file: !1426, line: 420, baseType: !1437, size: 8, offset: 208)
!1437 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1425, file: !1426, line: 421, baseType: !1437, size: 8, offset: 216)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1425, file: !1426, line: 422, baseType: !1437, size: 8, offset: 224)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1425, file: !1426, line: 423, baseType: !1437, size: 8, offset: 232)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1425, file: !1426, line: 424, baseType: !1437, size: 8, offset: 240)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1425, file: !1426, line: 425, baseType: !1437, size: 8, offset: 248)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1425, file: !1426, line: 426, baseType: !1437, size: 8, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1425, file: !1426, line: 427, baseType: !1437, size: 8, offset: 264)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1425, file: !1426, line: 428, baseType: !1437, size: 8, offset: 272)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1425, file: !1426, line: 429, baseType: !1437, size: 8, offset: 280)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1425, file: !1426, line: 430, baseType: !1437, size: 8, offset: 288)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1425, file: !1426, line: 431, baseType: !1437, size: 8, offset: 296)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1425, file: !1426, line: 432, baseType: !1437, size: 8, offset: 304)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1425, file: !1426, line: 433, baseType: !1437, size: 8, offset: 312)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1425, file: !1426, line: 434, baseType: !1437, size: 8, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1425, file: !1426, line: 435, baseType: !1437, size: 8, offset: 328)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1425, file: !1426, line: 436, baseType: !1437, size: 8, offset: 336)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1425, file: !1426, line: 437, baseType: !1437, size: 8, offset: 344)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1425, file: !1426, line: 438, baseType: !1437, size: 8, offset: 352)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1425, file: !1426, line: 439, baseType: !1437, size: 8, offset: 360)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1425, file: !1426, line: 440, baseType: !1437, size: 8, offset: 368)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1425, file: !1426, line: 441, baseType: !1437, size: 8, offset: 376)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1425, file: !1426, line: 442, baseType: !1437, size: 8, offset: 384)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1425, file: !1426, line: 443, baseType: !1437, size: 8, offset: 392)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1425, file: !1426, line: 444, baseType: !1437, size: 8, offset: 400)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1425, file: !1426, line: 445, baseType: !1437, size: 8, offset: 408)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1425, file: !1426, line: 446, baseType: !1437, size: 8, offset: 416)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1425, file: !1426, line: 447, baseType: !1437, size: 8, offset: 424)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1425, file: !1426, line: 448, baseType: !1437, size: 8, offset: 432)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1425, file: !1426, line: 449, baseType: !1437, size: 8, offset: 440)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1425, file: !1426, line: 450, baseType: !1437, size: 8, offset: 448)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1425, file: !1426, line: 451, baseType: !1437, size: 8, offset: 456)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1425, file: !1426, line: 452, baseType: !1437, size: 8, offset: 464)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1425, file: !1426, line: 453, baseType: !1437, size: 8, offset: 472)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1425, file: !1426, line: 454, baseType: !1437, size: 8, offset: 480)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1425, file: !1426, line: 455, baseType: !1437, size: 8, offset: 488)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1425, file: !1426, line: 456, baseType: !1437, size: 8, offset: 496)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1425, file: !1426, line: 457, baseType: !1437, size: 8, offset: 504)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1425, file: !1426, line: 458, baseType: !1437, size: 8, offset: 512)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1425, file: !1426, line: 459, baseType: !1437, size: 8, offset: 520)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1425, file: !1426, line: 460, baseType: !1437, size: 8, offset: 528)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1425, file: !1426, line: 461, baseType: !1437, size: 8, offset: 536)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1425, file: !1426, line: 462, baseType: !1437, size: 8, offset: 544)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1425, file: !1426, line: 463, baseType: !1437, size: 8, offset: 552)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1425, file: !1426, line: 464, baseType: !1437, size: 8, offset: 560)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1425, file: !1426, line: 465, baseType: !1437, size: 8, offset: 568)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1425, file: !1426, line: 466, baseType: !1437, size: 8, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1425, file: !1426, line: 467, baseType: !1437, size: 8, offset: 584)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1425, file: !1426, line: 468, baseType: !1437, size: 8, offset: 592)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1425, file: !1426, line: 469, baseType: !1437, size: 8, offset: 600)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1425, file: !1426, line: 470, baseType: !1437, size: 8, offset: 608)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1425, file: !1426, line: 471, baseType: !1437, size: 8, offset: 616)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1425, file: !1426, line: 472, baseType: !1437, size: 8, offset: 624)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1425, file: !1426, line: 473, baseType: !1437, size: 8, offset: 632)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1425, file: !1426, line: 474, baseType: !1437, size: 8, offset: 640)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1425, file: !1426, line: 475, baseType: !1437, size: 8, offset: 648)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1425, file: !1426, line: 476, baseType: !1437, size: 8, offset: 656)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1425, file: !1426, line: 477, baseType: !1437, size: 8, offset: 664)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1425, file: !1426, line: 478, baseType: !1437, size: 8, offset: 672)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1425, file: !1426, line: 479, baseType: !1437, size: 8, offset: 680)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1425, file: !1426, line: 480, baseType: !1437, size: 8, offset: 688)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1425, file: !1426, line: 481, baseType: !1437, size: 8, offset: 696)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1425, file: !1426, line: 482, baseType: !1437, size: 8, offset: 704)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1425, file: !1426, line: 483, baseType: !1437, size: 8, offset: 712)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1425, file: !1426, line: 484, baseType: !1437, size: 8, offset: 720)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1425, file: !1426, line: 485, baseType: !1437, size: 8, offset: 728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1425, file: !1426, line: 486, baseType: !1437, size: 8, offset: 736)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1425, file: !1426, line: 487, baseType: !1437, size: 8, offset: 744)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1425, file: !1426, line: 488, baseType: !1437, size: 8, offset: 752)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1425, file: !1426, line: 489, baseType: !1437, size: 8, offset: 760)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1425, file: !1426, line: 490, baseType: !1437, size: 8, offset: 768)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1425, file: !1426, line: 491, baseType: !1437, size: 8, offset: 776)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1425, file: !1426, line: 492, baseType: !1437, size: 8, offset: 784)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1425, file: !1426, line: 493, baseType: !1437, size: 8, offset: 792)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1425, file: !1426, line: 494, baseType: !1437, size: 8, offset: 800)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1425, file: !1426, line: 495, baseType: !1437, size: 8, offset: 808)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1425, file: !1426, line: 496, baseType: !1437, size: 8, offset: 816)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1425, file: !1426, line: 497, baseType: !1437, size: 8, offset: 824)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1425, file: !1426, line: 498, baseType: !1437, size: 8, offset: 832)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1425, file: !1426, line: 499, baseType: !1437, size: 8, offset: 840)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1425, file: !1426, line: 500, baseType: !1437, size: 8, offset: 848)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1425, file: !1426, line: 501, baseType: !1437, size: 8, offset: 856)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1425, file: !1426, line: 502, baseType: !1437, size: 8, offset: 864)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1425, file: !1426, line: 503, baseType: !1437, size: 8, offset: 872)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1425, file: !1426, line: 504, baseType: !1437, size: 8, offset: 880)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1425, file: !1426, line: 505, baseType: !1437, size: 8, offset: 888)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1425, file: !1426, line: 506, baseType: !1437, size: 8, offset: 896)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1425, file: !1426, line: 507, baseType: !1437, size: 8, offset: 904)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1425, file: !1426, line: 508, baseType: !1437, size: 8, offset: 912)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1425, file: !1426, line: 509, baseType: !1437, size: 8, offset: 920)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1425, file: !1426, line: 510, baseType: !1437, size: 8, offset: 928)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1425, file: !1426, line: 511, baseType: !1437, size: 8, offset: 936)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1425, file: !1426, line: 512, baseType: !1437, size: 8, offset: 944)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1425, file: !1426, line: 513, baseType: !1437, size: 8, offset: 952)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1425, file: !1426, line: 514, baseType: !1437, size: 8, offset: 960)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1425, file: !1426, line: 515, baseType: !1437, size: 8, offset: 968)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1425, file: !1426, line: 516, baseType: !1437, size: 8, offset: 976)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1425, file: !1426, line: 517, baseType: !1437, size: 8, offset: 984)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1425, file: !1426, line: 518, baseType: !1437, size: 8, offset: 992)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1425, file: !1426, line: 519, baseType: !1437, size: 8, offset: 1000)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1425, file: !1426, line: 520, baseType: !1437, size: 8, offset: 1008)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1425, file: !1426, line: 521, baseType: !1437, size: 8, offset: 1016)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1425, file: !1426, line: 522, baseType: !1437, size: 8, offset: 1024)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1425, file: !1426, line: 523, baseType: !1437, size: 8, offset: 1032)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1425, file: !1426, line: 524, baseType: !1437, size: 8, offset: 1040)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1425, file: !1426, line: 525, baseType: !1437, size: 8, offset: 1048)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1425, file: !1426, line: 526, baseType: !1437, size: 8, offset: 1056)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1425, file: !1426, line: 527, baseType: !1437, size: 8, offset: 1064)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1425, file: !1426, line: 528, baseType: !1437, size: 8, offset: 1072)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1425, file: !1426, line: 529, baseType: !1437, size: 8, offset: 1080)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1425, file: !1426, line: 530, baseType: !1437, size: 8, offset: 1088)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1425, file: !1426, line: 531, baseType: !1437, size: 8, offset: 1096)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1425, file: !1426, line: 532, baseType: !1437, size: 8, offset: 1104)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1425, file: !1426, line: 533, baseType: !1437, size: 8, offset: 1112)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1425, file: !1426, line: 534, baseType: !1437, size: 8, offset: 1120)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1425, file: !1426, line: 535, baseType: !1437, size: 8, offset: 1128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1425, file: !1426, line: 536, baseType: !1437, size: 8, offset: 1136)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1425, file: !1426, line: 537, baseType: !1437, size: 8, offset: 1144)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1425, file: !1426, line: 538, baseType: !1437, size: 8, offset: 1152)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1425, file: !1426, line: 539, baseType: !1437, size: 8, offset: 1160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1425, file: !1426, line: 540, baseType: !1437, size: 8, offset: 1168)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1425, file: !1426, line: 541, baseType: !1437, size: 8, offset: 1176)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1425, file: !1426, line: 542, baseType: !1437, size: 8, offset: 1184)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1425, file: !1426, line: 543, baseType: !1437, size: 8, offset: 1192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1425, file: !1426, line: 544, baseType: !1437, size: 8, offset: 1200)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1425, file: !1426, line: 545, baseType: !1437, size: 8, offset: 1208)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1425, file: !1426, line: 546, baseType: !1437, size: 8, offset: 1216)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1425, file: !1426, line: 547, baseType: !1437, size: 8, offset: 1224)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1425, file: !1426, line: 548, baseType: !1437, size: 8, offset: 1232)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1425, file: !1426, line: 549, baseType: !1437, size: 8, offset: 1240)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1425, file: !1426, line: 550, baseType: !1437, size: 8, offset: 1248)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1425, file: !1426, line: 551, baseType: !1437, size: 8, offset: 1256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1425, file: !1426, line: 552, baseType: !1437, size: 8, offset: 1264)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1425, file: !1426, line: 553, baseType: !1437, size: 8, offset: 1272)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1425, file: !1426, line: 554, baseType: !1437, size: 8, offset: 1280)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1425, file: !1426, line: 555, baseType: !1437, size: 8, offset: 1288)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1425, file: !1426, line: 556, baseType: !1437, size: 8, offset: 1296)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1425, file: !1426, line: 557, baseType: !1437, size: 8, offset: 1304)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1425, file: !1426, line: 558, baseType: !1437, size: 8, offset: 1312)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1425, file: !1426, line: 559, baseType: !1437, size: 8, offset: 1320)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1425, file: !1426, line: 560, baseType: !1437, size: 8, offset: 1328)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1425, file: !1426, line: 561, baseType: !1437, size: 8, offset: 1336)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1425, file: !1426, line: 562, baseType: !1437, size: 8, offset: 1344)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1425, file: !1426, line: 563, baseType: !1437, size: 8, offset: 1352)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1425, file: !1426, line: 564, baseType: !1437, size: 8, offset: 1360)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1425, file: !1426, line: 565, baseType: !1437, size: 8, offset: 1368)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1425, file: !1426, line: 566, baseType: !1437, size: 8, offset: 1376)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1425, file: !1426, line: 567, baseType: !1437, size: 8, offset: 1384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1425, file: !1426, line: 568, baseType: !1437, size: 8, offset: 1392)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1425, file: !1426, line: 569, baseType: !1437, size: 8, offset: 1400)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1425, file: !1426, line: 570, baseType: !1437, size: 8, offset: 1408)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1425, file: !1426, line: 571, baseType: !1437, size: 8, offset: 1416)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1425, file: !1426, line: 572, baseType: !1437, size: 8, offset: 1424)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1425, file: !1426, line: 573, baseType: !1437, size: 8, offset: 1432)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1425, file: !1426, line: 574, baseType: !1437, size: 8, offset: 1440)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !744, file: !151, line: 3405, baseType: !1593, size: 384)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1593, file: !151, line: 3353, baseType: !780, size: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1593, file: !151, line: 3356, baseType: !1597, size: 192, offset: 192)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1426, line: 578, size: 192, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1597, file: !1426, line: 580, baseType: !619, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1597, file: !1426, line: 581, baseType: !619, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1597, file: !1426, line: 582, baseType: !619, size: 32, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1597, file: !1426, line: 583, baseType: !619, size: 32, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1597, file: !1426, line: 584, baseType: !855, size: 8, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1597, file: !1426, line: 585, baseType: !855, size: 8, offset: 136)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1597, file: !1426, line: 586, baseType: !855, size: 8, offset: 144)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1597, file: !1426, line: 587, baseType: !855, size: 8, offset: 152)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1597, file: !1426, line: 588, baseType: !855, size: 8, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1597, file: !1426, line: 589, baseType: !855, size: 8, offset: 168)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1597, file: !1426, line: 590, baseType: !855, size: 8, offset: 176)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !643, file: !378, line: 178, baseType: !1001, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !643, file: !378, line: 179, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1614, file: !378, line: 144, baseType: !742, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1614, file: !378, line: 145, baseType: !622, size: 64, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1614, file: !378, line: 146, baseType: !622, size: 64, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1614, file: !378, line: 147, baseType: !1260, size: 32, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1614, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1614, file: !378, line: 149, baseType: !855, size: 8, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !643, file: !378, line: 180, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1625, file: !378, line: 160, baseType: !742, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1625, file: !378, line: 161, baseType: !711, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !643, file: !378, line: 181, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !638, file: !378, line: 317, baseType: !1633, size: 64)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 64, elements: !660)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !638, file: !378, line: 318, baseType: !1635, size: 320)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1636)
!1636 = !{!1637, !1639, !1694}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1635, file: !378, line: 190, baseType: !1638, size: 192)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 192, elements: !813)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1635, file: !378, line: 193, baseType: !1640, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1642)
!1642 = !{!1643, !1679, !1680, !1681, !1693}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1641, file: !378, line: 208, baseType: !1644, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !623, line: 62, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1647, line: 538, size: 256, elements: !1648)
!1647 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1648 = !{!1649, !1653, !1659, !1670}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1646, file: !1647, line: 539, baseType: !1650, size: 32)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1647, line: 482, size: 32, elements: !1651)
!1651 = !{!1652}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1650, file: !1647, line: 484, baseType: !7, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1646, file: !1647, line: 540, baseType: !1654, size: 192)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1647, line: 488, size: 192, elements: !1655)
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1654, file: !1647, line: 489, baseType: !1650, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1654, file: !1647, line: 492, baseType: !648, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1654, file: !1647, line: 496, baseType: !742, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1646, file: !1647, line: 541, baseType: !1660, size: 256)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1647, line: 504, size: 256, elements: !1661)
!1661 = !{!1662, !1663, !1668, !1669}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1660, file: !1647, line: 505, baseType: !1650, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1660, file: !1647, line: 509, baseType: !1664, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1647, line: 501, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !1118}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1660, file: !1647, line: 510, baseType: !1118, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1660, file: !1647, line: 513, baseType: !1644, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1646, file: !1647, line: 542, baseType: !1671, size: 128)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1647, line: 530, size: 128, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1671, file: !1647, line: 531, baseType: !1650, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1671, file: !1647, line: 534, baseType: !1675, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1647, line: 525, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!855, !742, !648, !621, !621}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1641, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1641, file: !378, line: 214, baseType: !711, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1641, file: !378, line: 224, baseType: !1682, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1685)
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1684, file: !378, line: 202, baseType: !1687, size: 128)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1689)
!1689 = !{!1690, !1691, !1692}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1688, file: !378, line: 200, baseType: !7, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1688, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1688, file: !378, line: 200, baseType: !659, size: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1641, file: !378, line: 234, baseType: !1682, size: 64, offset: 256)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1635, file: !378, line: 197, baseType: !711, size: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !638, file: !378, line: 319, baseType: !802, size: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !638, file: !378, line: 320, baseType: !821, size: 192)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "replace_label_data", file: !378, line: 1811, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "replace_label_data", file: !378, line: 1806, size: 192, elements: !1701)
!1701 = !{!1702, !1703, !1704}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1700, file: !378, line: 1808, baseType: !622, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1700, file: !378, line: 1809, baseType: !622, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "update_label_nuses", scope: !1700, file: !378, line: 1810, baseType: !855, size: 8, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1706, line: 42, baseType: !621)
!1706 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "set_of_data", file: !3, line: 987, size: 128, elements: !1711)
!1711 = !{!1712, !1714}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !1710, file: !3, line: 989, baseType: !1713, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !623, line: 51, baseType: !1707)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pat", scope: !1710, file: !3, line: 990, baseType: !1713, size: 64, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parms_set_data", file: !3, line: 3372, size: 128, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !1716, file: !3, line: 3374, baseType: !619, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1716, file: !3, line: 3375, baseType: !1705, size: 64, offset: 64)
!1720 = !{!0, !1721, !1723}
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "target_flags", scope: !2, file: !3, line: 70, type: !619, isLocal: false, isDefinition: true)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "num_sign_bit_copies_in_rep", scope: !2, file: !3, line: 86, type: !1725, isLocal: true, isDefinition: true)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 12800, elements: !1726)
!1726 = !{!1727, !1727}
!1727 = !DISubrange(count: 20)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 4448, elements: !1729)
!1729 = !{!1730}
!1730 = !DISubrange(count: 139)
!1731 = !{i32 7, !"Dwarf Version", i32 4}
!1732 = !{i32 2, !"Debug Info Version", i32 3}
!1733 = !{i32 1, !"wchar_size", i32 4}
!1734 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1735 = distinct !DISubprogram(name: "rtx_unstable_p", scope: !3, file: !3, line: 94, type: !1736, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!619, !1713}
!1738 = !{}
!1739 = !DILocalVariable(name: "x", arg: 1, scope: !1735, file: !3, line: 94, type: !1713)
!1740 = !DILocation(line: 94, column: 27, scope: !1735)
!1741 = !DILocalVariable(name: "code", scope: !1735, file: !3, line: 96, type: !1742)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!1743 = !DILocation(line: 96, column: 18, scope: !1735)
!1744 = !DILocation(line: 96, column: 25, scope: !1735)
!1745 = !DILocalVariable(name: "i", scope: !1735, file: !3, line: 97, type: !619)
!1746 = !DILocation(line: 97, column: 7, scope: !1735)
!1747 = !DILocalVariable(name: "fmt", scope: !1735, file: !3, line: 98, type: !648)
!1748 = !DILocation(line: 98, column: 15, scope: !1735)
!1749 = !DILocation(line: 100, column: 11, scope: !1735)
!1750 = !DILocation(line: 100, column: 3, scope: !1735)
!1751 = !DILocation(line: 103, column: 15, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 101, column: 5)
!1753 = !DILocation(line: 103, column: 34, scope: !1752)
!1754 = !DILocation(line: 103, column: 53, scope: !1752)
!1755 = !DILocation(line: 103, column: 37, scope: !1752)
!1756 = !DILocation(line: 103, column: 7, scope: !1752)
!1757 = !DILocation(line: 112, column: 7, scope: !1752)
!1758 = !DILocation(line: 116, column: 11, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 116, column: 11)
!1760 = !DILocation(line: 116, column: 16, scope: !1759)
!1761 = !DILocation(line: 116, column: 13, scope: !1759)
!1762 = !DILocation(line: 116, column: 34, scope: !1759)
!1763 = !DILocation(line: 116, column: 37, scope: !1759)
!1764 = !DILocation(line: 116, column: 42, scope: !1759)
!1765 = !DILocation(line: 116, column: 39, scope: !1759)
!1766 = !DILocation(line: 118, column: 4, scope: !1759)
!1767 = !DILocation(line: 118, column: 8, scope: !1759)
!1768 = !DILocation(line: 118, column: 13, scope: !1759)
!1769 = !DILocation(line: 118, column: 10, scope: !1759)
!1770 = !DILocation(line: 118, column: 29, scope: !1759)
!1771 = !DILocation(line: 118, column: 32, scope: !1759)
!1772 = !DILocation(line: 116, column: 11, scope: !1752)
!1773 = !DILocation(line: 119, column: 2, scope: !1759)
!1774 = !DILocation(line: 124, column: 11, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 124, column: 11)
!1776 = !DILocation(line: 124, column: 16, scope: !1775)
!1777 = !DILocation(line: 124, column: 13, scope: !1775)
!1778 = !DILocation(line: 124, column: 11, scope: !1752)
!1779 = !DILocation(line: 125, column: 2, scope: !1775)
!1780 = !DILocation(line: 127, column: 7, scope: !1752)
!1781 = !DILocation(line: 130, column: 11, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 130, column: 11)
!1783 = !DILocation(line: 130, column: 11, scope: !1752)
!1784 = !DILocation(line: 131, column: 2, scope: !1782)
!1785 = !DILocation(line: 136, column: 7, scope: !1752)
!1786 = !DILocation(line: 139, column: 9, scope: !1735)
!1787 = !DILocation(line: 139, column: 7, scope: !1735)
!1788 = !DILocation(line: 140, column: 12, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 140, column: 3)
!1790 = !DILocation(line: 140, column: 34, scope: !1789)
!1791 = !DILocation(line: 140, column: 10, scope: !1789)
!1792 = !DILocation(line: 140, column: 8, scope: !1789)
!1793 = !DILocation(line: 140, column: 39, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 140, column: 3)
!1795 = !DILocation(line: 140, column: 41, scope: !1794)
!1796 = !DILocation(line: 140, column: 3, scope: !1789)
!1797 = !DILocation(line: 141, column: 9, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 141, column: 9)
!1799 = !DILocation(line: 141, column: 13, scope: !1798)
!1800 = !DILocation(line: 141, column: 16, scope: !1798)
!1801 = !DILocation(line: 141, column: 9, scope: !1794)
!1802 = !DILocation(line: 143, column: 22, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 143, column: 6)
!1804 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 142, column: 7)
!1805 = !DILocation(line: 143, column: 6, scope: !1803)
!1806 = !DILocation(line: 143, column: 6, scope: !1804)
!1807 = !DILocation(line: 144, column: 4, scope: !1803)
!1808 = !DILocation(line: 145, column: 7, scope: !1804)
!1809 = !DILocation(line: 146, column: 14, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 146, column: 14)
!1811 = !DILocation(line: 146, column: 18, scope: !1810)
!1812 = !DILocation(line: 146, column: 21, scope: !1810)
!1813 = !DILocation(line: 146, column: 14, scope: !1798)
!1814 = !DILocalVariable(name: "j", scope: !1815, file: !3, line: 148, type: !619)
!1815 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 147, column: 7)
!1816 = !DILocation(line: 148, column: 6, scope: !1815)
!1817 = !DILocation(line: 149, column: 9, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 149, column: 2)
!1819 = !DILocation(line: 149, column: 7, scope: !1818)
!1820 = !DILocation(line: 149, column: 14, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1818, file: !3, line: 149, column: 2)
!1822 = !DILocation(line: 149, column: 18, scope: !1821)
!1823 = !DILocation(line: 149, column: 16, scope: !1821)
!1824 = !DILocation(line: 149, column: 2, scope: !1818)
!1825 = !DILocation(line: 150, column: 24, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 150, column: 8)
!1827 = !DILocation(line: 150, column: 8, scope: !1826)
!1828 = !DILocation(line: 150, column: 8, scope: !1821)
!1829 = !DILocation(line: 151, column: 6, scope: !1826)
!1830 = !DILocation(line: 150, column: 41, scope: !1826)
!1831 = !DILocation(line: 149, column: 35, scope: !1821)
!1832 = !DILocation(line: 149, column: 2, scope: !1821)
!1833 = distinct !{!1833, !1824, !1834}
!1834 = !DILocation(line: 151, column: 13, scope: !1818)
!1835 = !DILocation(line: 152, column: 7, scope: !1815)
!1836 = !DILocation(line: 141, column: 19, scope: !1798)
!1837 = !DILocation(line: 140, column: 48, scope: !1794)
!1838 = !DILocation(line: 140, column: 3, scope: !1794)
!1839 = distinct !{!1839, !1796, !1840}
!1840 = !DILocation(line: 152, column: 7, scope: !1789)
!1841 = !DILocation(line: 154, column: 3, scope: !1735)
!1842 = !DILocation(line: 155, column: 1, scope: !1735)
!1843 = distinct !DISubprogram(name: "rtx_varies_p", scope: !3, file: !3, line: 165, type: !1844, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!855, !1713, !855}
!1846 = !DILocalVariable(name: "x", arg: 1, scope: !1843, file: !3, line: 165, type: !1713)
!1847 = !DILocation(line: 165, column: 25, scope: !1843)
!1848 = !DILocalVariable(name: "for_alias", arg: 2, scope: !1843, file: !3, line: 165, type: !855)
!1849 = !DILocation(line: 165, column: 33, scope: !1843)
!1850 = !DILocalVariable(name: "code", scope: !1843, file: !3, line: 167, type: !377)
!1851 = !DILocation(line: 167, column: 12, scope: !1843)
!1852 = !DILocalVariable(name: "i", scope: !1843, file: !3, line: 168, type: !619)
!1853 = !DILocation(line: 168, column: 7, scope: !1843)
!1854 = !DILocalVariable(name: "fmt", scope: !1843, file: !3, line: 169, type: !648)
!1855 = !DILocation(line: 169, column: 15, scope: !1843)
!1856 = !DILocation(line: 171, column: 8, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 171, column: 7)
!1858 = !DILocation(line: 171, column: 7, scope: !1843)
!1859 = !DILocation(line: 172, column: 5, scope: !1857)
!1860 = !DILocation(line: 174, column: 10, scope: !1843)
!1861 = !DILocation(line: 174, column: 8, scope: !1843)
!1862 = !DILocation(line: 175, column: 11, scope: !1843)
!1863 = !DILocation(line: 175, column: 3, scope: !1843)
!1864 = !DILocation(line: 178, column: 15, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 176, column: 5)
!1866 = !DILocation(line: 178, column: 34, scope: !1865)
!1867 = !DILocation(line: 178, column: 51, scope: !1865)
!1868 = !DILocation(line: 178, column: 64, scope: !1865)
!1869 = !DILocation(line: 178, column: 37, scope: !1865)
!1870 = !DILocation(line: 178, column: 14, scope: !1865)
!1871 = !DILocation(line: 178, column: 7, scope: !1865)
!1872 = !DILocation(line: 187, column: 7, scope: !1865)
!1873 = !DILocation(line: 194, column: 11, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1865, file: !3, line: 194, column: 11)
!1875 = !DILocation(line: 194, column: 16, scope: !1874)
!1876 = !DILocation(line: 194, column: 13, scope: !1874)
!1877 = !DILocation(line: 194, column: 34, scope: !1874)
!1878 = !DILocation(line: 194, column: 37, scope: !1874)
!1879 = !DILocation(line: 194, column: 42, scope: !1874)
!1880 = !DILocation(line: 194, column: 39, scope: !1874)
!1881 = !DILocation(line: 196, column: 4, scope: !1874)
!1882 = !DILocation(line: 196, column: 8, scope: !1874)
!1883 = !DILocation(line: 196, column: 13, scope: !1874)
!1884 = !DILocation(line: 196, column: 10, scope: !1874)
!1885 = !DILocation(line: 196, column: 29, scope: !1874)
!1886 = !DILocation(line: 196, column: 32, scope: !1874)
!1887 = !DILocation(line: 194, column: 11, scope: !1865)
!1888 = !DILocation(line: 197, column: 2, scope: !1874)
!1889 = !DILocation(line: 198, column: 11, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1865, file: !3, line: 198, column: 11)
!1891 = !DILocation(line: 198, column: 16, scope: !1890)
!1892 = !DILocation(line: 198, column: 13, scope: !1890)
!1893 = !DILocation(line: 198, column: 11, scope: !1865)
!1894 = !DILocation(line: 207, column: 2, scope: !1890)
!1895 = !DILocation(line: 208, column: 7, scope: !1865)
!1896 = !DILocation(line: 214, column: 17, scope: !1865)
!1897 = !DILocation(line: 214, column: 27, scope: !1865)
!1898 = !DILocation(line: 214, column: 44, scope: !1865)
!1899 = !DILocation(line: 214, column: 57, scope: !1865)
!1900 = !DILocation(line: 214, column: 30, scope: !1865)
!1901 = !DILocation(line: 215, column: 7, scope: !1865)
!1902 = !DILocation(line: 215, column: 24, scope: !1865)
!1903 = !DILocation(line: 215, column: 37, scope: !1865)
!1904 = !DILocation(line: 215, column: 10, scope: !1865)
!1905 = !DILocation(line: 214, column: 14, scope: !1865)
!1906 = !DILocation(line: 214, column: 7, scope: !1865)
!1907 = !DILocation(line: 218, column: 11, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1865, file: !3, line: 218, column: 11)
!1909 = !DILocation(line: 218, column: 11, scope: !1865)
!1910 = !DILocation(line: 219, column: 2, scope: !1908)
!1911 = !DILocation(line: 224, column: 7, scope: !1865)
!1912 = !DILocation(line: 227, column: 9, scope: !1843)
!1913 = !DILocation(line: 227, column: 7, scope: !1843)
!1914 = !DILocation(line: 228, column: 12, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 228, column: 3)
!1916 = !DILocation(line: 228, column: 34, scope: !1915)
!1917 = !DILocation(line: 228, column: 10, scope: !1915)
!1918 = !DILocation(line: 228, column: 8, scope: !1915)
!1919 = !DILocation(line: 228, column: 39, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 228, column: 3)
!1921 = !DILocation(line: 228, column: 41, scope: !1920)
!1922 = !DILocation(line: 228, column: 3, scope: !1915)
!1923 = !DILocation(line: 229, column: 9, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 229, column: 9)
!1925 = !DILocation(line: 229, column: 13, scope: !1924)
!1926 = !DILocation(line: 229, column: 16, scope: !1924)
!1927 = !DILocation(line: 229, column: 9, scope: !1920)
!1928 = !DILocation(line: 231, column: 20, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !3, line: 231, column: 6)
!1930 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 230, column: 7)
!1931 = !DILocation(line: 231, column: 33, scope: !1929)
!1932 = !DILocation(line: 231, column: 6, scope: !1929)
!1933 = !DILocation(line: 231, column: 6, scope: !1930)
!1934 = !DILocation(line: 232, column: 4, scope: !1929)
!1935 = !DILocation(line: 233, column: 7, scope: !1930)
!1936 = !DILocation(line: 234, column: 14, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 234, column: 14)
!1938 = !DILocation(line: 234, column: 18, scope: !1937)
!1939 = !DILocation(line: 234, column: 21, scope: !1937)
!1940 = !DILocation(line: 234, column: 14, scope: !1924)
!1941 = !DILocalVariable(name: "j", scope: !1942, file: !3, line: 236, type: !619)
!1942 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 235, column: 7)
!1943 = !DILocation(line: 236, column: 6, scope: !1942)
!1944 = !DILocation(line: 237, column: 9, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1942, file: !3, line: 237, column: 2)
!1946 = !DILocation(line: 237, column: 7, scope: !1945)
!1947 = !DILocation(line: 237, column: 14, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 237, column: 2)
!1949 = !DILocation(line: 237, column: 18, scope: !1948)
!1950 = !DILocation(line: 237, column: 16, scope: !1948)
!1951 = !DILocation(line: 237, column: 2, scope: !1945)
!1952 = !DILocation(line: 238, column: 22, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1948, file: !3, line: 238, column: 8)
!1954 = !DILocation(line: 238, column: 41, scope: !1953)
!1955 = !DILocation(line: 238, column: 8, scope: !1953)
!1956 = !DILocation(line: 238, column: 8, scope: !1948)
!1957 = !DILocation(line: 239, column: 6, scope: !1953)
!1958 = !DILocation(line: 238, column: 50, scope: !1953)
!1959 = !DILocation(line: 237, column: 35, scope: !1948)
!1960 = !DILocation(line: 237, column: 2, scope: !1948)
!1961 = distinct !{!1961, !1951, !1962}
!1962 = !DILocation(line: 239, column: 13, scope: !1945)
!1963 = !DILocation(line: 240, column: 7, scope: !1942)
!1964 = !DILocation(line: 229, column: 19, scope: !1924)
!1965 = !DILocation(line: 228, column: 48, scope: !1920)
!1966 = !DILocation(line: 228, column: 3, scope: !1920)
!1967 = distinct !{!1967, !1922, !1968}
!1968 = !DILocation(line: 240, column: 7, scope: !1915)
!1969 = !DILocation(line: 242, column: 3, scope: !1843)
!1970 = !DILocation(line: 243, column: 1, scope: !1843)
!1971 = distinct !DISubprogram(name: "rtx_addr_can_trap_p", scope: !3, file: !3, line: 375, type: !1736, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!1972 = !DILocalVariable(name: "x", arg: 1, scope: !1971, file: !3, line: 375, type: !1713)
!1973 = !DILocation(line: 375, column: 32, scope: !1971)
!1974 = !DILocation(line: 377, column: 33, scope: !1971)
!1975 = !DILocation(line: 377, column: 10, scope: !1971)
!1976 = !DILocation(line: 377, column: 3, scope: !1971)
!1977 = distinct !DISubprogram(name: "rtx_addr_can_trap_p_1", scope: !3, file: !3, line: 251, type: !1978, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!619, !1713, !711, !711, !5, !855}
!1980 = !DILocalVariable(name: "x", arg: 1, scope: !1977, file: !3, line: 251, type: !1713)
!1981 = !DILocation(line: 251, column: 34, scope: !1977)
!1982 = !DILocalVariable(name: "offset", arg: 2, scope: !1977, file: !3, line: 251, type: !711)
!1983 = !DILocation(line: 251, column: 51, scope: !1977)
!1984 = !DILocalVariable(name: "size", arg: 3, scope: !1977, file: !3, line: 251, type: !711)
!1985 = !DILocation(line: 251, column: 73, scope: !1977)
!1986 = !DILocalVariable(name: "mode", arg: 4, scope: !1977, file: !3, line: 252, type: !5)
!1987 = !DILocation(line: 252, column: 28, scope: !1977)
!1988 = !DILocalVariable(name: "unaligned_mems", arg: 5, scope: !1977, file: !3, line: 252, type: !855)
!1989 = !DILocation(line: 252, column: 39, scope: !1977)
!1990 = !DILocalVariable(name: "code", scope: !1977, file: !3, line: 254, type: !377)
!1991 = !DILocation(line: 254, column: 17, scope: !1977)
!1992 = !DILocation(line: 254, column: 24, scope: !1977)
!1993 = !DILocation(line: 274, column: 11, scope: !1977)
!1994 = !DILocation(line: 274, column: 3, scope: !1977)
!1995 = !DILocation(line: 277, column: 11, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 277, column: 11)
!1997 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 275, column: 5)
!1998 = !DILocation(line: 277, column: 11, scope: !1997)
!1999 = !DILocation(line: 278, column: 2, scope: !1996)
!2000 = !DILocation(line: 279, column: 12, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 279, column: 11)
!2002 = !DILocation(line: 279, column: 11, scope: !1997)
!2003 = !DILocalVariable(name: "decl", scope: !2004, file: !3, line: 281, type: !742)
!2004 = distinct !DILexicalBlock(scope: !2001, file: !3, line: 280, column: 2)
!2005 = !DILocation(line: 281, column: 9, scope: !2004)
!2006 = !DILocalVariable(name: "decl_size", scope: !2004, file: !3, line: 282, type: !711)
!2007 = !DILocation(line: 282, column: 18, scope: !2004)
!2008 = !DILocation(line: 284, column: 8, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 284, column: 8)
!2010 = !DILocation(line: 284, column: 15, scope: !2009)
!2011 = !DILocation(line: 284, column: 8, scope: !2004)
!2012 = !DILocation(line: 285, column: 6, scope: !2009)
!2013 = !DILocation(line: 286, column: 8, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 286, column: 8)
!2015 = !DILocation(line: 286, column: 13, scope: !2014)
!2016 = !DILocation(line: 286, column: 8, scope: !2004)
!2017 = !DILocation(line: 287, column: 13, scope: !2014)
!2018 = !DILocation(line: 287, column: 11, scope: !2014)
!2019 = !DILocation(line: 287, column: 6, scope: !2014)
!2020 = !DILocation(line: 288, column: 8, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 288, column: 8)
!2022 = !DILocation(line: 288, column: 13, scope: !2021)
!2023 = !DILocation(line: 288, column: 8, scope: !2004)
!2024 = !DILocation(line: 289, column: 13, scope: !2021)
!2025 = !DILocation(line: 289, column: 20, scope: !2021)
!2026 = !DILocation(line: 289, column: 6, scope: !2021)
!2027 = !DILocation(line: 293, column: 11, scope: !2004)
!2028 = !DILocation(line: 293, column: 9, scope: !2004)
!2029 = !DILocation(line: 297, column: 9, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 297, column: 8)
!2031 = !DILocation(line: 297, column: 8, scope: !2004)
!2032 = !DILocation(line: 298, column: 16, scope: !2030)
!2033 = !DILocation(line: 298, column: 6, scope: !2030)
!2034 = !DILocation(line: 299, column: 13, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 299, column: 13)
!2036 = !DILocation(line: 299, column: 27, scope: !2035)
!2037 = !DILocation(line: 299, column: 30, scope: !2035)
!2038 = !DILocation(line: 299, column: 13, scope: !2030)
!2039 = !DILocation(line: 300, column: 34, scope: !2035)
!2040 = !DILocation(line: 300, column: 19, scope: !2035)
!2041 = !DILocation(line: 301, column: 21, scope: !2035)
!2042 = !DILocation(line: 301, column: 7, scope: !2035)
!2043 = !DILocation(line: 300, column: 16, scope: !2035)
!2044 = !DILocation(line: 300, column: 6, scope: !2035)
!2045 = !DILocation(line: 303, column: 13, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 303, column: 13)
!2047 = !DILocation(line: 303, column: 30, scope: !2046)
!2048 = !DILocation(line: 303, column: 13, scope: !2035)
!2049 = !DILocation(line: 304, column: 18, scope: !2046)
!2050 = !DILocation(line: 304, column: 16, scope: !2046)
!2051 = !DILocation(line: 304, column: 6, scope: !2046)
!2052 = !DILocation(line: 305, column: 13, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 305, column: 13)
!2054 = !DILocation(line: 305, column: 13, scope: !2046)
!2055 = !DILocation(line: 306, column: 37, scope: !2053)
!2056 = !DILocation(line: 306, column: 18, scope: !2053)
!2057 = !DILocation(line: 306, column: 16, scope: !2053)
!2058 = !DILocation(line: 306, column: 6, scope: !2053)
!2059 = !DILocation(line: 308, column: 16, scope: !2053)
!2060 = !DILocation(line: 310, column: 12, scope: !2004)
!2061 = !DILocation(line: 310, column: 22, scope: !2004)
!2062 = !DILocation(line: 310, column: 29, scope: !2004)
!2063 = !DILocation(line: 310, column: 36, scope: !2004)
!2064 = !DILocation(line: 310, column: 43, scope: !2004)
!2065 = !DILocation(line: 310, column: 52, scope: !2004)
!2066 = !DILocation(line: 310, column: 50, scope: !2004)
!2067 = !DILocation(line: 310, column: 59, scope: !2004)
!2068 = !DILocation(line: 310, column: 57, scope: !2004)
!2069 = !DILocation(line: 310, column: 4, scope: !2004)
!2070 = !DILocation(line: 313, column: 7, scope: !1997)
!2071 = !DILocation(line: 316, column: 7, scope: !1997)
!2072 = !DILocation(line: 320, column: 11, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 320, column: 11)
!2074 = !DILocation(line: 320, column: 16, scope: !2073)
!2075 = !DILocation(line: 320, column: 13, scope: !2073)
!2076 = !DILocation(line: 320, column: 34, scope: !2073)
!2077 = !DILocation(line: 320, column: 37, scope: !2073)
!2078 = !DILocation(line: 320, column: 42, scope: !2073)
!2079 = !DILocation(line: 320, column: 39, scope: !2073)
!2080 = !DILocation(line: 321, column: 4, scope: !2073)
!2081 = !DILocation(line: 321, column: 7, scope: !2073)
!2082 = !DILocation(line: 321, column: 12, scope: !2073)
!2083 = !DILocation(line: 321, column: 9, scope: !2073)
!2084 = !DILocation(line: 323, column: 4, scope: !2073)
!2085 = !DILocation(line: 323, column: 8, scope: !2073)
!2086 = !DILocation(line: 323, column: 13, scope: !2073)
!2087 = !DILocation(line: 323, column: 10, scope: !2073)
!2088 = !DILocation(line: 323, column: 29, scope: !2073)
!2089 = !DILocation(line: 323, column: 32, scope: !2073)
!2090 = !DILocation(line: 320, column: 11, scope: !1997)
!2091 = !DILocation(line: 324, column: 2, scope: !2073)
!2092 = !DILocation(line: 326, column: 11, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 326, column: 11)
!2094 = !DILocation(line: 326, column: 21, scope: !2093)
!2095 = !DILocation(line: 327, column: 4, scope: !2093)
!2096 = !DILocation(line: 327, column: 7, scope: !2093)
!2097 = !DILocation(line: 327, column: 17, scope: !2093)
!2098 = !DILocation(line: 326, column: 11, scope: !1997)
!2099 = !DILocation(line: 328, column: 2, scope: !2093)
!2100 = !DILocation(line: 329, column: 7, scope: !1997)
!2101 = !DILocation(line: 332, column: 37, scope: !1997)
!2102 = !DILocation(line: 332, column: 50, scope: !1997)
!2103 = !DILocation(line: 332, column: 58, scope: !1997)
!2104 = !DILocation(line: 333, column: 9, scope: !1997)
!2105 = !DILocation(line: 333, column: 15, scope: !1997)
!2106 = !DILocation(line: 332, column: 14, scope: !1997)
!2107 = !DILocation(line: 332, column: 7, scope: !1997)
!2108 = !DILocation(line: 338, column: 11, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 338, column: 11)
!2110 = !DILocation(line: 338, column: 26, scope: !2109)
!2111 = !DILocation(line: 338, column: 23, scope: !2109)
!2112 = !DILocation(line: 338, column: 47, scope: !2109)
!2113 = !DILocation(line: 338, column: 50, scope: !2109)
!2114 = !DILocation(line: 338, column: 11, scope: !1997)
!2115 = !DILocation(line: 339, column: 2, scope: !2109)
!2116 = !DILocation(line: 344, column: 11, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 344, column: 11)
!2118 = !DILocation(line: 345, column: 4, scope: !2117)
!2119 = !DILocation(line: 345, column: 31, scope: !2117)
!2120 = !DILocation(line: 345, column: 44, scope: !2117)
!2121 = !DILocation(line: 345, column: 53, scope: !2117)
!2122 = !DILocation(line: 345, column: 51, scope: !2117)
!2123 = !DILocation(line: 346, column: 10, scope: !2117)
!2124 = !DILocation(line: 346, column: 16, scope: !2117)
!2125 = !DILocation(line: 346, column: 22, scope: !2117)
!2126 = !DILocation(line: 345, column: 8, scope: !2117)
!2127 = !DILocation(line: 344, column: 11, scope: !1997)
!2128 = !DILocation(line: 347, column: 2, scope: !2117)
!2129 = !DILocation(line: 349, column: 7, scope: !1997)
!2130 = !DILocation(line: 353, column: 37, scope: !1997)
!2131 = !DILocation(line: 353, column: 50, scope: !1997)
!2132 = !DILocation(line: 353, column: 58, scope: !1997)
!2133 = !DILocation(line: 354, column: 9, scope: !1997)
!2134 = !DILocation(line: 354, column: 15, scope: !1997)
!2135 = !DILocation(line: 353, column: 14, scope: !1997)
!2136 = !DILocation(line: 353, column: 7, scope: !1997)
!2137 = !DILocation(line: 361, column: 37, scope: !1997)
!2138 = !DILocation(line: 361, column: 50, scope: !1997)
!2139 = !DILocation(line: 361, column: 58, scope: !1997)
!2140 = !DILocation(line: 362, column: 9, scope: !1997)
!2141 = !DILocation(line: 362, column: 15, scope: !1997)
!2142 = !DILocation(line: 361, column: 14, scope: !1997)
!2143 = !DILocation(line: 361, column: 7, scope: !1997)
!2144 = !DILocation(line: 365, column: 7, scope: !1997)
!2145 = !DILocation(line: 369, column: 3, scope: !1977)
!2146 = !DILocation(line: 370, column: 1, scope: !1977)
!2147 = distinct !DISubprogram(name: "nonzero_address_p", scope: !3, file: !3, line: 383, type: !2148, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!855, !1713}
!2150 = !DILocalVariable(name: "x", arg: 1, scope: !2147, file: !3, line: 383, type: !1713)
!2151 = !DILocation(line: 383, column: 30, scope: !2147)
!2152 = !DILocalVariable(name: "code", scope: !2147, file: !3, line: 385, type: !1742)
!2153 = !DILocation(line: 385, column: 23, scope: !2147)
!2154 = !DILocation(line: 385, column: 30, scope: !2147)
!2155 = !DILocation(line: 387, column: 11, scope: !2147)
!2156 = !DILocation(line: 387, column: 3, scope: !2147)
!2157 = !DILocation(line: 390, column: 15, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 388, column: 5)
!2159 = !DILocation(line: 390, column: 14, scope: !2158)
!2160 = !DILocation(line: 390, column: 7, scope: !2158)
!2161 = !DILocation(line: 393, column: 7, scope: !2158)
!2162 = !DILocation(line: 397, column: 11, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 397, column: 11)
!2164 = !DILocation(line: 397, column: 16, scope: !2163)
!2165 = !DILocation(line: 397, column: 13, scope: !2163)
!2166 = !DILocation(line: 397, column: 34, scope: !2163)
!2167 = !DILocation(line: 397, column: 37, scope: !2163)
!2168 = !DILocation(line: 397, column: 42, scope: !2163)
!2169 = !DILocation(line: 397, column: 39, scope: !2163)
!2170 = !DILocation(line: 398, column: 4, scope: !2163)
!2171 = !DILocation(line: 398, column: 7, scope: !2163)
!2172 = !DILocation(line: 398, column: 12, scope: !2163)
!2173 = !DILocation(line: 398, column: 9, scope: !2163)
!2174 = !DILocation(line: 399, column: 4, scope: !2163)
!2175 = !DILocation(line: 399, column: 8, scope: !2163)
!2176 = !DILocation(line: 399, column: 13, scope: !2163)
!2177 = !DILocation(line: 399, column: 10, scope: !2163)
!2178 = !DILocation(line: 399, column: 29, scope: !2163)
!2179 = !DILocation(line: 399, column: 32, scope: !2163)
!2180 = !DILocation(line: 397, column: 11, scope: !2158)
!2181 = !DILocation(line: 400, column: 2, scope: !2163)
!2182 = !DILocation(line: 402, column: 11, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 402, column: 11)
!2184 = !DILocation(line: 402, column: 21, scope: !2183)
!2185 = !DILocation(line: 403, column: 4, scope: !2183)
!2186 = !DILocation(line: 403, column: 7, scope: !2183)
!2187 = !DILocation(line: 403, column: 17, scope: !2183)
!2188 = !DILocation(line: 402, column: 11, scope: !2158)
!2189 = !DILocation(line: 404, column: 2, scope: !2183)
!2190 = !DILocation(line: 405, column: 7, scope: !2158)
!2191 = !DILocation(line: 408, column: 33, scope: !2158)
!2192 = !DILocation(line: 408, column: 14, scope: !2158)
!2193 = !DILocation(line: 408, column: 7, scope: !2158)
!2194 = !DILocation(line: 411, column: 11, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 411, column: 11)
!2196 = !DILocation(line: 411, column: 11, scope: !2158)
!2197 = !DILocation(line: 412, column: 35, scope: !2195)
!2198 = !DILocation(line: 412, column: 16, scope: !2195)
!2199 = !DILocation(line: 412, column: 9, scope: !2195)
!2200 = !DILocation(line: 414, column: 16, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 414, column: 16)
!2202 = !DILocation(line: 414, column: 31, scope: !2201)
!2203 = !DILocation(line: 414, column: 28, scope: !2201)
!2204 = !DILocation(line: 415, column: 9, scope: !2201)
!2205 = !DILocation(line: 415, column: 12, scope: !2201)
!2206 = !DILocation(line: 414, column: 16, scope: !2195)
!2207 = !DILocation(line: 416, column: 2, scope: !2201)
!2208 = !DILocation(line: 417, column: 7, scope: !2158)
!2209 = !DILocation(line: 423, column: 11, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 423, column: 11)
!2211 = !DILocation(line: 424, column: 4, scope: !2210)
!2212 = !DILocation(line: 424, column: 7, scope: !2210)
!2213 = !DILocation(line: 424, column: 28, scope: !2210)
!2214 = !DILocation(line: 423, column: 11, scope: !2158)
!2215 = !DILocation(line: 425, column: 2, scope: !2210)
!2216 = !DILocation(line: 426, column: 33, scope: !2158)
!2217 = !DILocation(line: 426, column: 14, scope: !2158)
!2218 = !DILocation(line: 426, column: 7, scope: !2158)
!2219 = !DILocation(line: 430, column: 7, scope: !2158)
!2220 = !DILocation(line: 436, column: 33, scope: !2158)
!2221 = !DILocation(line: 436, column: 14, scope: !2158)
!2222 = !DILocation(line: 436, column: 7, scope: !2158)
!2223 = !DILocation(line: 439, column: 33, scope: !2158)
!2224 = !DILocation(line: 439, column: 14, scope: !2158)
!2225 = !DILocation(line: 439, column: 7, scope: !2158)
!2226 = !DILocation(line: 442, column: 7, scope: !2158)
!2227 = !DILocation(line: 446, column: 3, scope: !2147)
!2228 = !DILocation(line: 447, column: 1, scope: !2147)
!2229 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !2230, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!7, !1713}
!2232 = !DILocalVariable(name: "x", arg: 1, scope: !2229, file: !378, line: 1051, type: !1713)
!2233 = !DILocation(line: 1051, column: 22, scope: !2229)
!2234 = !DILocation(line: 1053, column: 10, scope: !2229)
!2235 = !DILocation(line: 1053, column: 3, scope: !2229)
!2236 = distinct !DISubprogram(name: "rtx_addr_varies_p", scope: !3, file: !3, line: 456, type: !1844, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2237 = !DILocalVariable(name: "x", arg: 1, scope: !2236, file: !3, line: 456, type: !1713)
!2238 = !DILocation(line: 456, column: 30, scope: !2236)
!2239 = !DILocalVariable(name: "for_alias", arg: 2, scope: !2236, file: !3, line: 456, type: !855)
!2240 = !DILocation(line: 456, column: 38, scope: !2236)
!2241 = !DILocalVariable(name: "code", scope: !2236, file: !3, line: 458, type: !377)
!2242 = !DILocation(line: 458, column: 17, scope: !2236)
!2243 = !DILocalVariable(name: "i", scope: !2236, file: !3, line: 459, type: !619)
!2244 = !DILocation(line: 459, column: 7, scope: !2236)
!2245 = !DILocalVariable(name: "fmt", scope: !2236, file: !3, line: 460, type: !648)
!2246 = !DILocation(line: 460, column: 15, scope: !2236)
!2247 = !DILocation(line: 462, column: 7, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 462, column: 7)
!2249 = !DILocation(line: 462, column: 9, scope: !2248)
!2250 = !DILocation(line: 462, column: 7, scope: !2236)
!2251 = !DILocation(line: 463, column: 5, scope: !2248)
!2252 = !DILocation(line: 465, column: 10, scope: !2236)
!2253 = !DILocation(line: 465, column: 8, scope: !2236)
!2254 = !DILocation(line: 466, column: 7, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 466, column: 7)
!2256 = !DILocation(line: 466, column: 12, scope: !2255)
!2257 = !DILocation(line: 466, column: 7, scope: !2236)
!2258 = !DILocation(line: 467, column: 12, scope: !2255)
!2259 = !DILocation(line: 467, column: 25, scope: !2255)
!2260 = !DILocation(line: 467, column: 36, scope: !2255)
!2261 = !DILocation(line: 467, column: 53, scope: !2255)
!2262 = !DILocation(line: 467, column: 66, scope: !2255)
!2263 = !DILocation(line: 467, column: 39, scope: !2255)
!2264 = !DILocation(line: 467, column: 5, scope: !2255)
!2265 = !DILocation(line: 469, column: 9, scope: !2236)
!2266 = !DILocation(line: 469, column: 7, scope: !2236)
!2267 = !DILocation(line: 470, column: 12, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 470, column: 3)
!2269 = !DILocation(line: 470, column: 34, scope: !2268)
!2270 = !DILocation(line: 470, column: 10, scope: !2268)
!2271 = !DILocation(line: 470, column: 8, scope: !2268)
!2272 = !DILocation(line: 470, column: 39, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 470, column: 3)
!2274 = !DILocation(line: 470, column: 41, scope: !2273)
!2275 = !DILocation(line: 470, column: 3, scope: !2268)
!2276 = !DILocation(line: 471, column: 9, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 471, column: 9)
!2278 = !DILocation(line: 471, column: 13, scope: !2277)
!2279 = !DILocation(line: 471, column: 16, scope: !2277)
!2280 = !DILocation(line: 471, column: 9, scope: !2273)
!2281 = !DILocation(line: 473, column: 25, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 473, column: 6)
!2283 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 472, column: 7)
!2284 = !DILocation(line: 473, column: 38, scope: !2282)
!2285 = !DILocation(line: 473, column: 6, scope: !2282)
!2286 = !DILocation(line: 473, column: 6, scope: !2283)
!2287 = !DILocation(line: 474, column: 4, scope: !2282)
!2288 = !DILocation(line: 475, column: 7, scope: !2283)
!2289 = !DILocation(line: 476, column: 14, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 476, column: 14)
!2291 = !DILocation(line: 476, column: 18, scope: !2290)
!2292 = !DILocation(line: 476, column: 21, scope: !2290)
!2293 = !DILocation(line: 476, column: 14, scope: !2277)
!2294 = !DILocalVariable(name: "j", scope: !2295, file: !3, line: 478, type: !619)
!2295 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 477, column: 7)
!2296 = !DILocation(line: 478, column: 6, scope: !2295)
!2297 = !DILocation(line: 479, column: 9, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 479, column: 2)
!2299 = !DILocation(line: 479, column: 7, scope: !2298)
!2300 = !DILocation(line: 479, column: 14, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 479, column: 2)
!2302 = !DILocation(line: 479, column: 18, scope: !2301)
!2303 = !DILocation(line: 479, column: 16, scope: !2301)
!2304 = !DILocation(line: 479, column: 2, scope: !2298)
!2305 = !DILocation(line: 480, column: 27, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2301, file: !3, line: 480, column: 8)
!2307 = !DILocation(line: 480, column: 46, scope: !2306)
!2308 = !DILocation(line: 480, column: 8, scope: !2306)
!2309 = !DILocation(line: 480, column: 8, scope: !2301)
!2310 = !DILocation(line: 481, column: 6, scope: !2306)
!2311 = !DILocation(line: 480, column: 55, scope: !2306)
!2312 = !DILocation(line: 479, column: 35, scope: !2301)
!2313 = !DILocation(line: 479, column: 2, scope: !2301)
!2314 = distinct !{!2314, !2304, !2315}
!2315 = !DILocation(line: 481, column: 13, scope: !2298)
!2316 = !DILocation(line: 482, column: 7, scope: !2295)
!2317 = !DILocation(line: 471, column: 19, scope: !2277)
!2318 = !DILocation(line: 470, column: 48, scope: !2273)
!2319 = !DILocation(line: 470, column: 3, scope: !2273)
!2320 = distinct !{!2320, !2275, !2321}
!2321 = !DILocation(line: 482, column: 7, scope: !2268)
!2322 = !DILocation(line: 483, column: 3, scope: !2236)
!2323 = !DILocation(line: 484, column: 1, scope: !2236)
!2324 = distinct !DISubprogram(name: "get_integer_term", scope: !3, file: !3, line: 492, type: !2325, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!711, !1713}
!2327 = !DILocalVariable(name: "x", arg: 1, scope: !2324, file: !3, line: 492, type: !1713)
!2328 = !DILocation(line: 492, column: 29, scope: !2324)
!2329 = !DILocation(line: 494, column: 7, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 494, column: 7)
!2331 = !DILocation(line: 494, column: 20, scope: !2330)
!2332 = !DILocation(line: 494, column: 7, scope: !2324)
!2333 = !DILocation(line: 495, column: 9, scope: !2330)
!2334 = !DILocation(line: 495, column: 7, scope: !2330)
!2335 = !DILocation(line: 495, column: 5, scope: !2330)
!2336 = !DILocation(line: 497, column: 7, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 497, column: 7)
!2338 = !DILocation(line: 497, column: 20, scope: !2337)
!2339 = !DILocation(line: 498, column: 7, scope: !2337)
!2340 = !DILocation(line: 498, column: 10, scope: !2337)
!2341 = !DILocation(line: 497, column: 7, scope: !2324)
!2342 = !DILocation(line: 499, column: 14, scope: !2337)
!2343 = !DILocation(line: 499, column: 12, scope: !2337)
!2344 = !DILocation(line: 499, column: 5, scope: !2337)
!2345 = !DILocation(line: 500, column: 7, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 500, column: 7)
!2347 = !DILocation(line: 500, column: 20, scope: !2346)
!2348 = !DILocation(line: 501, column: 7, scope: !2346)
!2349 = !DILocation(line: 501, column: 10, scope: !2346)
!2350 = !DILocation(line: 500, column: 7, scope: !2324)
!2351 = !DILocation(line: 502, column: 12, scope: !2346)
!2352 = !DILocation(line: 502, column: 5, scope: !2346)
!2353 = !DILocation(line: 503, column: 3, scope: !2324)
!2354 = !DILocation(line: 504, column: 1, scope: !2324)
!2355 = distinct !DISubprogram(name: "get_related_value", scope: !3, file: !3, line: 511, type: !2356, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!622, !1713}
!2358 = !DILocalVariable(name: "x", arg: 1, scope: !2355, file: !3, line: 511, type: !1713)
!2359 = !DILocation(line: 511, column: 30, scope: !2355)
!2360 = !DILocation(line: 513, column: 7, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 513, column: 7)
!2362 = !DILocation(line: 513, column: 20, scope: !2361)
!2363 = !DILocation(line: 513, column: 7, scope: !2355)
!2364 = !DILocation(line: 514, column: 5, scope: !2361)
!2365 = !DILocation(line: 515, column: 7, scope: !2355)
!2366 = !DILocation(line: 515, column: 5, scope: !2355)
!2367 = !DILocation(line: 516, column: 7, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 516, column: 7)
!2369 = !DILocation(line: 516, column: 20, scope: !2368)
!2370 = !DILocation(line: 517, column: 7, scope: !2368)
!2371 = !DILocation(line: 517, column: 10, scope: !2368)
!2372 = !DILocation(line: 516, column: 7, scope: !2355)
!2373 = !DILocation(line: 518, column: 12, scope: !2368)
!2374 = !DILocation(line: 518, column: 5, scope: !2368)
!2375 = !DILocation(line: 519, column: 12, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 519, column: 12)
!2377 = !DILocation(line: 519, column: 25, scope: !2376)
!2378 = !DILocation(line: 520, column: 5, scope: !2376)
!2379 = !DILocation(line: 520, column: 8, scope: !2376)
!2380 = !DILocation(line: 519, column: 12, scope: !2368)
!2381 = !DILocation(line: 521, column: 12, scope: !2376)
!2382 = !DILocation(line: 521, column: 5, scope: !2376)
!2383 = !DILocation(line: 522, column: 3, scope: !2355)
!2384 = !DILocation(line: 523, column: 1, scope: !2355)
!2385 = distinct !DISubprogram(name: "offset_within_block_p", scope: !3, file: !3, line: 529, type: !2386, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!855, !1713, !711}
!2388 = !DILocalVariable(name: "symbol", arg: 1, scope: !2385, file: !3, line: 529, type: !1713)
!2389 = !DILocation(line: 529, column: 34, scope: !2385)
!2390 = !DILocalVariable(name: "offset", arg: 2, scope: !2385, file: !3, line: 529, type: !711)
!2391 = !DILocation(line: 529, column: 56, scope: !2385)
!2392 = !DILocalVariable(name: "decl", scope: !2385, file: !3, line: 531, type: !742)
!2393 = !DILocation(line: 531, column: 8, scope: !2385)
!2394 = !DILocation(line: 533, column: 7, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 533, column: 7)
!2396 = !DILocation(line: 533, column: 25, scope: !2395)
!2397 = !DILocation(line: 533, column: 7, scope: !2385)
!2398 = !DILocation(line: 534, column: 5, scope: !2395)
!2399 = !DILocation(line: 536, column: 7, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 536, column: 7)
!2401 = !DILocation(line: 536, column: 14, scope: !2400)
!2402 = !DILocation(line: 536, column: 7, scope: !2385)
!2403 = !DILocation(line: 537, column: 5, scope: !2400)
!2404 = !DILocation(line: 539, column: 7, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 539, column: 7)
!2406 = !DILocation(line: 539, column: 14, scope: !2405)
!2407 = !DILocation(line: 539, column: 7, scope: !2385)
!2408 = !DILocation(line: 541, column: 11, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 541, column: 11)
!2410 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 540, column: 5)
!2411 = !DILocation(line: 542, column: 4, scope: !2409)
!2412 = !DILocation(line: 542, column: 7, scope: !2409)
!2413 = !DILocation(line: 542, column: 22, scope: !2409)
!2414 = !DILocation(line: 542, column: 16, scope: !2409)
!2415 = !DILocation(line: 542, column: 14, scope: !2409)
!2416 = !DILocation(line: 541, column: 11, scope: !2410)
!2417 = !DILocation(line: 543, column: 2, scope: !2409)
!2418 = !DILocation(line: 545, column: 14, scope: !2410)
!2419 = !DILocation(line: 545, column: 12, scope: !2410)
!2420 = !DILocation(line: 546, column: 11, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 546, column: 11)
!2422 = !DILocation(line: 546, column: 16, scope: !2421)
!2423 = !DILocation(line: 546, column: 19, scope: !2421)
!2424 = !DILocation(line: 546, column: 47, scope: !2421)
!2425 = !DILocation(line: 546, column: 28, scope: !2421)
!2426 = !DILocation(line: 546, column: 26, scope: !2421)
!2427 = !DILocation(line: 546, column: 11, scope: !2410)
!2428 = !DILocation(line: 547, column: 2, scope: !2421)
!2429 = !DILocation(line: 548, column: 5, scope: !2410)
!2430 = !DILocation(line: 550, column: 7, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 550, column: 7)
!2432 = !DILocation(line: 551, column: 7, scope: !2431)
!2433 = !DILocation(line: 551, column: 10, scope: !2431)
!2434 = !DILocation(line: 552, column: 7, scope: !2431)
!2435 = !DILocation(line: 552, column: 10, scope: !2431)
!2436 = !DILocation(line: 552, column: 43, scope: !2431)
!2437 = !DILocation(line: 553, column: 7, scope: !2431)
!2438 = !DILocation(line: 553, column: 36, scope: !2431)
!2439 = !DILocation(line: 553, column: 45, scope: !2431)
!2440 = !DILocation(line: 553, column: 43, scope: !2431)
!2441 = !DILocation(line: 554, column: 31, scope: !2431)
!2442 = !DILocation(line: 554, column: 58, scope: !2431)
!2443 = !DILocation(line: 554, column: 4, scope: !2431)
!2444 = !DILocation(line: 550, column: 7, scope: !2385)
!2445 = !DILocation(line: 555, column: 5, scope: !2431)
!2446 = !DILocation(line: 557, column: 3, scope: !2385)
!2447 = !DILocation(line: 558, column: 1, scope: !2385)
!2448 = distinct !DISubprogram(name: "split_const", scope: !3, file: !3, line: 564, type: !2449, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{null, !622, !1697, !1697}
!2451 = !DILocalVariable(name: "x", arg: 1, scope: !2448, file: !3, line: 564, type: !622)
!2452 = !DILocation(line: 564, column: 18, scope: !2448)
!2453 = !DILocalVariable(name: "base_out", arg: 2, scope: !2448, file: !3, line: 564, type: !1697)
!2454 = !DILocation(line: 564, column: 26, scope: !2448)
!2455 = !DILocalVariable(name: "offset_out", arg: 3, scope: !2448, file: !3, line: 564, type: !1697)
!2456 = !DILocation(line: 564, column: 41, scope: !2448)
!2457 = !DILocation(line: 566, column: 7, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 566, column: 7)
!2459 = !DILocation(line: 566, column: 20, scope: !2458)
!2460 = !DILocation(line: 566, column: 7, scope: !2448)
!2461 = !DILocation(line: 568, column: 11, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 567, column: 5)
!2463 = !DILocation(line: 568, column: 9, scope: !2462)
!2464 = !DILocation(line: 569, column: 11, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 569, column: 11)
!2466 = !DILocation(line: 569, column: 24, scope: !2465)
!2467 = !DILocation(line: 569, column: 32, scope: !2465)
!2468 = !DILocation(line: 569, column: 35, scope: !2465)
!2469 = !DILocation(line: 569, column: 11, scope: !2462)
!2470 = !DILocation(line: 571, column: 16, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 570, column: 2)
!2472 = !DILocation(line: 571, column: 5, scope: !2471)
!2473 = !DILocation(line: 571, column: 14, scope: !2471)
!2474 = !DILocation(line: 572, column: 18, scope: !2471)
!2475 = !DILocation(line: 572, column: 5, scope: !2471)
!2476 = !DILocation(line: 572, column: 16, scope: !2471)
!2477 = !DILocation(line: 573, column: 4, scope: !2471)
!2478 = !DILocation(line: 575, column: 5, scope: !2462)
!2479 = !DILocation(line: 576, column: 15, scope: !2448)
!2480 = !DILocation(line: 576, column: 4, scope: !2448)
!2481 = !DILocation(line: 576, column: 13, scope: !2448)
!2482 = !DILocation(line: 577, column: 17, scope: !2448)
!2483 = !DILocation(line: 577, column: 4, scope: !2448)
!2484 = !DILocation(line: 577, column: 15, scope: !2448)
!2485 = !DILocation(line: 578, column: 1, scope: !2448)
!2486 = distinct !DISubprogram(name: "count_occurrences", scope: !3, file: !3, line: 584, type: !2487, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!619, !1713, !1713, !619}
!2489 = !DILocalVariable(name: "x", arg: 1, scope: !2486, file: !3, line: 584, type: !1713)
!2490 = !DILocation(line: 584, column: 30, scope: !2486)
!2491 = !DILocalVariable(name: "find", arg: 2, scope: !2486, file: !3, line: 584, type: !1713)
!2492 = !DILocation(line: 584, column: 43, scope: !2486)
!2493 = !DILocalVariable(name: "count_dest", arg: 3, scope: !2486, file: !3, line: 584, type: !619)
!2494 = !DILocation(line: 584, column: 53, scope: !2486)
!2495 = !DILocalVariable(name: "i", scope: !2486, file: !3, line: 586, type: !619)
!2496 = !DILocation(line: 586, column: 7, scope: !2486)
!2497 = !DILocalVariable(name: "j", scope: !2486, file: !3, line: 586, type: !619)
!2498 = !DILocation(line: 586, column: 10, scope: !2486)
!2499 = !DILocalVariable(name: "code", scope: !2486, file: !3, line: 587, type: !377)
!2500 = !DILocation(line: 587, column: 17, scope: !2486)
!2501 = !DILocalVariable(name: "format_ptr", scope: !2486, file: !3, line: 588, type: !648)
!2502 = !DILocation(line: 588, column: 15, scope: !2486)
!2503 = !DILocalVariable(name: "count", scope: !2486, file: !3, line: 589, type: !619)
!2504 = !DILocation(line: 589, column: 7, scope: !2486)
!2505 = !DILocation(line: 591, column: 7, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 591, column: 7)
!2507 = !DILocation(line: 591, column: 12, scope: !2506)
!2508 = !DILocation(line: 591, column: 9, scope: !2506)
!2509 = !DILocation(line: 591, column: 7, scope: !2486)
!2510 = !DILocation(line: 592, column: 5, scope: !2506)
!2511 = !DILocation(line: 594, column: 10, scope: !2486)
!2512 = !DILocation(line: 594, column: 8, scope: !2486)
!2513 = !DILocation(line: 596, column: 11, scope: !2486)
!2514 = !DILocation(line: 596, column: 3, scope: !2486)
!2515 = !DILocation(line: 607, column: 7, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 597, column: 5)
!2517 = !DILocation(line: 610, column: 34, scope: !2516)
!2518 = !DILocation(line: 610, column: 47, scope: !2516)
!2519 = !DILocation(line: 610, column: 53, scope: !2516)
!2520 = !DILocation(line: 610, column: 15, scope: !2516)
!2521 = !DILocation(line: 610, column: 13, scope: !2516)
!2522 = !DILocation(line: 611, column: 11, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 611, column: 11)
!2524 = !DILocation(line: 611, column: 11, scope: !2516)
!2525 = !DILocation(line: 612, column: 30, scope: !2523)
!2526 = !DILocation(line: 612, column: 43, scope: !2523)
!2527 = !DILocation(line: 612, column: 49, scope: !2523)
!2528 = !DILocation(line: 612, column: 11, scope: !2523)
!2529 = !DILocation(line: 612, column: 8, scope: !2523)
!2530 = !DILocation(line: 612, column: 2, scope: !2523)
!2531 = !DILocation(line: 613, column: 14, scope: !2516)
!2532 = !DILocation(line: 613, column: 7, scope: !2516)
!2533 = !DILocation(line: 616, column: 11, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 616, column: 11)
!2535 = !DILocation(line: 616, column: 24, scope: !2534)
!2536 = !DILocation(line: 616, column: 40, scope: !2534)
!2537 = !DILocation(line: 616, column: 43, scope: !2534)
!2538 = !DILocation(line: 616, column: 27, scope: !2534)
!2539 = !DILocation(line: 616, column: 11, scope: !2516)
!2540 = !DILocation(line: 617, column: 2, scope: !2534)
!2541 = !DILocation(line: 618, column: 7, scope: !2516)
!2542 = !DILocation(line: 621, column: 11, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 621, column: 11)
!2544 = !DILocation(line: 621, column: 27, scope: !2543)
!2545 = !DILocation(line: 621, column: 24, scope: !2543)
!2546 = !DILocation(line: 621, column: 32, scope: !2543)
!2547 = !DILocation(line: 621, column: 37, scope: !2543)
!2548 = !DILocation(line: 621, column: 11, scope: !2516)
!2549 = !DILocation(line: 622, column: 28, scope: !2543)
!2550 = !DILocation(line: 622, column: 41, scope: !2543)
!2551 = !DILocation(line: 622, column: 47, scope: !2543)
!2552 = !DILocation(line: 622, column: 9, scope: !2543)
!2553 = !DILocation(line: 622, column: 2, scope: !2543)
!2554 = !DILocation(line: 623, column: 7, scope: !2516)
!2555 = !DILocation(line: 626, column: 7, scope: !2516)
!2556 = !DILocation(line: 629, column: 16, scope: !2486)
!2557 = !DILocation(line: 629, column: 14, scope: !2486)
!2558 = !DILocation(line: 630, column: 9, scope: !2486)
!2559 = !DILocation(line: 632, column: 10, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 632, column: 3)
!2561 = !DILocation(line: 632, column: 8, scope: !2560)
!2562 = !DILocation(line: 632, column: 15, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 632, column: 3)
!2564 = !DILocation(line: 632, column: 19, scope: !2563)
!2565 = !DILocation(line: 632, column: 17, scope: !2563)
!2566 = !DILocation(line: 632, column: 3, scope: !2560)
!2567 = !DILocation(line: 634, column: 26, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 633, column: 5)
!2569 = !DILocation(line: 634, column: 15, scope: !2568)
!2570 = !DILocation(line: 634, column: 7, scope: !2568)
!2571 = !DILocation(line: 637, column: 32, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 635, column: 2)
!2573 = !DILocation(line: 637, column: 45, scope: !2572)
!2574 = !DILocation(line: 637, column: 51, scope: !2572)
!2575 = !DILocation(line: 637, column: 13, scope: !2572)
!2576 = !DILocation(line: 637, column: 10, scope: !2572)
!2577 = !DILocation(line: 638, column: 4, scope: !2572)
!2578 = !DILocation(line: 641, column: 11, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 641, column: 4)
!2580 = !DILocation(line: 641, column: 9, scope: !2579)
!2581 = !DILocation(line: 641, column: 16, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 641, column: 4)
!2583 = !DILocation(line: 641, column: 20, scope: !2582)
!2584 = !DILocation(line: 641, column: 18, scope: !2582)
!2585 = !DILocation(line: 641, column: 4, scope: !2579)
!2586 = !DILocation(line: 642, column: 34, scope: !2582)
!2587 = !DILocation(line: 642, column: 53, scope: !2582)
!2588 = !DILocation(line: 642, column: 59, scope: !2582)
!2589 = !DILocation(line: 642, column: 15, scope: !2582)
!2590 = !DILocation(line: 642, column: 12, scope: !2582)
!2591 = !DILocation(line: 642, column: 6, scope: !2582)
!2592 = !DILocation(line: 641, column: 37, scope: !2582)
!2593 = !DILocation(line: 641, column: 4, scope: !2582)
!2594 = distinct !{!2594, !2585, !2595}
!2595 = !DILocation(line: 642, column: 69, scope: !2579)
!2596 = !DILocation(line: 643, column: 4, scope: !2572)
!2597 = !DILocation(line: 645, column: 5, scope: !2568)
!2598 = !DILocation(line: 632, column: 43, scope: !2563)
!2599 = !DILocation(line: 632, column: 3, scope: !2563)
!2600 = distinct !{!2600, !2566, !2601}
!2601 = !DILocation(line: 645, column: 5, scope: !2560)
!2602 = !DILocation(line: 646, column: 10, scope: !2486)
!2603 = !DILocation(line: 646, column: 3, scope: !2486)
!2604 = !DILocation(line: 647, column: 1, scope: !2486)
!2605 = distinct !DISubprogram(name: "reg_mentioned_p", scope: !3, file: !3, line: 655, type: !2606, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!619, !1713, !1713}
!2608 = !DILocalVariable(name: "reg", arg: 1, scope: !2605, file: !3, line: 655, type: !1713)
!2609 = !DILocation(line: 655, column: 28, scope: !2605)
!2610 = !DILocalVariable(name: "in", arg: 2, scope: !2605, file: !3, line: 655, type: !1713)
!2611 = !DILocation(line: 655, column: 43, scope: !2605)
!2612 = !DILocalVariable(name: "fmt", scope: !2605, file: !3, line: 657, type: !648)
!2613 = !DILocation(line: 657, column: 15, scope: !2605)
!2614 = !DILocalVariable(name: "i", scope: !2605, file: !3, line: 658, type: !619)
!2615 = !DILocation(line: 658, column: 7, scope: !2605)
!2616 = !DILocalVariable(name: "code", scope: !2605, file: !3, line: 659, type: !377)
!2617 = !DILocation(line: 659, column: 17, scope: !2605)
!2618 = !DILocation(line: 661, column: 7, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 661, column: 7)
!2620 = !DILocation(line: 661, column: 10, scope: !2619)
!2621 = !DILocation(line: 661, column: 7, scope: !2605)
!2622 = !DILocation(line: 662, column: 5, scope: !2619)
!2623 = !DILocation(line: 664, column: 7, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 664, column: 7)
!2625 = !DILocation(line: 664, column: 14, scope: !2624)
!2626 = !DILocation(line: 664, column: 11, scope: !2624)
!2627 = !DILocation(line: 664, column: 7, scope: !2605)
!2628 = !DILocation(line: 665, column: 5, scope: !2624)
!2629 = !DILocation(line: 667, column: 7, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 667, column: 7)
!2631 = !DILocation(line: 667, column: 21, scope: !2630)
!2632 = !DILocation(line: 667, column: 7, scope: !2605)
!2633 = !DILocation(line: 668, column: 12, scope: !2630)
!2634 = !DILocation(line: 668, column: 19, scope: !2630)
!2635 = !DILocation(line: 668, column: 16, scope: !2630)
!2636 = !DILocation(line: 668, column: 5, scope: !2630)
!2637 = !DILocation(line: 670, column: 10, scope: !2605)
!2638 = !DILocation(line: 670, column: 8, scope: !2605)
!2639 = !DILocation(line: 672, column: 11, scope: !2605)
!2640 = !DILocation(line: 672, column: 3, scope: !2605)
!2641 = !DILocation(line: 676, column: 14, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 673, column: 5)
!2643 = !DILocation(line: 676, column: 26, scope: !2642)
!2644 = !DILocation(line: 676, column: 29, scope: !2642)
!2645 = !DILocation(line: 676, column: 43, scope: !2642)
!2646 = !DILocation(line: 676, column: 40, scope: !2642)
!2647 = !DILocation(line: 0, scope: !2642)
!2648 = !DILocation(line: 676, column: 7, scope: !2642)
!2649 = !DILocation(line: 683, column: 7, scope: !2642)
!2650 = !DILocation(line: 690, column: 7, scope: !2642)
!2651 = !DILocation(line: 693, column: 7, scope: !2642)
!2652 = !DILocation(line: 696, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 696, column: 7)
!2654 = !DILocation(line: 696, column: 25, scope: !2653)
!2655 = !DILocation(line: 696, column: 22, scope: !2653)
!2656 = !DILocation(line: 696, column: 30, scope: !2653)
!2657 = !DILocation(line: 696, column: 46, scope: !2653)
!2658 = !DILocation(line: 696, column: 51, scope: !2653)
!2659 = !DILocation(line: 696, column: 33, scope: !2653)
!2660 = !DILocation(line: 696, column: 7, scope: !2605)
!2661 = !DILocation(line: 697, column: 5, scope: !2653)
!2662 = !DILocation(line: 699, column: 9, scope: !2605)
!2663 = !DILocation(line: 699, column: 7, scope: !2605)
!2664 = !DILocation(line: 701, column: 12, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 701, column: 3)
!2666 = !DILocation(line: 701, column: 34, scope: !2665)
!2667 = !DILocation(line: 701, column: 10, scope: !2665)
!2668 = !DILocation(line: 701, column: 8, scope: !2665)
!2669 = !DILocation(line: 701, column: 39, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 701, column: 3)
!2671 = !DILocation(line: 701, column: 41, scope: !2670)
!2672 = !DILocation(line: 701, column: 3, scope: !2665)
!2673 = !DILocation(line: 703, column: 11, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 703, column: 11)
!2675 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 702, column: 5)
!2676 = !DILocation(line: 703, column: 15, scope: !2674)
!2677 = !DILocation(line: 703, column: 18, scope: !2674)
!2678 = !DILocation(line: 703, column: 11, scope: !2675)
!2679 = !DILocalVariable(name: "j", scope: !2680, file: !3, line: 705, type: !619)
!2680 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 704, column: 2)
!2681 = !DILocation(line: 705, column: 8, scope: !2680)
!2682 = !DILocation(line: 706, column: 13, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 706, column: 4)
!2684 = !DILocation(line: 706, column: 29, scope: !2683)
!2685 = !DILocation(line: 706, column: 11, scope: !2683)
!2686 = !DILocation(line: 706, column: 9, scope: !2683)
!2687 = !DILocation(line: 706, column: 34, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 706, column: 4)
!2689 = !DILocation(line: 706, column: 36, scope: !2688)
!2690 = !DILocation(line: 706, column: 4, scope: !2683)
!2691 = !DILocation(line: 707, column: 27, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 707, column: 10)
!2693 = !DILocation(line: 707, column: 32, scope: !2692)
!2694 = !DILocation(line: 707, column: 10, scope: !2692)
!2695 = !DILocation(line: 707, column: 10, scope: !2688)
!2696 = !DILocation(line: 708, column: 8, scope: !2692)
!2697 = !DILocation(line: 707, column: 50, scope: !2692)
!2698 = !DILocation(line: 706, column: 43, scope: !2688)
!2699 = !DILocation(line: 706, column: 4, scope: !2688)
!2700 = distinct !{!2700, !2690, !2701}
!2701 = !DILocation(line: 708, column: 15, scope: !2683)
!2702 = !DILocation(line: 709, column: 2, scope: !2680)
!2703 = !DILocation(line: 710, column: 16, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 710, column: 16)
!2705 = !DILocation(line: 710, column: 20, scope: !2704)
!2706 = !DILocation(line: 710, column: 23, scope: !2704)
!2707 = !DILocation(line: 711, column: 9, scope: !2704)
!2708 = !DILocation(line: 711, column: 29, scope: !2704)
!2709 = !DILocation(line: 711, column: 34, scope: !2704)
!2710 = !DILocation(line: 711, column: 12, scope: !2704)
!2711 = !DILocation(line: 710, column: 16, scope: !2674)
!2712 = !DILocation(line: 712, column: 2, scope: !2704)
!2713 = !DILocation(line: 713, column: 5, scope: !2675)
!2714 = !DILocation(line: 701, column: 48, scope: !2670)
!2715 = !DILocation(line: 701, column: 3, scope: !2670)
!2716 = distinct !{!2716, !2672, !2717}
!2717 = !DILocation(line: 713, column: 5, scope: !2665)
!2718 = !DILocation(line: 714, column: 3, scope: !2605)
!2719 = !DILocation(line: 715, column: 1, scope: !2605)
!2720 = distinct !DISubprogram(name: "no_labels_between_p", scope: !3, file: !3, line: 721, type: !2606, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2721 = !DILocalVariable(name: "beg", arg: 1, scope: !2720, file: !3, line: 721, type: !1713)
!2722 = !DILocation(line: 721, column: 32, scope: !2720)
!2723 = !DILocalVariable(name: "end", arg: 2, scope: !2720, file: !3, line: 721, type: !1713)
!2724 = !DILocation(line: 721, column: 47, scope: !2720)
!2725 = !DILocalVariable(name: "p", scope: !2720, file: !3, line: 723, type: !622)
!2726 = !DILocation(line: 723, column: 7, scope: !2720)
!2727 = !DILocation(line: 724, column: 7, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 724, column: 7)
!2729 = !DILocation(line: 724, column: 14, scope: !2728)
!2730 = !DILocation(line: 724, column: 11, scope: !2728)
!2731 = !DILocation(line: 724, column: 7, scope: !2720)
!2732 = !DILocation(line: 725, column: 5, scope: !2728)
!2733 = !DILocation(line: 726, column: 12, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 726, column: 3)
!2735 = !DILocation(line: 726, column: 10, scope: !2734)
!2736 = !DILocation(line: 726, column: 8, scope: !2734)
!2737 = !DILocation(line: 726, column: 29, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 726, column: 3)
!2739 = !DILocation(line: 726, column: 34, scope: !2738)
!2740 = !DILocation(line: 726, column: 31, scope: !2738)
!2741 = !DILocation(line: 726, column: 3, scope: !2734)
!2742 = !DILocation(line: 727, column: 9, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 727, column: 9)
!2744 = !DILocation(line: 727, column: 9, scope: !2738)
!2745 = !DILocation(line: 728, column: 7, scope: !2743)
!2746 = !DILocation(line: 726, column: 43, scope: !2738)
!2747 = !DILocation(line: 726, column: 41, scope: !2738)
!2748 = !DILocation(line: 726, column: 3, scope: !2738)
!2749 = distinct !{!2749, !2741, !2750}
!2750 = !DILocation(line: 728, column: 14, scope: !2734)
!2751 = !DILocation(line: 729, column: 3, scope: !2720)
!2752 = !DILocation(line: 730, column: 1, scope: !2720)
!2753 = distinct !DISubprogram(name: "reg_used_between_p", scope: !3, file: !3, line: 736, type: !2754, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!619, !1713, !1713, !1713}
!2756 = !DILocalVariable(name: "reg", arg: 1, scope: !2753, file: !3, line: 736, type: !1713)
!2757 = !DILocation(line: 736, column: 31, scope: !2753)
!2758 = !DILocalVariable(name: "from_insn", arg: 2, scope: !2753, file: !3, line: 736, type: !1713)
!2759 = !DILocation(line: 736, column: 46, scope: !2753)
!2760 = !DILocalVariable(name: "to_insn", arg: 3, scope: !2753, file: !3, line: 736, type: !1713)
!2761 = !DILocation(line: 736, column: 67, scope: !2753)
!2762 = !DILocalVariable(name: "insn", scope: !2753, file: !3, line: 738, type: !622)
!2763 = !DILocation(line: 738, column: 7, scope: !2753)
!2764 = !DILocation(line: 740, column: 7, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 740, column: 7)
!2766 = !DILocation(line: 740, column: 20, scope: !2765)
!2767 = !DILocation(line: 740, column: 17, scope: !2765)
!2768 = !DILocation(line: 740, column: 7, scope: !2753)
!2769 = !DILocation(line: 741, column: 5, scope: !2765)
!2770 = !DILocation(line: 743, column: 15, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 743, column: 3)
!2772 = !DILocation(line: 743, column: 13, scope: !2771)
!2773 = !DILocation(line: 743, column: 8, scope: !2771)
!2774 = !DILocation(line: 743, column: 38, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 743, column: 3)
!2776 = !DILocation(line: 743, column: 46, scope: !2775)
!2777 = !DILocation(line: 743, column: 43, scope: !2775)
!2778 = !DILocation(line: 743, column: 3, scope: !2771)
!2779 = !DILocation(line: 744, column: 9, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 744, column: 9)
!2781 = !DILocation(line: 745, column: 2, scope: !2780)
!2782 = !DILocation(line: 745, column: 31, scope: !2780)
!2783 = !DILocation(line: 745, column: 36, scope: !2780)
!2784 = !DILocation(line: 745, column: 6, scope: !2780)
!2785 = !DILocation(line: 746, column: 5, scope: !2780)
!2786 = !DILocation(line: 746, column: 9, scope: !2780)
!2787 = !DILocation(line: 746, column: 23, scope: !2780)
!2788 = !DILocation(line: 746, column: 43, scope: !2780)
!2789 = !DILocation(line: 746, column: 54, scope: !2780)
!2790 = !DILocation(line: 746, column: 26, scope: !2780)
!2791 = !DILocation(line: 744, column: 9, scope: !2775)
!2792 = !DILocation(line: 747, column: 7, scope: !2780)
!2793 = !DILocation(line: 746, column: 59, scope: !2780)
!2794 = !DILocation(line: 743, column: 62, scope: !2775)
!2795 = !DILocation(line: 743, column: 60, scope: !2775)
!2796 = !DILocation(line: 743, column: 3, scope: !2775)
!2797 = distinct !{!2797, !2778, !2798}
!2798 = !DILocation(line: 747, column: 14, scope: !2771)
!2799 = !DILocation(line: 748, column: 3, scope: !2753)
!2800 = !DILocation(line: 749, column: 1, scope: !2753)
!2801 = distinct !DISubprogram(name: "reg_overlap_mentioned_p", scope: !3, file: !3, line: 1338, type: !2606, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2802 = !DILocalVariable(name: "x", arg: 1, scope: !2801, file: !3, line: 1338, type: !1713)
!2803 = !DILocation(line: 1338, column: 36, scope: !2801)
!2804 = !DILocalVariable(name: "in", arg: 2, scope: !2801, file: !3, line: 1338, type: !1713)
!2805 = !DILocation(line: 1338, column: 49, scope: !2801)
!2806 = !DILocalVariable(name: "regno", scope: !2801, file: !3, line: 1340, type: !7)
!2807 = !DILocation(line: 1340, column: 16, scope: !2801)
!2808 = !DILocalVariable(name: "endregno", scope: !2801, file: !3, line: 1340, type: !7)
!2809 = !DILocation(line: 1340, column: 23, scope: !2801)
!2810 = !DILocation(line: 1345, column: 7, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1345, column: 7)
!2812 = !DILocation(line: 1345, column: 7, scope: !2801)
!2813 = !DILocation(line: 1346, column: 5, scope: !2811)
!2814 = !DILabel(scope: !2801, name: "recurse", file: !3, line: 1348)
!2815 = !DILocation(line: 1348, column: 2, scope: !2801)
!2816 = !DILocation(line: 1349, column: 11, scope: !2801)
!2817 = !DILocation(line: 1349, column: 3, scope: !2801)
!2818 = !DILocation(line: 1355, column: 11, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1350, column: 5)
!2820 = !DILocation(line: 1355, column: 9, scope: !2819)
!2821 = !DILocation(line: 1356, column: 7, scope: !2819)
!2822 = !DILocation(line: 1359, column: 15, scope: !2819)
!2823 = !DILocation(line: 1359, column: 13, scope: !2819)
!2824 = !DILocation(line: 1360, column: 11, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 1360, column: 11)
!2826 = !DILocation(line: 1360, column: 17, scope: !2825)
!2827 = !DILocation(line: 1360, column: 11, scope: !2819)
!2828 = !DILocation(line: 1361, column: 24, scope: !2825)
!2829 = !DILocation(line: 1361, column: 10, scope: !2825)
!2830 = !DILocation(line: 1361, column: 8, scope: !2825)
!2831 = !DILocation(line: 1361, column: 2, scope: !2825)
!2832 = !DILocation(line: 1362, column: 18, scope: !2819)
!2833 = !DILocation(line: 1362, column: 27, scope: !2819)
!2834 = !DILocation(line: 1362, column: 33, scope: !2819)
!2835 = !DILocation(line: 1363, column: 22, scope: !2819)
!2836 = !DILocation(line: 1363, column: 8, scope: !2819)
!2837 = !DILocation(line: 1362, column: 24, scope: !2819)
!2838 = !DILocation(line: 1362, column: 16, scope: !2819)
!2839 = !DILocation(line: 1364, column: 7, scope: !2819)
!2840 = !DILocation(line: 1367, column: 15, scope: !2819)
!2841 = !DILocation(line: 1367, column: 13, scope: !2819)
!2842 = !DILocation(line: 1368, column: 18, scope: !2819)
!2843 = !DILocation(line: 1368, column: 16, scope: !2819)
!2844 = !DILocation(line: 1368, column: 7, scope: !2819)
!2845 = !DILabel(scope: !2819, name: "do_reg", file: !3, line: 1369)
!2846 = !DILocation(line: 1369, column: 5, scope: !2819)
!2847 = !DILocation(line: 1370, column: 33, scope: !2819)
!2848 = !DILocation(line: 1370, column: 40, scope: !2819)
!2849 = !DILocation(line: 1370, column: 50, scope: !2819)
!2850 = !DILocation(line: 1370, column: 14, scope: !2819)
!2851 = !DILocation(line: 1370, column: 7, scope: !2819)
!2852 = !DILocalVariable(name: "fmt", scope: !2853, file: !3, line: 1374, type: !648)
!2853 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 1373, column: 7)
!2854 = !DILocation(line: 1374, column: 14, scope: !2853)
!2855 = !DILocalVariable(name: "i", scope: !2853, file: !3, line: 1375, type: !619)
!2856 = !DILocation(line: 1375, column: 6, scope: !2853)
!2857 = !DILocation(line: 1377, column: 6, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 1377, column: 6)
!2859 = !DILocation(line: 1377, column: 6, scope: !2853)
!2860 = !DILocation(line: 1378, column: 4, scope: !2858)
!2861 = !DILocation(line: 1380, column: 8, scope: !2853)
!2862 = !DILocation(line: 1380, column: 6, scope: !2853)
!2863 = !DILocation(line: 1381, column: 11, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 1381, column: 2)
!2865 = !DILocation(line: 1381, column: 42, scope: !2864)
!2866 = !DILocation(line: 1381, column: 9, scope: !2864)
!2867 = !DILocation(line: 1381, column: 7, scope: !2864)
!2868 = !DILocation(line: 1381, column: 47, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 1381, column: 2)
!2870 = !DILocation(line: 1381, column: 49, scope: !2869)
!2871 = !DILocation(line: 1381, column: 2, scope: !2864)
!2872 = !DILocation(line: 1382, column: 8, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1382, column: 8)
!2874 = !DILocation(line: 1382, column: 12, scope: !2873)
!2875 = !DILocation(line: 1382, column: 15, scope: !2873)
!2876 = !DILocation(line: 1382, column: 8, scope: !2869)
!2877 = !DILocation(line: 1384, column: 37, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 1384, column: 12)
!2879 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 1383, column: 6)
!2880 = !DILocation(line: 1384, column: 40, scope: !2878)
!2881 = !DILocation(line: 1384, column: 12, scope: !2878)
!2882 = !DILocation(line: 1384, column: 12, scope: !2879)
!2883 = !DILocation(line: 1385, column: 3, scope: !2878)
!2884 = !DILocation(line: 1386, column: 6, scope: !2879)
!2885 = !DILocation(line: 1387, column: 13, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 1387, column: 13)
!2887 = !DILocation(line: 1387, column: 17, scope: !2886)
!2888 = !DILocation(line: 1387, column: 20, scope: !2886)
!2889 = !DILocation(line: 1387, column: 13, scope: !2873)
!2890 = !DILocalVariable(name: "j", scope: !2891, file: !3, line: 1389, type: !619)
!2891 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 1388, column: 6)
!2892 = !DILocation(line: 1389, column: 12, scope: !2891)
!2893 = !DILocation(line: 1390, column: 17, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2891, file: !3, line: 1390, column: 8)
!2895 = !DILocation(line: 1390, column: 33, scope: !2894)
!2896 = !DILocation(line: 1390, column: 15, scope: !2894)
!2897 = !DILocation(line: 1390, column: 13, scope: !2894)
!2898 = !DILocation(line: 1390, column: 38, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 1390, column: 8)
!2900 = !DILocation(line: 1390, column: 40, scope: !2899)
!2901 = !DILocation(line: 1390, column: 8, scope: !2894)
!2902 = !DILocation(line: 1391, column: 32, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1391, column: 7)
!2904 = !DILocation(line: 1391, column: 35, scope: !2903)
!2905 = !DILocation(line: 1391, column: 7, scope: !2903)
!2906 = !DILocation(line: 1391, column: 7, scope: !2899)
!2907 = !DILocation(line: 1392, column: 5, scope: !2903)
!2908 = !DILocation(line: 1391, column: 53, scope: !2903)
!2909 = !DILocation(line: 1390, column: 46, scope: !2899)
!2910 = !DILocation(line: 1390, column: 8, scope: !2899)
!2911 = distinct !{!2911, !2901, !2912}
!2912 = !DILocation(line: 1392, column: 12, scope: !2894)
!2913 = !DILocation(line: 1393, column: 6, scope: !2891)
!2914 = !DILocation(line: 1382, column: 18, scope: !2873)
!2915 = !DILocation(line: 1381, column: 56, scope: !2869)
!2916 = !DILocation(line: 1381, column: 2, scope: !2869)
!2917 = distinct !{!2917, !2871, !2918}
!2918 = !DILocation(line: 1393, column: 6, scope: !2864)
!2919 = !DILocation(line: 1395, column: 2, scope: !2853)
!2920 = !DILocation(line: 1401, column: 31, scope: !2819)
!2921 = !DILocation(line: 1401, column: 34, scope: !2819)
!2922 = !DILocation(line: 1401, column: 14, scope: !2819)
!2923 = !DILocation(line: 1401, column: 7, scope: !2819)
!2924 = !DILocalVariable(name: "i", scope: !2925, file: !3, line: 1405, type: !619)
!2925 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 1404, column: 7)
!2926 = !DILocation(line: 1405, column: 6, scope: !2925)
!2927 = !DILocation(line: 1408, column: 11, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 1408, column: 2)
!2929 = !DILocation(line: 1408, column: 26, scope: !2928)
!2930 = !DILocation(line: 1408, column: 9, scope: !2928)
!2931 = !DILocation(line: 1408, column: 7, scope: !2928)
!2932 = !DILocation(line: 1408, column: 31, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 1408, column: 2)
!2934 = !DILocation(line: 1408, column: 33, scope: !2933)
!2935 = !DILocation(line: 1408, column: 2, scope: !2928)
!2936 = !DILocation(line: 1409, column: 8, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1409, column: 8)
!2938 = !DILocation(line: 1409, column: 36, scope: !2937)
!2939 = !DILocation(line: 1410, column: 8, scope: !2937)
!2940 = !DILocation(line: 1410, column: 36, scope: !2937)
!2941 = !DILocation(line: 1410, column: 65, scope: !2937)
!2942 = !DILocation(line: 1410, column: 11, scope: !2937)
!2943 = !DILocation(line: 1409, column: 8, scope: !2933)
!2944 = !DILocation(line: 1411, column: 6, scope: !2937)
!2945 = !DILocation(line: 1410, column: 67, scope: !2937)
!2946 = !DILocation(line: 1408, column: 40, scope: !2933)
!2947 = !DILocation(line: 1408, column: 2, scope: !2933)
!2948 = distinct !{!2948, !2935, !2949}
!2949 = !DILocation(line: 1411, column: 13, scope: !2928)
!2950 = !DILocation(line: 1412, column: 2, scope: !2925)
!2951 = !DILocation(line: 1416, column: 7, scope: !2819)
!2952 = !DILocation(line: 1417, column: 7, scope: !2819)
!2953 = !DILocation(line: 1419, column: 1, scope: !2801)
!2954 = distinct !DISubprogram(name: "find_reg_fusage", scope: !3, file: !3, line: 1797, type: !2955, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!619, !1713, !377, !1713}
!2957 = !DILocalVariable(name: "insn", arg: 1, scope: !2954, file: !3, line: 1797, type: !1713)
!2958 = !DILocation(line: 1797, column: 28, scope: !2954)
!2959 = !DILocalVariable(name: "code", arg: 2, scope: !2954, file: !3, line: 1797, type: !377)
!2960 = !DILocation(line: 1797, column: 48, scope: !2954)
!2961 = !DILocalVariable(name: "datum", arg: 3, scope: !2954, file: !3, line: 1797, type: !1713)
!2962 = !DILocation(line: 1797, column: 64, scope: !2954)
!2963 = !DILocation(line: 1801, column: 8, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 1801, column: 7)
!2965 = !DILocation(line: 1801, column: 7, scope: !2954)
!2966 = !DILocation(line: 1802, column: 5, scope: !2964)
!2967 = !DILocation(line: 1804, column: 3, scope: !2954)
!2968 = !DILocation(line: 1806, column: 8, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 1806, column: 7)
!2970 = !DILocation(line: 1806, column: 7, scope: !2954)
!2971 = !DILocalVariable(name: "link", scope: !2972, file: !3, line: 1808, type: !622)
!2972 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1807, column: 5)
!2973 = !DILocation(line: 1808, column: 11, scope: !2972)
!2974 = !DILocation(line: 1810, column: 19, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1810, column: 7)
!2976 = !DILocation(line: 1810, column: 17, scope: !2975)
!2977 = !DILocation(line: 1810, column: 12, scope: !2975)
!2978 = !DILocation(line: 1811, column: 5, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1810, column: 7)
!2980 = !DILocation(line: 1810, column: 7, scope: !2975)
!2981 = !DILocation(line: 1813, column: 6, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 1813, column: 6)
!2983 = !DILocation(line: 1813, column: 35, scope: !2982)
!2984 = !DILocation(line: 1813, column: 32, scope: !2982)
!2985 = !DILocation(line: 1814, column: 6, scope: !2982)
!2986 = !DILocation(line: 1814, column: 22, scope: !2982)
!2987 = !DILocation(line: 1814, column: 29, scope: !2982)
!2988 = !DILocation(line: 1814, column: 9, scope: !2982)
!2989 = !DILocation(line: 1813, column: 6, scope: !2979)
!2990 = !DILocation(line: 1815, column: 4, scope: !2982)
!2991 = !DILocation(line: 1814, column: 53, scope: !2982)
!2992 = !DILocation(line: 1812, column: 12, scope: !2979)
!2993 = !DILocation(line: 1812, column: 10, scope: !2979)
!2994 = !DILocation(line: 1810, column: 7, scope: !2979)
!2995 = distinct !{!2995, !2980, !2996}
!2996 = !DILocation(line: 1815, column: 11, scope: !2975)
!2997 = !DILocation(line: 1816, column: 5, scope: !2972)
!2998 = !DILocalVariable(name: "regno", scope: !2999, file: !3, line: 1819, type: !7)
!2999 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1818, column: 5)
!3000 = !DILocation(line: 1819, column: 20, scope: !2999)
!3001 = !DILocation(line: 1819, column: 28, scope: !2999)
!3002 = !DILocation(line: 1824, column: 11, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 1824, column: 11)
!3004 = !DILocation(line: 1824, column: 17, scope: !3003)
!3005 = !DILocation(line: 1824, column: 11, scope: !2999)
!3006 = !DILocalVariable(name: "end_regno", scope: !3007, file: !3, line: 1826, type: !7)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 1825, column: 2)
!3008 = !DILocation(line: 1826, column: 17, scope: !3007)
!3009 = !DILocation(line: 1826, column: 29, scope: !3007)
!3010 = !DILocalVariable(name: "i", scope: !3007, file: !3, line: 1827, type: !7)
!3011 = !DILocation(line: 1827, column: 17, scope: !3007)
!3012 = !DILocation(line: 1829, column: 13, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 1829, column: 4)
!3014 = !DILocation(line: 1829, column: 11, scope: !3013)
!3015 = !DILocation(line: 1829, column: 9, scope: !3013)
!3016 = !DILocation(line: 1829, column: 20, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 1829, column: 4)
!3018 = !DILocation(line: 1829, column: 24, scope: !3017)
!3019 = !DILocation(line: 1829, column: 22, scope: !3017)
!3020 = !DILocation(line: 1829, column: 4, scope: !3013)
!3021 = !DILocation(line: 1830, column: 29, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 1830, column: 10)
!3023 = !DILocation(line: 1830, column: 35, scope: !3022)
!3024 = !DILocation(line: 1830, column: 41, scope: !3022)
!3025 = !DILocation(line: 1830, column: 10, scope: !3022)
!3026 = !DILocation(line: 1830, column: 10, scope: !3017)
!3027 = !DILocation(line: 1831, column: 8, scope: !3022)
!3028 = !DILocation(line: 1830, column: 42, scope: !3022)
!3029 = !DILocation(line: 1829, column: 36, scope: !3017)
!3030 = !DILocation(line: 1829, column: 4, scope: !3017)
!3031 = distinct !{!3031, !3020, !3032}
!3032 = !DILocation(line: 1831, column: 15, scope: !3013)
!3033 = !DILocation(line: 1832, column: 2, scope: !3007)
!3034 = !DILocation(line: 1835, column: 3, scope: !2954)
!3035 = !DILocation(line: 1836, column: 1, scope: !2954)
!3036 = distinct !DISubprogram(name: "reg_referenced_p", scope: !3, file: !3, line: 756, type: !2606, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3037 = !DILocalVariable(name: "x", arg: 1, scope: !3036, file: !3, line: 756, type: !1713)
!3038 = !DILocation(line: 756, column: 29, scope: !3036)
!3039 = !DILocalVariable(name: "body", arg: 2, scope: !3036, file: !3, line: 756, type: !1713)
!3040 = !DILocation(line: 756, column: 42, scope: !3036)
!3041 = !DILocalVariable(name: "i", scope: !3036, file: !3, line: 758, type: !619)
!3042 = !DILocation(line: 758, column: 7, scope: !3036)
!3043 = !DILocation(line: 760, column: 11, scope: !3036)
!3044 = !DILocation(line: 760, column: 3, scope: !3036)
!3045 = !DILocation(line: 763, column: 36, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 763, column: 11)
!3047 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 761, column: 5)
!3048 = !DILocation(line: 763, column: 39, scope: !3046)
!3049 = !DILocation(line: 763, column: 11, scope: !3046)
!3050 = !DILocation(line: 763, column: 11, scope: !3047)
!3051 = !DILocation(line: 764, column: 2, scope: !3046)
!3052 = !DILocation(line: 769, column: 11, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 769, column: 11)
!3054 = !DILocation(line: 769, column: 38, scope: !3053)
!3055 = !DILocation(line: 770, column: 4, scope: !3053)
!3056 = !DILocation(line: 770, column: 7, scope: !3053)
!3057 = !DILocation(line: 770, column: 34, scope: !3053)
!3058 = !DILocation(line: 771, column: 4, scope: !3053)
!3059 = !DILocation(line: 771, column: 8, scope: !3053)
!3060 = !DILocation(line: 772, column: 4, scope: !3053)
!3061 = !DILocation(line: 772, column: 10, scope: !3053)
!3062 = !DILocation(line: 772, column: 37, scope: !3053)
!3063 = !DILocation(line: 773, column: 3, scope: !3053)
!3064 = !DILocation(line: 773, column: 6, scope: !3053)
!3065 = !DILocation(line: 774, column: 3, scope: !3053)
!3066 = !DILocation(line: 774, column: 9, scope: !3053)
!3067 = !DILocation(line: 775, column: 9, scope: !3053)
!3068 = !DILocation(line: 775, column: 33, scope: !3053)
!3069 = !DILocation(line: 776, column: 12, scope: !3053)
!3070 = !DILocation(line: 777, column: 5, scope: !3053)
!3071 = !DILocation(line: 777, column: 29, scope: !3053)
!3072 = !DILocation(line: 776, column: 7, scope: !3053)
!3073 = !DILocation(line: 778, column: 4, scope: !3053)
!3074 = !DILocation(line: 778, column: 32, scope: !3053)
!3075 = !DILocation(line: 778, column: 35, scope: !3053)
!3076 = !DILocation(line: 778, column: 7, scope: !3053)
!3077 = !DILocation(line: 769, column: 11, scope: !3047)
!3078 = !DILocation(line: 779, column: 2, scope: !3053)
!3079 = !DILocation(line: 780, column: 7, scope: !3047)
!3080 = !DILocation(line: 783, column: 16, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 783, column: 7)
!3082 = !DILocation(line: 783, column: 49, scope: !3081)
!3083 = !DILocation(line: 783, column: 14, scope: !3081)
!3084 = !DILocation(line: 783, column: 12, scope: !3081)
!3085 = !DILocation(line: 783, column: 54, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 783, column: 7)
!3087 = !DILocation(line: 783, column: 56, scope: !3086)
!3088 = !DILocation(line: 783, column: 7, scope: !3081)
!3089 = !DILocation(line: 784, column: 31, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 784, column: 6)
!3091 = !DILocation(line: 784, column: 34, scope: !3090)
!3092 = !DILocation(line: 784, column: 6, scope: !3090)
!3093 = !DILocation(line: 784, column: 6, scope: !3086)
!3094 = !DILocation(line: 785, column: 4, scope: !3090)
!3095 = !DILocation(line: 784, column: 62, scope: !3090)
!3096 = !DILocation(line: 783, column: 63, scope: !3086)
!3097 = !DILocation(line: 783, column: 7, scope: !3086)
!3098 = distinct !{!3098, !3088, !3099}
!3099 = !DILocation(line: 785, column: 11, scope: !3081)
!3100 = !DILocation(line: 786, column: 7, scope: !3047)
!3101 = !DILocation(line: 791, column: 39, scope: !3047)
!3102 = !DILocation(line: 791, column: 42, scope: !3047)
!3103 = !DILocation(line: 791, column: 14, scope: !3047)
!3104 = !DILocation(line: 791, column: 7, scope: !3047)
!3105 = !DILocation(line: 794, column: 39, scope: !3047)
!3106 = !DILocation(line: 794, column: 42, scope: !3047)
!3107 = !DILocation(line: 794, column: 14, scope: !3047)
!3108 = !DILocation(line: 794, column: 7, scope: !3047)
!3109 = !DILocation(line: 797, column: 39, scope: !3047)
!3110 = !DILocation(line: 797, column: 42, scope: !3047)
!3111 = !DILocation(line: 797, column: 14, scope: !3047)
!3112 = !DILocation(line: 797, column: 7, scope: !3047)
!3113 = !DILocation(line: 801, column: 16, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 801, column: 7)
!3115 = !DILocation(line: 801, column: 34, scope: !3114)
!3116 = !DILocation(line: 801, column: 14, scope: !3114)
!3117 = !DILocation(line: 801, column: 12, scope: !3114)
!3118 = !DILocation(line: 801, column: 39, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 801, column: 7)
!3120 = !DILocation(line: 801, column: 41, scope: !3119)
!3121 = !DILocation(line: 801, column: 7, scope: !3114)
!3122 = !DILocation(line: 802, column: 31, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 802, column: 6)
!3124 = !DILocation(line: 802, column: 34, scope: !3123)
!3125 = !DILocation(line: 802, column: 6, scope: !3123)
!3126 = !DILocation(line: 802, column: 6, scope: !3119)
!3127 = !DILocation(line: 803, column: 4, scope: !3123)
!3128 = !DILocation(line: 802, column: 54, scope: !3123)
!3129 = !DILocation(line: 801, column: 48, scope: !3119)
!3130 = !DILocation(line: 801, column: 7, scope: !3119)
!3131 = distinct !{!3131, !3121, !3132}
!3132 = !DILocation(line: 803, column: 11, scope: !3114)
!3133 = !DILocation(line: 804, column: 7, scope: !3047)
!3134 = !DILocation(line: 807, column: 16, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 807, column: 7)
!3136 = !DILocation(line: 807, column: 34, scope: !3135)
!3137 = !DILocation(line: 807, column: 14, scope: !3135)
!3138 = !DILocation(line: 807, column: 12, scope: !3135)
!3139 = !DILocation(line: 807, column: 39, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 807, column: 7)
!3141 = !DILocation(line: 807, column: 41, scope: !3140)
!3142 = !DILocation(line: 807, column: 7, scope: !3135)
!3143 = !DILocation(line: 808, column: 24, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 808, column: 6)
!3145 = !DILocation(line: 808, column: 27, scope: !3144)
!3146 = !DILocation(line: 808, column: 6, scope: !3144)
!3147 = !DILocation(line: 808, column: 6, scope: !3140)
!3148 = !DILocation(line: 809, column: 4, scope: !3144)
!3149 = !DILocation(line: 808, column: 47, scope: !3144)
!3150 = !DILocation(line: 807, column: 48, scope: !3140)
!3151 = !DILocation(line: 807, column: 7, scope: !3140)
!3152 = distinct !{!3152, !3142, !3153}
!3153 = !DILocation(line: 809, column: 11, scope: !3135)
!3154 = !DILocation(line: 810, column: 7, scope: !3047)
!3155 = !DILocation(line: 813, column: 11, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 813, column: 11)
!3157 = !DILocation(line: 813, column: 11, scope: !3047)
!3158 = !DILocation(line: 814, column: 31, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 814, column: 6)
!3160 = !DILocation(line: 814, column: 34, scope: !3159)
!3161 = !DILocation(line: 814, column: 6, scope: !3159)
!3162 = !DILocation(line: 814, column: 6, scope: !3156)
!3163 = !DILocation(line: 815, column: 4, scope: !3159)
!3164 = !DILocation(line: 814, column: 58, scope: !3159)
!3165 = !DILocation(line: 816, column: 7, scope: !3047)
!3166 = !DILocation(line: 819, column: 36, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 819, column: 11)
!3168 = !DILocation(line: 819, column: 39, scope: !3167)
!3169 = !DILocation(line: 819, column: 11, scope: !3167)
!3170 = !DILocation(line: 819, column: 11, scope: !3047)
!3171 = !DILocation(line: 820, column: 2, scope: !3167)
!3172 = !DILocation(line: 821, column: 32, scope: !3047)
!3173 = !DILocation(line: 821, column: 35, scope: !3047)
!3174 = !DILocation(line: 821, column: 14, scope: !3047)
!3175 = !DILocation(line: 821, column: 7, scope: !3047)
!3176 = !DILocation(line: 824, column: 7, scope: !3047)
!3177 = !DILocation(line: 826, column: 1, scope: !3036)
!3178 = distinct !DISubprogram(name: "reg_set_between_p", scope: !3, file: !3, line: 832, type: !2754, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3179 = !DILocalVariable(name: "reg", arg: 1, scope: !3178, file: !3, line: 832, type: !1713)
!3180 = !DILocation(line: 832, column: 30, scope: !3178)
!3181 = !DILocalVariable(name: "from_insn", arg: 2, scope: !3178, file: !3, line: 832, type: !1713)
!3182 = !DILocation(line: 832, column: 45, scope: !3178)
!3183 = !DILocalVariable(name: "to_insn", arg: 3, scope: !3178, file: !3, line: 832, type: !1713)
!3184 = !DILocation(line: 832, column: 66, scope: !3178)
!3185 = !DILocalVariable(name: "insn", scope: !3178, file: !3, line: 834, type: !1713)
!3186 = !DILocation(line: 834, column: 13, scope: !3178)
!3187 = !DILocation(line: 836, column: 7, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 836, column: 7)
!3189 = !DILocation(line: 836, column: 20, scope: !3188)
!3190 = !DILocation(line: 836, column: 17, scope: !3188)
!3191 = !DILocation(line: 836, column: 7, scope: !3178)
!3192 = !DILocation(line: 837, column: 5, scope: !3188)
!3193 = !DILocation(line: 839, column: 15, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 839, column: 3)
!3195 = !DILocation(line: 839, column: 13, scope: !3194)
!3196 = !DILocation(line: 839, column: 8, scope: !3194)
!3197 = !DILocation(line: 839, column: 38, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 839, column: 3)
!3199 = !DILocation(line: 839, column: 46, scope: !3198)
!3200 = !DILocation(line: 839, column: 43, scope: !3198)
!3201 = !DILocation(line: 839, column: 3, scope: !3194)
!3202 = !DILocation(line: 840, column: 9, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 840, column: 9)
!3204 = !DILocation(line: 840, column: 23, scope: !3203)
!3205 = !DILocation(line: 840, column: 37, scope: !3203)
!3206 = !DILocation(line: 840, column: 42, scope: !3203)
!3207 = !DILocation(line: 840, column: 26, scope: !3203)
!3208 = !DILocation(line: 840, column: 9, scope: !3198)
!3209 = !DILocation(line: 841, column: 7, scope: !3203)
!3210 = !DILocation(line: 840, column: 46, scope: !3203)
!3211 = !DILocation(line: 839, column: 62, scope: !3198)
!3212 = !DILocation(line: 839, column: 60, scope: !3198)
!3213 = !DILocation(line: 839, column: 3, scope: !3198)
!3214 = distinct !{!3214, !3201, !3215}
!3215 = !DILocation(line: 841, column: 14, scope: !3194)
!3216 = !DILocation(line: 842, column: 3, scope: !3178)
!3217 = !DILocation(line: 843, column: 1, scope: !3178)
!3218 = distinct !DISubprogram(name: "reg_set_p", scope: !3, file: !3, line: 847, type: !2606, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3219 = !DILocalVariable(name: "reg", arg: 1, scope: !3218, file: !3, line: 847, type: !1713)
!3220 = !DILocation(line: 847, column: 22, scope: !3218)
!3221 = !DILocalVariable(name: "insn", arg: 2, scope: !3218, file: !3, line: 847, type: !1713)
!3222 = !DILocation(line: 847, column: 37, scope: !3218)
!3223 = !DILocation(line: 851, column: 7, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 851, column: 7)
!3225 = !DILocation(line: 852, column: 7, scope: !3224)
!3226 = !DILocation(line: 853, column: 8, scope: !3224)
!3227 = !DILocation(line: 854, column: 8, scope: !3224)
!3228 = !DILocation(line: 854, column: 13, scope: !3224)
!3229 = !DILocation(line: 855, column: 6, scope: !3224)
!3230 = !DILocation(line: 855, column: 9, scope: !3224)
!3231 = !DILocation(line: 855, column: 21, scope: !3224)
!3232 = !DILocation(line: 856, column: 6, scope: !3224)
!3233 = !DILocation(line: 856, column: 34, scope: !3224)
!3234 = !DILocation(line: 857, column: 13, scope: !3224)
!3235 = !DILocation(line: 857, column: 29, scope: !3224)
!3236 = !DILocation(line: 856, column: 9, scope: !3224)
!3237 = !DILocation(line: 858, column: 5, scope: !3224)
!3238 = !DILocation(line: 858, column: 8, scope: !3224)
!3239 = !DILocation(line: 859, column: 5, scope: !3224)
!3240 = !DILocation(line: 859, column: 25, scope: !3224)
!3241 = !DILocation(line: 859, column: 40, scope: !3224)
!3242 = !DILocation(line: 859, column: 8, scope: !3224)
!3243 = !DILocation(line: 851, column: 7, scope: !3218)
!3244 = !DILocation(line: 860, column: 5, scope: !3224)
!3245 = !DILocation(line: 862, column: 18, scope: !3218)
!3246 = !DILocation(line: 862, column: 23, scope: !3218)
!3247 = !DILocation(line: 862, column: 10, scope: !3218)
!3248 = !DILocation(line: 862, column: 29, scope: !3218)
!3249 = !DILocation(line: 862, column: 3, scope: !3218)
!3250 = !DILocation(line: 863, column: 1, scope: !3218)
!3251 = distinct !DISubprogram(name: "overlaps_hard_reg_set_p", scope: !3252, file: !3252, line: 354, type: !3253, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3252 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!855, !3255, !5, !7}
!3255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!3256 = !DILocalVariable(name: "regs", arg: 1, scope: !3251, file: !3252, line: 354, type: !3255)
!3257 = !DILocation(line: 354, column: 45, scope: !3251)
!3258 = !DILocalVariable(name: "mode", arg: 2, scope: !3251, file: !3252, line: 354, type: !5)
!3259 = !DILocation(line: 354, column: 69, scope: !3251)
!3260 = !DILocalVariable(name: "regno", arg: 3, scope: !3251, file: !3252, line: 355, type: !7)
!3261 = !DILocation(line: 355, column: 18, scope: !3251)
!3262 = !DILocalVariable(name: "end_regno", scope: !3251, file: !3252, line: 357, type: !7)
!3263 = !DILocation(line: 357, column: 16, scope: !3251)
!3264 = !DILocation(line: 359, column: 7, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3251, file: !3252, line: 359, column: 7)
!3266 = !DILocation(line: 359, column: 7, scope: !3251)
!3267 = !DILocation(line: 360, column: 5, scope: !3265)
!3268 = !DILocation(line: 362, column: 31, scope: !3251)
!3269 = !DILocation(line: 362, column: 37, scope: !3251)
!3270 = !DILocation(line: 362, column: 15, scope: !3251)
!3271 = !DILocation(line: 362, column: 13, scope: !3251)
!3272 = !DILocation(line: 363, column: 3, scope: !3251)
!3273 = !DILocation(line: 363, column: 10, scope: !3251)
!3274 = !DILocation(line: 363, column: 20, scope: !3251)
!3275 = !DILocation(line: 363, column: 18, scope: !3251)
!3276 = !DILocation(line: 364, column: 9, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3251, file: !3252, line: 364, column: 9)
!3278 = !DILocation(line: 364, column: 9, scope: !3251)
!3279 = !DILocation(line: 365, column: 7, scope: !3277)
!3280 = distinct !{!3280, !3272, !3281}
!3281 = !DILocation(line: 365, column: 14, scope: !3251)
!3282 = !DILocation(line: 367, column: 3, scope: !3251)
!3283 = !DILocation(line: 368, column: 1, scope: !3251)
!3284 = distinct !DISubprogram(name: "set_of", scope: !3, file: !3, line: 1005, type: !3285, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!1713, !1713, !1713}
!3287 = !DILocalVariable(name: "pat", arg: 1, scope: !3284, file: !3, line: 1005, type: !1713)
!3288 = !DILocation(line: 1005, column: 19, scope: !3284)
!3289 = !DILocalVariable(name: "insn", arg: 2, scope: !3284, file: !3, line: 1005, type: !1713)
!3290 = !DILocation(line: 1005, column: 34, scope: !3284)
!3291 = !DILocalVariable(name: "data", scope: !3284, file: !3, line: 1007, type: !1710)
!3292 = !DILocation(line: 1007, column: 22, scope: !3284)
!3293 = !DILocation(line: 1008, column: 8, scope: !3284)
!3294 = !DILocation(line: 1008, column: 14, scope: !3284)
!3295 = !DILocation(line: 1009, column: 14, scope: !3284)
!3296 = !DILocation(line: 1009, column: 8, scope: !3284)
!3297 = !DILocation(line: 1009, column: 12, scope: !3284)
!3298 = !DILocation(line: 1010, column: 16, scope: !3284)
!3299 = !DILocation(line: 1010, column: 32, scope: !3284)
!3300 = !DILocation(line: 1010, column: 49, scope: !3284)
!3301 = !DILocation(line: 1010, column: 65, scope: !3284)
!3302 = !DILocation(line: 1010, column: 3, scope: !3284)
!3303 = !DILocation(line: 1011, column: 15, scope: !3284)
!3304 = !DILocation(line: 1011, column: 3, scope: !3284)
!3305 = distinct !DISubprogram(name: "modified_between_p", scope: !3, file: !3, line: 870, type: !2754, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3306 = !DILocalVariable(name: "x", arg: 1, scope: !3305, file: !3, line: 870, type: !1713)
!3307 = !DILocation(line: 870, column: 31, scope: !3305)
!3308 = !DILocalVariable(name: "start", arg: 2, scope: !3305, file: !3, line: 870, type: !1713)
!3309 = !DILocation(line: 870, column: 44, scope: !3305)
!3310 = !DILocalVariable(name: "end", arg: 3, scope: !3305, file: !3, line: 870, type: !1713)
!3311 = !DILocation(line: 870, column: 61, scope: !3305)
!3312 = !DILocalVariable(name: "code", scope: !3305, file: !3, line: 872, type: !1742)
!3313 = !DILocation(line: 872, column: 23, scope: !3305)
!3314 = !DILocation(line: 872, column: 30, scope: !3305)
!3315 = !DILocalVariable(name: "fmt", scope: !3305, file: !3, line: 873, type: !648)
!3316 = !DILocation(line: 873, column: 15, scope: !3305)
!3317 = !DILocalVariable(name: "i", scope: !3305, file: !3, line: 874, type: !619)
!3318 = !DILocation(line: 874, column: 7, scope: !3305)
!3319 = !DILocalVariable(name: "j", scope: !3305, file: !3, line: 874, type: !619)
!3320 = !DILocation(line: 874, column: 10, scope: !3305)
!3321 = !DILocalVariable(name: "insn", scope: !3305, file: !3, line: 875, type: !622)
!3322 = !DILocation(line: 875, column: 7, scope: !3305)
!3323 = !DILocation(line: 877, column: 7, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 877, column: 7)
!3325 = !DILocation(line: 877, column: 16, scope: !3324)
!3326 = !DILocation(line: 877, column: 13, scope: !3324)
!3327 = !DILocation(line: 877, column: 7, scope: !3305)
!3328 = !DILocation(line: 878, column: 5, scope: !3324)
!3329 = !DILocation(line: 880, column: 11, scope: !3305)
!3330 = !DILocation(line: 880, column: 3, scope: !3305)
!3331 = !DILocation(line: 889, column: 7, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 881, column: 5)
!3333 = !DILocation(line: 893, column: 7, scope: !3332)
!3334 = !DILocation(line: 896, column: 31, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 896, column: 11)
!3336 = !DILocation(line: 896, column: 44, scope: !3335)
!3337 = !DILocation(line: 896, column: 51, scope: !3335)
!3338 = !DILocation(line: 896, column: 11, scope: !3335)
!3339 = !DILocation(line: 896, column: 11, scope: !3332)
!3340 = !DILocation(line: 897, column: 2, scope: !3335)
!3341 = !DILocation(line: 898, column: 11, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 898, column: 11)
!3343 = !DILocation(line: 898, column: 11, scope: !3332)
!3344 = !DILocation(line: 899, column: 2, scope: !3342)
!3345 = !DILocation(line: 900, column: 19, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 900, column: 7)
!3347 = !DILocation(line: 900, column: 17, scope: !3346)
!3348 = !DILocation(line: 900, column: 12, scope: !3346)
!3349 = !DILocation(line: 900, column: 38, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 900, column: 7)
!3351 = !DILocation(line: 900, column: 46, scope: !3350)
!3352 = !DILocation(line: 900, column: 43, scope: !3350)
!3353 = !DILocation(line: 900, column: 7, scope: !3346)
!3354 = !DILocation(line: 901, column: 33, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 901, column: 6)
!3356 = !DILocation(line: 901, column: 36, scope: !3355)
!3357 = !DILocation(line: 901, column: 6, scope: !3355)
!3358 = !DILocation(line: 901, column: 6, scope: !3350)
!3359 = !DILocation(line: 902, column: 4, scope: !3355)
!3360 = !DILocation(line: 901, column: 40, scope: !3355)
!3361 = !DILocation(line: 900, column: 58, scope: !3350)
!3362 = !DILocation(line: 900, column: 56, scope: !3350)
!3363 = !DILocation(line: 900, column: 7, scope: !3350)
!3364 = distinct !{!3364, !3353, !3365}
!3365 = !DILocation(line: 902, column: 11, scope: !3346)
!3366 = !DILocation(line: 903, column: 7, scope: !3332)
!3367 = !DILocation(line: 907, column: 33, scope: !3332)
!3368 = !DILocation(line: 907, column: 36, scope: !3332)
!3369 = !DILocation(line: 907, column: 43, scope: !3332)
!3370 = !DILocation(line: 907, column: 14, scope: !3332)
!3371 = !DILocation(line: 907, column: 7, scope: !3332)
!3372 = !DILocation(line: 910, column: 7, scope: !3332)
!3373 = !DILocation(line: 913, column: 9, scope: !3305)
!3374 = !DILocation(line: 913, column: 7, scope: !3305)
!3375 = !DILocation(line: 914, column: 12, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 914, column: 3)
!3377 = !DILocation(line: 914, column: 34, scope: !3376)
!3378 = !DILocation(line: 914, column: 10, scope: !3376)
!3379 = !DILocation(line: 914, column: 8, scope: !3376)
!3380 = !DILocation(line: 914, column: 39, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 914, column: 3)
!3382 = !DILocation(line: 914, column: 41, scope: !3381)
!3383 = !DILocation(line: 914, column: 3, scope: !3376)
!3384 = !DILocation(line: 916, column: 11, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 916, column: 11)
!3386 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 915, column: 5)
!3387 = !DILocation(line: 916, column: 15, scope: !3385)
!3388 = !DILocation(line: 916, column: 18, scope: !3385)
!3389 = !DILocation(line: 916, column: 25, scope: !3385)
!3390 = !DILocation(line: 916, column: 48, scope: !3385)
!3391 = !DILocation(line: 916, column: 61, scope: !3385)
!3392 = !DILocation(line: 916, column: 68, scope: !3385)
!3393 = !DILocation(line: 916, column: 28, scope: !3385)
!3394 = !DILocation(line: 916, column: 11, scope: !3386)
!3395 = !DILocation(line: 917, column: 2, scope: !3385)
!3396 = !DILocation(line: 919, column: 16, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 919, column: 16)
!3398 = !DILocation(line: 919, column: 20, scope: !3397)
!3399 = !DILocation(line: 919, column: 23, scope: !3397)
!3400 = !DILocation(line: 919, column: 16, scope: !3385)
!3401 = !DILocation(line: 920, column: 11, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 920, column: 2)
!3403 = !DILocation(line: 920, column: 26, scope: !3402)
!3404 = !DILocation(line: 920, column: 9, scope: !3402)
!3405 = !DILocation(line: 920, column: 7, scope: !3402)
!3406 = !DILocation(line: 920, column: 31, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 920, column: 2)
!3408 = !DILocation(line: 920, column: 33, scope: !3407)
!3409 = !DILocation(line: 920, column: 2, scope: !3402)
!3410 = !DILocation(line: 921, column: 28, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 921, column: 8)
!3412 = !DILocation(line: 921, column: 47, scope: !3411)
!3413 = !DILocation(line: 921, column: 54, scope: !3411)
!3414 = !DILocation(line: 921, column: 8, scope: !3411)
!3415 = !DILocation(line: 921, column: 8, scope: !3407)
!3416 = !DILocation(line: 922, column: 6, scope: !3411)
!3417 = !DILocation(line: 921, column: 57, scope: !3411)
!3418 = !DILocation(line: 920, column: 40, scope: !3407)
!3419 = !DILocation(line: 920, column: 2, scope: !3407)
!3420 = distinct !{!3420, !3409, !3421}
!3421 = !DILocation(line: 922, column: 13, scope: !3402)
!3422 = !DILocation(line: 923, column: 5, scope: !3386)
!3423 = !DILocation(line: 914, column: 48, scope: !3381)
!3424 = !DILocation(line: 914, column: 3, scope: !3381)
!3425 = distinct !{!3425, !3383, !3426}
!3426 = !DILocation(line: 923, column: 5, scope: !3376)
!3427 = !DILocation(line: 925, column: 3, scope: !3305)
!3428 = !DILocation(line: 926, column: 1, scope: !3305)
!3429 = distinct !DISubprogram(name: "modified_in_p", scope: !3, file: !3, line: 933, type: !2606, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3430 = !DILocalVariable(name: "x", arg: 1, scope: !3429, file: !3, line: 933, type: !1713)
!3431 = !DILocation(line: 933, column: 26, scope: !3429)
!3432 = !DILocalVariable(name: "insn", arg: 2, scope: !3429, file: !3, line: 933, type: !1713)
!3433 = !DILocation(line: 933, column: 39, scope: !3429)
!3434 = !DILocalVariable(name: "code", scope: !3429, file: !3, line: 935, type: !1742)
!3435 = !DILocation(line: 935, column: 23, scope: !3429)
!3436 = !DILocation(line: 935, column: 30, scope: !3429)
!3437 = !DILocalVariable(name: "fmt", scope: !3429, file: !3, line: 936, type: !648)
!3438 = !DILocation(line: 936, column: 15, scope: !3429)
!3439 = !DILocalVariable(name: "i", scope: !3429, file: !3, line: 937, type: !619)
!3440 = !DILocation(line: 937, column: 7, scope: !3429)
!3441 = !DILocalVariable(name: "j", scope: !3429, file: !3, line: 937, type: !619)
!3442 = !DILocation(line: 937, column: 10, scope: !3429)
!3443 = !DILocation(line: 939, column: 11, scope: !3429)
!3444 = !DILocation(line: 939, column: 3, scope: !3429)
!3445 = !DILocation(line: 948, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 940, column: 5)
!3447 = !DILocation(line: 952, column: 7, scope: !3446)
!3448 = !DILocation(line: 955, column: 26, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 955, column: 11)
!3450 = !DILocation(line: 955, column: 39, scope: !3449)
!3451 = !DILocation(line: 955, column: 11, scope: !3449)
!3452 = !DILocation(line: 955, column: 11, scope: !3446)
!3453 = !DILocation(line: 956, column: 2, scope: !3449)
!3454 = !DILocation(line: 957, column: 11, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 957, column: 11)
!3456 = !DILocation(line: 957, column: 11, scope: !3446)
!3457 = !DILocation(line: 958, column: 2, scope: !3455)
!3458 = !DILocation(line: 959, column: 38, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 959, column: 11)
!3460 = !DILocation(line: 959, column: 41, scope: !3459)
!3461 = !DILocation(line: 959, column: 11, scope: !3459)
!3462 = !DILocation(line: 959, column: 11, scope: !3446)
!3463 = !DILocation(line: 960, column: 2, scope: !3459)
!3464 = !DILocation(line: 961, column: 7, scope: !3446)
!3465 = !DILocation(line: 965, column: 25, scope: !3446)
!3466 = !DILocation(line: 965, column: 28, scope: !3446)
!3467 = !DILocation(line: 965, column: 14, scope: !3446)
!3468 = !DILocation(line: 965, column: 7, scope: !3446)
!3469 = !DILocation(line: 968, column: 7, scope: !3446)
!3470 = !DILocation(line: 971, column: 9, scope: !3429)
!3471 = !DILocation(line: 971, column: 7, scope: !3429)
!3472 = !DILocation(line: 972, column: 12, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 972, column: 3)
!3474 = !DILocation(line: 972, column: 34, scope: !3473)
!3475 = !DILocation(line: 972, column: 10, scope: !3473)
!3476 = !DILocation(line: 972, column: 8, scope: !3473)
!3477 = !DILocation(line: 972, column: 39, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 972, column: 3)
!3479 = !DILocation(line: 972, column: 41, scope: !3478)
!3480 = !DILocation(line: 972, column: 3, scope: !3473)
!3481 = !DILocation(line: 974, column: 11, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 974, column: 11)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 973, column: 5)
!3484 = !DILocation(line: 974, column: 15, scope: !3482)
!3485 = !DILocation(line: 974, column: 18, scope: !3482)
!3486 = !DILocation(line: 974, column: 25, scope: !3482)
!3487 = !DILocation(line: 974, column: 43, scope: !3482)
!3488 = !DILocation(line: 974, column: 56, scope: !3482)
!3489 = !DILocation(line: 974, column: 28, scope: !3482)
!3490 = !DILocation(line: 974, column: 11, scope: !3483)
!3491 = !DILocation(line: 975, column: 2, scope: !3482)
!3492 = !DILocation(line: 977, column: 16, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 977, column: 16)
!3494 = !DILocation(line: 977, column: 20, scope: !3493)
!3495 = !DILocation(line: 977, column: 23, scope: !3493)
!3496 = !DILocation(line: 977, column: 16, scope: !3482)
!3497 = !DILocation(line: 978, column: 11, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 978, column: 2)
!3499 = !DILocation(line: 978, column: 26, scope: !3498)
!3500 = !DILocation(line: 978, column: 9, scope: !3498)
!3501 = !DILocation(line: 978, column: 7, scope: !3498)
!3502 = !DILocation(line: 978, column: 31, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 978, column: 2)
!3504 = !DILocation(line: 978, column: 33, scope: !3503)
!3505 = !DILocation(line: 978, column: 2, scope: !3498)
!3506 = !DILocation(line: 979, column: 23, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 979, column: 8)
!3508 = !DILocation(line: 979, column: 42, scope: !3507)
!3509 = !DILocation(line: 979, column: 8, scope: !3507)
!3510 = !DILocation(line: 979, column: 8, scope: !3503)
!3511 = !DILocation(line: 980, column: 6, scope: !3507)
!3512 = !DILocation(line: 979, column: 46, scope: !3507)
!3513 = !DILocation(line: 978, column: 40, scope: !3503)
!3514 = !DILocation(line: 978, column: 2, scope: !3503)
!3515 = distinct !{!3515, !3505, !3516}
!3516 = !DILocation(line: 980, column: 13, scope: !3498)
!3517 = !DILocation(line: 981, column: 5, scope: !3483)
!3518 = !DILocation(line: 972, column: 48, scope: !3478)
!3519 = !DILocation(line: 972, column: 3, scope: !3478)
!3520 = distinct !{!3520, !3480, !3521}
!3521 = !DILocation(line: 981, column: 5, scope: !3473)
!3522 = !DILocation(line: 983, column: 3, scope: !3429)
!3523 = !DILocation(line: 984, column: 1, scope: !3429)
!3524 = distinct !DISubprogram(name: "note_stores", scope: !3, file: !3, line: 1434, type: !3525, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{null, !1713, !3527, !732}
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{null, !622, !1713, !732}
!3530 = !DILocalVariable(name: "x", arg: 1, scope: !3524, file: !3, line: 1434, type: !1713)
!3531 = !DILocation(line: 1434, column: 24, scope: !3524)
!3532 = !DILocalVariable(name: "fun", arg: 2, scope: !3524, file: !3, line: 1434, type: !3527)
!3533 = !DILocation(line: 1434, column: 34, scope: !3524)
!3534 = !DILocalVariable(name: "data", arg: 3, scope: !3524, file: !3, line: 1434, type: !732)
!3535 = !DILocation(line: 1434, column: 71, scope: !3524)
!3536 = !DILocalVariable(name: "i", scope: !3524, file: !3, line: 1436, type: !619)
!3537 = !DILocation(line: 1436, column: 7, scope: !3524)
!3538 = !DILocation(line: 1438, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1438, column: 7)
!3540 = !DILocation(line: 1438, column: 20, scope: !3539)
!3541 = !DILocation(line: 1438, column: 7, scope: !3524)
!3542 = !DILocation(line: 1439, column: 9, scope: !3539)
!3543 = !DILocation(line: 1439, column: 7, scope: !3539)
!3544 = !DILocation(line: 1439, column: 5, scope: !3539)
!3545 = !DILocation(line: 1441, column: 7, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1441, column: 7)
!3547 = !DILocation(line: 1441, column: 20, scope: !3546)
!3548 = !DILocation(line: 1441, column: 27, scope: !3546)
!3549 = !DILocation(line: 1441, column: 30, scope: !3546)
!3550 = !DILocation(line: 1441, column: 43, scope: !3546)
!3551 = !DILocation(line: 1441, column: 7, scope: !3524)
!3552 = !DILocalVariable(name: "dest", scope: !3553, file: !3, line: 1443, type: !622)
!3553 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 1442, column: 5)
!3554 = !DILocation(line: 1443, column: 11, scope: !3553)
!3555 = !DILocation(line: 1443, column: 18, scope: !3553)
!3556 = !DILocation(line: 1445, column: 7, scope: !3553)
!3557 = !DILocation(line: 1445, column: 15, scope: !3553)
!3558 = !DILocation(line: 1445, column: 31, scope: !3553)
!3559 = !DILocation(line: 1446, column: 8, scope: !3553)
!3560 = !DILocation(line: 1446, column: 13, scope: !3553)
!3561 = !DILocation(line: 1447, column: 5, scope: !3553)
!3562 = !DILocation(line: 1447, column: 8, scope: !3553)
!3563 = !DILocation(line: 1447, column: 34, scope: !3553)
!3564 = !DILocation(line: 1448, column: 7, scope: !3553)
!3565 = !DILocation(line: 1448, column: 10, scope: !3553)
!3566 = !DILocation(line: 1448, column: 26, scope: !3553)
!3567 = !DILocation(line: 1449, column: 7, scope: !3553)
!3568 = !DILocation(line: 1449, column: 10, scope: !3553)
!3569 = !DILocation(line: 1449, column: 26, scope: !3553)
!3570 = !DILocation(line: 1450, column: 9, scope: !3553)
!3571 = !DILocation(line: 1450, column: 7, scope: !3553)
!3572 = distinct !{!3572, !3556, !3570}
!3573 = !DILocation(line: 1454, column: 11, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 1454, column: 11)
!3575 = !DILocation(line: 1454, column: 27, scope: !3574)
!3576 = !DILocation(line: 1454, column: 11, scope: !3553)
!3577 = !DILocation(line: 1456, column: 13, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 1456, column: 4)
!3579 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 1455, column: 2)
!3580 = !DILocation(line: 1456, column: 31, scope: !3578)
!3581 = !DILocation(line: 1456, column: 11, scope: !3578)
!3582 = !DILocation(line: 1456, column: 9, scope: !3578)
!3583 = !DILocation(line: 1456, column: 36, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 1456, column: 4)
!3585 = !DILocation(line: 1456, column: 38, scope: !3584)
!3586 = !DILocation(line: 1456, column: 4, scope: !3578)
!3587 = !DILocation(line: 1457, column: 10, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1457, column: 10)
!3589 = !DILocation(line: 1457, column: 41, scope: !3588)
!3590 = !DILocation(line: 1457, column: 10, scope: !3584)
!3591 = !DILocation(line: 1458, column: 10, scope: !3588)
!3592 = !DILocation(line: 1458, column: 16, scope: !3588)
!3593 = !DILocation(line: 1458, column: 48, scope: !3588)
!3594 = !DILocation(line: 1458, column: 51, scope: !3588)
!3595 = !DILocation(line: 1458, column: 8, scope: !3588)
!3596 = !DILocation(line: 1457, column: 44, scope: !3588)
!3597 = !DILocation(line: 1456, column: 45, scope: !3584)
!3598 = !DILocation(line: 1456, column: 4, scope: !3584)
!3599 = distinct !{!3599, !3586, !3600}
!3600 = !DILocation(line: 1458, column: 55, scope: !3578)
!3601 = !DILocation(line: 1459, column: 2, scope: !3579)
!3602 = !DILocation(line: 1461, column: 4, scope: !3574)
!3603 = !DILocation(line: 1461, column: 10, scope: !3574)
!3604 = !DILocation(line: 1461, column: 16, scope: !3574)
!3605 = !DILocation(line: 1461, column: 19, scope: !3574)
!3606 = !DILocation(line: 1461, column: 2, scope: !3574)
!3607 = !DILocation(line: 1462, column: 5, scope: !3553)
!3608 = !DILocation(line: 1464, column: 12, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 1464, column: 12)
!3610 = !DILocation(line: 1464, column: 25, scope: !3609)
!3611 = !DILocation(line: 1464, column: 12, scope: !3546)
!3612 = !DILocation(line: 1465, column: 14, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1465, column: 5)
!3614 = !DILocation(line: 1465, column: 29, scope: !3613)
!3615 = !DILocation(line: 1465, column: 12, scope: !3613)
!3616 = !DILocation(line: 1465, column: 10, scope: !3613)
!3617 = !DILocation(line: 1465, column: 34, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1465, column: 5)
!3619 = !DILocation(line: 1465, column: 36, scope: !3618)
!3620 = !DILocation(line: 1465, column: 5, scope: !3613)
!3621 = !DILocation(line: 1466, column: 20, scope: !3618)
!3622 = !DILocation(line: 1466, column: 39, scope: !3618)
!3623 = !DILocation(line: 1466, column: 44, scope: !3618)
!3624 = !DILocation(line: 1466, column: 7, scope: !3618)
!3625 = !DILocation(line: 1465, column: 43, scope: !3618)
!3626 = !DILocation(line: 1465, column: 5, scope: !3618)
!3627 = distinct !{!3627, !3620, !3628}
!3628 = !DILocation(line: 1466, column: 48, scope: !3613)
!3629 = !DILocation(line: 1467, column: 1, scope: !3524)
!3630 = distinct !DISubprogram(name: "set_of_1", scope: !3, file: !3, line: 994, type: !3528, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3631 = !DILocalVariable(name: "x", arg: 1, scope: !3630, file: !3, line: 994, type: !622)
!3632 = !DILocation(line: 994, column: 15, scope: !3630)
!3633 = !DILocalVariable(name: "pat", arg: 2, scope: !3630, file: !3, line: 994, type: !1713)
!3634 = !DILocation(line: 994, column: 28, scope: !3630)
!3635 = !DILocalVariable(name: "data1", arg: 3, scope: !3630, file: !3, line: 994, type: !732)
!3636 = !DILocation(line: 994, column: 39, scope: !3630)
!3637 = !DILocalVariable(name: "data", scope: !3630, file: !3, line: 996, type: !3638)
!3638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1709)
!3639 = !DILocation(line: 996, column: 29, scope: !3630)
!3640 = !DILocation(line: 996, column: 60, scope: !3630)
!3641 = !DILocation(line: 996, column: 36, scope: !3630)
!3642 = !DILocation(line: 997, column: 20, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 997, column: 7)
!3644 = !DILocation(line: 997, column: 23, scope: !3643)
!3645 = !DILocation(line: 997, column: 29, scope: !3643)
!3646 = !DILocation(line: 997, column: 7, scope: !3643)
!3647 = !DILocation(line: 998, column: 7, scope: !3643)
!3648 = !DILocation(line: 998, column: 12, scope: !3643)
!3649 = !DILocation(line: 998, column: 22, scope: !3643)
!3650 = !DILocation(line: 998, column: 50, scope: !3643)
!3651 = !DILocation(line: 998, column: 56, scope: !3643)
!3652 = !DILocation(line: 998, column: 61, scope: !3643)
!3653 = !DILocation(line: 998, column: 25, scope: !3643)
!3654 = !DILocation(line: 997, column: 7, scope: !3630)
!3655 = !DILocation(line: 999, column: 19, scope: !3643)
!3656 = !DILocation(line: 999, column: 5, scope: !3643)
!3657 = !DILocation(line: 999, column: 11, scope: !3643)
!3658 = !DILocation(line: 999, column: 17, scope: !3643)
!3659 = !DILocation(line: 1000, column: 1, scope: !3630)
!3660 = distinct !DISubprogram(name: "single_set_2", scope: !3, file: !3, line: 1019, type: !3661, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!622, !1713, !1713}
!3663 = !DILocalVariable(name: "insn", arg: 1, scope: !3660, file: !3, line: 1019, type: !1713)
!3664 = !DILocation(line: 1019, column: 25, scope: !3660)
!3665 = !DILocalVariable(name: "pat", arg: 2, scope: !3660, file: !3, line: 1019, type: !1713)
!3666 = !DILocation(line: 1019, column: 41, scope: !3660)
!3667 = !DILocalVariable(name: "set", scope: !3660, file: !3, line: 1021, type: !622)
!3668 = !DILocation(line: 1021, column: 7, scope: !3660)
!3669 = !DILocalVariable(name: "set_verified", scope: !3660, file: !3, line: 1022, type: !619)
!3670 = !DILocation(line: 1022, column: 7, scope: !3660)
!3671 = !DILocalVariable(name: "i", scope: !3660, file: !3, line: 1023, type: !619)
!3672 = !DILocation(line: 1023, column: 7, scope: !3660)
!3673 = !DILocation(line: 1025, column: 7, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1025, column: 7)
!3675 = !DILocation(line: 1025, column: 22, scope: !3674)
!3676 = !DILocation(line: 1025, column: 7, scope: !3660)
!3677 = !DILocation(line: 1027, column: 14, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1027, column: 7)
!3679 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1026, column: 5)
!3680 = !DILocation(line: 1027, column: 12, scope: !3678)
!3681 = !DILocation(line: 1027, column: 19, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 1027, column: 7)
!3683 = !DILocation(line: 1027, column: 23, scope: !3682)
!3684 = !DILocation(line: 1027, column: 21, scope: !3682)
!3685 = !DILocation(line: 1027, column: 7, scope: !3678)
!3686 = !DILocalVariable(name: "sub", scope: !3687, file: !3, line: 1029, type: !622)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 1028, column: 2)
!3688 = !DILocation(line: 1029, column: 8, scope: !3687)
!3689 = !DILocation(line: 1029, column: 14, scope: !3687)
!3690 = !DILocation(line: 1030, column: 12, scope: !3687)
!3691 = !DILocation(line: 1030, column: 4, scope: !3687)
!3692 = !DILocation(line: 1034, column: 8, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 1031, column: 6)
!3694 = !DILocation(line: 1045, column: 13, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1045, column: 12)
!3696 = !DILocation(line: 1045, column: 12, scope: !3693)
!3697 = !DILocation(line: 1047, column: 24, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 1047, column: 9)
!3699 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1046, column: 3)
!3700 = !DILocation(line: 1047, column: 42, scope: !3698)
!3701 = !DILocation(line: 1047, column: 9, scope: !3698)
!3702 = !DILocation(line: 1048, column: 9, scope: !3698)
!3703 = !DILocation(line: 1048, column: 29, scope: !3698)
!3704 = !DILocation(line: 1048, column: 13, scope: !3698)
!3705 = !DILocation(line: 1047, column: 9, scope: !3699)
!3706 = !DILocation(line: 1049, column: 11, scope: !3698)
!3707 = !DILocation(line: 1049, column: 7, scope: !3698)
!3708 = !DILocation(line: 1051, column: 20, scope: !3698)
!3709 = !DILocation(line: 1052, column: 3, scope: !3699)
!3710 = !DILocation(line: 1053, column: 13, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1053, column: 12)
!3712 = !DILocation(line: 1053, column: 12, scope: !3693)
!3713 = !DILocation(line: 1054, column: 9, scope: !3711)
!3714 = !DILocation(line: 1054, column: 7, scope: !3711)
!3715 = !DILocation(line: 1054, column: 27, scope: !3711)
!3716 = !DILocation(line: 1054, column: 3, scope: !3711)
!3717 = !DILocation(line: 1055, column: 33, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 1055, column: 17)
!3719 = !DILocation(line: 1055, column: 51, scope: !3718)
!3720 = !DILocation(line: 1055, column: 18, scope: !3718)
!3721 = !DILocation(line: 1056, column: 10, scope: !3718)
!3722 = !DILocation(line: 1056, column: 29, scope: !3718)
!3723 = !DILocation(line: 1056, column: 13, scope: !3718)
!3724 = !DILocation(line: 1055, column: 17, scope: !3711)
!3725 = !DILocation(line: 1057, column: 3, scope: !3718)
!3726 = !DILocation(line: 1058, column: 8, scope: !3693)
!3727 = !DILocation(line: 1061, column: 8, scope: !3693)
!3728 = !DILocation(line: 1063, column: 2, scope: !3687)
!3729 = !DILocation(line: 1027, column: 42, scope: !3682)
!3730 = !DILocation(line: 1027, column: 7, scope: !3682)
!3731 = distinct !{!3731, !3685, !3732}
!3732 = !DILocation(line: 1063, column: 2, scope: !3678)
!3733 = !DILocation(line: 1064, column: 5, scope: !3679)
!3734 = !DILocation(line: 1065, column: 10, scope: !3660)
!3735 = !DILocation(line: 1065, column: 3, scope: !3660)
!3736 = !DILocation(line: 1066, column: 1, scope: !3660)
!3737 = distinct !DISubprogram(name: "find_reg_note", scope: !3, file: !3, line: 1693, type: !3738, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!622, !1713, !549, !1713}
!3740 = !DILocalVariable(name: "insn", arg: 1, scope: !3737, file: !3, line: 1693, type: !1713)
!3741 = !DILocation(line: 1693, column: 26, scope: !3737)
!3742 = !DILocalVariable(name: "kind", arg: 2, scope: !3737, file: !3, line: 1693, type: !549)
!3743 = !DILocation(line: 1693, column: 46, scope: !3737)
!3744 = !DILocalVariable(name: "datum", arg: 3, scope: !3737, file: !3, line: 1693, type: !1713)
!3745 = !DILocation(line: 1693, column: 62, scope: !3737)
!3746 = !DILocalVariable(name: "link", scope: !3737, file: !3, line: 1695, type: !622)
!3747 = !DILocation(line: 1695, column: 7, scope: !3737)
!3748 = !DILocation(line: 1697, column: 3, scope: !3737)
!3749 = !DILocation(line: 1700, column: 9, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1700, column: 7)
!3751 = !DILocation(line: 1700, column: 7, scope: !3737)
!3752 = !DILocation(line: 1701, column: 5, scope: !3750)
!3753 = !DILocation(line: 1702, column: 7, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1702, column: 7)
!3755 = !DILocation(line: 1702, column: 13, scope: !3754)
!3756 = !DILocation(line: 1702, column: 7, scope: !3737)
!3757 = !DILocation(line: 1704, column: 19, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1704, column: 7)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1703, column: 5)
!3760 = !DILocation(line: 1704, column: 17, scope: !3758)
!3761 = !DILocation(line: 1704, column: 12, scope: !3758)
!3762 = !DILocation(line: 1704, column: 37, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1704, column: 7)
!3764 = !DILocation(line: 1704, column: 7, scope: !3758)
!3765 = !DILocation(line: 1705, column: 6, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 1705, column: 6)
!3767 = !DILocation(line: 1705, column: 30, scope: !3766)
!3768 = !DILocation(line: 1705, column: 27, scope: !3766)
!3769 = !DILocation(line: 1705, column: 6, scope: !3763)
!3770 = !DILocation(line: 1706, column: 11, scope: !3766)
!3771 = !DILocation(line: 1706, column: 4, scope: !3766)
!3772 = !DILocation(line: 1704, column: 50, scope: !3763)
!3773 = !DILocation(line: 1704, column: 48, scope: !3763)
!3774 = !DILocation(line: 1704, column: 7, scope: !3763)
!3775 = distinct !{!3775, !3764, !3776}
!3776 = !DILocation(line: 1706, column: 11, scope: !3758)
!3777 = !DILocation(line: 1707, column: 7, scope: !3759)
!3778 = !DILocation(line: 1710, column: 15, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1710, column: 3)
!3780 = !DILocation(line: 1710, column: 13, scope: !3779)
!3781 = !DILocation(line: 1710, column: 8, scope: !3779)
!3782 = !DILocation(line: 1710, column: 33, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 1710, column: 3)
!3784 = !DILocation(line: 1710, column: 3, scope: !3779)
!3785 = !DILocation(line: 1711, column: 9, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 1711, column: 9)
!3787 = !DILocation(line: 1711, column: 33, scope: !3786)
!3788 = !DILocation(line: 1711, column: 30, scope: !3786)
!3789 = !DILocation(line: 1711, column: 38, scope: !3786)
!3790 = !DILocation(line: 1711, column: 41, scope: !3786)
!3791 = !DILocation(line: 1711, column: 50, scope: !3786)
!3792 = !DILocation(line: 1711, column: 47, scope: !3786)
!3793 = !DILocation(line: 1711, column: 9, scope: !3783)
!3794 = !DILocation(line: 1712, column: 14, scope: !3786)
!3795 = !DILocation(line: 1712, column: 7, scope: !3786)
!3796 = !DILocation(line: 1710, column: 46, scope: !3783)
!3797 = !DILocation(line: 1710, column: 44, scope: !3783)
!3798 = !DILocation(line: 1710, column: 3, scope: !3783)
!3799 = distinct !{!3799, !3784, !3800}
!3800 = !DILocation(line: 1712, column: 14, scope: !3779)
!3801 = !DILocation(line: 1713, column: 3, scope: !3737)
!3802 = !DILocation(line: 1714, column: 1, scope: !3737)
!3803 = distinct !DISubprogram(name: "side_effects_p", scope: !3, file: !3, line: 2133, type: !1736, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3804 = !DILocalVariable(name: "x", arg: 1, scope: !3803, file: !3, line: 2133, type: !1713)
!3805 = !DILocation(line: 2133, column: 27, scope: !3803)
!3806 = !DILocalVariable(name: "code", scope: !3803, file: !3, line: 2135, type: !1742)
!3807 = !DILocation(line: 2135, column: 18, scope: !3803)
!3808 = !DILocation(line: 2135, column: 25, scope: !3803)
!3809 = !DILocation(line: 2136, column: 11, scope: !3803)
!3810 = !DILocation(line: 2136, column: 3, scope: !3803)
!3811 = !DILocation(line: 2152, column: 7, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2137, column: 5)
!3813 = !DILocation(line: 2158, column: 15, scope: !3812)
!3814 = !DILocation(line: 2158, column: 28, scope: !3812)
!3815 = !DILocation(line: 2158, column: 7, scope: !3812)
!3816 = !DILocation(line: 2169, column: 7, scope: !3812)
!3817 = !DILocation(line: 2174, column: 11, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 2174, column: 11)
!3819 = !DILocation(line: 2174, column: 11, scope: !3812)
!3820 = !DILocation(line: 2175, column: 2, scope: !3818)
!3821 = !DILocation(line: 2178, column: 7, scope: !3812)
!3822 = !DILocalVariable(name: "fmt", scope: !3823, file: !3, line: 2184, type: !648)
!3823 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2183, column: 3)
!3824 = !DILocation(line: 2184, column: 17, scope: !3823)
!3825 = !DILocation(line: 2184, column: 23, scope: !3823)
!3826 = !DILocalVariable(name: "i", scope: !3823, file: !3, line: 2185, type: !619)
!3827 = !DILocation(line: 2185, column: 9, scope: !3823)
!3828 = !DILocation(line: 2187, column: 14, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 2187, column: 5)
!3830 = !DILocation(line: 2187, column: 36, scope: !3829)
!3831 = !DILocation(line: 2187, column: 12, scope: !3829)
!3832 = !DILocation(line: 2187, column: 10, scope: !3829)
!3833 = !DILocation(line: 2187, column: 41, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 2187, column: 5)
!3835 = !DILocation(line: 2187, column: 43, scope: !3834)
!3836 = !DILocation(line: 2187, column: 5, scope: !3829)
!3837 = !DILocation(line: 2189, column: 6, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 2189, column: 6)
!3839 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 2188, column: 7)
!3840 = !DILocation(line: 2189, column: 10, scope: !3838)
!3841 = !DILocation(line: 2189, column: 13, scope: !3838)
!3842 = !DILocation(line: 2189, column: 6, scope: !3839)
!3843 = !DILocation(line: 2191, column: 26, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 2191, column: 10)
!3845 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2190, column: 4)
!3846 = !DILocation(line: 2191, column: 10, scope: !3844)
!3847 = !DILocation(line: 2191, column: 10, scope: !3845)
!3848 = !DILocation(line: 2192, column: 8, scope: !3844)
!3849 = !DILocation(line: 2193, column: 4, scope: !3845)
!3850 = !DILocation(line: 2194, column: 11, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2194, column: 11)
!3852 = !DILocation(line: 2194, column: 15, scope: !3851)
!3853 = !DILocation(line: 2194, column: 18, scope: !3851)
!3854 = !DILocation(line: 2194, column: 11, scope: !3838)
!3855 = !DILocalVariable(name: "j", scope: !3856, file: !3, line: 2196, type: !619)
!3856 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 2195, column: 4)
!3857 = !DILocation(line: 2196, column: 10, scope: !3856)
!3858 = !DILocation(line: 2197, column: 13, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 2197, column: 6)
!3860 = !DILocation(line: 2197, column: 11, scope: !3859)
!3861 = !DILocation(line: 2197, column: 18, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2197, column: 6)
!3863 = !DILocation(line: 2197, column: 22, scope: !3862)
!3864 = !DILocation(line: 2197, column: 20, scope: !3862)
!3865 = !DILocation(line: 2197, column: 6, scope: !3859)
!3866 = !DILocation(line: 2198, column: 28, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 2198, column: 12)
!3868 = !DILocation(line: 2198, column: 12, scope: !3867)
!3869 = !DILocation(line: 2198, column: 12, scope: !3862)
!3870 = !DILocation(line: 2199, column: 3, scope: !3867)
!3871 = !DILocation(line: 2198, column: 45, scope: !3867)
!3872 = !DILocation(line: 2197, column: 39, scope: !3862)
!3873 = !DILocation(line: 2197, column: 6, scope: !3862)
!3874 = distinct !{!3874, !3865, !3875}
!3875 = !DILocation(line: 2199, column: 10, scope: !3859)
!3876 = !DILocation(line: 2200, column: 4, scope: !3856)
!3877 = !DILocation(line: 2201, column: 7, scope: !3839)
!3878 = !DILocation(line: 2187, column: 50, scope: !3834)
!3879 = !DILocation(line: 2187, column: 5, scope: !3834)
!3880 = distinct !{!3880, !3836, !3881}
!3881 = !DILocation(line: 2201, column: 7, scope: !3829)
!3882 = !DILocation(line: 2203, column: 3, scope: !3803)
!3883 = !DILocation(line: 2204, column: 1, scope: !3803)
!3884 = distinct !DISubprogram(name: "multiple_sets", scope: !3, file: !3, line: 1072, type: !1736, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3885 = !DILocalVariable(name: "insn", arg: 1, scope: !3884, file: !3, line: 1072, type: !1713)
!3886 = !DILocation(line: 1072, column: 26, scope: !3884)
!3887 = !DILocalVariable(name: "found", scope: !3884, file: !3, line: 1074, type: !619)
!3888 = !DILocation(line: 1074, column: 7, scope: !3884)
!3889 = !DILocalVariable(name: "i", scope: !3884, file: !3, line: 1075, type: !619)
!3890 = !DILocation(line: 1075, column: 7, scope: !3884)
!3891 = !DILocation(line: 1078, column: 9, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 1078, column: 7)
!3893 = !DILocation(line: 1078, column: 7, scope: !3884)
!3894 = !DILocation(line: 1079, column: 5, scope: !3892)
!3895 = !DILocation(line: 1082, column: 7, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 1082, column: 7)
!3897 = !DILocation(line: 1082, column: 33, scope: !3896)
!3898 = !DILocation(line: 1082, column: 7, scope: !3884)
!3899 = !DILocation(line: 1084, column: 14, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 1084, column: 7)
!3901 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 1083, column: 5)
!3902 = !DILocation(line: 1084, column: 25, scope: !3900)
!3903 = !DILocation(line: 1084, column: 12, scope: !3900)
!3904 = !DILocation(line: 1084, column: 30, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1084, column: 7)
!3906 = !DILocation(line: 1084, column: 34, scope: !3905)
!3907 = !DILocation(line: 1084, column: 32, scope: !3905)
!3908 = !DILocation(line: 1084, column: 7, scope: !3900)
!3909 = !DILocation(line: 1085, column: 6, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1085, column: 6)
!3911 = !DILocation(line: 1085, column: 48, scope: !3910)
!3912 = !DILocation(line: 1085, column: 6, scope: !3905)
!3913 = !DILocation(line: 1088, column: 10, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 1088, column: 10)
!3915 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1086, column: 4)
!3916 = !DILocation(line: 1088, column: 10, scope: !3915)
!3917 = !DILocation(line: 1089, column: 8, scope: !3914)
!3918 = !DILocation(line: 1091, column: 14, scope: !3914)
!3919 = !DILocation(line: 1092, column: 4, scope: !3915)
!3920 = !DILocation(line: 1085, column: 51, scope: !3910)
!3921 = !DILocation(line: 1084, column: 64, scope: !3905)
!3922 = !DILocation(line: 1084, column: 7, scope: !3905)
!3923 = distinct !{!3923, !3908, !3924}
!3924 = !DILocation(line: 1092, column: 4, scope: !3900)
!3925 = !DILocation(line: 1093, column: 5, scope: !3901)
!3926 = !DILocation(line: 1096, column: 3, scope: !3884)
!3927 = !DILocation(line: 1097, column: 1, scope: !3884)
!3928 = distinct !DISubprogram(name: "set_noop_p", scope: !3, file: !3, line: 1103, type: !1736, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!3929 = !DILocalVariable(name: "set", arg: 1, scope: !3928, file: !3, line: 1103, type: !1713)
!3930 = !DILocation(line: 1103, column: 23, scope: !3928)
!3931 = !DILocalVariable(name: "src", scope: !3928, file: !3, line: 1105, type: !622)
!3932 = !DILocation(line: 1105, column: 7, scope: !3928)
!3933 = !DILocation(line: 1105, column: 13, scope: !3928)
!3934 = !DILocalVariable(name: "dst", scope: !3928, file: !3, line: 1106, type: !622)
!3935 = !DILocation(line: 1106, column: 7, scope: !3928)
!3936 = !DILocation(line: 1106, column: 13, scope: !3928)
!3937 = !DILocation(line: 1108, column: 7, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1108, column: 7)
!3939 = !DILocation(line: 1108, column: 14, scope: !3938)
!3940 = !DILocation(line: 1108, column: 11, scope: !3938)
!3941 = !DILocation(line: 1108, column: 21, scope: !3938)
!3942 = !DILocation(line: 1108, column: 24, scope: !3938)
!3943 = !DILocation(line: 1108, column: 31, scope: !3938)
!3944 = !DILocation(line: 1108, column: 28, scope: !3938)
!3945 = !DILocation(line: 1108, column: 7, scope: !3928)
!3946 = !DILocation(line: 1109, column: 5, scope: !3938)
!3947 = !DILocation(line: 1111, column: 7, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1111, column: 7)
!3949 = !DILocation(line: 1111, column: 19, scope: !3948)
!3950 = !DILocation(line: 1111, column: 22, scope: !3948)
!3951 = !DILocation(line: 1111, column: 7, scope: !3928)
!3952 = !DILocation(line: 1112, column: 25, scope: !3948)
!3953 = !DILocation(line: 1112, column: 30, scope: !3948)
!3954 = !DILocation(line: 1112, column: 12, scope: !3948)
!3955 = !DILocation(line: 1112, column: 35, scope: !3948)
!3956 = !DILocation(line: 1112, column: 55, scope: !3948)
!3957 = !DILocation(line: 1112, column: 39, scope: !3948)
!3958 = !DILocation(line: 1112, column: 38, scope: !3948)
!3959 = !DILocation(line: 0, scope: !3948)
!3960 = !DILocation(line: 1112, column: 5, scope: !3948)
!3961 = !DILocation(line: 1114, column: 7, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1114, column: 7)
!3963 = !DILocation(line: 1114, column: 22, scope: !3962)
!3964 = !DILocation(line: 1114, column: 7, scope: !3928)
!3965 = !DILocation(line: 1115, column: 25, scope: !3962)
!3966 = !DILocation(line: 1115, column: 40, scope: !3962)
!3967 = !DILocation(line: 1115, column: 12, scope: !3962)
!3968 = !DILocation(line: 1116, column: 27, scope: !3962)
!3969 = !DILocation(line: 1116, column: 30, scope: !3962)
!3970 = !DILocation(line: 1116, column: 47, scope: !3962)
!3971 = !DILocation(line: 1116, column: 44, scope: !3962)
!3972 = !DILocation(line: 1117, column: 5, scope: !3962)
!3973 = !DILocation(line: 1117, column: 25, scope: !3962)
!3974 = !DILocation(line: 1117, column: 9, scope: !3962)
!3975 = !DILocation(line: 1117, column: 8, scope: !3962)
!3976 = !DILocation(line: 0, scope: !3962)
!3977 = !DILocation(line: 1115, column: 5, scope: !3962)
!3978 = !DILocation(line: 1119, column: 7, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1119, column: 7)
!3980 = !DILocation(line: 1119, column: 22, scope: !3979)
!3981 = !DILocation(line: 1119, column: 7, scope: !3928)
!3982 = !DILocation(line: 1120, column: 11, scope: !3979)
!3983 = !DILocation(line: 1120, column: 9, scope: !3979)
!3984 = !DILocation(line: 1120, column: 5, scope: !3979)
!3985 = !DILocation(line: 1122, column: 7, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1122, column: 7)
!3987 = !DILocation(line: 1122, column: 22, scope: !3986)
!3988 = !DILocation(line: 1122, column: 32, scope: !3986)
!3989 = !DILocation(line: 1122, column: 35, scope: !3986)
!3990 = !DILocation(line: 1122, column: 50, scope: !3986)
!3991 = !DILocation(line: 1122, column: 7, scope: !3928)
!3992 = !DILocation(line: 1124, column: 11, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1124, column: 11)
!3994 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1123, column: 5)
!3995 = !DILocation(line: 1124, column: 32, scope: !3993)
!3996 = !DILocation(line: 1124, column: 29, scope: !3993)
!3997 = !DILocation(line: 1124, column: 11, scope: !3994)
!3998 = !DILocation(line: 1125, column: 2, scope: !3993)
!3999 = !DILocation(line: 1126, column: 13, scope: !3994)
!4000 = !DILocation(line: 1126, column: 11, scope: !3994)
!4001 = !DILocation(line: 1127, column: 13, scope: !3994)
!4002 = !DILocation(line: 1127, column: 11, scope: !3994)
!4003 = !DILocation(line: 1128, column: 5, scope: !3994)
!4004 = !DILocation(line: 1130, column: 11, scope: !3928)
!4005 = !DILocation(line: 1130, column: 23, scope: !3928)
!4006 = !DILocation(line: 1130, column: 26, scope: !3928)
!4007 = !DILocation(line: 1131, column: 4, scope: !3928)
!4008 = !DILocation(line: 1131, column: 7, scope: !3928)
!4009 = !DILocation(line: 1131, column: 22, scope: !3928)
!4010 = !DILocation(line: 1131, column: 19, scope: !3928)
!4011 = !DILocation(line: 0, scope: !3928)
!4012 = !DILocation(line: 1130, column: 3, scope: !3928)
!4013 = !DILocation(line: 1132, column: 1, scope: !3928)
!4014 = distinct !DISubprogram(name: "noop_move_p", scope: !3, file: !3, line: 1138, type: !1736, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4015 = !DILocalVariable(name: "insn", arg: 1, scope: !4014, file: !3, line: 1138, type: !1713)
!4016 = !DILocation(line: 1138, column: 24, scope: !4014)
!4017 = !DILocalVariable(name: "pat", scope: !4014, file: !3, line: 1140, type: !622)
!4018 = !DILocation(line: 1140, column: 7, scope: !4014)
!4019 = !DILocation(line: 1140, column: 13, scope: !4014)
!4020 = !DILocation(line: 1142, column: 7, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1142, column: 7)
!4022 = !DILocation(line: 1142, column: 24, scope: !4021)
!4023 = !DILocation(line: 1142, column: 7, scope: !4014)
!4024 = !DILocation(line: 1143, column: 5, scope: !4021)
!4025 = !DILocation(line: 1146, column: 22, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1146, column: 7)
!4027 = !DILocation(line: 1146, column: 7, scope: !4026)
!4028 = !DILocation(line: 1146, column: 7, scope: !4014)
!4029 = !DILocation(line: 1147, column: 5, scope: !4026)
!4030 = !DILocation(line: 1149, column: 7, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1149, column: 7)
!4032 = !DILocation(line: 1149, column: 22, scope: !4031)
!4033 = !DILocation(line: 1149, column: 29, scope: !4031)
!4034 = !DILocation(line: 1149, column: 44, scope: !4031)
!4035 = !DILocation(line: 1149, column: 32, scope: !4031)
!4036 = !DILocation(line: 1149, column: 7, scope: !4014)
!4037 = !DILocation(line: 1150, column: 5, scope: !4031)
!4038 = !DILocation(line: 1152, column: 7, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1152, column: 7)
!4040 = !DILocation(line: 1152, column: 22, scope: !4039)
!4041 = !DILocation(line: 1152, column: 7, scope: !4014)
!4042 = !DILocalVariable(name: "i", scope: !4043, file: !3, line: 1154, type: !619)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1153, column: 5)
!4044 = !DILocation(line: 1154, column: 11, scope: !4043)
!4045 = !DILocation(line: 1157, column: 14, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1157, column: 7)
!4047 = !DILocation(line: 1157, column: 12, scope: !4046)
!4048 = !DILocation(line: 1157, column: 19, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1157, column: 7)
!4050 = !DILocation(line: 1157, column: 23, scope: !4049)
!4051 = !DILocation(line: 1157, column: 21, scope: !4049)
!4052 = !DILocation(line: 1157, column: 7, scope: !4046)
!4053 = !DILocalVariable(name: "tem", scope: !4054, file: !3, line: 1159, type: !622)
!4054 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1158, column: 2)
!4055 = !DILocation(line: 1159, column: 8, scope: !4054)
!4056 = !DILocation(line: 1159, column: 14, scope: !4054)
!4057 = !DILocation(line: 1161, column: 8, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1161, column: 8)
!4059 = !DILocation(line: 1161, column: 23, scope: !4058)
!4060 = !DILocation(line: 1162, column: 8, scope: !4058)
!4061 = !DILocation(line: 1162, column: 11, scope: !4058)
!4062 = !DILocation(line: 1162, column: 26, scope: !4058)
!4063 = !DILocation(line: 1161, column: 8, scope: !4054)
!4064 = !DILocation(line: 1163, column: 6, scope: !4058)
!4065 = !DILocation(line: 1165, column: 8, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1165, column: 8)
!4067 = !DILocation(line: 1165, column: 23, scope: !4066)
!4068 = !DILocation(line: 1165, column: 30, scope: !4066)
!4069 = !DILocation(line: 1165, column: 47, scope: !4066)
!4070 = !DILocation(line: 1165, column: 35, scope: !4066)
!4071 = !DILocation(line: 1165, column: 8, scope: !4054)
!4072 = !DILocation(line: 1166, column: 6, scope: !4066)
!4073 = !DILocation(line: 1167, column: 2, scope: !4054)
!4074 = !DILocation(line: 1157, column: 42, scope: !4049)
!4075 = !DILocation(line: 1157, column: 7, scope: !4049)
!4076 = distinct !{!4076, !4052, !4077}
!4077 = !DILocation(line: 1167, column: 2, scope: !4046)
!4078 = !DILocation(line: 1169, column: 7, scope: !4043)
!4079 = !DILocation(line: 1171, column: 3, scope: !4014)
!4080 = !DILocation(line: 1172, column: 1, scope: !4014)
!4081 = distinct !DISubprogram(name: "find_last_value", scope: !3, file: !3, line: 1183, type: !4082, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!622, !622, !1697, !622, !619}
!4084 = !DILocalVariable(name: "x", arg: 1, scope: !4081, file: !3, line: 1183, type: !622)
!4085 = !DILocation(line: 1183, column: 22, scope: !4081)
!4086 = !DILocalVariable(name: "pinsn", arg: 2, scope: !4081, file: !3, line: 1183, type: !1697)
!4087 = !DILocation(line: 1183, column: 30, scope: !4081)
!4088 = !DILocalVariable(name: "valid_to", arg: 3, scope: !4081, file: !3, line: 1183, type: !622)
!4089 = !DILocation(line: 1183, column: 41, scope: !4081)
!4090 = !DILocalVariable(name: "allow_hwreg", arg: 4, scope: !4081, file: !3, line: 1183, type: !619)
!4091 = !DILocation(line: 1183, column: 55, scope: !4081)
!4092 = !DILocalVariable(name: "p", scope: !4081, file: !3, line: 1185, type: !622)
!4093 = !DILocation(line: 1185, column: 7, scope: !4081)
!4094 = !DILocation(line: 1187, column: 12, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1187, column: 3)
!4096 = !DILocation(line: 1187, column: 10, scope: !4095)
!4097 = !DILocation(line: 1187, column: 8, scope: !4095)
!4098 = !DILocation(line: 1187, column: 32, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 1187, column: 3)
!4100 = !DILocation(line: 1187, column: 34, scope: !4099)
!4101 = !DILocation(line: 1187, column: 38, scope: !4099)
!4102 = !DILocation(line: 1187, column: 37, scope: !4099)
!4103 = !DILocation(line: 0, scope: !4099)
!4104 = !DILocation(line: 1187, column: 3, scope: !4095)
!4105 = !DILocation(line: 1189, column: 9, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 1189, column: 9)
!4107 = !DILocation(line: 1189, column: 9, scope: !4099)
!4108 = !DILocalVariable(name: "set", scope: !4109, file: !3, line: 1191, type: !622)
!4109 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1190, column: 7)
!4110 = !DILocation(line: 1191, column: 6, scope: !4109)
!4111 = !DILocation(line: 1191, column: 12, scope: !4109)
!4112 = !DILocalVariable(name: "note", scope: !4109, file: !3, line: 1192, type: !622)
!4113 = !DILocation(line: 1192, column: 6, scope: !4109)
!4114 = !DILocation(line: 1192, column: 28, scope: !4109)
!4115 = !DILocation(line: 1192, column: 13, scope: !4109)
!4116 = !DILocation(line: 1194, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 1194, column: 6)
!4118 = !DILocation(line: 1194, column: 10, scope: !4117)
!4119 = !DILocation(line: 1194, column: 26, scope: !4117)
!4120 = !DILocation(line: 1194, column: 29, scope: !4117)
!4121 = !DILocation(line: 1194, column: 13, scope: !4117)
!4122 = !DILocation(line: 1194, column: 6, scope: !4109)
!4123 = !DILocalVariable(name: "src", scope: !4124, file: !3, line: 1196, type: !622)
!4124 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1195, column: 4)
!4125 = !DILocation(line: 1196, column: 10, scope: !4124)
!4126 = !DILocation(line: 1196, column: 16, scope: !4124)
!4127 = !DILocation(line: 1198, column: 10, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 1198, column: 10)
!4129 = !DILocation(line: 1198, column: 15, scope: !4128)
!4130 = !DILocation(line: 1198, column: 18, scope: !4128)
!4131 = !DILocation(line: 1198, column: 44, scope: !4128)
!4132 = !DILocation(line: 1198, column: 10, scope: !4124)
!4133 = !DILocation(line: 1199, column: 14, scope: !4128)
!4134 = !DILocation(line: 1199, column: 12, scope: !4128)
!4135 = !DILocation(line: 1199, column: 8, scope: !4128)
!4136 = !DILocation(line: 1201, column: 11, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 1201, column: 10)
!4138 = !DILocation(line: 1201, column: 20, scope: !4137)
!4139 = !DILocation(line: 1202, column: 4, scope: !4137)
!4140 = !DILocation(line: 1202, column: 29, scope: !4137)
!4141 = !DILocation(line: 1202, column: 34, scope: !4137)
!4142 = !DILocation(line: 1202, column: 49, scope: !4137)
!4143 = !DILocation(line: 1202, column: 9, scope: !4137)
!4144 = !DILocation(line: 1205, column: 3, scope: !4137)
!4145 = !DILocation(line: 1205, column: 10, scope: !4137)
!4146 = !DILocation(line: 1206, column: 9, scope: !4137)
!4147 = !DILocation(line: 1206, column: 12, scope: !4137)
!4148 = !DILocation(line: 1206, column: 24, scope: !4137)
!4149 = !DILocation(line: 1206, column: 49, scope: !4137)
!4150 = !DILocation(line: 1206, column: 52, scope: !4137)
!4151 = !DILocation(line: 1201, column: 10, scope: !4124)
!4152 = !DILocation(line: 1208, column: 12, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 1207, column: 8)
!4154 = !DILocation(line: 1208, column: 4, scope: !4153)
!4155 = !DILocation(line: 1208, column: 10, scope: !4153)
!4156 = !DILocation(line: 1209, column: 10, scope: !4153)
!4157 = !DILocation(line: 1209, column: 3, scope: !4153)
!4158 = !DILocation(line: 1211, column: 4, scope: !4124)
!4159 = !DILocation(line: 1214, column: 17, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 1214, column: 6)
!4161 = !DILocation(line: 1214, column: 20, scope: !4160)
!4162 = !DILocation(line: 1214, column: 6, scope: !4160)
!4163 = !DILocation(line: 1214, column: 6, scope: !4109)
!4164 = !DILocation(line: 1215, column: 4, scope: !4160)
!4165 = !DILocation(line: 1216, column: 7, scope: !4109)
!4166 = !DILocation(line: 1188, column: 12, scope: !4099)
!4167 = !DILocation(line: 1188, column: 10, scope: !4099)
!4168 = !DILocation(line: 1187, column: 3, scope: !4099)
!4169 = distinct !{!4169, !4104, !4170}
!4170 = !DILocation(line: 1216, column: 7, scope: !4095)
!4171 = !DILocation(line: 1218, column: 10, scope: !4081)
!4172 = !DILocation(line: 1218, column: 3, scope: !4081)
!4173 = !DILocation(line: 1219, column: 1, scope: !4081)
!4174 = distinct !DISubprogram(name: "refers_to_regno_p", scope: !3, file: !3, line: 1229, type: !4175, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!619, !7, !7, !1713, !1697}
!4177 = !DILocalVariable(name: "regno", arg: 1, scope: !4174, file: !3, line: 1229, type: !7)
!4178 = !DILocation(line: 1229, column: 33, scope: !4174)
!4179 = !DILocalVariable(name: "endregno", arg: 2, scope: !4174, file: !3, line: 1229, type: !7)
!4180 = !DILocation(line: 1229, column: 53, scope: !4174)
!4181 = !DILocalVariable(name: "x", arg: 3, scope: !4174, file: !3, line: 1229, type: !1713)
!4182 = !DILocation(line: 1229, column: 73, scope: !4174)
!4183 = !DILocalVariable(name: "loc", arg: 4, scope: !4174, file: !3, line: 1230, type: !1697)
!4184 = !DILocation(line: 1230, column: 11, scope: !4174)
!4185 = !DILocalVariable(name: "i", scope: !4174, file: !3, line: 1232, type: !619)
!4186 = !DILocation(line: 1232, column: 7, scope: !4174)
!4187 = !DILocalVariable(name: "x_regno", scope: !4174, file: !3, line: 1233, type: !7)
!4188 = !DILocation(line: 1233, column: 16, scope: !4174)
!4189 = !DILocalVariable(name: "code", scope: !4174, file: !3, line: 1234, type: !377)
!4190 = !DILocation(line: 1234, column: 12, scope: !4174)
!4191 = !DILocalVariable(name: "fmt", scope: !4174, file: !3, line: 1235, type: !648)
!4192 = !DILocation(line: 1235, column: 15, scope: !4174)
!4193 = !DILocation(line: 1235, column: 3, scope: !4174)
!4194 = !DILabel(scope: !4174, name: "repeat", file: !3, line: 1237)
!4195 = !DILocation(line: 1237, column: 2, scope: !4174)
!4196 = !DILocation(line: 1240, column: 7, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1240, column: 7)
!4198 = !DILocation(line: 1240, column: 9, scope: !4197)
!4199 = !DILocation(line: 1240, column: 7, scope: !4174)
!4200 = !DILocation(line: 1241, column: 5, scope: !4197)
!4201 = !DILocation(line: 1243, column: 10, scope: !4174)
!4202 = !DILocation(line: 1243, column: 8, scope: !4174)
!4203 = !DILocation(line: 1245, column: 11, scope: !4174)
!4204 = !DILocation(line: 1245, column: 3, scope: !4174)
!4205 = !DILocation(line: 1248, column: 17, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1246, column: 5)
!4207 = !DILocation(line: 1248, column: 15, scope: !4206)
!4208 = !DILocation(line: 1253, column: 12, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1253, column: 11)
!4210 = !DILocation(line: 1253, column: 20, scope: !4209)
!4211 = !DILocation(line: 1255, column: 5, scope: !4209)
!4212 = !DILocation(line: 1255, column: 8, scope: !4209)
!4213 = !DILocation(line: 1255, column: 16, scope: !4209)
!4214 = !DILocation(line: 1257, column: 5, scope: !4209)
!4215 = !DILocation(line: 1257, column: 8, scope: !4209)
!4216 = !DILocation(line: 1257, column: 16, scope: !4209)
!4217 = !DILocation(line: 1258, column: 4, scope: !4209)
!4218 = !DILocation(line: 1258, column: 7, scope: !4209)
!4219 = !DILocation(line: 1258, column: 13, scope: !4209)
!4220 = !DILocation(line: 1258, column: 39, scope: !4209)
!4221 = !DILocation(line: 1258, column: 42, scope: !4209)
!4222 = !DILocation(line: 1258, column: 48, scope: !4209)
!4223 = !DILocation(line: 1253, column: 11, scope: !4206)
!4224 = !DILocation(line: 1259, column: 2, scope: !4209)
!4225 = !DILocation(line: 1261, column: 14, scope: !4206)
!4226 = !DILocation(line: 1261, column: 25, scope: !4206)
!4227 = !DILocation(line: 1261, column: 23, scope: !4206)
!4228 = !DILocation(line: 1261, column: 33, scope: !4206)
!4229 = !DILocation(line: 1261, column: 36, scope: !4206)
!4230 = !DILocation(line: 1261, column: 44, scope: !4206)
!4231 = !DILocation(line: 1261, column: 42, scope: !4206)
!4232 = !DILocation(line: 0, scope: !4206)
!4233 = !DILocation(line: 1261, column: 7, scope: !4206)
!4234 = !DILocation(line: 1266, column: 11, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1266, column: 11)
!4236 = !DILocation(line: 1267, column: 4, scope: !4235)
!4237 = !DILocation(line: 1267, column: 7, scope: !4235)
!4238 = !DILocation(line: 1267, column: 30, scope: !4235)
!4239 = !DILocation(line: 1266, column: 11, scope: !4206)
!4240 = !DILocalVariable(name: "inner_regno", scope: !4241, file: !3, line: 1269, type: !7)
!4241 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1268, column: 2)
!4242 = !DILocation(line: 1269, column: 17, scope: !4241)
!4243 = !DILocation(line: 1269, column: 45, scope: !4241)
!4244 = !DILocation(line: 1269, column: 31, scope: !4241)
!4245 = !DILocalVariable(name: "inner_endregno", scope: !4241, file: !3, line: 1270, type: !7)
!4246 = !DILocation(line: 1270, column: 17, scope: !4241)
!4247 = !DILocation(line: 1271, column: 8, scope: !4241)
!4248 = !DILocation(line: 1271, column: 23, scope: !4241)
!4249 = !DILocation(line: 1271, column: 35, scope: !4241)
!4250 = !DILocation(line: 1272, column: 25, scope: !4241)
!4251 = !DILocation(line: 1272, column: 11, scope: !4241)
!4252 = !DILocation(line: 1271, column: 20, scope: !4241)
!4253 = !DILocation(line: 1274, column: 11, scope: !4241)
!4254 = !DILocation(line: 1274, column: 22, scope: !4241)
!4255 = !DILocation(line: 1274, column: 20, scope: !4241)
!4256 = !DILocation(line: 1274, column: 34, scope: !4241)
!4257 = !DILocation(line: 1274, column: 37, scope: !4241)
!4258 = !DILocation(line: 1274, column: 45, scope: !4241)
!4259 = !DILocation(line: 1274, column: 43, scope: !4241)
!4260 = !DILocation(line: 0, scope: !4241)
!4261 = !DILocation(line: 1274, column: 4, scope: !4241)
!4262 = !DILocation(line: 1276, column: 7, scope: !4206)
!4263 = !DILocation(line: 1280, column: 12, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1280, column: 11)
!4265 = !DILocation(line: 1280, column: 28, scope: !4264)
!4266 = !DILocation(line: 1280, column: 25, scope: !4264)
!4267 = !DILocation(line: 1284, column: 4, scope: !4264)
!4268 = !DILocation(line: 1284, column: 9, scope: !4264)
!4269 = !DILocation(line: 1284, column: 33, scope: !4264)
!4270 = !DILocation(line: 1285, column: 9, scope: !4264)
!4271 = !DILocation(line: 1285, column: 12, scope: !4264)
!4272 = !DILocation(line: 1285, column: 20, scope: !4264)
!4273 = !DILocation(line: 1285, column: 16, scope: !4264)
!4274 = !DILocation(line: 1286, column: 9, scope: !4264)
!4275 = !DILocation(line: 1286, column: 12, scope: !4264)
!4276 = !DILocation(line: 1287, column: 9, scope: !4264)
!4277 = !DILocation(line: 1287, column: 12, scope: !4264)
!4278 = !DILocation(line: 1287, column: 46, scope: !4264)
!4279 = !DILocation(line: 1288, column: 9, scope: !4264)
!4280 = !DILocation(line: 1288, column: 31, scope: !4264)
!4281 = !DILocation(line: 1288, column: 38, scope: !4264)
!4282 = !DILocation(line: 1289, column: 10, scope: !4264)
!4283 = !DILocation(line: 1289, column: 37, scope: !4264)
!4284 = !DILocation(line: 1288, column: 12, scope: !4264)
!4285 = !DILocation(line: 1290, column: 8, scope: !4264)
!4286 = !DILocation(line: 1290, column: 13, scope: !4264)
!4287 = !DILocation(line: 1291, column: 5, scope: !4264)
!4288 = !DILocation(line: 1291, column: 27, scope: !4264)
!4289 = !DILocation(line: 1291, column: 34, scope: !4264)
!4290 = !DILocation(line: 1291, column: 44, scope: !4264)
!4291 = !DILocation(line: 1291, column: 58, scope: !4264)
!4292 = !DILocation(line: 1291, column: 8, scope: !4264)
!4293 = !DILocation(line: 1280, column: 11, scope: !4206)
!4294 = !DILocation(line: 1292, column: 2, scope: !4264)
!4295 = !DILocation(line: 1294, column: 11, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1294, column: 11)
!4297 = !DILocation(line: 1294, column: 16, scope: !4296)
!4298 = !DILocation(line: 1294, column: 27, scope: !4296)
!4299 = !DILocation(line: 1294, column: 30, scope: !4296)
!4300 = !DILocation(line: 1294, column: 38, scope: !4296)
!4301 = !DILocation(line: 1294, column: 34, scope: !4296)
!4302 = !DILocation(line: 1294, column: 11, scope: !4206)
!4303 = !DILocation(line: 1295, column: 2, scope: !4296)
!4304 = !DILocation(line: 1296, column: 11, scope: !4206)
!4305 = !DILocation(line: 1296, column: 9, scope: !4206)
!4306 = !DILocation(line: 1297, column: 7, scope: !4206)
!4307 = !DILocation(line: 1300, column: 7, scope: !4206)
!4308 = !DILocation(line: 1305, column: 9, scope: !4174)
!4309 = !DILocation(line: 1305, column: 7, scope: !4174)
!4310 = !DILocation(line: 1306, column: 12, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1306, column: 3)
!4312 = !DILocation(line: 1306, column: 34, scope: !4311)
!4313 = !DILocation(line: 1306, column: 10, scope: !4311)
!4314 = !DILocation(line: 1306, column: 8, scope: !4311)
!4315 = !DILocation(line: 1306, column: 39, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 1306, column: 3)
!4317 = !DILocation(line: 1306, column: 41, scope: !4316)
!4318 = !DILocation(line: 1306, column: 3, scope: !4311)
!4319 = !DILocation(line: 1308, column: 11, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 1308, column: 11)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 1307, column: 5)
!4322 = !DILocation(line: 1308, column: 15, scope: !4320)
!4323 = !DILocation(line: 1308, column: 18, scope: !4320)
!4324 = !DILocation(line: 1308, column: 25, scope: !4320)
!4325 = !DILocation(line: 1308, column: 28, scope: !4320)
!4326 = !DILocation(line: 1308, column: 36, scope: !4320)
!4327 = !DILocation(line: 1308, column: 32, scope: !4320)
!4328 = !DILocation(line: 1308, column: 11, scope: !4321)
!4329 = !DILocation(line: 1310, column: 8, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1310, column: 8)
!4331 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1309, column: 2)
!4332 = !DILocation(line: 1310, column: 10, scope: !4330)
!4333 = !DILocation(line: 1310, column: 8, scope: !4331)
!4334 = !DILocation(line: 1312, column: 12, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1311, column: 6)
!4336 = !DILocation(line: 1312, column: 10, scope: !4335)
!4337 = !DILocation(line: 1313, column: 8, scope: !4335)
!4338 = !DILocation(line: 1316, column: 29, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1316, column: 10)
!4340 = !DILocation(line: 1316, column: 36, scope: !4339)
!4341 = !DILocation(line: 1316, column: 46, scope: !4339)
!4342 = !DILocation(line: 1316, column: 59, scope: !4339)
!4343 = !DILocation(line: 1316, column: 10, scope: !4339)
!4344 = !DILocation(line: 1316, column: 10, scope: !4330)
!4345 = !DILocation(line: 1317, column: 8, scope: !4339)
!4346 = !DILocation(line: 1318, column: 2, scope: !4331)
!4347 = !DILocation(line: 1319, column: 16, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1319, column: 16)
!4349 = !DILocation(line: 1319, column: 20, scope: !4348)
!4350 = !DILocation(line: 1319, column: 23, scope: !4348)
!4351 = !DILocation(line: 1319, column: 16, scope: !4320)
!4352 = !DILocalVariable(name: "j", scope: !4353, file: !3, line: 1321, type: !619)
!4353 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 1320, column: 2)
!4354 = !DILocation(line: 1321, column: 8, scope: !4353)
!4355 = !DILocation(line: 1322, column: 13, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 1322, column: 4)
!4357 = !DILocation(line: 1322, column: 28, scope: !4356)
!4358 = !DILocation(line: 1322, column: 11, scope: !4356)
!4359 = !DILocation(line: 1322, column: 9, scope: !4356)
!4360 = !DILocation(line: 1322, column: 33, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 1322, column: 4)
!4362 = !DILocation(line: 1322, column: 35, scope: !4361)
!4363 = !DILocation(line: 1322, column: 4, scope: !4356)
!4364 = !DILocation(line: 1323, column: 10, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 1323, column: 10)
!4366 = !DILocation(line: 1323, column: 18, scope: !4365)
!4367 = !DILocation(line: 1323, column: 14, scope: !4365)
!4368 = !DILocation(line: 1324, column: 3, scope: !4365)
!4369 = !DILocation(line: 1324, column: 25, scope: !4365)
!4370 = !DILocation(line: 1324, column: 32, scope: !4365)
!4371 = !DILocation(line: 1324, column: 42, scope: !4365)
!4372 = !DILocation(line: 1324, column: 61, scope: !4365)
!4373 = !DILocation(line: 1324, column: 6, scope: !4365)
!4374 = !DILocation(line: 1323, column: 10, scope: !4361)
!4375 = !DILocation(line: 1325, column: 8, scope: !4365)
!4376 = !DILocation(line: 1324, column: 64, scope: !4365)
!4377 = !DILocation(line: 1322, column: 42, scope: !4361)
!4378 = !DILocation(line: 1322, column: 4, scope: !4361)
!4379 = distinct !{!4379, !4363, !4380}
!4380 = !DILocation(line: 1325, column: 15, scope: !4356)
!4381 = !DILocation(line: 1326, column: 2, scope: !4353)
!4382 = !DILocation(line: 1327, column: 5, scope: !4321)
!4383 = !DILocation(line: 1306, column: 48, scope: !4316)
!4384 = !DILocation(line: 1306, column: 3, scope: !4316)
!4385 = distinct !{!4385, !4318, !4386}
!4386 = !DILocation(line: 1327, column: 5, scope: !4311)
!4387 = !DILocation(line: 1328, column: 3, scope: !4174)
!4388 = !DILocation(line: 1329, column: 1, scope: !4174)
!4389 = distinct !DISubprogram(name: "end_hard_regno", scope: !3252, file: !3252, line: 290, type: !4390, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!7, !5, !7}
!4392 = !DILocalVariable(name: "mode", arg: 1, scope: !4389, file: !3252, line: 290, type: !5)
!4393 = !DILocation(line: 290, column: 35, scope: !4389)
!4394 = !DILocalVariable(name: "regno", arg: 2, scope: !4389, file: !3252, line: 290, type: !7)
!4395 = !DILocation(line: 290, column: 54, scope: !4389)
!4396 = !DILocation(line: 292, column: 10, scope: !4389)
!4397 = !DILocation(line: 292, column: 35, scope: !4389)
!4398 = !DILocation(line: 292, column: 18, scope: !4389)
!4399 = !DILocation(line: 292, column: 48, scope: !4389)
!4400 = !DILocation(line: 292, column: 16, scope: !4389)
!4401 = !DILocation(line: 292, column: 3, scope: !4389)
!4402 = distinct !DISubprogram(name: "subreg_regno", scope: !3, file: !3, line: 3334, type: !2230, scopeLine: 3335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4403 = !DILocalVariable(name: "x", arg: 1, scope: !4402, file: !3, line: 3334, type: !1713)
!4404 = !DILocation(line: 3334, column: 25, scope: !4402)
!4405 = !DILocalVariable(name: "ret", scope: !4402, file: !3, line: 3336, type: !7)
!4406 = !DILocation(line: 3336, column: 16, scope: !4402)
!4407 = !DILocalVariable(name: "subreg", scope: !4402, file: !3, line: 3337, type: !622)
!4408 = !DILocation(line: 3337, column: 7, scope: !4402)
!4409 = !DILocation(line: 3337, column: 16, scope: !4402)
!4410 = !DILocalVariable(name: "regno", scope: !4402, file: !3, line: 3338, type: !619)
!4411 = !DILocation(line: 3338, column: 7, scope: !4402)
!4412 = !DILocation(line: 3338, column: 15, scope: !4402)
!4413 = !DILocation(line: 3340, column: 9, scope: !4402)
!4414 = !DILocation(line: 3340, column: 38, scope: !4402)
!4415 = !DILocation(line: 3341, column: 10, scope: !4402)
!4416 = !DILocation(line: 3342, column: 10, scope: !4402)
!4417 = !DILocation(line: 3343, column: 10, scope: !4402)
!4418 = !DILocation(line: 3340, column: 17, scope: !4402)
!4419 = !DILocation(line: 3340, column: 15, scope: !4402)
!4420 = !DILocation(line: 3340, column: 7, scope: !4402)
!4421 = !DILocation(line: 3344, column: 10, scope: !4402)
!4422 = !DILocation(line: 3344, column: 3, scope: !4402)
!4423 = distinct !DISubprogram(name: "subreg_nregs", scope: !3, file: !3, line: 3351, type: !2230, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4424 = !DILocalVariable(name: "x", arg: 1, scope: !4423, file: !3, line: 3351, type: !1713)
!4425 = !DILocation(line: 3351, column: 25, scope: !4423)
!4426 = !DILocation(line: 3353, column: 35, scope: !4423)
!4427 = !DILocation(line: 3353, column: 59, scope: !4423)
!4428 = !DILocation(line: 3353, column: 10, scope: !4423)
!4429 = !DILocation(line: 3353, column: 3, scope: !4423)
!4430 = distinct !DISubprogram(name: "note_uses", scope: !3, file: !3, line: 1479, type: !4431, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !1697, !4433, !732}
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !1697, !732}
!4436 = !DILocalVariable(name: "pbody", arg: 1, scope: !4430, file: !3, line: 1479, type: !1697)
!4437 = !DILocation(line: 1479, column: 17, scope: !4430)
!4438 = !DILocalVariable(name: "fun", arg: 2, scope: !4430, file: !3, line: 1479, type: !4433)
!4439 = !DILocation(line: 1479, column: 31, scope: !4430)
!4440 = !DILocalVariable(name: "data", arg: 3, scope: !4430, file: !3, line: 1479, type: !732)
!4441 = !DILocation(line: 1479, column: 59, scope: !4430)
!4442 = !DILocalVariable(name: "body", scope: !4430, file: !3, line: 1481, type: !622)
!4443 = !DILocation(line: 1481, column: 7, scope: !4430)
!4444 = !DILocation(line: 1481, column: 15, scope: !4430)
!4445 = !DILocation(line: 1481, column: 14, scope: !4430)
!4446 = !DILocalVariable(name: "i", scope: !4430, file: !3, line: 1482, type: !619)
!4447 = !DILocation(line: 1482, column: 7, scope: !4430)
!4448 = !DILocation(line: 1484, column: 11, scope: !4430)
!4449 = !DILocation(line: 1484, column: 3, scope: !4430)
!4450 = !DILocation(line: 1487, column: 9, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 1485, column: 5)
!4452 = !DILocation(line: 1487, column: 16, scope: !4451)
!4453 = !DILocation(line: 1487, column: 39, scope: !4451)
!4454 = !DILocation(line: 1487, column: 7, scope: !4451)
!4455 = !DILocation(line: 1488, column: 19, scope: !4451)
!4456 = !DILocation(line: 1488, column: 42, scope: !4451)
!4457 = !DILocation(line: 1488, column: 47, scope: !4451)
!4458 = !DILocation(line: 1488, column: 7, scope: !4451)
!4459 = !DILocation(line: 1489, column: 7, scope: !4451)
!4460 = !DILocation(line: 1492, column: 16, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1492, column: 7)
!4462 = !DILocation(line: 1492, column: 34, scope: !4461)
!4463 = !DILocation(line: 1492, column: 14, scope: !4461)
!4464 = !DILocation(line: 1492, column: 12, scope: !4461)
!4465 = !DILocation(line: 1492, column: 39, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1492, column: 7)
!4467 = !DILocation(line: 1492, column: 41, scope: !4466)
!4468 = !DILocation(line: 1492, column: 7, scope: !4461)
!4469 = !DILocation(line: 1493, column: 14, scope: !4466)
!4470 = !DILocation(line: 1493, column: 36, scope: !4466)
!4471 = !DILocation(line: 1493, column: 41, scope: !4466)
!4472 = !DILocation(line: 1493, column: 2, scope: !4466)
!4473 = !DILocation(line: 1492, column: 48, scope: !4466)
!4474 = !DILocation(line: 1492, column: 7, scope: !4466)
!4475 = distinct !{!4475, !4468, !4476}
!4476 = !DILocation(line: 1493, column: 45, scope: !4461)
!4477 = !DILocation(line: 1494, column: 7, scope: !4451)
!4478 = !DILocation(line: 1497, column: 16, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1497, column: 7)
!4480 = !DILocation(line: 1497, column: 34, scope: !4479)
!4481 = !DILocation(line: 1497, column: 14, scope: !4479)
!4482 = !DILocation(line: 1497, column: 12, scope: !4479)
!4483 = !DILocation(line: 1497, column: 39, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1497, column: 7)
!4485 = !DILocation(line: 1497, column: 41, scope: !4484)
!4486 = !DILocation(line: 1497, column: 7, scope: !4479)
!4487 = !DILocation(line: 1498, column: 14, scope: !4484)
!4488 = !DILocation(line: 1498, column: 46, scope: !4484)
!4489 = !DILocation(line: 1498, column: 51, scope: !4484)
!4490 = !DILocation(line: 1498, column: 2, scope: !4484)
!4491 = !DILocation(line: 1497, column: 48, scope: !4484)
!4492 = !DILocation(line: 1497, column: 7, scope: !4484)
!4493 = distinct !{!4493, !4486, !4494}
!4494 = !DILocation(line: 1498, column: 55, scope: !4479)
!4495 = !DILocation(line: 1499, column: 7, scope: !4451)
!4496 = !DILocation(line: 1502, column: 9, scope: !4451)
!4497 = !DILocation(line: 1502, column: 16, scope: !4451)
!4498 = !DILocation(line: 1502, column: 32, scope: !4451)
!4499 = !DILocation(line: 1502, column: 7, scope: !4451)
!4500 = !DILocation(line: 1503, column: 7, scope: !4451)
!4501 = !DILocation(line: 1506, column: 16, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1506, column: 7)
!4503 = !DILocation(line: 1506, column: 49, scope: !4502)
!4504 = !DILocation(line: 1506, column: 14, scope: !4502)
!4505 = !DILocation(line: 1506, column: 12, scope: !4502)
!4506 = !DILocation(line: 1506, column: 54, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 1506, column: 7)
!4508 = !DILocation(line: 1506, column: 56, scope: !4507)
!4509 = !DILocation(line: 1506, column: 7, scope: !4502)
!4510 = !DILocation(line: 1507, column: 4, scope: !4507)
!4511 = !DILocation(line: 1507, column: 11, scope: !4507)
!4512 = !DILocation(line: 1507, column: 41, scope: !4507)
!4513 = !DILocation(line: 1507, column: 2, scope: !4507)
!4514 = !DILocation(line: 1506, column: 63, scope: !4507)
!4515 = !DILocation(line: 1506, column: 7, scope: !4507)
!4516 = distinct !{!4516, !4509, !4517}
!4517 = !DILocation(line: 1507, column: 45, scope: !4502)
!4518 = !DILocation(line: 1508, column: 7, scope: !4451)
!4519 = !DILocation(line: 1511, column: 9, scope: !4451)
!4520 = !DILocation(line: 1511, column: 16, scope: !4451)
!4521 = !DILocation(line: 1511, column: 39, scope: !4451)
!4522 = !DILocation(line: 1511, column: 7, scope: !4451)
!4523 = !DILocation(line: 1512, column: 7, scope: !4451)
!4524 = !DILocation(line: 1515, column: 9, scope: !4451)
!4525 = !DILocation(line: 1515, column: 16, scope: !4451)
!4526 = !DILocation(line: 1515, column: 32, scope: !4451)
!4527 = !DILocation(line: 1515, column: 7, scope: !4451)
!4528 = !DILocation(line: 1516, column: 7, scope: !4451)
!4529 = !DILocation(line: 1520, column: 16, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1520, column: 7)
!4531 = !DILocation(line: 1520, column: 34, scope: !4530)
!4532 = !DILocation(line: 1520, column: 14, scope: !4530)
!4533 = !DILocation(line: 1520, column: 12, scope: !4530)
!4534 = !DILocation(line: 1520, column: 39, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1520, column: 7)
!4536 = !DILocation(line: 1520, column: 41, scope: !4535)
!4537 = !DILocation(line: 1520, column: 7, scope: !4530)
!4538 = !DILocation(line: 1521, column: 4, scope: !4535)
!4539 = !DILocation(line: 1521, column: 11, scope: !4535)
!4540 = !DILocation(line: 1521, column: 33, scope: !4535)
!4541 = !DILocation(line: 1521, column: 2, scope: !4535)
!4542 = !DILocation(line: 1520, column: 48, scope: !4535)
!4543 = !DILocation(line: 1520, column: 7, scope: !4535)
!4544 = distinct !{!4544, !4537, !4545}
!4545 = !DILocation(line: 1521, column: 37, scope: !4530)
!4546 = !DILocation(line: 1522, column: 7, scope: !4451)
!4547 = !DILocation(line: 1525, column: 11, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1525, column: 11)
!4549 = !DILocation(line: 1525, column: 11, scope: !4451)
!4550 = !DILocation(line: 1526, column: 4, scope: !4548)
!4551 = !DILocation(line: 1526, column: 11, scope: !4548)
!4552 = !DILocation(line: 1526, column: 37, scope: !4548)
!4553 = !DILocation(line: 1526, column: 2, scope: !4548)
!4554 = !DILocation(line: 1527, column: 7, scope: !4451)
!4555 = !DILocalVariable(name: "dest", scope: !4556, file: !3, line: 1531, type: !622)
!4556 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1530, column: 7)
!4557 = !DILocation(line: 1531, column: 6, scope: !4556)
!4558 = !DILocation(line: 1531, column: 13, scope: !4556)
!4559 = !DILocation(line: 1535, column: 4, scope: !4556)
!4560 = !DILocation(line: 1535, column: 11, scope: !4556)
!4561 = !DILocation(line: 1535, column: 27, scope: !4556)
!4562 = !DILocation(line: 1535, column: 2, scope: !4556)
!4563 = !DILocation(line: 1537, column: 6, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1537, column: 6)
!4565 = !DILocation(line: 1537, column: 22, scope: !4564)
!4566 = !DILocation(line: 1537, column: 6, scope: !4556)
!4567 = !DILocation(line: 1539, column: 8, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 1538, column: 4)
!4569 = !DILocation(line: 1539, column: 15, scope: !4568)
!4570 = !DILocation(line: 1539, column: 31, scope: !4568)
!4571 = !DILocation(line: 1539, column: 6, scope: !4568)
!4572 = !DILocation(line: 1540, column: 8, scope: !4568)
!4573 = !DILocation(line: 1540, column: 15, scope: !4568)
!4574 = !DILocation(line: 1540, column: 31, scope: !4568)
!4575 = !DILocation(line: 1540, column: 6, scope: !4568)
!4576 = !DILocation(line: 1541, column: 4, scope: !4568)
!4577 = !DILocation(line: 1543, column: 2, scope: !4556)
!4578 = !DILocation(line: 1543, column: 9, scope: !4556)
!4579 = !DILocation(line: 1543, column: 25, scope: !4556)
!4580 = !DILocation(line: 1543, column: 35, scope: !4556)
!4581 = !DILocation(line: 1543, column: 38, scope: !4556)
!4582 = !DILocation(line: 1543, column: 54, scope: !4556)
!4583 = !DILocation(line: 1544, column: 11, scope: !4556)
!4584 = !DILocation(line: 1544, column: 9, scope: !4556)
!4585 = distinct !{!4585, !4577, !4583}
!4586 = !DILocation(line: 1546, column: 6, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1546, column: 6)
!4588 = !DILocation(line: 1546, column: 6, scope: !4556)
!4589 = !DILocation(line: 1547, column: 6, scope: !4587)
!4590 = !DILocation(line: 1547, column: 13, scope: !4587)
!4591 = !DILocation(line: 1547, column: 29, scope: !4587)
!4592 = !DILocation(line: 1547, column: 4, scope: !4587)
!4593 = !DILocation(line: 1549, column: 7, scope: !4451)
!4594 = !DILocation(line: 1553, column: 9, scope: !4451)
!4595 = !DILocation(line: 1553, column: 15, scope: !4451)
!4596 = !DILocation(line: 1553, column: 22, scope: !4451)
!4597 = !DILocation(line: 1553, column: 7, scope: !4451)
!4598 = !DILocation(line: 1554, column: 7, scope: !4451)
!4599 = !DILocation(line: 1556, column: 1, scope: !4430)
!4600 = distinct !DISubprogram(name: "dead_or_set_p", scope: !3, file: !3, line: 1576, type: !2606, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4601 = !DILocalVariable(name: "insn", arg: 1, scope: !4600, file: !3, line: 1576, type: !1713)
!4602 = !DILocation(line: 1576, column: 26, scope: !4600)
!4603 = !DILocalVariable(name: "x", arg: 2, scope: !4600, file: !3, line: 1576, type: !1713)
!4604 = !DILocation(line: 1576, column: 42, scope: !4600)
!4605 = !DILocalVariable(name: "regno", scope: !4600, file: !3, line: 1578, type: !7)
!4606 = !DILocation(line: 1578, column: 16, scope: !4600)
!4607 = !DILocalVariable(name: "end_regno", scope: !4600, file: !3, line: 1578, type: !7)
!4608 = !DILocation(line: 1578, column: 23, scope: !4600)
!4609 = !DILocalVariable(name: "i", scope: !4600, file: !3, line: 1579, type: !7)
!4610 = !DILocation(line: 1579, column: 16, scope: !4600)
!4611 = !DILocation(line: 1582, column: 7, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 1582, column: 7)
!4613 = !DILocation(line: 1582, column: 20, scope: !4612)
!4614 = !DILocation(line: 1582, column: 7, scope: !4600)
!4615 = !DILocation(line: 1583, column: 5, scope: !4612)
!4616 = !DILocation(line: 1585, column: 3, scope: !4600)
!4617 = !DILocation(line: 1587, column: 11, scope: !4600)
!4618 = !DILocation(line: 1587, column: 9, scope: !4600)
!4619 = !DILocation(line: 1588, column: 15, scope: !4600)
!4620 = !DILocation(line: 1588, column: 13, scope: !4600)
!4621 = !DILocation(line: 1589, column: 12, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 1589, column: 3)
!4623 = !DILocation(line: 1589, column: 10, scope: !4622)
!4624 = !DILocation(line: 1589, column: 8, scope: !4622)
!4625 = !DILocation(line: 1589, column: 19, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 1589, column: 3)
!4627 = !DILocation(line: 1589, column: 23, scope: !4626)
!4628 = !DILocation(line: 1589, column: 21, scope: !4626)
!4629 = !DILocation(line: 1589, column: 3, scope: !4622)
!4630 = !DILocation(line: 1590, column: 32, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 1590, column: 9)
!4632 = !DILocation(line: 1590, column: 38, scope: !4631)
!4633 = !DILocation(line: 1590, column: 11, scope: !4631)
!4634 = !DILocation(line: 1590, column: 9, scope: !4626)
!4635 = !DILocation(line: 1591, column: 7, scope: !4631)
!4636 = !DILocation(line: 1590, column: 39, scope: !4631)
!4637 = !DILocation(line: 1589, column: 35, scope: !4626)
!4638 = !DILocation(line: 1589, column: 3, scope: !4626)
!4639 = distinct !{!4639, !4629, !4640}
!4640 = !DILocation(line: 1591, column: 14, scope: !4622)
!4641 = !DILocation(line: 1593, column: 3, scope: !4600)
!4642 = !DILocation(line: 1594, column: 1, scope: !4600)
!4643 = distinct !DISubprogram(name: "dead_or_set_regno_p", scope: !3, file: !3, line: 1650, type: !4644, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!619, !1713, !7}
!4646 = !DILocalVariable(name: "insn", arg: 1, scope: !4643, file: !3, line: 1650, type: !1713)
!4647 = !DILocation(line: 1650, column: 32, scope: !4643)
!4648 = !DILocalVariable(name: "test_regno", arg: 2, scope: !4643, file: !3, line: 1650, type: !7)
!4649 = !DILocation(line: 1650, column: 51, scope: !4643)
!4650 = !DILocalVariable(name: "pattern", scope: !4643, file: !3, line: 1652, type: !1713)
!4651 = !DILocation(line: 1652, column: 13, scope: !4643)
!4652 = !DILocation(line: 1655, column: 24, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1655, column: 7)
!4654 = !DILocation(line: 1655, column: 40, scope: !4653)
!4655 = !DILocation(line: 1655, column: 7, scope: !4653)
!4656 = !DILocation(line: 1655, column: 7, scope: !4643)
!4657 = !DILocation(line: 1656, column: 5, scope: !4653)
!4658 = !DILocation(line: 1658, column: 7, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1658, column: 7)
!4660 = !DILocation(line: 1659, column: 7, scope: !4659)
!4661 = !DILocation(line: 1659, column: 29, scope: !4659)
!4662 = !DILocation(line: 1659, column: 44, scope: !4659)
!4663 = !DILocation(line: 1659, column: 10, scope: !4659)
!4664 = !DILocation(line: 1658, column: 7, scope: !4643)
!4665 = !DILocation(line: 1660, column: 5, scope: !4659)
!4666 = !DILocation(line: 1662, column: 13, scope: !4643)
!4667 = !DILocation(line: 1662, column: 11, scope: !4643)
!4668 = !DILocation(line: 1664, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1664, column: 7)
!4670 = !DILocation(line: 1664, column: 26, scope: !4669)
!4671 = !DILocation(line: 1664, column: 7, scope: !4643)
!4672 = !DILocation(line: 1665, column: 15, scope: !4669)
!4673 = !DILocation(line: 1665, column: 13, scope: !4669)
!4674 = !DILocation(line: 1665, column: 5, scope: !4669)
!4675 = !DILocation(line: 1667, column: 7, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 1667, column: 7)
!4677 = !DILocation(line: 1667, column: 26, scope: !4676)
!4678 = !DILocation(line: 1667, column: 7, scope: !4643)
!4679 = !DILocation(line: 1668, column: 28, scope: !4676)
!4680 = !DILocation(line: 1668, column: 48, scope: !4676)
!4681 = !DILocation(line: 1668, column: 12, scope: !4676)
!4682 = !DILocation(line: 1668, column: 5, scope: !4676)
!4683 = !DILocation(line: 1669, column: 12, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 1669, column: 12)
!4685 = !DILocation(line: 1669, column: 31, scope: !4684)
!4686 = !DILocation(line: 1669, column: 12, scope: !4676)
!4687 = !DILocalVariable(name: "i", scope: !4688, file: !3, line: 1671, type: !619)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1670, column: 5)
!4689 = !DILocation(line: 1671, column: 11, scope: !4688)
!4690 = !DILocation(line: 1673, column: 16, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 1673, column: 7)
!4692 = !DILocation(line: 1673, column: 37, scope: !4691)
!4693 = !DILocation(line: 1673, column: 14, scope: !4691)
!4694 = !DILocation(line: 1673, column: 12, scope: !4691)
!4695 = !DILocation(line: 1673, column: 42, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 1673, column: 7)
!4697 = !DILocation(line: 1673, column: 44, scope: !4696)
!4698 = !DILocation(line: 1673, column: 7, scope: !4691)
!4699 = !DILocalVariable(name: "body", scope: !4700, file: !3, line: 1675, type: !622)
!4700 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 1674, column: 2)
!4701 = !DILocation(line: 1675, column: 8, scope: !4700)
!4702 = !DILocation(line: 1675, column: 15, scope: !4700)
!4703 = !DILocation(line: 1677, column: 8, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 1677, column: 8)
!4705 = !DILocation(line: 1677, column: 24, scope: !4704)
!4706 = !DILocation(line: 1677, column: 8, scope: !4700)
!4707 = !DILocation(line: 1678, column: 13, scope: !4704)
!4708 = !DILocation(line: 1678, column: 11, scope: !4704)
!4709 = !DILocation(line: 1678, column: 6, scope: !4704)
!4710 = !DILocation(line: 1680, column: 9, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 1680, column: 8)
!4712 = !DILocation(line: 1680, column: 25, scope: !4711)
!4713 = !DILocation(line: 1680, column: 32, scope: !4711)
!4714 = !DILocation(line: 1680, column: 35, scope: !4711)
!4715 = !DILocation(line: 1680, column: 51, scope: !4711)
!4716 = !DILocation(line: 1681, column: 8, scope: !4711)
!4717 = !DILocation(line: 1681, column: 27, scope: !4711)
!4718 = !DILocation(line: 1681, column: 44, scope: !4711)
!4719 = !DILocation(line: 1681, column: 11, scope: !4711)
!4720 = !DILocation(line: 1680, column: 8, scope: !4700)
!4721 = !DILocation(line: 1682, column: 6, scope: !4711)
!4722 = !DILocation(line: 1683, column: 2, scope: !4700)
!4723 = !DILocation(line: 1673, column: 51, scope: !4696)
!4724 = !DILocation(line: 1673, column: 7, scope: !4696)
!4725 = distinct !{!4725, !4698, !4726}
!4726 = !DILocation(line: 1683, column: 2, scope: !4691)
!4727 = !DILocation(line: 1684, column: 5, scope: !4688)
!4728 = !DILocation(line: 1686, column: 3, scope: !4643)
!4729 = !DILocation(line: 1687, column: 1, scope: !4643)
!4730 = distinct !DISubprogram(name: "find_regno_note", scope: !3, file: !3, line: 1722, type: !4731, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!622, !1713, !549, !7}
!4733 = !DILocalVariable(name: "insn", arg: 1, scope: !4730, file: !3, line: 1722, type: !1713)
!4734 = !DILocation(line: 1722, column: 28, scope: !4730)
!4735 = !DILocalVariable(name: "kind", arg: 2, scope: !4730, file: !3, line: 1722, type: !549)
!4736 = !DILocation(line: 1722, column: 48, scope: !4730)
!4737 = !DILocalVariable(name: "regno", arg: 3, scope: !4730, file: !3, line: 1722, type: !7)
!4738 = !DILocation(line: 1722, column: 67, scope: !4730)
!4739 = !DILocalVariable(name: "link", scope: !4730, file: !3, line: 1724, type: !622)
!4740 = !DILocation(line: 1724, column: 7, scope: !4730)
!4741 = !DILocation(line: 1727, column: 9, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 1727, column: 7)
!4743 = !DILocation(line: 1727, column: 7, scope: !4730)
!4744 = !DILocation(line: 1728, column: 5, scope: !4742)
!4745 = !DILocation(line: 1730, column: 15, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 1730, column: 3)
!4747 = !DILocation(line: 1730, column: 13, scope: !4746)
!4748 = !DILocation(line: 1730, column: 8, scope: !4746)
!4749 = !DILocation(line: 1730, column: 33, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1730, column: 3)
!4751 = !DILocation(line: 1730, column: 3, scope: !4746)
!4752 = !DILocation(line: 1731, column: 9, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 1731, column: 9)
!4754 = !DILocation(line: 1731, column: 33, scope: !4753)
!4755 = !DILocation(line: 1731, column: 30, scope: !4753)
!4756 = !DILocation(line: 1734, column: 2, scope: !4753)
!4757 = !DILocation(line: 1734, column: 5, scope: !4753)
!4758 = !DILocation(line: 1735, column: 2, scope: !4753)
!4759 = !DILocation(line: 1735, column: 5, scope: !4753)
!4760 = !DILocation(line: 1735, column: 31, scope: !4753)
!4761 = !DILocation(line: 1735, column: 28, scope: !4753)
!4762 = !DILocation(line: 1736, column: 2, scope: !4753)
!4763 = !DILocation(line: 1736, column: 5, scope: !4753)
!4764 = !DILocation(line: 1736, column: 34, scope: !4753)
!4765 = !DILocation(line: 1736, column: 32, scope: !4753)
!4766 = !DILocation(line: 1731, column: 9, scope: !4750)
!4767 = !DILocation(line: 1737, column: 14, scope: !4753)
!4768 = !DILocation(line: 1737, column: 7, scope: !4753)
!4769 = !DILocation(line: 1730, column: 46, scope: !4750)
!4770 = !DILocation(line: 1730, column: 44, scope: !4750)
!4771 = !DILocation(line: 1730, column: 3, scope: !4750)
!4772 = distinct !{!4772, !4751, !4773}
!4773 = !DILocation(line: 1737, column: 14, scope: !4746)
!4774 = !DILocation(line: 1738, column: 3, scope: !4730)
!4775 = !DILocation(line: 1739, column: 1, scope: !4730)
!4776 = distinct !DISubprogram(name: "find_regno_fusage", scope: !3, file: !3, line: 1842, type: !4777, scopeLine: 1843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!619, !1713, !377, !7}
!4779 = !DILocalVariable(name: "insn", arg: 1, scope: !4776, file: !3, line: 1842, type: !1713)
!4780 = !DILocation(line: 1842, column: 30, scope: !4776)
!4781 = !DILocalVariable(name: "code", arg: 2, scope: !4776, file: !3, line: 1842, type: !377)
!4782 = !DILocation(line: 1842, column: 50, scope: !4776)
!4783 = !DILocalVariable(name: "regno", arg: 3, scope: !4776, file: !3, line: 1842, type: !7)
!4784 = !DILocation(line: 1842, column: 69, scope: !4776)
!4785 = !DILocalVariable(name: "link", scope: !4776, file: !3, line: 1844, type: !622)
!4786 = !DILocation(line: 1844, column: 7, scope: !4776)
!4787 = !DILocation(line: 1849, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1849, column: 7)
!4789 = !DILocation(line: 1849, column: 13, scope: !4788)
!4790 = !DILocation(line: 1850, column: 7, scope: !4788)
!4791 = !DILocation(line: 1850, column: 11, scope: !4788)
!4792 = !DILocation(line: 1849, column: 7, scope: !4776)
!4793 = !DILocation(line: 1851, column: 5, scope: !4788)
!4794 = !DILocation(line: 1853, column: 15, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1853, column: 3)
!4796 = !DILocation(line: 1853, column: 13, scope: !4795)
!4797 = !DILocation(line: 1853, column: 8, scope: !4795)
!4798 = !DILocation(line: 1853, column: 48, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 1853, column: 3)
!4800 = !DILocation(line: 1853, column: 3, scope: !4795)
!4801 = !DILocalVariable(name: "op", scope: !4802, file: !3, line: 1855, type: !622)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 1854, column: 5)
!4803 = !DILocation(line: 1855, column: 11, scope: !4802)
!4804 = !DILocalVariable(name: "reg", scope: !4802, file: !3, line: 1855, type: !622)
!4805 = !DILocation(line: 1855, column: 15, scope: !4802)
!4806 = !DILocation(line: 1857, column: 11, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 1857, column: 11)
!4808 = !DILocation(line: 1857, column: 45, scope: !4807)
!4809 = !DILocation(line: 1857, column: 42, scope: !4807)
!4810 = !DILocation(line: 1858, column: 4, scope: !4807)
!4811 = !DILocation(line: 1858, column: 7, scope: !4807)
!4812 = !DILocation(line: 1859, column: 4, scope: !4807)
!4813 = !DILocation(line: 1859, column: 7, scope: !4807)
!4814 = !DILocation(line: 1859, column: 22, scope: !4807)
!4815 = !DILocation(line: 1859, column: 19, scope: !4807)
!4816 = !DILocation(line: 1860, column: 4, scope: !4807)
!4817 = !DILocation(line: 1860, column: 7, scope: !4807)
!4818 = !DILocation(line: 1860, column: 30, scope: !4807)
!4819 = !DILocation(line: 1860, column: 28, scope: !4807)
!4820 = !DILocation(line: 1857, column: 11, scope: !4802)
!4821 = !DILocation(line: 1861, column: 2, scope: !4807)
!4822 = !DILocation(line: 1862, column: 5, scope: !4802)
!4823 = !DILocation(line: 1853, column: 61, scope: !4799)
!4824 = !DILocation(line: 1853, column: 59, scope: !4799)
!4825 = !DILocation(line: 1853, column: 3, scope: !4799)
!4826 = distinct !{!4826, !4800, !4827}
!4827 = !DILocation(line: 1862, column: 5, scope: !4795)
!4828 = !DILocation(line: 1864, column: 3, scope: !4776)
!4829 = !DILocation(line: 1865, column: 1, scope: !4776)
!4830 = distinct !DISubprogram(name: "covers_regno_p", scope: !3, file: !3, line: 1624, type: !4831, scopeLine: 1625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!855, !1713, !7}
!4833 = !DILocalVariable(name: "dest", arg: 1, scope: !4830, file: !3, line: 1624, type: !1713)
!4834 = !DILocation(line: 1624, column: 27, scope: !4830)
!4835 = !DILocalVariable(name: "test_regno", arg: 2, scope: !4830, file: !3, line: 1624, type: !7)
!4836 = !DILocation(line: 1624, column: 46, scope: !4830)
!4837 = !DILocation(line: 1626, column: 7, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 1626, column: 7)
!4839 = !DILocation(line: 1626, column: 23, scope: !4838)
!4840 = !DILocation(line: 1626, column: 7, scope: !4830)
!4841 = !DILocalVariable(name: "i", scope: !4842, file: !3, line: 1631, type: !619)
!4842 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 1627, column: 5)
!4843 = !DILocation(line: 1631, column: 11, scope: !4842)
!4844 = !DILocation(line: 1633, column: 16, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1633, column: 7)
!4846 = !DILocation(line: 1633, column: 34, scope: !4845)
!4847 = !DILocation(line: 1633, column: 14, scope: !4845)
!4848 = !DILocation(line: 1633, column: 12, scope: !4845)
!4849 = !DILocation(line: 1633, column: 39, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1633, column: 7)
!4851 = !DILocation(line: 1633, column: 41, scope: !4850)
!4852 = !DILocation(line: 1633, column: 7, scope: !4845)
!4853 = !DILocalVariable(name: "inner", scope: !4854, file: !3, line: 1635, type: !622)
!4854 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1634, column: 2)
!4855 = !DILocation(line: 1635, column: 8, scope: !4854)
!4856 = !DILocation(line: 1635, column: 16, scope: !4854)
!4857 = !DILocation(line: 1636, column: 8, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1636, column: 8)
!4859 = !DILocation(line: 1636, column: 14, scope: !4858)
!4860 = !DILocation(line: 1637, column: 8, scope: !4858)
!4861 = !DILocation(line: 1637, column: 39, scope: !4858)
!4862 = !DILocation(line: 1637, column: 46, scope: !4858)
!4863 = !DILocation(line: 1637, column: 11, scope: !4858)
!4864 = !DILocation(line: 1636, column: 8, scope: !4854)
!4865 = !DILocation(line: 1638, column: 6, scope: !4858)
!4866 = !DILocation(line: 1639, column: 2, scope: !4854)
!4867 = !DILocation(line: 1633, column: 48, scope: !4850)
!4868 = !DILocation(line: 1633, column: 7, scope: !4850)
!4869 = distinct !{!4869, !4852, !4870}
!4870 = !DILocation(line: 1639, column: 2, scope: !4845)
!4871 = !DILocation(line: 1641, column: 7, scope: !4842)
!4872 = !DILocation(line: 1644, column: 40, scope: !4838)
!4873 = !DILocation(line: 1644, column: 46, scope: !4838)
!4874 = !DILocation(line: 1644, column: 12, scope: !4838)
!4875 = !DILocation(line: 1644, column: 5, scope: !4838)
!4876 = !DILocation(line: 1645, column: 1, scope: !4830)
!4877 = distinct !DISubprogram(name: "find_reg_equal_equiv_note", scope: !3, file: !3, line: 1745, type: !2356, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4878 = !DILocalVariable(name: "insn", arg: 1, scope: !4877, file: !3, line: 1745, type: !1713)
!4879 = !DILocation(line: 1745, column: 38, scope: !4877)
!4880 = !DILocalVariable(name: "link", scope: !4877, file: !3, line: 1747, type: !622)
!4881 = !DILocation(line: 1747, column: 7, scope: !4877)
!4882 = !DILocation(line: 1749, column: 8, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 1749, column: 7)
!4884 = !DILocation(line: 1749, column: 7, scope: !4877)
!4885 = !DILocation(line: 1750, column: 5, scope: !4883)
!4886 = !DILocation(line: 1752, column: 15, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 1752, column: 3)
!4888 = !DILocation(line: 1752, column: 13, scope: !4887)
!4889 = !DILocation(line: 1752, column: 8, scope: !4887)
!4890 = !DILocation(line: 1752, column: 33, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1752, column: 3)
!4892 = !DILocation(line: 1752, column: 3, scope: !4887)
!4893 = !DILocation(line: 1753, column: 9, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 1753, column: 9)
!4895 = !DILocation(line: 1753, column: 30, scope: !4894)
!4896 = !DILocation(line: 1754, column: 2, scope: !4894)
!4897 = !DILocation(line: 1754, column: 5, scope: !4894)
!4898 = !DILocation(line: 1754, column: 26, scope: !4894)
!4899 = !DILocation(line: 1753, column: 9, scope: !4891)
!4900 = !DILocation(line: 1762, column: 6, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 1762, column: 6)
!4902 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 1755, column: 7)
!4903 = !DILocation(line: 1762, column: 32, scope: !4901)
!4904 = !DILocation(line: 1762, column: 44, scope: !4901)
!4905 = !DILocation(line: 1762, column: 62, scope: !4901)
!4906 = !DILocation(line: 1762, column: 47, scope: !4901)
!4907 = !DILocation(line: 1762, column: 6, scope: !4902)
!4908 = !DILocation(line: 1763, column: 4, scope: !4901)
!4909 = !DILocation(line: 1764, column: 9, scope: !4902)
!4910 = !DILocation(line: 1764, column: 2, scope: !4902)
!4911 = !DILocation(line: 1754, column: 29, scope: !4894)
!4912 = !DILocation(line: 1752, column: 46, scope: !4891)
!4913 = !DILocation(line: 1752, column: 44, scope: !4891)
!4914 = !DILocation(line: 1752, column: 3, scope: !4891)
!4915 = distinct !{!4915, !4892, !4916}
!4916 = !DILocation(line: 1765, column: 7, scope: !4887)
!4917 = !DILocation(line: 1766, column: 3, scope: !4877)
!4918 = !DILocation(line: 1767, column: 1, scope: !4877)
!4919 = distinct !DISubprogram(name: "find_constant_src", scope: !3, file: !3, line: 1774, type: !2356, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4920 = !DILocalVariable(name: "insn", arg: 1, scope: !4919, file: !3, line: 1774, type: !1713)
!4921 = !DILocation(line: 1774, column: 30, scope: !4919)
!4922 = !DILocalVariable(name: "note", scope: !4919, file: !3, line: 1776, type: !622)
!4923 = !DILocation(line: 1776, column: 7, scope: !4919)
!4924 = !DILocalVariable(name: "set", scope: !4919, file: !3, line: 1776, type: !622)
!4925 = !DILocation(line: 1776, column: 13, scope: !4919)
!4926 = !DILocalVariable(name: "x", scope: !4919, file: !3, line: 1776, type: !622)
!4927 = !DILocation(line: 1776, column: 18, scope: !4919)
!4928 = !DILocation(line: 1778, column: 9, scope: !4919)
!4929 = !DILocation(line: 1778, column: 7, scope: !4919)
!4930 = !DILocation(line: 1779, column: 7, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1779, column: 7)
!4932 = !DILocation(line: 1779, column: 7, scope: !4919)
!4933 = !DILocation(line: 1781, column: 42, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1780, column: 5)
!4935 = !DILocation(line: 1781, column: 11, scope: !4934)
!4936 = !DILocation(line: 1781, column: 9, scope: !4934)
!4937 = !DILocation(line: 1782, column: 11, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 1782, column: 11)
!4939 = !DILocation(line: 1782, column: 11, scope: !4934)
!4940 = !DILocation(line: 1783, column: 9, scope: !4938)
!4941 = !DILocation(line: 1783, column: 2, scope: !4938)
!4942 = !DILocation(line: 1784, column: 5, scope: !4934)
!4943 = !DILocation(line: 1786, column: 37, scope: !4919)
!4944 = !DILocation(line: 1786, column: 10, scope: !4919)
!4945 = !DILocation(line: 1786, column: 8, scope: !4919)
!4946 = !DILocation(line: 1787, column: 7, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1787, column: 7)
!4948 = !DILocation(line: 1787, column: 12, scope: !4947)
!4949 = !DILocation(line: 1787, column: 15, scope: !4947)
!4950 = !DILocation(line: 1787, column: 7, scope: !4919)
!4951 = !DILocation(line: 1788, column: 12, scope: !4947)
!4952 = !DILocation(line: 1788, column: 5, scope: !4947)
!4953 = !DILocation(line: 1790, column: 3, scope: !4919)
!4954 = !DILocation(line: 1791, column: 1, scope: !4919)
!4955 = distinct !DISubprogram(name: "alloc_reg_note", scope: !3, file: !3, line: 1872, type: !4956, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!622, !549, !622, !622}
!4958 = !DILocalVariable(name: "kind", arg: 1, scope: !4955, file: !3, line: 1872, type: !549)
!4959 = !DILocation(line: 1872, column: 31, scope: !4955)
!4960 = !DILocalVariable(name: "datum", arg: 2, scope: !4955, file: !3, line: 1872, type: !622)
!4961 = !DILocation(line: 1872, column: 41, scope: !4955)
!4962 = !DILocalVariable(name: "list", arg: 3, scope: !4955, file: !3, line: 1872, type: !622)
!4963 = !DILocation(line: 1872, column: 52, scope: !4955)
!4964 = !DILocalVariable(name: "note", scope: !4955, file: !3, line: 1874, type: !622)
!4965 = !DILocation(line: 1874, column: 7, scope: !4955)
!4966 = !DILocation(line: 1876, column: 11, scope: !4955)
!4967 = !DILocation(line: 1876, column: 3, scope: !4955)
!4968 = !DILocation(line: 1885, column: 31, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 1877, column: 5)
!4970 = !DILocation(line: 1885, column: 38, scope: !4969)
!4971 = !DILocation(line: 1885, column: 14, scope: !4969)
!4972 = !DILocation(line: 1885, column: 12, scope: !4969)
!4973 = !DILocation(line: 1886, column: 7, scope: !4969)
!4974 = !DILocation(line: 1887, column: 7, scope: !4969)
!4975 = !DILocation(line: 1890, column: 31, scope: !4969)
!4976 = !DILocation(line: 1890, column: 37, scope: !4969)
!4977 = !DILocation(line: 1890, column: 44, scope: !4969)
!4978 = !DILocation(line: 1890, column: 14, scope: !4969)
!4979 = !DILocation(line: 1890, column: 12, scope: !4969)
!4980 = !DILocation(line: 1891, column: 7, scope: !4969)
!4981 = !DILocation(line: 1894, column: 10, scope: !4955)
!4982 = !DILocation(line: 1894, column: 3, scope: !4955)
!4983 = distinct !DISubprogram(name: "add_reg_note", scope: !3, file: !3, line: 1900, type: !4984, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !622, !549, !622}
!4986 = !DILocalVariable(name: "insn", arg: 1, scope: !4983, file: !3, line: 1900, type: !622)
!4987 = !DILocation(line: 1900, column: 19, scope: !4983)
!4988 = !DILocalVariable(name: "kind", arg: 2, scope: !4983, file: !3, line: 1900, type: !549)
!4989 = !DILocation(line: 1900, column: 39, scope: !4983)
!4990 = !DILocalVariable(name: "datum", arg: 3, scope: !4983, file: !3, line: 1900, type: !622)
!4991 = !DILocation(line: 1900, column: 49, scope: !4983)
!4992 = !DILocation(line: 1902, column: 38, scope: !4983)
!4993 = !DILocation(line: 1902, column: 44, scope: !4983)
!4994 = !DILocation(line: 1902, column: 51, scope: !4983)
!4995 = !DILocation(line: 1902, column: 22, scope: !4983)
!4996 = !DILocation(line: 1902, column: 3, scope: !4983)
!4997 = !DILocation(line: 1902, column: 20, scope: !4983)
!4998 = !DILocation(line: 1903, column: 1, scope: !4983)
!4999 = distinct !DISubprogram(name: "remove_note", scope: !3, file: !3, line: 1908, type: !5000, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !622, !1713}
!5002 = !DILocalVariable(name: "insn", arg: 1, scope: !4999, file: !3, line: 1908, type: !622)
!5003 = !DILocation(line: 1908, column: 18, scope: !4999)
!5004 = !DILocalVariable(name: "note", arg: 2, scope: !4999, file: !3, line: 1908, type: !1713)
!5005 = !DILocation(line: 1908, column: 34, scope: !4999)
!5006 = !DILocalVariable(name: "link", scope: !4999, file: !3, line: 1910, type: !622)
!5007 = !DILocation(line: 1910, column: 7, scope: !4999)
!5008 = !DILocation(line: 1912, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1912, column: 7)
!5010 = !DILocation(line: 1912, column: 12, scope: !5009)
!5011 = !DILocation(line: 1912, column: 7, scope: !4999)
!5012 = !DILocation(line: 1913, column: 5, scope: !5009)
!5013 = !DILocation(line: 1915, column: 7, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1915, column: 7)
!5015 = !DILocation(line: 1915, column: 27, scope: !5014)
!5016 = !DILocation(line: 1915, column: 24, scope: !5014)
!5017 = !DILocation(line: 1915, column: 7, scope: !4999)
!5018 = !DILocation(line: 1916, column: 24, scope: !5014)
!5019 = !DILocation(line: 1916, column: 5, scope: !5014)
!5020 = !DILocation(line: 1916, column: 22, scope: !5014)
!5021 = !DILocation(line: 1918, column: 17, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1918, column: 5)
!5023 = !DILocation(line: 1918, column: 15, scope: !5022)
!5024 = !DILocation(line: 1918, column: 10, scope: !5022)
!5025 = !DILocation(line: 1918, column: 35, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1918, column: 5)
!5027 = !DILocation(line: 1918, column: 5, scope: !5022)
!5028 = !DILocation(line: 1919, column: 11, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 1919, column: 11)
!5030 = !DILocation(line: 1919, column: 29, scope: !5029)
!5031 = !DILocation(line: 1919, column: 26, scope: !5029)
!5032 = !DILocation(line: 1919, column: 11, scope: !5026)
!5033 = !DILocation(line: 1921, column: 21, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1920, column: 2)
!5035 = !DILocation(line: 1921, column: 4, scope: !5034)
!5036 = !DILocation(line: 1921, column: 19, scope: !5034)
!5037 = !DILocation(line: 1922, column: 4, scope: !5034)
!5038 = !DILocation(line: 1918, column: 48, scope: !5026)
!5039 = !DILocation(line: 1918, column: 46, scope: !5026)
!5040 = !DILocation(line: 1918, column: 5, scope: !5026)
!5041 = distinct !{!5041, !5027, !5042}
!5042 = !DILocation(line: 1923, column: 2, scope: !5022)
!5043 = !DILocation(line: 1925, column: 11, scope: !4999)
!5044 = !DILocation(line: 1925, column: 3, scope: !4999)
!5045 = !DILocation(line: 1929, column: 24, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1926, column: 5)
!5047 = !DILocation(line: 1929, column: 7, scope: !5046)
!5048 = !DILocation(line: 1930, column: 7, scope: !5046)
!5049 = !DILocation(line: 1932, column: 7, scope: !5046)
!5050 = !DILocation(line: 1934, column: 1, scope: !4999)
!5051 = distinct !DISubprogram(name: "remove_reg_equal_equiv_notes", scope: !3, file: !3, line: 1939, type: !5052, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{null, !622}
!5054 = !DILocalVariable(name: "insn", arg: 1, scope: !5051, file: !3, line: 1939, type: !622)
!5055 = !DILocation(line: 1939, column: 35, scope: !5051)
!5056 = !DILocalVariable(name: "loc", scope: !5051, file: !3, line: 1941, type: !1697)
!5057 = !DILocation(line: 1941, column: 8, scope: !5051)
!5058 = !DILocation(line: 1943, column: 10, scope: !5051)
!5059 = !DILocation(line: 1943, column: 7, scope: !5051)
!5060 = !DILocation(line: 1944, column: 3, scope: !5051)
!5061 = !DILocation(line: 1944, column: 11, scope: !5051)
!5062 = !DILocation(line: 1944, column: 10, scope: !5051)
!5063 = !DILocalVariable(name: "kind", scope: !5064, file: !3, line: 1946, type: !549)
!5064 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1945, column: 5)
!5065 = !DILocation(line: 1946, column: 21, scope: !5064)
!5066 = !DILocation(line: 1946, column: 28, scope: !5064)
!5067 = !DILocation(line: 1947, column: 11, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1947, column: 11)
!5069 = !DILocation(line: 1947, column: 16, scope: !5068)
!5070 = !DILocation(line: 1947, column: 29, scope: !5068)
!5071 = !DILocation(line: 1947, column: 32, scope: !5068)
!5072 = !DILocation(line: 1947, column: 37, scope: !5068)
!5073 = !DILocation(line: 1947, column: 11, scope: !5064)
!5074 = !DILocation(line: 1948, column: 9, scope: !5068)
!5075 = !DILocation(line: 1948, column: 3, scope: !5068)
!5076 = !DILocation(line: 1948, column: 7, scope: !5068)
!5077 = !DILocation(line: 1948, column: 2, scope: !5068)
!5078 = !DILocation(line: 1950, column: 9, scope: !5068)
!5079 = !DILocation(line: 1950, column: 6, scope: !5068)
!5080 = distinct !{!5080, !5060, !5081}
!5081 = !DILocation(line: 1951, column: 5, scope: !5051)
!5082 = !DILocation(line: 1952, column: 1, scope: !5051)
!5083 = distinct !DISubprogram(name: "in_expr_list_p", scope: !3, file: !3, line: 1959, type: !2606, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5084 = !DILocalVariable(name: "listp", arg: 1, scope: !5083, file: !3, line: 1959, type: !1713)
!5085 = !DILocation(line: 1959, column: 27, scope: !5083)
!5086 = !DILocalVariable(name: "node", arg: 2, scope: !5083, file: !3, line: 1959, type: !1713)
!5087 = !DILocation(line: 1959, column: 44, scope: !5083)
!5088 = !DILocalVariable(name: "x", scope: !5083, file: !3, line: 1961, type: !1713)
!5089 = !DILocation(line: 1961, column: 13, scope: !5083)
!5090 = !DILocation(line: 1963, column: 12, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 1963, column: 3)
!5092 = !DILocation(line: 1963, column: 10, scope: !5091)
!5093 = !DILocation(line: 1963, column: 8, scope: !5091)
!5094 = !DILocation(line: 1963, column: 19, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1963, column: 3)
!5096 = !DILocation(line: 1963, column: 3, scope: !5091)
!5097 = !DILocation(line: 1964, column: 9, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1964, column: 9)
!5099 = !DILocation(line: 1964, column: 17, scope: !5098)
!5100 = !DILocation(line: 1964, column: 14, scope: !5098)
!5101 = !DILocation(line: 1964, column: 9, scope: !5095)
!5102 = !DILocation(line: 1965, column: 7, scope: !5098)
!5103 = !DILocation(line: 1963, column: 26, scope: !5095)
!5104 = !DILocation(line: 1963, column: 24, scope: !5095)
!5105 = !DILocation(line: 1963, column: 3, scope: !5095)
!5106 = distinct !{!5106, !5096, !5107}
!5107 = !DILocation(line: 1965, column: 14, scope: !5091)
!5108 = !DILocation(line: 1967, column: 3, scope: !5083)
!5109 = !DILocation(line: 1968, column: 1, scope: !5083)
!5110 = distinct !DISubprogram(name: "remove_node_from_expr_list", scope: !3, file: !3, line: 1976, type: !5111, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{null, !1713, !1697}
!5113 = !DILocalVariable(name: "node", arg: 1, scope: !5110, file: !3, line: 1976, type: !1713)
!5114 = !DILocation(line: 1976, column: 39, scope: !5110)
!5115 = !DILocalVariable(name: "listp", arg: 2, scope: !5110, file: !3, line: 1976, type: !1697)
!5116 = !DILocation(line: 1976, column: 50, scope: !5110)
!5117 = !DILocalVariable(name: "temp", scope: !5110, file: !3, line: 1978, type: !622)
!5118 = !DILocation(line: 1978, column: 7, scope: !5110)
!5119 = !DILocation(line: 1978, column: 15, scope: !5110)
!5120 = !DILocation(line: 1978, column: 14, scope: !5110)
!5121 = !DILocalVariable(name: "prev", scope: !5110, file: !3, line: 1979, type: !622)
!5122 = !DILocation(line: 1979, column: 7, scope: !5110)
!5123 = !DILocation(line: 1981, column: 3, scope: !5110)
!5124 = !DILocation(line: 1981, column: 10, scope: !5110)
!5125 = !DILocation(line: 1983, column: 11, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 1983, column: 11)
!5127 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1982, column: 5)
!5128 = !DILocation(line: 1983, column: 19, scope: !5126)
!5129 = !DILocation(line: 1983, column: 16, scope: !5126)
!5130 = !DILocation(line: 1983, column: 11, scope: !5127)
!5131 = !DILocation(line: 1986, column: 8, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1986, column: 8)
!5133 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 1984, column: 2)
!5134 = !DILocation(line: 1986, column: 8, scope: !5133)
!5135 = !DILocation(line: 1987, column: 23, scope: !5132)
!5136 = !DILocation(line: 1987, column: 6, scope: !5132)
!5137 = !DILocation(line: 1987, column: 21, scope: !5132)
!5138 = !DILocation(line: 1989, column: 15, scope: !5132)
!5139 = !DILocation(line: 1989, column: 7, scope: !5132)
!5140 = !DILocation(line: 1989, column: 13, scope: !5132)
!5141 = !DILocation(line: 1991, column: 4, scope: !5133)
!5142 = !DILocation(line: 1994, column: 14, scope: !5127)
!5143 = !DILocation(line: 1994, column: 12, scope: !5127)
!5144 = !DILocation(line: 1995, column: 14, scope: !5127)
!5145 = !DILocation(line: 1995, column: 12, scope: !5127)
!5146 = distinct !{!5146, !5123, !5147}
!5147 = !DILocation(line: 1996, column: 5, scope: !5110)
!5148 = !DILocation(line: 1997, column: 1, scope: !5110)
!5149 = distinct !DISubprogram(name: "volatile_insn_p", scope: !3, file: !3, line: 2005, type: !1736, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5150 = !DILocalVariable(name: "x", arg: 1, scope: !5149, file: !3, line: 2005, type: !1713)
!5151 = !DILocation(line: 2005, column: 28, scope: !5149)
!5152 = !DILocalVariable(name: "code", scope: !5149, file: !3, line: 2007, type: !1742)
!5153 = !DILocation(line: 2007, column: 18, scope: !5149)
!5154 = !DILocation(line: 2007, column: 25, scope: !5149)
!5155 = !DILocation(line: 2008, column: 11, scope: !5149)
!5156 = !DILocation(line: 2008, column: 3, scope: !5149)
!5157 = !DILocation(line: 2026, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 2009, column: 5)
!5159 = !DILocation(line: 2030, column: 7, scope: !5158)
!5160 = !DILocation(line: 2034, column: 11, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2034, column: 11)
!5162 = !DILocation(line: 2034, column: 11, scope: !5158)
!5163 = !DILocation(line: 2035, column: 2, scope: !5161)
!5164 = !DILocation(line: 2038, column: 7, scope: !5158)
!5165 = !DILocalVariable(name: "fmt", scope: !5166, file: !3, line: 2044, type: !5167)
!5166 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 2043, column: 3)
!5167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !648)
!5168 = !DILocation(line: 2044, column: 23, scope: !5166)
!5169 = !DILocation(line: 2044, column: 29, scope: !5166)
!5170 = !DILocalVariable(name: "i", scope: !5166, file: !3, line: 2045, type: !619)
!5171 = !DILocation(line: 2045, column: 9, scope: !5166)
!5172 = !DILocation(line: 2047, column: 14, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 2047, column: 5)
!5174 = !DILocation(line: 2047, column: 36, scope: !5173)
!5175 = !DILocation(line: 2047, column: 12, scope: !5173)
!5176 = !DILocation(line: 2047, column: 10, scope: !5173)
!5177 = !DILocation(line: 2047, column: 41, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 2047, column: 5)
!5179 = !DILocation(line: 2047, column: 43, scope: !5178)
!5180 = !DILocation(line: 2047, column: 5, scope: !5173)
!5181 = !DILocation(line: 2049, column: 6, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 2049, column: 6)
!5183 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 2048, column: 7)
!5184 = !DILocation(line: 2049, column: 10, scope: !5182)
!5185 = !DILocation(line: 2049, column: 13, scope: !5182)
!5186 = !DILocation(line: 2049, column: 6, scope: !5183)
!5187 = !DILocation(line: 2051, column: 27, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2051, column: 10)
!5189 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 2050, column: 4)
!5190 = !DILocation(line: 2051, column: 10, scope: !5188)
!5191 = !DILocation(line: 2051, column: 10, scope: !5189)
!5192 = !DILocation(line: 2052, column: 8, scope: !5188)
!5193 = !DILocation(line: 2053, column: 4, scope: !5189)
!5194 = !DILocation(line: 2054, column: 11, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 2054, column: 11)
!5196 = !DILocation(line: 2054, column: 15, scope: !5195)
!5197 = !DILocation(line: 2054, column: 18, scope: !5195)
!5198 = !DILocation(line: 2054, column: 11, scope: !5182)
!5199 = !DILocalVariable(name: "j", scope: !5200, file: !3, line: 2056, type: !619)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 2055, column: 4)
!5201 = !DILocation(line: 2056, column: 10, scope: !5200)
!5202 = !DILocation(line: 2057, column: 13, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2057, column: 6)
!5204 = !DILocation(line: 2057, column: 11, scope: !5203)
!5205 = !DILocation(line: 2057, column: 18, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2057, column: 6)
!5207 = !DILocation(line: 2057, column: 22, scope: !5206)
!5208 = !DILocation(line: 2057, column: 20, scope: !5206)
!5209 = !DILocation(line: 2057, column: 6, scope: !5203)
!5210 = !DILocation(line: 2058, column: 29, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 2058, column: 12)
!5212 = !DILocation(line: 2058, column: 12, scope: !5211)
!5213 = !DILocation(line: 2058, column: 12, scope: !5206)
!5214 = !DILocation(line: 2059, column: 3, scope: !5211)
!5215 = !DILocation(line: 2058, column: 46, scope: !5211)
!5216 = !DILocation(line: 2057, column: 39, scope: !5206)
!5217 = !DILocation(line: 2057, column: 6, scope: !5206)
!5218 = distinct !{!5218, !5209, !5219}
!5219 = !DILocation(line: 2059, column: 10, scope: !5203)
!5220 = !DILocation(line: 2060, column: 4, scope: !5200)
!5221 = !DILocation(line: 2061, column: 7, scope: !5183)
!5222 = !DILocation(line: 2047, column: 50, scope: !5178)
!5223 = !DILocation(line: 2047, column: 5, scope: !5178)
!5224 = distinct !{!5224, !5180, !5225}
!5225 = !DILocation(line: 2061, column: 7, scope: !5173)
!5226 = !DILocation(line: 2063, column: 3, scope: !5149)
!5227 = !DILocation(line: 2064, column: 1, scope: !5149)
!5228 = distinct !DISubprogram(name: "volatile_refs_p", scope: !3, file: !3, line: 2070, type: !1736, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5229 = !DILocalVariable(name: "x", arg: 1, scope: !5228, file: !3, line: 2070, type: !1713)
!5230 = !DILocation(line: 2070, column: 28, scope: !5228)
!5231 = !DILocalVariable(name: "code", scope: !5228, file: !3, line: 2072, type: !1742)
!5232 = !DILocation(line: 2072, column: 18, scope: !5228)
!5233 = !DILocation(line: 2072, column: 25, scope: !5228)
!5234 = !DILocation(line: 2073, column: 11, scope: !5228)
!5235 = !DILocation(line: 2073, column: 3, scope: !5228)
!5236 = !DILocation(line: 2089, column: 7, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 2074, column: 5)
!5238 = !DILocation(line: 2092, column: 7, scope: !5237)
!5239 = !DILocation(line: 2097, column: 11, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 2097, column: 11)
!5241 = !DILocation(line: 2097, column: 11, scope: !5237)
!5242 = !DILocation(line: 2098, column: 2, scope: !5240)
!5243 = !DILocation(line: 2101, column: 7, scope: !5237)
!5244 = !DILocalVariable(name: "fmt", scope: !5245, file: !3, line: 2107, type: !5167)
!5245 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 2106, column: 3)
!5246 = !DILocation(line: 2107, column: 23, scope: !5245)
!5247 = !DILocation(line: 2107, column: 29, scope: !5245)
!5248 = !DILocalVariable(name: "i", scope: !5245, file: !3, line: 2108, type: !619)
!5249 = !DILocation(line: 2108, column: 9, scope: !5245)
!5250 = !DILocation(line: 2110, column: 14, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 2110, column: 5)
!5252 = !DILocation(line: 2110, column: 36, scope: !5251)
!5253 = !DILocation(line: 2110, column: 12, scope: !5251)
!5254 = !DILocation(line: 2110, column: 10, scope: !5251)
!5255 = !DILocation(line: 2110, column: 41, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 2110, column: 5)
!5257 = !DILocation(line: 2110, column: 43, scope: !5256)
!5258 = !DILocation(line: 2110, column: 5, scope: !5251)
!5259 = !DILocation(line: 2112, column: 6, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 2112, column: 6)
!5261 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2111, column: 7)
!5262 = !DILocation(line: 2112, column: 10, scope: !5260)
!5263 = !DILocation(line: 2112, column: 13, scope: !5260)
!5264 = !DILocation(line: 2112, column: 6, scope: !5261)
!5265 = !DILocation(line: 2114, column: 27, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 2114, column: 10)
!5267 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2113, column: 4)
!5268 = !DILocation(line: 2114, column: 10, scope: !5266)
!5269 = !DILocation(line: 2114, column: 10, scope: !5267)
!5270 = !DILocation(line: 2115, column: 8, scope: !5266)
!5271 = !DILocation(line: 2116, column: 4, scope: !5267)
!5272 = !DILocation(line: 2117, column: 11, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2117, column: 11)
!5274 = !DILocation(line: 2117, column: 15, scope: !5273)
!5275 = !DILocation(line: 2117, column: 18, scope: !5273)
!5276 = !DILocation(line: 2117, column: 11, scope: !5260)
!5277 = !DILocalVariable(name: "j", scope: !5278, file: !3, line: 2119, type: !619)
!5278 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2118, column: 4)
!5279 = !DILocation(line: 2119, column: 10, scope: !5278)
!5280 = !DILocation(line: 2120, column: 13, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 2120, column: 6)
!5282 = !DILocation(line: 2120, column: 11, scope: !5281)
!5283 = !DILocation(line: 2120, column: 18, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 2120, column: 6)
!5285 = !DILocation(line: 2120, column: 22, scope: !5284)
!5286 = !DILocation(line: 2120, column: 20, scope: !5284)
!5287 = !DILocation(line: 2120, column: 6, scope: !5281)
!5288 = !DILocation(line: 2121, column: 29, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 2121, column: 12)
!5290 = !DILocation(line: 2121, column: 12, scope: !5289)
!5291 = !DILocation(line: 2121, column: 12, scope: !5284)
!5292 = !DILocation(line: 2122, column: 3, scope: !5289)
!5293 = !DILocation(line: 2121, column: 46, scope: !5289)
!5294 = !DILocation(line: 2120, column: 39, scope: !5284)
!5295 = !DILocation(line: 2120, column: 6, scope: !5284)
!5296 = distinct !{!5296, !5287, !5297}
!5297 = !DILocation(line: 2122, column: 10, scope: !5281)
!5298 = !DILocation(line: 2123, column: 4, scope: !5278)
!5299 = !DILocation(line: 2124, column: 7, scope: !5261)
!5300 = !DILocation(line: 2110, column: 50, scope: !5256)
!5301 = !DILocation(line: 2110, column: 5, scope: !5256)
!5302 = distinct !{!5302, !5258, !5303}
!5303 = !DILocation(line: 2124, column: 7, scope: !5251)
!5304 = !DILocation(line: 2126, column: 3, scope: !5228)
!5305 = !DILocation(line: 2127, column: 1, scope: !5228)
!5306 = distinct !DISubprogram(name: "may_trap_p_1", scope: !3, file: !3, line: 2212, type: !4644, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5307 = !DILocalVariable(name: "x", arg: 1, scope: !5306, file: !3, line: 2212, type: !1713)
!5308 = !DILocation(line: 2212, column: 25, scope: !5306)
!5309 = !DILocalVariable(name: "flags", arg: 2, scope: !5306, file: !3, line: 2212, type: !7)
!5310 = !DILocation(line: 2212, column: 37, scope: !5306)
!5311 = !DILocalVariable(name: "i", scope: !5306, file: !3, line: 2214, type: !619)
!5312 = !DILocation(line: 2214, column: 7, scope: !5306)
!5313 = !DILocalVariable(name: "code", scope: !5306, file: !3, line: 2215, type: !377)
!5314 = !DILocation(line: 2215, column: 17, scope: !5306)
!5315 = !DILocalVariable(name: "fmt", scope: !5306, file: !3, line: 2216, type: !648)
!5316 = !DILocation(line: 2216, column: 15, scope: !5306)
!5317 = !DILocalVariable(name: "code_changed", scope: !5306, file: !3, line: 2221, type: !855)
!5318 = !DILocation(line: 2221, column: 8, scope: !5306)
!5319 = !DILocation(line: 2221, column: 23, scope: !5306)
!5320 = !DILocation(line: 2221, column: 29, scope: !5306)
!5321 = !DILocation(line: 2223, column: 7, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2223, column: 7)
!5323 = !DILocation(line: 2223, column: 9, scope: !5322)
!5324 = !DILocation(line: 2223, column: 7, scope: !5306)
!5325 = !DILocation(line: 2224, column: 5, scope: !5322)
!5326 = !DILocation(line: 2225, column: 10, scope: !5306)
!5327 = !DILocation(line: 2225, column: 8, scope: !5306)
!5328 = !DILocation(line: 2226, column: 11, scope: !5306)
!5329 = !DILocation(line: 2226, column: 3, scope: !5306)
!5330 = !DILocation(line: 2240, column: 7, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2227, column: 5)
!5332 = !DILocation(line: 2244, column: 22, scope: !5331)
!5333 = !DILocation(line: 2244, column: 41, scope: !5331)
!5334 = !DILocation(line: 2244, column: 44, scope: !5331)
!5335 = !DILocation(line: 2244, column: 14, scope: !5331)
!5336 = !DILocation(line: 2244, column: 7, scope: !5331)
!5337 = !DILocation(line: 2248, column: 7, scope: !5331)
!5338 = !DILocation(line: 2251, column: 14, scope: !5331)
!5339 = !DILocation(line: 2251, column: 7, scope: !5331)
!5340 = !DILocation(line: 2256, column: 11, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2256, column: 11)
!5342 = !DILocation(line: 2257, column: 4, scope: !5341)
!5343 = !DILocation(line: 2257, column: 7, scope: !5341)
!5344 = !DILocation(line: 2258, column: 4, scope: !5341)
!5345 = !DILocation(line: 2258, column: 7, scope: !5341)
!5346 = !DILocation(line: 2258, column: 22, scope: !5341)
!5347 = !DILocation(line: 2258, column: 19, scope: !5341)
!5348 = !DILocation(line: 2256, column: 11, scope: !5331)
!5349 = !DILocation(line: 2259, column: 2, scope: !5341)
!5350 = !DILocation(line: 2263, column: 4, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2263, column: 4)
!5352 = !DILocation(line: 2264, column: 4, scope: !5351)
!5353 = !DILocation(line: 2264, column: 8, scope: !5351)
!5354 = !DILocation(line: 2263, column: 4, scope: !5331)
!5355 = !DILocalVariable(name: "size", scope: !5356, file: !3, line: 2266, type: !711)
!5356 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 2265, column: 2)
!5357 = !DILocation(line: 2266, column: 18, scope: !5356)
!5358 = !DILocation(line: 2266, column: 25, scope: !5356)
!5359 = !DILocation(line: 2266, column: 40, scope: !5356)
!5360 = !DILocation(line: 2267, column: 34, scope: !5356)
!5361 = !DILocation(line: 2267, column: 50, scope: !5356)
!5362 = !DILocation(line: 2268, column: 6, scope: !5356)
!5363 = !DILocation(line: 2268, column: 20, scope: !5356)
!5364 = !DILocation(line: 2267, column: 11, scope: !5356)
!5365 = !DILocation(line: 2267, column: 4, scope: !5356)
!5366 = !DILocation(line: 2271, column: 7, scope: !5331)
!5367 = !DILocation(line: 2278, column: 11, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2278, column: 11)
!5369 = !DILocation(line: 2278, column: 11, scope: !5331)
!5370 = !DILocation(line: 2279, column: 2, scope: !5368)
!5371 = !DILocation(line: 2280, column: 11, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2280, column: 11)
!5373 = !DILocation(line: 2280, column: 11, scope: !5331)
!5374 = !DILocation(line: 2281, column: 9, scope: !5372)
!5375 = !DILocation(line: 2281, column: 2, scope: !5372)
!5376 = !DILocation(line: 2282, column: 12, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2282, column: 11)
!5378 = !DILocation(line: 2282, column: 37, scope: !5377)
!5379 = !DILocation(line: 2282, column: 41, scope: !5377)
!5380 = !DILocation(line: 2282, column: 56, scope: !5377)
!5381 = !DILocation(line: 2282, column: 53, scope: !5377)
!5382 = !DILocation(line: 2282, column: 11, scope: !5331)
!5383 = !DILocation(line: 2283, column: 2, scope: !5377)
!5384 = !DILocation(line: 2284, column: 7, scope: !5331)
!5385 = !DILocation(line: 2289, column: 7, scope: !5331)
!5386 = !DILocation(line: 2298, column: 12, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2298, column: 11)
!5388 = !DILocation(line: 2298, column: 11, scope: !5331)
!5389 = !DILocation(line: 2299, column: 2, scope: !5387)
!5390 = !DILocation(line: 2304, column: 11, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2304, column: 11)
!5392 = !DILocation(line: 2304, column: 11, scope: !5331)
!5393 = !DILocation(line: 2305, column: 2, scope: !5391)
!5394 = !DILocation(line: 2308, column: 11, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2308, column: 11)
!5396 = !DILocation(line: 2309, column: 4, scope: !5395)
!5397 = !DILocation(line: 2309, column: 7, scope: !5395)
!5398 = !DILocation(line: 2308, column: 11, scope: !5331)
!5399 = !DILocation(line: 2310, column: 2, scope: !5395)
!5400 = !DILocation(line: 2311, column: 7, scope: !5331)
!5401 = !DILocation(line: 2315, column: 11, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2315, column: 11)
!5403 = !DILocation(line: 2315, column: 11, scope: !5331)
!5404 = !DILocation(line: 2316, column: 2, scope: !5402)
!5405 = !DILocation(line: 2318, column: 11, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2318, column: 11)
!5407 = !DILocation(line: 2319, column: 4, scope: !5406)
!5408 = !DILocation(line: 2319, column: 7, scope: !5406)
!5409 = !DILocation(line: 2318, column: 11, scope: !5331)
!5410 = !DILocation(line: 2320, column: 2, scope: !5406)
!5411 = !DILocation(line: 2321, column: 7, scope: !5331)
!5412 = !DILocation(line: 2325, column: 11, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2325, column: 11)
!5414 = !DILocation(line: 2325, column: 30, scope: !5413)
!5415 = !DILocation(line: 2325, column: 33, scope: !5413)
!5416 = !DILocation(line: 2325, column: 11, scope: !5331)
!5417 = !DILocation(line: 2326, column: 2, scope: !5413)
!5418 = !DILocation(line: 2327, column: 7, scope: !5331)
!5419 = !DILocation(line: 2333, column: 7, scope: !5331)
!5420 = !DILocation(line: 2337, column: 11, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2337, column: 11)
!5422 = !DILocation(line: 2338, column: 4, scope: !5421)
!5423 = !DILocation(line: 2338, column: 7, scope: !5421)
!5424 = !DILocation(line: 2337, column: 11, scope: !5331)
!5425 = !DILocation(line: 2339, column: 2, scope: !5421)
!5426 = !DILocation(line: 2340, column: 5, scope: !5331)
!5427 = !DILocation(line: 2342, column: 9, scope: !5306)
!5428 = !DILocation(line: 2342, column: 7, scope: !5306)
!5429 = !DILocation(line: 2343, column: 12, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2343, column: 3)
!5431 = !DILocation(line: 2343, column: 34, scope: !5430)
!5432 = !DILocation(line: 2343, column: 10, scope: !5430)
!5433 = !DILocation(line: 2343, column: 8, scope: !5430)
!5434 = !DILocation(line: 2343, column: 39, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 2343, column: 3)
!5436 = !DILocation(line: 2343, column: 41, scope: !5435)
!5437 = !DILocation(line: 2343, column: 3, scope: !5430)
!5438 = !DILocation(line: 2345, column: 11, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 2345, column: 11)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 2344, column: 5)
!5441 = !DILocation(line: 2345, column: 15, scope: !5439)
!5442 = !DILocation(line: 2345, column: 18, scope: !5439)
!5443 = !DILocation(line: 2345, column: 11, scope: !5440)
!5444 = !DILocation(line: 2347, column: 22, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 2347, column: 8)
!5446 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 2346, column: 2)
!5447 = !DILocation(line: 2347, column: 35, scope: !5445)
!5448 = !DILocation(line: 2347, column: 8, scope: !5445)
!5449 = !DILocation(line: 2347, column: 8, scope: !5446)
!5450 = !DILocation(line: 2348, column: 6, scope: !5445)
!5451 = !DILocation(line: 2349, column: 2, scope: !5446)
!5452 = !DILocation(line: 2350, column: 16, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 2350, column: 16)
!5454 = !DILocation(line: 2350, column: 20, scope: !5453)
!5455 = !DILocation(line: 2350, column: 23, scope: !5453)
!5456 = !DILocation(line: 2350, column: 16, scope: !5439)
!5457 = !DILocalVariable(name: "j", scope: !5458, file: !3, line: 2352, type: !619)
!5458 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 2351, column: 2)
!5459 = !DILocation(line: 2352, column: 8, scope: !5458)
!5460 = !DILocation(line: 2353, column: 11, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 2353, column: 4)
!5462 = !DILocation(line: 2353, column: 9, scope: !5461)
!5463 = !DILocation(line: 2353, column: 16, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 2353, column: 4)
!5465 = !DILocation(line: 2353, column: 20, scope: !5464)
!5466 = !DILocation(line: 2353, column: 18, scope: !5464)
!5467 = !DILocation(line: 2353, column: 4, scope: !5461)
!5468 = !DILocation(line: 2354, column: 24, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2354, column: 10)
!5470 = !DILocation(line: 2354, column: 43, scope: !5469)
!5471 = !DILocation(line: 2354, column: 10, scope: !5469)
!5472 = !DILocation(line: 2354, column: 10, scope: !5464)
!5473 = !DILocation(line: 2355, column: 8, scope: !5469)
!5474 = !DILocation(line: 2354, column: 48, scope: !5469)
!5475 = !DILocation(line: 2353, column: 37, scope: !5464)
!5476 = !DILocation(line: 2353, column: 4, scope: !5464)
!5477 = distinct !{!5477, !5467, !5478}
!5478 = !DILocation(line: 2355, column: 15, scope: !5461)
!5479 = !DILocation(line: 2356, column: 2, scope: !5458)
!5480 = !DILocation(line: 2357, column: 5, scope: !5440)
!5481 = !DILocation(line: 2343, column: 48, scope: !5435)
!5482 = !DILocation(line: 2343, column: 3, scope: !5435)
!5483 = distinct !{!5483, !5437, !5484}
!5484 = !DILocation(line: 2357, column: 5, scope: !5430)
!5485 = !DILocation(line: 2358, column: 3, scope: !5306)
!5486 = !DILocation(line: 2359, column: 1, scope: !5306)
!5487 = distinct !DISubprogram(name: "may_trap_p", scope: !3, file: !3, line: 2364, type: !1736, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5488 = !DILocalVariable(name: "x", arg: 1, scope: !5487, file: !3, line: 2364, type: !1713)
!5489 = !DILocation(line: 2364, column: 23, scope: !5487)
!5490 = !DILocation(line: 2366, column: 24, scope: !5487)
!5491 = !DILocation(line: 2366, column: 10, scope: !5487)
!5492 = !DILocation(line: 2366, column: 3, scope: !5487)
!5493 = distinct !DISubprogram(name: "may_trap_or_fault_p", scope: !3, file: !3, line: 2410, type: !1736, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5494 = !DILocalVariable(name: "x", arg: 1, scope: !5493, file: !3, line: 2410, type: !1713)
!5495 = !DILocation(line: 2410, column: 32, scope: !5493)
!5496 = !DILocation(line: 2412, column: 24, scope: !5493)
!5497 = !DILocation(line: 2412, column: 10, scope: !5493)
!5498 = !DILocation(line: 2412, column: 3, scope: !5493)
!5499 = distinct !DISubprogram(name: "inequality_comparisons_p", scope: !3, file: !3, line: 2419, type: !1736, scopeLine: 2420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5500 = !DILocalVariable(name: "x", arg: 1, scope: !5499, file: !3, line: 2419, type: !1713)
!5501 = !DILocation(line: 2419, column: 37, scope: !5499)
!5502 = !DILocalVariable(name: "fmt", scope: !5499, file: !3, line: 2421, type: !648)
!5503 = !DILocation(line: 2421, column: 15, scope: !5499)
!5504 = !DILocalVariable(name: "len", scope: !5499, file: !3, line: 2422, type: !619)
!5505 = !DILocation(line: 2422, column: 7, scope: !5499)
!5506 = !DILocalVariable(name: "i", scope: !5499, file: !3, line: 2422, type: !619)
!5507 = !DILocation(line: 2422, column: 12, scope: !5499)
!5508 = !DILocalVariable(name: "code", scope: !5499, file: !3, line: 2423, type: !1742)
!5509 = !DILocation(line: 2423, column: 23, scope: !5499)
!5510 = !DILocation(line: 2423, column: 30, scope: !5499)
!5511 = !DILocation(line: 2425, column: 11, scope: !5499)
!5512 = !DILocation(line: 2425, column: 3, scope: !5499)
!5513 = !DILocation(line: 2438, column: 7, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 2426, column: 5)
!5515 = !DILocation(line: 2448, column: 7, scope: !5514)
!5516 = !DILocation(line: 2451, column: 7, scope: !5514)
!5517 = !DILocation(line: 2454, column: 9, scope: !5499)
!5518 = !DILocation(line: 2454, column: 7, scope: !5499)
!5519 = !DILocation(line: 2455, column: 9, scope: !5499)
!5520 = !DILocation(line: 2455, column: 7, scope: !5499)
!5521 = !DILocation(line: 2457, column: 10, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 2457, column: 3)
!5523 = !DILocation(line: 2457, column: 8, scope: !5522)
!5524 = !DILocation(line: 2457, column: 15, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 2457, column: 3)
!5526 = !DILocation(line: 2457, column: 19, scope: !5525)
!5527 = !DILocation(line: 2457, column: 17, scope: !5525)
!5528 = !DILocation(line: 2457, column: 3, scope: !5522)
!5529 = !DILocation(line: 2459, column: 11, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 2459, column: 11)
!5531 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 2458, column: 5)
!5532 = !DILocation(line: 2459, column: 15, scope: !5530)
!5533 = !DILocation(line: 2459, column: 18, scope: !5530)
!5534 = !DILocation(line: 2459, column: 11, scope: !5531)
!5535 = !DILocation(line: 2461, column: 34, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2461, column: 8)
!5537 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 2460, column: 2)
!5538 = !DILocation(line: 2461, column: 8, scope: !5536)
!5539 = !DILocation(line: 2461, column: 8, scope: !5537)
!5540 = !DILocation(line: 2462, column: 6, scope: !5536)
!5541 = !DILocation(line: 2463, column: 2, scope: !5537)
!5542 = !DILocation(line: 2464, column: 16, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 2464, column: 16)
!5544 = !DILocation(line: 2464, column: 20, scope: !5543)
!5545 = !DILocation(line: 2464, column: 23, scope: !5543)
!5546 = !DILocation(line: 2464, column: 16, scope: !5530)
!5547 = !DILocalVariable(name: "j", scope: !5548, file: !3, line: 2466, type: !619)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2465, column: 2)
!5549 = !DILocation(line: 2466, column: 8, scope: !5548)
!5550 = !DILocation(line: 2467, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 2467, column: 4)
!5552 = !DILocation(line: 2467, column: 28, scope: !5551)
!5553 = !DILocation(line: 2467, column: 11, scope: !5551)
!5554 = !DILocation(line: 2467, column: 9, scope: !5551)
!5555 = !DILocation(line: 2467, column: 33, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 2467, column: 4)
!5557 = !DILocation(line: 2467, column: 35, scope: !5556)
!5558 = !DILocation(line: 2467, column: 4, scope: !5551)
!5559 = !DILocation(line: 2468, column: 36, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 2468, column: 10)
!5561 = !DILocation(line: 2468, column: 10, scope: !5560)
!5562 = !DILocation(line: 2468, column: 10, scope: !5556)
!5563 = !DILocation(line: 2469, column: 8, scope: !5560)
!5564 = !DILocation(line: 2468, column: 53, scope: !5560)
!5565 = !DILocation(line: 2467, column: 42, scope: !5556)
!5566 = !DILocation(line: 2467, column: 4, scope: !5556)
!5567 = distinct !{!5567, !5558, !5568}
!5568 = !DILocation(line: 2469, column: 15, scope: !5551)
!5569 = !DILocation(line: 2470, column: 2, scope: !5548)
!5570 = !DILocation(line: 2471, column: 5, scope: !5531)
!5571 = !DILocation(line: 2457, column: 25, scope: !5525)
!5572 = !DILocation(line: 2457, column: 3, scope: !5525)
!5573 = distinct !{!5573, !5528, !5574}
!5574 = !DILocation(line: 2471, column: 5, scope: !5522)
!5575 = !DILocation(line: 2473, column: 3, scope: !5499)
!5576 = !DILocation(line: 2474, column: 1, scope: !5499)
!5577 = distinct !DISubprogram(name: "replace_rtx", scope: !3, file: !3, line: 2483, type: !5578, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!622, !622, !622, !622}
!5580 = !DILocalVariable(name: "x", arg: 1, scope: !5577, file: !3, line: 2483, type: !622)
!5581 = !DILocation(line: 2483, column: 18, scope: !5577)
!5582 = !DILocalVariable(name: "from", arg: 2, scope: !5577, file: !3, line: 2483, type: !622)
!5583 = !DILocation(line: 2483, column: 25, scope: !5577)
!5584 = !DILocalVariable(name: "to", arg: 3, scope: !5577, file: !3, line: 2483, type: !622)
!5585 = !DILocation(line: 2483, column: 35, scope: !5577)
!5586 = !DILocalVariable(name: "i", scope: !5577, file: !3, line: 2485, type: !619)
!5587 = !DILocation(line: 2485, column: 7, scope: !5577)
!5588 = !DILocalVariable(name: "j", scope: !5577, file: !3, line: 2485, type: !619)
!5589 = !DILocation(line: 2485, column: 10, scope: !5577)
!5590 = !DILocalVariable(name: "fmt", scope: !5577, file: !3, line: 2486, type: !648)
!5591 = !DILocation(line: 2486, column: 15, scope: !5577)
!5592 = !DILocation(line: 2490, column: 7, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2490, column: 7)
!5594 = !DILocation(line: 2490, column: 9, scope: !5593)
!5595 = !DILocation(line: 2490, column: 14, scope: !5593)
!5596 = !DILocation(line: 2490, column: 17, scope: !5593)
!5597 = !DILocation(line: 2490, column: 30, scope: !5593)
!5598 = !DILocation(line: 2490, column: 7, scope: !5577)
!5599 = !DILocation(line: 2491, column: 12, scope: !5593)
!5600 = !DILocation(line: 2491, column: 5, scope: !5593)
!5601 = !DILocation(line: 2493, column: 7, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2493, column: 7)
!5603 = !DILocation(line: 2493, column: 12, scope: !5602)
!5604 = !DILocation(line: 2493, column: 9, scope: !5602)
!5605 = !DILocation(line: 2493, column: 7, scope: !5577)
!5606 = !DILocation(line: 2494, column: 12, scope: !5602)
!5607 = !DILocation(line: 2494, column: 5, scope: !5602)
!5608 = !DILocation(line: 2497, column: 7, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2497, column: 7)
!5610 = !DILocation(line: 2497, column: 9, scope: !5609)
!5611 = !DILocation(line: 2497, column: 7, scope: !5577)
!5612 = !DILocation(line: 2498, column: 5, scope: !5609)
!5613 = !DILocation(line: 2500, column: 7, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2500, column: 7)
!5615 = !DILocation(line: 2500, column: 20, scope: !5614)
!5616 = !DILocation(line: 2500, column: 7, scope: !5577)
!5617 = !DILocalVariable(name: "new_rtx", scope: !5618, file: !3, line: 2502, type: !622)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2501, column: 5)
!5619 = !DILocation(line: 2502, column: 11, scope: !5618)
!5620 = !DILocation(line: 2502, column: 34, scope: !5618)
!5621 = !DILocation(line: 2502, column: 50, scope: !5618)
!5622 = !DILocation(line: 2502, column: 56, scope: !5618)
!5623 = !DILocation(line: 2502, column: 21, scope: !5618)
!5624 = !DILocation(line: 2504, column: 11, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 2504, column: 11)
!5626 = !DILocation(line: 2504, column: 11, scope: !5618)
!5627 = !DILocation(line: 2506, column: 25, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 2505, column: 2)
!5629 = !DILocation(line: 2506, column: 39, scope: !5628)
!5630 = !DILocation(line: 2507, column: 11, scope: !5628)
!5631 = !DILocation(line: 2508, column: 11, scope: !5628)
!5632 = !DILocation(line: 2506, column: 8, scope: !5628)
!5633 = !DILocation(line: 2506, column: 6, scope: !5628)
!5634 = !DILocation(line: 2509, column: 4, scope: !5628)
!5635 = !DILocation(line: 2510, column: 2, scope: !5628)
!5636 = !DILocation(line: 2512, column: 19, scope: !5625)
!5637 = !DILocation(line: 2512, column: 2, scope: !5625)
!5638 = !DILocation(line: 2512, column: 17, scope: !5625)
!5639 = !DILocation(line: 2514, column: 14, scope: !5618)
!5640 = !DILocation(line: 2514, column: 7, scope: !5618)
!5641 = !DILocation(line: 2516, column: 12, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2516, column: 12)
!5643 = !DILocation(line: 2516, column: 25, scope: !5642)
!5644 = !DILocation(line: 2516, column: 12, scope: !5614)
!5645 = !DILocalVariable(name: "new_rtx", scope: !5646, file: !3, line: 2518, type: !622)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 2517, column: 5)
!5647 = !DILocation(line: 2518, column: 11, scope: !5646)
!5648 = !DILocation(line: 2518, column: 34, scope: !5646)
!5649 = !DILocation(line: 2518, column: 47, scope: !5646)
!5650 = !DILocation(line: 2518, column: 53, scope: !5646)
!5651 = !DILocation(line: 2518, column: 21, scope: !5646)
!5652 = !DILocation(line: 2520, column: 11, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2520, column: 11)
!5654 = !DILocation(line: 2520, column: 11, scope: !5646)
!5655 = !DILocation(line: 2522, column: 47, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 2521, column: 2)
!5657 = !DILocation(line: 2523, column: 6, scope: !5656)
!5658 = !DILocation(line: 2523, column: 15, scope: !5656)
!5659 = !DILocation(line: 2522, column: 8, scope: !5656)
!5660 = !DILocation(line: 2522, column: 6, scope: !5656)
!5661 = !DILocation(line: 2524, column: 4, scope: !5656)
!5662 = !DILocation(line: 2525, column: 2, scope: !5656)
!5663 = !DILocation(line: 2527, column: 16, scope: !5653)
!5664 = !DILocation(line: 2527, column: 2, scope: !5653)
!5665 = !DILocation(line: 2527, column: 14, scope: !5653)
!5666 = !DILocation(line: 2529, column: 14, scope: !5646)
!5667 = !DILocation(line: 2529, column: 7, scope: !5646)
!5668 = !DILocation(line: 2532, column: 9, scope: !5577)
!5669 = !DILocation(line: 2532, column: 7, scope: !5577)
!5670 = !DILocation(line: 2533, column: 12, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2533, column: 3)
!5672 = !DILocation(line: 2533, column: 42, scope: !5671)
!5673 = !DILocation(line: 2533, column: 10, scope: !5671)
!5674 = !DILocation(line: 2533, column: 8, scope: !5671)
!5675 = !DILocation(line: 2533, column: 47, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 2533, column: 3)
!5677 = !DILocation(line: 2533, column: 49, scope: !5676)
!5678 = !DILocation(line: 2533, column: 3, scope: !5671)
!5679 = !DILocation(line: 2535, column: 11, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 2535, column: 11)
!5681 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 2534, column: 5)
!5682 = !DILocation(line: 2535, column: 15, scope: !5680)
!5683 = !DILocation(line: 2535, column: 18, scope: !5680)
!5684 = !DILocation(line: 2535, column: 11, scope: !5681)
!5685 = !DILocation(line: 2536, column: 29, scope: !5680)
!5686 = !DILocation(line: 2536, column: 42, scope: !5680)
!5687 = !DILocation(line: 2536, column: 48, scope: !5680)
!5688 = !DILocation(line: 2536, column: 16, scope: !5680)
!5689 = !DILocation(line: 2536, column: 2, scope: !5680)
!5690 = !DILocation(line: 2536, column: 14, scope: !5680)
!5691 = !DILocation(line: 2537, column: 16, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 2537, column: 16)
!5693 = !DILocation(line: 2537, column: 20, scope: !5692)
!5694 = !DILocation(line: 2537, column: 23, scope: !5692)
!5695 = !DILocation(line: 2537, column: 16, scope: !5680)
!5696 = !DILocation(line: 2538, column: 11, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 2538, column: 2)
!5698 = !DILocation(line: 2538, column: 26, scope: !5697)
!5699 = !DILocation(line: 2538, column: 9, scope: !5697)
!5700 = !DILocation(line: 2538, column: 7, scope: !5697)
!5701 = !DILocation(line: 2538, column: 31, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 2538, column: 2)
!5703 = !DILocation(line: 2538, column: 33, scope: !5702)
!5704 = !DILocation(line: 2538, column: 2, scope: !5697)
!5705 = !DILocation(line: 2539, column: 37, scope: !5702)
!5706 = !DILocation(line: 2539, column: 56, scope: !5702)
!5707 = !DILocation(line: 2539, column: 62, scope: !5702)
!5708 = !DILocation(line: 2539, column: 24, scope: !5702)
!5709 = !DILocation(line: 2539, column: 4, scope: !5702)
!5710 = !DILocation(line: 2539, column: 22, scope: !5702)
!5711 = !DILocation(line: 2538, column: 40, scope: !5702)
!5712 = !DILocation(line: 2538, column: 2, scope: !5702)
!5713 = distinct !{!5713, !5704, !5714}
!5714 = !DILocation(line: 2539, column: 64, scope: !5697)
!5715 = !DILocation(line: 2540, column: 5, scope: !5681)
!5716 = !DILocation(line: 2533, column: 56, scope: !5676)
!5717 = !DILocation(line: 2533, column: 3, scope: !5676)
!5718 = distinct !{!5718, !5678, !5719}
!5719 = !DILocation(line: 2540, column: 5, scope: !5671)
!5720 = !DILocation(line: 2542, column: 10, scope: !5577)
!5721 = !DILocation(line: 2542, column: 3, scope: !5577)
!5722 = !DILocation(line: 2543, column: 1, scope: !5577)
!5723 = distinct !DISubprogram(name: "replace_label", scope: !3, file: !3, line: 2549, type: !5724, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!619, !1697, !732}
!5726 = !DILocalVariable(name: "x", arg: 1, scope: !5723, file: !3, line: 2549, type: !1697)
!5727 = !DILocation(line: 2549, column: 21, scope: !5723)
!5728 = !DILocalVariable(name: "data", arg: 2, scope: !5723, file: !3, line: 2549, type: !732)
!5729 = !DILocation(line: 2549, column: 30, scope: !5723)
!5730 = !DILocalVariable(name: "l", scope: !5723, file: !3, line: 2551, type: !622)
!5731 = !DILocation(line: 2551, column: 7, scope: !5723)
!5732 = !DILocation(line: 2551, column: 12, scope: !5723)
!5733 = !DILocation(line: 2551, column: 11, scope: !5723)
!5734 = !DILocalVariable(name: "old_label", scope: !5723, file: !3, line: 2552, type: !622)
!5735 = !DILocation(line: 2552, column: 7, scope: !5723)
!5736 = !DILocation(line: 2552, column: 43, scope: !5723)
!5737 = !DILocation(line: 2552, column: 20, scope: !5723)
!5738 = !DILocation(line: 2552, column: 50, scope: !5723)
!5739 = !DILocalVariable(name: "new_label", scope: !5723, file: !3, line: 2553, type: !622)
!5740 = !DILocation(line: 2553, column: 7, scope: !5723)
!5741 = !DILocation(line: 2553, column: 43, scope: !5723)
!5742 = !DILocation(line: 2553, column: 20, scope: !5723)
!5743 = !DILocation(line: 2553, column: 50, scope: !5723)
!5744 = !DILocalVariable(name: "update_label_nuses", scope: !5723, file: !3, line: 2554, type: !855)
!5745 = !DILocation(line: 2554, column: 8, scope: !5723)
!5746 = !DILocation(line: 2554, column: 53, scope: !5723)
!5747 = !DILocation(line: 2554, column: 30, scope: !5723)
!5748 = !DILocation(line: 2554, column: 60, scope: !5723)
!5749 = !DILocation(line: 2556, column: 7, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2556, column: 7)
!5751 = !DILocation(line: 2556, column: 9, scope: !5750)
!5752 = !DILocation(line: 2556, column: 7, scope: !5723)
!5753 = !DILocation(line: 2557, column: 5, scope: !5750)
!5754 = !DILocation(line: 2559, column: 7, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2559, column: 7)
!5756 = !DILocation(line: 2559, column: 20, scope: !5755)
!5757 = !DILocation(line: 2560, column: 7, scope: !5755)
!5758 = !DILocation(line: 2560, column: 10, scope: !5755)
!5759 = !DILocation(line: 2559, column: 7, scope: !5723)
!5760 = !DILocalVariable(name: "c", scope: !5761, file: !3, line: 2562, type: !622)
!5761 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 2561, column: 5)
!5762 = !DILocation(line: 2562, column: 11, scope: !5761)
!5763 = !DILocation(line: 2562, column: 34, scope: !5761)
!5764 = !DILocation(line: 2562, column: 15, scope: !5761)
!5765 = !DILocation(line: 2563, column: 29, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2563, column: 11)
!5767 = !DILocation(line: 2563, column: 40, scope: !5766)
!5768 = !DILocation(line: 2563, column: 11, scope: !5766)
!5769 = !DILocation(line: 2563, column: 11, scope: !5761)
!5770 = !DILocalVariable(name: "new_c", scope: !5771, file: !3, line: 2565, type: !622)
!5771 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2564, column: 2)
!5772 = !DILocation(line: 2565, column: 8, scope: !5771)
!5773 = !DILocalVariable(name: "new_l", scope: !5771, file: !3, line: 2565, type: !622)
!5774 = !DILocation(line: 2565, column: 15, scope: !5771)
!5775 = !DILocalVariable(name: "d", scope: !5771, file: !3, line: 2566, type: !1698)
!5776 = !DILocation(line: 2566, column: 24, scope: !5771)
!5777 = !DILocation(line: 2566, column: 51, scope: !5771)
!5778 = !DILocation(line: 2566, column: 28, scope: !5771)
!5779 = !DILocation(line: 2571, column: 22, scope: !5771)
!5780 = !DILocation(line: 2571, column: 12, scope: !5771)
!5781 = !DILocation(line: 2571, column: 10, scope: !5771)
!5782 = !DILocation(line: 2572, column: 4, scope: !5771)
!5783 = !DILocation(line: 2572, column: 7, scope: !5771)
!5784 = !DILocation(line: 2572, column: 26, scope: !5771)
!5785 = !DILocation(line: 2573, column: 41, scope: !5771)
!5786 = !DILocation(line: 2573, column: 4, scope: !5771)
!5787 = !DILocation(line: 2574, column: 28, scope: !5771)
!5788 = !DILocation(line: 2574, column: 4, scope: !5771)
!5789 = !DILocation(line: 2574, column: 7, scope: !5771)
!5790 = !DILocation(line: 2574, column: 26, scope: !5771)
!5791 = !DILocation(line: 2578, column: 12, scope: !5771)
!5792 = !DILocation(line: 2578, column: 10, scope: !5771)
!5793 = !DILocation(line: 2579, column: 22, scope: !5771)
!5794 = !DILocation(line: 2579, column: 25, scope: !5771)
!5795 = !DILocation(line: 2579, column: 28, scope: !5771)
!5796 = !DILocation(line: 2579, column: 9, scope: !5771)
!5797 = !DILocation(line: 2579, column: 5, scope: !5771)
!5798 = !DILocation(line: 2579, column: 7, scope: !5771)
!5799 = !DILocation(line: 2580, column: 2, scope: !5771)
!5800 = !DILocation(line: 2581, column: 7, scope: !5761)
!5801 = !DILocation(line: 2587, column: 7, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2587, column: 7)
!5803 = !DILocation(line: 2587, column: 18, scope: !5802)
!5804 = !DILocation(line: 2587, column: 21, scope: !5802)
!5805 = !DILocation(line: 2587, column: 39, scope: !5802)
!5806 = !DILocation(line: 2587, column: 36, scope: !5802)
!5807 = !DILocation(line: 2587, column: 7, scope: !5723)
!5808 = !DILocation(line: 2588, column: 22, scope: !5802)
!5809 = !DILocation(line: 2588, column: 5, scope: !5802)
!5810 = !DILocation(line: 2588, column: 20, scope: !5802)
!5811 = !DILocation(line: 2590, column: 8, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2590, column: 7)
!5813 = !DILocation(line: 2590, column: 21, scope: !5812)
!5814 = !DILocation(line: 2591, column: 8, scope: !5812)
!5815 = !DILocation(line: 2591, column: 11, scope: !5812)
!5816 = !DILocation(line: 2591, column: 24, scope: !5812)
!5817 = !DILocation(line: 2592, column: 7, scope: !5812)
!5818 = !DILocation(line: 2592, column: 10, scope: !5812)
!5819 = !DILocation(line: 2592, column: 25, scope: !5812)
!5820 = !DILocation(line: 2592, column: 22, scope: !5812)
!5821 = !DILocation(line: 2590, column: 7, scope: !5723)
!5822 = !DILocation(line: 2594, column: 21, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 2593, column: 5)
!5824 = !DILocation(line: 2594, column: 7, scope: !5823)
!5825 = !DILocation(line: 2594, column: 19, scope: !5823)
!5826 = !DILocation(line: 2595, column: 11, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 2595, column: 11)
!5828 = !DILocation(line: 2595, column: 11, scope: !5823)
!5829 = !DILocation(line: 2597, column: 6, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 2596, column: 2)
!5831 = !DILocation(line: 2597, column: 4, scope: !5830)
!5832 = !DILocation(line: 2598, column: 6, scope: !5830)
!5833 = !DILocation(line: 2598, column: 4, scope: !5830)
!5834 = !DILocation(line: 2599, column: 2, scope: !5830)
!5835 = !DILocation(line: 2600, column: 7, scope: !5823)
!5836 = !DILocation(line: 2603, column: 3, scope: !5723)
!5837 = !DILocation(line: 2604, column: 1, scope: !5723)
!5838 = distinct !DISubprogram(name: "rtx_referenced_p", scope: !3, file: !3, line: 2634, type: !5839, scopeLine: 2635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!619, !622, !622}
!5841 = !DILocalVariable(name: "x", arg: 1, scope: !5838, file: !3, line: 2634, type: !622)
!5842 = !DILocation(line: 2634, column: 23, scope: !5838)
!5843 = !DILocalVariable(name: "body", arg: 2, scope: !5838, file: !3, line: 2634, type: !622)
!5844 = !DILocation(line: 2634, column: 30, scope: !5838)
!5845 = !DILocation(line: 2636, column: 51, scope: !5838)
!5846 = !DILocation(line: 2636, column: 10, scope: !5838)
!5847 = !DILocation(line: 2636, column: 3, scope: !5838)
!5848 = distinct !DISubprogram(name: "for_each_rtx", scope: !3, file: !3, line: 2848, type: !5849, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5849 = !DISubroutineType(types: !5850)
!5850 = !{!619, !1697, !5851, !732}
!5851 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_function", file: !378, line: 1875, baseType: !5852)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64)
!5853 = !DILocalVariable(name: "x", arg: 1, scope: !5848, file: !3, line: 2848, type: !1697)
!5854 = !DILocation(line: 2848, column: 20, scope: !5848)
!5855 = !DILocalVariable(name: "f", arg: 2, scope: !5848, file: !3, line: 2848, type: !5851)
!5856 = !DILocation(line: 2848, column: 36, scope: !5848)
!5857 = !DILocalVariable(name: "data", arg: 3, scope: !5848, file: !3, line: 2848, type: !732)
!5858 = !DILocation(line: 2848, column: 45, scope: !5848)
!5859 = !DILocalVariable(name: "result", scope: !5848, file: !3, line: 2850, type: !619)
!5860 = !DILocation(line: 2850, column: 7, scope: !5848)
!5861 = !DILocalVariable(name: "i", scope: !5848, file: !3, line: 2851, type: !619)
!5862 = !DILocation(line: 2851, column: 7, scope: !5848)
!5863 = !DILocation(line: 2854, column: 14, scope: !5848)
!5864 = !DILocation(line: 2854, column: 18, scope: !5848)
!5865 = !DILocation(line: 2854, column: 21, scope: !5848)
!5866 = !DILocation(line: 2854, column: 12, scope: !5848)
!5867 = !DILocation(line: 2854, column: 10, scope: !5848)
!5868 = !DILocation(line: 2855, column: 7, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2855, column: 7)
!5870 = !DILocation(line: 2855, column: 14, scope: !5869)
!5871 = !DILocation(line: 2855, column: 7, scope: !5848)
!5872 = !DILocation(line: 2857, column: 5, scope: !5869)
!5873 = !DILocation(line: 2858, column: 12, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2858, column: 12)
!5875 = !DILocation(line: 2858, column: 19, scope: !5874)
!5876 = !DILocation(line: 2858, column: 12, scope: !5869)
!5877 = !DILocation(line: 2860, column: 12, scope: !5874)
!5878 = !DILocation(line: 2860, column: 5, scope: !5874)
!5879 = !DILocation(line: 2862, column: 8, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2862, column: 7)
!5881 = !DILocation(line: 2862, column: 7, scope: !5880)
!5882 = !DILocation(line: 2862, column: 10, scope: !5880)
!5883 = !DILocation(line: 2862, column: 7, scope: !5848)
!5884 = !DILocation(line: 2864, column: 5, scope: !5880)
!5885 = !DILocation(line: 2866, column: 33, scope: !5848)
!5886 = !DILocation(line: 2866, column: 7, scope: !5848)
!5887 = !DILocation(line: 2866, column: 5, scope: !5848)
!5888 = !DILocation(line: 2867, column: 7, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2867, column: 7)
!5890 = !DILocation(line: 2867, column: 9, scope: !5889)
!5891 = !DILocation(line: 2867, column: 7, scope: !5848)
!5892 = !DILocation(line: 2868, column: 5, scope: !5889)
!5893 = !DILocation(line: 2870, column: 27, scope: !5848)
!5894 = !DILocation(line: 2870, column: 26, scope: !5848)
!5895 = !DILocation(line: 2870, column: 30, scope: !5848)
!5896 = !DILocation(line: 2870, column: 33, scope: !5848)
!5897 = !DILocation(line: 2870, column: 36, scope: !5848)
!5898 = !DILocation(line: 2870, column: 10, scope: !5848)
!5899 = !DILocation(line: 2870, column: 3, scope: !5848)
!5900 = !DILocation(line: 2871, column: 1, scope: !5848)
!5901 = distinct !DISubprogram(name: "rtx_referenced_p_1", scope: !3, file: !3, line: 2611, type: !5724, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5902 = !DILocalVariable(name: "body", arg: 1, scope: !5901, file: !3, line: 2611, type: !1697)
!5903 = !DILocation(line: 2611, column: 26, scope: !5901)
!5904 = !DILocalVariable(name: "x", arg: 2, scope: !5901, file: !3, line: 2611, type: !732)
!5905 = !DILocation(line: 2611, column: 38, scope: !5901)
!5906 = !DILocalVariable(name: "y", scope: !5901, file: !3, line: 2613, type: !622)
!5907 = !DILocation(line: 2613, column: 7, scope: !5901)
!5908 = !DILocation(line: 2613, column: 17, scope: !5901)
!5909 = !DILocation(line: 2613, column: 11, scope: !5901)
!5910 = !DILocation(line: 2615, column: 8, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2615, column: 7)
!5912 = !DILocation(line: 2615, column: 7, scope: !5911)
!5913 = !DILocation(line: 2615, column: 13, scope: !5911)
!5914 = !DILocation(line: 2615, column: 7, scope: !5901)
!5915 = !DILocation(line: 2616, column: 12, scope: !5911)
!5916 = !DILocation(line: 2616, column: 14, scope: !5911)
!5917 = !DILocation(line: 2616, column: 5, scope: !5911)
!5918 = !DILocation(line: 2619, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2619, column: 7)
!5920 = !DILocation(line: 2619, column: 24, scope: !5919)
!5921 = !DILocation(line: 2619, column: 37, scope: !5919)
!5922 = !DILocation(line: 2619, column: 40, scope: !5919)
!5923 = !DILocation(line: 2619, column: 7, scope: !5901)
!5924 = !DILocation(line: 2620, column: 12, scope: !5919)
!5925 = !DILocation(line: 2620, column: 31, scope: !5919)
!5926 = !DILocation(line: 2620, column: 28, scope: !5919)
!5927 = !DILocation(line: 2620, column: 5, scope: !5919)
!5928 = !DILocation(line: 2623, column: 7, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2623, column: 7)
!5930 = !DILocation(line: 2623, column: 24, scope: !5929)
!5931 = !DILocation(line: 2624, column: 7, scope: !5929)
!5932 = !DILocation(line: 2624, column: 10, scope: !5929)
!5933 = !DILocation(line: 2623, column: 7, scope: !5901)
!5934 = !DILocation(line: 2625, column: 30, scope: !5929)
!5935 = !DILocation(line: 2625, column: 53, scope: !5929)
!5936 = !DILocation(line: 2625, column: 52, scope: !5929)
!5937 = !DILocation(line: 2625, column: 33, scope: !5929)
!5938 = !DILocation(line: 2625, column: 12, scope: !5929)
!5939 = !DILocation(line: 2625, column: 5, scope: !5929)
!5940 = !DILocation(line: 2628, column: 24, scope: !5901)
!5941 = !DILocation(line: 2628, column: 23, scope: !5901)
!5942 = !DILocation(line: 2628, column: 30, scope: !5901)
!5943 = !DILocation(line: 2628, column: 10, scope: !5901)
!5944 = !DILocation(line: 2628, column: 3, scope: !5901)
!5945 = !DILocation(line: 2629, column: 1, scope: !5901)
!5946 = distinct !DISubprogram(name: "tablejump_p", scope: !3, file: !3, line: 2643, type: !5947, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{!855, !1713, !1697, !1697}
!5949 = !DILocalVariable(name: "insn", arg: 1, scope: !5946, file: !3, line: 2643, type: !1713)
!5950 = !DILocation(line: 2643, column: 24, scope: !5946)
!5951 = !DILocalVariable(name: "labelp", arg: 2, scope: !5946, file: !3, line: 2643, type: !1697)
!5952 = !DILocation(line: 2643, column: 35, scope: !5946)
!5953 = !DILocalVariable(name: "tablep", arg: 3, scope: !5946, file: !3, line: 2643, type: !1697)
!5954 = !DILocation(line: 2643, column: 48, scope: !5946)
!5955 = !DILocalVariable(name: "label", scope: !5946, file: !3, line: 2645, type: !622)
!5956 = !DILocation(line: 2645, column: 7, scope: !5946)
!5957 = !DILocalVariable(name: "table", scope: !5946, file: !3, line: 2645, type: !622)
!5958 = !DILocation(line: 2645, column: 14, scope: !5946)
!5959 = !DILocation(line: 2647, column: 7, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 2647, column: 7)
!5961 = !DILocation(line: 2648, column: 7, scope: !5960)
!5962 = !DILocation(line: 2648, column: 19, scope: !5960)
!5963 = !DILocation(line: 2648, column: 17, scope: !5960)
!5964 = !DILocation(line: 2648, column: 38, scope: !5960)
!5965 = !DILocation(line: 2649, column: 7, scope: !5960)
!5966 = !DILocation(line: 2649, column: 37, scope: !5960)
!5967 = !DILocation(line: 2649, column: 19, scope: !5960)
!5968 = !DILocation(line: 2649, column: 17, scope: !5960)
!5969 = !DILocation(line: 2649, column: 45, scope: !5960)
!5970 = !DILocation(line: 2650, column: 7, scope: !5960)
!5971 = !DILocation(line: 2650, column: 10, scope: !5960)
!5972 = !DILocation(line: 2647, column: 7, scope: !5946)
!5973 = !DILocation(line: 2652, column: 11, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2652, column: 11)
!5975 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 2651, column: 5)
!5976 = !DILocation(line: 2652, column: 11, scope: !5975)
!5977 = !DILocation(line: 2653, column: 12, scope: !5974)
!5978 = !DILocation(line: 2653, column: 3, scope: !5974)
!5979 = !DILocation(line: 2653, column: 10, scope: !5974)
!5980 = !DILocation(line: 2653, column: 2, scope: !5974)
!5981 = !DILocation(line: 2654, column: 11, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2654, column: 11)
!5983 = !DILocation(line: 2654, column: 11, scope: !5975)
!5984 = !DILocation(line: 2655, column: 12, scope: !5982)
!5985 = !DILocation(line: 2655, column: 3, scope: !5982)
!5986 = !DILocation(line: 2655, column: 10, scope: !5982)
!5987 = !DILocation(line: 2655, column: 2, scope: !5982)
!5988 = !DILocation(line: 2656, column: 7, scope: !5975)
!5989 = !DILocation(line: 2658, column: 3, scope: !5946)
!5990 = !DILocation(line: 2659, column: 1, scope: !5946)
!5991 = distinct !DISubprogram(name: "computed_jump_p", scope: !3, file: !3, line: 2721, type: !1736, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!5992 = !DILocalVariable(name: "insn", arg: 1, scope: !5991, file: !3, line: 2721, type: !1713)
!5993 = !DILocation(line: 2721, column: 28, scope: !5991)
!5994 = !DILocalVariable(name: "i", scope: !5991, file: !3, line: 2723, type: !619)
!5995 = !DILocation(line: 2723, column: 7, scope: !5991)
!5996 = !DILocation(line: 2724, column: 7, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 2724, column: 7)
!5998 = !DILocation(line: 2724, column: 7, scope: !5991)
!5999 = !DILocalVariable(name: "pat", scope: !6000, file: !3, line: 2726, type: !622)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 2725, column: 5)
!6001 = !DILocation(line: 2726, column: 11, scope: !6000)
!6002 = !DILocation(line: 2726, column: 17, scope: !6000)
!6003 = !DILocation(line: 2729, column: 11, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 2729, column: 11)
!6005 = !DILocation(line: 2729, column: 29, scope: !6004)
!6006 = !DILocation(line: 2729, column: 11, scope: !6000)
!6007 = !DILocation(line: 2730, column: 2, scope: !6004)
!6008 = !DILocation(line: 2732, column: 11, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 2732, column: 11)
!6010 = !DILocation(line: 2732, column: 26, scope: !6009)
!6011 = !DILocation(line: 2732, column: 11, scope: !6000)
!6012 = !DILocalVariable(name: "len", scope: !6013, file: !3, line: 2734, type: !619)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 2733, column: 2)
!6014 = !DILocation(line: 2734, column: 8, scope: !6013)
!6015 = !DILocation(line: 2734, column: 14, scope: !6013)
!6016 = !DILocalVariable(name: "has_use_labelref", scope: !6013, file: !3, line: 2735, type: !619)
!6017 = !DILocation(line: 2735, column: 8, scope: !6013)
!6018 = !DILocation(line: 2737, column: 13, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2737, column: 4)
!6020 = !DILocation(line: 2737, column: 17, scope: !6019)
!6021 = !DILocation(line: 2737, column: 11, scope: !6019)
!6022 = !DILocation(line: 2737, column: 9, scope: !6019)
!6023 = !DILocation(line: 2737, column: 22, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2737, column: 4)
!6025 = !DILocation(line: 2737, column: 24, scope: !6024)
!6026 = !DILocation(line: 2737, column: 4, scope: !6019)
!6027 = !DILocation(line: 2738, column: 10, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 2738, column: 10)
!6029 = !DILocation(line: 2738, column: 41, scope: !6028)
!6030 = !DILocation(line: 2739, column: 3, scope: !6028)
!6031 = !DILocation(line: 2739, column: 7, scope: !6028)
!6032 = !DILocation(line: 2740, column: 7, scope: !6028)
!6033 = !DILocation(line: 2738, column: 10, scope: !6024)
!6034 = !DILocation(line: 2741, column: 25, scope: !6028)
!6035 = !DILocation(line: 2741, column: 8, scope: !6028)
!6036 = !DILocation(line: 2740, column: 19, scope: !6028)
!6037 = !DILocation(line: 2737, column: 31, scope: !6024)
!6038 = !DILocation(line: 2737, column: 4, scope: !6024)
!6039 = distinct !{!6039, !6026, !6040}
!6040 = !DILocation(line: 2741, column: 27, scope: !6019)
!6041 = !DILocation(line: 2743, column: 10, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2743, column: 8)
!6043 = !DILocation(line: 2743, column: 8, scope: !6013)
!6044 = !DILocation(line: 2744, column: 15, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 2744, column: 6)
!6046 = !DILocation(line: 2744, column: 19, scope: !6045)
!6047 = !DILocation(line: 2744, column: 13, scope: !6045)
!6048 = !DILocation(line: 2744, column: 11, scope: !6045)
!6049 = !DILocation(line: 2744, column: 24, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 2744, column: 6)
!6051 = !DILocation(line: 2744, column: 26, scope: !6050)
!6052 = !DILocation(line: 2744, column: 6, scope: !6045)
!6053 = !DILocation(line: 2745, column: 12, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 2745, column: 12)
!6055 = !DILocation(line: 2745, column: 43, scope: !6054)
!6056 = !DILocation(line: 2746, column: 5, scope: !6054)
!6057 = !DILocation(line: 2746, column: 8, scope: !6054)
!6058 = !DILocation(line: 2746, column: 42, scope: !6054)
!6059 = !DILocation(line: 2746, column: 39, scope: !6054)
!6060 = !DILocation(line: 2747, column: 5, scope: !6054)
!6061 = !DILocation(line: 2747, column: 27, scope: !6054)
!6062 = !DILocation(line: 2747, column: 8, scope: !6054)
!6063 = !DILocation(line: 2745, column: 12, scope: !6050)
!6064 = !DILocation(line: 2748, column: 3, scope: !6054)
!6065 = !DILocation(line: 2747, column: 56, scope: !6054)
!6066 = !DILocation(line: 2744, column: 33, scope: !6050)
!6067 = !DILocation(line: 2744, column: 6, scope: !6050)
!6068 = distinct !{!6068, !6052, !6069}
!6069 = !DILocation(line: 2748, column: 10, scope: !6045)
!6070 = !DILocation(line: 2749, column: 2, scope: !6013)
!6071 = !DILocation(line: 2750, column: 16, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 2750, column: 16)
!6073 = !DILocation(line: 2750, column: 31, scope: !6072)
!6074 = !DILocation(line: 2751, column: 9, scope: !6072)
!6075 = !DILocation(line: 2751, column: 12, scope: !6072)
!6076 = !DILocation(line: 2751, column: 30, scope: !6072)
!6077 = !DILocation(line: 2751, column: 27, scope: !6072)
!6078 = !DILocation(line: 2752, column: 9, scope: !6072)
!6079 = !DILocation(line: 2752, column: 31, scope: !6072)
!6080 = !DILocation(line: 2752, column: 12, scope: !6072)
!6081 = !DILocation(line: 2750, column: 16, scope: !6009)
!6082 = !DILocation(line: 2753, column: 2, scope: !6072)
!6083 = !DILocation(line: 2754, column: 5, scope: !6000)
!6084 = !DILocation(line: 2755, column: 3, scope: !5991)
!6085 = !DILocation(line: 2756, column: 1, scope: !5991)
!6086 = distinct !DISubprogram(name: "computed_jump_p_1", scope: !3, file: !3, line: 2666, type: !1736, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6087 = !DILocalVariable(name: "x", arg: 1, scope: !6086, file: !3, line: 2666, type: !1713)
!6088 = !DILocation(line: 2666, column: 30, scope: !6086)
!6089 = !DILocalVariable(name: "code", scope: !6086, file: !3, line: 2668, type: !1742)
!6090 = !DILocation(line: 2668, column: 23, scope: !6086)
!6091 = !DILocation(line: 2668, column: 30, scope: !6086)
!6092 = !DILocalVariable(name: "i", scope: !6086, file: !3, line: 2669, type: !619)
!6093 = !DILocation(line: 2669, column: 7, scope: !6086)
!6094 = !DILocalVariable(name: "j", scope: !6086, file: !3, line: 2669, type: !619)
!6095 = !DILocation(line: 2669, column: 10, scope: !6086)
!6096 = !DILocalVariable(name: "fmt", scope: !6086, file: !3, line: 2670, type: !648)
!6097 = !DILocation(line: 2670, column: 15, scope: !6086)
!6098 = !DILocation(line: 2672, column: 11, scope: !6086)
!6099 = !DILocation(line: 2672, column: 3, scope: !6086)
!6100 = !DILocation(line: 2676, column: 7, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 2673, column: 5)
!6102 = !DILocation(line: 2685, column: 7, scope: !6101)
!6103 = !DILocation(line: 2688, column: 17, scope: !6101)
!6104 = !DILocation(line: 2688, column: 40, scope: !6101)
!6105 = !DILocation(line: 2689, column: 3, scope: !6101)
!6106 = !DILocation(line: 2689, column: 6, scope: !6101)
!6107 = !DILocation(line: 0, scope: !6101)
!6108 = !DILocation(line: 2688, column: 14, scope: !6101)
!6109 = !DILocation(line: 2688, column: 7, scope: !6101)
!6110 = !DILocation(line: 2692, column: 34, scope: !6101)
!6111 = !DILocation(line: 2692, column: 15, scope: !6101)
!6112 = !DILocation(line: 2693, column: 8, scope: !6101)
!6113 = !DILocation(line: 2693, column: 30, scope: !6101)
!6114 = !DILocation(line: 2693, column: 11, scope: !6101)
!6115 = !DILocation(line: 2692, column: 7, scope: !6101)
!6116 = !DILocation(line: 2696, column: 7, scope: !6101)
!6117 = !DILocation(line: 2699, column: 9, scope: !6086)
!6118 = !DILocation(line: 2699, column: 7, scope: !6086)
!6119 = !DILocation(line: 2700, column: 12, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 2700, column: 3)
!6121 = !DILocation(line: 2700, column: 34, scope: !6120)
!6122 = !DILocation(line: 2700, column: 10, scope: !6120)
!6123 = !DILocation(line: 2700, column: 8, scope: !6120)
!6124 = !DILocation(line: 2700, column: 39, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 2700, column: 3)
!6126 = !DILocation(line: 2700, column: 41, scope: !6125)
!6127 = !DILocation(line: 2700, column: 3, scope: !6120)
!6128 = !DILocation(line: 2702, column: 11, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2702, column: 11)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 2701, column: 5)
!6131 = !DILocation(line: 2702, column: 15, scope: !6129)
!6132 = !DILocation(line: 2702, column: 18, scope: !6129)
!6133 = !DILocation(line: 2703, column: 4, scope: !6129)
!6134 = !DILocation(line: 2703, column: 26, scope: !6129)
!6135 = !DILocation(line: 2703, column: 7, scope: !6129)
!6136 = !DILocation(line: 2702, column: 11, scope: !6130)
!6137 = !DILocation(line: 2704, column: 2, scope: !6129)
!6138 = !DILocation(line: 2706, column: 16, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 2706, column: 16)
!6140 = !DILocation(line: 2706, column: 20, scope: !6139)
!6141 = !DILocation(line: 2706, column: 23, scope: !6139)
!6142 = !DILocation(line: 2706, column: 16, scope: !6129)
!6143 = !DILocation(line: 2707, column: 9, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2707, column: 2)
!6145 = !DILocation(line: 2707, column: 7, scope: !6144)
!6146 = !DILocation(line: 2707, column: 14, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 2707, column: 2)
!6148 = !DILocation(line: 2707, column: 18, scope: !6147)
!6149 = !DILocation(line: 2707, column: 16, scope: !6147)
!6150 = !DILocation(line: 2707, column: 2, scope: !6144)
!6151 = !DILocation(line: 2708, column: 27, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 2708, column: 8)
!6153 = !DILocation(line: 2708, column: 8, scope: !6152)
!6154 = !DILocation(line: 2708, column: 8, scope: !6147)
!6155 = !DILocation(line: 2709, column: 6, scope: !6152)
!6156 = !DILocation(line: 2708, column: 44, scope: !6152)
!6157 = !DILocation(line: 2707, column: 35, scope: !6147)
!6158 = !DILocation(line: 2707, column: 2, scope: !6147)
!6159 = distinct !{!6159, !6150, !6160}
!6160 = !DILocation(line: 2709, column: 13, scope: !6144)
!6161 = !DILocation(line: 2710, column: 5, scope: !6130)
!6162 = !DILocation(line: 2700, column: 48, scope: !6125)
!6163 = !DILocation(line: 2700, column: 3, scope: !6125)
!6164 = distinct !{!6164, !6127, !6165}
!6165 = !DILocation(line: 2710, column: 5, scope: !6120)
!6166 = !DILocation(line: 2712, column: 3, scope: !6086)
!6167 = !DILocation(line: 2713, column: 1, scope: !6086)
!6168 = distinct !DISubprogram(name: "for_each_rtx_1", scope: !3, file: !3, line: 2761, type: !6169, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!619, !622, !619, !5851, !732}
!6171 = !DILocalVariable(name: "exp", arg: 1, scope: !6168, file: !3, line: 2761, type: !622)
!6172 = !DILocation(line: 2761, column: 21, scope: !6168)
!6173 = !DILocalVariable(name: "n", arg: 2, scope: !6168, file: !3, line: 2761, type: !619)
!6174 = !DILocation(line: 2761, column: 30, scope: !6168)
!6175 = !DILocalVariable(name: "f", arg: 3, scope: !6168, file: !3, line: 2761, type: !5851)
!6176 = !DILocation(line: 2761, column: 46, scope: !6168)
!6177 = !DILocalVariable(name: "data", arg: 4, scope: !6168, file: !3, line: 2761, type: !732)
!6178 = !DILocation(line: 2761, column: 55, scope: !6168)
!6179 = !DILocalVariable(name: "result", scope: !6168, file: !3, line: 2763, type: !619)
!6180 = !DILocation(line: 2763, column: 7, scope: !6168)
!6181 = !DILocalVariable(name: "i", scope: !6168, file: !3, line: 2763, type: !619)
!6182 = !DILocation(line: 2763, column: 15, scope: !6168)
!6183 = !DILocalVariable(name: "j", scope: !6168, file: !3, line: 2763, type: !619)
!6184 = !DILocation(line: 2763, column: 18, scope: !6168)
!6185 = !DILocalVariable(name: "format", scope: !6168, file: !3, line: 2764, type: !648)
!6186 = !DILocation(line: 2764, column: 15, scope: !6168)
!6187 = !DILocation(line: 2764, column: 24, scope: !6168)
!6188 = !DILocalVariable(name: "x", scope: !6168, file: !3, line: 2765, type: !1697)
!6189 = !DILocation(line: 2765, column: 8, scope: !6168)
!6190 = !DILocation(line: 2767, column: 3, scope: !6168)
!6191 = !DILocation(line: 2767, column: 10, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 2767, column: 3)
!6193 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 2767, column: 3)
!6194 = !DILocation(line: 2767, column: 17, scope: !6192)
!6195 = !DILocation(line: 2767, column: 20, scope: !6192)
!6196 = !DILocation(line: 2767, column: 3, scope: !6193)
!6197 = !DILocation(line: 2769, column: 15, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 2768, column: 5)
!6199 = !DILocation(line: 2769, column: 22, scope: !6198)
!6200 = !DILocation(line: 2769, column: 7, scope: !6198)
!6201 = !DILocation(line: 2773, column: 9, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 2770, column: 2)
!6203 = !DILocation(line: 2773, column: 6, scope: !6202)
!6204 = !DILocation(line: 2774, column: 15, scope: !6202)
!6205 = !DILocation(line: 2774, column: 19, scope: !6202)
!6206 = !DILocation(line: 2774, column: 22, scope: !6202)
!6207 = !DILocation(line: 2774, column: 13, scope: !6202)
!6208 = !DILocation(line: 2774, column: 11, scope: !6202)
!6209 = !DILocation(line: 2775, column: 8, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2775, column: 8)
!6211 = !DILocation(line: 2775, column: 15, scope: !6210)
!6212 = !DILocation(line: 2775, column: 8, scope: !6202)
!6213 = !DILocation(line: 2777, column: 6, scope: !6210)
!6214 = !DILocation(line: 2778, column: 13, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 2778, column: 13)
!6216 = !DILocation(line: 2778, column: 20, scope: !6215)
!6217 = !DILocation(line: 2778, column: 13, scope: !6210)
!6218 = !DILocation(line: 2780, column: 13, scope: !6215)
!6219 = !DILocation(line: 2780, column: 6, scope: !6215)
!6220 = !DILocation(line: 2782, column: 9, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2782, column: 8)
!6222 = !DILocation(line: 2782, column: 8, scope: !6221)
!6223 = !DILocation(line: 2782, column: 11, scope: !6221)
!6224 = !DILocation(line: 2782, column: 8, scope: !6202)
!6225 = !DILocation(line: 2784, column: 6, scope: !6221)
!6226 = !DILocation(line: 2786, column: 34, scope: !6202)
!6227 = !DILocation(line: 2786, column: 8, scope: !6202)
!6228 = !DILocation(line: 2786, column: 6, scope: !6202)
!6229 = !DILocation(line: 2787, column: 8, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2787, column: 8)
!6231 = !DILocation(line: 2787, column: 10, scope: !6230)
!6232 = !DILocation(line: 2787, column: 8, scope: !6202)
!6233 = !DILocation(line: 2789, column: 34, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2788, column: 6)
!6235 = !DILocation(line: 2789, column: 33, scope: !6234)
!6236 = !DILocation(line: 2789, column: 37, scope: !6234)
!6237 = !DILocation(line: 2789, column: 40, scope: !6234)
!6238 = !DILocation(line: 2789, column: 43, scope: !6234)
!6239 = !DILocation(line: 2789, column: 17, scope: !6234)
!6240 = !DILocation(line: 2789, column: 15, scope: !6234)
!6241 = !DILocation(line: 2790, column: 12, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 2790, column: 12)
!6243 = !DILocation(line: 2790, column: 19, scope: !6242)
!6244 = !DILocation(line: 2790, column: 12, scope: !6234)
!6245 = !DILocation(line: 2791, column: 10, scope: !6242)
!6246 = !DILocation(line: 2791, column: 3, scope: !6242)
!6247 = !DILocation(line: 2792, column: 6, scope: !6234)
!6248 = !DILocation(line: 2793, column: 4, scope: !6202)
!6249 = !DILocation(line: 2797, column: 8, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2797, column: 8)
!6251 = !DILocation(line: 2797, column: 22, scope: !6250)
!6252 = !DILocation(line: 2797, column: 8, scope: !6202)
!6253 = !DILocation(line: 2798, column: 6, scope: !6250)
!6254 = !DILocation(line: 2799, column: 11, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2799, column: 4)
!6256 = !DILocation(line: 2799, column: 9, scope: !6255)
!6257 = !DILocation(line: 2799, column: 16, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2799, column: 4)
!6259 = !DILocation(line: 2799, column: 20, scope: !6258)
!6260 = !DILocation(line: 2799, column: 18, scope: !6258)
!6261 = !DILocation(line: 2799, column: 4, scope: !6255)
!6262 = !DILocation(line: 2802, column: 13, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2800, column: 6)
!6264 = !DILocation(line: 2802, column: 10, scope: !6263)
!6265 = !DILocation(line: 2803, column: 19, scope: !6263)
!6266 = !DILocation(line: 2803, column: 23, scope: !6263)
!6267 = !DILocation(line: 2803, column: 26, scope: !6263)
!6268 = !DILocation(line: 2803, column: 17, scope: !6263)
!6269 = !DILocation(line: 2803, column: 15, scope: !6263)
!6270 = !DILocation(line: 2804, column: 12, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 2804, column: 12)
!6272 = !DILocation(line: 2804, column: 19, scope: !6271)
!6273 = !DILocation(line: 2804, column: 12, scope: !6263)
!6274 = !DILocation(line: 2806, column: 3, scope: !6271)
!6275 = !DILocation(line: 2807, column: 17, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 2807, column: 17)
!6277 = !DILocation(line: 2807, column: 24, scope: !6276)
!6278 = !DILocation(line: 2807, column: 17, scope: !6271)
!6279 = !DILocation(line: 2809, column: 10, scope: !6276)
!6280 = !DILocation(line: 2809, column: 3, scope: !6276)
!6281 = !DILocation(line: 2811, column: 13, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 2811, column: 12)
!6283 = !DILocation(line: 2811, column: 12, scope: !6282)
!6284 = !DILocation(line: 2811, column: 15, scope: !6282)
!6285 = !DILocation(line: 2811, column: 12, scope: !6263)
!6286 = !DILocation(line: 2813, column: 3, scope: !6282)
!6287 = !DILocation(line: 2815, column: 38, scope: !6263)
!6288 = !DILocation(line: 2815, column: 12, scope: !6263)
!6289 = !DILocation(line: 2815, column: 10, scope: !6263)
!6290 = !DILocation(line: 2816, column: 12, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 2816, column: 12)
!6292 = !DILocation(line: 2816, column: 14, scope: !6291)
!6293 = !DILocation(line: 2816, column: 12, scope: !6263)
!6294 = !DILocation(line: 2818, column: 31, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2817, column: 3)
!6296 = !DILocation(line: 2818, column: 30, scope: !6295)
!6297 = !DILocation(line: 2818, column: 34, scope: !6295)
!6298 = !DILocation(line: 2818, column: 37, scope: !6295)
!6299 = !DILocation(line: 2818, column: 40, scope: !6295)
!6300 = !DILocation(line: 2818, column: 14, scope: !6295)
!6301 = !DILocation(line: 2818, column: 12, scope: !6295)
!6302 = !DILocation(line: 2819, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 2819, column: 9)
!6304 = !DILocation(line: 2819, column: 16, scope: !6303)
!6305 = !DILocation(line: 2819, column: 9, scope: !6295)
!6306 = !DILocation(line: 2820, column: 14, scope: !6303)
!6307 = !DILocation(line: 2820, column: 7, scope: !6303)
!6308 = !DILocation(line: 2821, column: 10, scope: !6295)
!6309 = !DILocation(line: 2822, column: 6, scope: !6263)
!6310 = !DILocation(line: 2799, column: 38, scope: !6258)
!6311 = !DILocation(line: 2799, column: 4, scope: !6258)
!6312 = distinct !{!6312, !6261, !6313}
!6313 = !DILocation(line: 2822, column: 6, scope: !6255)
!6314 = !DILocation(line: 2823, column: 4, scope: !6202)
!6315 = !DILocation(line: 2827, column: 4, scope: !6202)
!6316 = !DILocation(line: 2829, column: 5, scope: !6198)
!6317 = !DILocation(line: 2767, column: 30, scope: !6192)
!6318 = !DILocation(line: 2767, column: 3, scope: !6192)
!6319 = distinct !{!6319, !6196, !6320}
!6320 = !DILocation(line: 2829, column: 5, scope: !6193)
!6321 = !DILocation(line: 2831, column: 3, scope: !6168)
!6322 = !DILocation(line: 2832, column: 1, scope: !6168)
!6323 = distinct !DISubprogram(name: "regno_use_in", scope: !3, file: !3, line: 2878, type: !6324, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!622, !7, !622}
!6326 = !DILocalVariable(name: "regno", arg: 1, scope: !6323, file: !3, line: 2878, type: !7)
!6327 = !DILocation(line: 2878, column: 28, scope: !6323)
!6328 = !DILocalVariable(name: "x", arg: 2, scope: !6323, file: !3, line: 2878, type: !622)
!6329 = !DILocation(line: 2878, column: 39, scope: !6323)
!6330 = !DILocalVariable(name: "fmt", scope: !6323, file: !3, line: 2880, type: !648)
!6331 = !DILocation(line: 2880, column: 15, scope: !6323)
!6332 = !DILocalVariable(name: "i", scope: !6323, file: !3, line: 2881, type: !619)
!6333 = !DILocation(line: 2881, column: 7, scope: !6323)
!6334 = !DILocalVariable(name: "j", scope: !6323, file: !3, line: 2881, type: !619)
!6335 = !DILocation(line: 2881, column: 10, scope: !6323)
!6336 = !DILocalVariable(name: "tem", scope: !6323, file: !3, line: 2882, type: !622)
!6337 = !DILocation(line: 2882, column: 7, scope: !6323)
!6338 = !DILocation(line: 2884, column: 7, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2884, column: 7)
!6340 = !DILocation(line: 2884, column: 17, scope: !6339)
!6341 = !DILocation(line: 2884, column: 20, scope: !6339)
!6342 = !DILocation(line: 2884, column: 33, scope: !6339)
!6343 = !DILocation(line: 2884, column: 30, scope: !6339)
!6344 = !DILocation(line: 2884, column: 7, scope: !6323)
!6345 = !DILocation(line: 2885, column: 12, scope: !6339)
!6346 = !DILocation(line: 2885, column: 5, scope: !6339)
!6347 = !DILocation(line: 2887, column: 9, scope: !6323)
!6348 = !DILocation(line: 2887, column: 7, scope: !6323)
!6349 = !DILocation(line: 2888, column: 12, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2888, column: 3)
!6351 = !DILocation(line: 2888, column: 42, scope: !6350)
!6352 = !DILocation(line: 2888, column: 10, scope: !6350)
!6353 = !DILocation(line: 2888, column: 8, scope: !6350)
!6354 = !DILocation(line: 2888, column: 47, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 2888, column: 3)
!6356 = !DILocation(line: 2888, column: 49, scope: !6355)
!6357 = !DILocation(line: 2888, column: 3, scope: !6350)
!6358 = !DILocation(line: 2890, column: 11, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 2890, column: 11)
!6360 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 2889, column: 5)
!6361 = !DILocation(line: 2890, column: 15, scope: !6359)
!6362 = !DILocation(line: 2890, column: 18, scope: !6359)
!6363 = !DILocation(line: 2890, column: 11, scope: !6360)
!6364 = !DILocation(line: 2892, column: 29, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 2892, column: 8)
!6366 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 2891, column: 2)
!6367 = !DILocation(line: 2892, column: 36, scope: !6365)
!6368 = !DILocation(line: 2892, column: 15, scope: !6365)
!6369 = !DILocation(line: 2892, column: 13, scope: !6365)
!6370 = !DILocation(line: 2892, column: 8, scope: !6366)
!6371 = !DILocation(line: 2893, column: 13, scope: !6365)
!6372 = !DILocation(line: 2893, column: 6, scope: !6365)
!6373 = !DILocation(line: 2894, column: 2, scope: !6366)
!6374 = !DILocation(line: 2895, column: 16, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 2895, column: 16)
!6376 = !DILocation(line: 2895, column: 20, scope: !6375)
!6377 = !DILocation(line: 2895, column: 23, scope: !6375)
!6378 = !DILocation(line: 2895, column: 16, scope: !6359)
!6379 = !DILocation(line: 2896, column: 11, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2896, column: 2)
!6381 = !DILocation(line: 2896, column: 26, scope: !6380)
!6382 = !DILocation(line: 2896, column: 9, scope: !6380)
!6383 = !DILocation(line: 2896, column: 7, scope: !6380)
!6384 = !DILocation(line: 2896, column: 31, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2896, column: 2)
!6386 = !DILocation(line: 2896, column: 33, scope: !6385)
!6387 = !DILocation(line: 2896, column: 2, scope: !6380)
!6388 = !DILocation(line: 2897, column: 29, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 2897, column: 8)
!6390 = !DILocation(line: 2897, column: 37, scope: !6389)
!6391 = !DILocation(line: 2897, column: 15, scope: !6389)
!6392 = !DILocation(line: 2897, column: 13, scope: !6389)
!6393 = !DILocation(line: 2897, column: 8, scope: !6385)
!6394 = !DILocation(line: 2898, column: 13, scope: !6389)
!6395 = !DILocation(line: 2898, column: 6, scope: !6389)
!6396 = !DILocation(line: 2897, column: 55, scope: !6389)
!6397 = !DILocation(line: 2896, column: 40, scope: !6385)
!6398 = !DILocation(line: 2896, column: 2, scope: !6385)
!6399 = distinct !{!6399, !6387, !6400}
!6400 = !DILocation(line: 2898, column: 13, scope: !6380)
!6401 = !DILocation(line: 2899, column: 5, scope: !6360)
!6402 = !DILocation(line: 2888, column: 56, scope: !6355)
!6403 = !DILocation(line: 2888, column: 3, scope: !6355)
!6404 = distinct !{!6404, !6357, !6405}
!6405 = !DILocation(line: 2899, column: 5, scope: !6350)
!6406 = !DILocation(line: 2901, column: 3, scope: !6323)
!6407 = !DILocation(line: 2902, column: 1, scope: !6323)
!6408 = distinct !DISubprogram(name: "commutative_operand_precedence", scope: !3, file: !3, line: 2911, type: !6409, scopeLine: 2912, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{!619, !622}
!6411 = !DILocalVariable(name: "op", arg: 1, scope: !6408, file: !3, line: 2911, type: !622)
!6412 = !DILocation(line: 2911, column: 37, scope: !6408)
!6413 = !DILocalVariable(name: "code", scope: !6408, file: !3, line: 2913, type: !377)
!6414 = !DILocation(line: 2913, column: 17, scope: !6408)
!6415 = !DILocation(line: 2913, column: 24, scope: !6408)
!6416 = !DILocation(line: 2916, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2916, column: 7)
!6418 = !DILocation(line: 2916, column: 12, scope: !6417)
!6419 = !DILocation(line: 2916, column: 7, scope: !6408)
!6420 = !DILocation(line: 2917, column: 5, scope: !6417)
!6421 = !DILocation(line: 2918, column: 7, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2918, column: 7)
!6423 = !DILocation(line: 2918, column: 12, scope: !6422)
!6424 = !DILocation(line: 2918, column: 7, scope: !6408)
!6425 = !DILocation(line: 2919, column: 5, scope: !6422)
!6426 = !DILocation(line: 2920, column: 7, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2920, column: 7)
!6428 = !DILocation(line: 2920, column: 12, scope: !6427)
!6429 = !DILocation(line: 2920, column: 7, scope: !6408)
!6430 = !DILocation(line: 2921, column: 5, scope: !6427)
!6431 = !DILocation(line: 2922, column: 39, scope: !6408)
!6432 = !DILocation(line: 2922, column: 8, scope: !6408)
!6433 = !DILocation(line: 2922, column: 6, scope: !6408)
!6434 = !DILocation(line: 2923, column: 10, scope: !6408)
!6435 = !DILocation(line: 2923, column: 8, scope: !6408)
!6436 = !DILocation(line: 2925, column: 11, scope: !6408)
!6437 = !DILocation(line: 2925, column: 3, scope: !6408)
!6438 = !DILocation(line: 2928, column: 11, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2928, column: 11)
!6440 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2926, column: 5)
!6441 = !DILocation(line: 2928, column: 16, scope: !6439)
!6442 = !DILocation(line: 2928, column: 11, scope: !6440)
!6443 = !DILocation(line: 2929, column: 9, scope: !6439)
!6444 = !DILocation(line: 2930, column: 11, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2930, column: 11)
!6446 = !DILocation(line: 2930, column: 16, scope: !6445)
!6447 = !DILocation(line: 2930, column: 11, scope: !6440)
!6448 = !DILocation(line: 2931, column: 9, scope: !6445)
!6449 = !DILocation(line: 2932, column: 11, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2932, column: 11)
!6451 = !DILocation(line: 2932, column: 16, scope: !6450)
!6452 = !DILocation(line: 2932, column: 11, scope: !6440)
!6453 = !DILocation(line: 2933, column: 9, scope: !6450)
!6454 = !DILocation(line: 2934, column: 7, scope: !6440)
!6455 = !DILocation(line: 2938, column: 11, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2938, column: 11)
!6457 = !DILocation(line: 2938, column: 16, scope: !6456)
!6458 = !DILocation(line: 2938, column: 26, scope: !6456)
!6459 = !DILocation(line: 2938, column: 29, scope: !6456)
!6460 = !DILocation(line: 2938, column: 11, scope: !6440)
!6461 = !DILocation(line: 2939, column: 9, scope: !6456)
!6462 = !DILocation(line: 2940, column: 7, scope: !6440)
!6463 = !DILocation(line: 2945, column: 12, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2945, column: 11)
!6465 = !DILocation(line: 2945, column: 23, scope: !6464)
!6466 = !DILocation(line: 2945, column: 26, scope: !6464)
!6467 = !DILocation(line: 2946, column: 4, scope: !6464)
!6468 = !DILocation(line: 2946, column: 8, scope: !6464)
!6469 = !DILocation(line: 2946, column: 19, scope: !6464)
!6470 = !DILocation(line: 2946, column: 22, scope: !6464)
!6471 = !DILocation(line: 2945, column: 11, scope: !6440)
!6472 = !DILocation(line: 2947, column: 2, scope: !6464)
!6473 = !DILocation(line: 2948, column: 7, scope: !6440)
!6474 = !DILocation(line: 2954, column: 7, scope: !6440)
!6475 = !DILocation(line: 2960, column: 7, scope: !6440)
!6476 = !DILocation(line: 2964, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2964, column: 11)
!6478 = !DILocation(line: 2964, column: 16, scope: !6477)
!6479 = !DILocation(line: 2964, column: 23, scope: !6477)
!6480 = !DILocation(line: 2964, column: 26, scope: !6477)
!6481 = !DILocation(line: 2964, column: 31, scope: !6477)
!6482 = !DILocation(line: 2964, column: 11, scope: !6440)
!6483 = !DILocation(line: 2965, column: 9, scope: !6477)
!6484 = !DILocation(line: 2964, column: 34, scope: !6477)
!6485 = !DILocation(line: 2968, column: 7, scope: !6440)
!6486 = !DILocation(line: 2970, column: 1, scope: !6408)
!6487 = distinct !DISubprogram(name: "swap_commutative_operands_p", scope: !3, file: !3, line: 2976, type: !6488, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!855, !622, !622}
!6490 = !DILocalVariable(name: "x", arg: 1, scope: !6487, file: !3, line: 2976, type: !622)
!6491 = !DILocation(line: 2976, column: 34, scope: !6487)
!6492 = !DILocalVariable(name: "y", arg: 2, scope: !6487, file: !3, line: 2976, type: !622)
!6493 = !DILocation(line: 2976, column: 41, scope: !6487)
!6494 = !DILocation(line: 2978, column: 43, scope: !6487)
!6495 = !DILocation(line: 2978, column: 11, scope: !6487)
!6496 = !DILocation(line: 2979, column: 38, scope: !6487)
!6497 = !DILocation(line: 2979, column: 6, scope: !6487)
!6498 = !DILocation(line: 2979, column: 4, scope: !6487)
!6499 = !DILocation(line: 2978, column: 10, scope: !6487)
!6500 = !DILocation(line: 2978, column: 3, scope: !6487)
!6501 = distinct !DISubprogram(name: "auto_inc_p", scope: !3, file: !3, line: 2985, type: !1736, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6502 = !DILocalVariable(name: "x", arg: 1, scope: !6501, file: !3, line: 2985, type: !1713)
!6503 = !DILocation(line: 2985, column: 23, scope: !6501)
!6504 = !DILocation(line: 2987, column: 11, scope: !6501)
!6505 = !DILocation(line: 2987, column: 3, scope: !6501)
!6506 = !DILocation(line: 2996, column: 11, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2996, column: 11)
!6508 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 2988, column: 5)
!6509 = !DILocation(line: 2996, column: 26, scope: !6507)
!6510 = !DILocation(line: 2996, column: 23, scope: !6507)
!6511 = !DILocation(line: 2996, column: 11, scope: !6508)
!6512 = !DILocation(line: 2997, column: 2, scope: !6507)
!6513 = !DILocation(line: 2999, column: 7, scope: !6508)
!6514 = !DILocation(line: 3001, column: 3, scope: !6501)
!6515 = !DILocation(line: 3002, column: 1, scope: !6501)
!6516 = distinct !DISubprogram(name: "loc_mentioned_in_p", scope: !3, file: !3, line: 3006, type: !6517, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!619, !1697, !1713}
!6519 = !DILocalVariable(name: "loc", arg: 1, scope: !6516, file: !3, line: 3006, type: !1697)
!6520 = !DILocation(line: 3006, column: 26, scope: !6516)
!6521 = !DILocalVariable(name: "in", arg: 2, scope: !6516, file: !3, line: 3006, type: !1713)
!6522 = !DILocation(line: 3006, column: 41, scope: !6516)
!6523 = !DILocalVariable(name: "code", scope: !6516, file: !3, line: 3008, type: !377)
!6524 = !DILocation(line: 3008, column: 17, scope: !6516)
!6525 = !DILocalVariable(name: "fmt", scope: !6516, file: !3, line: 3009, type: !648)
!6526 = !DILocation(line: 3009, column: 15, scope: !6516)
!6527 = !DILocalVariable(name: "i", scope: !6516, file: !3, line: 3010, type: !619)
!6528 = !DILocation(line: 3010, column: 7, scope: !6516)
!6529 = !DILocalVariable(name: "j", scope: !6516, file: !3, line: 3010, type: !619)
!6530 = !DILocation(line: 3010, column: 10, scope: !6516)
!6531 = !DILocation(line: 3012, column: 8, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 3012, column: 7)
!6533 = !DILocation(line: 3012, column: 7, scope: !6516)
!6534 = !DILocation(line: 3013, column: 5, scope: !6532)
!6535 = !DILocation(line: 3015, column: 10, scope: !6516)
!6536 = !DILocation(line: 3015, column: 8, scope: !6516)
!6537 = !DILocation(line: 3016, column: 9, scope: !6516)
!6538 = !DILocation(line: 3016, column: 7, scope: !6516)
!6539 = !DILocation(line: 3017, column: 12, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 3017, column: 3)
!6541 = !DILocation(line: 3017, column: 34, scope: !6540)
!6542 = !DILocation(line: 3017, column: 10, scope: !6540)
!6543 = !DILocation(line: 3017, column: 8, scope: !6540)
!6544 = !DILocation(line: 3017, column: 39, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 3017, column: 3)
!6546 = !DILocation(line: 3017, column: 41, scope: !6545)
!6547 = !DILocation(line: 3017, column: 3, scope: !6540)
!6548 = !DILocation(line: 3019, column: 11, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 3019, column: 11)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 3018, column: 5)
!6551 = !DILocation(line: 3019, column: 15, scope: !6549)
!6552 = !DILocation(line: 3019, column: 18, scope: !6549)
!6553 = !DILocation(line: 3019, column: 11, scope: !6550)
!6554 = !DILocation(line: 3021, column: 8, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 3021, column: 8)
!6556 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3020, column: 2)
!6557 = !DILocation(line: 3021, column: 16, scope: !6555)
!6558 = !DILocation(line: 3021, column: 12, scope: !6555)
!6559 = !DILocation(line: 3021, column: 29, scope: !6555)
!6560 = !DILocation(line: 3021, column: 52, scope: !6555)
!6561 = !DILocation(line: 3021, column: 57, scope: !6555)
!6562 = !DILocation(line: 3021, column: 32, scope: !6555)
!6563 = !DILocation(line: 3021, column: 8, scope: !6556)
!6564 = !DILocation(line: 3022, column: 6, scope: !6555)
!6565 = !DILocation(line: 3023, column: 2, scope: !6556)
!6566 = !DILocation(line: 3024, column: 16, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3024, column: 16)
!6568 = !DILocation(line: 3024, column: 20, scope: !6567)
!6569 = !DILocation(line: 3024, column: 23, scope: !6567)
!6570 = !DILocation(line: 3024, column: 16, scope: !6549)
!6571 = !DILocation(line: 3025, column: 11, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 3025, column: 2)
!6573 = !DILocation(line: 3025, column: 27, scope: !6572)
!6574 = !DILocation(line: 3025, column: 9, scope: !6572)
!6575 = !DILocation(line: 3025, column: 7, scope: !6572)
!6576 = !DILocation(line: 3025, column: 32, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 3025, column: 2)
!6578 = !DILocation(line: 3025, column: 34, scope: !6577)
!6579 = !DILocation(line: 3025, column: 2, scope: !6572)
!6580 = !DILocation(line: 3026, column: 8, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 3026, column: 8)
!6582 = !DILocation(line: 3026, column: 16, scope: !6581)
!6583 = !DILocation(line: 3026, column: 12, scope: !6581)
!6584 = !DILocation(line: 3027, column: 8, scope: !6581)
!6585 = !DILocation(line: 3027, column: 31, scope: !6581)
!6586 = !DILocation(line: 3027, column: 36, scope: !6581)
!6587 = !DILocation(line: 3027, column: 11, scope: !6581)
!6588 = !DILocation(line: 3026, column: 8, scope: !6577)
!6589 = !DILocation(line: 3028, column: 6, scope: !6581)
!6590 = !DILocation(line: 3027, column: 54, scope: !6581)
!6591 = !DILocation(line: 3025, column: 41, scope: !6577)
!6592 = !DILocation(line: 3025, column: 2, scope: !6577)
!6593 = distinct !{!6593, !6579, !6594}
!6594 = !DILocation(line: 3028, column: 13, scope: !6572)
!6595 = !DILocation(line: 3029, column: 5, scope: !6550)
!6596 = !DILocation(line: 3017, column: 48, scope: !6545)
!6597 = !DILocation(line: 3017, column: 3, scope: !6545)
!6598 = distinct !{!6598, !6547, !6599}
!6599 = !DILocation(line: 3029, column: 5, scope: !6540)
!6600 = !DILocation(line: 3030, column: 3, scope: !6516)
!6601 = !DILocation(line: 3031, column: 1, scope: !6516)
!6602 = distinct !DISubprogram(name: "subreg_lsb_1", scope: !3, file: !3, line: 3038, type: !6603, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!7, !5, !5, !7}
!6605 = !DILocalVariable(name: "outer_mode", arg: 1, scope: !6602, file: !3, line: 3038, type: !5)
!6606 = !DILocation(line: 3038, column: 33, scope: !6602)
!6607 = !DILocalVariable(name: "inner_mode", arg: 2, scope: !6602, file: !3, line: 3039, type: !5)
!6608 = !DILocation(line: 3039, column: 26, scope: !6602)
!6609 = !DILocalVariable(name: "subreg_byte", arg: 3, scope: !6602, file: !3, line: 3040, type: !7)
!6610 = !DILocation(line: 3040, column: 21, scope: !6602)
!6611 = !DILocalVariable(name: "bitpos", scope: !6602, file: !3, line: 3042, type: !7)
!6612 = !DILocation(line: 3042, column: 16, scope: !6602)
!6613 = !DILocalVariable(name: "byte", scope: !6602, file: !3, line: 3043, type: !7)
!6614 = !DILocation(line: 3043, column: 16, scope: !6602)
!6615 = !DILocalVariable(name: "word", scope: !6602, file: !3, line: 3044, type: !7)
!6616 = !DILocation(line: 3044, column: 16, scope: !6602)
!6617 = !DILocation(line: 3047, column: 7, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 3047, column: 7)
!6619 = !DILocation(line: 3047, column: 39, scope: !6618)
!6620 = !DILocation(line: 3047, column: 37, scope: !6618)
!6621 = !DILocation(line: 3047, column: 7, scope: !6602)
!6622 = !DILocation(line: 3048, column: 5, scope: !6618)
!6623 = !DILocation(line: 3062, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 3058, column: 7)
!6625 = !DILocation(line: 3062, column: 24, scope: !6624)
!6626 = !DILocation(line: 3062, column: 10, scope: !6624)
!6627 = !DILocation(line: 3063, column: 12, scope: !6602)
!6628 = !DILocation(line: 3063, column: 17, scope: !6602)
!6629 = !DILocation(line: 3063, column: 10, scope: !6602)
!6630 = !DILocation(line: 3069, column: 12, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 3065, column: 7)
!6632 = !DILocation(line: 3069, column: 24, scope: !6631)
!6633 = !DILocation(line: 3069, column: 10, scope: !6631)
!6634 = !DILocation(line: 3070, column: 13, scope: !6602)
!6635 = !DILocation(line: 3070, column: 18, scope: !6602)
!6636 = !DILocation(line: 3070, column: 10, scope: !6602)
!6637 = !DILocation(line: 3072, column: 10, scope: !6602)
!6638 = !DILocation(line: 3072, column: 3, scope: !6602)
!6639 = !DILocation(line: 3073, column: 1, scope: !6602)
!6640 = distinct !DISubprogram(name: "subreg_lsb", scope: !3, file: !3, line: 3079, type: !2230, scopeLine: 3080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6641 = !DILocalVariable(name: "x", arg: 1, scope: !6640, file: !3, line: 3079, type: !1713)
!6642 = !DILocation(line: 3079, column: 23, scope: !6640)
!6643 = !DILocation(line: 3081, column: 24, scope: !6640)
!6644 = !DILocation(line: 3081, column: 38, scope: !6640)
!6645 = !DILocation(line: 3082, column: 10, scope: !6640)
!6646 = !DILocation(line: 3081, column: 10, scope: !6640)
!6647 = !DILocation(line: 3081, column: 3, scope: !6640)
!6648 = distinct !DISubprogram(name: "subreg_get_info", scope: !3, file: !3, line: 3092, type: !6649, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6649 = !DISubroutineType(types: !6650)
!6650 = !{null, !7, !5, !7, !5, !6651}
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6652, size: 64)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subreg_info", file: !378, line: 1907, size: 96, elements: !6653)
!6653 = !{!6654, !6655, !6656}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6652, file: !378, line: 1910, baseType: !619, size: 32)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !6652, file: !378, line: 1912, baseType: !619, size: 32, offset: 32)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "representable_p", scope: !6652, file: !378, line: 1915, baseType: !855, size: 8, offset: 64)
!6657 = !DILocalVariable(name: "xregno", arg: 1, scope: !6648, file: !3, line: 3092, type: !7)
!6658 = !DILocation(line: 3092, column: 31, scope: !6648)
!6659 = !DILocalVariable(name: "xmode", arg: 2, scope: !6648, file: !3, line: 3092, type: !5)
!6660 = !DILocation(line: 3092, column: 57, scope: !6648)
!6661 = !DILocalVariable(name: "offset", arg: 3, scope: !6648, file: !3, line: 3093, type: !7)
!6662 = !DILocation(line: 3093, column: 17, scope: !6648)
!6663 = !DILocalVariable(name: "ymode", arg: 4, scope: !6648, file: !3, line: 3093, type: !5)
!6664 = !DILocation(line: 3093, column: 43, scope: !6648)
!6665 = !DILocalVariable(name: "info", arg: 5, scope: !6648, file: !3, line: 3094, type: !6651)
!6666 = !DILocation(line: 3094, column: 24, scope: !6648)
!6667 = !DILocalVariable(name: "nregs_xmode", scope: !6648, file: !3, line: 3096, type: !619)
!6668 = !DILocation(line: 3096, column: 7, scope: !6648)
!6669 = !DILocalVariable(name: "nregs_ymode", scope: !6648, file: !3, line: 3096, type: !619)
!6670 = !DILocation(line: 3096, column: 20, scope: !6648)
!6671 = !DILocalVariable(name: "mode_multiple", scope: !6648, file: !3, line: 3097, type: !619)
!6672 = !DILocation(line: 3097, column: 7, scope: !6648)
!6673 = !DILocalVariable(name: "nregs_multiple", scope: !6648, file: !3, line: 3097, type: !619)
!6674 = !DILocation(line: 3097, column: 22, scope: !6648)
!6675 = !DILocalVariable(name: "offset_adj", scope: !6648, file: !3, line: 3098, type: !619)
!6676 = !DILocation(line: 3098, column: 7, scope: !6648)
!6677 = !DILocalVariable(name: "y_offset", scope: !6648, file: !3, line: 3098, type: !619)
!6678 = !DILocation(line: 3098, column: 19, scope: !6648)
!6679 = !DILocalVariable(name: "y_offset_adj", scope: !6648, file: !3, line: 3098, type: !619)
!6680 = !DILocation(line: 3098, column: 29, scope: !6648)
!6681 = !DILocalVariable(name: "regsize_xmode", scope: !6648, file: !3, line: 3099, type: !619)
!6682 = !DILocation(line: 3099, column: 7, scope: !6648)
!6683 = !DILocalVariable(name: "regsize_ymode", scope: !6648, file: !3, line: 3099, type: !619)
!6684 = !DILocation(line: 3099, column: 22, scope: !6648)
!6685 = !DILocalVariable(name: "rknown", scope: !6648, file: !3, line: 3100, type: !855)
!6686 = !DILocation(line: 3100, column: 8, scope: !6648)
!6687 = !DILocation(line: 3102, column: 3, scope: !6648)
!6688 = !DILocation(line: 3104, column: 10, scope: !6648)
!6689 = !DILocation(line: 3108, column: 7, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3108, column: 7)
!6691 = !DILocation(line: 3108, column: 7, scope: !6648)
!6692 = !DILocalVariable(name: "xmode_unit", scope: !6693, file: !3, line: 3110, type: !5)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 3109, column: 5)
!6694 = !DILocation(line: 3110, column: 25, scope: !6693)
!6695 = !DILocation(line: 3112, column: 21, scope: !6693)
!6696 = !DILocation(line: 3112, column: 19, scope: !6693)
!6697 = !DILocation(line: 3113, column: 11, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 3113, column: 11)
!6699 = !DILocation(line: 3113, column: 34, scope: !6698)
!6700 = !DILocation(line: 3113, column: 11, scope: !6693)
!6701 = !DILocation(line: 3114, column: 15, scope: !6698)
!6702 = !DILocation(line: 3114, column: 13, scope: !6698)
!6703 = !DILocation(line: 3114, column: 2, scope: !6698)
!6704 = !DILocation(line: 3116, column: 15, scope: !6698)
!6705 = !DILocation(line: 3116, column: 13, scope: !6698)
!6706 = !DILocation(line: 3117, column: 7, scope: !6693)
!6707 = !DILocation(line: 3118, column: 7, scope: !6693)
!6708 = !DILocation(line: 3121, column: 7, scope: !6693)
!6709 = !DILocation(line: 3133, column: 12, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 3133, column: 11)
!6711 = !DILocation(line: 3133, column: 21, scope: !6710)
!6712 = !DILocation(line: 3133, column: 19, scope: !6710)
!6713 = !DILocation(line: 3133, column: 48, scope: !6710)
!6714 = !DILocation(line: 3134, column: 7, scope: !6710)
!6715 = !DILocation(line: 3134, column: 5, scope: !6710)
!6716 = !DILocation(line: 3135, column: 4, scope: !6710)
!6717 = !DILocation(line: 3135, column: 8, scope: !6710)
!6718 = !DILocation(line: 3135, column: 17, scope: !6710)
!6719 = !DILocation(line: 3135, column: 15, scope: !6710)
!6720 = !DILocation(line: 3136, column: 13, scope: !6710)
!6721 = !DILocation(line: 3136, column: 22, scope: !6710)
!6722 = !DILocation(line: 3136, column: 20, scope: !6710)
!6723 = !DILocation(line: 3136, column: 44, scope: !6710)
!6724 = !DILocation(line: 3137, column: 7, scope: !6710)
!6725 = !DILocation(line: 3137, column: 5, scope: !6710)
!6726 = !DILocation(line: 3136, column: 8, scope: !6710)
!6727 = !DILocation(line: 3133, column: 11, scope: !6693)
!6728 = !DILocation(line: 3139, column: 4, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 3138, column: 2)
!6730 = !DILocation(line: 3139, column: 10, scope: !6729)
!6731 = !DILocation(line: 3139, column: 26, scope: !6729)
!6732 = !DILocation(line: 3140, column: 11, scope: !6729)
!6733 = !DILocation(line: 3141, column: 2, scope: !6729)
!6734 = !DILocation(line: 3142, column: 5, scope: !6693)
!6735 = !DILocation(line: 3144, column: 36, scope: !6690)
!6736 = !DILocation(line: 3144, column: 19, scope: !6690)
!6737 = !DILocation(line: 3144, column: 44, scope: !6690)
!6738 = !DILocation(line: 3144, column: 17, scope: !6690)
!6739 = !DILocation(line: 3146, column: 34, scope: !6648)
!6740 = !DILocation(line: 3146, column: 17, scope: !6648)
!6741 = !DILocation(line: 3146, column: 42, scope: !6648)
!6742 = !DILocation(line: 3146, column: 15, scope: !6648)
!6743 = !DILocation(line: 3149, column: 8, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3149, column: 7)
!6745 = !DILocation(line: 3150, column: 7, scope: !6744)
!6746 = !DILocation(line: 3150, column: 10, scope: !6744)
!6747 = !DILocation(line: 3150, column: 17, scope: !6744)
!6748 = !DILocation(line: 3151, column: 7, scope: !6744)
!6749 = !DILocation(line: 3151, column: 10, scope: !6744)
!6750 = !DILocation(line: 3151, column: 34, scope: !6744)
!6751 = !DILocation(line: 3151, column: 32, scope: !6744)
!6752 = !DILocation(line: 3149, column: 7, scope: !6648)
!6753 = !DILocation(line: 3153, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 3152, column: 5)
!6755 = !DILocation(line: 3153, column: 13, scope: !6754)
!6756 = !DILocation(line: 3153, column: 29, scope: !6754)
!6757 = !DILocation(line: 3158, column: 11, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 3158, column: 11)
!6759 = !DILocation(line: 3158, column: 33, scope: !6758)
!6760 = !DILocation(line: 3158, column: 11, scope: !6754)
!6761 = !DILocation(line: 3160, column: 17, scope: !6758)
!6762 = !DILocation(line: 3160, column: 31, scope: !6758)
!6763 = !DILocation(line: 3160, column: 29, scope: !6758)
!6764 = !DILocation(line: 3160, column: 2, scope: !6758)
!6765 = !DILocation(line: 3160, column: 8, scope: !6758)
!6766 = !DILocation(line: 3160, column: 15, scope: !6758)
!6767 = !DILocation(line: 3162, column: 2, scope: !6758)
!6768 = !DILocation(line: 3162, column: 8, scope: !6758)
!6769 = !DILocation(line: 3162, column: 15, scope: !6758)
!6770 = !DILocation(line: 3163, column: 21, scope: !6754)
!6771 = !DILocation(line: 3163, column: 7, scope: !6754)
!6772 = !DILocation(line: 3163, column: 13, scope: !6754)
!6773 = !DILocation(line: 3163, column: 19, scope: !6754)
!6774 = !DILocation(line: 3164, column: 7, scope: !6754)
!6775 = !DILocation(line: 3169, column: 8, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3169, column: 7)
!6777 = !DILocation(line: 3170, column: 7, scope: !6776)
!6778 = !DILocation(line: 3170, column: 11, scope: !6776)
!6779 = !DILocation(line: 3171, column: 7, scope: !6776)
!6780 = !DILocation(line: 3171, column: 11, scope: !6776)
!6781 = !DILocation(line: 3171, column: 35, scope: !6776)
!6782 = !DILocation(line: 3171, column: 33, scope: !6776)
!6783 = !DILocation(line: 3171, column: 48, scope: !6776)
!6784 = !DILocation(line: 3172, column: 7, scope: !6776)
!6785 = !DILocation(line: 3172, column: 11, scope: !6776)
!6786 = !DILocation(line: 3172, column: 35, scope: !6776)
!6787 = !DILocation(line: 3172, column: 33, scope: !6776)
!6788 = !DILocation(line: 3172, column: 48, scope: !6776)
!6789 = !DILocation(line: 3169, column: 7, scope: !6648)
!6790 = !DILocation(line: 3174, column: 23, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 3173, column: 5)
!6792 = !DILocation(line: 3174, column: 47, scope: !6791)
!6793 = !DILocation(line: 3174, column: 45, scope: !6791)
!6794 = !DILocation(line: 3174, column: 21, scope: !6791)
!6795 = !DILocation(line: 3175, column: 23, scope: !6791)
!6796 = !DILocation(line: 3175, column: 47, scope: !6791)
!6797 = !DILocation(line: 3175, column: 45, scope: !6791)
!6798 = !DILocation(line: 3175, column: 21, scope: !6791)
!6799 = !DILocation(line: 3176, column: 12, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3176, column: 11)
!6801 = !DILocation(line: 3176, column: 19, scope: !6800)
!6802 = !DILocation(line: 3176, column: 22, scope: !6800)
!6803 = !DILocation(line: 3176, column: 38, scope: !6800)
!6804 = !DILocation(line: 3176, column: 36, scope: !6800)
!6805 = !DILocation(line: 3176, column: 52, scope: !6800)
!6806 = !DILocation(line: 3176, column: 55, scope: !6800)
!6807 = !DILocation(line: 3176, column: 67, scope: !6800)
!6808 = !DILocation(line: 3176, column: 11, scope: !6791)
!6809 = !DILocation(line: 3178, column: 4, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 3177, column: 2)
!6811 = !DILocation(line: 3178, column: 10, scope: !6810)
!6812 = !DILocation(line: 3178, column: 26, scope: !6810)
!6813 = !DILocation(line: 3180, column: 9, scope: !6810)
!6814 = !DILocation(line: 3180, column: 33, scope: !6810)
!6815 = !DILocation(line: 3180, column: 31, scope: !6810)
!6816 = !DILocation(line: 3180, column: 47, scope: !6810)
!6817 = !DILocation(line: 3180, column: 54, scope: !6810)
!6818 = !DILocation(line: 3180, column: 52, scope: !6810)
!6819 = !DILocation(line: 3179, column: 4, scope: !6810)
!6820 = !DILocation(line: 3179, column: 10, scope: !6810)
!6821 = !DILocation(line: 3180, column: 6, scope: !6810)
!6822 = !DILocation(line: 3181, column: 19, scope: !6810)
!6823 = !DILocation(line: 3181, column: 28, scope: !6810)
!6824 = !DILocation(line: 3181, column: 26, scope: !6810)
!6825 = !DILocation(line: 3181, column: 4, scope: !6810)
!6826 = !DILocation(line: 3181, column: 10, scope: !6810)
!6827 = !DILocation(line: 3181, column: 17, scope: !6810)
!6828 = !DILocation(line: 3182, column: 4, scope: !6810)
!6829 = !DILocation(line: 3184, column: 12, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3184, column: 11)
!6831 = !DILocation(line: 3184, column: 19, scope: !6830)
!6832 = !DILocation(line: 3184, column: 22, scope: !6830)
!6833 = !DILocation(line: 3184, column: 38, scope: !6830)
!6834 = !DILocation(line: 3184, column: 36, scope: !6830)
!6835 = !DILocation(line: 3184, column: 52, scope: !6830)
!6836 = !DILocation(line: 3184, column: 55, scope: !6830)
!6837 = !DILocation(line: 3184, column: 67, scope: !6830)
!6838 = !DILocation(line: 3184, column: 11, scope: !6791)
!6839 = !DILocation(line: 3186, column: 4, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3185, column: 2)
!6841 = !DILocation(line: 3186, column: 10, scope: !6840)
!6842 = !DILocation(line: 3186, column: 26, scope: !6840)
!6843 = !DILocation(line: 3188, column: 9, scope: !6840)
!6844 = !DILocation(line: 3188, column: 33, scope: !6840)
!6845 = !DILocation(line: 3188, column: 31, scope: !6840)
!6846 = !DILocation(line: 3188, column: 47, scope: !6840)
!6847 = !DILocation(line: 3188, column: 54, scope: !6840)
!6848 = !DILocation(line: 3188, column: 52, scope: !6840)
!6849 = !DILocation(line: 3187, column: 4, scope: !6840)
!6850 = !DILocation(line: 3187, column: 10, scope: !6840)
!6851 = !DILocation(line: 3188, column: 6, scope: !6840)
!6852 = !DILocation(line: 3189, column: 19, scope: !6840)
!6853 = !DILocation(line: 3189, column: 28, scope: !6840)
!6854 = !DILocation(line: 3189, column: 26, scope: !6840)
!6855 = !DILocation(line: 3189, column: 4, scope: !6840)
!6856 = !DILocation(line: 3189, column: 10, scope: !6840)
!6857 = !DILocation(line: 3189, column: 17, scope: !6840)
!6858 = !DILocation(line: 3190, column: 4, scope: !6840)
!6859 = !DILocation(line: 3192, column: 5, scope: !6791)
!6860 = !DILocation(line: 3195, column: 8, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3195, column: 7)
!6862 = !DILocation(line: 3195, column: 15, scope: !6861)
!6863 = !DILocation(line: 3195, column: 18, scope: !6861)
!6864 = !DILocation(line: 3195, column: 51, scope: !6861)
!6865 = !DILocation(line: 3195, column: 58, scope: !6861)
!6866 = !DILocation(line: 3195, column: 28, scope: !6861)
!6867 = !DILocation(line: 3195, column: 25, scope: !6861)
!6868 = !DILocation(line: 3195, column: 7, scope: !6648)
!6869 = !DILocation(line: 3197, column: 7, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 3196, column: 5)
!6871 = !DILocation(line: 3197, column: 13, scope: !6870)
!6872 = !DILocation(line: 3197, column: 29, scope: !6870)
!6873 = !DILocation(line: 3198, column: 14, scope: !6870)
!6874 = !DILocation(line: 3200, column: 11, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 3200, column: 11)
!6876 = !DILocation(line: 3200, column: 18, scope: !6875)
!6877 = !DILocation(line: 3200, column: 23, scope: !6875)
!6878 = !DILocation(line: 3200, column: 26, scope: !6875)
!6879 = !DILocation(line: 3200, column: 41, scope: !6875)
!6880 = !DILocation(line: 3200, column: 38, scope: !6875)
!6881 = !DILocation(line: 3200, column: 11, scope: !6870)
!6882 = !DILocation(line: 3202, column: 4, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 3201, column: 2)
!6884 = !DILocation(line: 3202, column: 10, scope: !6883)
!6885 = !DILocation(line: 3202, column: 17, scope: !6883)
!6886 = !DILocation(line: 3203, column: 18, scope: !6883)
!6887 = !DILocation(line: 3203, column: 4, scope: !6883)
!6888 = !DILocation(line: 3203, column: 10, scope: !6883)
!6889 = !DILocation(line: 3203, column: 16, scope: !6883)
!6890 = !DILocation(line: 3204, column: 4, scope: !6883)
!6891 = !DILocation(line: 3206, column: 5, scope: !6870)
!6892 = !DILocation(line: 3211, column: 3, scope: !6648)
!6893 = !DILocation(line: 3212, column: 3, scope: !6648)
!6894 = !DILocation(line: 3217, column: 16, scope: !6648)
!6895 = !DILocation(line: 3217, column: 14, scope: !6648)
!6896 = !DILocation(line: 3218, column: 40, scope: !6648)
!6897 = !DILocation(line: 3219, column: 27, scope: !6648)
!6898 = !DILocation(line: 3220, column: 15, scope: !6648)
!6899 = !DILocation(line: 3220, column: 13, scope: !6648)
!6900 = !DILocation(line: 3219, column: 12, scope: !6648)
!6901 = !DILocation(line: 3218, column: 17, scope: !6648)
!6902 = !DILocation(line: 3218, column: 14, scope: !6648)
!6903 = !DILocation(line: 3224, column: 19, scope: !6648)
!6904 = !DILocation(line: 3224, column: 43, scope: !6648)
!6905 = !DILocation(line: 3224, column: 41, scope: !6648)
!6906 = !DILocation(line: 3224, column: 17, scope: !6648)
!6907 = !DILocation(line: 3225, column: 3, scope: !6648)
!6908 = !DILocation(line: 3227, column: 14, scope: !6648)
!6909 = !DILocation(line: 3227, column: 23, scope: !6648)
!6910 = !DILocation(line: 3227, column: 21, scope: !6648)
!6911 = !DILocation(line: 3227, column: 12, scope: !6648)
!6912 = !DILocation(line: 3228, column: 18, scope: !6648)
!6913 = !DILocation(line: 3228, column: 31, scope: !6648)
!6914 = !DILocation(line: 3228, column: 29, scope: !6648)
!6915 = !DILocation(line: 3228, column: 16, scope: !6648)
!6916 = !DILocation(line: 3229, column: 20, scope: !6648)
!6917 = !DILocation(line: 3229, column: 34, scope: !6648)
!6918 = !DILocation(line: 3229, column: 32, scope: !6648)
!6919 = !DILocation(line: 3229, column: 18, scope: !6648)
!6920 = !DILocation(line: 3231, column: 3, scope: !6648)
!6921 = !DILocation(line: 3232, column: 3, scope: !6648)
!6922 = !DILocation(line: 3234, column: 8, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3234, column: 7)
!6924 = !DILocation(line: 3234, column: 7, scope: !6648)
!6925 = !DILocation(line: 3236, column: 34, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3235, column: 5)
!6927 = !DILocation(line: 3236, column: 50, scope: !6926)
!6928 = !DILocation(line: 3236, column: 66, scope: !6926)
!6929 = !DILocation(line: 3236, column: 64, scope: !6926)
!6930 = !DILocation(line: 3236, column: 47, scope: !6926)
!6931 = !DILocation(line: 3236, column: 32, scope: !6926)
!6932 = !DILocation(line: 3236, column: 31, scope: !6926)
!6933 = !DILocation(line: 3236, column: 7, scope: !6926)
!6934 = !DILocation(line: 3236, column: 13, scope: !6926)
!6935 = !DILocation(line: 3236, column: 29, scope: !6926)
!6936 = !DILocation(line: 3237, column: 14, scope: !6926)
!6937 = !DILocation(line: 3238, column: 5, scope: !6926)
!6938 = !DILocation(line: 3239, column: 19, scope: !6648)
!6939 = !DILocation(line: 3239, column: 31, scope: !6648)
!6940 = !DILocation(line: 3239, column: 47, scope: !6648)
!6941 = !DILocation(line: 3239, column: 45, scope: !6648)
!6942 = !DILocation(line: 3239, column: 28, scope: !6648)
!6943 = !DILocation(line: 3239, column: 66, scope: !6648)
!6944 = !DILocation(line: 3239, column: 64, scope: !6648)
!6945 = !DILocation(line: 3239, column: 3, scope: !6648)
!6946 = !DILocation(line: 3239, column: 9, scope: !6648)
!6947 = !DILocation(line: 3239, column: 16, scope: !6648)
!6948 = !DILocation(line: 3240, column: 17, scope: !6648)
!6949 = !DILocation(line: 3240, column: 3, scope: !6648)
!6950 = !DILocation(line: 3240, column: 9, scope: !6648)
!6951 = !DILocation(line: 3240, column: 15, scope: !6648)
!6952 = !DILocation(line: 3241, column: 1, scope: !6648)
!6953 = distinct !DISubprogram(name: "subreg_regno_offset", scope: !3, file: !3, line: 3250, type: !6954, scopeLine: 3252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{!7, !7, !5, !7, !5}
!6956 = !DILocalVariable(name: "xregno", arg: 1, scope: !6953, file: !3, line: 3250, type: !7)
!6957 = !DILocation(line: 3250, column: 35, scope: !6953)
!6958 = !DILocalVariable(name: "xmode", arg: 2, scope: !6953, file: !3, line: 3250, type: !5)
!6959 = !DILocation(line: 3250, column: 61, scope: !6953)
!6960 = !DILocalVariable(name: "offset", arg: 3, scope: !6953, file: !3, line: 3251, type: !7)
!6961 = !DILocation(line: 3251, column: 21, scope: !6953)
!6962 = !DILocalVariable(name: "ymode", arg: 4, scope: !6953, file: !3, line: 3251, type: !5)
!6963 = !DILocation(line: 3251, column: 47, scope: !6953)
!6964 = !DILocalVariable(name: "info", scope: !6953, file: !3, line: 3253, type: !6652)
!6965 = !DILocation(line: 3253, column: 22, scope: !6953)
!6966 = !DILocation(line: 3254, column: 20, scope: !6953)
!6967 = !DILocation(line: 3254, column: 28, scope: !6953)
!6968 = !DILocation(line: 3254, column: 35, scope: !6953)
!6969 = !DILocation(line: 3254, column: 43, scope: !6953)
!6970 = !DILocation(line: 3254, column: 3, scope: !6953)
!6971 = !DILocation(line: 3255, column: 15, scope: !6953)
!6972 = !DILocation(line: 3255, column: 3, scope: !6953)
!6973 = distinct !DISubprogram(name: "subreg_offset_representable_p", scope: !3, file: !3, line: 3266, type: !6974, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!855, !7, !5, !7, !5}
!6976 = !DILocalVariable(name: "xregno", arg: 1, scope: !6973, file: !3, line: 3266, type: !7)
!6977 = !DILocation(line: 3266, column: 45, scope: !6973)
!6978 = !DILocalVariable(name: "xmode", arg: 2, scope: !6973, file: !3, line: 3266, type: !5)
!6979 = !DILocation(line: 3266, column: 71, scope: !6973)
!6980 = !DILocalVariable(name: "offset", arg: 3, scope: !6973, file: !3, line: 3267, type: !7)
!6981 = !DILocation(line: 3267, column: 24, scope: !6973)
!6982 = !DILocalVariable(name: "ymode", arg: 4, scope: !6973, file: !3, line: 3267, type: !5)
!6983 = !DILocation(line: 3267, column: 50, scope: !6973)
!6984 = !DILocalVariable(name: "info", scope: !6973, file: !3, line: 3269, type: !6652)
!6985 = !DILocation(line: 3269, column: 22, scope: !6973)
!6986 = !DILocation(line: 3270, column: 20, scope: !6973)
!6987 = !DILocation(line: 3270, column: 28, scope: !6973)
!6988 = !DILocation(line: 3270, column: 35, scope: !6973)
!6989 = !DILocation(line: 3270, column: 43, scope: !6973)
!6990 = !DILocation(line: 3270, column: 3, scope: !6973)
!6991 = !DILocation(line: 3271, column: 15, scope: !6973)
!6992 = !DILocation(line: 3271, column: 3, scope: !6973)
!6993 = distinct !DISubprogram(name: "simplify_subreg_regno", scope: !3, file: !3, line: 3283, type: !6994, scopeLine: 3285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!6994 = !DISubroutineType(types: !6995)
!6995 = !{!619, !7, !5, !7, !5}
!6996 = !DILocalVariable(name: "xregno", arg: 1, scope: !6993, file: !3, line: 3283, type: !7)
!6997 = !DILocation(line: 3283, column: 37, scope: !6993)
!6998 = !DILocalVariable(name: "xmode", arg: 2, scope: !6993, file: !3, line: 3283, type: !5)
!6999 = !DILocation(line: 3283, column: 63, scope: !6993)
!7000 = !DILocalVariable(name: "offset", arg: 3, scope: !6993, file: !3, line: 3284, type: !7)
!7001 = !DILocation(line: 3284, column: 23, scope: !6993)
!7002 = !DILocalVariable(name: "ymode", arg: 4, scope: !6993, file: !3, line: 3284, type: !5)
!7003 = !DILocation(line: 3284, column: 49, scope: !6993)
!7004 = !DILocalVariable(name: "info", scope: !6993, file: !3, line: 3286, type: !6652)
!7005 = !DILocation(line: 3286, column: 22, scope: !6993)
!7006 = !DILocalVariable(name: "yregno", scope: !6993, file: !3, line: 3287, type: !7)
!7007 = !DILocation(line: 3287, column: 16, scope: !6993)
!7008 = !DILocation(line: 3291, column: 7, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3291, column: 7)
!7010 = !DILocation(line: 3291, column: 30, scope: !7009)
!7011 = !DILocation(line: 3292, column: 7, scope: !7009)
!7012 = !DILocation(line: 3292, column: 10, scope: !7009)
!7013 = !DILocation(line: 3292, column: 33, scope: !7009)
!7014 = !DILocation(line: 3293, column: 7, scope: !7009)
!7015 = !DILocation(line: 3293, column: 10, scope: !7009)
!7016 = !DILocation(line: 3291, column: 7, scope: !6993)
!7017 = !DILocation(line: 3294, column: 5, scope: !7009)
!7018 = !DILocation(line: 3298, column: 9, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3298, column: 7)
!7020 = !DILocation(line: 3298, column: 26, scope: !7019)
!7021 = !DILocation(line: 3298, column: 29, scope: !7019)
!7022 = !DILocation(line: 3299, column: 7, scope: !7019)
!7023 = !DILocation(line: 3299, column: 11, scope: !7019)
!7024 = !DILocation(line: 3299, column: 18, scope: !7019)
!7025 = !DILocation(line: 3300, column: 4, scope: !7019)
!7026 = !DILocation(line: 3300, column: 7, scope: !7019)
!7027 = !DILocation(line: 3300, column: 14, scope: !7019)
!7028 = !DILocation(line: 3298, column: 7, scope: !6993)
!7029 = !DILocation(line: 3301, column: 5, scope: !7019)
!7030 = !DILocation(line: 3304, column: 10, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3303, column: 7)
!7032 = !DILocation(line: 3304, column: 17, scope: !7031)
!7033 = !DILocation(line: 3303, column: 7, scope: !6993)
!7034 = !DILocation(line: 3305, column: 5, scope: !7031)
!7035 = !DILocation(line: 3307, column: 7, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3307, column: 7)
!7037 = !DILocation(line: 3307, column: 14, scope: !7036)
!7038 = !DILocation(line: 3307, column: 7, scope: !6993)
!7039 = !DILocation(line: 3308, column: 5, scope: !7036)
!7040 = !DILocation(line: 3311, column: 20, scope: !6993)
!7041 = !DILocation(line: 3311, column: 28, scope: !6993)
!7042 = !DILocation(line: 3311, column: 35, scope: !6993)
!7043 = !DILocation(line: 3311, column: 43, scope: !6993)
!7044 = !DILocation(line: 3311, column: 3, scope: !6993)
!7045 = !DILocation(line: 3312, column: 13, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3312, column: 7)
!7047 = !DILocation(line: 3312, column: 8, scope: !7046)
!7048 = !DILocation(line: 3312, column: 7, scope: !6993)
!7049 = !DILocation(line: 3313, column: 5, scope: !7046)
!7050 = !DILocation(line: 3316, column: 12, scope: !6993)
!7051 = !DILocation(line: 3316, column: 26, scope: !6993)
!7052 = !DILocation(line: 3316, column: 19, scope: !6993)
!7053 = !DILocation(line: 3316, column: 10, scope: !6993)
!7054 = !DILocation(line: 3317, column: 8, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3317, column: 7)
!7056 = !DILocation(line: 3317, column: 7, scope: !6993)
!7057 = !DILocation(line: 3318, column: 5, scope: !7055)
!7058 = !DILocation(line: 3325, column: 8, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3325, column: 7)
!7060 = !DILocation(line: 3326, column: 7, scope: !7059)
!7061 = !DILocation(line: 3326, column: 10, scope: !7059)
!7062 = !DILocation(line: 3325, column: 7, scope: !6993)
!7063 = !DILocation(line: 3327, column: 5, scope: !7059)
!7064 = !DILocation(line: 3329, column: 16, scope: !6993)
!7065 = !DILocation(line: 3329, column: 3, scope: !6993)
!7066 = !DILocation(line: 3330, column: 1, scope: !6993)
!7067 = distinct !DISubprogram(name: "subreg_nregs_with_regno", scope: !3, file: !3, line: 3361, type: !7068, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!7, !7, !1713}
!7070 = !DILocalVariable(name: "regno", arg: 1, scope: !7067, file: !3, line: 3361, type: !7)
!7071 = !DILocation(line: 3361, column: 39, scope: !7067)
!7072 = !DILocalVariable(name: "x", arg: 2, scope: !7067, file: !3, line: 3361, type: !1713)
!7073 = !DILocation(line: 3361, column: 56, scope: !7067)
!7074 = !DILocalVariable(name: "info", scope: !7067, file: !3, line: 3363, type: !6652)
!7075 = !DILocation(line: 3363, column: 22, scope: !7067)
!7076 = !DILocalVariable(name: "subreg", scope: !7067, file: !3, line: 3364, type: !622)
!7077 = !DILocation(line: 3364, column: 7, scope: !7067)
!7078 = !DILocation(line: 3364, column: 16, scope: !7067)
!7079 = !DILocation(line: 3366, column: 20, scope: !7067)
!7080 = !DILocation(line: 3366, column: 27, scope: !7067)
!7081 = !DILocation(line: 3366, column: 46, scope: !7067)
!7082 = !DILocation(line: 3366, column: 63, scope: !7067)
!7083 = !DILocation(line: 3366, column: 3, scope: !7067)
!7084 = !DILocation(line: 3368, column: 15, scope: !7067)
!7085 = !DILocation(line: 3368, column: 3, scope: !7067)
!7086 = distinct !DISubprogram(name: "find_first_parameter_load", scope: !3, file: !3, line: 3397, type: !7087, scopeLine: 3398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{!622, !622, !622}
!7089 = !DILocalVariable(name: "call_insn", arg: 1, scope: !7086, file: !3, line: 3397, type: !622)
!7090 = !DILocation(line: 3397, column: 32, scope: !7086)
!7091 = !DILocalVariable(name: "boundary", arg: 2, scope: !7086, file: !3, line: 3397, type: !622)
!7092 = !DILocation(line: 3397, column: 47, scope: !7086)
!7093 = !DILocalVariable(name: "parm", scope: !7086, file: !3, line: 3399, type: !1716)
!7094 = !DILocation(line: 3399, column: 25, scope: !7086)
!7095 = !DILocalVariable(name: "p", scope: !7086, file: !3, line: 3400, type: !622)
!7096 = !DILocation(line: 3400, column: 7, scope: !7086)
!7097 = !DILocalVariable(name: "before", scope: !7086, file: !3, line: 3400, type: !622)
!7098 = !DILocation(line: 3400, column: 10, scope: !7086)
!7099 = !DILocalVariable(name: "first_set", scope: !7086, file: !3, line: 3400, type: !622)
!7100 = !DILocation(line: 3400, column: 18, scope: !7086)
!7101 = !DILocation(line: 3405, column: 3, scope: !7086)
!7102 = !DILocation(line: 3406, column: 8, scope: !7086)
!7103 = !DILocation(line: 3406, column: 14, scope: !7086)
!7104 = !DILocation(line: 3407, column: 12, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3407, column: 3)
!7106 = !DILocation(line: 3407, column: 10, scope: !7105)
!7107 = !DILocation(line: 3407, column: 8, scope: !7105)
!7108 = !DILocation(line: 3407, column: 50, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 3407, column: 3)
!7110 = !DILocation(line: 3407, column: 3, scope: !7105)
!7111 = !DILocation(line: 3408, column: 9, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 3408, column: 9)
!7113 = !DILocation(line: 3408, column: 32, scope: !7112)
!7114 = !DILocation(line: 3409, column: 2, scope: !7112)
!7115 = !DILocation(line: 3409, column: 5, scope: !7112)
!7116 = !DILocation(line: 3408, column: 9, scope: !7109)
!7117 = !DILocation(line: 3411, column: 2, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 3410, column: 7)
!7119 = !DILocation(line: 3415, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 3415, column: 6)
!7121 = !DILocation(line: 3415, column: 6, scope: !7118)
!7122 = !DILocation(line: 3416, column: 4, scope: !7120)
!7123 = !DILocation(line: 3418, column: 2, scope: !7118)
!7124 = !DILocation(line: 3419, column: 7, scope: !7118)
!7125 = !DILocation(line: 3419, column: 12, scope: !7118)
!7126 = !DILocation(line: 3420, column: 7, scope: !7118)
!7127 = !DILocation(line: 3407, column: 57, scope: !7109)
!7128 = !DILocation(line: 3407, column: 55, scope: !7109)
!7129 = !DILocation(line: 3407, column: 3, scope: !7109)
!7130 = distinct !{!7130, !7110, !7131}
!7131 = !DILocation(line: 3420, column: 7, scope: !7105)
!7132 = !DILocation(line: 3421, column: 12, scope: !7086)
!7133 = !DILocation(line: 3421, column: 10, scope: !7086)
!7134 = !DILocation(line: 3422, column: 15, scope: !7086)
!7135 = !DILocation(line: 3422, column: 13, scope: !7086)
!7136 = !DILocation(line: 3425, column: 3, scope: !7086)
!7137 = !DILocation(line: 3425, column: 15, scope: !7086)
!7138 = !DILocation(line: 3425, column: 10, scope: !7086)
!7139 = !DILocation(line: 3425, column: 21, scope: !7086)
!7140 = !DILocation(line: 3425, column: 24, scope: !7086)
!7141 = !DILocation(line: 3425, column: 34, scope: !7086)
!7142 = !DILocation(line: 3425, column: 31, scope: !7086)
!7143 = !DILocation(line: 0, scope: !7086)
!7144 = !DILocation(line: 3427, column: 16, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3426, column: 5)
!7146 = !DILocation(line: 3427, column: 14, scope: !7145)
!7147 = !DILocation(line: 3431, column: 11, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 3431, column: 11)
!7149 = !DILocation(line: 3431, column: 11, scope: !7145)
!7150 = !DILocation(line: 3432, column: 2, scope: !7148)
!7151 = !DILocation(line: 3438, column: 11, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 3438, column: 11)
!7153 = !DILocation(line: 3438, column: 11, scope: !7145)
!7154 = !DILocation(line: 3440, column: 4, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 3439, column: 2)
!7156 = !DILocation(line: 3441, column: 4, scope: !7155)
!7157 = !DILocation(line: 3444, column: 11, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 3444, column: 11)
!7159 = !DILocation(line: 3444, column: 11, scope: !7145)
!7160 = !DILocalVariable(name: "nregs_old", scope: !7161, file: !3, line: 3446, type: !619)
!7161 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3445, column: 2)
!7162 = !DILocation(line: 3446, column: 8, scope: !7161)
!7163 = !DILocation(line: 3446, column: 25, scope: !7161)
!7164 = !DILocation(line: 3447, column: 17, scope: !7161)
!7165 = !DILocation(line: 3447, column: 46, scope: !7161)
!7166 = !DILocation(line: 3447, column: 4, scope: !7161)
!7167 = !DILocation(line: 3452, column: 8, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 3452, column: 8)
!7169 = !DILocation(line: 3452, column: 26, scope: !7168)
!7170 = !DILocation(line: 3452, column: 18, scope: !7168)
!7171 = !DILocation(line: 3452, column: 8, scope: !7161)
!7172 = !DILocation(line: 3453, column: 18, scope: !7168)
!7173 = !DILocation(line: 3453, column: 16, scope: !7168)
!7174 = !DILocation(line: 3453, column: 6, scope: !7168)
!7175 = !DILocation(line: 3455, column: 6, scope: !7168)
!7176 = !DILocation(line: 3456, column: 2, scope: !7161)
!7177 = distinct !{!7177, !7136, !7178}
!7178 = !DILocation(line: 3457, column: 5, scope: !7086)
!7179 = !DILocation(line: 3458, column: 10, scope: !7086)
!7180 = !DILocation(line: 3458, column: 3, scope: !7086)
!7181 = distinct !DISubprogram(name: "parms_set", scope: !3, file: !3, line: 3380, type: !3528, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7182 = !DILocalVariable(name: "x", arg: 1, scope: !7181, file: !3, line: 3380, type: !622)
!7183 = !DILocation(line: 3380, column: 16, scope: !7181)
!7184 = !DILocalVariable(name: "pat", arg: 2, scope: !7181, file: !3, line: 3380, type: !1713)
!7185 = !DILocation(line: 3380, column: 29, scope: !7181)
!7186 = !DILocalVariable(name: "data", arg: 3, scope: !7181, file: !3, line: 3380, type: !732)
!7187 = !DILocation(line: 3380, column: 57, scope: !7181)
!7188 = !DILocalVariable(name: "d", scope: !7181, file: !3, line: 3382, type: !7189)
!7189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!7190 = !DILocation(line: 3382, column: 32, scope: !7181)
!7191 = !DILocation(line: 3382, column: 62, scope: !7181)
!7192 = !DILocation(line: 3382, column: 36, scope: !7181)
!7193 = !DILocation(line: 3383, column: 7, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3383, column: 7)
!7195 = !DILocation(line: 3383, column: 17, scope: !7194)
!7196 = !DILocation(line: 3383, column: 20, scope: !7194)
!7197 = !DILocation(line: 3383, column: 30, scope: !7194)
!7198 = !DILocation(line: 3384, column: 7, scope: !7194)
!7199 = !DILocation(line: 3384, column: 10, scope: !7194)
!7200 = !DILocation(line: 3383, column: 7, scope: !7181)
!7201 = !DILocation(line: 3386, column: 7, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 3385, column: 5)
!7203 = !DILocation(line: 3387, column: 7, scope: !7202)
!7204 = !DILocation(line: 3387, column: 10, scope: !7202)
!7205 = !DILocation(line: 3387, column: 15, scope: !7202)
!7206 = !DILocation(line: 3388, column: 5, scope: !7202)
!7207 = !DILocation(line: 3389, column: 1, scope: !7181)
!7208 = distinct !DISubprogram(name: "keep_with_call_p", scope: !3, file: !3, line: 3465, type: !2148, scopeLine: 3466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7209 = !DILocalVariable(name: "insn", arg: 1, scope: !7208, file: !3, line: 3465, type: !1713)
!7210 = !DILocation(line: 3465, column: 29, scope: !7208)
!7211 = !DILocalVariable(name: "set", scope: !7208, file: !3, line: 3467, type: !622)
!7212 = !DILocation(line: 3467, column: 7, scope: !7208)
!7213 = !DILocation(line: 3469, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 3469, column: 7)
!7215 = !DILocation(line: 3469, column: 21, scope: !7214)
!7216 = !DILocation(line: 3469, column: 31, scope: !7214)
!7217 = !DILocation(line: 3469, column: 29, scope: !7214)
!7218 = !DILocation(line: 3469, column: 50, scope: !7214)
!7219 = !DILocation(line: 3469, column: 7, scope: !7208)
!7220 = !DILocation(line: 3471, column: 11, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3471, column: 11)
!7222 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 3470, column: 5)
!7223 = !DILocation(line: 3472, column: 4, scope: !7221)
!7224 = !DILocation(line: 3472, column: 7, scope: !7221)
!7225 = !DILocation(line: 3472, column: 30, scope: !7221)
!7226 = !DILocation(line: 3473, column: 4, scope: !7221)
!7227 = !DILocation(line: 3473, column: 18, scope: !7221)
!7228 = !DILocation(line: 3473, column: 7, scope: !7221)
!7229 = !DILocation(line: 3474, column: 4, scope: !7221)
!7230 = !DILocation(line: 3474, column: 24, scope: !7221)
!7231 = !DILocation(line: 3474, column: 7, scope: !7221)
!7232 = !DILocation(line: 3471, column: 11, scope: !7222)
!7233 = !DILocation(line: 3475, column: 2, scope: !7221)
!7234 = !DILocation(line: 3476, column: 11, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3476, column: 11)
!7236 = !DILocation(line: 3477, column: 4, scope: !7235)
!7237 = !DILocation(line: 3477, column: 7, scope: !7235)
!7238 = !DILocation(line: 3478, column: 4, scope: !7235)
!7239 = !DILocation(line: 3478, column: 7, scope: !7235)
!7240 = !DILocation(line: 3479, column: 4, scope: !7235)
!7241 = !DILocation(line: 3479, column: 7, scope: !7235)
!7242 = !DILocation(line: 3479, column: 30, scope: !7235)
!7243 = !DILocation(line: 3476, column: 11, scope: !7222)
!7244 = !DILocation(line: 3480, column: 2, scope: !7235)
!7245 = !DILocation(line: 3484, column: 11, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3484, column: 11)
!7247 = !DILocation(line: 3484, column: 29, scope: !7246)
!7248 = !DILocation(line: 3484, column: 26, scope: !7246)
!7249 = !DILocation(line: 3484, column: 11, scope: !7222)
!7250 = !DILocalVariable(name: "i2", scope: !7251, file: !3, line: 3489, type: !1713)
!7251 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 3485, column: 2)
!7252 = !DILocation(line: 3489, column: 14, scope: !7251)
!7253 = !DILocation(line: 3489, column: 38, scope: !7251)
!7254 = !DILocation(line: 3489, column: 19, scope: !7251)
!7255 = !DILocation(line: 3490, column: 8, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 3490, column: 8)
!7257 = !DILocation(line: 3490, column: 11, scope: !7256)
!7258 = !DILocation(line: 3490, column: 32, scope: !7256)
!7259 = !DILocation(line: 3490, column: 14, scope: !7256)
!7260 = !DILocation(line: 3490, column: 8, scope: !7251)
!7261 = !DILocation(line: 3491, column: 6, scope: !7256)
!7262 = !DILocation(line: 3492, column: 2, scope: !7251)
!7263 = !DILocation(line: 3493, column: 5, scope: !7222)
!7264 = !DILocation(line: 3494, column: 3, scope: !7208)
!7265 = !DILocation(line: 3495, column: 1, scope: !7208)
!7266 = distinct !DISubprogram(name: "label_is_jump_target_p", scope: !3, file: !3, line: 3503, type: !7267, scopeLine: 3504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{!855, !1713, !1713}
!7269 = !DILocalVariable(name: "label", arg: 1, scope: !7266, file: !3, line: 3503, type: !1713)
!7270 = !DILocation(line: 3503, column: 35, scope: !7266)
!7271 = !DILocalVariable(name: "jump_insn", arg: 2, scope: !7266, file: !3, line: 3503, type: !1713)
!7272 = !DILocation(line: 3503, column: 52, scope: !7266)
!7273 = !DILocalVariable(name: "tmp", scope: !7266, file: !3, line: 3505, type: !622)
!7274 = !DILocation(line: 3505, column: 7, scope: !7266)
!7275 = !DILocation(line: 3505, column: 13, scope: !7266)
!7276 = !DILocation(line: 3507, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3507, column: 7)
!7278 = !DILocation(line: 3507, column: 16, scope: !7277)
!7279 = !DILocation(line: 3507, column: 13, scope: !7277)
!7280 = !DILocation(line: 3507, column: 7, scope: !7266)
!7281 = !DILocation(line: 3508, column: 5, scope: !7277)
!7282 = !DILocation(line: 3510, column: 20, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3510, column: 7)
!7284 = !DILocation(line: 3510, column: 7, scope: !7283)
!7285 = !DILocation(line: 3510, column: 7, scope: !7266)
!7286 = !DILocalVariable(name: "vec", scope: !7287, file: !3, line: 3512, type: !653)
!7287 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 3511, column: 5)
!7288 = !DILocation(line: 3512, column: 13, scope: !7287)
!7289 = !DILocation(line: 3512, column: 19, scope: !7287)
!7290 = !DILocalVariable(name: "i", scope: !7287, file: !3, line: 3514, type: !619)
!7291 = !DILocation(line: 3514, column: 11, scope: !7287)
!7292 = !DILocalVariable(name: "veclen", scope: !7287, file: !3, line: 3514, type: !619)
!7293 = !DILocation(line: 3514, column: 14, scope: !7287)
!7294 = !DILocation(line: 3514, column: 23, scope: !7287)
!7295 = !DILocation(line: 3516, column: 14, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 3516, column: 7)
!7297 = !DILocation(line: 3516, column: 12, scope: !7296)
!7298 = !DILocation(line: 3516, column: 19, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 3516, column: 7)
!7300 = !DILocation(line: 3516, column: 23, scope: !7299)
!7301 = !DILocation(line: 3516, column: 21, scope: !7299)
!7302 = !DILocation(line: 3516, column: 7, scope: !7296)
!7303 = !DILocation(line: 3517, column: 6, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3517, column: 6)
!7305 = !DILocation(line: 3517, column: 38, scope: !7304)
!7306 = !DILocation(line: 3517, column: 35, scope: !7304)
!7307 = !DILocation(line: 3517, column: 6, scope: !7299)
!7308 = !DILocation(line: 3518, column: 4, scope: !7304)
!7309 = !DILocation(line: 3516, column: 31, scope: !7299)
!7310 = !DILocation(line: 3516, column: 7, scope: !7299)
!7311 = distinct !{!7311, !7302, !7312}
!7312 = !DILocation(line: 3518, column: 11, scope: !7296)
!7313 = !DILocation(line: 3519, column: 5, scope: !7287)
!7314 = !DILocation(line: 3521, column: 22, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3521, column: 7)
!7316 = !DILocation(line: 3521, column: 51, scope: !7315)
!7317 = !DILocation(line: 3521, column: 7, scope: !7315)
!7318 = !DILocation(line: 3521, column: 7, scope: !7266)
!7319 = !DILocation(line: 3522, column: 5, scope: !7315)
!7320 = !DILocation(line: 3524, column: 3, scope: !7266)
!7321 = !DILocation(line: 3525, column: 1, scope: !7266)
!7322 = distinct !DISubprogram(name: "rtx_cost", scope: !3, file: !3, line: 3537, type: !7323, scopeLine: 3538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{!619, !622, !377, !855}
!7325 = !DILocalVariable(name: "x", arg: 1, scope: !7322, file: !3, line: 3537, type: !622)
!7326 = !DILocation(line: 3537, column: 15, scope: !7322)
!7327 = !DILocalVariable(name: "outer_code", arg: 2, scope: !7322, file: !3, line: 3537, type: !377)
!7328 = !DILocation(line: 3537, column: 32, scope: !7322)
!7329 = !DILocalVariable(name: "speed", arg: 3, scope: !7322, file: !3, line: 3537, type: !855)
!7330 = !DILocation(line: 3537, column: 66, scope: !7322)
!7331 = !DILocalVariable(name: "i", scope: !7322, file: !3, line: 3539, type: !619)
!7332 = !DILocation(line: 3539, column: 7, scope: !7322)
!7333 = !DILocalVariable(name: "j", scope: !7322, file: !3, line: 3539, type: !619)
!7334 = !DILocation(line: 3539, column: 10, scope: !7322)
!7335 = !DILocalVariable(name: "code", scope: !7322, file: !3, line: 3540, type: !377)
!7336 = !DILocation(line: 3540, column: 17, scope: !7322)
!7337 = !DILocalVariable(name: "fmt", scope: !7322, file: !3, line: 3541, type: !648)
!7338 = !DILocation(line: 3541, column: 15, scope: !7322)
!7339 = !DILocalVariable(name: "total", scope: !7322, file: !3, line: 3542, type: !619)
!7340 = !DILocation(line: 3542, column: 7, scope: !7322)
!7341 = !DILocation(line: 3544, column: 7, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3544, column: 7)
!7343 = !DILocation(line: 3544, column: 9, scope: !7342)
!7344 = !DILocation(line: 3544, column: 7, scope: !7322)
!7345 = !DILocation(line: 3545, column: 5, scope: !7342)
!7346 = !DILocation(line: 3550, column: 10, scope: !7322)
!7347 = !DILocation(line: 3550, column: 8, scope: !7322)
!7348 = !DILocation(line: 3551, column: 11, scope: !7322)
!7349 = !DILocation(line: 3551, column: 3, scope: !7322)
!7350 = !DILocation(line: 3554, column: 13, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3552, column: 5)
!7352 = !DILocation(line: 3555, column: 7, scope: !7351)
!7353 = !DILocation(line: 3560, column: 13, scope: !7351)
!7354 = !DILocation(line: 3561, column: 7, scope: !7351)
!7355 = !DILocation(line: 3564, column: 13, scope: !7351)
!7356 = !DILocation(line: 3565, column: 7, scope: !7351)
!7357 = !DILocation(line: 3567, column: 13, scope: !7351)
!7358 = !DILocation(line: 3568, column: 5, scope: !7351)
!7359 = !DILocation(line: 3570, column: 11, scope: !7322)
!7360 = !DILocation(line: 3570, column: 3, scope: !7322)
!7361 = !DILocation(line: 3573, column: 7, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3571, column: 5)
!7363 = !DILocation(line: 3576, column: 13, scope: !7362)
!7364 = !DILocation(line: 3579, column: 13, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 3579, column: 11)
!7366 = !DILocation(line: 3579, column: 11, scope: !7362)
!7367 = !DILocation(line: 3580, column: 9, scope: !7365)
!7368 = !DILocation(line: 3580, column: 2, scope: !7365)
!7369 = !DILocation(line: 3582, column: 7, scope: !7362)
!7370 = !DILocation(line: 3585, column: 19, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 3585, column: 11)
!7372 = !DILocation(line: 3585, column: 30, scope: !7371)
!7373 = !DILocation(line: 3585, column: 33, scope: !7371)
!7374 = !DILocation(line: 3585, column: 39, scope: !7371)
!7375 = !DILocation(line: 3585, column: 59, scope: !7371)
!7376 = !DILocation(line: 3585, column: 11, scope: !7371)
!7377 = !DILocation(line: 3585, column: 11, scope: !7362)
!7378 = !DILocation(line: 3586, column: 9, scope: !7371)
!7379 = !DILocation(line: 3586, column: 2, scope: !7371)
!7380 = !DILocation(line: 3587, column: 7, scope: !7362)
!7381 = !DILocation(line: 3593, column: 9, scope: !7322)
!7382 = !DILocation(line: 3593, column: 7, scope: !7322)
!7383 = !DILocation(line: 3594, column: 12, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3594, column: 3)
!7385 = !DILocation(line: 3594, column: 34, scope: !7384)
!7386 = !DILocation(line: 3594, column: 10, scope: !7384)
!7387 = !DILocation(line: 3594, column: 8, scope: !7384)
!7388 = !DILocation(line: 3594, column: 39, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 3594, column: 3)
!7390 = !DILocation(line: 3594, column: 41, scope: !7389)
!7391 = !DILocation(line: 3594, column: 3, scope: !7384)
!7392 = !DILocation(line: 3595, column: 9, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 3595, column: 9)
!7394 = !DILocation(line: 3595, column: 13, scope: !7393)
!7395 = !DILocation(line: 3595, column: 16, scope: !7393)
!7396 = !DILocation(line: 3595, column: 9, scope: !7389)
!7397 = !DILocation(line: 3596, column: 26, scope: !7393)
!7398 = !DILocation(line: 3596, column: 39, scope: !7393)
!7399 = !DILocation(line: 3596, column: 45, scope: !7393)
!7400 = !DILocation(line: 3596, column: 16, scope: !7393)
!7401 = !DILocation(line: 3596, column: 13, scope: !7393)
!7402 = !DILocation(line: 3596, column: 7, scope: !7393)
!7403 = !DILocation(line: 3597, column: 14, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 3597, column: 14)
!7405 = !DILocation(line: 3597, column: 18, scope: !7404)
!7406 = !DILocation(line: 3597, column: 21, scope: !7404)
!7407 = !DILocation(line: 3597, column: 14, scope: !7393)
!7408 = !DILocation(line: 3598, column: 14, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 3598, column: 7)
!7410 = !DILocation(line: 3598, column: 12, scope: !7409)
!7411 = !DILocation(line: 3598, column: 19, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 3598, column: 7)
!7413 = !DILocation(line: 3598, column: 23, scope: !7412)
!7414 = !DILocation(line: 3598, column: 21, scope: !7412)
!7415 = !DILocation(line: 3598, column: 7, scope: !7409)
!7416 = !DILocation(line: 3599, column: 21, scope: !7412)
!7417 = !DILocation(line: 3599, column: 40, scope: !7412)
!7418 = !DILocation(line: 3599, column: 46, scope: !7412)
!7419 = !DILocation(line: 3599, column: 11, scope: !7412)
!7420 = !DILocation(line: 3599, column: 8, scope: !7412)
!7421 = !DILocation(line: 3599, column: 2, scope: !7412)
!7422 = !DILocation(line: 3598, column: 40, scope: !7412)
!7423 = !DILocation(line: 3598, column: 7, scope: !7412)
!7424 = distinct !{!7424, !7415, !7425}
!7425 = !DILocation(line: 3599, column: 51, scope: !7409)
!7426 = !DILocation(line: 3595, column: 19, scope: !7393)
!7427 = !DILocation(line: 3594, column: 48, scope: !7389)
!7428 = !DILocation(line: 3594, column: 3, scope: !7389)
!7429 = distinct !{!7429, !7391, !7430}
!7430 = !DILocation(line: 3599, column: 51, scope: !7384)
!7431 = !DILocation(line: 3601, column: 10, scope: !7322)
!7432 = !DILocation(line: 3601, column: 3, scope: !7322)
!7433 = !DILocation(line: 3602, column: 1, scope: !7322)
!7434 = distinct !DISubprogram(name: "address_cost", scope: !3, file: !3, line: 3611, type: !7435, scopeLine: 3612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7435 = !DISubroutineType(types: !7436)
!7436 = !{!619, !622, !5, !7437, !855}
!7437 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !623, line: 73, baseType: !855)
!7438 = !DILocalVariable(name: "x", arg: 1, scope: !7434, file: !3, line: 3611, type: !622)
!7439 = !DILocation(line: 3611, column: 19, scope: !7434)
!7440 = !DILocalVariable(name: "mode", arg: 2, scope: !7434, file: !3, line: 3611, type: !5)
!7441 = !DILocation(line: 3611, column: 40, scope: !7434)
!7442 = !DILocalVariable(name: "as", arg: 3, scope: !7434, file: !3, line: 3611, type: !7437)
!7443 = !DILocation(line: 3611, column: 59, scope: !7434)
!7444 = !DILocalVariable(name: "speed", arg: 4, scope: !7434, file: !3, line: 3611, type: !855)
!7445 = !DILocation(line: 3611, column: 68, scope: !7434)
!7446 = !DILocation(line: 3617, column: 37, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 3617, column: 7)
!7448 = !DILocation(line: 3617, column: 43, scope: !7447)
!7449 = !DILocation(line: 3617, column: 46, scope: !7447)
!7450 = !DILocation(line: 3617, column: 8, scope: !7447)
!7451 = !DILocation(line: 3617, column: 7, scope: !7434)
!7452 = !DILocation(line: 3618, column: 5, scope: !7447)
!7453 = !DILocation(line: 3620, column: 18, scope: !7434)
!7454 = !DILocation(line: 3620, column: 32, scope: !7434)
!7455 = !DILocation(line: 3620, column: 35, scope: !7434)
!7456 = !DILocation(line: 3620, column: 10, scope: !7434)
!7457 = !DILocation(line: 3620, column: 3, scope: !7434)
!7458 = !DILocation(line: 3621, column: 1, scope: !7434)
!7459 = distinct !DISubprogram(name: "default_address_cost", scope: !3, file: !3, line: 3626, type: !7460, scopeLine: 3627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{!619, !622, !855}
!7462 = !DILocalVariable(name: "x", arg: 1, scope: !7459, file: !3, line: 3626, type: !622)
!7463 = !DILocation(line: 3626, column: 27, scope: !7459)
!7464 = !DILocalVariable(name: "speed", arg: 2, scope: !7459, file: !3, line: 3626, type: !855)
!7465 = !DILocation(line: 3626, column: 35, scope: !7459)
!7466 = !DILocation(line: 3628, column: 20, scope: !7459)
!7467 = !DILocation(line: 3628, column: 28, scope: !7459)
!7468 = !DILocation(line: 3628, column: 10, scope: !7459)
!7469 = !DILocation(line: 3628, column: 3, scope: !7459)
!7470 = distinct !DISubprogram(name: "nonzero_bits", scope: !3, file: !3, line: 3633, type: !7471, scopeLine: 3634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7471 = !DISubroutineType(types: !7472)
!7472 = !{!621, !1713, !5}
!7473 = !DILocalVariable(name: "x", arg: 1, scope: !7470, file: !3, line: 3633, type: !1713)
!7474 = !DILocation(line: 3633, column: 25, scope: !7470)
!7475 = !DILocalVariable(name: "mode", arg: 2, scope: !7470, file: !3, line: 3633, type: !5)
!7476 = !DILocation(line: 3633, column: 46, scope: !7470)
!7477 = !DILocation(line: 3635, column: 31, scope: !7470)
!7478 = !DILocation(line: 3635, column: 34, scope: !7470)
!7479 = !DILocation(line: 3635, column: 10, scope: !7470)
!7480 = !DILocation(line: 3635, column: 3, scope: !7470)
!7481 = distinct !DISubprogram(name: "cached_nonzero_bits", scope: !3, file: !3, line: 3649, type: !7482, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!621, !1713, !5, !1713, !5, !621}
!7484 = !DILocalVariable(name: "x", arg: 1, scope: !7481, file: !3, line: 3649, type: !1713)
!7485 = !DILocation(line: 3649, column: 32, scope: !7481)
!7486 = !DILocalVariable(name: "mode", arg: 2, scope: !7481, file: !3, line: 3649, type: !5)
!7487 = !DILocation(line: 3649, column: 53, scope: !7481)
!7488 = !DILocalVariable(name: "known_x", arg: 3, scope: !7481, file: !3, line: 3649, type: !1713)
!7489 = !DILocation(line: 3649, column: 69, scope: !7481)
!7490 = !DILocalVariable(name: "known_mode", arg: 4, scope: !7481, file: !3, line: 3650, type: !5)
!7491 = !DILocation(line: 3650, column: 26, scope: !7481)
!7492 = !DILocalVariable(name: "known_ret", arg: 5, scope: !7481, file: !3, line: 3651, type: !621)
!7493 = !DILocation(line: 3651, column: 31, scope: !7481)
!7494 = !DILocation(line: 3653, column: 7, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 3653, column: 7)
!7496 = !DILocation(line: 3653, column: 12, scope: !7495)
!7497 = !DILocation(line: 3653, column: 9, scope: !7495)
!7498 = !DILocation(line: 3653, column: 20, scope: !7495)
!7499 = !DILocation(line: 3653, column: 23, scope: !7495)
!7500 = !DILocation(line: 3653, column: 31, scope: !7495)
!7501 = !DILocation(line: 3653, column: 28, scope: !7495)
!7502 = !DILocation(line: 3653, column: 7, scope: !7481)
!7503 = !DILocation(line: 3654, column: 12, scope: !7495)
!7504 = !DILocation(line: 3654, column: 5, scope: !7495)
!7505 = !DILocation(line: 3660, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 3660, column: 7)
!7507 = !DILocation(line: 3660, column: 7, scope: !7481)
!7508 = !DILocalVariable(name: "x0", scope: !7509, file: !3, line: 3662, type: !622)
!7509 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 3661, column: 5)
!7510 = !DILocation(line: 3662, column: 11, scope: !7509)
!7511 = !DILocation(line: 3662, column: 16, scope: !7509)
!7512 = !DILocalVariable(name: "x1", scope: !7509, file: !3, line: 3663, type: !622)
!7513 = !DILocation(line: 3663, column: 11, scope: !7509)
!7514 = !DILocation(line: 3663, column: 16, scope: !7509)
!7515 = !DILocation(line: 3666, column: 11, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 3666, column: 11)
!7517 = !DILocation(line: 3666, column: 17, scope: !7516)
!7518 = !DILocation(line: 3666, column: 14, scope: !7516)
!7519 = !DILocation(line: 3666, column: 11, scope: !7509)
!7520 = !DILocation(line: 3667, column: 24, scope: !7516)
!7521 = !DILocation(line: 3667, column: 27, scope: !7516)
!7522 = !DILocation(line: 3667, column: 33, scope: !7516)
!7523 = !DILocation(line: 3667, column: 37, scope: !7516)
!7524 = !DILocation(line: 3668, column: 31, scope: !7516)
!7525 = !DILocation(line: 3668, column: 35, scope: !7516)
!7526 = !DILocation(line: 3668, column: 41, scope: !7516)
!7527 = !DILocation(line: 3669, column: 10, scope: !7516)
!7528 = !DILocation(line: 3669, column: 22, scope: !7516)
!7529 = !DILocation(line: 3668, column: 10, scope: !7516)
!7530 = !DILocation(line: 3667, column: 9, scope: !7516)
!7531 = !DILocation(line: 3667, column: 2, scope: !7516)
!7532 = !DILocation(line: 3672, column: 11, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 3672, column: 11)
!7534 = !DILocation(line: 3673, column: 4, scope: !7533)
!7535 = !DILocation(line: 3673, column: 8, scope: !7533)
!7536 = !DILocation(line: 3673, column: 14, scope: !7533)
!7537 = !DILocation(line: 3673, column: 11, scope: !7533)
!7538 = !DILocation(line: 3673, column: 27, scope: !7533)
!7539 = !DILocation(line: 3673, column: 30, scope: !7533)
!7540 = !DILocation(line: 3673, column: 36, scope: !7533)
!7541 = !DILocation(line: 3673, column: 33, scope: !7533)
!7542 = !DILocation(line: 3672, column: 11, scope: !7509)
!7543 = !DILocation(line: 3674, column: 24, scope: !7533)
!7544 = !DILocation(line: 3674, column: 27, scope: !7533)
!7545 = !DILocation(line: 3674, column: 33, scope: !7533)
!7546 = !DILocation(line: 3674, column: 37, scope: !7533)
!7547 = !DILocation(line: 3675, column: 31, scope: !7533)
!7548 = !DILocation(line: 3675, column: 35, scope: !7533)
!7549 = !DILocation(line: 3675, column: 41, scope: !7533)
!7550 = !DILocation(line: 3676, column: 10, scope: !7533)
!7551 = !DILocation(line: 3676, column: 22, scope: !7533)
!7552 = !DILocation(line: 3675, column: 10, scope: !7533)
!7553 = !DILocation(line: 3674, column: 9, scope: !7533)
!7554 = !DILocation(line: 3674, column: 2, scope: !7533)
!7555 = !DILocation(line: 3678, column: 11, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 3678, column: 11)
!7557 = !DILocation(line: 3679, column: 4, scope: !7556)
!7558 = !DILocation(line: 3679, column: 8, scope: !7556)
!7559 = !DILocation(line: 3679, column: 14, scope: !7556)
!7560 = !DILocation(line: 3679, column: 11, scope: !7556)
!7561 = !DILocation(line: 3679, column: 27, scope: !7556)
!7562 = !DILocation(line: 3679, column: 30, scope: !7556)
!7563 = !DILocation(line: 3679, column: 36, scope: !7556)
!7564 = !DILocation(line: 3679, column: 33, scope: !7556)
!7565 = !DILocation(line: 3678, column: 11, scope: !7509)
!7566 = !DILocation(line: 3680, column: 24, scope: !7556)
!7567 = !DILocation(line: 3680, column: 27, scope: !7556)
!7568 = !DILocation(line: 3680, column: 33, scope: !7556)
!7569 = !DILocation(line: 3680, column: 37, scope: !7556)
!7570 = !DILocation(line: 3681, column: 31, scope: !7556)
!7571 = !DILocation(line: 3681, column: 35, scope: !7556)
!7572 = !DILocation(line: 3681, column: 41, scope: !7556)
!7573 = !DILocation(line: 3682, column: 10, scope: !7556)
!7574 = !DILocation(line: 3682, column: 22, scope: !7556)
!7575 = !DILocation(line: 3681, column: 10, scope: !7556)
!7576 = !DILocation(line: 3680, column: 9, scope: !7556)
!7577 = !DILocation(line: 3680, column: 2, scope: !7556)
!7578 = !DILocation(line: 3683, column: 5, scope: !7509)
!7579 = !DILocation(line: 3685, column: 25, scope: !7481)
!7580 = !DILocation(line: 3685, column: 28, scope: !7481)
!7581 = !DILocation(line: 3685, column: 34, scope: !7481)
!7582 = !DILocation(line: 3685, column: 43, scope: !7481)
!7583 = !DILocation(line: 3685, column: 55, scope: !7481)
!7584 = !DILocation(line: 3685, column: 10, scope: !7481)
!7585 = !DILocation(line: 3685, column: 3, scope: !7481)
!7586 = !DILocation(line: 3686, column: 1, scope: !7481)
!7587 = distinct !DISubprogram(name: "num_sign_bit_copies", scope: !3, file: !3, line: 3639, type: !7588, scopeLine: 3640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!7, !1713, !5}
!7590 = !DILocalVariable(name: "x", arg: 1, scope: !7587, file: !3, line: 3639, type: !1713)
!7591 = !DILocation(line: 3639, column: 32, scope: !7587)
!7592 = !DILocalVariable(name: "mode", arg: 2, scope: !7587, file: !3, line: 3639, type: !5)
!7593 = !DILocation(line: 3639, column: 53, scope: !7587)
!7594 = !DILocation(line: 3641, column: 38, scope: !7587)
!7595 = !DILocation(line: 3641, column: 41, scope: !7587)
!7596 = !DILocation(line: 3641, column: 10, scope: !7587)
!7597 = !DILocation(line: 3641, column: 3, scope: !7587)
!7598 = distinct !DISubprogram(name: "cached_num_sign_bit_copies", scope: !3, file: !3, line: 4168, type: !7599, scopeLine: 4171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!7, !1713, !5, !1713, !5, !7}
!7601 = !DILocalVariable(name: "x", arg: 1, scope: !7598, file: !3, line: 4168, type: !1713)
!7602 = !DILocation(line: 4168, column: 39, scope: !7598)
!7603 = !DILocalVariable(name: "mode", arg: 2, scope: !7598, file: !3, line: 4168, type: !5)
!7604 = !DILocation(line: 4168, column: 60, scope: !7598)
!7605 = !DILocalVariable(name: "known_x", arg: 3, scope: !7598, file: !3, line: 4168, type: !1713)
!7606 = !DILocation(line: 4168, column: 76, scope: !7598)
!7607 = !DILocalVariable(name: "known_mode", arg: 4, scope: !7598, file: !3, line: 4169, type: !5)
!7608 = !DILocation(line: 4169, column: 26, scope: !7598)
!7609 = !DILocalVariable(name: "known_ret", arg: 5, scope: !7598, file: !3, line: 4170, type: !7)
!7610 = !DILocation(line: 4170, column: 21, scope: !7598)
!7611 = !DILocation(line: 4172, column: 7, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 4172, column: 7)
!7613 = !DILocation(line: 4172, column: 12, scope: !7612)
!7614 = !DILocation(line: 4172, column: 9, scope: !7612)
!7615 = !DILocation(line: 4172, column: 20, scope: !7612)
!7616 = !DILocation(line: 4172, column: 23, scope: !7612)
!7617 = !DILocation(line: 4172, column: 31, scope: !7612)
!7618 = !DILocation(line: 4172, column: 28, scope: !7612)
!7619 = !DILocation(line: 4172, column: 7, scope: !7598)
!7620 = !DILocation(line: 4173, column: 12, scope: !7612)
!7621 = !DILocation(line: 4173, column: 5, scope: !7612)
!7622 = !DILocation(line: 4179, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 4179, column: 7)
!7624 = !DILocation(line: 4179, column: 7, scope: !7598)
!7625 = !DILocalVariable(name: "x0", scope: !7626, file: !3, line: 4181, type: !622)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 4180, column: 5)
!7627 = !DILocation(line: 4181, column: 11, scope: !7626)
!7628 = !DILocation(line: 4181, column: 16, scope: !7626)
!7629 = !DILocalVariable(name: "x1", scope: !7626, file: !3, line: 4182, type: !622)
!7630 = !DILocation(line: 4182, column: 11, scope: !7626)
!7631 = !DILocation(line: 4182, column: 16, scope: !7626)
!7632 = !DILocation(line: 4185, column: 11, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 4185, column: 11)
!7634 = !DILocation(line: 4185, column: 17, scope: !7633)
!7635 = !DILocation(line: 4185, column: 14, scope: !7633)
!7636 = !DILocation(line: 4185, column: 11, scope: !7626)
!7637 = !DILocation(line: 4187, column: 26, scope: !7633)
!7638 = !DILocation(line: 4187, column: 29, scope: !7633)
!7639 = !DILocation(line: 4187, column: 35, scope: !7633)
!7640 = !DILocation(line: 4187, column: 39, scope: !7633)
!7641 = !DILocation(line: 4188, column: 33, scope: !7633)
!7642 = !DILocation(line: 4188, column: 37, scope: !7633)
!7643 = !DILocation(line: 4188, column: 43, scope: !7633)
!7644 = !DILocation(line: 4189, column: 12, scope: !7633)
!7645 = !DILocation(line: 4190, column: 12, scope: !7633)
!7646 = !DILocation(line: 4188, column: 5, scope: !7633)
!7647 = !DILocation(line: 4187, column: 4, scope: !7633)
!7648 = !DILocation(line: 4186, column: 2, scope: !7633)
!7649 = !DILocation(line: 4193, column: 11, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 4193, column: 11)
!7651 = !DILocation(line: 4194, column: 4, scope: !7650)
!7652 = !DILocation(line: 4194, column: 8, scope: !7650)
!7653 = !DILocation(line: 4194, column: 14, scope: !7650)
!7654 = !DILocation(line: 4194, column: 11, scope: !7650)
!7655 = !DILocation(line: 4194, column: 27, scope: !7650)
!7656 = !DILocation(line: 4194, column: 30, scope: !7650)
!7657 = !DILocation(line: 4194, column: 36, scope: !7650)
!7658 = !DILocation(line: 4194, column: 33, scope: !7650)
!7659 = !DILocation(line: 4193, column: 11, scope: !7626)
!7660 = !DILocation(line: 4196, column: 26, scope: !7650)
!7661 = !DILocation(line: 4196, column: 29, scope: !7650)
!7662 = !DILocation(line: 4196, column: 35, scope: !7650)
!7663 = !DILocation(line: 4196, column: 39, scope: !7650)
!7664 = !DILocation(line: 4197, column: 33, scope: !7650)
!7665 = !DILocation(line: 4197, column: 37, scope: !7650)
!7666 = !DILocation(line: 4197, column: 43, scope: !7650)
!7667 = !DILocation(line: 4198, column: 12, scope: !7650)
!7668 = !DILocation(line: 4199, column: 12, scope: !7650)
!7669 = !DILocation(line: 4197, column: 5, scope: !7650)
!7670 = !DILocation(line: 4196, column: 4, scope: !7650)
!7671 = !DILocation(line: 4195, column: 2, scope: !7650)
!7672 = !DILocation(line: 4201, column: 11, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 4201, column: 11)
!7674 = !DILocation(line: 4202, column: 4, scope: !7673)
!7675 = !DILocation(line: 4202, column: 8, scope: !7673)
!7676 = !DILocation(line: 4202, column: 14, scope: !7673)
!7677 = !DILocation(line: 4202, column: 11, scope: !7673)
!7678 = !DILocation(line: 4202, column: 27, scope: !7673)
!7679 = !DILocation(line: 4202, column: 30, scope: !7673)
!7680 = !DILocation(line: 4202, column: 36, scope: !7673)
!7681 = !DILocation(line: 4202, column: 33, scope: !7673)
!7682 = !DILocation(line: 4201, column: 11, scope: !7626)
!7683 = !DILocation(line: 4204, column: 26, scope: !7673)
!7684 = !DILocation(line: 4204, column: 29, scope: !7673)
!7685 = !DILocation(line: 4204, column: 35, scope: !7673)
!7686 = !DILocation(line: 4204, column: 39, scope: !7673)
!7687 = !DILocation(line: 4205, column: 33, scope: !7673)
!7688 = !DILocation(line: 4205, column: 37, scope: !7673)
!7689 = !DILocation(line: 4205, column: 43, scope: !7673)
!7690 = !DILocation(line: 4206, column: 12, scope: !7673)
!7691 = !DILocation(line: 4207, column: 12, scope: !7673)
!7692 = !DILocation(line: 4205, column: 5, scope: !7673)
!7693 = !DILocation(line: 4204, column: 4, scope: !7673)
!7694 = !DILocation(line: 4203, column: 2, scope: !7673)
!7695 = !DILocation(line: 4208, column: 5, scope: !7626)
!7696 = !DILocation(line: 4210, column: 32, scope: !7598)
!7697 = !DILocation(line: 4210, column: 35, scope: !7598)
!7698 = !DILocation(line: 4210, column: 41, scope: !7598)
!7699 = !DILocation(line: 4210, column: 50, scope: !7598)
!7700 = !DILocation(line: 4210, column: 62, scope: !7598)
!7701 = !DILocation(line: 4210, column: 10, scope: !7598)
!7702 = !DILocation(line: 4210, column: 3, scope: !7598)
!7703 = !DILocation(line: 4211, column: 1, scope: !7598)
!7704 = distinct !DISubprogram(name: "insn_rtx_cost", scope: !3, file: !3, line: 4628, type: !7460, scopeLine: 4629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7705 = !DILocalVariable(name: "pat", arg: 1, scope: !7704, file: !3, line: 4628, type: !622)
!7706 = !DILocation(line: 4628, column: 20, scope: !7704)
!7707 = !DILocalVariable(name: "speed", arg: 2, scope: !7704, file: !3, line: 4628, type: !855)
!7708 = !DILocation(line: 4628, column: 30, scope: !7704)
!7709 = !DILocalVariable(name: "i", scope: !7704, file: !3, line: 4630, type: !619)
!7710 = !DILocation(line: 4630, column: 7, scope: !7704)
!7711 = !DILocalVariable(name: "cost", scope: !7704, file: !3, line: 4630, type: !619)
!7712 = !DILocation(line: 4630, column: 10, scope: !7704)
!7713 = !DILocalVariable(name: "set", scope: !7704, file: !3, line: 4631, type: !622)
!7714 = !DILocation(line: 4631, column: 7, scope: !7704)
!7715 = !DILocation(line: 4635, column: 7, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 4635, column: 7)
!7717 = !DILocation(line: 4635, column: 22, scope: !7716)
!7718 = !DILocation(line: 4635, column: 7, scope: !7704)
!7719 = !DILocation(line: 4636, column: 11, scope: !7716)
!7720 = !DILocation(line: 4636, column: 9, scope: !7716)
!7721 = !DILocation(line: 4636, column: 5, scope: !7716)
!7722 = !DILocation(line: 4637, column: 12, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 4637, column: 12)
!7724 = !DILocation(line: 4637, column: 27, scope: !7723)
!7725 = !DILocation(line: 4637, column: 12, scope: !7716)
!7726 = !DILocation(line: 4639, column: 11, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 4638, column: 5)
!7728 = !DILocation(line: 4640, column: 14, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 4640, column: 7)
!7730 = !DILocation(line: 4640, column: 12, scope: !7729)
!7731 = !DILocation(line: 4640, column: 19, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 4640, column: 7)
!7733 = !DILocation(line: 4640, column: 23, scope: !7732)
!7734 = !DILocation(line: 4640, column: 21, scope: !7732)
!7735 = !DILocation(line: 4640, column: 7, scope: !7729)
!7736 = !DILocalVariable(name: "x", scope: !7737, file: !3, line: 4642, type: !622)
!7737 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 4641, column: 2)
!7738 = !DILocation(line: 4642, column: 8, scope: !7737)
!7739 = !DILocation(line: 4642, column: 12, scope: !7737)
!7740 = !DILocation(line: 4643, column: 8, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 4643, column: 8)
!7742 = !DILocation(line: 4643, column: 21, scope: !7741)
!7743 = !DILocation(line: 4643, column: 8, scope: !7737)
!7744 = !DILocation(line: 4645, column: 12, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 4645, column: 12)
!7746 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 4644, column: 6)
!7747 = !DILocation(line: 4645, column: 12, scope: !7746)
!7748 = !DILocation(line: 4646, column: 3, scope: !7745)
!7749 = !DILocation(line: 4647, column: 14, scope: !7746)
!7750 = !DILocation(line: 4647, column: 12, scope: !7746)
!7751 = !DILocation(line: 4648, column: 6, scope: !7746)
!7752 = !DILocation(line: 4649, column: 2, scope: !7737)
!7753 = !DILocation(line: 4640, column: 42, scope: !7732)
!7754 = !DILocation(line: 4640, column: 7, scope: !7732)
!7755 = distinct !{!7755, !7735, !7756}
!7756 = !DILocation(line: 4649, column: 2, scope: !7729)
!7757 = !DILocation(line: 4650, column: 12, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 4650, column: 11)
!7759 = !DILocation(line: 4650, column: 11, scope: !7727)
!7760 = !DILocation(line: 4651, column: 2, scope: !7758)
!7761 = !DILocation(line: 4652, column: 5, scope: !7727)
!7762 = !DILocation(line: 4654, column: 5, scope: !7723)
!7763 = !DILocation(line: 4656, column: 20, scope: !7704)
!7764 = !DILocation(line: 4656, column: 40, scope: !7704)
!7765 = !DILocation(line: 4656, column: 10, scope: !7704)
!7766 = !DILocation(line: 4656, column: 8, scope: !7704)
!7767 = !DILocation(line: 4657, column: 10, scope: !7704)
!7768 = !DILocation(line: 4657, column: 15, scope: !7704)
!7769 = !DILocation(line: 4657, column: 21, scope: !7704)
!7770 = !DILocation(line: 4657, column: 3, scope: !7704)
!7771 = !DILocation(line: 4658, column: 1, scope: !7704)
!7772 = distinct !DISubprogram(name: "canonicalize_condition", scope: !3, file: !3, line: 4688, type: !7773, scopeLine: 4690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!622, !622, !622, !619, !1697, !622, !619, !619}
!7775 = !DILocalVariable(name: "insn", arg: 1, scope: !7772, file: !3, line: 4688, type: !622)
!7776 = !DILocation(line: 4688, column: 29, scope: !7772)
!7777 = !DILocalVariable(name: "cond", arg: 2, scope: !7772, file: !3, line: 4688, type: !622)
!7778 = !DILocation(line: 4688, column: 39, scope: !7772)
!7779 = !DILocalVariable(name: "reverse", arg: 3, scope: !7772, file: !3, line: 4688, type: !619)
!7780 = !DILocation(line: 4688, column: 49, scope: !7772)
!7781 = !DILocalVariable(name: "earliest", arg: 4, scope: !7772, file: !3, line: 4688, type: !1697)
!7782 = !DILocation(line: 4688, column: 63, scope: !7772)
!7783 = !DILocalVariable(name: "want_reg", arg: 5, scope: !7772, file: !3, line: 4689, type: !622)
!7784 = !DILocation(line: 4689, column: 8, scope: !7772)
!7785 = !DILocalVariable(name: "allow_cc_mode", arg: 6, scope: !7772, file: !3, line: 4689, type: !619)
!7786 = !DILocation(line: 4689, column: 22, scope: !7772)
!7787 = !DILocalVariable(name: "valid_at_insn_p", arg: 7, scope: !7772, file: !3, line: 4689, type: !619)
!7788 = !DILocation(line: 4689, column: 41, scope: !7772)
!7789 = !DILocalVariable(name: "code", scope: !7772, file: !3, line: 4691, type: !377)
!7790 = !DILocation(line: 4691, column: 17, scope: !7772)
!7791 = !DILocalVariable(name: "prev", scope: !7772, file: !3, line: 4692, type: !622)
!7792 = !DILocation(line: 4692, column: 7, scope: !7772)
!7793 = !DILocation(line: 4692, column: 14, scope: !7772)
!7794 = !DILocalVariable(name: "set", scope: !7772, file: !3, line: 4693, type: !1713)
!7795 = !DILocation(line: 4693, column: 13, scope: !7772)
!7796 = !DILocalVariable(name: "tem", scope: !7772, file: !3, line: 4694, type: !622)
!7797 = !DILocation(line: 4694, column: 7, scope: !7772)
!7798 = !DILocalVariable(name: "op0", scope: !7772, file: !3, line: 4695, type: !622)
!7799 = !DILocation(line: 4695, column: 7, scope: !7772)
!7800 = !DILocalVariable(name: "op1", scope: !7772, file: !3, line: 4695, type: !622)
!7801 = !DILocation(line: 4695, column: 12, scope: !7772)
!7802 = !DILocalVariable(name: "reverse_code", scope: !7772, file: !3, line: 4696, type: !619)
!7803 = !DILocation(line: 4696, column: 7, scope: !7772)
!7804 = !DILocalVariable(name: "mode", scope: !7772, file: !3, line: 4697, type: !5)
!7805 = !DILocation(line: 4697, column: 21, scope: !7772)
!7806 = !DILocalVariable(name: "bb", scope: !7772, file: !3, line: 4698, type: !1000)
!7807 = !DILocation(line: 4698, column: 15, scope: !7772)
!7808 = !DILocation(line: 4698, column: 20, scope: !7772)
!7809 = !DILocation(line: 4700, column: 10, scope: !7772)
!7810 = !DILocation(line: 4700, column: 8, scope: !7772)
!7811 = !DILocation(line: 4701, column: 10, scope: !7772)
!7812 = !DILocation(line: 4701, column: 8, scope: !7772)
!7813 = !DILocation(line: 4702, column: 9, scope: !7772)
!7814 = !DILocation(line: 4702, column: 7, scope: !7772)
!7815 = !DILocation(line: 4703, column: 9, scope: !7772)
!7816 = !DILocation(line: 4703, column: 7, scope: !7772)
!7817 = !DILocation(line: 4705, column: 7, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4705, column: 7)
!7819 = !DILocation(line: 4705, column: 7, scope: !7772)
!7820 = !DILocation(line: 4706, column: 38, scope: !7818)
!7821 = !DILocation(line: 4706, column: 44, scope: !7818)
!7822 = !DILocation(line: 4706, column: 12, scope: !7818)
!7823 = !DILocation(line: 4706, column: 10, scope: !7818)
!7824 = !DILocation(line: 4706, column: 5, scope: !7818)
!7825 = !DILocation(line: 4707, column: 7, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4707, column: 7)
!7827 = !DILocation(line: 4707, column: 12, scope: !7826)
!7828 = !DILocation(line: 4707, column: 7, scope: !7772)
!7829 = !DILocation(line: 4708, column: 5, scope: !7826)
!7830 = !DILocation(line: 4710, column: 7, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4710, column: 7)
!7832 = !DILocation(line: 4710, column: 7, scope: !7772)
!7833 = !DILocation(line: 4711, column: 17, scope: !7831)
!7834 = !DILocation(line: 4711, column: 6, scope: !7831)
!7835 = !DILocation(line: 4711, column: 15, scope: !7831)
!7836 = !DILocation(line: 4711, column: 5, scope: !7831)
!7837 = !DILocation(line: 4718, column: 3, scope: !7772)
!7838 = !DILocation(line: 4718, column: 11, scope: !7772)
!7839 = !DILocation(line: 4718, column: 32, scope: !7772)
!7840 = !DILocation(line: 4719, column: 4, scope: !7772)
!7841 = !DILocation(line: 4719, column: 7, scope: !7772)
!7842 = !DILocation(line: 4719, column: 28, scope: !7772)
!7843 = !DILocation(line: 4720, column: 3, scope: !7772)
!7844 = !DILocation(line: 4720, column: 6, scope: !7772)
!7845 = !DILocation(line: 4720, column: 13, scope: !7772)
!7846 = !DILocation(line: 4720, column: 10, scope: !7772)
!7847 = !DILocation(line: 4721, column: 3, scope: !7772)
!7848 = !DILocation(line: 4721, column: 6, scope: !7772)
!7849 = !DILocation(line: 4721, column: 13, scope: !7772)
!7850 = !DILocation(line: 4721, column: 10, scope: !7772)
!7851 = !DILocation(line: 0, scope: !7772)
!7852 = !DILocalVariable(name: "x", scope: !7853, file: !3, line: 4724, type: !622)
!7853 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4722, column: 5)
!7854 = !DILocation(line: 4724, column: 11, scope: !7853)
!7855 = !DILocation(line: 4745, column: 11, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4745, column: 11)
!7857 = !DILocation(line: 4745, column: 26, scope: !7856)
!7858 = !DILocation(line: 4745, column: 11, scope: !7853)
!7859 = !DILocation(line: 4747, column: 10, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 4746, column: 2)
!7861 = !DILocation(line: 4747, column: 8, scope: !7860)
!7862 = !DILocation(line: 4748, column: 10, scope: !7860)
!7863 = !DILocation(line: 4748, column: 8, scope: !7860)
!7864 = !DILocation(line: 4749, column: 4, scope: !7860)
!7865 = distinct !{!7865, !7837, !7866}
!7866 = !DILocation(line: 4875, column: 5, scope: !7772)
!7867 = !DILocation(line: 4751, column: 17, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 4751, column: 16)
!7869 = !DILocation(line: 4751, column: 16, scope: !7856)
!7870 = !DILocation(line: 4752, column: 2, scope: !7868)
!7871 = !DILocation(line: 4758, column: 7, scope: !7853)
!7872 = !DILocation(line: 4759, column: 28, scope: !7853)
!7873 = !DILocation(line: 4759, column: 9, scope: !7853)
!7874 = !DILocation(line: 4759, column: 7, scope: !7853)
!7875 = !DILocation(line: 4759, column: 2, scope: !7853)
!7876 = !DILocation(line: 4760, column: 14, scope: !7853)
!7877 = !DILocation(line: 4760, column: 19, scope: !7853)
!7878 = !DILocation(line: 4760, column: 22, scope: !7853)
!7879 = !DILocation(line: 0, scope: !7853)
!7880 = distinct !{!7880, !7871, !7881}
!7881 = !DILocation(line: 4760, column: 41, scope: !7853)
!7882 = !DILocation(line: 4762, column: 11, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4762, column: 11)
!7884 = !DILocation(line: 4762, column: 16, scope: !7883)
!7885 = !DILocation(line: 4763, column: 4, scope: !7883)
!7886 = !DILocation(line: 4763, column: 8, scope: !7883)
!7887 = !DILocation(line: 4768, column: 4, scope: !7883)
!7888 = !DILocation(line: 4768, column: 7, scope: !7883)
!7889 = !DILocation(line: 4768, column: 32, scope: !7883)
!7890 = !DILocation(line: 4768, column: 29, scope: !7883)
!7891 = !DILocation(line: 4762, column: 11, scope: !7853)
!7892 = !DILocation(line: 4769, column: 2, scope: !7883)
!7893 = !DILocation(line: 4771, column: 21, scope: !7853)
!7894 = !DILocation(line: 4771, column: 26, scope: !7853)
!7895 = !DILocation(line: 4771, column: 13, scope: !7853)
!7896 = !DILocation(line: 4771, column: 11, scope: !7853)
!7897 = !DILocation(line: 4773, column: 11, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4773, column: 11)
!7899 = !DILocation(line: 4774, column: 4, scope: !7898)
!7900 = !DILocation(line: 4774, column: 8, scope: !7898)
!7901 = !DILocation(line: 4774, column: 23, scope: !7898)
!7902 = !DILocation(line: 4775, column: 8, scope: !7898)
!7903 = !DILocation(line: 4775, column: 25, scope: !7898)
!7904 = !DILocation(line: 4775, column: 41, scope: !7898)
!7905 = !DILocation(line: 4775, column: 12, scope: !7898)
!7906 = !DILocation(line: 4773, column: 11, scope: !7853)
!7907 = !DILocation(line: 4776, column: 2, scope: !7898)
!7908 = !DILocation(line: 4780, column: 11, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4780, column: 11)
!7910 = !DILocation(line: 4780, column: 11, scope: !7853)
!7911 = !DILocalVariable(name: "inner_mode", scope: !7912, file: !3, line: 4782, type: !5)
!7912 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 4781, column: 2)
!7913 = !DILocation(line: 4782, column: 22, scope: !7912)
!7914 = !DILocation(line: 4782, column: 35, scope: !7912)
!7915 = !DILocation(line: 4801, column: 9, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 4801, column: 8)
!7917 = !DILocation(line: 4801, column: 34, scope: !7916)
!7918 = !DILocation(line: 4802, column: 9, scope: !7916)
!7919 = !DILocation(line: 4802, column: 15, scope: !7916)
!7920 = !DILocation(line: 4802, column: 20, scope: !7916)
!7921 = !DILocation(line: 4803, column: 8, scope: !7916)
!7922 = !DILocation(line: 4803, column: 12, scope: !7916)
!7923 = !DILocation(line: 4803, column: 17, scope: !7916)
!7924 = !DILocation(line: 4804, column: 5, scope: !7916)
!7925 = !DILocation(line: 4804, column: 8, scope: !7916)
!7926 = !DILocation(line: 4804, column: 36, scope: !7916)
!7927 = !DILocation(line: 4805, column: 5, scope: !7916)
!7928 = !DILocation(line: 4805, column: 9, scope: !7916)
!7929 = !DILocation(line: 4806, column: 9, scope: !7916)
!7930 = !DILocation(line: 4807, column: 5, scope: !7916)
!7931 = !DILocation(line: 4809, column: 9, scope: !7916)
!7932 = !DILocation(line: 4809, column: 39, scope: !7916)
!7933 = !DILocation(line: 4809, column: 5, scope: !7916)
!7934 = !DILocation(line: 4808, column: 9, scope: !7916)
!7935 = !DILocation(line: 4817, column: 6, scope: !7916)
!7936 = !DILocation(line: 4817, column: 9, scope: !7916)
!7937 = !DILocation(line: 4818, column: 8, scope: !7916)
!7938 = !DILocation(line: 4818, column: 14, scope: !7916)
!7939 = !DILocation(line: 4818, column: 36, scope: !7916)
!7940 = !DILocation(line: 4819, column: 10, scope: !7916)
!7941 = !DILocation(line: 4819, column: 38, scope: !7916)
!7942 = !DILocation(line: 4819, column: 6, scope: !7916)
!7943 = !DILocation(line: 4820, column: 5, scope: !7916)
!7944 = !DILocation(line: 4820, column: 8, scope: !7916)
!7945 = !DILocation(line: 4820, column: 13, scope: !7916)
!7946 = !DILocation(line: 4820, column: 25, scope: !7916)
!7947 = !DILocation(line: 4820, column: 28, scope: !7916)
!7948 = !DILocation(line: 4820, column: 39, scope: !7916)
!7949 = !DILocation(line: 4801, column: 8, scope: !7912)
!7950 = !DILocation(line: 4821, column: 10, scope: !7916)
!7951 = !DILocation(line: 4821, column: 8, scope: !7916)
!7952 = !DILocation(line: 4821, column: 6, scope: !7916)
!7953 = !DILocation(line: 4822, column: 15, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 4822, column: 13)
!7955 = !DILocation(line: 4822, column: 20, scope: !7954)
!7956 = !DILocation(line: 4823, column: 8, scope: !7954)
!7957 = !DILocation(line: 4823, column: 12, scope: !7954)
!7958 = !DILocation(line: 4823, column: 17, scope: !7954)
!7959 = !DILocation(line: 4824, column: 5, scope: !7954)
!7960 = !DILocation(line: 4824, column: 9, scope: !7954)
!7961 = !DILocation(line: 4825, column: 9, scope: !7954)
!7962 = !DILocation(line: 4826, column: 5, scope: !7954)
!7963 = !DILocation(line: 4826, column: 8, scope: !7954)
!7964 = !DILocation(line: 4826, column: 36, scope: !7954)
!7965 = !DILocation(line: 4827, column: 5, scope: !7954)
!7966 = !DILocation(line: 4829, column: 9, scope: !7954)
!7967 = !DILocation(line: 4829, column: 39, scope: !7954)
!7968 = !DILocation(line: 4829, column: 5, scope: !7954)
!7969 = !DILocation(line: 4828, column: 9, scope: !7954)
!7970 = !DILocation(line: 4837, column: 6, scope: !7954)
!7971 = !DILocation(line: 4837, column: 9, scope: !7954)
!7972 = !DILocation(line: 4838, column: 6, scope: !7954)
!7973 = !DILocation(line: 4838, column: 12, scope: !7954)
!7974 = !DILocation(line: 4838, column: 34, scope: !7954)
!7975 = !DILocation(line: 4839, column: 8, scope: !7954)
!7976 = !DILocation(line: 4839, column: 36, scope: !7954)
!7977 = !DILocation(line: 4839, column: 4, scope: !7954)
!7978 = !DILocation(line: 4840, column: 10, scope: !7954)
!7979 = !DILocation(line: 4840, column: 13, scope: !7954)
!7980 = !DILocation(line: 4840, column: 18, scope: !7954)
!7981 = !DILocation(line: 4840, column: 30, scope: !7954)
!7982 = !DILocation(line: 4840, column: 33, scope: !7954)
!7983 = !DILocation(line: 4840, column: 44, scope: !7954)
!7984 = !DILocation(line: 4822, column: 13, scope: !7916)
!7985 = !DILocation(line: 4843, column: 21, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 4842, column: 6)
!7987 = !DILocation(line: 4844, column: 12, scope: !7986)
!7988 = !DILocation(line: 4844, column: 10, scope: !7986)
!7989 = !DILocation(line: 4845, column: 6, scope: !7986)
!7990 = !DILocation(line: 4847, column: 6, scope: !7954)
!7991 = !DILocation(line: 4848, column: 2, scope: !7912)
!7992 = !DILocation(line: 4850, column: 27, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 4850, column: 16)
!7994 = !DILocation(line: 4850, column: 32, scope: !7993)
!7995 = !DILocation(line: 4850, column: 16, scope: !7993)
!7996 = !DILocation(line: 4850, column: 16, scope: !7909)
!7997 = !DILocation(line: 4852, column: 2, scope: !7993)
!7998 = !DILocation(line: 4854, column: 11, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4854, column: 11)
!8000 = !DILocation(line: 4854, column: 11, scope: !7853)
!8001 = !DILocation(line: 4858, column: 8, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4858, column: 8)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4855, column: 2)
!8004 = !DILocation(line: 4858, column: 8, scope: !8003)
!8005 = !DILocation(line: 4859, column: 25, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4859, column: 10)
!8007 = !DILocation(line: 4859, column: 28, scope: !8006)
!8008 = !DILocation(line: 4859, column: 10, scope: !8006)
!8009 = !DILocation(line: 4859, column: 34, scope: !8006)
!8010 = !DILocation(line: 4859, column: 57, scope: !8006)
!8011 = !DILocation(line: 4859, column: 60, scope: !8006)
!8012 = !DILocation(line: 4859, column: 66, scope: !8006)
!8013 = !DILocation(line: 4859, column: 37, scope: !8006)
!8014 = !DILocation(line: 4859, column: 10, scope: !8002)
!8015 = !DILocation(line: 4860, column: 8, scope: !8006)
!8016 = !DILocation(line: 4859, column: 70, scope: !8006)
!8017 = !DILocation(line: 4861, column: 8, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4861, column: 8)
!8019 = !DILocation(line: 4861, column: 8, scope: !8003)
!8020 = !DILocation(line: 4862, column: 13, scope: !8018)
!8021 = !DILocation(line: 4862, column: 11, scope: !8018)
!8022 = !DILocation(line: 4862, column: 6, scope: !8018)
!8023 = !DILocation(line: 4863, column: 8, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4863, column: 8)
!8025 = !DILocation(line: 4863, column: 8, scope: !8003)
!8026 = !DILocation(line: 4865, column: 41, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 4864, column: 6)
!8028 = !DILocation(line: 4865, column: 44, scope: !8027)
!8029 = !DILocation(line: 4865, column: 15, scope: !8027)
!8030 = !DILocation(line: 4865, column: 13, scope: !8027)
!8031 = !DILocation(line: 4866, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 4866, column: 12)
!8033 = !DILocation(line: 4866, column: 17, scope: !8032)
!8034 = !DILocation(line: 4866, column: 12, scope: !8027)
!8035 = !DILocation(line: 4867, column: 3, scope: !8032)
!8036 = !DILocation(line: 4868, column: 21, scope: !8027)
!8037 = !DILocation(line: 4869, column: 6, scope: !8027)
!8038 = !DILocation(line: 4871, column: 10, scope: !8003)
!8039 = !DILocation(line: 4871, column: 8, scope: !8003)
!8040 = !DILocation(line: 4871, column: 29, scope: !8003)
!8041 = !DILocation(line: 4871, column: 27, scope: !8003)
!8042 = !DILocation(line: 4872, column: 8, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4872, column: 8)
!8044 = !DILocation(line: 4872, column: 8, scope: !8003)
!8045 = !DILocation(line: 4873, column: 18, scope: !8043)
!8046 = !DILocation(line: 4873, column: 7, scope: !8043)
!8047 = !DILocation(line: 4873, column: 16, scope: !8043)
!8048 = !DILocation(line: 4873, column: 6, scope: !8043)
!8049 = !DILocation(line: 4874, column: 2, scope: !8003)
!8050 = !DILocation(line: 4878, column: 7, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4878, column: 7)
!8052 = !DILocation(line: 4878, column: 7, scope: !7772)
!8053 = !DILocation(line: 4879, column: 28, scope: !8051)
!8054 = !DILocation(line: 4879, column: 12, scope: !8051)
!8055 = !DILocation(line: 4879, column: 10, scope: !8051)
!8056 = !DILocation(line: 4879, column: 41, scope: !8051)
!8057 = !DILocation(line: 4879, column: 39, scope: !8051)
!8058 = !DILocation(line: 4879, column: 52, scope: !8051)
!8059 = !DILocation(line: 4879, column: 50, scope: !8051)
!8060 = !DILocation(line: 4879, column: 63, scope: !8051)
!8061 = !DILocation(line: 4879, column: 61, scope: !8051)
!8062 = !DILocation(line: 4879, column: 5, scope: !8051)
!8063 = !DILocation(line: 4883, column: 8, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4883, column: 7)
!8065 = !DILocation(line: 4884, column: 7, scope: !8064)
!8066 = !DILocation(line: 4884, column: 10, scope: !8064)
!8067 = !DILocation(line: 4884, column: 42, scope: !8064)
!8068 = !DILocation(line: 4883, column: 7, scope: !7772)
!8069 = !DILocation(line: 4885, column: 5, scope: !8064)
!8070 = !DILocation(line: 4891, column: 7, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4891, column: 7)
!8072 = !DILocation(line: 4891, column: 39, scope: !8071)
!8073 = !DILocation(line: 4892, column: 7, scope: !8071)
!8074 = !DILocation(line: 4892, column: 10, scope: !8071)
!8075 = !DILocation(line: 4893, column: 7, scope: !8071)
!8076 = !DILocation(line: 4893, column: 10, scope: !8071)
!8077 = !DILocation(line: 4893, column: 25, scope: !8071)
!8078 = !DILocation(line: 4894, column: 7, scope: !8071)
!8079 = !DILocation(line: 4894, column: 10, scope: !8071)
!8080 = !DILocation(line: 4894, column: 44, scope: !8071)
!8081 = !DILocation(line: 4891, column: 7, scope: !7772)
!8082 = !DILocalVariable(name: "const_val", scope: !8083, file: !3, line: 4896, type: !711)
!8083 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 4895, column: 5)
!8084 = !DILocation(line: 4896, column: 21, scope: !8083)
!8085 = !DILocation(line: 4896, column: 33, scope: !8083)
!8086 = !DILocalVariable(name: "uconst_val", scope: !8083, file: !3, line: 4897, type: !621)
!8087 = !DILocation(line: 4897, column: 30, scope: !8083)
!8088 = !DILocation(line: 4897, column: 43, scope: !8083)
!8089 = !DILocalVariable(name: "max_val", scope: !8083, file: !3, line: 4898, type: !621)
!8090 = !DILocation(line: 4898, column: 30, scope: !8083)
!8091 = !DILocation(line: 4899, column: 29, scope: !8083)
!8092 = !DILocation(line: 4901, column: 15, scope: !8083)
!8093 = !DILocation(line: 4901, column: 7, scope: !8083)
!8094 = !DILocation(line: 4904, column: 33, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 4904, column: 8)
!8096 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 4902, column: 2)
!8097 = !DILocation(line: 4904, column: 46, scope: !8095)
!8098 = !DILocation(line: 4904, column: 54, scope: !8095)
!8099 = !DILocation(line: 4904, column: 43, scope: !8095)
!8100 = !DILocation(line: 4904, column: 8, scope: !8096)
!8101 = !DILocation(line: 4905, column: 11, scope: !8095)
!8102 = !DILocation(line: 4905, column: 37, scope: !8095)
!8103 = !DILocation(line: 4905, column: 47, scope: !8095)
!8104 = !DILocation(line: 4905, column: 52, scope: !8095)
!8105 = !DILocation(line: 4905, column: 23, scope: !8095)
!8106 = !DILocation(line: 4905, column: 21, scope: !8095)
!8107 = !DILocation(line: 4905, column: 6, scope: !8095)
!8108 = !DILocation(line: 4906, column: 4, scope: !8096)
!8109 = !DILocation(line: 4911, column: 25, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 4911, column: 8)
!8111 = !DILocation(line: 4911, column: 37, scope: !8110)
!8112 = !DILocation(line: 4911, column: 35, scope: !8110)
!8113 = !DILocation(line: 4913, column: 10, scope: !8110)
!8114 = !DILocation(line: 4913, column: 44, scope: !8110)
!8115 = !DILocation(line: 4913, column: 6, scope: !8110)
!8116 = !DILocation(line: 4912, column: 8, scope: !8110)
!8117 = !DILocation(line: 4911, column: 8, scope: !8096)
!8118 = !DILocation(line: 4914, column: 11, scope: !8110)
!8119 = !DILocation(line: 4914, column: 37, scope: !8110)
!8120 = !DILocation(line: 4914, column: 47, scope: !8110)
!8121 = !DILocation(line: 4914, column: 52, scope: !8110)
!8122 = !DILocation(line: 4914, column: 23, scope: !8110)
!8123 = !DILocation(line: 4914, column: 21, scope: !8110)
!8124 = !DILocation(line: 4914, column: 6, scope: !8110)
!8125 = !DILocation(line: 4915, column: 4, scope: !8096)
!8126 = !DILocation(line: 4918, column: 8, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 4918, column: 8)
!8128 = !DILocation(line: 4918, column: 21, scope: !8127)
!8129 = !DILocation(line: 4918, column: 19, scope: !8127)
!8130 = !DILocation(line: 4918, column: 8, scope: !8096)
!8131 = !DILocation(line: 4919, column: 11, scope: !8127)
!8132 = !DILocation(line: 4919, column: 38, scope: !8127)
!8133 = !DILocation(line: 4919, column: 49, scope: !8127)
!8134 = !DILocation(line: 4919, column: 54, scope: !8127)
!8135 = !DILocation(line: 4919, column: 24, scope: !8127)
!8136 = !DILocation(line: 4919, column: 22, scope: !8127)
!8137 = !DILocation(line: 4919, column: 6, scope: !8127)
!8138 = !DILocation(line: 4920, column: 4, scope: !8096)
!8139 = !DILocation(line: 4923, column: 8, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 4923, column: 8)
!8141 = !DILocation(line: 4923, column: 19, scope: !8140)
!8142 = !DILocation(line: 4923, column: 8, scope: !8096)
!8143 = !DILocation(line: 4924, column: 11, scope: !8140)
!8144 = !DILocation(line: 4924, column: 38, scope: !8140)
!8145 = !DILocation(line: 4924, column: 49, scope: !8140)
!8146 = !DILocation(line: 4924, column: 54, scope: !8140)
!8147 = !DILocation(line: 4924, column: 24, scope: !8140)
!8148 = !DILocation(line: 4924, column: 22, scope: !8140)
!8149 = !DILocation(line: 4924, column: 6, scope: !8140)
!8150 = !DILocation(line: 4925, column: 4, scope: !8096)
!8151 = !DILocation(line: 4928, column: 4, scope: !8096)
!8152 = !DILocation(line: 4930, column: 5, scope: !8083)
!8153 = !DILocation(line: 4933, column: 7, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4933, column: 7)
!8155 = !DILocation(line: 4933, column: 7, scope: !7772)
!8156 = !DILocation(line: 4934, column: 5, scope: !8154)
!8157 = !DILocation(line: 4936, column: 10, scope: !7772)
!8158 = !DILocation(line: 4936, column: 3, scope: !7772)
!8159 = !DILocation(line: 4937, column: 1, scope: !7772)
!8160 = distinct !DISubprogram(name: "get_condition", scope: !3, file: !3, line: 4956, type: !8161, scopeLine: 4957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!622, !622, !1697, !619, !619}
!8163 = !DILocalVariable(name: "jump", arg: 1, scope: !8160, file: !3, line: 4956, type: !622)
!8164 = !DILocation(line: 4956, column: 20, scope: !8160)
!8165 = !DILocalVariable(name: "earliest", arg: 2, scope: !8160, file: !3, line: 4956, type: !1697)
!8166 = !DILocation(line: 4956, column: 31, scope: !8160)
!8167 = !DILocalVariable(name: "allow_cc_mode", arg: 3, scope: !8160, file: !3, line: 4956, type: !619)
!8168 = !DILocation(line: 4956, column: 45, scope: !8160)
!8169 = !DILocalVariable(name: "valid_at_insn_p", arg: 4, scope: !8160, file: !3, line: 4956, type: !619)
!8170 = !DILocation(line: 4956, column: 64, scope: !8160)
!8171 = !DILocalVariable(name: "cond", scope: !8160, file: !3, line: 4958, type: !622)
!8172 = !DILocation(line: 4958, column: 7, scope: !8160)
!8173 = !DILocalVariable(name: "reverse", scope: !8160, file: !3, line: 4959, type: !619)
!8174 = !DILocation(line: 4959, column: 7, scope: !8160)
!8175 = !DILocalVariable(name: "set", scope: !8160, file: !3, line: 4960, type: !622)
!8176 = !DILocation(line: 4960, column: 7, scope: !8160)
!8177 = !DILocation(line: 4963, column: 8, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 4963, column: 7)
!8179 = !DILocation(line: 4964, column: 7, scope: !8178)
!8180 = !DILocation(line: 4964, column: 28, scope: !8178)
!8181 = !DILocation(line: 4964, column: 12, scope: !8178)
!8182 = !DILocation(line: 4963, column: 7, scope: !8160)
!8183 = !DILocation(line: 4965, column: 5, scope: !8178)
!8184 = !DILocation(line: 4966, column: 17, scope: !8160)
!8185 = !DILocation(line: 4966, column: 9, scope: !8160)
!8186 = !DILocation(line: 4966, column: 7, scope: !8160)
!8187 = !DILocation(line: 4968, column: 10, scope: !8160)
!8188 = !DILocation(line: 4968, column: 8, scope: !8160)
!8189 = !DILocation(line: 4973, column: 7, scope: !8160)
!8190 = !DILocation(line: 4973, column: 42, scope: !8160)
!8191 = !DILocation(line: 4974, column: 7, scope: !8160)
!8192 = !DILocation(line: 4974, column: 10, scope: !8160)
!8193 = !DILocation(line: 4974, column: 47, scope: !8160)
!8194 = !DILocation(line: 4974, column: 44, scope: !8160)
!8195 = !DILocation(line: 0, scope: !8160)
!8196 = !DILocation(line: 4973, column: 5, scope: !8160)
!8197 = !DILocation(line: 4976, column: 34, scope: !8160)
!8198 = !DILocation(line: 4976, column: 40, scope: !8160)
!8199 = !DILocation(line: 4976, column: 46, scope: !8160)
!8200 = !DILocation(line: 4976, column: 55, scope: !8160)
!8201 = !DILocation(line: 4977, column: 6, scope: !8160)
!8202 = !DILocation(line: 4977, column: 21, scope: !8160)
!8203 = !DILocation(line: 4976, column: 10, scope: !8160)
!8204 = !DILocation(line: 4976, column: 3, scope: !8160)
!8205 = !DILocation(line: 4978, column: 1, scope: !8160)
!8206 = distinct !DISubprogram(name: "truncated_to_mode", scope: !3, file: !3, line: 5029, type: !8207, scopeLine: 5030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!855, !5, !1713}
!8209 = !DILocalVariable(name: "mode", arg: 1, scope: !8206, file: !3, line: 5029, type: !5)
!8210 = !DILocation(line: 5029, column: 38, scope: !8206)
!8211 = !DILocalVariable(name: "x", arg: 2, scope: !8206, file: !3, line: 5029, type: !1713)
!8212 = !DILocation(line: 5029, column: 54, scope: !8206)
!8213 = !DILocation(line: 5033, column: 7, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 5033, column: 7)
!8215 = !DILocation(line: 5033, column: 17, scope: !8214)
!8216 = !DILocation(line: 5033, column: 30, scope: !8214)
!8217 = !DILocation(line: 5033, column: 53, scope: !8214)
!8218 = !DILocation(line: 5033, column: 59, scope: !8214)
!8219 = !DILocation(line: 5033, column: 20, scope: !8214)
!8220 = !DILocation(line: 5033, column: 7, scope: !8206)
!8221 = !DILocation(line: 5034, column: 5, scope: !8214)
!8222 = !DILocation(line: 5038, column: 34, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 5038, column: 7)
!8224 = !DILocation(line: 5038, column: 7, scope: !8223)
!8225 = !DILocation(line: 5038, column: 48, scope: !8223)
!8226 = !DILocation(line: 5039, column: 7, scope: !8223)
!8227 = !DILocation(line: 5039, column: 32, scope: !8223)
!8228 = !DILocation(line: 5039, column: 35, scope: !8223)
!8229 = !DILocation(line: 5039, column: 11, scope: !8223)
!8230 = !DILocation(line: 5040, column: 34, scope: !8223)
!8231 = !DILocation(line: 5040, column: 7, scope: !8223)
!8232 = !DILocation(line: 5040, column: 48, scope: !8223)
!8233 = !DILocation(line: 5040, column: 54, scope: !8223)
!8234 = !DILocation(line: 5040, column: 4, scope: !8223)
!8235 = !DILocation(line: 5038, column: 7, scope: !8206)
!8236 = !DILocation(line: 5041, column: 5, scope: !8223)
!8237 = !DILocation(line: 5043, column: 3, scope: !8206)
!8238 = !DILocation(line: 5044, column: 1, scope: !8206)
!8239 = distinct !DISubprogram(name: "init_rtlanal", scope: !3, file: !3, line: 5049, type: !8240, scopeLine: 5050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{null}
!8242 = !DILocalVariable(name: "i", scope: !8239, file: !3, line: 5051, type: !619)
!8243 = !DILocation(line: 5051, column: 7, scope: !8239)
!8244 = !DILocation(line: 5052, column: 10, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 5052, column: 3)
!8246 = !DILocation(line: 5052, column: 8, scope: !8245)
!8247 = !DILocation(line: 5052, column: 15, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 5052, column: 3)
!8249 = !DILocation(line: 5052, column: 17, scope: !8248)
!8250 = !DILocation(line: 5052, column: 3, scope: !8245)
!8251 = !DILocalVariable(name: "format", scope: !8252, file: !3, line: 5054, type: !648)
!8252 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 5053, column: 5)
!8253 = !DILocation(line: 5054, column: 19, scope: !8252)
!8254 = !DILocation(line: 5054, column: 28, scope: !8252)
!8255 = !DILocalVariable(name: "first", scope: !8252, file: !3, line: 5055, type: !648)
!8256 = !DILocation(line: 5055, column: 19, scope: !8252)
!8257 = !DILocation(line: 5055, column: 36, scope: !8252)
!8258 = !DILocation(line: 5055, column: 27, scope: !8252)
!8259 = !DILocation(line: 5056, column: 38, scope: !8252)
!8260 = !DILocation(line: 5056, column: 46, scope: !8252)
!8261 = !DILocation(line: 5056, column: 54, scope: !8252)
!8262 = !DILocation(line: 5056, column: 52, scope: !8252)
!8263 = !DILocation(line: 5056, column: 33, scope: !8252)
!8264 = !DILocation(line: 5056, column: 7, scope: !8252)
!8265 = !DILocation(line: 5056, column: 36, scope: !8252)
!8266 = !DILocation(line: 5057, column: 5, scope: !8252)
!8267 = !DILocation(line: 5052, column: 34, scope: !8248)
!8268 = !DILocation(line: 5052, column: 3, scope: !8248)
!8269 = distinct !{!8269, !8250, !8270}
!8270 = !DILocation(line: 5057, column: 5, scope: !8245)
!8271 = !DILocation(line: 5059, column: 3, scope: !8239)
!8272 = !DILocation(line: 5060, column: 1, scope: !8239)
!8273 = distinct !DISubprogram(name: "init_num_sign_bit_copies_in_rep", scope: !3, file: !3, line: 4990, type: !8240, scopeLine: 4991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8274 = !DILocalVariable(name: "mode", scope: !8273, file: !3, line: 4992, type: !5)
!8275 = !DILocation(line: 4992, column: 21, scope: !8273)
!8276 = !DILocalVariable(name: "in_mode", scope: !8273, file: !3, line: 4992, type: !5)
!8277 = !DILocation(line: 4992, column: 27, scope: !8273)
!8278 = !DILocation(line: 4994, column: 18, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 4994, column: 3)
!8280 = !DILocation(line: 4994, column: 16, scope: !8279)
!8281 = !DILocation(line: 4994, column: 8, scope: !8279)
!8282 = !DILocation(line: 4994, column: 55, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 4994, column: 3)
!8284 = !DILocation(line: 4994, column: 63, scope: !8283)
!8285 = !DILocation(line: 4994, column: 3, scope: !8279)
!8286 = !DILocation(line: 4996, column: 17, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 4996, column: 5)
!8288 = !DILocation(line: 4996, column: 15, scope: !8287)
!8289 = !DILocation(line: 4996, column: 10, scope: !8287)
!8290 = !DILocation(line: 4996, column: 54, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4996, column: 5)
!8292 = !DILocation(line: 4996, column: 62, scope: !8291)
!8293 = !DILocation(line: 4996, column: 59, scope: !8291)
!8294 = !DILocation(line: 4996, column: 5, scope: !8287)
!8295 = !DILocalVariable(name: "i", scope: !8296, file: !3, line: 4999, type: !5)
!8296 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 4998, column: 7)
!8297 = !DILocation(line: 4999, column: 20, scope: !8296)
!8298 = !DILocation(line: 5003, column: 2, scope: !8296)
!8299 = !DILocation(line: 5008, column: 11, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 5008, column: 2)
!8301 = !DILocation(line: 5008, column: 9, scope: !8300)
!8302 = !DILocation(line: 5008, column: 7, scope: !8300)
!8303 = !DILocation(line: 5008, column: 17, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 5008, column: 2)
!8305 = !DILocation(line: 5008, column: 22, scope: !8304)
!8306 = !DILocation(line: 5008, column: 19, scope: !8304)
!8307 = !DILocation(line: 5008, column: 2, scope: !8300)
!8308 = !DILocalVariable(name: "wider", scope: !8309, file: !3, line: 5010, type: !5)
!8309 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 5009, column: 4)
!8310 = !DILocation(line: 5010, column: 24, scope: !8309)
!8311 = !DILocation(line: 5010, column: 32, scope: !8309)
!8312 = !DILocation(line: 5012, column: 18, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 5012, column: 10)
!8314 = !DILocation(line: 5012, column: 37, scope: !8313)
!8315 = !DILocation(line: 5012, column: 40, scope: !8313)
!8316 = !DILocation(line: 5012, column: 10, scope: !8313)
!8317 = !DILocation(line: 5012, column: 47, scope: !8313)
!8318 = !DILocation(line: 5017, column: 3, scope: !8313)
!8319 = !DILocation(line: 5017, column: 34, scope: !8313)
!8320 = !DILocation(line: 5017, column: 6, scope: !8313)
!8321 = !DILocation(line: 5017, column: 43, scope: !8313)
!8322 = !DILocation(line: 5012, column: 10, scope: !8309)
!8323 = !DILocation(line: 5019, column: 6, scope: !8313)
!8324 = !DILocation(line: 5019, column: 33, scope: !8313)
!8325 = !DILocation(line: 5019, column: 31, scope: !8313)
!8326 = !DILocation(line: 5018, column: 36, scope: !8313)
!8327 = !DILocation(line: 5018, column: 8, scope: !8313)
!8328 = !DILocation(line: 5018, column: 45, scope: !8313)
!8329 = !DILocation(line: 5019, column: 3, scope: !8313)
!8330 = !DILocation(line: 5020, column: 4, scope: !8309)
!8331 = !DILocation(line: 5008, column: 35, scope: !8304)
!8332 = !DILocation(line: 5008, column: 33, scope: !8304)
!8333 = !DILocation(line: 5008, column: 2, scope: !8304)
!8334 = distinct !{!8334, !8307, !8335}
!8335 = !DILocation(line: 5020, column: 4, scope: !8300)
!8336 = !DILocation(line: 5021, column: 7, scope: !8296)
!8337 = !DILocation(line: 4997, column: 10, scope: !8291)
!8338 = !DILocation(line: 4997, column: 8, scope: !8291)
!8339 = !DILocation(line: 4996, column: 5, scope: !8291)
!8340 = distinct !{!8340, !8294, !8341}
!8341 = !DILocation(line: 5021, column: 7, scope: !8287)
!8342 = !DILocation(line: 4995, column: 18, scope: !8283)
!8343 = !DILocation(line: 4995, column: 16, scope: !8283)
!8344 = !DILocation(line: 4994, column: 3, scope: !8283)
!8345 = distinct !{!8345, !8285, !8346}
!8346 = !DILocation(line: 5021, column: 7, scope: !8279)
!8347 = !DILocation(line: 5022, column: 1, scope: !8273)
!8348 = distinct !DISubprogram(name: "constant_pool_constant_p", scope: !3, file: !3, line: 5064, type: !8349, scopeLine: 5065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{!855, !622}
!8351 = !DILocalVariable(name: "x", arg: 1, scope: !8348, file: !3, line: 5064, type: !622)
!8352 = !DILocation(line: 5064, column: 31, scope: !8348)
!8353 = !DILocation(line: 5066, column: 38, scope: !8348)
!8354 = !DILocation(line: 5066, column: 7, scope: !8348)
!8355 = !DILocation(line: 5066, column: 5, scope: !8348)
!8356 = !DILocation(line: 5067, column: 10, scope: !8348)
!8357 = !DILocation(line: 5067, column: 23, scope: !8348)
!8358 = !DILocation(line: 5067, column: 3, scope: !8348)
!8359 = distinct !DISubprogram(name: "low_bitmask_len", scope: !3, file: !3, line: 5075, type: !8360, scopeLine: 5076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!619, !5, !621}
!8362 = !DILocalVariable(name: "mode", arg: 1, scope: !8359, file: !3, line: 5075, type: !5)
!8363 = !DILocation(line: 5075, column: 36, scope: !8359)
!8364 = !DILocalVariable(name: "m", arg: 2, scope: !8359, file: !3, line: 5075, type: !621)
!8365 = !DILocation(line: 5075, column: 65, scope: !8359)
!8366 = !DILocation(line: 5077, column: 7, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 5077, column: 7)
!8368 = !DILocation(line: 5077, column: 12, scope: !8367)
!8369 = !DILocation(line: 5077, column: 7, scope: !8359)
!8370 = !DILocation(line: 5079, column: 11, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 5079, column: 11)
!8372 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 5078, column: 5)
!8373 = !DILocation(line: 5079, column: 35, scope: !8371)
!8374 = !DILocation(line: 5079, column: 11, scope: !8372)
!8375 = !DILocation(line: 5080, column: 2, scope: !8371)
!8376 = !DILocation(line: 5081, column: 12, scope: !8372)
!8377 = !DILocation(line: 5081, column: 9, scope: !8372)
!8378 = !DILocation(line: 5082, column: 5, scope: !8372)
!8379 = !DILocation(line: 5084, column: 22, scope: !8359)
!8380 = !DILocation(line: 5084, column: 24, scope: !8359)
!8381 = !DILocation(line: 5084, column: 10, scope: !8359)
!8382 = !DILocation(line: 5084, column: 3, scope: !8359)
!8383 = !DILocation(line: 5085, column: 1, scope: !8359)
!8384 = distinct !DISubprogram(name: "covers_regno_no_parallel_p", scope: !3, file: !3, line: 1601, type: !4831, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8385 = !DILocalVariable(name: "dest", arg: 1, scope: !8384, file: !3, line: 1601, type: !1713)
!8386 = !DILocation(line: 1601, column: 39, scope: !8384)
!8387 = !DILocalVariable(name: "test_regno", arg: 2, scope: !8384, file: !3, line: 1601, type: !7)
!8388 = !DILocation(line: 1601, column: 58, scope: !8384)
!8389 = !DILocalVariable(name: "regno", scope: !8384, file: !3, line: 1603, type: !7)
!8390 = !DILocation(line: 1603, column: 16, scope: !8384)
!8391 = !DILocalVariable(name: "endregno", scope: !8384, file: !3, line: 1603, type: !7)
!8392 = !DILocation(line: 1603, column: 23, scope: !8384)
!8393 = !DILocation(line: 1605, column: 7, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1605, column: 7)
!8395 = !DILocation(line: 1605, column: 23, scope: !8394)
!8396 = !DILocation(line: 1606, column: 7, scope: !8394)
!8397 = !DILocation(line: 1606, column: 13, scope: !8394)
!8398 = !DILocation(line: 1607, column: 6, scope: !8394)
!8399 = !DILocation(line: 1607, column: 23, scope: !8394)
!8400 = !DILocation(line: 1607, column: 28, scope: !8394)
!8401 = !DILocation(line: 1608, column: 9, scope: !8394)
!8402 = !DILocation(line: 1609, column: 9, scope: !8394)
!8403 = !DILocation(line: 1609, column: 26, scope: !8394)
!8404 = !DILocation(line: 1609, column: 31, scope: !8394)
!8405 = !DILocation(line: 1608, column: 4, scope: !8394)
!8406 = !DILocation(line: 1605, column: 7, scope: !8384)
!8407 = !DILocation(line: 1610, column: 12, scope: !8394)
!8408 = !DILocation(line: 1610, column: 10, scope: !8394)
!8409 = !DILocation(line: 1610, column: 5, scope: !8394)
!8410 = !DILocation(line: 1612, column: 8, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1612, column: 7)
!8412 = !DILocation(line: 1612, column: 7, scope: !8384)
!8413 = !DILocation(line: 1613, column: 5, scope: !8411)
!8414 = !DILocation(line: 1615, column: 11, scope: !8384)
!8415 = !DILocation(line: 1615, column: 9, scope: !8384)
!8416 = !DILocation(line: 1616, column: 14, scope: !8384)
!8417 = !DILocation(line: 1616, column: 12, scope: !8384)
!8418 = !DILocation(line: 1617, column: 11, scope: !8384)
!8419 = !DILocation(line: 1617, column: 25, scope: !8384)
!8420 = !DILocation(line: 1617, column: 22, scope: !8384)
!8421 = !DILocation(line: 1617, column: 31, scope: !8384)
!8422 = !DILocation(line: 1617, column: 34, scope: !8384)
!8423 = !DILocation(line: 1617, column: 47, scope: !8384)
!8424 = !DILocation(line: 1617, column: 45, scope: !8384)
!8425 = !DILocation(line: 0, scope: !8384)
!8426 = !DILocation(line: 1617, column: 10, scope: !8384)
!8427 = !DILocation(line: 1617, column: 3, scope: !8384)
!8428 = !DILocation(line: 1618, column: 1, scope: !8384)
!8429 = distinct !DISubprogram(name: "nonzero_bits1", scope: !3, file: !3, line: 3702, type: !7482, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!8430 = !DILocalVariable(name: "x", arg: 1, scope: !8429, file: !3, line: 3702, type: !1713)
!8431 = !DILocation(line: 3702, column: 26, scope: !8429)
!8432 = !DILocalVariable(name: "mode", arg: 2, scope: !8429, file: !3, line: 3702, type: !5)
!8433 = !DILocation(line: 3702, column: 47, scope: !8429)
!8434 = !DILocalVariable(name: "known_x", arg: 3, scope: !8429, file: !3, line: 3702, type: !1713)
!8435 = !DILocation(line: 3702, column: 63, scope: !8429)
!8436 = !DILocalVariable(name: "known_mode", arg: 4, scope: !8429, file: !3, line: 3703, type: !5)
!8437 = !DILocation(line: 3703, column: 27, scope: !8429)
!8438 = !DILocalVariable(name: "known_ret", arg: 5, scope: !8429, file: !3, line: 3704, type: !621)
!8439 = !DILocation(line: 3704, column: 32, scope: !8429)
!8440 = !DILocalVariable(name: "nonzero", scope: !8429, file: !3, line: 3706, type: !621)
!8441 = !DILocation(line: 3706, column: 26, scope: !8429)
!8442 = !DILocation(line: 3706, column: 36, scope: !8429)
!8443 = !DILocalVariable(name: "inner_nz", scope: !8429, file: !3, line: 3707, type: !621)
!8444 = !DILocation(line: 3707, column: 26, scope: !8429)
!8445 = !DILocalVariable(name: "code", scope: !8429, file: !3, line: 3708, type: !377)
!8446 = !DILocation(line: 3708, column: 17, scope: !8429)
!8447 = !DILocalVariable(name: "mode_width", scope: !8429, file: !3, line: 3709, type: !7)
!8448 = !DILocation(line: 3709, column: 16, scope: !8429)
!8449 = !DILocation(line: 3709, column: 29, scope: !8429)
!8450 = !DILocation(line: 3712, column: 7, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3712, column: 7)
!8452 = !DILocation(line: 3712, column: 35, scope: !8451)
!8453 = !DILocation(line: 3712, column: 38, scope: !8451)
!8454 = !DILocation(line: 3713, column: 7, scope: !8451)
!8455 = !DILocation(line: 3713, column: 10, scope: !8451)
!8456 = !DILocation(line: 3713, column: 39, scope: !8451)
!8457 = !DILocation(line: 3713, column: 42, scope: !8451)
!8458 = !DILocation(line: 3712, column: 7, scope: !8429)
!8459 = !DILocation(line: 3714, column: 12, scope: !8451)
!8460 = !DILocation(line: 3714, column: 5, scope: !8451)
!8461 = !DILocation(line: 3717, column: 7, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3717, column: 7)
!8463 = !DILocation(line: 3717, column: 41, scope: !8462)
!8464 = !DILocation(line: 3717, column: 39, scope: !8462)
!8465 = !DILocation(line: 3717, column: 7, scope: !8429)
!8466 = !DILocation(line: 3719, column: 14, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3718, column: 5)
!8468 = !DILocation(line: 3719, column: 12, scope: !8467)
!8469 = !DILocation(line: 3720, column: 17, scope: !8467)
!8470 = !DILocation(line: 3720, column: 15, scope: !8467)
!8471 = !DILocation(line: 3721, column: 20, scope: !8467)
!8472 = !DILocation(line: 3721, column: 18, scope: !8467)
!8473 = !DILocation(line: 3722, column: 5, scope: !8467)
!8474 = !DILocation(line: 3724, column: 7, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3724, column: 7)
!8476 = !DILocation(line: 3724, column: 18, scope: !8475)
!8477 = !DILocation(line: 3724, column: 7, scope: !8429)
!8478 = !DILocation(line: 3727, column: 12, scope: !8475)
!8479 = !DILocation(line: 3727, column: 5, scope: !8475)
!8480 = !DILocation(line: 3737, column: 7, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3737, column: 7)
!8482 = !DILocation(line: 3737, column: 20, scope: !8481)
!8483 = !DILocation(line: 3737, column: 32, scope: !8481)
!8484 = !DILocation(line: 3737, column: 35, scope: !8481)
!8485 = !DILocation(line: 3737, column: 51, scope: !8481)
!8486 = !DILocation(line: 3737, column: 48, scope: !8481)
!8487 = !DILocation(line: 3738, column: 7, scope: !8481)
!8488 = !DILocation(line: 3738, column: 10, scope: !8481)
!8489 = !DILocation(line: 3738, column: 42, scope: !8481)
!8490 = !DILocation(line: 3739, column: 7, scope: !8481)
!8491 = !DILocation(line: 3739, column: 10, scope: !8481)
!8492 = !DILocation(line: 3739, column: 42, scope: !8481)
!8493 = !DILocation(line: 3740, column: 7, scope: !8481)
!8494 = !DILocation(line: 3740, column: 10, scope: !8481)
!8495 = !DILocation(line: 3740, column: 36, scope: !8481)
!8496 = !DILocation(line: 3740, column: 34, scope: !8481)
!8497 = !DILocation(line: 3737, column: 7, scope: !8429)
!8498 = !DILocation(line: 3742, column: 39, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 3741, column: 5)
!8500 = !DILocation(line: 3742, column: 42, scope: !8499)
!8501 = !DILocation(line: 3743, column: 11, scope: !8499)
!8502 = !DILocation(line: 3743, column: 20, scope: !8499)
!8503 = !DILocation(line: 3743, column: 32, scope: !8499)
!8504 = !DILocation(line: 3742, column: 18, scope: !8499)
!8505 = !DILocation(line: 3742, column: 15, scope: !8499)
!8506 = !DILocation(line: 3744, column: 18, scope: !8499)
!8507 = !DILocation(line: 3744, column: 42, scope: !8499)
!8508 = !DILocation(line: 3744, column: 41, scope: !8499)
!8509 = !DILocation(line: 3744, column: 39, scope: !8499)
!8510 = !DILocation(line: 3744, column: 15, scope: !8499)
!8511 = !DILocation(line: 3745, column: 14, scope: !8499)
!8512 = !DILocation(line: 3745, column: 7, scope: !8499)
!8513 = !DILocation(line: 3749, column: 10, scope: !8429)
!8514 = !DILocation(line: 3749, column: 8, scope: !8429)
!8515 = !DILocation(line: 3750, column: 11, scope: !8429)
!8516 = !DILocation(line: 3750, column: 3, scope: !8429)
!8517 = !DILocation(line: 3769, column: 12, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3769, column: 11)
!8519 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3751, column: 5)
!8520 = !DILocation(line: 3769, column: 17, scope: !8518)
!8521 = !DILocation(line: 3769, column: 14, scope: !8518)
!8522 = !DILocation(line: 3770, column: 5, scope: !8518)
!8523 = !DILocation(line: 3770, column: 8, scope: !8518)
!8524 = !DILocation(line: 3770, column: 13, scope: !8518)
!8525 = !DILocation(line: 3770, column: 10, scope: !8518)
!8526 = !DILocation(line: 3771, column: 5, scope: !8518)
!8527 = !DILocation(line: 3771, column: 8, scope: !8518)
!8528 = !DILocation(line: 3771, column: 13, scope: !8518)
!8529 = !DILocation(line: 3771, column: 10, scope: !8518)
!8530 = !DILocation(line: 3772, column: 4, scope: !8518)
!8531 = !DILocation(line: 3772, column: 7, scope: !8518)
!8532 = !DILocation(line: 3769, column: 11, scope: !8519)
!8533 = !DILocalVariable(name: "alignment", scope: !8534, file: !3, line: 3774, type: !621)
!8534 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 3773, column: 2)
!8535 = !DILocation(line: 3774, column: 27, scope: !8534)
!8536 = !DILocation(line: 3775, column: 8, scope: !8534)
!8537 = !DILocation(line: 3775, column: 40, scope: !8534)
!8538 = !DILocation(line: 3781, column: 8, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 3781, column: 8)
!8540 = !DILocation(line: 3781, column: 13, scope: !8539)
!8541 = !DILocation(line: 3781, column: 10, scope: !8539)
!8542 = !DILocation(line: 3781, column: 31, scope: !8539)
!8543 = !DILocation(line: 3781, column: 34, scope: !8539)
!8544 = !DILocation(line: 3781, column: 8, scope: !8534)
!8545 = !DILocation(line: 3782, column: 18, scope: !8539)
!8546 = !DILocation(line: 3782, column: 16, scope: !8539)
!8547 = !DILocation(line: 3782, column: 6, scope: !8539)
!8548 = !DILocation(line: 3786, column: 17, scope: !8534)
!8549 = !DILocation(line: 3786, column: 27, scope: !8534)
!8550 = !DILocation(line: 3786, column: 15, scope: !8534)
!8551 = !DILocation(line: 3786, column: 12, scope: !8534)
!8552 = !DILocation(line: 3787, column: 2, scope: !8534)
!8553 = !DILocalVariable(name: "nonzero_for_hook", scope: !8554, file: !3, line: 3790, type: !621)
!8554 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3789, column: 7)
!8555 = !DILocation(line: 3790, column: 25, scope: !8554)
!8556 = !DILocation(line: 3790, column: 44, scope: !8554)
!8557 = !DILocalVariable(name: "new_rtx", scope: !8554, file: !3, line: 3791, type: !622)
!8558 = !DILocation(line: 3791, column: 6, scope: !8554)
!8559 = !DILocation(line: 3791, column: 26, scope: !8554)
!8560 = !DILocation(line: 3791, column: 44, scope: !8554)
!8561 = !DILocation(line: 3791, column: 47, scope: !8554)
!8562 = !DILocation(line: 3791, column: 53, scope: !8554)
!8563 = !DILocation(line: 3792, column: 12, scope: !8554)
!8564 = !DILocation(line: 3792, column: 24, scope: !8554)
!8565 = !DILocation(line: 3791, column: 16, scope: !8554)
!8566 = !DILocation(line: 3795, column: 6, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 3795, column: 6)
!8568 = !DILocation(line: 3795, column: 6, scope: !8554)
!8569 = !DILocation(line: 3796, column: 45, scope: !8567)
!8570 = !DILocation(line: 3796, column: 54, scope: !8567)
!8571 = !DILocation(line: 3796, column: 60, scope: !8567)
!8572 = !DILocation(line: 3797, column: 10, scope: !8567)
!8573 = !DILocation(line: 3797, column: 22, scope: !8567)
!8574 = !DILocation(line: 3796, column: 24, scope: !8567)
!8575 = !DILocation(line: 3796, column: 21, scope: !8567)
!8576 = !DILocation(line: 3796, column: 4, scope: !8567)
!8577 = !DILocation(line: 3799, column: 9, scope: !8554)
!8578 = !DILocation(line: 3799, column: 2, scope: !8554)
!8579 = !DILocation(line: 3810, column: 14, scope: !8519)
!8580 = !DILocation(line: 3810, column: 7, scope: !8519)
!8581 = !DILocation(line: 3820, column: 7, scope: !8519)
!8582 = !DILocation(line: 3836, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3836, column: 11)
!8584 = !DILocation(line: 3836, column: 41, scope: !8583)
!8585 = !DILocation(line: 3837, column: 4, scope: !8583)
!8586 = !DILocation(line: 3837, column: 7, scope: !8583)
!8587 = !DILocation(line: 3837, column: 18, scope: !8583)
!8588 = !DILocation(line: 3836, column: 11, scope: !8519)
!8589 = !DILocation(line: 3838, column: 10, scope: !8583)
!8590 = !DILocation(line: 3838, column: 2, scope: !8583)
!8591 = !DILocation(line: 3839, column: 7, scope: !8519)
!8592 = !DILocation(line: 3850, column: 11, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3850, column: 11)
!8594 = !DILocation(line: 3850, column: 42, scope: !8593)
!8595 = !DILocation(line: 3850, column: 40, scope: !8593)
!8596 = !DILocation(line: 3850, column: 11, scope: !8519)
!8597 = !DILocation(line: 3851, column: 14, scope: !8593)
!8598 = !DILocation(line: 3851, column: 38, scope: !8593)
!8599 = !DILocation(line: 3851, column: 37, scope: !8593)
!8600 = !DILocation(line: 3851, column: 35, scope: !8593)
!8601 = !DILocation(line: 3851, column: 10, scope: !8593)
!8602 = !DILocation(line: 3851, column: 2, scope: !8593)
!8603 = !DILocation(line: 3852, column: 7, scope: !8519)
!8604 = !DILocation(line: 3862, column: 7, scope: !8519)
!8605 = !DILocation(line: 3865, column: 40, scope: !8519)
!8606 = !DILocation(line: 3865, column: 53, scope: !8519)
!8607 = !DILocation(line: 3866, column: 12, scope: !8519)
!8608 = !DILocation(line: 3866, column: 21, scope: !8519)
!8609 = !DILocation(line: 3866, column: 33, scope: !8519)
!8610 = !DILocation(line: 3865, column: 19, scope: !8519)
!8611 = !DILocation(line: 3867, column: 7, scope: !8519)
!8612 = !DILocation(line: 3867, column: 5, scope: !8519)
!8613 = !DILocation(line: 3865, column: 15, scope: !8519)
!8614 = !DILocation(line: 3868, column: 7, scope: !8519)
!8615 = !DILocation(line: 3871, column: 39, scope: !8519)
!8616 = !DILocation(line: 3871, column: 52, scope: !8519)
!8617 = !DILocation(line: 3872, column: 11, scope: !8519)
!8618 = !DILocation(line: 3872, column: 20, scope: !8519)
!8619 = !DILocation(line: 3872, column: 32, scope: !8519)
!8620 = !DILocation(line: 3871, column: 18, scope: !8519)
!8621 = !DILocation(line: 3871, column: 15, scope: !8519)
!8622 = !DILocation(line: 3873, column: 11, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3873, column: 11)
!8624 = !DILocation(line: 3873, column: 34, scope: !8623)
!8625 = !DILocation(line: 3873, column: 11, scope: !8519)
!8626 = !DILocation(line: 3874, column: 13, scope: !8623)
!8627 = !DILocation(line: 3874, column: 10, scope: !8623)
!8628 = !DILocation(line: 3874, column: 2, scope: !8623)
!8629 = !DILocation(line: 3875, column: 7, scope: !8519)
!8630 = !DILocation(line: 3881, column: 39, scope: !8519)
!8631 = !DILocation(line: 3881, column: 52, scope: !8519)
!8632 = !DILocation(line: 3882, column: 11, scope: !8519)
!8633 = !DILocation(line: 3882, column: 20, scope: !8519)
!8634 = !DILocation(line: 3882, column: 32, scope: !8519)
!8635 = !DILocation(line: 3881, column: 18, scope: !8519)
!8636 = !DILocation(line: 3881, column: 16, scope: !8519)
!8637 = !DILocation(line: 3883, column: 11, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3883, column: 11)
!8639 = !DILocation(line: 3883, column: 34, scope: !8638)
!8640 = !DILocation(line: 3883, column: 11, scope: !8519)
!8641 = !DILocation(line: 3885, column: 16, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 3884, column: 2)
!8643 = !DILocation(line: 3885, column: 13, scope: !8642)
!8644 = !DILocation(line: 3886, column: 8, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3886, column: 8)
!8646 = !DILocation(line: 3888, column: 9, scope: !8645)
!8647 = !DILocation(line: 3888, column: 51, scope: !8645)
!8648 = !DILocation(line: 3888, column: 5, scope: !8645)
!8649 = !DILocation(line: 3887, column: 8, scope: !8645)
!8650 = !DILocation(line: 3886, column: 8, scope: !8642)
!8651 = !DILocation(line: 3889, column: 19, scope: !8645)
!8652 = !DILocation(line: 3890, column: 8, scope: !8645)
!8653 = !DILocation(line: 3890, column: 7, scope: !8645)
!8654 = !DILocation(line: 3890, column: 5, scope: !8645)
!8655 = !DILocation(line: 3889, column: 15, scope: !8645)
!8656 = !DILocation(line: 3889, column: 6, scope: !8645)
!8657 = !DILocation(line: 3891, column: 2, scope: !8642)
!8658 = !DILocation(line: 3893, column: 18, scope: !8519)
!8659 = !DILocation(line: 3893, column: 15, scope: !8519)
!8660 = !DILocation(line: 3894, column: 7, scope: !8519)
!8661 = !DILocation(line: 3897, column: 39, scope: !8519)
!8662 = !DILocation(line: 3897, column: 52, scope: !8519)
!8663 = !DILocation(line: 3898, column: 12, scope: !8519)
!8664 = !DILocation(line: 3898, column: 21, scope: !8519)
!8665 = !DILocation(line: 3898, column: 33, scope: !8519)
!8666 = !DILocation(line: 3897, column: 18, scope: !8519)
!8667 = !DILocation(line: 3899, column: 33, scope: !8519)
!8668 = !DILocation(line: 3899, column: 46, scope: !8519)
!8669 = !DILocation(line: 3900, column: 6, scope: !8519)
!8670 = !DILocation(line: 3900, column: 15, scope: !8519)
!8671 = !DILocation(line: 3900, column: 27, scope: !8519)
!8672 = !DILocation(line: 3899, column: 12, scope: !8519)
!8673 = !DILocation(line: 3899, column: 10, scope: !8519)
!8674 = !DILocation(line: 3897, column: 15, scope: !8519)
!8675 = !DILocation(line: 3901, column: 7, scope: !8519)
!8676 = !DILocalVariable(name: "nonzero0", scope: !8677, file: !3, line: 3906, type: !621)
!8677 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3905, column: 7)
!8678 = !DILocation(line: 3906, column: 25, scope: !8677)
!8679 = !DILocation(line: 3907, column: 25, scope: !8677)
!8680 = !DILocation(line: 3907, column: 38, scope: !8677)
!8681 = !DILocation(line: 3908, column: 11, scope: !8677)
!8682 = !DILocation(line: 3908, column: 20, scope: !8677)
!8683 = !DILocation(line: 3908, column: 32, scope: !8677)
!8684 = !DILocation(line: 3907, column: 4, scope: !8677)
!8685 = !DILocation(line: 3912, column: 7, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3912, column: 6)
!8687 = !DILocation(line: 3912, column: 17, scope: !8686)
!8688 = !DILocation(line: 3912, column: 15, scope: !8686)
!8689 = !DILocation(line: 3912, column: 30, scope: !8686)
!8690 = !DILocation(line: 3912, column: 27, scope: !8686)
!8691 = !DILocation(line: 3912, column: 6, scope: !8677)
!8692 = !DILocation(line: 3913, column: 15, scope: !8686)
!8693 = !DILocation(line: 3914, column: 37, scope: !8686)
!8694 = !DILocation(line: 3914, column: 50, scope: !8686)
!8695 = !DILocation(line: 3915, column: 10, scope: !8686)
!8696 = !DILocation(line: 3915, column: 19, scope: !8686)
!8697 = !DILocation(line: 3915, column: 31, scope: !8686)
!8698 = !DILocation(line: 3914, column: 16, scope: !8686)
!8699 = !DILocation(line: 3914, column: 14, scope: !8686)
!8700 = !DILocation(line: 3913, column: 12, scope: !8686)
!8701 = !DILocation(line: 3913, column: 4, scope: !8686)
!8702 = !DILocation(line: 3917, column: 7, scope: !8519)
!8703 = !DILocalVariable(name: "nz0", scope: !8704, file: !3, line: 3928, type: !621)
!8704 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3927, column: 7)
!8705 = !DILocation(line: 3928, column: 25, scope: !8704)
!8706 = !DILocation(line: 3929, column: 25, scope: !8704)
!8707 = !DILocation(line: 3929, column: 38, scope: !8704)
!8708 = !DILocation(line: 3930, column: 11, scope: !8704)
!8709 = !DILocation(line: 3930, column: 20, scope: !8704)
!8710 = !DILocation(line: 3930, column: 32, scope: !8704)
!8711 = !DILocation(line: 3929, column: 4, scope: !8704)
!8712 = !DILocalVariable(name: "nz1", scope: !8704, file: !3, line: 3931, type: !621)
!8713 = !DILocation(line: 3931, column: 25, scope: !8704)
!8714 = !DILocation(line: 3932, column: 25, scope: !8704)
!8715 = !DILocation(line: 3932, column: 38, scope: !8704)
!8716 = !DILocation(line: 3933, column: 11, scope: !8704)
!8717 = !DILocation(line: 3933, column: 20, scope: !8704)
!8718 = !DILocation(line: 3933, column: 32, scope: !8704)
!8719 = !DILocation(line: 3932, column: 4, scope: !8704)
!8720 = !DILocalVariable(name: "sign_index", scope: !8704, file: !3, line: 3934, type: !619)
!8721 = !DILocation(line: 3934, column: 6, scope: !8704)
!8722 = !DILocation(line: 3934, column: 19, scope: !8704)
!8723 = !DILocation(line: 3934, column: 51, scope: !8704)
!8724 = !DILocalVariable(name: "width0", scope: !8704, file: !3, line: 3935, type: !619)
!8725 = !DILocation(line: 3935, column: 6, scope: !8704)
!8726 = !DILocation(line: 3935, column: 27, scope: !8704)
!8727 = !DILocation(line: 3935, column: 15, scope: !8704)
!8728 = !DILocation(line: 3935, column: 32, scope: !8704)
!8729 = !DILocalVariable(name: "width1", scope: !8704, file: !3, line: 3936, type: !619)
!8730 = !DILocation(line: 3936, column: 6, scope: !8704)
!8731 = !DILocation(line: 3936, column: 27, scope: !8704)
!8732 = !DILocation(line: 3936, column: 15, scope: !8704)
!8733 = !DILocation(line: 3936, column: 32, scope: !8704)
!8734 = !DILocalVariable(name: "low0", scope: !8704, file: !3, line: 3937, type: !619)
!8735 = !DILocation(line: 3937, column: 6, scope: !8704)
!8736 = !DILocation(line: 3937, column: 25, scope: !8704)
!8737 = !DILocation(line: 3937, column: 32, scope: !8704)
!8738 = !DILocation(line: 3937, column: 31, scope: !8704)
!8739 = !DILocation(line: 3937, column: 29, scope: !8704)
!8740 = !DILocation(line: 3937, column: 13, scope: !8704)
!8741 = !DILocalVariable(name: "low1", scope: !8704, file: !3, line: 3938, type: !619)
!8742 = !DILocation(line: 3938, column: 6, scope: !8704)
!8743 = !DILocation(line: 3938, column: 25, scope: !8704)
!8744 = !DILocation(line: 3938, column: 32, scope: !8704)
!8745 = !DILocation(line: 3938, column: 31, scope: !8704)
!8746 = !DILocation(line: 3938, column: 29, scope: !8704)
!8747 = !DILocation(line: 3938, column: 13, scope: !8704)
!8748 = !DILocalVariable(name: "op0_maybe_minusp", scope: !8704, file: !3, line: 3939, type: !711)
!8749 = !DILocation(line: 3939, column: 16, scope: !8704)
!8750 = !DILocation(line: 3940, column: 7, scope: !8704)
!8751 = !DILocation(line: 3940, column: 35, scope: !8704)
!8752 = !DILocation(line: 3940, column: 32, scope: !8704)
!8753 = !DILocation(line: 3940, column: 11, scope: !8704)
!8754 = !DILocalVariable(name: "op1_maybe_minusp", scope: !8704, file: !3, line: 3941, type: !711)
!8755 = !DILocation(line: 3941, column: 16, scope: !8704)
!8756 = !DILocation(line: 3942, column: 7, scope: !8704)
!8757 = !DILocation(line: 3942, column: 35, scope: !8704)
!8758 = !DILocation(line: 3942, column: 32, scope: !8704)
!8759 = !DILocation(line: 3942, column: 11, scope: !8704)
!8760 = !DILocalVariable(name: "result_width", scope: !8704, file: !3, line: 3943, type: !7)
!8761 = !DILocation(line: 3943, column: 15, scope: !8704)
!8762 = !DILocation(line: 3943, column: 30, scope: !8704)
!8763 = !DILocalVariable(name: "result_low", scope: !8704, file: !3, line: 3944, type: !619)
!8764 = !DILocation(line: 3944, column: 6, scope: !8704)
!8765 = !DILocation(line: 3946, column: 10, scope: !8704)
!8766 = !DILocation(line: 3946, column: 2, scope: !8704)
!8767 = !DILocation(line: 3949, column: 21, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 3947, column: 4)
!8769 = !DILocation(line: 3949, column: 42, scope: !8768)
!8770 = !DILocation(line: 3949, column: 19, scope: !8768)
!8771 = !DILocation(line: 3950, column: 19, scope: !8768)
!8772 = !DILocation(line: 3950, column: 17, scope: !8768)
!8773 = !DILocation(line: 3951, column: 6, scope: !8768)
!8774 = !DILocation(line: 3953, column: 19, scope: !8768)
!8775 = !DILocation(line: 3953, column: 17, scope: !8768)
!8776 = !DILocation(line: 3954, column: 6, scope: !8768)
!8777 = !DILocation(line: 3956, column: 21, scope: !8768)
!8778 = !DILocation(line: 3956, column: 30, scope: !8768)
!8779 = !DILocation(line: 3956, column: 28, scope: !8768)
!8780 = !DILocation(line: 3956, column: 19, scope: !8768)
!8781 = !DILocation(line: 3957, column: 19, scope: !8768)
!8782 = !DILocation(line: 3957, column: 26, scope: !8768)
!8783 = !DILocation(line: 3957, column: 24, scope: !8768)
!8784 = !DILocation(line: 3957, column: 17, scope: !8768)
!8785 = !DILocation(line: 3958, column: 6, scope: !8768)
!8786 = !DILocation(line: 3960, column: 10, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3960, column: 10)
!8788 = !DILocation(line: 3960, column: 17, scope: !8787)
!8789 = !DILocation(line: 3960, column: 10, scope: !8768)
!8790 = !DILocation(line: 3961, column: 8, scope: !8787)
!8791 = !DILocation(line: 3962, column: 12, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3962, column: 10)
!8793 = !DILocation(line: 3962, column: 29, scope: !8792)
!8794 = !DILocation(line: 3962, column: 34, scope: !8792)
!8795 = !DILocation(line: 3962, column: 10, scope: !8768)
!8796 = !DILocation(line: 3963, column: 23, scope: !8792)
!8797 = !DILocation(line: 3963, column: 21, scope: !8792)
!8798 = !DILocation(line: 3963, column: 8, scope: !8792)
!8799 = !DILocation(line: 3964, column: 6, scope: !8768)
!8800 = !DILocation(line: 3966, column: 10, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3966, column: 10)
!8802 = !DILocation(line: 3966, column: 17, scope: !8801)
!8803 = !DILocation(line: 3966, column: 10, scope: !8768)
!8804 = !DILocation(line: 3967, column: 8, scope: !8801)
!8805 = !DILocation(line: 3968, column: 21, scope: !8768)
!8806 = !DILocation(line: 3968, column: 19, scope: !8768)
!8807 = !DILocation(line: 3969, column: 6, scope: !8768)
!8808 = !DILocation(line: 3971, column: 10, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3971, column: 10)
!8810 = !DILocation(line: 3971, column: 17, scope: !8809)
!8811 = !DILocation(line: 3971, column: 10, scope: !8768)
!8812 = !DILocation(line: 3972, column: 8, scope: !8809)
!8813 = !DILocation(line: 3973, column: 12, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3973, column: 10)
!8815 = !DILocation(line: 3973, column: 29, scope: !8814)
!8816 = !DILocation(line: 3973, column: 34, scope: !8814)
!8817 = !DILocation(line: 3973, column: 10, scope: !8768)
!8818 = !DILocation(line: 3974, column: 23, scope: !8814)
!8819 = !DILocation(line: 3974, column: 21, scope: !8814)
!8820 = !DILocation(line: 3974, column: 8, scope: !8814)
!8821 = !DILocation(line: 3975, column: 19, scope: !8768)
!8822 = !DILocation(line: 3975, column: 17, scope: !8768)
!8823 = !DILocation(line: 3976, column: 6, scope: !8768)
!8824 = !DILocation(line: 3978, column: 10, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3978, column: 10)
!8826 = !DILocation(line: 3978, column: 17, scope: !8825)
!8827 = !DILocation(line: 3978, column: 10, scope: !8768)
!8828 = !DILocation(line: 3979, column: 8, scope: !8825)
!8829 = !DILocation(line: 3980, column: 21, scope: !8768)
!8830 = !DILocation(line: 3980, column: 19, scope: !8768)
!8831 = !DILocation(line: 3981, column: 19, scope: !8768)
!8832 = !DILocation(line: 3981, column: 17, scope: !8768)
!8833 = !DILocation(line: 3982, column: 6, scope: !8768)
!8834 = !DILocation(line: 3984, column: 6, scope: !8768)
!8835 = !DILocation(line: 3985, column: 4, scope: !8768)
!8836 = !DILocation(line: 3987, column: 6, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 3987, column: 6)
!8838 = !DILocation(line: 3987, column: 21, scope: !8837)
!8839 = !DILocation(line: 3987, column: 19, scope: !8837)
!8840 = !DILocation(line: 3987, column: 6, scope: !8704)
!8841 = !DILocation(line: 3988, column: 37, scope: !8837)
!8842 = !DILocation(line: 3988, column: 34, scope: !8837)
!8843 = !DILocation(line: 3988, column: 51, scope: !8837)
!8844 = !DILocation(line: 3988, column: 12, scope: !8837)
!8845 = !DILocation(line: 3988, column: 4, scope: !8837)
!8846 = !DILocation(line: 3990, column: 6, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 3990, column: 6)
!8848 = !DILocation(line: 3990, column: 17, scope: !8847)
!8849 = !DILocation(line: 3990, column: 6, scope: !8704)
!8850 = !DILocation(line: 3991, column: 39, scope: !8847)
!8851 = !DILocation(line: 3991, column: 36, scope: !8847)
!8852 = !DILocation(line: 3991, column: 51, scope: !8847)
!8853 = !DILocation(line: 3991, column: 15, scope: !8847)
!8854 = !DILocation(line: 3991, column: 12, scope: !8847)
!8855 = !DILocation(line: 3991, column: 4, scope: !8847)
!8856 = !DILocation(line: 4007, column: 7, scope: !8519)
!8857 = !DILocation(line: 4010, column: 11, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4010, column: 11)
!8859 = !DILocation(line: 4011, column: 4, scope: !8858)
!8860 = !DILocation(line: 4011, column: 7, scope: !8858)
!8861 = !DILocation(line: 4011, column: 28, scope: !8858)
!8862 = !DILocation(line: 4010, column: 11, scope: !8519)
!8863 = !DILocation(line: 4012, column: 35, scope: !8858)
!8864 = !DILocation(line: 4012, column: 32, scope: !8858)
!8865 = !DILocation(line: 4012, column: 57, scope: !8858)
!8866 = !DILocation(line: 4012, column: 10, scope: !8858)
!8867 = !DILocation(line: 4012, column: 2, scope: !8858)
!8868 = !DILocation(line: 4013, column: 7, scope: !8519)
!8869 = !DILocation(line: 4020, column: 11, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4020, column: 11)
!8871 = !DILocation(line: 4020, column: 37, scope: !8870)
!8872 = !DILocation(line: 4020, column: 40, scope: !8870)
!8873 = !DILocation(line: 4020, column: 71, scope: !8870)
!8874 = !DILocation(line: 4020, column: 11, scope: !8519)
!8875 = !DILocation(line: 4021, column: 12, scope: !8870)
!8876 = !DILocation(line: 4022, column: 28, scope: !8870)
!8877 = !DILocation(line: 4022, column: 44, scope: !8870)
!8878 = !DILocation(line: 4023, column: 7, scope: !8870)
!8879 = !DILocation(line: 4023, column: 16, scope: !8870)
!8880 = !DILocation(line: 4023, column: 28, scope: !8870)
!8881 = !DILocation(line: 4022, column: 7, scope: !8870)
!8882 = !DILocation(line: 4022, column: 5, scope: !8870)
!8883 = !DILocation(line: 4021, column: 10, scope: !8870)
!8884 = !DILocation(line: 4021, column: 2, scope: !8870)
!8885 = !DILocation(line: 4028, column: 11, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4028, column: 11)
!8887 = !DILocation(line: 4028, column: 56, scope: !8886)
!8888 = !DILocation(line: 4029, column: 4, scope: !8886)
!8889 = !DILocation(line: 4029, column: 8, scope: !8886)
!8890 = !DILocation(line: 4030, column: 8, scope: !8886)
!8891 = !DILocation(line: 4028, column: 11, scope: !8519)
!8892 = !DILocation(line: 4032, column: 36, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 4031, column: 2)
!8894 = !DILocation(line: 4032, column: 52, scope: !8893)
!8895 = !DILocation(line: 4033, column: 8, scope: !8893)
!8896 = !DILocation(line: 4033, column: 17, scope: !8893)
!8897 = !DILocation(line: 4033, column: 29, scope: !8893)
!8898 = !DILocation(line: 4032, column: 15, scope: !8893)
!8899 = !DILocation(line: 4032, column: 12, scope: !8893)
!8900 = !DILocation(line: 4050, column: 12, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 4050, column: 12)
!8902 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 4046, column: 6)
!8903 = !DILocation(line: 4051, column: 7, scope: !8901)
!8904 = !DILocation(line: 4051, column: 5, scope: !8901)
!8905 = !DILocation(line: 4050, column: 12, scope: !8902)
!8906 = !DILocation(line: 4052, column: 15, scope: !8901)
!8907 = !DILocation(line: 4053, column: 11, scope: !8901)
!8908 = !DILocation(line: 4053, column: 10, scope: !8901)
!8909 = !DILocation(line: 4053, column: 8, scope: !8901)
!8910 = !DILocation(line: 4052, column: 11, scope: !8901)
!8911 = !DILocation(line: 4052, column: 3, scope: !8901)
!8912 = !DILocation(line: 4055, column: 2, scope: !8893)
!8913 = !DILocation(line: 4056, column: 7, scope: !8519)
!8914 = !DILocation(line: 4068, column: 11, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4068, column: 11)
!8916 = !DILocation(line: 4069, column: 4, scope: !8915)
!8917 = !DILocation(line: 4069, column: 7, scope: !8915)
!8918 = !DILocation(line: 4069, column: 28, scope: !8915)
!8919 = !DILocation(line: 4070, column: 4, scope: !8915)
!8920 = !DILocation(line: 4070, column: 7, scope: !8915)
!8921 = !DILocation(line: 4070, column: 28, scope: !8915)
!8922 = !DILocation(line: 4071, column: 4, scope: !8915)
!8923 = !DILocation(line: 4071, column: 7, scope: !8915)
!8924 = !DILocation(line: 4071, column: 30, scope: !8915)
!8925 = !DILocation(line: 4071, column: 28, scope: !8915)
!8926 = !DILocation(line: 4068, column: 11, scope: !8519)
!8927 = !DILocalVariable(name: "inner_mode", scope: !8928, file: !3, line: 4073, type: !5)
!8928 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4072, column: 2)
!8929 = !DILocation(line: 4073, column: 22, scope: !8928)
!8930 = !DILocation(line: 4073, column: 35, scope: !8928)
!8931 = !DILocalVariable(name: "width", scope: !8928, file: !3, line: 4074, type: !7)
!8932 = !DILocation(line: 4074, column: 17, scope: !8928)
!8933 = !DILocation(line: 4074, column: 25, scope: !8928)
!8934 = !DILocalVariable(name: "count", scope: !8928, file: !3, line: 4075, type: !619)
!8935 = !DILocation(line: 4075, column: 8, scope: !8928)
!8936 = !DILocation(line: 4075, column: 16, scope: !8928)
!8937 = !DILocalVariable(name: "mode_mask", scope: !8928, file: !3, line: 4076, type: !621)
!8938 = !DILocation(line: 4076, column: 27, scope: !8928)
!8939 = !DILocation(line: 4076, column: 39, scope: !8928)
!8940 = !DILocalVariable(name: "op_nonzero", scope: !8928, file: !3, line: 4077, type: !621)
!8941 = !DILocation(line: 4077, column: 27, scope: !8928)
!8942 = !DILocation(line: 4078, column: 27, scope: !8928)
!8943 = !DILocation(line: 4078, column: 40, scope: !8928)
!8944 = !DILocation(line: 4079, column: 6, scope: !8928)
!8945 = !DILocation(line: 4079, column: 15, scope: !8928)
!8946 = !DILocation(line: 4079, column: 27, scope: !8928)
!8947 = !DILocation(line: 4078, column: 6, scope: !8928)
!8948 = !DILocalVariable(name: "inner", scope: !8928, file: !3, line: 4080, type: !621)
!8949 = !DILocation(line: 4080, column: 27, scope: !8928)
!8950 = !DILocation(line: 4080, column: 35, scope: !8928)
!8951 = !DILocation(line: 4080, column: 48, scope: !8928)
!8952 = !DILocation(line: 4080, column: 46, scope: !8928)
!8953 = !DILocalVariable(name: "outer", scope: !8928, file: !3, line: 4081, type: !621)
!8954 = !DILocation(line: 4081, column: 27, scope: !8928)
!8955 = !DILocation(line: 4083, column: 8, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 4083, column: 8)
!8957 = !DILocation(line: 4083, column: 21, scope: !8956)
!8958 = !DILocation(line: 4083, column: 19, scope: !8956)
!8959 = !DILocation(line: 4083, column: 8, scope: !8928)
!8960 = !DILocation(line: 4084, column: 15, scope: !8956)
!8961 = !DILocation(line: 4084, column: 28, scope: !8956)
!8962 = !DILocation(line: 4084, column: 26, scope: !8956)
!8963 = !DILocation(line: 4084, column: 39, scope: !8956)
!8964 = !DILocation(line: 4084, column: 38, scope: !8956)
!8965 = !DILocation(line: 4084, column: 36, scope: !8956)
!8966 = !DILocation(line: 4084, column: 12, scope: !8956)
!8967 = !DILocation(line: 4084, column: 6, scope: !8956)
!8968 = !DILocation(line: 4086, column: 8, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 4086, column: 8)
!8970 = !DILocation(line: 4086, column: 13, scope: !8969)
!8971 = !DILocation(line: 4086, column: 8, scope: !8928)
!8972 = !DILocation(line: 4087, column: 16, scope: !8969)
!8973 = !DILocation(line: 4087, column: 12, scope: !8969)
!8974 = !DILocation(line: 4087, column: 6, scope: !8969)
!8975 = !DILocation(line: 4088, column: 13, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 4088, column: 13)
!8977 = !DILocation(line: 4088, column: 18, scope: !8976)
!8978 = !DILocation(line: 4088, column: 13, scope: !8969)
!8979 = !DILocation(line: 4090, column: 18, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 4089, column: 6)
!8981 = !DILocation(line: 4090, column: 14, scope: !8980)
!8982 = !DILocation(line: 4095, column: 12, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 4095, column: 12)
!8984 = !DILocation(line: 4095, column: 43, scope: !8983)
!8985 = !DILocation(line: 4095, column: 49, scope: !8983)
!8986 = !DILocation(line: 4095, column: 55, scope: !8983)
!8987 = !DILocation(line: 4095, column: 53, scope: !8983)
!8988 = !DILocation(line: 4095, column: 39, scope: !8983)
!8989 = !DILocation(line: 4095, column: 18, scope: !8983)
!8990 = !DILocation(line: 4095, column: 12, scope: !8980)
!8991 = !DILocation(line: 4096, column: 35, scope: !8983)
!8992 = !DILocation(line: 4096, column: 32, scope: !8983)
!8993 = !DILocation(line: 4096, column: 42, scope: !8983)
!8994 = !DILocation(line: 4096, column: 51, scope: !8983)
!8995 = !DILocation(line: 4096, column: 59, scope: !8983)
!8996 = !DILocation(line: 4096, column: 57, scope: !8983)
!8997 = !DILocation(line: 4096, column: 47, scope: !8983)
!8998 = !DILocation(line: 4096, column: 9, scope: !8983)
!8999 = !DILocation(line: 4096, column: 3, scope: !8983)
!9000 = !DILocation(line: 4097, column: 6, scope: !8980)
!9001 = !DILocation(line: 4098, column: 13, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 4098, column: 13)
!9003 = !DILocation(line: 4098, column: 18, scope: !9002)
!9004 = !DILocation(line: 4098, column: 13, scope: !8976)
!9005 = !DILocation(line: 4099, column: 16, scope: !9002)
!9006 = !DILocation(line: 4099, column: 12, scope: !9002)
!9007 = !DILocation(line: 4099, column: 6, scope: !9002)
!9008 = !DILocation(line: 4101, column: 16, scope: !9002)
!9009 = !DILocation(line: 4101, column: 26, scope: !9002)
!9010 = !DILocation(line: 4101, column: 34, scope: !9002)
!9011 = !DILocation(line: 4101, column: 32, scope: !9002)
!9012 = !DILocation(line: 4101, column: 22, scope: !9002)
!9013 = !DILocation(line: 4102, column: 12, scope: !9002)
!9014 = !DILocation(line: 4102, column: 22, scope: !9002)
!9015 = !DILocation(line: 4102, column: 31, scope: !9002)
!9016 = !DILocation(line: 4102, column: 39, scope: !9002)
!9017 = !DILocation(line: 4102, column: 37, scope: !9002)
!9018 = !DILocation(line: 4102, column: 28, scope: !9002)
!9019 = !DILocation(line: 4102, column: 18, scope: !9002)
!9020 = !DILocation(line: 4102, column: 9, scope: !9002)
!9021 = !DILocation(line: 4102, column: 51, scope: !9002)
!9022 = !DILocation(line: 4102, column: 49, scope: !9002)
!9023 = !DILocation(line: 4101, column: 12, scope: !9002)
!9024 = !DILocation(line: 4104, column: 16, scope: !8928)
!9025 = !DILocation(line: 4104, column: 24, scope: !8928)
!9026 = !DILocation(line: 4104, column: 22, scope: !8928)
!9027 = !DILocation(line: 4104, column: 12, scope: !8928)
!9028 = !DILocation(line: 4105, column: 2, scope: !8928)
!9029 = !DILocation(line: 4106, column: 7, scope: !8519)
!9030 = !DILocation(line: 4111, column: 52, scope: !8519)
!9031 = !DILocation(line: 4111, column: 40, scope: !8519)
!9032 = !DILocation(line: 4111, column: 36, scope: !8519)
!9033 = !DILocation(line: 4111, column: 66, scope: !8519)
!9034 = !DILocation(line: 4111, column: 15, scope: !8519)
!9035 = !DILocation(line: 4112, column: 7, scope: !8519)
!9036 = !DILocation(line: 4120, column: 10, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4117, column: 11)
!9038 = !DILocation(line: 4121, column: 7, scope: !8519)
!9039 = !DILocation(line: 4129, column: 10, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4126, column: 11)
!9041 = !DILocation(line: 4130, column: 7, scope: !8519)
!9042 = !DILocation(line: 4133, column: 15, scope: !8519)
!9043 = !DILocation(line: 4134, column: 7, scope: !8519)
!9044 = !DILocalVariable(name: "nonzero_true", scope: !9045, file: !3, line: 4138, type: !621)
!9045 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 4137, column: 7)
!9046 = !DILocation(line: 4138, column: 25, scope: !9045)
!9047 = !DILocation(line: 4139, column: 25, scope: !9045)
!9048 = !DILocation(line: 4139, column: 38, scope: !9045)
!9049 = !DILocation(line: 4140, column: 11, scope: !9045)
!9050 = !DILocation(line: 4140, column: 20, scope: !9045)
!9051 = !DILocation(line: 4140, column: 32, scope: !9045)
!9052 = !DILocation(line: 4139, column: 4, scope: !9045)
!9053 = !DILocation(line: 4144, column: 7, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 4144, column: 6)
!9055 = !DILocation(line: 4144, column: 17, scope: !9054)
!9056 = !DILocation(line: 4144, column: 15, scope: !9054)
!9057 = !DILocation(line: 4144, column: 34, scope: !9054)
!9058 = !DILocation(line: 4144, column: 31, scope: !9054)
!9059 = !DILocation(line: 4144, column: 6, scope: !9045)
!9060 = !DILocation(line: 4145, column: 15, scope: !9054)
!9061 = !DILocation(line: 4146, column: 37, scope: !9054)
!9062 = !DILocation(line: 4146, column: 50, scope: !9054)
!9063 = !DILocation(line: 4147, column: 10, scope: !9054)
!9064 = !DILocation(line: 4147, column: 19, scope: !9054)
!9065 = !DILocation(line: 4147, column: 31, scope: !9054)
!9066 = !DILocation(line: 4146, column: 16, scope: !9054)
!9067 = !DILocation(line: 4146, column: 14, scope: !9054)
!9068 = !DILocation(line: 4145, column: 12, scope: !9054)
!9069 = !DILocation(line: 4145, column: 4, scope: !9054)
!9070 = !DILocation(line: 4149, column: 7, scope: !8519)
!9071 = !DILocation(line: 4152, column: 7, scope: !8519)
!9072 = !DILocation(line: 4155, column: 10, scope: !8429)
!9073 = !DILocation(line: 4155, column: 3, scope: !8429)
!9074 = !DILocation(line: 4156, column: 1, scope: !8429)
!9075 = distinct !DISubprogram(name: "num_sign_bit_copies1", scope: !3, file: !3, line: 4219, type: !7599, scopeLine: 4222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1738)
!9076 = !DILocalVariable(name: "x", arg: 1, scope: !9075, file: !3, line: 4219, type: !1713)
!9077 = !DILocation(line: 4219, column: 33, scope: !9075)
!9078 = !DILocalVariable(name: "mode", arg: 2, scope: !9075, file: !3, line: 4219, type: !5)
!9079 = !DILocation(line: 4219, column: 54, scope: !9075)
!9080 = !DILocalVariable(name: "known_x", arg: 3, scope: !9075, file: !3, line: 4219, type: !1713)
!9081 = !DILocation(line: 4219, column: 70, scope: !9075)
!9082 = !DILocalVariable(name: "known_mode", arg: 4, scope: !9075, file: !3, line: 4220, type: !5)
!9083 = !DILocation(line: 4220, column: 27, scope: !9075)
!9084 = !DILocalVariable(name: "known_ret", arg: 5, scope: !9075, file: !3, line: 4221, type: !7)
!9085 = !DILocation(line: 4221, column: 22, scope: !9075)
!9086 = !DILocalVariable(name: "code", scope: !9075, file: !3, line: 4223, type: !377)
!9087 = !DILocation(line: 4223, column: 17, scope: !9075)
!9088 = !DILocation(line: 4223, column: 24, scope: !9075)
!9089 = !DILocalVariable(name: "bitwidth", scope: !9075, file: !3, line: 4224, type: !7)
!9090 = !DILocation(line: 4224, column: 16, scope: !9075)
!9091 = !DILocation(line: 4224, column: 27, scope: !9075)
!9092 = !DILocalVariable(name: "num0", scope: !9075, file: !3, line: 4225, type: !619)
!9093 = !DILocation(line: 4225, column: 7, scope: !9075)
!9094 = !DILocalVariable(name: "num1", scope: !9075, file: !3, line: 4225, type: !619)
!9095 = !DILocation(line: 4225, column: 13, scope: !9075)
!9096 = !DILocalVariable(name: "result", scope: !9075, file: !3, line: 4225, type: !619)
!9097 = !DILocation(line: 4225, column: 19, scope: !9075)
!9098 = !DILocalVariable(name: "nonzero", scope: !9075, file: !3, line: 4226, type: !621)
!9099 = !DILocation(line: 4226, column: 26, scope: !9075)
!9100 = !DILocation(line: 4232, column: 7, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4232, column: 7)
!9102 = !DILocation(line: 4232, column: 12, scope: !9101)
!9103 = !DILocation(line: 4232, column: 7, scope: !9075)
!9104 = !DILocation(line: 4233, column: 12, scope: !9101)
!9105 = !DILocation(line: 4233, column: 10, scope: !9101)
!9106 = !DILocation(line: 4233, column: 5, scope: !9101)
!9107 = !DILocation(line: 4235, column: 7, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4235, column: 7)
!9109 = !DILocation(line: 4235, column: 12, scope: !9108)
!9110 = !DILocation(line: 4235, column: 24, scope: !9108)
!9111 = !DILocation(line: 4235, column: 27, scope: !9108)
!9112 = !DILocation(line: 4235, column: 47, scope: !9108)
!9113 = !DILocation(line: 4235, column: 50, scope: !9108)
!9114 = !DILocation(line: 4236, column: 7, scope: !9108)
!9115 = !DILocation(line: 4236, column: 10, scope: !9108)
!9116 = !DILocation(line: 4236, column: 39, scope: !9108)
!9117 = !DILocation(line: 4236, column: 42, scope: !9108)
!9118 = !DILocation(line: 4235, column: 7, scope: !9075)
!9119 = !DILocation(line: 4237, column: 5, scope: !9108)
!9120 = !DILocation(line: 4240, column: 7, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4240, column: 7)
!9122 = !DILocation(line: 4240, column: 18, scope: !9121)
!9123 = !DILocation(line: 4240, column: 16, scope: !9121)
!9124 = !DILocation(line: 4240, column: 7, scope: !9075)
!9125 = !DILocation(line: 4242, column: 42, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 4241, column: 5)
!9127 = !DILocation(line: 4242, column: 45, scope: !9126)
!9128 = !DILocation(line: 4243, column: 7, scope: !9126)
!9129 = !DILocation(line: 4243, column: 16, scope: !9126)
!9130 = !DILocation(line: 4243, column: 28, scope: !9126)
!9131 = !DILocation(line: 4242, column: 14, scope: !9126)
!9132 = !DILocation(line: 4242, column: 12, scope: !9126)
!9133 = !DILocation(line: 4244, column: 14, scope: !9126)
!9134 = !DILocation(line: 4244, column: 7, scope: !9126)
!9135 = !DILocation(line: 4248, column: 7, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4248, column: 7)
!9137 = !DILocation(line: 4248, column: 20, scope: !9136)
!9138 = !DILocation(line: 4248, column: 32, scope: !9136)
!9139 = !DILocation(line: 4248, column: 35, scope: !9136)
!9140 = !DILocation(line: 4248, column: 46, scope: !9136)
!9141 = !DILocation(line: 4248, column: 44, scope: !9136)
!9142 = !DILocation(line: 4248, column: 7, scope: !9075)
!9143 = !DILocation(line: 4254, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 4249, column: 5)
!9145 = !DILocation(line: 4268, column: 11, scope: !9075)
!9146 = !DILocation(line: 4268, column: 3, scope: !9075)
!9147 = !DILocalVariable(name: "copies_for_hook", scope: !9148, file: !3, line: 4285, type: !7)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4284, column: 7)
!9149 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4269, column: 5)
!9150 = !DILocation(line: 4285, column: 15, scope: !9148)
!9151 = !DILocalVariable(name: "copies", scope: !9148, file: !3, line: 4285, type: !7)
!9152 = !DILocation(line: 4285, column: 36, scope: !9148)
!9153 = !DILocalVariable(name: "new_rtx", scope: !9148, file: !3, line: 4286, type: !622)
!9154 = !DILocation(line: 4286, column: 6, scope: !9148)
!9155 = !DILocation(line: 4286, column: 26, scope: !9148)
!9156 = !DILocation(line: 4286, column: 51, scope: !9148)
!9157 = !DILocation(line: 4286, column: 54, scope: !9148)
!9158 = !DILocation(line: 4286, column: 60, scope: !9148)
!9159 = !DILocation(line: 4287, column: 12, scope: !9148)
!9160 = !DILocation(line: 4287, column: 24, scope: !9148)
!9161 = !DILocation(line: 4286, column: 16, scope: !9148)
!9162 = !DILocation(line: 4290, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 4290, column: 6)
!9164 = !DILocation(line: 4290, column: 6, scope: !9148)
!9165 = !DILocation(line: 4291, column: 41, scope: !9163)
!9166 = !DILocation(line: 4291, column: 50, scope: !9163)
!9167 = !DILocation(line: 4291, column: 56, scope: !9163)
!9168 = !DILocation(line: 4292, column: 13, scope: !9163)
!9169 = !DILocation(line: 4292, column: 25, scope: !9163)
!9170 = !DILocation(line: 4291, column: 13, scope: !9163)
!9171 = !DILocation(line: 4291, column: 11, scope: !9163)
!9172 = !DILocation(line: 4291, column: 4, scope: !9163)
!9173 = !DILocation(line: 4294, column: 6, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 4294, column: 6)
!9175 = !DILocation(line: 4294, column: 13, scope: !9174)
!9176 = !DILocation(line: 4294, column: 17, scope: !9174)
!9177 = !DILocation(line: 4294, column: 20, scope: !9174)
!9178 = !DILocation(line: 4294, column: 36, scope: !9174)
!9179 = !DILocation(line: 4294, column: 6, scope: !9148)
!9180 = !DILocation(line: 4295, column: 11, scope: !9174)
!9181 = !DILocation(line: 4295, column: 4, scope: !9174)
!9182 = !DILocation(line: 4299, column: 7, scope: !9149)
!9183 = !DILocation(line: 4308, column: 7, scope: !9149)
!9184 = !DILocation(line: 4313, column: 17, scope: !9149)
!9185 = !DILocation(line: 4313, column: 30, scope: !9149)
!9186 = !DILocation(line: 4313, column: 28, scope: !9149)
!9187 = !DILocation(line: 4313, column: 15, scope: !9149)
!9188 = !DILocation(line: 4314, column: 11, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4314, column: 11)
!9190 = !DILocation(line: 4314, column: 20, scope: !9189)
!9191 = !DILocation(line: 4315, column: 4, scope: !9189)
!9192 = !DILocation(line: 4315, column: 8, scope: !9189)
!9193 = !DILocation(line: 4315, column: 41, scope: !9189)
!9194 = !DILocation(line: 4315, column: 50, scope: !9189)
!9195 = !DILocation(line: 4315, column: 37, scope: !9189)
!9196 = !DILocation(line: 4315, column: 16, scope: !9189)
!9197 = !DILocation(line: 4315, column: 57, scope: !9189)
!9198 = !DILocation(line: 4314, column: 11, scope: !9149)
!9199 = !DILocation(line: 4316, column: 14, scope: !9189)
!9200 = !DILocation(line: 4316, column: 13, scope: !9189)
!9201 = !DILocation(line: 4316, column: 25, scope: !9189)
!9202 = !DILocation(line: 4316, column: 23, scope: !9189)
!9203 = !DILocation(line: 4316, column: 10, scope: !9189)
!9204 = !DILocation(line: 4316, column: 2, scope: !9189)
!9205 = !DILocation(line: 4318, column: 15, scope: !9149)
!9206 = !DILocation(line: 4318, column: 23, scope: !9149)
!9207 = !DILocation(line: 4318, column: 30, scope: !9149)
!9208 = !DILocation(line: 4318, column: 41, scope: !9149)
!9209 = !DILocation(line: 4318, column: 64, scope: !9149)
!9210 = !DILocation(line: 4318, column: 52, scope: !9149)
!9211 = !DILocation(line: 4318, column: 50, scope: !9149)
!9212 = !DILocation(line: 4318, column: 73, scope: !9149)
!9213 = !DILocation(line: 4318, column: 7, scope: !9149)
!9214 = !DILocation(line: 4325, column: 11, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4325, column: 11)
!9216 = !DILocation(line: 4325, column: 37, scope: !9215)
!9217 = !DILocation(line: 4325, column: 42, scope: !9215)
!9218 = !DILocation(line: 4325, column: 11, scope: !9149)
!9219 = !DILocation(line: 4327, column: 39, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 4326, column: 2)
!9221 = !DILocation(line: 4327, column: 55, scope: !9220)
!9222 = !DILocation(line: 4328, column: 11, scope: !9220)
!9223 = !DILocation(line: 4328, column: 20, scope: !9220)
!9224 = !DILocation(line: 4328, column: 32, scope: !9220)
!9225 = !DILocation(line: 4327, column: 11, scope: !9220)
!9226 = !DILocation(line: 4327, column: 9, scope: !9220)
!9227 = !DILocation(line: 4329, column: 11, scope: !9220)
!9228 = !DILocation(line: 4329, column: 4, scope: !9220)
!9229 = !DILocation(line: 4335, column: 11, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4335, column: 11)
!9231 = !DILocation(line: 4335, column: 23, scope: !9230)
!9232 = !DILocation(line: 4335, column: 20, scope: !9230)
!9233 = !DILocation(line: 4335, column: 11, scope: !9149)
!9234 = !DILocation(line: 4337, column: 39, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 4336, column: 2)
!9236 = !DILocation(line: 4338, column: 11, scope: !9235)
!9237 = !DILocation(line: 4338, column: 20, scope: !9235)
!9238 = !DILocation(line: 4338, column: 32, scope: !9235)
!9239 = !DILocation(line: 4337, column: 11, scope: !9235)
!9240 = !DILocation(line: 4337, column: 9, scope: !9235)
!9241 = !DILocation(line: 4339, column: 11, scope: !9235)
!9242 = !DILocation(line: 4339, column: 4, scope: !9235)
!9243 = !DILocation(line: 4364, column: 7, scope: !9149)
!9244 = !DILocation(line: 4367, column: 11, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4367, column: 11)
!9246 = !DILocation(line: 4367, column: 11, scope: !9149)
!9247 = !DILocation(line: 4368, column: 9, scope: !9245)
!9248 = !DILocation(line: 4368, column: 2, scope: !9245)
!9249 = !DILocation(line: 4369, column: 7, scope: !9149)
!9250 = !DILocation(line: 4372, column: 15, scope: !9149)
!9251 = !DILocation(line: 4372, column: 26, scope: !9149)
!9252 = !DILocation(line: 4372, column: 24, scope: !9149)
!9253 = !DILocation(line: 4373, column: 38, scope: !9149)
!9254 = !DILocation(line: 4374, column: 10, scope: !9149)
!9255 = !DILocation(line: 4374, column: 19, scope: !9149)
!9256 = !DILocation(line: 4374, column: 31, scope: !9149)
!9257 = !DILocation(line: 4373, column: 10, scope: !9149)
!9258 = !DILocation(line: 4373, column: 8, scope: !9149)
!9259 = !DILocation(line: 4372, column: 7, scope: !9149)
!9260 = !DILocation(line: 4378, column: 42, scope: !9149)
!9261 = !DILocation(line: 4379, column: 7, scope: !9149)
!9262 = !DILocation(line: 4379, column: 16, scope: !9149)
!9263 = !DILocation(line: 4379, column: 28, scope: !9149)
!9264 = !DILocation(line: 4378, column: 14, scope: !9149)
!9265 = !DILocation(line: 4378, column: 12, scope: !9149)
!9266 = !DILocation(line: 4380, column: 14, scope: !9149)
!9267 = !DILocation(line: 4380, column: 7, scope: !9149)
!9268 = !DILocation(line: 4384, column: 42, scope: !9149)
!9269 = !DILocation(line: 4384, column: 55, scope: !9149)
!9270 = !DILocation(line: 4385, column: 7, scope: !9149)
!9271 = !DILocation(line: 4385, column: 16, scope: !9149)
!9272 = !DILocation(line: 4385, column: 28, scope: !9149)
!9273 = !DILocation(line: 4384, column: 14, scope: !9149)
!9274 = !DILocation(line: 4384, column: 7, scope: !9149)
!9275 = !DILocation(line: 4391, column: 11, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4391, column: 11)
!9277 = !DILocation(line: 4392, column: 4, scope: !9276)
!9278 = !DILocation(line: 4392, column: 7, scope: !9276)
!9279 = !DILocation(line: 4392, column: 28, scope: !9276)
!9280 = !DILocation(line: 4393, column: 4, scope: !9276)
!9281 = !DILocation(line: 4393, column: 7, scope: !9276)
!9282 = !DILocation(line: 4393, column: 36, scope: !9276)
!9283 = !DILocation(line: 4393, column: 30, scope: !9276)
!9284 = !DILocation(line: 4393, column: 28, scope: !9276)
!9285 = !DILocation(line: 4391, column: 11, scope: !9149)
!9286 = !DILocation(line: 4395, column: 39, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 4394, column: 2)
!9288 = !DILocation(line: 4395, column: 52, scope: !9287)
!9289 = !DILocation(line: 4396, column: 11, scope: !9287)
!9290 = !DILocation(line: 4396, column: 20, scope: !9287)
!9291 = !DILocation(line: 4396, column: 32, scope: !9287)
!9292 = !DILocation(line: 4395, column: 11, scope: !9287)
!9293 = !DILocation(line: 4395, column: 9, scope: !9287)
!9294 = !DILocation(line: 4397, column: 11, scope: !9287)
!9295 = !DILocation(line: 4397, column: 4, scope: !9287)
!9296 = !DILocation(line: 4400, column: 7, scope: !9149)
!9297 = !DILocation(line: 4407, column: 42, scope: !9149)
!9298 = !DILocation(line: 4407, column: 55, scope: !9149)
!9299 = !DILocation(line: 4408, column: 7, scope: !9149)
!9300 = !DILocation(line: 4408, column: 16, scope: !9149)
!9301 = !DILocation(line: 4408, column: 28, scope: !9149)
!9302 = !DILocation(line: 4407, column: 14, scope: !9149)
!9303 = !DILocation(line: 4407, column: 12, scope: !9149)
!9304 = !DILocation(line: 4409, column: 11, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4409, column: 11)
!9306 = !DILocation(line: 4409, column: 20, scope: !9305)
!9307 = !DILocation(line: 4409, column: 11, scope: !9149)
!9308 = !DILocation(line: 4410, column: 9, scope: !9305)
!9309 = !DILocation(line: 4410, column: 14, scope: !9305)
!9310 = !DILocation(line: 4410, column: 20, scope: !9305)
!9311 = !DILocation(line: 4410, column: 25, scope: !9305)
!9312 = !DILocation(line: 4410, column: 2, scope: !9305)
!9313 = !DILocation(line: 4412, column: 31, scope: !9149)
!9314 = !DILocation(line: 4412, column: 44, scope: !9149)
!9315 = !DILocation(line: 4412, column: 17, scope: !9149)
!9316 = !DILocation(line: 4412, column: 15, scope: !9149)
!9317 = !DILocation(line: 4413, column: 11, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4413, column: 11)
!9319 = !DILocation(line: 4413, column: 19, scope: !9318)
!9320 = !DILocation(line: 4413, column: 11, scope: !9149)
!9321 = !DILocation(line: 4414, column: 9, scope: !9318)
!9322 = !DILocation(line: 4414, column: 2, scope: !9318)
!9323 = !DILocation(line: 4416, column: 11, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4416, column: 11)
!9325 = !DILocation(line: 4416, column: 16, scope: !9324)
!9326 = !DILocation(line: 4417, column: 4, scope: !9324)
!9327 = !DILocation(line: 4417, column: 31, scope: !9324)
!9328 = !DILocation(line: 4417, column: 40, scope: !9324)
!9329 = !DILocation(line: 4417, column: 27, scope: !9324)
!9330 = !DILocation(line: 4417, column: 48, scope: !9324)
!9331 = !DILocation(line: 4417, column: 46, scope: !9324)
!9332 = !DILocation(line: 4416, column: 11, scope: !9149)
!9333 = !DILocation(line: 4418, column: 6, scope: !9324)
!9334 = !DILocation(line: 4418, column: 2, scope: !9324)
!9335 = !DILocation(line: 4420, column: 14, scope: !9149)
!9336 = !DILocation(line: 4420, column: 7, scope: !9149)
!9337 = !DILocation(line: 4426, column: 42, scope: !9149)
!9338 = !DILocation(line: 4426, column: 55, scope: !9149)
!9339 = !DILocation(line: 4427, column: 7, scope: !9149)
!9340 = !DILocation(line: 4427, column: 16, scope: !9149)
!9341 = !DILocation(line: 4427, column: 28, scope: !9149)
!9342 = !DILocation(line: 4426, column: 14, scope: !9149)
!9343 = !DILocation(line: 4426, column: 12, scope: !9149)
!9344 = !DILocation(line: 4428, column: 42, scope: !9149)
!9345 = !DILocation(line: 4428, column: 55, scope: !9149)
!9346 = !DILocation(line: 4429, column: 7, scope: !9149)
!9347 = !DILocation(line: 4429, column: 16, scope: !9149)
!9348 = !DILocation(line: 4429, column: 28, scope: !9149)
!9349 = !DILocation(line: 4428, column: 14, scope: !9149)
!9350 = !DILocation(line: 4428, column: 12, scope: !9149)
!9351 = !DILocation(line: 4434, column: 11, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4434, column: 11)
!9353 = !DILocation(line: 4434, column: 16, scope: !9352)
!9354 = !DILocation(line: 4435, column: 4, scope: !9352)
!9355 = !DILocation(line: 4435, column: 7, scope: !9352)
!9356 = !DILocation(line: 4435, column: 12, scope: !9352)
!9357 = !DILocation(line: 4436, column: 4, scope: !9352)
!9358 = !DILocation(line: 4436, column: 7, scope: !9352)
!9359 = !DILocation(line: 4436, column: 16, scope: !9352)
!9360 = !DILocation(line: 4437, column: 4, scope: !9352)
!9361 = !DILocation(line: 4437, column: 7, scope: !9352)
!9362 = !DILocation(line: 4438, column: 4, scope: !9352)
!9363 = !DILocation(line: 4438, column: 9, scope: !9352)
!9364 = !DILocation(line: 4438, column: 55, scope: !9352)
!9365 = !DILocation(line: 4438, column: 64, scope: !9352)
!9366 = !DILocation(line: 4438, column: 51, scope: !9352)
!9367 = !DILocation(line: 4438, column: 30, scope: !9352)
!9368 = !DILocation(line: 4434, column: 11, scope: !9149)
!9369 = !DILocation(line: 4439, column: 9, scope: !9352)
!9370 = !DILocation(line: 4439, column: 2, scope: !9352)
!9371 = !DILocation(line: 4442, column: 11, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4442, column: 11)
!9373 = !DILocation(line: 4442, column: 16, scope: !9372)
!9374 = !DILocation(line: 4443, column: 4, scope: !9372)
!9375 = !DILocation(line: 4443, column: 7, scope: !9372)
!9376 = !DILocation(line: 4443, column: 12, scope: !9372)
!9377 = !DILocation(line: 4444, column: 4, scope: !9372)
!9378 = !DILocation(line: 4444, column: 7, scope: !9372)
!9379 = !DILocation(line: 4444, column: 16, scope: !9372)
!9380 = !DILocation(line: 4445, column: 4, scope: !9372)
!9381 = !DILocation(line: 4445, column: 7, scope: !9372)
!9382 = !DILocation(line: 4446, column: 4, scope: !9372)
!9383 = !DILocation(line: 4446, column: 8, scope: !9372)
!9384 = !DILocation(line: 4446, column: 54, scope: !9372)
!9385 = !DILocation(line: 4446, column: 63, scope: !9372)
!9386 = !DILocation(line: 4446, column: 50, scope: !9372)
!9387 = !DILocation(line: 4446, column: 29, scope: !9372)
!9388 = !DILocation(line: 4442, column: 11, scope: !9149)
!9389 = !DILocation(line: 4447, column: 9, scope: !9372)
!9390 = !DILocation(line: 4447, column: 2, scope: !9372)
!9391 = !DILocation(line: 4449, column: 14, scope: !9149)
!9392 = !DILocation(line: 4449, column: 7, scope: !9149)
!9393 = !DILocation(line: 4457, column: 11, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4457, column: 11)
!9395 = !DILocation(line: 4457, column: 16, scope: !9394)
!9396 = !DILocation(line: 4457, column: 24, scope: !9394)
!9397 = !DILocation(line: 4457, column: 27, scope: !9394)
!9398 = !DILocation(line: 4457, column: 42, scope: !9394)
!9399 = !DILocation(line: 4457, column: 39, scope: !9394)
!9400 = !DILocation(line: 4458, column: 4, scope: !9394)
!9401 = !DILocation(line: 4458, column: 7, scope: !9394)
!9402 = !DILocation(line: 4458, column: 16, scope: !9394)
!9403 = !DILocation(line: 4457, column: 11, scope: !9149)
!9404 = !DILocation(line: 4460, column: 28, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 4459, column: 2)
!9406 = !DILocation(line: 4460, column: 41, scope: !9405)
!9407 = !DILocation(line: 4460, column: 14, scope: !9405)
!9408 = !DILocation(line: 4460, column: 12, scope: !9405)
!9409 = !DILocation(line: 4461, column: 32, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 4461, column: 8)
!9411 = !DILocation(line: 4461, column: 41, scope: !9410)
!9412 = !DILocation(line: 4461, column: 28, scope: !9410)
!9413 = !DILocation(line: 4461, column: 49, scope: !9410)
!9414 = !DILocation(line: 4461, column: 47, scope: !9410)
!9415 = !DILocation(line: 4461, column: 58, scope: !9410)
!9416 = !DILocation(line: 4461, column: 8, scope: !9405)
!9417 = !DILocation(line: 4462, column: 14, scope: !9410)
!9418 = !DILocation(line: 4462, column: 22, scope: !9410)
!9419 = !DILocation(line: 4462, column: 27, scope: !9410)
!9420 = !DILocation(line: 4462, column: 30, scope: !9410)
!9421 = !DILocation(line: 4462, column: 38, scope: !9410)
!9422 = !DILocation(line: 4462, column: 45, scope: !9410)
!9423 = !DILocation(line: 4463, column: 9, scope: !9410)
!9424 = !DILocation(line: 4463, column: 32, scope: !9410)
!9425 = !DILocation(line: 4463, column: 20, scope: !9410)
!9426 = !DILocation(line: 4463, column: 18, scope: !9410)
!9427 = !DILocation(line: 4463, column: 41, scope: !9410)
!9428 = !DILocation(line: 4462, column: 6, scope: !9410)
!9429 = !DILocation(line: 4464, column: 2, scope: !9405)
!9430 = !DILocation(line: 4466, column: 42, scope: !9149)
!9431 = !DILocation(line: 4466, column: 55, scope: !9149)
!9432 = !DILocation(line: 4467, column: 7, scope: !9149)
!9433 = !DILocation(line: 4467, column: 16, scope: !9149)
!9434 = !DILocation(line: 4467, column: 28, scope: !9149)
!9435 = !DILocation(line: 4466, column: 14, scope: !9149)
!9436 = !DILocation(line: 4466, column: 12, scope: !9149)
!9437 = !DILocation(line: 4468, column: 42, scope: !9149)
!9438 = !DILocation(line: 4468, column: 55, scope: !9149)
!9439 = !DILocation(line: 4469, column: 7, scope: !9149)
!9440 = !DILocation(line: 4469, column: 16, scope: !9149)
!9441 = !DILocation(line: 4469, column: 28, scope: !9149)
!9442 = !DILocation(line: 4468, column: 14, scope: !9149)
!9443 = !DILocation(line: 4468, column: 12, scope: !9149)
!9444 = !DILocation(line: 4470, column: 16, scope: !9149)
!9445 = !DILocation(line: 4470, column: 14, scope: !9149)
!9446 = !DILocation(line: 4487, column: 14, scope: !9149)
!9447 = !DILocation(line: 4487, column: 7, scope: !9149)
!9448 = !DILocation(line: 4495, column: 42, scope: !9149)
!9449 = !DILocation(line: 4495, column: 55, scope: !9149)
!9450 = !DILocation(line: 4496, column: 7, scope: !9149)
!9451 = !DILocation(line: 4496, column: 16, scope: !9149)
!9452 = !DILocation(line: 4496, column: 28, scope: !9149)
!9453 = !DILocation(line: 4495, column: 14, scope: !9149)
!9454 = !DILocation(line: 4495, column: 12, scope: !9149)
!9455 = !DILocation(line: 4497, column: 42, scope: !9149)
!9456 = !DILocation(line: 4497, column: 55, scope: !9149)
!9457 = !DILocation(line: 4498, column: 7, scope: !9149)
!9458 = !DILocation(line: 4498, column: 16, scope: !9149)
!9459 = !DILocation(line: 4498, column: 28, scope: !9149)
!9460 = !DILocation(line: 4497, column: 14, scope: !9149)
!9461 = !DILocation(line: 4497, column: 12, scope: !9149)
!9462 = !DILocation(line: 4500, column: 16, scope: !9149)
!9463 = !DILocation(line: 4500, column: 28, scope: !9149)
!9464 = !DILocation(line: 4500, column: 39, scope: !9149)
!9465 = !DILocation(line: 4500, column: 37, scope: !9149)
!9466 = !DILocation(line: 4500, column: 25, scope: !9149)
!9467 = !DILocation(line: 4500, column: 48, scope: !9149)
!9468 = !DILocation(line: 4500, column: 59, scope: !9149)
!9469 = !DILocation(line: 4500, column: 57, scope: !9149)
!9470 = !DILocation(line: 4500, column: 45, scope: !9149)
!9471 = !DILocation(line: 4500, column: 14, scope: !9149)
!9472 = !DILocation(line: 4501, column: 11, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4501, column: 11)
!9474 = !DILocation(line: 4501, column: 18, scope: !9473)
!9475 = !DILocation(line: 4502, column: 4, scope: !9473)
!9476 = !DILocation(line: 4502, column: 8, scope: !9473)
!9477 = !DILocation(line: 4502, column: 17, scope: !9473)
!9478 = !DILocation(line: 4503, column: 8, scope: !9473)
!9479 = !DILocation(line: 4503, column: 28, scope: !9473)
!9480 = !DILocation(line: 4503, column: 41, scope: !9473)
!9481 = !DILocation(line: 4503, column: 14, scope: !9473)
!9482 = !DILocation(line: 4504, column: 32, scope: !9473)
!9483 = !DILocation(line: 4504, column: 41, scope: !9473)
!9484 = !DILocation(line: 4504, column: 28, scope: !9473)
!9485 = !DILocation(line: 4504, column: 7, scope: !9473)
!9486 = !DILocation(line: 4504, column: 48, scope: !9473)
!9487 = !DILocation(line: 4505, column: 5, scope: !9473)
!9488 = !DILocation(line: 4505, column: 24, scope: !9473)
!9489 = !DILocation(line: 4505, column: 37, scope: !9473)
!9490 = !DILocation(line: 4505, column: 10, scope: !9473)
!9491 = !DILocation(line: 4506, column: 35, scope: !9473)
!9492 = !DILocation(line: 4506, column: 44, scope: !9473)
!9493 = !DILocation(line: 4506, column: 31, scope: !9473)
!9494 = !DILocation(line: 4506, column: 10, scope: !9473)
!9495 = !DILocation(line: 4506, column: 51, scope: !9473)
!9496 = !DILocation(line: 4501, column: 11, scope: !9149)
!9497 = !DILocation(line: 4507, column: 8, scope: !9473)
!9498 = !DILocation(line: 4507, column: 2, scope: !9473)
!9499 = !DILocation(line: 4509, column: 14, scope: !9149)
!9500 = !DILocation(line: 4509, column: 7, scope: !9149)
!9501 = !DILocation(line: 4515, column: 11, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4515, column: 11)
!9503 = !DILocation(line: 4515, column: 20, scope: !9502)
!9504 = !DILocation(line: 4515, column: 11, scope: !9149)
!9505 = !DILocation(line: 4516, column: 2, scope: !9502)
!9506 = !DILocation(line: 4517, column: 31, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 4517, column: 16)
!9508 = !DILocation(line: 4517, column: 44, scope: !9507)
!9509 = !DILocation(line: 4517, column: 17, scope: !9507)
!9510 = !DILocation(line: 4518, column: 28, scope: !9507)
!9511 = !DILocation(line: 4518, column: 37, scope: !9507)
!9512 = !DILocation(line: 4518, column: 24, scope: !9507)
!9513 = !DILocation(line: 4518, column: 3, scope: !9507)
!9514 = !DILocation(line: 4518, column: 44, scope: !9507)
!9515 = !DILocation(line: 4517, column: 16, scope: !9502)
!9516 = !DILocation(line: 4519, column: 2, scope: !9507)
!9517 = !DILocation(line: 4521, column: 37, scope: !9507)
!9518 = !DILocation(line: 4521, column: 50, scope: !9507)
!9519 = !DILocation(line: 4522, column: 9, scope: !9507)
!9520 = !DILocation(line: 4522, column: 18, scope: !9507)
!9521 = !DILocation(line: 4522, column: 30, scope: !9507)
!9522 = !DILocation(line: 4521, column: 9, scope: !9507)
!9523 = !DILocation(line: 4521, column: 2, scope: !9507)
!9524 = !DILocation(line: 4528, column: 11, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4528, column: 11)
!9526 = !DILocation(line: 4528, column: 20, scope: !9525)
!9527 = !DILocation(line: 4528, column: 11, scope: !9149)
!9528 = !DILocation(line: 4529, column: 2, scope: !9525)
!9529 = !DILocation(line: 4530, column: 31, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 4530, column: 16)
!9531 = !DILocation(line: 4530, column: 44, scope: !9530)
!9532 = !DILocation(line: 4530, column: 17, scope: !9530)
!9533 = !DILocation(line: 4531, column: 28, scope: !9530)
!9534 = !DILocation(line: 4531, column: 37, scope: !9530)
!9535 = !DILocation(line: 4531, column: 24, scope: !9530)
!9536 = !DILocation(line: 4531, column: 3, scope: !9530)
!9537 = !DILocation(line: 4531, column: 44, scope: !9530)
!9538 = !DILocation(line: 4530, column: 16, scope: !9525)
!9539 = !DILocation(line: 4532, column: 2, scope: !9530)
!9540 = !DILocation(line: 4534, column: 37, scope: !9530)
!9541 = !DILocation(line: 4534, column: 50, scope: !9530)
!9542 = !DILocation(line: 4535, column: 9, scope: !9530)
!9543 = !DILocation(line: 4535, column: 18, scope: !9530)
!9544 = !DILocation(line: 4535, column: 30, scope: !9530)
!9545 = !DILocation(line: 4534, column: 9, scope: !9530)
!9546 = !DILocation(line: 4534, column: 2, scope: !9530)
!9547 = !DILocation(line: 4541, column: 44, scope: !9149)
!9548 = !DILocation(line: 4541, column: 57, scope: !9149)
!9549 = !DILocation(line: 4542, column: 9, scope: !9149)
!9550 = !DILocation(line: 4542, column: 18, scope: !9149)
!9551 = !DILocation(line: 4542, column: 30, scope: !9149)
!9552 = !DILocation(line: 4541, column: 16, scope: !9149)
!9553 = !DILocation(line: 4541, column: 14, scope: !9149)
!9554 = !DILocation(line: 4543, column: 11, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4543, column: 11)
!9556 = !DILocation(line: 4543, column: 18, scope: !9555)
!9557 = !DILocation(line: 4544, column: 4, scope: !9555)
!9558 = !DILocation(line: 4544, column: 8, scope: !9555)
!9559 = !DILocation(line: 4544, column: 17, scope: !9555)
!9560 = !DILocation(line: 4545, column: 8, scope: !9555)
!9561 = !DILocation(line: 4545, column: 26, scope: !9555)
!9562 = !DILocation(line: 4545, column: 39, scope: !9555)
!9563 = !DILocation(line: 4545, column: 12, scope: !9555)
!9564 = !DILocation(line: 4546, column: 30, scope: !9555)
!9565 = !DILocation(line: 4546, column: 39, scope: !9555)
!9566 = !DILocation(line: 4546, column: 26, scope: !9555)
!9567 = !DILocation(line: 4546, column: 5, scope: !9555)
!9568 = !DILocation(line: 4546, column: 46, scope: !9555)
!9569 = !DILocation(line: 4543, column: 11, scope: !9149)
!9570 = !DILocation(line: 4547, column: 8, scope: !9555)
!9571 = !DILocation(line: 4547, column: 2, scope: !9555)
!9572 = !DILocation(line: 4549, column: 14, scope: !9149)
!9573 = !DILocation(line: 4549, column: 7, scope: !9149)
!9574 = !DILocation(line: 4552, column: 44, scope: !9149)
!9575 = !DILocation(line: 4552, column: 57, scope: !9149)
!9576 = !DILocation(line: 4553, column: 9, scope: !9149)
!9577 = !DILocation(line: 4553, column: 18, scope: !9149)
!9578 = !DILocation(line: 4553, column: 30, scope: !9149)
!9579 = !DILocation(line: 4552, column: 16, scope: !9149)
!9580 = !DILocation(line: 4552, column: 14, scope: !9149)
!9581 = !DILocation(line: 4554, column: 11, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4554, column: 11)
!9583 = !DILocation(line: 4554, column: 18, scope: !9582)
!9584 = !DILocation(line: 4555, column: 4, scope: !9582)
!9585 = !DILocation(line: 4555, column: 8, scope: !9582)
!9586 = !DILocation(line: 4555, column: 17, scope: !9582)
!9587 = !DILocation(line: 4556, column: 8, scope: !9582)
!9588 = !DILocation(line: 4556, column: 26, scope: !9582)
!9589 = !DILocation(line: 4556, column: 39, scope: !9582)
!9590 = !DILocation(line: 4556, column: 12, scope: !9582)
!9591 = !DILocation(line: 4557, column: 30, scope: !9582)
!9592 = !DILocation(line: 4557, column: 39, scope: !9582)
!9593 = !DILocation(line: 4557, column: 26, scope: !9582)
!9594 = !DILocation(line: 4557, column: 5, scope: !9582)
!9595 = !DILocation(line: 4557, column: 46, scope: !9582)
!9596 = !DILocation(line: 4554, column: 11, scope: !9149)
!9597 = !DILocation(line: 4558, column: 8, scope: !9582)
!9598 = !DILocation(line: 4558, column: 2, scope: !9582)
!9599 = !DILocation(line: 4560, column: 14, scope: !9149)
!9600 = !DILocation(line: 4560, column: 7, scope: !9149)
!9601 = !DILocation(line: 4565, column: 42, scope: !9149)
!9602 = !DILocation(line: 4565, column: 55, scope: !9149)
!9603 = !DILocation(line: 4566, column: 7, scope: !9149)
!9604 = !DILocation(line: 4566, column: 16, scope: !9149)
!9605 = !DILocation(line: 4566, column: 28, scope: !9149)
!9606 = !DILocation(line: 4565, column: 14, scope: !9149)
!9607 = !DILocation(line: 4565, column: 12, scope: !9149)
!9608 = !DILocation(line: 4567, column: 11, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4567, column: 11)
!9610 = !DILocation(line: 4568, column: 4, scope: !9609)
!9611 = !DILocation(line: 4568, column: 7, scope: !9609)
!9612 = !DILocation(line: 4568, column: 28, scope: !9609)
!9613 = !DILocation(line: 4569, column: 4, scope: !9609)
!9614 = !DILocation(line: 4569, column: 7, scope: !9609)
!9615 = !DILocation(line: 4569, column: 30, scope: !9609)
!9616 = !DILocation(line: 4569, column: 28, scope: !9609)
!9617 = !DILocation(line: 4567, column: 11, scope: !9149)
!9618 = !DILocation(line: 4570, column: 9, scope: !9609)
!9619 = !DILocation(line: 4570, column: 7, scope: !9609)
!9620 = !DILocation(line: 4570, column: 2, scope: !9609)
!9621 = !DILocation(line: 4572, column: 14, scope: !9149)
!9622 = !DILocation(line: 4572, column: 7, scope: !9149)
!9623 = !DILocation(line: 4576, column: 12, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4576, column: 11)
!9625 = !DILocation(line: 4577, column: 4, scope: !9624)
!9626 = !DILocation(line: 4577, column: 7, scope: !9624)
!9627 = !DILocation(line: 4577, column: 28, scope: !9624)
!9628 = !DILocation(line: 4578, column: 4, scope: !9624)
!9629 = !DILocation(line: 4578, column: 7, scope: !9624)
!9630 = !DILocation(line: 4578, column: 37, scope: !9624)
!9631 = !DILocation(line: 4578, column: 31, scope: !9624)
!9632 = !DILocation(line: 4578, column: 28, scope: !9624)
!9633 = !DILocation(line: 4579, column: 4, scope: !9624)
!9634 = !DILocation(line: 4579, column: 7, scope: !9624)
!9635 = !DILocation(line: 4579, column: 31, scope: !9624)
!9636 = !DILocation(line: 4579, column: 28, scope: !9624)
!9637 = !DILocation(line: 4576, column: 11, scope: !9149)
!9638 = !DILocation(line: 4580, column: 2, scope: !9624)
!9639 = !DILocation(line: 4582, column: 42, scope: !9149)
!9640 = !DILocation(line: 4582, column: 55, scope: !9149)
!9641 = !DILocation(line: 4583, column: 7, scope: !9149)
!9642 = !DILocation(line: 4583, column: 16, scope: !9149)
!9643 = !DILocation(line: 4583, column: 28, scope: !9149)
!9644 = !DILocation(line: 4582, column: 14, scope: !9149)
!9645 = !DILocation(line: 4582, column: 12, scope: !9149)
!9646 = !DILocation(line: 4584, column: 14, scope: !9149)
!9647 = !DILocation(line: 4584, column: 7, scope: !9149)
!9648 = !DILocation(line: 4587, column: 42, scope: !9149)
!9649 = !DILocation(line: 4587, column: 55, scope: !9149)
!9650 = !DILocation(line: 4588, column: 7, scope: !9149)
!9651 = !DILocation(line: 4588, column: 16, scope: !9149)
!9652 = !DILocation(line: 4588, column: 28, scope: !9149)
!9653 = !DILocation(line: 4587, column: 14, scope: !9149)
!9654 = !DILocation(line: 4587, column: 12, scope: !9149)
!9655 = !DILocation(line: 4589, column: 42, scope: !9149)
!9656 = !DILocation(line: 4589, column: 55, scope: !9149)
!9657 = !DILocation(line: 4590, column: 7, scope: !9149)
!9658 = !DILocation(line: 4590, column: 16, scope: !9149)
!9659 = !DILocation(line: 4590, column: 28, scope: !9149)
!9660 = !DILocation(line: 4589, column: 14, scope: !9149)
!9661 = !DILocation(line: 4589, column: 12, scope: !9149)
!9662 = !DILocation(line: 4591, column: 14, scope: !9149)
!9663 = !DILocation(line: 4591, column: 7, scope: !9149)
!9664 = !DILocation(line: 4599, column: 15, scope: !9149)
!9665 = !DILocation(line: 4600, column: 11, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4600, column: 11)
!9667 = !DILocation(line: 4600, column: 20, scope: !9666)
!9668 = !DILocation(line: 4601, column: 4, scope: !9666)
!9669 = !DILocation(line: 4601, column: 8, scope: !9666)
!9670 = !DILocation(line: 4601, column: 41, scope: !9666)
!9671 = !DILocation(line: 4601, column: 50, scope: !9666)
!9672 = !DILocation(line: 4601, column: 37, scope: !9666)
!9673 = !DILocation(line: 4601, column: 16, scope: !9666)
!9674 = !DILocation(line: 4601, column: 57, scope: !9666)
!9675 = !DILocation(line: 4600, column: 11, scope: !9149)
!9676 = !DILocation(line: 4602, column: 14, scope: !9666)
!9677 = !DILocation(line: 4602, column: 13, scope: !9666)
!9678 = !DILocation(line: 4602, column: 25, scope: !9666)
!9679 = !DILocation(line: 4602, column: 23, scope: !9666)
!9680 = !DILocation(line: 4602, column: 10, scope: !9666)
!9681 = !DILocation(line: 4602, column: 2, scope: !9666)
!9682 = !DILocation(line: 4604, column: 15, scope: !9149)
!9683 = !DILocation(line: 4604, column: 23, scope: !9149)
!9684 = !DILocation(line: 4604, column: 30, scope: !9149)
!9685 = !DILocation(line: 4604, column: 41, scope: !9149)
!9686 = !DILocation(line: 4604, column: 64, scope: !9149)
!9687 = !DILocation(line: 4604, column: 52, scope: !9149)
!9688 = !DILocation(line: 4604, column: 50, scope: !9149)
!9689 = !DILocation(line: 4604, column: 73, scope: !9149)
!9690 = !DILocation(line: 4604, column: 7, scope: !9149)
!9691 = !DILocation(line: 4607, column: 7, scope: !9149)
!9692 = !DILocation(line: 4615, column: 14, scope: !9075)
!9693 = !DILocation(line: 4615, column: 12, scope: !9075)
!9694 = !DILocation(line: 4616, column: 7, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 4616, column: 7)
!9696 = !DILocation(line: 4616, column: 16, scope: !9695)
!9697 = !DILocation(line: 4616, column: 7, scope: !9075)
!9698 = !DILocation(line: 4617, column: 5, scope: !9695)
!9699 = !DILocation(line: 4619, column: 27, scope: !9075)
!9700 = !DILocation(line: 4619, column: 30, scope: !9075)
!9701 = !DILocation(line: 4619, column: 13, scope: !9075)
!9702 = !DILocation(line: 4619, column: 11, scope: !9075)
!9703 = !DILocation(line: 4620, column: 10, scope: !9075)
!9704 = !DILocation(line: 4620, column: 43, scope: !9075)
!9705 = !DILocation(line: 4620, column: 52, scope: !9075)
!9706 = !DILocation(line: 4620, column: 39, scope: !9075)
!9707 = !DILocation(line: 4620, column: 18, scope: !9075)
!9708 = !DILocation(line: 4621, column: 9, scope: !9075)
!9709 = !DILocation(line: 4621, column: 32, scope: !9075)
!9710 = !DILocation(line: 4621, column: 20, scope: !9075)
!9711 = !DILocation(line: 4621, column: 18, scope: !9075)
!9712 = !DILocation(line: 4621, column: 41, scope: !9075)
!9713 = !DILocation(line: 4620, column: 3, scope: !9075)
!9714 = !DILocation(line: 4622, column: 1, scope: !9075)
