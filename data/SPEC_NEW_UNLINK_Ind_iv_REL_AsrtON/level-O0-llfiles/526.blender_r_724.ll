; ModuleID = 'blender/source/blender/editors/animation/anim_channels_edit.c'
source_filename = "blender/source/blender/editors/animation/anim_channels_edit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.bAnimContext = type { i8*, i16, i16, i16, i16, %struct.ScrArea*, %struct.SpaceLink*, %struct.ARegion*, %struct.bDopeSheet*, %struct.Scene*, %struct.Object*, %struct.ListBase*, %struct.ReportList* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SpaceType = type opaque
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rctf = type { float, float, float, float }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.bDopeSheet = type { %struct.ID*, %struct.ListBase, %struct.Group*, [64 x i8], i32, i32, i32, i32 }
%struct.Group = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type { %struct.ID, %struct.ListBase, i32, i16, i16, i8* }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.bAnimListElem = type { %struct.bAnimListElem*, %struct.bAnimListElem*, i8*, i32, i32, i32, i16, i16, i8*, %struct.ID*, %struct.AnimData* }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.NlaTrack = type { %struct.NlaTrack*, %struct.NlaTrack*, %struct.ListBase, i32, i32, [64 x i8] }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.bGPDlayer = type { %struct.bGPDlayer*, %struct.bGPDlayer*, %struct.ListBase, %struct.bGPDframe*, i32, i16, i16, [4 x float], [128 x i8] }
%struct.bGPDframe = type { %struct.bGPDframe*, %struct.bGPDframe*, %struct.ListBase, i32, i32 }
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.bAnimChannelType = type { i8*, i32, void (%struct.bAnimContext*, %struct.bAnimListElem*, float*)*, void (%struct.bAnimContext*, %struct.bAnimListElem*, float, float)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, void (%struct.bAnimListElem*, i8*)*, i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)*, i32 (%struct.bAnimListElem*)*, i8 (%struct.bAnimContext*, %struct.bAnimListElem*, i32)*, i32 (%struct.bAnimContext*, i32, i8*)*, i8* (%struct.bAnimListElem*, i32, i16*)* }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.PropertyRNA = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.uiLayout = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.SpaceNla = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], i16, i16, i32, %struct.bDopeSheet*, %struct.View2D }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type opaque
%struct.tReorderChannelIsland = type { %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland*, %struct.ListBase, i32 }
%struct.Link = type { %struct.Link*, %struct.Link* }
%struct.SpaceAction = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.bAction*, %struct.bDopeSheet, i8, i8, i16, float }
%struct.SpaceIpo = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.bDopeSheet*, %struct.ListBase, i16, i16, i32, float, i32 }

@.str = private unnamed_addr constant [54 x i8] c"ERROR: no channel matching the one changed was found\0A\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"ERROR: no channel info for the changed channel\0A\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Animation Channels\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"ANIM_OT_channels_click\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"children_only\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"ANIM_OT_channels_rename\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"ANIM_OT_channels_find\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"ANIM_OT_channels_select_all_toggle\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"invert\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"ANIM_OT_channels_select_border\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"ANIM_OT_channels_delete\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"ANIM_OT_channels_setting_toggle\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"ANIM_OT_channels_setting_enable\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"ANIM_OT_channels_setting_disable\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"ANIM_OT_channels_editable_toggle\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"ANIM_OT_channels_expand\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"ANIM_OT_channels_collapse\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"ANIM_OT_channels_move\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"ANIM_OT_channels_group\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"ANIM_OT_channels_ungroup\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"ANIM_OT_channels_visibility_set\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"ANIM_OT_channels_visibility_toggle\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"Select All\00", align 1
@.str.26 = private unnamed_addr constant [43 x i8] c"Toggle selection of all animation channels\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"Invert\00", align 1
@.str.28 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"Border Select\00", align 1
@.str.30 = private unnamed_addr constant [58 x i8] c"Select all animation channels within the specified region\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"gesture_mode\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.32 = private unnamed_addr constant [24 x i8] c"Mouse Click on Channels\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"Handle mouse-clicks over animation channels\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"Extend Select\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"Select Children Only\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.36 = private unnamed_addr constant [74 x i8] c"Error: animation channel (index = %d) not found in mouse_anim_channels()\0A\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"Error: Invalid channel type in mouse_anim_channels()\0A\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"Rename Channels\00", align 1
@.str.39 = private unnamed_addr constant [37 x i8] c"Rename animation channel under mouse\00", align 1
@.str.40 = private unnamed_addr constant [75 x i8] c"Error: animation channel (index = %d) not found in rename_anim_channels()\0A\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"Find Channels\00", align 1
@.str.42 = private unnamed_addr constant [75 x i8] c"Filter the set of channels shown to only include those with matching names\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"Query\00", align 1
@.str.45 = private unnamed_addr constant [36 x i8] c"Text to search for in channel names\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"Enable Channel Setting\00", align 1
@.str.47 = private unnamed_addr constant [60 x i8] c"Enable specified setting on all selected animation channels\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@prop_animchannel_setflag_types = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.49 = private unnamed_addr constant [5 x i8] c"Mode\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@prop_animchannel_settings_types = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2606
@.str.51 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"TOGGLE\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"Toggle\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"DISABLE\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"Disable\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"ENABLE\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"Enable\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"INVERT\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"PROTECT\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"Protect\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"MUTE\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"Mute\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"Disable Channel Setting\00", align 1
@.str.64 = private unnamed_addr constant [61 x i8] c"Disable specified setting on all selected animation channels\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"Toggle Channel Setting\00", align 1
@.str.66 = private unnamed_addr constant [60 x i8] c"Toggle specified setting on all selected animation channels\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"Delete Channels\00", align 1
@.str.68 = private unnamed_addr constant [39 x i8] c"Delete all selected animation channels\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.69 = private unnamed_addr constant [27 x i8] c"Toggle Channel Editability\00", align 1
@.str.70 = private unnamed_addr constant [40 x i8] c"Toggle editability of selected channels\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"Move Channels\00", align 1
@.str.72 = private unnamed_addr constant [38 x i8] c"Rearrange selected animation channels\00", align 1
@prop_animchannel_rearrange_types = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2617
@.str.73 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.74 = private unnamed_addr constant [44 x i8] c"Grease Pencil not supported for moving yet\0A\00", align 1
@.str.75 = private unnamed_addr constant [40 x i8] c"Mask does not supported for moving yet\0A\00", align 1
@.str.76 = private unnamed_addr constant [24 x i8] c"Animdata has no action\0A\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"#TempGroup\00", align 1
@.str.78 = private unnamed_addr constant [86 x i8] c"rearrange_animchannel_add_to_islands(): don't know how to handle channels of type %d\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.79 = private unnamed_addr constant [22 x i8] c"tReorderChannelIsland\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"TOP\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"To Top\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"Up\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"BOTTOM\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"To Bottom\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"Expand Channels\00", align 1
@.str.89 = private unnamed_addr constant [62 x i8] c"Expand (i.e. open) all selected expandable animation channels\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"All\00", align 1
@.str.91 = private unnamed_addr constant [45 x i8] c"Expand all channels (not just selected ones)\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"Collapse Channels\00", align 1
@.str.93 = private unnamed_addr constant [65 x i8] c"Collapse (i.e. close) all selected expandable animation channels\00", align 1
@.str.94 = private unnamed_addr constant [47 x i8] c"Collapse all channels (not just selected ones)\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"Toggle Visibility\00", align 1
@.str.96 = private unnamed_addr constant [69 x i8] c"Toggle visibility in Graph Editor of all selected animation channels\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"Set Visibility\00", align 1
@.str.98 = private unnamed_addr constant [70 x i8] c"Make only the selected animation channels visible in the Graph Editor\00", align 1
@.str.99 = private unnamed_addr constant [25 x i8] c"Revive Disabled F-Curves\00", align 1
@.str.100 = private unnamed_addr constant [32 x i8] c"ANIM_OT_channels_fcurves_enable\00", align 1
@.str.101 = private unnamed_addr constant [77 x i8] c"Clears 'disabled' tag from all F-Curves to get broken F-Curves working again\00", align 1
@.str.102 = private unnamed_addr constant [28 x i8] c"Remove Empty Animation Data\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"ANIM_OT_channels_clean_empty\00", align 1
@.str.104 = private unnamed_addr constant [67 x i8] c"Delete all empty animation data containers from visible datablocks\00", align 1
@.str.105 = private unnamed_addr constant [15 x i8] c"Group Channels\00", align 1
@.str.106 = private unnamed_addr constant [37 x i8] c"Add selected F-Curves to a new group\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"New Group\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.110 = private unnamed_addr constant [28 x i8] c"Name of newly created group\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"Ungroup Channels\00", align 1
@.str.112 = private unnamed_addr constant [51 x i8] c"Remove selected F-Curves from their current groups\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ANIM_set_active_channel(%struct.bAnimContext* %ac, i8* %data, i32 %datatype, i32 %filter, i8* %channel_data, i32 %channel_type) #0 !dbg !2624 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %data.addr = alloca i8*, align 8
  %datatype.addr = alloca i32, align 4
  %filter.addr = alloca i32, align 4
  %channel_data.addr = alloca i8*, align 8
  %channel_type.addr = alloca i32, align 4
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  %agrp26 = alloca %struct.bActionGroup*, align 8
  %fcu29 = alloca %struct.FCurve*, align 8
  %nlt35 = alloca %struct.NlaTrack*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !2739, metadata !DIExpression()), !dbg !2740
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2741, metadata !DIExpression()), !dbg !2742
  store i32 %datatype, i32* %datatype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %datatype.addr, metadata !2743, metadata !DIExpression()), !dbg !2744
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !2745, metadata !DIExpression()), !dbg !2746
  store i8* %channel_data, i8** %channel_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %channel_data.addr, metadata !2747, metadata !DIExpression()), !dbg !2748
  store i32 %channel_type, i32* %channel_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_type.addr, metadata !2749, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !2751, metadata !DIExpression()), !dbg !2752
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !2752
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !2752
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !2753, metadata !DIExpression()), !dbg !2770
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !2771
  %2 = load i32, i32* %filter.addr, align 4, !dbg !2772
  %3 = load i8*, i8** %data.addr, align 8, !dbg !2773
  %4 = load i32, i32* %datatype.addr, align 4, !dbg !2774
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %1, %struct.ListBase* %anim_data, i32 %2, i8* %3, i32 %4), !dbg !2775
  %call1 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %anim_data), !dbg !2776
  %tobool = icmp ne i8 %call1, 0, !dbg !2776
  br i1 %tobool, label %if.then, label %if.end, !dbg !2778

if.then:                                          ; preds = %entry
  br label %return, !dbg !2779

if.end:                                           ; preds = %entry
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !2780
  %5 = load i8*, i8** %first, align 8, !dbg !2780
  %6 = bitcast i8* %5 to %struct.bAnimListElem*, !dbg !2782
  store %struct.bAnimListElem* %6, %struct.bAnimListElem** %ale, align 8, !dbg !2783
  br label %for.cond, !dbg !2784

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2785
  %tobool2 = icmp ne %struct.bAnimListElem* %7, null, !dbg !2787
  br i1 %tobool2, label %for.body, label %for.end, !dbg !2787

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %channel_type.addr, align 4, !dbg !2788
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2791
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %9, i32 0, i32 3, !dbg !2792
  %10 = load i32, i32* %type, align 8, !dbg !2792
  %cmp = icmp ne i32 %8, %10, !dbg !2793
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !2794

if.then3:                                         ; preds = %for.body
  br label %for.inc, !dbg !2795

if.end4:                                          ; preds = %for.body
  %11 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2796
  %type5 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %11, i32 0, i32 3, !dbg !2797
  %12 = load i32, i32* %type5, align 8, !dbg !2797
  switch i32 %12, label %sw.epilog [
    i32 6, label %sw.bb
    i32 7, label %sw.bb7
    i32 30, label %sw.bb12
    i32 8, label %sw.bb16
    i32 10, label %sw.bb16
    i32 11, label %sw.bb16
    i32 12, label %sw.bb16
    i32 13, label %sw.bb16
    i32 14, label %sw.bb16
    i32 15, label %sw.bb16
    i32 17, label %sw.bb16
    i32 18, label %sw.bb16
    i32 19, label %sw.bb16
    i32 20, label %sw.bb16
    i32 21, label %sw.bb16
    i32 22, label %sw.bb16
    i32 23, label %sw.bb16
    i32 24, label %sw.bb16
  ], !dbg !2798

sw.bb:                                            ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !2799, metadata !DIExpression()), !dbg !2802
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2803
  %data6 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %13, i32 0, i32 2, !dbg !2804
  %14 = load i8*, i8** %data6, align 8, !dbg !2804
  %15 = bitcast i8* %14 to %struct.bActionGroup*, !dbg !2805
  store %struct.bActionGroup* %15, %struct.bActionGroup** %agrp, align 8, !dbg !2802
  %16 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !2806
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %16, i32 0, i32 3, !dbg !2806
  %17 = load i32, i32* %flag, align 8, !dbg !2806
  %and = and i32 %17, -3, !dbg !2806
  store i32 %and, i32* %flag, align 8, !dbg !2806
  br label %sw.epilog, !dbg !2810

sw.bb7:                                           ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !2811, metadata !DIExpression()), !dbg !2813
  %18 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2814
  %data8 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %18, i32 0, i32 2, !dbg !2815
  %19 = load i8*, i8** %data8, align 8, !dbg !2815
  %20 = bitcast i8* %19 to %struct.FCurve*, !dbg !2816
  store %struct.FCurve* %20, %struct.FCurve** %fcu, align 8, !dbg !2813
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !2817
  %flag9 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %21, i32 0, i32 9, !dbg !2817
  %22 = load i16, i16* %flag9, align 8, !dbg !2817
  %conv = sext i16 %22 to i32, !dbg !2817
  %and10 = and i32 %conv, -5, !dbg !2817
  %conv11 = trunc i32 %and10 to i16, !dbg !2817
  store i16 %conv11, i16* %flag9, align 8, !dbg !2817
  br label %sw.epilog, !dbg !2821

sw.bb12:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !2822, metadata !DIExpression()), !dbg !2824
  %23 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2825
  %data13 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %23, i32 0, i32 2, !dbg !2826
  %24 = load i8*, i8** %data13, align 8, !dbg !2826
  %25 = bitcast i8* %24 to %struct.NlaTrack*, !dbg !2827
  store %struct.NlaTrack* %25, %struct.NlaTrack** %nlt, align 8, !dbg !2824
  %26 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !2828
  %flag14 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %26, i32 0, i32 3, !dbg !2828
  %27 = load i32, i32* %flag14, align 8, !dbg !2828
  %and15 = and i32 %27, -2, !dbg !2828
  store i32 %and15, i32* %flag14, align 8, !dbg !2828
  br label %sw.epilog, !dbg !2832

sw.bb16:                                          ; preds = %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4
  %28 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2833
  %adt = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %28, i32 0, i32 10, !dbg !2836
  %29 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2836
  %tobool17 = icmp ne %struct.AnimData* %29, null, !dbg !2833
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !2837

if.then18:                                        ; preds = %sw.bb16
  %30 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2838
  %adt19 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %30, i32 0, i32 10, !dbg !2838
  %31 = load %struct.AnimData*, %struct.AnimData** %adt19, align 8, !dbg !2838
  %flag20 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %31, i32 0, i32 7, !dbg !2838
  %32 = load i32, i32* %flag20, align 8, !dbg !2838
  %and21 = and i32 %32, -32769, !dbg !2838
  store i32 %and21, i32* %flag20, align 8, !dbg !2838
  br label %if.end22, !dbg !2843

if.end22:                                         ; preds = %if.then18, %sw.bb16
  br label %sw.epilog, !dbg !2844

sw.epilog:                                        ; preds = %if.end4, %if.end22, %sw.bb12, %sw.bb7, %sw.bb
  br label %for.inc, !dbg !2845

for.inc:                                          ; preds = %sw.epilog, %if.then3
  %33 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2846
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %33, i32 0, i32 0, !dbg !2847
  %34 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !2847
  store %struct.bAnimListElem* %34, %struct.bAnimListElem** %ale, align 8, !dbg !2848
  br label %for.cond, !dbg !2849, !llvm.loop !2850

for.end:                                          ; preds = %for.cond
  %35 = load i8*, i8** %channel_data.addr, align 8, !dbg !2852
  %tobool23 = icmp ne i8* %35, null, !dbg !2852
  br i1 %tobool23, label %if.then24, label %if.end49, !dbg !2854

if.then24:                                        ; preds = %for.end
  %36 = load i32, i32* %channel_type.addr, align 4, !dbg !2855
  switch i32 %36, label %sw.default [
    i32 6, label %sw.bb25
    i32 7, label %sw.bb28
    i32 30, label %sw.bb34
    i32 8, label %sw.bb38
    i32 10, label %sw.bb38
    i32 11, label %sw.bb38
    i32 12, label %sw.bb38
    i32 13, label %sw.bb38
    i32 14, label %sw.bb38
    i32 15, label %sw.bb38
    i32 17, label %sw.bb38
    i32 18, label %sw.bb38
    i32 19, label %sw.bb38
    i32 20, label %sw.bb38
    i32 22, label %sw.bb38
    i32 23, label %sw.bb38
    i32 24, label %sw.bb38
    i32 16, label %sw.bb38
    i32 21, label %sw.bb38
    i32 27, label %sw.bb47
    i32 29, label %sw.bb47
    i32 25, label %sw.bb47
    i32 31, label %sw.bb47
  ], !dbg !2857

sw.bb25:                                          ; preds = %if.then24
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp26, metadata !2858, metadata !DIExpression()), !dbg !2861
  %37 = load i8*, i8** %channel_data.addr, align 8, !dbg !2862
  %38 = bitcast i8* %37 to %struct.bActionGroup*, !dbg !2863
  store %struct.bActionGroup* %38, %struct.bActionGroup** %agrp26, align 8, !dbg !2861
  %39 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp26, align 8, !dbg !2864
  %flag27 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %39, i32 0, i32 3, !dbg !2865
  %40 = load i32, i32* %flag27, align 8, !dbg !2866
  %or = or i32 %40, 2, !dbg !2866
  store i32 %or, i32* %flag27, align 8, !dbg !2866
  br label %sw.epilog48, !dbg !2867

sw.bb28:                                          ; preds = %if.then24
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu29, metadata !2868, metadata !DIExpression()), !dbg !2870
  %41 = load i8*, i8** %channel_data.addr, align 8, !dbg !2871
  %42 = bitcast i8* %41 to %struct.FCurve*, !dbg !2872
  store %struct.FCurve* %42, %struct.FCurve** %fcu29, align 8, !dbg !2870
  %43 = load %struct.FCurve*, %struct.FCurve** %fcu29, align 8, !dbg !2873
  %flag30 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %43, i32 0, i32 9, !dbg !2874
  %44 = load i16, i16* %flag30, align 8, !dbg !2875
  %conv31 = sext i16 %44 to i32, !dbg !2875
  %or32 = or i32 %conv31, 4, !dbg !2875
  %conv33 = trunc i32 %or32 to i16, !dbg !2875
  store i16 %conv33, i16* %flag30, align 8, !dbg !2875
  br label %sw.epilog48, !dbg !2876

sw.bb34:                                          ; preds = %if.then24
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt35, metadata !2877, metadata !DIExpression()), !dbg !2879
  %45 = load i8*, i8** %channel_data.addr, align 8, !dbg !2880
  %46 = bitcast i8* %45 to %struct.NlaTrack*, !dbg !2881
  store %struct.NlaTrack* %46, %struct.NlaTrack** %nlt35, align 8, !dbg !2879
  %47 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt35, align 8, !dbg !2882
  %flag36 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %47, i32 0, i32 3, !dbg !2883
  %48 = load i32, i32* %flag36, align 8, !dbg !2884
  %or37 = or i32 %48, 1, !dbg !2884
  store i32 %or37, i32* %flag36, align 8, !dbg !2884
  br label %sw.epilog48, !dbg !2885

sw.bb38:                                          ; preds = %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24
  %49 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2886
  %tobool39 = icmp ne %struct.bAnimListElem* %49, null, !dbg !2886
  br i1 %tobool39, label %land.lhs.true, label %if.end46, !dbg !2889

land.lhs.true:                                    ; preds = %sw.bb38
  %50 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2890
  %adt40 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %50, i32 0, i32 10, !dbg !2891
  %51 = load %struct.AnimData*, %struct.AnimData** %adt40, align 8, !dbg !2891
  %tobool41 = icmp ne %struct.AnimData* %51, null, !dbg !2890
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !2892

if.then42:                                        ; preds = %land.lhs.true
  %52 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2893
  %adt43 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %52, i32 0, i32 10, !dbg !2895
  %53 = load %struct.AnimData*, %struct.AnimData** %adt43, align 8, !dbg !2895
  %flag44 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %53, i32 0, i32 7, !dbg !2896
  %54 = load i32, i32* %flag44, align 8, !dbg !2897
  %or45 = or i32 %54, 32768, !dbg !2897
  store i32 %or45, i32* %flag44, align 8, !dbg !2897
  br label %if.end46, !dbg !2898

if.end46:                                         ; preds = %if.then42, %land.lhs.true, %sw.bb38
  br label %sw.epilog48, !dbg !2899

sw.bb47:                                          ; preds = %if.then24, %if.then24, %if.then24, %if.then24
  br label %sw.epilog48, !dbg !2900

sw.default:                                       ; preds = %if.then24
  br label %sw.epilog48, !dbg !2901

sw.epilog48:                                      ; preds = %sw.default, %sw.bb47, %if.end46, %sw.bb34, %sw.bb28, %sw.bb25
  br label %if.end49, !dbg !2902

if.end49:                                         ; preds = %sw.epilog48, %for.end
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !2903
  br label %return, !dbg !2904

return:                                           ; preds = %if.end49, %if.then
  ret void, !dbg !2904
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i64 @ANIM_animdata_filter(%struct.bAnimContext*, %struct.ListBase*, i32, i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !2905 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2911, metadata !DIExpression()), !dbg !2912
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2913
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !2914
  %1 = load i8*, i8** %first, align 8, !dbg !2914
  %cmp = icmp eq i8* %1, null, !dbg !2915
  %conv = zext i1 %cmp to i32, !dbg !2915
  %conv1 = trunc i32 %conv to i8, !dbg !2916
  ret i8 %conv1, !dbg !2917
}

declare dso_local void @ANIM_animdata_freelist(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ANIM_deselect_anim_channels(%struct.bAnimContext* %ac, i8* %data, i32 %datatype, i8 zeroext %test, i32 %sel) #0 !dbg !2918 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %data.addr = alloca i8*, align 8
  %datatype.addr = alloca i32, align 4
  %test.addr = alloca i8, align 1
  %sel.addr = alloca i32, align 4
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  %gpl = alloca %struct.bGPDlayer*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !2922, metadata !DIExpression()), !dbg !2923
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2924, metadata !DIExpression()), !dbg !2925
  store i32 %datatype, i32* %datatype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %datatype.addr, metadata !2926, metadata !DIExpression()), !dbg !2927
  store i8 %test, i8* %test.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %test.addr, metadata !2928, metadata !DIExpression()), !dbg !2929
  store i32 %sel, i32* %sel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sel.addr, metadata !2930, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !2932, metadata !DIExpression()), !dbg !2933
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !2933
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !2933
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !2934, metadata !DIExpression()), !dbg !2935
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !2936, metadata !DIExpression()), !dbg !2937
  store i32 9, i32* %filter, align 4, !dbg !2938
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !2939
  %2 = load i32, i32* %filter, align 4, !dbg !2940
  %3 = load i8*, i8** %data.addr, align 8, !dbg !2941
  %4 = load i32, i32* %datatype.addr, align 4, !dbg !2942
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %1, %struct.ListBase* %anim_data, i32 %2, i8* %3, i32 %4), !dbg !2943
  %5 = load i8, i8* %test.addr, align 1, !dbg !2944
  %tobool = icmp ne i8 %5, 0, !dbg !2944
  br i1 %tobool, label %if.then, label %if.end51, !dbg !2946

if.then:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !2947
  %6 = load i8*, i8** %first, align 8, !dbg !2947
  %7 = bitcast i8* %6 to %struct.bAnimListElem*, !dbg !2950
  store %struct.bAnimListElem* %7, %struct.bAnimListElem** %ale, align 8, !dbg !2951
  br label %for.cond, !dbg !2952

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2953
  %tobool1 = icmp ne %struct.bAnimListElem* %8, null, !dbg !2955
  br i1 %tobool1, label %for.body, label %for.end, !dbg !2955

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %sel.addr, align 4, !dbg !2956
  %cmp = icmp eq i32 %9, 0, !dbg !2959
  br i1 %cmp, label %if.then2, label %if.end, !dbg !2960

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !2961

if.end:                                           ; preds = %for.body
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2962
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %10, i32 0, i32 3, !dbg !2963
  %11 = load i32, i32* %type, align 8, !dbg !2963
  switch i32 %11, label %sw.epilog [
    i32 4, label %sw.bb
    i32 5, label %sw.bb6
    i32 6, label %sw.bb7
    i32 7, label %sw.bb13
    i32 25, label %sw.bb19
    i32 30, label %sw.bb25
    i32 8, label %sw.bb31
    i32 10, label %sw.bb31
    i32 11, label %sw.bb31
    i32 12, label %sw.bb31
    i32 13, label %sw.bb31
    i32 14, label %sw.bb31
    i32 15, label %sw.bb31
    i32 17, label %sw.bb31
    i32 18, label %sw.bb31
    i32 19, label %sw.bb31
    i32 20, label %sw.bb31
    i32 16, label %sw.bb31
    i32 21, label %sw.bb31
    i32 22, label %sw.bb31
    i32 23, label %sw.bb31
    i32 24, label %sw.bb31
    i32 27, label %sw.bb39
    i32 29, label %sw.bb45
  ], !dbg !2964

sw.bb:                                            ; preds = %if.end
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2965
  %flag = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %12, i32 0, i32 4, !dbg !2968
  %13 = load i32, i32* %flag, align 4, !dbg !2968
  %and = and i32 %13, 1, !dbg !2969
  %tobool3 = icmp ne i32 %and, 0, !dbg !2969
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !2970

if.then4:                                         ; preds = %sw.bb
  store i32 0, i32* %sel.addr, align 4, !dbg !2971
  br label %if.end5, !dbg !2972

if.end5:                                          ; preds = %if.then4, %sw.bb
  br label %sw.epilog, !dbg !2973

sw.bb6:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !2974

sw.bb7:                                           ; preds = %if.end
  %14 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2975
  %flag8 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %14, i32 0, i32 4, !dbg !2977
  %15 = load i32, i32* %flag8, align 4, !dbg !2977
  %and9 = and i32 %15, 1, !dbg !2978
  %tobool10 = icmp ne i32 %and9, 0, !dbg !2978
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !2979

if.then11:                                        ; preds = %sw.bb7
  store i32 0, i32* %sel.addr, align 4, !dbg !2980
  br label %if.end12, !dbg !2981

if.end12:                                         ; preds = %if.then11, %sw.bb7
  br label %sw.epilog, !dbg !2982

sw.bb13:                                          ; preds = %if.end
  %16 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2983
  %flag14 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %16, i32 0, i32 4, !dbg !2985
  %17 = load i32, i32* %flag14, align 4, !dbg !2985
  %and15 = and i32 %17, 2, !dbg !2986
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2986
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2987

if.then17:                                        ; preds = %sw.bb13
  store i32 0, i32* %sel.addr, align 4, !dbg !2988
  br label %if.end18, !dbg !2989

if.end18:                                         ; preds = %if.then17, %sw.bb13
  br label %sw.epilog, !dbg !2990

sw.bb19:                                          ; preds = %if.end
  %18 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2991
  %flag20 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %18, i32 0, i32 4, !dbg !2993
  %19 = load i32, i32* %flag20, align 4, !dbg !2993
  %and21 = and i32 %19, 2, !dbg !2994
  %tobool22 = icmp ne i32 %and21, 0, !dbg !2994
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !2995

if.then23:                                        ; preds = %sw.bb19
  store i32 0, i32* %sel.addr, align 4, !dbg !2996
  br label %if.end24, !dbg !2997

if.end24:                                         ; preds = %if.then23, %sw.bb19
  br label %sw.epilog, !dbg !2998

sw.bb25:                                          ; preds = %if.end
  %20 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !2999
  %flag26 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %20, i32 0, i32 4, !dbg !3001
  %21 = load i32, i32* %flag26, align 4, !dbg !3001
  %and27 = and i32 %21, 2, !dbg !3002
  %tobool28 = icmp ne i32 %and27, 0, !dbg !3002
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !3003

if.then29:                                        ; preds = %sw.bb25
  store i32 0, i32* %sel.addr, align 4, !dbg !3004
  br label %if.end30, !dbg !3005

if.end30:                                         ; preds = %if.then29, %sw.bb25
  br label %sw.epilog, !dbg !3006

sw.bb31:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %22 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3007
  %adt = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %22, i32 0, i32 10, !dbg !3010
  %23 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3010
  %tobool32 = icmp ne %struct.AnimData* %23, null, !dbg !3011
  br i1 %tobool32, label %land.lhs.true, label %if.end38, !dbg !3012

land.lhs.true:                                    ; preds = %sw.bb31
  %24 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3013
  %adt33 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %24, i32 0, i32 10, !dbg !3014
  %25 = load %struct.AnimData*, %struct.AnimData** %adt33, align 8, !dbg !3014
  %flag34 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %25, i32 0, i32 7, !dbg !3015
  %26 = load i32, i32* %flag34, align 8, !dbg !3015
  %and35 = and i32 %26, 16384, !dbg !3016
  %tobool36 = icmp ne i32 %and35, 0, !dbg !3016
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3017

if.then37:                                        ; preds = %land.lhs.true
  store i32 0, i32* %sel.addr, align 4, !dbg !3018
  br label %if.end38, !dbg !3019

if.end38:                                         ; preds = %if.then37, %land.lhs.true, %sw.bb31
  br label %sw.epilog, !dbg !3020

sw.bb39:                                          ; preds = %if.end
  %27 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3021
  %flag40 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %27, i32 0, i32 4, !dbg !3023
  %28 = load i32, i32* %flag40, align 4, !dbg !3023
  %and41 = and i32 %28, 32, !dbg !3024
  %tobool42 = icmp ne i32 %and41, 0, !dbg !3024
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !3025

if.then43:                                        ; preds = %sw.bb39
  store i32 0, i32* %sel.addr, align 4, !dbg !3026
  br label %if.end44, !dbg !3027

if.end44:                                         ; preds = %if.then43, %sw.bb39
  br label %sw.epilog, !dbg !3028

sw.bb45:                                          ; preds = %if.end
  %29 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3029
  %flag46 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %29, i32 0, i32 4, !dbg !3031
  %30 = load i32, i32* %flag46, align 4, !dbg !3031
  %and47 = and i32 %30, 32, !dbg !3032
  %tobool48 = icmp ne i32 %and47, 0, !dbg !3032
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !3033

if.then49:                                        ; preds = %sw.bb45
  store i32 0, i32* %sel.addr, align 4, !dbg !3034
  br label %if.end50, !dbg !3035

if.end50:                                         ; preds = %if.then49, %sw.bb45
  br label %sw.epilog, !dbg !3036

sw.epilog:                                        ; preds = %if.end, %if.end50, %if.end44, %if.end38, %if.end30, %if.end24, %if.end18, %if.end12, %sw.bb6, %if.end5
  br label %for.inc, !dbg !3037

for.inc:                                          ; preds = %sw.epilog
  %31 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3038
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %31, i32 0, i32 0, !dbg !3039
  %32 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !3039
  store %struct.bAnimListElem* %32, %struct.bAnimListElem** %ale, align 8, !dbg !3040
  br label %for.cond, !dbg !3041, !llvm.loop !3042

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end51, !dbg !3044

if.end51:                                         ; preds = %for.end, %entry
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !3045
  %33 = load i8*, i8** %first52, align 8, !dbg !3045
  %34 = bitcast i8* %33 to %struct.bAnimListElem*, !dbg !3047
  store %struct.bAnimListElem* %34, %struct.bAnimListElem** %ale, align 8, !dbg !3048
  br label %for.cond53, !dbg !3049

for.cond53:                                       ; preds = %for.inc265, %if.end51
  %35 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3050
  %tobool54 = icmp ne %struct.bAnimListElem* %35, null, !dbg !3052
  br i1 %tobool54, label %for.body55, label %for.end267, !dbg !3052

for.body55:                                       ; preds = %for.cond53
  %36 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3053
  %type56 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %36, i32 0, i32 3, !dbg !3055
  %37 = load i32, i32* %type56, align 8, !dbg !3055
  switch i32 %37, label %sw.epilog264 [
    i32 4, label %sw.bb57
    i32 5, label %sw.bb102
    i32 6, label %sw.bb103
    i32 7, label %sw.bb123
    i32 25, label %sw.bb151
    i32 30, label %sw.bb175
    i32 8, label %sw.bb195
    i32 10, label %sw.bb195
    i32 11, label %sw.bb195
    i32 12, label %sw.bb195
    i32 13, label %sw.bb195
    i32 14, label %sw.bb195
    i32 15, label %sw.bb195
    i32 17, label %sw.bb195
    i32 18, label %sw.bb195
    i32 19, label %sw.bb195
    i32 20, label %sw.bb195
    i32 16, label %sw.bb195
    i32 21, label %sw.bb195
    i32 22, label %sw.bb195
    i32 23, label %sw.bb195
    i32 24, label %sw.bb195
    i32 27, label %sw.bb222
    i32 29, label %sw.bb240
  ], !dbg !3056

sw.bb57:                                          ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3057, metadata !DIExpression()), !dbg !3060
  %38 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3061
  %data58 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %38, i32 0, i32 2, !dbg !3062
  %39 = load i8*, i8** %data58, align 8, !dbg !3062
  %40 = bitcast i8* %39 to %struct.Scene*, !dbg !3063
  store %struct.Scene* %40, %struct.Scene** %scene, align 8, !dbg !3060
  %41 = load i32, i32* %sel.addr, align 4, !dbg !3064
  %cmp59 = icmp eq i32 %41, 2, !dbg !3064
  br i1 %cmp59, label %if.then60, label %if.else, !dbg !3067

if.then60:                                        ; preds = %sw.bb57
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3064
  %flag61 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 15, !dbg !3064
  %43 = load i16, i16* %flag61, align 4, !dbg !3064
  %conv = sext i16 %43 to i32, !dbg !3064
  %xor = xor i32 %conv, 1, !dbg !3064
  %conv62 = trunc i32 %xor to i16, !dbg !3064
  store i16 %conv62, i16* %flag61, align 4, !dbg !3064
  br label %if.end75, !dbg !3064

if.else:                                          ; preds = %sw.bb57
  %44 = load i32, i32* %sel.addr, align 4, !dbg !3068
  %cmp63 = icmp eq i32 %44, 1, !dbg !3068
  br i1 %cmp63, label %if.then65, label %if.else69, !dbg !3064

if.then65:                                        ; preds = %if.else
  %45 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3068
  %flag66 = getelementptr inbounds %struct.Scene, %struct.Scene* %45, i32 0, i32 15, !dbg !3068
  %46 = load i16, i16* %flag66, align 4, !dbg !3068
  %conv67 = sext i16 %46 to i32, !dbg !3068
  %or = or i32 %conv67, 1, !dbg !3068
  %conv68 = trunc i32 %or to i16, !dbg !3068
  store i16 %conv68, i16* %flag66, align 4, !dbg !3068
  br label %if.end74, !dbg !3068

if.else69:                                        ; preds = %if.else
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3068
  %flag70 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 15, !dbg !3068
  %48 = load i16, i16* %flag70, align 4, !dbg !3068
  %conv71 = sext i16 %48 to i32, !dbg !3068
  %and72 = and i32 %conv71, -2, !dbg !3068
  %conv73 = trunc i32 %and72 to i16, !dbg !3068
  store i16 %conv73, i16* %flag70, align 4, !dbg !3068
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.then65
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then60
  %49 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3070
  %adt76 = getelementptr inbounds %struct.Scene, %struct.Scene* %49, i32 0, i32 1, !dbg !3072
  %50 = load %struct.AnimData*, %struct.AnimData** %adt76, align 8, !dbg !3072
  %tobool77 = icmp ne %struct.AnimData* %50, null, !dbg !3070
  br i1 %tobool77, label %if.then78, label %if.end101, !dbg !3073

if.then78:                                        ; preds = %if.end75
  %51 = load i32, i32* %sel.addr, align 4, !dbg !3074
  %cmp79 = icmp eq i32 %51, 2, !dbg !3074
  br i1 %cmp79, label %if.then81, label %if.else86, !dbg !3078

if.then81:                                        ; preds = %if.then78
  %52 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3074
  %flag82 = getelementptr inbounds %struct.Scene, %struct.Scene* %52, i32 0, i32 15, !dbg !3074
  %53 = load i16, i16* %flag82, align 4, !dbg !3074
  %conv83 = sext i16 %53 to i32, !dbg !3074
  %xor84 = xor i32 %conv83, 16384, !dbg !3074
  %conv85 = trunc i32 %xor84 to i16, !dbg !3074
  store i16 %conv85, i16* %flag82, align 4, !dbg !3074
  br label %if.end100, !dbg !3074

if.else86:                                        ; preds = %if.then78
  %54 = load i32, i32* %sel.addr, align 4, !dbg !3079
  %cmp87 = icmp eq i32 %54, 1, !dbg !3079
  br i1 %cmp87, label %if.then89, label %if.else94, !dbg !3074

if.then89:                                        ; preds = %if.else86
  %55 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3079
  %flag90 = getelementptr inbounds %struct.Scene, %struct.Scene* %55, i32 0, i32 15, !dbg !3079
  %56 = load i16, i16* %flag90, align 4, !dbg !3079
  %conv91 = sext i16 %56 to i32, !dbg !3079
  %or92 = or i32 %conv91, 16384, !dbg !3079
  %conv93 = trunc i32 %or92 to i16, !dbg !3079
  store i16 %conv93, i16* %flag90, align 4, !dbg !3079
  br label %if.end99, !dbg !3079

if.else94:                                        ; preds = %if.else86
  %57 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3079
  %flag95 = getelementptr inbounds %struct.Scene, %struct.Scene* %57, i32 0, i32 15, !dbg !3079
  %58 = load i16, i16* %flag95, align 4, !dbg !3079
  %conv96 = sext i16 %58 to i32, !dbg !3079
  %and97 = and i32 %conv96, -16385, !dbg !3079
  %conv98 = trunc i32 %and97 to i16, !dbg !3079
  store i16 %conv98, i16* %flag95, align 4, !dbg !3079
  br label %if.end99

if.end99:                                         ; preds = %if.else94, %if.then89
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then81
  br label %if.end101, !dbg !3081

if.end101:                                        ; preds = %if.end100, %if.end75
  br label %sw.epilog264, !dbg !3082

sw.bb102:                                         ; preds = %for.body55
  br label %sw.epilog264, !dbg !3083

sw.bb103:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !3085, metadata !DIExpression()), !dbg !3087
  %59 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3088
  %data104 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %59, i32 0, i32 2, !dbg !3089
  %60 = load i8*, i8** %data104, align 8, !dbg !3089
  %61 = bitcast i8* %60 to %struct.bActionGroup*, !dbg !3090
  store %struct.bActionGroup* %61, %struct.bActionGroup** %agrp, align 8, !dbg !3087
  %62 = load i32, i32* %sel.addr, align 4, !dbg !3091
  %cmp105 = icmp eq i32 %62, 2, !dbg !3091
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !3094

if.then107:                                       ; preds = %sw.bb103
  %63 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3091
  %flag108 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %63, i32 0, i32 3, !dbg !3091
  %64 = load i32, i32* %flag108, align 8, !dbg !3091
  %xor109 = xor i32 %64, 1, !dbg !3091
  store i32 %xor109, i32* %flag108, align 8, !dbg !3091
  br label %if.end120, !dbg !3091

if.else110:                                       ; preds = %sw.bb103
  %65 = load i32, i32* %sel.addr, align 4, !dbg !3095
  %cmp111 = icmp eq i32 %65, 1, !dbg !3095
  br i1 %cmp111, label %if.then113, label %if.else116, !dbg !3091

if.then113:                                       ; preds = %if.else110
  %66 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3095
  %flag114 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %66, i32 0, i32 3, !dbg !3095
  %67 = load i32, i32* %flag114, align 8, !dbg !3095
  %or115 = or i32 %67, 1, !dbg !3095
  store i32 %or115, i32* %flag114, align 8, !dbg !3095
  br label %if.end119, !dbg !3095

if.else116:                                       ; preds = %if.else110
  %68 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3095
  %flag117 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %68, i32 0, i32 3, !dbg !3095
  %69 = load i32, i32* %flag117, align 8, !dbg !3095
  %and118 = and i32 %69, -2, !dbg !3095
  store i32 %and118, i32* %flag117, align 8, !dbg !3095
  br label %if.end119

if.end119:                                        ; preds = %if.else116, %if.then113
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then107
  %70 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3097
  %flag121 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %70, i32 0, i32 3, !dbg !3098
  %71 = load i32, i32* %flag121, align 8, !dbg !3099
  %and122 = and i32 %71, -3, !dbg !3099
  store i32 %and122, i32* %flag121, align 8, !dbg !3099
  br label %sw.epilog264, !dbg !3100

sw.bb123:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3101, metadata !DIExpression()), !dbg !3103
  %72 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3104
  %data124 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %72, i32 0, i32 2, !dbg !3105
  %73 = load i8*, i8** %data124, align 8, !dbg !3105
  %74 = bitcast i8* %73 to %struct.FCurve*, !dbg !3106
  store %struct.FCurve* %74, %struct.FCurve** %fcu, align 8, !dbg !3103
  %75 = load i32, i32* %sel.addr, align 4, !dbg !3107
  %cmp125 = icmp eq i32 %75, 2, !dbg !3107
  br i1 %cmp125, label %if.then127, label %if.else132, !dbg !3110

if.then127:                                       ; preds = %sw.bb123
  %76 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3107
  %flag128 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %76, i32 0, i32 9, !dbg !3107
  %77 = load i16, i16* %flag128, align 8, !dbg !3107
  %conv129 = sext i16 %77 to i32, !dbg !3107
  %xor130 = xor i32 %conv129, 2, !dbg !3107
  %conv131 = trunc i32 %xor130 to i16, !dbg !3107
  store i16 %conv131, i16* %flag128, align 8, !dbg !3107
  br label %if.end146, !dbg !3107

if.else132:                                       ; preds = %sw.bb123
  %78 = load i32, i32* %sel.addr, align 4, !dbg !3111
  %cmp133 = icmp eq i32 %78, 1, !dbg !3111
  br i1 %cmp133, label %if.then135, label %if.else140, !dbg !3107

if.then135:                                       ; preds = %if.else132
  %79 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3111
  %flag136 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %79, i32 0, i32 9, !dbg !3111
  %80 = load i16, i16* %flag136, align 8, !dbg !3111
  %conv137 = sext i16 %80 to i32, !dbg !3111
  %or138 = or i32 %conv137, 2, !dbg !3111
  %conv139 = trunc i32 %or138 to i16, !dbg !3111
  store i16 %conv139, i16* %flag136, align 8, !dbg !3111
  br label %if.end145, !dbg !3111

if.else140:                                       ; preds = %if.else132
  %81 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3111
  %flag141 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %81, i32 0, i32 9, !dbg !3111
  %82 = load i16, i16* %flag141, align 8, !dbg !3111
  %conv142 = sext i16 %82 to i32, !dbg !3111
  %and143 = and i32 %conv142, -3, !dbg !3111
  %conv144 = trunc i32 %and143 to i16, !dbg !3111
  store i16 %conv144, i16* %flag141, align 8, !dbg !3111
  br label %if.end145

if.end145:                                        ; preds = %if.else140, %if.then135
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then127
  %83 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3113
  %flag147 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %83, i32 0, i32 9, !dbg !3114
  %84 = load i16, i16* %flag147, align 8, !dbg !3115
  %conv148 = sext i16 %84 to i32, !dbg !3115
  %and149 = and i32 %conv148, -5, !dbg !3115
  %conv150 = trunc i32 %and149 to i16, !dbg !3115
  store i16 %conv150, i16* %flag147, align 8, !dbg !3115
  br label %sw.epilog264, !dbg !3116

sw.bb151:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !3117, metadata !DIExpression()), !dbg !3119
  %85 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3120
  %data152 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %85, i32 0, i32 2, !dbg !3121
  %86 = load i8*, i8** %data152, align 8, !dbg !3121
  %87 = bitcast i8* %86 to %struct.KeyBlock*, !dbg !3122
  store %struct.KeyBlock* %87, %struct.KeyBlock** %kb, align 8, !dbg !3119
  %88 = load i32, i32* %sel.addr, align 4, !dbg !3123
  %cmp153 = icmp eq i32 %88, 2, !dbg !3123
  br i1 %cmp153, label %if.then155, label %if.else160, !dbg !3126

if.then155:                                       ; preds = %sw.bb151
  %89 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !3123
  %flag156 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %89, i32 0, i32 7, !dbg !3123
  %90 = load i16, i16* %flag156, align 2, !dbg !3123
  %conv157 = sext i16 %90 to i32, !dbg !3123
  %xor158 = xor i32 %conv157, 2, !dbg !3123
  %conv159 = trunc i32 %xor158 to i16, !dbg !3123
  store i16 %conv159, i16* %flag156, align 2, !dbg !3123
  br label %if.end174, !dbg !3123

if.else160:                                       ; preds = %sw.bb151
  %91 = load i32, i32* %sel.addr, align 4, !dbg !3127
  %cmp161 = icmp eq i32 %91, 1, !dbg !3127
  br i1 %cmp161, label %if.then163, label %if.else168, !dbg !3123

if.then163:                                       ; preds = %if.else160
  %92 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !3127
  %flag164 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %92, i32 0, i32 7, !dbg !3127
  %93 = load i16, i16* %flag164, align 2, !dbg !3127
  %conv165 = sext i16 %93 to i32, !dbg !3127
  %or166 = or i32 %conv165, 2, !dbg !3127
  %conv167 = trunc i32 %or166 to i16, !dbg !3127
  store i16 %conv167, i16* %flag164, align 2, !dbg !3127
  br label %if.end173, !dbg !3127

if.else168:                                       ; preds = %if.else160
  %94 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !3127
  %flag169 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %94, i32 0, i32 7, !dbg !3127
  %95 = load i16, i16* %flag169, align 2, !dbg !3127
  %conv170 = sext i16 %95 to i32, !dbg !3127
  %and171 = and i32 %conv170, -3, !dbg !3127
  %conv172 = trunc i32 %and171 to i16, !dbg !3127
  store i16 %conv172, i16* %flag169, align 2, !dbg !3127
  br label %if.end173

if.end173:                                        ; preds = %if.else168, %if.then163
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then155
  br label %sw.epilog264, !dbg !3129

sw.bb175:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !3130, metadata !DIExpression()), !dbg !3132
  %96 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3133
  %data176 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %96, i32 0, i32 2, !dbg !3134
  %97 = load i8*, i8** %data176, align 8, !dbg !3134
  %98 = bitcast i8* %97 to %struct.NlaTrack*, !dbg !3135
  store %struct.NlaTrack* %98, %struct.NlaTrack** %nlt, align 8, !dbg !3132
  %99 = load i32, i32* %sel.addr, align 4, !dbg !3136
  %cmp177 = icmp eq i32 %99, 2, !dbg !3136
  br i1 %cmp177, label %if.then179, label %if.else182, !dbg !3139

if.then179:                                       ; preds = %sw.bb175
  %100 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3136
  %flag180 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %100, i32 0, i32 3, !dbg !3136
  %101 = load i32, i32* %flag180, align 8, !dbg !3136
  %xor181 = xor i32 %101, 2, !dbg !3136
  store i32 %xor181, i32* %flag180, align 8, !dbg !3136
  br label %if.end192, !dbg !3136

if.else182:                                       ; preds = %sw.bb175
  %102 = load i32, i32* %sel.addr, align 4, !dbg !3140
  %cmp183 = icmp eq i32 %102, 1, !dbg !3140
  br i1 %cmp183, label %if.then185, label %if.else188, !dbg !3136

if.then185:                                       ; preds = %if.else182
  %103 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3140
  %flag186 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %103, i32 0, i32 3, !dbg !3140
  %104 = load i32, i32* %flag186, align 8, !dbg !3140
  %or187 = or i32 %104, 2, !dbg !3140
  store i32 %or187, i32* %flag186, align 8, !dbg !3140
  br label %if.end191, !dbg !3140

if.else188:                                       ; preds = %if.else182
  %105 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3140
  %flag189 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %105, i32 0, i32 3, !dbg !3140
  %106 = load i32, i32* %flag189, align 8, !dbg !3140
  %and190 = and i32 %106, -3, !dbg !3140
  store i32 %and190, i32* %flag189, align 8, !dbg !3140
  br label %if.end191

if.end191:                                        ; preds = %if.else188, %if.then185
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then179
  %107 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3142
  %flag193 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %107, i32 0, i32 3, !dbg !3143
  %108 = load i32, i32* %flag193, align 8, !dbg !3144
  %and194 = and i32 %108, -2, !dbg !3144
  store i32 %and194, i32* %flag193, align 8, !dbg !3144
  br label %sw.epilog264, !dbg !3145

sw.bb195:                                         ; preds = %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55, %for.body55
  %109 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3146
  %adt196 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %109, i32 0, i32 10, !dbg !3149
  %110 = load %struct.AnimData*, %struct.AnimData** %adt196, align 8, !dbg !3149
  %tobool197 = icmp ne %struct.AnimData* %110, null, !dbg !3146
  br i1 %tobool197, label %if.then198, label %if.end221, !dbg !3150

if.then198:                                       ; preds = %sw.bb195
  %111 = load i32, i32* %sel.addr, align 4, !dbg !3151
  %cmp199 = icmp eq i32 %111, 2, !dbg !3151
  br i1 %cmp199, label %if.then201, label %if.else205, !dbg !3155

if.then201:                                       ; preds = %if.then198
  %112 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3151
  %adt202 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %112, i32 0, i32 10, !dbg !3151
  %113 = load %struct.AnimData*, %struct.AnimData** %adt202, align 8, !dbg !3151
  %flag203 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %113, i32 0, i32 7, !dbg !3151
  %114 = load i32, i32* %flag203, align 8, !dbg !3151
  %xor204 = xor i32 %114, 16384, !dbg !3151
  store i32 %xor204, i32* %flag203, align 8, !dbg !3151
  br label %if.end217, !dbg !3151

if.else205:                                       ; preds = %if.then198
  %115 = load i32, i32* %sel.addr, align 4, !dbg !3156
  %cmp206 = icmp eq i32 %115, 1, !dbg !3156
  br i1 %cmp206, label %if.then208, label %if.else212, !dbg !3151

if.then208:                                       ; preds = %if.else205
  %116 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3156
  %adt209 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %116, i32 0, i32 10, !dbg !3156
  %117 = load %struct.AnimData*, %struct.AnimData** %adt209, align 8, !dbg !3156
  %flag210 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %117, i32 0, i32 7, !dbg !3156
  %118 = load i32, i32* %flag210, align 8, !dbg !3156
  %or211 = or i32 %118, 16384, !dbg !3156
  store i32 %or211, i32* %flag210, align 8, !dbg !3156
  br label %if.end216, !dbg !3156

if.else212:                                       ; preds = %if.else205
  %119 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3156
  %adt213 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %119, i32 0, i32 10, !dbg !3156
  %120 = load %struct.AnimData*, %struct.AnimData** %adt213, align 8, !dbg !3156
  %flag214 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %120, i32 0, i32 7, !dbg !3156
  %121 = load i32, i32* %flag214, align 8, !dbg !3156
  %and215 = and i32 %121, -16385, !dbg !3156
  store i32 %and215, i32* %flag214, align 8, !dbg !3156
  br label %if.end216

if.end216:                                        ; preds = %if.else212, %if.then208
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then201
  %122 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3158
  %adt218 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %122, i32 0, i32 10, !dbg !3159
  %123 = load %struct.AnimData*, %struct.AnimData** %adt218, align 8, !dbg !3159
  %flag219 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %123, i32 0, i32 7, !dbg !3160
  %124 = load i32, i32* %flag219, align 8, !dbg !3161
  %and220 = and i32 %124, -32769, !dbg !3161
  store i32 %and220, i32* %flag219, align 8, !dbg !3161
  br label %if.end221, !dbg !3162

if.end221:                                        ; preds = %if.end217, %sw.bb195
  br label %sw.epilog264, !dbg !3163

sw.bb222:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.bGPDlayer** %gpl, metadata !3164, metadata !DIExpression()), !dbg !3166
  %125 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3167
  %data223 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %125, i32 0, i32 2, !dbg !3168
  %126 = load i8*, i8** %data223, align 8, !dbg !3168
  %127 = bitcast i8* %126 to %struct.bGPDlayer*, !dbg !3169
  store %struct.bGPDlayer* %127, %struct.bGPDlayer** %gpl, align 8, !dbg !3166
  %128 = load i32, i32* %sel.addr, align 4, !dbg !3170
  %cmp224 = icmp eq i32 %128, 2, !dbg !3170
  br i1 %cmp224, label %if.then226, label %if.else229, !dbg !3173

if.then226:                                       ; preds = %sw.bb222
  %129 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !3170
  %flag227 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %129, i32 0, i32 4, !dbg !3170
  %130 = load i32, i32* %flag227, align 8, !dbg !3170
  %xor228 = xor i32 %130, 32, !dbg !3170
  store i32 %xor228, i32* %flag227, align 8, !dbg !3170
  br label %if.end239, !dbg !3170

if.else229:                                       ; preds = %sw.bb222
  %131 = load i32, i32* %sel.addr, align 4, !dbg !3174
  %cmp230 = icmp eq i32 %131, 1, !dbg !3174
  br i1 %cmp230, label %if.then232, label %if.else235, !dbg !3170

if.then232:                                       ; preds = %if.else229
  %132 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !3174
  %flag233 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %132, i32 0, i32 4, !dbg !3174
  %133 = load i32, i32* %flag233, align 8, !dbg !3174
  %or234 = or i32 %133, 32, !dbg !3174
  store i32 %or234, i32* %flag233, align 8, !dbg !3174
  br label %if.end238, !dbg !3174

if.else235:                                       ; preds = %if.else229
  %134 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !3174
  %flag236 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %134, i32 0, i32 4, !dbg !3174
  %135 = load i32, i32* %flag236, align 8, !dbg !3174
  %and237 = and i32 %135, -33, !dbg !3174
  store i32 %and237, i32* %flag236, align 8, !dbg !3174
  br label %if.end238

if.end238:                                        ; preds = %if.else235, %if.then232
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %if.then226
  br label %sw.epilog264, !dbg !3176

sw.bb240:                                         ; preds = %for.body55
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !3177, metadata !DIExpression()), !dbg !3179
  %136 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3180
  %data241 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %136, i32 0, i32 2, !dbg !3181
  %137 = load i8*, i8** %data241, align 8, !dbg !3181
  %138 = bitcast i8* %137 to %struct.MaskLayer*, !dbg !3182
  store %struct.MaskLayer* %138, %struct.MaskLayer** %masklay, align 8, !dbg !3179
  %139 = load i32, i32* %sel.addr, align 4, !dbg !3183
  %cmp242 = icmp eq i32 %139, 2, !dbg !3183
  br i1 %cmp242, label %if.then244, label %if.else249, !dbg !3186

if.then244:                                       ; preds = %sw.bb240
  %140 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3183
  %flag245 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %140, i32 0, i32 12, !dbg !3183
  %141 = load i8, i8* %flag245, align 2, !dbg !3183
  %conv246 = zext i8 %141 to i32, !dbg !3183
  %xor247 = xor i32 %conv246, 32, !dbg !3183
  %conv248 = trunc i32 %xor247 to i8, !dbg !3183
  store i8 %conv248, i8* %flag245, align 2, !dbg !3183
  br label %if.end263, !dbg !3183

if.else249:                                       ; preds = %sw.bb240
  %142 = load i32, i32* %sel.addr, align 4, !dbg !3187
  %cmp250 = icmp eq i32 %142, 1, !dbg !3187
  br i1 %cmp250, label %if.then252, label %if.else257, !dbg !3183

if.then252:                                       ; preds = %if.else249
  %143 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3187
  %flag253 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %143, i32 0, i32 12, !dbg !3187
  %144 = load i8, i8* %flag253, align 2, !dbg !3187
  %conv254 = zext i8 %144 to i32, !dbg !3187
  %or255 = or i32 %conv254, 32, !dbg !3187
  %conv256 = trunc i32 %or255 to i8, !dbg !3187
  store i8 %conv256, i8* %flag253, align 2, !dbg !3187
  br label %if.end262, !dbg !3187

if.else257:                                       ; preds = %if.else249
  %145 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3187
  %flag258 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %145, i32 0, i32 12, !dbg !3187
  %146 = load i8, i8* %flag258, align 2, !dbg !3187
  %conv259 = zext i8 %146 to i32, !dbg !3187
  %and260 = and i32 %conv259, -33, !dbg !3187
  %conv261 = trunc i32 %and260 to i8, !dbg !3187
  store i8 %conv261, i8* %flag258, align 2, !dbg !3187
  br label %if.end262

if.end262:                                        ; preds = %if.else257, %if.then252
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then244
  br label %sw.epilog264, !dbg !3189

sw.epilog264:                                     ; preds = %for.body55, %if.end263, %if.end239, %if.end221, %if.end192, %if.end174, %if.end146, %if.end120, %sw.bb102, %if.end101
  br label %for.inc265, !dbg !3190

for.inc265:                                       ; preds = %sw.epilog264
  %147 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3191
  %next266 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %147, i32 0, i32 0, !dbg !3192
  %148 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next266, align 8, !dbg !3192
  store %struct.bAnimListElem* %148, %struct.bAnimListElem** %ale, align 8, !dbg !3193
  br label %for.cond53, !dbg !3194, !llvm.loop !3195

for.end267:                                       ; preds = %for.cond53
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !3197
  ret void, !dbg !3198
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ANIM_flush_setting_anim_channels(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, %struct.bAnimListElem* %ale_setting, i32 %setting, i32 %mode) #0 !dbg !3199 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %anim_data.addr = alloca %struct.ListBase*, align 8
  %ale_setting.addr = alloca %struct.bAnimListElem*, align 8
  %setting.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ale = alloca %struct.bAnimListElem*, align 8
  %match = alloca %struct.bAnimListElem*, align 8
  %prevLevel = alloca i32, align 4
  %matchLevel = alloca i32, align 4
  %acf = alloca %struct.bAnimChannelType*, align 8
  %acf39 = alloca %struct.bAnimChannelType*, align 8
  %level = alloca i32, align 4
  %acf75 = alloca %struct.bAnimChannelType*, align 8
  %level77 = alloca i32, align 4
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !3203, metadata !DIExpression()), !dbg !3204
  store %struct.ListBase* %anim_data, %struct.ListBase** %anim_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %anim_data.addr, metadata !3205, metadata !DIExpression()), !dbg !3206
  store %struct.bAnimListElem* %ale_setting, %struct.bAnimListElem** %ale_setting.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale_setting.addr, metadata !3207, metadata !DIExpression()), !dbg !3208
  store i32 %setting, i32* %setting.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %setting.addr, metadata !3209, metadata !DIExpression()), !dbg !3210
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3211, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !3213, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %match, metadata !3215, metadata !DIExpression()), !dbg !3216
  store %struct.bAnimListElem* null, %struct.bAnimListElem** %match, align 8, !dbg !3216
  call void @llvm.dbg.declare(metadata i32* %prevLevel, metadata !3217, metadata !DIExpression()), !dbg !3218
  store i32 0, i32* %prevLevel, align 4, !dbg !3218
  call void @llvm.dbg.declare(metadata i32* %matchLevel, metadata !3219, metadata !DIExpression()), !dbg !3220
  store i32 0, i32* %matchLevel, align 4, !dbg !3220
  %0 = load %struct.ListBase*, %struct.ListBase** %anim_data.addr, align 8, !dbg !3221
  %cmp = icmp eq %struct.ListBase* null, %0, !dbg !3221
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3221

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %anim_data.addr, align 8, !dbg !3221
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3221
  %2 = load i8*, i8** %first, align 8, !dbg !3221
  %cmp1 = icmp eq i8* null, %2, !dbg !3221
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3223

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end98, !dbg !3224

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ListBase*, %struct.ListBase** %anim_data.addr, align 8, !dbg !3225
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !3227
  %4 = load i8*, i8** %first2, align 8, !dbg !3227
  %5 = bitcast i8* %4 to %struct.bAnimListElem*, !dbg !3225
  store %struct.bAnimListElem* %5, %struct.bAnimListElem** %ale, align 8, !dbg !3228
  br label %for.cond, !dbg !3229

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3230
  %tobool = icmp ne %struct.bAnimListElem* %6, null, !dbg !3232
  br i1 %tobool, label %for.body, label %for.end, !dbg !3232

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3233
  %data = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %7, i32 0, i32 2, !dbg !3236
  %8 = load i8*, i8** %data, align 8, !dbg !3236
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_setting.addr, align 8, !dbg !3237
  %data3 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %9, i32 0, i32 2, !dbg !3238
  %10 = load i8*, i8** %data3, align 8, !dbg !3238
  %cmp4 = icmp eq i8* %8, %10, !dbg !3239
  br i1 %cmp4, label %land.lhs.true, label %if.end12, !dbg !3240

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3241
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %11, i32 0, i32 3, !dbg !3242
  %12 = load i32, i32* %type, align 8, !dbg !3242
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_setting.addr, align 8, !dbg !3243
  %type5 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %13, i32 0, i32 3, !dbg !3244
  %14 = load i32, i32* %type5, align 8, !dbg !3244
  %cmp6 = icmp eq i32 %12, %14, !dbg !3245
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !3246

if.then7:                                         ; preds = %land.lhs.true
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3247
  %id = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %15, i32 0, i32 9, !dbg !3250
  %16 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3250
  %17 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_setting.addr, align 8, !dbg !3251
  %id8 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %17, i32 0, i32 9, !dbg !3252
  %18 = load %struct.ID*, %struct.ID** %id8, align 8, !dbg !3252
  %cmp9 = icmp eq %struct.ID* %16, %18, !dbg !3253
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3254

if.then10:                                        ; preds = %if.then7
  %19 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3255
  store %struct.bAnimListElem* %19, %struct.bAnimListElem** %match, align 8, !dbg !3257
  br label %for.end, !dbg !3258

if.end11:                                         ; preds = %if.then7
  br label %if.end12, !dbg !3259

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3260

for.inc:                                          ; preds = %if.end12
  %20 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3261
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %20, i32 0, i32 0, !dbg !3262
  %21 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !3262
  store %struct.bAnimListElem* %21, %struct.bAnimListElem** %ale, align 8, !dbg !3263
  br label %for.cond, !dbg !3264, !llvm.loop !3265

for.end:                                          ; preds = %if.then10, %for.cond
  %22 = load %struct.bAnimListElem*, %struct.bAnimListElem** %match, align 8, !dbg !3267
  %cmp13 = icmp eq %struct.bAnimListElem* %22, null, !dbg !3269
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !3270

if.then14:                                        ; preds = %for.end
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0)), !dbg !3271
  br label %for.end98, !dbg !3273

if.else:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.bAnimChannelType** %acf, metadata !3274, metadata !DIExpression()), !dbg !3334
  %23 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_setting.addr, align 8, !dbg !3335
  %call15 = call %struct.bAnimChannelType* @ANIM_channel_get_typeinfo(%struct.bAnimListElem* %23), !dbg !3336
  store %struct.bAnimChannelType* %call15, %struct.bAnimChannelType** %acf, align 8, !dbg !3334
  %24 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !3337
  %cmp16 = icmp eq %struct.bAnimChannelType* %24, null, !dbg !3339
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !3340

if.then17:                                        ; preds = %if.else
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0)), !dbg !3341
  br label %for.end98, !dbg !3343

if.end19:                                         ; preds = %if.else
  %25 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !3344
  %get_offset = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %25, i32 0, i32 5, !dbg !3345
  %26 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset, align 8, !dbg !3345
  %tobool20 = icmp ne i16 (%struct.bAnimContext*, %struct.bAnimListElem*)* %26, null, !dbg !3346
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !3346

cond.true:                                        ; preds = %if.end19
  %27 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !3347
  %get_offset21 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %27, i32 0, i32 5, !dbg !3348
  %28 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset21, align 8, !dbg !3348
  %29 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3349
  %30 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_setting.addr, align 8, !dbg !3350
  %call22 = call signext i16 %28(%struct.bAnimContext* %29, %struct.bAnimListElem* %30), !dbg !3347
  %conv = sext i16 %call22 to i32, !dbg !3347
  br label %cond.end, !dbg !3346

cond.false:                                       ; preds = %if.end19
  br label %cond.end, !dbg !3346

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !3346
  store i32 %cond, i32* %matchLevel, align 4, !dbg !3351
  %31 = load i32, i32* %matchLevel, align 4, !dbg !3352
  store i32 %31, i32* %prevLevel, align 4, !dbg !3353
  br label %if.end23

if.end23:                                         ; preds = %cond.end
  %32 = load i32, i32* %setting.addr, align 4, !dbg !3354
  %cmp24 = icmp eq i32 %32, 4, !dbg !3356
  br i1 %cmp24, label %land.lhs.true26, label %lor.lhs.false29, !dbg !3357

land.lhs.true26:                                  ; preds = %if.end23
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3358
  %cmp27 = icmp ne i32 %33, 0, !dbg !3359
  br i1 %cmp27, label %if.then35, label %lor.lhs.false29, !dbg !3360

lor.lhs.false29:                                  ; preds = %land.lhs.true26, %if.end23
  %34 = load i32, i32* %setting.addr, align 4, !dbg !3361
  %cmp30 = icmp ne i32 %34, 4, !dbg !3362
  br i1 %cmp30, label %land.lhs.true32, label %if.end70, !dbg !3363

land.lhs.true32:                                  ; preds = %lor.lhs.false29
  %35 = load i32, i32* %mode.addr, align 4, !dbg !3364
  %cmp33 = icmp eq i32 %35, 0, !dbg !3365
  br i1 %cmp33, label %if.then35, label %if.end70, !dbg !3366

if.then35:                                        ; preds = %land.lhs.true32, %land.lhs.true26
  %36 = load %struct.bAnimListElem*, %struct.bAnimListElem** %match, align 8, !dbg !3367
  %prev = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %36, i32 0, i32 1, !dbg !3370
  %37 = load %struct.bAnimListElem*, %struct.bAnimListElem** %prev, align 8, !dbg !3370
  store %struct.bAnimListElem* %37, %struct.bAnimListElem** %ale, align 8, !dbg !3371
  br label %for.cond36, !dbg !3372

for.cond36:                                       ; preds = %for.inc67, %if.then35
  %38 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3373
  %tobool37 = icmp ne %struct.bAnimListElem* %38, null, !dbg !3375
  br i1 %tobool37, label %for.body38, label %for.end69, !dbg !3375

for.body38:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata %struct.bAnimChannelType** %acf39, metadata !3376, metadata !DIExpression()), !dbg !3378
  %39 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3379
  %call40 = call %struct.bAnimChannelType* @ANIM_channel_get_typeinfo(%struct.bAnimListElem* %39), !dbg !3380
  store %struct.bAnimChannelType* %call40, %struct.bAnimChannelType** %acf39, align 8, !dbg !3378
  call void @llvm.dbg.declare(metadata i32* %level, metadata !3381, metadata !DIExpression()), !dbg !3382
  %40 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf39, align 8, !dbg !3383
  %cmp41 = icmp eq %struct.bAnimChannelType* %40, null, !dbg !3385
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !3386

if.then43:                                        ; preds = %for.body38
  br label %for.inc67, !dbg !3387

if.end44:                                         ; preds = %for.body38
  %41 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf39, align 8, !dbg !3388
  %get_offset45 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %41, i32 0, i32 5, !dbg !3389
  %42 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset45, align 8, !dbg !3389
  %tobool46 = icmp ne i16 (%struct.bAnimContext*, %struct.bAnimListElem*)* %42, null, !dbg !3390
  br i1 %tobool46, label %cond.true47, label %cond.false51, !dbg !3390

cond.true47:                                      ; preds = %if.end44
  %43 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf39, align 8, !dbg !3391
  %get_offset48 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %43, i32 0, i32 5, !dbg !3392
  %44 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset48, align 8, !dbg !3392
  %45 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3393
  %46 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3394
  %call49 = call signext i16 %44(%struct.bAnimContext* %45, %struct.bAnimListElem* %46), !dbg !3391
  %conv50 = sext i16 %call49 to i32, !dbg !3391
  br label %cond.end52, !dbg !3390

cond.false51:                                     ; preds = %if.end44
  br label %cond.end52, !dbg !3390

cond.end52:                                       ; preds = %cond.false51, %cond.true47
  %cond53 = phi i32 [ %conv50, %cond.true47 ], [ 0, %cond.false51 ], !dbg !3390
  store i32 %cond53, i32* %level, align 4, !dbg !3395
  %47 = load i32, i32* %level, align 4, !dbg !3396
  %48 = load i32, i32* %prevLevel, align 4, !dbg !3398
  %cmp54 = icmp slt i32 %47, %48, !dbg !3399
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !3400

if.then56:                                        ; preds = %cond.end52
  %49 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3401
  %50 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3403
  %51 = load i32, i32* %setting.addr, align 4, !dbg !3404
  %52 = load i32, i32* %mode.addr, align 4, !dbg !3405
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %49, %struct.bAnimListElem* %50, i32 %51, i32 %52), !dbg !3406
  %53 = load i32, i32* %level, align 4, !dbg !3407
  store i32 %53, i32* %prevLevel, align 4, !dbg !3408
  br label %if.end66, !dbg !3409

if.else57:                                        ; preds = %cond.end52
  %54 = load i32, i32* %level, align 4, !dbg !3410
  %55 = load i32, i32* %prevLevel, align 4, !dbg !3412
  %cmp58 = icmp sgt i32 %54, %55, !dbg !3413
  br i1 %cmp58, label %if.then60, label %if.end65, !dbg !3414

if.then60:                                        ; preds = %if.else57
  %56 = load i32, i32* %prevLevel, align 4, !dbg !3415
  %cmp61 = icmp eq i32 %56, 0, !dbg !3418
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !3419

if.then63:                                        ; preds = %if.then60
  br label %for.end69, !dbg !3420

if.else64:                                        ; preds = %if.then60
  br label %for.inc67, !dbg !3421

if.end65:                                         ; preds = %if.else57
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then56
  br label %for.inc67, !dbg !3422

for.inc67:                                        ; preds = %if.end66, %if.else64, %if.then43
  %57 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3423
  %prev68 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %57, i32 0, i32 1, !dbg !3424
  %58 = load %struct.bAnimListElem*, %struct.bAnimListElem** %prev68, align 8, !dbg !3424
  store %struct.bAnimListElem* %58, %struct.bAnimListElem** %ale, align 8, !dbg !3425
  br label %for.cond36, !dbg !3426, !llvm.loop !3427

for.end69:                                        ; preds = %if.then63, %for.cond36
  br label %if.end70, !dbg !3429

if.end70:                                         ; preds = %for.end69, %land.lhs.true32, %lor.lhs.false29
  %59 = load %struct.bAnimListElem*, %struct.bAnimListElem** %match, align 8, !dbg !3430
  %next71 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %59, i32 0, i32 0, !dbg !3433
  %60 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next71, align 8, !dbg !3433
  store %struct.bAnimListElem* %60, %struct.bAnimListElem** %ale, align 8, !dbg !3434
  br label %for.cond72, !dbg !3435

for.cond72:                                       ; preds = %for.inc96, %if.end70
  %61 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3436
  %tobool73 = icmp ne %struct.bAnimListElem* %61, null, !dbg !3438
  br i1 %tobool73, label %for.body74, label %for.end98, !dbg !3438

for.body74:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata %struct.bAnimChannelType** %acf75, metadata !3439, metadata !DIExpression()), !dbg !3441
  %62 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3442
  %call76 = call %struct.bAnimChannelType* @ANIM_channel_get_typeinfo(%struct.bAnimListElem* %62), !dbg !3443
  store %struct.bAnimChannelType* %call76, %struct.bAnimChannelType** %acf75, align 8, !dbg !3441
  call void @llvm.dbg.declare(metadata i32* %level77, metadata !3444, metadata !DIExpression()), !dbg !3445
  %63 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf75, align 8, !dbg !3446
  %cmp78 = icmp eq %struct.bAnimChannelType* %63, null, !dbg !3448
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !3449

if.then80:                                        ; preds = %for.body74
  br label %for.inc96, !dbg !3450

if.end81:                                         ; preds = %for.body74
  %64 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf75, align 8, !dbg !3451
  %get_offset82 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %64, i32 0, i32 5, !dbg !3452
  %65 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset82, align 8, !dbg !3452
  %tobool83 = icmp ne i16 (%struct.bAnimContext*, %struct.bAnimListElem*)* %65, null, !dbg !3453
  br i1 %tobool83, label %cond.true84, label %cond.false88, !dbg !3453

cond.true84:                                      ; preds = %if.end81
  %66 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf75, align 8, !dbg !3454
  %get_offset85 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %66, i32 0, i32 5, !dbg !3455
  %67 = load i16 (%struct.bAnimContext*, %struct.bAnimListElem*)*, i16 (%struct.bAnimContext*, %struct.bAnimListElem*)** %get_offset85, align 8, !dbg !3455
  %68 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3456
  %69 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3457
  %call86 = call signext i16 %67(%struct.bAnimContext* %68, %struct.bAnimListElem* %69), !dbg !3454
  %conv87 = sext i16 %call86 to i32, !dbg !3454
  br label %cond.end89, !dbg !3453

cond.false88:                                     ; preds = %if.end81
  br label %cond.end89, !dbg !3453

cond.end89:                                       ; preds = %cond.false88, %cond.true84
  %cond90 = phi i32 [ %conv87, %cond.true84 ], [ 0, %cond.false88 ], !dbg !3453
  store i32 %cond90, i32* %level77, align 4, !dbg !3458
  %70 = load i32, i32* %level77, align 4, !dbg !3459
  %71 = load i32, i32* %matchLevel, align 4, !dbg !3461
  %cmp91 = icmp sgt i32 %70, %71, !dbg !3462
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !3463

if.then93:                                        ; preds = %cond.end89
  %72 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3464
  %73 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3465
  %74 = load i32, i32* %setting.addr, align 4, !dbg !3466
  %75 = load i32, i32* %mode.addr, align 4, !dbg !3467
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %72, %struct.bAnimListElem* %73, i32 %74, i32 %75), !dbg !3468
  br label %if.end95, !dbg !3468

if.else94:                                        ; preds = %cond.end89
  br label %for.end98, !dbg !3469

if.end95:                                         ; preds = %if.then93
  br label %for.inc96, !dbg !3470

for.inc96:                                        ; preds = %if.end95, %if.then80
  %76 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !3471
  %next97 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %76, i32 0, i32 0, !dbg !3472
  %77 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next97, align 8, !dbg !3472
  store %struct.bAnimListElem* %77, %struct.bAnimListElem** %ale, align 8, !dbg !3473
  br label %for.cond72, !dbg !3474, !llvm.loop !3475

for.end98:                                        ; preds = %if.then, %if.then14, %if.then17, %if.else94, %for.cond72
  ret void, !dbg !3477
}

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local %struct.bAnimChannelType* @ANIM_channel_get_typeinfo(%struct.bAnimListElem*) #3

declare dso_local void @ANIM_channel_setting_set(%struct.bAnimContext*, %struct.bAnimListElem*, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ANIM_fcurve_delete_from_animdata(%struct.bAnimContext* %ac, %struct.AnimData* %adt, %struct.FCurve* %fcu) #0 !dbg !3478 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %fcu.addr = alloca %struct.FCurve*, align 8
  %act = alloca %struct.bAction*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !3483, metadata !DIExpression()), !dbg !3484
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !3485, metadata !DIExpression()), !dbg !3486
  store %struct.FCurve* %fcu, %struct.FCurve** %fcu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu.addr, metadata !3487, metadata !DIExpression()), !dbg !3488
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3489
  %cmp = icmp eq %struct.AnimData* null, %0, !dbg !3489
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3489

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3489
  %cmp1 = icmp eq %struct.FCurve* null, %1, !dbg !3489
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3491

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !3492

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3493
  %tobool = icmp ne %struct.bAnimContext* %2, null, !dbg !3495
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3496

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !3497
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %3, i32 0, i32 1, !dbg !3498
  %4 = load i16, i16* %datatype, align 8, !dbg !3498
  %conv = sext i16 %4 to i32, !dbg !3497
  %cmp2 = icmp eq i32 %conv, 6, !dbg !3499
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !3500

if.then4:                                         ; preds = %land.lhs.true
  %5 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3501
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %5, i32 0, i32 5, !dbg !3503
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3504
  %7 = bitcast %struct.FCurve* %6 to i8*, !dbg !3504
  call void @BLI_remlink(%struct.ListBase* %drivers, i8* %7), !dbg !3505
  br label %if.end27, !dbg !3506

if.else:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3507
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 0, !dbg !3509
  %9 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3509
  %tobool5 = icmp ne %struct.bAction* %9, null, !dbg !3507
  br i1 %tobool5, label %if.then6, label %if.end26, !dbg !3510

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !3511, metadata !DIExpression()), !dbg !3513
  %10 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3514
  %action7 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 0, !dbg !3515
  %11 = load %struct.bAction*, %struct.bAction** %action7, align 8, !dbg !3515
  store %struct.bAction* %11, %struct.bAction** %act, align 8, !dbg !3513
  %12 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3516
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %12, i32 0, i32 2, !dbg !3518
  %13 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !3518
  %tobool8 = icmp ne %struct.bActionGroup* %13, null, !dbg !3516
  br i1 %tobool8, label %if.then9, label %if.else14, !dbg !3519

if.then9:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !3520, metadata !DIExpression()), !dbg !3522
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3523
  %grp10 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %14, i32 0, i32 2, !dbg !3524
  %15 = load %struct.bActionGroup*, %struct.bActionGroup** %grp10, align 8, !dbg !3524
  store %struct.bActionGroup* %15, %struct.bActionGroup** %agrp, align 8, !dbg !3522
  %16 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3525
  %17 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3526
  call void @action_groups_remove_channel(%struct.bAction* %16, %struct.FCurve* %17), !dbg !3527
  %18 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3528
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %18, i32 0, i32 2, !dbg !3530
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %channels), !dbg !3531
  %tobool11 = icmp ne i8 %call, 0, !dbg !3531
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !3532

if.then12:                                        ; preds = %if.then9
  %19 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3533
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %19, i32 0, i32 3, !dbg !3535
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3536
  %21 = bitcast %struct.bActionGroup* %20 to i8*, !dbg !3536
  call void @BLI_freelinkN(%struct.ListBase* %groups, i8* %21), !dbg !3537
  br label %if.end13, !dbg !3538

if.end13:                                         ; preds = %if.then12, %if.then9
  br label %if.end15, !dbg !3539

if.else14:                                        ; preds = %if.then6
  %22 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3540
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %22, i32 0, i32 1, !dbg !3542
  %23 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3543
  %24 = bitcast %struct.FCurve* %23 to i8*, !dbg !3543
  call void @BLI_remlink(%struct.ListBase* %curves, i8* %24), !dbg !3544
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.end13
  %25 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3545
  %curves16 = getelementptr inbounds %struct.bAction, %struct.bAction* %25, i32 0, i32 1, !dbg !3547
  %call17 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %curves16), !dbg !3548
  %conv18 = zext i8 %call17 to i32, !dbg !3548
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !3548
  br i1 %tobool19, label %land.lhs.true20, label %if.end25, !dbg !3549

land.lhs.true20:                                  ; preds = %if.end15
  %26 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3550
  %flag = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 7, !dbg !3551
  %27 = load i32, i32* %flag, align 8, !dbg !3551
  %and = and i32 %27, 4, !dbg !3552
  %cmp21 = icmp eq i32 %and, 0, !dbg !3553
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !3554

if.then23:                                        ; preds = %land.lhs.true20
  %28 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !3555
  %id = getelementptr inbounds %struct.bAction, %struct.bAction* %28, i32 0, i32 0, !dbg !3557
  call void @id_us_min(%struct.ID* %id), !dbg !3558
  %29 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3559
  %action24 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %29, i32 0, i32 0, !dbg !3560
  store %struct.bAction* null, %struct.bAction** %action24, align 8, !dbg !3561
  br label %if.end25, !dbg !3562

if.end25:                                         ; preds = %if.then23, %land.lhs.true20, %if.end15
  br label %if.end26, !dbg !3563

if.end26:                                         ; preds = %if.end25, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then4
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !3564
  call void @free_fcurve(%struct.FCurve* %30), !dbg !3565
  br label %return, !dbg !3566

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !3566
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #3

declare dso_local void @action_groups_remove_channel(%struct.bAction*, %struct.FCurve*) #3

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #3

declare dso_local void @id_us_min(%struct.ID*) #3

declare dso_local void @free_fcurve(%struct.FCurve*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_operatortypes_animchannels() #0 !dbg !3567 {
entry:
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_select_all_toggle), !dbg !3570
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_select_border), !dbg !3571
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_click), !dbg !3572
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_rename), !dbg !3573
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_find), !dbg !3574
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_setting_enable), !dbg !3575
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_setting_disable), !dbg !3576
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_setting_toggle), !dbg !3577
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_delete), !dbg !3578
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_editable_toggle), !dbg !3579
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_move), !dbg !3580
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_expand), !dbg !3581
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_collapse), !dbg !3582
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_visibility_toggle), !dbg !3583
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_visibility_set), !dbg !3584
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_fcurves_enable), !dbg !3585
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_clean_empty), !dbg !3586
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_group), !dbg !3587
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ANIM_OT_channels_ungroup), !dbg !3588
  ret void, !dbg !3589
}

declare dso_local void @WM_operatortype_append(void (%struct.wmOperatorType*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_select_all_toggle(%struct.wmOperatorType* %ot) #0 !dbg !3590 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3700, metadata !DIExpression()), !dbg !3701
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3702
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3703
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8** %name, align 8, !dbg !3704
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3705
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3706
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i8** %idname, align 8, !dbg !3707
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3708
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3709
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i64 0, i64 0), i8** %description, align 8, !dbg !3710
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3711
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3712
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_deselectall_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3713
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3714
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3715
  store i32 (%struct.bContext*)* @animedit_poll_channels_nla_tweakmode_off, i32 (%struct.bContext*)** %poll, align 8, !dbg !3716
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3717
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3718
  store i16 3, i16* %flag, align 8, !dbg !3719
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3720
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !3721
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3721
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !3720
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3722
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3723
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !3724
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3725
  ret void, !dbg !3726
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_select_border(%struct.wmOperatorType* %ot) #0 !dbg !3727 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3730
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3731
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), i8** %name, align 8, !dbg !3732
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3733
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3734
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8** %idname, align 8, !dbg !3735
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3736
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3737
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.30, i64 0, i64 0), i8** %description, align 8, !dbg !3738
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3739
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3740
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3741
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3742
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3743
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_borderselect_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3744
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3745
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !3746
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !3747
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3748
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !3749
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_border_select_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !3750
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3751
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 9, !dbg !3752
  store i32 (%struct.bContext*)* @animedit_poll_channels_nla_tweakmode_off, i32 (%struct.bContext*)** %poll, align 8, !dbg !3753
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3754
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !3755
  store i16 3, i16* %flag, align 8, !dbg !3756
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3757
  call void @WM_operator_properties_gesture_border(%struct.wmOperatorType* %9, i8 zeroext 1), !dbg !3758
  ret void, !dbg !3759
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_click(%struct.wmOperatorType* %ot) #0 !dbg !3760 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3763, metadata !DIExpression()), !dbg !3764
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3765
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3766
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0), i8** %name, align 8, !dbg !3767
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3768
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3769
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8** %idname, align 8, !dbg !3770
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3771
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3772
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !3773
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3774
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3775
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @animchannels_mouseclick_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3776
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3777
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3778
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3779
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3780
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3781
  store i16 2, i16* %flag, align 8, !dbg !3782
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3783
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !3784
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3784
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !3783
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3785
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3786
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3787
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !3788
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3789
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !3790
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3790
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !3789
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3791
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !3792
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3793
  call void @RNA_def_property_flag(%struct.PropertyRNA* %13, i32 268435456), !dbg !3794
  ret void, !dbg !3795
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_rename(%struct.wmOperatorType* %ot) #0 !dbg !3796 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3797, metadata !DIExpression()), !dbg !3798
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3799
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3800
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8** %name, align 8, !dbg !3801
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3802
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3803
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8** %idname, align 8, !dbg !3804
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3805
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3806
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8** %description, align 8, !dbg !3807
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3808
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3809
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @animchannels_rename_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3810
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3811
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3812
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3813
  ret void, !dbg !3814
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_find(%struct.wmOperatorType* %ot) #0 !dbg !3815 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3818
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3819
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i64 0, i64 0), i8** %name, align 8, !dbg !3820
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3821
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3822
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !3823
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3824
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3825
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.42, i64 0, i64 0), i8** %description, align 8, !dbg !3826
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3827
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3828
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @animchannels_find_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3829
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3830
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3831
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_find_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3832
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3833
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3834
  store i32 (%struct.bContext*)* @animchannels_find_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3835
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3836
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3837
  store i16 3, i16* %flag, align 8, !dbg !3838
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3839
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !3840
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3840
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !3839
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0)), !dbg !3841
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3842
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !3843
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3844
  ret void, !dbg !3845
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_setting_enable(%struct.wmOperatorType* %ot) #0 !dbg !3846 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3849, metadata !DIExpression()), !dbg !3850
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3851
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3852
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i8** %name, align 8, !dbg !3853
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3854
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3855
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i8** %idname, align 8, !dbg !3856
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3857
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3858
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !3859
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3860
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3861
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3862
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3863
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3864
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_setflag_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3865
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3866
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3867
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3868
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3869
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3870
  store i16 3, i16* %flag, align 8, !dbg !3871
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3872
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !3873
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3873
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !3872
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_animchannel_setflag_types, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3874
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3875
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3876
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 524288), !dbg !3877
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3878
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !3879
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3879
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !3878
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @prop_animchannel_settings_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3880
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3881
  %prop3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 13, !dbg !3882
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop3, align 8, !dbg !3883
  ret void, !dbg !3884
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_setting_disable(%struct.wmOperatorType* %ot) #0 !dbg !3885 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3886, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3888, metadata !DIExpression()), !dbg !3889
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3890
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3891
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0), i8** %name, align 8, !dbg !3892
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3893
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3894
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8** %idname, align 8, !dbg !3895
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3896
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3897
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.64, i64 0, i64 0), i8** %description, align 8, !dbg !3898
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3899
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3900
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3901
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3902
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3903
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_setflag_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3904
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3905
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3906
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3907
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3908
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3909
  store i16 3, i16* %flag, align 8, !dbg !3910
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3911
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !3912
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3912
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !3911
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_animchannel_setflag_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3913
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3914
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3915
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 524288), !dbg !3916
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3917
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !3918
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3918
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !3917
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @prop_animchannel_settings_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3919
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3920
  %prop3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 13, !dbg !3921
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop3, align 8, !dbg !3922
  ret void, !dbg !3923
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_setting_toggle(%struct.wmOperatorType* %ot) #0 !dbg !3924 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3925, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3927, metadata !DIExpression()), !dbg !3928
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3929
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3930
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0), i8** %name, align 8, !dbg !3931
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3932
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3933
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !3934
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3935
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3936
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.66, i64 0, i64 0), i8** %description, align 8, !dbg !3937
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3938
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3939
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3940
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3941
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3942
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_setflag_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3943
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3944
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3945
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3946
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3947
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3948
  store i16 3, i16* %flag, align 8, !dbg !3949
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3950
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !3951
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3951
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !3950
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_animchannel_setflag_types, i64 0, i64 0), i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3952
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !3953
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3954
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 524288), !dbg !3955
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3956
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !3957
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3957
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !3956
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @prop_animchannel_settings_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !3958
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3959
  %prop3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 13, !dbg !3960
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop3, align 8, !dbg !3961
  ret void, !dbg !3962
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_delete(%struct.wmOperatorType* %ot) #0 !dbg !3963 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3964, metadata !DIExpression()), !dbg !3965
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3966
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3967
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i64 0, i64 0), i8** %name, align 8, !dbg !3968
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3969
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3970
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i8** %idname, align 8, !dbg !3971
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3972
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3973
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.68, i64 0, i64 0), i8** %description, align 8, !dbg !3974
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3975
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3976
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3977
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3978
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3979
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !3980
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3981
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3982
  store i16 3, i16* %flag, align 8, !dbg !3983
  ret void, !dbg !3984
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_editable_toggle(%struct.wmOperatorType* %ot) #0 !dbg !3985 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3986, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3988, metadata !DIExpression()), !dbg !3989
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3990
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3991
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8** %name, align 8, !dbg !3992
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3993
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3994
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8** %idname, align 8, !dbg !3995
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3996
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3997
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i64 0, i64 0), i8** %description, align 8, !dbg !3998
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3999
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4000
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_setflag_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4001
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4002
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4003
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4004
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4005
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4006
  store i16 3, i16* %flag, align 8, !dbg !4007
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4008
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4009
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4009
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4008
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_animchannel_setflag_types, i64 0, i64 0), i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !4010
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4011
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !4012
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4012
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !4011
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @prop_animchannel_settings_types, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !4013
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !4014
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4015
  call void @RNA_def_property_flag(%struct.PropertyRNA* %12, i32 524288), !dbg !4016
  ret void, !dbg !4017
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_move(%struct.wmOperatorType* %ot) #0 !dbg !4018 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4019, metadata !DIExpression()), !dbg !4020
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4021
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4022
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i64 0, i64 0), i8** %name, align 8, !dbg !4023
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4024
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4025
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %idname, align 8, !dbg !4026
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4027
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4028
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72, i64 0, i64 0), i8** %description, align 8, !dbg !4029
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4030
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4031
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_rearrange_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4032
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4033
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4034
  store i32 (%struct.bContext*)* @animedit_poll_channels_nla_tweakmode_off, i32 (%struct.bContext*)** %poll, align 8, !dbg !4035
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4036
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4037
  store i16 3, i16* %flag, align 8, !dbg !4038
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4039
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4040
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4040
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4039
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_animchannel_rearrange_types, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)), !dbg !4041
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4042
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !4043
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4044
  ret void, !dbg !4045
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_expand(%struct.wmOperatorType* %ot) #0 !dbg !4046 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4047, metadata !DIExpression()), !dbg !4048
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4049
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4050
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i8** %name, align 8, !dbg !4051
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4052
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4053
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !4054
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4055
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4056
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.89, i64 0, i64 0), i8** %description, align 8, !dbg !4057
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4058
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4059
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_expand_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4060
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4061
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4062
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4063
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4064
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4065
  store i16 3, i16* %flag, align 8, !dbg !4066
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4067
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4068
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4068
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4067
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.91, i64 0, i64 0)), !dbg !4069
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4070
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !4071
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4072
  ret void, !dbg !4073
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_collapse(%struct.wmOperatorType* %ot) #0 !dbg !4074 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4077
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4078
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.92, i64 0, i64 0), i8** %name, align 8, !dbg !4079
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4080
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4081
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i8** %idname, align 8, !dbg !4082
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4083
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4084
  store i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.93, i64 0, i64 0), i8** %description, align 8, !dbg !4085
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4086
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4087
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_collapse_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4088
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4089
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4090
  store i32 (%struct.bContext*)* @animedit_poll_channels_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4091
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4092
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4093
  store i16 3, i16* %flag, align 8, !dbg !4094
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4095
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4096
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4096
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4095
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.94, i64 0, i64 0)), !dbg !4097
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4098
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !4099
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4100
  ret void, !dbg !4101
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_visibility_toggle(%struct.wmOperatorType* %ot) #0 !dbg !4102 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4103, metadata !DIExpression()), !dbg !4104
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4105
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4106
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0), i8** %name, align 8, !dbg !4107
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4108
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4109
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0), i8** %idname, align 8, !dbg !4110
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4111
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4112
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.96, i64 0, i64 0), i8** %description, align 8, !dbg !4113
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4114
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4115
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_visibility_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4116
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4117
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4118
  store i32 (%struct.bContext*)* @ED_operator_graphedit_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4119
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4120
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4121
  store i16 3, i16* %flag, align 8, !dbg !4122
  ret void, !dbg !4123
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_visibility_set(%struct.wmOperatorType* %ot) #0 !dbg !4124 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4125, metadata !DIExpression()), !dbg !4126
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4127
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4128
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i8** %name, align 8, !dbg !4129
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4130
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4131
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !4132
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4133
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4134
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.98, i64 0, i64 0), i8** %description, align 8, !dbg !4135
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4136
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4137
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_visibility_set_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4138
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4139
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4140
  store i32 (%struct.bContext*)* @ED_operator_graphedit_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4141
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4142
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4143
  store i16 3, i16* %flag, align 8, !dbg !4144
  ret void, !dbg !4145
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_fcurves_enable(%struct.wmOperatorType* %ot) #0 !dbg !4146 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4147, metadata !DIExpression()), !dbg !4148
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4149
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4150
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.99, i64 0, i64 0), i8** %name, align 8, !dbg !4151
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4152
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4153
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i64 0, i64 0), i8** %idname, align 8, !dbg !4154
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4155
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4156
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.101, i64 0, i64 0), i8** %description, align 8, !dbg !4157
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4158
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4159
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_enable_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4160
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4161
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4162
  store i32 (%struct.bContext*)* @animchannels_enable_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4163
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4164
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4165
  store i16 3, i16* %flag, align 8, !dbg !4166
  ret void, !dbg !4167
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_clean_empty(%struct.wmOperatorType* %ot) #0 !dbg !4168 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4169, metadata !DIExpression()), !dbg !4170
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4171
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4172
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.102, i64 0, i64 0), i8** %name, align 8, !dbg !4173
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4174
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4175
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i64 0, i64 0), i8** %idname, align 8, !dbg !4176
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4177
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4178
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.104, i64 0, i64 0), i8** %description, align 8, !dbg !4179
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4180
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4181
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_clean_empty_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4182
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4183
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4184
  store i32 (%struct.bContext*)* @animedit_poll_channels_nla_tweakmode_off, i32 (%struct.bContext*)** %poll, align 8, !dbg !4185
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4186
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4187
  store i16 3, i16* %flag, align 8, !dbg !4188
  ret void, !dbg !4189
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_group(%struct.wmOperatorType* %ot) #0 !dbg !4190 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4191, metadata !DIExpression()), !dbg !4192
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4193
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4194
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.105, i64 0, i64 0), i8** %name, align 8, !dbg !4195
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4196
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4197
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8** %idname, align 8, !dbg !4198
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4199
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4200
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.106, i64 0, i64 0), i8** %description, align 8, !dbg !4201
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4202
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4203
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_props_popup, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4204
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4205
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4206
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_group_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4207
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4208
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4209
  store i32 (%struct.bContext*)* @animchannels_grouping_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4210
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4211
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4212
  store i16 3, i16* %flag, align 8, !dbg !4213
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4214
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !4215
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4215
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !4214
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.110, i64 0, i64 0)), !dbg !4216
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4217
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !4218
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4219
  ret void, !dbg !4220
}

; Function Attrs: noinline nounwind uwtable
define internal void @ANIM_OT_channels_ungroup(%struct.wmOperatorType* %ot) #0 !dbg !4221 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4224
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4225
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.111, i64 0, i64 0), i8** %name, align 8, !dbg !4226
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4227
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4228
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i8** %idname, align 8, !dbg !4229
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4230
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4231
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.112, i64 0, i64 0), i8** %description, align 8, !dbg !4232
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4233
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4234
  store i32 (%struct.bContext*, %struct.wmOperator*)* @animchannels_ungroup_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4235
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4236
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4237
  store i32 (%struct.bContext*)* @animchannels_grouping_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4238
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4239
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4240
  store i16 3, i16* %flag, align 8, !dbg !4241
  ret void, !dbg !4242
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_keymap_animchannels(%struct.wmKeyConfig* %keyconf) #0 !dbg !4243 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !4260, metadata !DIExpression()), !dbg !4263
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !4264
  %call = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 0), !dbg !4265
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !4263
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !4266, metadata !DIExpression()), !dbg !4290
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4291
  %call1 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1, i32 0, i32 0), !dbg !4292
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4293
  %call2 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1, i32 1, i32 0), !dbg !4294
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call2, i32 0, i32 17, !dbg !4295
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4295
  call void @RNA_boolean_set(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 1), !dbg !4296
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4297
  %call3 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1, i32 3, i32 0), !dbg !4298
  %ptr4 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call3, i32 0, i32 17, !dbg !4299
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !4299
  call void @RNA_boolean_set(%struct.PointerRNA* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 1), !dbg !4300
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4301
  %call5 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 1, i32 2, i32 0), !dbg !4302
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4303
  %call6 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 4, i32 0, i32 0), !dbg !4304
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4305
  %call7 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 102, i32 1, i32 2, i32 0), !dbg !4306
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4307
  %call8 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i32 97, i32 1, i32 0, i32 0), !dbg !4308
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4309
  %call9 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i32 105, i32 1, i32 2, i32 0), !dbg !4310
  %ptr10 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call9, i32 0, i32 17, !dbg !4311
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !4311
  call void @RNA_boolean_set(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i32 1), !dbg !4312
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4313
  %call11 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i32 98, i32 1, i32 0, i32 0), !dbg !4314
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4315
  %call12 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i32 20483, i32 -1, i32 0, i32 0), !dbg !4316
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4317
  %call13 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i32 120, i32 1, i32 0, i32 0), !dbg !4318
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4319
  %call14 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i32 224, i32 1, i32 0, i32 0), !dbg !4320
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4321
  %call15 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 119, i32 1, i32 1, i32 0), !dbg !4322
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4323
  %call16 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i32 119, i32 1, i32 3, i32 0), !dbg !4324
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4325
  %call17 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %18, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i32 119, i32 1, i32 4, i32 0), !dbg !4326
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4327
  %call18 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %19, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i32 219, i32 1, i32 0, i32 0), !dbg !4328
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4329
  %call19 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i32 164, i32 1, i32 0, i32 0), !dbg !4330
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4331
  %call20 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i32 162, i32 1, i32 0, i32 0), !dbg !4332
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4333
  %call21 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i32 164, i32 1, i32 2, i32 0), !dbg !4334
  store %struct.wmKeyMapItem* %call21, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4335
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4336
  %ptr22 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %23, i32 0, i32 17, !dbg !4337
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !4337
  call void @RNA_boolean_set(%struct.PointerRNA* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i32 0), !dbg !4338
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4339
  %call23 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %25, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i32 162, i32 1, i32 2, i32 0), !dbg !4340
  store %struct.wmKeyMapItem* %call23, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4341
  %26 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !4342
  %ptr24 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %26, i32 0, i32 17, !dbg !4343
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !4343
  call void @RNA_boolean_set(%struct.PointerRNA* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i32 0), !dbg !4344
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4345
  %call25 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i32 168, i32 1, i32 0, i32 0), !dbg !4346
  %ptr26 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call25, i32 0, i32 17, !dbg !4347
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr26, align 8, !dbg !4347
  call void @RNA_enum_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 -1), !dbg !4348
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4349
  %call27 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i32 169, i32 1, i32 0, i32 0), !dbg !4350
  %ptr28 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call27, i32 0, i32 17, !dbg !4351
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr28, align 8, !dbg !4351
  call void @RNA_enum_set(%struct.PointerRNA* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 1), !dbg !4352
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4353
  %call29 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i32 168, i32 1, i32 1, i32 0), !dbg !4354
  %ptr30 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call29, i32 0, i32 17, !dbg !4355
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr30, align 8, !dbg !4355
  call void @RNA_enum_set(%struct.PointerRNA* %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 -2), !dbg !4356
  %34 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4357
  %call31 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %34, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i32 169, i32 1, i32 1, i32 0), !dbg !4358
  %ptr32 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call31, i32 0, i32 17, !dbg !4359
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr32, align 8, !dbg !4359
  call void @RNA_enum_set(%struct.PointerRNA* %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 2), !dbg !4360
  %36 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4361
  %call33 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %36, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 103, i32 1, i32 2, i32 0), !dbg !4362
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4363
  %call34 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i32 103, i32 1, i32 4, i32 0), !dbg !4364
  %38 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4365
  %call35 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 118, i32 1, i32 0, i32 0), !dbg !4366
  %39 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !4367
  %call36 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %39, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0), i32 118, i32 1, i32 1, i32 0), !dbg !4368
  ret void, !dbg !4369
}

declare dso_local %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig*, i8*, i32, i32) #3

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #3

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #3

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_deselectall_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4370 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4378, metadata !DIExpression()), !dbg !4379
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4380, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !4382, metadata !DIExpression()), !dbg !4383
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4384
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !4386
  %conv = zext i8 %call to i32, !dbg !4386
  %cmp = icmp eq i32 %conv, 0, !dbg !4387
  br i1 %cmp, label %if.then, label %if.end, !dbg !4388

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4389
  br label %return, !dbg !4389

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4390
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !4392
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4392
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)), !dbg !4393
  %tobool = icmp ne i32 %call2, 0, !dbg !4393
  br i1 %tobool, label %if.then3, label %if.else, !dbg !4394

if.then3:                                         ; preds = %if.end
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !4395
  %3 = load i8*, i8** %data, align 8, !dbg !4395
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !4396
  %4 = load i16, i16* %datatype, align 8, !dbg !4396
  %conv4 = sext i16 %4 to i32, !dbg !4397
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %ac, i8* %3, i32 %conv4, i8 zeroext 0, i32 3), !dbg !4398
  br label %if.end8, !dbg !4398

if.else:                                          ; preds = %if.end
  %data5 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !4399
  %5 = load i8*, i8** %data5, align 8, !dbg !4399
  %datatype6 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !4400
  %6 = load i16, i16* %datatype6, align 8, !dbg !4400
  %conv7 = sext i16 %6 to i32, !dbg !4401
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %ac, i8* %5, i32 %conv7, i8 zeroext 1, i32 1), !dbg !4402
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4403
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 239599622, i8* null), !dbg !4404
  store i32 4, i32* %retval, align 4, !dbg !4405
  br label %return, !dbg !4405

return:                                           ; preds = %if.end8, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4406
  ret i32 %8, !dbg !4406
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animedit_poll_channels_nla_tweakmode_off(%struct.bContext* %C) #0 !dbg !4407 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4410, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4412, metadata !DIExpression()), !dbg !4415
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4416
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !4417
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !4415
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4418, metadata !DIExpression()), !dbg !4419
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4420
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !4421
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !4419
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4422
  %cmp = icmp eq %struct.ScrArea* null, %2, !dbg !4422
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4422

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4422
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !4422
  %cmp3 = icmp eq %struct.ARegion* null, %call2, !dbg !4422
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4424

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4425
  br label %return, !dbg !4425

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4426
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 8, !dbg !4426
  %5 = load i8, i8* %spacetype, align 8, !dbg !4426
  %conv = zext i8 %5 to i32, !dbg !4426
  %cmp4 = icmp eq i32 %conv, 12, !dbg !4426
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6, !dbg !4426

lor.lhs.false6:                                   ; preds = %if.end
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4426
  %spacetype7 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 8, !dbg !4426
  %7 = load i8, i8* %spacetype7, align 8, !dbg !4426
  %conv8 = zext i8 %7 to i32, !dbg !4426
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !4426
  br i1 %cmp9, label %lor.end, label %lor.rhs, !dbg !4426

lor.rhs:                                          ; preds = %lor.lhs.false6
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4426
  %spacetype11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 8, !dbg !4426
  %9 = load i8, i8* %spacetype11, align 8, !dbg !4426
  %conv12 = zext i8 %9 to i32, !dbg !4426
  %cmp13 = icmp eq i32 %conv12, 13, !dbg !4426
  br label %lor.end, !dbg !4426

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false6, %if.end
  %10 = phi i1 [ true, %lor.lhs.false6 ], [ true, %if.end ], [ %cmp13, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !4426
  %cmp15 = icmp eq i32 %lor.ext, 0, !dbg !4428
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4429

if.then17:                                        ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !4430
  br label %return, !dbg !4430

if.end18:                                         ; preds = %lor.end
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4431
  %spacetype19 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 8, !dbg !4433
  %12 = load i8, i8* %spacetype19, align 8, !dbg !4433
  %conv20 = zext i8 %12 to i32, !dbg !4431
  %cmp21 = icmp eq i32 %conv20, 13, !dbg !4434
  br i1 %cmp21, label %if.then23, label %if.end30, !dbg !4435

if.then23:                                        ; preds = %if.end18
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4436
  %cmp24 = icmp eq %struct.Scene* %13, null, !dbg !4439
  br i1 %cmp24, label %if.then28, label %lor.lhs.false26, !dbg !4440

lor.lhs.false26:                                  ; preds = %if.then23
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4441
  %flag = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 15, !dbg !4442
  %15 = load i16, i16* %flag, align 4, !dbg !4442
  %conv27 = sext i16 %15 to i32, !dbg !4441
  %and = and i32 %conv27, 4, !dbg !4443
  %tobool = icmp ne i32 %and, 0, !dbg !4443
  br i1 %tobool, label %if.then28, label %if.end29, !dbg !4444

if.then28:                                        ; preds = %lor.lhs.false26, %if.then23
  store i32 0, i32* %retval, align 4, !dbg !4445
  br label %return, !dbg !4445

if.end29:                                         ; preds = %lor.lhs.false26
  br label %if.end30, !dbg !4446

if.end30:                                         ; preds = %if.end29, %if.end18
  store i32 1, i32* %retval, align 4, !dbg !4447
  br label %return, !dbg !4447

return:                                           ; preds = %if.end30, %if.then28, %if.then17, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4448
  ret i32 %16, !dbg !4448
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #3

declare dso_local zeroext i8 @ANIM_animdata_get_context(%struct.bContext*, %struct.bAnimContext*) #3

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #3

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #3

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #3

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #3

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #3

declare dso_local i32 @WM_border_select_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_borderselect_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4449 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %rect = alloca %struct.rcti, align 4
  %selectmode = alloca i16, align 2
  %gesture_mode = alloca i32, align 4
  %extend = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !4454, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !4456, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.declare(metadata i16* %selectmode, metadata !4458, metadata !DIExpression()), !dbg !4459
  store i16 0, i16* %selectmode, align 2, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %gesture_mode, metadata !4460, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !4462, metadata !DIExpression()), !dbg !4463
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4464
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !4466
  %conv = zext i8 %call to i32, !dbg !4466
  %cmp = icmp eq i32 %conv, 0, !dbg !4467
  br i1 %cmp, label %if.then, label %if.end, !dbg !4468

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4469
  br label %return, !dbg !4469

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4470
  call void @WM_operator_properties_border_to_rcti(%struct.wmOperator* %1, %struct.rcti* %rect), !dbg !4471
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4472
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !4473
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4473
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)), !dbg !4474
  store i32 %call2, i32* %gesture_mode, align 4, !dbg !4475
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4476
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !4477
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !4477
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)), !dbg !4478
  %conv5 = trunc i32 %call4 to i8, !dbg !4478
  store i8 %conv5, i8* %extend, align 1, !dbg !4479
  %6 = load i8, i8* %extend, align 1, !dbg !4480
  %tobool = icmp ne i8 %6, 0, !dbg !4480
  br i1 %tobool, label %if.end8, label %if.then6, !dbg !4482

if.then6:                                         ; preds = %if.end
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !4483
  %7 = load i8*, i8** %data, align 8, !dbg !4483
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !4484
  %8 = load i16, i16* %datatype, align 8, !dbg !4484
  %conv7 = sext i16 %8 to i32, !dbg !4485
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %ac, i8* %7, i32 %conv7, i8 zeroext 1, i32 0), !dbg !4486
  br label %if.end8, !dbg !4486

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load i32, i32* %gesture_mode, align 4, !dbg !4487
  %cmp9 = icmp eq i32 %9, 3, !dbg !4489
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4490

if.then11:                                        ; preds = %if.end8
  store i16 1, i16* %selectmode, align 2, !dbg !4491
  br label %if.end12, !dbg !4492

if.else:                                          ; preds = %if.end8
  store i16 0, i16* %selectmode, align 2, !dbg !4493
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  %10 = load i16, i16* %selectmode, align 2, !dbg !4494
  call void @borderselect_anim_channels(%struct.bAnimContext* %ac, %struct.rcti* %rect, i16 signext %10), !dbg !4495
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4496
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 239599622, i8* null), !dbg !4497
  store i32 4, i32* %retval, align 4, !dbg !4498
  br label %return, !dbg !4498

return:                                           ; preds = %if.end12, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !4499
  ret i32 %12, !dbg !4499
}

declare dso_local i32 @WM_border_select_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #3

declare dso_local void @WM_border_select_cancel(%struct.bContext*, %struct.wmOperator*) #3

declare dso_local void @WM_operator_properties_gesture_border(%struct.wmOperatorType*, i8 zeroext) #3

declare dso_local void @WM_operator_properties_border_to_rcti(%struct.wmOperator*, %struct.rcti*) #3

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @borderselect_anim_channels(%struct.bAnimContext* %ac, %struct.rcti* %rect, i16 signext %selectmode) #0 !dbg !4500 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %selectmode.addr = alloca i16, align 2
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %snla = alloca %struct.SpaceNla*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %rectf = alloca %struct.rctf, align 4
  %ymin = alloca float, align 4
  %ymax = alloca float, align 4
  %agrp = alloca %struct.bActionGroup*, align 8
  %ob = alloca %struct.Object*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  store i16 %selectmode, i16* %selectmode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !4510, metadata !DIExpression()), !dbg !4511
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !4511
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !4511
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !4512, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata %struct.SpaceNla** %snla, metadata !4516, metadata !DIExpression()), !dbg !4517
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4518
  %sl = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %1, i32 0, i32 6, !dbg !4519
  %2 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4519
  %3 = bitcast %struct.SpaceLink* %2 to %struct.SpaceNla*, !dbg !4520
  store %struct.SpaceNla* %3, %struct.SpaceNla** %snla, align 8, !dbg !4517
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !4521, metadata !DIExpression()), !dbg !4523
  %4 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4524
  %ar = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %4, i32 0, i32 7, !dbg !4525
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4525
  %v2d1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 2, !dbg !4526
  store %struct.View2D* %v2d1, %struct.View2D** %v2d, align 8, !dbg !4523
  call void @llvm.dbg.declare(metadata %struct.rctf* %rectf, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata float* %ymin, metadata !4529, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.declare(metadata float* %ymax, metadata !4531, metadata !DIExpression()), !dbg !4532
  %6 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4533
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %6, i32 0, i32 1, !dbg !4535
  %7 = load i16, i16* %datatype, align 8, !dbg !4535
  %conv = sext i16 %7 to i32, !dbg !4533
  %cmp = icmp eq i32 %conv, 7, !dbg !4536
  br i1 %cmp, label %if.then, label %if.else, !dbg !4537

if.then:                                          ; preds = %entry
  %8 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !4538
  %tobool = icmp ne %struct.SpaceNla* %8, null, !dbg !4538
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !4538

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !4538
  %flag = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %9, i32 0, i32 7, !dbg !4538
  %10 = load i16, i16* %flag, align 2, !dbg !4538
  %conv3 = sext i16 %10 to i32, !dbg !4538
  %and = and i32 %conv3, 32, !dbg !4538
  %tobool4 = icmp ne i32 %and, 0, !dbg !4538
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4538

cond.true:                                        ; preds = %land.lhs.true
  %11 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4538
  %conv5 = sext i16 %11 to i32, !dbg !4538
  %conv6 = sitofp i32 %conv5 to float, !dbg !4538
  %mul = fmul float 0x3FE99999A0000000, %conv6, !dbg !4538
  br label %cond.end, !dbg !4538

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4538
  %conv7 = sext i16 %12 to i32, !dbg !4538
  %conv8 = sitofp i32 %conv7 to float, !dbg !4538
  %mul9 = fmul float 0x3FF3333340000000, %conv8, !dbg !4538
  br label %cond.end, !dbg !4538

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ %mul9, %cond.false ], !dbg !4538
  %fneg = fneg float %cond, !dbg !4540
  store float %fneg, float* %ymin, align 4, !dbg !4541
  store float 0.000000e+00, float* %ymax, align 4, !dbg !4542
  br label %if.end, !dbg !4543

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %ymin, align 4, !dbg !4544
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4546
  %conv10 = sext i16 %13 to i32, !dbg !4546
  %conv11 = sitofp i32 %conv10 to float, !dbg !4546
  %mul12 = fmul float 0x3FE99999A0000000, %conv11, !dbg !4546
  %fneg13 = fneg float %mul12, !dbg !4547
  store float %fneg13, float* %ymax, align 4, !dbg !4548
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %14 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !4549
  %15 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4550
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %15, i32 0, i32 0, !dbg !4551
  %16 = load i32, i32* %xmin, align 4, !dbg !4551
  %conv14 = sitofp i32 %16 to float, !dbg !4550
  %17 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4552
  %ymin15 = getelementptr inbounds %struct.rcti, %struct.rcti* %17, i32 0, i32 2, !dbg !4553
  %18 = load i32, i32* %ymin15, align 4, !dbg !4553
  %add = add nsw i32 %18, 2, !dbg !4554
  %conv16 = sitofp i32 %add to float, !dbg !4552
  %xmin17 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !4555
  %ymin18 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !4556
  call void @UI_view2d_region_to_view(%struct.View2D* %14, float %conv14, float %conv16, float* %xmin17, float* %ymin18), !dbg !4557
  %19 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !4558
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4559
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 1, !dbg !4560
  %21 = load i32, i32* %xmax, align 4, !dbg !4560
  %conv19 = sitofp i32 %21 to float, !dbg !4559
  %22 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4561
  %ymax20 = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 3, !dbg !4562
  %23 = load i32, i32* %ymax20, align 4, !dbg !4562
  %sub = sub nsw i32 %23, 2, !dbg !4563
  %conv21 = sitofp i32 %sub to float, !dbg !4561
  %xmax22 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !4564
  %ymax23 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !4565
  call void @UI_view2d_region_to_view(%struct.View2D* %19, float %conv19, float %conv21, float* %xmax22, float* %ymax23), !dbg !4566
  store i32 11, i32* %filter, align 4, !dbg !4567
  %24 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4568
  %25 = load i32, i32* %filter, align 4, !dbg !4569
  %26 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4570
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %26, i32 0, i32 0, !dbg !4571
  %27 = load i8*, i8** %data, align 8, !dbg !4571
  %28 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4572
  %datatype24 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %28, i32 0, i32 1, !dbg !4573
  %29 = load i16, i16* %datatype24, align 8, !dbg !4573
  %conv25 = sext i16 %29 to i32, !dbg !4572
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %24, %struct.ListBase* %anim_data, i32 %25, i8* %27, i32 %conv25), !dbg !4574
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !4575
  %30 = load i8*, i8** %first, align 8, !dbg !4575
  %31 = bitcast i8* %30 to %struct.bAnimListElem*, !dbg !4577
  store %struct.bAnimListElem* %31, %struct.bAnimListElem** %ale, align 8, !dbg !4578
  br label %for.cond, !dbg !4579

for.cond:                                         ; preds = %for.inc, %if.end
  %32 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4580
  %tobool26 = icmp ne %struct.bAnimListElem* %32, null, !dbg !4582
  br i1 %tobool26, label %for.body, label %for.end, !dbg !4582

for.body:                                         ; preds = %for.cond
  %33 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4583
  %datatype27 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %33, i32 0, i32 1, !dbg !4586
  %34 = load i16, i16* %datatype27, align 8, !dbg !4586
  %conv28 = sext i16 %34 to i32, !dbg !4583
  %cmp29 = icmp eq i32 %conv28, 7, !dbg !4587
  br i1 %cmp29, label %if.then31, label %if.else53, !dbg !4588

if.then31:                                        ; preds = %for.body
  %35 = load float, float* %ymax, align 4, !dbg !4589
  %36 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !4590
  %tobool32 = icmp ne %struct.SpaceNla* %36, null, !dbg !4590
  br i1 %tobool32, label %land.lhs.true33, label %cond.false42, !dbg !4590

land.lhs.true33:                                  ; preds = %if.then31
  %37 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !4590
  %flag34 = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %37, i32 0, i32 7, !dbg !4590
  %38 = load i16, i16* %flag34, align 2, !dbg !4590
  %conv35 = sext i16 %38 to i32, !dbg !4590
  %and36 = and i32 %conv35, 32, !dbg !4590
  %tobool37 = icmp ne i32 %and36, 0, !dbg !4590
  br i1 %tobool37, label %cond.true38, label %cond.false42, !dbg !4590

cond.true38:                                      ; preds = %land.lhs.true33
  %39 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4590
  %conv39 = sext i16 %39 to i32, !dbg !4590
  %conv40 = sitofp i32 %conv39 to float, !dbg !4590
  %mul41 = fmul float 0x3FE99999A0000000, %conv40, !dbg !4590
  br label %cond.end46, !dbg !4590

cond.false42:                                     ; preds = %land.lhs.true33, %if.then31
  %40 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4590
  %conv43 = sext i16 %40 to i32, !dbg !4590
  %conv44 = sitofp i32 %conv43 to float, !dbg !4590
  %mul45 = fmul float 0x3FF3333340000000, %conv44, !dbg !4590
  br label %cond.end46, !dbg !4590

cond.end46:                                       ; preds = %cond.false42, %cond.true38
  %cond47 = phi float [ %mul41, %cond.true38 ], [ %mul45, %cond.false42 ], !dbg !4590
  %41 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4590
  %conv48 = sext i16 %41 to i32, !dbg !4590
  %conv49 = sitofp i32 %conv48 to float, !dbg !4590
  %mul50 = fmul float 0x3FB99999A0000000, %conv49, !dbg !4590
  %add51 = fadd float %cond47, %mul50, !dbg !4590
  %sub52 = fsub float %35, %add51, !dbg !4591
  store float %sub52, float* %ymin, align 4, !dbg !4592
  br label %if.end62, !dbg !4593

if.else53:                                        ; preds = %for.body
  %42 = load float, float* %ymax, align 4, !dbg !4594
  %43 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4595
  %conv54 = sext i16 %43 to i32, !dbg !4595
  %conv55 = sitofp i32 %conv54 to float, !dbg !4595
  %mul56 = fmul float 0x3FE99999A0000000, %conv55, !dbg !4595
  %44 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4595
  %conv57 = sext i16 %44 to i32, !dbg !4595
  %conv58 = sitofp i32 %conv57 to float, !dbg !4595
  %mul59 = fmul float 0x3FB99999A0000000, %conv58, !dbg !4595
  %add60 = fadd float %mul56, %mul59, !dbg !4595
  %sub61 = fsub float %42, %add60, !dbg !4596
  store float %sub61, float* %ymin, align 4, !dbg !4597
  br label %if.end62

if.end62:                                         ; preds = %if.else53, %cond.end46
  %45 = load float, float* %ymax, align 4, !dbg !4598
  %ymin63 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !4600
  %46 = load float, float* %ymin63, align 4, !dbg !4600
  %cmp64 = fcmp olt float %45, %46, !dbg !4601
  br i1 %cmp64, label %if.end121, label %lor.lhs.false, !dbg !4602

lor.lhs.false:                                    ; preds = %if.end62
  %47 = load float, float* %ymin, align 4, !dbg !4603
  %ymax66 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !4604
  %48 = load float, float* %ymax66, align 4, !dbg !4604
  %cmp67 = fcmp ogt float %47, %48, !dbg !4605
  br i1 %cmp67, label %if.end121, label %if.then69, !dbg !4606

if.then69:                                        ; preds = %lor.lhs.false
  %49 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4607
  %50 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4609
  %51 = load i16, i16* %selectmode.addr, align 2, !dbg !4610
  %conv70 = sext i16 %51 to i32, !dbg !4610
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %49, %struct.bAnimListElem* %50, i32 0, i32 %conv70), !dbg !4611
  %52 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4612
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %52, i32 0, i32 3, !dbg !4613
  %53 = load i32, i32* %type, align 8, !dbg !4613
  switch i32 %53, label %sw.epilog [
    i32 6, label %sw.bb
    i32 30, label %sw.bb103
  ], !dbg !4614

sw.bb:                                            ; preds = %if.then69
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !4615, metadata !DIExpression()), !dbg !4618
  %54 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4619
  %data71 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %54, i32 0, i32 2, !dbg !4620
  %55 = load i8*, i8** %data71, align 8, !dbg !4620
  %56 = bitcast i8* %55 to %struct.bActionGroup*, !dbg !4621
  store %struct.bActionGroup* %56, %struct.bActionGroup** %agrp, align 8, !dbg !4618
  %57 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4622
  %ads = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %57, i32 0, i32 8, !dbg !4624
  %58 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !4624
  %filterflag = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %58, i32 0, i32 4, !dbg !4625
  %59 = load i32, i32* %filterflag, align 8, !dbg !4625
  %and72 = and i32 %59, 1, !dbg !4626
  %cmp73 = icmp eq i32 %and72, 0, !dbg !4627
  br i1 %cmp73, label %if.then75, label %if.end100, !dbg !4628

if.then75:                                        ; preds = %sw.bb
  %60 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4629
  %id = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %60, i32 0, i32 9, !dbg !4632
  %61 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4632
  %tobool76 = icmp ne %struct.ID* %61, null, !dbg !4633
  br i1 %tobool76, label %land.lhs.true77, label %if.end99, !dbg !4634

land.lhs.true77:                                  ; preds = %if.then75
  %62 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4635
  %id78 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %62, i32 0, i32 9, !dbg !4635
  %63 = load %struct.ID*, %struct.ID** %id78, align 8, !dbg !4635
  %name = getelementptr inbounds %struct.ID, %struct.ID* %63, i32 0, i32 4, !dbg !4635
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4635
  %64 = bitcast i8* %arraydecay to i16*, !dbg !4635
  %65 = load i16, i16* %64, align 8, !dbg !4635
  %conv79 = sext i16 %65 to i32, !dbg !4635
  %cmp80 = icmp eq i32 %conv79, 16975, !dbg !4636
  br i1 %cmp80, label %if.then82, label %if.end99, !dbg !4637

if.then82:                                        ; preds = %land.lhs.true77
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4638, metadata !DIExpression()), !dbg !4640
  %66 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4641
  %id83 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %66, i32 0, i32 9, !dbg !4642
  %67 = load %struct.ID*, %struct.ID** %id83, align 8, !dbg !4642
  %68 = bitcast %struct.ID* %67 to %struct.Object*, !dbg !4643
  store %struct.Object* %68, %struct.Object** %ob, align 8, !dbg !4640
  %69 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4644
  %type84 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 3, !dbg !4646
  %70 = load i16, i16* %type84, align 8, !dbg !4646
  %conv85 = sext i16 %70 to i32, !dbg !4644
  %cmp86 = icmp eq i32 %conv85, 25, !dbg !4647
  br i1 %cmp86, label %if.then88, label %if.end98, !dbg !4648

if.then88:                                        ; preds = %if.then82
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !4649, metadata !DIExpression()), !dbg !4698
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4699
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 18, !dbg !4700
  %72 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !4700
  %73 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !4701
  %name89 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %73, i32 0, i32 5, !dbg !4702
  %arraydecay90 = getelementptr inbounds [64 x i8], [64 x i8]* %name89, i64 0, i64 0, !dbg !4701
  %call91 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %72, i8* %arraydecay90), !dbg !4703
  store %struct.bPoseChannel* %call91, %struct.bPoseChannel** %pchan, align 8, !dbg !4698
  %74 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !4704
  %flag92 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %74, i32 0, i32 3, !dbg !4706
  %75 = load i32, i32* %flag92, align 8, !dbg !4706
  %and93 = and i32 %75, 1, !dbg !4707
  %tobool94 = icmp ne i32 %and93, 0, !dbg !4707
  br i1 %tobool94, label %if.then95, label %if.else96, !dbg !4708

if.then95:                                        ; preds = %if.then88
  %76 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4709
  %77 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4711
  call void @ED_pose_bone_select(%struct.Object* %76, %struct.bPoseChannel* %77, i8 zeroext 1), !dbg !4712
  br label %if.end97, !dbg !4713

if.else96:                                        ; preds = %if.then88
  %78 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4714
  %79 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4716
  call void @ED_pose_bone_select(%struct.Object* %78, %struct.bPoseChannel* %79, i8 zeroext 0), !dbg !4717
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  br label %if.end98, !dbg !4718

if.end98:                                         ; preds = %if.end97, %if.then82
  br label %if.end99, !dbg !4719

if.end99:                                         ; preds = %if.end98, %land.lhs.true77, %if.then75
  br label %if.end100, !dbg !4720

if.end100:                                        ; preds = %if.end99, %sw.bb
  %80 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !4721
  %flag101 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %80, i32 0, i32 3, !dbg !4722
  %81 = load i32, i32* %flag101, align 8, !dbg !4723
  %and102 = and i32 %81, -3, !dbg !4723
  store i32 %and102, i32* %flag101, align 8, !dbg !4723
  br label %sw.epilog, !dbg !4724

sw.bb103:                                         ; preds = %if.then69
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !4725, metadata !DIExpression()), !dbg !4727
  %82 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4728
  %data104 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %82, i32 0, i32 2, !dbg !4729
  %83 = load i8*, i8** %data104, align 8, !dbg !4729
  %84 = bitcast i8* %83 to %struct.NlaTrack*, !dbg !4730
  store %struct.NlaTrack* %84, %struct.NlaTrack** %nlt, align 8, !dbg !4727
  %85 = load i16, i16* %selectmode.addr, align 2, !dbg !4731
  %conv105 = sext i16 %85 to i32, !dbg !4731
  %cmp106 = icmp eq i32 %conv105, 2, !dbg !4731
  br i1 %cmp106, label %if.then108, label %if.else110, !dbg !4734

if.then108:                                       ; preds = %sw.bb103
  %86 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4731
  %flag109 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %86, i32 0, i32 3, !dbg !4731
  %87 = load i32, i32* %flag109, align 8, !dbg !4731
  %xor = xor i32 %87, 2, !dbg !4731
  store i32 %xor, i32* %flag109, align 8, !dbg !4731
  br label %if.end120, !dbg !4731

if.else110:                                       ; preds = %sw.bb103
  %88 = load i16, i16* %selectmode.addr, align 2, !dbg !4735
  %conv111 = sext i16 %88 to i32, !dbg !4735
  %cmp112 = icmp eq i32 %conv111, 1, !dbg !4735
  br i1 %cmp112, label %if.then114, label %if.else116, !dbg !4731

if.then114:                                       ; preds = %if.else110
  %89 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4735
  %flag115 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %89, i32 0, i32 3, !dbg !4735
  %90 = load i32, i32* %flag115, align 8, !dbg !4735
  %or = or i32 %90, 2, !dbg !4735
  store i32 %or, i32* %flag115, align 8, !dbg !4735
  br label %if.end119, !dbg !4735

if.else116:                                       ; preds = %if.else110
  %91 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4735
  %flag117 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %91, i32 0, i32 3, !dbg !4735
  %92 = load i32, i32* %flag117, align 8, !dbg !4735
  %and118 = and i32 %92, -3, !dbg !4735
  store i32 %and118, i32* %flag117, align 8, !dbg !4735
  br label %if.end119

if.end119:                                        ; preds = %if.else116, %if.then114
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then108
  br label %sw.epilog, !dbg !4737

sw.epilog:                                        ; preds = %if.then69, %if.end120, %if.end100
  br label %if.end121, !dbg !4738

if.end121:                                        ; preds = %sw.epilog, %lor.lhs.false, %if.end62
  %93 = load float, float* %ymin, align 4, !dbg !4739
  store float %93, float* %ymax, align 4, !dbg !4740
  br label %for.inc, !dbg !4741

for.inc:                                          ; preds = %if.end121
  %94 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4742
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %94, i32 0, i32 0, !dbg !4743
  %95 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !4743
  store %struct.bAnimListElem* %95, %struct.bAnimListElem** %ale, align 8, !dbg !4744
  br label %for.cond, !dbg !4745, !llvm.loop !4746

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !4748
  ret void, !dbg !4749
}

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #3

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #3

declare dso_local void @ED_pose_bone_select(%struct.Object*, %struct.bPoseChannel*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_mouseclick_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4750 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %ar = alloca %struct.ARegion*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %channel_index = alloca i32, align 4
  %notifierFlags = alloca i32, align 4
  %selectmode = alloca i16, align 2
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4764, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata i32* %channel_index, metadata !4770, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.declare(metadata i32* %notifierFlags, metadata !4772, metadata !DIExpression()), !dbg !4773
  store i32 0, i32* %notifierFlags, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i16* %selectmode, metadata !4774, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.declare(metadata float* %x, metadata !4776, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.declare(metadata float* %y, metadata !4778, metadata !DIExpression()), !dbg !4779
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4780
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !4782
  %conv = zext i8 %call to i32, !dbg !4782
  %cmp = icmp eq i32 %conv, 0, !dbg !4783
  br i1 %cmp, label %if.then, label %if.end, !dbg !4784

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4785
  br label %return, !dbg !4785

if.end:                                           ; preds = %entry
  %ar2 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 7, !dbg !4786
  %1 = load %struct.ARegion*, %struct.ARegion** %ar2, align 8, !dbg !4786
  store %struct.ARegion* %1, %struct.ARegion** %ar, align 8, !dbg !4787
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4788
  %v2d3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 2, !dbg !4789
  store %struct.View2D* %v2d3, %struct.View2D** %v2d, align 8, !dbg !4790
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4791
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !4793
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4793
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)), !dbg !4794
  %tobool = icmp ne i32 %call4, 0, !dbg !4794
  br i1 %tobool, label %if.then5, label %if.else, !dbg !4795

if.then5:                                         ; preds = %if.end
  store i16 8, i16* %selectmode, align 2, !dbg !4796
  br label %if.end12, !dbg !4797

if.else:                                          ; preds = %if.end
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4798
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !4800
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !4800
  %call7 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)), !dbg !4801
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4801
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !4802

if.then9:                                         ; preds = %if.else
  store i16 -1, i16* %selectmode, align 2, !dbg !4803
  br label %if.end11, !dbg !4804

if.else10:                                        ; preds = %if.else
  store i16 1, i16* %selectmode, align 2, !dbg !4805
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then5
  %7 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !4806
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4807
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 6, !dbg !4808
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4807
  %9 = load i32, i32* %arrayidx, align 4, !dbg !4807
  %conv13 = sitofp i32 %9 to float, !dbg !4807
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4809
  %mval14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 6, !dbg !4810
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %mval14, i64 0, i64 1, !dbg !4809
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !4809
  %conv16 = sitofp i32 %11 to float, !dbg !4809
  call void @UI_view2d_region_to_view(%struct.View2D* %7, float %conv13, float %conv16, float* %x, float* %y), !dbg !4811
  %12 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !4812
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4813
  %conv17 = sext i16 %13 to i32, !dbg !4813
  %mul = mul nsw i32 10, %conv17, !dbg !4813
  %conv18 = sitofp i32 %mul to float, !dbg !4813
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4814
  %conv19 = sext i16 %14 to i32, !dbg !4814
  %conv20 = sitofp i32 %conv19 to float, !dbg !4814
  %mul21 = fmul float 0x3FE99999A0000000, %conv20, !dbg !4814
  %15 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4814
  %conv22 = sext i16 %15 to i32, !dbg !4814
  %conv23 = sitofp i32 %conv22 to float, !dbg !4814
  %mul24 = fmul float 0x3FB99999A0000000, %conv23, !dbg !4814
  %add = fadd float %mul21, %mul24, !dbg !4814
  %16 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4815
  %conv25 = sext i16 %16 to i32, !dbg !4815
  %conv26 = sitofp i32 %conv25 to float, !dbg !4815
  %mul27 = fmul float 0x3FD99999A0000000, %conv26, !dbg !4815
  %17 = load float, float* %x, align 4, !dbg !4816
  %18 = load float, float* %y, align 4, !dbg !4817
  call void @UI_view2d_listview_view_to_cell(%struct.View2D* %12, float %conv18, float %add, float 0.000000e+00, float %mul27, float %17, float %18, i32* null, i32* %channel_index), !dbg !4818
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4819
  %20 = load i32, i32* %channel_index, align 4, !dbg !4820
  %21 = load i16, i16* %selectmode, align 2, !dbg !4821
  %call28 = call i32 @mouse_anim_channels(%struct.bContext* %19, %struct.bAnimContext* %ac, i32 %20, i16 signext %21), !dbg !4822
  store i32 %call28, i32* %notifierFlags, align 4, !dbg !4823
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4824
  %23 = load i32, i32* %notifierFlags, align 4, !dbg !4825
  %or = or i32 234881024, %23, !dbg !4826
  call void @WM_event_add_notifier(%struct.bContext* %22, i32 %or, i8* null), !dbg !4827
  store i32 4, i32* %retval, align 4, !dbg !4828
  br label %return, !dbg !4828

return:                                           ; preds = %if.end12, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !4829
  ret i32 %24, !dbg !4829
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animedit_poll_channels_active(%struct.bContext* %C) #0 !dbg !4830 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4833, metadata !DIExpression()), !dbg !4834
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4835
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !4836
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !4834
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4837
  %cmp = icmp eq %struct.ScrArea* null, %1, !dbg !4837
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4837

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4837
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !4837
  %cmp2 = icmp eq %struct.ARegion* null, %call1, !dbg !4837
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4839

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4840
  br label %return, !dbg !4840

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4841
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 8, !dbg !4841
  %4 = load i8, i8* %spacetype, align 8, !dbg !4841
  %conv = zext i8 %4 to i32, !dbg !4841
  %cmp3 = icmp eq i32 %conv, 12, !dbg !4841
  br i1 %cmp3, label %lor.end, label %lor.lhs.false5, !dbg !4841

lor.lhs.false5:                                   ; preds = %if.end
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4841
  %spacetype6 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 8, !dbg !4841
  %6 = load i8, i8* %spacetype6, align 8, !dbg !4841
  %conv7 = zext i8 %6 to i32, !dbg !4841
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !4841
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !4841

lor.rhs:                                          ; preds = %lor.lhs.false5
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4841
  %spacetype10 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 8, !dbg !4841
  %8 = load i8, i8* %spacetype10, align 8, !dbg !4841
  %conv11 = zext i8 %8 to i32, !dbg !4841
  %cmp12 = icmp eq i32 %conv11, 13, !dbg !4841
  br label %lor.end, !dbg !4841

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false5, %if.end
  %9 = phi i1 [ true, %lor.lhs.false5 ], [ true, %if.end ], [ %cmp12, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !4841
  %cmp14 = icmp eq i32 %lor.ext, 0, !dbg !4843
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4844

if.then16:                                        ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end17:                                         ; preds = %lor.end
  store i32 1, i32* %retval, align 4, !dbg !4846
  br label %return, !dbg !4846

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4847
  ret i32 %10, !dbg !4847
}

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #3

declare dso_local void @UI_view2d_listview_view_to_cell(%struct.View2D*, float, float, float, float, float, float, i32*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @mouse_anim_channels(%struct.bContext* %C, %struct.bAnimContext* %ac, i32 %channel_index, i16 signext %selectmode) #0 !dbg !4848 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %channel_index.addr = alloca i32, align 4
  %selectmode.addr = alloca i16, align 2
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %notifierFlags = alloca i32, align 4
  %sce = alloca %struct.Scene*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %ads = alloca %struct.bDopeSheet*, align 8
  %sce39 = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %adt41 = alloca %struct.AnimData*, align 8
  %b = alloca %struct.Base*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %ob132 = alloca %struct.Object*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %fcu220 = alloca %struct.FCurve*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %gpd = alloca %struct.bGPdata*, align 8
  %gpl = alloca %struct.bGPDlayer*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4851, metadata !DIExpression()), !dbg !4852
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  store i32 %channel_index, i32* %channel_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_index.addr, metadata !4855, metadata !DIExpression()), !dbg !4856
  store i16 %selectmode, i16* %selectmode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !4859, metadata !DIExpression()), !dbg !4860
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !4860
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !4860
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !4861, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !4863, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.declare(metadata i32* %notifierFlags, metadata !4865, metadata !DIExpression()), !dbg !4866
  store i32 0, i32* %notifierFlags, align 4, !dbg !4866
  store i32 11, i32* %filter, align 4, !dbg !4867
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4868
  %2 = load i32, i32* %filter, align 4, !dbg !4869
  %3 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4870
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %3, i32 0, i32 0, !dbg !4871
  %4 = load i8*, i8** %data, align 8, !dbg !4871
  %5 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4872
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %5, i32 0, i32 1, !dbg !4873
  %6 = load i16, i16* %datatype, align 8, !dbg !4873
  %conv = sext i16 %6 to i32, !dbg !4872
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %1, %struct.ListBase* %anim_data, i32 %2, i8* %4, i32 %conv), !dbg !4874
  %7 = load i32, i32* %channel_index.addr, align 4, !dbg !4875
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %anim_data, i32 %7), !dbg !4876
  %8 = bitcast i8* %call1 to %struct.bAnimListElem*, !dbg !4876
  store %struct.bAnimListElem* %8, %struct.bAnimListElem** %ale, align 8, !dbg !4877
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4878
  %cmp = icmp eq %struct.bAnimListElem* %9, null, !dbg !4880
  br i1 %cmp, label %if.then, label %if.end5, !dbg !4881

if.then:                                          ; preds = %entry
  %10 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4882
  %and = and i32 %10, 1, !dbg !4885
  %tobool = icmp ne i32 %and, 0, !dbg !4885
  br i1 %tobool, label %if.then3, label %if.end, !dbg !4886

if.then3:                                         ; preds = %if.then
  %11 = load i32, i32* %channel_index.addr, align 4, !dbg !4887
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.36, i64 0, i64 0), i32 %11), !dbg !4888
  br label %if.end, !dbg !4888

if.end:                                           ; preds = %if.then3, %if.then
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !4889
  store i32 0, i32* %retval, align 4, !dbg !4890
  br label %return, !dbg !4890

if.end5:                                          ; preds = %entry
  %12 = load i16, i16* %selectmode.addr, align 2, !dbg !4891
  %conv6 = sext i16 %12 to i32, !dbg !4891
  %cmp7 = icmp eq i32 %conv6, -1, !dbg !4893
  br i1 %cmp7, label %land.lhs.true, label %if.end12, !dbg !4894

land.lhs.true:                                    ; preds = %if.end5
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4895
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %13, i32 0, i32 3, !dbg !4896
  %14 = load i32, i32* %type, align 8, !dbg !4896
  %cmp9 = icmp ne i32 %14, 6, !dbg !4897
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4898

if.then11:                                        ; preds = %land.lhs.true
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !4899
  store i32 0, i32* %retval, align 4, !dbg !4901
  br label %return, !dbg !4901

if.end12:                                         ; preds = %land.lhs.true, %if.end5
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4902
  %type13 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %15, i32 0, i32 3, !dbg !4903
  %16 = load i32, i32* %type13, align 8, !dbg !4903
  switch i32 %16, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb37
    i32 8, label %sw.bb97
    i32 10, label %sw.bb97
    i32 11, label %sw.bb97
    i32 12, label %sw.bb97
    i32 13, label %sw.bb97
    i32 14, label %sw.bb97
    i32 15, label %sw.bb97
    i32 17, label %sw.bb97
    i32 18, label %sw.bb97
    i32 19, label %sw.bb97
    i32 20, label %sw.bb97
    i32 16, label %sw.bb97
    i32 21, label %sw.bb97
    i32 22, label %sw.bb97
    i32 23, label %sw.bb97
    i32 24, label %sw.bb97
    i32 6, label %sw.bb130
    i32 7, label %sw.bb219
    i32 25, label %sw.bb249
    i32 26, label %sw.bb269
    i32 27, label %sw.bb274
    i32 28, label %sw.bb290
    i32 29, label %sw.bb295
  ], !dbg !4904

sw.bb:                                            ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !4905, metadata !DIExpression()), !dbg !4908
  %17 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4909
  %data14 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %17, i32 0, i32 2, !dbg !4910
  %18 = load i8*, i8** %data14, align 8, !dbg !4910
  %19 = bitcast i8* %18 to %struct.Scene*, !dbg !4911
  store %struct.Scene* %19, %struct.Scene** %sce, align 8, !dbg !4908
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !4912, metadata !DIExpression()), !dbg !4913
  %20 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4914
  %adt15 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 1, !dbg !4915
  %21 = load %struct.AnimData*, %struct.AnimData** %adt15, align 8, !dbg !4915
  store %struct.AnimData* %21, %struct.AnimData** %adt, align 8, !dbg !4913
  %22 = load i16, i16* %selectmode.addr, align 2, !dbg !4916
  %conv16 = sext i16 %22 to i32, !dbg !4916
  %cmp17 = icmp eq i32 %conv16, 8, !dbg !4918
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !4919

if.then19:                                        ; preds = %sw.bb
  %23 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4920
  %flag = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 15, !dbg !4922
  %24 = load i16, i16* %flag, align 4, !dbg !4923
  %conv20 = sext i16 %24 to i32, !dbg !4923
  %xor = xor i32 %conv20, 1, !dbg !4923
  %conv21 = trunc i32 %xor to i16, !dbg !4923
  store i16 %conv21, i16* %flag, align 4, !dbg !4923
  %25 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4924
  %tobool22 = icmp ne %struct.AnimData* %25, null, !dbg !4924
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !4926

if.then23:                                        ; preds = %if.then19
  %26 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4927
  %flag24 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 7, !dbg !4928
  %27 = load i32, i32* %flag24, align 8, !dbg !4929
  %xor25 = xor i32 %27, 16384, !dbg !4929
  store i32 %xor25, i32* %flag24, align 8, !dbg !4929
  br label %if.end26, !dbg !4927

if.end26:                                         ; preds = %if.then23, %if.then19
  br label %if.end35, !dbg !4930

if.else:                                          ; preds = %sw.bb
  %28 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4931
  %flag27 = getelementptr inbounds %struct.Scene, %struct.Scene* %28, i32 0, i32 15, !dbg !4933
  %29 = load i16, i16* %flag27, align 4, !dbg !4934
  %conv28 = sext i16 %29 to i32, !dbg !4934
  %or = or i32 %conv28, 1, !dbg !4934
  %conv29 = trunc i32 %or to i16, !dbg !4934
  store i16 %conv29, i16* %flag27, align 4, !dbg !4934
  %30 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4935
  %tobool30 = icmp ne %struct.AnimData* %30, null, !dbg !4935
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !4937

if.then31:                                        ; preds = %if.else
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4938
  %flag32 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %31, i32 0, i32 7, !dbg !4939
  %32 = load i32, i32* %flag32, align 8, !dbg !4940
  %or33 = or i32 %32, 16384, !dbg !4940
  store i32 %or33, i32* %flag32, align 8, !dbg !4940
  br label %if.end34, !dbg !4938

if.end34:                                         ; preds = %if.then31, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end26
  %33 = load i32, i32* %notifierFlags, align 4, !dbg !4941
  %or36 = or i32 %33, 4718598, !dbg !4941
  store i32 %or36, i32* %notifierFlags, align 4, !dbg !4941
  br label %sw.epilog, !dbg !4942

sw.bb37:                                          ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.bDopeSheet** %ads, metadata !4943, metadata !DIExpression()), !dbg !4945
  %34 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !4946
  %data38 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %34, i32 0, i32 0, !dbg !4947
  %35 = load i8*, i8** %data38, align 8, !dbg !4947
  %36 = bitcast i8* %35 to %struct.bDopeSheet*, !dbg !4948
  store %struct.bDopeSheet* %36, %struct.bDopeSheet** %ads, align 8, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce39, metadata !4949, metadata !DIExpression()), !dbg !4950
  %37 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !4951
  %source = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %37, i32 0, i32 0, !dbg !4952
  %38 = load %struct.ID*, %struct.ID** %source, align 8, !dbg !4952
  %39 = bitcast %struct.ID* %38 to %struct.Scene*, !dbg !4953
  store %struct.Scene* %39, %struct.Scene** %sce39, align 8, !dbg !4950
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !4954, metadata !DIExpression()), !dbg !4955
  %40 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !4956
  %data40 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %40, i32 0, i32 2, !dbg !4957
  %41 = load i8*, i8** %data40, align 8, !dbg !4957
  %42 = bitcast i8* %41 to %struct.Base*, !dbg !4958
  store %struct.Base* %42, %struct.Base** %base, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4959, metadata !DIExpression()), !dbg !4960
  %43 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !4961
  %object = getelementptr inbounds %struct.Base, %struct.Base* %43, i32 0, i32 7, !dbg !4962
  %44 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4962
  store %struct.Object* %44, %struct.Object** %ob, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt41, metadata !4963, metadata !DIExpression()), !dbg !4964
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4965
  %adt42 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 1, !dbg !4966
  %46 = load %struct.AnimData*, %struct.AnimData** %adt42, align 8, !dbg !4966
  store %struct.AnimData* %46, %struct.AnimData** %adt41, align 8, !dbg !4964
  %47 = load i16, i16* %selectmode.addr, align 2, !dbg !4967
  %conv43 = sext i16 %47 to i32, !dbg !4967
  %cmp44 = icmp eq i32 %conv43, 8, !dbg !4969
  br i1 %cmp44, label %if.then46, label %if.else57, !dbg !4970

if.then46:                                        ; preds = %sw.bb37
  %48 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !4971
  %flag47 = getelementptr inbounds %struct.Base, %struct.Base* %48, i32 0, i32 4, !dbg !4973
  %49 = load i32, i32* %flag47, align 8, !dbg !4974
  %xor48 = xor i32 %49, 1, !dbg !4974
  store i32 %xor48, i32* %flag47, align 8, !dbg !4974
  %50 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !4975
  %flag49 = getelementptr inbounds %struct.Base, %struct.Base* %50, i32 0, i32 4, !dbg !4976
  %51 = load i32, i32* %flag49, align 8, !dbg !4976
  %conv50 = trunc i32 %51 to i16, !dbg !4975
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4977
  %flag51 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 53, !dbg !4978
  store i16 %conv50, i16* %flag51, align 4, !dbg !4979
  %53 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !4980
  %tobool52 = icmp ne %struct.AnimData* %53, null, !dbg !4980
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !4982

if.then53:                                        ; preds = %if.then46
  %54 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !4983
  %flag54 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %54, i32 0, i32 7, !dbg !4984
  %55 = load i32, i32* %flag54, align 8, !dbg !4985
  %xor55 = xor i32 %55, 16384, !dbg !4985
  store i32 %xor55, i32* %flag54, align 8, !dbg !4985
  br label %if.end56, !dbg !4983

if.end56:                                         ; preds = %if.then53, %if.then46
  br label %if.end86, !dbg !4986

if.else57:                                        ; preds = %sw.bb37
  call void @llvm.dbg.declare(metadata %struct.Base** %b, metadata !4987, metadata !DIExpression()), !dbg !4989
  %56 = load %struct.Scene*, %struct.Scene** %sce39, align 8, !dbg !4990
  %base58 = getelementptr inbounds %struct.Scene, %struct.Scene* %56, i32 0, i32 5, !dbg !4992
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base58, i32 0, i32 0, !dbg !4993
  %57 = load i8*, i8** %first, align 8, !dbg !4993
  %58 = bitcast i8* %57 to %struct.Base*, !dbg !4990
  store %struct.Base* %58, %struct.Base** %b, align 8, !dbg !4994
  br label %for.cond, !dbg !4995

for.cond:                                         ; preds = %for.inc, %if.else57
  %59 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !4996
  %tobool59 = icmp ne %struct.Base* %59, null, !dbg !4998
  br i1 %tobool59, label %for.body, label %for.end, !dbg !4998

for.body:                                         ; preds = %for.cond
  %60 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !4999
  %flag60 = getelementptr inbounds %struct.Base, %struct.Base* %60, i32 0, i32 4, !dbg !5001
  %61 = load i32, i32* %flag60, align 8, !dbg !5002
  %and61 = and i32 %61, -2, !dbg !5002
  store i32 %and61, i32* %flag60, align 8, !dbg !5002
  %62 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !5003
  %flag62 = getelementptr inbounds %struct.Base, %struct.Base* %62, i32 0, i32 4, !dbg !5004
  %63 = load i32, i32* %flag62, align 8, !dbg !5004
  %conv63 = trunc i32 %63 to i16, !dbg !5003
  %64 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !5005
  %object64 = getelementptr inbounds %struct.Base, %struct.Base* %64, i32 0, i32 7, !dbg !5006
  %65 = load %struct.Object*, %struct.Object** %object64, align 8, !dbg !5006
  %flag65 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 53, !dbg !5007
  store i16 %conv63, i16* %flag65, align 4, !dbg !5008
  %66 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !5009
  %object66 = getelementptr inbounds %struct.Base, %struct.Base* %66, i32 0, i32 7, !dbg !5011
  %67 = load %struct.Object*, %struct.Object** %object66, align 8, !dbg !5011
  %adt67 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 1, !dbg !5012
  %68 = load %struct.AnimData*, %struct.AnimData** %adt67, align 8, !dbg !5012
  %tobool68 = icmp ne %struct.AnimData* %68, null, !dbg !5009
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !5013

if.then69:                                        ; preds = %for.body
  %69 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !5014
  %object70 = getelementptr inbounds %struct.Base, %struct.Base* %69, i32 0, i32 7, !dbg !5015
  %70 = load %struct.Object*, %struct.Object** %object70, align 8, !dbg !5015
  %adt71 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 1, !dbg !5016
  %71 = load %struct.AnimData*, %struct.AnimData** %adt71, align 8, !dbg !5016
  %flag72 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %71, i32 0, i32 7, !dbg !5017
  %72 = load i32, i32* %flag72, align 8, !dbg !5018
  %and73 = and i32 %72, -49153, !dbg !5018
  store i32 %and73, i32* %flag72, align 8, !dbg !5018
  br label %if.end74, !dbg !5014

if.end74:                                         ; preds = %if.then69, %for.body
  br label %for.inc, !dbg !5019

for.inc:                                          ; preds = %if.end74
  %73 = load %struct.Base*, %struct.Base** %b, align 8, !dbg !5020
  %next = getelementptr inbounds %struct.Base, %struct.Base* %73, i32 0, i32 0, !dbg !5021
  %74 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !5021
  store %struct.Base* %74, %struct.Base** %b, align 8, !dbg !5022
  br label %for.cond, !dbg !5023, !llvm.loop !5024

for.end:                                          ; preds = %for.cond
  %75 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5026
  %flag75 = getelementptr inbounds %struct.Base, %struct.Base* %75, i32 0, i32 4, !dbg !5027
  %76 = load i32, i32* %flag75, align 8, !dbg !5028
  %or76 = or i32 %76, 1, !dbg !5028
  store i32 %or76, i32* %flag75, align 8, !dbg !5028
  %77 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5029
  %flag77 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 53, !dbg !5030
  %78 = load i16, i16* %flag77, align 4, !dbg !5031
  %conv78 = sext i16 %78 to i32, !dbg !5031
  %or79 = or i32 %conv78, 1, !dbg !5031
  %conv80 = trunc i32 %or79 to i16, !dbg !5031
  store i16 %conv80, i16* %flag77, align 4, !dbg !5031
  %79 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !5032
  %tobool81 = icmp ne %struct.AnimData* %79, null, !dbg !5032
  br i1 %tobool81, label %if.then82, label %if.end85, !dbg !5034

if.then82:                                        ; preds = %for.end
  %80 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !5035
  %flag83 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %80, i32 0, i32 7, !dbg !5036
  %81 = load i32, i32* %flag83, align 8, !dbg !5037
  %or84 = or i32 %81, 16384, !dbg !5037
  store i32 %or84, i32* %flag83, align 8, !dbg !5037
  br label %if.end85, !dbg !5035

if.end85:                                         ; preds = %if.then82, %for.end
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end56
  %82 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5038
  %83 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5039
  call void @ED_base_object_activate(%struct.bContext* %82, %struct.Base* %83), !dbg !5040
  %84 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !5041
  %tobool87 = icmp ne %struct.AnimData* %84, null, !dbg !5043
  br i1 %tobool87, label %land.lhs.true88, label %if.end95, !dbg !5044

land.lhs.true88:                                  ; preds = %if.end86
  %85 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !5045
  %flag89 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %85, i32 0, i32 7, !dbg !5046
  %86 = load i32, i32* %flag89, align 8, !dbg !5046
  %and90 = and i32 %86, 16384, !dbg !5047
  %tobool91 = icmp ne i32 %and90, 0, !dbg !5047
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !5048

if.then92:                                        ; preds = %land.lhs.true88
  %87 = load %struct.AnimData*, %struct.AnimData** %adt41, align 8, !dbg !5049
  %flag93 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %87, i32 0, i32 7, !dbg !5050
  %88 = load i32, i32* %flag93, align 8, !dbg !5051
  %or94 = or i32 %88, 32768, !dbg !5051
  store i32 %or94, i32* %flag93, align 8, !dbg !5051
  br label %if.end95, !dbg !5049

if.end95:                                         ; preds = %if.then92, %land.lhs.true88, %if.end86
  %89 = load i32, i32* %notifierFlags, align 4, !dbg !5052
  %or96 = or i32 %89, 4718598, !dbg !5052
  store i32 %or96, i32* %notifierFlags, align 4, !dbg !5052
  br label %sw.epilog, !dbg !5053

sw.bb97:                                          ; preds = %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12
  %90 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5054
  %adt98 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %90, i32 0, i32 10, !dbg !5057
  %91 = load %struct.AnimData*, %struct.AnimData** %adt98, align 8, !dbg !5057
  %tobool99 = icmp ne %struct.AnimData* %91, null, !dbg !5054
  br i1 %tobool99, label %if.then100, label %if.end128, !dbg !5058

if.then100:                                       ; preds = %sw.bb97
  %92 = load i16, i16* %selectmode.addr, align 2, !dbg !5059
  %conv101 = sext i16 %92 to i32, !dbg !5059
  %cmp102 = icmp eq i32 %conv101, 8, !dbg !5062
  br i1 %cmp102, label %if.then104, label %if.else108, !dbg !5063

if.then104:                                       ; preds = %if.then100
  %93 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5064
  %adt105 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %93, i32 0, i32 10, !dbg !5066
  %94 = load %struct.AnimData*, %struct.AnimData** %adt105, align 8, !dbg !5066
  %flag106 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %94, i32 0, i32 7, !dbg !5067
  %95 = load i32, i32* %flag106, align 8, !dbg !5068
  %xor107 = xor i32 %95, 16384, !dbg !5068
  store i32 %xor107, i32* %flag106, align 8, !dbg !5068
  br label %if.end115, !dbg !5069

if.else108:                                       ; preds = %if.then100
  %96 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5070
  %97 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5072
  %data109 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %97, i32 0, i32 0, !dbg !5073
  %98 = load i8*, i8** %data109, align 8, !dbg !5073
  %99 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5074
  %datatype110 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %99, i32 0, i32 1, !dbg !5075
  %100 = load i16, i16* %datatype110, align 8, !dbg !5075
  %conv111 = sext i16 %100 to i32, !dbg !5074
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %96, i8* %98, i32 %conv111, i8 zeroext 0, i32 0), !dbg !5076
  %101 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5077
  %adt112 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %101, i32 0, i32 10, !dbg !5078
  %102 = load %struct.AnimData*, %struct.AnimData** %adt112, align 8, !dbg !5078
  %flag113 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %102, i32 0, i32 7, !dbg !5079
  %103 = load i32, i32* %flag113, align 8, !dbg !5080
  %or114 = or i32 %103, 16384, !dbg !5080
  store i32 %or114, i32* %flag113, align 8, !dbg !5080
  br label %if.end115

if.end115:                                        ; preds = %if.else108, %if.then104
  %104 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5081
  %adt116 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %104, i32 0, i32 10, !dbg !5083
  %105 = load %struct.AnimData*, %struct.AnimData** %adt116, align 8, !dbg !5083
  %tobool117 = icmp ne %struct.AnimData* %105, null, !dbg !5084
  br i1 %tobool117, label %land.lhs.true118, label %if.end127, !dbg !5085

land.lhs.true118:                                 ; preds = %if.end115
  %106 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5086
  %adt119 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %106, i32 0, i32 10, !dbg !5087
  %107 = load %struct.AnimData*, %struct.AnimData** %adt119, align 8, !dbg !5087
  %flag120 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %107, i32 0, i32 7, !dbg !5088
  %108 = load i32, i32* %flag120, align 8, !dbg !5088
  %and121 = and i32 %108, 16384, !dbg !5089
  %tobool122 = icmp ne i32 %and121, 0, !dbg !5089
  br i1 %tobool122, label %if.then123, label %if.end127, !dbg !5090

if.then123:                                       ; preds = %land.lhs.true118
  %109 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5091
  %adt124 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %109, i32 0, i32 10, !dbg !5092
  %110 = load %struct.AnimData*, %struct.AnimData** %adt124, align 8, !dbg !5092
  %flag125 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %110, i32 0, i32 7, !dbg !5093
  %111 = load i32, i32* %flag125, align 8, !dbg !5094
  %or126 = or i32 %111, 32768, !dbg !5094
  store i32 %or126, i32* %flag125, align 8, !dbg !5094
  br label %if.end127, !dbg !5091

if.end127:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %if.end128, !dbg !5095

if.end128:                                        ; preds = %if.end127, %sw.bb97
  %112 = load i32, i32* %notifierFlags, align 4, !dbg !5096
  %or129 = or i32 %112, 4718598, !dbg !5096
  store i32 %or129, i32* %notifierFlags, align 4, !dbg !5096
  br label %sw.epilog, !dbg !5097

sw.bb130:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !5098, metadata !DIExpression()), !dbg !5100
  %113 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5101
  %data131 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %113, i32 0, i32 2, !dbg !5102
  %114 = load i8*, i8** %data131, align 8, !dbg !5102
  %115 = bitcast i8* %114 to %struct.bActionGroup*, !dbg !5103
  store %struct.bActionGroup* %115, %struct.bActionGroup** %agrp, align 8, !dbg !5100
  call void @llvm.dbg.declare(metadata %struct.Object** %ob132, metadata !5104, metadata !DIExpression()), !dbg !5105
  store %struct.Object* null, %struct.Object** %ob132, align 8, !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5106, metadata !DIExpression()), !dbg !5107
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %pchan, align 8, !dbg !5107
  %116 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5108
  %ads133 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %116, i32 0, i32 8, !dbg !5110
  %117 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads133, align 8, !dbg !5110
  %filterflag = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %117, i32 0, i32 4, !dbg !5111
  %118 = load i32, i32* %filterflag, align 8, !dbg !5111
  %and134 = and i32 %118, 1, !dbg !5112
  %cmp135 = icmp eq i32 %and134, 0, !dbg !5113
  br i1 %cmp135, label %if.then137, label %if.end156, !dbg !5114

if.then137:                                       ; preds = %sw.bb130
  %119 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5115
  %id = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %119, i32 0, i32 9, !dbg !5118
  %120 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5118
  %tobool138 = icmp ne %struct.ID* %120, null, !dbg !5119
  br i1 %tobool138, label %land.lhs.true139, label %if.end155, !dbg !5120

land.lhs.true139:                                 ; preds = %if.then137
  %121 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5121
  %id140 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %121, i32 0, i32 9, !dbg !5121
  %122 = load %struct.ID*, %struct.ID** %id140, align 8, !dbg !5121
  %name = getelementptr inbounds %struct.ID, %struct.ID* %122, i32 0, i32 4, !dbg !5121
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5121
  %123 = bitcast i8* %arraydecay to i16*, !dbg !5121
  %124 = load i16, i16* %123, align 8, !dbg !5121
  %conv141 = sext i16 %124 to i32, !dbg !5121
  %cmp142 = icmp eq i32 %conv141, 16975, !dbg !5122
  br i1 %cmp142, label %if.then144, label %if.end155, !dbg !5123

if.then144:                                       ; preds = %land.lhs.true139
  %125 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5124
  %id145 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %125, i32 0, i32 9, !dbg !5126
  %126 = load %struct.ID*, %struct.ID** %id145, align 8, !dbg !5126
  %127 = bitcast %struct.ID* %126 to %struct.Object*, !dbg !5127
  store %struct.Object* %127, %struct.Object** %ob132, align 8, !dbg !5128
  %128 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5129
  %type146 = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 3, !dbg !5131
  %129 = load i16, i16* %type146, align 8, !dbg !5131
  %conv147 = sext i16 %129 to i32, !dbg !5129
  %cmp148 = icmp eq i32 %conv147, 25, !dbg !5132
  br i1 %cmp148, label %if.then150, label %if.end154, !dbg !5133

if.then150:                                       ; preds = %if.then144
  %130 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5134
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 18, !dbg !5136
  %131 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5136
  %132 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5137
  %name151 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %132, i32 0, i32 5, !dbg !5138
  %arraydecay152 = getelementptr inbounds [64 x i8], [64 x i8]* %name151, i64 0, i64 0, !dbg !5137
  %call153 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %131, i8* %arraydecay152), !dbg !5139
  store %struct.bPoseChannel* %call153, %struct.bPoseChannel** %pchan, align 8, !dbg !5140
  br label %if.end154, !dbg !5141

if.end154:                                        ; preds = %if.then150, %if.then144
  br label %if.end155, !dbg !5142

if.end155:                                        ; preds = %if.end154, %land.lhs.true139, %if.then137
  br label %if.end156, !dbg !5143

if.end156:                                        ; preds = %if.end155, %sw.bb130
  %133 = load i16, i16* %selectmode.addr, align 2, !dbg !5144
  %conv157 = sext i16 %133 to i32, !dbg !5144
  %cmp158 = icmp eq i32 %conv157, 8, !dbg !5146
  br i1 %cmp158, label %if.then160, label %if.else163, !dbg !5147

if.then160:                                       ; preds = %if.end156
  %134 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5148
  %flag161 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %134, i32 0, i32 3, !dbg !5150
  %135 = load i32, i32* %flag161, align 8, !dbg !5151
  %xor162 = xor i32 %135, 1, !dbg !5151
  store i32 %xor162, i32* %flag161, align 8, !dbg !5151
  br label %if.end199, !dbg !5152

if.else163:                                       ; preds = %if.end156
  %136 = load i16, i16* %selectmode.addr, align 2, !dbg !5153
  %conv164 = sext i16 %136 to i32, !dbg !5153
  %cmp165 = icmp eq i32 %conv164, -1, !dbg !5155
  br i1 %cmp165, label %if.then167, label %if.else189, !dbg !5156

if.then167:                                       ; preds = %if.else163
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !5157, metadata !DIExpression()), !dbg !5159
  %137 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5160
  %138 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5161
  %data168 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %138, i32 0, i32 0, !dbg !5162
  %139 = load i8*, i8** %data168, align 8, !dbg !5162
  %140 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5163
  %datatype169 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %140, i32 0, i32 1, !dbg !5164
  %141 = load i16, i16* %datatype169, align 8, !dbg !5164
  %conv170 = sext i16 %141 to i32, !dbg !5163
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %137, i8* %139, i32 %conv170, i8 zeroext 0, i32 0), !dbg !5165
  %142 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5166
  %tobool171 = icmp ne %struct.bPoseChannel* %142, null, !dbg !5166
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !5168

if.then172:                                       ; preds = %if.then167
  %143 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5169
  call void @ED_pose_de_selectall(%struct.Object* %143, i32 2, i8 zeroext 0), !dbg !5170
  br label %if.end173, !dbg !5170

if.end173:                                        ; preds = %if.then172, %if.then167
  %144 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5171
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %144, i32 0, i32 2, !dbg !5173
  %first174 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels, i32 0, i32 0, !dbg !5174
  %145 = load i8*, i8** %first174, align 8, !dbg !5174
  %146 = bitcast i8* %145 to %struct.FCurve*, !dbg !5171
  store %struct.FCurve* %146, %struct.FCurve** %fcu, align 8, !dbg !5175
  br label %for.cond175, !dbg !5176

for.cond175:                                      ; preds = %for.inc184, %if.end173
  %147 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5177
  %tobool176 = icmp ne %struct.FCurve* %147, null, !dbg !5177
  br i1 %tobool176, label %land.rhs, label %land.end, !dbg !5179

land.rhs:                                         ; preds = %for.cond175
  %148 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5180
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %148, i32 0, i32 2, !dbg !5181
  %149 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !5181
  %150 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5182
  %cmp177 = icmp eq %struct.bActionGroup* %149, %150, !dbg !5183
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond175
  %151 = phi i1 [ false, %for.cond175 ], [ %cmp177, %land.rhs ], !dbg !5184
  br i1 %151, label %for.body179, label %for.end186, !dbg !5185

for.body179:                                      ; preds = %land.end
  %152 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5186
  %flag180 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %152, i32 0, i32 9, !dbg !5187
  %153 = load i16, i16* %flag180, align 8, !dbg !5188
  %conv181 = sext i16 %153 to i32, !dbg !5188
  %or182 = or i32 %conv181, 2, !dbg !5188
  %conv183 = trunc i32 %or182 to i16, !dbg !5188
  store i16 %conv183, i16* %flag180, align 8, !dbg !5188
  br label %for.inc184, !dbg !5186

for.inc184:                                       ; preds = %for.body179
  %154 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5189
  %next185 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %154, i32 0, i32 0, !dbg !5190
  %155 = load %struct.FCurve*, %struct.FCurve** %next185, align 8, !dbg !5190
  store %struct.FCurve* %155, %struct.FCurve** %fcu, align 8, !dbg !5191
  br label %for.cond175, !dbg !5192, !llvm.loop !5193

for.end186:                                       ; preds = %land.end
  %156 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5195
  %flag187 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %156, i32 0, i32 3, !dbg !5196
  %157 = load i32, i32* %flag187, align 8, !dbg !5197
  %or188 = or i32 %157, 1, !dbg !5197
  store i32 %or188, i32* %flag187, align 8, !dbg !5197
  br label %if.end198, !dbg !5198

if.else189:                                       ; preds = %if.else163
  %158 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5199
  %159 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5201
  %data190 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %159, i32 0, i32 0, !dbg !5202
  %160 = load i8*, i8** %data190, align 8, !dbg !5202
  %161 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5203
  %datatype191 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %161, i32 0, i32 1, !dbg !5204
  %162 = load i16, i16* %datatype191, align 8, !dbg !5204
  %conv192 = sext i16 %162 to i32, !dbg !5203
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %158, i8* %160, i32 %conv192, i8 zeroext 0, i32 0), !dbg !5205
  %163 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5206
  %tobool193 = icmp ne %struct.bPoseChannel* %163, null, !dbg !5206
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !5208

if.then194:                                       ; preds = %if.else189
  %164 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5209
  call void @ED_pose_de_selectall(%struct.Object* %164, i32 2, i8 zeroext 0), !dbg !5210
  br label %if.end195, !dbg !5210

if.end195:                                        ; preds = %if.then194, %if.else189
  %165 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5211
  %flag196 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %165, i32 0, i32 3, !dbg !5212
  %166 = load i32, i32* %flag196, align 8, !dbg !5213
  %or197 = or i32 %166, 1, !dbg !5213
  store i32 %or197, i32* %flag196, align 8, !dbg !5213
  br label %if.end198

if.end198:                                        ; preds = %if.end195, %for.end186
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then160
  %167 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5214
  %flag200 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %167, i32 0, i32 3, !dbg !5216
  %168 = load i32, i32* %flag200, align 8, !dbg !5216
  %and201 = and i32 %168, 1, !dbg !5217
  %tobool202 = icmp ne i32 %and201, 0, !dbg !5217
  br i1 %tobool202, label %if.then203, label %if.else210, !dbg !5218

if.then203:                                       ; preds = %if.end199
  %169 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5219
  %170 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5221
  %data204 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %170, i32 0, i32 0, !dbg !5222
  %171 = load i8*, i8** %data204, align 8, !dbg !5222
  %172 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5223
  %datatype205 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %172, i32 0, i32 1, !dbg !5224
  %173 = load i16, i16* %datatype205, align 8, !dbg !5224
  %conv206 = sext i16 %173 to i32, !dbg !5223
  %174 = load i32, i32* %filter, align 4, !dbg !5225
  %175 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5226
  %176 = bitcast %struct.bActionGroup* %175 to i8*, !dbg !5226
  call void @ANIM_set_active_channel(%struct.bAnimContext* %169, i8* %171, i32 %conv206, i32 %174, i8* %176, i32 6), !dbg !5227
  %177 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5228
  %tobool207 = icmp ne %struct.bPoseChannel* %177, null, !dbg !5228
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !5230

if.then208:                                       ; preds = %if.then203
  %178 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5231
  %179 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5232
  call void @ED_pose_bone_select(%struct.Object* %178, %struct.bPoseChannel* %179, i8 zeroext 1), !dbg !5233
  br label %if.end209, !dbg !5233

if.end209:                                        ; preds = %if.then208, %if.then203
  br label %if.end217, !dbg !5234

if.else210:                                       ; preds = %if.end199
  %180 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5235
  %181 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5237
  %data211 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %181, i32 0, i32 0, !dbg !5238
  %182 = load i8*, i8** %data211, align 8, !dbg !5238
  %183 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5239
  %datatype212 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %183, i32 0, i32 1, !dbg !5240
  %184 = load i16, i16* %datatype212, align 8, !dbg !5240
  %conv213 = sext i16 %184 to i32, !dbg !5239
  %185 = load i32, i32* %filter, align 4, !dbg !5241
  call void @ANIM_set_active_channel(%struct.bAnimContext* %180, i8* %182, i32 %conv213, i32 %185, i8* null, i32 6), !dbg !5242
  %186 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5243
  %tobool214 = icmp ne %struct.bPoseChannel* %186, null, !dbg !5243
  br i1 %tobool214, label %if.then215, label %if.end216, !dbg !5245

if.then215:                                       ; preds = %if.else210
  %187 = load %struct.Object*, %struct.Object** %ob132, align 8, !dbg !5246
  %188 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5247
  call void @ED_pose_bone_select(%struct.Object* %187, %struct.bPoseChannel* %188, i8 zeroext 0), !dbg !5248
  br label %if.end216, !dbg !5248

if.end216:                                        ; preds = %if.then215, %if.else210
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end209
  %189 = load i32, i32* %notifierFlags, align 4, !dbg !5249
  %or218 = or i32 %189, 4718598, !dbg !5249
  store i32 %or218, i32* %notifierFlags, align 4, !dbg !5249
  br label %sw.epilog, !dbg !5250

sw.bb219:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu220, metadata !5251, metadata !DIExpression()), !dbg !5253
  %190 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5254
  %data221 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %190, i32 0, i32 2, !dbg !5255
  %191 = load i8*, i8** %data221, align 8, !dbg !5255
  %192 = bitcast i8* %191 to %struct.FCurve*, !dbg !5256
  store %struct.FCurve* %192, %struct.FCurve** %fcu220, align 8, !dbg !5253
  %193 = load i16, i16* %selectmode.addr, align 2, !dbg !5257
  %conv222 = sext i16 %193 to i32, !dbg !5257
  %cmp223 = icmp eq i32 %conv222, 8, !dbg !5259
  br i1 %cmp223, label %if.then225, label %if.else230, !dbg !5260

if.then225:                                       ; preds = %sw.bb219
  %194 = load %struct.FCurve*, %struct.FCurve** %fcu220, align 8, !dbg !5261
  %flag226 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %194, i32 0, i32 9, !dbg !5263
  %195 = load i16, i16* %flag226, align 8, !dbg !5264
  %conv227 = sext i16 %195 to i32, !dbg !5264
  %xor228 = xor i32 %conv227, 2, !dbg !5264
  %conv229 = trunc i32 %xor228 to i16, !dbg !5264
  store i16 %conv229, i16* %flag226, align 8, !dbg !5264
  br label %if.end238, !dbg !5265

if.else230:                                       ; preds = %sw.bb219
  %196 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5266
  %197 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5268
  %data231 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %197, i32 0, i32 0, !dbg !5269
  %198 = load i8*, i8** %data231, align 8, !dbg !5269
  %199 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5270
  %datatype232 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %199, i32 0, i32 1, !dbg !5271
  %200 = load i16, i16* %datatype232, align 8, !dbg !5271
  %conv233 = sext i16 %200 to i32, !dbg !5270
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %196, i8* %198, i32 %conv233, i8 zeroext 0, i32 0), !dbg !5272
  %201 = load %struct.FCurve*, %struct.FCurve** %fcu220, align 8, !dbg !5273
  %flag234 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %201, i32 0, i32 9, !dbg !5274
  %202 = load i16, i16* %flag234, align 8, !dbg !5275
  %conv235 = sext i16 %202 to i32, !dbg !5275
  %or236 = or i32 %conv235, 2, !dbg !5275
  %conv237 = trunc i32 %or236 to i16, !dbg !5275
  store i16 %conv237, i16* %flag234, align 8, !dbg !5275
  br label %if.end238

if.end238:                                        ; preds = %if.else230, %if.then225
  %203 = load %struct.FCurve*, %struct.FCurve** %fcu220, align 8, !dbg !5276
  %flag239 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %203, i32 0, i32 9, !dbg !5278
  %204 = load i16, i16* %flag239, align 8, !dbg !5278
  %conv240 = sext i16 %204 to i32, !dbg !5276
  %and241 = and i32 %conv240, 2, !dbg !5279
  %tobool242 = icmp ne i32 %and241, 0, !dbg !5279
  br i1 %tobool242, label %if.then243, label %if.end247, !dbg !5280

if.then243:                                       ; preds = %if.end238
  %205 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5281
  %206 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5282
  %data244 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %206, i32 0, i32 0, !dbg !5283
  %207 = load i8*, i8** %data244, align 8, !dbg !5283
  %208 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5284
  %datatype245 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %208, i32 0, i32 1, !dbg !5285
  %209 = load i16, i16* %datatype245, align 8, !dbg !5285
  %conv246 = sext i16 %209 to i32, !dbg !5284
  %210 = load i32, i32* %filter, align 4, !dbg !5286
  %211 = load %struct.FCurve*, %struct.FCurve** %fcu220, align 8, !dbg !5287
  %212 = bitcast %struct.FCurve* %211 to i8*, !dbg !5287
  call void @ANIM_set_active_channel(%struct.bAnimContext* %205, i8* %207, i32 %conv246, i32 %210, i8* %212, i32 7), !dbg !5288
  br label %if.end247, !dbg !5288

if.end247:                                        ; preds = %if.then243, %if.end238
  %213 = load i32, i32* %notifierFlags, align 4, !dbg !5289
  %or248 = or i32 %213, 4718598, !dbg !5289
  store i32 %or248, i32* %notifierFlags, align 4, !dbg !5289
  br label %sw.epilog, !dbg !5290

sw.bb249:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5291, metadata !DIExpression()), !dbg !5293
  %214 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5294
  %data250 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %214, i32 0, i32 2, !dbg !5295
  %215 = load i8*, i8** %data250, align 8, !dbg !5295
  %216 = bitcast i8* %215 to %struct.KeyBlock*, !dbg !5296
  store %struct.KeyBlock* %216, %struct.KeyBlock** %kb, align 8, !dbg !5293
  %217 = load i16, i16* %selectmode.addr, align 2, !dbg !5297
  %conv251 = sext i16 %217 to i32, !dbg !5297
  %cmp252 = icmp eq i32 %conv251, 8, !dbg !5299
  br i1 %cmp252, label %if.then254, label %if.else259, !dbg !5300

if.then254:                                       ; preds = %sw.bb249
  %218 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5301
  %flag255 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %218, i32 0, i32 7, !dbg !5303
  %219 = load i16, i16* %flag255, align 2, !dbg !5304
  %conv256 = sext i16 %219 to i32, !dbg !5304
  %xor257 = xor i32 %conv256, 2, !dbg !5304
  %conv258 = trunc i32 %xor257 to i16, !dbg !5304
  store i16 %conv258, i16* %flag255, align 2, !dbg !5304
  br label %if.end267, !dbg !5305

if.else259:                                       ; preds = %sw.bb249
  %220 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5306
  %221 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5308
  %data260 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %221, i32 0, i32 0, !dbg !5309
  %222 = load i8*, i8** %data260, align 8, !dbg !5309
  %223 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5310
  %datatype261 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %223, i32 0, i32 1, !dbg !5311
  %224 = load i16, i16* %datatype261, align 8, !dbg !5311
  %conv262 = sext i16 %224 to i32, !dbg !5310
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %220, i8* %222, i32 %conv262, i8 zeroext 0, i32 0), !dbg !5312
  %225 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5313
  %flag263 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %225, i32 0, i32 7, !dbg !5314
  %226 = load i16, i16* %flag263, align 2, !dbg !5315
  %conv264 = sext i16 %226 to i32, !dbg !5315
  %or265 = or i32 %conv264, 2, !dbg !5315
  %conv266 = trunc i32 %or265 to i16, !dbg !5315
  store i16 %conv266, i16* %flag263, align 2, !dbg !5315
  br label %if.end267

if.end267:                                        ; preds = %if.else259, %if.then254
  %227 = load i32, i32* %notifierFlags, align 4, !dbg !5316
  %or268 = or i32 %227, 4718598, !dbg !5316
  store i32 %or268, i32* %notifierFlags, align 4, !dbg !5316
  br label %sw.epilog, !dbg !5317

sw.bb269:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.bGPdata** %gpd, metadata !5318, metadata !DIExpression()), !dbg !5320
  %228 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5321
  %data270 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %228, i32 0, i32 2, !dbg !5322
  %229 = load i8*, i8** %data270, align 8, !dbg !5322
  %230 = bitcast i8* %229 to %struct.bGPdata*, !dbg !5323
  store %struct.bGPdata* %230, %struct.bGPdata** %gpd, align 8, !dbg !5320
  %231 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !5324
  %flag271 = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %231, i32 0, i32 2, !dbg !5325
  %232 = load i32, i32* %flag271, align 8, !dbg !5326
  %xor272 = xor i32 %232, 4, !dbg !5326
  store i32 %xor272, i32* %flag271, align 8, !dbg !5326
  %233 = load i32, i32* %notifierFlags, align 4, !dbg !5327
  %or273 = or i32 %233, 4718593, !dbg !5327
  store i32 %or273, i32* %notifierFlags, align 4, !dbg !5327
  br label %sw.epilog, !dbg !5328

sw.bb274:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.bGPDlayer** %gpl, metadata !5329, metadata !DIExpression()), !dbg !5331
  %234 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5332
  %data275 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %234, i32 0, i32 2, !dbg !5333
  %235 = load i8*, i8** %data275, align 8, !dbg !5333
  %236 = bitcast i8* %235 to %struct.bGPDlayer*, !dbg !5334
  store %struct.bGPDlayer* %236, %struct.bGPDlayer** %gpl, align 8, !dbg !5331
  %237 = load i16, i16* %selectmode.addr, align 2, !dbg !5335
  %conv276 = sext i16 %237 to i32, !dbg !5335
  %cmp277 = icmp eq i32 %conv276, 8, !dbg !5337
  br i1 %cmp277, label %if.then279, label %if.else282, !dbg !5338

if.then279:                                       ; preds = %sw.bb274
  %238 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !5339
  %flag280 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %238, i32 0, i32 4, !dbg !5341
  %239 = load i32, i32* %flag280, align 8, !dbg !5342
  %xor281 = xor i32 %239, 32, !dbg !5342
  store i32 %xor281, i32* %flag280, align 8, !dbg !5342
  br label %if.end288, !dbg !5343

if.else282:                                       ; preds = %sw.bb274
  %240 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5344
  %241 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5346
  %data283 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %241, i32 0, i32 0, !dbg !5347
  %242 = load i8*, i8** %data283, align 8, !dbg !5347
  %243 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5348
  %datatype284 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %243, i32 0, i32 1, !dbg !5349
  %244 = load i16, i16* %datatype284, align 8, !dbg !5349
  %conv285 = sext i16 %244 to i32, !dbg !5348
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %240, i8* %242, i32 %conv285, i8 zeroext 0, i32 0), !dbg !5350
  %245 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !5351
  %flag286 = getelementptr inbounds %struct.bGPDlayer, %struct.bGPDlayer* %245, i32 0, i32 4, !dbg !5352
  %246 = load i32, i32* %flag286, align 8, !dbg !5353
  %or287 = or i32 %246, 32, !dbg !5353
  store i32 %or287, i32* %flag286, align 8, !dbg !5353
  br label %if.end288

if.end288:                                        ; preds = %if.else282, %if.then279
  %247 = load i32, i32* %notifierFlags, align 4, !dbg !5354
  %or289 = or i32 %247, 4718593, !dbg !5354
  store i32 %or289, i32* %notifierFlags, align 4, !dbg !5354
  br label %sw.epilog, !dbg !5355

sw.bb290:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5356, metadata !DIExpression()), !dbg !5358
  %248 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5359
  %data291 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %248, i32 0, i32 2, !dbg !5360
  %249 = load i8*, i8** %data291, align 8, !dbg !5360
  %250 = bitcast i8* %249 to %struct.Mask*, !dbg !5361
  store %struct.Mask* %250, %struct.Mask** %mask, align 8, !dbg !5358
  %251 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5362
  %flag292 = getelementptr inbounds %struct.Mask, %struct.Mask* %251, i32 0, i32 7, !dbg !5363
  %252 = load i32, i32* %flag292, align 8, !dbg !5364
  %xor293 = xor i32 %252, 16, !dbg !5364
  store i32 %xor293, i32* %flag292, align 8, !dbg !5364
  %253 = load i32, i32* %notifierFlags, align 4, !dbg !5365
  %or294 = or i32 %253, 4718593, !dbg !5365
  store i32 %or294, i32* %notifierFlags, align 4, !dbg !5365
  br label %sw.epilog, !dbg !5366

sw.bb295:                                         ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5367, metadata !DIExpression()), !dbg !5369
  %254 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5370
  %data296 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %254, i32 0, i32 2, !dbg !5371
  %255 = load i8*, i8** %data296, align 8, !dbg !5371
  %256 = bitcast i8* %255 to %struct.MaskLayer*, !dbg !5372
  store %struct.MaskLayer* %256, %struct.MaskLayer** %masklay, align 8, !dbg !5369
  %257 = load i16, i16* %selectmode.addr, align 2, !dbg !5373
  %conv297 = sext i16 %257 to i32, !dbg !5373
  %cmp298 = icmp eq i32 %conv297, 8, !dbg !5375
  br i1 %cmp298, label %if.then300, label %if.else305, !dbg !5376

if.then300:                                       ; preds = %sw.bb295
  %258 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5377
  %flag301 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %258, i32 0, i32 12, !dbg !5379
  %259 = load i8, i8* %flag301, align 2, !dbg !5380
  %conv302 = zext i8 %259 to i32, !dbg !5380
  %xor303 = xor i32 %conv302, 32, !dbg !5380
  %conv304 = trunc i32 %xor303 to i8, !dbg !5380
  store i8 %conv304, i8* %flag301, align 2, !dbg !5380
  br label %if.end313, !dbg !5381

if.else305:                                       ; preds = %sw.bb295
  %260 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5382
  %261 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5384
  %data306 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %261, i32 0, i32 0, !dbg !5385
  %262 = load i8*, i8** %data306, align 8, !dbg !5385
  %263 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5386
  %datatype307 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %263, i32 0, i32 1, !dbg !5387
  %264 = load i16, i16* %datatype307, align 8, !dbg !5387
  %conv308 = sext i16 %264 to i32, !dbg !5386
  call void @ANIM_deselect_anim_channels(%struct.bAnimContext* %260, i8* %262, i32 %conv308, i8 zeroext 0, i32 0), !dbg !5388
  %265 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5389
  %flag309 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %265, i32 0, i32 12, !dbg !5390
  %266 = load i8, i8* %flag309, align 2, !dbg !5391
  %conv310 = zext i8 %266 to i32, !dbg !5391
  %or311 = or i32 %conv310, 32, !dbg !5391
  %conv312 = trunc i32 %or311 to i8, !dbg !5391
  store i8 %conv312, i8* %flag309, align 2, !dbg !5391
  br label %if.end313

if.end313:                                        ; preds = %if.else305, %if.then300
  %267 = load i32, i32* %notifierFlags, align 4, !dbg !5392
  %or314 = or i32 %267, 4718593, !dbg !5392
  store i32 %or314, i32* %notifierFlags, align 4, !dbg !5392
  br label %sw.epilog, !dbg !5393

sw.default:                                       ; preds = %if.end12
  %268 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5394
  %and315 = and i32 %268, 1, !dbg !5396
  %tobool316 = icmp ne i32 %and315, 0, !dbg !5396
  br i1 %tobool316, label %if.then317, label %if.end319, !dbg !5397

if.then317:                                       ; preds = %sw.default
  %call318 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0)), !dbg !5398
  br label %if.end319, !dbg !5398

if.end319:                                        ; preds = %if.then317, %sw.default
  br label %sw.epilog, !dbg !5399

sw.epilog:                                        ; preds = %if.end319, %if.end313, %sw.bb290, %if.end288, %sw.bb269, %if.end267, %if.end247, %if.end217, %if.end128, %if.end95, %if.end35
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5400
  %269 = load i32, i32* %notifierFlags, align 4, !dbg !5401
  store i32 %269, i32* %retval, align 4, !dbg !5402
  br label %return, !dbg !5402

return:                                           ; preds = %sw.epilog, %if.then11, %if.end
  %270 = load i32, i32* %retval, align 4, !dbg !5403
  ret i32 %270, !dbg !5403
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #3

declare dso_local void @ED_base_object_activate(%struct.bContext*, %struct.Base*) #3

declare dso_local void @ED_pose_de_selectall(%struct.Object*, i32, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_rename_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !5404 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %ar = alloca %struct.ARegion*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %channel_index = alloca i32, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %snla = alloca %struct.SpaceNla*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5405, metadata !DIExpression()), !dbg !5406
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5409, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5413, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata i32* %channel_index, metadata !5417, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata float* %x, metadata !5419, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata float* %y, metadata !5421, metadata !DIExpression()), !dbg !5422
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5423
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !5425
  %conv = zext i8 %call to i32, !dbg !5425
  %cmp = icmp eq i32 %conv, 0, !dbg !5426
  br i1 %cmp, label %if.then, label %if.end, !dbg !5427

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5428
  br label %return, !dbg !5428

if.end:                                           ; preds = %entry
  %ar2 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 7, !dbg !5429
  %1 = load %struct.ARegion*, %struct.ARegion** %ar2, align 8, !dbg !5429
  store %struct.ARegion* %1, %struct.ARegion** %ar, align 8, !dbg !5430
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5431
  %v2d3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 2, !dbg !5432
  store %struct.View2D* %v2d3, %struct.View2D** %v2d, align 8, !dbg !5433
  %3 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !5434
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5435
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !5436
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5435
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5435
  %conv4 = sitofp i32 %5 to float, !dbg !5435
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5437
  %mval5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 6, !dbg !5438
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 1, !dbg !5437
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !5437
  %conv7 = sitofp i32 %7 to float, !dbg !5437
  call void @UI_view2d_region_to_view(%struct.View2D* %3, float %conv4, float %conv7, float* %x, float* %y), !dbg !5439
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !5440
  %8 = load i16, i16* %datatype, align 8, !dbg !5440
  %conv8 = sext i16 %8 to i32, !dbg !5442
  %cmp9 = icmp eq i32 %conv8, 7, !dbg !5443
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !5444

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SpaceNla** %snla, metadata !5445, metadata !DIExpression()), !dbg !5447
  %sl = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 6, !dbg !5448
  %9 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5448
  %10 = bitcast %struct.SpaceLink* %9 to %struct.SpaceNla*, !dbg !5449
  store %struct.SpaceNla* %10, %struct.SpaceNla** %snla, align 8, !dbg !5447
  %11 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !5450
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5451
  %conv12 = sext i16 %12 to i32, !dbg !5451
  %mul = mul nsw i32 10, %conv12, !dbg !5451
  %conv13 = sitofp i32 %mul to float, !dbg !5451
  %13 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !5452
  %tobool = icmp ne %struct.SpaceNla* %13, null, !dbg !5452
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !5452

land.lhs.true:                                    ; preds = %if.then11
  %14 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !5452
  %flag = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %14, i32 0, i32 7, !dbg !5452
  %15 = load i16, i16* %flag, align 2, !dbg !5452
  %conv14 = sext i16 %15 to i32, !dbg !5452
  %and = and i32 %conv14, 32, !dbg !5452
  %tobool15 = icmp ne i32 %and, 0, !dbg !5452
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !5452

cond.true:                                        ; preds = %land.lhs.true
  %16 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5452
  %conv16 = sext i16 %16 to i32, !dbg !5452
  %conv17 = sitofp i32 %conv16 to float, !dbg !5452
  %mul18 = fmul float 0x3FE99999A0000000, %conv17, !dbg !5452
  br label %cond.end, !dbg !5452

cond.false:                                       ; preds = %land.lhs.true, %if.then11
  %17 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5452
  %conv19 = sext i16 %17 to i32, !dbg !5452
  %conv20 = sitofp i32 %conv19 to float, !dbg !5452
  %mul21 = fmul float 0x3FF3333340000000, %conv20, !dbg !5452
  br label %cond.end, !dbg !5452

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul18, %cond.true ], [ %mul21, %cond.false ], !dbg !5452
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5452
  %conv22 = sext i16 %18 to i32, !dbg !5452
  %conv23 = sitofp i32 %conv22 to float, !dbg !5452
  %mul24 = fmul float 0x3FB99999A0000000, %conv23, !dbg !5452
  %add = fadd float %cond, %mul24, !dbg !5452
  %19 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !5453
  %tobool25 = icmp ne %struct.SpaceNla* %19, null, !dbg !5453
  br i1 %tobool25, label %land.lhs.true26, label %cond.false35, !dbg !5453

land.lhs.true26:                                  ; preds = %cond.end
  %20 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !5453
  %flag27 = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %20, i32 0, i32 7, !dbg !5453
  %21 = load i16, i16* %flag27, align 2, !dbg !5453
  %conv28 = sext i16 %21 to i32, !dbg !5453
  %and29 = and i32 %conv28, 32, !dbg !5453
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5453
  br i1 %tobool30, label %cond.true31, label %cond.false35, !dbg !5453

cond.true31:                                      ; preds = %land.lhs.true26
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5453
  %conv32 = sext i16 %22 to i32, !dbg !5453
  %conv33 = sitofp i32 %conv32 to float, !dbg !5453
  %mul34 = fmul float 0x3FD99999A0000000, %conv33, !dbg !5453
  br label %cond.end39, !dbg !5453

cond.false35:                                     ; preds = %land.lhs.true26, %cond.end
  %23 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5453
  %conv36 = sext i16 %23 to i32, !dbg !5453
  %conv37 = sitofp i32 %conv36 to float, !dbg !5453
  %mul38 = fmul float 0x3FE3333340000000, %conv37, !dbg !5453
  br label %cond.end39, !dbg !5453

cond.end39:                                       ; preds = %cond.false35, %cond.true31
  %cond40 = phi float [ %mul34, %cond.true31 ], [ %mul38, %cond.false35 ], !dbg !5453
  %24 = load float, float* %x, align 4, !dbg !5454
  %25 = load float, float* %y, align 4, !dbg !5455
  call void @UI_view2d_listview_view_to_cell(%struct.View2D* %11, float %conv13, float %add, float 0.000000e+00, float %cond40, float %24, float %25, i32* null, i32* %channel_index), !dbg !5456
  br label %if.end54, !dbg !5457

if.else:                                          ; preds = %if.end
  %26 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !5458
  %27 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5460
  %conv41 = sext i16 %27 to i32, !dbg !5460
  %mul42 = mul nsw i32 10, %conv41, !dbg !5460
  %conv43 = sitofp i32 %mul42 to float, !dbg !5460
  %28 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5461
  %conv44 = sext i16 %28 to i32, !dbg !5461
  %conv45 = sitofp i32 %conv44 to float, !dbg !5461
  %mul46 = fmul float 0x3FE99999A0000000, %conv45, !dbg !5461
  %29 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5461
  %conv47 = sext i16 %29 to i32, !dbg !5461
  %conv48 = sitofp i32 %conv47 to float, !dbg !5461
  %mul49 = fmul float 0x3FB99999A0000000, %conv48, !dbg !5461
  %add50 = fadd float %mul46, %mul49, !dbg !5461
  %30 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5462
  %conv51 = sext i16 %30 to i32, !dbg !5462
  %conv52 = sitofp i32 %conv51 to float, !dbg !5462
  %mul53 = fmul float 0x3FD99999A0000000, %conv52, !dbg !5462
  %31 = load float, float* %x, align 4, !dbg !5463
  %32 = load float, float* %y, align 4, !dbg !5464
  call void @UI_view2d_listview_view_to_cell(%struct.View2D* %26, float %conv43, float %add50, float 0.000000e+00, float %mul53, float %31, float %32, i32* null, i32* %channel_index), !dbg !5465
  br label %if.end54

if.end54:                                         ; preds = %if.else, %cond.end39
  %33 = load i32, i32* %channel_index, align 4, !dbg !5466
  call void @rename_anim_channels(%struct.bAnimContext* %ac, i32 %33), !dbg !5467
  store i32 4, i32* %retval, align 4, !dbg !5468
  br label %return, !dbg !5468

return:                                           ; preds = %if.end54, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !5469
  ret i32 %34, !dbg !5469
}

; Function Attrs: noinline nounwind uwtable
define internal void @rename_anim_channels(%struct.bAnimContext* %ac, i32 %channel_index) #0 !dbg !5470 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %channel_index.addr = alloca i32, align 4
  %anim_data = alloca %struct.ListBase, align 8
  %acf = alloca %struct.bAnimChannelType*, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store i32 %channel_index, i32* %channel_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel_index.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !5477, metadata !DIExpression()), !dbg !5478
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !5478
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !5478
  call void @llvm.dbg.declare(metadata %struct.bAnimChannelType** %acf, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !5483, metadata !DIExpression()), !dbg !5484
  store i32 11, i32* %filter, align 4, !dbg !5485
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5486
  %2 = load i32, i32* %filter, align 4, !dbg !5487
  %3 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5488
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %3, i32 0, i32 0, !dbg !5489
  %4 = load i8*, i8** %data, align 8, !dbg !5489
  %5 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5490
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %5, i32 0, i32 1, !dbg !5491
  %6 = load i16, i16* %datatype, align 8, !dbg !5491
  %conv = sext i16 %6 to i32, !dbg !5490
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %1, %struct.ListBase* %anim_data, i32 %2, i8* %4, i32 %conv), !dbg !5492
  %7 = load i32, i32* %channel_index.addr, align 4, !dbg !5493
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %anim_data, i32 %7), !dbg !5494
  %8 = bitcast i8* %call1 to %struct.bAnimListElem*, !dbg !5494
  store %struct.bAnimListElem* %8, %struct.bAnimListElem** %ale, align 8, !dbg !5495
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5496
  %cmp = icmp eq %struct.bAnimListElem* %9, null, !dbg !5498
  br i1 %cmp, label %if.then, label %if.end5, !dbg !5499

if.then:                                          ; preds = %entry
  %10 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5500
  %and = and i32 %10, 1, !dbg !5503
  %tobool = icmp ne i32 %and, 0, !dbg !5503
  br i1 %tobool, label %if.then3, label %if.end, !dbg !5504

if.then3:                                         ; preds = %if.then
  %11 = load i32, i32* %channel_index.addr, align 4, !dbg !5505
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.40, i64 0, i64 0), i32 %11), !dbg !5506
  br label %if.end, !dbg !5506

if.end:                                           ; preds = %if.then3, %if.then
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5507
  br label %return, !dbg !5508

if.end5:                                          ; preds = %entry
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5509
  %call6 = call %struct.bAnimChannelType* @ANIM_channel_get_typeinfo(%struct.bAnimListElem* %12), !dbg !5510
  store %struct.bAnimChannelType* %call6, %struct.bAnimChannelType** %acf, align 8, !dbg !5511
  %13 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !5512
  %tobool7 = icmp ne %struct.bAnimChannelType* %13, null, !dbg !5512
  br i1 %tobool7, label %land.lhs.true, label %if.end19, !dbg !5514

land.lhs.true:                                    ; preds = %if.end5
  %14 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !5515
  %name_prop = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %14, i32 0, i32 7, !dbg !5516
  %15 = load i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)*, i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)** %name_prop, align 8, !dbg !5516
  %tobool8 = icmp ne i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)* %15, null, !dbg !5515
  br i1 %tobool8, label %if.then9, label %if.end19, !dbg !5517

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !5518, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5522, metadata !DIExpression()), !dbg !5523
  %16 = load %struct.bAnimChannelType*, %struct.bAnimChannelType** %acf, align 8, !dbg !5524
  %name_prop10 = getelementptr inbounds %struct.bAnimChannelType, %struct.bAnimChannelType* %16, i32 0, i32 7, !dbg !5526
  %17 = load i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)*, i8 (%struct.bAnimListElem*, %struct.PointerRNA*, %struct.PropertyRNA**)** %name_prop10, align 8, !dbg !5526
  %18 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5527
  %call11 = call zeroext i8 %17(%struct.bAnimListElem* %18, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop), !dbg !5524
  %tobool12 = icmp ne i8 %call11, 0, !dbg !5524
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !5528

if.then13:                                        ; preds = %if.then9
  %19 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5529
  %ads = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %19, i32 0, i32 8, !dbg !5532
  %20 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !5532
  %tobool14 = icmp ne %struct.bDopeSheet* %20, null, !dbg !5529
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !5533

if.then15:                                        ; preds = %if.then13
  %21 = load i32, i32* %channel_index.addr, align 4, !dbg !5534
  %add = add nsw i32 %21, 1, !dbg !5536
  %22 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5537
  %ads16 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %22, i32 0, i32 8, !dbg !5538
  %23 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads16, align 8, !dbg !5538
  %renameIndex = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %23, i32 0, i32 6, !dbg !5539
  store i32 %add, i32* %renameIndex, align 8, !dbg !5540
  br label %if.end17, !dbg !5541

if.end17:                                         ; preds = %if.then15, %if.then13
  br label %if.end18, !dbg !5542

if.end18:                                         ; preds = %if.end17, %if.then9
  br label %if.end19, !dbg !5543

if.end19:                                         ; preds = %if.end18, %land.lhs.true, %if.end5
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5544
  %24 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5545
  %ar = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %24, i32 0, i32 7, !dbg !5546
  %25 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5546
  call void @ED_region_tag_redraw(%struct.ARegion* %25), !dbg !5547
  br label %return, !dbg !5548

return:                                           ; preds = %if.end19, %if.end
  ret void, !dbg !5548
}

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_find_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %evt) #0 !dbg !5549 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %evt.addr = alloca %struct.wmEvent*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  store %struct.wmEvent* %evt, %struct.wmEvent** %evt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %evt.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !5556, metadata !DIExpression()), !dbg !5557
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5558
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !5560
  %conv = zext i8 %call to i32, !dbg !5560
  %cmp = icmp eq i32 %conv, 0, !dbg !5561
  br i1 %cmp, label %if.then, label %if.end, !dbg !5562

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5563
  br label %return, !dbg !5563

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5564
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5565
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5565
  %ads = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 8, !dbg !5566
  %3 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !5566
  %searchstr = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %3, i32 0, i32 3, !dbg !5567
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %searchstr, i64 0, i64 0, !dbg !5568
  call void @RNA_string_set(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay), !dbg !5569
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5570
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5571
  %6 = load %struct.wmEvent*, %struct.wmEvent** %evt.addr, align 8, !dbg !5572
  %call2 = call i32 @WM_operator_props_popup(%struct.bContext* %4, %struct.wmOperator* %5, %struct.wmEvent* %6), !dbg !5573
  store i32 %call2, i32* %retval, align 4, !dbg !5574
  br label %return, !dbg !5574

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5575
  ret i32 %7, !dbg !5575
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_find_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5576 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5577, metadata !DIExpression()), !dbg !5578
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !5581, metadata !DIExpression()), !dbg !5582
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5583
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !5585
  %conv = zext i8 %call to i32, !dbg !5585
  %cmp = icmp eq i32 %conv, 0, !dbg !5586
  br i1 %cmp, label %if.then, label %if.end, !dbg !5587

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5588
  br label %return, !dbg !5588

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5589
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5590
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5590
  %ads = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 8, !dbg !5591
  %3 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads, align 8, !dbg !5591
  %searchstr = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %3, i32 0, i32 3, !dbg !5592
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %searchstr, i64 0, i64 0, !dbg !5593
  call void @RNA_string_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay), !dbg !5594
  %ads2 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 8, !dbg !5595
  %4 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads2, align 8, !dbg !5595
  %searchstr3 = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %4, i32 0, i32 3, !dbg !5597
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %searchstr3, i64 0, i64 0, !dbg !5598
  %5 = load i8, i8* %arrayidx, align 8, !dbg !5598
  %tobool = icmp ne i8 %5, 0, !dbg !5598
  br i1 %tobool, label %if.then4, label %if.else, !dbg !5599

if.then4:                                         ; preds = %if.end
  %ads5 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 8, !dbg !5600
  %6 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads5, align 8, !dbg !5600
  %filterflag = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %6, i32 0, i32 4, !dbg !5602
  %7 = load i32, i32* %filterflag, align 8, !dbg !5603
  %or = or i32 %7, 134217728, !dbg !5603
  store i32 %or, i32* %filterflag, align 8, !dbg !5603
  br label %if.end8, !dbg !5604

if.else:                                          ; preds = %if.end
  %ads6 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 8, !dbg !5605
  %8 = load %struct.bDopeSheet*, %struct.bDopeSheet** %ads6, align 8, !dbg !5605
  %filterflag7 = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %8, i32 0, i32 4, !dbg !5607
  %9 = load i32, i32* %filterflag7, align 8, !dbg !5608
  %and = and i32 %9, -134217729, !dbg !5608
  store i32 %and, i32* %filterflag7, align 8, !dbg !5608
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5609
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 239599617, i8* null), !dbg !5610
  store i32 4, i32* %retval, align 4, !dbg !5611
  br label %return, !dbg !5611

return:                                           ; preds = %if.end8, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5612
  ret i32 %11, !dbg !5612
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_find_poll(%struct.bContext* %C) #0 !dbg !5613 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5614, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5616, metadata !DIExpression()), !dbg !5617
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5618
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !5619
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !5617
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5620
  %cmp = icmp eq %struct.ScrArea* %1, null, !dbg !5622
  br i1 %cmp, label %if.then, label %if.end, !dbg !5623

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5624
  br label %return, !dbg !5624

if.end:                                           ; preds = %entry
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5625
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 8, !dbg !5625
  %3 = load i8, i8* %spacetype, align 8, !dbg !5625
  %conv = zext i8 %3 to i32, !dbg !5625
  %cmp1 = icmp eq i32 %conv, 12, !dbg !5625
  br i1 %cmp1, label %lor.end, label %lor.lhs.false, !dbg !5625

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5625
  %spacetype3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 8, !dbg !5625
  %5 = load i8, i8* %spacetype3, align 8, !dbg !5625
  %conv4 = zext i8 %5 to i32, !dbg !5625
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !5625
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !5625

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5625
  %spacetype7 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 8, !dbg !5625
  %7 = load i8, i8* %spacetype7, align 8, !dbg !5625
  %conv8 = zext i8 %7 to i32, !dbg !5625
  %cmp9 = icmp eq i32 %conv8, 13, !dbg !5625
  br label %lor.end, !dbg !5625

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %8 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %cmp9, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !5625
  store i32 %lor.ext, i32* %retval, align 4, !dbg !5626
  br label %return, !dbg !5626

return:                                           ; preds = %lor.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5627
  ret i32 %9, !dbg !5627
}

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #3

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #3

declare dso_local i32 @WM_operator_props_popup(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #3

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #3

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_setflag_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5628 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %setting = alloca i32, align 4
  %mode = alloca i32, align 4
  %flush = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5631, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !5633, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.declare(metadata i32* %setting, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !5637, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata i8* %flush, metadata !5639, metadata !DIExpression()), !dbg !5640
  store i8 1, i8* %flush, align 1, !dbg !5640
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5641
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !5643
  %conv = zext i8 %call to i32, !dbg !5643
  %cmp = icmp eq i32 %conv, 0, !dbg !5644
  br i1 %cmp, label %if.then, label %if.end, !dbg !5645

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5646
  br label %return, !dbg !5646

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5647
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5648
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5648
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)), !dbg !5649
  store i32 %call2, i32* %mode, align 4, !dbg !5650
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5651
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5652
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !5652
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)), !dbg !5653
  store i32 %call4, i32* %setting, align 4, !dbg !5654
  %5 = load i32, i32* %setting, align 4, !dbg !5655
  %cmp5 = icmp eq i32 %5, 3, !dbg !5657
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5658

if.then7:                                         ; preds = %if.end
  store i8 0, i8* %flush, align 1, !dbg !5659
  br label %if.end8, !dbg !5660

if.end8:                                          ; preds = %if.then7, %if.end
  %6 = load i32, i32* %setting, align 4, !dbg !5661
  %7 = load i32, i32* %mode, align 4, !dbg !5662
  %8 = load i8, i8* %flush, align 1, !dbg !5663
  call void @setflag_anim_channels(%struct.bAnimContext* %ac, i32 %6, i32 %7, i8 zeroext 1, i8 zeroext %8), !dbg !5664
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5665
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 239599617, i8* null), !dbg !5666
  store i32 4, i32* %retval, align 4, !dbg !5667
  br label %return, !dbg !5667

return:                                           ; preds = %if.end8, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5668
  ret i32 %10, !dbg !5668
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #3

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @setflag_anim_channels(%struct.bAnimContext* %ac, i32 %setting, i32 %mode, i8 zeroext %onlysel, i8 zeroext %flush) #0 !dbg !5669 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %setting.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %onlysel.addr = alloca i8, align 1
  %flush.addr = alloca i8, align 1
  %anim_data = alloca %struct.ListBase, align 8
  %all_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  store i32 %setting, i32* %setting.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %setting.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  store i8 %onlysel, i8* %onlysel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %onlysel.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store i8 %flush, i8* %flush.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flush.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !5682, metadata !DIExpression()), !dbg !5683
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !5683
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !5683
  call void @llvm.dbg.declare(metadata %struct.ListBase* %all_data, metadata !5684, metadata !DIExpression()), !dbg !5685
  %1 = bitcast %struct.ListBase* %all_data to i8*, !dbg !5685
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !5685
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !5688, metadata !DIExpression()), !dbg !5689
  %2 = load i8, i8* %flush.addr, align 1, !dbg !5690
  %tobool = icmp ne i8 %2, 0, !dbg !5690
  br i1 %tobool, label %if.then, label %if.end, !dbg !5692

if.then:                                          ; preds = %entry
  store i32 9, i32* %filter, align 4, !dbg !5693
  %3 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5695
  %4 = load i32, i32* %filter, align 4, !dbg !5696
  %5 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5697
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %5, i32 0, i32 0, !dbg !5698
  %6 = load i8*, i8** %data, align 8, !dbg !5698
  %7 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5699
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %7, i32 0, i32 1, !dbg !5700
  %8 = load i16, i16* %datatype, align 8, !dbg !5700
  %conv = sext i16 %8 to i32, !dbg !5699
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %3, %struct.ListBase* %all_data, i32 %4, i8* %6, i32 %conv), !dbg !5701
  br label %if.end, !dbg !5702

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5703
  %spacetype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %9, i32 0, i32 3, !dbg !5705
  %10 = load i16, i16* %spacetype, align 4, !dbg !5705
  %conv1 = sext i16 %10 to i32, !dbg !5703
  %cmp = icmp eq i32 %conv1, 2, !dbg !5706
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5707

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5708
  %regiontype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %11, i32 0, i32 4, !dbg !5709
  %12 = load i16, i16* %regiontype, align 2, !dbg !5709
  %conv3 = sext i16 %12 to i32, !dbg !5708
  %cmp4 = icmp ne i32 %conv3, 2, !dbg !5710
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !5711

if.then6:                                         ; preds = %land.lhs.true
  store i32 2061, i32* %filter, align 4, !dbg !5712
  br label %if.end7, !dbg !5714

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i32 2059, i32* %filter, align 4, !dbg !5715
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %13 = load i8, i8* %onlysel.addr, align 1, !dbg !5717
  %tobool8 = icmp ne i8 %13, 0, !dbg !5717
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5719

if.then9:                                         ; preds = %if.end7
  %14 = load i32, i32* %filter, align 4, !dbg !5720
  %or = or i32 %14, 64, !dbg !5720
  store i32 %or, i32* %filter, align 4, !dbg !5720
  br label %if.end10, !dbg !5721

if.end10:                                         ; preds = %if.then9, %if.end7
  %15 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5722
  %16 = load i32, i32* %filter, align 4, !dbg !5723
  %17 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5724
  %data11 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %17, i32 0, i32 0, !dbg !5725
  %18 = load i8*, i8** %data11, align 8, !dbg !5725
  %19 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5726
  %datatype12 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %19, i32 0, i32 1, !dbg !5727
  %20 = load i16, i16* %datatype12, align 8, !dbg !5727
  %conv13 = sext i16 %20 to i32, !dbg !5726
  %call14 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %15, %struct.ListBase* %anim_data, i32 %16, i8* %18, i32 %conv13), !dbg !5728
  %21 = load i32, i32* %mode.addr, align 4, !dbg !5729
  %cmp15 = icmp eq i32 %21, 3, !dbg !5731
  br i1 %cmp15, label %if.then17, label %if.end25, !dbg !5732

if.then17:                                        ; preds = %if.end10
  store i32 1, i32* %mode.addr, align 4, !dbg !5733
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !5735
  %22 = load i8*, i8** %first, align 8, !dbg !5735
  %23 = bitcast i8* %22 to %struct.bAnimListElem*, !dbg !5737
  store %struct.bAnimListElem* %23, %struct.bAnimListElem** %ale, align 8, !dbg !5738
  br label %for.cond, !dbg !5739

for.cond:                                         ; preds = %for.inc, %if.then17
  %24 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5740
  %tobool18 = icmp ne %struct.bAnimListElem* %24, null, !dbg !5742
  br i1 %tobool18, label %for.body, label %for.end, !dbg !5742

for.body:                                         ; preds = %for.cond
  %25 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5743
  %26 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5746
  %27 = load i32, i32* %setting.addr, align 4, !dbg !5747
  %call19 = call signext i16 @ANIM_channel_setting_get(%struct.bAnimContext* %25, %struct.bAnimListElem* %26, i32 %27), !dbg !5748
  %conv20 = sext i16 %call19 to i32, !dbg !5748
  %cmp21 = icmp sgt i32 %conv20, 0, !dbg !5749
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5750

if.then23:                                        ; preds = %for.body
  store i32 0, i32* %mode.addr, align 4, !dbg !5751
  br label %for.end, !dbg !5753

if.end24:                                         ; preds = %for.body
  br label %for.inc, !dbg !5754

for.inc:                                          ; preds = %if.end24
  %28 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5755
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %28, i32 0, i32 0, !dbg !5756
  %29 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !5756
  store %struct.bAnimListElem* %29, %struct.bAnimListElem** %ale, align 8, !dbg !5757
  br label %for.cond, !dbg !5758, !llvm.loop !5759

for.end:                                          ; preds = %if.then23, %for.cond
  br label %if.end25, !dbg !5761

if.end25:                                         ; preds = %for.end, %if.end10
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !5762
  %30 = load i8*, i8** %first26, align 8, !dbg !5762
  %31 = bitcast i8* %30 to %struct.bAnimListElem*, !dbg !5764
  store %struct.bAnimListElem* %31, %struct.bAnimListElem** %ale, align 8, !dbg !5765
  br label %for.cond27, !dbg !5766

for.cond27:                                       ; preds = %for.inc39, %if.end25
  %32 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5767
  %tobool28 = icmp ne %struct.bAnimListElem* %32, null, !dbg !5769
  br i1 %tobool28, label %for.body29, label %for.end41, !dbg !5769

for.body29:                                       ; preds = %for.cond27
  %33 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5770
  %34 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5773
  %35 = load i32, i32* %setting.addr, align 4, !dbg !5774
  %call30 = call signext i16 @ANIM_channel_setting_get(%struct.bAnimContext* %33, %struct.bAnimListElem* %34, i32 %35), !dbg !5775
  %conv31 = sext i16 %call30 to i32, !dbg !5775
  %cmp32 = icmp eq i32 %conv31, -1, !dbg !5776
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !5777

if.then34:                                        ; preds = %for.body29
  br label %for.inc39, !dbg !5778

if.end35:                                         ; preds = %for.body29
  %36 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5779
  %37 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5780
  %38 = load i32, i32* %setting.addr, align 4, !dbg !5781
  %39 = load i32, i32* %mode.addr, align 4, !dbg !5782
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %36, %struct.bAnimListElem* %37, i32 %38, i32 %39), !dbg !5783
  %40 = load i8, i8* %flush.addr, align 1, !dbg !5784
  %tobool36 = icmp ne i8 %40, 0, !dbg !5784
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5786

if.then37:                                        ; preds = %if.end35
  %41 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !5787
  %42 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5788
  %43 = load i32, i32* %setting.addr, align 4, !dbg !5789
  %44 = load i32, i32* %mode.addr, align 4, !dbg !5790
  call void @ANIM_flush_setting_anim_channels(%struct.bAnimContext* %41, %struct.ListBase* %all_data, %struct.bAnimListElem* %42, i32 %43, i32 %44), !dbg !5791
  br label %if.end38, !dbg !5791

if.end38:                                         ; preds = %if.then37, %if.end35
  br label %for.inc39, !dbg !5792

for.inc39:                                        ; preds = %if.end38, %if.then34
  %45 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5793
  %next40 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %45, i32 0, i32 0, !dbg !5794
  %46 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next40, align 8, !dbg !5794
  store %struct.bAnimListElem* %46, %struct.bAnimListElem** %ale, align 8, !dbg !5795
  br label %for.cond27, !dbg !5796, !llvm.loop !5797

for.end41:                                        ; preds = %for.cond27
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5799
  call void @BLI_freelistN(%struct.ListBase* %all_data), !dbg !5800
  ret void, !dbg !5801
}

declare dso_local signext i16 @ANIM_channel_setting_get(%struct.bAnimContext*, %struct.bAnimListElem*, i32) #3

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5802 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %agrp = alloca %struct.bActionGroup*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %fcn = alloca %struct.FCurve*, align 8
  %adt49 = alloca %struct.AnimData*, align 8
  %fcu51 = alloca %struct.FCurve*, align 8
  %gpd = alloca %struct.bGPdata*, align 8
  %gpl = alloca %struct.bGPDlayer*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5803, metadata !DIExpression()), !dbg !5804
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5805, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !5807, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !5809, metadata !DIExpression()), !dbg !5810
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !5810
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !5810
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !5811, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !5813, metadata !DIExpression()), !dbg !5814
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5815
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %1, %struct.bAnimContext* %ac), !dbg !5817
  %conv = zext i8 %call to i32, !dbg !5817
  %cmp = icmp eq i32 %conv, 0, !dbg !5818
  br i1 %cmp, label %if.then, label %if.end, !dbg !5819

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5820
  br label %return, !dbg !5820

if.end:                                           ; preds = %entry
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !5821
  %2 = load i16, i16* %datatype, align 8, !dbg !5821
  %conv2 = sext i16 %2 to i32, !dbg !5823
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !5824
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5825

if.then5:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !5826
  br label %return, !dbg !5826

if.end6:                                          ; preds = %if.end
  %datatype7 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !5827
  %3 = load i16, i16* %datatype7, align 8, !dbg !5827
  %conv8 = sext i16 %3 to i32, !dbg !5829
  %cmp9 = icmp ne i32 %conv8, 6, !dbg !5830
  br i1 %cmp9, label %if.then11, label %if.end39, !dbg !5831

if.then11:                                        ; preds = %if.end6
  store i32 2379, i32* %filter, align 4, !dbg !5832
  %4 = load i32, i32* %filter, align 4, !dbg !5834
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !5835
  %5 = load i8*, i8** %data, align 8, !dbg !5835
  %datatype12 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !5836
  %6 = load i16, i16* %datatype12, align 8, !dbg !5836
  %conv13 = sext i16 %6 to i32, !dbg !5837
  %call14 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %4, i8* %5, i32 %conv13), !dbg !5838
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !5839
  %7 = load i8*, i8** %first, align 8, !dbg !5839
  %8 = bitcast i8* %7 to %struct.bAnimListElem*, !dbg !5841
  store %struct.bAnimListElem* %8, %struct.bAnimListElem** %ale, align 8, !dbg !5842
  br label %for.cond, !dbg !5843

for.cond:                                         ; preds = %for.inc36, %if.then11
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5844
  %tobool = icmp ne %struct.bAnimListElem* %9, null, !dbg !5846
  br i1 %tobool, label %for.body, label %for.end38, !dbg !5846

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5847
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %10, i32 0, i32 3, !dbg !5850
  %11 = load i32, i32* %type, align 8, !dbg !5850
  %cmp15 = icmp eq i32 %11, 6, !dbg !5851
  br i1 %cmp15, label %if.then17, label %if.end35, !dbg !5852

if.then17:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !5853, metadata !DIExpression()), !dbg !5855
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5856
  %data18 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %12, i32 0, i32 2, !dbg !5857
  %13 = load i8*, i8** %data18, align 8, !dbg !5857
  %14 = bitcast i8* %13 to %struct.bActionGroup*, !dbg !5858
  store %struct.bActionGroup* %14, %struct.bActionGroup** %agrp, align 8, !dbg !5855
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !5859, metadata !DIExpression()), !dbg !5860
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5861
  %adt19 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %15, i32 0, i32 10, !dbg !5862
  %16 = load %struct.AnimData*, %struct.AnimData** %adt19, align 8, !dbg !5862
  store %struct.AnimData* %16, %struct.AnimData** %adt, align 8, !dbg !5860
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcn, metadata !5865, metadata !DIExpression()), !dbg !5866
  %17 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5867
  %cmp20 = icmp eq %struct.AnimData* %17, null, !dbg !5869
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5870

if.then22:                                        ; preds = %if.then17
  br label %for.inc36, !dbg !5871

if.end23:                                         ; preds = %if.then17
  %18 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5872
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %18, i32 0, i32 2, !dbg !5874
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels, i32 0, i32 0, !dbg !5875
  %19 = load i8*, i8** %first24, align 8, !dbg !5875
  %20 = bitcast i8* %19 to %struct.FCurve*, !dbg !5872
  store %struct.FCurve* %20, %struct.FCurve** %fcu, align 8, !dbg !5876
  br label %for.cond25, !dbg !5877

for.cond25:                                       ; preds = %for.inc, %if.end23
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5878
  %tobool26 = icmp ne %struct.FCurve* %21, null, !dbg !5878
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !5880

land.rhs:                                         ; preds = %for.cond25
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5881
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %22, i32 0, i32 2, !dbg !5882
  %23 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !5882
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5883
  %cmp27 = icmp eq %struct.bActionGroup* %23, %24, !dbg !5884
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond25
  %25 = phi i1 [ false, %for.cond25 ], [ %cmp27, %land.rhs ], !dbg !5885
  br i1 %25, label %for.body29, label %for.end, !dbg !5886

for.body29:                                       ; preds = %land.end
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5887
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %26, i32 0, i32 0, !dbg !5889
  %27 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !5889
  store %struct.FCurve* %27, %struct.FCurve** %fcn, align 8, !dbg !5890
  %28 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5891
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %28, i32 0, i32 0, !dbg !5892
  %29 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !5892
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5893
  call void @action_groups_remove_channel(%struct.bAction* %29, %struct.FCurve* %30), !dbg !5894
  %31 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5895
  call void @free_fcurve(%struct.FCurve* %31), !dbg !5896
  br label %for.inc, !dbg !5897

for.inc:                                          ; preds = %for.body29
  %32 = load %struct.FCurve*, %struct.FCurve** %fcn, align 8, !dbg !5898
  store %struct.FCurve* %32, %struct.FCurve** %fcu, align 8, !dbg !5899
  br label %for.cond25, !dbg !5900, !llvm.loop !5901

for.end:                                          ; preds = %land.end
  %33 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5903
  %action30 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %33, i32 0, i32 0, !dbg !5905
  %34 = load %struct.bAction*, %struct.bAction** %action30, align 8, !dbg !5905
  %tobool31 = icmp ne %struct.bAction* %34, null, !dbg !5903
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !5906

if.then32:                                        ; preds = %for.end
  %35 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5907
  %action33 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %35, i32 0, i32 0, !dbg !5908
  %36 = load %struct.bAction*, %struct.bAction** %action33, align 8, !dbg !5908
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %36, i32 0, i32 3, !dbg !5909
  %37 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5910
  %38 = bitcast %struct.bActionGroup* %37 to i8*, !dbg !5910
  call void @BLI_freelinkN(%struct.ListBase* %groups, i8* %38), !dbg !5911
  br label %if.end34, !dbg !5911

if.else:                                          ; preds = %for.end
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5912
  %40 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !5913
  %41 = bitcast %struct.bActionGroup* %40 to i8*, !dbg !5913
  call void %39(i8* %41), !dbg !5912
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then32
  br label %if.end35, !dbg !5914

if.end35:                                         ; preds = %if.end34, %for.body
  br label %for.inc36, !dbg !5915

for.inc36:                                        ; preds = %if.end35, %if.then22
  %42 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5916
  %next37 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %42, i32 0, i32 0, !dbg !5917
  %43 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next37, align 8, !dbg !5917
  store %struct.bAnimListElem* %43, %struct.bAnimListElem** %ale, align 8, !dbg !5918
  br label %for.cond, !dbg !5919, !llvm.loop !5920

for.end38:                                        ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5922
  br label %if.end39, !dbg !5923

if.end39:                                         ; preds = %for.end38, %if.end6
  store i32 2371, i32* %filter, align 4, !dbg !5924
  %44 = load i32, i32* %filter, align 4, !dbg !5925
  %data40 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !5926
  %45 = load i8*, i8** %data40, align 8, !dbg !5926
  %datatype41 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !5927
  %46 = load i16, i16* %datatype41, align 8, !dbg !5927
  %conv42 = sext i16 %46 to i32, !dbg !5928
  %call43 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %44, i8* %45, i32 %conv42), !dbg !5929
  %first44 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !5930
  %47 = load i8*, i8** %first44, align 8, !dbg !5930
  %48 = bitcast i8* %47 to %struct.bAnimListElem*, !dbg !5932
  store %struct.bAnimListElem* %48, %struct.bAnimListElem** %ale, align 8, !dbg !5933
  br label %for.cond45, !dbg !5934

for.cond45:                                       ; preds = %for.inc58, %if.end39
  %49 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5935
  %tobool46 = icmp ne %struct.bAnimListElem* %49, null, !dbg !5937
  br i1 %tobool46, label %for.body47, label %for.end60, !dbg !5937

for.body47:                                       ; preds = %for.cond45
  %50 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5938
  %type48 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %50, i32 0, i32 3, !dbg !5940
  %51 = load i32, i32* %type48, align 8, !dbg !5940
  switch i32 %51, label %sw.epilog [
    i32 7, label %sw.bb
    i32 27, label %sw.bb53
    i32 29, label %sw.bb55
  ], !dbg !5941

sw.bb:                                            ; preds = %for.body47
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt49, metadata !5942, metadata !DIExpression()), !dbg !5945
  %52 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5946
  %adt50 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %52, i32 0, i32 10, !dbg !5947
  %53 = load %struct.AnimData*, %struct.AnimData** %adt50, align 8, !dbg !5947
  store %struct.AnimData* %53, %struct.AnimData** %adt49, align 8, !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu51, metadata !5948, metadata !DIExpression()), !dbg !5949
  %54 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5950
  %data52 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %54, i32 0, i32 2, !dbg !5951
  %55 = load i8*, i8** %data52, align 8, !dbg !5951
  %56 = bitcast i8* %55 to %struct.FCurve*, !dbg !5952
  store %struct.FCurve* %56, %struct.FCurve** %fcu51, align 8, !dbg !5949
  %57 = load %struct.AnimData*, %struct.AnimData** %adt49, align 8, !dbg !5953
  %58 = load %struct.FCurve*, %struct.FCurve** %fcu51, align 8, !dbg !5954
  call void @ANIM_fcurve_delete_from_animdata(%struct.bAnimContext* %ac, %struct.AnimData* %57, %struct.FCurve* %58), !dbg !5955
  br label %sw.epilog, !dbg !5956

sw.bb53:                                          ; preds = %for.body47
  call void @llvm.dbg.declare(metadata %struct.bGPdata** %gpd, metadata !5957, metadata !DIExpression()), !dbg !5959
  %59 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5960
  %id = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %59, i32 0, i32 9, !dbg !5961
  %60 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5961
  %61 = bitcast %struct.ID* %60 to %struct.bGPdata*, !dbg !5962
  store %struct.bGPdata* %61, %struct.bGPdata** %gpd, align 8, !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.bGPDlayer** %gpl, metadata !5963, metadata !DIExpression()), !dbg !5964
  %62 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5965
  %data54 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %62, i32 0, i32 2, !dbg !5966
  %63 = load i8*, i8** %data54, align 8, !dbg !5966
  %64 = bitcast i8* %63 to %struct.bGPDlayer*, !dbg !5967
  store %struct.bGPDlayer* %64, %struct.bGPDlayer** %gpl, align 8, !dbg !5964
  %65 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !5968
  call void @free_gpencil_frames(%struct.bGPDlayer* %65), !dbg !5969
  %66 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !5970
  %layers = getelementptr inbounds %struct.bGPdata, %struct.bGPdata* %66, i32 0, i32 1, !dbg !5971
  %67 = load %struct.bGPDlayer*, %struct.bGPDlayer** %gpl, align 8, !dbg !5972
  %68 = bitcast %struct.bGPDlayer* %67 to i8*, !dbg !5972
  call void @BLI_freelinkN(%struct.ListBase* %layers, i8* %68), !dbg !5973
  br label %sw.epilog, !dbg !5974

sw.bb55:                                          ; preds = %for.body47
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5975, metadata !DIExpression()), !dbg !5977
  %69 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5978
  %id56 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %69, i32 0, i32 9, !dbg !5979
  %70 = load %struct.ID*, %struct.ID** %id56, align 8, !dbg !5979
  %71 = bitcast %struct.ID* %70 to %struct.Mask*, !dbg !5980
  store %struct.Mask* %71, %struct.Mask** %mask, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5981, metadata !DIExpression()), !dbg !5982
  %72 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5983
  %data57 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %72, i32 0, i32 2, !dbg !5984
  %73 = load i8*, i8** %data57, align 8, !dbg !5984
  %74 = bitcast i8* %73 to %struct.MaskLayer*, !dbg !5985
  store %struct.MaskLayer* %74, %struct.MaskLayer** %masklay, align 8, !dbg !5982
  %75 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5986
  %76 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5987
  call void @BKE_mask_layer_remove(%struct.Mask* %75, %struct.MaskLayer* %76), !dbg !5988
  br label %sw.epilog, !dbg !5989

sw.epilog:                                        ; preds = %for.body47, %sw.bb55, %sw.bb53, %sw.bb
  br label %for.inc58, !dbg !5990

for.inc58:                                        ; preds = %sw.epilog
  %77 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !5991
  %next59 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %77, i32 0, i32 0, !dbg !5992
  %78 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next59, align 8, !dbg !5992
  store %struct.bAnimListElem* %78, %struct.bAnimListElem** %ale, align 8, !dbg !5993
  br label %for.cond45, !dbg !5994, !llvm.loop !5995

for.end60:                                        ; preds = %for.cond45
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !5997
  %79 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5998
  call void @WM_event_add_notifier(%struct.bContext* %79, i32 239599617, i8* null), !dbg !5999
  store i32 4, i32* %retval, align 4, !dbg !6000
  br label %return, !dbg !6000

return:                                           ; preds = %for.end60, %if.then5, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !6001
  ret i32 %80, !dbg !6001
}

declare dso_local void @free_gpencil_frames(%struct.bGPDlayer*) #3

declare dso_local void @BKE_mask_layer_remove(%struct.Mask*, %struct.MaskLayer*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_rearrange_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6002 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %mode = alloca i32, align 4
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %adt = alloca %struct.AnimData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6003, metadata !DIExpression()), !dbg !6004
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6005, metadata !DIExpression()), !dbg !6006
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6009, metadata !DIExpression()), !dbg !6011
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6012
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !6014
  %conv = zext i8 %call to i32, !dbg !6014
  %cmp = icmp eq i32 %conv, 0, !dbg !6015
  br i1 %cmp, label %if.then, label %if.end, !dbg !6016

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6017
  br label %return, !dbg !6017

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6018
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !6019
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6019
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)), !dbg !6020
  store i32 %call2, i32* %mode, align 4, !dbg !6021
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !6022
  %3 = load i16, i16* %datatype, align 8, !dbg !6022
  %conv3 = sext i16 %3 to i32, !dbg !6024
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !6025
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6026

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.74, i64 0, i64 0)), !dbg !6027
  br label %if.end41, !dbg !6029

if.else:                                          ; preds = %if.end
  %datatype8 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !6030
  %4 = load i16, i16* %datatype8, align 8, !dbg !6030
  %conv9 = sext i16 %4 to i32, !dbg !6032
  %cmp10 = icmp eq i32 %conv9, 9, !dbg !6033
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !6034

if.then12:                                        ; preds = %if.else
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75, i64 0, i64 0)), !dbg !6035
  br label %if.end40, !dbg !6037

if.else14:                                        ; preds = %if.else
  %datatype15 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !6038
  %5 = load i16, i16* %datatype15, align 8, !dbg !6038
  %conv16 = sext i16 %5 to i32, !dbg !6040
  %cmp17 = icmp eq i32 %conv16, 1, !dbg !6041
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !6042

if.then19:                                        ; preds = %if.else14
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !6043
  %6 = load i8*, i8** %data, align 8, !dbg !6043
  %7 = bitcast i8* %6 to %struct.bAction*, !dbg !6045
  %8 = load i32, i32* %mode, align 4, !dbg !6046
  call void @rearrange_action_channels(%struct.bAnimContext* %ac, %struct.bAction* %7, i32 %8), !dbg !6047
  br label %if.end39, !dbg !6048

if.else20:                                        ; preds = %if.else14
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !6049, metadata !DIExpression()), !dbg !6051
  %9 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !6051
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !6051
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !6054, metadata !DIExpression()), !dbg !6055
  store i32 1027, i32* %filter, align 4, !dbg !6056
  %10 = load i32, i32* %filter, align 4, !dbg !6057
  %data21 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !6058
  %11 = load i8*, i8** %data21, align 8, !dbg !6058
  %datatype22 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !6059
  %12 = load i16, i16* %datatype22, align 8, !dbg !6059
  %conv23 = sext i16 %12 to i32, !dbg !6060
  %call24 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %10, i8* %11, i32 %conv23), !dbg !6061
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !6062
  %13 = load i8*, i8** %first, align 8, !dbg !6062
  %14 = bitcast i8* %13 to %struct.bAnimListElem*, !dbg !6064
  store %struct.bAnimListElem* %14, %struct.bAnimListElem** %ale, align 8, !dbg !6065
  br label %for.cond, !dbg !6066

for.cond:                                         ; preds = %for.inc, %if.else20
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6067
  %tobool = icmp ne %struct.bAnimListElem* %15, null, !dbg !6069
  br i1 %tobool, label %for.body, label %for.end, !dbg !6069

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !6070, metadata !DIExpression()), !dbg !6072
  %16 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6073
  %data25 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %16, i32 0, i32 2, !dbg !6074
  %17 = load i8*, i8** %data25, align 8, !dbg !6074
  %18 = bitcast i8* %17 to %struct.AnimData*, !dbg !6073
  store %struct.AnimData* %18, %struct.AnimData** %adt, align 8, !dbg !6072
  %datatype26 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !6075
  %19 = load i16, i16* %datatype26, align 8, !dbg !6075
  %conv27 = sext i16 %19 to i32, !dbg !6076
  switch i32 %conv27, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb28
    i32 2, label %sw.bb29
  ], !dbg !6077

sw.bb:                                            ; preds = %for.body
  %20 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6078
  %21 = load i32, i32* %mode, align 4, !dbg !6080
  call void @rearrange_nla_channels(%struct.bAnimContext* %ac, %struct.AnimData* %20, i32 %21), !dbg !6081
  br label %sw.epilog, !dbg !6082

sw.bb28:                                          ; preds = %for.body
  %22 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6083
  %23 = load i32, i32* %mode, align 4, !dbg !6084
  call void @rearrange_driver_channels(%struct.bAnimContext* %ac, %struct.AnimData* %22, i32 %23), !dbg !6085
  br label %sw.epilog, !dbg !6086

sw.bb29:                                          ; preds = %for.body
  br label %sw.default, !dbg !6086

sw.default:                                       ; preds = %for.body, %sw.bb29
  %24 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6087
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %24, i32 0, i32 0, !dbg !6089
  %25 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !6089
  %tobool30 = icmp ne %struct.bAction* %25, null, !dbg !6087
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !6090

if.then31:                                        ; preds = %sw.default
  %26 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6091
  %action32 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 0, !dbg !6092
  %27 = load %struct.bAction*, %struct.bAction** %action32, align 8, !dbg !6092
  %28 = load i32, i32* %mode, align 4, !dbg !6093
  call void @rearrange_action_channels(%struct.bAnimContext* %ac, %struct.bAction* %27, i32 %28), !dbg !6094
  br label %if.end38, !dbg !6094

if.else33:                                        ; preds = %sw.default
  %29 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6095
  %and = and i32 %29, 1, !dbg !6097
  %tobool34 = icmp ne i32 %and, 0, !dbg !6097
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !6098

if.then35:                                        ; preds = %if.else33
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.76, i64 0, i64 0)), !dbg !6099
  br label %if.end37, !dbg !6099

if.end37:                                         ; preds = %if.then35, %if.else33
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then31
  br label %sw.epilog, !dbg !6100

sw.epilog:                                        ; preds = %if.end38, %sw.bb28, %sw.bb
  br label %for.inc, !dbg !6101

for.inc:                                          ; preds = %sw.epilog
  %30 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6102
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %30, i32 0, i32 0, !dbg !6103
  %31 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !6103
  store %struct.bAnimListElem* %31, %struct.bAnimListElem** %ale, align 8, !dbg !6104
  br label %for.cond, !dbg !6105, !llvm.loop !6106

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !6108
  br label %if.end39

if.end39:                                         ; preds = %for.end, %if.then19
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then12
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then6
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6109
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 239599617, i8* null), !dbg !6110
  store i32 4, i32* %retval, align 4, !dbg !6111
  br label %return, !dbg !6111

return:                                           ; preds = %if.end41, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !6112
  ret i32 %33, !dbg !6112
}

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_action_channels(%struct.bAnimContext* %ac, %struct.bAction* %act, i32 %mode) #0 !dbg !6113 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %mode.addr = alloca i32, align 4
  %tgrp = alloca %struct.bActionGroup, align 8
  %anim_data_visible = alloca %struct.ListBase, align 8
  %do_channels = alloca i8, align 1
  %rearrange_func = alloca i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6120, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.bActionGroup* %tgrp, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data_visible, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = bitcast %struct.ListBase* %anim_data_visible to i8*, !dbg !6125
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6125
  call void @llvm.dbg.declare(metadata i8* %do_channels, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, metadata !6128, metadata !DIExpression()), !dbg !6142
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6143
  %call = call i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_get_mode_func(i32 %1), !dbg !6144
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %call, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6142
  %2 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6145
  %cmp = icmp eq i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %2, null, !dbg !6147
  br i1 %cmp, label %if.then, label %if.end, !dbg !6148

if.then:                                          ; preds = %entry
  br label %return, !dbg !6149

if.end:                                           ; preds = %entry
  %3 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6150
  call void @split_groups_action_temp(%struct.bAction* %3, %struct.bActionGroup* %tgrp), !dbg !6151
  %4 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6152
  call void @rearrange_animchannels_filter_visible(%struct.ListBase* %anim_data_visible, %struct.bAnimContext* %4, i32 6), !dbg !6153
  %5 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6154
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %5, i32 0, i32 3, !dbg !6155
  %6 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6156
  %7 = load i32, i32* %mode.addr, align 4, !dbg !6157
  %call1 = call zeroext i8 @rearrange_animchannel_islands(%struct.ListBase* %groups, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %6, i32 %7, i32 6, %struct.ListBase* %anim_data_visible), !dbg !6158
  %conv = zext i8 %call1 to i32, !dbg !6158
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6159
  %conv3 = zext i1 %cmp2 to i32, !dbg !6159
  %conv4 = trunc i32 %conv3 to i8, !dbg !6160
  store i8 %conv4, i8* %do_channels, align 1, !dbg !6161
  call void @BLI_freelistN(%struct.ListBase* %anim_data_visible), !dbg !6162
  %8 = load i8, i8* %do_channels, align 1, !dbg !6163
  %tobool = icmp ne i8 %8, 0, !dbg !6163
  br i1 %tobool, label %if.then5, label %if.end27, !dbg !6165

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !6166, metadata !DIExpression()), !dbg !6168
  %9 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6169
  call void @rearrange_animchannels_filter_visible(%struct.ListBase* %anim_data_visible, %struct.bAnimContext* %9, i32 7), !dbg !6170
  %10 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6171
  %groups6 = getelementptr inbounds %struct.bAction, %struct.bAction* %10, i32 0, i32 3, !dbg !6173
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups6, i32 0, i32 0, !dbg !6174
  %11 = load i8*, i8** %first, align 8, !dbg !6174
  %12 = bitcast i8* %11 to %struct.bActionGroup*, !dbg !6171
  store %struct.bActionGroup* %12, %struct.bActionGroup** %agrp, align 8, !dbg !6175
  br label %for.cond, !dbg !6176

for.cond:                                         ; preds = %for.inc, %if.then5
  %13 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6177
  %tobool7 = icmp ne %struct.bActionGroup* %13, null, !dbg !6179
  br i1 %tobool7, label %for.body, label %for.end, !dbg !6179

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6180
  %tobool8 = icmp ne %struct.bAnimContext* %14, null, !dbg !6180
  br i1 %tobool8, label %lor.lhs.false, label %land.lhs.true, !dbg !6180

lor.lhs.false:                                    ; preds = %for.body
  %15 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6180
  %spacetype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %15, i32 0, i32 3, !dbg !6180
  %16 = load i16, i16* %spacetype, align 4, !dbg !6180
  %conv9 = sext i16 %16 to i32, !dbg !6180
  %cmp10 = icmp ne i32 %conv9, 2, !dbg !6180
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false13, !dbg !6180

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %17 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6180
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %17, i32 0, i32 3, !dbg !6180
  %18 = load i32, i32* %flag, align 8, !dbg !6180
  %and = and i32 %18, 8, !dbg !6180
  %tobool12 = icmp ne i32 %and, 0, !dbg !6180
  br i1 %tobool12, label %if.then24, label %lor.lhs.false13, !dbg !6180

lor.lhs.false13:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %19 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6180
  %tobool14 = icmp ne %struct.bAnimContext* %19, null, !dbg !6180
  br i1 %tobool14, label %land.lhs.true15, label %if.end26, !dbg !6180

land.lhs.true15:                                  ; preds = %lor.lhs.false13
  %20 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6180
  %spacetype16 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %20, i32 0, i32 3, !dbg !6180
  %21 = load i16, i16* %spacetype16, align 4, !dbg !6180
  %conv17 = sext i16 %21 to i32, !dbg !6180
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !6180
  br i1 %cmp18, label %land.lhs.true20, label %if.end26, !dbg !6180

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %22 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6180
  %flag21 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %22, i32 0, i32 3, !dbg !6180
  %23 = load i32, i32* %flag21, align 8, !dbg !6180
  %and22 = and i32 %23, 64, !dbg !6180
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6180
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6183

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6184
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %24, i32 0, i32 2, !dbg !6186
  %25 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6187
  %26 = load i32, i32* %mode.addr, align 4, !dbg !6188
  %call25 = call zeroext i8 @rearrange_animchannel_islands(%struct.ListBase* %channels, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %25, i32 %26, i32 7, %struct.ListBase* %anim_data_visible), !dbg !6189
  br label %if.end26, !dbg !6190

if.end26:                                         ; preds = %if.then24, %land.lhs.true20, %land.lhs.true15, %lor.lhs.false13
  br label %for.inc, !dbg !6191

for.inc:                                          ; preds = %if.end26
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6192
  %next = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %27, i32 0, i32 0, !dbg !6193
  %28 = load %struct.bActionGroup*, %struct.bActionGroup** %next, align 8, !dbg !6193
  store %struct.bActionGroup* %28, %struct.bActionGroup** %agrp, align 8, !dbg !6194
  br label %for.cond, !dbg !6195, !llvm.loop !6196

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %anim_data_visible), !dbg !6198
  br label %if.end27, !dbg !6199

if.end27:                                         ; preds = %for.end, %if.end
  %29 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6200
  call void @join_groups_action_temp(%struct.bAction* %29), !dbg !6201
  br label %return, !dbg !6202

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !6202
}

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_nla_channels(%struct.bAnimContext* %ac, %struct.AnimData* %adt, i32 %mode) #0 !dbg !6203 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %mode.addr = alloca i32, align 4
  %rearrange_func = alloca i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, align 8
  %anim_data_visible = alloca %struct.ListBase, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, metadata !6212, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data_visible, metadata !6214, metadata !DIExpression()), !dbg !6215
  %0 = bitcast %struct.ListBase* %anim_data_visible to i8*, !dbg !6215
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6215
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6216
  %mul = mul nsw i32 %1, -1, !dbg !6216
  store i32 %mul, i32* %mode.addr, align 4, !dbg !6216
  %2 = load i32, i32* %mode.addr, align 4, !dbg !6217
  %call = call i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_get_mode_func(i32 %2), !dbg !6218
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %call, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6219
  %3 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6220
  %cmp = icmp eq i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %3, null, !dbg !6222
  br i1 %cmp, label %if.then, label %if.end, !dbg !6223

if.then:                                          ; preds = %entry
  br label %return, !dbg !6224

if.end:                                           ; preds = %entry
  %4 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6225
  call void @rearrange_animchannels_filter_visible(%struct.ListBase* %anim_data_visible, %struct.bAnimContext* %4, i32 30), !dbg !6226
  %5 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6227
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %5, i32 0, i32 3, !dbg !6228
  %6 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6229
  %7 = load i32, i32* %mode.addr, align 4, !dbg !6230
  %call1 = call zeroext i8 @rearrange_animchannel_islands(%struct.ListBase* %nla_tracks, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %6, i32 %7, i32 30, %struct.ListBase* %anim_data_visible), !dbg !6231
  call void @BLI_freelistN(%struct.ListBase* %anim_data_visible), !dbg !6232
  br label %return, !dbg !6233

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6233
}

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_driver_channels(%struct.bAnimContext* %ac, %struct.AnimData* %adt, i32 %mode) #0 !dbg !6234 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %mode.addr = alloca i32, align 4
  %rearrange_func = alloca i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, align 8
  %anim_data_visible = alloca %struct.ListBase, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !6235, metadata !DIExpression()), !dbg !6236
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, metadata !6241, metadata !DIExpression()), !dbg !6242
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6243
  %call = call i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_get_mode_func(i32 %0), !dbg !6244
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %call, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data_visible, metadata !6245, metadata !DIExpression()), !dbg !6246
  %1 = bitcast %struct.ListBase* %anim_data_visible to i8*, !dbg !6246
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !6246
  %2 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6247
  %cmp = icmp eq i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %2, null, !dbg !6249
  br i1 %cmp, label %if.then, label %if.end, !dbg !6250

if.then:                                          ; preds = %entry
  br label %return, !dbg !6251

if.end:                                           ; preds = %entry
  %3 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6252
  %flag = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 7, !dbg !6252
  %4 = load i32, i32* %flag, align 8, !dbg !6252
  %and = and i32 %4, 1024, !dbg !6252
  %cmp1 = icmp eq i32 %and, 0, !dbg !6252
  %conv = zext i1 %cmp1 to i32, !dbg !6252
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6254
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6255

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !6256

if.end5:                                          ; preds = %if.end
  %5 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6257
  call void @rearrange_animchannels_filter_visible(%struct.ListBase* %anim_data_visible, %struct.bAnimContext* %5, i32 7), !dbg !6258
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6259
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 5, !dbg !6260
  %7 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func, align 8, !dbg !6261
  %8 = load i32, i32* %mode.addr, align 4, !dbg !6262
  %call6 = call zeroext i8 @rearrange_animchannel_islands(%struct.ListBase* %drivers, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %7, i32 %8, i32 7, %struct.ListBase* %anim_data_visible), !dbg !6263
  call void @BLI_freelistN(%struct.ListBase* %anim_data_visible), !dbg !6264
  br label %return, !dbg !6265

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !6265
}

; Function Attrs: noinline nounwind uwtable
define internal i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_get_mode_func(i32 %mode) #0 !dbg !6266 {
entry:
  %retval = alloca i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6271
  switch i32 %0, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb1
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
  ], !dbg !6272

sw.bb:                                            ; preds = %entry
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_island_top, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6273
  br label %return, !dbg !6273

sw.bb1:                                           ; preds = %entry
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_island_up, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6275
  br label %return, !dbg !6275

sw.bb2:                                           ; preds = %entry
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_island_down, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6276
  br label %return, !dbg !6276

sw.bb3:                                           ; preds = %entry
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* @rearrange_island_bottom, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6277
  br label %return, !dbg !6277

sw.default:                                       ; preds = %entry
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* null, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6278
  br label %return, !dbg !6278

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %retval, align 8, !dbg !6279
  ret i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %1, !dbg !6279
}

; Function Attrs: noinline nounwind uwtable
define internal void @split_groups_action_temp(%struct.bAction* %act, %struct.bActionGroup* %tgrp) #0 !dbg !6280 {
entry:
  %act.addr = alloca %struct.bAction*, align 8
  %tgrp.addr = alloca %struct.bActionGroup*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store %struct.bActionGroup* %tgrp, %struct.bActionGroup** %tgrp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %tgrp.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !6287, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !6289, metadata !DIExpression()), !dbg !6290
  %0 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6291
  %cmp = icmp eq %struct.bAction* %0, null, !dbg !6293
  br i1 %cmp, label %if.then, label %if.end, !dbg !6294

if.then:                                          ; preds = %entry
  br label %return, !dbg !6295

if.end:                                           ; preds = %entry
  %1 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6296
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %1, i32 0, i32 3, !dbg !6298
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups, i32 0, i32 0, !dbg !6299
  %2 = load i8*, i8** %first, align 8, !dbg !6299
  %3 = bitcast i8* %2 to %struct.bActionGroup*, !dbg !6296
  store %struct.bActionGroup* %3, %struct.bActionGroup** %agrp, align 8, !dbg !6300
  br label %for.cond, !dbg !6301

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6302
  %tobool = icmp ne %struct.bActionGroup* %4, null, !dbg !6304
  br i1 %tobool, label %for.body, label %for.end, !dbg !6304

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6305
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %5, i32 0, i32 2, !dbg !6308
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels, i32 0, i32 0, !dbg !6309
  %6 = load i8*, i8** %first1, align 8, !dbg !6309
  %tobool2 = icmp ne i8* %6, null, !dbg !6305
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !6310

if.then3:                                         ; preds = %for.body
  %7 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6311
  %channels4 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %7, i32 0, i32 2, !dbg !6313
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels4, i32 0, i32 1, !dbg !6314
  %8 = load i8*, i8** %last, align 8, !dbg !6314
  %9 = bitcast i8* %8 to %struct.FCurve*, !dbg !6311
  store %struct.FCurve* %9, %struct.FCurve** %fcu, align 8, !dbg !6315
  %10 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6316
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %10, i32 0, i32 0, !dbg !6317
  %11 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !6317
  %12 = bitcast %struct.FCurve* %11 to i8*, !dbg !6316
  %13 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6318
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %13, i32 0, i32 1, !dbg !6319
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !6320
  store i8* %12, i8** %first5, align 8, !dbg !6321
  %14 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6322
  %channels6 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %14, i32 0, i32 2, !dbg !6323
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels6, i32 0, i32 0, !dbg !6324
  %15 = load i8*, i8** %first7, align 8, !dbg !6324
  %16 = bitcast i8* %15 to %struct.FCurve*, !dbg !6322
  store %struct.FCurve* %16, %struct.FCurve** %fcu, align 8, !dbg !6325
  %17 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6326
  %prev = getelementptr inbounds %struct.FCurve, %struct.FCurve* %17, i32 0, i32 1, !dbg !6327
  store %struct.FCurve* null, %struct.FCurve** %prev, align 8, !dbg !6328
  %18 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6329
  %channels8 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %18, i32 0, i32 2, !dbg !6330
  %last9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels8, i32 0, i32 1, !dbg !6331
  %19 = load i8*, i8** %last9, align 8, !dbg !6331
  %20 = bitcast i8* %19 to %struct.FCurve*, !dbg !6329
  store %struct.FCurve* %20, %struct.FCurve** %fcu, align 8, !dbg !6332
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6333
  %next10 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %21, i32 0, i32 0, !dbg !6334
  store %struct.FCurve* null, %struct.FCurve** %next10, align 8, !dbg !6335
  br label %if.end11, !dbg !6336

if.end11:                                         ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !6337

for.inc:                                          ; preds = %if.end11
  %22 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6338
  %next12 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %22, i32 0, i32 0, !dbg !6339
  %23 = load %struct.bActionGroup*, %struct.bActionGroup** %next12, align 8, !dbg !6339
  store %struct.bActionGroup* %23, %struct.bActionGroup** %agrp, align 8, !dbg !6340
  br label %for.cond, !dbg !6341, !llvm.loop !6342

for.end:                                          ; preds = %for.cond
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6344
  %25 = bitcast %struct.bActionGroup* %24 to i8*, !dbg !6345
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 120, i1 false), !dbg !6345
  %26 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6346
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %26, i32 0, i32 3, !dbg !6347
  %27 = load i32, i32* %flag, align 8, !dbg !6348
  %or = or i32 %27, 1073741832, !dbg !6348
  store i32 %or, i32* %flag, align 8, !dbg !6348
  %28 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6349
  %name = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %28, i32 0, i32 5, !dbg !6350
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6349
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i64 0, i64 0), i64 64), !dbg !6351
  %29 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6352
  %curves13 = getelementptr inbounds %struct.bAction, %struct.bAction* %29, i32 0, i32 1, !dbg !6354
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves13, i32 0, i32 0, !dbg !6355
  %30 = load i8*, i8** %first14, align 8, !dbg !6355
  %tobool15 = icmp ne i8* %30, null, !dbg !6352
  br i1 %tobool15, label %if.then16, label %if.end39, !dbg !6356

if.then16:                                        ; preds = %for.end
  %31 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6357
  %curves17 = getelementptr inbounds %struct.bAction, %struct.bAction* %31, i32 0, i32 1, !dbg !6359
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves17, i32 0, i32 0, !dbg !6360
  %32 = load i8*, i8** %first18, align 8, !dbg !6360
  %33 = bitcast i8* %32 to %struct.FCurve*, !dbg !6357
  store %struct.FCurve* %33, %struct.FCurve** %fcu, align 8, !dbg !6361
  %34 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6362
  %prev19 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %34, i32 0, i32 1, !dbg !6363
  store %struct.FCurve* null, %struct.FCurve** %prev19, align 8, !dbg !6364
  %35 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6365
  %36 = bitcast %struct.FCurve* %35 to i8*, !dbg !6365
  %37 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6366
  %channels20 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %37, i32 0, i32 2, !dbg !6367
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels20, i32 0, i32 0, !dbg !6368
  store i8* %36, i8** %first21, align 8, !dbg !6369
  %38 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6370
  %curves22 = getelementptr inbounds %struct.bAction, %struct.bAction* %38, i32 0, i32 1, !dbg !6371
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves22, i32 0, i32 0, !dbg !6372
  store i8* null, i8** %first23, align 8, !dbg !6373
  %39 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6374
  %curves24 = getelementptr inbounds %struct.bAction, %struct.bAction* %39, i32 0, i32 1, !dbg !6375
  %last25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves24, i32 0, i32 1, !dbg !6376
  %40 = load i8*, i8** %last25, align 8, !dbg !6376
  %41 = bitcast i8* %40 to %struct.FCurve*, !dbg !6374
  store %struct.FCurve* %41, %struct.FCurve** %fcu, align 8, !dbg !6377
  %42 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6378
  %next26 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %42, i32 0, i32 0, !dbg !6379
  store %struct.FCurve* null, %struct.FCurve** %next26, align 8, !dbg !6380
  %43 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6381
  %44 = bitcast %struct.FCurve* %43 to i8*, !dbg !6381
  %45 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6382
  %channels27 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %45, i32 0, i32 2, !dbg !6383
  %last28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels27, i32 0, i32 1, !dbg !6384
  store i8* %44, i8** %last28, align 8, !dbg !6385
  %46 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6386
  %curves29 = getelementptr inbounds %struct.bAction, %struct.bAction* %46, i32 0, i32 1, !dbg !6387
  %last30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves29, i32 0, i32 1, !dbg !6388
  store i8* null, i8** %last30, align 8, !dbg !6389
  %47 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6390
  %channels31 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %47, i32 0, i32 2, !dbg !6392
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels31, i32 0, i32 0, !dbg !6393
  %48 = load i8*, i8** %first32, align 8, !dbg !6393
  %49 = bitcast i8* %48 to %struct.FCurve*, !dbg !6390
  store %struct.FCurve* %49, %struct.FCurve** %fcu, align 8, !dbg !6394
  br label %for.cond33, !dbg !6395

for.cond33:                                       ; preds = %for.inc36, %if.then16
  %50 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6396
  %tobool34 = icmp ne %struct.FCurve* %50, null, !dbg !6398
  br i1 %tobool34, label %for.body35, label %for.end38, !dbg !6398

for.body35:                                       ; preds = %for.cond33
  %51 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6399
  %52 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6401
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %52, i32 0, i32 2, !dbg !6402
  store %struct.bActionGroup* %51, %struct.bActionGroup** %grp, align 8, !dbg !6403
  br label %for.inc36, !dbg !6404

for.inc36:                                        ; preds = %for.body35
  %53 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6405
  %next37 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %53, i32 0, i32 0, !dbg !6406
  %54 = load %struct.FCurve*, %struct.FCurve** %next37, align 8, !dbg !6406
  store %struct.FCurve* %54, %struct.FCurve** %fcu, align 8, !dbg !6407
  br label %for.cond33, !dbg !6408, !llvm.loop !6409

for.end38:                                        ; preds = %for.cond33
  br label %if.end39, !dbg !6411

if.end39:                                         ; preds = %for.end38, %for.end
  %55 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6412
  %groups40 = getelementptr inbounds %struct.bAction, %struct.bAction* %55, i32 0, i32 3, !dbg !6413
  %56 = load %struct.bActionGroup*, %struct.bActionGroup** %tgrp.addr, align 8, !dbg !6414
  %57 = bitcast %struct.bActionGroup* %56 to i8*, !dbg !6414
  call void @BLI_addtail(%struct.ListBase* %groups40, i8* %57), !dbg !6415
  br label %return, !dbg !6416

return:                                           ; preds = %if.end39, %if.then
  ret void, !dbg !6416
}

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_animchannels_filter_visible(%struct.ListBase* %anim_data_visible, %struct.bAnimContext* %ac, i32 %type) #0 !dbg !6417 {
entry:
  %anim_data_visible.addr = alloca %struct.ListBase*, align 8
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %type.addr = alloca i32, align 4
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %ale_next = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  store %struct.ListBase* %anim_data_visible, %struct.ListBase** %anim_data_visible.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %anim_data_visible.addr, metadata !6420, metadata !DIExpression()), !dbg !6421
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !6426, metadata !DIExpression()), !dbg !6427
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !6427
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6427
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !6428, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale_next, metadata !6430, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !6432, metadata !DIExpression()), !dbg !6433
  store i32 11, i32* %filter, align 4, !dbg !6433
  %1 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6434
  %2 = load i32, i32* %filter, align 4, !dbg !6435
  %3 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6436
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %3, i32 0, i32 0, !dbg !6437
  %4 = load i8*, i8** %data, align 8, !dbg !6437
  %5 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !6438
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %5, i32 0, i32 1, !dbg !6439
  %6 = load i16, i16* %datatype, align 8, !dbg !6439
  %conv = sext i16 %6 to i32, !dbg !6438
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %1, %struct.ListBase* %anim_data, i32 %2, i8* %4, i32 %conv), !dbg !6440
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !6441
  %7 = load i8*, i8** %first, align 8, !dbg !6441
  %8 = bitcast i8* %7 to %struct.bAnimListElem*, !dbg !6443
  store %struct.bAnimListElem* %8, %struct.bAnimListElem** %ale, align 8, !dbg !6444
  br label %for.cond, !dbg !6445

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6446
  %tobool = icmp ne %struct.bAnimListElem* %9, null, !dbg !6448
  br i1 %tobool, label %for.body, label %for.end, !dbg !6448

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6449
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %10, i32 0, i32 0, !dbg !6451
  %11 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !6451
  store %struct.bAnimListElem* %11, %struct.bAnimListElem** %ale_next, align 8, !dbg !6452
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6453
  %type1 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %12, i32 0, i32 3, !dbg !6455
  %13 = load i32, i32* %type1, align 8, !dbg !6455
  %14 = load i32, i32* %type.addr, align 4, !dbg !6456
  %cmp = icmp ne i32 %13, %14, !dbg !6457
  br i1 %cmp, label %if.then, label %if.end, !dbg !6458

if.then:                                          ; preds = %for.body
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !6459
  %16 = bitcast %struct.bAnimListElem* %15 to i8*, !dbg !6459
  call void @BLI_freelinkN(%struct.ListBase* %anim_data, i8* %16), !dbg !6461
  br label %if.end, !dbg !6462

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6463

for.inc:                                          ; preds = %if.end
  %17 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale_next, align 8, !dbg !6464
  store %struct.bAnimListElem* %17, %struct.bAnimListElem** %ale, align 8, !dbg !6465
  br label %for.cond, !dbg !6466, !llvm.loop !6467

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ListBase*, %struct.ListBase** %anim_data_visible.addr, align 8, !dbg !6469
  %19 = bitcast %struct.ListBase* %18 to i8*, !dbg !6470
  %20 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !6470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false), !dbg !6470
  ret void, !dbg !6471
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_animchannel_islands(%struct.ListBase* %list, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %rearrange_func, i32 %mode, i32 %type, %struct.ListBase* %anim_data_visible) #0 !dbg !6472 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %rearrange_func.addr = alloca i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, align 8
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %anim_data_visible.addr = alloca %struct.ListBase*, align 8
  %islands = alloca %struct.ListBase, align 8
  %channel = alloca %struct.Link*, align 8
  %chanNext = alloca %struct.Link*, align 8
  %done = alloca i8, align 1
  %is_hidden = alloca i8, align 1
  %first8 = alloca %struct.tReorderChannelIsland*, align 8
  %island = alloca %struct.tReorderChannelIsland*, align 8
  %isn = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6475, metadata !DIExpression()), !dbg !6476
  store i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)* %rearrange_func, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func.addr, metadata !6477, metadata !DIExpression()), !dbg !6478
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6479, metadata !DIExpression()), !dbg !6480
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store %struct.ListBase* %anim_data_visible, %struct.ListBase** %anim_data_visible.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %anim_data_visible.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.ListBase* %islands, metadata !6485, metadata !DIExpression()), !dbg !6486
  %0 = bitcast %struct.ListBase* %islands to i8*, !dbg !6486
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6486
  call void @llvm.dbg.declare(metadata %struct.Link** %channel, metadata !6487, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.declare(metadata %struct.Link** %chanNext, metadata !6496, metadata !DIExpression()), !dbg !6497
  store %struct.Link* null, %struct.Link** %chanNext, align 8, !dbg !6497
  call void @llvm.dbg.declare(metadata i8* %done, metadata !6498, metadata !DIExpression()), !dbg !6499
  store i8 0, i8* %done, align 1, !dbg !6499
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6500
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %1), !dbg !6502
  %tobool = icmp ne i8 %call, 0, !dbg !6502
  br i1 %tobool, label %if.then, label %if.end, !dbg !6503

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6504
  br label %return, !dbg !6504

if.end:                                           ; preds = %entry
  %2 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6505
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !6507
  %3 = load i8*, i8** %first, align 8, !dbg !6507
  %4 = bitcast i8* %3 to %struct.Link*, !dbg !6505
  store %struct.Link* %4, %struct.Link** %channel, align 8, !dbg !6508
  br label %for.cond, !dbg !6509

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.Link*, %struct.Link** %channel, align 8, !dbg !6510
  %tobool1 = icmp ne %struct.Link* %5, null, !dbg !6512
  br i1 %tobool1, label %for.body, label %for.end, !dbg !6512

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %is_hidden, metadata !6513, metadata !DIExpression()), !dbg !6516
  %6 = load %struct.ListBase*, %struct.ListBase** %anim_data_visible.addr, align 8, !dbg !6517
  %7 = load %struct.Link*, %struct.Link** %channel, align 8, !dbg !6518
  %8 = bitcast %struct.Link* %7 to i8*, !dbg !6518
  %call2 = call i8* @BLI_findptr(%struct.ListBase* %6, i8* %8, i32 16), !dbg !6519
  %cmp = icmp eq i8* %call2, null, !dbg !6520
  %conv = zext i1 %cmp to i32, !dbg !6520
  %conv3 = trunc i32 %conv to i8, !dbg !6521
  store i8 %conv3, i8* %is_hidden, align 1, !dbg !6516
  %9 = load %struct.Link*, %struct.Link** %channel, align 8, !dbg !6522
  %next = getelementptr inbounds %struct.Link, %struct.Link* %9, i32 0, i32 0, !dbg !6523
  %10 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !6523
  store %struct.Link* %10, %struct.Link** %chanNext, align 8, !dbg !6524
  %11 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6525
  %12 = load %struct.Link*, %struct.Link** %channel, align 8, !dbg !6526
  %13 = load i32, i32* %type.addr, align 4, !dbg !6527
  %14 = load i8, i8* %is_hidden, align 1, !dbg !6528
  call void @rearrange_animchannel_add_to_islands(%struct.ListBase* %islands, %struct.ListBase* %11, %struct.Link* %12, i32 %13, i8 zeroext %14), !dbg !6529
  br label %for.inc, !dbg !6530

for.inc:                                          ; preds = %for.body
  %15 = load %struct.Link*, %struct.Link** %chanNext, align 8, !dbg !6531
  store %struct.Link* %15, %struct.Link** %channel, align 8, !dbg !6532
  br label %for.cond, !dbg !6533, !llvm.loop !6534

for.end:                                          ; preds = %for.cond
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %islands, i32 0, i32 0, !dbg !6536
  %16 = load i8*, i8** %first4, align 8, !dbg !6536
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %islands, i32 0, i32 1, !dbg !6538
  %17 = load i8*, i8** %last, align 8, !dbg !6538
  %cmp5 = icmp ne i8* %16, %17, !dbg !6539
  br i1 %cmp5, label %if.then7, label %if.end29, !dbg !6540

if.then7:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %first8, metadata !6541, metadata !DIExpression()), !dbg !6543
  %18 = load i32, i32* %mode.addr, align 4, !dbg !6544
  %cmp9 = icmp sgt i32 %18, 0, !dbg !6545
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !6546

cond.true:                                        ; preds = %if.then7
  %last11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %islands, i32 0, i32 1, !dbg !6547
  %19 = load i8*, i8** %last11, align 8, !dbg !6547
  br label %cond.end, !dbg !6546

cond.false:                                       ; preds = %if.then7
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %islands, i32 0, i32 0, !dbg !6548
  %20 = load i8*, i8** %first12, align 8, !dbg !6548
  br label %cond.end, !dbg !6546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %19, %cond.true ], [ %20, %cond.false ], !dbg !6546
  %21 = bitcast i8* %cond to %struct.tReorderChannelIsland*, !dbg !6546
  store %struct.tReorderChannelIsland* %21, %struct.tReorderChannelIsland** %first8, align 8, !dbg !6543
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island, metadata !6549, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %isn, metadata !6551, metadata !DIExpression()), !dbg !6552
  store %struct.tReorderChannelIsland* null, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6552
  %22 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %first8, align 8, !dbg !6553
  store %struct.tReorderChannelIsland* %22, %struct.tReorderChannelIsland** %island, align 8, !dbg !6555
  br label %for.cond13, !dbg !6556

for.cond13:                                       ; preds = %for.inc27, %cond.end
  %23 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6557
  %tobool14 = icmp ne %struct.tReorderChannelIsland* %23, null, !dbg !6559
  br i1 %tobool14, label %for.body15, label %for.end28, !dbg !6559

for.body15:                                       ; preds = %for.cond13
  %24 = load i32, i32* %mode.addr, align 4, !dbg !6560
  %cmp16 = icmp sgt i32 %24, 0, !dbg !6562
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !6563

cond.true18:                                      ; preds = %for.body15
  %25 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6564
  %prev = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %25, i32 0, i32 1, !dbg !6565
  %26 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6565
  br label %cond.end21, !dbg !6563

cond.false19:                                     ; preds = %for.body15
  %27 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6566
  %next20 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %27, i32 0, i32 0, !dbg !6567
  %28 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next20, align 8, !dbg !6567
  br label %cond.end21, !dbg !6563

cond.end21:                                       ; preds = %cond.false19, %cond.true18
  %cond22 = phi %struct.tReorderChannelIsland* [ %26, %cond.true18 ], [ %28, %cond.false19 ], !dbg !6563
  store %struct.tReorderChannelIsland* %cond22, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6568
  %29 = load i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)*, i8 (%struct.ListBase*, %struct.tReorderChannelIsland*)** %rearrange_func.addr, align 8, !dbg !6569
  %30 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6571
  %call23 = call zeroext i8 %29(%struct.ListBase* %islands, %struct.tReorderChannelIsland* %30), !dbg !6569
  %tobool24 = icmp ne i8 %call23, 0, !dbg !6569
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !6572

if.then25:                                        ; preds = %cond.end21
  %31 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6573
  %flag = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %31, i32 0, i32 3, !dbg !6575
  %32 = load i32, i32* %flag, align 8, !dbg !6576
  %or = or i32 %32, 4, !dbg !6576
  store i32 %or, i32* %flag, align 8, !dbg !6576
  store i8 1, i8* %done, align 1, !dbg !6577
  br label %if.end26, !dbg !6578

if.end26:                                         ; preds = %if.then25, %cond.end21
  br label %for.inc27, !dbg !6579

for.inc27:                                        ; preds = %if.end26
  %33 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6580
  store %struct.tReorderChannelIsland* %33, %struct.tReorderChannelIsland** %island, align 8, !dbg !6581
  br label %for.cond13, !dbg !6582, !llvm.loop !6583

for.end28:                                        ; preds = %for.cond13
  br label %if.end29, !dbg !6585

if.end29:                                         ; preds = %for.end28, %for.end
  %34 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6586
  call void @rearrange_animchannel_flatten_islands(%struct.ListBase* %islands, %struct.ListBase* %34), !dbg !6587
  %35 = load i8, i8* %done, align 1, !dbg !6588
  store i8 %35, i8* %retval, align 1, !dbg !6589
  br label %return, !dbg !6589

return:                                           ; preds = %if.end29, %if.then
  %36 = load i8, i8* %retval, align 1, !dbg !6590
  ret i8 %36, !dbg !6590
}

; Function Attrs: noinline nounwind uwtable
define internal void @join_groups_action_temp(%struct.bAction* %act) #0 !dbg !6591 {
entry:
  %act.addr = alloca %struct.bAction*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %tempGroup = alloca %struct.ListBase, align 8
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !6596, metadata !DIExpression()), !dbg !6597
  %0 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6598
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %0, i32 0, i32 3, !dbg !6600
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups, i32 0, i32 0, !dbg !6601
  %1 = load i8*, i8** %first, align 8, !dbg !6601
  %2 = bitcast i8* %1 to %struct.bActionGroup*, !dbg !6598
  store %struct.bActionGroup* %2, %struct.bActionGroup** %agrp, align 8, !dbg !6602
  br label %for.cond, !dbg !6603

for.cond:                                         ; preds = %for.inc12, %entry
  %3 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6604
  %tobool = icmp ne %struct.bActionGroup* %3, null, !dbg !6606
  br i1 %tobool, label %for.body, label %for.end14, !dbg !6606

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tempGroup, metadata !6607, metadata !DIExpression()), !dbg !6609
  %4 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6610
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %4, i32 0, i32 2, !dbg !6611
  %5 = bitcast %struct.ListBase* %tempGroup to i8*, !dbg !6611
  %6 = bitcast %struct.ListBase* %channels to i8*, !dbg !6611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !6611
  %7 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6612
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %7, i32 0, i32 1, !dbg !6613
  %8 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6614
  %channels1 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %8, i32 0, i32 2, !dbg !6615
  call void @BLI_movelisttolist(%struct.ListBase* %curves, %struct.ListBase* %channels1), !dbg !6616
  %9 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6617
  %channels2 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %9, i32 0, i32 2, !dbg !6618
  %10 = bitcast %struct.ListBase* %channels2 to i8*, !dbg !6619
  %11 = bitcast %struct.ListBase* %tempGroup to i8*, !dbg !6619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false), !dbg !6619
  %12 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6620
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %12, i32 0, i32 3, !dbg !6621
  %13 = load i32, i32* %flag, align 8, !dbg !6622
  %and = and i32 %13, 2147483647, !dbg !6622
  store i32 %and, i32* %flag, align 8, !dbg !6622
  %14 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6623
  %flag3 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %14, i32 0, i32 3, !dbg !6625
  %15 = load i32, i32* %flag3, align 8, !dbg !6625
  %and4 = and i32 %15, 1073741824, !dbg !6626
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6626
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6627

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !6628, metadata !DIExpression()), !dbg !6630
  %16 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6631
  %channels6 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %16, i32 0, i32 2, !dbg !6633
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels6, i32 0, i32 0, !dbg !6634
  %17 = load i8*, i8** %first7, align 8, !dbg !6634
  %18 = bitcast i8* %17 to %struct.FCurve*, !dbg !6631
  store %struct.FCurve* %18, %struct.FCurve** %fcu, align 8, !dbg !6635
  br label %for.cond8, !dbg !6636

for.cond8:                                        ; preds = %for.inc, %if.then
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6637
  %tobool9 = icmp ne %struct.FCurve* %19, null, !dbg !6639
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !6639

for.body10:                                       ; preds = %for.cond8
  %20 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6640
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %20, i32 0, i32 2, !dbg !6642
  store %struct.bActionGroup* null, %struct.bActionGroup** %grp, align 8, !dbg !6643
  br label %for.inc, !dbg !6644

for.inc:                                          ; preds = %for.body10
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6645
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %21, i32 0, i32 0, !dbg !6646
  %22 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !6646
  store %struct.FCurve* %22, %struct.FCurve** %fcu, align 8, !dbg !6647
  br label %for.cond8, !dbg !6648, !llvm.loop !6649

for.end:                                          ; preds = %for.cond8
  %23 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !6651
  %groups11 = getelementptr inbounds %struct.bAction, %struct.bAction* %23, i32 0, i32 3, !dbg !6652
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6653
  %25 = bitcast %struct.bActionGroup* %24 to i8*, !dbg !6653
  call void @BLI_remlink(%struct.ListBase* %groups11, i8* %25), !dbg !6654
  br label %for.end14, !dbg !6655

if.end:                                           ; preds = %for.body
  br label %for.inc12, !dbg !6656

for.inc12:                                        ; preds = %if.end
  %26 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6657
  %next13 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %26, i32 0, i32 0, !dbg !6658
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %next13, align 8, !dbg !6658
  store %struct.bActionGroup* %27, %struct.bActionGroup** %agrp, align 8, !dbg !6659
  br label %for.cond, !dbg !6660, !llvm.loop !6661

for.end14:                                        ; preds = %for.end, %for.cond
  ret void, !dbg !6663
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_island_top(%struct.ListBase* %list, %struct.tReorderChannelIsland* %island) #0 !dbg !6664 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %island.addr = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6665, metadata !DIExpression()), !dbg !6666
  store %struct.tReorderChannelIsland* %island, %struct.tReorderChannelIsland** %island.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island.addr, metadata !6667, metadata !DIExpression()), !dbg !6668
  %0 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6669
  %call = call zeroext i8 @rearrange_island_ok(%struct.tReorderChannelIsland* %0), !dbg !6671
  %tobool = icmp ne i8 %call, 0, !dbg !6671
  br i1 %tobool, label %if.then, label %if.end, !dbg !6672

if.then:                                          ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6673
  %2 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6675
  %3 = bitcast %struct.tReorderChannelIsland* %2 to i8*, !dbg !6675
  call void @BLI_remlink(%struct.ListBase* %1, i8* %3), !dbg !6676
  %4 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6677
  %5 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6678
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !6679
  %6 = load i8*, i8** %first, align 8, !dbg !6679
  %7 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6680
  %8 = bitcast %struct.tReorderChannelIsland* %7 to i8*, !dbg !6680
  call void @BLI_insertlinkbefore(%struct.ListBase* %4, i8* %6, i8* %8), !dbg !6681
  store i8 1, i8* %retval, align 1, !dbg !6682
  br label %return, !dbg !6682

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6683
  br label %return, !dbg !6683

return:                                           ; preds = %if.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !6684
  ret i8 %9, !dbg !6684
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_island_up(%struct.ListBase* %list, %struct.tReorderChannelIsland* %island) #0 !dbg !6685 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %island.addr = alloca %struct.tReorderChannelIsland*, align 8
  %prev = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  store %struct.tReorderChannelIsland* %island, %struct.tReorderChannelIsland** %island.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  %0 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6690
  %call = call zeroext i8 @rearrange_island_ok(%struct.tReorderChannelIsland* %0), !dbg !6692
  %tobool = icmp ne i8 %call, 0, !dbg !6692
  br i1 %tobool, label %if.then, label %if.end7, !dbg !6693

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %prev, metadata !6694, metadata !DIExpression()), !dbg !6696
  %1 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6697
  %prev1 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %1, i32 0, i32 1, !dbg !6698
  %2 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev1, align 8, !dbg !6698
  store %struct.tReorderChannelIsland* %2, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6696
  br label %while.cond, !dbg !6699

while.cond:                                       ; preds = %while.body, %if.then
  %3 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6700
  %tobool2 = icmp ne %struct.tReorderChannelIsland* %3, null, !dbg !6700
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !6701

land.rhs:                                         ; preds = %while.cond
  %4 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6702
  %flag = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %4, i32 0, i32 3, !dbg !6703
  %5 = load i32, i32* %flag, align 8, !dbg !6703
  %and = and i32 %5, 8, !dbg !6704
  %tobool3 = icmp ne i32 %and, 0, !dbg !6701
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !6705
  br i1 %6, label %while.body, label %while.end, !dbg !6699

while.body:                                       ; preds = %land.end
  %7 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6706
  %prev4 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %7, i32 0, i32 1, !dbg !6708
  %8 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev4, align 8, !dbg !6708
  store %struct.tReorderChannelIsland* %8, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6709
  br label %while.cond, !dbg !6699, !llvm.loop !6710

while.end:                                        ; preds = %land.end
  %9 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6712
  %tobool5 = icmp ne %struct.tReorderChannelIsland* %9, null, !dbg !6712
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6714

if.then6:                                         ; preds = %while.end
  %10 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6715
  %11 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6717
  %12 = bitcast %struct.tReorderChannelIsland* %11 to i8*, !dbg !6717
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !6718
  %13 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6719
  %14 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %prev, align 8, !dbg !6720
  %15 = bitcast %struct.tReorderChannelIsland* %14 to i8*, !dbg !6720
  %16 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6721
  %17 = bitcast %struct.tReorderChannelIsland* %16 to i8*, !dbg !6721
  call void @BLI_insertlinkbefore(%struct.ListBase* %13, i8* %15, i8* %17), !dbg !6722
  store i8 1, i8* %retval, align 1, !dbg !6723
  br label %return, !dbg !6723

if.end:                                           ; preds = %while.end
  br label %if.end7, !dbg !6724

if.end7:                                          ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !6725
  br label %return, !dbg !6725

return:                                           ; preds = %if.end7, %if.then6
  %18 = load i8, i8* %retval, align 1, !dbg !6726
  ret i8 %18, !dbg !6726
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_island_down(%struct.ListBase* %list, %struct.tReorderChannelIsland* %island) #0 !dbg !6727 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %island.addr = alloca %struct.tReorderChannelIsland*, align 8
  %next = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  store %struct.tReorderChannelIsland* %island, %struct.tReorderChannelIsland** %island.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  %0 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6732
  %call = call zeroext i8 @rearrange_island_ok(%struct.tReorderChannelIsland* %0), !dbg !6734
  %tobool = icmp ne i8 %call, 0, !dbg !6734
  br i1 %tobool, label %if.then, label %if.end11, !dbg !6735

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %next, metadata !6736, metadata !DIExpression()), !dbg !6738
  %1 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6739
  %next1 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %1, i32 0, i32 0, !dbg !6740
  %2 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next1, align 8, !dbg !6740
  store %struct.tReorderChannelIsland* %2, %struct.tReorderChannelIsland** %next, align 8, !dbg !6738
  br label %while.cond, !dbg !6741

while.cond:                                       ; preds = %while.body, %if.then
  %3 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6742
  %tobool2 = icmp ne %struct.tReorderChannelIsland* %3, null, !dbg !6742
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !6743

land.rhs:                                         ; preds = %while.cond
  %4 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6744
  %flag = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %4, i32 0, i32 3, !dbg !6745
  %5 = load i32, i32* %flag, align 8, !dbg !6745
  %and = and i32 %5, 8, !dbg !6746
  %tobool3 = icmp ne i32 %and, 0, !dbg !6743
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !6747
  br i1 %6, label %while.body, label %while.end, !dbg !6741

while.body:                                       ; preds = %land.end
  %7 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6748
  %next4 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %7, i32 0, i32 0, !dbg !6750
  %8 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next4, align 8, !dbg !6750
  store %struct.tReorderChannelIsland* %8, %struct.tReorderChannelIsland** %next, align 8, !dbg !6751
  br label %while.cond, !dbg !6741, !llvm.loop !6752

while.end:                                        ; preds = %land.end
  %9 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6754
  %tobool5 = icmp ne %struct.tReorderChannelIsland* %9, null, !dbg !6754
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !6756

if.then6:                                         ; preds = %while.end
  %10 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6757
  %flag7 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %10, i32 0, i32 3, !dbg !6760
  %11 = load i32, i32* %flag7, align 8, !dbg !6760
  %and8 = and i32 %11, 2, !dbg !6761
  %cmp = icmp eq i32 %and8, 0, !dbg !6762
  br i1 %cmp, label %if.then9, label %if.end, !dbg !6763

if.then9:                                         ; preds = %if.then6
  %12 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6764
  %13 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6766
  %14 = bitcast %struct.tReorderChannelIsland* %13 to i8*, !dbg !6766
  call void @BLI_remlink(%struct.ListBase* %12, i8* %14), !dbg !6767
  %15 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6768
  %16 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6769
  %17 = bitcast %struct.tReorderChannelIsland* %16 to i8*, !dbg !6769
  %18 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6770
  %19 = bitcast %struct.tReorderChannelIsland* %18 to i8*, !dbg !6770
  call void @BLI_insertlinkafter(%struct.ListBase* %15, i8* %17, i8* %19), !dbg !6771
  store i8 1, i8* %retval, align 1, !dbg !6772
  br label %return, !dbg !6772

if.end:                                           ; preds = %if.then6
  br label %if.end10, !dbg !6773

if.end10:                                         ; preds = %if.end, %while.end
  br label %if.end11, !dbg !6774

if.end11:                                         ; preds = %if.end10, %entry
  store i8 0, i8* %retval, align 1, !dbg !6775
  br label %return, !dbg !6775

return:                                           ; preds = %if.end11, %if.then9
  %20 = load i8, i8* %retval, align 1, !dbg !6776
  ret i8 %20, !dbg !6776
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_island_bottom(%struct.ListBase* %list, %struct.tReorderChannelIsland* %island) #0 !dbg !6777 {
entry:
  %retval = alloca i8, align 1
  %list.addr = alloca %struct.ListBase*, align 8
  %island.addr = alloca %struct.tReorderChannelIsland*, align 8
  %last = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  store %struct.tReorderChannelIsland* %island, %struct.tReorderChannelIsland** %island.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  %0 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6782
  %call = call zeroext i8 @rearrange_island_ok(%struct.tReorderChannelIsland* %0), !dbg !6784
  %tobool = icmp ne i8 %call, 0, !dbg !6784
  br i1 %tobool, label %if.then, label %if.end3, !dbg !6785

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %last, metadata !6786, metadata !DIExpression()), !dbg !6788
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6789
  %last1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 1, !dbg !6790
  %2 = load i8*, i8** %last1, align 8, !dbg !6790
  %3 = bitcast i8* %2 to %struct.tReorderChannelIsland*, !dbg !6789
  store %struct.tReorderChannelIsland* %3, %struct.tReorderChannelIsland** %last, align 8, !dbg !6788
  %4 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6791
  %5 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6792
  %6 = bitcast %struct.tReorderChannelIsland* %5 to i8*, !dbg !6792
  call void @BLI_remlink(%struct.ListBase* %4, i8* %6), !dbg !6793
  %7 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %last, align 8, !dbg !6794
  %flag = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %7, i32 0, i32 3, !dbg !6796
  %8 = load i32, i32* %flag, align 8, !dbg !6796
  %and = and i32 %8, 2, !dbg !6797
  %cmp = icmp eq i32 %and, 0, !dbg !6798
  br i1 %cmp, label %if.then2, label %if.else, !dbg !6799

if.then2:                                         ; preds = %if.then
  %9 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6800
  %10 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6802
  %11 = bitcast %struct.tReorderChannelIsland* %10 to i8*, !dbg !6802
  call void @BLI_addtail(%struct.ListBase* %9, i8* %11), !dbg !6803
  br label %if.end, !dbg !6804

if.else:                                          ; preds = %if.then
  %12 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6805
  %13 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %last, align 8, !dbg !6807
  %14 = bitcast %struct.tReorderChannelIsland* %13 to i8*, !dbg !6807
  %15 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6808
  %16 = bitcast %struct.tReorderChannelIsland* %15 to i8*, !dbg !6808
  call void @BLI_insertlinkbefore(%struct.ListBase* %12, i8* %14, i8* %16), !dbg !6809
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i8 1, i8* %retval, align 1, !dbg !6810
  br label %return, !dbg !6810

if.end3:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6811
  br label %return, !dbg !6811

return:                                           ; preds = %if.end3, %if.end
  %17 = load i8, i8* %retval, align 1, !dbg !6812
  ret i8 %17, !dbg !6812
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rearrange_island_ok(%struct.tReorderChannelIsland* %island) #0 !dbg !6813 {
entry:
  %retval = alloca i8, align 1
  %island.addr = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.tReorderChannelIsland* %island, %struct.tReorderChannelIsland** %island.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  %0 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6818
  %flag = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %0, i32 0, i32 3, !dbg !6820
  %1 = load i32, i32* %flag, align 8, !dbg !6820
  %and = and i32 %1, 2, !dbg !6821
  %tobool = icmp ne i32 %and, 0, !dbg !6821
  br i1 %tobool, label %if.then, label %if.end, !dbg !6822

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6823
  br label %return, !dbg !6823

if.end:                                           ; preds = %entry
  %2 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6824
  %flag1 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %2, i32 0, i32 3, !dbg !6825
  %3 = load i32, i32* %flag1, align 8, !dbg !6825
  %and2 = and i32 %3, 1, !dbg !6826
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6826
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !6827

land.rhs:                                         ; preds = %if.end
  %4 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island.addr, align 8, !dbg !6828
  %flag4 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %4, i32 0, i32 3, !dbg !6829
  %5 = load i32, i32* %flag4, align 8, !dbg !6829
  %and5 = and i32 %5, 4, !dbg !6830
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6831
  %lnot = xor i1 %tobool6, true, !dbg !6831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %6 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !6832
  %land.ext = zext i1 %6 to i32, !dbg !6827
  %conv = trunc i32 %land.ext to i8, !dbg !6833
  store i8 %conv, i8* %retval, align 1, !dbg !6834
  br label %return, !dbg !6834

return:                                           ; preds = %land.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !6835
  ret i8 %7, !dbg !6835
}

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #3

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #3

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i8* @BLI_findptr(%struct.ListBase*, i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_animchannel_add_to_islands(%struct.ListBase* %islands, %struct.ListBase* %srcList, %struct.Link* %channel, i32 %type, i8 zeroext %is_hidden) #0 !dbg !6836 {
entry:
  %islands.addr = alloca %struct.ListBase*, align 8
  %srcList.addr = alloca %struct.ListBase*, align 8
  %channel.addr = alloca %struct.Link*, align 8
  %type.addr = alloca i32, align 4
  %is_hidden.addr = alloca i8, align 1
  %island = alloca %struct.tReorderChannelIsland*, align 8
  %is_sel = alloca i8, align 1
  %is_untouchable = alloca i8, align 1
  %agrp = alloca %struct.bActionGroup*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.ListBase* %islands, %struct.ListBase** %islands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %islands.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store %struct.ListBase* %srcList, %struct.ListBase** %srcList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %srcList.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store %struct.Link* %channel, %struct.Link** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Link** %channel.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i8 %is_hidden, i8* %is_hidden.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_hidden.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island, metadata !6849, metadata !DIExpression()), !dbg !6850
  %0 = load %struct.ListBase*, %struct.ListBase** %islands.addr, align 8, !dbg !6851
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !6852
  %1 = load i8*, i8** %last, align 8, !dbg !6852
  %2 = bitcast i8* %1 to %struct.tReorderChannelIsland*, !dbg !6851
  store %struct.tReorderChannelIsland* %2, %struct.tReorderChannelIsland** %island, align 8, !dbg !6850
  call void @llvm.dbg.declare(metadata i8* %is_sel, metadata !6853, metadata !DIExpression()), !dbg !6854
  store i8 0, i8* %is_sel, align 1, !dbg !6854
  call void @llvm.dbg.declare(metadata i8* %is_untouchable, metadata !6855, metadata !DIExpression()), !dbg !6856
  store i8 0, i8* %is_untouchable, align 1, !dbg !6856
  %3 = load i32, i32* %type.addr, align 4, !dbg !6857
  switch i32 %3, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb8
    i32 30, label %sw.bb13
  ], !dbg !6858

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !6859, metadata !DIExpression()), !dbg !6862
  %4 = load %struct.Link*, %struct.Link** %channel.addr, align 8, !dbg !6863
  %5 = bitcast %struct.Link* %4 to %struct.bActionGroup*, !dbg !6864
  store %struct.bActionGroup* %5, %struct.bActionGroup** %agrp, align 8, !dbg !6862
  %6 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6865
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %6, i32 0, i32 3, !dbg !6865
  %7 = load i32, i32* %flag, align 8, !dbg !6865
  %and = and i32 %7, 1, !dbg !6865
  %tobool = icmp ne i32 %and, 0, !dbg !6865
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6865

lor.rhs:                                          ; preds = %sw.bb
  %8 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6865
  %flag1 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %8, i32 0, i32 3, !dbg !6865
  %9 = load i32, i32* %flag1, align 8, !dbg !6865
  %and2 = and i32 %9, 2, !dbg !6865
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6865
  br label %lor.end, !dbg !6865

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %10 = phi i1 [ true, %sw.bb ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !6865
  %conv = trunc i32 %lor.ext to i8, !dbg !6865
  store i8 %conv, i8* %is_sel, align 1, !dbg !6866
  %11 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !6867
  %flag4 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %11, i32 0, i32 3, !dbg !6868
  %12 = load i32, i32* %flag4, align 8, !dbg !6868
  %and5 = and i32 %12, 1073741824, !dbg !6869
  %cmp = icmp ne i32 %and5, 0, !dbg !6870
  %conv6 = zext i1 %cmp to i32, !dbg !6870
  %conv7 = trunc i32 %conv6 to i8, !dbg !6871
  store i8 %conv7, i8* %is_untouchable, align 1, !dbg !6872
  br label %sw.epilog, !dbg !6873

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !6874, metadata !DIExpression()), !dbg !6876
  %13 = load %struct.Link*, %struct.Link** %channel.addr, align 8, !dbg !6877
  %14 = bitcast %struct.Link* %13 to %struct.FCurve*, !dbg !6878
  store %struct.FCurve* %14, %struct.FCurve** %fcu, align 8, !dbg !6876
  %15 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6879
  %flag9 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %15, i32 0, i32 9, !dbg !6879
  %16 = load i16, i16* %flag9, align 8, !dbg !6879
  %conv10 = sext i16 %16 to i32, !dbg !6879
  %and11 = and i32 %conv10, 2, !dbg !6879
  %conv12 = trunc i32 %and11 to i8, !dbg !6879
  store i8 %conv12, i8* %is_sel, align 1, !dbg !6880
  br label %sw.epilog, !dbg !6881

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !6882, metadata !DIExpression()), !dbg !6884
  %17 = load %struct.Link*, %struct.Link** %channel.addr, align 8, !dbg !6885
  %18 = bitcast %struct.Link* %17 to %struct.NlaTrack*, !dbg !6886
  store %struct.NlaTrack* %18, %struct.NlaTrack** %nlt, align 8, !dbg !6884
  %19 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !6887
  %flag14 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %19, i32 0, i32 3, !dbg !6887
  %20 = load i32, i32* %flag14, align 8, !dbg !6887
  %and15 = and i32 %20, 2, !dbg !6887
  %conv16 = trunc i32 %and15 to i8, !dbg !6887
  store i8 %conv16, i8* %is_sel, align 1, !dbg !6888
  br label %sw.epilog, !dbg !6889

sw.default:                                       ; preds = %entry
  %21 = load i32, i32* %type.addr, align 4, !dbg !6890
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.78, i64 0, i64 0), i32 %21), !dbg !6891
  br label %return, !dbg !6892

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb8, %lor.end
  %22 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6893
  %cmp17 = icmp eq %struct.tReorderChannelIsland* %22, null, !dbg !6895
  br i1 %cmp17, label %if.then, label %lor.lhs.false, !dbg !6896

lor.lhs.false:                                    ; preds = %sw.epilog
  %23 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6897
  %flag19 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %23, i32 0, i32 3, !dbg !6898
  %24 = load i32, i32* %flag19, align 8, !dbg !6898
  %and20 = and i32 %24, 1, !dbg !6899
  %cmp21 = icmp eq i32 %and20, 0, !dbg !6900
  br i1 %cmp21, label %if.then, label %lor.lhs.false23, !dbg !6901

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %25 = load i8, i8* %is_sel, align 1, !dbg !6902
  %conv24 = zext i8 %25 to i32, !dbg !6902
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !6903
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !6904

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %26 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6905
  %flag28 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %26, i32 0, i32 3, !dbg !6906
  %27 = load i32, i32* %flag28, align 8, !dbg !6906
  %and29 = and i32 %27, 8, !dbg !6907
  %28 = load i8, i8* %is_hidden.addr, align 1, !dbg !6908
  %conv30 = zext i8 %28 to i32, !dbg !6908
  %cmp31 = icmp ne i32 %and29, %conv30, !dbg !6909
  br i1 %cmp31, label %if.then, label %if.end47, !dbg !6910

if.then:                                          ; preds = %lor.lhs.false27, %lor.lhs.false23, %lor.lhs.false, %sw.epilog
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6911
  %call33 = call i8* %29(i64 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i64 0, i64 0)), !dbg !6911
  %30 = bitcast i8* %call33 to %struct.tReorderChannelIsland*, !dbg !6911
  store %struct.tReorderChannelIsland* %30, %struct.tReorderChannelIsland** %island, align 8, !dbg !6913
  %31 = load %struct.ListBase*, %struct.ListBase** %islands.addr, align 8, !dbg !6914
  %32 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6915
  %33 = bitcast %struct.tReorderChannelIsland* %32 to i8*, !dbg !6915
  call void @BLI_addtail(%struct.ListBase* %31, i8* %33), !dbg !6916
  %34 = load i8, i8* %is_sel, align 1, !dbg !6917
  %tobool34 = icmp ne i8 %34, 0, !dbg !6917
  br i1 %tobool34, label %if.then35, label %if.end, !dbg !6919

if.then35:                                        ; preds = %if.then
  %35 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6920
  %flag36 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %35, i32 0, i32 3, !dbg !6921
  %36 = load i32, i32* %flag36, align 8, !dbg !6922
  %or = or i32 %36, 1, !dbg !6922
  store i32 %or, i32* %flag36, align 8, !dbg !6922
  br label %if.end, !dbg !6920

if.end:                                           ; preds = %if.then35, %if.then
  %37 = load i8, i8* %is_untouchable, align 1, !dbg !6923
  %tobool37 = icmp ne i8 %37, 0, !dbg !6923
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6925

if.then38:                                        ; preds = %if.end
  %38 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6926
  %flag39 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %38, i32 0, i32 3, !dbg !6927
  %39 = load i32, i32* %flag39, align 8, !dbg !6928
  %or40 = or i32 %39, 2, !dbg !6928
  store i32 %or40, i32* %flag39, align 8, !dbg !6928
  br label %if.end41, !dbg !6926

if.end41:                                         ; preds = %if.then38, %if.end
  %40 = load i8, i8* %is_hidden.addr, align 1, !dbg !6929
  %tobool42 = icmp ne i8 %40, 0, !dbg !6929
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !6931

if.then43:                                        ; preds = %if.end41
  %41 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6932
  %flag44 = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %41, i32 0, i32 3, !dbg !6933
  %42 = load i32, i32* %flag44, align 8, !dbg !6934
  %or45 = or i32 %42, 8, !dbg !6934
  store i32 %or45, i32* %flag44, align 8, !dbg !6934
  br label %if.end46, !dbg !6932

if.end46:                                         ; preds = %if.then43, %if.end41
  br label %if.end47, !dbg !6935

if.end47:                                         ; preds = %if.end46, %lor.lhs.false27
  %43 = load %struct.ListBase*, %struct.ListBase** %srcList.addr, align 8, !dbg !6936
  %44 = load %struct.Link*, %struct.Link** %channel.addr, align 8, !dbg !6937
  %45 = bitcast %struct.Link* %44 to i8*, !dbg !6937
  call void @BLI_remlink(%struct.ListBase* %43, i8* %45), !dbg !6938
  %46 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6939
  %channels = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %46, i32 0, i32 2, !dbg !6940
  %47 = load %struct.Link*, %struct.Link** %channel.addr, align 8, !dbg !6941
  %48 = bitcast %struct.Link* %47 to i8*, !dbg !6941
  call void @BLI_addtail(%struct.ListBase* %channels, i8* %48), !dbg !6942
  br label %return, !dbg !6943

return:                                           ; preds = %if.end47, %sw.default
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind uwtable
define internal void @rearrange_animchannel_flatten_islands(%struct.ListBase* %islands, %struct.ListBase* %srcList) #0 !dbg !6944 {
entry:
  %islands.addr = alloca %struct.ListBase*, align 8
  %srcList.addr = alloca %struct.ListBase*, align 8
  %island = alloca %struct.tReorderChannelIsland*, align 8
  %isn = alloca %struct.tReorderChannelIsland*, align 8
  store %struct.ListBase* %islands, %struct.ListBase** %islands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %islands.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  store %struct.ListBase* %srcList, %struct.ListBase** %srcList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %srcList.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %island, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata %struct.tReorderChannelIsland** %isn, metadata !6953, metadata !DIExpression()), !dbg !6954
  store %struct.tReorderChannelIsland* null, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6954
  %0 = load %struct.ListBase*, %struct.ListBase** %islands.addr, align 8, !dbg !6955
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6957
  %1 = load i8*, i8** %first, align 8, !dbg !6957
  %2 = bitcast i8* %1 to %struct.tReorderChannelIsland*, !dbg !6955
  store %struct.tReorderChannelIsland* %2, %struct.tReorderChannelIsland** %island, align 8, !dbg !6958
  br label %for.cond, !dbg !6959

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6960
  %tobool = icmp ne %struct.tReorderChannelIsland* %3, null, !dbg !6962
  br i1 %tobool, label %for.body, label %for.end, !dbg !6962

for.body:                                         ; preds = %for.cond
  %4 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6963
  %next = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %4, i32 0, i32 0, !dbg !6965
  %5 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %next, align 8, !dbg !6965
  store %struct.tReorderChannelIsland* %5, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6966
  %6 = load %struct.ListBase*, %struct.ListBase** %srcList.addr, align 8, !dbg !6967
  %7 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6968
  %channels = getelementptr inbounds %struct.tReorderChannelIsland, %struct.tReorderChannelIsland* %7, i32 0, i32 2, !dbg !6969
  call void @BLI_movelisttolist(%struct.ListBase* %6, %struct.ListBase* %channels), !dbg !6970
  %8 = load %struct.ListBase*, %struct.ListBase** %islands.addr, align 8, !dbg !6971
  %9 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %island, align 8, !dbg !6972
  %10 = bitcast %struct.tReorderChannelIsland* %9 to i8*, !dbg !6972
  call void @BLI_freelinkN(%struct.ListBase* %8, i8* %10), !dbg !6973
  br label %for.inc, !dbg !6974

for.inc:                                          ; preds = %for.body
  %11 = load %struct.tReorderChannelIsland*, %struct.tReorderChannelIsland** %isn, align 8, !dbg !6975
  store %struct.tReorderChannelIsland* %11, %struct.tReorderChannelIsland** %island, align 8, !dbg !6976
  br label %for.cond, !dbg !6977, !llvm.loop !6978

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6980
}

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_expand_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6981 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %onlysel = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !6986, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata i8* %onlysel, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i8 1, i8* %onlysel, align 1, !dbg !6989
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6990
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !6992
  %conv = zext i8 %call to i32, !dbg !6992
  %cmp = icmp eq i32 %conv, 0, !dbg !6993
  br i1 %cmp, label %if.then, label %if.end, !dbg !6994

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6995
  br label %return, !dbg !6995

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6996
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !6998
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6998
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)), !dbg !6999
  %tobool = icmp ne i32 %call2, 0, !dbg !6999
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7000

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %onlysel, align 1, !dbg !7001
  br label %if.end4, !dbg !7002

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8, i8* %onlysel, align 1, !dbg !7003
  call void @setflag_anim_channels(%struct.bAnimContext* %ac, i32 3, i32 1, i8 zeroext %3, i8 zeroext 0), !dbg !7004
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7005
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 239599617, i8* null), !dbg !7006
  store i32 4, i32* %retval, align 4, !dbg !7007
  br label %return, !dbg !7007

return:                                           ; preds = %if.end4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7008
  ret i32 %5, !dbg !7008
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_collapse_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7009 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %onlysel = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata i8* %onlysel, metadata !7016, metadata !DIExpression()), !dbg !7017
  store i8 1, i8* %onlysel, align 1, !dbg !7017
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7018
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !7020
  %conv = zext i8 %call to i32, !dbg !7020
  %cmp = icmp eq i32 %conv, 0, !dbg !7021
  br i1 %cmp, label %if.then, label %if.end, !dbg !7022

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7023
  br label %return, !dbg !7023

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7024
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7026
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7026
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)), !dbg !7027
  %tobool = icmp ne i32 %call2, 0, !dbg !7027
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7028

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %onlysel, align 1, !dbg !7029
  br label %if.end4, !dbg !7030

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8, i8* %onlysel, align 1, !dbg !7031
  call void @setflag_anim_channels(%struct.bAnimContext* %ac, i32 3, i32 0, i8 zeroext %3, i8 zeroext 0), !dbg !7032
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7033
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 239599617, i8* null), !dbg !7034
  store i32 4, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

return:                                           ; preds = %if.end4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7036
  ret i32 %5, !dbg !7036
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_visibility_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7037 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %all_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %vis = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7038, metadata !DIExpression()), !dbg !7039
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7044, metadata !DIExpression()), !dbg !7045
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7045
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7045
  call void @llvm.dbg.declare(metadata %struct.ListBase* %all_data, metadata !7046, metadata !DIExpression()), !dbg !7047
  %1 = bitcast %struct.ListBase* %all_data to i8*, !dbg !7047
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !7047
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7048, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7050, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.declare(metadata i16* %vis, metadata !7052, metadata !DIExpression()), !dbg !7053
  store i16 1, i16* %vis, align 2, !dbg !7053
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7054
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %2, %struct.bAnimContext* %ac), !dbg !7056
  %conv = zext i8 %call to i32, !dbg !7056
  %cmp = icmp eq i32 %conv, 0, !dbg !7057
  br i1 %cmp, label %if.then, label %if.end, !dbg !7058

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7059
  br label %return, !dbg !7059

if.end:                                           ; preds = %entry
  store i32 2057, i32* %filter, align 4, !dbg !7060
  %3 = load i32, i32* %filter, align 4, !dbg !7061
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7062
  %4 = load i8*, i8** %data, align 8, !dbg !7062
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7063
  %5 = load i16, i16* %datatype, align 8, !dbg !7063
  %conv2 = sext i16 %5 to i32, !dbg !7064
  %call3 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %all_data, i32 %3, i8* %4, i32 %conv2), !dbg !7065
  store i32 2115, i32* %filter, align 4, !dbg !7066
  %6 = load i32, i32* %filter, align 4, !dbg !7067
  %data4 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7068
  %7 = load i8*, i8** %data4, align 8, !dbg !7068
  %datatype5 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7069
  %8 = load i16, i16* %datatype5, align 8, !dbg !7069
  %conv6 = sext i16 %8 to i32, !dbg !7070
  %call7 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %6, i8* %7, i32 %conv6), !dbg !7071
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7072
  %9 = load i8*, i8** %first, align 8, !dbg !7072
  %10 = bitcast i8* %9 to %struct.bAnimListElem*, !dbg !7074
  store %struct.bAnimListElem* %10, %struct.bAnimListElem** %ale, align 8, !dbg !7075
  br label %for.cond, !dbg !7076

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7077
  %tobool = icmp ne %struct.bAnimListElem* %11, null, !dbg !7079
  br i1 %tobool, label %for.body, label %for.end, !dbg !7079

for.body:                                         ; preds = %for.cond
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7080
  %call8 = call signext i16 @ANIM_channel_setting_get(%struct.bAnimContext* %ac, %struct.bAnimListElem* %12, i32 4), !dbg !7083
  %tobool9 = icmp ne i16 %call8, 0, !dbg !7083
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7084

if.then10:                                        ; preds = %for.body
  store i16 0, i16* %vis, align 2, !dbg !7085
  br label %for.end, !dbg !7087

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !7088

for.inc:                                          ; preds = %if.end11
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7089
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %13, i32 0, i32 0, !dbg !7090
  %14 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7090
  store %struct.bAnimListElem* %14, %struct.bAnimListElem** %ale, align 8, !dbg !7091
  br label %for.cond, !dbg !7092, !llvm.loop !7093

for.end:                                          ; preds = %if.then10, %for.cond
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7095
  %15 = load i8*, i8** %first12, align 8, !dbg !7095
  %16 = bitcast i8* %15 to %struct.bAnimListElem*, !dbg !7097
  store %struct.bAnimListElem* %16, %struct.bAnimListElem** %ale, align 8, !dbg !7098
  br label %for.cond13, !dbg !7099

for.cond13:                                       ; preds = %for.inc24, %for.end
  %17 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7100
  %tobool14 = icmp ne %struct.bAnimListElem* %17, null, !dbg !7102
  br i1 %tobool14, label %for.body15, label %for.end26, !dbg !7102

for.body15:                                       ; preds = %for.cond13
  %18 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7103
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %18, i32 0, i32 3, !dbg !7106
  %19 = load i32, i32* %type, align 8, !dbg !7106
  %cmp16 = icmp eq i32 %19, 5, !dbg !7107
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7108

if.then18:                                        ; preds = %for.body15
  br label %for.inc24, !dbg !7109

if.end19:                                         ; preds = %for.body15
  %20 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7110
  %21 = load i16, i16* %vis, align 2, !dbg !7111
  %conv20 = sext i16 %21 to i32, !dbg !7111
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %ac, %struct.bAnimListElem* %20, i32 4, i32 %conv20), !dbg !7112
  %22 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7113
  %23 = load i16, i16* %vis, align 2, !dbg !7114
  %conv21 = sext i16 %23 to i32, !dbg !7114
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !7115
  %conv23 = zext i1 %cmp22 to i32, !dbg !7115
  call void @ANIM_flush_setting_anim_channels(%struct.bAnimContext* %ac, %struct.ListBase* %all_data, %struct.bAnimListElem* %22, i32 4, i32 %conv23), !dbg !7116
  br label %for.inc24, !dbg !7117

for.inc24:                                        ; preds = %if.end19, %if.then18
  %24 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7118
  %next25 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %24, i32 0, i32 0, !dbg !7119
  %25 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next25, align 8, !dbg !7119
  store %struct.bAnimListElem* %25, %struct.bAnimListElem** %ale, align 8, !dbg !7120
  br label %for.cond13, !dbg !7121, !llvm.loop !7122

for.end26:                                        ; preds = %for.cond13
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7124
  call void @BLI_freelistN(%struct.ListBase* %all_data), !dbg !7125
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7126
  call void @WM_event_add_notifier(%struct.bContext* %26, i32 239599617, i8* null), !dbg !7127
  store i32 4, i32* %retval, align 4, !dbg !7128
  br label %return, !dbg !7128

return:                                           ; preds = %for.end26, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7129
  ret i32 %27, !dbg !7129
}

declare dso_local i32 @ED_operator_graphedit_active(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_visibility_set_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7130 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %all_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7137, metadata !DIExpression()), !dbg !7138
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7138
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7138
  call void @llvm.dbg.declare(metadata %struct.ListBase* %all_data, metadata !7139, metadata !DIExpression()), !dbg !7140
  %1 = bitcast %struct.ListBase* %all_data to i8*, !dbg !7140
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !7140
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7143, metadata !DIExpression()), !dbg !7144
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7145
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %2, %struct.bAnimContext* %ac), !dbg !7147
  %conv = zext i8 %call to i32, !dbg !7147
  %cmp = icmp eq i32 %conv, 0, !dbg !7148
  br i1 %cmp, label %if.then, label %if.end, !dbg !7149

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7150
  br label %return, !dbg !7150

if.end:                                           ; preds = %entry
  store i32 2057, i32* %filter, align 4, !dbg !7151
  %3 = load i32, i32* %filter, align 4, !dbg !7152
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7153
  %4 = load i8*, i8** %data, align 8, !dbg !7153
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7154
  %5 = load i16, i16* %datatype, align 8, !dbg !7154
  %conv2 = sext i16 %5 to i32, !dbg !7155
  %call3 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %all_data, i32 %3, i8* %4, i32 %conv2), !dbg !7156
  %spacetype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 3, !dbg !7157
  %6 = load i16, i16* %spacetype, align 4, !dbg !7157
  %conv4 = sext i16 %6 to i32, !dbg !7159
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !7160
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !7161

land.lhs.true:                                    ; preds = %if.end
  %regiontype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 4, !dbg !7162
  %7 = load i16, i16* %regiontype, align 2, !dbg !7162
  %conv7 = sext i16 %7 to i32, !dbg !7163
  %cmp8 = icmp ne i32 %conv7, 2, !dbg !7164
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !7165

if.then10:                                        ; preds = %land.lhs.true
  store i32 2181, i32* %filter, align 4, !dbg !7166
  br label %if.end11, !dbg !7168

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i32 2179, i32* %filter, align 4, !dbg !7169
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  %8 = load i32, i32* %filter, align 4, !dbg !7171
  %data12 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7172
  %9 = load i8*, i8** %data12, align 8, !dbg !7172
  %datatype13 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7173
  %10 = load i16, i16* %datatype13, align 8, !dbg !7173
  %conv14 = sext i16 %10 to i32, !dbg !7174
  %call15 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %8, i8* %9, i32 %conv14), !dbg !7175
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7176
  %11 = load i8*, i8** %first, align 8, !dbg !7176
  %12 = bitcast i8* %11 to %struct.bAnimListElem*, !dbg !7178
  store %struct.bAnimListElem* %12, %struct.bAnimListElem** %ale, align 8, !dbg !7179
  br label %for.cond, !dbg !7180

for.cond:                                         ; preds = %for.inc, %if.end11
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7181
  %tobool = icmp ne %struct.bAnimListElem* %13, null, !dbg !7183
  br i1 %tobool, label %for.body, label %for.end, !dbg !7183

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7184
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %ac, %struct.bAnimListElem* %14, i32 4, i32 0), !dbg !7186
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7187
  call void @ANIM_flush_setting_anim_channels(%struct.bAnimContext* %ac, %struct.ListBase* %all_data, %struct.bAnimListElem* %15, i32 4, i32 0), !dbg !7188
  br label %for.inc, !dbg !7189

for.inc:                                          ; preds = %for.body
  %16 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7190
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %16, i32 0, i32 0, !dbg !7191
  %17 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7191
  store %struct.bAnimListElem* %17, %struct.bAnimListElem** %ale, align 8, !dbg !7192
  br label %for.cond, !dbg !7193, !llvm.loop !7194

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7196
  store i32 2112, i32* %filter, align 4, !dbg !7197
  %18 = load i32, i32* %filter, align 4, !dbg !7198
  %data16 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7199
  %19 = load i8*, i8** %data16, align 8, !dbg !7199
  %datatype17 = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7200
  %20 = load i16, i16* %datatype17, align 8, !dbg !7200
  %conv18 = sext i16 %20 to i32, !dbg !7201
  %call19 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %18, i8* %19, i32 %conv18), !dbg !7202
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7203
  %21 = load i8*, i8** %first20, align 8, !dbg !7203
  %22 = bitcast i8* %21 to %struct.bAnimListElem*, !dbg !7205
  store %struct.bAnimListElem* %22, %struct.bAnimListElem** %ale, align 8, !dbg !7206
  br label %for.cond21, !dbg !7207

for.cond21:                                       ; preds = %for.inc28, %for.end
  %23 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7208
  %tobool22 = icmp ne %struct.bAnimListElem* %23, null, !dbg !7210
  br i1 %tobool22, label %for.body23, label %for.end30, !dbg !7210

for.body23:                                       ; preds = %for.cond21
  %24 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7211
  %type = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %24, i32 0, i32 3, !dbg !7214
  %25 = load i32, i32* %type, align 8, !dbg !7214
  %cmp24 = icmp eq i32 %25, 5, !dbg !7215
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7216

if.then26:                                        ; preds = %for.body23
  br label %for.inc28, !dbg !7217

if.end27:                                         ; preds = %for.body23
  %26 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7218
  call void @ANIM_channel_setting_set(%struct.bAnimContext* %ac, %struct.bAnimListElem* %26, i32 4, i32 1), !dbg !7219
  %27 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7220
  call void @ANIM_flush_setting_anim_channels(%struct.bAnimContext* %ac, %struct.ListBase* %all_data, %struct.bAnimListElem* %27, i32 4, i32 1), !dbg !7221
  br label %for.inc28, !dbg !7222

for.inc28:                                        ; preds = %if.end27, %if.then26
  %28 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7223
  %next29 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %28, i32 0, i32 0, !dbg !7224
  %29 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next29, align 8, !dbg !7224
  store %struct.bAnimListElem* %29, %struct.bAnimListElem** %ale, align 8, !dbg !7225
  br label %for.cond21, !dbg !7226, !llvm.loop !7227

for.end30:                                        ; preds = %for.cond21
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7229
  call void @BLI_freelistN(%struct.ListBase* %all_data), !dbg !7230
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7231
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 239599617, i8* null), !dbg !7232
  store i32 4, i32* %retval, align 4, !dbg !7233
  br label %return, !dbg !7233

return:                                           ; preds = %for.end30, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !7234
  ret i32 %31, !dbg !7234
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_enable_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7235 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7240, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7242, metadata !DIExpression()), !dbg !7243
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7243
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7243
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7244, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7246, metadata !DIExpression()), !dbg !7247
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7248
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %1, %struct.bAnimContext* %ac), !dbg !7250
  %conv = zext i8 %call to i32, !dbg !7250
  %cmp = icmp eq i32 %conv, 0, !dbg !7251
  br i1 %cmp, label %if.then, label %if.end, !dbg !7252

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7253
  br label %return, !dbg !7253

if.end:                                           ; preds = %entry
  store i32 2049, i32* %filter, align 4, !dbg !7254
  %2 = load i32, i32* %filter, align 4, !dbg !7255
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7256
  %3 = load i8*, i8** %data, align 8, !dbg !7256
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7257
  %4 = load i16, i16* %datatype, align 8, !dbg !7257
  %conv2 = sext i16 %4 to i32, !dbg !7258
  %call3 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %2, i8* %3, i32 %conv2), !dbg !7259
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7260
  %5 = load i8*, i8** %first, align 8, !dbg !7260
  %6 = bitcast i8* %5 to %struct.bAnimListElem*, !dbg !7262
  store %struct.bAnimListElem* %6, %struct.bAnimListElem** %ale, align 8, !dbg !7263
  br label %for.cond, !dbg !7264

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7265
  %tobool = icmp ne %struct.bAnimListElem* %7, null, !dbg !7267
  br i1 %tobool, label %for.body, label %for.end, !dbg !7267

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !7268, metadata !DIExpression()), !dbg !7270
  %8 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7271
  %data4 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %8, i32 0, i32 2, !dbg !7272
  %9 = load i8*, i8** %data4, align 8, !dbg !7272
  %10 = bitcast i8* %9 to %struct.FCurve*, !dbg !7273
  store %struct.FCurve* %10, %struct.FCurve** %fcu, align 8, !dbg !7270
  %11 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7274
  %flag = getelementptr inbounds %struct.FCurve, %struct.FCurve* %11, i32 0, i32 9, !dbg !7275
  %12 = load i16, i16* %flag, align 8, !dbg !7276
  %conv5 = sext i16 %12 to i32, !dbg !7276
  %and = and i32 %conv5, -1025, !dbg !7276
  %conv6 = trunc i32 %and to i16, !dbg !7276
  store i16 %conv6, i16* %flag, align 8, !dbg !7276
  %13 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7277
  %driver = getelementptr inbounds %struct.FCurve, %struct.FCurve* %13, i32 0, i32 3, !dbg !7279
  %14 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !7279
  %tobool7 = icmp ne %struct.ChannelDriver* %14, null, !dbg !7277
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !7280

if.then8:                                         ; preds = %for.body
  %15 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7281
  %driver9 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %15, i32 0, i32 3, !dbg !7282
  %16 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver9, align 8, !dbg !7282
  %flag10 = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %16, i32 0, i32 6, !dbg !7283
  %17 = load i32, i32* %flag10, align 4, !dbg !7284
  %and11 = and i32 %17, -2, !dbg !7284
  store i32 %and11, i32* %flag10, align 4, !dbg !7284
  br label %if.end12, !dbg !7281

if.end12:                                         ; preds = %if.then8, %for.body
  %18 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7285
  %update = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %18, i32 0, i32 6, !dbg !7286
  %19 = load i16, i16* %update, align 4, !dbg !7287
  %conv13 = sext i16 %19 to i32, !dbg !7287
  %or = or i32 %conv13, 1, !dbg !7287
  %conv14 = trunc i32 %or to i16, !dbg !7287
  store i16 %conv14, i16* %update, align 4, !dbg !7287
  br label %for.inc, !dbg !7288

for.inc:                                          ; preds = %if.end12
  %20 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7289
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %20, i32 0, i32 0, !dbg !7290
  %21 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7290
  store %struct.bAnimListElem* %21, %struct.bAnimListElem** %ale, align 8, !dbg !7291
  br label %for.cond, !dbg !7292, !llvm.loop !7293

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_update(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data), !dbg !7295
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7296
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7297
  call void @WM_event_add_notifier(%struct.bContext* %22, i32 239599617, i8* null), !dbg !7298
  store i32 4, i32* %retval, align 4, !dbg !7299
  br label %return, !dbg !7299

return:                                           ; preds = %for.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7300
  ret i32 %23, !dbg !7300
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_enable_poll(%struct.bContext* %C) #0 !dbg !7301 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7302, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7304, metadata !DIExpression()), !dbg !7305
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7306
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !7307
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !7305
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7308
  %cmp = icmp eq %struct.ScrArea* null, %1, !dbg !7308
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7308

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7308
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !7308
  %cmp2 = icmp eq %struct.ARegion* null, %call1, !dbg !7308
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7310

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7312
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 8, !dbg !7312
  %4 = load i8, i8* %spacetype, align 8, !dbg !7312
  %conv = zext i8 %4 to i32, !dbg !7312
  %cmp3 = icmp eq i32 %conv, 12, !dbg !7312
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !7312

lor.rhs:                                          ; preds = %if.end
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7312
  %spacetype5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 8, !dbg !7312
  %6 = load i8, i8* %spacetype5, align 8, !dbg !7312
  %conv6 = zext i8 %6 to i32, !dbg !7312
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !7312
  br label %lor.end, !dbg !7312

lor.end:                                          ; preds = %lor.rhs, %if.end
  %7 = phi i1 [ true, %if.end ], [ %cmp7, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !7312
  %cmp9 = icmp eq i32 %lor.ext, 0, !dbg !7314
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7315

if.then11:                                        ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !7316
  br label %return, !dbg !7316

if.end12:                                         ; preds = %lor.end
  store i32 1, i32* %retval, align 4, !dbg !7317
  br label %return, !dbg !7317

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7318
  ret i32 %8, !dbg !7318
}

declare dso_local void @ANIM_animdata_update(%struct.bAnimContext*, %struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_clean_empty_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7319 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %id = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %action_empty = alloca i8, align 1
  %nla_empty = alloca i8, align 1
  %drivers_empty = alloca i8, align 1
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7326, metadata !DIExpression()), !dbg !7327
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7327
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7327
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7328, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7330, metadata !DIExpression()), !dbg !7331
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7332
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %1, %struct.bAnimContext* %ac), !dbg !7334
  %conv = zext i8 %call to i32, !dbg !7334
  %cmp = icmp eq i32 %conv, 0, !dbg !7335
  br i1 %cmp, label %if.then, label %if.end, !dbg !7336

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7337
  br label %return, !dbg !7337

if.end:                                           ; preds = %entry
  store i32 1027, i32* %filter, align 4, !dbg !7338
  %2 = load i32, i32* %filter, align 4, !dbg !7339
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7340
  %3 = load i8*, i8** %data, align 8, !dbg !7340
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7341
  %4 = load i16, i16* %datatype, align 8, !dbg !7341
  %conv2 = sext i16 %4 to i32, !dbg !7342
  %call3 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %2, i8* %3, i32 %conv2), !dbg !7343
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7344
  %5 = load i8*, i8** %first, align 8, !dbg !7344
  %6 = bitcast i8* %5 to %struct.bAnimListElem*, !dbg !7346
  store %struct.bAnimListElem* %6, %struct.bAnimListElem** %ale, align 8, !dbg !7347
  br label %for.cond, !dbg !7348

for.cond:                                         ; preds = %for.inc49, %if.end
  %7 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7349
  %tobool = icmp ne %struct.bAnimListElem* %7, null, !dbg !7351
  br i1 %tobool, label %for.body, label %for.end51, !dbg !7351

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !7352, metadata !DIExpression()), !dbg !7354
  %8 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7355
  %id4 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %8, i32 0, i32 9, !dbg !7356
  %9 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !7356
  store %struct.ID* %9, %struct.ID** %id, align 8, !dbg !7354
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !7357, metadata !DIExpression()), !dbg !7358
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7359
  %data5 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %10, i32 0, i32 2, !dbg !7360
  %11 = load i8*, i8** %data5, align 8, !dbg !7360
  %12 = bitcast i8* %11 to %struct.AnimData*, !dbg !7359
  store %struct.AnimData* %12, %struct.AnimData** %adt, align 8, !dbg !7358
  call void @llvm.dbg.declare(metadata i8* %action_empty, metadata !7361, metadata !DIExpression()), !dbg !7362
  store i8 0, i8* %action_empty, align 1, !dbg !7362
  call void @llvm.dbg.declare(metadata i8* %nla_empty, metadata !7363, metadata !DIExpression()), !dbg !7364
  store i8 0, i8* %nla_empty, align 1, !dbg !7364
  call void @llvm.dbg.declare(metadata i8* %drivers_empty, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i8 0, i8* %drivers_empty, align 1, !dbg !7366
  %13 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7367
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %13, i32 0, i32 0, !dbg !7367
  %14 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !7367
  %cmp6 = icmp eq %struct.bAction* null, %14, !dbg !7367
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !7367

lor.lhs.false:                                    ; preds = %for.body
  %15 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7367
  %action8 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %15, i32 0, i32 0, !dbg !7367
  %16 = load %struct.bAction*, %struct.bAction** %action8, align 8, !dbg !7367
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %16, i32 0, i32 1, !dbg !7367
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !7367
  %17 = load i8*, i8** %first9, align 8, !dbg !7367
  %cmp10 = icmp eq i8* null, %17, !dbg !7367
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !7369

if.then12:                                        ; preds = %lor.lhs.false, %for.body
  store i8 1, i8* %action_empty, align 1, !dbg !7370
  br label %if.end13, !dbg !7372

if.else:                                          ; preds = %lor.lhs.false
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7373
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %18, i32 0, i32 3, !dbg !7375
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !7376
  %19 = load i8*, i8** %first14, align 8, !dbg !7376
  %cmp15 = icmp eq i8* %19, null, !dbg !7377
  br i1 %cmp15, label %if.then17, label %if.else18, !dbg !7378

if.then17:                                        ; preds = %if.end13
  store i8 1, i8* %nla_empty, align 1, !dbg !7379
  br label %if.end35, !dbg !7381

if.else18:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !7382, metadata !DIExpression()), !dbg !7384
  %20 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7385
  %nla_tracks19 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %20, i32 0, i32 3, !dbg !7387
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks19, i32 0, i32 0, !dbg !7388
  %21 = load i8*, i8** %first20, align 8, !dbg !7388
  %22 = bitcast i8* %21 to %struct.NlaTrack*, !dbg !7385
  store %struct.NlaTrack* %22, %struct.NlaTrack** %nlt, align 8, !dbg !7389
  br label %for.cond21, !dbg !7390

for.cond21:                                       ; preds = %for.inc, %if.else18
  %23 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7391
  %tobool22 = icmp ne %struct.NlaTrack* %23, null, !dbg !7393
  br i1 %tobool22, label %for.body23, label %for.end, !dbg !7393

for.body23:                                       ; preds = %for.cond21
  %24 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7394
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %24, i32 0, i32 2, !dbg !7397
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strips, i32 0, i32 0, !dbg !7398
  %25 = load i8*, i8** %first24, align 8, !dbg !7398
  %tobool25 = icmp ne i8* %25, null, !dbg !7394
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !7399

if.then26:                                        ; preds = %for.body23
  store i8 0, i8* %nla_empty, align 1, !dbg !7400
  br label %for.end, !dbg !7402

if.else27:                                        ; preds = %for.body23
  %26 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7403
  %strips28 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %26, i32 0, i32 2, !dbg !7405
  %first29 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strips28, i32 0, i32 0, !dbg !7406
  %27 = load i8*, i8** %first29, align 8, !dbg !7406
  %cmp30 = icmp eq i8* %27, null, !dbg !7407
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7408

if.then32:                                        ; preds = %if.else27
  store i8 1, i8* %nla_empty, align 1, !dbg !7409
  br label %if.end33, !dbg !7411

if.end33:                                         ; preds = %if.then32, %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %for.inc, !dbg !7412

for.inc:                                          ; preds = %if.end34
  %28 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7413
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %28, i32 0, i32 0, !dbg !7414
  %29 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !7414
  store %struct.NlaTrack* %29, %struct.NlaTrack** %nlt, align 8, !dbg !7415
  br label %for.cond21, !dbg !7416, !llvm.loop !7417

for.end:                                          ; preds = %if.then26, %for.cond21
  br label %if.end35

if.end35:                                         ; preds = %for.end, %if.then17
  %30 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7419
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %30, i32 0, i32 5, !dbg !7420
  %first36 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !7421
  %31 = load i8*, i8** %first36, align 8, !dbg !7421
  %cmp37 = icmp eq i8* %31, null, !dbg !7422
  %conv38 = zext i1 %cmp37 to i32, !dbg !7422
  %conv39 = trunc i32 %conv38 to i8, !dbg !7423
  store i8 %conv39, i8* %drivers_empty, align 1, !dbg !7424
  %32 = load i8, i8* %action_empty, align 1, !dbg !7425
  %conv40 = zext i8 %32 to i32, !dbg !7425
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !7425
  br i1 %tobool41, label %land.lhs.true, label %if.end48, !dbg !7427

land.lhs.true:                                    ; preds = %if.end35
  %33 = load i8, i8* %nla_empty, align 1, !dbg !7428
  %conv42 = zext i8 %33 to i32, !dbg !7428
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !7428
  br i1 %tobool43, label %land.lhs.true44, label %if.end48, !dbg !7429

land.lhs.true44:                                  ; preds = %land.lhs.true
  %34 = load i8, i8* %drivers_empty, align 1, !dbg !7430
  %conv45 = zext i8 %34 to i32, !dbg !7430
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !7430
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7431

if.then47:                                        ; preds = %land.lhs.true44
  %35 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7432
  call void @BKE_free_animdata(%struct.ID* %35), !dbg !7434
  br label %if.end48, !dbg !7435

if.end48:                                         ; preds = %if.then47, %land.lhs.true44, %land.lhs.true, %if.end35
  br label %for.inc49, !dbg !7436

for.inc49:                                        ; preds = %if.end48
  %36 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7437
  %next50 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %36, i32 0, i32 0, !dbg !7438
  %37 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next50, align 8, !dbg !7438
  store %struct.bAnimListElem* %37, %struct.bAnimListElem** %ale, align 8, !dbg !7439
  br label %for.cond, !dbg !7440, !llvm.loop !7441

for.end51:                                        ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7443
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7444
  call void @WM_event_add_notifier(%struct.bContext* %38, i32 239599617, i8* null), !dbg !7445
  store i32 4, i32* %retval, align 4, !dbg !7446
  br label %return, !dbg !7446

return:                                           ; preds = %for.end51, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !7447
  ret i32 %39, !dbg !7447
}

declare dso_local void @BKE_free_animdata(%struct.ID*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_group_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7448 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %name = alloca [64 x i8], align 16
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7453, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !7455, metadata !DIExpression()), !dbg !7456
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7457
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %0, %struct.bAnimContext* %ac), !dbg !7459
  %conv = zext i8 %call to i32, !dbg !7459
  %cmp = icmp eq i32 %conv, 0, !dbg !7460
  br i1 %cmp, label %if.then, label %if.end, !dbg !7461

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7462
  br label %return, !dbg !7462

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7463
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7464
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7464
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7465
  call void @RNA_string_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i64 0, i64 0), i8* %arraydecay), !dbg !7466
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7467
  %3 = load i8, i8* %arrayidx, align 16, !dbg !7467
  %tobool = icmp ne i8 %3, 0, !dbg !7467
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !7469

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7470, metadata !DIExpression()), !dbg !7472
  %4 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7472
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false), !dbg !7472
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7473, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7475, metadata !DIExpression()), !dbg !7476
  store i32 3075, i32* %filter, align 4, !dbg !7477
  %5 = load i32, i32* %filter, align 4, !dbg !7478
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7479
  %6 = load i8*, i8** %data, align 8, !dbg !7479
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7480
  %7 = load i16, i16* %datatype, align 8, !dbg !7480
  %conv3 = sext i16 %7 to i32, !dbg !7481
  %call4 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %5, i8* %6, i32 %conv3), !dbg !7482
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7483
  %8 = load i8*, i8** %first, align 8, !dbg !7483
  %9 = bitcast i8* %8 to %struct.bAnimListElem*, !dbg !7485
  store %struct.bAnimListElem* %9, %struct.bAnimListElem** %ale, align 8, !dbg !7486
  br label %for.cond, !dbg !7487

for.cond:                                         ; preds = %for.inc, %if.then2
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7488
  %tobool5 = icmp ne %struct.bAnimListElem* %10, null, !dbg !7490
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7490

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7491
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7493
  call void @animchannels_group_channels(%struct.bAnimContext* %ac, %struct.bAnimListElem* %11, i8* %arraydecay6), !dbg !7494
  br label %for.inc, !dbg !7495

for.inc:                                          ; preds = %for.body
  %12 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7496
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %12, i32 0, i32 0, !dbg !7497
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7497
  store %struct.bAnimListElem* %13, %struct.bAnimListElem** %ale, align 8, !dbg !7498
  br label %for.cond, !dbg !7499, !llvm.loop !7500

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7502
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7503
  call void @WM_event_add_notifier(%struct.bContext* %14, i32 239599617, i8* null), !dbg !7504
  br label %if.end7, !dbg !7505

if.end7:                                          ; preds = %for.end, %if.end
  store i32 4, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

return:                                           ; preds = %if.end7, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7507
  ret i32 %15, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_grouping_poll(%struct.bContext* %C) #0 !dbg !7508 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %saction = alloca %struct.SpaceAction*, align 8
  %sipo = alloca %struct.SpaceIpo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7511, metadata !DIExpression()), !dbg !7512
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7513
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !7514
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !7515, metadata !DIExpression()), !dbg !7516
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7517
  %cmp = icmp eq %struct.ScrArea* null, %1, !dbg !7517
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7517

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7517
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !7517
  %cmp2 = icmp eq %struct.ARegion* null, %call1, !dbg !7517
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7519

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7520
  br label %return, !dbg !7520

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7521
  %call3 = call %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext* %3), !dbg !7522
  store %struct.SpaceLink* %call3, %struct.SpaceLink** %sl, align 8, !dbg !7523
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7524
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 8, !dbg !7525
  %5 = load i8, i8* %spacetype, align 8, !dbg !7525
  %conv = zext i8 %5 to i32, !dbg !7524
  switch i32 %conv, label %sw.default [
    i32 12, label %sw.bb
    i32 2, label %sw.bb15
  ], !dbg !7526

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SpaceAction** %saction, metadata !7527, metadata !DIExpression()), !dbg !7530
  %6 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7531
  %7 = bitcast %struct.SpaceLink* %6 to %struct.SpaceAction*, !dbg !7532
  store %struct.SpaceAction* %7, %struct.SpaceAction** %saction, align 8, !dbg !7530
  %8 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !7533
  %mode = getelementptr inbounds %struct.SpaceAction, %struct.SpaceAction* %8, i32 0, i32 9, !dbg !7533
  %9 = load i8, i8* %mode, align 8, !dbg !7533
  %conv4 = zext i8 %9 to i32, !dbg !7533
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !7533
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !7533

lor.rhs:                                          ; preds = %sw.bb
  %10 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !7533
  %mode7 = getelementptr inbounds %struct.SpaceAction, %struct.SpaceAction* %10, i32 0, i32 9, !dbg !7533
  %11 = load i8, i8* %mode7, align 8, !dbg !7533
  %conv8 = zext i8 %11 to i32, !dbg !7533
  %cmp9 = icmp eq i32 %conv8, 3, !dbg !7533
  br label %lor.end, !dbg !7533

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %12 = phi i1 [ true, %sw.bb ], [ %cmp9, %lor.rhs ]
  %lor.ext = zext i1 %12 to i32, !dbg !7533
  %cmp11 = icmp eq i32 %lor.ext, 0, !dbg !7535
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7536

if.then13:                                        ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !7537
  br label %return, !dbg !7537

if.end14:                                         ; preds = %lor.end
  br label %sw.epilog, !dbg !7538

sw.bb15:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SpaceIpo** %sipo, metadata !7539, metadata !DIExpression()), !dbg !7541
  %13 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7542
  %14 = bitcast %struct.SpaceLink* %13 to %struct.SpaceIpo*, !dbg !7543
  store %struct.SpaceIpo* %14, %struct.SpaceIpo** %sipo, align 8, !dbg !7541
  %15 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !7544
  %mode16 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %15, i32 0, i32 9, !dbg !7546
  %16 = load i16, i16* %mode16, align 8, !dbg !7546
  %conv17 = sext i16 %16 to i32, !dbg !7544
  %cmp18 = icmp ne i32 %conv17, 0, !dbg !7547
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7548

if.then20:                                        ; preds = %sw.bb15
  store i32 0, i32* %retval, align 4, !dbg !7549
  br label %return, !dbg !7549

if.end21:                                         ; preds = %sw.bb15
  br label %sw.epilog, !dbg !7550

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7551
  br label %return, !dbg !7551

sw.epilog:                                        ; preds = %if.end21, %if.end14
  store i32 1, i32* %retval, align 4, !dbg !7552
  br label %return, !dbg !7552

return:                                           ; preds = %sw.epilog, %sw.default, %if.then20, %if.then13, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7553
  ret i32 %17, !dbg !7553
}

; Function Attrs: noinline nounwind uwtable
define internal void @animchannels_group_channels(%struct.bAnimContext* %ac, %struct.bAnimListElem* %adt_ref, i8* %name) #0 !dbg !7554 {
entry:
  %ac.addr = alloca %struct.bAnimContext*, align 8
  %adt_ref.addr = alloca %struct.bAnimListElem*, align 8
  %name.addr = alloca i8*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %act = alloca %struct.bAction*, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %filter = alloca i32, align 4
  %agrp = alloca %struct.bActionGroup*, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %grp = alloca %struct.bActionGroup*, align 8
  store %struct.bAnimContext* %ac, %struct.bAnimContext** %ac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimContext** %ac.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store %struct.bAnimListElem* %adt_ref, %struct.bAnimListElem** %adt_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %adt_ref.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !7563, metadata !DIExpression()), !dbg !7564
  %0 = load %struct.bAnimListElem*, %struct.bAnimListElem** %adt_ref.addr, align 8, !dbg !7565
  %adt1 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %0, i32 0, i32 10, !dbg !7566
  %1 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !7566
  store %struct.AnimData* %1, %struct.AnimData** %adt, align 8, !dbg !7564
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !7567, metadata !DIExpression()), !dbg !7568
  %2 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7569
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 0, !dbg !7570
  %3 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !7570
  store %struct.bAction* %3, %struct.bAction** %act, align 8, !dbg !7568
  %4 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7571
  %tobool = icmp ne %struct.bAction* %4, null, !dbg !7571
  br i1 %tobool, label %if.then, label %if.end13, !dbg !7573

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7574, metadata !DIExpression()), !dbg !7576
  %5 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7576
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false), !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7577, metadata !DIExpression()), !dbg !7578
  store i32 67, i32* %filter, align 4, !dbg !7579
  %6 = load %struct.bAnimContext*, %struct.bAnimContext** %ac.addr, align 8, !dbg !7580
  %7 = load i32, i32* %filter, align 4, !dbg !7581
  %8 = load %struct.bAnimListElem*, %struct.bAnimListElem** %adt_ref.addr, align 8, !dbg !7582
  %9 = bitcast %struct.bAnimListElem* %8 to i8*, !dbg !7582
  %call = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %6, %struct.ListBase* %anim_data, i32 %7, i8* %9, i32 8), !dbg !7583
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7584
  %10 = load i8*, i8** %first, align 8, !dbg !7584
  %tobool2 = icmp ne i8* %10, null, !dbg !7586
  br i1 %tobool2, label %if.then3, label %if.end12, !dbg !7587

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7591, metadata !DIExpression()), !dbg !7592
  %11 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7593
  %12 = load i8*, i8** %name.addr, align 8, !dbg !7594
  %call4 = call %struct.bActionGroup* @action_groups_add_new(%struct.bAction* %11, i8* %12), !dbg !7595
  store %struct.bActionGroup* %call4, %struct.bActionGroup** %agrp, align 8, !dbg !7596
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7597
  %13 = load i8*, i8** %first5, align 8, !dbg !7597
  %14 = bitcast i8* %13 to %struct.bAnimListElem*, !dbg !7599
  store %struct.bAnimListElem* %14, %struct.bAnimListElem** %ale, align 8, !dbg !7600
  br label %for.cond, !dbg !7601

for.cond:                                         ; preds = %for.inc, %if.then3
  %15 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7602
  %tobool6 = icmp ne %struct.bAnimListElem* %15, null, !dbg !7604
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7604

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !7605, metadata !DIExpression()), !dbg !7607
  %16 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7608
  %data = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %16, i32 0, i32 2, !dbg !7609
  %17 = load i8*, i8** %data, align 8, !dbg !7609
  %18 = bitcast i8* %17 to %struct.FCurve*, !dbg !7610
  store %struct.FCurve* %18, %struct.FCurve** %fcu, align 8, !dbg !7607
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %grp, metadata !7611, metadata !DIExpression()), !dbg !7612
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7613
  %grp7 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 2, !dbg !7614
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %grp7, align 8, !dbg !7614
  store %struct.bActionGroup* %20, %struct.bActionGroup** %grp, align 8, !dbg !7612
  %21 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7615
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7616
  call void @action_groups_remove_channel(%struct.bAction* %21, %struct.FCurve* %22), !dbg !7617
  %23 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7618
  %tobool8 = icmp ne %struct.bActionGroup* %23, null, !dbg !7620
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !7621

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7622
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %24, i32 0, i32 2, !dbg !7623
  %call9 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %channels), !dbg !7624
  %conv = zext i8 %call9 to i32, !dbg !7624
  %tobool10 = icmp ne i32 %conv, 0, !dbg !7624
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !7625

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7626
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %25, i32 0, i32 3, !dbg !7628
  %26 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7629
  %27 = bitcast %struct.bActionGroup* %26 to i8*, !dbg !7629
  call void @BLI_freelinkN(%struct.ListBase* %groups, i8* %27), !dbg !7630
  br label %if.end, !dbg !7631

if.end:                                           ; preds = %if.then11, %land.lhs.true, %for.body
  %28 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7632
  %29 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !7633
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7634
  call void @action_groups_add_channel(%struct.bAction* %28, %struct.bActionGroup* %29, %struct.FCurve* %30), !dbg !7635
  br label %for.inc, !dbg !7636

for.inc:                                          ; preds = %if.end
  %31 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7637
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %31, i32 0, i32 0, !dbg !7638
  %32 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7638
  store %struct.bAnimListElem* %32, %struct.bAnimListElem** %ale, align 8, !dbg !7639
  br label %for.cond, !dbg !7640, !llvm.loop !7641

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !7643

if.end12:                                         ; preds = %for.end, %if.then
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7644
  br label %if.end13, !dbg !7645

if.end13:                                         ; preds = %if.end12, %entry
  ret void, !dbg !7646
}

declare dso_local %struct.bActionGroup* @action_groups_add_new(%struct.bAction*, i8*) #3

declare dso_local void @action_groups_add_channel(%struct.bAction*, %struct.bActionGroup*, %struct.FCurve*) #3

declare dso_local %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @animchannels_ungroup_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7647 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ac = alloca %struct.bAnimContext, align 8
  %anim_data = alloca %struct.ListBase, align 8
  %ale = alloca %struct.bAnimListElem*, align 8
  %filter = alloca i32, align 4
  %fcu = alloca %struct.FCurve*, align 8
  %act = alloca %struct.bAction*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata %struct.bAnimContext* %ac, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata %struct.ListBase* %anim_data, metadata !7654, metadata !DIExpression()), !dbg !7655
  %0 = bitcast %struct.ListBase* %anim_data to i8*, !dbg !7655
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7655
  call void @llvm.dbg.declare(metadata %struct.bAnimListElem** %ale, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.declare(metadata i32* %filter, metadata !7658, metadata !DIExpression()), !dbg !7659
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7660
  %call = call zeroext i8 @ANIM_animdata_get_context(%struct.bContext* %1, %struct.bAnimContext* %ac), !dbg !7662
  %conv = zext i8 %call to i32, !dbg !7662
  %cmp = icmp eq i32 %conv, 0, !dbg !7663
  br i1 %cmp, label %if.then, label %if.end, !dbg !7664

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7665
  br label %return, !dbg !7665

if.end:                                           ; preds = %entry
  store i32 2115, i32* %filter, align 4, !dbg !7666
  %2 = load i32, i32* %filter, align 4, !dbg !7667
  %data = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 0, !dbg !7668
  %3 = load i8*, i8** %data, align 8, !dbg !7668
  %datatype = getelementptr inbounds %struct.bAnimContext, %struct.bAnimContext* %ac, i32 0, i32 1, !dbg !7669
  %4 = load i16, i16* %datatype, align 8, !dbg !7669
  %conv2 = sext i16 %4 to i32, !dbg !7670
  %call3 = call i64 @ANIM_animdata_filter(%struct.bAnimContext* %ac, %struct.ListBase* %anim_data, i32 %2, i8* %3, i32 %conv2), !dbg !7671
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %anim_data, i32 0, i32 0, !dbg !7672
  %5 = load i8*, i8** %first, align 8, !dbg !7672
  %6 = bitcast i8* %5 to %struct.bAnimListElem*, !dbg !7674
  store %struct.bAnimListElem* %6, %struct.bAnimListElem** %ale, align 8, !dbg !7675
  br label %for.cond, !dbg !7676

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7677
  %tobool = icmp ne %struct.bAnimListElem* %7, null, !dbg !7679
  br i1 %tobool, label %for.body, label %for.end, !dbg !7679

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7680
  %adt = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %8, i32 0, i32 10, !dbg !7683
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7683
  %tobool4 = icmp ne %struct.AnimData* %9, null, !dbg !7680
  br i1 %tobool4, label %land.lhs.true, label %if.end19, !dbg !7684

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7685
  %adt5 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %10, i32 0, i32 10, !dbg !7686
  %11 = load %struct.AnimData*, %struct.AnimData** %adt5, align 8, !dbg !7686
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %11, i32 0, i32 0, !dbg !7687
  %12 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !7687
  %tobool6 = icmp ne %struct.bAction* %12, null, !dbg !7685
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !7688

if.then7:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !7689, metadata !DIExpression()), !dbg !7691
  %13 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7692
  %data8 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %13, i32 0, i32 2, !dbg !7693
  %14 = load i8*, i8** %data8, align 8, !dbg !7693
  %15 = bitcast i8* %14 to %struct.FCurve*, !dbg !7694
  store %struct.FCurve* %15, %struct.FCurve** %fcu, align 8, !dbg !7691
  call void @llvm.dbg.declare(metadata %struct.bAction** %act, metadata !7695, metadata !DIExpression()), !dbg !7696
  %16 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7697
  %adt9 = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %16, i32 0, i32 10, !dbg !7698
  %17 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !7698
  %action10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %17, i32 0, i32 0, !dbg !7699
  %18 = load %struct.bAction*, %struct.bAction** %action10, align 8, !dbg !7699
  store %struct.bAction* %18, %struct.bAction** %act, align 8, !dbg !7696
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7700
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 2, !dbg !7702
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !7702
  %tobool11 = icmp ne %struct.bActionGroup* %20, null, !dbg !7700
  br i1 %tobool11, label %if.then12, label %if.end18, !dbg !7703

if.then12:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !7704, metadata !DIExpression()), !dbg !7706
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7707
  %grp13 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %21, i32 0, i32 2, !dbg !7708
  %22 = load %struct.bActionGroup*, %struct.bActionGroup** %grp13, align 8, !dbg !7708
  store %struct.bActionGroup* %22, %struct.bActionGroup** %agrp, align 8, !dbg !7706
  %23 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7709
  %24 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7710
  call void @action_groups_remove_channel(%struct.bAction* %23, %struct.FCurve* %24), !dbg !7711
  %25 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7712
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %25, i32 0, i32 1, !dbg !7713
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !7714
  %27 = bitcast %struct.FCurve* %26 to i8*, !dbg !7714
  call void @BLI_addtail(%struct.ListBase* %curves, i8* %27), !dbg !7715
  %28 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !7716
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %28, i32 0, i32 2, !dbg !7718
  %call14 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %channels), !dbg !7719
  %tobool15 = icmp ne i8 %call14, 0, !dbg !7719
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7720

if.then16:                                        ; preds = %if.then12
  %29 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !7721
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %29, i32 0, i32 3, !dbg !7723
  %30 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !7724
  %31 = bitcast %struct.bActionGroup* %30 to i8*, !dbg !7724
  call void @BLI_freelinkN(%struct.ListBase* %groups, i8* %31), !dbg !7725
  br label %if.end17, !dbg !7726

if.end17:                                         ; preds = %if.then16, %if.then12
  br label %if.end18, !dbg !7727

if.end18:                                         ; preds = %if.end17, %if.then7
  br label %if.end19, !dbg !7728

if.end19:                                         ; preds = %if.end18, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7729

for.inc:                                          ; preds = %if.end19
  %32 = load %struct.bAnimListElem*, %struct.bAnimListElem** %ale, align 8, !dbg !7730
  %next = getelementptr inbounds %struct.bAnimListElem, %struct.bAnimListElem* %32, i32 0, i32 0, !dbg !7731
  %33 = load %struct.bAnimListElem*, %struct.bAnimListElem** %next, align 8, !dbg !7731
  store %struct.bAnimListElem* %33, %struct.bAnimListElem** %ale, align 8, !dbg !7732
  br label %for.cond, !dbg !7733, !llvm.loop !7734

for.end:                                          ; preds = %for.cond
  call void @ANIM_animdata_freelist(%struct.ListBase* %anim_data), !dbg !7736
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7737
  call void @WM_event_add_notifier(%struct.bContext* %34, i32 239599617, i8* null), !dbg !7738
  store i32 4, i32* %retval, align 4, !dbg !7739
  br label %return, !dbg !7739

return:                                           ; preds = %for.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !7740
  ret i32 %35, !dbg !7740
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2620, !2621, !2622}
!llvm.ident = !{!2623}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "prop_animchannel_setflag_types", scope: !2, file: !3, line: 1760, type: !2619, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !550, globals: !2605, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/animation/anim_channels_edit.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !19, !36, !71, !83, !96, !104, !116, !122, !128, !135, !144, !149, !350, !356, !365, !390, !403, !409, !440, !454, !488, !495, !507, !510, !521, !527, !534, !539, !546}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimCont_Types", file: !6, line: 92, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/editors/include/ED_anim_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!9 = !DIEnumerator(name: "ANIMCONT_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "ANIMCONT_ACTION", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "ANIMCONT_SHAPEKEY", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "ANIMCONT_GPENCIL", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "ANIMCONT_DOPESHEET", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "ANIMCONT_FCURVES", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "ANIMCONT_DRIVERS", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "ANIMCONT_NLA", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "ANIMCONT_CHANNEL", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "ANIMCONT_MASK", value: 9, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimFilter_Flags", file: !6, line: 210, baseType: !20, size: 32, elements: !21)
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !{!22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!22 = !DIEnumerator(name: "ANIMFILTER_DATA_VISIBLE", value: 1)
!23 = !DIEnumerator(name: "ANIMFILTER_LIST_VISIBLE", value: 2)
!24 = !DIEnumerator(name: "ANIMFILTER_CURVE_VISIBLE", value: 4)
!25 = !DIEnumerator(name: "ANIMFILTER_LIST_CHANNELS", value: 8)
!26 = !DIEnumerator(name: "ANIMFILTER_ACTIVE", value: 16)
!27 = !DIEnumerator(name: "ANIMFILTER_ACTGROUPED", value: 32)
!28 = !DIEnumerator(name: "ANIMFILTER_SEL", value: 64)
!29 = !DIEnumerator(name: "ANIMFILTER_UNSEL", value: 128)
!30 = !DIEnumerator(name: "ANIMFILTER_FOREDIT", value: 256)
!31 = !DIEnumerator(name: "ANIMFILTER_SELEDIT", value: 512)
!32 = !DIEnumerator(name: "ANIMFILTER_ANIMDATA", value: 1024)
!33 = !DIEnumerator(name: "ANIMFILTER_NODUPLIS", value: 2048)
!34 = !DIEnumerator(name: "ANIMFILTER_TMP_PEEK", value: 1073741824)
!35 = !DIEnumerator(name: "ANIMFILTER_TMP_IGNORE_ONLYSEL", value: -2147483648)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnim_ChannelType", file: !6, line: 132, baseType: !7, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70}
!38 = !DIEnumerator(name: "ANIMTYPE_NONE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "ANIMTYPE_ANIMDATA", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "ANIMTYPE_SPECIALDATA", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "ANIMTYPE_SUMMARY", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "ANIMTYPE_SCENE", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "ANIMTYPE_OBJECT", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "ANIMTYPE_GROUP", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "ANIMTYPE_FCURVE", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "ANIMTYPE_FILLACTD", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "ANIMTYPE_FILLDRIVERS", value: 9, isUnsigned: true)
!48 = !DIEnumerator(name: "ANIMTYPE_DSMAT", value: 10, isUnsigned: true)
!49 = !DIEnumerator(name: "ANIMTYPE_DSLAM", value: 11, isUnsigned: true)
!50 = !DIEnumerator(name: "ANIMTYPE_DSCAM", value: 12, isUnsigned: true)
!51 = !DIEnumerator(name: "ANIMTYPE_DSCUR", value: 13, isUnsigned: true)
!52 = !DIEnumerator(name: "ANIMTYPE_DSSKEY", value: 14, isUnsigned: true)
!53 = !DIEnumerator(name: "ANIMTYPE_DSWOR", value: 15, isUnsigned: true)
!54 = !DIEnumerator(name: "ANIMTYPE_DSNTREE", value: 16, isUnsigned: true)
!55 = !DIEnumerator(name: "ANIMTYPE_DSPART", value: 17, isUnsigned: true)
!56 = !DIEnumerator(name: "ANIMTYPE_DSMBALL", value: 18, isUnsigned: true)
!57 = !DIEnumerator(name: "ANIMTYPE_DSARM", value: 19, isUnsigned: true)
!58 = !DIEnumerator(name: "ANIMTYPE_DSMESH", value: 20, isUnsigned: true)
!59 = !DIEnumerator(name: "ANIMTYPE_DSTEX", value: 21, isUnsigned: true)
!60 = !DIEnumerator(name: "ANIMTYPE_DSLAT", value: 22, isUnsigned: true)
!61 = !DIEnumerator(name: "ANIMTYPE_DSLINESTYLE", value: 23, isUnsigned: true)
!62 = !DIEnumerator(name: "ANIMTYPE_DSSPK", value: 24, isUnsigned: true)
!63 = !DIEnumerator(name: "ANIMTYPE_SHAPEKEY", value: 25, isUnsigned: true)
!64 = !DIEnumerator(name: "ANIMTYPE_GPDATABLOCK", value: 26, isUnsigned: true)
!65 = !DIEnumerator(name: "ANIMTYPE_GPLAYER", value: 27, isUnsigned: true)
!66 = !DIEnumerator(name: "ANIMTYPE_MASKDATABLOCK", value: 28, isUnsigned: true)
!67 = !DIEnumerator(name: "ANIMTYPE_MASKLAYER", value: 29, isUnsigned: true)
!68 = !DIEnumerator(name: "ANIMTYPE_NLATRACK", value: 30, isUnsigned: true)
!69 = !DIEnumerator(name: "ANIMTYPE_NLAACTION", value: 31, isUnsigned: true)
!70 = !DIEnumerator(name: "ANIMTYPE_NUM_TYPES", value: 32, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eActionGroup_Flag", file: !72, line: 453, baseType: !20, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82}
!74 = !DIEnumerator(name: "AGRP_SELECTED", value: 1)
!75 = !DIEnumerator(name: "AGRP_ACTIVE", value: 2)
!76 = !DIEnumerator(name: "AGRP_PROTECTED", value: 4)
!77 = !DIEnumerator(name: "AGRP_EXPANDED", value: 8)
!78 = !DIEnumerator(name: "AGRP_MUTED", value: 16)
!79 = !DIEnumerator(name: "AGRP_NOTVISIBLE", value: 32)
!80 = !DIEnumerator(name: "AGRP_EXPANDED_G", value: 64)
!81 = !DIEnumerator(name: "AGRP_TEMP", value: 1073741824)
!82 = !DIEnumerator(name: "AGRP_MOVED", value: -2147483648)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFCurve_Flags", file: !84, line: 467, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!85 = !{!86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!86 = !DIEnumerator(name: "FCURVE_VISIBLE", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "FCURVE_SELECTED", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "FCURVE_ACTIVE", value: 4, isUnsigned: true)
!89 = !DIEnumerator(name: "FCURVE_PROTECTED", value: 8, isUnsigned: true)
!90 = !DIEnumerator(name: "FCURVE_MUTED", value: 16, isUnsigned: true)
!91 = !DIEnumerator(name: "FCURVE_AUTO_HANDLES", value: 32, isUnsigned: true)
!92 = !DIEnumerator(name: "FCURVE_DISABLED", value: 1024, isUnsigned: true)
!93 = !DIEnumerator(name: "FCURVE_INT_VALUES", value: 2048, isUnsigned: true)
!94 = !DIEnumerator(name: "FCURVE_DISCRETE_VALUES", value: 4096, isUnsigned: true)
!95 = !DIEnumerator(name: "FCURVE_TAGGED", value: 32768, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaTrack_Flag", file: !84, line: 685, baseType: !7, size: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103}
!98 = !DIEnumerator(name: "NLATRACK_ACTIVE", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "NLATRACK_SELECTED", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "NLATRACK_MUTED", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "NLATRACK_SOLO", value: 8, isUnsigned: true)
!102 = !DIEnumerator(name: "NLATRACK_PROTECTED", value: 16, isUnsigned: true)
!103 = !DIEnumerator(name: "NLATRACK_DISABLED", value: 1024, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Flag", file: !84, line: 872, baseType: !7, size: 32, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!106 = !DIEnumerator(name: "ADT_NLA_SOLO_TRACK", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "ADT_NLA_EVAL_OFF", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "ADT_NLA_EDIT_ON", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "ADT_NLA_EDIT_NOMAP", value: 8, isUnsigned: true)
!110 = !DIEnumerator(name: "ADT_NLA_SKEYS_COLLAPSED", value: 16, isUnsigned: true)
!111 = !DIEnumerator(name: "ADT_DRIVERS_COLLAPSED", value: 1024, isUnsigned: true)
!112 = !DIEnumerator(name: "ADT_DRIVERS_DISABLED", value: 2048, isUnsigned: true)
!113 = !DIEnumerator(name: "ADT_UI_SELECTED", value: 16384, isUnsigned: true)
!114 = !DIEnumerator(name: "ADT_UI_ACTIVE", value: 32768, isUnsigned: true)
!115 = !DIEnumerator(name: "ADT_CURVES_NOT_VISIBLE", value: 65536, isUnsigned: true)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimChannels_SetFlag", file: !6, line: 393, baseType: !7, size: 32, elements: !117)
!117 = !{!118, !119, !120, !121}
!118 = !DIEnumerator(name: "ACHANNEL_SETFLAG_CLEAR", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "ACHANNEL_SETFLAG_ADD", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "ACHANNEL_SETFLAG_INVERT", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "ACHANNEL_SETFLAG_TOGGLE", value: 3, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 132, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "KEYBLOCK_MUTE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "KEYBLOCK_SEL", value: 2, isUnsigned: true)
!127 = !DIEnumerator(name: "KEYBLOCK_LOCKED", value: 4, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 217, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!130 = !{!131, !132, !133, !134}
!131 = !DIEnumerator(name: "MASK_LAYERFLAG_LOCKED", value: 16, isUnsigned: true)
!132 = !DIEnumerator(name: "MASK_LAYERFLAG_SELECT", value: 32, isUnsigned: true)
!133 = !DIEnumerator(name: "MASK_LAYERFLAG_FILL_DISCRETE", value: 64, isUnsigned: true)
!134 = !DIEnumerator(name: "MASK_LAYERFLAG_FILL_OVERLAP", value: 128, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimChannel_Settings", file: !6, line: 401, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143}
!137 = !DIEnumerator(name: "ACHANNEL_SETTING_SELECT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ACHANNEL_SETTING_PROTECT", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ACHANNEL_SETTING_MUTE", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ACHANNEL_SETTING_EXPAND", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "ACHANNEL_SETTING_VISIBLE", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "ACHANNEL_SETTING_SOLO", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ACHANNEL_SETTING_PINNED", value: 6, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimChannel_Role", file: !6, line: 386, baseType: !20, size: 32, elements: !145)
!145 = !{!146, !147, !148}
!146 = !DIEnumerator(name: "ACHANNEL_ROLE_EXPANDER", value: -1)
!147 = !DIEnumerator(name: "ACHANNEL_ROLE_SPECIAL", value: 0)
!148 = !DIEnumerator(name: "ACHANNEL_ROLE_CHANNEL", value: 1)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !150, line: 54, baseType: !7, size: 32, elements: !151)
!150 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!151 = !{!152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349}
!152 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!154 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!155 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!156 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!157 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!158 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!159 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!160 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!161 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!162 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!163 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!164 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!165 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!166 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!167 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!168 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!169 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!170 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!171 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!172 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!173 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!174 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!175 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!176 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!177 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!178 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!179 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!180 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!181 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!182 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!183 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!184 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!185 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!186 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!187 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!188 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!189 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!190 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!191 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!192 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!193 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!194 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!195 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!196 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!197 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!198 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!199 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!200 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!201 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!202 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!203 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!204 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!205 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!206 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!207 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!208 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!209 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!210 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!211 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!212 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!213 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!214 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!215 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!216 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!217 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!218 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!219 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!220 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!221 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!222 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!223 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!224 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!225 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!226 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!227 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!228 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!229 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!230 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!231 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!232 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!233 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!234 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!235 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!236 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!237 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!238 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!239 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!240 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!241 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!242 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!243 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!244 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!245 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!246 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!247 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!248 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!249 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!250 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!251 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!252 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!253 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!254 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!255 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!256 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!257 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!258 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!259 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!260 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!261 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!262 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!263 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!264 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!265 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!266 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!267 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!268 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!269 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!270 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!271 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!272 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!273 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!274 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!275 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!276 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!277 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!278 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!279 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!280 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!281 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!282 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!283 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!284 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!285 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!286 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!287 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!288 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!289 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!290 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!291 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!292 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!293 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!294 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!295 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!296 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!297 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!298 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!299 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!300 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!301 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!302 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!303 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!304 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!305 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!306 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!307 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!308 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!309 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!310 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!311 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!312 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!313 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!314 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!315 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!316 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!317 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!318 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!319 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!320 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!321 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!322 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!323 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!324 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!325 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!326 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!327 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!328 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!329 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!330 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!331 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!332 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!333 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!334 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!335 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!336 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!337 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!338 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!339 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!340 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!341 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!342 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!343 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!344 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!345 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!346 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!347 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!348 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!349 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRearrangeAnimChan_Mode", file: !3, line: 641, baseType: !20, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355}
!352 = !DIEnumerator(name: "REARRANGE_ANIMCHAN_TOP", value: -2)
!353 = !DIEnumerator(name: "REARRANGE_ANIMCHAN_UP", value: -1)
!354 = !DIEnumerator(name: "REARRANGE_ANIMCHAN_DOWN", value: 1)
!355 = !DIEnumerator(name: "REARRANGE_ANIMCHAN_BOTTOM", value: 2)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !357, line: 351, baseType: !7, size: 32, elements: !358)
!357 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!358 = !{!359, !360, !361, !362, !363, !364}
!359 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!362 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!364 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !366, line: 1163, baseType: !7, size: 32, elements: !367)
!366 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!368 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!369 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!370 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!371 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!372 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!373 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!374 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!375 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!376 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!377 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!378 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!379 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!380 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!381 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!382 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!383 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!384 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!385 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!386 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!387 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!388 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!389 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !150, line: 394, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402}
!392 = !DIEnumerator(name: "GESTURE_MODAL_CANCEL", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "GESTURE_MODAL_CONFIRM", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "GESTURE_MODAL_SELECT", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "GESTURE_MODAL_DESELECT", value: 4, isUnsigned: true)
!396 = !DIEnumerator(name: "GESTURE_MODAL_NOP", value: 5, isUnsigned: true)
!397 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_ADD", value: 6, isUnsigned: true)
!398 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SUB", value: 7, isUnsigned: true)
!399 = !DIEnumerator(name: "GESTURE_MODAL_BEGIN", value: 8, isUnsigned: true)
!400 = !DIEnumerator(name: "GESTURE_MODAL_IN", value: 9, isUnsigned: true)
!401 = !DIEnumerator(name: "GESTURE_MODAL_OUT", value: 10, isUnsigned: true)
!402 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SIZE", value: 11, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceNla_Flag", file: !366, line: 402, baseType: !7, size: 32, elements: !404)
!404 = !{!405, !406, !407, !408}
!405 = !DIEnumerator(name: "SNLA_DRAWTIME", value: 4, isUnsigned: true)
!406 = !DIEnumerator(name: "SNLA_NODRAWCFRANUM", value: 16, isUnsigned: true)
!407 = !DIEnumerator(name: "SNLA_NOSTRIPCURVES", value: 32, isUnsigned: true)
!408 = !DIEnumerator(name: "SNLA_NOREALTIMEUPDATES", value: 64, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDopeSheet_FilterFlag", file: !72, line: 535, baseType: !7, size: 32, elements: !410)
!410 = !{!411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!411 = !DIEnumerator(name: "ADS_FILTER_ONLYSEL", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "ADS_FILTER_ONLYDRIVERS", value: 2, isUnsigned: true)
!413 = !DIEnumerator(name: "ADS_FILTER_ONLYNLA", value: 4, isUnsigned: true)
!414 = !DIEnumerator(name: "ADS_FILTER_SELEDIT", value: 8, isUnsigned: true)
!415 = !DIEnumerator(name: "ADS_FILTER_SUMMARY", value: 16, isUnsigned: true)
!416 = !DIEnumerator(name: "ADS_FILTER_ONLYOBGROUP", value: 32, isUnsigned: true)
!417 = !DIEnumerator(name: "ADS_FILTER_NOSHAPEKEYS", value: 64, isUnsigned: true)
!418 = !DIEnumerator(name: "ADS_FILTER_NOMESH", value: 128, isUnsigned: true)
!419 = !DIEnumerator(name: "ADS_FILTER_NOOBJ", value: 256, isUnsigned: true)
!420 = !DIEnumerator(name: "ADS_FILTER_NOLAT", value: 512, isUnsigned: true)
!421 = !DIEnumerator(name: "ADS_FILTER_NOCAM", value: 1024, isUnsigned: true)
!422 = !DIEnumerator(name: "ADS_FILTER_NOMAT", value: 2048, isUnsigned: true)
!423 = !DIEnumerator(name: "ADS_FILTER_NOLAM", value: 4096, isUnsigned: true)
!424 = !DIEnumerator(name: "ADS_FILTER_NOCUR", value: 8192, isUnsigned: true)
!425 = !DIEnumerator(name: "ADS_FILTER_NOWOR", value: 16384, isUnsigned: true)
!426 = !DIEnumerator(name: "ADS_FILTER_NOSCE", value: 32768, isUnsigned: true)
!427 = !DIEnumerator(name: "ADS_FILTER_NOPART", value: 65536, isUnsigned: true)
!428 = !DIEnumerator(name: "ADS_FILTER_NOMBA", value: 131072, isUnsigned: true)
!429 = !DIEnumerator(name: "ADS_FILTER_NOARM", value: 262144, isUnsigned: true)
!430 = !DIEnumerator(name: "ADS_FILTER_NONTREE", value: 524288, isUnsigned: true)
!431 = !DIEnumerator(name: "ADS_FILTER_NOTEX", value: 1048576, isUnsigned: true)
!432 = !DIEnumerator(name: "ADS_FILTER_NOSPK", value: 2097152, isUnsigned: true)
!433 = !DIEnumerator(name: "ADS_FILTER_NOLINESTYLE", value: 4194304, isUnsigned: true)
!434 = !DIEnumerator(name: "ADS_FILTER_NOMODIFIERS", value: 8388608, isUnsigned: true)
!435 = !DIEnumerator(name: "ADS_FILTER_NLA_NOACT", value: 33554432, isUnsigned: true)
!436 = !DIEnumerator(name: "ADS_FILTER_INCL_HIDDEN", value: 67108864, isUnsigned: true)
!437 = !DIEnumerator(name: "ADS_FILTER_BY_FCU_NAME", value: 134217728, isUnsigned: true)
!438 = !DIEnumerator(name: "ADS_FILTER_ONLY_ERRORS", value: 268435456, isUnsigned: true)
!439 = !DIEnumerator(name: "ADS_FILTER_NOOBDATA", value: 10828800, isUnsigned: true)
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !441, line: 339, baseType: !7, size: 32, elements: !442)
!441 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!442 = !{!443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453}
!443 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!444 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!445 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!446 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!447 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!448 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!449 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!450 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!451 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!452 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!453 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!454 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !455, line: 151, baseType: !7, size: 32, elements: !456)
!455 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!456 = !{!457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487}
!457 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!458 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!459 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!460 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!461 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!462 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!463 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!464 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!465 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!466 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!467 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!468 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!469 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!470 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!471 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!472 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!473 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!474 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!475 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!476 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!477 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!478 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!479 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!480 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!481 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!482 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!483 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!484 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!485 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!486 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!487 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!488 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEditKeyframes_Select", file: !489, line: 66, baseType: !7, size: 32, elements: !490)
!489 = !DIFile(filename: "blender/source/blender/editors/include/ED_keyframes_edit.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!490 = !{!491, !492, !493, !494}
!491 = !DIEnumerator(name: "SELECT_REPLACE", value: 1, isUnsigned: true)
!492 = !DIEnumerator(name: "SELECT_ADD", value: 2, isUnsigned: true)
!493 = !DIEnumerator(name: "SELECT_SUBTRACT", value: 4, isUnsigned: true)
!494 = !DIEnumerator(name: "SELECT_INVERT", value: 8, isUnsigned: true)
!495 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !496, line: 123, baseType: !7, size: 32, elements: !497)
!496 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!497 = !{!498, !499, !500, !501, !502, !503, !504, !505, !506}
!498 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!499 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!500 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!501 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!502 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!503 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!504 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!505 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!506 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!507 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 233, baseType: !7, size: 32, elements: !508)
!508 = !{!509}
!509 = !DIEnumerator(name: "MASK_ANIMF_EXPAND", value: 16, isUnsigned: true)
!510 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 361, baseType: !7, size: 32, elements: !512)
!511 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!512 = !{!513, !514, !515, !516, !517, !518, !519, !520}
!513 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!514 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!515 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!516 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!517 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!518 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!519 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!520 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eReorderIslandFlag", file: !3, line: 668, baseType: !7, size: 32, elements: !522)
!522 = !{!523, !524, !525, !526}
!523 = !DIEnumerator(name: "REORDER_ISLAND_SELECTED", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "REORDER_ISLAND_UNTOUCHABLE", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "REORDER_ISLAND_MOVED", value: 4, isUnsigned: true)
!526 = !DIEnumerator(name: "REORDER_ISLAND_HIDDEN", value: 8, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDriver_Flags", file: !84, line: 403, baseType: !7, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532, !533}
!529 = !DIEnumerator(name: "DRIVER_FLAG_INVALID", value: 1, isUnsigned: true)
!530 = !DIEnumerator(name: "DRIVER_FLAG_RECALC", value: 2, isUnsigned: true)
!531 = !DIEnumerator(name: "DRIVER_FLAG_RECOMPILE", value: 8, isUnsigned: true)
!532 = !DIEnumerator(name: "DRIVER_FLAG_RENAMEVAR", value: 16, isUnsigned: true)
!533 = !DIEnumerator(name: "DRIVER_FLAG_SHOWDEBUG", value: 32, isUnsigned: true)
!534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnim_Update_Flags", file: !6, line: 197, baseType: !7, size: 32, elements: !535)
!535 = !{!536, !537, !538}
!536 = !DIEnumerator(name: "ANIM_UPDATE_DEPS", value: 1, isUnsigned: true)
!537 = !DIEnumerator(name: "ANIM_UPDATE_ORDER", value: 2, isUnsigned: true)
!538 = !DIEnumerator(name: "ANIM_UPDATE_HANDLES", value: 4, isUnsigned: true)
!539 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimEdit_Context", file: !72, line: 636, baseType: !7, size: 32, elements: !540)
!540 = !{!541, !542, !543, !544, !545}
!541 = !DIEnumerator(name: "SACTCONT_ACTION", value: 0, isUnsigned: true)
!542 = !DIEnumerator(name: "SACTCONT_SHAPEKEY", value: 1, isUnsigned: true)
!543 = !DIEnumerator(name: "SACTCONT_GPENCIL", value: 2, isUnsigned: true)
!544 = !DIEnumerator(name: "SACTCONT_DOPESHEET", value: 3, isUnsigned: true)
!545 = !DIEnumerator(name: "SACTCONT_MASK", value: 4, isUnsigned: true)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eGraphEdit_Mode", file: !366, line: 375, baseType: !7, size: 32, elements: !547)
!547 = !{!548, !549}
!548 = !DIEnumerator(name: "SIPO_MODE_ANIMATION", value: 0, isUnsigned: true)
!549 = !DIEnumerator(name: "SIPO_MODE_DRIVERS", value: 1, isUnsigned: true)
!550 = !{!551, !587, !661, !672, !2252, !2272, !2296, !564, !2354, !607, !654, !2557, !2558, !2560, !2562, !2564, !2566, !2568, !2585}
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !72, line: 450, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !72, line: 440, size: 960, elements: !554)
!554 = !{!555, !557, !558, !566, !567, !568, !573}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !553, file: !72, line: 441, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !553, file: !72, line: 441, baseType: !556, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !553, file: !72, line: 443, baseType: !559, size: 128, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !560, line: 71, baseType: !561)
!560 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !560, line: 69, size: 128, elements: !562)
!562 = !{!563, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !561, file: !560, line: 70, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !561, file: !560, line: 70, baseType: !564, size: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !553, file: !72, line: 445, baseType: !20, size: 32, offset: 256)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !553, file: !72, line: 446, baseType: !20, size: 32, offset: 288)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !553, file: !72, line: 447, baseType: !569, size: 512, offset: 320)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 512, elements: !571)
!570 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!571 = !{!572}
!572 = !DISubrange(count: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !553, file: !72, line: 449, baseType: !574, size: 128, offset: 832)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !575, line: 347, baseType: !576)
!575 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !575, line: 340, size: 128, elements: !577)
!577 = !{!578, !582, !583, !584, !586}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !576, file: !575, line: 341, baseType: !579, size: 32)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 32, elements: !580)
!580 = !{!581}
!581 = !DISubrange(count: 4)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !576, file: !575, line: 342, baseType: !579, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !576, file: !575, line: 343, baseType: !579, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !576, file: !575, line: 345, baseType: !585, size: 16, offset: 96)
!585 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !576, file: !575, line: 346, baseType: !585, size: 16, offset: 112)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !84, line: 463, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !84, line: 433, size: 896, elements: !590)
!590 = !{!591, !593, !594, !595, !611, !612, !637, !648, !649, !650, !651, !652, !653, !655, !656, !659, !660}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !589, file: !84, line: 434, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !589, file: !84, line: 434, baseType: !592, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !589, file: !84, line: 437, baseType: !551, size: 64, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !589, file: !84, line: 440, baseType: !596, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !84, line: 386, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !84, line: 371, size: 2368, elements: !599)
!599 = !{!600, !601, !605, !606, !608, !609, !610}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !598, file: !84, line: 372, baseType: !559, size: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !598, file: !84, line: 377, baseType: !602, size: 2048, offset: 128)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 2048, elements: !603)
!603 = !{!604}
!604 = !DISubrange(count: 256)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !598, file: !84, line: 378, baseType: !564, size: 64, offset: 2176)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !598, file: !84, line: 380, baseType: !607, size: 32, offset: 2240)
!607 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !598, file: !84, line: 381, baseType: !607, size: 32, offset: 2272)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !598, file: !84, line: 384, baseType: !20, size: 32, offset: 2304)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !598, file: !84, line: 385, baseType: !20, size: 32, offset: 2336)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !589, file: !84, line: 442, baseType: !559, size: 128, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !589, file: !84, line: 445, baseType: !613, size: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !615, line: 133, baseType: !616)
!615 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !615, line: 117, size: 576, elements: !617)
!617 = !{!618, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !616, file: !615, line: 118, baseType: !619, size: 288)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 288, elements: !620)
!620 = !{!621, !621}
!621 = !DISubrange(count: 3)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !616, file: !615, line: 119, baseType: !607, size: 32, offset: 288)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !616, file: !615, line: 119, baseType: !607, size: 32, offset: 320)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !616, file: !615, line: 119, baseType: !607, size: 32, offset: 352)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !616, file: !615, line: 121, baseType: !570, size: 8, offset: 384)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !616, file: !615, line: 123, baseType: !570, size: 8, offset: 392)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !616, file: !615, line: 123, baseType: !570, size: 8, offset: 400)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !616, file: !615, line: 124, baseType: !570, size: 8, offset: 408)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !616, file: !615, line: 124, baseType: !570, size: 8, offset: 416)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !616, file: !615, line: 124, baseType: !570, size: 8, offset: 424)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !616, file: !615, line: 126, baseType: !570, size: 8, offset: 432)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !616, file: !615, line: 128, baseType: !570, size: 8, offset: 440)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !616, file: !615, line: 129, baseType: !607, size: 32, offset: 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !616, file: !615, line: 130, baseType: !607, size: 32, offset: 480)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !616, file: !615, line: 130, baseType: !607, size: 32, offset: 512)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !616, file: !615, line: 132, baseType: !579, size: 32, offset: 544)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !589, file: !84, line: 446, baseType: !638, size: 64, offset: 448)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !84, line: 430, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !84, line: 426, size: 128, elements: !641)
!641 = !{!642, !646, !647}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !640, file: !84, line: 427, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !644)
!644 = !{!645}
!645 = !DISubrange(count: 2)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !640, file: !84, line: 428, baseType: !20, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !640, file: !84, line: 429, baseType: !20, size: 32, offset: 96)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !589, file: !84, line: 447, baseType: !7, size: 32, offset: 512)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !589, file: !84, line: 450, baseType: !607, size: 32, offset: 544)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !589, file: !84, line: 451, baseType: !585, size: 16, offset: 576)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !589, file: !84, line: 452, baseType: !585, size: 16, offset: 592)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !589, file: !84, line: 455, baseType: !20, size: 32, offset: 608)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !589, file: !84, line: 456, baseType: !654, size: 64, offset: 640)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !589, file: !84, line: 459, baseType: !20, size: 32, offset: 704)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !589, file: !84, line: 460, baseType: !657, size: 96, offset: 736)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 96, elements: !658)
!658 = !{!621}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !589, file: !84, line: 462, baseType: !607, size: 32, offset: 832)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !589, file: !84, line: 462, baseType: !607, size: 32, offset: 864)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaTrack", file: !84, line: 682, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaTrack", file: !84, line: 673, size: 832, elements: !664)
!664 = !{!665, !667, !668, !669, !670, !671}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !663, file: !84, line: 674, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !663, file: !84, line: 674, baseType: !666, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !663, file: !84, line: 676, baseType: !559, size: 128, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !663, file: !84, line: 678, baseType: !20, size: 32, offset: 256)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !663, file: !84, line: 679, baseType: !20, size: 32, offset: 288)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !663, file: !84, line: 681, baseType: !569, size: 512, offset: 320)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !674, line: 1299, baseType: !675)
!674 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !674, line: 1216, size: 39680, elements: !676)
!676 = !{!677, !736, !804, !1083, !1086, !1087, !1088, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1114, !1187, !1621, !1836, !1839, !2127, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2149, !2150, !2151, !2152, !2153, !2161, !2228, !2235, !2236, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !675, file: !674, line: 1217, baseType: !678, size: 960)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !679, line: 130, baseType: !680)
!679 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !679, line: 117, size: 960, elements: !681)
!681 = !{!682, !683, !684, !686, !705, !709, !710, !711, !712, !713}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !680, file: !679, line: 118, baseType: !564, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !680, file: !679, line: 118, baseType: !564, size: 64, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !680, file: !679, line: 119, baseType: !685, size: 64, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !680, file: !679, line: 120, baseType: !687, size: 64, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !679, line: 136, size: 17600, elements: !689)
!689 = !{!690, !691, !693, !696, !700, !701, !702}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !688, file: !679, line: 137, baseType: !678, size: 960)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !688, file: !679, line: 138, baseType: !692, size: 64, offset: 960)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !688, file: !679, line: 139, baseType: !694, size: 64, offset: 1024)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !679, line: 43, flags: DIFlagFwdDecl)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !688, file: !679, line: 140, baseType: !697, size: 8192, offset: 1088)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 8192, elements: !698)
!698 = !{!699}
!699 = !DISubrange(count: 1024)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !688, file: !679, line: 141, baseType: !697, size: 8192, offset: 9280)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !688, file: !679, line: 148, baseType: !687, size: 64, offset: 17472)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !688, file: !679, line: 150, baseType: !703, size: 64, offset: 17536)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !679, line: 45, flags: DIFlagFwdDecl)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !680, file: !679, line: 121, baseType: !706, size: 528, offset: 256)
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 528, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 66)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !680, file: !679, line: 126, baseType: !585, size: 16, offset: 784)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !680, file: !679, line: 127, baseType: !20, size: 32, offset: 800)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !680, file: !679, line: 128, baseType: !20, size: 32, offset: 832)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !680, file: !679, line: 128, baseType: !20, size: 32, offset: 864)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !680, file: !679, line: 129, baseType: !714, size: 64, offset: 896)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !679, line: 75, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !679, line: 62, size: 1024, elements: !717)
!717 = !{!718, !720, !721, !722, !723, !724, !725, !726, !734, !735}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !716, file: !679, line: 63, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !716, file: !679, line: 63, baseType: !719, size: 64, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !716, file: !679, line: 64, baseType: !570, size: 8, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !716, file: !679, line: 64, baseType: !570, size: 8, offset: 136)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !716, file: !679, line: 65, baseType: !585, size: 16, offset: 144)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !716, file: !679, line: 66, baseType: !569, size: 512, offset: 160)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !716, file: !679, line: 67, baseType: !20, size: 32, offset: 672)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !716, file: !679, line: 69, baseType: !727, size: 256, offset: 704)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !679, line: 60, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !679, line: 48, size: 256, elements: !729)
!729 = !{!730, !731, !732, !733}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !728, file: !679, line: 49, baseType: !564, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !728, file: !679, line: 58, baseType: !559, size: 128, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !728, file: !679, line: 59, baseType: !20, size: 32, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !728, file: !679, line: 59, baseType: !20, size: 32, offset: 224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !716, file: !679, line: 70, baseType: !20, size: 32, offset: 960)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !716, file: !679, line: 74, baseType: !20, size: 32, offset: 992)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !675, file: !674, line: 1218, baseType: !737, size: 64, offset: 960)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !84, line: 838, size: 768, elements: !739)
!739 = !{!740, !754, !755, !765, !766, !797, !798, !799, !800, !801, !802, !803}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !738, file: !84, line: 840, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !72, line: 499, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !72, line: 486, size: 1600, elements: !744)
!744 = !{!745, !746, !747, !748, !749, !750, !751, !752, !753}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !743, file: !72, line: 487, baseType: !678, size: 960)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !743, file: !72, line: 489, baseType: !559, size: 128, offset: 960)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !743, file: !72, line: 490, baseType: !559, size: 128, offset: 1088)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !743, file: !72, line: 491, baseType: !559, size: 128, offset: 1216)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !743, file: !72, line: 492, baseType: !559, size: 128, offset: 1344)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !743, file: !72, line: 494, baseType: !20, size: 32, offset: 1472)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !743, file: !72, line: 495, baseType: !20, size: 32, offset: 1504)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !743, file: !72, line: 497, baseType: !20, size: 32, offset: 1536)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !743, file: !72, line: 498, baseType: !20, size: 32, offset: 1568)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !738, file: !84, line: 844, baseType: !741, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !738, file: !84, line: 848, baseType: !756, size: 64, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !84, line: 549, baseType: !758)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !84, line: 544, size: 320, elements: !759)
!759 = !{!760, !762, !763, !764}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !758, file: !84, line: 545, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !758, file: !84, line: 545, baseType: !761, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !758, file: !84, line: 547, baseType: !741, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !758, file: !84, line: 548, baseType: !559, size: 128, offset: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !738, file: !84, line: 851, baseType: !559, size: 128, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !738, file: !84, line: 853, baseType: !767, size: 64, offset: 320)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !84, line: 594, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !84, line: 561, size: 1664, elements: !770)
!770 = !{!771, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !769, file: !84, line: 562, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !769, file: !84, line: 562, baseType: !772, size: 64, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !769, file: !84, line: 564, baseType: !559, size: 128, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !769, file: !84, line: 565, baseType: !741, size: 64, offset: 256)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !769, file: !84, line: 566, baseType: !756, size: 64, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !769, file: !84, line: 568, baseType: !559, size: 128, offset: 384)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !769, file: !84, line: 569, baseType: !559, size: 128, offset: 512)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !769, file: !84, line: 571, baseType: !569, size: 512, offset: 640)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !769, file: !84, line: 573, baseType: !607, size: 32, offset: 1152)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !769, file: !84, line: 574, baseType: !607, size: 32, offset: 1184)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !769, file: !84, line: 576, baseType: !607, size: 32, offset: 1216)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !769, file: !84, line: 576, baseType: !607, size: 32, offset: 1248)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !769, file: !84, line: 577, baseType: !607, size: 32, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !769, file: !84, line: 577, baseType: !607, size: 32, offset: 1312)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !769, file: !84, line: 579, baseType: !607, size: 32, offset: 1344)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !769, file: !84, line: 580, baseType: !607, size: 32, offset: 1376)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !769, file: !84, line: 582, baseType: !607, size: 32, offset: 1408)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !769, file: !84, line: 582, baseType: !607, size: 32, offset: 1440)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !769, file: !84, line: 583, baseType: !585, size: 16, offset: 1472)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !769, file: !84, line: 585, baseType: !585, size: 16, offset: 1488)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !769, file: !84, line: 586, baseType: !585, size: 16, offset: 1504)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !769, file: !84, line: 588, baseType: !585, size: 16, offset: 1520)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !769, file: !84, line: 590, baseType: !564, size: 64, offset: 1536)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !769, file: !84, line: 592, baseType: !20, size: 32, offset: 1600)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !769, file: !84, line: 593, baseType: !20, size: 32, offset: 1632)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !738, file: !84, line: 858, baseType: !559, size: 128, offset: 384)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !738, file: !84, line: 859, baseType: !559, size: 128, offset: 512)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !738, file: !84, line: 862, baseType: !20, size: 32, offset: 640)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !738, file: !84, line: 863, baseType: !20, size: 32, offset: 672)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !738, file: !84, line: 866, baseType: !585, size: 16, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !738, file: !84, line: 867, baseType: !585, size: 16, offset: 720)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !738, file: !84, line: 868, baseType: !607, size: 32, offset: 736)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !675, file: !674, line: 1220, baseType: !805, size: 64, offset: 1024)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !441, line: 115, size: 11392, elements: !807)
!807 = !{!808, !809, !810, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !828, !838, !840, !841, !882, !883, !894, !895, !911, !912, !913, !914, !915, !916, !917, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !934, !935, !936, !937, !938, !939, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1010, !1013, !1016, !1017, !1018, !1019, !1020, !1023, !1026, !1029, !1030, !1036, !1037, !1038, !1039, !1040, !1041, !1043, !1046, !1049, !1050, !1071, !1072}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !806, file: !441, line: 116, baseType: !678, size: 960)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !806, file: !441, line: 117, baseType: !737, size: 64, offset: 960)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !806, file: !441, line: 119, baseType: !811, size: 64, offset: 1024)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !441, line: 57, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !806, file: !441, line: 121, baseType: !585, size: 16, offset: 1088)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !806, file: !441, line: 121, baseType: !585, size: 16, offset: 1104)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !806, file: !441, line: 122, baseType: !20, size: 32, offset: 1120)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !806, file: !441, line: 122, baseType: !20, size: 32, offset: 1152)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !806, file: !441, line: 122, baseType: !20, size: 32, offset: 1184)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !806, file: !441, line: 123, baseType: !569, size: 512, offset: 1216)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !806, file: !441, line: 124, baseType: !805, size: 64, offset: 1728)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !806, file: !441, line: 124, baseType: !805, size: 64, offset: 1792)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !806, file: !441, line: 127, baseType: !805, size: 64, offset: 1856)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !806, file: !441, line: 127, baseType: !805, size: 64, offset: 1920)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !806, file: !441, line: 127, baseType: !805, size: 64, offset: 1984)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !806, file: !441, line: 128, baseType: !825, size: 64, offset: 2048)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !827, line: 46, flags: DIFlagFwdDecl)
!827 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!828 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !806, file: !441, line: 130, baseType: !829, size: 64, offset: 2112)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !441, line: 97, size: 832, elements: !831)
!831 = !{!832, !836, !837}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !830, file: !441, line: 98, baseType: !833, size: 768)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 768, elements: !834)
!834 = !{!835, !621}
!835 = !DISubrange(count: 8)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !441, line: 99, baseType: !20, size: 32, offset: 768)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !830, file: !441, line: 99, baseType: !20, size: 32, offset: 800)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !806, file: !441, line: 131, baseType: !839, size: 64, offset: 2176)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !806, file: !441, line: 132, baseType: !839, size: 64, offset: 2240)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !806, file: !441, line: 133, baseType: !842, size: 64, offset: 2304)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !72, line: 334, size: 1728, elements: !844)
!844 = !{!845, !846, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !881}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !843, file: !72, line: 335, baseType: !559, size: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !843, file: !72, line: 336, baseType: !847, size: 64, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !72, line: 47, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !843, file: !72, line: 338, baseType: !585, size: 16, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !843, file: !72, line: 338, baseType: !585, size: 16, offset: 208)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !843, file: !72, line: 339, baseType: !7, size: 32, offset: 224)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !843, file: !72, line: 340, baseType: !20, size: 32, offset: 256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !843, file: !72, line: 342, baseType: !607, size: 32, offset: 288)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !843, file: !72, line: 343, baseType: !657, size: 96, offset: 320)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !843, file: !72, line: 344, baseType: !657, size: 96, offset: 416)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !843, file: !72, line: 347, baseType: !559, size: 128, offset: 512)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !843, file: !72, line: 349, baseType: !20, size: 32, offset: 640)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !843, file: !72, line: 350, baseType: !20, size: 32, offset: 672)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !843, file: !72, line: 351, baseType: !564, size: 64, offset: 704)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !843, file: !72, line: 352, baseType: !564, size: 64, offset: 768)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !843, file: !72, line: 354, baseType: !862, size: 384, offset: 832)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !72, line: 116, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !72, line: 94, size: 384, elements: !864)
!864 = !{!865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !863, file: !72, line: 96, baseType: !20, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !863, file: !72, line: 96, baseType: !20, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !863, file: !72, line: 97, baseType: !20, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !863, file: !72, line: 97, baseType: !20, size: 32, offset: 96)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !863, file: !72, line: 99, baseType: !585, size: 16, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !863, file: !72, line: 100, baseType: !585, size: 16, offset: 144)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !863, file: !72, line: 102, baseType: !585, size: 16, offset: 160)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !863, file: !72, line: 105, baseType: !585, size: 16, offset: 176)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !863, file: !72, line: 108, baseType: !585, size: 16, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !863, file: !72, line: 109, baseType: !585, size: 16, offset: 208)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !863, file: !72, line: 111, baseType: !585, size: 16, offset: 224)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !863, file: !72, line: 112, baseType: !585, size: 16, offset: 240)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !863, file: !72, line: 114, baseType: !20, size: 32, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !863, file: !72, line: 114, baseType: !20, size: 32, offset: 288)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !863, file: !72, line: 115, baseType: !20, size: 32, offset: 320)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !863, file: !72, line: 115, baseType: !20, size: 32, offset: 352)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !843, file: !72, line: 355, baseType: !569, size: 512, offset: 1216)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !806, file: !441, line: 134, baseType: !564, size: 64, offset: 2368)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !806, file: !441, line: 136, baseType: !884, size: 64, offset: 2432)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !886, line: 130, size: 1216, elements: !887)
!886 = !DIFile(filename: "blender/source/blender/makesdna/DNA_gpencil_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!887 = !{!888, !889, !890, !891, !892, !893}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !885, file: !886, line: 131, baseType: !678, size: 960)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !885, file: !886, line: 134, baseType: !559, size: 128, offset: 960)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !885, file: !886, line: 135, baseType: !20, size: 32, offset: 1088)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer_size", scope: !885, file: !886, line: 141, baseType: !585, size: 16, offset: 1120)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer_sflag", scope: !885, file: !886, line: 142, baseType: !585, size: 16, offset: 1136)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "sbuffer", scope: !885, file: !886, line: 143, baseType: !564, size: 64, offset: 1152)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !806, file: !441, line: 138, baseType: !862, size: 384, offset: 2496)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !806, file: !441, line: 139, baseType: !896, size: 64, offset: 2880)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !72, line: 80, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !72, line: 72, size: 192, elements: !899)
!899 = !{!900, !907, !908, !909, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !898, file: !72, line: 73, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !72, line: 59, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !72, line: 56, size: 128, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !903, file: !72, line: 57, baseType: !657, size: 96)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !903, file: !72, line: 58, baseType: !20, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !898, file: !72, line: 74, baseType: !20, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !898, file: !72, line: 76, baseType: !20, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !898, file: !72, line: 77, baseType: !20, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !898, file: !72, line: 79, baseType: !20, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !806, file: !441, line: 141, baseType: !559, size: 128, offset: 2944)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !806, file: !441, line: 142, baseType: !559, size: 128, offset: 3072)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !806, file: !441, line: 143, baseType: !559, size: 128, offset: 3200)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !806, file: !441, line: 144, baseType: !559, size: 128, offset: 3328)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !806, file: !441, line: 146, baseType: !20, size: 32, offset: 3456)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !806, file: !441, line: 147, baseType: !20, size: 32, offset: 3488)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !806, file: !441, line: 150, baseType: !918, size: 64, offset: 3520)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !615, line: 46, flags: DIFlagFwdDecl)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !806, file: !441, line: 151, baseType: !654, size: 64, offset: 3584)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !806, file: !441, line: 152, baseType: !20, size: 32, offset: 3648)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !806, file: !441, line: 153, baseType: !20, size: 32, offset: 3680)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !806, file: !441, line: 156, baseType: !657, size: 96, offset: 3712)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !806, file: !441, line: 156, baseType: !657, size: 96, offset: 3808)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !806, file: !441, line: 156, baseType: !657, size: 96, offset: 3904)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !806, file: !441, line: 157, baseType: !657, size: 96, offset: 4000)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !806, file: !441, line: 158, baseType: !657, size: 96, offset: 4096)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !806, file: !441, line: 159, baseType: !657, size: 96, offset: 4192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !806, file: !441, line: 160, baseType: !657, size: 96, offset: 4288)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !806, file: !441, line: 160, baseType: !657, size: 96, offset: 4384)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !806, file: !441, line: 161, baseType: !933, size: 128, offset: 4480)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !580)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !806, file: !441, line: 161, baseType: !933, size: 128, offset: 4608)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !806, file: !441, line: 162, baseType: !657, size: 96, offset: 4736)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !806, file: !441, line: 162, baseType: !657, size: 96, offset: 4832)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !806, file: !441, line: 163, baseType: !607, size: 32, offset: 4928)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !806, file: !441, line: 163, baseType: !607, size: 32, offset: 4960)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !806, file: !441, line: 164, baseType: !940, size: 512, offset: 4992)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !941)
!941 = !{!581, !581}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !806, file: !441, line: 165, baseType: !940, size: 512, offset: 5504)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !806, file: !441, line: 166, baseType: !940, size: 512, offset: 6016)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !806, file: !441, line: 167, baseType: !940, size: 512, offset: 6528)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !806, file: !441, line: 176, baseType: !940, size: 512, offset: 7040)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !806, file: !441, line: 178, baseType: !7, size: 32, offset: 7552)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !806, file: !441, line: 180, baseType: !585, size: 16, offset: 7584)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !806, file: !441, line: 181, baseType: !585, size: 16, offset: 7600)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !806, file: !441, line: 183, baseType: !585, size: 16, offset: 7616)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !806, file: !441, line: 183, baseType: !585, size: 16, offset: 7632)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !806, file: !441, line: 184, baseType: !585, size: 16, offset: 7648)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !806, file: !441, line: 184, baseType: !585, size: 16, offset: 7664)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !806, file: !441, line: 185, baseType: !585, size: 16, offset: 7680)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !806, file: !441, line: 186, baseType: !585, size: 16, offset: 7696)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !806, file: !441, line: 187, baseType: !585, size: 16, offset: 7712)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !806, file: !441, line: 188, baseType: !570, size: 8, offset: 7728)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !806, file: !441, line: 189, baseType: !570, size: 8, offset: 7736)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !806, file: !441, line: 192, baseType: !20, size: 32, offset: 7744)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !806, file: !441, line: 192, baseType: !20, size: 32, offset: 7776)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !806, file: !441, line: 192, baseType: !20, size: 32, offset: 7808)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !806, file: !441, line: 192, baseType: !20, size: 32, offset: 7840)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !806, file: !441, line: 194, baseType: !20, size: 32, offset: 7872)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !806, file: !441, line: 202, baseType: !607, size: 32, offset: 7904)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !806, file: !441, line: 202, baseType: !607, size: 32, offset: 7936)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !806, file: !441, line: 202, baseType: !607, size: 32, offset: 7968)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !806, file: !441, line: 211, baseType: !607, size: 32, offset: 8000)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !806, file: !441, line: 212, baseType: !607, size: 32, offset: 8032)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !806, file: !441, line: 213, baseType: !607, size: 32, offset: 8064)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !806, file: !441, line: 214, baseType: !607, size: 32, offset: 8096)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !806, file: !441, line: 215, baseType: !607, size: 32, offset: 8128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !806, file: !441, line: 216, baseType: !607, size: 32, offset: 8160)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !806, file: !441, line: 219, baseType: !607, size: 32, offset: 8192)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !806, file: !441, line: 220, baseType: !607, size: 32, offset: 8224)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !806, file: !441, line: 221, baseType: !607, size: 32, offset: 8256)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !806, file: !441, line: 224, baseType: !976, size: 16, offset: 8288)
!976 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !806, file: !441, line: 224, baseType: !976, size: 16, offset: 8304)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !806, file: !441, line: 226, baseType: !585, size: 16, offset: 8320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !806, file: !441, line: 228, baseType: !570, size: 8, offset: 8336)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !806, file: !441, line: 229, baseType: !570, size: 8, offset: 8344)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !806, file: !441, line: 231, baseType: !585, size: 16, offset: 8352)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !806, file: !441, line: 232, baseType: !570, size: 8, offset: 8368)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !806, file: !441, line: 233, baseType: !570, size: 8, offset: 8376)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !806, file: !441, line: 234, baseType: !607, size: 32, offset: 8384)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !806, file: !441, line: 235, baseType: !607, size: 32, offset: 8416)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !806, file: !441, line: 237, baseType: !559, size: 128, offset: 8448)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !806, file: !441, line: 238, baseType: !559, size: 128, offset: 8576)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !806, file: !441, line: 239, baseType: !559, size: 128, offset: 8704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !806, file: !441, line: 240, baseType: !559, size: 128, offset: 8832)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !806, file: !441, line: 242, baseType: !607, size: 32, offset: 8960)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !806, file: !441, line: 244, baseType: !585, size: 16, offset: 8992)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !806, file: !441, line: 245, baseType: !976, size: 16, offset: 9008)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !806, file: !441, line: 246, baseType: !933, size: 128, offset: 9024)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !806, file: !441, line: 248, baseType: !20, size: 32, offset: 9152)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !806, file: !441, line: 249, baseType: !20, size: 32, offset: 9184)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !806, file: !441, line: 251, baseType: !997, size: 64, offset: 9216)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !441, line: 251, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !806, file: !441, line: 253, baseType: !570, size: 8, offset: 9280)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !806, file: !441, line: 254, baseType: !570, size: 8, offset: 9288)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !806, file: !441, line: 255, baseType: !585, size: 16, offset: 9296)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !806, file: !441, line: 256, baseType: !657, size: 96, offset: 9312)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !806, file: !441, line: 258, baseType: !559, size: 128, offset: 9408)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !806, file: !441, line: 259, baseType: !559, size: 128, offset: 9536)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !806, file: !441, line: 260, baseType: !559, size: 128, offset: 9664)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !806, file: !441, line: 261, baseType: !559, size: 128, offset: 9792)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !806, file: !441, line: 263, baseType: !1008, size: 64, offset: 9920)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !441, line: 52, flags: DIFlagFwdDecl)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !806, file: !441, line: 264, baseType: !1011, size: 64, offset: 9984)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !441, line: 53, flags: DIFlagFwdDecl)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !806, file: !441, line: 265, baseType: !1014, size: 64, offset: 10048)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !72, line: 46, flags: DIFlagFwdDecl)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !806, file: !441, line: 267, baseType: !570, size: 8, offset: 10112)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !806, file: !441, line: 268, baseType: !570, size: 8, offset: 10120)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !806, file: !441, line: 269, baseType: !585, size: 16, offset: 10128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !806, file: !441, line: 270, baseType: !607, size: 32, offset: 10144)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !806, file: !441, line: 272, baseType: !1021, size: 64, offset: 10176)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !441, line: 54, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !806, file: !441, line: 275, baseType: !1024, size: 64, offset: 10240)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !441, line: 275, flags: DIFlagFwdDecl)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !806, file: !441, line: 277, baseType: !1027, size: 64, offset: 10304)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !441, line: 56, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !806, file: !441, line: 277, baseType: !1027, size: 64, offset: 10368)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !806, file: !441, line: 278, baseType: !1031, size: 64, offset: 10432)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1032, line: 27, baseType: !1033)
!1032 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1034, line: 45, baseType: !1035)
!1034 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1035 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !806, file: !441, line: 279, baseType: !1031, size: 64, offset: 10496)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !806, file: !441, line: 280, baseType: !7, size: 32, offset: 10560)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !806, file: !441, line: 281, baseType: !7, size: 32, offset: 10592)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !806, file: !441, line: 283, baseType: !559, size: 128, offset: 10624)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !806, file: !441, line: 284, baseType: !559, size: 128, offset: 10752)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !806, file: !441, line: 285, baseType: !1042, size: 64, offset: 10880)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !806, file: !441, line: 287, baseType: !1044, size: 64, offset: 10944)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !441, line: 59, flags: DIFlagFwdDecl)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !806, file: !441, line: 288, baseType: !1047, size: 64, offset: 11008)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !441, line: 288, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !806, file: !441, line: 290, baseType: !643, size: 64, offset: 11072)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !806, file: !441, line: 291, baseType: !1051, size: 64, offset: 11136)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1053, line: 65, baseType: !1054)
!1053 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1053, line: 50, size: 320, elements: !1055)
!1055 = !{!1056, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1054, file: !1053, line: 51, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1054, file: !1053, line: 53, baseType: !20, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1054, file: !1053, line: 54, baseType: !20, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1054, file: !1053, line: 55, baseType: !20, size: 32, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1054, file: !1053, line: 55, baseType: !20, size: 32, offset: 160)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1054, file: !1053, line: 56, baseType: !570, size: 8, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1054, file: !1053, line: 56, baseType: !570, size: 8, offset: 200)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1054, file: !1053, line: 57, baseType: !570, size: 8, offset: 208)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1054, file: !1053, line: 57, baseType: !570, size: 8, offset: 216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1054, file: !1053, line: 59, baseType: !585, size: 16, offset: 224)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1054, file: !1053, line: 59, baseType: !585, size: 16, offset: 240)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1054, file: !1053, line: 59, baseType: !585, size: 16, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1054, file: !1053, line: 61, baseType: !585, size: 16, offset: 272)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1054, file: !1053, line: 63, baseType: !20, size: 32, offset: 288)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !806, file: !441, line: 293, baseType: !559, size: 128, offset: 11200)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !806, file: !441, line: 294, baseType: !1073, size: 64, offset: 11328)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !441, line: 113, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !441, line: 108, size: 256, elements: !1076)
!1076 = !{!1077, !1079, !1080, !1081, !1082}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1075, file: !441, line: 109, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1075, file: !441, line: 109, baseType: !1078, size: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1075, file: !441, line: 110, baseType: !805, size: 64, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1075, file: !441, line: 111, baseType: !20, size: 32, offset: 192)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1075, file: !441, line: 112, baseType: !607, size: 32, offset: 224)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !675, file: !674, line: 1221, baseType: !1084, size: 64, offset: 1088)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !674, line: 52, flags: DIFlagFwdDecl)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !675, file: !674, line: 1223, baseType: !1057, size: 64, offset: 1152)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !675, file: !674, line: 1225, baseType: !559, size: 128, offset: 1216)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !675, file: !674, line: 1226, baseType: !1089, size: 64, offset: 1344)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !674, line: 69, size: 320, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1090, file: !674, line: 70, baseType: !1089, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1090, file: !674, line: 70, baseType: !1089, size: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1090, file: !674, line: 71, baseType: !7, size: 32, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1090, file: !674, line: 71, baseType: !7, size: 32, offset: 160)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1090, file: !674, line: 72, baseType: !20, size: 32, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1090, file: !674, line: 73, baseType: !585, size: 16, offset: 224)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1090, file: !674, line: 73, baseType: !585, size: 16, offset: 240)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1090, file: !674, line: 74, baseType: !805, size: 64, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !675, file: !674, line: 1227, baseType: !805, size: 64, offset: 1408)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !675, file: !674, line: 1229, baseType: !657, size: 96, offset: 1472)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !675, file: !674, line: 1230, baseType: !657, size: 96, offset: 1568)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !675, file: !674, line: 1231, baseType: !657, size: 96, offset: 1664)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !675, file: !674, line: 1231, baseType: !657, size: 96, offset: 1760)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !675, file: !674, line: 1233, baseType: !7, size: 32, offset: 1856)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !675, file: !674, line: 1234, baseType: !20, size: 32, offset: 1888)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !675, file: !674, line: 1235, baseType: !7, size: 32, offset: 1920)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !675, file: !674, line: 1237, baseType: !585, size: 16, offset: 1952)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !675, file: !674, line: 1239, baseType: !570, size: 8, offset: 1968)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !675, file: !674, line: 1240, baseType: !1111, size: 8, offset: 1976)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 8, elements: !1112)
!1112 = !{!1113}
!1113 = !DISubrange(count: 1)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !675, file: !674, line: 1242, baseType: !1115, size: 64, offset: 1984)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1117, line: 328, size: 3456, elements: !1118)
!1117 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1118 = !{!1119, !1120, !1121, !1124, !1125, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1153, !1154, !1155, !1158, !1163, !1164, !1167, !1171, !1175, !1179, !1183, !1184, !1185, !1186}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1116, file: !1117, line: 329, baseType: !678, size: 960)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1116, file: !1117, line: 330, baseType: !737, size: 64, offset: 960)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1116, file: !1117, line: 332, baseType: !1122, size: 64, offset: 1024)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1117, line: 332, flags: DIFlagFwdDecl)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1116, file: !1117, line: 333, baseType: !569, size: 512, offset: 1088)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1116, file: !1117, line: 335, baseType: !1126, size: 64, offset: 1600)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !455, line: 41, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1116, file: !1117, line: 337, baseType: !884, size: 64, offset: 1664)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1116, file: !1117, line: 338, baseType: !643, size: 64, offset: 1728)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1116, file: !1117, line: 340, baseType: !559, size: 128, offset: 1792)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1116, file: !1117, line: 340, baseType: !559, size: 128, offset: 1920)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1116, file: !1117, line: 342, baseType: !20, size: 32, offset: 2048)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1116, file: !1117, line: 342, baseType: !20, size: 32, offset: 2080)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1116, file: !1117, line: 343, baseType: !20, size: 32, offset: 2112)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1116, file: !1117, line: 345, baseType: !20, size: 32, offset: 2144)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1116, file: !1117, line: 346, baseType: !20, size: 32, offset: 2176)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1116, file: !1117, line: 347, baseType: !585, size: 16, offset: 2208)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1116, file: !1117, line: 348, baseType: !585, size: 16, offset: 2224)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1116, file: !1117, line: 349, baseType: !20, size: 32, offset: 2240)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1116, file: !1117, line: 351, baseType: !20, size: 32, offset: 2272)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1116, file: !1117, line: 353, baseType: !585, size: 16, offset: 2304)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1116, file: !1117, line: 354, baseType: !585, size: 16, offset: 2320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1116, file: !1117, line: 355, baseType: !20, size: 32, offset: 2336)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1116, file: !1117, line: 357, baseType: !1145, size: 128, offset: 2368)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1146, line: 95, baseType: !1147)
!1146 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1146, line: 92, size: 128, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1147, file: !1146, line: 93, baseType: !607, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1147, file: !1146, line: 93, baseType: !607, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1147, file: !1146, line: 94, baseType: !607, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1147, file: !1146, line: 94, baseType: !607, size: 32, offset: 96)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1116, file: !1117, line: 363, baseType: !559, size: 128, offset: 2496)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1116, file: !1117, line: 363, baseType: !559, size: 128, offset: 2624)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1116, file: !1117, line: 368, baseType: !1156, size: 64, offset: 2752)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1117, line: 48, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1116, file: !1117, line: 372, baseType: !1159, size: 32, offset: 2816)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1117, line: 274, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1117, line: 271, size: 32, elements: !1161)
!1161 = !{!1162}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1160, file: !1117, line: 273, baseType: !7, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1116, file: !1117, line: 373, baseType: !20, size: 32, offset: 2848)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1116, file: !1117, line: 382, baseType: !1165, size: 64, offset: 2880)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1117, line: 46, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1116, file: !1117, line: 385, baseType: !1168, size: 64, offset: 2944)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{null, !564, !607}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1116, file: !1117, line: 386, baseType: !1172, size: 64, offset: 3008)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null, !564, !654}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1116, file: !1117, line: 387, baseType: !1176, size: 64, offset: 3072)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!20, !564}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1116, file: !1117, line: 388, baseType: !1180, size: 64, offset: 3136)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !564}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1116, file: !1117, line: 389, baseType: !564, size: 64, offset: 3200)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1116, file: !1117, line: 389, baseType: !564, size: 64, offset: 3264)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1116, file: !1117, line: 389, baseType: !564, size: 64, offset: 3328)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1116, file: !1117, line: 389, baseType: !564, size: 64, offset: 3392)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !675, file: !674, line: 1244, baseType: !1188, size: 64, offset: 2048)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1190, line: 200, size: 17024, elements: !1191)
!1190 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1191 = !{!1192, !1193, !1194, !1195, !1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1189, file: !1190, line: 201, baseType: !1042, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1189, file: !1190, line: 202, baseType: !559, size: 128, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1189, file: !1190, line: 203, baseType: !559, size: 128, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1189, file: !1190, line: 206, baseType: !1196, size: 64, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1190, line: 190, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1190, line: 126, size: 2816, elements: !1199)
!1199 = !{!1200, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1295, !1296, !1297, !1298, !1576, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1613}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1198, file: !1190, line: 127, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1198, file: !1190, line: 127, baseType: !1201, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1198, file: !1190, line: 128, baseType: !564, size: 64, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1198, file: !1190, line: 129, baseType: !564, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1198, file: !1190, line: 130, baseType: !569, size: 512, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1198, file: !1190, line: 132, baseType: !20, size: 32, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1198, file: !1190, line: 132, baseType: !20, size: 32, offset: 800)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1198, file: !1190, line: 133, baseType: !20, size: 32, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1198, file: !1190, line: 134, baseType: !20, size: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1198, file: !1190, line: 134, baseType: !20, size: 32, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1198, file: !1190, line: 134, baseType: !20, size: 32, offset: 928)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1198, file: !1190, line: 135, baseType: !20, size: 32, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1198, file: !1190, line: 135, baseType: !20, size: 32, offset: 992)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1198, file: !1190, line: 136, baseType: !20, size: 32, offset: 1024)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1198, file: !1190, line: 136, baseType: !20, size: 32, offset: 1056)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1198, file: !1190, line: 137, baseType: !20, size: 32, offset: 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1198, file: !1190, line: 137, baseType: !20, size: 32, offset: 1120)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1198, file: !1190, line: 138, baseType: !607, size: 32, offset: 1152)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1198, file: !1190, line: 139, baseType: !607, size: 32, offset: 1184)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1198, file: !1190, line: 139, baseType: !607, size: 32, offset: 1216)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1198, file: !1190, line: 141, baseType: !585, size: 16, offset: 1248)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1198, file: !1190, line: 142, baseType: !585, size: 16, offset: 1264)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1198, file: !1190, line: 143, baseType: !20, size: 32, offset: 1280)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1198, file: !1190, line: 144, baseType: !20, size: 32, offset: 1312)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1198, file: !1190, line: 146, baseType: !1226, size: 64, offset: 1344)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1190, line: 114, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1190, line: 99, size: 7232, elements: !1229)
!1229 = !{!1230, !1232, !1233, !1234, !1235, !1236, !1237, !1245, !1249, !1263, !1272, !1279, !1289}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1228, file: !1190, line: 100, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1228, file: !1190, line: 100, baseType: !1231, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1228, file: !1190, line: 101, baseType: !20, size: 32, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1228, file: !1190, line: 101, baseType: !20, size: 32, offset: 160)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1228, file: !1190, line: 102, baseType: !20, size: 32, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1228, file: !1190, line: 102, baseType: !20, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1228, file: !1190, line: 103, baseType: !1238, size: 64, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1190, line: 59, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1190, line: 56, size: 2112, elements: !1241)
!1241 = !{!1242, !1243, !1244}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1240, file: !1190, line: 57, baseType: !602, size: 2048)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1240, file: !1190, line: 58, baseType: !20, size: 32, offset: 2048)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1240, file: !1190, line: 58, baseType: !20, size: 32, offset: 2080)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1228, file: !1190, line: 106, baseType: !1246, size: 6144, offset: 320)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 6144, elements: !1247)
!1247 = !{!1248}
!1248 = !DISubrange(count: 768)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1228, file: !1190, line: 107, baseType: !1250, size: 64, offset: 6464)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1190, line: 97, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1190, line: 83, size: 8320, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1259, !1260, !1261, !1262}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1252, file: !1190, line: 84, baseType: !1246, size: 6144)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1252, file: !1190, line: 87, baseType: !602, size: 2048, offset: 6144)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1252, file: !1190, line: 88, baseType: !1257, size: 64, offset: 8192)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1053, line: 41, flags: DIFlagFwdDecl)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1252, file: !1190, line: 90, baseType: !585, size: 16, offset: 8256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1252, file: !1190, line: 92, baseType: !585, size: 16, offset: 8272)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1252, file: !1190, line: 93, baseType: !585, size: 16, offset: 8288)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1252, file: !1190, line: 95, baseType: !585, size: 16, offset: 8304)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1228, file: !1190, line: 108, baseType: !1264, size: 64, offset: 6528)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1190, line: 66, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1190, line: 61, size: 128, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1266, file: !1190, line: 62, baseType: !20, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1266, file: !1190, line: 63, baseType: !20, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1266, file: !1190, line: 64, baseType: !20, size: 32, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1266, file: !1190, line: 65, baseType: !20, size: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1228, file: !1190, line: 109, baseType: !1273, size: 64, offset: 6592)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1190, line: 71, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1190, line: 68, size: 64, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1275, file: !1190, line: 69, baseType: !20, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1275, file: !1190, line: 70, baseType: !20, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1228, file: !1190, line: 110, baseType: !1280, size: 64, offset: 6656)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1190, line: 81, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1190, line: 73, size: 352, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1282, file: !1190, line: 74, baseType: !657, size: 96)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1282, file: !1190, line: 75, baseType: !657, size: 96, offset: 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1282, file: !1190, line: 76, baseType: !657, size: 96, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1282, file: !1190, line: 77, baseType: !20, size: 32, offset: 288)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1282, file: !1190, line: 78, baseType: !20, size: 32, offset: 320)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1228, file: !1190, line: 113, baseType: !1290, size: 512, offset: 6720)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1291, line: 182, baseType: !1292)
!1291 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1291, line: 180, size: 512, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1292, file: !1291, line: 181, baseType: !569, size: 512)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1198, file: !1190, line: 148, baseType: !825, size: 64, offset: 1408)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1198, file: !1190, line: 151, baseType: !1057, size: 64, offset: 1472)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1198, file: !1190, line: 152, baseType: !805, size: 64, offset: 1536)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1198, file: !1190, line: 153, baseType: !1299, size: 64, offset: 1600)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1301, line: 64, size: 19136, elements: !1302)
!1301 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1302 = !{!1303, !1304, !1305, !1306, !1307, !1308, !1310, !1311, !1312, !1313, !1316, !1317, !1562, !1563, !1571, !1572, !1573, !1574, !1575}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1300, file: !1301, line: 65, baseType: !678, size: 960)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1300, file: !1301, line: 66, baseType: !737, size: 64, offset: 960)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1300, file: !1301, line: 68, baseType: !697, size: 8192, offset: 1024)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1300, file: !1301, line: 70, baseType: !20, size: 32, offset: 9216)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1300, file: !1301, line: 71, baseType: !20, size: 32, offset: 9248)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1300, file: !1301, line: 72, baseType: !1309, size: 64, offset: 9280)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !644)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1300, file: !1301, line: 74, baseType: !607, size: 32, offset: 9344)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1300, file: !1301, line: 74, baseType: !607, size: 32, offset: 9376)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1300, file: !1301, line: 76, baseType: !1257, size: 64, offset: 9408)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1300, file: !1301, line: 77, baseType: !1314, size: 64, offset: 9472)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1301, line: 77, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1300, file: !1301, line: 78, baseType: !884, size: 64, offset: 9536)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1300, file: !1301, line: 80, baseType: !1318, size: 2624, offset: 9600)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1319, line: 340, size: 2624, elements: !1320)
!1319 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1320 = !{!1321, !1349, !1367, !1368, !1369, !1384, !1442, !1443, !1542, !1543, !1544, !1545, !1551}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1318, file: !1319, line: 341, baseType: !1322, size: 576)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1319, line: 251, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1319, line: 207, size: 576, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1323, file: !1319, line: 208, baseType: !20, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1323, file: !1319, line: 211, baseType: !585, size: 16, offset: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1323, file: !1319, line: 212, baseType: !585, size: 16, offset: 48)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1323, file: !1319, line: 213, baseType: !607, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1323, file: !1319, line: 214, baseType: !585, size: 16, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1323, file: !1319, line: 215, baseType: !585, size: 16, offset: 112)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1323, file: !1319, line: 216, baseType: !585, size: 16, offset: 128)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1323, file: !1319, line: 217, baseType: !585, size: 16, offset: 144)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1323, file: !1319, line: 218, baseType: !585, size: 16, offset: 160)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1323, file: !1319, line: 219, baseType: !585, size: 16, offset: 176)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1323, file: !1319, line: 220, baseType: !607, size: 32, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1323, file: !1319, line: 222, baseType: !585, size: 16, offset: 224)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1323, file: !1319, line: 225, baseType: !585, size: 16, offset: 240)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1323, file: !1319, line: 228, baseType: !20, size: 32, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1323, file: !1319, line: 229, baseType: !20, size: 32, offset: 288)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1323, file: !1319, line: 233, baseType: !20, size: 32, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1323, file: !1319, line: 236, baseType: !585, size: 16, offset: 352)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1323, file: !1319, line: 236, baseType: !585, size: 16, offset: 368)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1323, file: !1319, line: 241, baseType: !607, size: 32, offset: 384)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1323, file: !1319, line: 244, baseType: !20, size: 32, offset: 416)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1323, file: !1319, line: 244, baseType: !20, size: 32, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1323, file: !1319, line: 245, baseType: !607, size: 32, offset: 480)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1323, file: !1319, line: 248, baseType: !607, size: 32, offset: 512)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1323, file: !1319, line: 250, baseType: !20, size: 32, offset: 544)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1318, file: !1319, line: 342, baseType: !1350, size: 448, offset: 576)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1319, line: 79, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1319, line: 61, size: 448, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1351, file: !1319, line: 62, baseType: !564, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1351, file: !1319, line: 64, baseType: !585, size: 16, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1351, file: !1319, line: 65, baseType: !585, size: 16, offset: 80)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1351, file: !1319, line: 67, baseType: !607, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1351, file: !1319, line: 68, baseType: !607, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1351, file: !1319, line: 69, baseType: !607, size: 32, offset: 160)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1351, file: !1319, line: 70, baseType: !585, size: 16, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1351, file: !1319, line: 71, baseType: !585, size: 16, offset: 208)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1351, file: !1319, line: 72, baseType: !643, size: 64, offset: 224)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1351, file: !1319, line: 75, baseType: !607, size: 32, offset: 288)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1351, file: !1319, line: 75, baseType: !607, size: 32, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1351, file: !1319, line: 75, baseType: !607, size: 32, offset: 352)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1351, file: !1319, line: 78, baseType: !607, size: 32, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1351, file: !1319, line: 78, baseType: !607, size: 32, offset: 416)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1318, file: !1319, line: 343, baseType: !559, size: 128, offset: 1024)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1318, file: !1319, line: 344, baseType: !559, size: 128, offset: 1152)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1318, file: !1319, line: 345, baseType: !1370, size: 192, offset: 1280)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1319, line: 278, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1319, line: 270, size: 192, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1371, file: !1319, line: 271, baseType: !20, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1371, file: !1319, line: 273, baseType: !607, size: 32, offset: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1371, file: !1319, line: 275, baseType: !20, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1371, file: !1319, line: 276, baseType: !20, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1371, file: !1319, line: 277, baseType: !1378, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1319, line: 55, size: 576, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1379, file: !1319, line: 56, baseType: !20, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1379, file: !1319, line: 57, baseType: !607, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1379, file: !1319, line: 58, baseType: !940, size: 512, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1318, file: !1319, line: 346, baseType: !1385, size: 384, offset: 1472)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1319, line: 268, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1319, line: 253, size: 384, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392, !1436, !1437, !1438, !1439, !1440, !1441}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1386, file: !1319, line: 254, baseType: !20, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1386, file: !1319, line: 255, baseType: !20, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1386, file: !1319, line: 255, baseType: !20, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1386, file: !1319, line: 258, baseType: !607, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1386, file: !1319, line: 259, baseType: !1393, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1319, line: 164, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1319, line: 108, size: 1664, elements: !1396)
!1396 = !{!1397, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1395, file: !1319, line: 109, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1395, file: !1319, line: 109, baseType: !1398, size: 64, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1395, file: !1319, line: 111, baseType: !569, size: 512, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1395, file: !1319, line: 119, baseType: !643, size: 64, offset: 640)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1395, file: !1319, line: 119, baseType: !643, size: 64, offset: 704)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1395, file: !1319, line: 125, baseType: !643, size: 64, offset: 768)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1395, file: !1319, line: 125, baseType: !643, size: 64, offset: 832)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1395, file: !1319, line: 127, baseType: !643, size: 64, offset: 896)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1395, file: !1319, line: 130, baseType: !20, size: 32, offset: 960)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1395, file: !1319, line: 131, baseType: !20, size: 32, offset: 992)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1395, file: !1319, line: 132, baseType: !1409, size: 64, offset: 1024)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1319, line: 106, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1319, line: 81, size: 512, elements: !1412)
!1412 = !{!1413, !1414, !1417, !1418, !1419, !1420}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1411, file: !1319, line: 82, baseType: !643, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1411, file: !1319, line: 97, baseType: !1415, size: 256, offset: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1416)
!1416 = !{!581, !645}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1411, file: !1319, line: 102, baseType: !643, size: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1411, file: !1319, line: 102, baseType: !643, size: 64, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1411, file: !1319, line: 104, baseType: !20, size: 32, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1411, file: !1319, line: 105, baseType: !20, size: 32, offset: 480)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1395, file: !1319, line: 135, baseType: !657, size: 96, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1395, file: !1319, line: 136, baseType: !607, size: 32, offset: 1184)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1395, file: !1319, line: 139, baseType: !20, size: 32, offset: 1216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1395, file: !1319, line: 139, baseType: !20, size: 32, offset: 1248)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1395, file: !1319, line: 139, baseType: !20, size: 32, offset: 1280)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1395, file: !1319, line: 140, baseType: !657, size: 96, offset: 1312)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1395, file: !1319, line: 143, baseType: !585, size: 16, offset: 1408)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1395, file: !1319, line: 144, baseType: !585, size: 16, offset: 1424)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1395, file: !1319, line: 145, baseType: !585, size: 16, offset: 1440)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1395, file: !1319, line: 148, baseType: !585, size: 16, offset: 1456)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1395, file: !1319, line: 149, baseType: !20, size: 32, offset: 1472)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1395, file: !1319, line: 150, baseType: !607, size: 32, offset: 1504)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1395, file: !1319, line: 152, baseType: !884, size: 64, offset: 1536)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1395, file: !1319, line: 163, baseType: !607, size: 32, offset: 1600)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1395, file: !1319, line: 163, baseType: !607, size: 32, offset: 1632)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1386, file: !1319, line: 261, baseType: !607, size: 32, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1386, file: !1319, line: 261, baseType: !607, size: 32, offset: 224)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1386, file: !1319, line: 261, baseType: !607, size: 32, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1386, file: !1319, line: 263, baseType: !20, size: 32, offset: 288)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1386, file: !1319, line: 266, baseType: !20, size: 32, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1386, file: !1319, line: 267, baseType: !607, size: 32, offset: 352)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1318, file: !1319, line: 347, baseType: !1393, size: 64, offset: 1856)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1318, file: !1319, line: 348, baseType: !1444, size: 64, offset: 1920)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1319, line: 205, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1319, line: 186, size: 1024, elements: !1447)
!1447 = !{!1448, !1450, !1451, !1452, !1454, !1455, !1456, !1464, !1465, !1466, !1540, !1541}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1446, file: !1319, line: 187, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1446, file: !1319, line: 187, baseType: !1449, size: 64, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1446, file: !1319, line: 189, baseType: !569, size: 512, offset: 128)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1446, file: !1319, line: 191, baseType: !1453, size: 64, offset: 640)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1446, file: !1319, line: 193, baseType: !20, size: 32, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1446, file: !1319, line: 193, baseType: !20, size: 32, offset: 736)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1446, file: !1319, line: 195, baseType: !1457, size: 64, offset: 768)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1319, line: 184, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1319, line: 166, size: 320, elements: !1460)
!1460 = !{!1461, !1462, !1463}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1459, file: !1319, line: 180, baseType: !1415, size: 256)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1459, file: !1319, line: 182, baseType: !20, size: 32, offset: 256)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1459, file: !1319, line: 183, baseType: !20, size: 32, offset: 288)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1446, file: !1319, line: 196, baseType: !20, size: 32, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1446, file: !1319, line: 198, baseType: !20, size: 32, offset: 864)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1446, file: !1319, line: 200, baseType: !1467, size: 64, offset: 896)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1053, line: 77, size: 15424, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1475, !1478, !1479, !1482, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1501, !1502, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1534}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1468, file: !1053, line: 78, baseType: !678, size: 960)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1468, file: !1053, line: 80, baseType: !697, size: 8192, offset: 960)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1468, file: !1053, line: 82, baseType: !1473, size: 64, offset: 9152)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1053, line: 43, flags: DIFlagFwdDecl)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1468, file: !1053, line: 83, baseType: !1476, size: 64, offset: 9216)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !679, line: 46, flags: DIFlagFwdDecl)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1468, file: !1053, line: 86, baseType: !1257, size: 64, offset: 9280)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1468, file: !1053, line: 87, baseType: !1480, size: 64, offset: 9344)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1053, line: 44, flags: DIFlagFwdDecl)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1468, file: !1053, line: 89, baseType: !1483, size: 512, offset: 9408)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 512, elements: !1484)
!1484 = !{!835}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1468, file: !1053, line: 90, baseType: !585, size: 16, offset: 9920)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1468, file: !1053, line: 90, baseType: !585, size: 16, offset: 9936)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1468, file: !1053, line: 92, baseType: !585, size: 16, offset: 9952)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1468, file: !1053, line: 92, baseType: !585, size: 16, offset: 9968)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1468, file: !1053, line: 93, baseType: !585, size: 16, offset: 9984)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1468, file: !1053, line: 93, baseType: !585, size: 16, offset: 10000)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1468, file: !1053, line: 94, baseType: !20, size: 32, offset: 10016)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1468, file: !1053, line: 97, baseType: !585, size: 16, offset: 10048)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1468, file: !1053, line: 97, baseType: !585, size: 16, offset: 10064)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1468, file: !1053, line: 98, baseType: !585, size: 16, offset: 10080)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1468, file: !1053, line: 98, baseType: !585, size: 16, offset: 10096)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1468, file: !1053, line: 99, baseType: !585, size: 16, offset: 10112)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1468, file: !1053, line: 99, baseType: !585, size: 16, offset: 10128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1468, file: !1053, line: 100, baseType: !7, size: 32, offset: 10144)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1468, file: !1053, line: 101, baseType: !1500, size: 64, offset: 10176)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1468, file: !1053, line: 103, baseType: !703, size: 64, offset: 10240)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1468, file: !1053, line: 104, baseType: !1503, size: 64, offset: 10304)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !679, line: 159, size: 448, elements: !1505)
!1505 = !{!1506, !1508, !1509, !1511, !1512, !1514}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1504, file: !679, line: 161, baseType: !1507, size: 64)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !644)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1504, file: !679, line: 162, baseType: !1507, size: 64, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1504, file: !679, line: 163, baseType: !1510, size: 32, offset: 128)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 32, elements: !644)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1504, file: !679, line: 164, baseType: !1510, size: 32, offset: 160)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1504, file: !679, line: 165, baseType: !1513, size: 128, offset: 192)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1500, size: 128, elements: !644)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1504, file: !679, line: 166, baseType: !1515, size: 128, offset: 320)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 128, elements: !644)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1468, file: !1053, line: 107, baseType: !607, size: 32, offset: 10368)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1468, file: !1053, line: 108, baseType: !20, size: 32, offset: 10400)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1468, file: !1053, line: 109, baseType: !585, size: 16, offset: 10432)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1468, file: !1053, line: 110, baseType: !585, size: 16, offset: 10448)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1468, file: !1053, line: 113, baseType: !20, size: 32, offset: 10464)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1468, file: !1053, line: 113, baseType: !20, size: 32, offset: 10496)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1468, file: !1053, line: 114, baseType: !570, size: 8, offset: 10528)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1468, file: !1053, line: 114, baseType: !570, size: 8, offset: 10536)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1468, file: !1053, line: 115, baseType: !585, size: 16, offset: 10544)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1468, file: !1053, line: 116, baseType: !933, size: 128, offset: 10560)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1468, file: !1053, line: 119, baseType: !607, size: 32, offset: 10688)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1468, file: !1053, line: 119, baseType: !607, size: 32, offset: 10720)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1468, file: !1053, line: 122, baseType: !1290, size: 512, offset: 10752)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1468, file: !1053, line: 123, baseType: !570, size: 8, offset: 11264)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1468, file: !1053, line: 125, baseType: !1531, size: 56, offset: 11272)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 56, elements: !1532)
!1532 = !{!1533}
!1533 = !DISubrange(count: 7)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1468, file: !1053, line: 126, baseType: !1535, size: 4096, offset: 11328)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1536, size: 4096, elements: !1484)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1053, line: 69, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1053, line: 67, size: 512, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1537, file: !1053, line: 68, baseType: !569, size: 512)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1446, file: !1319, line: 201, baseType: !607, size: 32, offset: 960)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1446, file: !1319, line: 204, baseType: !20, size: 32, offset: 992)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1318, file: !1319, line: 350, baseType: !559, size: 128, offset: 1984)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1318, file: !1319, line: 351, baseType: !20, size: 32, offset: 2112)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1318, file: !1319, line: 351, baseType: !20, size: 32, offset: 2144)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1318, file: !1319, line: 353, baseType: !1546, size: 64, offset: 2176)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1319, line: 297, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1319, line: 295, size: 2048, elements: !1549)
!1549 = !{!1550}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1548, file: !1319, line: 296, baseType: !602, size: 2048)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1318, file: !1319, line: 355, baseType: !1552, size: 384, offset: 2240)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1319, line: 338, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1319, line: 322, size: 384, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559, !1560, !1561}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1553, file: !1319, line: 323, baseType: !20, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1553, file: !1319, line: 325, baseType: !585, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1553, file: !1319, line: 326, baseType: !585, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1553, file: !1319, line: 331, baseType: !559, size: 128, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1553, file: !1319, line: 334, baseType: !559, size: 128, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1553, file: !1319, line: 335, baseType: !20, size: 32, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1553, file: !1319, line: 337, baseType: !20, size: 32, offset: 352)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1300, file: !1301, line: 81, baseType: !564, size: 64, offset: 12224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1300, file: !1301, line: 85, baseType: !1564, size: 6208, offset: 12288)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1301, line: 55, size: 6208, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1570}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1564, file: !1301, line: 56, baseType: !1246, size: 6144)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1564, file: !1301, line: 58, baseType: !585, size: 16, offset: 6144)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1564, file: !1301, line: 59, baseType: !585, size: 16, offset: 6160)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1564, file: !1301, line: 60, baseType: !585, size: 16, offset: 6176)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1564, file: !1301, line: 61, baseType: !585, size: 16, offset: 6192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1300, file: !1301, line: 86, baseType: !20, size: 32, offset: 18496)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1300, file: !1301, line: 88, baseType: !20, size: 32, offset: 18528)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1300, file: !1301, line: 90, baseType: !20, size: 32, offset: 18560)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1300, file: !1301, line: 94, baseType: !20, size: 32, offset: 18592)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1300, file: !1301, line: 100, baseType: !1290, size: 512, offset: 18624)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1198, file: !1190, line: 154, baseType: !1577, size: 64, offset: 1664)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !129, line: 46, size: 1344, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1578, file: !129, line: 47, baseType: !678, size: 960)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1578, file: !129, line: 48, baseType: !737, size: 64, offset: 960)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !1578, file: !129, line: 49, baseType: !559, size: 128, offset: 1024)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !1578, file: !129, line: 50, baseType: !20, size: 32, offset: 1152)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !1578, file: !129, line: 51, baseType: !20, size: 32, offset: 1184)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1578, file: !129, line: 53, baseType: !20, size: 32, offset: 1216)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1578, file: !129, line: 53, baseType: !20, size: 32, offset: 1248)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1578, file: !129, line: 55, baseType: !20, size: 32, offset: 1280)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1578, file: !129, line: 56, baseType: !20, size: 32, offset: 1312)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1198, file: !1190, line: 156, baseType: !1257, size: 64, offset: 1728)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1198, file: !1190, line: 158, baseType: !607, size: 32, offset: 1792)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1198, file: !1190, line: 159, baseType: !607, size: 32, offset: 1824)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1856)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1920)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1198, file: !1190, line: 162, baseType: !1201, size: 64, offset: 1984)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1198, file: !1190, line: 164, baseType: !559, size: 128, offset: 2048)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1198, file: !1190, line: 166, baseType: !1597, size: 64, offset: 2176)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1190, line: 51, flags: DIFlagFwdDecl)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1198, file: !1190, line: 167, baseType: !564, size: 64, offset: 2240)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1198, file: !1190, line: 168, baseType: !607, size: 32, offset: 2304)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1198, file: !1190, line: 170, baseType: !607, size: 32, offset: 2336)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1198, file: !1190, line: 170, baseType: !607, size: 32, offset: 2368)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1198, file: !1190, line: 171, baseType: !607, size: 32, offset: 2400)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1198, file: !1190, line: 173, baseType: !564, size: 64, offset: 2432)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1198, file: !1190, line: 175, baseType: !20, size: 32, offset: 2496)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1198, file: !1190, line: 176, baseType: !20, size: 32, offset: 2528)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1198, file: !1190, line: 179, baseType: !20, size: 32, offset: 2560)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1198, file: !1190, line: 180, baseType: !607, size: 32, offset: 2592)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1198, file: !1190, line: 183, baseType: !20, size: 32, offset: 2624)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1198, file: !1190, line: 185, baseType: !570, size: 8, offset: 2656)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1198, file: !1190, line: 186, baseType: !1612, size: 24, offset: 2664)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 24, elements: !658)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1198, file: !1190, line: 189, baseType: !559, size: 128, offset: 2688)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1189, file: !1190, line: 207, baseType: !697, size: 8192, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1189, file: !1190, line: 208, baseType: !697, size: 8192, offset: 8576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1189, file: !1190, line: 210, baseType: !20, size: 32, offset: 16768)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1189, file: !1190, line: 210, baseType: !20, size: 32, offset: 16800)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1189, file: !1190, line: 211, baseType: !20, size: 32, offset: 16832)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1189, file: !1190, line: 211, baseType: !20, size: 32, offset: 16864)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1189, file: !1190, line: 212, baseType: !1145, size: 128, offset: 16896)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !675, file: !674, line: 1246, baseType: !1622, size: 64, offset: 2112)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !674, line: 1067, size: 5184, elements: !1624)
!1624 = !{!1625, !1655, !1656, !1671, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1693, !1709, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1819}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1623, file: !674, line: 1068, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !674, line: 934, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !674, line: 925, size: 576, elements: !1629)
!1629 = !{!1630, !1647, !1648, !1649, !1650, !1651, !1654}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1628, file: !674, line: 926, baseType: !1631, size: 320)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !674, line: 830, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !674, line: 813, size: 320, elements: !1633)
!1633 = !{!1634, !1637, !1640, !1641, !1644, !1645, !1646}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1632, file: !674, line: 814, baseType: !1635, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !674, line: 51, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1632, file: !674, line: 815, baseType: !1638, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !674, line: 815, flags: DIFlagFwdDecl)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1632, file: !674, line: 818, baseType: !564, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1632, file: !674, line: 819, baseType: !1642, size: 32, offset: 192)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 32, elements: !580)
!1643 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1632, file: !674, line: 822, baseType: !20, size: 32, offset: 224)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1632, file: !674, line: 826, baseType: !20, size: 32, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1632, file: !674, line: 829, baseType: !20, size: 32, offset: 288)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1628, file: !674, line: 928, baseType: !585, size: 16, offset: 320)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1628, file: !674, line: 928, baseType: !585, size: 16, offset: 336)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1628, file: !674, line: 929, baseType: !20, size: 32, offset: 352)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1628, file: !674, line: 930, baseType: !1500, size: 64, offset: 384)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1628, file: !674, line: 931, baseType: !1652, size: 64, offset: 448)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !674, line: 931, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1628, file: !674, line: 933, baseType: !564, size: 64, offset: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1623, file: !674, line: 1069, baseType: !1626, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1623, file: !674, line: 1070, baseType: !1657, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !674, line: 916, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !674, line: 891, size: 704, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1665, !1666, !1667, !1668, !1669, !1670}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1659, file: !674, line: 892, baseType: !1631, size: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1659, file: !674, line: 896, baseType: !20, size: 32, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1659, file: !674, line: 900, baseType: !1664, size: 96, offset: 352)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 96, elements: !658)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1659, file: !674, line: 903, baseType: !607, size: 32, offset: 448)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1659, file: !674, line: 906, baseType: !20, size: 32, offset: 480)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1659, file: !674, line: 909, baseType: !607, size: 32, offset: 512)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1659, file: !674, line: 912, baseType: !607, size: 32, offset: 544)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1659, file: !674, line: 914, baseType: !805, size: 64, offset: 576)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1659, file: !674, line: 915, baseType: !564, size: 64, offset: 640)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1623, file: !674, line: 1071, baseType: !1672, size: 64, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !674, line: 920, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !674, line: 918, size: 320, elements: !1675)
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1674, file: !674, line: 919, baseType: !1631, size: 320)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1623, file: !674, line: 1075, baseType: !607, size: 32, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1623, file: !674, line: 1077, baseType: !607, size: 32, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1623, file: !674, line: 1078, baseType: !607, size: 32, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1623, file: !674, line: 1079, baseType: !585, size: 16, offset: 352)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1623, file: !674, line: 1082, baseType: !585, size: 16, offset: 368)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1623, file: !674, line: 1085, baseType: !570, size: 8, offset: 384)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1623, file: !674, line: 1086, baseType: !570, size: 8, offset: 392)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1623, file: !674, line: 1087, baseType: !570, size: 8, offset: 400)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1623, file: !674, line: 1088, baseType: !570, size: 8, offset: 408)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1623, file: !674, line: 1090, baseType: !607, size: 32, offset: 416)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1623, file: !674, line: 1093, baseType: !585, size: 16, offset: 448)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1623, file: !674, line: 1096, baseType: !570, size: 8, offset: 464)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1623, file: !674, line: 1098, baseType: !1690, size: 40, offset: 472)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 40, elements: !1691)
!1691 = !{!1692}
!1692 = !DISubrange(count: 5)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1623, file: !674, line: 1101, baseType: !1694, size: 832, offset: 512)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !674, line: 836, size: 832, elements: !1695)
!1695 = !{!1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1694, file: !674, line: 837, baseType: !1631, size: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1694, file: !674, line: 839, baseType: !585, size: 16, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1694, file: !674, line: 839, baseType: !585, size: 16, offset: 336)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1694, file: !674, line: 842, baseType: !585, size: 16, offset: 352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1694, file: !674, line: 842, baseType: !585, size: 16, offset: 368)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1694, file: !674, line: 843, baseType: !1510, size: 32, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1694, file: !674, line: 845, baseType: !20, size: 32, offset: 416)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1694, file: !674, line: 847, baseType: !564, size: 64, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1694, file: !674, line: 848, baseType: !1467, size: 64, offset: 512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1694, file: !674, line: 849, baseType: !1467, size: 64, offset: 576)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1694, file: !674, line: 850, baseType: !1467, size: 64, offset: 640)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1694, file: !674, line: 851, baseType: !657, size: 96, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1694, file: !674, line: 852, baseType: !607, size: 32, offset: 800)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1623, file: !674, line: 1104, baseType: !1710, size: 1344, offset: 1344)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !674, line: 867, size: 1344, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1710, file: !674, line: 868, baseType: !585, size: 16)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1710, file: !674, line: 869, baseType: !585, size: 16, offset: 16)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1710, file: !674, line: 870, baseType: !585, size: 16, offset: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1710, file: !674, line: 871, baseType: !585, size: 16, offset: 48)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1710, file: !674, line: 873, baseType: !1717, size: 896, offset: 64)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 896, elements: !1532)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !674, line: 864, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !674, line: 859, size: 128, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1719, file: !674, line: 860, baseType: !585, size: 16)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1719, file: !674, line: 861, baseType: !585, size: 16, offset: 16)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1719, file: !674, line: 861, baseType: !585, size: 16, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1719, file: !674, line: 861, baseType: !585, size: 16, offset: 48)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1719, file: !674, line: 862, baseType: !20, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1719, file: !674, line: 863, baseType: !607, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1710, file: !674, line: 874, baseType: !564, size: 64, offset: 960)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1710, file: !674, line: 876, baseType: !607, size: 32, offset: 1024)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1710, file: !674, line: 876, baseType: !607, size: 32, offset: 1056)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1710, file: !674, line: 878, baseType: !20, size: 32, offset: 1088)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1710, file: !674, line: 879, baseType: !20, size: 32, offset: 1120)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1710, file: !674, line: 881, baseType: !20, size: 32, offset: 1152)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1710, file: !674, line: 881, baseType: !20, size: 32, offset: 1184)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1710, file: !674, line: 883, baseType: !1057, size: 64, offset: 1216)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1710, file: !674, line: 884, baseType: !805, size: 64, offset: 1280)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1623, file: !674, line: 1107, baseType: !607, size: 32, offset: 2688)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1623, file: !674, line: 1110, baseType: !607, size: 32, offset: 2720)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1623, file: !674, line: 1113, baseType: !585, size: 16, offset: 2752)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1623, file: !674, line: 1113, baseType: !585, size: 16, offset: 2768)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1623, file: !674, line: 1116, baseType: !570, size: 8, offset: 2784)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1623, file: !674, line: 1117, baseType: !1111, size: 8, offset: 2792)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1623, file: !674, line: 1120, baseType: !585, size: 16, offset: 2800)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1623, file: !674, line: 1121, baseType: !607, size: 32, offset: 2816)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1623, file: !674, line: 1122, baseType: !607, size: 32, offset: 2848)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1623, file: !674, line: 1123, baseType: !607, size: 32, offset: 2880)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1623, file: !674, line: 1124, baseType: !607, size: 32, offset: 2912)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1623, file: !674, line: 1125, baseType: !607, size: 32, offset: 2944)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1623, file: !674, line: 1126, baseType: !607, size: 32, offset: 2976)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1623, file: !674, line: 1127, baseType: !607, size: 32, offset: 3008)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1623, file: !674, line: 1128, baseType: !607, size: 32, offset: 3040)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1623, file: !674, line: 1129, baseType: !607, size: 32, offset: 3072)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1623, file: !674, line: 1130, baseType: !607, size: 32, offset: 3104)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1623, file: !674, line: 1131, baseType: !585, size: 16, offset: 3136)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1623, file: !674, line: 1132, baseType: !570, size: 8, offset: 3152)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1623, file: !674, line: 1133, baseType: !570, size: 8, offset: 3160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1623, file: !674, line: 1134, baseType: !1612, size: 24, offset: 3168)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1623, file: !674, line: 1135, baseType: !570, size: 8, offset: 3192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1623, file: !674, line: 1138, baseType: !805, size: 64, offset: 3200)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1623, file: !674, line: 1139, baseType: !570, size: 8, offset: 3264)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1623, file: !674, line: 1140, baseType: !570, size: 8, offset: 3272)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1623, file: !674, line: 1141, baseType: !570, size: 8, offset: 3280)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1623, file: !674, line: 1142, baseType: !570, size: 8, offset: 3288)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1623, file: !674, line: 1143, baseType: !570, size: 8, offset: 3296)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1623, file: !674, line: 1144, baseType: !1765, size: 64, offset: 3304)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 64, elements: !1484)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1623, file: !674, line: 1145, baseType: !1765, size: 64, offset: 3368)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1623, file: !674, line: 1148, baseType: !570, size: 8, offset: 3432)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1623, file: !674, line: 1149, baseType: !570, size: 8, offset: 3440)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1623, file: !674, line: 1152, baseType: !570, size: 8, offset: 3448)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1623, file: !674, line: 1152, baseType: !570, size: 8, offset: 3456)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1623, file: !674, line: 1153, baseType: !570, size: 8, offset: 3464)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1623, file: !674, line: 1154, baseType: !585, size: 16, offset: 3472)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1623, file: !674, line: 1154, baseType: !585, size: 16, offset: 3488)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1623, file: !674, line: 1155, baseType: !585, size: 16, offset: 3504)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1623, file: !674, line: 1155, baseType: !585, size: 16, offset: 3520)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1623, file: !674, line: 1156, baseType: !570, size: 8, offset: 3536)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1623, file: !674, line: 1157, baseType: !570, size: 8, offset: 3544)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1623, file: !674, line: 1159, baseType: !570, size: 8, offset: 3552)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1623, file: !674, line: 1160, baseType: !570, size: 8, offset: 3560)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1623, file: !674, line: 1161, baseType: !570, size: 8, offset: 3568)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1623, file: !674, line: 1162, baseType: !570, size: 8, offset: 3576)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1623, file: !674, line: 1165, baseType: !20, size: 32, offset: 3584)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1623, file: !674, line: 1166, baseType: !20, size: 32, offset: 3616)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1623, file: !674, line: 1167, baseType: !20, size: 32, offset: 3648)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1623, file: !674, line: 1168, baseType: !20, size: 32, offset: 3680)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1623, file: !674, line: 1171, baseType: !585, size: 16, offset: 3712)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1623, file: !674, line: 1171, baseType: !585, size: 16, offset: 3728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1623, file: !674, line: 1172, baseType: !20, size: 32, offset: 3744)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1623, file: !674, line: 1173, baseType: !607, size: 32, offset: 3776)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1623, file: !674, line: 1174, baseType: !607, size: 32, offset: 3808)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1623, file: !674, line: 1177, baseType: !1792, size: 1024, offset: 3840)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !674, line: 963, size: 1024, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1817, !1818}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1792, file: !674, line: 965, baseType: !20, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1792, file: !674, line: 968, baseType: !607, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1792, file: !674, line: 971, baseType: !607, size: 32, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1792, file: !674, line: 974, baseType: !607, size: 32, offset: 96)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1792, file: !674, line: 977, baseType: !657, size: 96, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1792, file: !674, line: 979, baseType: !657, size: 96, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1792, file: !674, line: 982, baseType: !20, size: 32, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1792, file: !674, line: 987, baseType: !643, size: 64, offset: 352)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1792, file: !674, line: 989, baseType: !607, size: 32, offset: 416)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1792, file: !674, line: 994, baseType: !20, size: 32, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1792, file: !674, line: 995, baseType: !20, size: 32, offset: 480)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1792, file: !674, line: 997, baseType: !570, size: 8, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1792, file: !674, line: 998, baseType: !1531, size: 56, offset: 520)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1792, file: !674, line: 1000, baseType: !607, size: 32, offset: 576)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1792, file: !674, line: 1003, baseType: !643, size: 64, offset: 608)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1792, file: !674, line: 1006, baseType: !20, size: 32, offset: 672)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1792, file: !674, line: 1009, baseType: !607, size: 32, offset: 704)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1792, file: !674, line: 1012, baseType: !643, size: 64, offset: 736)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1792, file: !674, line: 1015, baseType: !643, size: 64, offset: 800)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1792, file: !674, line: 1018, baseType: !20, size: 32, offset: 864)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1792, file: !674, line: 1019, baseType: !1815, size: 64, offset: 896)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !674, line: 63, flags: DIFlagFwdDecl)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1792, file: !674, line: 1023, baseType: !607, size: 32, offset: 960)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1792, file: !674, line: 1024, baseType: !20, size: 32, offset: 992)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1623, file: !674, line: 1179, baseType: !1820, size: 320, offset: 4864)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !674, line: 1043, size: 320, elements: !1821)
!1821 = !{!1822, !1823, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1820, file: !674, line: 1044, baseType: !570, size: 8)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1820, file: !674, line: 1045, baseType: !1824, size: 16, offset: 8)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 16, elements: !644)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1820, file: !674, line: 1048, baseType: !570, size: 8, offset: 24)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1820, file: !674, line: 1049, baseType: !607, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1820, file: !674, line: 1049, baseType: !607, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1820, file: !674, line: 1052, baseType: !607, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1820, file: !674, line: 1052, baseType: !607, size: 32, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1820, file: !674, line: 1053, baseType: !570, size: 8, offset: 160)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1820, file: !674, line: 1054, baseType: !1612, size: 24, offset: 168)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1820, file: !674, line: 1057, baseType: !607, size: 32, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1820, file: !674, line: 1057, baseType: !607, size: 32, offset: 224)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1820, file: !674, line: 1060, baseType: !607, size: 32, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1820, file: !674, line: 1060, baseType: !607, size: 32, offset: 288)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !675, file: !674, line: 1247, baseType: !1837, size: 64, offset: 2176)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !674, line: 60, flags: DIFlagFwdDecl)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !675, file: !674, line: 1251, baseType: !1840, size: 31872, offset: 2240)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !674, line: 403, size: 31872, elements: !1841)
!1841 = !{!1842, !1917, !1937, !1946, !1966, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2103, !2104, !2105, !2109, !2125, !2126}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1840, file: !674, line: 404, baseType: !1843, size: 1984)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !674, line: 259, size: 1984, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1862, !1912}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1843, file: !674, line: 260, baseType: !570, size: 8)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1843, file: !674, line: 263, baseType: !570, size: 8, offset: 8)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1843, file: !674, line: 266, baseType: !570, size: 8, offset: 16)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1843, file: !674, line: 267, baseType: !570, size: 8, offset: 24)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1843, file: !674, line: 269, baseType: !570, size: 8, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1843, file: !674, line: 270, baseType: !570, size: 8, offset: 40)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1843, file: !674, line: 276, baseType: !570, size: 8, offset: 48)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1843, file: !674, line: 279, baseType: !570, size: 8, offset: 56)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1843, file: !674, line: 280, baseType: !585, size: 16, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1843, file: !674, line: 280, baseType: !585, size: 16, offset: 80)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1843, file: !674, line: 281, baseType: !607, size: 32, offset: 96)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1843, file: !674, line: 284, baseType: !570, size: 8, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1843, file: !674, line: 285, baseType: !570, size: 8, offset: 136)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1843, file: !674, line: 287, baseType: !1859, size: 48, offset: 144)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 48, elements: !1860)
!1860 = !{!1861}
!1861 = !DISubrange(count: 6)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1843, file: !674, line: 290, baseType: !1863, size: 1280, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1291, line: 174, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1291, line: 166, size: 1280, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1911}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1864, file: !1291, line: 167, baseType: !20, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1864, file: !1291, line: 167, baseType: !20, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1864, file: !1291, line: 168, baseType: !569, size: 512, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1864, file: !1291, line: 169, baseType: !569, size: 512, offset: 576)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1864, file: !1291, line: 170, baseType: !607, size: 32, offset: 1088)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1864, file: !1291, line: 171, baseType: !607, size: 32, offset: 1120)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1864, file: !1291, line: 172, baseType: !1873, size: 64, offset: 1152)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1291, line: 72, size: 3072, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1907, !1908, !1909, !1910}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1874, file: !1291, line: 73, baseType: !20, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1874, file: !1291, line: 73, baseType: !20, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1874, file: !1291, line: 74, baseType: !20, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1874, file: !1291, line: 75, baseType: !20, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1874, file: !1291, line: 77, baseType: !1145, size: 128, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1874, file: !1291, line: 77, baseType: !1145, size: 128, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1874, file: !1291, line: 79, baseType: !1883, size: 2304, offset: 384)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 2304, elements: !580)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1291, line: 67, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1291, line: 55, size: 576, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1903, !1904, !1905, !1906}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1885, file: !1291, line: 56, baseType: !585, size: 16)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1885, file: !1291, line: 56, baseType: !585, size: 16, offset: 16)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1885, file: !1291, line: 58, baseType: !607, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1885, file: !1291, line: 59, baseType: !607, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1885, file: !1291, line: 59, baseType: !607, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1885, file: !1291, line: 60, baseType: !643, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1885, file: !1291, line: 60, baseType: !643, size: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1885, file: !1291, line: 61, baseType: !1895, size: 64, offset: 256)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1291, line: 47, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1291, line: 44, size: 96, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1897, file: !1291, line: 45, baseType: !607, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1897, file: !1291, line: 45, baseType: !607, size: 32, offset: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1897, file: !1291, line: 46, baseType: !585, size: 16, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1897, file: !1291, line: 46, baseType: !585, size: 16, offset: 80)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1885, file: !1291, line: 62, baseType: !1895, size: 64, offset: 320)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1885, file: !1291, line: 64, baseType: !1895, size: 64, offset: 384)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1885, file: !1291, line: 65, baseType: !643, size: 64, offset: 448)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1885, file: !1291, line: 66, baseType: !643, size: 64, offset: 512)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1874, file: !1291, line: 80, baseType: !657, size: 96, offset: 2688)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1874, file: !1291, line: 80, baseType: !657, size: 96, offset: 2784)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1874, file: !1291, line: 81, baseType: !657, size: 96, offset: 2880)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1874, file: !1291, line: 83, baseType: !657, size: 96, offset: 2976)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1864, file: !1291, line: 173, baseType: !564, size: 64, offset: 1216)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1843, file: !674, line: 291, baseType: !1913, size: 512, offset: 1472)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1291, line: 178, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1291, line: 176, size: 512, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1914, file: !1291, line: 177, baseType: !569, size: 512)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1840, file: !674, line: 406, baseType: !1918, size: 64, offset: 1984)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !674, line: 80, size: 1472, elements: !1920)
!1920 = !{!1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1919, file: !674, line: 81, baseType: !564, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1919, file: !674, line: 82, baseType: !564, size: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1919, file: !674, line: 83, baseType: !7, size: 32, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1919, file: !674, line: 84, baseType: !7, size: 32, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1919, file: !674, line: 86, baseType: !7, size: 32, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1919, file: !674, line: 87, baseType: !7, size: 32, offset: 224)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1919, file: !674, line: 88, baseType: !7, size: 32, offset: 256)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1919, file: !674, line: 89, baseType: !7, size: 32, offset: 288)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1919, file: !674, line: 90, baseType: !7, size: 32, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1919, file: !674, line: 91, baseType: !7, size: 32, offset: 352)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1919, file: !674, line: 92, baseType: !7, size: 32, offset: 384)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1919, file: !674, line: 93, baseType: !7, size: 32, offset: 416)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1919, file: !674, line: 95, baseType: !1934, size: 1024, offset: 448)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 1024, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1840, file: !674, line: 407, baseType: !1938, size: 64, offset: 2048)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !674, line: 98, size: 1216, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1945}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1939, file: !674, line: 100, baseType: !564, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1939, file: !674, line: 101, baseType: !564, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1939, file: !674, line: 103, baseType: !7, size: 32, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1939, file: !674, line: 104, baseType: !7, size: 32, offset: 160)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1939, file: !674, line: 106, baseType: !1934, size: 1024, offset: 192)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1840, file: !674, line: 408, baseType: !1947, size: 512, offset: 2112)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !674, line: 109, size: 512, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1947, file: !674, line: 111, baseType: !20, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1947, file: !674, line: 112, baseType: !20, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1947, file: !674, line: 115, baseType: !20, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1947, file: !674, line: 116, baseType: !20, size: 32, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1947, file: !674, line: 117, baseType: !20, size: 32, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1947, file: !674, line: 118, baseType: !20, size: 32, offset: 160)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1947, file: !674, line: 119, baseType: !20, size: 32, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1947, file: !674, line: 120, baseType: !20, size: 32, offset: 224)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1947, file: !674, line: 121, baseType: !20, size: 32, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1947, file: !674, line: 122, baseType: !20, size: 32, offset: 288)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1947, file: !674, line: 125, baseType: !20, size: 32, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1947, file: !674, line: 126, baseType: !20, size: 32, offset: 352)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1947, file: !674, line: 127, baseType: !585, size: 16, offset: 384)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1947, file: !674, line: 128, baseType: !585, size: 16, offset: 400)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1947, file: !674, line: 129, baseType: !20, size: 32, offset: 416)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1947, file: !674, line: 130, baseType: !20, size: 32, offset: 448)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1947, file: !674, line: 131, baseType: !20, size: 32, offset: 480)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1840, file: !674, line: 409, baseType: !1967, size: 576, offset: 2624)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !674, line: 134, size: 576, elements: !1968)
!1968 = !{!1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1967, file: !674, line: 135, baseType: !20, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1967, file: !674, line: 136, baseType: !20, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1967, file: !674, line: 137, baseType: !20, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1967, file: !674, line: 138, baseType: !20, size: 32, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1967, file: !674, line: 139, baseType: !20, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1967, file: !674, line: 140, baseType: !20, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1967, file: !674, line: 141, baseType: !20, size: 32, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1967, file: !674, line: 142, baseType: !20, size: 32, offset: 224)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1967, file: !674, line: 143, baseType: !607, size: 32, offset: 256)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1967, file: !674, line: 144, baseType: !20, size: 32, offset: 288)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1967, file: !674, line: 145, baseType: !20, size: 32, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1967, file: !674, line: 147, baseType: !20, size: 32, offset: 352)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1967, file: !674, line: 148, baseType: !20, size: 32, offset: 384)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1967, file: !674, line: 149, baseType: !20, size: 32, offset: 416)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1967, file: !674, line: 150, baseType: !20, size: 32, offset: 448)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1967, file: !674, line: 151, baseType: !20, size: 32, offset: 480)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1967, file: !674, line: 152, baseType: !714, size: 64, offset: 512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1840, file: !674, line: 411, baseType: !20, size: 32, offset: 3200)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1840, file: !674, line: 411, baseType: !20, size: 32, offset: 3232)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1840, file: !674, line: 411, baseType: !20, size: 32, offset: 3264)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1840, file: !674, line: 412, baseType: !607, size: 32, offset: 3296)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1840, file: !674, line: 413, baseType: !20, size: 32, offset: 3328)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1840, file: !674, line: 413, baseType: !20, size: 32, offset: 3360)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1840, file: !674, line: 415, baseType: !20, size: 32, offset: 3392)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1840, file: !674, line: 415, baseType: !20, size: 32, offset: 3424)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1840, file: !674, line: 416, baseType: !585, size: 16, offset: 3456)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1840, file: !674, line: 416, baseType: !585, size: 16, offset: 3472)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1840, file: !674, line: 418, baseType: !607, size: 32, offset: 3488)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1840, file: !674, line: 418, baseType: !607, size: 32, offset: 3520)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1840, file: !674, line: 421, baseType: !607, size: 32, offset: 3552)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1840, file: !674, line: 421, baseType: !607, size: 32, offset: 3584)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1840, file: !674, line: 421, baseType: !607, size: 32, offset: 3616)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1840, file: !674, line: 425, baseType: !585, size: 16, offset: 3648)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1840, file: !674, line: 425, baseType: !585, size: 16, offset: 3664)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1840, file: !674, line: 425, baseType: !585, size: 16, offset: 3680)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1840, file: !674, line: 426, baseType: !585, size: 16, offset: 3696)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1840, file: !674, line: 428, baseType: !585, size: 16, offset: 3712)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1840, file: !674, line: 428, baseType: !585, size: 16, offset: 3728)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1840, file: !674, line: 431, baseType: !20, size: 32, offset: 3744)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1840, file: !674, line: 433, baseType: !585, size: 16, offset: 3776)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1840, file: !674, line: 435, baseType: !585, size: 16, offset: 3792)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1840, file: !674, line: 437, baseType: !585, size: 16, offset: 3808)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1840, file: !674, line: 439, baseType: !585, size: 16, offset: 3824)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1840, file: !674, line: 441, baseType: !585, size: 16, offset: 3840)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1840, file: !674, line: 443, baseType: !585, size: 16, offset: 3856)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1840, file: !674, line: 449, baseType: !20, size: 32, offset: 3872)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1840, file: !674, line: 453, baseType: !20, size: 32, offset: 3904)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1840, file: !674, line: 458, baseType: !585, size: 16, offset: 3936)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1840, file: !674, line: 462, baseType: !585, size: 16, offset: 3952)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1840, file: !674, line: 467, baseType: !20, size: 32, offset: 3968)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1840, file: !674, line: 467, baseType: !20, size: 32, offset: 4000)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1840, file: !674, line: 469, baseType: !585, size: 16, offset: 4032)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1840, file: !674, line: 469, baseType: !585, size: 16, offset: 4048)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1840, file: !674, line: 469, baseType: !585, size: 16, offset: 4064)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1840, file: !674, line: 469, baseType: !585, size: 16, offset: 4080)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1840, file: !674, line: 474, baseType: !585, size: 16, offset: 4096)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1840, file: !674, line: 475, baseType: !570, size: 8, offset: 4112)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1840, file: !674, line: 476, baseType: !570, size: 8, offset: 4120)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1840, file: !674, line: 481, baseType: !20, size: 32, offset: 4128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1840, file: !674, line: 486, baseType: !20, size: 32, offset: 4160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1840, file: !674, line: 491, baseType: !20, size: 32, offset: 4192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1840, file: !674, line: 496, baseType: !585, size: 16, offset: 4224)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1840, file: !674, line: 498, baseType: !585, size: 16, offset: 4240)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1840, file: !674, line: 501, baseType: !585, size: 16, offset: 4256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1840, file: !674, line: 502, baseType: !585, size: 16, offset: 4272)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1840, file: !674, line: 508, baseType: !585, size: 16, offset: 4288)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1840, file: !674, line: 513, baseType: !585, size: 16, offset: 4304)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1840, file: !674, line: 515, baseType: !585, size: 16, offset: 4320)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1840, file: !674, line: 515, baseType: !585, size: 16, offset: 4336)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1840, file: !674, line: 519, baseType: !1145, size: 128, offset: 4352)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1840, file: !674, line: 519, baseType: !1145, size: 128, offset: 4480)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1840, file: !674, line: 520, baseType: !2041, size: 128, offset: 4608)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1146, line: 89, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1146, line: 86, size: 128, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2042, file: !1146, line: 87, baseType: !20, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2042, file: !1146, line: 87, baseType: !20, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2042, file: !1146, line: 88, baseType: !20, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2042, file: !1146, line: 88, baseType: !20, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1840, file: !674, line: 523, baseType: !559, size: 128, offset: 4736)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1840, file: !674, line: 524, baseType: !585, size: 16, offset: 4864)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1840, file: !674, line: 527, baseType: !585, size: 16, offset: 4880)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1840, file: !674, line: 532, baseType: !607, size: 32, offset: 4896)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1840, file: !674, line: 532, baseType: !607, size: 32, offset: 4928)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1840, file: !674, line: 534, baseType: !607, size: 32, offset: 4960)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1840, file: !674, line: 538, baseType: !607, size: 32, offset: 4992)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1840, file: !674, line: 542, baseType: !20, size: 32, offset: 5024)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1840, file: !674, line: 545, baseType: !607, size: 32, offset: 5056)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1840, file: !674, line: 545, baseType: !607, size: 32, offset: 5088)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1840, file: !674, line: 545, baseType: !607, size: 32, offset: 5120)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1840, file: !674, line: 548, baseType: !607, size: 32, offset: 5152)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1840, file: !674, line: 551, baseType: !585, size: 16, offset: 5184)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1840, file: !674, line: 551, baseType: !585, size: 16, offset: 5200)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1840, file: !674, line: 551, baseType: !585, size: 16, offset: 5216)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1840, file: !674, line: 551, baseType: !585, size: 16, offset: 5232)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1840, file: !674, line: 552, baseType: !585, size: 16, offset: 5248)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1840, file: !674, line: 552, baseType: !585, size: 16, offset: 5264)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1840, file: !674, line: 553, baseType: !607, size: 32, offset: 5280)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1840, file: !674, line: 553, baseType: !607, size: 32, offset: 5312)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1840, file: !674, line: 554, baseType: !585, size: 16, offset: 5344)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1840, file: !674, line: 554, baseType: !585, size: 16, offset: 5360)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1840, file: !674, line: 555, baseType: !607, size: 32, offset: 5376)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1840, file: !674, line: 555, baseType: !607, size: 32, offset: 5408)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1840, file: !674, line: 558, baseType: !697, size: 8192, offset: 5440)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1840, file: !674, line: 561, baseType: !20, size: 32, offset: 13632)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1840, file: !674, line: 562, baseType: !585, size: 16, offset: 13664)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1840, file: !674, line: 562, baseType: !585, size: 16, offset: 13680)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1840, file: !674, line: 565, baseType: !1246, size: 6144, offset: 13696)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1840, file: !674, line: 568, baseType: !933, size: 128, offset: 19840)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1840, file: !674, line: 569, baseType: !933, size: 128, offset: 19968)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1840, file: !674, line: 572, baseType: !570, size: 8, offset: 20096)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1840, file: !674, line: 573, baseType: !570, size: 8, offset: 20104)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1840, file: !674, line: 574, baseType: !570, size: 8, offset: 20112)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1840, file: !674, line: 575, baseType: !1690, size: 40, offset: 20120)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1840, file: !674, line: 578, baseType: !20, size: 32, offset: 20160)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1840, file: !674, line: 579, baseType: !585, size: 16, offset: 20192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1840, file: !674, line: 580, baseType: !585, size: 16, offset: 20208)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1840, file: !674, line: 581, baseType: !607, size: 32, offset: 20224)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1840, file: !674, line: 582, baseType: !607, size: 32, offset: 20256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1840, file: !674, line: 585, baseType: !585, size: 16, offset: 20288)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1840, file: !674, line: 585, baseType: !585, size: 16, offset: 20304)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1840, file: !674, line: 586, baseType: !607, size: 32, offset: 20320)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1840, file: !674, line: 589, baseType: !585, size: 16, offset: 20352)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1840, file: !674, line: 589, baseType: !585, size: 16, offset: 20368)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1840, file: !674, line: 590, baseType: !20, size: 32, offset: 20384)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1840, file: !674, line: 593, baseType: !585, size: 16, offset: 20416)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1840, file: !674, line: 593, baseType: !585, size: 16, offset: 20432)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1840, file: !674, line: 594, baseType: !585, size: 16, offset: 20448)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1840, file: !674, line: 594, baseType: !585, size: 16, offset: 20464)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1840, file: !674, line: 595, baseType: !607, size: 32, offset: 20480)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1840, file: !674, line: 596, baseType: !607, size: 32, offset: 20512)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1840, file: !674, line: 597, baseType: !2101, size: 64, offset: 20544)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !84, line: 205, flags: DIFlagFwdDecl)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1840, file: !674, line: 600, baseType: !20, size: 32, offset: 20608)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1840, file: !674, line: 601, baseType: !607, size: 32, offset: 20640)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1840, file: !674, line: 604, baseType: !2106, size: 256, offset: 20672)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !2107)
!2107 = !{!2108}
!2108 = !DISubrange(count: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1840, file: !674, line: 607, baseType: !2110, size: 10880, offset: 20928)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !674, line: 364, size: 10880, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2110, file: !674, line: 365, baseType: !1843, size: 1984)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2110, file: !674, line: 367, baseType: !697, size: 8192, offset: 1984)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2110, file: !674, line: 369, baseType: !585, size: 16, offset: 10176)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2110, file: !674, line: 369, baseType: !585, size: 16, offset: 10192)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2110, file: !674, line: 370, baseType: !585, size: 16, offset: 10208)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2110, file: !674, line: 370, baseType: !585, size: 16, offset: 10224)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2110, file: !674, line: 372, baseType: !607, size: 32, offset: 10240)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2110, file: !674, line: 373, baseType: !607, size: 32, offset: 10272)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2110, file: !674, line: 375, baseType: !1612, size: 24, offset: 10304)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2110, file: !674, line: 376, baseType: !570, size: 8, offset: 10328)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2110, file: !674, line: 378, baseType: !570, size: 8, offset: 10336)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2110, file: !674, line: 379, baseType: !1612, size: 24, offset: 10344)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2110, file: !674, line: 381, baseType: !569, size: 512, offset: 10368)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1840, file: !674, line: 609, baseType: !20, size: 32, offset: 31808)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1840, file: !674, line: 610, baseType: !20, size: 32, offset: 31840)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !675, file: !674, line: 1252, baseType: !2128, size: 256, offset: 34112)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !674, line: 158, size: 256, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2128, file: !674, line: 159, baseType: !20, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2128, file: !674, line: 160, baseType: !607, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2128, file: !674, line: 161, baseType: !607, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2128, file: !674, line: 162, baseType: !607, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2128, file: !674, line: 163, baseType: !20, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2128, file: !674, line: 164, baseType: !585, size: 16, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2128, file: !674, line: 165, baseType: !585, size: 16, offset: 176)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2128, file: !674, line: 166, baseType: !607, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2128, file: !674, line: 167, baseType: !607, size: 32, offset: 224)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !675, file: !674, line: 1254, baseType: !559, size: 128, offset: 34368)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !675, file: !674, line: 1255, baseType: !559, size: 128, offset: 34496)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !675, file: !674, line: 1257, baseType: !564, size: 64, offset: 34624)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !675, file: !674, line: 1258, baseType: !564, size: 64, offset: 34688)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !675, file: !674, line: 1259, baseType: !564, size: 64, offset: 34752)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !675, file: !674, line: 1260, baseType: !564, size: 64, offset: 34816)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !675, file: !674, line: 1262, baseType: !564, size: 64, offset: 34880)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !675, file: !674, line: 1265, baseType: !2147, size: 64, offset: 34944)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !674, line: 1265, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !675, file: !674, line: 1266, baseType: !585, size: 16, offset: 35008)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !675, file: !674, line: 1267, baseType: !585, size: 16, offset: 35024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !675, file: !674, line: 1270, baseType: !20, size: 32, offset: 35040)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !675, file: !674, line: 1271, baseType: !559, size: 128, offset: 35072)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !675, file: !674, line: 1274, baseType: !2154, size: 128, offset: 35200)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !674, line: 650, size: 128, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2160}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2154, file: !674, line: 651, baseType: !657, size: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2154, file: !674, line: 652, baseType: !570, size: 8, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2154, file: !674, line: 652, baseType: !570, size: 8, offset: 104)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2154, file: !674, line: 652, baseType: !570, size: 8, offset: 112)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2154, file: !674, line: 652, baseType: !570, size: 8, offset: 120)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !675, file: !674, line: 1275, baseType: !2162, size: 1472, offset: 35328)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !674, line: 676, size: 1472, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2176, !2186, !2187, !2188, !2189, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2162, file: !674, line: 679, baseType: !2154, size: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2162, file: !674, line: 680, baseType: !585, size: 16, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2162, file: !674, line: 680, baseType: !585, size: 16, offset: 144)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2162, file: !674, line: 680, baseType: !585, size: 16, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2162, file: !674, line: 680, baseType: !585, size: 16, offset: 176)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2162, file: !674, line: 681, baseType: !585, size: 16, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2162, file: !674, line: 681, baseType: !585, size: 16, offset: 208)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2162, file: !674, line: 681, baseType: !585, size: 16, offset: 224)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2162, file: !674, line: 681, baseType: !585, size: 16, offset: 240)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2162, file: !674, line: 682, baseType: !585, size: 16, offset: 256)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2162, file: !674, line: 682, baseType: !2175, size: 48, offset: 272)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 48, elements: !658)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2162, file: !674, line: 685, baseType: !2177, size: 192, offset: 320)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !674, line: 633, size: 192, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2177, file: !674, line: 634, baseType: !585, size: 16)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2177, file: !674, line: 634, baseType: !585, size: 16, offset: 16)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2177, file: !674, line: 635, baseType: !585, size: 16, offset: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2177, file: !674, line: 635, baseType: !585, size: 16, offset: 48)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2177, file: !674, line: 636, baseType: !607, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2177, file: !674, line: 636, baseType: !607, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2177, file: !674, line: 637, baseType: !2101, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2162, file: !674, line: 686, baseType: !585, size: 16, offset: 512)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2162, file: !674, line: 686, baseType: !585, size: 16, offset: 528)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2162, file: !674, line: 687, baseType: !607, size: 32, offset: 544)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2162, file: !674, line: 688, baseType: !2190, size: 448, offset: 576)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !674, line: 674, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !674, line: 659, size: 448, elements: !2192)
!2192 = !{!2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2191, file: !674, line: 660, baseType: !607, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2191, file: !674, line: 661, baseType: !607, size: 32, offset: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2191, file: !674, line: 662, baseType: !607, size: 32, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2191, file: !674, line: 663, baseType: !607, size: 32, offset: 96)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2191, file: !674, line: 664, baseType: !607, size: 32, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2191, file: !674, line: 665, baseType: !607, size: 32, offset: 160)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2191, file: !674, line: 666, baseType: !607, size: 32, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2191, file: !674, line: 667, baseType: !607, size: 32, offset: 224)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2191, file: !674, line: 668, baseType: !607, size: 32, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2191, file: !674, line: 669, baseType: !607, size: 32, offset: 288)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2191, file: !674, line: 670, baseType: !20, size: 32, offset: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2191, file: !674, line: 671, baseType: !607, size: 32, offset: 352)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2191, file: !674, line: 672, baseType: !607, size: 32, offset: 384)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2191, file: !674, line: 673, baseType: !585, size: 16, offset: 416)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2191, file: !674, line: 673, baseType: !585, size: 16, offset: 432)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2162, file: !674, line: 692, baseType: !607, size: 32, offset: 1024)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2162, file: !674, line: 697, baseType: !607, size: 32, offset: 1056)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2162, file: !674, line: 703, baseType: !20, size: 32, offset: 1088)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2162, file: !674, line: 704, baseType: !585, size: 16, offset: 1120)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2162, file: !674, line: 704, baseType: !585, size: 16, offset: 1136)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2162, file: !674, line: 705, baseType: !585, size: 16, offset: 1152)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2162, file: !674, line: 706, baseType: !585, size: 16, offset: 1168)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2162, file: !674, line: 707, baseType: !585, size: 16, offset: 1184)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2162, file: !674, line: 708, baseType: !585, size: 16, offset: 1200)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2162, file: !674, line: 709, baseType: !585, size: 16, offset: 1216)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2162, file: !674, line: 709, baseType: !585, size: 16, offset: 1232)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2162, file: !674, line: 709, baseType: !585, size: 16, offset: 1248)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2162, file: !674, line: 709, baseType: !585, size: 16, offset: 1264)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2162, file: !674, line: 710, baseType: !585, size: 16, offset: 1280)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2162, file: !674, line: 711, baseType: !585, size: 16, offset: 1296)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2162, file: !674, line: 712, baseType: !607, size: 32, offset: 1312)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2162, file: !674, line: 713, baseType: !607, size: 32, offset: 1344)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2162, file: !674, line: 713, baseType: !607, size: 32, offset: 1376)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2162, file: !674, line: 713, baseType: !607, size: 32, offset: 1408)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2162, file: !674, line: 713, baseType: !607, size: 32, offset: 1440)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !675, file: !674, line: 1278, baseType: !2229, size: 64, offset: 36800)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !674, line: 1197, size: 64, elements: !2230)
!2230 = !{!2231, !2232, !2233, !2234}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2229, file: !674, line: 1199, baseType: !607, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2229, file: !674, line: 1200, baseType: !570, size: 8, offset: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2229, file: !674, line: 1201, baseType: !570, size: 8, offset: 40)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2229, file: !674, line: 1202, baseType: !585, size: 16, offset: 48)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !675, file: !674, line: 1281, baseType: !884, size: 64, offset: 36864)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !675, file: !674, line: 1284, baseType: !2237, size: 192, offset: 36928)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !674, line: 1208, size: 192, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2237, file: !674, line: 1209, baseType: !657, size: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2237, file: !674, line: 1210, baseType: !20, size: 32, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2237, file: !674, line: 1210, baseType: !20, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2237, file: !674, line: 1210, baseType: !20, size: 32, offset: 160)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !675, file: !674, line: 1287, baseType: !1299, size: 64, offset: 37120)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !675, file: !674, line: 1289, baseType: !1031, size: 64, offset: 37184)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !675, file: !674, line: 1290, baseType: !1031, size: 64, offset: 37248)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !675, file: !674, line: 1293, baseType: !1863, size: 1280, offset: 37312)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !675, file: !674, line: 1294, baseType: !1913, size: 512, offset: 38592)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !675, file: !674, line: 1295, baseType: !1290, size: 512, offset: 39104)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !675, file: !674, line: 1298, baseType: !2250, size: 64, offset: 39616)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !674, line: 1298, flags: DIFlagFwdDecl)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !123, line: 70, baseType: !2254)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !123, line: 45, size: 1472, elements: !2255)
!2255 = !{!2256, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2254, file: !123, line: 46, baseType: !2257, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2254, file: !123, line: 46, baseType: !2257, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2254, file: !123, line: 48, baseType: !607, size: 32, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2254, file: !123, line: 51, baseType: !607, size: 32, offset: 160)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2254, file: !123, line: 53, baseType: !585, size: 16, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2254, file: !123, line: 54, baseType: !585, size: 16, offset: 208)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !2254, file: !123, line: 56, baseType: !585, size: 16, offset: 224)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2254, file: !123, line: 57, baseType: !585, size: 16, offset: 240)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !2254, file: !123, line: 59, baseType: !20, size: 32, offset: 256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2254, file: !123, line: 60, baseType: !20, size: 32, offset: 288)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2254, file: !123, line: 62, baseType: !564, size: 64, offset: 320)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2254, file: !123, line: 63, baseType: !569, size: 512, offset: 384)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2254, file: !123, line: 64, baseType: !569, size: 512, offset: 896)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !2254, file: !123, line: 67, baseType: !607, size: 32, offset: 1408)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !2254, file: !123, line: 68, baseType: !607, size: 32, offset: 1440)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDlayer", file: !886, line: 108, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDlayer", file: !886, line: 94, size: 1536, elements: !2275)
!2275 = !{!2276, !2278, !2279, !2280, !2291, !2292, !2293, !2294, !2295}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2274, file: !886, line: 95, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2274, file: !886, line: 95, baseType: !2277, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2274, file: !886, line: 97, baseType: !559, size: 128, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "actframe", scope: !2274, file: !886, line: 98, baseType: !2281, size: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPDframe", file: !886, line: 84, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bGPDframe", file: !886, line: 77, size: 320, elements: !2284)
!2284 = !{!2285, !2287, !2288, !2289, !2290}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2283, file: !886, line: 78, baseType: !2286, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2283, file: !886, line: 78, baseType: !2286, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "strokes", scope: !2283, file: !886, line: 80, baseType: !559, size: 128, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "framenum", scope: !2283, file: !886, line: 82, baseType: !20, size: 32, offset: 256)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2283, file: !886, line: 83, baseType: !20, size: 32, offset: 288)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2274, file: !886, line: 100, baseType: !20, size: 32, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !2274, file: !886, line: 101, baseType: !585, size: 16, offset: 352)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "gstep", scope: !2274, file: !886, line: 102, baseType: !585, size: 16, offset: 368)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2274, file: !886, line: 104, baseType: !933, size: 128, offset: 384)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2274, file: !886, line: 106, baseType: !1934, size: 1024, offset: 512)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !129, line: 142, baseType: !2298)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !129, line: 122, size: 1152, elements: !2299)
!2299 = !{!2300, !2302, !2303, !2304, !2305, !2306, !2345, !2347, !2348, !2349, !2350, !2351, !2352, !2353}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2298, file: !129, line: 123, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2298, file: !129, line: 123, baseType: !2301, size: 64, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2298, file: !129, line: 125, baseType: !569, size: 512, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !2298, file: !129, line: 127, baseType: !559, size: 128, offset: 640)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !2298, file: !129, line: 128, baseType: !559, size: 128, offset: 768)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !2298, file: !129, line: 130, baseType: !2307, size: 64, offset: 896)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !129, line: 88, size: 1792, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2343, !2344}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2308, file: !129, line: 89, baseType: !2307, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2308, file: !129, line: 89, baseType: !2307, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2308, file: !129, line: 91, baseType: !585, size: 16, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !2308, file: !129, line: 92, baseType: !570, size: 8, offset: 144)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !2308, file: !129, line: 93, baseType: !570, size: 8, offset: 152)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !2308, file: !129, line: 95, baseType: !20, size: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2308, file: !129, line: 96, baseType: !2317, size: 64, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !129, line: 86, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !129, line: 80, size: 2176, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324, !2332}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !2319, file: !129, line: 81, baseType: !614, size: 576)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2319, file: !129, line: 82, baseType: !20, size: 32, offset: 576)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !2319, file: !129, line: 83, baseType: !20, size: 32, offset: 608)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !2319, file: !129, line: 84, baseType: !2325, size: 64, offset: 640)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !129, line: 78, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !129, line: 75, size: 96, elements: !2328)
!2328 = !{!2329, !2330, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2327, file: !129, line: 76, baseType: !607, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2327, file: !129, line: 76, baseType: !607, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2327, file: !129, line: 77, baseType: !20, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2319, file: !129, line: 85, baseType: !2333, size: 1472, offset: 704)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !129, line: 73, baseType: !2334)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !129, line: 59, size: 1472, elements: !2335)
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !2334, file: !129, line: 61, baseType: !20, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2334, file: !129, line: 62, baseType: !20, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2334, file: !129, line: 63, baseType: !692, size: 64, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2334, file: !129, line: 65, baseType: !569, size: 512, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !2334, file: !129, line: 67, baseType: !569, size: 512, offset: 640)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !2334, file: !129, line: 69, baseType: !643, size: 64, offset: 1152)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !2334, file: !129, line: 72, baseType: !1415, size: 256, offset: 1216)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2308, file: !129, line: 97, baseType: !2333, size: 1472, offset: 256)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !2308, file: !129, line: 99, baseType: !2317, size: 64, offset: 1728)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !2298, file: !129, line: 131, baseType: !2346, size: 64, offset: 960)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2298, file: !129, line: 134, baseType: !607, size: 32, offset: 1024)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2298, file: !129, line: 135, baseType: !570, size: 8, offset: 1056)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !2298, file: !129, line: 136, baseType: !570, size: 8, offset: 1064)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !2298, file: !129, line: 137, baseType: !570, size: 8, offset: 1072)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2298, file: !129, line: 138, baseType: !1531, size: 56, offset: 1080)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2298, file: !129, line: 140, baseType: !570, size: 8, offset: 1136)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !2298, file: !129, line: 141, baseType: !570, size: 8, offset: 1144)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNla", file: !366, line: 399, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNla", file: !366, line: 386, size: 1856, elements: !2357)
!2357 = !{!2358, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2389}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2356, file: !366, line: 387, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !366, line: 85, size: 448, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2360, file: !366, line: 86, baseType: !2359, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2360, file: !366, line: 86, baseType: !2359, size: 64, offset: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2360, file: !366, line: 87, baseType: !559, size: 128, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2360, file: !366, line: 88, baseType: !20, size: 32, offset: 256)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2360, file: !366, line: 89, baseType: !607, size: 32, offset: 288)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2360, file: !366, line: 90, baseType: !2368, size: 128, offset: 320)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 128, elements: !1484)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2356, file: !366, line: 387, baseType: !2359, size: 64, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2356, file: !366, line: 388, baseType: !559, size: 128, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2356, file: !366, line: 389, baseType: !20, size: 32, offset: 256)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2356, file: !366, line: 390, baseType: !607, size: 32, offset: 288)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2356, file: !366, line: 391, baseType: !2368, size: 128, offset: 320)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !2356, file: !366, line: 393, baseType: !585, size: 16, offset: 448)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2356, file: !366, line: 394, baseType: !585, size: 16, offset: 464)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2356, file: !366, line: 395, baseType: !20, size: 32, offset: 480)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !2356, file: !366, line: 397, baseType: !2378, size: 64, offset: 512)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDopeSheet", file: !72, line: 519, size: 896, elements: !2380)
!2380 = !{!2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2379, file: !72, line: 520, baseType: !692, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2379, file: !72, line: 521, baseType: !559, size: 128, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "filter_grp", scope: !2379, file: !72, line: 523, baseType: !1014, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "searchstr", scope: !2379, file: !72, line: 524, baseType: !569, size: 512, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "filterflag", scope: !2379, file: !72, line: 526, baseType: !20, size: 32, offset: 768)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2379, file: !72, line: 527, baseType: !20, size: 32, offset: 800)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "renameIndex", scope: !2379, file: !72, line: 529, baseType: !20, size: 32, offset: 832)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2379, file: !72, line: 530, baseType: !20, size: 32, offset: 864)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2356, file: !366, line: 398, baseType: !2390, size: 1280, offset: 576)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2391, line: 71, baseType: !2392)
!2391 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2391, line: 40, size: 1280, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2417, !2418, !2419, !2422}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2392, file: !2391, line: 41, baseType: !1145, size: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2392, file: !2391, line: 41, baseType: !1145, size: 128, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2392, file: !2391, line: 42, baseType: !2041, size: 128, offset: 256)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2392, file: !2391, line: 42, baseType: !2041, size: 128, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2392, file: !2391, line: 43, baseType: !2041, size: 128, offset: 512)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2392, file: !2391, line: 45, baseType: !643, size: 64, offset: 640)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2392, file: !2391, line: 45, baseType: !643, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2392, file: !2391, line: 46, baseType: !607, size: 32, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2392, file: !2391, line: 46, baseType: !607, size: 32, offset: 800)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2392, file: !2391, line: 48, baseType: !585, size: 16, offset: 832)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2392, file: !2391, line: 49, baseType: !585, size: 16, offset: 848)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2392, file: !2391, line: 51, baseType: !585, size: 16, offset: 864)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2392, file: !2391, line: 52, baseType: !585, size: 16, offset: 880)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2392, file: !2391, line: 53, baseType: !585, size: 16, offset: 896)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2392, file: !2391, line: 55, baseType: !585, size: 16, offset: 912)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2392, file: !2391, line: 56, baseType: !585, size: 16, offset: 928)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2392, file: !2391, line: 58, baseType: !585, size: 16, offset: 944)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2392, file: !2391, line: 58, baseType: !585, size: 16, offset: 960)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2392, file: !2391, line: 59, baseType: !585, size: 16, offset: 976)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2392, file: !2391, line: 59, baseType: !585, size: 16, offset: 992)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2392, file: !2391, line: 61, baseType: !585, size: 16, offset: 1008)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2392, file: !2391, line: 63, baseType: !2416, size: 64, offset: 1024)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2392, file: !2391, line: 64, baseType: !20, size: 32, offset: 1088)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2392, file: !2391, line: 65, baseType: !20, size: 32, offset: 1120)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2392, file: !2391, line: 68, baseType: !2420, size: 64, offset: 1152)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2391, line: 68, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2392, file: !2391, line: 69, baseType: !2423, size: 64, offset: 1216)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2425, line: 490, size: 768, elements: !2426)
!2425 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2426 = !{!2427, !2428, !2429, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2424, file: !2425, line: 491, baseType: !2423, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2424, file: !2425, line: 491, baseType: !2423, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !2424, file: !2425, line: 493, baseType: !2430, size: 64, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !357, line: 169, size: 2048, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2523, !2526, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2431, file: !357, line: 170, baseType: !2430, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2431, file: !357, line: 170, baseType: !2430, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !2431, file: !357, line: 172, baseType: !564, size: 64, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2431, file: !357, line: 174, baseType: !2437, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !511, line: 49, size: 1984, elements: !2439)
!2439 = !{!2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2438, file: !511, line: 50, baseType: !678, size: 960)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !2438, file: !511, line: 52, baseType: !559, size: 128, offset: 960)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !2438, file: !511, line: 53, baseType: !559, size: 128, offset: 1088)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !2438, file: !511, line: 54, baseType: !559, size: 128, offset: 1216)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2438, file: !511, line: 55, baseType: !559, size: 128, offset: 1344)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2438, file: !511, line: 57, baseType: !1057, size: 64, offset: 1472)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !2438, file: !511, line: 58, baseType: !1057, size: 64, offset: 1536)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !2438, file: !511, line: 60, baseType: !20, size: 32, offset: 1600)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2438, file: !511, line: 61, baseType: !20, size: 32, offset: 1632)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2438, file: !511, line: 63, baseType: !585, size: 16, offset: 1664)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2438, file: !511, line: 64, baseType: !585, size: 16, offset: 1680)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2438, file: !511, line: 65, baseType: !585, size: 16, offset: 1696)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2438, file: !511, line: 66, baseType: !585, size: 16, offset: 1712)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2438, file: !511, line: 67, baseType: !585, size: 16, offset: 1728)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !2438, file: !511, line: 68, baseType: !585, size: 16, offset: 1744)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !2438, file: !511, line: 69, baseType: !585, size: 16, offset: 1760)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !2438, file: !511, line: 70, baseType: !585, size: 16, offset: 1776)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2438, file: !511, line: 71, baseType: !585, size: 16, offset: 1792)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !2438, file: !511, line: 73, baseType: !585, size: 16, offset: 1808)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !2438, file: !511, line: 74, baseType: !585, size: 16, offset: 1824)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2438, file: !511, line: 76, baseType: !585, size: 16, offset: 1840)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !2438, file: !511, line: 78, baseType: !2423, size: 64, offset: 1856)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2438, file: !511, line: 79, baseType: !564, size: 64, offset: 1920)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !2431, file: !357, line: 175, baseType: !2437, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !2431, file: !357, line: 176, baseType: !569, size: 512, offset: 320)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !2431, file: !357, line: 178, baseType: !585, size: 16, offset: 832)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !2431, file: !357, line: 178, baseType: !585, size: 16, offset: 848)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2431, file: !357, line: 178, baseType: !585, size: 16, offset: 864)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2431, file: !357, line: 178, baseType: !585, size: 16, offset: 880)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !2431, file: !357, line: 179, baseType: !585, size: 16, offset: 896)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !2431, file: !357, line: 180, baseType: !585, size: 16, offset: 912)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2431, file: !357, line: 181, baseType: !585, size: 16, offset: 928)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2431, file: !357, line: 182, baseType: !585, size: 16, offset: 944)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !2431, file: !357, line: 183, baseType: !585, size: 16, offset: 960)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !2431, file: !357, line: 184, baseType: !585, size: 16, offset: 976)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !2431, file: !357, line: 185, baseType: !585, size: 16, offset: 992)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !2431, file: !357, line: 186, baseType: !585, size: 16, offset: 1008)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2431, file: !357, line: 188, baseType: !20, size: 32, offset: 1024)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !2431, file: !357, line: 190, baseType: !585, size: 16, offset: 1056)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !2431, file: !357, line: 191, baseType: !585, size: 16, offset: 1072)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !2431, file: !357, line: 194, baseType: !2481, size: 64, offset: 1088)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !2425, line: 421, size: 960, elements: !2483)
!2483 = !{!2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2511, !2519, !2520, !2521, !2522}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !2425, line: 422, baseType: !2481, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2482, file: !2425, line: 422, baseType: !2481, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2482, file: !2425, line: 424, baseType: !585, size: 16, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2482, file: !2425, line: 425, baseType: !585, size: 16, offset: 144)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2482, file: !2425, line: 426, baseType: !20, size: 32, offset: 160)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2482, file: !2425, line: 426, baseType: !20, size: 32, offset: 192)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2482, file: !2425, line: 427, baseType: !1309, size: 64, offset: 224)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2482, file: !2425, line: 428, baseType: !1859, size: 48, offset: 288)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2482, file: !2425, line: 431, baseType: !570, size: 8, offset: 336)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2482, file: !2425, line: 432, baseType: !570, size: 8, offset: 344)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2482, file: !2425, line: 435, baseType: !585, size: 16, offset: 352)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2482, file: !2425, line: 436, baseType: !585, size: 16, offset: 368)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2482, file: !2425, line: 437, baseType: !20, size: 32, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2482, file: !2425, line: 437, baseType: !20, size: 32, offset: 416)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2482, file: !2425, line: 438, baseType: !2499, size: 64, offset: 448)
!2499 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2482, file: !2425, line: 439, baseType: !20, size: 32, offset: 512)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2482, file: !2425, line: 439, baseType: !20, size: 32, offset: 544)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2482, file: !2425, line: 442, baseType: !585, size: 16, offset: 576)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2482, file: !2425, line: 442, baseType: !585, size: 16, offset: 592)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2482, file: !2425, line: 442, baseType: !585, size: 16, offset: 608)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2482, file: !2425, line: 442, baseType: !585, size: 16, offset: 624)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2482, file: !2425, line: 443, baseType: !585, size: 16, offset: 640)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2482, file: !2425, line: 446, baseType: !585, size: 16, offset: 656)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2482, file: !2425, line: 449, baseType: !2509, size: 64, offset: 704)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2482, file: !2425, line: 452, baseType: !2512, size: 64, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !2425, line: 463, size: 128, elements: !2514)
!2514 = !{!2515, !2516, !2517, !2518}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2513, file: !2425, line: 464, baseType: !20, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2513, file: !2425, line: 465, baseType: !607, size: 32, offset: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2513, file: !2425, line: 466, baseType: !607, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2513, file: !2425, line: 467, baseType: !607, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2482, file: !2425, line: 455, baseType: !585, size: 16, offset: 832)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2482, file: !2425, line: 456, baseType: !585, size: 16, offset: 848)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2482, file: !2425, line: 457, baseType: !20, size: 32, offset: 864)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2482, file: !2425, line: 458, baseType: !564, size: 64, offset: 896)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !2431, file: !357, line: 196, baseType: !2524, size: 64, offset: 1152)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !357, line: 55, flags: DIFlagFwdDecl)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !2431, file: !357, line: 198, baseType: !2527, size: 64, offset: 1216)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !2425, line: 398, size: 448, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2528, file: !2425, line: 399, baseType: !2527, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2528, file: !2425, line: 399, baseType: !2527, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2528, file: !2425, line: 400, baseType: !20, size: 32, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2528, file: !2425, line: 401, baseType: !20, size: 32, offset: 160)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2528, file: !2425, line: 402, baseType: !20, size: 32, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2528, file: !2425, line: 403, baseType: !20, size: 32, offset: 224)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2528, file: !2425, line: 404, baseType: !20, size: 32, offset: 256)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2528, file: !2425, line: 405, baseType: !20, size: 32, offset: 288)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2528, file: !2425, line: 407, baseType: !564, size: 64, offset: 320)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2528, file: !2425, line: 414, baseType: !564, size: 64, offset: 384)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !2431, file: !357, line: 200, baseType: !20, size: 32, offset: 1280)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !2431, file: !357, line: 200, baseType: !20, size: 32, offset: 1312)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !2431, file: !357, line: 201, baseType: !564, size: 64, offset: 1344)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2431, file: !357, line: 203, baseType: !559, size: 128, offset: 1408)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2431, file: !357, line: 204, baseType: !559, size: 128, offset: 1536)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !2431, file: !357, line: 205, baseType: !559, size: 128, offset: 1664)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !2431, file: !357, line: 207, baseType: !559, size: 128, offset: 1792)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !2431, file: !357, line: 208, baseType: !559, size: 128, offset: 1920)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !2424, file: !2425, line: 495, baseType: !2499, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2424, file: !2425, line: 496, baseType: !20, size: 32, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2424, file: !2425, line: 497, baseType: !564, size: 64, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2424, file: !2425, line: 499, baseType: !2499, size: 64, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2424, file: !2425, line: 500, baseType: !2499, size: 64, offset: 448)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !2424, file: !2425, line: 502, baseType: !2499, size: 64, offset: 512)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !2424, file: !2425, line: 503, baseType: !2499, size: 64, offset: 576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2424, file: !2425, line: 504, baseType: !2499, size: 64, offset: 640)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !2424, file: !2425, line: 505, baseType: !20, size: 32, offset: 704)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !441, line: 295, baseType: !806)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDopeSheet", file: !72, line: 531, baseType: !2379)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !674, line: 75, baseType: !1090)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "bGPdata", file: !886, line: 144, baseType: !885)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !129, line: 57, baseType: !1578)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceAction", file: !72, line: 605, baseType: !2570)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceAction", file: !72, line: 589, size: 2752, elements: !2571)
!2571 = !{!2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2570, file: !72, line: 590, baseType: !2359, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2570, file: !72, line: 590, baseType: !2359, size: 64, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2570, file: !72, line: 591, baseType: !559, size: 128, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2570, file: !72, line: 592, baseType: !20, size: 32, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2570, file: !72, line: 593, baseType: !607, size: 32, offset: 288)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2570, file: !72, line: 595, baseType: !2368, size: 128, offset: 320)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2570, file: !72, line: 597, baseType: !2390, size: 1280, offset: 448)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2570, file: !72, line: 599, baseType: !741, size: 64, offset: 1728)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !2570, file: !72, line: 600, baseType: !2561, size: 896, offset: 1792)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2570, file: !72, line: 602, baseType: !570, size: 8, offset: 2688)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !2570, file: !72, line: 602, baseType: !570, size: 8, offset: 2696)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2570, file: !72, line: 603, baseType: !585, size: 16, offset: 2704)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "timeslide", scope: !2570, file: !72, line: 604, baseType: !607, size: 32, offset: 2720)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceIpo", file: !366, line: 334, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceIpo", file: !366, line: 315, size: 2048, elements: !2588)
!2588 = !{!2589, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2587, file: !366, line: 316, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !366, line: 91, baseType: !2360)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2587, file: !366, line: 316, baseType: !2590, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2587, file: !366, line: 317, baseType: !559, size: 128, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2587, file: !366, line: 318, baseType: !20, size: 32, offset: 256)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2587, file: !366, line: 319, baseType: !607, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2587, file: !366, line: 320, baseType: !2368, size: 128, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2587, file: !366, line: 322, baseType: !2390, size: 1280, offset: 448)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !2587, file: !366, line: 324, baseType: !2378, size: 64, offset: 1728)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ghostCurves", scope: !2587, file: !366, line: 326, baseType: !559, size: 128, offset: 1792)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2587, file: !366, line: 328, baseType: !585, size: 16, offset: 1920)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !2587, file: !366, line: 329, baseType: !585, size: 16, offset: 1936)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2587, file: !366, line: 330, baseType: !20, size: 32, offset: 1952)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "cursorVal", scope: !2587, file: !366, line: 332, baseType: !607, size: 32, offset: 1984)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2587, file: !366, line: 333, baseType: !20, size: 32, offset: 2016)
!2605 = !{!0, !2606, !2617}
!2606 = !DIGlobalVariableExpression(var: !2607, expr: !DIExpression())
!2607 = distinct !DIGlobalVariable(name: "prop_animchannel_settings_types", scope: !2, file: !3, line: 1770, type: !2608, isLocal: true, isDefinition: true)
!2608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2609, size: 960, elements: !658)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !455, line: 308, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !455, line: 302, size: 320, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2610, file: !455, line: 303, baseType: !20, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2610, file: !455, line: 304, baseType: !2509, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2610, file: !455, line: 305, baseType: !20, size: 32, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2610, file: !455, line: 306, baseType: !2509, size: 64, offset: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2610, file: !455, line: 307, baseType: !2509, size: 64, offset: 256)
!2617 = !DIGlobalVariableExpression(var: !2618, expr: !DIExpression())
!2618 = distinct !DIGlobalVariable(name: "prop_animchannel_rearrange_types", scope: !2, file: !3, line: 649, type: !2619, isLocal: true, isDefinition: true)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2609, size: 1600, elements: !1691)
!2620 = !{i32 7, !"Dwarf Version", i32 4}
!2621 = !{i32 2, !"Debug Info Version", i32 3}
!2622 = !{i32 1, !"wchar_size", i32 4}
!2623 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2624 = distinct !DISubprogram(name: "ANIM_set_active_channel", scope: !3, file: !3, line: 78, type: !2625, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{null, !2627, !564, !2735, !2736, !564, !2737}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimContext", file: !6, line: 89, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimContext", file: !6, line: 71, size: 640, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2683, !2684, !2721, !2722, !2723, !2724, !2725}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2629, file: !6, line: 72, baseType: !564, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !2629, file: !6, line: 73, baseType: !585, size: 16, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2629, file: !6, line: 75, baseType: !585, size: 16, offset: 80)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2629, file: !6, line: 76, baseType: !585, size: 16, offset: 96)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2629, file: !6, line: 77, baseType: !585, size: 16, offset: 112)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2629, file: !6, line: 78, baseType: !2637, size: 64, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !511, line: 203, size: 1280, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2659, !2660, !2661, !2662, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2679, !2680, !2681, !2682}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2638, file: !511, line: 204, baseType: !2637, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2638, file: !511, line: 204, baseType: !2637, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2638, file: !511, line: 206, baseType: !2643, size: 64, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !511, line: 87, baseType: !2645)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !511, line: 82, size: 256, elements: !2646)
!2646 = !{!2647, !2649, !2650, !2651, !2657, !2658}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2645, file: !511, line: 83, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2645, file: !511, line: 83, baseType: !2648, size: 64, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !2645, file: !511, line: 83, baseType: !2648, size: 64, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2645, file: !511, line: 84, baseType: !2652, size: 32, offset: 192)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1146, line: 43, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1146, line: 41, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2653, file: !1146, line: 42, baseType: !585, size: 16)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2653, file: !1146, line: 42, baseType: !585, size: 16, offset: 16)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2645, file: !511, line: 86, baseType: !585, size: 16, offset: 224)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2645, file: !511, line: 86, baseType: !585, size: 16, offset: 240)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2638, file: !511, line: 206, baseType: !2643, size: 64, offset: 192)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2638, file: !511, line: 206, baseType: !2643, size: 64, offset: 256)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2638, file: !511, line: 206, baseType: !2643, size: 64, offset: 320)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !2638, file: !511, line: 207, baseType: !2663, size: 64, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !511, line: 80, baseType: !2438)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !2638, file: !511, line: 209, baseType: !2041, size: 128, offset: 448)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2638, file: !511, line: 211, baseType: !570, size: 8, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !2638, file: !511, line: 211, baseType: !570, size: 8, offset: 584)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2638, file: !511, line: 212, baseType: !585, size: 16, offset: 592)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2638, file: !511, line: 212, baseType: !585, size: 16, offset: 608)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !2638, file: !511, line: 214, baseType: !585, size: 16, offset: 624)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2638, file: !511, line: 215, baseType: !585, size: 16, offset: 640)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2638, file: !511, line: 216, baseType: !585, size: 16, offset: 656)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !2638, file: !511, line: 217, baseType: !585, size: 16, offset: 672)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2638, file: !511, line: 219, baseType: !570, size: 8, offset: 688)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2638, file: !511, line: 219, baseType: !570, size: 8, offset: 696)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2638, file: !511, line: 221, baseType: !2677, size: 64, offset: 704)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !511, line: 39, flags: DIFlagFwdDecl)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !2638, file: !511, line: 223, baseType: !559, size: 128, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2638, file: !511, line: 224, baseType: !559, size: 128, offset: 896)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2638, file: !511, line: 225, baseType: !559, size: 128, offset: 1024)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !2638, file: !511, line: 227, baseType: !559, size: 128, offset: 1152)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !2629, file: !6, line: 79, baseType: !2359, size: 64, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !2629, file: !6, line: 80, baseType: !2685, size: 64, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !511, line: 230, size: 3072, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2686, file: !511, line: 231, baseType: !2685, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2686, file: !511, line: 231, baseType: !2685, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2686, file: !511, line: 233, baseType: !2390, size: 1280, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !2686, file: !511, line: 234, baseType: !2041, size: 128, offset: 1408)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !2686, file: !511, line: 235, baseType: !2041, size: 128, offset: 1536)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2686, file: !511, line: 236, baseType: !585, size: 16, offset: 1664)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2686, file: !511, line: 236, baseType: !585, size: 16, offset: 1680)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2686, file: !511, line: 238, baseType: !585, size: 16, offset: 1696)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2686, file: !511, line: 239, baseType: !585, size: 16, offset: 1712)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2686, file: !511, line: 240, baseType: !585, size: 16, offset: 1728)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2686, file: !511, line: 241, baseType: !585, size: 16, offset: 1744)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2686, file: !511, line: 243, baseType: !607, size: 32, offset: 1760)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2686, file: !511, line: 244, baseType: !585, size: 16, offset: 1792)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2686, file: !511, line: 244, baseType: !585, size: 16, offset: 1808)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2686, file: !511, line: 246, baseType: !585, size: 16, offset: 1824)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !2686, file: !511, line: 247, baseType: !585, size: 16, offset: 1840)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2686, file: !511, line: 248, baseType: !585, size: 16, offset: 1856)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2686, file: !511, line: 249, baseType: !585, size: 16, offset: 1872)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !2686, file: !511, line: 250, baseType: !585, size: 16, offset: 1888)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2686, file: !511, line: 251, baseType: !585, size: 16, offset: 1904)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2686, file: !511, line: 253, baseType: !2709, size: 64, offset: 1920)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !511, line: 42, flags: DIFlagFwdDecl)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !2686, file: !511, line: 255, baseType: !559, size: 128, offset: 1984)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !2686, file: !511, line: 256, baseType: !559, size: 128, offset: 2112)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !2686, file: !511, line: 257, baseType: !559, size: 128, offset: 2240)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !2686, file: !511, line: 258, baseType: !559, size: 128, offset: 2368)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !2686, file: !511, line: 259, baseType: !559, size: 128, offset: 2496)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2686, file: !511, line: 260, baseType: !559, size: 128, offset: 2624)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !2686, file: !511, line: 261, baseType: !559, size: 128, offset: 2752)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !2686, file: !511, line: 263, baseType: !2423, size: 64, offset: 2880)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !2686, file: !511, line: 265, baseType: !654, size: 64, offset: 2944)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !2686, file: !511, line: 266, baseType: !564, size: 64, offset: 3008)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !2629, file: !6, line: 82, baseType: !2378, size: 64, offset: 320)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2629, file: !6, line: 84, baseType: !1057, size: 64, offset: 384)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !2629, file: !6, line: 85, baseType: !805, size: 64, offset: 448)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2629, file: !6, line: 86, baseType: !1042, size: 64, offset: 512)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2629, file: !6, line: 88, baseType: !2726, size: 64, offset: 576)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !357, line: 106, size: 320, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2727, file: !357, line: 107, baseType: !559, size: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !2727, file: !357, line: 108, baseType: !20, size: 32, offset: 128)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !2727, file: !357, line: 109, baseType: !20, size: 32, offset: 160)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2727, file: !357, line: 110, baseType: !20, size: 32, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2727, file: !357, line: 110, baseType: !20, size: 32, offset: 224)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !2727, file: !357, line: 111, baseType: !2423, size: 64, offset: 256)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnimCont_Types", file: !6, line: 103, baseType: !5)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnimFilter_Flags", file: !6, line: 248, baseType: !19)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnim_ChannelType", file: !6, line: 176, baseType: !36)
!2738 = !{}
!2739 = !DILocalVariable(name: "ac", arg: 1, scope: !2624, file: !3, line: 78, type: !2627)
!2740 = !DILocation(line: 78, column: 44, scope: !2624)
!2741 = !DILocalVariable(name: "data", arg: 2, scope: !2624, file: !3, line: 78, type: !564)
!2742 = !DILocation(line: 78, column: 54, scope: !2624)
!2743 = !DILocalVariable(name: "datatype", arg: 3, scope: !2624, file: !3, line: 78, type: !2735)
!2744 = !DILocation(line: 78, column: 76, scope: !2624)
!2745 = !DILocalVariable(name: "filter", arg: 4, scope: !2624, file: !3, line: 78, type: !2736)
!2746 = !DILocation(line: 78, column: 104, scope: !2624)
!2747 = !DILocalVariable(name: "channel_data", arg: 5, scope: !2624, file: !3, line: 78, type: !564)
!2748 = !DILocation(line: 78, column: 118, scope: !2624)
!2749 = !DILocalVariable(name: "channel_type", arg: 6, scope: !2624, file: !3, line: 78, type: !2737)
!2750 = !DILocation(line: 78, column: 150, scope: !2624)
!2751 = !DILocalVariable(name: "anim_data", scope: !2624, file: !3, line: 80, type: !559)
!2752 = !DILocation(line: 80, column: 11, scope: !2624)
!2753 = !DILocalVariable(name: "ale", scope: !2624, file: !3, line: 81, type: !2754)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimListElem", file: !6, line: 125, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimListElem", file: !6, line: 110, size: 512, elements: !2757)
!2757 = !{!2758, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2756, file: !6, line: 111, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2756, file: !6, line: 111, baseType: !2759, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2756, file: !6, line: 113, baseType: !564, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2756, file: !6, line: 114, baseType: !20, size: 32, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2756, file: !6, line: 115, baseType: !20, size: 32, offset: 224)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2756, file: !6, line: 116, baseType: !20, size: 32, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !2756, file: !6, line: 118, baseType: !585, size: 16, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !2756, file: !6, line: 119, baseType: !585, size: 16, offset: 304)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !2756, file: !6, line: 120, baseType: !564, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2756, file: !6, line: 123, baseType: !685, size: 64, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2756, file: !6, line: 124, baseType: !737, size: 64, offset: 448)
!2770 = !DILocation(line: 81, column: 17, scope: !2624)
!2771 = !DILocation(line: 84, column: 23, scope: !2624)
!2772 = !DILocation(line: 84, column: 39, scope: !2624)
!2773 = !DILocation(line: 84, column: 47, scope: !2624)
!2774 = !DILocation(line: 84, column: 53, scope: !2624)
!2775 = !DILocation(line: 84, column: 2, scope: !2624)
!2776 = !DILocation(line: 85, column: 6, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 85, column: 6)
!2778 = !DILocation(line: 85, column: 6, scope: !2624)
!2779 = !DILocation(line: 86, column: 3, scope: !2777)
!2780 = !DILocation(line: 89, column: 23, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 89, column: 2)
!2782 = !DILocation(line: 89, column: 13, scope: !2781)
!2783 = !DILocation(line: 89, column: 11, scope: !2781)
!2784 = !DILocation(line: 89, column: 7, scope: !2781)
!2785 = !DILocation(line: 89, column: 30, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 89, column: 2)
!2787 = !DILocation(line: 89, column: 2, scope: !2781)
!2788 = !DILocation(line: 91, column: 7, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 91, column: 7)
!2790 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 89, column: 52)
!2791 = !DILocation(line: 91, column: 23, scope: !2789)
!2792 = !DILocation(line: 91, column: 28, scope: !2789)
!2793 = !DILocation(line: 91, column: 20, scope: !2789)
!2794 = !DILocation(line: 91, column: 7, scope: !2790)
!2795 = !DILocation(line: 92, column: 4, scope: !2789)
!2796 = !DILocation(line: 95, column: 11, scope: !2790)
!2797 = !DILocation(line: 95, column: 16, scope: !2790)
!2798 = !DILocation(line: 95, column: 3, scope: !2790)
!2799 = !DILocalVariable(name: "agrp", scope: !2800, file: !3, line: 98, type: !551)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 97, column: 4)
!2801 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 95, column: 22)
!2802 = !DILocation(line: 98, column: 19, scope: !2800)
!2803 = !DILocation(line: 98, column: 42, scope: !2800)
!2804 = !DILocation(line: 98, column: 47, scope: !2800)
!2805 = !DILocation(line: 98, column: 26, scope: !2800)
!2806 = !DILocation(line: 100, column: 5, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 100, column: 5)
!2808 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 100, column: 5)
!2809 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 100, column: 5)
!2810 = !DILocation(line: 101, column: 5, scope: !2800)
!2811 = !DILocalVariable(name: "fcu", scope: !2812, file: !3, line: 105, type: !587)
!2812 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 104, column: 4)
!2813 = !DILocation(line: 105, column: 13, scope: !2812)
!2814 = !DILocation(line: 105, column: 29, scope: !2812)
!2815 = !DILocation(line: 105, column: 34, scope: !2812)
!2816 = !DILocation(line: 105, column: 19, scope: !2812)
!2817 = !DILocation(line: 107, column: 5, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 107, column: 5)
!2819 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 107, column: 5)
!2820 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 107, column: 5)
!2821 = !DILocation(line: 108, column: 5, scope: !2812)
!2822 = !DILocalVariable(name: "nlt", scope: !2823, file: !3, line: 112, type: !661)
!2823 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 111, column: 4)
!2824 = !DILocation(line: 112, column: 15, scope: !2823)
!2825 = !DILocation(line: 112, column: 33, scope: !2823)
!2826 = !DILocation(line: 112, column: 38, scope: !2823)
!2827 = !DILocation(line: 112, column: 21, scope: !2823)
!2828 = !DILocation(line: 114, column: 5, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 114, column: 5)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 114, column: 5)
!2831 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 114, column: 5)
!2832 = !DILocation(line: 115, column: 5, scope: !2823)
!2833 = !DILocation(line: 134, column: 9, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 134, column: 9)
!2835 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 132, column: 4)
!2836 = !DILocation(line: 134, column: 14, scope: !2834)
!2837 = !DILocation(line: 134, column: 9, scope: !2835)
!2838 = !DILocation(line: 135, column: 6, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 135, column: 6)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 135, column: 6)
!2841 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 135, column: 6)
!2842 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 134, column: 19)
!2843 = !DILocation(line: 136, column: 5, scope: !2842)
!2844 = !DILocation(line: 137, column: 5, scope: !2835)
!2845 = !DILocation(line: 140, column: 2, scope: !2790)
!2846 = !DILocation(line: 89, column: 41, scope: !2786)
!2847 = !DILocation(line: 89, column: 46, scope: !2786)
!2848 = !DILocation(line: 89, column: 39, scope: !2786)
!2849 = !DILocation(line: 89, column: 2, scope: !2786)
!2850 = distinct !{!2850, !2787, !2851}
!2851 = !DILocation(line: 140, column: 2, scope: !2781)
!2852 = !DILocation(line: 143, column: 6, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 143, column: 6)
!2854 = !DILocation(line: 143, column: 6, scope: !2624)
!2855 = !DILocation(line: 144, column: 11, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 143, column: 20)
!2857 = !DILocation(line: 144, column: 3, scope: !2856)
!2858 = !DILocalVariable(name: "agrp", scope: !2859, file: !3, line: 147, type: !551)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 146, column: 4)
!2860 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 144, column: 25)
!2861 = !DILocation(line: 147, column: 19, scope: !2859)
!2862 = !DILocation(line: 147, column: 42, scope: !2859)
!2863 = !DILocation(line: 147, column: 26, scope: !2859)
!2864 = !DILocation(line: 148, column: 5, scope: !2859)
!2865 = !DILocation(line: 148, column: 11, scope: !2859)
!2866 = !DILocation(line: 148, column: 16, scope: !2859)
!2867 = !DILocation(line: 149, column: 5, scope: !2859)
!2868 = !DILocalVariable(name: "fcu", scope: !2869, file: !3, line: 153, type: !587)
!2869 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 152, column: 4)
!2870 = !DILocation(line: 153, column: 13, scope: !2869)
!2871 = !DILocation(line: 153, column: 29, scope: !2869)
!2872 = !DILocation(line: 153, column: 19, scope: !2869)
!2873 = !DILocation(line: 154, column: 5, scope: !2869)
!2874 = !DILocation(line: 154, column: 10, scope: !2869)
!2875 = !DILocation(line: 154, column: 15, scope: !2869)
!2876 = !DILocation(line: 155, column: 5, scope: !2869)
!2877 = !DILocalVariable(name: "nlt", scope: !2878, file: !3, line: 159, type: !661)
!2878 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 158, column: 4)
!2879 = !DILocation(line: 159, column: 15, scope: !2878)
!2880 = !DILocation(line: 159, column: 33, scope: !2878)
!2881 = !DILocation(line: 159, column: 21, scope: !2878)
!2882 = !DILocation(line: 160, column: 5, scope: !2878)
!2883 = !DILocation(line: 160, column: 10, scope: !2878)
!2884 = !DILocation(line: 160, column: 15, scope: !2878)
!2885 = !DILocation(line: 161, column: 5, scope: !2878)
!2886 = !DILocation(line: 181, column: 9, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 181, column: 9)
!2888 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 179, column: 4)
!2889 = !DILocation(line: 181, column: 13, scope: !2887)
!2890 = !DILocation(line: 181, column: 16, scope: !2887)
!2891 = !DILocation(line: 181, column: 21, scope: !2887)
!2892 = !DILocation(line: 181, column: 9, scope: !2888)
!2893 = !DILocation(line: 182, column: 6, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 181, column: 26)
!2895 = !DILocation(line: 182, column: 11, scope: !2894)
!2896 = !DILocation(line: 182, column: 16, scope: !2894)
!2897 = !DILocation(line: 182, column: 21, scope: !2894)
!2898 = !DILocation(line: 183, column: 5, scope: !2894)
!2899 = !DILocation(line: 184, column: 5, scope: !2888)
!2900 = !DILocation(line: 192, column: 5, scope: !2860)
!2901 = !DILocation(line: 196, column: 5, scope: !2860)
!2902 = !DILocation(line: 198, column: 2, scope: !2856)
!2903 = !DILocation(line: 201, column: 2, scope: !2624)
!2904 = !DILocation(line: 202, column: 1, scope: !2624)
!2905 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !2906, file: !2906, line: 88, type: !2907, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!2906 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2907 = !DISubroutineType(types: !2908)
!2908 = !{!1643, !2909}
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!2911 = !DILocalVariable(name: "lb", arg: 1, scope: !2905, file: !2906, line: 88, type: !2909)
!2912 = !DILocation(line: 88, column: 62, scope: !2905)
!2913 = !DILocation(line: 88, column: 76, scope: !2905)
!2914 = !DILocation(line: 88, column: 80, scope: !2905)
!2915 = !DILocation(line: 88, column: 86, scope: !2905)
!2916 = !DILocation(line: 88, column: 75, scope: !2905)
!2917 = !DILocation(line: 88, column: 68, scope: !2905)
!2918 = distinct !DISubprogram(name: "ANIM_deselect_anim_channels", scope: !3, file: !3, line: 210, type: !2919, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{null, !2627, !564, !2735, !1643, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnimChannels_SetFlag", file: !6, line: 398, baseType: !116)
!2922 = !DILocalVariable(name: "ac", arg: 1, scope: !2918, file: !3, line: 210, type: !2627)
!2923 = !DILocation(line: 210, column: 48, scope: !2918)
!2924 = !DILocalVariable(name: "data", arg: 2, scope: !2918, file: !3, line: 210, type: !564)
!2925 = !DILocation(line: 210, column: 58, scope: !2918)
!2926 = !DILocalVariable(name: "datatype", arg: 3, scope: !2918, file: !3, line: 210, type: !2735)
!2927 = !DILocation(line: 210, column: 80, scope: !2918)
!2928 = !DILocalVariable(name: "test", arg: 4, scope: !2918, file: !3, line: 210, type: !1643)
!2929 = !DILocation(line: 210, column: 95, scope: !2918)
!2930 = !DILocalVariable(name: "sel", arg: 5, scope: !2918, file: !3, line: 210, type: !2921)
!2931 = !DILocation(line: 210, column: 123, scope: !2918)
!2932 = !DILocalVariable(name: "anim_data", scope: !2918, file: !3, line: 212, type: !559)
!2933 = !DILocation(line: 212, column: 11, scope: !2918)
!2934 = !DILocalVariable(name: "ale", scope: !2918, file: !3, line: 213, type: !2754)
!2935 = !DILocation(line: 213, column: 17, scope: !2918)
!2936 = !DILocalVariable(name: "filter", scope: !2918, file: !3, line: 214, type: !20)
!2937 = !DILocation(line: 214, column: 6, scope: !2918)
!2938 = !DILocation(line: 218, column: 9, scope: !2918)
!2939 = !DILocation(line: 219, column: 23, scope: !2918)
!2940 = !DILocation(line: 219, column: 39, scope: !2918)
!2941 = !DILocation(line: 219, column: 47, scope: !2918)
!2942 = !DILocation(line: 219, column: 53, scope: !2918)
!2943 = !DILocation(line: 219, column: 2, scope: !2918)
!2944 = !DILocation(line: 222, column: 6, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 222, column: 6)
!2946 = !DILocation(line: 222, column: 6, scope: !2918)
!2947 = !DILocation(line: 223, column: 24, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 223, column: 3)
!2949 = distinct !DILexicalBlock(scope: !2945, file: !3, line: 222, column: 12)
!2950 = !DILocation(line: 223, column: 14, scope: !2948)
!2951 = !DILocation(line: 223, column: 12, scope: !2948)
!2952 = !DILocation(line: 223, column: 8, scope: !2948)
!2953 = !DILocation(line: 223, column: 31, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 223, column: 3)
!2955 = !DILocation(line: 223, column: 3, scope: !2948)
!2956 = !DILocation(line: 224, column: 8, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 224, column: 8)
!2958 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 223, column: 53)
!2959 = !DILocation(line: 224, column: 12, scope: !2957)
!2960 = !DILocation(line: 224, column: 8, scope: !2958)
!2961 = !DILocation(line: 225, column: 5, scope: !2957)
!2962 = !DILocation(line: 227, column: 12, scope: !2958)
!2963 = !DILocation(line: 227, column: 17, scope: !2958)
!2964 = !DILocation(line: 227, column: 4, scope: !2958)
!2965 = !DILocation(line: 229, column: 10, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 229, column: 10)
!2967 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 227, column: 23)
!2968 = !DILocation(line: 229, column: 15, scope: !2966)
!2969 = !DILocation(line: 229, column: 20, scope: !2966)
!2970 = !DILocation(line: 229, column: 10, scope: !2967)
!2971 = !DILocation(line: 230, column: 11, scope: !2966)
!2972 = !DILocation(line: 230, column: 7, scope: !2966)
!2973 = !DILocation(line: 231, column: 6, scope: !2967)
!2974 = !DILocation(line: 237, column: 6, scope: !2967)
!2975 = !DILocation(line: 239, column: 10, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 239, column: 10)
!2977 = !DILocation(line: 239, column: 15, scope: !2976)
!2978 = !DILocation(line: 239, column: 20, scope: !2976)
!2979 = !DILocation(line: 239, column: 10, scope: !2967)
!2980 = !DILocation(line: 240, column: 11, scope: !2976)
!2981 = !DILocation(line: 240, column: 7, scope: !2976)
!2982 = !DILocation(line: 241, column: 6, scope: !2967)
!2983 = !DILocation(line: 243, column: 10, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 243, column: 10)
!2985 = !DILocation(line: 243, column: 15, scope: !2984)
!2986 = !DILocation(line: 243, column: 20, scope: !2984)
!2987 = !DILocation(line: 243, column: 10, scope: !2967)
!2988 = !DILocation(line: 244, column: 11, scope: !2984)
!2989 = !DILocation(line: 244, column: 7, scope: !2984)
!2990 = !DILocation(line: 245, column: 6, scope: !2967)
!2991 = !DILocation(line: 247, column: 10, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 247, column: 10)
!2993 = !DILocation(line: 247, column: 15, scope: !2992)
!2994 = !DILocation(line: 247, column: 20, scope: !2992)
!2995 = !DILocation(line: 247, column: 10, scope: !2967)
!2996 = !DILocation(line: 248, column: 11, scope: !2992)
!2997 = !DILocation(line: 248, column: 7, scope: !2992)
!2998 = !DILocation(line: 249, column: 6, scope: !2967)
!2999 = !DILocation(line: 251, column: 10, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 251, column: 10)
!3001 = !DILocation(line: 251, column: 15, scope: !3000)
!3002 = !DILocation(line: 251, column: 20, scope: !3000)
!3003 = !DILocation(line: 251, column: 10, scope: !2967)
!3004 = !DILocation(line: 252, column: 11, scope: !3000)
!3005 = !DILocation(line: 252, column: 7, scope: !3000)
!3006 = !DILocation(line: 253, column: 6, scope: !2967)
!3007 = !DILocation(line: 272, column: 11, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 272, column: 10)
!3009 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 271, column: 5)
!3010 = !DILocation(line: 272, column: 16, scope: !3008)
!3011 = !DILocation(line: 272, column: 10, scope: !3008)
!3012 = !DILocation(line: 272, column: 21, scope: !3008)
!3013 = !DILocation(line: 272, column: 25, scope: !3008)
!3014 = !DILocation(line: 272, column: 30, scope: !3008)
!3015 = !DILocation(line: 272, column: 35, scope: !3008)
!3016 = !DILocation(line: 272, column: 40, scope: !3008)
!3017 = !DILocation(line: 272, column: 10, scope: !3009)
!3018 = !DILocation(line: 273, column: 11, scope: !3008)
!3019 = !DILocation(line: 273, column: 7, scope: !3008)
!3020 = !DILocation(line: 274, column: 6, scope: !3009)
!3021 = !DILocation(line: 277, column: 10, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 277, column: 10)
!3023 = !DILocation(line: 277, column: 15, scope: !3022)
!3024 = !DILocation(line: 277, column: 20, scope: !3022)
!3025 = !DILocation(line: 277, column: 10, scope: !2967)
!3026 = !DILocation(line: 278, column: 11, scope: !3022)
!3027 = !DILocation(line: 278, column: 7, scope: !3022)
!3028 = !DILocation(line: 279, column: 6, scope: !2967)
!3029 = !DILocation(line: 281, column: 10, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 281, column: 10)
!3031 = !DILocation(line: 281, column: 15, scope: !3030)
!3032 = !DILocation(line: 281, column: 20, scope: !3030)
!3033 = !DILocation(line: 281, column: 10, scope: !2967)
!3034 = !DILocation(line: 282, column: 11, scope: !3030)
!3035 = !DILocation(line: 282, column: 7, scope: !3030)
!3036 = !DILocation(line: 283, column: 6, scope: !2967)
!3037 = !DILocation(line: 285, column: 3, scope: !2958)
!3038 = !DILocation(line: 223, column: 42, scope: !2954)
!3039 = !DILocation(line: 223, column: 47, scope: !2954)
!3040 = !DILocation(line: 223, column: 40, scope: !2954)
!3041 = !DILocation(line: 223, column: 3, scope: !2954)
!3042 = distinct !{!3042, !2955, !3043}
!3043 = !DILocation(line: 285, column: 3, scope: !2948)
!3044 = !DILocation(line: 286, column: 2, scope: !2949)
!3045 = !DILocation(line: 289, column: 23, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 289, column: 2)
!3047 = !DILocation(line: 289, column: 13, scope: !3046)
!3048 = !DILocation(line: 289, column: 11, scope: !3046)
!3049 = !DILocation(line: 289, column: 7, scope: !3046)
!3050 = !DILocation(line: 289, column: 30, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 289, column: 2)
!3052 = !DILocation(line: 289, column: 2, scope: !3046)
!3053 = !DILocation(line: 290, column: 11, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 289, column: 52)
!3055 = !DILocation(line: 290, column: 16, scope: !3054)
!3056 = !DILocation(line: 290, column: 3, scope: !3054)
!3057 = !DILocalVariable(name: "scene", scope: !3058, file: !3, line: 293, type: !672)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 292, column: 4)
!3059 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 290, column: 22)
!3060 = !DILocation(line: 293, column: 12, scope: !3058)
!3061 = !DILocation(line: 293, column: 29, scope: !3058)
!3062 = !DILocation(line: 293, column: 34, scope: !3058)
!3063 = !DILocation(line: 293, column: 20, scope: !3058)
!3064 = !DILocation(line: 295, column: 5, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 295, column: 5)
!3066 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 295, column: 5)
!3067 = !DILocation(line: 295, column: 5, scope: !3066)
!3068 = !DILocation(line: 295, column: 5, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 295, column: 5)
!3070 = !DILocation(line: 297, column: 9, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 297, column: 9)
!3072 = !DILocation(line: 297, column: 16, scope: !3071)
!3073 = !DILocation(line: 297, column: 9, scope: !3058)
!3074 = !DILocation(line: 298, column: 6, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 298, column: 6)
!3076 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 298, column: 6)
!3077 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 297, column: 21)
!3078 = !DILocation(line: 298, column: 6, scope: !3076)
!3079 = !DILocation(line: 298, column: 6, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 298, column: 6)
!3081 = !DILocation(line: 299, column: 5, scope: !3077)
!3082 = !DILocation(line: 300, column: 5, scope: !3058)
!3083 = !DILocation(line: 315, column: 5, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 303, column: 4)
!3085 = !DILocalVariable(name: "agrp", scope: !3086, file: !3, line: 319, type: !551)
!3086 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 318, column: 4)
!3087 = !DILocation(line: 319, column: 19, scope: !3086)
!3088 = !DILocation(line: 319, column: 42, scope: !3086)
!3089 = !DILocation(line: 319, column: 47, scope: !3086)
!3090 = !DILocation(line: 319, column: 26, scope: !3086)
!3091 = !DILocation(line: 321, column: 5, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 321, column: 5)
!3093 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 321, column: 5)
!3094 = !DILocation(line: 321, column: 5, scope: !3093)
!3095 = !DILocation(line: 321, column: 5, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 321, column: 5)
!3097 = !DILocation(line: 322, column: 5, scope: !3086)
!3098 = !DILocation(line: 322, column: 11, scope: !3086)
!3099 = !DILocation(line: 322, column: 16, scope: !3086)
!3100 = !DILocation(line: 323, column: 5, scope: !3086)
!3101 = !DILocalVariable(name: "fcu", scope: !3102, file: !3, line: 327, type: !587)
!3102 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 326, column: 4)
!3103 = !DILocation(line: 327, column: 13, scope: !3102)
!3104 = !DILocation(line: 327, column: 29, scope: !3102)
!3105 = !DILocation(line: 327, column: 34, scope: !3102)
!3106 = !DILocation(line: 327, column: 19, scope: !3102)
!3107 = !DILocation(line: 329, column: 5, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 329, column: 5)
!3109 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 329, column: 5)
!3110 = !DILocation(line: 329, column: 5, scope: !3109)
!3111 = !DILocation(line: 329, column: 5, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 329, column: 5)
!3113 = !DILocation(line: 330, column: 5, scope: !3102)
!3114 = !DILocation(line: 330, column: 10, scope: !3102)
!3115 = !DILocation(line: 330, column: 15, scope: !3102)
!3116 = !DILocation(line: 331, column: 5, scope: !3102)
!3117 = !DILocalVariable(name: "kb", scope: !3118, file: !3, line: 335, type: !2252)
!3118 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 334, column: 4)
!3119 = !DILocation(line: 335, column: 15, scope: !3118)
!3120 = !DILocation(line: 335, column: 32, scope: !3118)
!3121 = !DILocation(line: 335, column: 37, scope: !3118)
!3122 = !DILocation(line: 335, column: 20, scope: !3118)
!3123 = !DILocation(line: 337, column: 5, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 337, column: 5)
!3125 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 337, column: 5)
!3126 = !DILocation(line: 337, column: 5, scope: !3125)
!3127 = !DILocation(line: 337, column: 5, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 337, column: 5)
!3129 = !DILocation(line: 338, column: 5, scope: !3118)
!3130 = !DILocalVariable(name: "nlt", scope: !3131, file: !3, line: 342, type: !661)
!3131 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 341, column: 4)
!3132 = !DILocation(line: 342, column: 15, scope: !3131)
!3133 = !DILocation(line: 342, column: 33, scope: !3131)
!3134 = !DILocation(line: 342, column: 38, scope: !3131)
!3135 = !DILocation(line: 342, column: 21, scope: !3131)
!3136 = !DILocation(line: 344, column: 5, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 344, column: 5)
!3138 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 344, column: 5)
!3139 = !DILocation(line: 344, column: 5, scope: !3138)
!3140 = !DILocation(line: 344, column: 5, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 344, column: 5)
!3142 = !DILocation(line: 345, column: 5, scope: !3131)
!3143 = !DILocation(line: 345, column: 10, scope: !3131)
!3144 = !DILocation(line: 345, column: 15, scope: !3131)
!3145 = !DILocation(line: 346, column: 5, scope: !3131)
!3146 = !DILocation(line: 366, column: 9, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 366, column: 9)
!3148 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 364, column: 4)
!3149 = !DILocation(line: 366, column: 14, scope: !3147)
!3150 = !DILocation(line: 366, column: 9, scope: !3148)
!3151 = !DILocation(line: 367, column: 6, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 367, column: 6)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 367, column: 6)
!3154 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 366, column: 19)
!3155 = !DILocation(line: 367, column: 6, scope: !3153)
!3156 = !DILocation(line: 367, column: 6, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 367, column: 6)
!3158 = !DILocation(line: 368, column: 6, scope: !3154)
!3159 = !DILocation(line: 368, column: 11, scope: !3154)
!3160 = !DILocation(line: 368, column: 16, scope: !3154)
!3161 = !DILocation(line: 368, column: 21, scope: !3154)
!3162 = !DILocation(line: 369, column: 5, scope: !3154)
!3163 = !DILocation(line: 370, column: 5, scope: !3148)
!3164 = !DILocalVariable(name: "gpl", scope: !3165, file: !3, line: 374, type: !2272)
!3165 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 373, column: 4)
!3166 = !DILocation(line: 374, column: 16, scope: !3165)
!3167 = !DILocation(line: 374, column: 35, scope: !3165)
!3168 = !DILocation(line: 374, column: 40, scope: !3165)
!3169 = !DILocation(line: 374, column: 22, scope: !3165)
!3170 = !DILocation(line: 376, column: 5, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 376, column: 5)
!3172 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 376, column: 5)
!3173 = !DILocation(line: 376, column: 5, scope: !3172)
!3174 = !DILocation(line: 376, column: 5, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 376, column: 5)
!3176 = !DILocation(line: 377, column: 5, scope: !3165)
!3177 = !DILocalVariable(name: "masklay", scope: !3178, file: !3, line: 381, type: !2296)
!3178 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 380, column: 4)
!3179 = !DILocation(line: 381, column: 16, scope: !3178)
!3180 = !DILocation(line: 381, column: 39, scope: !3178)
!3181 = !DILocation(line: 381, column: 44, scope: !3178)
!3182 = !DILocation(line: 381, column: 26, scope: !3178)
!3183 = !DILocation(line: 383, column: 5, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 383, column: 5)
!3185 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 383, column: 5)
!3186 = !DILocation(line: 383, column: 5, scope: !3185)
!3187 = !DILocation(line: 383, column: 5, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 383, column: 5)
!3189 = !DILocation(line: 384, column: 5, scope: !3178)
!3190 = !DILocation(line: 387, column: 2, scope: !3054)
!3191 = !DILocation(line: 289, column: 41, scope: !3051)
!3192 = !DILocation(line: 289, column: 46, scope: !3051)
!3193 = !DILocation(line: 289, column: 39, scope: !3051)
!3194 = !DILocation(line: 289, column: 2, scope: !3051)
!3195 = distinct !{!3195, !3052, !3196}
!3196 = !DILocation(line: 387, column: 2, scope: !3046)
!3197 = !DILocation(line: 390, column: 2, scope: !2918)
!3198 = !DILocation(line: 391, column: 1, scope: !2918)
!3199 = distinct !DISubprogram(name: "ANIM_flush_setting_anim_channels", scope: !3, file: !3, line: 404, type: !3200, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null, !2627, !1042, !2754, !3202, !2921}
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnimChannel_Settings", file: !6, line: 409, baseType: !135)
!3203 = !DILocalVariable(name: "ac", arg: 1, scope: !3199, file: !3, line: 404, type: !2627)
!3204 = !DILocation(line: 404, column: 53, scope: !3199)
!3205 = !DILocalVariable(name: "anim_data", arg: 2, scope: !3199, file: !3, line: 404, type: !1042)
!3206 = !DILocation(line: 404, column: 67, scope: !3199)
!3207 = !DILocalVariable(name: "ale_setting", arg: 3, scope: !3199, file: !3, line: 404, type: !2754)
!3208 = !DILocation(line: 404, column: 93, scope: !3199)
!3209 = !DILocalVariable(name: "setting", arg: 4, scope: !3199, file: !3, line: 404, type: !3202)
!3210 = !DILocation(line: 404, column: 128, scope: !3199)
!3211 = !DILocalVariable(name: "mode", arg: 5, scope: !3199, file: !3, line: 404, type: !2921)
!3212 = !DILocation(line: 404, column: 159, scope: !3199)
!3213 = !DILocalVariable(name: "ale", scope: !3199, file: !3, line: 406, type: !2754)
!3214 = !DILocation(line: 406, column: 17, scope: !3199)
!3215 = !DILocalVariable(name: "match", scope: !3199, file: !3, line: 406, type: !2754)
!3216 = !DILocation(line: 406, column: 23, scope: !3199)
!3217 = !DILocalVariable(name: "prevLevel", scope: !3199, file: !3, line: 407, type: !20)
!3218 = !DILocation(line: 407, column: 6, scope: !3199)
!3219 = !DILocalVariable(name: "matchLevel", scope: !3199, file: !3, line: 407, type: !20)
!3220 = !DILocation(line: 407, column: 21, scope: !3199)
!3221 = !DILocation(line: 410, column: 6, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 410, column: 6)
!3223 = !DILocation(line: 410, column: 6, scope: !3199)
!3224 = !DILocation(line: 411, column: 3, scope: !3222)
!3225 = !DILocation(line: 414, column: 13, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 414, column: 2)
!3227 = !DILocation(line: 414, column: 24, scope: !3226)
!3228 = !DILocation(line: 414, column: 11, scope: !3226)
!3229 = !DILocation(line: 414, column: 7, scope: !3226)
!3230 = !DILocation(line: 414, column: 31, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 414, column: 2)
!3232 = !DILocation(line: 414, column: 2, scope: !3226)
!3233 = !DILocation(line: 416, column: 8, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 416, column: 7)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 414, column: 53)
!3236 = !DILocation(line: 416, column: 13, scope: !3234)
!3237 = !DILocation(line: 416, column: 21, scope: !3234)
!3238 = !DILocation(line: 416, column: 34, scope: !3234)
!3239 = !DILocation(line: 416, column: 18, scope: !3234)
!3240 = !DILocation(line: 416, column: 40, scope: !3234)
!3241 = !DILocation(line: 416, column: 44, scope: !3234)
!3242 = !DILocation(line: 416, column: 49, scope: !3234)
!3243 = !DILocation(line: 416, column: 57, scope: !3234)
!3244 = !DILocation(line: 416, column: 70, scope: !3234)
!3245 = !DILocation(line: 416, column: 54, scope: !3234)
!3246 = !DILocation(line: 416, column: 7, scope: !3235)
!3247 = !DILocation(line: 419, column: 8, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 419, column: 8)
!3249 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 416, column: 77)
!3250 = !DILocation(line: 419, column: 13, scope: !3248)
!3251 = !DILocation(line: 419, column: 19, scope: !3248)
!3252 = !DILocation(line: 419, column: 32, scope: !3248)
!3253 = !DILocation(line: 419, column: 16, scope: !3248)
!3254 = !DILocation(line: 419, column: 8, scope: !3249)
!3255 = !DILocation(line: 420, column: 13, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 419, column: 36)
!3257 = !DILocation(line: 420, column: 11, scope: !3256)
!3258 = !DILocation(line: 421, column: 5, scope: !3256)
!3259 = !DILocation(line: 423, column: 3, scope: !3249)
!3260 = !DILocation(line: 424, column: 2, scope: !3235)
!3261 = !DILocation(line: 414, column: 42, scope: !3231)
!3262 = !DILocation(line: 414, column: 47, scope: !3231)
!3263 = !DILocation(line: 414, column: 40, scope: !3231)
!3264 = !DILocation(line: 414, column: 2, scope: !3231)
!3265 = distinct !{!3265, !3232, !3266}
!3266 = !DILocation(line: 424, column: 2, scope: !3226)
!3267 = !DILocation(line: 425, column: 6, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 425, column: 6)
!3269 = !DILocation(line: 425, column: 12, scope: !3268)
!3270 = !DILocation(line: 425, column: 6, scope: !3199)
!3271 = !DILocation(line: 426, column: 3, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 425, column: 21)
!3273 = !DILocation(line: 427, column: 3, scope: !3272)
!3274 = !DILocalVariable(name: "acf", scope: !3275, file: !3, line: 430, type: !3276)
!3275 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 429, column: 7)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimChannelType", file: !6, line: 447, baseType: !3278)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimChannelType", file: !6, line: 413, size: 768, elements: !3279)
!3279 = !{!3280, !3281, !3283, !3287, !3291, !3295, !3296, !3300, !3317, !3321, !3325, !3330}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "channel_type_name", scope: !3278, file: !6, line: 416, baseType: !2509, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "channel_role", scope: !3278, file: !6, line: 418, baseType: !3282, size: 32, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "eAnimChannel_Role", file: !6, line: 390, baseType: !144)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "get_backdrop_color", scope: !3278, file: !6, line: 422, baseType: !3284, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{null, !2627, !2754, !2416}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !3278, file: !6, line: 424, baseType: !3288, size: 64, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !2627, !2754, !607, !607}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "get_indent_level", scope: !3278, file: !6, line: 426, baseType: !3292, size: 64, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!585, !2627, !2754}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "get_offset", scope: !3278, file: !6, line: 428, baseType: !3292, size: 64, offset: 320)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3278, file: !6, line: 431, baseType: !3297, size: 64, offset: 384)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{null, !2754, !654}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "name_prop", scope: !3278, file: !6, line: 433, baseType: !3301, size: 64, offset: 448)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!1643, !2754, !3304, !3313}
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !455, line: 55, size: 192, elements: !3306)
!3306 = !{!3307, !3311, !3312}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3305, file: !455, line: 58, baseType: !3308, size: 64)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3305, file: !455, line: 56, size: 64, elements: !3309)
!3309 = !{!3310}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3308, file: !455, line: 57, baseType: !564, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3305, file: !455, line: 60, baseType: !1126, size: 64, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3305, file: !455, line: 61, baseType: !564, size: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !3316, line: 48, flags: DIFlagFwdDecl)
!3316 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_library.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3278, file: !6, line: 435, baseType: !3318, size: 64, offset: 512)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!20, !2754}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "has_setting", scope: !3278, file: !6, line: 439, baseType: !3322, size: 64, offset: 576)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!1643, !2627, !2754, !3202}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "setting_flag", scope: !3278, file: !6, line: 441, baseType: !3326, size: 64, offset: 640)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!20, !2627, !3202, !3329}
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "setting_ptr", scope: !3278, file: !6, line: 446, baseType: !3331, size: 64, offset: 704)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!564, !2754, !3202, !2557}
!3334 = !DILocation(line: 430, column: 21, scope: !3275)
!3335 = !DILocation(line: 430, column: 53, scope: !3275)
!3336 = !DILocation(line: 430, column: 27, scope: !3275)
!3337 = !DILocation(line: 432, column: 7, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 432, column: 7)
!3339 = !DILocation(line: 432, column: 11, scope: !3338)
!3340 = !DILocation(line: 432, column: 7, scope: !3275)
!3341 = !DILocation(line: 433, column: 4, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 432, column: 20)
!3343 = !DILocation(line: 434, column: 4, scope: !3342)
!3344 = !DILocation(line: 440, column: 17, scope: !3275)
!3345 = !DILocation(line: 440, column: 22, scope: !3275)
!3346 = !DILocation(line: 440, column: 16, scope: !3275)
!3347 = !DILocation(line: 440, column: 36, scope: !3275)
!3348 = !DILocation(line: 440, column: 41, scope: !3275)
!3349 = !DILocation(line: 440, column: 52, scope: !3275)
!3350 = !DILocation(line: 440, column: 56, scope: !3275)
!3351 = !DILocation(line: 440, column: 14, scope: !3275)
!3352 = !DILocation(line: 441, column: 15, scope: !3275)
!3353 = !DILocation(line: 441, column: 13, scope: !3275)
!3354 = !DILocation(line: 454, column: 9, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 454, column: 7)
!3356 = !DILocation(line: 454, column: 17, scope: !3355)
!3357 = !DILocation(line: 454, column: 46, scope: !3355)
!3358 = !DILocation(line: 454, column: 50, scope: !3355)
!3359 = !DILocation(line: 454, column: 55, scope: !3355)
!3360 = !DILocation(line: 454, column: 83, scope: !3355)
!3361 = !DILocation(line: 455, column: 9, scope: !3355)
!3362 = !DILocation(line: 455, column: 17, scope: !3355)
!3363 = !DILocation(line: 455, column: 46, scope: !3355)
!3364 = !DILocation(line: 455, column: 50, scope: !3355)
!3365 = !DILocation(line: 455, column: 55, scope: !3355)
!3366 = !DILocation(line: 454, column: 7, scope: !3199)
!3367 = !DILocation(line: 458, column: 14, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 458, column: 3)
!3369 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 456, column: 2)
!3370 = !DILocation(line: 458, column: 21, scope: !3368)
!3371 = !DILocation(line: 458, column: 12, scope: !3368)
!3372 = !DILocation(line: 458, column: 8, scope: !3368)
!3373 = !DILocation(line: 458, column: 27, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 458, column: 3)
!3375 = !DILocation(line: 458, column: 3, scope: !3368)
!3376 = !DILocalVariable(name: "acf", scope: !3377, file: !3, line: 459, type: !3276)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 458, column: 49)
!3378 = !DILocation(line: 459, column: 22, scope: !3377)
!3379 = !DILocation(line: 459, column: 54, scope: !3377)
!3380 = !DILocation(line: 459, column: 28, scope: !3377)
!3381 = !DILocalVariable(name: "level", scope: !3377, file: !3, line: 460, type: !20)
!3382 = !DILocation(line: 460, column: 8, scope: !3377)
!3383 = !DILocation(line: 463, column: 8, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 463, column: 8)
!3385 = !DILocation(line: 463, column: 12, scope: !3384)
!3386 = !DILocation(line: 463, column: 8, scope: !3377)
!3387 = !DILocation(line: 464, column: 5, scope: !3384)
!3388 = !DILocation(line: 469, column: 13, scope: !3377)
!3389 = !DILocation(line: 469, column: 18, scope: !3377)
!3390 = !DILocation(line: 469, column: 12, scope: !3377)
!3391 = !DILocation(line: 469, column: 32, scope: !3377)
!3392 = !DILocation(line: 469, column: 37, scope: !3377)
!3393 = !DILocation(line: 469, column: 48, scope: !3377)
!3394 = !DILocation(line: 469, column: 52, scope: !3377)
!3395 = !DILocation(line: 469, column: 10, scope: !3377)
!3396 = !DILocation(line: 476, column: 8, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 476, column: 8)
!3398 = !DILocation(line: 476, column: 16, scope: !3397)
!3399 = !DILocation(line: 476, column: 14, scope: !3397)
!3400 = !DILocation(line: 476, column: 8, scope: !3377)
!3401 = !DILocation(line: 478, column: 30, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 476, column: 27)
!3403 = !DILocation(line: 478, column: 34, scope: !3402)
!3404 = !DILocation(line: 478, column: 39, scope: !3402)
!3405 = !DILocation(line: 478, column: 48, scope: !3402)
!3406 = !DILocation(line: 478, column: 5, scope: !3402)
!3407 = !DILocation(line: 481, column: 17, scope: !3402)
!3408 = !DILocation(line: 481, column: 15, scope: !3402)
!3409 = !DILocation(line: 482, column: 4, scope: !3402)
!3410 = !DILocation(line: 484, column: 13, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 484, column: 13)
!3412 = !DILocation(line: 484, column: 21, scope: !3411)
!3413 = !DILocation(line: 484, column: 19, scope: !3411)
!3414 = !DILocation(line: 484, column: 13, scope: !3397)
!3415 = !DILocation(line: 488, column: 9, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 488, column: 9)
!3417 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 484, column: 32)
!3418 = !DILocation(line: 488, column: 19, scope: !3416)
!3419 = !DILocation(line: 488, column: 9, scope: !3417)
!3420 = !DILocation(line: 489, column: 6, scope: !3416)
!3421 = !DILocation(line: 494, column: 6, scope: !3416)
!3422 = !DILocation(line: 496, column: 3, scope: !3377)
!3423 = !DILocation(line: 458, column: 38, scope: !3374)
!3424 = !DILocation(line: 458, column: 43, scope: !3374)
!3425 = !DILocation(line: 458, column: 36, scope: !3374)
!3426 = !DILocation(line: 458, column: 3, scope: !3374)
!3427 = distinct !{!3427, !3375, !3428}
!3428 = !DILocation(line: 496, column: 3, scope: !3368)
!3429 = !DILocation(line: 497, column: 2, scope: !3369)
!3430 = !DILocation(line: 502, column: 14, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 502, column: 3)
!3432 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 500, column: 2)
!3433 = !DILocation(line: 502, column: 21, scope: !3431)
!3434 = !DILocation(line: 502, column: 12, scope: !3431)
!3435 = !DILocation(line: 502, column: 8, scope: !3431)
!3436 = !DILocation(line: 502, column: 27, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 502, column: 3)
!3438 = !DILocation(line: 502, column: 3, scope: !3431)
!3439 = !DILocalVariable(name: "acf", scope: !3440, file: !3, line: 503, type: !3276)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 502, column: 49)
!3441 = !DILocation(line: 503, column: 22, scope: !3440)
!3442 = !DILocation(line: 503, column: 54, scope: !3440)
!3443 = !DILocation(line: 503, column: 28, scope: !3440)
!3444 = !DILocalVariable(name: "level", scope: !3440, file: !3, line: 504, type: !20)
!3445 = !DILocation(line: 504, column: 8, scope: !3440)
!3446 = !DILocation(line: 507, column: 8, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 507, column: 8)
!3448 = !DILocation(line: 507, column: 12, scope: !3447)
!3449 = !DILocation(line: 507, column: 8, scope: !3440)
!3450 = !DILocation(line: 508, column: 5, scope: !3447)
!3451 = !DILocation(line: 513, column: 13, scope: !3440)
!3452 = !DILocation(line: 513, column: 18, scope: !3440)
!3453 = !DILocation(line: 513, column: 12, scope: !3440)
!3454 = !DILocation(line: 513, column: 32, scope: !3440)
!3455 = !DILocation(line: 513, column: 37, scope: !3440)
!3456 = !DILocation(line: 513, column: 48, scope: !3440)
!3457 = !DILocation(line: 513, column: 52, scope: !3440)
!3458 = !DILocation(line: 513, column: 10, scope: !3440)
!3459 = !DILocation(line: 518, column: 8, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 518, column: 8)
!3461 = !DILocation(line: 518, column: 16, scope: !3460)
!3462 = !DILocation(line: 518, column: 14, scope: !3460)
!3463 = !DILocation(line: 518, column: 8, scope: !3440)
!3464 = !DILocation(line: 519, column: 30, scope: !3460)
!3465 = !DILocation(line: 519, column: 34, scope: !3460)
!3466 = !DILocation(line: 519, column: 39, scope: !3460)
!3467 = !DILocation(line: 519, column: 48, scope: !3460)
!3468 = !DILocation(line: 519, column: 5, scope: !3460)
!3469 = !DILocation(line: 525, column: 5, scope: !3460)
!3470 = !DILocation(line: 529, column: 3, scope: !3440)
!3471 = !DILocation(line: 502, column: 38, scope: !3437)
!3472 = !DILocation(line: 502, column: 43, scope: !3437)
!3473 = !DILocation(line: 502, column: 36, scope: !3437)
!3474 = !DILocation(line: 502, column: 3, scope: !3437)
!3475 = distinct !{!3475, !3438, !3476}
!3476 = !DILocation(line: 529, column: 3, scope: !3431)
!3477 = !DILocation(line: 531, column: 1, scope: !3199)
!3478 = distinct !DISubprogram(name: "ANIM_fcurve_delete_from_animdata", scope: !3, file: !3, line: 536, type: !3479, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{null, !2627, !3481, !587}
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !84, line: 869, baseType: !738)
!3483 = !DILocalVariable(name: "ac", arg: 1, scope: !3478, file: !3, line: 536, type: !2627)
!3484 = !DILocation(line: 536, column: 53, scope: !3478)
!3485 = !DILocalVariable(name: "adt", arg: 2, scope: !3478, file: !3, line: 536, type: !3481)
!3486 = !DILocation(line: 536, column: 67, scope: !3478)
!3487 = !DILocalVariable(name: "fcu", arg: 3, scope: !3478, file: !3, line: 536, type: !587)
!3488 = !DILocation(line: 536, column: 80, scope: !3478)
!3489 = !DILocation(line: 542, column: 6, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 542, column: 6)
!3491 = !DILocation(line: 542, column: 6, scope: !3478)
!3492 = !DILocation(line: 543, column: 3, scope: !3490)
!3493 = !DILocation(line: 551, column: 7, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 551, column: 6)
!3495 = !DILocation(line: 551, column: 6, scope: !3494)
!3496 = !DILocation(line: 551, column: 11, scope: !3494)
!3497 = !DILocation(line: 551, column: 15, scope: !3494)
!3498 = !DILocation(line: 551, column: 19, scope: !3494)
!3499 = !DILocation(line: 551, column: 28, scope: !3494)
!3500 = !DILocation(line: 551, column: 6, scope: !3478)
!3501 = !DILocation(line: 553, column: 16, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 551, column: 50)
!3503 = !DILocation(line: 553, column: 21, scope: !3502)
!3504 = !DILocation(line: 553, column: 30, scope: !3502)
!3505 = !DILocation(line: 553, column: 3, scope: !3502)
!3506 = !DILocation(line: 554, column: 2, scope: !3502)
!3507 = !DILocation(line: 555, column: 11, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 555, column: 11)
!3509 = !DILocation(line: 555, column: 16, scope: !3508)
!3510 = !DILocation(line: 555, column: 11, scope: !3494)
!3511 = !DILocalVariable(name: "act", scope: !3512, file: !3, line: 556, type: !741)
!3512 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 555, column: 24)
!3513 = !DILocation(line: 556, column: 12, scope: !3512)
!3514 = !DILocation(line: 556, column: 18, scope: !3512)
!3515 = !DILocation(line: 556, column: 23, scope: !3512)
!3516 = !DILocation(line: 559, column: 7, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 559, column: 7)
!3518 = !DILocation(line: 559, column: 12, scope: !3517)
!3519 = !DILocation(line: 559, column: 7, scope: !3512)
!3520 = !DILocalVariable(name: "agrp", scope: !3521, file: !3, line: 560, type: !551)
!3521 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 559, column: 17)
!3522 = !DILocation(line: 560, column: 18, scope: !3521)
!3523 = !DILocation(line: 560, column: 25, scope: !3521)
!3524 = !DILocation(line: 560, column: 30, scope: !3521)
!3525 = !DILocation(line: 563, column: 33, scope: !3521)
!3526 = !DILocation(line: 563, column: 38, scope: !3521)
!3527 = !DILocation(line: 563, column: 4, scope: !3521)
!3528 = !DILocation(line: 568, column: 31, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 568, column: 8)
!3530 = !DILocation(line: 568, column: 37, scope: !3529)
!3531 = !DILocation(line: 568, column: 8, scope: !3529)
!3532 = !DILocation(line: 568, column: 8, scope: !3521)
!3533 = !DILocation(line: 569, column: 20, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 568, column: 48)
!3535 = !DILocation(line: 569, column: 25, scope: !3534)
!3536 = !DILocation(line: 569, column: 33, scope: !3534)
!3537 = !DILocation(line: 569, column: 5, scope: !3534)
!3538 = !DILocation(line: 570, column: 4, scope: !3534)
!3539 = !DILocation(line: 571, column: 3, scope: !3521)
!3540 = !DILocation(line: 573, column: 17, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 572, column: 8)
!3542 = !DILocation(line: 573, column: 22, scope: !3541)
!3543 = !DILocation(line: 573, column: 30, scope: !3541)
!3544 = !DILocation(line: 573, column: 4, scope: !3541)
!3545 = !DILocation(line: 583, column: 30, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 583, column: 7)
!3547 = !DILocation(line: 583, column: 35, scope: !3546)
!3548 = !DILocation(line: 583, column: 7, scope: !3546)
!3549 = !DILocation(line: 583, column: 43, scope: !3546)
!3550 = !DILocation(line: 583, column: 47, scope: !3546)
!3551 = !DILocation(line: 583, column: 52, scope: !3546)
!3552 = !DILocation(line: 583, column: 57, scope: !3546)
!3553 = !DILocation(line: 583, column: 76, scope: !3546)
!3554 = !DILocation(line: 583, column: 7, scope: !3512)
!3555 = !DILocation(line: 584, column: 15, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 583, column: 82)
!3557 = !DILocation(line: 584, column: 20, scope: !3556)
!3558 = !DILocation(line: 584, column: 4, scope: !3556)
!3559 = !DILocation(line: 585, column: 4, scope: !3556)
!3560 = !DILocation(line: 585, column: 9, scope: !3556)
!3561 = !DILocation(line: 585, column: 16, scope: !3556)
!3562 = !DILocation(line: 586, column: 3, scope: !3556)
!3563 = !DILocation(line: 587, column: 2, scope: !3512)
!3564 = !DILocation(line: 590, column: 14, scope: !3478)
!3565 = !DILocation(line: 590, column: 2, scope: !3478)
!3566 = !DILocation(line: 591, column: 1, scope: !3478)
!3567 = distinct !DISubprogram(name: "ED_operatortypes_animchannels", scope: !3, file: !3, line: 3021, type: !3568, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{null}
!3570 = !DILocation(line: 3023, column: 2, scope: !3567)
!3571 = !DILocation(line: 3024, column: 2, scope: !3567)
!3572 = !DILocation(line: 3026, column: 2, scope: !3567)
!3573 = !DILocation(line: 3027, column: 2, scope: !3567)
!3574 = !DILocation(line: 3029, column: 2, scope: !3567)
!3575 = !DILocation(line: 3031, column: 2, scope: !3567)
!3576 = !DILocation(line: 3032, column: 2, scope: !3567)
!3577 = !DILocation(line: 3033, column: 2, scope: !3567)
!3578 = !DILocation(line: 3035, column: 2, scope: !3567)
!3579 = !DILocation(line: 3038, column: 2, scope: !3567)
!3580 = !DILocation(line: 3040, column: 2, scope: !3567)
!3581 = !DILocation(line: 3042, column: 2, scope: !3567)
!3582 = !DILocation(line: 3043, column: 2, scope: !3567)
!3583 = !DILocation(line: 3045, column: 2, scope: !3567)
!3584 = !DILocation(line: 3046, column: 2, scope: !3567)
!3585 = !DILocation(line: 3048, column: 2, scope: !3567)
!3586 = !DILocation(line: 3050, column: 2, scope: !3567)
!3587 = !DILocation(line: 3052, column: 2, scope: !3567)
!3588 = !DILocation(line: 3053, column: 2, scope: !3567)
!3589 = !DILocation(line: 3054, column: 1, scope: !3567)
!3590 = distinct !DISubprogram(name: "ANIM_OT_channels_select_all_toggle", scope: !3, file: !3, line: 2347, type: !3591, scopeLine: 2348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{null, !3593}
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !2425, line: 568, baseType: !3595)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !2425, line: 508, size: 1536, elements: !3596)
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3627, !3631, !3637, !3641, !3642, !3646, !3647, !3648, !3649, !3652, !3653, !3668, !3669, !3673, !3699}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3595, file: !2425, line: 509, baseType: !2509, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3595, file: !2425, line: 510, baseType: !2509, size: 64, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3595, file: !2425, line: 511, baseType: !2509, size: 64, offset: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3595, file: !2425, line: 512, baseType: !2509, size: 64, offset: 192)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3595, file: !2425, line: 518, baseType: !3602, size: 64, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!20, !3605, !3607}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !3316, line: 46, flags: DIFlagFwdDecl)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !357, line: 328, size: 1344, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3625, !3626}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3608, file: !357, line: 329, baseType: !3607, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3608, file: !357, line: 329, baseType: !3607, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3608, file: !357, line: 332, baseType: !569, size: 512, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3608, file: !357, line: 333, baseType: !714, size: 64, offset: 640)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3608, file: !357, line: 336, baseType: !3615, size: 64, offset: 704)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3608, file: !357, line: 337, baseType: !564, size: 64, offset: 768)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3608, file: !357, line: 338, baseType: !564, size: 64, offset: 832)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3608, file: !357, line: 340, baseType: !3304, size: 64, offset: 896)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3608, file: !357, line: 341, baseType: !2726, size: 64, offset: 960)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3608, file: !357, line: 343, baseType: !559, size: 128, offset: 1024)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3608, file: !357, line: 344, baseType: !3607, size: 64, offset: 1152)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3608, file: !357, line: 345, baseType: !3623, size: 64, offset: 1216)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !6, line: 57, flags: DIFlagFwdDecl)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3608, file: !357, line: 346, baseType: !585, size: 16, offset: 1280)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3608, file: !357, line: 346, baseType: !2175, size: 48, offset: 1296)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3595, file: !2425, line: 524, baseType: !3628, size: 64, offset: 320)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!1643, !3605, !3607}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3595, file: !2425, line: 530, baseType: !3632, size: 64, offset: 384)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!20, !3605, !3607, !3635}
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3595, file: !2425, line: 531, baseType: !3638, size: 64, offset: 448)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{null, !3605, !3607}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3595, file: !2425, line: 532, baseType: !3632, size: 64, offset: 512)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3595, file: !2425, line: 536, baseType: !3643, size: 64, offset: 576)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!20, !3605}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3595, file: !2425, line: 539, baseType: !3638, size: 64, offset: 640)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3595, file: !2425, line: 542, baseType: !1126, size: 64, offset: 704)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3595, file: !2425, line: 545, baseType: !719, size: 64, offset: 768)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3595, file: !2425, line: 549, baseType: !3650, size: 64, offset: 832)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !455, line: 333, baseType: !3315)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3595, file: !2425, line: 552, baseType: !559, size: 128, offset: 896)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3595, file: !2425, line: 555, baseType: !3654, size: 64, offset: 1024)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !357, line: 281, size: 1088, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3655, file: !357, line: 282, baseType: !3654, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3655, file: !357, line: 282, baseType: !3654, size: 64, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3655, file: !357, line: 284, baseType: !559, size: 128, offset: 128)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3655, file: !357, line: 285, baseType: !559, size: 128, offset: 256)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3655, file: !357, line: 287, baseType: !569, size: 512, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3655, file: !357, line: 288, baseType: !585, size: 16, offset: 896)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3655, file: !357, line: 289, baseType: !585, size: 16, offset: 912)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3655, file: !357, line: 291, baseType: !585, size: 16, offset: 928)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3655, file: !357, line: 292, baseType: !585, size: 16, offset: 944)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3655, file: !357, line: 295, baseType: !3643, size: 64, offset: 960)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3655, file: !357, line: 296, baseType: !564, size: 64, offset: 1024)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3595, file: !2425, line: 559, baseType: !564, size: 64, offset: 1088)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3595, file: !2425, line: 560, baseType: !3670, size: 64, offset: 1152)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!20, !3605, !3615}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3595, file: !2425, line: 563, baseType: !3674, size: 256, offset: 1216)
!3674 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !455, line: 436, baseType: !3675)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !455, line: 430, size: 256, elements: !3676)
!3676 = !{!3677, !3678, !3681, !3697}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3675, file: !455, line: 431, baseType: !564, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3675, file: !455, line: 432, baseType: !3679, size: 64, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !455, line: 417, baseType: !1127)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3675, file: !455, line: 433, baseType: !3682, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !455, line: 408, baseType: !3683)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{!20, !3605, !3304, !3686, !3688}
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !455, line: 38, flags: DIFlagFwdDecl)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !455, line: 348, baseType: !3690)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !455, line: 337, size: 256, elements: !3691)
!3691 = !{!3692, !3693, !3694, !3695, !3696}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3690, file: !455, line: 339, baseType: !564, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3690, file: !455, line: 342, baseType: !3686, size: 64, offset: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3690, file: !455, line: 345, baseType: !20, size: 32, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3690, file: !455, line: 347, baseType: !20, size: 32, offset: 160)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3690, file: !455, line: 347, baseType: !20, size: 32, offset: 192)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3675, file: !455, line: 434, baseType: !3698, size: 64, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !455, line: 409, baseType: !1180)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3595, file: !2425, line: 566, baseType: !585, size: 16, offset: 1472)
!3700 = !DILocalVariable(name: "ot", arg: 1, scope: !3590, file: !3, line: 2347, type: !3593)
!3701 = !DILocation(line: 2347, column: 64, scope: !3590)
!3702 = !DILocation(line: 2350, column: 2, scope: !3590)
!3703 = !DILocation(line: 2350, column: 6, scope: !3590)
!3704 = !DILocation(line: 2350, column: 11, scope: !3590)
!3705 = !DILocation(line: 2351, column: 2, scope: !3590)
!3706 = !DILocation(line: 2351, column: 6, scope: !3590)
!3707 = !DILocation(line: 2351, column: 13, scope: !3590)
!3708 = !DILocation(line: 2352, column: 2, scope: !3590)
!3709 = !DILocation(line: 2352, column: 6, scope: !3590)
!3710 = !DILocation(line: 2352, column: 18, scope: !3590)
!3711 = !DILocation(line: 2355, column: 2, scope: !3590)
!3712 = !DILocation(line: 2355, column: 6, scope: !3590)
!3713 = !DILocation(line: 2355, column: 11, scope: !3590)
!3714 = !DILocation(line: 2356, column: 2, scope: !3590)
!3715 = !DILocation(line: 2356, column: 6, scope: !3590)
!3716 = !DILocation(line: 2356, column: 11, scope: !3590)
!3717 = !DILocation(line: 2359, column: 2, scope: !3590)
!3718 = !DILocation(line: 2359, column: 6, scope: !3590)
!3719 = !DILocation(line: 2359, column: 11, scope: !3590)
!3720 = !DILocation(line: 2362, column: 29, scope: !3590)
!3721 = !DILocation(line: 2362, column: 33, scope: !3590)
!3722 = !DILocation(line: 2362, column: 13, scope: !3590)
!3723 = !DILocation(line: 2362, column: 2, scope: !3590)
!3724 = !DILocation(line: 2362, column: 6, scope: !3590)
!3725 = !DILocation(line: 2362, column: 11, scope: !3590)
!3726 = !DILocation(line: 2363, column: 1, scope: !3590)
!3727 = distinct !DISubprogram(name: "ANIM_OT_channels_select_border", scope: !3, file: !3, line: 2502, type: !3591, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3728 = !DILocalVariable(name: "ot", arg: 1, scope: !3727, file: !3, line: 2502, type: !3593)
!3729 = !DILocation(line: 2502, column: 60, scope: !3727)
!3730 = !DILocation(line: 2505, column: 2, scope: !3727)
!3731 = !DILocation(line: 2505, column: 6, scope: !3727)
!3732 = !DILocation(line: 2505, column: 11, scope: !3727)
!3733 = !DILocation(line: 2506, column: 2, scope: !3727)
!3734 = !DILocation(line: 2506, column: 6, scope: !3727)
!3735 = !DILocation(line: 2506, column: 13, scope: !3727)
!3736 = !DILocation(line: 2507, column: 2, scope: !3727)
!3737 = !DILocation(line: 2507, column: 6, scope: !3727)
!3738 = !DILocation(line: 2507, column: 18, scope: !3727)
!3739 = !DILocation(line: 2510, column: 2, scope: !3727)
!3740 = !DILocation(line: 2510, column: 6, scope: !3727)
!3741 = !DILocation(line: 2510, column: 13, scope: !3727)
!3742 = !DILocation(line: 2511, column: 2, scope: !3727)
!3743 = !DILocation(line: 2511, column: 6, scope: !3727)
!3744 = !DILocation(line: 2511, column: 11, scope: !3727)
!3745 = !DILocation(line: 2512, column: 2, scope: !3727)
!3746 = !DILocation(line: 2512, column: 6, scope: !3727)
!3747 = !DILocation(line: 2512, column: 12, scope: !3727)
!3748 = !DILocation(line: 2513, column: 2, scope: !3727)
!3749 = !DILocation(line: 2513, column: 6, scope: !3727)
!3750 = !DILocation(line: 2513, column: 13, scope: !3727)
!3751 = !DILocation(line: 2515, column: 2, scope: !3727)
!3752 = !DILocation(line: 2515, column: 6, scope: !3727)
!3753 = !DILocation(line: 2515, column: 11, scope: !3727)
!3754 = !DILocation(line: 2518, column: 2, scope: !3727)
!3755 = !DILocation(line: 2518, column: 6, scope: !3727)
!3756 = !DILocation(line: 2518, column: 11, scope: !3727)
!3757 = !DILocation(line: 2521, column: 40, scope: !3727)
!3758 = !DILocation(line: 2521, column: 2, scope: !3727)
!3759 = !DILocation(line: 2522, column: 1, scope: !3727)
!3760 = distinct !DISubprogram(name: "ANIM_OT_channels_click", scope: !3, file: !3, line: 2993, type: !3591, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3761 = !DILocalVariable(name: "ot", arg: 1, scope: !3760, file: !3, line: 2993, type: !3593)
!3762 = !DILocation(line: 2993, column: 52, scope: !3760)
!3763 = !DILocalVariable(name: "prop", scope: !3760, file: !3, line: 2995, type: !3650)
!3764 = !DILocation(line: 2995, column: 15, scope: !3760)
!3765 = !DILocation(line: 2998, column: 2, scope: !3760)
!3766 = !DILocation(line: 2998, column: 6, scope: !3760)
!3767 = !DILocation(line: 2998, column: 11, scope: !3760)
!3768 = !DILocation(line: 2999, column: 2, scope: !3760)
!3769 = !DILocation(line: 2999, column: 6, scope: !3760)
!3770 = !DILocation(line: 2999, column: 13, scope: !3760)
!3771 = !DILocation(line: 3000, column: 2, scope: !3760)
!3772 = !DILocation(line: 3000, column: 6, scope: !3760)
!3773 = !DILocation(line: 3000, column: 18, scope: !3760)
!3774 = !DILocation(line: 3003, column: 2, scope: !3760)
!3775 = !DILocation(line: 3003, column: 6, scope: !3760)
!3776 = !DILocation(line: 3003, column: 13, scope: !3760)
!3777 = !DILocation(line: 3004, column: 2, scope: !3760)
!3778 = !DILocation(line: 3004, column: 6, scope: !3760)
!3779 = !DILocation(line: 3004, column: 11, scope: !3760)
!3780 = !DILocation(line: 3007, column: 2, scope: !3760)
!3781 = !DILocation(line: 3007, column: 6, scope: !3760)
!3782 = !DILocation(line: 3007, column: 11, scope: !3760)
!3783 = !DILocation(line: 3011, column: 25, scope: !3760)
!3784 = !DILocation(line: 3011, column: 29, scope: !3760)
!3785 = !DILocation(line: 3011, column: 9, scope: !3760)
!3786 = !DILocation(line: 3011, column: 7, scope: !3760)
!3787 = !DILocation(line: 3012, column: 24, scope: !3760)
!3788 = !DILocation(line: 3012, column: 2, scope: !3760)
!3789 = !DILocation(line: 3014, column: 25, scope: !3760)
!3790 = !DILocation(line: 3014, column: 29, scope: !3760)
!3791 = !DILocation(line: 3014, column: 9, scope: !3760)
!3792 = !DILocation(line: 3014, column: 7, scope: !3760)
!3793 = !DILocation(line: 3015, column: 24, scope: !3760)
!3794 = !DILocation(line: 3015, column: 2, scope: !3760)
!3795 = !DILocation(line: 3016, column: 1, scope: !3760)
!3796 = distinct !DISubprogram(name: "ANIM_OT_channels_rename", scope: !3, file: !3, line: 2613, type: !3591, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3797 = !DILocalVariable(name: "ot", arg: 1, scope: !3796, file: !3, line: 2613, type: !3593)
!3798 = !DILocation(line: 2613, column: 53, scope: !3796)
!3799 = !DILocation(line: 2616, column: 2, scope: !3796)
!3800 = !DILocation(line: 2616, column: 6, scope: !3796)
!3801 = !DILocation(line: 2616, column: 11, scope: !3796)
!3802 = !DILocation(line: 2617, column: 2, scope: !3796)
!3803 = !DILocation(line: 2617, column: 6, scope: !3796)
!3804 = !DILocation(line: 2617, column: 13, scope: !3796)
!3805 = !DILocation(line: 2618, column: 2, scope: !3796)
!3806 = !DILocation(line: 2618, column: 6, scope: !3796)
!3807 = !DILocation(line: 2618, column: 18, scope: !3796)
!3808 = !DILocation(line: 2621, column: 2, scope: !3796)
!3809 = !DILocation(line: 2621, column: 6, scope: !3796)
!3810 = !DILocation(line: 2621, column: 13, scope: !3796)
!3811 = !DILocation(line: 2622, column: 2, scope: !3796)
!3812 = !DILocation(line: 2622, column: 6, scope: !3796)
!3813 = !DILocation(line: 2622, column: 11, scope: !3796)
!3814 = !DILocation(line: 2623, column: 1, scope: !3796)
!3815 = distinct !DISubprogram(name: "ANIM_OT_channels_find", scope: !3, file: !3, line: 2306, type: !3591, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3816 = !DILocalVariable(name: "ot", arg: 1, scope: !3815, file: !3, line: 2306, type: !3593)
!3817 = !DILocation(line: 2306, column: 51, scope: !3815)
!3818 = !DILocation(line: 2309, column: 2, scope: !3815)
!3819 = !DILocation(line: 2309, column: 6, scope: !3815)
!3820 = !DILocation(line: 2309, column: 11, scope: !3815)
!3821 = !DILocation(line: 2310, column: 2, scope: !3815)
!3822 = !DILocation(line: 2310, column: 6, scope: !3815)
!3823 = !DILocation(line: 2310, column: 13, scope: !3815)
!3824 = !DILocation(line: 2311, column: 2, scope: !3815)
!3825 = !DILocation(line: 2311, column: 6, scope: !3815)
!3826 = !DILocation(line: 2311, column: 18, scope: !3815)
!3827 = !DILocation(line: 2314, column: 2, scope: !3815)
!3828 = !DILocation(line: 2314, column: 6, scope: !3815)
!3829 = !DILocation(line: 2314, column: 13, scope: !3815)
!3830 = !DILocation(line: 2315, column: 2, scope: !3815)
!3831 = !DILocation(line: 2315, column: 6, scope: !3815)
!3832 = !DILocation(line: 2315, column: 11, scope: !3815)
!3833 = !DILocation(line: 2316, column: 2, scope: !3815)
!3834 = !DILocation(line: 2316, column: 6, scope: !3815)
!3835 = !DILocation(line: 2316, column: 11, scope: !3815)
!3836 = !DILocation(line: 2319, column: 2, scope: !3815)
!3837 = !DILocation(line: 2319, column: 6, scope: !3815)
!3838 = !DILocation(line: 2319, column: 11, scope: !3815)
!3839 = !DILocation(line: 2322, column: 28, scope: !3815)
!3840 = !DILocation(line: 2322, column: 32, scope: !3815)
!3841 = !DILocation(line: 2322, column: 13, scope: !3815)
!3842 = !DILocation(line: 2322, column: 2, scope: !3815)
!3843 = !DILocation(line: 2322, column: 6, scope: !3815)
!3844 = !DILocation(line: 2322, column: 11, scope: !3815)
!3845 = !DILocation(line: 2323, column: 1, scope: !3815)
!3846 = distinct !DISubprogram(name: "ANIM_OT_channels_setting_enable", scope: !3, file: !3, line: 1886, type: !3591, scopeLine: 1887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3847 = !DILocalVariable(name: "ot", arg: 1, scope: !3846, file: !3, line: 1886, type: !3593)
!3848 = !DILocation(line: 1886, column: 61, scope: !3846)
!3849 = !DILocalVariable(name: "prop", scope: !3846, file: !3, line: 1888, type: !3650)
!3850 = !DILocation(line: 1888, column: 15, scope: !3846)
!3851 = !DILocation(line: 1891, column: 2, scope: !3846)
!3852 = !DILocation(line: 1891, column: 6, scope: !3846)
!3853 = !DILocation(line: 1891, column: 11, scope: !3846)
!3854 = !DILocation(line: 1892, column: 2, scope: !3846)
!3855 = !DILocation(line: 1892, column: 6, scope: !3846)
!3856 = !DILocation(line: 1892, column: 13, scope: !3846)
!3857 = !DILocation(line: 1893, column: 2, scope: !3846)
!3858 = !DILocation(line: 1893, column: 6, scope: !3846)
!3859 = !DILocation(line: 1893, column: 18, scope: !3846)
!3860 = !DILocation(line: 1896, column: 2, scope: !3846)
!3861 = !DILocation(line: 1896, column: 6, scope: !3846)
!3862 = !DILocation(line: 1896, column: 13, scope: !3846)
!3863 = !DILocation(line: 1897, column: 2, scope: !3846)
!3864 = !DILocation(line: 1897, column: 6, scope: !3846)
!3865 = !DILocation(line: 1897, column: 11, scope: !3846)
!3866 = !DILocation(line: 1898, column: 2, scope: !3846)
!3867 = !DILocation(line: 1898, column: 6, scope: !3846)
!3868 = !DILocation(line: 1898, column: 11, scope: !3846)
!3869 = !DILocation(line: 1901, column: 2, scope: !3846)
!3870 = !DILocation(line: 1901, column: 6, scope: !3846)
!3871 = !DILocation(line: 1901, column: 11, scope: !3846)
!3872 = !DILocation(line: 1905, column: 22, scope: !3846)
!3873 = !DILocation(line: 1905, column: 26, scope: !3846)
!3874 = !DILocation(line: 1905, column: 9, scope: !3846)
!3875 = !DILocation(line: 1905, column: 7, scope: !3846)
!3876 = !DILocation(line: 1906, column: 24, scope: !3846)
!3877 = !DILocation(line: 1906, column: 2, scope: !3846)
!3878 = !DILocation(line: 1908, column: 26, scope: !3846)
!3879 = !DILocation(line: 1908, column: 30, scope: !3846)
!3880 = !DILocation(line: 1908, column: 13, scope: !3846)
!3881 = !DILocation(line: 1908, column: 2, scope: !3846)
!3882 = !DILocation(line: 1908, column: 6, scope: !3846)
!3883 = !DILocation(line: 1908, column: 11, scope: !3846)
!3884 = !DILocation(line: 1909, column: 1, scope: !3846)
!3885 = distinct !DISubprogram(name: "ANIM_OT_channels_setting_disable", scope: !3, file: !3, line: 1911, type: !3591, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3886 = !DILocalVariable(name: "ot", arg: 1, scope: !3885, file: !3, line: 1911, type: !3593)
!3887 = !DILocation(line: 1911, column: 62, scope: !3885)
!3888 = !DILocalVariable(name: "prop", scope: !3885, file: !3, line: 1913, type: !3650)
!3889 = !DILocation(line: 1913, column: 15, scope: !3885)
!3890 = !DILocation(line: 1916, column: 2, scope: !3885)
!3891 = !DILocation(line: 1916, column: 6, scope: !3885)
!3892 = !DILocation(line: 1916, column: 11, scope: !3885)
!3893 = !DILocation(line: 1917, column: 2, scope: !3885)
!3894 = !DILocation(line: 1917, column: 6, scope: !3885)
!3895 = !DILocation(line: 1917, column: 13, scope: !3885)
!3896 = !DILocation(line: 1918, column: 2, scope: !3885)
!3897 = !DILocation(line: 1918, column: 6, scope: !3885)
!3898 = !DILocation(line: 1918, column: 18, scope: !3885)
!3899 = !DILocation(line: 1921, column: 2, scope: !3885)
!3900 = !DILocation(line: 1921, column: 6, scope: !3885)
!3901 = !DILocation(line: 1921, column: 13, scope: !3885)
!3902 = !DILocation(line: 1922, column: 2, scope: !3885)
!3903 = !DILocation(line: 1922, column: 6, scope: !3885)
!3904 = !DILocation(line: 1922, column: 11, scope: !3885)
!3905 = !DILocation(line: 1923, column: 2, scope: !3885)
!3906 = !DILocation(line: 1923, column: 6, scope: !3885)
!3907 = !DILocation(line: 1923, column: 11, scope: !3885)
!3908 = !DILocation(line: 1926, column: 2, scope: !3885)
!3909 = !DILocation(line: 1926, column: 6, scope: !3885)
!3910 = !DILocation(line: 1926, column: 11, scope: !3885)
!3911 = !DILocation(line: 1930, column: 22, scope: !3885)
!3912 = !DILocation(line: 1930, column: 26, scope: !3885)
!3913 = !DILocation(line: 1930, column: 9, scope: !3885)
!3914 = !DILocation(line: 1930, column: 7, scope: !3885)
!3915 = !DILocation(line: 1931, column: 24, scope: !3885)
!3916 = !DILocation(line: 1931, column: 2, scope: !3885)
!3917 = !DILocation(line: 1933, column: 26, scope: !3885)
!3918 = !DILocation(line: 1933, column: 30, scope: !3885)
!3919 = !DILocation(line: 1933, column: 13, scope: !3885)
!3920 = !DILocation(line: 1933, column: 2, scope: !3885)
!3921 = !DILocation(line: 1933, column: 6, scope: !3885)
!3922 = !DILocation(line: 1933, column: 11, scope: !3885)
!3923 = !DILocation(line: 1934, column: 1, scope: !3885)
!3924 = distinct !DISubprogram(name: "ANIM_OT_channels_setting_toggle", scope: !3, file: !3, line: 1936, type: !3591, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3925 = !DILocalVariable(name: "ot", arg: 1, scope: !3924, file: !3, line: 1936, type: !3593)
!3926 = !DILocation(line: 1936, column: 61, scope: !3924)
!3927 = !DILocalVariable(name: "prop", scope: !3924, file: !3, line: 1938, type: !3650)
!3928 = !DILocation(line: 1938, column: 15, scope: !3924)
!3929 = !DILocation(line: 1941, column: 2, scope: !3924)
!3930 = !DILocation(line: 1941, column: 6, scope: !3924)
!3931 = !DILocation(line: 1941, column: 11, scope: !3924)
!3932 = !DILocation(line: 1942, column: 2, scope: !3924)
!3933 = !DILocation(line: 1942, column: 6, scope: !3924)
!3934 = !DILocation(line: 1942, column: 13, scope: !3924)
!3935 = !DILocation(line: 1943, column: 2, scope: !3924)
!3936 = !DILocation(line: 1943, column: 6, scope: !3924)
!3937 = !DILocation(line: 1943, column: 18, scope: !3924)
!3938 = !DILocation(line: 1946, column: 2, scope: !3924)
!3939 = !DILocation(line: 1946, column: 6, scope: !3924)
!3940 = !DILocation(line: 1946, column: 13, scope: !3924)
!3941 = !DILocation(line: 1947, column: 2, scope: !3924)
!3942 = !DILocation(line: 1947, column: 6, scope: !3924)
!3943 = !DILocation(line: 1947, column: 11, scope: !3924)
!3944 = !DILocation(line: 1948, column: 2, scope: !3924)
!3945 = !DILocation(line: 1948, column: 6, scope: !3924)
!3946 = !DILocation(line: 1948, column: 11, scope: !3924)
!3947 = !DILocation(line: 1951, column: 2, scope: !3924)
!3948 = !DILocation(line: 1951, column: 6, scope: !3924)
!3949 = !DILocation(line: 1951, column: 11, scope: !3924)
!3950 = !DILocation(line: 1955, column: 22, scope: !3924)
!3951 = !DILocation(line: 1955, column: 26, scope: !3924)
!3952 = !DILocation(line: 1955, column: 9, scope: !3924)
!3953 = !DILocation(line: 1955, column: 7, scope: !3924)
!3954 = !DILocation(line: 1956, column: 24, scope: !3924)
!3955 = !DILocation(line: 1956, column: 2, scope: !3924)
!3956 = !DILocation(line: 1958, column: 26, scope: !3924)
!3957 = !DILocation(line: 1958, column: 30, scope: !3924)
!3958 = !DILocation(line: 1958, column: 13, scope: !3924)
!3959 = !DILocation(line: 1958, column: 2, scope: !3924)
!3960 = !DILocation(line: 1958, column: 6, scope: !3924)
!3961 = !DILocation(line: 1958, column: 11, scope: !3924)
!3962 = !DILocation(line: 1959, column: 1, scope: !3924)
!3963 = distinct !DISubprogram(name: "ANIM_OT_channels_delete", scope: !3, file: !3, line: 1573, type: !3591, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3964 = !DILocalVariable(name: "ot", arg: 1, scope: !3963, file: !3, line: 1573, type: !3593)
!3965 = !DILocation(line: 1573, column: 53, scope: !3963)
!3966 = !DILocation(line: 1576, column: 2, scope: !3963)
!3967 = !DILocation(line: 1576, column: 6, scope: !3963)
!3968 = !DILocation(line: 1576, column: 11, scope: !3963)
!3969 = !DILocation(line: 1577, column: 2, scope: !3963)
!3970 = !DILocation(line: 1577, column: 6, scope: !3963)
!3971 = !DILocation(line: 1577, column: 13, scope: !3963)
!3972 = !DILocation(line: 1578, column: 2, scope: !3963)
!3973 = !DILocation(line: 1578, column: 6, scope: !3963)
!3974 = !DILocation(line: 1578, column: 18, scope: !3963)
!3975 = !DILocation(line: 1581, column: 2, scope: !3963)
!3976 = !DILocation(line: 1581, column: 6, scope: !3963)
!3977 = !DILocation(line: 1581, column: 11, scope: !3963)
!3978 = !DILocation(line: 1582, column: 2, scope: !3963)
!3979 = !DILocation(line: 1582, column: 6, scope: !3963)
!3980 = !DILocation(line: 1582, column: 11, scope: !3963)
!3981 = !DILocation(line: 1585, column: 2, scope: !3963)
!3982 = !DILocation(line: 1585, column: 6, scope: !3963)
!3983 = !DILocation(line: 1585, column: 11, scope: !3963)
!3984 = !DILocation(line: 1586, column: 1, scope: !3963)
!3985 = distinct !DISubprogram(name: "ANIM_OT_channels_editable_toggle", scope: !3, file: !3, line: 1961, type: !3591, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!3986 = !DILocalVariable(name: "ot", arg: 1, scope: !3985, file: !3, line: 1961, type: !3593)
!3987 = !DILocation(line: 1961, column: 62, scope: !3985)
!3988 = !DILocalVariable(name: "prop", scope: !3985, file: !3, line: 1963, type: !3650)
!3989 = !DILocation(line: 1963, column: 15, scope: !3985)
!3990 = !DILocation(line: 1966, column: 2, scope: !3985)
!3991 = !DILocation(line: 1966, column: 6, scope: !3985)
!3992 = !DILocation(line: 1966, column: 11, scope: !3985)
!3993 = !DILocation(line: 1967, column: 2, scope: !3985)
!3994 = !DILocation(line: 1967, column: 6, scope: !3985)
!3995 = !DILocation(line: 1967, column: 13, scope: !3985)
!3996 = !DILocation(line: 1968, column: 2, scope: !3985)
!3997 = !DILocation(line: 1968, column: 6, scope: !3985)
!3998 = !DILocation(line: 1968, column: 18, scope: !3985)
!3999 = !DILocation(line: 1971, column: 2, scope: !3985)
!4000 = !DILocation(line: 1971, column: 6, scope: !3985)
!4001 = !DILocation(line: 1971, column: 11, scope: !3985)
!4002 = !DILocation(line: 1972, column: 2, scope: !3985)
!4003 = !DILocation(line: 1972, column: 6, scope: !3985)
!4004 = !DILocation(line: 1972, column: 11, scope: !3985)
!4005 = !DILocation(line: 1975, column: 2, scope: !3985)
!4006 = !DILocation(line: 1975, column: 6, scope: !3985)
!4007 = !DILocation(line: 1975, column: 11, scope: !3985)
!4008 = !DILocation(line: 1979, column: 15, scope: !3985)
!4009 = !DILocation(line: 1979, column: 19, scope: !3985)
!4010 = !DILocation(line: 1979, column: 2, scope: !3985)
!4011 = !DILocation(line: 1981, column: 22, scope: !3985)
!4012 = !DILocation(line: 1981, column: 26, scope: !3985)
!4013 = !DILocation(line: 1981, column: 9, scope: !3985)
!4014 = !DILocation(line: 1981, column: 7, scope: !3985)
!4015 = !DILocation(line: 1982, column: 24, scope: !3985)
!4016 = !DILocation(line: 1982, column: 2, scope: !3985)
!4017 = !DILocation(line: 1983, column: 1, scope: !3985)
!4018 = distinct !DISubprogram(name: "ANIM_OT_channels_move", scope: !3, file: !3, line: 1236, type: !3591, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4019 = !DILocalVariable(name: "ot", arg: 1, scope: !4018, file: !3, line: 1236, type: !3593)
!4020 = !DILocation(line: 1236, column: 51, scope: !4018)
!4021 = !DILocation(line: 1239, column: 2, scope: !4018)
!4022 = !DILocation(line: 1239, column: 6, scope: !4018)
!4023 = !DILocation(line: 1239, column: 11, scope: !4018)
!4024 = !DILocation(line: 1240, column: 2, scope: !4018)
!4025 = !DILocation(line: 1240, column: 6, scope: !4018)
!4026 = !DILocation(line: 1240, column: 13, scope: !4018)
!4027 = !DILocation(line: 1241, column: 2, scope: !4018)
!4028 = !DILocation(line: 1241, column: 6, scope: !4018)
!4029 = !DILocation(line: 1241, column: 18, scope: !4018)
!4030 = !DILocation(line: 1244, column: 2, scope: !4018)
!4031 = !DILocation(line: 1244, column: 6, scope: !4018)
!4032 = !DILocation(line: 1244, column: 11, scope: !4018)
!4033 = !DILocation(line: 1245, column: 2, scope: !4018)
!4034 = !DILocation(line: 1245, column: 6, scope: !4018)
!4035 = !DILocation(line: 1245, column: 11, scope: !4018)
!4036 = !DILocation(line: 1248, column: 2, scope: !4018)
!4037 = !DILocation(line: 1248, column: 6, scope: !4018)
!4038 = !DILocation(line: 1248, column: 11, scope: !4018)
!4039 = !DILocation(line: 1251, column: 26, scope: !4018)
!4040 = !DILocation(line: 1251, column: 30, scope: !4018)
!4041 = !DILocation(line: 1251, column: 13, scope: !4018)
!4042 = !DILocation(line: 1251, column: 2, scope: !4018)
!4043 = !DILocation(line: 1251, column: 6, scope: !4018)
!4044 = !DILocation(line: 1251, column: 11, scope: !4018)
!4045 = !DILocation(line: 1252, column: 1, scope: !4018)
!4046 = distinct !DISubprogram(name: "ANIM_OT_channels_expand", scope: !3, file: !3, line: 2009, type: !3591, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4047 = !DILocalVariable(name: "ot", arg: 1, scope: !4046, file: !3, line: 2009, type: !3593)
!4048 = !DILocation(line: 2009, column: 53, scope: !4046)
!4049 = !DILocation(line: 2012, column: 2, scope: !4046)
!4050 = !DILocation(line: 2012, column: 6, scope: !4046)
!4051 = !DILocation(line: 2012, column: 11, scope: !4046)
!4052 = !DILocation(line: 2013, column: 2, scope: !4046)
!4053 = !DILocation(line: 2013, column: 6, scope: !4046)
!4054 = !DILocation(line: 2013, column: 13, scope: !4046)
!4055 = !DILocation(line: 2014, column: 2, scope: !4046)
!4056 = !DILocation(line: 2014, column: 6, scope: !4046)
!4057 = !DILocation(line: 2014, column: 18, scope: !4046)
!4058 = !DILocation(line: 2017, column: 2, scope: !4046)
!4059 = !DILocation(line: 2017, column: 6, scope: !4046)
!4060 = !DILocation(line: 2017, column: 11, scope: !4046)
!4061 = !DILocation(line: 2018, column: 2, scope: !4046)
!4062 = !DILocation(line: 2018, column: 6, scope: !4046)
!4063 = !DILocation(line: 2018, column: 11, scope: !4046)
!4064 = !DILocation(line: 2021, column: 2, scope: !4046)
!4065 = !DILocation(line: 2021, column: 6, scope: !4046)
!4066 = !DILocation(line: 2021, column: 11, scope: !4046)
!4067 = !DILocation(line: 2024, column: 29, scope: !4046)
!4068 = !DILocation(line: 2024, column: 33, scope: !4046)
!4069 = !DILocation(line: 2024, column: 13, scope: !4046)
!4070 = !DILocation(line: 2024, column: 2, scope: !4046)
!4071 = !DILocation(line: 2024, column: 6, scope: !4046)
!4072 = !DILocation(line: 2024, column: 11, scope: !4046)
!4073 = !DILocation(line: 2025, column: 1, scope: !4046)
!4074 = distinct !DISubprogram(name: "ANIM_OT_channels_collapse", scope: !3, file: !3, line: 2051, type: !3591, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4075 = !DILocalVariable(name: "ot", arg: 1, scope: !4074, file: !3, line: 2051, type: !3593)
!4076 = !DILocation(line: 2051, column: 55, scope: !4074)
!4077 = !DILocation(line: 2054, column: 2, scope: !4074)
!4078 = !DILocation(line: 2054, column: 6, scope: !4074)
!4079 = !DILocation(line: 2054, column: 11, scope: !4074)
!4080 = !DILocation(line: 2055, column: 2, scope: !4074)
!4081 = !DILocation(line: 2055, column: 6, scope: !4074)
!4082 = !DILocation(line: 2055, column: 13, scope: !4074)
!4083 = !DILocation(line: 2056, column: 2, scope: !4074)
!4084 = !DILocation(line: 2056, column: 6, scope: !4074)
!4085 = !DILocation(line: 2056, column: 18, scope: !4074)
!4086 = !DILocation(line: 2059, column: 2, scope: !4074)
!4087 = !DILocation(line: 2059, column: 6, scope: !4074)
!4088 = !DILocation(line: 2059, column: 11, scope: !4074)
!4089 = !DILocation(line: 2060, column: 2, scope: !4074)
!4090 = !DILocation(line: 2060, column: 6, scope: !4074)
!4091 = !DILocation(line: 2060, column: 11, scope: !4074)
!4092 = !DILocation(line: 2063, column: 2, scope: !4074)
!4093 = !DILocation(line: 2063, column: 6, scope: !4074)
!4094 = !DILocation(line: 2063, column: 11, scope: !4074)
!4095 = !DILocation(line: 2066, column: 29, scope: !4074)
!4096 = !DILocation(line: 2066, column: 33, scope: !4074)
!4097 = !DILocation(line: 2066, column: 13, scope: !4074)
!4098 = !DILocation(line: 2066, column: 2, scope: !4074)
!4099 = !DILocation(line: 2066, column: 6, scope: !4074)
!4100 = !DILocation(line: 2066, column: 11, scope: !4074)
!4101 = !DILocation(line: 2067, column: 1, scope: !4074)
!4102 = distinct !DISubprogram(name: "ANIM_OT_channels_visibility_toggle", scope: !3, file: !3, line: 1742, type: !3591, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4103 = !DILocalVariable(name: "ot", arg: 1, scope: !4102, file: !3, line: 1742, type: !3593)
!4104 = !DILocation(line: 1742, column: 64, scope: !4102)
!4105 = !DILocation(line: 1745, column: 2, scope: !4102)
!4106 = !DILocation(line: 1745, column: 6, scope: !4102)
!4107 = !DILocation(line: 1745, column: 11, scope: !4102)
!4108 = !DILocation(line: 1746, column: 2, scope: !4102)
!4109 = !DILocation(line: 1746, column: 6, scope: !4102)
!4110 = !DILocation(line: 1746, column: 13, scope: !4102)
!4111 = !DILocation(line: 1747, column: 2, scope: !4102)
!4112 = !DILocation(line: 1747, column: 6, scope: !4102)
!4113 = !DILocation(line: 1747, column: 18, scope: !4102)
!4114 = !DILocation(line: 1750, column: 2, scope: !4102)
!4115 = !DILocation(line: 1750, column: 6, scope: !4102)
!4116 = !DILocation(line: 1750, column: 11, scope: !4102)
!4117 = !DILocation(line: 1751, column: 2, scope: !4102)
!4118 = !DILocation(line: 1751, column: 6, scope: !4102)
!4119 = !DILocation(line: 1751, column: 11, scope: !4102)
!4120 = !DILocation(line: 1754, column: 2, scope: !4102)
!4121 = !DILocation(line: 1754, column: 6, scope: !4102)
!4122 = !DILocation(line: 1754, column: 11, scope: !4102)
!4123 = !DILocation(line: 1755, column: 1, scope: !4102)
!4124 = distinct !DISubprogram(name: "ANIM_OT_channels_visibility_set", scope: !3, file: !3, line: 1665, type: !3591, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4125 = !DILocalVariable(name: "ot", arg: 1, scope: !4124, file: !3, line: 1665, type: !3593)
!4126 = !DILocation(line: 1665, column: 61, scope: !4124)
!4127 = !DILocation(line: 1668, column: 2, scope: !4124)
!4128 = !DILocation(line: 1668, column: 6, scope: !4124)
!4129 = !DILocation(line: 1668, column: 11, scope: !4124)
!4130 = !DILocation(line: 1669, column: 2, scope: !4124)
!4131 = !DILocation(line: 1669, column: 6, scope: !4124)
!4132 = !DILocation(line: 1669, column: 13, scope: !4124)
!4133 = !DILocation(line: 1670, column: 2, scope: !4124)
!4134 = !DILocation(line: 1670, column: 6, scope: !4124)
!4135 = !DILocation(line: 1670, column: 18, scope: !4124)
!4136 = !DILocation(line: 1673, column: 2, scope: !4124)
!4137 = !DILocation(line: 1673, column: 6, scope: !4124)
!4138 = !DILocation(line: 1673, column: 11, scope: !4124)
!4139 = !DILocation(line: 1674, column: 2, scope: !4124)
!4140 = !DILocation(line: 1674, column: 6, scope: !4124)
!4141 = !DILocation(line: 1674, column: 11, scope: !4124)
!4142 = !DILocation(line: 1677, column: 2, scope: !4124)
!4143 = !DILocation(line: 1677, column: 6, scope: !4124)
!4144 = !DILocation(line: 1677, column: 11, scope: !4124)
!4145 = !DILocation(line: 1678, column: 1, scope: !4124)
!4146 = distinct !DISubprogram(name: "ANIM_OT_channels_fcurves_enable", scope: !3, file: !3, line: 2234, type: !3591, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4147 = !DILocalVariable(name: "ot", arg: 1, scope: !4146, file: !3, line: 2234, type: !3593)
!4148 = !DILocation(line: 2234, column: 61, scope: !4146)
!4149 = !DILocation(line: 2237, column: 2, scope: !4146)
!4150 = !DILocation(line: 2237, column: 6, scope: !4146)
!4151 = !DILocation(line: 2237, column: 11, scope: !4146)
!4152 = !DILocation(line: 2238, column: 2, scope: !4146)
!4153 = !DILocation(line: 2238, column: 6, scope: !4146)
!4154 = !DILocation(line: 2238, column: 13, scope: !4146)
!4155 = !DILocation(line: 2239, column: 2, scope: !4146)
!4156 = !DILocation(line: 2239, column: 6, scope: !4146)
!4157 = !DILocation(line: 2239, column: 18, scope: !4146)
!4158 = !DILocation(line: 2242, column: 2, scope: !4146)
!4159 = !DILocation(line: 2242, column: 6, scope: !4146)
!4160 = !DILocation(line: 2242, column: 11, scope: !4146)
!4161 = !DILocation(line: 2243, column: 2, scope: !4146)
!4162 = !DILocation(line: 2243, column: 6, scope: !4146)
!4163 = !DILocation(line: 2243, column: 11, scope: !4146)
!4164 = !DILocation(line: 2246, column: 2, scope: !4146)
!4165 = !DILocation(line: 2246, column: 6, scope: !4146)
!4166 = !DILocation(line: 2246, column: 11, scope: !4146)
!4167 = !DILocation(line: 2247, column: 1, scope: !4146)
!4168 = distinct !DISubprogram(name: "ANIM_OT_channels_clean_empty", scope: !3, file: !3, line: 2161, type: !3591, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4169 = !DILocalVariable(name: "ot", arg: 1, scope: !4168, file: !3, line: 2161, type: !3593)
!4170 = !DILocation(line: 2161, column: 58, scope: !4168)
!4171 = !DILocation(line: 2164, column: 2, scope: !4168)
!4172 = !DILocation(line: 2164, column: 6, scope: !4168)
!4173 = !DILocation(line: 2164, column: 11, scope: !4168)
!4174 = !DILocation(line: 2165, column: 2, scope: !4168)
!4175 = !DILocation(line: 2165, column: 6, scope: !4168)
!4176 = !DILocation(line: 2165, column: 13, scope: !4168)
!4177 = !DILocation(line: 2166, column: 2, scope: !4168)
!4178 = !DILocation(line: 2166, column: 6, scope: !4168)
!4179 = !DILocation(line: 2166, column: 18, scope: !4168)
!4180 = !DILocation(line: 2169, column: 2, scope: !4168)
!4181 = !DILocation(line: 2169, column: 6, scope: !4168)
!4182 = !DILocation(line: 2169, column: 11, scope: !4168)
!4183 = !DILocation(line: 2170, column: 2, scope: !4168)
!4184 = !DILocation(line: 2170, column: 6, scope: !4168)
!4185 = !DILocation(line: 2170, column: 11, scope: !4168)
!4186 = !DILocation(line: 2173, column: 2, scope: !4168)
!4187 = !DILocation(line: 2173, column: 6, scope: !4168)
!4188 = !DILocation(line: 2173, column: 11, scope: !4168)
!4189 = !DILocation(line: 2174, column: 1, scope: !4168)
!4190 = distinct !DISubprogram(name: "ANIM_OT_channels_group", scope: !3, file: !3, line: 1380, type: !3591, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4191 = !DILocalVariable(name: "ot", arg: 1, scope: !4190, file: !3, line: 1380, type: !3593)
!4192 = !DILocation(line: 1380, column: 52, scope: !4190)
!4193 = !DILocation(line: 1383, column: 2, scope: !4190)
!4194 = !DILocation(line: 1383, column: 6, scope: !4190)
!4195 = !DILocation(line: 1383, column: 11, scope: !4190)
!4196 = !DILocation(line: 1384, column: 2, scope: !4190)
!4197 = !DILocation(line: 1384, column: 6, scope: !4190)
!4198 = !DILocation(line: 1384, column: 13, scope: !4190)
!4199 = !DILocation(line: 1385, column: 2, scope: !4190)
!4200 = !DILocation(line: 1385, column: 6, scope: !4190)
!4201 = !DILocation(line: 1385, column: 18, scope: !4190)
!4202 = !DILocation(line: 1388, column: 2, scope: !4190)
!4203 = !DILocation(line: 1388, column: 6, scope: !4190)
!4204 = !DILocation(line: 1388, column: 13, scope: !4190)
!4205 = !DILocation(line: 1389, column: 2, scope: !4190)
!4206 = !DILocation(line: 1389, column: 6, scope: !4190)
!4207 = !DILocation(line: 1389, column: 11, scope: !4190)
!4208 = !DILocation(line: 1390, column: 2, scope: !4190)
!4209 = !DILocation(line: 1390, column: 6, scope: !4190)
!4210 = !DILocation(line: 1390, column: 11, scope: !4190)
!4211 = !DILocation(line: 1393, column: 2, scope: !4190)
!4212 = !DILocation(line: 1393, column: 6, scope: !4190)
!4213 = !DILocation(line: 1393, column: 11, scope: !4190)
!4214 = !DILocation(line: 1396, column: 28, scope: !4190)
!4215 = !DILocation(line: 1396, column: 32, scope: !4190)
!4216 = !DILocation(line: 1396, column: 13, scope: !4190)
!4217 = !DILocation(line: 1396, column: 2, scope: !4190)
!4218 = !DILocation(line: 1396, column: 6, scope: !4190)
!4219 = !DILocation(line: 1396, column: 11, scope: !4190)
!4220 = !DILocation(line: 1400, column: 1, scope: !4190)
!4221 = distinct !DISubprogram(name: "ANIM_OT_channels_ungroup", scope: !3, file: !3, line: 1451, type: !3591, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4222 = !DILocalVariable(name: "ot", arg: 1, scope: !4221, file: !3, line: 1451, type: !3593)
!4223 = !DILocation(line: 1451, column: 54, scope: !4221)
!4224 = !DILocation(line: 1454, column: 2, scope: !4221)
!4225 = !DILocation(line: 1454, column: 6, scope: !4221)
!4226 = !DILocation(line: 1454, column: 11, scope: !4221)
!4227 = !DILocation(line: 1455, column: 2, scope: !4221)
!4228 = !DILocation(line: 1455, column: 6, scope: !4221)
!4229 = !DILocation(line: 1455, column: 13, scope: !4221)
!4230 = !DILocation(line: 1456, column: 2, scope: !4221)
!4231 = !DILocation(line: 1456, column: 6, scope: !4221)
!4232 = !DILocation(line: 1456, column: 18, scope: !4221)
!4233 = !DILocation(line: 1459, column: 2, scope: !4221)
!4234 = !DILocation(line: 1459, column: 6, scope: !4221)
!4235 = !DILocation(line: 1459, column: 11, scope: !4221)
!4236 = !DILocation(line: 1460, column: 2, scope: !4221)
!4237 = !DILocation(line: 1460, column: 6, scope: !4221)
!4238 = !DILocation(line: 1460, column: 11, scope: !4221)
!4239 = !DILocation(line: 1463, column: 2, scope: !4221)
!4240 = !DILocation(line: 1463, column: 6, scope: !4221)
!4241 = !DILocation(line: 1463, column: 11, scope: !4221)
!4242 = !DILocation(line: 1464, column: 1, scope: !4221)
!4243 = distinct !DISubprogram(name: "ED_keymap_animchannels", scope: !3, file: !3, line: 3057, type: !4244, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !4246}
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !357, line: 318, baseType: !4248)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !357, line: 310, size: 1344, elements: !4249)
!4249 = !{!4250, !4252, !4253, !4254, !4255, !4256, !4257}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4248, file: !357, line: 311, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4248, file: !357, line: 311, baseType: !4251, size: 64, offset: 64)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4248, file: !357, line: 313, baseType: !569, size: 512, offset: 128)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !4248, file: !357, line: 314, baseType: !569, size: 512, offset: 640)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !4248, file: !357, line: 316, baseType: !559, size: 128, offset: 1152)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !4248, file: !357, line: 317, baseType: !20, size: 32, offset: 1280)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4248, file: !357, line: 317, baseType: !20, size: 32, offset: 1312)
!4258 = !DILocalVariable(name: "keyconf", arg: 1, scope: !4243, file: !3, line: 3057, type: !4246)
!4259 = !DILocation(line: 3057, column: 42, scope: !4243)
!4260 = !DILocalVariable(name: "keymap", scope: !4243, file: !3, line: 3059, type: !4261)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !357, line: 297, baseType: !3655)
!4263 = !DILocation(line: 3059, column: 12, scope: !4243)
!4264 = !DILocation(line: 3059, column: 36, scope: !4243)
!4265 = !DILocation(line: 3059, column: 21, scope: !4243)
!4266 = !DILocalVariable(name: "kmi", scope: !4243, file: !3, line: 3060, type: !4267)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !357, line: 252, baseType: !4269)
!4269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !357, line: 227, size: 1472, elements: !4270)
!4270 = !{!4271, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4269, file: !357, line: 228, baseType: !4272, size: 64)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4269, file: !357, line: 228, baseType: !4272, size: 64, offset: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4269, file: !357, line: 231, baseType: !569, size: 512, offset: 128)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4269, file: !357, line: 232, baseType: !714, size: 64, offset: 640)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !4269, file: !357, line: 235, baseType: !569, size: 512, offset: 704)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !4269, file: !357, line: 236, baseType: !585, size: 16, offset: 1216)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4269, file: !357, line: 239, baseType: !585, size: 16, offset: 1232)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4269, file: !357, line: 240, baseType: !585, size: 16, offset: 1248)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !4269, file: !357, line: 241, baseType: !585, size: 16, offset: 1264)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4269, file: !357, line: 241, baseType: !585, size: 16, offset: 1280)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !4269, file: !357, line: 241, baseType: !585, size: 16, offset: 1296)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !4269, file: !357, line: 241, baseType: !585, size: 16, offset: 1312)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !4269, file: !357, line: 242, baseType: !585, size: 16, offset: 1328)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4269, file: !357, line: 245, baseType: !585, size: 16, offset: 1344)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !4269, file: !357, line: 248, baseType: !585, size: 16, offset: 1360)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4269, file: !357, line: 249, baseType: !585, size: 16, offset: 1376)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4269, file: !357, line: 250, baseType: !585, size: 16, offset: 1392)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4269, file: !357, line: 251, baseType: !3304, size: 64, offset: 1408)
!4290 = !DILocation(line: 3060, column: 16, scope: !4243)
!4291 = !DILocation(line: 3064, column: 21, scope: !4243)
!4292 = !DILocation(line: 3064, column: 2, scope: !4243)
!4293 = !DILocation(line: 3065, column: 37, scope: !4243)
!4294 = !DILocation(line: 3065, column: 18, scope: !4243)
!4295 = !DILocation(line: 3065, column: 106, scope: !4243)
!4296 = !DILocation(line: 3065, column: 2, scope: !4243)
!4297 = !DILocation(line: 3066, column: 37, scope: !4243)
!4298 = !DILocation(line: 3066, column: 18, scope: !4243)
!4299 = !DILocation(line: 3066, column: 116, scope: !4243)
!4300 = !DILocation(line: 3066, column: 2, scope: !4243)
!4301 = !DILocation(line: 3069, column: 21, scope: !4243)
!4302 = !DILocation(line: 3069, column: 2, scope: !4243)
!4303 = !DILocation(line: 3070, column: 21, scope: !4243)
!4304 = !DILocation(line: 3070, column: 2, scope: !4243)
!4305 = !DILocation(line: 3073, column: 21, scope: !4243)
!4306 = !DILocation(line: 3073, column: 2, scope: !4243)
!4307 = !DILocation(line: 3076, column: 21, scope: !4243)
!4308 = !DILocation(line: 3076, column: 2, scope: !4243)
!4309 = !DILocation(line: 3077, column: 37, scope: !4243)
!4310 = !DILocation(line: 3077, column: 18, scope: !4243)
!4311 = !DILocation(line: 3077, column: 112, scope: !4243)
!4312 = !DILocation(line: 3077, column: 2, scope: !4243)
!4313 = !DILocation(line: 3080, column: 21, scope: !4243)
!4314 = !DILocation(line: 3080, column: 2, scope: !4243)
!4315 = !DILocation(line: 3081, column: 21, scope: !4243)
!4316 = !DILocation(line: 3081, column: 2, scope: !4243)
!4317 = !DILocation(line: 3084, column: 21, scope: !4243)
!4318 = !DILocation(line: 3084, column: 2, scope: !4243)
!4319 = !DILocation(line: 3085, column: 21, scope: !4243)
!4320 = !DILocation(line: 3085, column: 2, scope: !4243)
!4321 = !DILocation(line: 3088, column: 21, scope: !4243)
!4322 = !DILocation(line: 3088, column: 2, scope: !4243)
!4323 = !DILocation(line: 3089, column: 21, scope: !4243)
!4324 = !DILocation(line: 3089, column: 2, scope: !4243)
!4325 = !DILocation(line: 3090, column: 21, scope: !4243)
!4326 = !DILocation(line: 3090, column: 2, scope: !4243)
!4327 = !DILocation(line: 3093, column: 21, scope: !4243)
!4328 = !DILocation(line: 3093, column: 2, scope: !4243)
!4329 = !DILocation(line: 3096, column: 21, scope: !4243)
!4330 = !DILocation(line: 3096, column: 2, scope: !4243)
!4331 = !DILocation(line: 3097, column: 21, scope: !4243)
!4332 = !DILocation(line: 3097, column: 2, scope: !4243)
!4333 = !DILocation(line: 3099, column: 27, scope: !4243)
!4334 = !DILocation(line: 3099, column: 8, scope: !4243)
!4335 = !DILocation(line: 3099, column: 6, scope: !4243)
!4336 = !DILocation(line: 3100, column: 18, scope: !4243)
!4337 = !DILocation(line: 3100, column: 23, scope: !4243)
!4338 = !DILocation(line: 3100, column: 2, scope: !4243)
!4339 = !DILocation(line: 3101, column: 27, scope: !4243)
!4340 = !DILocation(line: 3101, column: 8, scope: !4243)
!4341 = !DILocation(line: 3101, column: 6, scope: !4243)
!4342 = !DILocation(line: 3102, column: 18, scope: !4243)
!4343 = !DILocation(line: 3102, column: 23, scope: !4243)
!4344 = !DILocation(line: 3102, column: 2, scope: !4243)
!4345 = !DILocation(line: 3105, column: 34, scope: !4243)
!4346 = !DILocation(line: 3105, column: 15, scope: !4243)
!4347 = !DILocation(line: 3105, column: 95, scope: !4243)
!4348 = !DILocation(line: 3105, column: 2, scope: !4243)
!4349 = !DILocation(line: 3106, column: 34, scope: !4243)
!4350 = !DILocation(line: 3106, column: 15, scope: !4243)
!4351 = !DILocation(line: 3106, column: 97, scope: !4243)
!4352 = !DILocation(line: 3106, column: 2, scope: !4243)
!4353 = !DILocation(line: 3107, column: 34, scope: !4243)
!4354 = !DILocation(line: 3107, column: 15, scope: !4243)
!4355 = !DILocation(line: 3107, column: 102, scope: !4243)
!4356 = !DILocation(line: 3107, column: 2, scope: !4243)
!4357 = !DILocation(line: 3108, column: 34, scope: !4243)
!4358 = !DILocation(line: 3108, column: 15, scope: !4243)
!4359 = !DILocation(line: 3108, column: 104, scope: !4243)
!4360 = !DILocation(line: 3108, column: 2, scope: !4243)
!4361 = !DILocation(line: 3111, column: 21, scope: !4243)
!4362 = !DILocation(line: 3111, column: 2, scope: !4243)
!4363 = !DILocation(line: 3112, column: 21, scope: !4243)
!4364 = !DILocation(line: 3112, column: 2, scope: !4243)
!4365 = !DILocation(line: 3115, column: 21, scope: !4243)
!4366 = !DILocation(line: 3115, column: 2, scope: !4243)
!4367 = !DILocation(line: 3116, column: 21, scope: !4243)
!4368 = !DILocation(line: 3116, column: 2, scope: !4243)
!4369 = !DILocation(line: 3117, column: 1, scope: !4243)
!4370 = distinct !DISubprogram(name: "animchannels_deselectall_exec", scope: !3, file: !3, line: 2327, type: !4371, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!20, !4373, !4376}
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !4375, line: 69, baseType: !3606)
!4375 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !357, line: 348, baseType: !3608)
!4378 = !DILocalVariable(name: "C", arg: 1, scope: !4370, file: !3, line: 2327, type: !4373)
!4379 = !DILocation(line: 2327, column: 52, scope: !4370)
!4380 = !DILocalVariable(name: "op", arg: 2, scope: !4370, file: !3, line: 2327, type: !4376)
!4381 = !DILocation(line: 2327, column: 67, scope: !4370)
!4382 = !DILocalVariable(name: "ac", scope: !4370, file: !3, line: 2329, type: !2628)
!4383 = !DILocation(line: 2329, column: 15, scope: !4370)
!4384 = !DILocation(line: 2332, column: 32, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2332, column: 6)
!4386 = !DILocation(line: 2332, column: 6, scope: !4385)
!4387 = !DILocation(line: 2332, column: 40, scope: !4385)
!4388 = !DILocation(line: 2332, column: 6, scope: !4370)
!4389 = !DILocation(line: 2333, column: 3, scope: !4385)
!4390 = !DILocation(line: 2336, column: 22, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2336, column: 6)
!4392 = !DILocation(line: 2336, column: 26, scope: !4391)
!4393 = !DILocation(line: 2336, column: 6, scope: !4391)
!4394 = !DILocation(line: 2336, column: 6, scope: !4370)
!4395 = !DILocation(line: 2337, column: 39, scope: !4391)
!4396 = !DILocation(line: 2337, column: 48, scope: !4391)
!4397 = !DILocation(line: 2337, column: 45, scope: !4391)
!4398 = !DILocation(line: 2337, column: 3, scope: !4391)
!4399 = !DILocation(line: 2339, column: 39, scope: !4391)
!4400 = !DILocation(line: 2339, column: 48, scope: !4391)
!4401 = !DILocation(line: 2339, column: 45, scope: !4391)
!4402 = !DILocation(line: 2339, column: 3, scope: !4391)
!4403 = !DILocation(line: 2342, column: 24, scope: !4370)
!4404 = !DILocation(line: 2342, column: 2, scope: !4370)
!4405 = !DILocation(line: 2344, column: 2, scope: !4370)
!4406 = !DILocation(line: 2345, column: 1, scope: !4370)
!4407 = distinct !DISubprogram(name: "animedit_poll_channels_nla_tweakmode_off", scope: !3, file: !3, line: 615, type: !4408, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!20, !4373}
!4410 = !DILocalVariable(name: "C", arg: 1, scope: !4407, file: !3, line: 615, type: !4373)
!4411 = !DILocation(line: 615, column: 63, scope: !4407)
!4412 = !DILocalVariable(name: "sa", scope: !4407, file: !3, line: 617, type: !4413)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !511, line: 228, baseType: !2638)
!4415 = !DILocation(line: 617, column: 11, scope: !4407)
!4416 = !DILocation(line: 617, column: 28, scope: !4407)
!4417 = !DILocation(line: 617, column: 16, scope: !4407)
!4418 = !DILocalVariable(name: "scene", scope: !4407, file: !3, line: 618, type: !672)
!4419 = !DILocation(line: 618, column: 9, scope: !4407)
!4420 = !DILocation(line: 618, column: 32, scope: !4407)
!4421 = !DILocation(line: 618, column: 17, scope: !4407)
!4422 = !DILocation(line: 622, column: 6, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 622, column: 6)
!4424 = !DILocation(line: 622, column: 6, scope: !4407)
!4425 = !DILocation(line: 623, column: 3, scope: !4423)
!4426 = !DILocation(line: 625, column: 6, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 625, column: 6)
!4428 = !DILocation(line: 625, column: 62, scope: !4427)
!4429 = !DILocation(line: 625, column: 6, scope: !4407)
!4430 = !DILocation(line: 626, column: 3, scope: !4427)
!4431 = !DILocation(line: 629, column: 6, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 629, column: 6)
!4433 = !DILocation(line: 629, column: 10, scope: !4432)
!4434 = !DILocation(line: 629, column: 20, scope: !4432)
!4435 = !DILocation(line: 629, column: 6, scope: !4407)
!4436 = !DILocation(line: 630, column: 8, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 630, column: 7)
!4438 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 629, column: 34)
!4439 = !DILocation(line: 630, column: 14, scope: !4437)
!4440 = !DILocation(line: 630, column: 23, scope: !4437)
!4441 = !DILocation(line: 630, column: 27, scope: !4437)
!4442 = !DILocation(line: 630, column: 34, scope: !4437)
!4443 = !DILocation(line: 630, column: 39, scope: !4437)
!4444 = !DILocation(line: 630, column: 7, scope: !4438)
!4445 = !DILocation(line: 631, column: 4, scope: !4437)
!4446 = !DILocation(line: 632, column: 2, scope: !4438)
!4447 = !DILocation(line: 634, column: 2, scope: !4407)
!4448 = !DILocation(line: 635, column: 1, scope: !4407)
!4449 = distinct !DISubprogram(name: "animchannels_borderselect_exec", scope: !3, file: !3, line: 2467, type: !4371, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4450 = !DILocalVariable(name: "C", arg: 1, scope: !4449, file: !3, line: 2467, type: !4373)
!4451 = !DILocation(line: 2467, column: 53, scope: !4449)
!4452 = !DILocalVariable(name: "op", arg: 2, scope: !4449, file: !3, line: 2467, type: !4376)
!4453 = !DILocation(line: 2467, column: 68, scope: !4449)
!4454 = !DILocalVariable(name: "ac", scope: !4449, file: !3, line: 2469, type: !2628)
!4455 = !DILocation(line: 2469, column: 15, scope: !4449)
!4456 = !DILocalVariable(name: "rect", scope: !4449, file: !3, line: 2470, type: !2041)
!4457 = !DILocation(line: 2470, column: 7, scope: !4449)
!4458 = !DILocalVariable(name: "selectmode", scope: !4449, file: !3, line: 2471, type: !585)
!4459 = !DILocation(line: 2471, column: 8, scope: !4449)
!4460 = !DILocalVariable(name: "gesture_mode", scope: !4449, file: !3, line: 2472, type: !20)
!4461 = !DILocation(line: 2472, column: 6, scope: !4449)
!4462 = !DILocalVariable(name: "extend", scope: !4449, file: !3, line: 2473, type: !1643)
!4463 = !DILocation(line: 2473, column: 7, scope: !4449)
!4464 = !DILocation(line: 2476, column: 32, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2476, column: 6)
!4466 = !DILocation(line: 2476, column: 6, scope: !4465)
!4467 = !DILocation(line: 2476, column: 40, scope: !4465)
!4468 = !DILocation(line: 2476, column: 6, scope: !4449)
!4469 = !DILocation(line: 2477, column: 3, scope: !4465)
!4470 = !DILocation(line: 2480, column: 40, scope: !4449)
!4471 = !DILocation(line: 2480, column: 2, scope: !4449)
!4472 = !DILocation(line: 2482, column: 29, scope: !4449)
!4473 = !DILocation(line: 2482, column: 33, scope: !4449)
!4474 = !DILocation(line: 2482, column: 17, scope: !4449)
!4475 = !DILocation(line: 2482, column: 15, scope: !4449)
!4476 = !DILocation(line: 2483, column: 27, scope: !4449)
!4477 = !DILocation(line: 2483, column: 31, scope: !4449)
!4478 = !DILocation(line: 2483, column: 11, scope: !4449)
!4479 = !DILocation(line: 2483, column: 9, scope: !4449)
!4480 = !DILocation(line: 2485, column: 7, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2485, column: 6)
!4482 = !DILocation(line: 2485, column: 6, scope: !4449)
!4483 = !DILocation(line: 2486, column: 39, scope: !4481)
!4484 = !DILocation(line: 2486, column: 48, scope: !4481)
!4485 = !DILocation(line: 2486, column: 45, scope: !4481)
!4486 = !DILocation(line: 2486, column: 3, scope: !4481)
!4487 = !DILocation(line: 2488, column: 6, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2488, column: 6)
!4489 = !DILocation(line: 2488, column: 19, scope: !4488)
!4490 = !DILocation(line: 2488, column: 6, scope: !4449)
!4491 = !DILocation(line: 2489, column: 14, scope: !4488)
!4492 = !DILocation(line: 2489, column: 3, scope: !4488)
!4493 = !DILocation(line: 2491, column: 14, scope: !4488)
!4494 = !DILocation(line: 2494, column: 41, scope: !4449)
!4495 = !DILocation(line: 2494, column: 2, scope: !4449)
!4496 = !DILocation(line: 2497, column: 24, scope: !4449)
!4497 = !DILocation(line: 2497, column: 2, scope: !4449)
!4498 = !DILocation(line: 2499, column: 2, scope: !4449)
!4499 = !DILocation(line: 2500, column: 1, scope: !4449)
!4500 = distinct !DISubprogram(name: "borderselect_anim_channels", scope: !3, file: !3, line: 2367, type: !4501, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{null, !2627, !4503, !585}
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!4504 = !DILocalVariable(name: "ac", arg: 1, scope: !4500, file: !3, line: 2367, type: !2627)
!4505 = !DILocation(line: 2367, column: 54, scope: !4500)
!4506 = !DILocalVariable(name: "rect", arg: 2, scope: !4500, file: !3, line: 2367, type: !4503)
!4507 = !DILocation(line: 2367, column: 64, scope: !4500)
!4508 = !DILocalVariable(name: "selectmode", arg: 3, scope: !4500, file: !3, line: 2367, type: !585)
!4509 = !DILocation(line: 2367, column: 76, scope: !4500)
!4510 = !DILocalVariable(name: "anim_data", scope: !4500, file: !3, line: 2369, type: !559)
!4511 = !DILocation(line: 2369, column: 11, scope: !4500)
!4512 = !DILocalVariable(name: "ale", scope: !4500, file: !3, line: 2370, type: !2754)
!4513 = !DILocation(line: 2370, column: 17, scope: !4500)
!4514 = !DILocalVariable(name: "filter", scope: !4500, file: !3, line: 2371, type: !20)
!4515 = !DILocation(line: 2371, column: 6, scope: !4500)
!4516 = !DILocalVariable(name: "snla", scope: !4500, file: !3, line: 2373, type: !2354)
!4517 = !DILocation(line: 2373, column: 12, scope: !4500)
!4518 = !DILocation(line: 2373, column: 31, scope: !4500)
!4519 = !DILocation(line: 2373, column: 35, scope: !4500)
!4520 = !DILocation(line: 2373, column: 19, scope: !4500)
!4521 = !DILocalVariable(name: "v2d", scope: !4500, file: !3, line: 2374, type: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!4523 = !DILocation(line: 2374, column: 10, scope: !4500)
!4524 = !DILocation(line: 2374, column: 17, scope: !4500)
!4525 = !DILocation(line: 2374, column: 21, scope: !4500)
!4526 = !DILocation(line: 2374, column: 25, scope: !4500)
!4527 = !DILocalVariable(name: "rectf", scope: !4500, file: !3, line: 2375, type: !1145)
!4528 = !DILocation(line: 2375, column: 7, scope: !4500)
!4529 = !DILocalVariable(name: "ymin", scope: !4500, file: !3, line: 2376, type: !607)
!4530 = !DILocation(line: 2376, column: 8, scope: !4500)
!4531 = !DILocalVariable(name: "ymax", scope: !4500, file: !3, line: 2376, type: !607)
!4532 = !DILocation(line: 2376, column: 14, scope: !4500)
!4533 = !DILocation(line: 2379, column: 6, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2379, column: 6)
!4535 = !DILocation(line: 2379, column: 10, scope: !4534)
!4536 = !DILocation(line: 2379, column: 19, scope: !4534)
!4537 = !DILocation(line: 2379, column: 6, scope: !4500)
!4538 = !DILocation(line: 2380, column: 19, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2379, column: 36)
!4540 = !DILocation(line: 2380, column: 18, scope: !4539)
!4541 = !DILocation(line: 2380, column: 8, scope: !4539)
!4542 = !DILocation(line: 2381, column: 8, scope: !4539)
!4543 = !DILocation(line: 2382, column: 2, scope: !4539)
!4544 = !DILocation(line: 2384, column: 8, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2383, column: 7)
!4546 = !DILocation(line: 2385, column: 19, scope: !4545)
!4547 = !DILocation(line: 2385, column: 18, scope: !4545)
!4548 = !DILocation(line: 2385, column: 8, scope: !4545)
!4549 = !DILocation(line: 2389, column: 27, scope: !4500)
!4550 = !DILocation(line: 2389, column: 32, scope: !4500)
!4551 = !DILocation(line: 2389, column: 38, scope: !4500)
!4552 = !DILocation(line: 2389, column: 44, scope: !4500)
!4553 = !DILocation(line: 2389, column: 50, scope: !4500)
!4554 = !DILocation(line: 2389, column: 55, scope: !4500)
!4555 = !DILocation(line: 2389, column: 67, scope: !4500)
!4556 = !DILocation(line: 2389, column: 80, scope: !4500)
!4557 = !DILocation(line: 2389, column: 2, scope: !4500)
!4558 = !DILocation(line: 2390, column: 27, scope: !4500)
!4559 = !DILocation(line: 2390, column: 32, scope: !4500)
!4560 = !DILocation(line: 2390, column: 38, scope: !4500)
!4561 = !DILocation(line: 2390, column: 44, scope: !4500)
!4562 = !DILocation(line: 2390, column: 50, scope: !4500)
!4563 = !DILocation(line: 2390, column: 55, scope: !4500)
!4564 = !DILocation(line: 2390, column: 67, scope: !4500)
!4565 = !DILocation(line: 2390, column: 80, scope: !4500)
!4566 = !DILocation(line: 2390, column: 2, scope: !4500)
!4567 = !DILocation(line: 2393, column: 9, scope: !4500)
!4568 = !DILocation(line: 2394, column: 23, scope: !4500)
!4569 = !DILocation(line: 2394, column: 39, scope: !4500)
!4570 = !DILocation(line: 2394, column: 47, scope: !4500)
!4571 = !DILocation(line: 2394, column: 51, scope: !4500)
!4572 = !DILocation(line: 2394, column: 57, scope: !4500)
!4573 = !DILocation(line: 2394, column: 61, scope: !4500)
!4574 = !DILocation(line: 2394, column: 2, scope: !4500)
!4575 = !DILocation(line: 2397, column: 23, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2397, column: 2)
!4577 = !DILocation(line: 2397, column: 13, scope: !4576)
!4578 = !DILocation(line: 2397, column: 11, scope: !4576)
!4579 = !DILocation(line: 2397, column: 7, scope: !4576)
!4580 = !DILocation(line: 2397, column: 30, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2397, column: 2)
!4582 = !DILocation(line: 2397, column: 2, scope: !4576)
!4583 = !DILocation(line: 2398, column: 7, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 2398, column: 7)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 2397, column: 52)
!4586 = !DILocation(line: 2398, column: 11, scope: !4584)
!4587 = !DILocation(line: 2398, column: 20, scope: !4584)
!4588 = !DILocation(line: 2398, column: 7, scope: !4585)
!4589 = !DILocation(line: 2399, column: 11, scope: !4584)
!4590 = !DILocation(line: 2399, column: 18, scope: !4584)
!4591 = !DILocation(line: 2399, column: 16, scope: !4584)
!4592 = !DILocation(line: 2399, column: 9, scope: !4584)
!4593 = !DILocation(line: 2399, column: 4, scope: !4584)
!4594 = !DILocation(line: 2401, column: 11, scope: !4584)
!4595 = !DILocation(line: 2401, column: 18, scope: !4584)
!4596 = !DILocation(line: 2401, column: 16, scope: !4584)
!4597 = !DILocation(line: 2401, column: 9, scope: !4584)
!4598 = !DILocation(line: 2404, column: 10, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 2404, column: 7)
!4600 = !DILocation(line: 2404, column: 23, scope: !4599)
!4601 = !DILocation(line: 2404, column: 15, scope: !4599)
!4602 = !DILocation(line: 2404, column: 29, scope: !4599)
!4603 = !DILocation(line: 2404, column: 33, scope: !4599)
!4604 = !DILocation(line: 2404, column: 46, scope: !4599)
!4605 = !DILocation(line: 2404, column: 38, scope: !4599)
!4606 = !DILocation(line: 2404, column: 7, scope: !4585)
!4607 = !DILocation(line: 2406, column: 29, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 2404, column: 54)
!4609 = !DILocation(line: 2406, column: 33, scope: !4608)
!4610 = !DILocation(line: 2406, column: 63, scope: !4608)
!4611 = !DILocation(line: 2406, column: 4, scope: !4608)
!4612 = !DILocation(line: 2409, column: 12, scope: !4608)
!4613 = !DILocation(line: 2409, column: 17, scope: !4608)
!4614 = !DILocation(line: 2409, column: 4, scope: !4608)
!4615 = !DILocalVariable(name: "agrp", scope: !4616, file: !3, line: 2412, type: !551)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 2411, column: 5)
!4617 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2409, column: 23)
!4618 = !DILocation(line: 2412, column: 20, scope: !4616)
!4619 = !DILocation(line: 2412, column: 43, scope: !4616)
!4620 = !DILocation(line: 2412, column: 48, scope: !4616)
!4621 = !DILocation(line: 2412, column: 27, scope: !4616)
!4622 = !DILocation(line: 2417, column: 11, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 2417, column: 10)
!4624 = !DILocation(line: 2417, column: 15, scope: !4623)
!4625 = !DILocation(line: 2417, column: 20, scope: !4623)
!4626 = !DILocation(line: 2417, column: 31, scope: !4623)
!4627 = !DILocation(line: 2417, column: 53, scope: !4623)
!4628 = !DILocation(line: 2417, column: 10, scope: !4616)
!4629 = !DILocation(line: 2418, column: 12, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 2418, column: 11)
!4631 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 2417, column: 59)
!4632 = !DILocation(line: 2418, column: 17, scope: !4630)
!4633 = !DILocation(line: 2418, column: 11, scope: !4630)
!4634 = !DILocation(line: 2418, column: 21, scope: !4630)
!4635 = !DILocation(line: 2418, column: 25, scope: !4630)
!4636 = !DILocation(line: 2418, column: 43, scope: !4630)
!4637 = !DILocation(line: 2418, column: 11, scope: !4631)
!4638 = !DILocalVariable(name: "ob", scope: !4639, file: !3, line: 2419, type: !2558)
!4639 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 2418, column: 54)
!4640 = !DILocation(line: 2419, column: 16, scope: !4639)
!4641 = !DILocation(line: 2419, column: 31, scope: !4639)
!4642 = !DILocation(line: 2419, column: 36, scope: !4639)
!4643 = !DILocation(line: 2419, column: 21, scope: !4639)
!4644 = !DILocation(line: 2421, column: 12, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2421, column: 12)
!4646 = !DILocation(line: 2421, column: 16, scope: !4645)
!4647 = !DILocation(line: 2421, column: 21, scope: !4645)
!4648 = !DILocation(line: 2421, column: 12, scope: !4639)
!4649 = !DILocalVariable(name: "pchan", scope: !4650, file: !3, line: 2428, type: !4651)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2421, column: 37)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !72, line: 243, baseType: !4653)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !72, line: 187, size: 4352, elements: !4654)
!4654 = !{!4655, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4653, file: !72, line: 188, baseType: !4656, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4653, file: !72, line: 188, baseType: !4656, size: 64, offset: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4653, file: !72, line: 190, baseType: !714, size: 64, offset: 128)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !4653, file: !72, line: 192, baseType: !559, size: 128, offset: 192)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4653, file: !72, line: 193, baseType: !569, size: 512, offset: 320)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4653, file: !72, line: 195, baseType: !585, size: 16, offset: 832)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !4653, file: !72, line: 196, baseType: !585, size: 16, offset: 848)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !4653, file: !72, line: 197, baseType: !585, size: 16, offset: 864)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !4653, file: !72, line: 198, baseType: !585, size: 16, offset: 880)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !4653, file: !72, line: 199, baseType: !570, size: 8, offset: 896)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !4653, file: !72, line: 200, baseType: !570, size: 8, offset: 904)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !4653, file: !72, line: 201, baseType: !1859, size: 48, offset: 912)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !4653, file: !72, line: 203, baseType: !4669, size: 64, offset: 960)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !72, line: 203, flags: DIFlagFwdDecl)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4653, file: !72, line: 204, baseType: !4656, size: 64, offset: 1024)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4653, file: !72, line: 205, baseType: !4656, size: 64, offset: 1088)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !4653, file: !72, line: 207, baseType: !561, size: 128, offset: 1152)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !4653, file: !72, line: 208, baseType: !561, size: 128, offset: 1280)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !4653, file: !72, line: 210, baseType: !896, size: 64, offset: 1408)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !4653, file: !72, line: 211, baseType: !805, size: 64, offset: 1472)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !4653, file: !72, line: 212, baseType: !4656, size: 64, offset: 1536)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4653, file: !72, line: 217, baseType: !657, size: 96, offset: 1600)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4653, file: !72, line: 218, baseType: !657, size: 96, offset: 1696)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !4653, file: !72, line: 221, baseType: !657, size: 96, offset: 1792)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4653, file: !72, line: 222, baseType: !933, size: 128, offset: 1888)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !4653, file: !72, line: 223, baseType: !657, size: 96, offset: 2016)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !4653, file: !72, line: 223, baseType: !607, size: 32, offset: 2112)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !4653, file: !72, line: 224, baseType: !585, size: 16, offset: 2144)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4653, file: !72, line: 225, baseType: !585, size: 16, offset: 2160)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !4653, file: !72, line: 227, baseType: !940, size: 512, offset: 2176)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !4653, file: !72, line: 228, baseType: !940, size: 512, offset: 2688)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !4653, file: !72, line: 230, baseType: !940, size: 512, offset: 3200)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !4653, file: !72, line: 233, baseType: !657, size: 96, offset: 3712)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !4653, file: !72, line: 234, baseType: !657, size: 96, offset: 3808)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !4653, file: !72, line: 236, baseType: !657, size: 96, offset: 3904)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !4653, file: !72, line: 236, baseType: !657, size: 96, offset: 4000)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !4653, file: !72, line: 237, baseType: !657, size: 96, offset: 4096)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !4653, file: !72, line: 238, baseType: !607, size: 32, offset: 4192)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !4653, file: !72, line: 239, baseType: !607, size: 32, offset: 4224)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !4653, file: !72, line: 240, baseType: !607, size: 32, offset: 4256)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !4653, file: !72, line: 242, baseType: !564, size: 64, offset: 4288)
!4698 = !DILocation(line: 2428, column: 23, scope: !4650)
!4699 = !DILocation(line: 2428, column: 58, scope: !4650)
!4700 = !DILocation(line: 2428, column: 62, scope: !4650)
!4701 = !DILocation(line: 2428, column: 68, scope: !4650)
!4702 = !DILocation(line: 2428, column: 74, scope: !4650)
!4703 = !DILocation(line: 2428, column: 31, scope: !4650)
!4704 = !DILocation(line: 2430, column: 13, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 2430, column: 13)
!4706 = !DILocation(line: 2430, column: 19, scope: !4705)
!4707 = !DILocation(line: 2430, column: 24, scope: !4705)
!4708 = !DILocation(line: 2430, column: 13, scope: !4650)
!4709 = !DILocation(line: 2431, column: 30, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 2430, column: 41)
!4711 = !DILocation(line: 2431, column: 34, scope: !4710)
!4712 = !DILocation(line: 2431, column: 10, scope: !4710)
!4713 = !DILocation(line: 2432, column: 9, scope: !4710)
!4714 = !DILocation(line: 2434, column: 30, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 2433, column: 14)
!4716 = !DILocation(line: 2434, column: 34, scope: !4715)
!4717 = !DILocation(line: 2434, column: 10, scope: !4715)
!4718 = !DILocation(line: 2436, column: 8, scope: !4650)
!4719 = !DILocation(line: 2437, column: 7, scope: !4639)
!4720 = !DILocation(line: 2438, column: 6, scope: !4631)
!4721 = !DILocation(line: 2441, column: 6, scope: !4616)
!4722 = !DILocation(line: 2441, column: 12, scope: !4616)
!4723 = !DILocation(line: 2441, column: 17, scope: !4616)
!4724 = !DILocation(line: 2442, column: 6, scope: !4616)
!4725 = !DILocalVariable(name: "nlt", scope: !4726, file: !3, line: 2446, type: !661)
!4726 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 2445, column: 5)
!4727 = !DILocation(line: 2446, column: 16, scope: !4726)
!4728 = !DILocation(line: 2446, column: 34, scope: !4726)
!4729 = !DILocation(line: 2446, column: 39, scope: !4726)
!4730 = !DILocation(line: 2446, column: 22, scope: !4726)
!4731 = !DILocation(line: 2451, column: 6, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 2451, column: 6)
!4733 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 2451, column: 6)
!4734 = !DILocation(line: 2451, column: 6, scope: !4733)
!4735 = !DILocation(line: 2451, column: 6, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 2451, column: 6)
!4737 = !DILocation(line: 2452, column: 6, scope: !4726)
!4738 = !DILocation(line: 2455, column: 3, scope: !4608)
!4739 = !DILocation(line: 2458, column: 10, scope: !4585)
!4740 = !DILocation(line: 2458, column: 8, scope: !4585)
!4741 = !DILocation(line: 2459, column: 2, scope: !4585)
!4742 = !DILocation(line: 2397, column: 41, scope: !4581)
!4743 = !DILocation(line: 2397, column: 46, scope: !4581)
!4744 = !DILocation(line: 2397, column: 39, scope: !4581)
!4745 = !DILocation(line: 2397, column: 2, scope: !4581)
!4746 = distinct !{!4746, !4582, !4747}
!4747 = !DILocation(line: 2459, column: 2, scope: !4576)
!4748 = !DILocation(line: 2462, column: 2, scope: !4500)
!4749 = !DILocation(line: 2463, column: 1, scope: !4500)
!4750 = distinct !DISubprogram(name: "animchannels_mouseclick_invoke", scope: !3, file: !3, line: 2949, type: !4751, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!20, !4373, !4376, !4753}
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4755)
!4755 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !2425, line: 460, baseType: !2482)
!4756 = !DILocalVariable(name: "C", arg: 1, scope: !4750, file: !3, line: 2949, type: !4373)
!4757 = !DILocation(line: 2949, column: 53, scope: !4750)
!4758 = !DILocalVariable(name: "op", arg: 2, scope: !4750, file: !3, line: 2949, type: !4376)
!4759 = !DILocation(line: 2949, column: 68, scope: !4750)
!4760 = !DILocalVariable(name: "event", arg: 3, scope: !4750, file: !3, line: 2949, type: !4753)
!4761 = !DILocation(line: 2949, column: 87, scope: !4750)
!4762 = !DILocalVariable(name: "ac", scope: !4750, file: !3, line: 2951, type: !2628)
!4763 = !DILocation(line: 2951, column: 15, scope: !4750)
!4764 = !DILocalVariable(name: "ar", scope: !4750, file: !3, line: 2952, type: !4765)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !511, line: 267, baseType: !2686)
!4767 = !DILocation(line: 2952, column: 11, scope: !4750)
!4768 = !DILocalVariable(name: "v2d", scope: !4750, file: !3, line: 2953, type: !4522)
!4769 = !DILocation(line: 2953, column: 10, scope: !4750)
!4770 = !DILocalVariable(name: "channel_index", scope: !4750, file: !3, line: 2954, type: !20)
!4771 = !DILocation(line: 2954, column: 6, scope: !4750)
!4772 = !DILocalVariable(name: "notifierFlags", scope: !4750, file: !3, line: 2955, type: !20)
!4773 = !DILocation(line: 2955, column: 6, scope: !4750)
!4774 = !DILocalVariable(name: "selectmode", scope: !4750, file: !3, line: 2956, type: !585)
!4775 = !DILocation(line: 2956, column: 8, scope: !4750)
!4776 = !DILocalVariable(name: "x", scope: !4750, file: !3, line: 2957, type: !607)
!4777 = !DILocation(line: 2957, column: 8, scope: !4750)
!4778 = !DILocalVariable(name: "y", scope: !4750, file: !3, line: 2957, type: !607)
!4779 = !DILocation(line: 2957, column: 11, scope: !4750)
!4780 = !DILocation(line: 2961, column: 32, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 2961, column: 6)
!4782 = !DILocation(line: 2961, column: 6, scope: !4781)
!4783 = !DILocation(line: 2961, column: 40, scope: !4781)
!4784 = !DILocation(line: 2961, column: 6, scope: !4750)
!4785 = !DILocation(line: 2962, column: 3, scope: !4781)
!4786 = !DILocation(line: 2965, column: 10, scope: !4750)
!4787 = !DILocation(line: 2965, column: 5, scope: !4750)
!4788 = !DILocation(line: 2966, column: 9, scope: !4750)
!4789 = !DILocation(line: 2966, column: 13, scope: !4750)
!4790 = !DILocation(line: 2966, column: 6, scope: !4750)
!4791 = !DILocation(line: 2969, column: 22, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 2969, column: 6)
!4793 = !DILocation(line: 2969, column: 26, scope: !4792)
!4794 = !DILocation(line: 2969, column: 6, scope: !4792)
!4795 = !DILocation(line: 2969, column: 6, scope: !4750)
!4796 = !DILocation(line: 2970, column: 14, scope: !4792)
!4797 = !DILocation(line: 2970, column: 3, scope: !4792)
!4798 = !DILocation(line: 2971, column: 27, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2971, column: 11)
!4800 = !DILocation(line: 2971, column: 31, scope: !4799)
!4801 = !DILocation(line: 2971, column: 11, scope: !4799)
!4802 = !DILocation(line: 2971, column: 11, scope: !4792)
!4803 = !DILocation(line: 2972, column: 14, scope: !4799)
!4804 = !DILocation(line: 2972, column: 3, scope: !4799)
!4805 = !DILocation(line: 2974, column: 14, scope: !4799)
!4806 = !DILocation(line: 2981, column: 27, scope: !4750)
!4807 = !DILocation(line: 2981, column: 32, scope: !4750)
!4808 = !DILocation(line: 2981, column: 39, scope: !4750)
!4809 = !DILocation(line: 2981, column: 48, scope: !4750)
!4810 = !DILocation(line: 2981, column: 55, scope: !4750)
!4811 = !DILocation(line: 2981, column: 2, scope: !4750)
!4812 = !DILocation(line: 2982, column: 34, scope: !4750)
!4813 = !DILocation(line: 2982, column: 39, scope: !4750)
!4814 = !DILocation(line: 2982, column: 59, scope: !4750)
!4815 = !DILocation(line: 2982, column: 84, scope: !4750)
!4816 = !DILocation(line: 2982, column: 106, scope: !4750)
!4817 = !DILocation(line: 2982, column: 109, scope: !4750)
!4818 = !DILocation(line: 2982, column: 2, scope: !4750)
!4819 = !DILocation(line: 2985, column: 38, scope: !4750)
!4820 = !DILocation(line: 2985, column: 46, scope: !4750)
!4821 = !DILocation(line: 2985, column: 61, scope: !4750)
!4822 = !DILocation(line: 2985, column: 18, scope: !4750)
!4823 = !DILocation(line: 2985, column: 16, scope: !4750)
!4824 = !DILocation(line: 2988, column: 24, scope: !4750)
!4825 = !DILocation(line: 2988, column: 42, scope: !4750)
!4826 = !DILocation(line: 2988, column: 40, scope: !4750)
!4827 = !DILocation(line: 2988, column: 2, scope: !4750)
!4828 = !DILocation(line: 2990, column: 2, scope: !4750)
!4829 = !DILocation(line: 2991, column: 1, scope: !4750)
!4830 = distinct !DISubprogram(name: "animedit_poll_channels_active", scope: !3, file: !3, line: 599, type: !4408, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4831 = !DILocalVariable(name: "C", arg: 1, scope: !4830, file: !3, line: 599, type: !4373)
!4832 = !DILocation(line: 599, column: 52, scope: !4830)
!4833 = !DILocalVariable(name: "sa", scope: !4830, file: !3, line: 601, type: !4413)
!4834 = !DILocation(line: 601, column: 11, scope: !4830)
!4835 = !DILocation(line: 601, column: 28, scope: !4830)
!4836 = !DILocation(line: 601, column: 16, scope: !4830)
!4837 = !DILocation(line: 605, column: 6, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 605, column: 6)
!4839 = !DILocation(line: 605, column: 6, scope: !4830)
!4840 = !DILocation(line: 606, column: 3, scope: !4838)
!4841 = !DILocation(line: 608, column: 6, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 608, column: 6)
!4843 = !DILocation(line: 608, column: 62, scope: !4842)
!4844 = !DILocation(line: 608, column: 6, scope: !4830)
!4845 = !DILocation(line: 609, column: 3, scope: !4842)
!4846 = !DILocation(line: 611, column: 2, scope: !4830)
!4847 = !DILocation(line: 612, column: 1, scope: !4830)
!4848 = distinct !DISubprogram(name: "mouse_anim_channels", scope: !3, file: !3, line: 2628, type: !4849, scopeLine: 2629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!20, !4373, !2627, !20, !585}
!4851 = !DILocalVariable(name: "C", arg: 1, scope: !4848, file: !3, line: 2628, type: !4373)
!4852 = !DILocation(line: 2628, column: 42, scope: !4848)
!4853 = !DILocalVariable(name: "ac", arg: 2, scope: !4848, file: !3, line: 2628, type: !2627)
!4854 = !DILocation(line: 2628, column: 59, scope: !4848)
!4855 = !DILocalVariable(name: "channel_index", arg: 3, scope: !4848, file: !3, line: 2628, type: !20)
!4856 = !DILocation(line: 2628, column: 67, scope: !4848)
!4857 = !DILocalVariable(name: "selectmode", arg: 4, scope: !4848, file: !3, line: 2628, type: !585)
!4858 = !DILocation(line: 2628, column: 88, scope: !4848)
!4859 = !DILocalVariable(name: "anim_data", scope: !4848, file: !3, line: 2630, type: !559)
!4860 = !DILocation(line: 2630, column: 11, scope: !4848)
!4861 = !DILocalVariable(name: "ale", scope: !4848, file: !3, line: 2631, type: !2754)
!4862 = !DILocation(line: 2631, column: 17, scope: !4848)
!4863 = !DILocalVariable(name: "filter", scope: !4848, file: !3, line: 2632, type: !20)
!4864 = !DILocation(line: 2632, column: 6, scope: !4848)
!4865 = !DILocalVariable(name: "notifierFlags", scope: !4848, file: !3, line: 2633, type: !20)
!4866 = !DILocation(line: 2633, column: 6, scope: !4848)
!4867 = !DILocation(line: 2637, column: 9, scope: !4848)
!4868 = !DILocation(line: 2638, column: 23, scope: !4848)
!4869 = !DILocation(line: 2638, column: 39, scope: !4848)
!4870 = !DILocation(line: 2638, column: 47, scope: !4848)
!4871 = !DILocation(line: 2638, column: 51, scope: !4848)
!4872 = !DILocation(line: 2638, column: 57, scope: !4848)
!4873 = !DILocation(line: 2638, column: 61, scope: !4848)
!4874 = !DILocation(line: 2638, column: 2, scope: !4848)
!4875 = !DILocation(line: 2641, column: 33, scope: !4848)
!4876 = !DILocation(line: 2641, column: 8, scope: !4848)
!4877 = !DILocation(line: 2641, column: 6, scope: !4848)
!4878 = !DILocation(line: 2642, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2642, column: 6)
!4880 = !DILocation(line: 2642, column: 10, scope: !4879)
!4881 = !DILocation(line: 2642, column: 6, scope: !4848)
!4882 = !DILocation(line: 2644, column: 9, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 2644, column: 7)
!4884 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2642, column: 19)
!4885 = !DILocation(line: 2644, column: 15, scope: !4883)
!4886 = !DILocation(line: 2644, column: 7, scope: !4884)
!4887 = !DILocation(line: 2645, column: 89, scope: !4883)
!4888 = !DILocation(line: 2645, column: 4, scope: !4883)
!4889 = !DILocation(line: 2647, column: 3, scope: !4884)
!4890 = !DILocation(line: 2648, column: 3, scope: !4884)
!4891 = !DILocation(line: 2653, column: 7, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2653, column: 6)
!4893 = !DILocation(line: 2653, column: 18, scope: !4892)
!4894 = !DILocation(line: 2653, column: 25, scope: !4892)
!4895 = !DILocation(line: 2653, column: 29, scope: !4892)
!4896 = !DILocation(line: 2653, column: 34, scope: !4892)
!4897 = !DILocation(line: 2653, column: 39, scope: !4892)
!4898 = !DILocation(line: 2653, column: 6, scope: !4848)
!4899 = !DILocation(line: 2655, column: 3, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2653, column: 59)
!4901 = !DILocation(line: 2656, column: 3, scope: !4900)
!4902 = !DILocation(line: 2661, column: 10, scope: !4848)
!4903 = !DILocation(line: 2661, column: 15, scope: !4848)
!4904 = !DILocation(line: 2661, column: 2, scope: !4848)
!4905 = !DILocalVariable(name: "sce", scope: !4906, file: !3, line: 2664, type: !672)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2663, column: 3)
!4907 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2661, column: 21)
!4908 = !DILocation(line: 2664, column: 11, scope: !4906)
!4909 = !DILocation(line: 2664, column: 26, scope: !4906)
!4910 = !DILocation(line: 2664, column: 31, scope: !4906)
!4911 = !DILocation(line: 2664, column: 17, scope: !4906)
!4912 = !DILocalVariable(name: "adt", scope: !4906, file: !3, line: 2665, type: !3481)
!4913 = !DILocation(line: 2665, column: 14, scope: !4906)
!4914 = !DILocation(line: 2665, column: 20, scope: !4906)
!4915 = !DILocation(line: 2665, column: 25, scope: !4906)
!4916 = !DILocation(line: 2668, column: 8, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2668, column: 8)
!4918 = !DILocation(line: 2668, column: 19, scope: !4917)
!4919 = !DILocation(line: 2668, column: 8, scope: !4906)
!4920 = !DILocation(line: 2670, column: 5, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2668, column: 37)
!4922 = !DILocation(line: 2670, column: 10, scope: !4921)
!4923 = !DILocation(line: 2670, column: 15, scope: !4921)
!4924 = !DILocation(line: 2671, column: 9, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 2671, column: 9)
!4926 = !DILocation(line: 2671, column: 9, scope: !4921)
!4927 = !DILocation(line: 2671, column: 14, scope: !4925)
!4928 = !DILocation(line: 2671, column: 19, scope: !4925)
!4929 = !DILocation(line: 2671, column: 24, scope: !4925)
!4930 = !DILocation(line: 2672, column: 4, scope: !4921)
!4931 = !DILocation(line: 2674, column: 5, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2673, column: 9)
!4933 = !DILocation(line: 2674, column: 10, scope: !4932)
!4934 = !DILocation(line: 2674, column: 15, scope: !4932)
!4935 = !DILocation(line: 2675, column: 9, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2675, column: 9)
!4937 = !DILocation(line: 2675, column: 9, scope: !4932)
!4938 = !DILocation(line: 2675, column: 14, scope: !4936)
!4939 = !DILocation(line: 2675, column: 19, scope: !4936)
!4940 = !DILocation(line: 2675, column: 24, scope: !4936)
!4941 = !DILocation(line: 2678, column: 18, scope: !4906)
!4942 = !DILocation(line: 2679, column: 4, scope: !4906)
!4943 = !DILocalVariable(name: "ads", scope: !4944, file: !3, line: 2683, type: !2560)
!4944 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2682, column: 3)
!4945 = !DILocation(line: 2683, column: 16, scope: !4944)
!4946 = !DILocation(line: 2683, column: 36, scope: !4944)
!4947 = !DILocation(line: 2683, column: 40, scope: !4944)
!4948 = !DILocation(line: 2683, column: 22, scope: !4944)
!4949 = !DILocalVariable(name: "sce", scope: !4944, file: !3, line: 2684, type: !672)
!4950 = !DILocation(line: 2684, column: 11, scope: !4944)
!4951 = !DILocation(line: 2684, column: 26, scope: !4944)
!4952 = !DILocation(line: 2684, column: 31, scope: !4944)
!4953 = !DILocation(line: 2684, column: 17, scope: !4944)
!4954 = !DILocalVariable(name: "base", scope: !4944, file: !3, line: 2685, type: !2562)
!4955 = !DILocation(line: 2685, column: 10, scope: !4944)
!4956 = !DILocation(line: 2685, column: 25, scope: !4944)
!4957 = !DILocation(line: 2685, column: 30, scope: !4944)
!4958 = !DILocation(line: 2685, column: 17, scope: !4944)
!4959 = !DILocalVariable(name: "ob", scope: !4944, file: !3, line: 2686, type: !2558)
!4960 = !DILocation(line: 2686, column: 12, scope: !4944)
!4961 = !DILocation(line: 2686, column: 17, scope: !4944)
!4962 = !DILocation(line: 2686, column: 23, scope: !4944)
!4963 = !DILocalVariable(name: "adt", scope: !4944, file: !3, line: 2687, type: !3481)
!4964 = !DILocation(line: 2687, column: 14, scope: !4944)
!4965 = !DILocation(line: 2687, column: 20, scope: !4944)
!4966 = !DILocation(line: 2687, column: 24, scope: !4944)
!4967 = !DILocation(line: 2690, column: 8, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 2690, column: 8)
!4969 = !DILocation(line: 2690, column: 19, scope: !4968)
!4970 = !DILocation(line: 2690, column: 8, scope: !4944)
!4971 = !DILocation(line: 2692, column: 5, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 2690, column: 37)
!4973 = !DILocation(line: 2692, column: 11, scope: !4972)
!4974 = !DILocation(line: 2692, column: 16, scope: !4972)
!4975 = !DILocation(line: 2693, column: 16, scope: !4972)
!4976 = !DILocation(line: 2693, column: 22, scope: !4972)
!4977 = !DILocation(line: 2693, column: 5, scope: !4972)
!4978 = !DILocation(line: 2693, column: 9, scope: !4972)
!4979 = !DILocation(line: 2693, column: 14, scope: !4972)
!4980 = !DILocation(line: 2695, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 2695, column: 9)
!4982 = !DILocation(line: 2695, column: 9, scope: !4972)
!4983 = !DILocation(line: 2695, column: 14, scope: !4981)
!4984 = !DILocation(line: 2695, column: 19, scope: !4981)
!4985 = !DILocation(line: 2695, column: 24, scope: !4981)
!4986 = !DILocation(line: 2696, column: 4, scope: !4972)
!4987 = !DILocalVariable(name: "b", scope: !4988, file: !3, line: 2698, type: !2562)
!4988 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 2697, column: 9)
!4989 = !DILocation(line: 2698, column: 11, scope: !4988)
!4990 = !DILocation(line: 2702, column: 14, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2702, column: 5)
!4992 = !DILocation(line: 2702, column: 19, scope: !4991)
!4993 = !DILocation(line: 2702, column: 24, scope: !4991)
!4994 = !DILocation(line: 2702, column: 12, scope: !4991)
!4995 = !DILocation(line: 2702, column: 10, scope: !4991)
!4996 = !DILocation(line: 2702, column: 31, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 2702, column: 5)
!4998 = !DILocation(line: 2702, column: 5, scope: !4991)
!4999 = !DILocation(line: 2703, column: 6, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 2702, column: 47)
!5001 = !DILocation(line: 2703, column: 9, scope: !5000)
!5002 = !DILocation(line: 2703, column: 14, scope: !5000)
!5003 = !DILocation(line: 2704, column: 24, scope: !5000)
!5004 = !DILocation(line: 2704, column: 27, scope: !5000)
!5005 = !DILocation(line: 2704, column: 6, scope: !5000)
!5006 = !DILocation(line: 2704, column: 9, scope: !5000)
!5007 = !DILocation(line: 2704, column: 17, scope: !5000)
!5008 = !DILocation(line: 2704, column: 22, scope: !5000)
!5009 = !DILocation(line: 2705, column: 10, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2705, column: 10)
!5011 = !DILocation(line: 2705, column: 13, scope: !5010)
!5012 = !DILocation(line: 2705, column: 21, scope: !5010)
!5013 = !DILocation(line: 2705, column: 10, scope: !5000)
!5014 = !DILocation(line: 2705, column: 26, scope: !5010)
!5015 = !DILocation(line: 2705, column: 29, scope: !5010)
!5016 = !DILocation(line: 2705, column: 37, scope: !5010)
!5017 = !DILocation(line: 2705, column: 42, scope: !5010)
!5018 = !DILocation(line: 2705, column: 47, scope: !5010)
!5019 = !DILocation(line: 2706, column: 5, scope: !5000)
!5020 = !DILocation(line: 2702, column: 38, scope: !4997)
!5021 = !DILocation(line: 2702, column: 41, scope: !4997)
!5022 = !DILocation(line: 2702, column: 36, scope: !4997)
!5023 = !DILocation(line: 2702, column: 5, scope: !4997)
!5024 = distinct !{!5024, !4998, !5025}
!5025 = !DILocation(line: 2706, column: 5, scope: !4991)
!5026 = !DILocation(line: 2709, column: 5, scope: !4988)
!5027 = !DILocation(line: 2709, column: 11, scope: !4988)
!5028 = !DILocation(line: 2709, column: 16, scope: !4988)
!5029 = !DILocation(line: 2710, column: 5, scope: !4988)
!5030 = !DILocation(line: 2710, column: 9, scope: !4988)
!5031 = !DILocation(line: 2710, column: 14, scope: !4988)
!5032 = !DILocation(line: 2711, column: 9, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2711, column: 9)
!5034 = !DILocation(line: 2711, column: 9, scope: !4988)
!5035 = !DILocation(line: 2711, column: 14, scope: !5033)
!5036 = !DILocation(line: 2711, column: 19, scope: !5033)
!5037 = !DILocation(line: 2711, column: 24, scope: !5033)
!5038 = !DILocation(line: 2715, column: 28, scope: !4944)
!5039 = !DILocation(line: 2715, column: 31, scope: !4944)
!5040 = !DILocation(line: 2715, column: 4, scope: !4944)
!5041 = !DILocation(line: 2717, column: 9, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 2717, column: 8)
!5043 = !DILocation(line: 2717, column: 8, scope: !5042)
!5044 = !DILocation(line: 2717, column: 14, scope: !5042)
!5045 = !DILocation(line: 2717, column: 18, scope: !5042)
!5046 = !DILocation(line: 2717, column: 23, scope: !5042)
!5047 = !DILocation(line: 2717, column: 28, scope: !5042)
!5048 = !DILocation(line: 2717, column: 8, scope: !4944)
!5049 = !DILocation(line: 2718, column: 5, scope: !5042)
!5050 = !DILocation(line: 2718, column: 10, scope: !5042)
!5051 = !DILocation(line: 2718, column: 15, scope: !5042)
!5052 = !DILocation(line: 2720, column: 18, scope: !4944)
!5053 = !DILocation(line: 2721, column: 4, scope: !4944)
!5054 = !DILocation(line: 2741, column: 8, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 2741, column: 8)
!5056 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2739, column: 3)
!5057 = !DILocation(line: 2741, column: 13, scope: !5055)
!5058 = !DILocation(line: 2741, column: 8, scope: !5056)
!5059 = !DILocation(line: 2743, column: 9, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 2743, column: 9)
!5061 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2741, column: 18)
!5062 = !DILocation(line: 2743, column: 20, scope: !5060)
!5063 = !DILocation(line: 2743, column: 9, scope: !5061)
!5064 = !DILocation(line: 2745, column: 6, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 2743, column: 38)
!5066 = !DILocation(line: 2745, column: 11, scope: !5065)
!5067 = !DILocation(line: 2745, column: 16, scope: !5065)
!5068 = !DILocation(line: 2745, column: 21, scope: !5065)
!5069 = !DILocation(line: 2746, column: 5, scope: !5065)
!5070 = !DILocation(line: 2749, column: 34, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 2747, column: 10)
!5072 = !DILocation(line: 2749, column: 38, scope: !5071)
!5073 = !DILocation(line: 2749, column: 42, scope: !5071)
!5074 = !DILocation(line: 2749, column: 48, scope: !5071)
!5075 = !DILocation(line: 2749, column: 52, scope: !5071)
!5076 = !DILocation(line: 2749, column: 6, scope: !5071)
!5077 = !DILocation(line: 2750, column: 6, scope: !5071)
!5078 = !DILocation(line: 2750, column: 11, scope: !5071)
!5079 = !DILocation(line: 2750, column: 16, scope: !5071)
!5080 = !DILocation(line: 2750, column: 21, scope: !5071)
!5081 = !DILocation(line: 2754, column: 10, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 2754, column: 9)
!5083 = !DILocation(line: 2754, column: 15, scope: !5082)
!5084 = !DILocation(line: 2754, column: 9, scope: !5082)
!5085 = !DILocation(line: 2754, column: 20, scope: !5082)
!5086 = !DILocation(line: 2754, column: 24, scope: !5082)
!5087 = !DILocation(line: 2754, column: 29, scope: !5082)
!5088 = !DILocation(line: 2754, column: 34, scope: !5082)
!5089 = !DILocation(line: 2754, column: 39, scope: !5082)
!5090 = !DILocation(line: 2754, column: 9, scope: !5061)
!5091 = !DILocation(line: 2755, column: 6, scope: !5082)
!5092 = !DILocation(line: 2755, column: 11, scope: !5082)
!5093 = !DILocation(line: 2755, column: 16, scope: !5082)
!5094 = !DILocation(line: 2755, column: 21, scope: !5082)
!5095 = !DILocation(line: 2756, column: 4, scope: !5061)
!5096 = !DILocation(line: 2758, column: 18, scope: !5056)
!5097 = !DILocation(line: 2759, column: 4, scope: !5056)
!5098 = !DILocalVariable(name: "agrp", scope: !5099, file: !3, line: 2763, type: !551)
!5099 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2762, column: 3)
!5100 = !DILocation(line: 2763, column: 18, scope: !5099)
!5101 = !DILocation(line: 2763, column: 41, scope: !5099)
!5102 = !DILocation(line: 2763, column: 46, scope: !5099)
!5103 = !DILocation(line: 2763, column: 25, scope: !5099)
!5104 = !DILocalVariable(name: "ob", scope: !5099, file: !3, line: 2765, type: !2558)
!5105 = !DILocation(line: 2765, column: 12, scope: !5099)
!5106 = !DILocalVariable(name: "pchan", scope: !5099, file: !3, line: 2766, type: !4651)
!5107 = !DILocation(line: 2766, column: 18, scope: !5099)
!5108 = !DILocation(line: 2778, column: 9, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 2778, column: 8)
!5110 = !DILocation(line: 2778, column: 13, scope: !5109)
!5111 = !DILocation(line: 2778, column: 18, scope: !5109)
!5112 = !DILocation(line: 2778, column: 29, scope: !5109)
!5113 = !DILocation(line: 2778, column: 51, scope: !5109)
!5114 = !DILocation(line: 2778, column: 8, scope: !5099)
!5115 = !DILocation(line: 2779, column: 10, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 2779, column: 9)
!5117 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 2778, column: 57)
!5118 = !DILocation(line: 2779, column: 15, scope: !5116)
!5119 = !DILocation(line: 2779, column: 9, scope: !5116)
!5120 = !DILocation(line: 2779, column: 19, scope: !5116)
!5121 = !DILocation(line: 2779, column: 23, scope: !5116)
!5122 = !DILocation(line: 2779, column: 41, scope: !5116)
!5123 = !DILocation(line: 2779, column: 9, scope: !5117)
!5124 = !DILocation(line: 2780, column: 21, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 2779, column: 52)
!5126 = !DILocation(line: 2780, column: 26, scope: !5125)
!5127 = !DILocation(line: 2780, column: 11, scope: !5125)
!5128 = !DILocation(line: 2780, column: 9, scope: !5125)
!5129 = !DILocation(line: 2782, column: 10, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 2782, column: 10)
!5131 = !DILocation(line: 2782, column: 14, scope: !5130)
!5132 = !DILocation(line: 2782, column: 19, scope: !5130)
!5133 = !DILocation(line: 2782, column: 10, scope: !5125)
!5134 = !DILocation(line: 2789, column: 42, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 2782, column: 35)
!5136 = !DILocation(line: 2789, column: 46, scope: !5135)
!5137 = !DILocation(line: 2789, column: 52, scope: !5135)
!5138 = !DILocation(line: 2789, column: 58, scope: !5135)
!5139 = !DILocation(line: 2789, column: 15, scope: !5135)
!5140 = !DILocation(line: 2789, column: 13, scope: !5135)
!5141 = !DILocation(line: 2790, column: 6, scope: !5135)
!5142 = !DILocation(line: 2791, column: 5, scope: !5125)
!5143 = !DILocation(line: 2792, column: 4, scope: !5117)
!5144 = !DILocation(line: 2795, column: 8, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 2795, column: 8)
!5146 = !DILocation(line: 2795, column: 19, scope: !5145)
!5147 = !DILocation(line: 2795, column: 8, scope: !5099)
!5148 = !DILocation(line: 2797, column: 5, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 2795, column: 37)
!5150 = !DILocation(line: 2797, column: 11, scope: !5149)
!5151 = !DILocation(line: 2797, column: 16, scope: !5149)
!5152 = !DILocation(line: 2798, column: 4, scope: !5149)
!5153 = !DILocation(line: 2799, column: 13, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 2799, column: 13)
!5155 = !DILocation(line: 2799, column: 24, scope: !5154)
!5156 = !DILocation(line: 2799, column: 13, scope: !5145)
!5157 = !DILocalVariable(name: "fcu", scope: !5158, file: !3, line: 2801, type: !587)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 2799, column: 31)
!5159 = !DILocation(line: 2801, column: 13, scope: !5158)
!5160 = !DILocation(line: 2804, column: 33, scope: !5158)
!5161 = !DILocation(line: 2804, column: 37, scope: !5158)
!5162 = !DILocation(line: 2804, column: 41, scope: !5158)
!5163 = !DILocation(line: 2804, column: 47, scope: !5158)
!5164 = !DILocation(line: 2804, column: 51, scope: !5158)
!5165 = !DILocation(line: 2804, column: 5, scope: !5158)
!5166 = !DILocation(line: 2805, column: 9, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2805, column: 9)
!5168 = !DILocation(line: 2805, column: 9, scope: !5158)
!5169 = !DILocation(line: 2805, column: 37, scope: !5167)
!5170 = !DILocation(line: 2805, column: 16, scope: !5167)
!5171 = !DILocation(line: 2808, column: 16, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2808, column: 5)
!5173 = !DILocation(line: 2808, column: 22, scope: !5172)
!5174 = !DILocation(line: 2808, column: 31, scope: !5172)
!5175 = !DILocation(line: 2808, column: 14, scope: !5172)
!5176 = !DILocation(line: 2808, column: 10, scope: !5172)
!5177 = !DILocation(line: 2808, column: 38, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 2808, column: 5)
!5179 = !DILocation(line: 2808, column: 42, scope: !5178)
!5180 = !DILocation(line: 2808, column: 45, scope: !5178)
!5181 = !DILocation(line: 2808, column: 50, scope: !5178)
!5182 = !DILocation(line: 2808, column: 57, scope: !5178)
!5183 = !DILocation(line: 2808, column: 54, scope: !5178)
!5184 = !DILocation(line: 0, scope: !5178)
!5185 = !DILocation(line: 2808, column: 5, scope: !5172)
!5186 = !DILocation(line: 2809, column: 6, scope: !5178)
!5187 = !DILocation(line: 2809, column: 11, scope: !5178)
!5188 = !DILocation(line: 2809, column: 16, scope: !5178)
!5189 = !DILocation(line: 2808, column: 69, scope: !5178)
!5190 = !DILocation(line: 2808, column: 74, scope: !5178)
!5191 = !DILocation(line: 2808, column: 67, scope: !5178)
!5192 = !DILocation(line: 2808, column: 5, scope: !5178)
!5193 = distinct !{!5193, !5185, !5194}
!5194 = !DILocation(line: 2809, column: 19, scope: !5172)
!5195 = !DILocation(line: 2810, column: 5, scope: !5158)
!5196 = !DILocation(line: 2810, column: 11, scope: !5158)
!5197 = !DILocation(line: 2810, column: 16, scope: !5158)
!5198 = !DILocation(line: 2811, column: 4, scope: !5158)
!5199 = !DILocation(line: 2814, column: 33, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 2812, column: 9)
!5201 = !DILocation(line: 2814, column: 37, scope: !5200)
!5202 = !DILocation(line: 2814, column: 41, scope: !5200)
!5203 = !DILocation(line: 2814, column: 47, scope: !5200)
!5204 = !DILocation(line: 2814, column: 51, scope: !5200)
!5205 = !DILocation(line: 2814, column: 5, scope: !5200)
!5206 = !DILocation(line: 2815, column: 9, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2815, column: 9)
!5208 = !DILocation(line: 2815, column: 9, scope: !5200)
!5209 = !DILocation(line: 2815, column: 37, scope: !5207)
!5210 = !DILocation(line: 2815, column: 16, scope: !5207)
!5211 = !DILocation(line: 2817, column: 5, scope: !5200)
!5212 = !DILocation(line: 2817, column: 11, scope: !5200)
!5213 = !DILocation(line: 2817, column: 16, scope: !5200)
!5214 = !DILocation(line: 2821, column: 8, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 2821, column: 8)
!5216 = !DILocation(line: 2821, column: 14, scope: !5215)
!5217 = !DILocation(line: 2821, column: 19, scope: !5215)
!5218 = !DILocation(line: 2821, column: 8, scope: !5099)
!5219 = !DILocation(line: 2822, column: 29, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 2821, column: 36)
!5221 = !DILocation(line: 2822, column: 33, scope: !5220)
!5222 = !DILocation(line: 2822, column: 37, scope: !5220)
!5223 = !DILocation(line: 2822, column: 43, scope: !5220)
!5224 = !DILocation(line: 2822, column: 47, scope: !5220)
!5225 = !DILocation(line: 2822, column: 57, scope: !5220)
!5226 = !DILocation(line: 2822, column: 65, scope: !5220)
!5227 = !DILocation(line: 2822, column: 5, scope: !5220)
!5228 = !DILocation(line: 2823, column: 9, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 2823, column: 9)
!5230 = !DILocation(line: 2823, column: 9, scope: !5220)
!5231 = !DILocation(line: 2823, column: 36, scope: !5229)
!5232 = !DILocation(line: 2823, column: 40, scope: !5229)
!5233 = !DILocation(line: 2823, column: 16, scope: !5229)
!5234 = !DILocation(line: 2824, column: 4, scope: !5220)
!5235 = !DILocation(line: 2826, column: 29, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 2825, column: 9)
!5237 = !DILocation(line: 2826, column: 33, scope: !5236)
!5238 = !DILocation(line: 2826, column: 37, scope: !5236)
!5239 = !DILocation(line: 2826, column: 43, scope: !5236)
!5240 = !DILocation(line: 2826, column: 47, scope: !5236)
!5241 = !DILocation(line: 2826, column: 57, scope: !5236)
!5242 = !DILocation(line: 2826, column: 5, scope: !5236)
!5243 = !DILocation(line: 2827, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 2827, column: 9)
!5245 = !DILocation(line: 2827, column: 9, scope: !5236)
!5246 = !DILocation(line: 2827, column: 36, scope: !5244)
!5247 = !DILocation(line: 2827, column: 40, scope: !5244)
!5248 = !DILocation(line: 2827, column: 16, scope: !5244)
!5249 = !DILocation(line: 2830, column: 18, scope: !5099)
!5250 = !DILocation(line: 2831, column: 4, scope: !5099)
!5251 = !DILocalVariable(name: "fcu", scope: !5252, file: !3, line: 2835, type: !587)
!5252 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2834, column: 3)
!5253 = !DILocation(line: 2835, column: 12, scope: !5252)
!5254 = !DILocation(line: 2835, column: 28, scope: !5252)
!5255 = !DILocation(line: 2835, column: 33, scope: !5252)
!5256 = !DILocation(line: 2835, column: 18, scope: !5252)
!5257 = !DILocation(line: 2838, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 2838, column: 8)
!5259 = !DILocation(line: 2838, column: 19, scope: !5258)
!5260 = !DILocation(line: 2838, column: 8, scope: !5252)
!5261 = !DILocation(line: 2840, column: 5, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2838, column: 37)
!5263 = !DILocation(line: 2840, column: 10, scope: !5262)
!5264 = !DILocation(line: 2840, column: 15, scope: !5262)
!5265 = !DILocation(line: 2841, column: 4, scope: !5262)
!5266 = !DILocation(line: 2844, column: 33, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2842, column: 9)
!5268 = !DILocation(line: 2844, column: 37, scope: !5267)
!5269 = !DILocation(line: 2844, column: 41, scope: !5267)
!5270 = !DILocation(line: 2844, column: 47, scope: !5267)
!5271 = !DILocation(line: 2844, column: 51, scope: !5267)
!5272 = !DILocation(line: 2844, column: 5, scope: !5267)
!5273 = !DILocation(line: 2845, column: 5, scope: !5267)
!5274 = !DILocation(line: 2845, column: 10, scope: !5267)
!5275 = !DILocation(line: 2845, column: 15, scope: !5267)
!5276 = !DILocation(line: 2849, column: 8, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 2849, column: 8)
!5278 = !DILocation(line: 2849, column: 13, scope: !5277)
!5279 = !DILocation(line: 2849, column: 18, scope: !5277)
!5280 = !DILocation(line: 2849, column: 8, scope: !5252)
!5281 = !DILocation(line: 2850, column: 29, scope: !5277)
!5282 = !DILocation(line: 2850, column: 33, scope: !5277)
!5283 = !DILocation(line: 2850, column: 37, scope: !5277)
!5284 = !DILocation(line: 2850, column: 43, scope: !5277)
!5285 = !DILocation(line: 2850, column: 47, scope: !5277)
!5286 = !DILocation(line: 2850, column: 57, scope: !5277)
!5287 = !DILocation(line: 2850, column: 65, scope: !5277)
!5288 = !DILocation(line: 2850, column: 5, scope: !5277)
!5289 = !DILocation(line: 2852, column: 18, scope: !5252)
!5290 = !DILocation(line: 2853, column: 4, scope: !5252)
!5291 = !DILocalVariable(name: "kb", scope: !5292, file: !3, line: 2857, type: !2252)
!5292 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2856, column: 3)
!5293 = !DILocation(line: 2857, column: 14, scope: !5292)
!5294 = !DILocation(line: 2857, column: 31, scope: !5292)
!5295 = !DILocation(line: 2857, column: 36, scope: !5292)
!5296 = !DILocation(line: 2857, column: 19, scope: !5292)
!5297 = !DILocation(line: 2860, column: 8, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 2860, column: 8)
!5299 = !DILocation(line: 2860, column: 19, scope: !5298)
!5300 = !DILocation(line: 2860, column: 8, scope: !5292)
!5301 = !DILocation(line: 2862, column: 5, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 2860, column: 37)
!5303 = !DILocation(line: 2862, column: 9, scope: !5302)
!5304 = !DILocation(line: 2862, column: 14, scope: !5302)
!5305 = !DILocation(line: 2863, column: 4, scope: !5302)
!5306 = !DILocation(line: 2866, column: 33, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 2864, column: 9)
!5308 = !DILocation(line: 2866, column: 37, scope: !5307)
!5309 = !DILocation(line: 2866, column: 41, scope: !5307)
!5310 = !DILocation(line: 2866, column: 47, scope: !5307)
!5311 = !DILocation(line: 2866, column: 51, scope: !5307)
!5312 = !DILocation(line: 2866, column: 5, scope: !5307)
!5313 = !DILocation(line: 2867, column: 5, scope: !5307)
!5314 = !DILocation(line: 2867, column: 9, scope: !5307)
!5315 = !DILocation(line: 2867, column: 14, scope: !5307)
!5316 = !DILocation(line: 2870, column: 18, scope: !5292)
!5317 = !DILocation(line: 2871, column: 4, scope: !5292)
!5318 = !DILocalVariable(name: "gpd", scope: !5319, file: !3, line: 2875, type: !2564)
!5319 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2874, column: 3)
!5320 = !DILocation(line: 2875, column: 13, scope: !5319)
!5321 = !DILocation(line: 2875, column: 30, scope: !5319)
!5322 = !DILocation(line: 2875, column: 35, scope: !5319)
!5323 = !DILocation(line: 2875, column: 19, scope: !5319)
!5324 = !DILocation(line: 2880, column: 4, scope: !5319)
!5325 = !DILocation(line: 2880, column: 9, scope: !5319)
!5326 = !DILocation(line: 2880, column: 14, scope: !5319)
!5327 = !DILocation(line: 2882, column: 18, scope: !5319)
!5328 = !DILocation(line: 2883, column: 4, scope: !5319)
!5329 = !DILocalVariable(name: "gpl", scope: !5330, file: !3, line: 2887, type: !2272)
!5330 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2886, column: 3)
!5331 = !DILocation(line: 2887, column: 15, scope: !5330)
!5332 = !DILocation(line: 2887, column: 34, scope: !5330)
!5333 = !DILocation(line: 2887, column: 39, scope: !5330)
!5334 = !DILocation(line: 2887, column: 21, scope: !5330)
!5335 = !DILocation(line: 2890, column: 8, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 2890, column: 8)
!5337 = !DILocation(line: 2890, column: 19, scope: !5336)
!5338 = !DILocation(line: 2890, column: 8, scope: !5330)
!5339 = !DILocation(line: 2892, column: 5, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2890, column: 37)
!5341 = !DILocation(line: 2892, column: 10, scope: !5340)
!5342 = !DILocation(line: 2892, column: 15, scope: !5340)
!5343 = !DILocation(line: 2893, column: 4, scope: !5340)
!5344 = !DILocation(line: 2896, column: 33, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2894, column: 9)
!5346 = !DILocation(line: 2896, column: 37, scope: !5345)
!5347 = !DILocation(line: 2896, column: 41, scope: !5345)
!5348 = !DILocation(line: 2896, column: 47, scope: !5345)
!5349 = !DILocation(line: 2896, column: 51, scope: !5345)
!5350 = !DILocation(line: 2896, column: 5, scope: !5345)
!5351 = !DILocation(line: 2897, column: 5, scope: !5345)
!5352 = !DILocation(line: 2897, column: 10, scope: !5345)
!5353 = !DILocation(line: 2897, column: 15, scope: !5345)
!5354 = !DILocation(line: 2900, column: 18, scope: !5330)
!5355 = !DILocation(line: 2901, column: 4, scope: !5330)
!5356 = !DILocalVariable(name: "mask", scope: !5357, file: !3, line: 2905, type: !2566)
!5357 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2904, column: 3)
!5358 = !DILocation(line: 2905, column: 10, scope: !5357)
!5359 = !DILocation(line: 2905, column: 25, scope: !5357)
!5360 = !DILocation(line: 2905, column: 30, scope: !5357)
!5361 = !DILocation(line: 2905, column: 17, scope: !5357)
!5362 = !DILocation(line: 2910, column: 4, scope: !5357)
!5363 = !DILocation(line: 2910, column: 10, scope: !5357)
!5364 = !DILocation(line: 2910, column: 15, scope: !5357)
!5365 = !DILocation(line: 2912, column: 18, scope: !5357)
!5366 = !DILocation(line: 2913, column: 4, scope: !5357)
!5367 = !DILocalVariable(name: "masklay", scope: !5368, file: !3, line: 2917, type: !2296)
!5368 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2916, column: 3)
!5369 = !DILocation(line: 2917, column: 15, scope: !5368)
!5370 = !DILocation(line: 2917, column: 38, scope: !5368)
!5371 = !DILocation(line: 2917, column: 43, scope: !5368)
!5372 = !DILocation(line: 2917, column: 25, scope: !5368)
!5373 = !DILocation(line: 2920, column: 8, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2920, column: 8)
!5375 = !DILocation(line: 2920, column: 19, scope: !5374)
!5376 = !DILocation(line: 2920, column: 8, scope: !5368)
!5377 = !DILocation(line: 2922, column: 5, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2920, column: 37)
!5379 = !DILocation(line: 2922, column: 14, scope: !5378)
!5380 = !DILocation(line: 2922, column: 19, scope: !5378)
!5381 = !DILocation(line: 2923, column: 4, scope: !5378)
!5382 = !DILocation(line: 2926, column: 33, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2924, column: 9)
!5384 = !DILocation(line: 2926, column: 37, scope: !5383)
!5385 = !DILocation(line: 2926, column: 41, scope: !5383)
!5386 = !DILocation(line: 2926, column: 47, scope: !5383)
!5387 = !DILocation(line: 2926, column: 51, scope: !5383)
!5388 = !DILocation(line: 2926, column: 5, scope: !5383)
!5389 = !DILocation(line: 2927, column: 5, scope: !5383)
!5390 = !DILocation(line: 2927, column: 14, scope: !5383)
!5391 = !DILocation(line: 2927, column: 19, scope: !5383)
!5392 = !DILocation(line: 2930, column: 18, scope: !5368)
!5393 = !DILocation(line: 2931, column: 4, scope: !5368)
!5394 = !DILocation(line: 2934, column: 10, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2934, column: 8)
!5396 = !DILocation(line: 2934, column: 16, scope: !5395)
!5397 = !DILocation(line: 2934, column: 8, scope: !4907)
!5398 = !DILocation(line: 2935, column: 5, scope: !5395)
!5399 = !DILocation(line: 2936, column: 4, scope: !4907)
!5400 = !DILocation(line: 2940, column: 2, scope: !4848)
!5401 = !DILocation(line: 2943, column: 9, scope: !4848)
!5402 = !DILocation(line: 2943, column: 2, scope: !4848)
!5403 = !DILocation(line: 2944, column: 1, scope: !4848)
!5404 = distinct !DISubprogram(name: "animchannels_rename_invoke", scope: !3, file: !3, line: 2576, type: !4751, scopeLine: 2577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5405 = !DILocalVariable(name: "C", arg: 1, scope: !5404, file: !3, line: 2576, type: !4373)
!5406 = !DILocation(line: 2576, column: 49, scope: !5404)
!5407 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5404, file: !3, line: 2576, type: !4376)
!5408 = !DILocation(line: 2576, column: 64, scope: !5404)
!5409 = !DILocalVariable(name: "event", arg: 3, scope: !5404, file: !3, line: 2576, type: !4753)
!5410 = !DILocation(line: 2576, column: 91, scope: !5404)
!5411 = !DILocalVariable(name: "ac", scope: !5404, file: !3, line: 2578, type: !2628)
!5412 = !DILocation(line: 2578, column: 15, scope: !5404)
!5413 = !DILocalVariable(name: "ar", scope: !5404, file: !3, line: 2579, type: !4765)
!5414 = !DILocation(line: 2579, column: 11, scope: !5404)
!5415 = !DILocalVariable(name: "v2d", scope: !5404, file: !3, line: 2580, type: !4522)
!5416 = !DILocation(line: 2580, column: 10, scope: !5404)
!5417 = !DILocalVariable(name: "channel_index", scope: !5404, file: !3, line: 2581, type: !20)
!5418 = !DILocation(line: 2581, column: 6, scope: !5404)
!5419 = !DILocalVariable(name: "x", scope: !5404, file: !3, line: 2582, type: !607)
!5420 = !DILocation(line: 2582, column: 8, scope: !5404)
!5421 = !DILocalVariable(name: "y", scope: !5404, file: !3, line: 2582, type: !607)
!5422 = !DILocation(line: 2582, column: 11, scope: !5404)
!5423 = !DILocation(line: 2585, column: 32, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2585, column: 6)
!5425 = !DILocation(line: 2585, column: 6, scope: !5424)
!5426 = !DILocation(line: 2585, column: 40, scope: !5424)
!5427 = !DILocation(line: 2585, column: 6, scope: !5404)
!5428 = !DILocation(line: 2586, column: 3, scope: !5424)
!5429 = !DILocation(line: 2589, column: 10, scope: !5404)
!5430 = !DILocation(line: 2589, column: 5, scope: !5404)
!5431 = !DILocation(line: 2590, column: 9, scope: !5404)
!5432 = !DILocation(line: 2590, column: 13, scope: !5404)
!5433 = !DILocation(line: 2590, column: 6, scope: !5404)
!5434 = !DILocation(line: 2597, column: 27, scope: !5404)
!5435 = !DILocation(line: 2597, column: 32, scope: !5404)
!5436 = !DILocation(line: 2597, column: 39, scope: !5404)
!5437 = !DILocation(line: 2597, column: 48, scope: !5404)
!5438 = !DILocation(line: 2597, column: 55, scope: !5404)
!5439 = !DILocation(line: 2597, column: 2, scope: !5404)
!5440 = !DILocation(line: 2599, column: 9, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2599, column: 6)
!5442 = !DILocation(line: 2599, column: 6, scope: !5441)
!5443 = !DILocation(line: 2599, column: 18, scope: !5441)
!5444 = !DILocation(line: 2599, column: 6, scope: !5404)
!5445 = !DILocalVariable(name: "snla", scope: !5446, file: !3, line: 2600, type: !2354)
!5446 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2599, column: 35)
!5447 = !DILocation(line: 2600, column: 13, scope: !5446)
!5448 = !DILocation(line: 2600, column: 35, scope: !5446)
!5449 = !DILocation(line: 2600, column: 20, scope: !5446)
!5450 = !DILocation(line: 2601, column: 35, scope: !5446)
!5451 = !DILocation(line: 2601, column: 40, scope: !5446)
!5452 = !DILocation(line: 2601, column: 62, scope: !5446)
!5453 = !DILocation(line: 2601, column: 95, scope: !5446)
!5454 = !DILocation(line: 2601, column: 125, scope: !5446)
!5455 = !DILocation(line: 2601, column: 128, scope: !5446)
!5456 = !DILocation(line: 2601, column: 3, scope: !5446)
!5457 = !DILocation(line: 2602, column: 2, scope: !5446)
!5458 = !DILocation(line: 2604, column: 35, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2603, column: 7)
!5460 = !DILocation(line: 2604, column: 40, scope: !5459)
!5461 = !DILocation(line: 2604, column: 60, scope: !5459)
!5462 = !DILocation(line: 2604, column: 85, scope: !5459)
!5463 = !DILocation(line: 2604, column: 107, scope: !5459)
!5464 = !DILocation(line: 2604, column: 110, scope: !5459)
!5465 = !DILocation(line: 2604, column: 3, scope: !5459)
!5466 = !DILocation(line: 2608, column: 28, scope: !5404)
!5467 = !DILocation(line: 2608, column: 2, scope: !5404)
!5468 = !DILocation(line: 2610, column: 2, scope: !5404)
!5469 = !DILocation(line: 2611, column: 1, scope: !5404)
!5470 = distinct !DISubprogram(name: "rename_anim_channels", scope: !3, file: !3, line: 2527, type: !5471, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !2627, !20}
!5473 = !DILocalVariable(name: "ac", arg: 1, scope: !5470, file: !3, line: 2527, type: !2627)
!5474 = !DILocation(line: 2527, column: 48, scope: !5470)
!5475 = !DILocalVariable(name: "channel_index", arg: 2, scope: !5470, file: !3, line: 2527, type: !20)
!5476 = !DILocation(line: 2527, column: 56, scope: !5470)
!5477 = !DILocalVariable(name: "anim_data", scope: !5470, file: !3, line: 2529, type: !559)
!5478 = !DILocation(line: 2529, column: 11, scope: !5470)
!5479 = !DILocalVariable(name: "acf", scope: !5470, file: !3, line: 2530, type: !3276)
!5480 = !DILocation(line: 2530, column: 20, scope: !5470)
!5481 = !DILocalVariable(name: "ale", scope: !5470, file: !3, line: 2531, type: !2754)
!5482 = !DILocation(line: 2531, column: 17, scope: !5470)
!5483 = !DILocalVariable(name: "filter", scope: !5470, file: !3, line: 2532, type: !20)
!5484 = !DILocation(line: 2532, column: 6, scope: !5470)
!5485 = !DILocation(line: 2536, column: 9, scope: !5470)
!5486 = !DILocation(line: 2537, column: 23, scope: !5470)
!5487 = !DILocation(line: 2537, column: 39, scope: !5470)
!5488 = !DILocation(line: 2537, column: 47, scope: !5470)
!5489 = !DILocation(line: 2537, column: 51, scope: !5470)
!5490 = !DILocation(line: 2537, column: 57, scope: !5470)
!5491 = !DILocation(line: 2537, column: 61, scope: !5470)
!5492 = !DILocation(line: 2537, column: 2, scope: !5470)
!5493 = !DILocation(line: 2540, column: 33, scope: !5470)
!5494 = !DILocation(line: 2540, column: 8, scope: !5470)
!5495 = !DILocation(line: 2540, column: 6, scope: !5470)
!5496 = !DILocation(line: 2541, column: 6, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 2541, column: 6)
!5498 = !DILocation(line: 2541, column: 10, scope: !5497)
!5499 = !DILocation(line: 2541, column: 6, scope: !5470)
!5500 = !DILocation(line: 2543, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 2543, column: 7)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 2541, column: 19)
!5503 = !DILocation(line: 2543, column: 15, scope: !5501)
!5504 = !DILocation(line: 2543, column: 7, scope: !5502)
!5505 = !DILocation(line: 2544, column: 90, scope: !5501)
!5506 = !DILocation(line: 2544, column: 4, scope: !5501)
!5507 = !DILocation(line: 2546, column: 3, scope: !5502)
!5508 = !DILocation(line: 2547, column: 3, scope: !5502)
!5509 = !DILocation(line: 2551, column: 34, scope: !5470)
!5510 = !DILocation(line: 2551, column: 8, scope: !5470)
!5511 = !DILocation(line: 2551, column: 6, scope: !5470)
!5512 = !DILocation(line: 2552, column: 6, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 2552, column: 6)
!5514 = !DILocation(line: 2552, column: 10, scope: !5513)
!5515 = !DILocation(line: 2552, column: 13, scope: !5513)
!5516 = !DILocation(line: 2552, column: 18, scope: !5513)
!5517 = !DILocation(line: 2552, column: 6, scope: !5470)
!5518 = !DILocalVariable(name: "ptr", scope: !5519, file: !3, line: 2553, type: !5520)
!5519 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 2552, column: 29)
!5520 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !455, line: 62, baseType: !3305)
!5521 = !DILocation(line: 2553, column: 14, scope: !5519)
!5522 = !DILocalVariable(name: "prop", scope: !5519, file: !3, line: 2554, type: !3650)
!5523 = !DILocation(line: 2554, column: 16, scope: !5519)
!5524 = !DILocation(line: 2557, column: 7, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2557, column: 7)
!5526 = !DILocation(line: 2557, column: 12, scope: !5525)
!5527 = !DILocation(line: 2557, column: 22, scope: !5525)
!5528 = !DILocation(line: 2557, column: 7, scope: !5519)
!5529 = !DILocation(line: 2565, column: 8, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 2565, column: 8)
!5531 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 2557, column: 41)
!5532 = !DILocation(line: 2565, column: 12, scope: !5530)
!5533 = !DILocation(line: 2565, column: 8, scope: !5531)
!5534 = !DILocation(line: 2566, column: 28, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 2565, column: 17)
!5536 = !DILocation(line: 2566, column: 42, scope: !5535)
!5537 = !DILocation(line: 2566, column: 5, scope: !5535)
!5538 = !DILocation(line: 2566, column: 9, scope: !5535)
!5539 = !DILocation(line: 2566, column: 14, scope: !5535)
!5540 = !DILocation(line: 2566, column: 26, scope: !5535)
!5541 = !DILocation(line: 2567, column: 4, scope: !5535)
!5542 = !DILocation(line: 2568, column: 3, scope: !5531)
!5543 = !DILocation(line: 2569, column: 2, scope: !5519)
!5544 = !DILocation(line: 2572, column: 2, scope: !5470)
!5545 = !DILocation(line: 2573, column: 23, scope: !5470)
!5546 = !DILocation(line: 2573, column: 27, scope: !5470)
!5547 = !DILocation(line: 2573, column: 2, scope: !5470)
!5548 = !DILocation(line: 2574, column: 1, scope: !5470)
!5549 = distinct !DISubprogram(name: "animchannels_find_invoke", scope: !3, file: !3, line: 2264, type: !4751, scopeLine: 2265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5550 = !DILocalVariable(name: "C", arg: 1, scope: !5549, file: !3, line: 2264, type: !4373)
!5551 = !DILocation(line: 2264, column: 47, scope: !5549)
!5552 = !DILocalVariable(name: "op", arg: 2, scope: !5549, file: !3, line: 2264, type: !4376)
!5553 = !DILocation(line: 2264, column: 62, scope: !5549)
!5554 = !DILocalVariable(name: "evt", arg: 3, scope: !5549, file: !3, line: 2264, type: !4753)
!5555 = !DILocation(line: 2264, column: 81, scope: !5549)
!5556 = !DILocalVariable(name: "ac", scope: !5549, file: !3, line: 2266, type: !2628)
!5557 = !DILocation(line: 2266, column: 15, scope: !5549)
!5558 = !DILocation(line: 2269, column: 32, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 2269, column: 6)
!5560 = !DILocation(line: 2269, column: 6, scope: !5559)
!5561 = !DILocation(line: 2269, column: 40, scope: !5559)
!5562 = !DILocation(line: 2269, column: 6, scope: !5549)
!5563 = !DILocation(line: 2270, column: 3, scope: !5559)
!5564 = !DILocation(line: 2273, column: 17, scope: !5549)
!5565 = !DILocation(line: 2273, column: 21, scope: !5549)
!5566 = !DILocation(line: 2273, column: 38, scope: !5549)
!5567 = !DILocation(line: 2273, column: 43, scope: !5549)
!5568 = !DILocation(line: 2273, column: 35, scope: !5549)
!5569 = !DILocation(line: 2273, column: 2, scope: !5549)
!5570 = !DILocation(line: 2276, column: 33, scope: !5549)
!5571 = !DILocation(line: 2276, column: 36, scope: !5549)
!5572 = !DILocation(line: 2276, column: 40, scope: !5549)
!5573 = !DILocation(line: 2276, column: 9, scope: !5549)
!5574 = !DILocation(line: 2276, column: 2, scope: !5549)
!5575 = !DILocation(line: 2277, column: 1, scope: !5549)
!5576 = distinct !DISubprogram(name: "animchannels_find_exec", scope: !3, file: !3, line: 2280, type: !4371, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5577 = !DILocalVariable(name: "C", arg: 1, scope: !5576, file: !3, line: 2280, type: !4373)
!5578 = !DILocation(line: 2280, column: 45, scope: !5576)
!5579 = !DILocalVariable(name: "op", arg: 2, scope: !5576, file: !3, line: 2280, type: !4376)
!5580 = !DILocation(line: 2280, column: 60, scope: !5576)
!5581 = !DILocalVariable(name: "ac", scope: !5576, file: !3, line: 2282, type: !2628)
!5582 = !DILocation(line: 2282, column: 15, scope: !5576)
!5583 = !DILocation(line: 2285, column: 32, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2285, column: 6)
!5585 = !DILocation(line: 2285, column: 6, scope: !5584)
!5586 = !DILocation(line: 2285, column: 40, scope: !5584)
!5587 = !DILocation(line: 2285, column: 6, scope: !5576)
!5588 = !DILocation(line: 2286, column: 3, scope: !5584)
!5589 = !DILocation(line: 2291, column: 17, scope: !5576)
!5590 = !DILocation(line: 2291, column: 21, scope: !5576)
!5591 = !DILocation(line: 2291, column: 38, scope: !5576)
!5592 = !DILocation(line: 2291, column: 43, scope: !5576)
!5593 = !DILocation(line: 2291, column: 35, scope: !5576)
!5594 = !DILocation(line: 2291, column: 2, scope: !5576)
!5595 = !DILocation(line: 2293, column: 9, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2293, column: 6)
!5597 = !DILocation(line: 2293, column: 14, scope: !5596)
!5598 = !DILocation(line: 2293, column: 6, scope: !5596)
!5599 = !DILocation(line: 2293, column: 6, scope: !5576)
!5600 = !DILocation(line: 2294, column: 6, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 2293, column: 28)
!5602 = !DILocation(line: 2294, column: 11, scope: !5601)
!5603 = !DILocation(line: 2294, column: 22, scope: !5601)
!5604 = !DILocation(line: 2295, column: 2, scope: !5601)
!5605 = !DILocation(line: 2297, column: 6, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 2296, column: 7)
!5607 = !DILocation(line: 2297, column: 11, scope: !5606)
!5608 = !DILocation(line: 2297, column: 22, scope: !5606)
!5609 = !DILocation(line: 2301, column: 24, scope: !5576)
!5610 = !DILocation(line: 2301, column: 2, scope: !5576)
!5611 = !DILocation(line: 2303, column: 2, scope: !5576)
!5612 = !DILocation(line: 2304, column: 1, scope: !5576)
!5613 = distinct !DISubprogram(name: "animchannels_find_poll", scope: !3, file: !3, line: 2252, type: !4408, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5614 = !DILocalVariable(name: "C", arg: 1, scope: !5613, file: !3, line: 2252, type: !4373)
!5615 = !DILocation(line: 2252, column: 45, scope: !5613)
!5616 = !DILocalVariable(name: "sa", scope: !5613, file: !3, line: 2254, type: !4413)
!5617 = !DILocation(line: 2254, column: 11, scope: !5613)
!5618 = !DILocation(line: 2254, column: 28, scope: !5613)
!5619 = !DILocation(line: 2254, column: 16, scope: !5613)
!5620 = !DILocation(line: 2256, column: 6, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 2256, column: 6)
!5622 = !DILocation(line: 2256, column: 9, scope: !5621)
!5623 = !DILocation(line: 2256, column: 6, scope: !5613)
!5624 = !DILocation(line: 2257, column: 3, scope: !5621)
!5625 = !DILocation(line: 2260, column: 9, scope: !5613)
!5626 = !DILocation(line: 2260, column: 2, scope: !5613)
!5627 = !DILocation(line: 2261, column: 1, scope: !5613)
!5628 = distinct !DISubprogram(name: "animchannels_setflag_exec", scope: !3, file: !3, line: 1855, type: !4371, scopeLine: 1856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5629 = !DILocalVariable(name: "C", arg: 1, scope: !5628, file: !3, line: 1855, type: !4373)
!5630 = !DILocation(line: 1855, column: 48, scope: !5628)
!5631 = !DILocalVariable(name: "op", arg: 2, scope: !5628, file: !3, line: 1855, type: !4376)
!5632 = !DILocation(line: 1855, column: 63, scope: !5628)
!5633 = !DILocalVariable(name: "ac", scope: !5628, file: !3, line: 1857, type: !2628)
!5634 = !DILocation(line: 1857, column: 15, scope: !5628)
!5635 = !DILocalVariable(name: "setting", scope: !5628, file: !3, line: 1858, type: !3202)
!5636 = !DILocation(line: 1858, column: 24, scope: !5628)
!5637 = !DILocalVariable(name: "mode", scope: !5628, file: !3, line: 1859, type: !2921)
!5638 = !DILocation(line: 1859, column: 24, scope: !5628)
!5639 = !DILocalVariable(name: "flush", scope: !5628, file: !3, line: 1860, type: !1643)
!5640 = !DILocation(line: 1860, column: 7, scope: !5628)
!5641 = !DILocation(line: 1863, column: 32, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1863, column: 6)
!5643 = !DILocation(line: 1863, column: 6, scope: !5642)
!5644 = !DILocation(line: 1863, column: 40, scope: !5642)
!5645 = !DILocation(line: 1863, column: 6, scope: !5628)
!5646 = !DILocation(line: 1864, column: 3, scope: !5642)
!5647 = !DILocation(line: 1867, column: 22, scope: !5628)
!5648 = !DILocation(line: 1867, column: 26, scope: !5628)
!5649 = !DILocation(line: 1867, column: 9, scope: !5628)
!5650 = !DILocation(line: 1867, column: 7, scope: !5628)
!5651 = !DILocation(line: 1868, column: 25, scope: !5628)
!5652 = !DILocation(line: 1868, column: 29, scope: !5628)
!5653 = !DILocation(line: 1868, column: 12, scope: !5628)
!5654 = !DILocation(line: 1868, column: 10, scope: !5628)
!5655 = !DILocation(line: 1871, column: 6, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1871, column: 6)
!5657 = !DILocation(line: 1871, column: 14, scope: !5656)
!5658 = !DILocation(line: 1871, column: 6, scope: !5628)
!5659 = !DILocation(line: 1872, column: 9, scope: !5656)
!5660 = !DILocation(line: 1872, column: 3, scope: !5656)
!5661 = !DILocation(line: 1877, column: 29, scope: !5628)
!5662 = !DILocation(line: 1877, column: 38, scope: !5628)
!5663 = !DILocation(line: 1877, column: 50, scope: !5628)
!5664 = !DILocation(line: 1877, column: 2, scope: !5628)
!5665 = !DILocation(line: 1880, column: 24, scope: !5628)
!5666 = !DILocation(line: 1880, column: 2, scope: !5628)
!5667 = !DILocation(line: 1882, column: 2, scope: !5628)
!5668 = !DILocation(line: 1883, column: 1, scope: !5628)
!5669 = distinct !DISubprogram(name: "setflag_anim_channels", scope: !3, file: !3, line: 1785, type: !5670, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{null, !2627, !3202, !2921, !1643, !1643}
!5672 = !DILocalVariable(name: "ac", arg: 1, scope: !5669, file: !3, line: 1785, type: !2627)
!5673 = !DILocation(line: 1785, column: 49, scope: !5669)
!5674 = !DILocalVariable(name: "setting", arg: 2, scope: !5669, file: !3, line: 1785, type: !3202)
!5675 = !DILocation(line: 1785, column: 75, scope: !5669)
!5676 = !DILocalVariable(name: "mode", arg: 3, scope: !5669, file: !3, line: 1785, type: !2921)
!5677 = !DILocation(line: 1785, column: 106, scope: !5669)
!5678 = !DILocalVariable(name: "onlysel", arg: 4, scope: !5669, file: !3, line: 1785, type: !1643)
!5679 = !DILocation(line: 1785, column: 117, scope: !5669)
!5680 = !DILocalVariable(name: "flush", arg: 5, scope: !5669, file: !3, line: 1785, type: !1643)
!5681 = !DILocation(line: 1785, column: 131, scope: !5669)
!5682 = !DILocalVariable(name: "anim_data", scope: !5669, file: !3, line: 1787, type: !559)
!5683 = !DILocation(line: 1787, column: 11, scope: !5669)
!5684 = !DILocalVariable(name: "all_data", scope: !5669, file: !3, line: 1788, type: !559)
!5685 = !DILocation(line: 1788, column: 11, scope: !5669)
!5686 = !DILocalVariable(name: "ale", scope: !5669, file: !3, line: 1789, type: !2754)
!5687 = !DILocation(line: 1789, column: 17, scope: !5669)
!5688 = !DILocalVariable(name: "filter", scope: !5669, file: !3, line: 1790, type: !20)
!5689 = !DILocation(line: 1790, column: 6, scope: !5669)
!5690 = !DILocation(line: 1793, column: 6, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1793, column: 6)
!5692 = !DILocation(line: 1793, column: 6, scope: !5669)
!5693 = !DILocation(line: 1798, column: 10, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 1793, column: 13)
!5695 = !DILocation(line: 1799, column: 24, scope: !5694)
!5696 = !DILocation(line: 1799, column: 39, scope: !5694)
!5697 = !DILocation(line: 1799, column: 47, scope: !5694)
!5698 = !DILocation(line: 1799, column: 51, scope: !5694)
!5699 = !DILocation(line: 1799, column: 57, scope: !5694)
!5700 = !DILocation(line: 1799, column: 61, scope: !5694)
!5701 = !DILocation(line: 1799, column: 3, scope: !5694)
!5702 = !DILocation(line: 1800, column: 2, scope: !5694)
!5703 = !DILocation(line: 1809, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1809, column: 6)
!5705 = !DILocation(line: 1809, column: 11, scope: !5704)
!5706 = !DILocation(line: 1809, column: 21, scope: !5704)
!5707 = !DILocation(line: 1809, column: 35, scope: !5704)
!5708 = !DILocation(line: 1809, column: 39, scope: !5704)
!5709 = !DILocation(line: 1809, column: 43, scope: !5704)
!5710 = !DILocation(line: 1809, column: 54, scope: !5704)
!5711 = !DILocation(line: 1809, column: 6, scope: !5669)
!5712 = !DILocation(line: 1811, column: 10, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1809, column: 77)
!5714 = !DILocation(line: 1812, column: 2, scope: !5713)
!5715 = !DILocation(line: 1815, column: 10, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1813, column: 7)
!5717 = !DILocation(line: 1817, column: 6, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1817, column: 6)
!5719 = !DILocation(line: 1817, column: 6, scope: !5669)
!5720 = !DILocation(line: 1817, column: 22, scope: !5718)
!5721 = !DILocation(line: 1817, column: 15, scope: !5718)
!5722 = !DILocation(line: 1818, column: 23, scope: !5669)
!5723 = !DILocation(line: 1818, column: 39, scope: !5669)
!5724 = !DILocation(line: 1818, column: 47, scope: !5669)
!5725 = !DILocation(line: 1818, column: 51, scope: !5669)
!5726 = !DILocation(line: 1818, column: 57, scope: !5669)
!5727 = !DILocation(line: 1818, column: 61, scope: !5669)
!5728 = !DILocation(line: 1818, column: 2, scope: !5669)
!5729 = !DILocation(line: 1821, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1821, column: 6)
!5731 = !DILocation(line: 1821, column: 11, scope: !5730)
!5732 = !DILocation(line: 1821, column: 6, scope: !5669)
!5733 = !DILocation(line: 1823, column: 8, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 1821, column: 39)
!5735 = !DILocation(line: 1826, column: 24, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 1826, column: 3)
!5737 = !DILocation(line: 1826, column: 14, scope: !5736)
!5738 = !DILocation(line: 1826, column: 12, scope: !5736)
!5739 = !DILocation(line: 1826, column: 8, scope: !5736)
!5740 = !DILocation(line: 1826, column: 31, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1826, column: 3)
!5742 = !DILocation(line: 1826, column: 3, scope: !5736)
!5743 = !DILocation(line: 1828, column: 33, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1828, column: 8)
!5745 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1826, column: 53)
!5746 = !DILocation(line: 1828, column: 37, scope: !5744)
!5747 = !DILocation(line: 1828, column: 42, scope: !5744)
!5748 = !DILocation(line: 1828, column: 8, scope: !5744)
!5749 = !DILocation(line: 1828, column: 51, scope: !5744)
!5750 = !DILocation(line: 1828, column: 8, scope: !5745)
!5751 = !DILocation(line: 1829, column: 10, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1828, column: 56)
!5753 = !DILocation(line: 1830, column: 5, scope: !5752)
!5754 = !DILocation(line: 1832, column: 3, scope: !5745)
!5755 = !DILocation(line: 1826, column: 42, scope: !5741)
!5756 = !DILocation(line: 1826, column: 47, scope: !5741)
!5757 = !DILocation(line: 1826, column: 40, scope: !5741)
!5758 = !DILocation(line: 1826, column: 3, scope: !5741)
!5759 = distinct !{!5759, !5742, !5760}
!5760 = !DILocation(line: 1832, column: 3, scope: !5736)
!5761 = !DILocation(line: 1833, column: 2, scope: !5734)
!5762 = !DILocation(line: 1836, column: 23, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1836, column: 2)
!5764 = !DILocation(line: 1836, column: 13, scope: !5763)
!5765 = !DILocation(line: 1836, column: 11, scope: !5763)
!5766 = !DILocation(line: 1836, column: 7, scope: !5763)
!5767 = !DILocation(line: 1836, column: 30, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1836, column: 2)
!5769 = !DILocation(line: 1836, column: 2, scope: !5763)
!5770 = !DILocation(line: 1838, column: 32, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1838, column: 7)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1836, column: 52)
!5773 = !DILocation(line: 1838, column: 36, scope: !5771)
!5774 = !DILocation(line: 1838, column: 41, scope: !5771)
!5775 = !DILocation(line: 1838, column: 7, scope: !5771)
!5776 = !DILocation(line: 1838, column: 50, scope: !5771)
!5777 = !DILocation(line: 1838, column: 7, scope: !5772)
!5778 = !DILocation(line: 1839, column: 4, scope: !5771)
!5779 = !DILocation(line: 1842, column: 28, scope: !5772)
!5780 = !DILocation(line: 1842, column: 32, scope: !5772)
!5781 = !DILocation(line: 1842, column: 37, scope: !5772)
!5782 = !DILocation(line: 1842, column: 46, scope: !5772)
!5783 = !DILocation(line: 1842, column: 3, scope: !5772)
!5784 = !DILocation(line: 1845, column: 7, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1845, column: 7)
!5786 = !DILocation(line: 1845, column: 7, scope: !5772)
!5787 = !DILocation(line: 1846, column: 37, scope: !5785)
!5788 = !DILocation(line: 1846, column: 52, scope: !5785)
!5789 = !DILocation(line: 1846, column: 57, scope: !5785)
!5790 = !DILocation(line: 1846, column: 66, scope: !5785)
!5791 = !DILocation(line: 1846, column: 4, scope: !5785)
!5792 = !DILocation(line: 1847, column: 2, scope: !5772)
!5793 = !DILocation(line: 1836, column: 41, scope: !5768)
!5794 = !DILocation(line: 1836, column: 46, scope: !5768)
!5795 = !DILocation(line: 1836, column: 39, scope: !5768)
!5796 = !DILocation(line: 1836, column: 2, scope: !5768)
!5797 = distinct !{!5797, !5769, !5798}
!5798 = !DILocation(line: 1847, column: 2, scope: !5763)
!5799 = !DILocation(line: 1849, column: 2, scope: !5669)
!5800 = !DILocation(line: 1850, column: 2, scope: !5669)
!5801 = !DILocation(line: 1851, column: 1, scope: !5669)
!5802 = distinct !DISubprogram(name: "animchannels_delete_exec", scope: !3, file: !3, line: 1468, type: !4371, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!5803 = !DILocalVariable(name: "C", arg: 1, scope: !5802, file: !3, line: 1468, type: !4373)
!5804 = !DILocation(line: 1468, column: 47, scope: !5802)
!5805 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5802, file: !3, line: 1468, type: !4376)
!5806 = !DILocation(line: 1468, column: 62, scope: !5802)
!5807 = !DILocalVariable(name: "ac", scope: !5802, file: !3, line: 1470, type: !2628)
!5808 = !DILocation(line: 1470, column: 15, scope: !5802)
!5809 = !DILocalVariable(name: "anim_data", scope: !5802, file: !3, line: 1471, type: !559)
!5810 = !DILocation(line: 1471, column: 11, scope: !5802)
!5811 = !DILocalVariable(name: "ale", scope: !5802, file: !3, line: 1472, type: !2754)
!5812 = !DILocation(line: 1472, column: 17, scope: !5802)
!5813 = !DILocalVariable(name: "filter", scope: !5802, file: !3, line: 1473, type: !20)
!5814 = !DILocation(line: 1473, column: 6, scope: !5802)
!5815 = !DILocation(line: 1476, column: 32, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1476, column: 6)
!5817 = !DILocation(line: 1476, column: 6, scope: !5816)
!5818 = !DILocation(line: 1476, column: 40, scope: !5816)
!5819 = !DILocation(line: 1476, column: 6, scope: !5802)
!5820 = !DILocation(line: 1477, column: 3, scope: !5816)
!5821 = !DILocation(line: 1480, column: 9, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1480, column: 6)
!5823 = !DILocation(line: 1480, column: 6, scope: !5822)
!5824 = !DILocation(line: 1480, column: 18, scope: !5822)
!5825 = !DILocation(line: 1480, column: 6, scope: !5802)
!5826 = !DILocation(line: 1481, column: 3, scope: !5822)
!5827 = !DILocation(line: 1485, column: 9, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1485, column: 6)
!5829 = !DILocation(line: 1485, column: 6, scope: !5828)
!5830 = !DILocation(line: 1485, column: 18, scope: !5828)
!5831 = !DILocation(line: 1485, column: 6, scope: !5802)
!5832 = !DILocation(line: 1487, column: 10, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1485, column: 39)
!5834 = !DILocation(line: 1488, column: 41, scope: !5833)
!5835 = !DILocation(line: 1488, column: 52, scope: !5833)
!5836 = !DILocation(line: 1488, column: 61, scope: !5833)
!5837 = !DILocation(line: 1488, column: 58, scope: !5833)
!5838 = !DILocation(line: 1488, column: 3, scope: !5833)
!5839 = !DILocation(line: 1491, column: 24, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 1491, column: 3)
!5841 = !DILocation(line: 1491, column: 14, scope: !5840)
!5842 = !DILocation(line: 1491, column: 12, scope: !5840)
!5843 = !DILocation(line: 1491, column: 8, scope: !5840)
!5844 = !DILocation(line: 1491, column: 31, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1491, column: 3)
!5846 = !DILocation(line: 1491, column: 3, scope: !5840)
!5847 = !DILocation(line: 1493, column: 8, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 1493, column: 8)
!5849 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1491, column: 53)
!5850 = !DILocation(line: 1493, column: 13, scope: !5848)
!5851 = !DILocation(line: 1493, column: 18, scope: !5848)
!5852 = !DILocation(line: 1493, column: 8, scope: !5849)
!5853 = !DILocalVariable(name: "agrp", scope: !5854, file: !3, line: 1494, type: !551)
!5854 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 1493, column: 37)
!5855 = !DILocation(line: 1494, column: 19, scope: !5854)
!5856 = !DILocation(line: 1494, column: 42, scope: !5854)
!5857 = !DILocation(line: 1494, column: 47, scope: !5854)
!5858 = !DILocation(line: 1494, column: 26, scope: !5854)
!5859 = !DILocalVariable(name: "adt", scope: !5854, file: !3, line: 1495, type: !3481)
!5860 = !DILocation(line: 1495, column: 15, scope: !5854)
!5861 = !DILocation(line: 1495, column: 21, scope: !5854)
!5862 = !DILocation(line: 1495, column: 26, scope: !5854)
!5863 = !DILocalVariable(name: "fcu", scope: !5854, file: !3, line: 1496, type: !587)
!5864 = !DILocation(line: 1496, column: 13, scope: !5854)
!5865 = !DILocalVariable(name: "fcn", scope: !5854, file: !3, line: 1496, type: !587)
!5866 = !DILocation(line: 1496, column: 19, scope: !5854)
!5867 = !DILocation(line: 1499, column: 9, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1499, column: 9)
!5869 = !DILocation(line: 1499, column: 13, scope: !5868)
!5870 = !DILocation(line: 1499, column: 9, scope: !5854)
!5871 = !DILocation(line: 1500, column: 6, scope: !5868)
!5872 = !DILocation(line: 1503, column: 16, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1503, column: 5)
!5874 = !DILocation(line: 1503, column: 22, scope: !5873)
!5875 = !DILocation(line: 1503, column: 31, scope: !5873)
!5876 = !DILocation(line: 1503, column: 14, scope: !5873)
!5877 = !DILocation(line: 1503, column: 10, scope: !5873)
!5878 = !DILocation(line: 1503, column: 38, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 1503, column: 5)
!5880 = !DILocation(line: 1503, column: 42, scope: !5879)
!5881 = !DILocation(line: 1503, column: 45, scope: !5879)
!5882 = !DILocation(line: 1503, column: 50, scope: !5879)
!5883 = !DILocation(line: 1503, column: 57, scope: !5879)
!5884 = !DILocation(line: 1503, column: 54, scope: !5879)
!5885 = !DILocation(line: 0, scope: !5879)
!5886 = !DILocation(line: 1503, column: 5, scope: !5873)
!5887 = !DILocation(line: 1504, column: 12, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 1503, column: 74)
!5889 = !DILocation(line: 1504, column: 17, scope: !5888)
!5890 = !DILocation(line: 1504, column: 10, scope: !5888)
!5891 = !DILocation(line: 1507, column: 35, scope: !5888)
!5892 = !DILocation(line: 1507, column: 40, scope: !5888)
!5893 = !DILocation(line: 1507, column: 48, scope: !5888)
!5894 = !DILocation(line: 1507, column: 6, scope: !5888)
!5895 = !DILocation(line: 1508, column: 18, scope: !5888)
!5896 = !DILocation(line: 1508, column: 6, scope: !5888)
!5897 = !DILocation(line: 1509, column: 5, scope: !5888)
!5898 = !DILocation(line: 1503, column: 69, scope: !5879)
!5899 = !DILocation(line: 1503, column: 67, scope: !5879)
!5900 = !DILocation(line: 1503, column: 5, scope: !5879)
!5901 = distinct !{!5901, !5886, !5902}
!5902 = !DILocation(line: 1509, column: 5, scope: !5873)
!5903 = !DILocation(line: 1512, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1512, column: 9)
!5905 = !DILocation(line: 1512, column: 14, scope: !5904)
!5906 = !DILocation(line: 1512, column: 9, scope: !5854)
!5907 = !DILocation(line: 1513, column: 21, scope: !5904)
!5908 = !DILocation(line: 1513, column: 26, scope: !5904)
!5909 = !DILocation(line: 1513, column: 34, scope: !5904)
!5910 = !DILocation(line: 1513, column: 42, scope: !5904)
!5911 = !DILocation(line: 1513, column: 6, scope: !5904)
!5912 = !DILocation(line: 1515, column: 6, scope: !5904)
!5913 = !DILocation(line: 1515, column: 16, scope: !5904)
!5914 = !DILocation(line: 1516, column: 4, scope: !5854)
!5915 = !DILocation(line: 1517, column: 3, scope: !5849)
!5916 = !DILocation(line: 1491, column: 42, scope: !5845)
!5917 = !DILocation(line: 1491, column: 47, scope: !5845)
!5918 = !DILocation(line: 1491, column: 40, scope: !5845)
!5919 = !DILocation(line: 1491, column: 3, scope: !5845)
!5920 = distinct !{!5920, !5846, !5921}
!5921 = !DILocation(line: 1517, column: 3, scope: !5840)
!5922 = !DILocation(line: 1520, column: 3, scope: !5833)
!5923 = !DILocation(line: 1521, column: 2, scope: !5833)
!5924 = !DILocation(line: 1524, column: 9, scope: !5802)
!5925 = !DILocation(line: 1525, column: 40, scope: !5802)
!5926 = !DILocation(line: 1525, column: 51, scope: !5802)
!5927 = !DILocation(line: 1525, column: 60, scope: !5802)
!5928 = !DILocation(line: 1525, column: 57, scope: !5802)
!5929 = !DILocation(line: 1525, column: 2, scope: !5802)
!5930 = !DILocation(line: 1528, column: 23, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1528, column: 2)
!5932 = !DILocation(line: 1528, column: 13, scope: !5931)
!5933 = !DILocation(line: 1528, column: 11, scope: !5931)
!5934 = !DILocation(line: 1528, column: 7, scope: !5931)
!5935 = !DILocation(line: 1528, column: 30, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1528, column: 2)
!5937 = !DILocation(line: 1528, column: 2, scope: !5931)
!5938 = !DILocation(line: 1529, column: 11, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1528, column: 52)
!5940 = !DILocation(line: 1529, column: 16, scope: !5939)
!5941 = !DILocation(line: 1529, column: 3, scope: !5939)
!5942 = !DILocalVariable(name: "adt", scope: !5943, file: !3, line: 1533, type: !3481)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1531, column: 4)
!5944 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1529, column: 22)
!5945 = !DILocation(line: 1533, column: 15, scope: !5943)
!5946 = !DILocation(line: 1533, column: 21, scope: !5943)
!5947 = !DILocation(line: 1533, column: 26, scope: !5943)
!5948 = !DILocalVariable(name: "fcu", scope: !5943, file: !3, line: 1534, type: !587)
!5949 = !DILocation(line: 1534, column: 13, scope: !5943)
!5950 = !DILocation(line: 1534, column: 29, scope: !5943)
!5951 = !DILocation(line: 1534, column: 34, scope: !5943)
!5952 = !DILocation(line: 1534, column: 19, scope: !5943)
!5953 = !DILocation(line: 1537, column: 43, scope: !5943)
!5954 = !DILocation(line: 1537, column: 48, scope: !5943)
!5955 = !DILocation(line: 1537, column: 5, scope: !5943)
!5956 = !DILocation(line: 1538, column: 5, scope: !5943)
!5957 = !DILocalVariable(name: "gpd", scope: !5958, file: !3, line: 1543, type: !2564)
!5958 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1541, column: 4)
!5959 = !DILocation(line: 1543, column: 14, scope: !5958)
!5960 = !DILocation(line: 1543, column: 31, scope: !5958)
!5961 = !DILocation(line: 1543, column: 36, scope: !5958)
!5962 = !DILocation(line: 1543, column: 20, scope: !5958)
!5963 = !DILocalVariable(name: "gpl", scope: !5958, file: !3, line: 1544, type: !2272)
!5964 = !DILocation(line: 1544, column: 16, scope: !5958)
!5965 = !DILocation(line: 1544, column: 35, scope: !5958)
!5966 = !DILocation(line: 1544, column: 40, scope: !5958)
!5967 = !DILocation(line: 1544, column: 22, scope: !5958)
!5968 = !DILocation(line: 1547, column: 25, scope: !5958)
!5969 = !DILocation(line: 1547, column: 5, scope: !5958)
!5970 = !DILocation(line: 1548, column: 20, scope: !5958)
!5971 = !DILocation(line: 1548, column: 25, scope: !5958)
!5972 = !DILocation(line: 1548, column: 33, scope: !5958)
!5973 = !DILocation(line: 1548, column: 5, scope: !5958)
!5974 = !DILocation(line: 1549, column: 5, scope: !5958)
!5975 = !DILocalVariable(name: "mask", scope: !5976, file: !3, line: 1554, type: !2566)
!5976 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1552, column: 4)
!5977 = !DILocation(line: 1554, column: 11, scope: !5976)
!5978 = !DILocation(line: 1554, column: 26, scope: !5976)
!5979 = !DILocation(line: 1554, column: 31, scope: !5976)
!5980 = !DILocation(line: 1554, column: 18, scope: !5976)
!5981 = !DILocalVariable(name: "masklay", scope: !5976, file: !3, line: 1555, type: !2296)
!5982 = !DILocation(line: 1555, column: 16, scope: !5976)
!5983 = !DILocation(line: 1555, column: 39, scope: !5976)
!5984 = !DILocation(line: 1555, column: 44, scope: !5976)
!5985 = !DILocation(line: 1555, column: 26, scope: !5976)
!5986 = !DILocation(line: 1558, column: 27, scope: !5976)
!5987 = !DILocation(line: 1558, column: 33, scope: !5976)
!5988 = !DILocation(line: 1558, column: 5, scope: !5976)
!5989 = !DILocation(line: 1559, column: 5, scope: !5976)
!5990 = !DILocation(line: 1562, column: 2, scope: !5939)
!5991 = !DILocation(line: 1528, column: 41, scope: !5936)
!5992 = !DILocation(line: 1528, column: 46, scope: !5936)
!5993 = !DILocation(line: 1528, column: 39, scope: !5936)
!5994 = !DILocation(line: 1528, column: 2, scope: !5936)
!5995 = distinct !{!5995, !5937, !5996}
!5996 = !DILocation(line: 1562, column: 2, scope: !5931)
!5997 = !DILocation(line: 1565, column: 2, scope: !5802)
!5998 = !DILocation(line: 1568, column: 24, scope: !5802)
!5999 = !DILocation(line: 1568, column: 2, scope: !5802)
!6000 = !DILocation(line: 1570, column: 2, scope: !5802)
!6001 = !DILocation(line: 1571, column: 1, scope: !5802)
!6002 = distinct !DISubprogram(name: "animchannels_rearrange_exec", scope: !3, file: !3, line: 1170, type: !4371, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6003 = !DILocalVariable(name: "C", arg: 1, scope: !6002, file: !3, line: 1170, type: !4373)
!6004 = !DILocation(line: 1170, column: 50, scope: !6002)
!6005 = !DILocalVariable(name: "op", arg: 2, scope: !6002, file: !3, line: 1170, type: !4376)
!6006 = !DILocation(line: 1170, column: 65, scope: !6002)
!6007 = !DILocalVariable(name: "ac", scope: !6002, file: !3, line: 1172, type: !2628)
!6008 = !DILocation(line: 1172, column: 15, scope: !6002)
!6009 = !DILocalVariable(name: "mode", scope: !6002, file: !3, line: 1173, type: !6010)
!6010 = !DIDerivedType(tag: DW_TAG_typedef, name: "eRearrangeAnimChan_Mode", file: !3, line: 646, baseType: !350)
!6011 = !DILocation(line: 1173, column: 26, scope: !6002)
!6012 = !DILocation(line: 1176, column: 32, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1176, column: 6)
!6014 = !DILocation(line: 1176, column: 6, scope: !6013)
!6015 = !DILocation(line: 1176, column: 40, scope: !6013)
!6016 = !DILocation(line: 1176, column: 6, scope: !6002)
!6017 = !DILocation(line: 1177, column: 3, scope: !6013)
!6018 = !DILocation(line: 1180, column: 22, scope: !6002)
!6019 = !DILocation(line: 1180, column: 26, scope: !6002)
!6020 = !DILocation(line: 1180, column: 9, scope: !6002)
!6021 = !DILocation(line: 1180, column: 7, scope: !6002)
!6022 = !DILocation(line: 1183, column: 9, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1183, column: 6)
!6024 = !DILocation(line: 1183, column: 6, scope: !6023)
!6025 = !DILocation(line: 1183, column: 18, scope: !6023)
!6026 = !DILocation(line: 1183, column: 6, scope: !6002)
!6027 = !DILocation(line: 1185, column: 3, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1183, column: 39)
!6029 = !DILocation(line: 1186, column: 2, scope: !6028)
!6030 = !DILocation(line: 1187, column: 14, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1187, column: 11)
!6032 = !DILocation(line: 1187, column: 11, scope: !6031)
!6033 = !DILocation(line: 1187, column: 23, scope: !6031)
!6034 = !DILocation(line: 1187, column: 11, scope: !6023)
!6035 = !DILocation(line: 1189, column: 3, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1187, column: 41)
!6037 = !DILocation(line: 1190, column: 2, scope: !6036)
!6038 = !DILocation(line: 1191, column: 14, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1191, column: 11)
!6040 = !DILocation(line: 1191, column: 11, scope: !6039)
!6041 = !DILocation(line: 1191, column: 23, scope: !6039)
!6042 = !DILocation(line: 1191, column: 11, scope: !6031)
!6043 = !DILocation(line: 1193, column: 37, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1191, column: 43)
!6045 = !DILocation(line: 1193, column: 34, scope: !6044)
!6046 = !DILocation(line: 1193, column: 43, scope: !6044)
!6047 = !DILocation(line: 1193, column: 3, scope: !6044)
!6048 = !DILocation(line: 1194, column: 2, scope: !6044)
!6049 = !DILocalVariable(name: "anim_data", scope: !6050, file: !3, line: 1196, type: !559)
!6050 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1195, column: 7)
!6051 = !DILocation(line: 1196, column: 12, scope: !6050)
!6052 = !DILocalVariable(name: "ale", scope: !6050, file: !3, line: 1197, type: !2754)
!6053 = !DILocation(line: 1197, column: 18, scope: !6050)
!6054 = !DILocalVariable(name: "filter", scope: !6050, file: !3, line: 1198, type: !20)
!6055 = !DILocation(line: 1198, column: 7, scope: !6050)
!6056 = !DILocation(line: 1201, column: 10, scope: !6050)
!6057 = !DILocation(line: 1202, column: 41, scope: !6050)
!6058 = !DILocation(line: 1202, column: 52, scope: !6050)
!6059 = !DILocation(line: 1202, column: 61, scope: !6050)
!6060 = !DILocation(line: 1202, column: 58, scope: !6050)
!6061 = !DILocation(line: 1202, column: 3, scope: !6050)
!6062 = !DILocation(line: 1204, column: 24, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1204, column: 3)
!6064 = !DILocation(line: 1204, column: 14, scope: !6063)
!6065 = !DILocation(line: 1204, column: 12, scope: !6063)
!6066 = !DILocation(line: 1204, column: 8, scope: !6063)
!6067 = !DILocation(line: 1204, column: 31, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1204, column: 3)
!6069 = !DILocation(line: 1204, column: 3, scope: !6063)
!6070 = !DILocalVariable(name: "adt", scope: !6071, file: !3, line: 1205, type: !3481)
!6071 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 1204, column: 53)
!6072 = !DILocation(line: 1205, column: 14, scope: !6071)
!6073 = !DILocation(line: 1205, column: 20, scope: !6071)
!6074 = !DILocation(line: 1205, column: 25, scope: !6071)
!6075 = !DILocation(line: 1207, column: 15, scope: !6071)
!6076 = !DILocation(line: 1207, column: 12, scope: !6071)
!6077 = !DILocation(line: 1207, column: 4, scope: !6071)
!6078 = !DILocation(line: 1209, column: 34, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1207, column: 25)
!6080 = !DILocation(line: 1209, column: 39, scope: !6079)
!6081 = !DILocation(line: 1209, column: 6, scope: !6079)
!6082 = !DILocation(line: 1210, column: 6, scope: !6079)
!6083 = !DILocation(line: 1213, column: 37, scope: !6079)
!6084 = !DILocation(line: 1213, column: 42, scope: !6079)
!6085 = !DILocation(line: 1213, column: 6, scope: !6079)
!6086 = !DILocation(line: 1214, column: 6, scope: !6079)
!6087 = !DILocation(line: 1218, column: 10, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1218, column: 10)
!6089 = !DILocation(line: 1218, column: 15, scope: !6088)
!6090 = !DILocation(line: 1218, column: 10, scope: !6079)
!6091 = !DILocation(line: 1219, column: 38, scope: !6088)
!6092 = !DILocation(line: 1219, column: 43, scope: !6088)
!6093 = !DILocation(line: 1219, column: 51, scope: !6088)
!6094 = !DILocation(line: 1219, column: 7, scope: !6088)
!6095 = !DILocation(line: 1220, column: 17, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1220, column: 15)
!6097 = !DILocation(line: 1220, column: 23, scope: !6096)
!6098 = !DILocation(line: 1220, column: 15, scope: !6088)
!6099 = !DILocation(line: 1221, column: 7, scope: !6096)
!6100 = !DILocation(line: 1222, column: 6, scope: !6079)
!6101 = !DILocation(line: 1224, column: 3, scope: !6071)
!6102 = !DILocation(line: 1204, column: 42, scope: !6068)
!6103 = !DILocation(line: 1204, column: 47, scope: !6068)
!6104 = !DILocation(line: 1204, column: 40, scope: !6068)
!6105 = !DILocation(line: 1204, column: 3, scope: !6068)
!6106 = distinct !{!6106, !6069, !6107}
!6107 = !DILocation(line: 1224, column: 3, scope: !6063)
!6108 = !DILocation(line: 1227, column: 3, scope: !6050)
!6109 = !DILocation(line: 1231, column: 24, scope: !6002)
!6110 = !DILocation(line: 1231, column: 2, scope: !6002)
!6111 = !DILocation(line: 1233, column: 2, scope: !6002)
!6112 = !DILocation(line: 1234, column: 1, scope: !6002)
!6113 = distinct !DISubprogram(name: "rearrange_action_channels", scope: !3, file: !3, line: 1118, type: !6114, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !2627, !741, !6010}
!6116 = !DILocalVariable(name: "ac", arg: 1, scope: !6113, file: !3, line: 1118, type: !2627)
!6117 = !DILocation(line: 1118, column: 53, scope: !6113)
!6118 = !DILocalVariable(name: "act", arg: 2, scope: !6113, file: !3, line: 1118, type: !741)
!6119 = !DILocation(line: 1118, column: 66, scope: !6113)
!6120 = !DILocalVariable(name: "mode", arg: 3, scope: !6113, file: !3, line: 1118, type: !6010)
!6121 = !DILocation(line: 1118, column: 95, scope: !6113)
!6122 = !DILocalVariable(name: "tgrp", scope: !6113, file: !3, line: 1120, type: !552)
!6123 = !DILocation(line: 1120, column: 15, scope: !6113)
!6124 = !DILocalVariable(name: "anim_data_visible", scope: !6113, file: !3, line: 1121, type: !559)
!6125 = !DILocation(line: 1121, column: 11, scope: !6113)
!6126 = !DILocalVariable(name: "do_channels", scope: !6113, file: !3, line: 1122, type: !1643)
!6127 = !DILocation(line: 1122, column: 7, scope: !6113)
!6128 = !DILocalVariable(name: "rearrange_func", scope: !6113, file: !3, line: 1125, type: !6129)
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimChanRearrangeFp", file: !3, line: 793, baseType: !6130)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!1643, !1042, !6133}
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 64)
!6134 = !DIDerivedType(tag: DW_TAG_typedef, name: "tReorderChannelIsland", file: !3, line: 665, baseType: !6135)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tReorderChannelIsland", file: !3, line: 660, size: 320, elements: !6136)
!6136 = !{!6137, !6139, !6140, !6141}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6135, file: !3, line: 661, baseType: !6138, size: 64)
!6138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6135, file: !3, line: 661, baseType: !6138, size: 64, offset: 64)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !6135, file: !3, line: 663, baseType: !559, size: 128, offset: 128)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6135, file: !3, line: 664, baseType: !20, size: 32, offset: 256)
!6142 = !DILocation(line: 1125, column: 22, scope: !6113)
!6143 = !DILocation(line: 1125, column: 63, scope: !6113)
!6144 = !DILocation(line: 1125, column: 39, scope: !6113)
!6145 = !DILocation(line: 1127, column: 6, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1127, column: 6)
!6147 = !DILocation(line: 1127, column: 21, scope: !6146)
!6148 = !DILocation(line: 1127, column: 6, scope: !6113)
!6149 = !DILocation(line: 1128, column: 3, scope: !6146)
!6150 = !DILocation(line: 1131, column: 27, scope: !6113)
!6151 = !DILocation(line: 1131, column: 2, scope: !6113)
!6152 = !DILocation(line: 1134, column: 60, scope: !6113)
!6153 = !DILocation(line: 1134, column: 2, scope: !6113)
!6154 = !DILocation(line: 1140, column: 48, scope: !6113)
!6155 = !DILocation(line: 1140, column: 53, scope: !6113)
!6156 = !DILocation(line: 1140, column: 61, scope: !6113)
!6157 = !DILocation(line: 1140, column: 77, scope: !6113)
!6158 = !DILocation(line: 1140, column: 17, scope: !6113)
!6159 = !DILocation(line: 1141, column: 67, scope: !6113)
!6160 = !DILocation(line: 1140, column: 16, scope: !6113)
!6161 = !DILocation(line: 1140, column: 14, scope: !6113)
!6162 = !DILocation(line: 1144, column: 2, scope: !6113)
!6163 = !DILocation(line: 1146, column: 6, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1146, column: 6)
!6165 = !DILocation(line: 1146, column: 6, scope: !6113)
!6166 = !DILocalVariable(name: "agrp", scope: !6167, file: !3, line: 1147, type: !551)
!6167 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1146, column: 19)
!6168 = !DILocation(line: 1147, column: 17, scope: !6167)
!6169 = !DILocation(line: 1150, column: 61, scope: !6167)
!6170 = !DILocation(line: 1150, column: 3, scope: !6167)
!6171 = !DILocation(line: 1152, column: 15, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 1152, column: 3)
!6173 = !DILocation(line: 1152, column: 20, scope: !6172)
!6174 = !DILocation(line: 1152, column: 27, scope: !6172)
!6175 = !DILocation(line: 1152, column: 13, scope: !6172)
!6176 = !DILocation(line: 1152, column: 8, scope: !6172)
!6177 = !DILocation(line: 1152, column: 34, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1152, column: 3)
!6179 = !DILocation(line: 1152, column: 3, scope: !6172)
!6180 = !DILocation(line: 1154, column: 8, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 1154, column: 8)
!6182 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 1152, column: 59)
!6183 = !DILocation(line: 1154, column: 8, scope: !6182)
!6184 = !DILocation(line: 1155, column: 36, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 1154, column: 33)
!6186 = !DILocation(line: 1155, column: 42, scope: !6185)
!6187 = !DILocation(line: 1155, column: 52, scope: !6185)
!6188 = !DILocation(line: 1155, column: 68, scope: !6185)
!6189 = !DILocation(line: 1155, column: 5, scope: !6185)
!6190 = !DILocation(line: 1157, column: 4, scope: !6185)
!6191 = !DILocation(line: 1158, column: 3, scope: !6182)
!6192 = !DILocation(line: 1152, column: 47, scope: !6178)
!6193 = !DILocation(line: 1152, column: 53, scope: !6178)
!6194 = !DILocation(line: 1152, column: 45, scope: !6178)
!6195 = !DILocation(line: 1152, column: 3, scope: !6178)
!6196 = distinct !{!6196, !6179, !6197}
!6197 = !DILocation(line: 1158, column: 3, scope: !6172)
!6198 = !DILocation(line: 1161, column: 3, scope: !6167)
!6199 = !DILocation(line: 1162, column: 2, scope: !6167)
!6200 = !DILocation(line: 1165, column: 26, scope: !6113)
!6201 = !DILocation(line: 1165, column: 2, scope: !6113)
!6202 = !DILocation(line: 1166, column: 1, scope: !6113)
!6203 = distinct !DISubprogram(name: "rearrange_nla_channels", scope: !3, file: !3, line: 975, type: !6204, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !2627, !3481, !6010}
!6206 = !DILocalVariable(name: "ac", arg: 1, scope: !6203, file: !3, line: 975, type: !2627)
!6207 = !DILocation(line: 975, column: 50, scope: !6203)
!6208 = !DILocalVariable(name: "adt", arg: 2, scope: !6203, file: !3, line: 975, type: !3481)
!6209 = !DILocation(line: 975, column: 64, scope: !6203)
!6210 = !DILocalVariable(name: "mode", arg: 3, scope: !6203, file: !3, line: 975, type: !6010)
!6211 = !DILocation(line: 975, column: 93, scope: !6203)
!6212 = !DILocalVariable(name: "rearrange_func", scope: !6203, file: !3, line: 977, type: !6129)
!6213 = !DILocation(line: 977, column: 22, scope: !6203)
!6214 = !DILocalVariable(name: "anim_data_visible", scope: !6203, file: !3, line: 978, type: !559)
!6215 = !DILocation(line: 978, column: 11, scope: !6203)
!6216 = !DILocation(line: 981, column: 7, scope: !6203)
!6217 = !DILocation(line: 984, column: 43, scope: !6203)
!6218 = !DILocation(line: 984, column: 19, scope: !6203)
!6219 = !DILocation(line: 984, column: 17, scope: !6203)
!6220 = !DILocation(line: 985, column: 6, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 985, column: 6)
!6222 = !DILocation(line: 985, column: 21, scope: !6221)
!6223 = !DILocation(line: 985, column: 6, scope: !6203)
!6224 = !DILocation(line: 986, column: 3, scope: !6221)
!6225 = !DILocation(line: 989, column: 60, scope: !6203)
!6226 = !DILocation(line: 989, column: 2, scope: !6203)
!6227 = !DILocation(line: 992, column: 33, scope: !6203)
!6228 = !DILocation(line: 992, column: 38, scope: !6203)
!6229 = !DILocation(line: 992, column: 50, scope: !6203)
!6230 = !DILocation(line: 992, column: 66, scope: !6203)
!6231 = !DILocation(line: 992, column: 2, scope: !6203)
!6232 = !DILocation(line: 995, column: 2, scope: !6203)
!6233 = !DILocation(line: 996, column: 1, scope: !6203)
!6234 = distinct !DISubprogram(name: "rearrange_driver_channels", scope: !3, file: !3, line: 1003, type: !6204, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6235 = !DILocalVariable(name: "ac", arg: 1, scope: !6234, file: !3, line: 1003, type: !2627)
!6236 = !DILocation(line: 1003, column: 53, scope: !6234)
!6237 = !DILocalVariable(name: "adt", arg: 2, scope: !6234, file: !3, line: 1003, type: !3481)
!6238 = !DILocation(line: 1003, column: 67, scope: !6234)
!6239 = !DILocalVariable(name: "mode", arg: 3, scope: !6234, file: !3, line: 1003, type: !6010)
!6240 = !DILocation(line: 1003, column: 96, scope: !6234)
!6241 = !DILocalVariable(name: "rearrange_func", scope: !6234, file: !3, line: 1006, type: !6129)
!6242 = !DILocation(line: 1006, column: 22, scope: !6234)
!6243 = !DILocation(line: 1006, column: 63, scope: !6234)
!6244 = !DILocation(line: 1006, column: 39, scope: !6234)
!6245 = !DILocalVariable(name: "anim_data_visible", scope: !6234, file: !3, line: 1007, type: !559)
!6246 = !DILocation(line: 1007, column: 11, scope: !6234)
!6247 = !DILocation(line: 1009, column: 6, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1009, column: 6)
!6249 = !DILocation(line: 1009, column: 21, scope: !6248)
!6250 = !DILocation(line: 1009, column: 6, scope: !6234)
!6251 = !DILocation(line: 1010, column: 3, scope: !6248)
!6252 = !DILocation(line: 1013, column: 6, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1013, column: 6)
!6254 = !DILocation(line: 1013, column: 25, scope: !6253)
!6255 = !DILocation(line: 1013, column: 6, scope: !6234)
!6256 = !DILocation(line: 1014, column: 3, scope: !6253)
!6257 = !DILocation(line: 1017, column: 60, scope: !6234)
!6258 = !DILocation(line: 1017, column: 2, scope: !6234)
!6259 = !DILocation(line: 1020, column: 33, scope: !6234)
!6260 = !DILocation(line: 1020, column: 38, scope: !6234)
!6261 = !DILocation(line: 1020, column: 47, scope: !6234)
!6262 = !DILocation(line: 1020, column: 63, scope: !6234)
!6263 = !DILocation(line: 1020, column: 2, scope: !6234)
!6264 = !DILocation(line: 1023, column: 2, scope: !6234)
!6265 = !DILocation(line: 1024, column: 1, scope: !6234)
!6266 = distinct !DISubprogram(name: "rearrange_get_mode_func", scope: !3, file: !3, line: 796, type: !6267, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{!6129, !6010}
!6269 = !DILocalVariable(name: "mode", arg: 1, scope: !6266, file: !3, line: 796, type: !6010)
!6270 = !DILocation(line: 796, column: 76, scope: !6266)
!6271 = !DILocation(line: 798, column: 10, scope: !6266)
!6272 = !DILocation(line: 798, column: 2, scope: !6266)
!6273 = !DILocation(line: 800, column: 4, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 798, column: 16)
!6275 = !DILocation(line: 802, column: 4, scope: !6274)
!6276 = !DILocation(line: 804, column: 4, scope: !6274)
!6277 = !DILocation(line: 806, column: 4, scope: !6274)
!6278 = !DILocation(line: 808, column: 4, scope: !6274)
!6279 = !DILocation(line: 810, column: 1, scope: !6266)
!6280 = distinct !DISubprogram(name: "split_groups_action_temp", scope: !3, file: !3, line: 1029, type: !6281, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !741, !551}
!6283 = !DILocalVariable(name: "act", arg: 1, scope: !6280, file: !3, line: 1029, type: !741)
!6284 = !DILocation(line: 1029, column: 47, scope: !6280)
!6285 = !DILocalVariable(name: "tgrp", arg: 2, scope: !6280, file: !3, line: 1029, type: !551)
!6286 = !DILocation(line: 1029, column: 66, scope: !6280)
!6287 = !DILocalVariable(name: "agrp", scope: !6280, file: !3, line: 1031, type: !551)
!6288 = !DILocation(line: 1031, column: 16, scope: !6280)
!6289 = !DILocalVariable(name: "fcu", scope: !6280, file: !3, line: 1032, type: !587)
!6290 = !DILocation(line: 1032, column: 10, scope: !6280)
!6291 = !DILocation(line: 1034, column: 6, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1034, column: 6)
!6293 = !DILocation(line: 1034, column: 10, scope: !6292)
!6294 = !DILocation(line: 1034, column: 6, scope: !6280)
!6295 = !DILocation(line: 1035, column: 3, scope: !6292)
!6296 = !DILocation(line: 1038, column: 14, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1038, column: 2)
!6298 = !DILocation(line: 1038, column: 19, scope: !6297)
!6299 = !DILocation(line: 1038, column: 26, scope: !6297)
!6300 = !DILocation(line: 1038, column: 12, scope: !6297)
!6301 = !DILocation(line: 1038, column: 7, scope: !6297)
!6302 = !DILocation(line: 1038, column: 33, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1038, column: 2)
!6304 = !DILocation(line: 1038, column: 2, scope: !6297)
!6305 = !DILocation(line: 1039, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 1039, column: 7)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1038, column: 58)
!6308 = !DILocation(line: 1039, column: 13, scope: !6306)
!6309 = !DILocation(line: 1039, column: 22, scope: !6306)
!6310 = !DILocation(line: 1039, column: 7, scope: !6307)
!6311 = !DILocation(line: 1040, column: 10, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1039, column: 29)
!6313 = !DILocation(line: 1040, column: 16, scope: !6312)
!6314 = !DILocation(line: 1040, column: 25, scope: !6312)
!6315 = !DILocation(line: 1040, column: 8, scope: !6312)
!6316 = !DILocation(line: 1041, column: 24, scope: !6312)
!6317 = !DILocation(line: 1041, column: 29, scope: !6312)
!6318 = !DILocation(line: 1041, column: 4, scope: !6312)
!6319 = !DILocation(line: 1041, column: 9, scope: !6312)
!6320 = !DILocation(line: 1041, column: 16, scope: !6312)
!6321 = !DILocation(line: 1041, column: 22, scope: !6312)
!6322 = !DILocation(line: 1043, column: 10, scope: !6312)
!6323 = !DILocation(line: 1043, column: 16, scope: !6312)
!6324 = !DILocation(line: 1043, column: 25, scope: !6312)
!6325 = !DILocation(line: 1043, column: 8, scope: !6312)
!6326 = !DILocation(line: 1044, column: 4, scope: !6312)
!6327 = !DILocation(line: 1044, column: 9, scope: !6312)
!6328 = !DILocation(line: 1044, column: 14, scope: !6312)
!6329 = !DILocation(line: 1046, column: 10, scope: !6312)
!6330 = !DILocation(line: 1046, column: 16, scope: !6312)
!6331 = !DILocation(line: 1046, column: 25, scope: !6312)
!6332 = !DILocation(line: 1046, column: 8, scope: !6312)
!6333 = !DILocation(line: 1047, column: 4, scope: !6312)
!6334 = !DILocation(line: 1047, column: 9, scope: !6312)
!6335 = !DILocation(line: 1047, column: 14, scope: !6312)
!6336 = !DILocation(line: 1048, column: 3, scope: !6312)
!6337 = !DILocation(line: 1049, column: 2, scope: !6307)
!6338 = !DILocation(line: 1038, column: 46, scope: !6303)
!6339 = !DILocation(line: 1038, column: 52, scope: !6303)
!6340 = !DILocation(line: 1038, column: 44, scope: !6303)
!6341 = !DILocation(line: 1038, column: 2, scope: !6303)
!6342 = distinct !{!6342, !6304, !6343}
!6343 = !DILocation(line: 1049, column: 2, scope: !6297)
!6344 = !DILocation(line: 1052, column: 9, scope: !6280)
!6345 = !DILocation(line: 1052, column: 2, scope: !6280)
!6346 = !DILocation(line: 1053, column: 2, scope: !6280)
!6347 = !DILocation(line: 1053, column: 8, scope: !6280)
!6348 = !DILocation(line: 1053, column: 13, scope: !6280)
!6349 = !DILocation(line: 1054, column: 14, scope: !6280)
!6350 = !DILocation(line: 1054, column: 20, scope: !6280)
!6351 = !DILocation(line: 1054, column: 2, scope: !6280)
!6352 = !DILocation(line: 1057, column: 6, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1057, column: 6)
!6354 = !DILocation(line: 1057, column: 11, scope: !6353)
!6355 = !DILocation(line: 1057, column: 18, scope: !6353)
!6356 = !DILocation(line: 1057, column: 6, scope: !6280)
!6357 = !DILocation(line: 1059, column: 9, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1057, column: 25)
!6359 = !DILocation(line: 1059, column: 14, scope: !6358)
!6360 = !DILocation(line: 1059, column: 21, scope: !6358)
!6361 = !DILocation(line: 1059, column: 7, scope: !6358)
!6362 = !DILocation(line: 1060, column: 3, scope: !6358)
!6363 = !DILocation(line: 1060, column: 8, scope: !6358)
!6364 = !DILocation(line: 1060, column: 13, scope: !6358)
!6365 = !DILocation(line: 1061, column: 26, scope: !6358)
!6366 = !DILocation(line: 1061, column: 3, scope: !6358)
!6367 = !DILocation(line: 1061, column: 9, scope: !6358)
!6368 = !DILocation(line: 1061, column: 18, scope: !6358)
!6369 = !DILocation(line: 1061, column: 24, scope: !6358)
!6370 = !DILocation(line: 1062, column: 3, scope: !6358)
!6371 = !DILocation(line: 1062, column: 8, scope: !6358)
!6372 = !DILocation(line: 1062, column: 15, scope: !6358)
!6373 = !DILocation(line: 1062, column: 21, scope: !6358)
!6374 = !DILocation(line: 1065, column: 9, scope: !6358)
!6375 = !DILocation(line: 1065, column: 14, scope: !6358)
!6376 = !DILocation(line: 1065, column: 21, scope: !6358)
!6377 = !DILocation(line: 1065, column: 7, scope: !6358)
!6378 = !DILocation(line: 1066, column: 3, scope: !6358)
!6379 = !DILocation(line: 1066, column: 8, scope: !6358)
!6380 = !DILocation(line: 1066, column: 13, scope: !6358)
!6381 = !DILocation(line: 1067, column: 25, scope: !6358)
!6382 = !DILocation(line: 1067, column: 3, scope: !6358)
!6383 = !DILocation(line: 1067, column: 9, scope: !6358)
!6384 = !DILocation(line: 1067, column: 18, scope: !6358)
!6385 = !DILocation(line: 1067, column: 23, scope: !6358)
!6386 = !DILocation(line: 1068, column: 3, scope: !6358)
!6387 = !DILocation(line: 1068, column: 8, scope: !6358)
!6388 = !DILocation(line: 1068, column: 15, scope: !6358)
!6389 = !DILocation(line: 1068, column: 20, scope: !6358)
!6390 = !DILocation(line: 1073, column: 14, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 1073, column: 3)
!6392 = !DILocation(line: 1073, column: 20, scope: !6391)
!6393 = !DILocation(line: 1073, column: 29, scope: !6391)
!6394 = !DILocation(line: 1073, column: 12, scope: !6391)
!6395 = !DILocation(line: 1073, column: 8, scope: !6391)
!6396 = !DILocation(line: 1073, column: 36, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 1073, column: 3)
!6398 = !DILocation(line: 1073, column: 3, scope: !6391)
!6399 = !DILocation(line: 1074, column: 15, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 1073, column: 58)
!6401 = !DILocation(line: 1074, column: 4, scope: !6400)
!6402 = !DILocation(line: 1074, column: 9, scope: !6400)
!6403 = !DILocation(line: 1074, column: 13, scope: !6400)
!6404 = !DILocation(line: 1075, column: 3, scope: !6400)
!6405 = !DILocation(line: 1073, column: 47, scope: !6397)
!6406 = !DILocation(line: 1073, column: 52, scope: !6397)
!6407 = !DILocation(line: 1073, column: 45, scope: !6397)
!6408 = !DILocation(line: 1073, column: 3, scope: !6397)
!6409 = distinct !{!6409, !6398, !6410}
!6410 = !DILocation(line: 1075, column: 3, scope: !6391)
!6411 = !DILocation(line: 1076, column: 2, scope: !6358)
!6412 = !DILocation(line: 1079, column: 15, scope: !6280)
!6413 = !DILocation(line: 1079, column: 20, scope: !6280)
!6414 = !DILocation(line: 1079, column: 28, scope: !6280)
!6415 = !DILocation(line: 1079, column: 2, scope: !6280)
!6416 = !DILocation(line: 1080, column: 1, scope: !6280)
!6417 = distinct !DISubprogram(name: "rearrange_animchannels_filter_visible", scope: !3, file: !3, line: 900, type: !6418, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{null, !1042, !2627, !2737}
!6420 = !DILocalVariable(name: "anim_data_visible", arg: 1, scope: !6417, file: !3, line: 900, type: !1042)
!6421 = !DILocation(line: 900, column: 61, scope: !6417)
!6422 = !DILocalVariable(name: "ac", arg: 2, scope: !6417, file: !3, line: 900, type: !2627)
!6423 = !DILocation(line: 900, column: 94, scope: !6417)
!6424 = !DILocalVariable(name: "type", arg: 3, scope: !6417, file: !3, line: 900, type: !2737)
!6425 = !DILocation(line: 900, column: 116, scope: !6417)
!6426 = !DILocalVariable(name: "anim_data", scope: !6417, file: !3, line: 902, type: !559)
!6427 = !DILocation(line: 902, column: 11, scope: !6417)
!6428 = !DILocalVariable(name: "ale", scope: !6417, file: !3, line: 903, type: !2754)
!6429 = !DILocation(line: 903, column: 17, scope: !6417)
!6430 = !DILocalVariable(name: "ale_next", scope: !6417, file: !3, line: 903, type: !2754)
!6431 = !DILocation(line: 903, column: 23, scope: !6417)
!6432 = !DILocalVariable(name: "filter", scope: !6417, file: !3, line: 904, type: !20)
!6433 = !DILocation(line: 904, column: 6, scope: !6417)
!6434 = !DILocation(line: 907, column: 23, scope: !6417)
!6435 = !DILocation(line: 907, column: 39, scope: !6417)
!6436 = !DILocation(line: 907, column: 47, scope: !6417)
!6437 = !DILocation(line: 907, column: 51, scope: !6417)
!6438 = !DILocation(line: 907, column: 57, scope: !6417)
!6439 = !DILocation(line: 907, column: 61, scope: !6417)
!6440 = !DILocation(line: 907, column: 2, scope: !6417)
!6441 = !DILocation(line: 910, column: 23, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 910, column: 2)
!6443 = !DILocation(line: 910, column: 13, scope: !6442)
!6444 = !DILocation(line: 910, column: 11, scope: !6442)
!6445 = !DILocation(line: 910, column: 7, scope: !6442)
!6446 = !DILocation(line: 910, column: 30, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 910, column: 2)
!6448 = !DILocation(line: 910, column: 2, scope: !6442)
!6449 = !DILocation(line: 911, column: 14, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 910, column: 51)
!6451 = !DILocation(line: 911, column: 19, scope: !6450)
!6452 = !DILocation(line: 911, column: 12, scope: !6450)
!6453 = !DILocation(line: 913, column: 7, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 913, column: 7)
!6455 = !DILocation(line: 913, column: 12, scope: !6454)
!6456 = !DILocation(line: 913, column: 20, scope: !6454)
!6457 = !DILocation(line: 913, column: 17, scope: !6454)
!6458 = !DILocation(line: 913, column: 7, scope: !6450)
!6459 = !DILocation(line: 914, column: 30, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 913, column: 26)
!6461 = !DILocation(line: 914, column: 4, scope: !6460)
!6462 = !DILocation(line: 915, column: 3, scope: !6460)
!6463 = !DILocation(line: 916, column: 2, scope: !6450)
!6464 = !DILocation(line: 910, column: 41, scope: !6447)
!6465 = !DILocation(line: 910, column: 39, scope: !6447)
!6466 = !DILocation(line: 910, column: 2, scope: !6447)
!6467 = distinct !{!6467, !6448, !6468}
!6468 = !DILocation(line: 916, column: 2, scope: !6442)
!6469 = !DILocation(line: 919, column: 3, scope: !6417)
!6470 = !DILocation(line: 919, column: 23, scope: !6417)
!6471 = !DILocation(line: 920, column: 1, scope: !6417)
!6472 = distinct !DISubprogram(name: "rearrange_animchannel_islands", scope: !3, file: !3, line: 923, type: !6473, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!1643, !1042, !6129, !6010, !2737, !1042}
!6475 = !DILocalVariable(name: "list", arg: 1, scope: !6472, file: !3, line: 923, type: !1042)
!6476 = !DILocation(line: 923, column: 53, scope: !6472)
!6477 = !DILocalVariable(name: "rearrange_func", arg: 2, scope: !6472, file: !3, line: 923, type: !6129)
!6478 = !DILocation(line: 923, column: 79, scope: !6472)
!6479 = !DILocalVariable(name: "mode", arg: 3, scope: !6472, file: !3, line: 924, type: !6010)
!6480 = !DILocation(line: 924, column: 67, scope: !6472)
!6481 = !DILocalVariable(name: "type", arg: 4, scope: !6472, file: !3, line: 924, type: !2737)
!6482 = !DILocation(line: 924, column: 91, scope: !6472)
!6483 = !DILocalVariable(name: "anim_data_visible", arg: 5, scope: !6472, file: !3, line: 925, type: !1042)
!6484 = !DILocation(line: 925, column: 53, scope: !6472)
!6485 = !DILocalVariable(name: "islands", scope: !6472, file: !3, line: 927, type: !559)
!6486 = !DILocation(line: 927, column: 11, scope: !6472)
!6487 = !DILocalVariable(name: "channel", scope: !6472, file: !3, line: 928, type: !6488)
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = !DIDerivedType(tag: DW_TAG_typedef, name: "Link", file: !560, line: 59, baseType: !6490)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !560, line: 57, size: 128, elements: !6491)
!6491 = !{!6492, !6494}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6490, file: !560, line: 58, baseType: !6493, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6490, file: !560, line: 58, baseType: !6493, size: 64, offset: 64)
!6495 = !DILocation(line: 928, column: 8, scope: !6472)
!6496 = !DILocalVariable(name: "chanNext", scope: !6472, file: !3, line: 928, type: !6488)
!6497 = !DILocation(line: 928, column: 18, scope: !6472)
!6498 = !DILocalVariable(name: "done", scope: !6472, file: !3, line: 929, type: !1643)
!6499 = !DILocation(line: 929, column: 7, scope: !6472)
!6500 = !DILocation(line: 932, column: 28, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 932, column: 6)
!6502 = !DILocation(line: 932, column: 6, scope: !6501)
!6503 = !DILocation(line: 932, column: 6, scope: !6472)
!6504 = !DILocation(line: 933, column: 3, scope: !6501)
!6505 = !DILocation(line: 936, column: 17, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 936, column: 2)
!6507 = !DILocation(line: 936, column: 23, scope: !6506)
!6508 = !DILocation(line: 936, column: 15, scope: !6506)
!6509 = !DILocation(line: 936, column: 7, scope: !6506)
!6510 = !DILocation(line: 936, column: 30, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 936, column: 2)
!6512 = !DILocation(line: 936, column: 2, scope: !6506)
!6513 = !DILocalVariable(name: "is_hidden", scope: !6514, file: !3, line: 938, type: !6515)
!6514 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 936, column: 59)
!6515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!6516 = !DILocation(line: 938, column: 14, scope: !6514)
!6517 = !DILocation(line: 938, column: 39, scope: !6514)
!6518 = !DILocation(line: 938, column: 58, scope: !6514)
!6519 = !DILocation(line: 938, column: 27, scope: !6514)
!6520 = !DILocation(line: 938, column: 98, scope: !6514)
!6521 = !DILocation(line: 938, column: 26, scope: !6514)
!6522 = !DILocation(line: 939, column: 14, scope: !6514)
!6523 = !DILocation(line: 939, column: 23, scope: !6514)
!6524 = !DILocation(line: 939, column: 12, scope: !6514)
!6525 = !DILocation(line: 940, column: 50, scope: !6514)
!6526 = !DILocation(line: 940, column: 56, scope: !6514)
!6527 = !DILocation(line: 940, column: 65, scope: !6514)
!6528 = !DILocation(line: 940, column: 71, scope: !6514)
!6529 = !DILocation(line: 940, column: 3, scope: !6514)
!6530 = !DILocation(line: 941, column: 2, scope: !6514)
!6531 = !DILocation(line: 936, column: 49, scope: !6511)
!6532 = !DILocation(line: 936, column: 47, scope: !6511)
!6533 = !DILocation(line: 936, column: 2, scope: !6511)
!6534 = distinct !{!6534, !6512, !6535}
!6535 = !DILocation(line: 941, column: 2, scope: !6506)
!6536 = !DILocation(line: 947, column: 14, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 947, column: 6)
!6538 = !DILocation(line: 947, column: 31, scope: !6537)
!6539 = !DILocation(line: 947, column: 20, scope: !6537)
!6540 = !DILocation(line: 947, column: 6, scope: !6472)
!6541 = !DILocalVariable(name: "first", scope: !6542, file: !3, line: 948, type: !6133)
!6542 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 947, column: 37)
!6543 = !DILocation(line: 948, column: 26, scope: !6542)
!6544 = !DILocation(line: 948, column: 35, scope: !6542)
!6545 = !DILocation(line: 948, column: 40, scope: !6542)
!6546 = !DILocation(line: 948, column: 34, scope: !6542)
!6547 = !DILocation(line: 948, column: 55, scope: !6542)
!6548 = !DILocation(line: 948, column: 70, scope: !6542)
!6549 = !DILocalVariable(name: "island", scope: !6542, file: !3, line: 949, type: !6133)
!6550 = !DILocation(line: 949, column: 26, scope: !6542)
!6551 = !DILocalVariable(name: "isn", scope: !6542, file: !3, line: 949, type: !6133)
!6552 = !DILocation(line: 949, column: 35, scope: !6542)
!6553 = !DILocation(line: 951, column: 17, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 951, column: 3)
!6555 = !DILocation(line: 951, column: 15, scope: !6554)
!6556 = !DILocation(line: 951, column: 8, scope: !6554)
!6557 = !DILocation(line: 951, column: 24, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 951, column: 3)
!6559 = !DILocation(line: 951, column: 3, scope: !6554)
!6560 = !DILocation(line: 952, column: 11, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 951, column: 46)
!6562 = !DILocation(line: 952, column: 16, scope: !6561)
!6563 = !DILocation(line: 952, column: 10, scope: !6561)
!6564 = !DILocation(line: 952, column: 23, scope: !6561)
!6565 = !DILocation(line: 952, column: 31, scope: !6561)
!6566 = !DILocation(line: 952, column: 38, scope: !6561)
!6567 = !DILocation(line: 952, column: 46, scope: !6561)
!6568 = !DILocation(line: 952, column: 8, scope: !6561)
!6569 = !DILocation(line: 955, column: 8, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 955, column: 8)
!6571 = !DILocation(line: 955, column: 33, scope: !6570)
!6572 = !DILocation(line: 955, column: 8, scope: !6561)
!6573 = !DILocation(line: 956, column: 5, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 955, column: 42)
!6575 = !DILocation(line: 956, column: 13, scope: !6574)
!6576 = !DILocation(line: 956, column: 18, scope: !6574)
!6577 = !DILocation(line: 957, column: 10, scope: !6574)
!6578 = !DILocation(line: 958, column: 4, scope: !6574)
!6579 = !DILocation(line: 959, column: 3, scope: !6561)
!6580 = !DILocation(line: 951, column: 41, scope: !6558)
!6581 = !DILocation(line: 951, column: 39, scope: !6558)
!6582 = !DILocation(line: 951, column: 3, scope: !6558)
!6583 = distinct !{!6583, !6559, !6584}
!6584 = !DILocation(line: 959, column: 3, scope: !6554)
!6585 = !DILocation(line: 960, column: 2, scope: !6542)
!6586 = !DILocation(line: 963, column: 50, scope: !6472)
!6587 = !DILocation(line: 963, column: 2, scope: !6472)
!6588 = !DILocation(line: 966, column: 9, scope: !6472)
!6589 = !DILocation(line: 966, column: 2, scope: !6472)
!6590 = !DILocation(line: 967, column: 1, scope: !6472)
!6591 = distinct !DISubprogram(name: "join_groups_action_temp", scope: !3, file: !3, line: 1083, type: !6592, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{null, !741}
!6594 = !DILocalVariable(name: "act", arg: 1, scope: !6591, file: !3, line: 1083, type: !741)
!6595 = !DILocation(line: 1083, column: 46, scope: !6591)
!6596 = !DILocalVariable(name: "agrp", scope: !6591, file: !3, line: 1085, type: !551)
!6597 = !DILocation(line: 1085, column: 16, scope: !6591)
!6598 = !DILocation(line: 1087, column: 14, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 1087, column: 2)
!6600 = !DILocation(line: 1087, column: 19, scope: !6599)
!6601 = !DILocation(line: 1087, column: 26, scope: !6599)
!6602 = !DILocation(line: 1087, column: 12, scope: !6599)
!6603 = !DILocation(line: 1087, column: 7, scope: !6599)
!6604 = !DILocation(line: 1087, column: 33, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1087, column: 2)
!6606 = !DILocation(line: 1087, column: 2, scope: !6599)
!6607 = !DILocalVariable(name: "tempGroup", scope: !6608, file: !3, line: 1088, type: !559)
!6608 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1087, column: 58)
!6609 = !DILocation(line: 1088, column: 12, scope: !6608)
!6610 = !DILocation(line: 1091, column: 15, scope: !6608)
!6611 = !DILocation(line: 1091, column: 21, scope: !6608)
!6612 = !DILocation(line: 1092, column: 23, scope: !6608)
!6613 = !DILocation(line: 1092, column: 28, scope: !6608)
!6614 = !DILocation(line: 1092, column: 37, scope: !6608)
!6615 = !DILocation(line: 1092, column: 43, scope: !6608)
!6616 = !DILocation(line: 1092, column: 3, scope: !6608)
!6617 = !DILocation(line: 1093, column: 3, scope: !6608)
!6618 = !DILocation(line: 1093, column: 9, scope: !6608)
!6619 = !DILocation(line: 1093, column: 20, scope: !6608)
!6620 = !DILocation(line: 1096, column: 3, scope: !6608)
!6621 = !DILocation(line: 1096, column: 9, scope: !6608)
!6622 = !DILocation(line: 1096, column: 14, scope: !6608)
!6623 = !DILocation(line: 1102, column: 7, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 1102, column: 7)
!6625 = !DILocation(line: 1102, column: 13, scope: !6624)
!6626 = !DILocation(line: 1102, column: 18, scope: !6624)
!6627 = !DILocation(line: 1102, column: 7, scope: !6608)
!6628 = !DILocalVariable(name: "fcu", scope: !6629, file: !3, line: 1103, type: !587)
!6629 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 1102, column: 31)
!6630 = !DILocation(line: 1103, column: 12, scope: !6629)
!6631 = !DILocation(line: 1105, column: 15, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1105, column: 4)
!6633 = !DILocation(line: 1105, column: 21, scope: !6632)
!6634 = !DILocation(line: 1105, column: 30, scope: !6632)
!6635 = !DILocation(line: 1105, column: 13, scope: !6632)
!6636 = !DILocation(line: 1105, column: 9, scope: !6632)
!6637 = !DILocation(line: 1105, column: 37, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 1105, column: 4)
!6639 = !DILocation(line: 1105, column: 4, scope: !6632)
!6640 = !DILocation(line: 1106, column: 5, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1105, column: 59)
!6642 = !DILocation(line: 1106, column: 10, scope: !6641)
!6643 = !DILocation(line: 1106, column: 14, scope: !6641)
!6644 = !DILocation(line: 1107, column: 4, scope: !6641)
!6645 = !DILocation(line: 1105, column: 48, scope: !6638)
!6646 = !DILocation(line: 1105, column: 53, scope: !6638)
!6647 = !DILocation(line: 1105, column: 46, scope: !6638)
!6648 = !DILocation(line: 1105, column: 4, scope: !6638)
!6649 = distinct !{!6649, !6639, !6650}
!6650 = !DILocation(line: 1107, column: 4, scope: !6632)
!6651 = !DILocation(line: 1109, column: 17, scope: !6629)
!6652 = !DILocation(line: 1109, column: 22, scope: !6629)
!6653 = !DILocation(line: 1109, column: 30, scope: !6629)
!6654 = !DILocation(line: 1109, column: 4, scope: !6629)
!6655 = !DILocation(line: 1110, column: 4, scope: !6629)
!6656 = !DILocation(line: 1112, column: 2, scope: !6608)
!6657 = !DILocation(line: 1087, column: 46, scope: !6605)
!6658 = !DILocation(line: 1087, column: 52, scope: !6605)
!6659 = !DILocation(line: 1087, column: 44, scope: !6605)
!6660 = !DILocation(line: 1087, column: 2, scope: !6605)
!6661 = distinct !{!6661, !6606, !6662}
!6662 = !DILocation(line: 1112, column: 2, scope: !6599)
!6663 = !DILocation(line: 1113, column: 1, scope: !6591)
!6664 = distinct !DISubprogram(name: "rearrange_island_top", scope: !3, file: !3, line: 690, type: !6131, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6665 = !DILocalVariable(name: "list", arg: 1, scope: !6664, file: !3, line: 690, type: !1042)
!6666 = !DILocation(line: 690, column: 44, scope: !6664)
!6667 = !DILocalVariable(name: "island", arg: 2, scope: !6664, file: !3, line: 690, type: !6133)
!6668 = !DILocation(line: 690, column: 73, scope: !6664)
!6669 = !DILocation(line: 692, column: 26, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 692, column: 6)
!6671 = !DILocation(line: 692, column: 6, scope: !6670)
!6672 = !DILocation(line: 692, column: 6, scope: !6664)
!6673 = !DILocation(line: 694, column: 15, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 692, column: 35)
!6675 = !DILocation(line: 694, column: 21, scope: !6674)
!6676 = !DILocation(line: 694, column: 3, scope: !6674)
!6677 = !DILocation(line: 697, column: 24, scope: !6674)
!6678 = !DILocation(line: 697, column: 30, scope: !6674)
!6679 = !DILocation(line: 697, column: 36, scope: !6674)
!6680 = !DILocation(line: 697, column: 43, scope: !6674)
!6681 = !DILocation(line: 697, column: 3, scope: !6674)
!6682 = !DILocation(line: 699, column: 3, scope: !6674)
!6683 = !DILocation(line: 702, column: 2, scope: !6664)
!6684 = !DILocation(line: 703, column: 1, scope: !6664)
!6685 = distinct !DISubprogram(name: "rearrange_island_up", scope: !3, file: !3, line: 705, type: !6131, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6686 = !DILocalVariable(name: "list", arg: 1, scope: !6685, file: !3, line: 705, type: !1042)
!6687 = !DILocation(line: 705, column: 43, scope: !6685)
!6688 = !DILocalVariable(name: "island", arg: 2, scope: !6685, file: !3, line: 705, type: !6133)
!6689 = !DILocation(line: 705, column: 72, scope: !6685)
!6690 = !DILocation(line: 707, column: 26, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 707, column: 6)
!6692 = !DILocation(line: 707, column: 6, scope: !6691)
!6693 = !DILocation(line: 707, column: 6, scope: !6685)
!6694 = !DILocalVariable(name: "prev", scope: !6695, file: !3, line: 709, type: !6133)
!6695 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 707, column: 35)
!6696 = !DILocation(line: 709, column: 26, scope: !6695)
!6697 = !DILocation(line: 709, column: 33, scope: !6695)
!6698 = !DILocation(line: 709, column: 41, scope: !6695)
!6699 = !DILocation(line: 712, column: 3, scope: !6695)
!6700 = !DILocation(line: 712, column: 10, scope: !6695)
!6701 = !DILocation(line: 712, column: 15, scope: !6695)
!6702 = !DILocation(line: 712, column: 18, scope: !6695)
!6703 = !DILocation(line: 712, column: 24, scope: !6695)
!6704 = !DILocation(line: 712, column: 29, scope: !6695)
!6705 = !DILocation(line: 0, scope: !6695)
!6706 = !DILocation(line: 713, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 712, column: 54)
!6708 = !DILocation(line: 713, column: 17, scope: !6707)
!6709 = !DILocation(line: 713, column: 9, scope: !6707)
!6710 = distinct !{!6710, !6699, !6711}
!6711 = !DILocation(line: 714, column: 3, scope: !6695)
!6712 = !DILocation(line: 716, column: 7, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 716, column: 7)
!6714 = !DILocation(line: 716, column: 7, scope: !6695)
!6715 = !DILocation(line: 718, column: 16, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 716, column: 13)
!6717 = !DILocation(line: 718, column: 22, scope: !6716)
!6718 = !DILocation(line: 718, column: 4, scope: !6716)
!6719 = !DILocation(line: 721, column: 25, scope: !6716)
!6720 = !DILocation(line: 721, column: 31, scope: !6716)
!6721 = !DILocation(line: 721, column: 37, scope: !6716)
!6722 = !DILocation(line: 721, column: 4, scope: !6716)
!6723 = !DILocation(line: 723, column: 4, scope: !6716)
!6724 = !DILocation(line: 725, column: 2, scope: !6695)
!6725 = !DILocation(line: 727, column: 2, scope: !6685)
!6726 = !DILocation(line: 728, column: 1, scope: !6685)
!6727 = distinct !DISubprogram(name: "rearrange_island_down", scope: !3, file: !3, line: 730, type: !6131, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6728 = !DILocalVariable(name: "list", arg: 1, scope: !6727, file: !3, line: 730, type: !1042)
!6729 = !DILocation(line: 730, column: 45, scope: !6727)
!6730 = !DILocalVariable(name: "island", arg: 2, scope: !6727, file: !3, line: 730, type: !6133)
!6731 = !DILocation(line: 730, column: 74, scope: !6727)
!6732 = !DILocation(line: 732, column: 26, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 732, column: 6)
!6734 = !DILocation(line: 732, column: 6, scope: !6733)
!6735 = !DILocation(line: 732, column: 6, scope: !6727)
!6736 = !DILocalVariable(name: "next", scope: !6737, file: !3, line: 734, type: !6133)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 732, column: 35)
!6738 = !DILocation(line: 734, column: 26, scope: !6737)
!6739 = !DILocation(line: 734, column: 33, scope: !6737)
!6740 = !DILocation(line: 734, column: 41, scope: !6737)
!6741 = !DILocation(line: 737, column: 3, scope: !6737)
!6742 = !DILocation(line: 737, column: 10, scope: !6737)
!6743 = !DILocation(line: 737, column: 15, scope: !6737)
!6744 = !DILocation(line: 737, column: 18, scope: !6737)
!6745 = !DILocation(line: 737, column: 24, scope: !6737)
!6746 = !DILocation(line: 737, column: 29, scope: !6737)
!6747 = !DILocation(line: 0, scope: !6737)
!6748 = !DILocation(line: 738, column: 11, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 737, column: 54)
!6750 = !DILocation(line: 738, column: 17, scope: !6749)
!6751 = !DILocation(line: 738, column: 9, scope: !6749)
!6752 = distinct !{!6752, !6741, !6753}
!6753 = !DILocation(line: 739, column: 3, scope: !6737)
!6754 = !DILocation(line: 741, column: 7, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 741, column: 7)
!6756 = !DILocation(line: 741, column: 7, scope: !6737)
!6757 = !DILocation(line: 743, column: 9, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 743, column: 8)
!6759 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 741, column: 13)
!6760 = !DILocation(line: 743, column: 15, scope: !6758)
!6761 = !DILocation(line: 743, column: 20, scope: !6758)
!6762 = !DILocation(line: 743, column: 50, scope: !6758)
!6763 = !DILocation(line: 743, column: 8, scope: !6759)
!6764 = !DILocation(line: 745, column: 17, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 743, column: 56)
!6766 = !DILocation(line: 745, column: 23, scope: !6765)
!6767 = !DILocation(line: 745, column: 5, scope: !6765)
!6768 = !DILocation(line: 748, column: 25, scope: !6765)
!6769 = !DILocation(line: 748, column: 31, scope: !6765)
!6770 = !DILocation(line: 748, column: 37, scope: !6765)
!6771 = !DILocation(line: 748, column: 5, scope: !6765)
!6772 = !DILocation(line: 750, column: 5, scope: !6765)
!6773 = !DILocation(line: 752, column: 3, scope: !6759)
!6774 = !DILocation(line: 754, column: 2, scope: !6737)
!6775 = !DILocation(line: 756, column: 2, scope: !6727)
!6776 = !DILocation(line: 757, column: 1, scope: !6727)
!6777 = distinct !DISubprogram(name: "rearrange_island_bottom", scope: !3, file: !3, line: 759, type: !6131, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6778 = !DILocalVariable(name: "list", arg: 1, scope: !6777, file: !3, line: 759, type: !1042)
!6779 = !DILocation(line: 759, column: 47, scope: !6777)
!6780 = !DILocalVariable(name: "island", arg: 2, scope: !6777, file: !3, line: 759, type: !6133)
!6781 = !DILocation(line: 759, column: 76, scope: !6777)
!6782 = !DILocation(line: 761, column: 26, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 761, column: 6)
!6784 = !DILocation(line: 761, column: 6, scope: !6783)
!6785 = !DILocation(line: 761, column: 6, scope: !6777)
!6786 = !DILocalVariable(name: "last", scope: !6787, file: !3, line: 762, type: !6133)
!6787 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 761, column: 35)
!6788 = !DILocation(line: 762, column: 26, scope: !6787)
!6789 = !DILocation(line: 762, column: 33, scope: !6787)
!6790 = !DILocation(line: 762, column: 39, scope: !6787)
!6791 = !DILocation(line: 765, column: 15, scope: !6787)
!6792 = !DILocation(line: 765, column: 21, scope: !6787)
!6793 = !DILocation(line: 765, column: 3, scope: !6787)
!6794 = !DILocation(line: 768, column: 8, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 768, column: 7)
!6796 = !DILocation(line: 768, column: 14, scope: !6795)
!6797 = !DILocation(line: 768, column: 19, scope: !6795)
!6798 = !DILocation(line: 768, column: 49, scope: !6795)
!6799 = !DILocation(line: 768, column: 7, scope: !6787)
!6800 = !DILocation(line: 770, column: 16, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 768, column: 55)
!6802 = !DILocation(line: 770, column: 22, scope: !6801)
!6803 = !DILocation(line: 770, column: 4, scope: !6801)
!6804 = !DILocation(line: 771, column: 3, scope: !6801)
!6805 = !DILocation(line: 774, column: 25, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 772, column: 8)
!6807 = !DILocation(line: 774, column: 31, scope: !6806)
!6808 = !DILocation(line: 774, column: 37, scope: !6806)
!6809 = !DILocation(line: 774, column: 4, scope: !6806)
!6810 = !DILocation(line: 778, column: 3, scope: !6787)
!6811 = !DILocation(line: 781, column: 2, scope: !6777)
!6812 = !DILocation(line: 782, column: 1, scope: !6777)
!6813 = distinct !DISubprogram(name: "rearrange_island_ok", scope: !3, file: !3, line: 678, type: !6814, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!1643, !6133}
!6816 = !DILocalVariable(name: "island", arg: 1, scope: !6813, file: !3, line: 678, type: !6133)
!6817 = !DILocation(line: 678, column: 56, scope: !6813)
!6818 = !DILocation(line: 681, column: 6, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 681, column: 6)
!6820 = !DILocation(line: 681, column: 14, scope: !6819)
!6821 = !DILocation(line: 681, column: 19, scope: !6819)
!6822 = !DILocation(line: 681, column: 6, scope: !6813)
!6823 = !DILocation(line: 682, column: 3, scope: !6819)
!6824 = !DILocation(line: 685, column: 10, scope: !6813)
!6825 = !DILocation(line: 685, column: 18, scope: !6813)
!6826 = !DILocation(line: 685, column: 23, scope: !6813)
!6827 = !DILocation(line: 685, column: 50, scope: !6813)
!6828 = !DILocation(line: 685, column: 55, scope: !6813)
!6829 = !DILocation(line: 685, column: 63, scope: !6813)
!6830 = !DILocation(line: 685, column: 68, scope: !6813)
!6831 = !DILocation(line: 685, column: 53, scope: !6813)
!6832 = !DILocation(line: 0, scope: !6813)
!6833 = !DILocation(line: 685, column: 9, scope: !6813)
!6834 = !DILocation(line: 685, column: 2, scope: !6813)
!6835 = !DILocation(line: 686, column: 1, scope: !6813)
!6836 = distinct !DISubprogram(name: "rearrange_animchannel_add_to_islands", scope: !3, file: !3, line: 815, type: !6837, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{null, !1042, !1042, !6488, !2737, !6515}
!6839 = !DILocalVariable(name: "islands", arg: 1, scope: !6836, file: !3, line: 815, type: !1042)
!6840 = !DILocation(line: 815, column: 60, scope: !6836)
!6841 = !DILocalVariable(name: "srcList", arg: 2, scope: !6836, file: !3, line: 815, type: !1042)
!6842 = !DILocation(line: 815, column: 79, scope: !6836)
!6843 = !DILocalVariable(name: "channel", arg: 3, scope: !6836, file: !3, line: 816, type: !6488)
!6844 = !DILocation(line: 816, column: 56, scope: !6836)
!6845 = !DILocalVariable(name: "type", arg: 4, scope: !6836, file: !3, line: 816, type: !2737)
!6846 = !DILocation(line: 816, column: 83, scope: !6836)
!6847 = !DILocalVariable(name: "is_hidden", arg: 5, scope: !6836, file: !3, line: 817, type: !6515)
!6848 = !DILocation(line: 817, column: 61, scope: !6836)
!6849 = !DILocalVariable(name: "island", scope: !6836, file: !3, line: 819, type: !6133)
!6850 = !DILocation(line: 819, column: 25, scope: !6836)
!6851 = !DILocation(line: 819, column: 34, scope: !6836)
!6852 = !DILocation(line: 819, column: 43, scope: !6836)
!6853 = !DILocalVariable(name: "is_sel", scope: !6836, file: !3, line: 820, type: !1643)
!6854 = !DILocation(line: 820, column: 7, scope: !6836)
!6855 = !DILocalVariable(name: "is_untouchable", scope: !6836, file: !3, line: 820, type: !1643)
!6856 = !DILocation(line: 820, column: 23, scope: !6836)
!6857 = !DILocation(line: 823, column: 10, scope: !6836)
!6858 = !DILocation(line: 823, column: 2, scope: !6836)
!6859 = !DILocalVariable(name: "agrp", scope: !6860, file: !3, line: 826, type: !551)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 825, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 823, column: 16)
!6862 = !DILocation(line: 826, column: 18, scope: !6860)
!6863 = !DILocation(line: 826, column: 41, scope: !6860)
!6864 = !DILocation(line: 826, column: 25, scope: !6860)
!6865 = !DILocation(line: 828, column: 13, scope: !6860)
!6866 = !DILocation(line: 828, column: 11, scope: !6860)
!6867 = !DILocation(line: 829, column: 22, scope: !6860)
!6868 = !DILocation(line: 829, column: 28, scope: !6860)
!6869 = !DILocation(line: 829, column: 33, scope: !6860)
!6870 = !DILocation(line: 829, column: 46, scope: !6860)
!6871 = !DILocation(line: 829, column: 21, scope: !6860)
!6872 = !DILocation(line: 829, column: 19, scope: !6860)
!6873 = !DILocation(line: 830, column: 4, scope: !6860)
!6874 = !DILocalVariable(name: "fcu", scope: !6875, file: !3, line: 834, type: !587)
!6875 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 833, column: 3)
!6876 = !DILocation(line: 834, column: 12, scope: !6875)
!6877 = !DILocation(line: 834, column: 28, scope: !6875)
!6878 = !DILocation(line: 834, column: 18, scope: !6875)
!6879 = !DILocation(line: 836, column: 13, scope: !6875)
!6880 = !DILocation(line: 836, column: 11, scope: !6875)
!6881 = !DILocation(line: 837, column: 4, scope: !6875)
!6882 = !DILocalVariable(name: "nlt", scope: !6883, file: !3, line: 841, type: !661)
!6883 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 840, column: 3)
!6884 = !DILocation(line: 841, column: 14, scope: !6883)
!6885 = !DILocation(line: 841, column: 32, scope: !6883)
!6886 = !DILocation(line: 841, column: 20, scope: !6883)
!6887 = !DILocation(line: 843, column: 13, scope: !6883)
!6888 = !DILocation(line: 843, column: 11, scope: !6883)
!6889 = !DILocation(line: 844, column: 4, scope: !6883)
!6890 = !DILocation(line: 847, column: 101, scope: !6861)
!6891 = !DILocation(line: 847, column: 4, scope: !6861)
!6892 = !DILocation(line: 848, column: 4, scope: !6861)
!6893 = !DILocation(line: 853, column: 7, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 853, column: 6)
!6895 = !DILocation(line: 853, column: 14, scope: !6894)
!6896 = !DILocation(line: 853, column: 23, scope: !6894)
!6897 = !DILocation(line: 855, column: 8, scope: !6894)
!6898 = !DILocation(line: 855, column: 16, scope: !6894)
!6899 = !DILocation(line: 855, column: 21, scope: !6894)
!6900 = !DILocation(line: 855, column: 48, scope: !6894)
!6901 = !DILocation(line: 855, column: 54, scope: !6894)
!6902 = !DILocation(line: 857, column: 7, scope: !6894)
!6903 = !DILocation(line: 857, column: 14, scope: !6894)
!6904 = !DILocation(line: 857, column: 20, scope: !6894)
!6905 = !DILocation(line: 859, column: 8, scope: !6894)
!6906 = !DILocation(line: 859, column: 16, scope: !6894)
!6907 = !DILocation(line: 859, column: 21, scope: !6894)
!6908 = !DILocation(line: 859, column: 49, scope: !6894)
!6909 = !DILocation(line: 859, column: 46, scope: !6894)
!6910 = !DILocation(line: 853, column: 6, scope: !6836)
!6911 = !DILocation(line: 863, column: 12, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 861, column: 2)
!6913 = !DILocation(line: 863, column: 10, scope: !6912)
!6914 = !DILocation(line: 864, column: 15, scope: !6912)
!6915 = !DILocation(line: 864, column: 24, scope: !6912)
!6916 = !DILocation(line: 864, column: 3, scope: !6912)
!6917 = !DILocation(line: 866, column: 7, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 866, column: 7)
!6919 = !DILocation(line: 866, column: 7, scope: !6912)
!6920 = !DILocation(line: 867, column: 4, scope: !6918)
!6921 = !DILocation(line: 867, column: 12, scope: !6918)
!6922 = !DILocation(line: 867, column: 17, scope: !6918)
!6923 = !DILocation(line: 868, column: 7, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 868, column: 7)
!6925 = !DILocation(line: 868, column: 7, scope: !6912)
!6926 = !DILocation(line: 869, column: 4, scope: !6924)
!6927 = !DILocation(line: 869, column: 12, scope: !6924)
!6928 = !DILocation(line: 869, column: 17, scope: !6924)
!6929 = !DILocation(line: 870, column: 7, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 870, column: 7)
!6931 = !DILocation(line: 870, column: 7, scope: !6912)
!6932 = !DILocation(line: 871, column: 4, scope: !6930)
!6933 = !DILocation(line: 871, column: 12, scope: !6930)
!6934 = !DILocation(line: 871, column: 17, scope: !6930)
!6935 = !DILocation(line: 872, column: 2, scope: !6912)
!6936 = !DILocation(line: 875, column: 14, scope: !6836)
!6937 = !DILocation(line: 875, column: 23, scope: !6836)
!6938 = !DILocation(line: 875, column: 2, scope: !6836)
!6939 = !DILocation(line: 876, column: 15, scope: !6836)
!6940 = !DILocation(line: 876, column: 23, scope: !6836)
!6941 = !DILocation(line: 876, column: 33, scope: !6836)
!6942 = !DILocation(line: 876, column: 2, scope: !6836)
!6943 = !DILocation(line: 877, column: 1, scope: !6836)
!6944 = distinct !DISubprogram(name: "rearrange_animchannel_flatten_islands", scope: !3, file: !3, line: 880, type: !6945, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{null, !1042, !1042}
!6947 = !DILocalVariable(name: "islands", arg: 1, scope: !6944, file: !3, line: 880, type: !1042)
!6948 = !DILocation(line: 880, column: 61, scope: !6944)
!6949 = !DILocalVariable(name: "srcList", arg: 2, scope: !6944, file: !3, line: 880, type: !1042)
!6950 = !DILocation(line: 880, column: 80, scope: !6944)
!6951 = !DILocalVariable(name: "island", scope: !6944, file: !3, line: 882, type: !6133)
!6952 = !DILocation(line: 882, column: 25, scope: !6944)
!6953 = !DILocalVariable(name: "isn", scope: !6944, file: !3, line: 882, type: !6133)
!6954 = !DILocation(line: 882, column: 34, scope: !6944)
!6955 = !DILocation(line: 888, column: 16, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 888, column: 2)
!6957 = !DILocation(line: 888, column: 25, scope: !6956)
!6958 = !DILocation(line: 888, column: 14, scope: !6956)
!6959 = !DILocation(line: 888, column: 7, scope: !6956)
!6960 = !DILocation(line: 888, column: 32, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 888, column: 2)
!6962 = !DILocation(line: 888, column: 2, scope: !6956)
!6963 = !DILocation(line: 889, column: 9, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 888, column: 54)
!6965 = !DILocation(line: 889, column: 17, scope: !6964)
!6966 = !DILocation(line: 889, column: 7, scope: !6964)
!6967 = !DILocation(line: 892, column: 22, scope: !6964)
!6968 = !DILocation(line: 892, column: 32, scope: !6964)
!6969 = !DILocation(line: 892, column: 40, scope: !6964)
!6970 = !DILocation(line: 892, column: 3, scope: !6964)
!6971 = !DILocation(line: 893, column: 17, scope: !6964)
!6972 = !DILocation(line: 893, column: 26, scope: !6964)
!6973 = !DILocation(line: 893, column: 3, scope: !6964)
!6974 = !DILocation(line: 894, column: 2, scope: !6964)
!6975 = !DILocation(line: 888, column: 49, scope: !6961)
!6976 = !DILocation(line: 888, column: 47, scope: !6961)
!6977 = !DILocation(line: 888, column: 2, scope: !6961)
!6978 = distinct !{!6978, !6962, !6979}
!6979 = !DILocation(line: 894, column: 2, scope: !6956)
!6980 = !DILocation(line: 895, column: 1, scope: !6944)
!6981 = distinct !DISubprogram(name: "animchannels_expand_exec", scope: !3, file: !3, line: 1987, type: !4371, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!6982 = !DILocalVariable(name: "C", arg: 1, scope: !6981, file: !3, line: 1987, type: !4373)
!6983 = !DILocation(line: 1987, column: 47, scope: !6981)
!6984 = !DILocalVariable(name: "op", arg: 2, scope: !6981, file: !3, line: 1987, type: !4376)
!6985 = !DILocation(line: 1987, column: 62, scope: !6981)
!6986 = !DILocalVariable(name: "ac", scope: !6981, file: !3, line: 1989, type: !2628)
!6987 = !DILocation(line: 1989, column: 15, scope: !6981)
!6988 = !DILocalVariable(name: "onlysel", scope: !6981, file: !3, line: 1990, type: !1643)
!6989 = !DILocation(line: 1990, column: 7, scope: !6981)
!6990 = !DILocation(line: 1993, column: 32, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 1993, column: 6)
!6992 = !DILocation(line: 1993, column: 6, scope: !6991)
!6993 = !DILocation(line: 1993, column: 40, scope: !6991)
!6994 = !DILocation(line: 1993, column: 6, scope: !6981)
!6995 = !DILocation(line: 1994, column: 3, scope: !6991)
!6996 = !DILocation(line: 1997, column: 22, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 1997, column: 6)
!6998 = !DILocation(line: 1997, column: 26, scope: !6997)
!6999 = !DILocation(line: 1997, column: 6, scope: !6997)
!7000 = !DILocation(line: 1997, column: 6, scope: !6981)
!7001 = !DILocation(line: 1998, column: 11, scope: !6997)
!7002 = !DILocation(line: 1998, column: 3, scope: !6997)
!7003 = !DILocation(line: 2001, column: 76, scope: !6981)
!7004 = !DILocation(line: 2001, column: 2, scope: !6981)
!7005 = !DILocation(line: 2004, column: 24, scope: !6981)
!7006 = !DILocation(line: 2004, column: 2, scope: !6981)
!7007 = !DILocation(line: 2006, column: 2, scope: !6981)
!7008 = !DILocation(line: 2007, column: 1, scope: !6981)
!7009 = distinct !DISubprogram(name: "animchannels_collapse_exec", scope: !3, file: !3, line: 2029, type: !4371, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7010 = !DILocalVariable(name: "C", arg: 1, scope: !7009, file: !3, line: 2029, type: !4373)
!7011 = !DILocation(line: 2029, column: 49, scope: !7009)
!7012 = !DILocalVariable(name: "op", arg: 2, scope: !7009, file: !3, line: 2029, type: !4376)
!7013 = !DILocation(line: 2029, column: 64, scope: !7009)
!7014 = !DILocalVariable(name: "ac", scope: !7009, file: !3, line: 2031, type: !2628)
!7015 = !DILocation(line: 2031, column: 15, scope: !7009)
!7016 = !DILocalVariable(name: "onlysel", scope: !7009, file: !3, line: 2032, type: !1643)
!7017 = !DILocation(line: 2032, column: 7, scope: !7009)
!7018 = !DILocation(line: 2035, column: 32, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2035, column: 6)
!7020 = !DILocation(line: 2035, column: 6, scope: !7019)
!7021 = !DILocation(line: 2035, column: 40, scope: !7019)
!7022 = !DILocation(line: 2035, column: 6, scope: !7009)
!7023 = !DILocation(line: 2036, column: 3, scope: !7019)
!7024 = !DILocation(line: 2039, column: 22, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2039, column: 6)
!7026 = !DILocation(line: 2039, column: 26, scope: !7025)
!7027 = !DILocation(line: 2039, column: 6, scope: !7025)
!7028 = !DILocation(line: 2039, column: 6, scope: !7009)
!7029 = !DILocation(line: 2040, column: 11, scope: !7025)
!7030 = !DILocation(line: 2040, column: 3, scope: !7025)
!7031 = !DILocation(line: 2043, column: 78, scope: !7009)
!7032 = !DILocation(line: 2043, column: 2, scope: !7009)
!7033 = !DILocation(line: 2046, column: 24, scope: !7009)
!7034 = !DILocation(line: 2046, column: 2, scope: !7009)
!7035 = !DILocation(line: 2048, column: 2, scope: !7009)
!7036 = !DILocation(line: 2049, column: 1, scope: !7009)
!7037 = distinct !DISubprogram(name: "animchannels_visibility_toggle_exec", scope: !3, file: !3, line: 1684, type: !4371, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7038 = !DILocalVariable(name: "C", arg: 1, scope: !7037, file: !3, line: 1684, type: !4373)
!7039 = !DILocation(line: 1684, column: 58, scope: !7037)
!7040 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7037, file: !3, line: 1684, type: !4376)
!7041 = !DILocation(line: 1684, column: 73, scope: !7037)
!7042 = !DILocalVariable(name: "ac", scope: !7037, file: !3, line: 1686, type: !2628)
!7043 = !DILocation(line: 1686, column: 15, scope: !7037)
!7044 = !DILocalVariable(name: "anim_data", scope: !7037, file: !3, line: 1687, type: !559)
!7045 = !DILocation(line: 1687, column: 11, scope: !7037)
!7046 = !DILocalVariable(name: "all_data", scope: !7037, file: !3, line: 1688, type: !559)
!7047 = !DILocation(line: 1688, column: 11, scope: !7037)
!7048 = !DILocalVariable(name: "ale", scope: !7037, file: !3, line: 1689, type: !2754)
!7049 = !DILocation(line: 1689, column: 17, scope: !7037)
!7050 = !DILocalVariable(name: "filter", scope: !7037, file: !3, line: 1690, type: !20)
!7051 = !DILocation(line: 1690, column: 6, scope: !7037)
!7052 = !DILocalVariable(name: "vis", scope: !7037, file: !3, line: 1691, type: !585)
!7053 = !DILocation(line: 1691, column: 8, scope: !7037)
!7054 = !DILocation(line: 1694, column: 32, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 1694, column: 6)
!7056 = !DILocation(line: 1694, column: 6, scope: !7055)
!7057 = !DILocation(line: 1694, column: 40, scope: !7055)
!7058 = !DILocation(line: 1694, column: 6, scope: !7037)
!7059 = !DILocation(line: 1695, column: 3, scope: !7055)
!7060 = !DILocation(line: 1700, column: 9, scope: !7037)
!7061 = !DILocation(line: 1701, column: 39, scope: !7037)
!7062 = !DILocation(line: 1701, column: 50, scope: !7037)
!7063 = !DILocation(line: 1701, column: 59, scope: !7037)
!7064 = !DILocation(line: 1701, column: 56, scope: !7037)
!7065 = !DILocation(line: 1701, column: 2, scope: !7037)
!7066 = !DILocation(line: 1706, column: 9, scope: !7037)
!7067 = !DILocation(line: 1707, column: 40, scope: !7037)
!7068 = !DILocation(line: 1707, column: 51, scope: !7037)
!7069 = !DILocation(line: 1707, column: 60, scope: !7037)
!7070 = !DILocation(line: 1707, column: 57, scope: !7037)
!7071 = !DILocation(line: 1707, column: 2, scope: !7037)
!7072 = !DILocation(line: 1710, column: 23, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 1710, column: 2)
!7074 = !DILocation(line: 1710, column: 13, scope: !7073)
!7075 = !DILocation(line: 1710, column: 11, scope: !7073)
!7076 = !DILocation(line: 1710, column: 7, scope: !7073)
!7077 = !DILocation(line: 1710, column: 30, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1710, column: 2)
!7079 = !DILocation(line: 1710, column: 2, scope: !7073)
!7080 = !DILocation(line: 1712, column: 37, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1712, column: 7)
!7082 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1710, column: 52)
!7083 = !DILocation(line: 1712, column: 7, scope: !7081)
!7084 = !DILocation(line: 1712, column: 7, scope: !7082)
!7085 = !DILocation(line: 1713, column: 8, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1712, column: 69)
!7087 = !DILocation(line: 1714, column: 4, scope: !7086)
!7088 = !DILocation(line: 1716, column: 2, scope: !7082)
!7089 = !DILocation(line: 1710, column: 41, scope: !7078)
!7090 = !DILocation(line: 1710, column: 46, scope: !7078)
!7091 = !DILocation(line: 1710, column: 39, scope: !7078)
!7092 = !DILocation(line: 1710, column: 2, scope: !7078)
!7093 = distinct !{!7093, !7079, !7094}
!7094 = !DILocation(line: 1716, column: 2, scope: !7073)
!7095 = !DILocation(line: 1719, column: 23, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 1719, column: 2)
!7097 = !DILocation(line: 1719, column: 13, scope: !7096)
!7098 = !DILocation(line: 1719, column: 11, scope: !7096)
!7099 = !DILocation(line: 1719, column: 7, scope: !7096)
!7100 = !DILocation(line: 1719, column: 30, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 1719, column: 2)
!7102 = !DILocation(line: 1719, column: 2, scope: !7096)
!7103 = !DILocation(line: 1722, column: 7, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 1722, column: 7)
!7105 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 1719, column: 52)
!7106 = !DILocation(line: 1722, column: 12, scope: !7104)
!7107 = !DILocation(line: 1722, column: 17, scope: !7104)
!7108 = !DILocation(line: 1722, column: 7, scope: !7105)
!7109 = !DILocation(line: 1723, column: 4, scope: !7104)
!7110 = !DILocation(line: 1726, column: 33, scope: !7105)
!7111 = !DILocation(line: 1726, column: 64, scope: !7105)
!7112 = !DILocation(line: 1726, column: 3, scope: !7105)
!7113 = !DILocation(line: 1729, column: 52, scope: !7105)
!7114 = !DILocation(line: 1729, column: 84, scope: !7105)
!7115 = !DILocation(line: 1729, column: 88, scope: !7105)
!7116 = !DILocation(line: 1729, column: 3, scope: !7105)
!7117 = !DILocation(line: 1730, column: 2, scope: !7105)
!7118 = !DILocation(line: 1719, column: 41, scope: !7101)
!7119 = !DILocation(line: 1719, column: 46, scope: !7101)
!7120 = !DILocation(line: 1719, column: 39, scope: !7101)
!7121 = !DILocation(line: 1719, column: 2, scope: !7101)
!7122 = distinct !{!7122, !7102, !7123}
!7123 = !DILocation(line: 1730, column: 2, scope: !7096)
!7124 = !DILocation(line: 1733, column: 2, scope: !7037)
!7125 = !DILocation(line: 1734, column: 2, scope: !7037)
!7126 = !DILocation(line: 1737, column: 24, scope: !7037)
!7127 = !DILocation(line: 1737, column: 2, scope: !7037)
!7128 = !DILocation(line: 1739, column: 2, scope: !7037)
!7129 = !DILocation(line: 1740, column: 1, scope: !7037)
!7130 = distinct !DISubprogram(name: "animchannels_visibility_set_exec", scope: !3, file: !3, line: 1591, type: !4371, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7131 = !DILocalVariable(name: "C", arg: 1, scope: !7130, file: !3, line: 1591, type: !4373)
!7132 = !DILocation(line: 1591, column: 55, scope: !7130)
!7133 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7130, file: !3, line: 1591, type: !4376)
!7134 = !DILocation(line: 1591, column: 70, scope: !7130)
!7135 = !DILocalVariable(name: "ac", scope: !7130, file: !3, line: 1593, type: !2628)
!7136 = !DILocation(line: 1593, column: 15, scope: !7130)
!7137 = !DILocalVariable(name: "anim_data", scope: !7130, file: !3, line: 1594, type: !559)
!7138 = !DILocation(line: 1594, column: 11, scope: !7130)
!7139 = !DILocalVariable(name: "all_data", scope: !7130, file: !3, line: 1595, type: !559)
!7140 = !DILocation(line: 1595, column: 11, scope: !7130)
!7141 = !DILocalVariable(name: "ale", scope: !7130, file: !3, line: 1596, type: !2754)
!7142 = !DILocation(line: 1596, column: 17, scope: !7130)
!7143 = !DILocalVariable(name: "filter", scope: !7130, file: !3, line: 1597, type: !20)
!7144 = !DILocation(line: 1597, column: 6, scope: !7130)
!7145 = !DILocation(line: 1600, column: 32, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 1600, column: 6)
!7147 = !DILocation(line: 1600, column: 6, scope: !7146)
!7148 = !DILocation(line: 1600, column: 40, scope: !7146)
!7149 = !DILocation(line: 1600, column: 6, scope: !7130)
!7150 = !DILocation(line: 1601, column: 3, scope: !7146)
!7151 = !DILocation(line: 1606, column: 9, scope: !7130)
!7152 = !DILocation(line: 1607, column: 39, scope: !7130)
!7153 = !DILocation(line: 1607, column: 50, scope: !7130)
!7154 = !DILocation(line: 1607, column: 59, scope: !7130)
!7155 = !DILocation(line: 1607, column: 56, scope: !7130)
!7156 = !DILocation(line: 1607, column: 2, scope: !7130)
!7157 = !DILocation(line: 1616, column: 10, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 1616, column: 6)
!7159 = !DILocation(line: 1616, column: 7, scope: !7158)
!7160 = !DILocation(line: 1616, column: 20, scope: !7158)
!7161 = !DILocation(line: 1616, column: 34, scope: !7158)
!7162 = !DILocation(line: 1616, column: 41, scope: !7158)
!7163 = !DILocation(line: 1616, column: 38, scope: !7158)
!7164 = !DILocation(line: 1616, column: 52, scope: !7158)
!7165 = !DILocation(line: 1616, column: 6, scope: !7130)
!7166 = !DILocation(line: 1618, column: 10, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1616, column: 75)
!7168 = !DILocation(line: 1619, column: 2, scope: !7167)
!7169 = !DILocation(line: 1622, column: 10, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1620, column: 7)
!7171 = !DILocation(line: 1624, column: 40, scope: !7130)
!7172 = !DILocation(line: 1624, column: 51, scope: !7130)
!7173 = !DILocation(line: 1624, column: 60, scope: !7130)
!7174 = !DILocation(line: 1624, column: 57, scope: !7130)
!7175 = !DILocation(line: 1624, column: 2, scope: !7130)
!7176 = !DILocation(line: 1626, column: 23, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 1626, column: 2)
!7178 = !DILocation(line: 1626, column: 13, scope: !7177)
!7179 = !DILocation(line: 1626, column: 11, scope: !7177)
!7180 = !DILocation(line: 1626, column: 7, scope: !7177)
!7181 = !DILocation(line: 1626, column: 30, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1626, column: 2)
!7183 = !DILocation(line: 1626, column: 2, scope: !7177)
!7184 = !DILocation(line: 1628, column: 33, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1626, column: 52)
!7186 = !DILocation(line: 1628, column: 3, scope: !7185)
!7187 = !DILocation(line: 1633, column: 52, scope: !7185)
!7188 = !DILocation(line: 1633, column: 3, scope: !7185)
!7189 = !DILocation(line: 1634, column: 2, scope: !7185)
!7190 = !DILocation(line: 1626, column: 41, scope: !7182)
!7191 = !DILocation(line: 1626, column: 46, scope: !7182)
!7192 = !DILocation(line: 1626, column: 39, scope: !7182)
!7193 = !DILocation(line: 1626, column: 2, scope: !7182)
!7194 = distinct !{!7194, !7183, !7195}
!7195 = !DILocation(line: 1634, column: 2, scope: !7177)
!7196 = !DILocation(line: 1636, column: 2, scope: !7130)
!7197 = !DILocation(line: 1639, column: 9, scope: !7130)
!7198 = !DILocation(line: 1640, column: 40, scope: !7130)
!7199 = !DILocation(line: 1640, column: 51, scope: !7130)
!7200 = !DILocation(line: 1640, column: 60, scope: !7130)
!7201 = !DILocation(line: 1640, column: 57, scope: !7130)
!7202 = !DILocation(line: 1640, column: 2, scope: !7130)
!7203 = !DILocation(line: 1642, column: 23, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 1642, column: 2)
!7205 = !DILocation(line: 1642, column: 13, scope: !7204)
!7206 = !DILocation(line: 1642, column: 11, scope: !7204)
!7207 = !DILocation(line: 1642, column: 7, scope: !7204)
!7208 = !DILocation(line: 1642, column: 30, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1642, column: 2)
!7210 = !DILocation(line: 1642, column: 2, scope: !7204)
!7211 = !DILocation(line: 1645, column: 7, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 1645, column: 7)
!7213 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 1642, column: 52)
!7214 = !DILocation(line: 1645, column: 12, scope: !7212)
!7215 = !DILocation(line: 1645, column: 17, scope: !7212)
!7216 = !DILocation(line: 1645, column: 7, scope: !7213)
!7217 = !DILocation(line: 1646, column: 4, scope: !7212)
!7218 = !DILocation(line: 1649, column: 33, scope: !7213)
!7219 = !DILocation(line: 1649, column: 3, scope: !7213)
!7220 = !DILocation(line: 1652, column: 52, scope: !7213)
!7221 = !DILocation(line: 1652, column: 3, scope: !7213)
!7222 = !DILocation(line: 1653, column: 2, scope: !7213)
!7223 = !DILocation(line: 1642, column: 41, scope: !7209)
!7224 = !DILocation(line: 1642, column: 46, scope: !7209)
!7225 = !DILocation(line: 1642, column: 39, scope: !7209)
!7226 = !DILocation(line: 1642, column: 2, scope: !7209)
!7227 = distinct !{!7227, !7210, !7228}
!7228 = !DILocation(line: 1653, column: 2, scope: !7204)
!7229 = !DILocation(line: 1655, column: 2, scope: !7130)
!7230 = !DILocation(line: 1656, column: 2, scope: !7130)
!7231 = !DILocation(line: 1660, column: 24, scope: !7130)
!7232 = !DILocation(line: 1660, column: 2, scope: !7130)
!7233 = !DILocation(line: 1662, column: 2, scope: !7130)
!7234 = !DILocation(line: 1663, column: 1, scope: !7130)
!7235 = distinct !DISubprogram(name: "animchannels_enable_exec", scope: !3, file: !3, line: 2194, type: !4371, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7236 = !DILocalVariable(name: "C", arg: 1, scope: !7235, file: !3, line: 2194, type: !4373)
!7237 = !DILocation(line: 2194, column: 47, scope: !7235)
!7238 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7235, file: !3, line: 2194, type: !4376)
!7239 = !DILocation(line: 2194, column: 62, scope: !7235)
!7240 = !DILocalVariable(name: "ac", scope: !7235, file: !3, line: 2196, type: !2628)
!7241 = !DILocation(line: 2196, column: 15, scope: !7235)
!7242 = !DILocalVariable(name: "anim_data", scope: !7235, file: !3, line: 2198, type: !559)
!7243 = !DILocation(line: 2198, column: 11, scope: !7235)
!7244 = !DILocalVariable(name: "ale", scope: !7235, file: !3, line: 2199, type: !2754)
!7245 = !DILocation(line: 2199, column: 17, scope: !7235)
!7246 = !DILocalVariable(name: "filter", scope: !7235, file: !3, line: 2200, type: !20)
!7247 = !DILocation(line: 2200, column: 6, scope: !7235)
!7248 = !DILocation(line: 2203, column: 32, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2203, column: 6)
!7250 = !DILocation(line: 2203, column: 6, scope: !7249)
!7251 = !DILocation(line: 2203, column: 40, scope: !7249)
!7252 = !DILocation(line: 2203, column: 6, scope: !7235)
!7253 = !DILocation(line: 2204, column: 3, scope: !7249)
!7254 = !DILocation(line: 2207, column: 9, scope: !7235)
!7255 = !DILocation(line: 2208, column: 40, scope: !7235)
!7256 = !DILocation(line: 2208, column: 51, scope: !7235)
!7257 = !DILocation(line: 2208, column: 60, scope: !7235)
!7258 = !DILocation(line: 2208, column: 57, scope: !7235)
!7259 = !DILocation(line: 2208, column: 2, scope: !7235)
!7260 = !DILocation(line: 2211, column: 23, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2211, column: 2)
!7262 = !DILocation(line: 2211, column: 13, scope: !7261)
!7263 = !DILocation(line: 2211, column: 11, scope: !7261)
!7264 = !DILocation(line: 2211, column: 7, scope: !7261)
!7265 = !DILocation(line: 2211, column: 30, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2211, column: 2)
!7267 = !DILocation(line: 2211, column: 2, scope: !7261)
!7268 = !DILocalVariable(name: "fcu", scope: !7269, file: !3, line: 2212, type: !587)
!7269 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2211, column: 52)
!7270 = !DILocation(line: 2212, column: 11, scope: !7269)
!7271 = !DILocation(line: 2212, column: 27, scope: !7269)
!7272 = !DILocation(line: 2212, column: 32, scope: !7269)
!7273 = !DILocation(line: 2212, column: 17, scope: !7269)
!7274 = !DILocation(line: 2215, column: 3, scope: !7269)
!7275 = !DILocation(line: 2215, column: 8, scope: !7269)
!7276 = !DILocation(line: 2215, column: 13, scope: !7269)
!7277 = !DILocation(line: 2218, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 2218, column: 7)
!7279 = !DILocation(line: 2218, column: 12, scope: !7278)
!7280 = !DILocation(line: 2218, column: 7, scope: !7269)
!7281 = !DILocation(line: 2219, column: 4, scope: !7278)
!7282 = !DILocation(line: 2219, column: 9, scope: !7278)
!7283 = !DILocation(line: 2219, column: 17, scope: !7278)
!7284 = !DILocation(line: 2219, column: 22, scope: !7278)
!7285 = !DILocation(line: 2222, column: 3, scope: !7269)
!7286 = !DILocation(line: 2222, column: 8, scope: !7269)
!7287 = !DILocation(line: 2222, column: 15, scope: !7269)
!7288 = !DILocation(line: 2223, column: 2, scope: !7269)
!7289 = !DILocation(line: 2211, column: 41, scope: !7266)
!7290 = !DILocation(line: 2211, column: 46, scope: !7266)
!7291 = !DILocation(line: 2211, column: 39, scope: !7266)
!7292 = !DILocation(line: 2211, column: 2, scope: !7266)
!7293 = distinct !{!7293, !7267, !7294}
!7294 = !DILocation(line: 2223, column: 2, scope: !7261)
!7295 = !DILocation(line: 2225, column: 2, scope: !7235)
!7296 = !DILocation(line: 2226, column: 2, scope: !7235)
!7297 = !DILocation(line: 2229, column: 24, scope: !7235)
!7298 = !DILocation(line: 2229, column: 2, scope: !7235)
!7299 = !DILocation(line: 2231, column: 2, scope: !7235)
!7300 = !DILocation(line: 2232, column: 1, scope: !7235)
!7301 = distinct !DISubprogram(name: "animchannels_enable_poll", scope: !3, file: !3, line: 2178, type: !4408, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7302 = !DILocalVariable(name: "C", arg: 1, scope: !7301, file: !3, line: 2178, type: !4373)
!7303 = !DILocation(line: 2178, column: 47, scope: !7301)
!7304 = !DILocalVariable(name: "sa", scope: !7301, file: !3, line: 2180, type: !4413)
!7305 = !DILocation(line: 2180, column: 11, scope: !7301)
!7306 = !DILocation(line: 2180, column: 28, scope: !7301)
!7307 = !DILocation(line: 2180, column: 16, scope: !7301)
!7308 = !DILocation(line: 2184, column: 6, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 2184, column: 6)
!7310 = !DILocation(line: 2184, column: 6, scope: !7301)
!7311 = !DILocation(line: 2185, column: 3, scope: !7309)
!7312 = !DILocation(line: 2188, column: 6, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 2188, column: 6)
!7314 = !DILocation(line: 2188, column: 51, scope: !7313)
!7315 = !DILocation(line: 2188, column: 6, scope: !7301)
!7316 = !DILocation(line: 2189, column: 3, scope: !7313)
!7317 = !DILocation(line: 2191, column: 2, scope: !7301)
!7318 = !DILocation(line: 2192, column: 1, scope: !7301)
!7319 = distinct !DISubprogram(name: "animchannels_clean_empty_exec", scope: !3, file: !3, line: 2081, type: !4371, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7320 = !DILocalVariable(name: "C", arg: 1, scope: !7319, file: !3, line: 2081, type: !4373)
!7321 = !DILocation(line: 2081, column: 52, scope: !7319)
!7322 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7319, file: !3, line: 2081, type: !4376)
!7323 = !DILocation(line: 2081, column: 67, scope: !7319)
!7324 = !DILocalVariable(name: "ac", scope: !7319, file: !3, line: 2083, type: !2628)
!7325 = !DILocation(line: 2083, column: 15, scope: !7319)
!7326 = !DILocalVariable(name: "anim_data", scope: !7319, file: !3, line: 2085, type: !559)
!7327 = !DILocation(line: 2085, column: 11, scope: !7319)
!7328 = !DILocalVariable(name: "ale", scope: !7319, file: !3, line: 2086, type: !2754)
!7329 = !DILocation(line: 2086, column: 17, scope: !7319)
!7330 = !DILocalVariable(name: "filter", scope: !7319, file: !3, line: 2087, type: !20)
!7331 = !DILocation(line: 2087, column: 6, scope: !7319)
!7332 = !DILocation(line: 2090, column: 32, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 2090, column: 6)
!7334 = !DILocation(line: 2090, column: 6, scope: !7333)
!7335 = !DILocation(line: 2090, column: 40, scope: !7333)
!7336 = !DILocation(line: 2090, column: 6, scope: !7319)
!7337 = !DILocation(line: 2091, column: 3, scope: !7333)
!7338 = !DILocation(line: 2094, column: 9, scope: !7319)
!7339 = !DILocation(line: 2095, column: 40, scope: !7319)
!7340 = !DILocation(line: 2095, column: 51, scope: !7319)
!7341 = !DILocation(line: 2095, column: 60, scope: !7319)
!7342 = !DILocation(line: 2095, column: 57, scope: !7319)
!7343 = !DILocation(line: 2095, column: 2, scope: !7319)
!7344 = !DILocation(line: 2097, column: 23, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 2097, column: 2)
!7346 = !DILocation(line: 2097, column: 13, scope: !7345)
!7347 = !DILocation(line: 2097, column: 11, scope: !7345)
!7348 = !DILocation(line: 2097, column: 7, scope: !7345)
!7349 = !DILocation(line: 2097, column: 30, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 2097, column: 2)
!7351 = !DILocation(line: 2097, column: 2, scope: !7345)
!7352 = !DILocalVariable(name: "id", scope: !7353, file: !3, line: 2098, type: !692)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 2097, column: 52)
!7354 = !DILocation(line: 2098, column: 7, scope: !7353)
!7355 = !DILocation(line: 2098, column: 12, scope: !7353)
!7356 = !DILocation(line: 2098, column: 17, scope: !7353)
!7357 = !DILocalVariable(name: "adt", scope: !7353, file: !3, line: 2099, type: !3481)
!7358 = !DILocation(line: 2099, column: 13, scope: !7353)
!7359 = !DILocation(line: 2099, column: 19, scope: !7353)
!7360 = !DILocation(line: 2099, column: 24, scope: !7353)
!7361 = !DILocalVariable(name: "action_empty", scope: !7353, file: !3, line: 2101, type: !1643)
!7362 = !DILocation(line: 2101, column: 8, scope: !7353)
!7363 = !DILocalVariable(name: "nla_empty", scope: !7353, file: !3, line: 2102, type: !1643)
!7364 = !DILocation(line: 2102, column: 8, scope: !7353)
!7365 = !DILocalVariable(name: "drivers_empty", scope: !7353, file: !3, line: 2103, type: !1643)
!7366 = !DILocation(line: 2103, column: 8, scope: !7353)
!7367 = !DILocation(line: 2112, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 2112, column: 7)
!7369 = !DILocation(line: 2112, column: 7, scope: !7353)
!7370 = !DILocation(line: 2113, column: 17, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 2112, column: 59)
!7372 = !DILocation(line: 2114, column: 3, scope: !7371)
!7373 = !DILocation(line: 2120, column: 7, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 2120, column: 7)
!7375 = !DILocation(line: 2120, column: 12, scope: !7374)
!7376 = !DILocation(line: 2120, column: 23, scope: !7374)
!7377 = !DILocation(line: 2120, column: 29, scope: !7374)
!7378 = !DILocation(line: 2120, column: 7, scope: !7353)
!7379 = !DILocation(line: 2121, column: 14, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 2120, column: 38)
!7381 = !DILocation(line: 2122, column: 3, scope: !7380)
!7382 = !DILocalVariable(name: "nlt", scope: !7383, file: !3, line: 2124, type: !661)
!7383 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 2123, column: 8)
!7384 = !DILocation(line: 2124, column: 14, scope: !7383)
!7385 = !DILocation(line: 2127, column: 15, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2127, column: 4)
!7387 = !DILocation(line: 2127, column: 20, scope: !7386)
!7388 = !DILocation(line: 2127, column: 31, scope: !7386)
!7389 = !DILocation(line: 2127, column: 13, scope: !7386)
!7390 = !DILocation(line: 2127, column: 9, scope: !7386)
!7391 = !DILocation(line: 2127, column: 38, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2127, column: 4)
!7393 = !DILocation(line: 2127, column: 4, scope: !7386)
!7394 = !DILocation(line: 2128, column: 9, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 2128, column: 9)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2127, column: 60)
!7397 = !DILocation(line: 2128, column: 14, scope: !7395)
!7398 = !DILocation(line: 2128, column: 21, scope: !7395)
!7399 = !DILocation(line: 2128, column: 9, scope: !7396)
!7400 = !DILocation(line: 2132, column: 16, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2128, column: 28)
!7402 = !DILocation(line: 2133, column: 6, scope: !7401)
!7403 = !DILocation(line: 2135, column: 14, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2135, column: 14)
!7405 = !DILocation(line: 2135, column: 19, scope: !7404)
!7406 = !DILocation(line: 2135, column: 26, scope: !7404)
!7407 = !DILocation(line: 2135, column: 32, scope: !7404)
!7408 = !DILocation(line: 2135, column: 14, scope: !7395)
!7409 = !DILocation(line: 2137, column: 16, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 2135, column: 41)
!7411 = !DILocation(line: 2138, column: 5, scope: !7410)
!7412 = !DILocation(line: 2139, column: 4, scope: !7396)
!7413 = !DILocation(line: 2127, column: 49, scope: !7392)
!7414 = !DILocation(line: 2127, column: 54, scope: !7392)
!7415 = !DILocation(line: 2127, column: 47, scope: !7392)
!7416 = !DILocation(line: 2127, column: 4, scope: !7392)
!7417 = distinct !{!7417, !7393, !7418}
!7418 = !DILocation(line: 2139, column: 4, scope: !7386)
!7419 = !DILocation(line: 2143, column: 20, scope: !7353)
!7420 = !DILocation(line: 2143, column: 25, scope: !7353)
!7421 = !DILocation(line: 2143, column: 33, scope: !7353)
!7422 = !DILocation(line: 2143, column: 39, scope: !7353)
!7423 = !DILocation(line: 2143, column: 19, scope: !7353)
!7424 = !DILocation(line: 2143, column: 17, scope: !7353)
!7425 = !DILocation(line: 2147, column: 7, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 2147, column: 7)
!7427 = !DILocation(line: 2147, column: 20, scope: !7426)
!7428 = !DILocation(line: 2147, column: 23, scope: !7426)
!7429 = !DILocation(line: 2147, column: 33, scope: !7426)
!7430 = !DILocation(line: 2147, column: 36, scope: !7426)
!7431 = !DILocation(line: 2147, column: 7, scope: !7353)
!7432 = !DILocation(line: 2148, column: 22, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 2147, column: 51)
!7434 = !DILocation(line: 2148, column: 4, scope: !7433)
!7435 = !DILocation(line: 2149, column: 3, scope: !7433)
!7436 = !DILocation(line: 2150, column: 2, scope: !7353)
!7437 = !DILocation(line: 2097, column: 41, scope: !7350)
!7438 = !DILocation(line: 2097, column: 46, scope: !7350)
!7439 = !DILocation(line: 2097, column: 39, scope: !7350)
!7440 = !DILocation(line: 2097, column: 2, scope: !7350)
!7441 = distinct !{!7441, !7351, !7442}
!7442 = !DILocation(line: 2150, column: 2, scope: !7345)
!7443 = !DILocation(line: 2153, column: 2, scope: !7319)
!7444 = !DILocation(line: 2156, column: 24, scope: !7319)
!7445 = !DILocation(line: 2156, column: 2, scope: !7319)
!7446 = !DILocation(line: 2158, column: 2, scope: !7319)
!7447 = !DILocation(line: 2159, column: 1, scope: !7319)
!7448 = distinct !DISubprogram(name: "animchannels_group_exec", scope: !3, file: !3, line: 1344, type: !4371, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7449 = !DILocalVariable(name: "C", arg: 1, scope: !7448, file: !3, line: 1344, type: !4373)
!7450 = !DILocation(line: 1344, column: 46, scope: !7448)
!7451 = !DILocalVariable(name: "op", arg: 2, scope: !7448, file: !3, line: 1344, type: !4376)
!7452 = !DILocation(line: 1344, column: 61, scope: !7448)
!7453 = !DILocalVariable(name: "ac", scope: !7448, file: !3, line: 1346, type: !2628)
!7454 = !DILocation(line: 1346, column: 15, scope: !7448)
!7455 = !DILocalVariable(name: "name", scope: !7448, file: !3, line: 1347, type: !569)
!7456 = !DILocation(line: 1347, column: 7, scope: !7448)
!7457 = !DILocation(line: 1350, column: 32, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1350, column: 6)
!7459 = !DILocation(line: 1350, column: 6, scope: !7458)
!7460 = !DILocation(line: 1350, column: 40, scope: !7458)
!7461 = !DILocation(line: 1350, column: 6, scope: !7448)
!7462 = !DILocation(line: 1351, column: 3, scope: !7458)
!7463 = !DILocation(line: 1354, column: 17, scope: !7448)
!7464 = !DILocation(line: 1354, column: 21, scope: !7448)
!7465 = !DILocation(line: 1354, column: 34, scope: !7448)
!7466 = !DILocation(line: 1354, column: 2, scope: !7448)
!7467 = !DILocation(line: 1357, column: 6, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1357, column: 6)
!7469 = !DILocation(line: 1357, column: 6, scope: !7448)
!7470 = !DILocalVariable(name: "anim_data", scope: !7471, file: !3, line: 1358, type: !559)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 1357, column: 15)
!7472 = !DILocation(line: 1358, column: 12, scope: !7471)
!7473 = !DILocalVariable(name: "ale", scope: !7471, file: !3, line: 1359, type: !2754)
!7474 = !DILocation(line: 1359, column: 18, scope: !7471)
!7475 = !DILocalVariable(name: "filter", scope: !7471, file: !3, line: 1360, type: !20)
!7476 = !DILocation(line: 1360, column: 7, scope: !7471)
!7477 = !DILocation(line: 1363, column: 10, scope: !7471)
!7478 = !DILocation(line: 1364, column: 41, scope: !7471)
!7479 = !DILocation(line: 1364, column: 52, scope: !7471)
!7480 = !DILocation(line: 1364, column: 61, scope: !7471)
!7481 = !DILocation(line: 1364, column: 58, scope: !7471)
!7482 = !DILocation(line: 1364, column: 3, scope: !7471)
!7483 = !DILocation(line: 1366, column: 24, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1366, column: 3)
!7485 = !DILocation(line: 1366, column: 14, scope: !7484)
!7486 = !DILocation(line: 1366, column: 12, scope: !7484)
!7487 = !DILocation(line: 1366, column: 8, scope: !7484)
!7488 = !DILocation(line: 1366, column: 31, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1366, column: 3)
!7490 = !DILocation(line: 1366, column: 3, scope: !7484)
!7491 = !DILocation(line: 1367, column: 37, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 1366, column: 53)
!7493 = !DILocation(line: 1367, column: 42, scope: !7492)
!7494 = !DILocation(line: 1367, column: 4, scope: !7492)
!7495 = !DILocation(line: 1368, column: 3, scope: !7492)
!7496 = !DILocation(line: 1366, column: 42, scope: !7489)
!7497 = !DILocation(line: 1366, column: 47, scope: !7489)
!7498 = !DILocation(line: 1366, column: 40, scope: !7489)
!7499 = !DILocation(line: 1366, column: 3, scope: !7489)
!7500 = distinct !{!7500, !7490, !7501}
!7501 = !DILocation(line: 1368, column: 3, scope: !7484)
!7502 = !DILocation(line: 1371, column: 3, scope: !7471)
!7503 = !DILocation(line: 1374, column: 25, scope: !7471)
!7504 = !DILocation(line: 1374, column: 3, scope: !7471)
!7505 = !DILocation(line: 1375, column: 2, scope: !7471)
!7506 = !DILocation(line: 1377, column: 2, scope: !7448)
!7507 = !DILocation(line: 1378, column: 1, scope: !7448)
!7508 = distinct !DISubprogram(name: "animchannels_grouping_poll", scope: !3, file: !3, line: 1256, type: !4408, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7509 = !DILocalVariable(name: "C", arg: 1, scope: !7508, file: !3, line: 1256, type: !4373)
!7510 = !DILocation(line: 1256, column: 49, scope: !7508)
!7511 = !DILocalVariable(name: "sa", scope: !7508, file: !3, line: 1258, type: !4413)
!7512 = !DILocation(line: 1258, column: 11, scope: !7508)
!7513 = !DILocation(line: 1258, column: 28, scope: !7508)
!7514 = !DILocation(line: 1258, column: 16, scope: !7508)
!7515 = !DILocalVariable(name: "sl", scope: !7508, file: !3, line: 1259, type: !2590)
!7516 = !DILocation(line: 1259, column: 13, scope: !7508)
!7517 = !DILocation(line: 1263, column: 6, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1263, column: 6)
!7519 = !DILocation(line: 1263, column: 6, scope: !7508)
!7520 = !DILocation(line: 1264, column: 3, scope: !7518)
!7521 = !DILocation(line: 1267, column: 25, scope: !7508)
!7522 = !DILocation(line: 1267, column: 7, scope: !7508)
!7523 = !DILocation(line: 1267, column: 5, scope: !7508)
!7524 = !DILocation(line: 1269, column: 10, scope: !7508)
!7525 = !DILocation(line: 1269, column: 14, scope: !7508)
!7526 = !DILocation(line: 1269, column: 2, scope: !7508)
!7527 = !DILocalVariable(name: "saction", scope: !7528, file: !3, line: 1273, type: !2568)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 1272, column: 3)
!7529 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1269, column: 25)
!7530 = !DILocation(line: 1273, column: 17, scope: !7528)
!7531 = !DILocation(line: 1273, column: 42, scope: !7528)
!7532 = !DILocation(line: 1273, column: 27, scope: !7528)
!7533 = !DILocation(line: 1276, column: 8, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 1276, column: 8)
!7535 = !DILocation(line: 1276, column: 65, scope: !7534)
!7536 = !DILocation(line: 1276, column: 8, scope: !7528)
!7537 = !DILocation(line: 1277, column: 5, scope: !7534)
!7538 = !DILocation(line: 1279, column: 4, scope: !7529)
!7539 = !DILocalVariable(name: "sipo", scope: !7540, file: !3, line: 1283, type: !2585)
!7540 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 1282, column: 3)
!7541 = !DILocation(line: 1283, column: 14, scope: !7540)
!7542 = !DILocation(line: 1283, column: 33, scope: !7540)
!7543 = !DILocation(line: 1283, column: 21, scope: !7540)
!7544 = !DILocation(line: 1286, column: 8, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 1286, column: 8)
!7546 = !DILocation(line: 1286, column: 14, scope: !7545)
!7547 = !DILocation(line: 1286, column: 19, scope: !7545)
!7548 = !DILocation(line: 1286, column: 8, scope: !7540)
!7549 = !DILocation(line: 1287, column: 5, scope: !7545)
!7550 = !DILocation(line: 1289, column: 4, scope: !7529)
!7551 = !DILocation(line: 1293, column: 4, scope: !7529)
!7552 = !DILocation(line: 1296, column: 2, scope: !7508)
!7553 = !DILocation(line: 1297, column: 1, scope: !7508)
!7554 = distinct !DISubprogram(name: "animchannels_group_channels", scope: !3, file: !3, line: 1301, type: !7555, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{null, !2627, !2754, !2509}
!7557 = !DILocalVariable(name: "ac", arg: 1, scope: !7554, file: !3, line: 1301, type: !2627)
!7558 = !DILocation(line: 1301, column: 55, scope: !7554)
!7559 = !DILocalVariable(name: "adt_ref", arg: 2, scope: !7554, file: !3, line: 1301, type: !2754)
!7560 = !DILocation(line: 1301, column: 74, scope: !7554)
!7561 = !DILocalVariable(name: "name", arg: 3, scope: !7554, file: !3, line: 1301, type: !2509)
!7562 = !DILocation(line: 1301, column: 94, scope: !7554)
!7563 = !DILocalVariable(name: "adt", scope: !7554, file: !3, line: 1303, type: !3481)
!7564 = !DILocation(line: 1303, column: 12, scope: !7554)
!7565 = !DILocation(line: 1303, column: 18, scope: !7554)
!7566 = !DILocation(line: 1303, column: 27, scope: !7554)
!7567 = !DILocalVariable(name: "act", scope: !7554, file: !3, line: 1304, type: !741)
!7568 = !DILocation(line: 1304, column: 11, scope: !7554)
!7569 = !DILocation(line: 1304, column: 17, scope: !7554)
!7570 = !DILocation(line: 1304, column: 22, scope: !7554)
!7571 = !DILocation(line: 1306, column: 6, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1306, column: 6)
!7573 = !DILocation(line: 1306, column: 6, scope: !7554)
!7574 = !DILocalVariable(name: "anim_data", scope: !7575, file: !3, line: 1307, type: !559)
!7575 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1306, column: 11)
!7576 = !DILocation(line: 1307, column: 12, scope: !7575)
!7577 = !DILocalVariable(name: "filter", scope: !7575, file: !3, line: 1308, type: !20)
!7578 = !DILocation(line: 1308, column: 7, scope: !7575)
!7579 = !DILocation(line: 1311, column: 10, scope: !7575)
!7580 = !DILocation(line: 1312, column: 24, scope: !7575)
!7581 = !DILocation(line: 1312, column: 40, scope: !7575)
!7582 = !DILocation(line: 1312, column: 48, scope: !7575)
!7583 = !DILocation(line: 1312, column: 3, scope: !7575)
!7584 = !DILocation(line: 1314, column: 17, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1314, column: 7)
!7586 = !DILocation(line: 1314, column: 7, scope: !7585)
!7587 = !DILocation(line: 1314, column: 7, scope: !7575)
!7588 = !DILocalVariable(name: "agrp", scope: !7589, file: !3, line: 1315, type: !551)
!7589 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1314, column: 24)
!7590 = !DILocation(line: 1315, column: 18, scope: !7589)
!7591 = !DILocalVariable(name: "ale", scope: !7589, file: !3, line: 1316, type: !2754)
!7592 = !DILocation(line: 1316, column: 19, scope: !7589)
!7593 = !DILocation(line: 1319, column: 33, scope: !7589)
!7594 = !DILocation(line: 1319, column: 38, scope: !7589)
!7595 = !DILocation(line: 1319, column: 11, scope: !7589)
!7596 = !DILocation(line: 1319, column: 9, scope: !7589)
!7597 = !DILocation(line: 1323, column: 25, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1323, column: 4)
!7599 = !DILocation(line: 1323, column: 15, scope: !7598)
!7600 = !DILocation(line: 1323, column: 13, scope: !7598)
!7601 = !DILocation(line: 1323, column: 9, scope: !7598)
!7602 = !DILocation(line: 1323, column: 32, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 1323, column: 4)
!7604 = !DILocation(line: 1323, column: 4, scope: !7598)
!7605 = !DILocalVariable(name: "fcu", scope: !7606, file: !3, line: 1324, type: !587)
!7606 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 1323, column: 54)
!7607 = !DILocation(line: 1324, column: 13, scope: !7606)
!7608 = !DILocation(line: 1324, column: 29, scope: !7606)
!7609 = !DILocation(line: 1324, column: 34, scope: !7606)
!7610 = !DILocation(line: 1324, column: 19, scope: !7606)
!7611 = !DILocalVariable(name: "grp", scope: !7606, file: !3, line: 1325, type: !551)
!7612 = !DILocation(line: 1325, column: 19, scope: !7606)
!7613 = !DILocation(line: 1325, column: 25, scope: !7606)
!7614 = !DILocation(line: 1325, column: 30, scope: !7606)
!7615 = !DILocation(line: 1328, column: 34, scope: !7606)
!7616 = !DILocation(line: 1328, column: 39, scope: !7606)
!7617 = !DILocation(line: 1328, column: 5, scope: !7606)
!7618 = !DILocation(line: 1330, column: 10, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 1330, column: 9)
!7620 = !DILocation(line: 1330, column: 9, scope: !7619)
!7621 = !DILocation(line: 1330, column: 15, scope: !7619)
!7622 = !DILocation(line: 1330, column: 41, scope: !7619)
!7623 = !DILocation(line: 1330, column: 46, scope: !7619)
!7624 = !DILocation(line: 1330, column: 18, scope: !7619)
!7625 = !DILocation(line: 1330, column: 9, scope: !7606)
!7626 = !DILocation(line: 1331, column: 21, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 1330, column: 57)
!7628 = !DILocation(line: 1331, column: 26, scope: !7627)
!7629 = !DILocation(line: 1331, column: 34, scope: !7627)
!7630 = !DILocation(line: 1331, column: 6, scope: !7627)
!7631 = !DILocation(line: 1332, column: 5, scope: !7627)
!7632 = !DILocation(line: 1335, column: 31, scope: !7606)
!7633 = !DILocation(line: 1335, column: 36, scope: !7606)
!7634 = !DILocation(line: 1335, column: 42, scope: !7606)
!7635 = !DILocation(line: 1335, column: 5, scope: !7606)
!7636 = !DILocation(line: 1336, column: 4, scope: !7606)
!7637 = !DILocation(line: 1323, column: 43, scope: !7603)
!7638 = !DILocation(line: 1323, column: 48, scope: !7603)
!7639 = !DILocation(line: 1323, column: 41, scope: !7603)
!7640 = !DILocation(line: 1323, column: 4, scope: !7603)
!7641 = distinct !{!7641, !7604, !7642}
!7642 = !DILocation(line: 1336, column: 4, scope: !7598)
!7643 = !DILocation(line: 1337, column: 3, scope: !7589)
!7644 = !DILocation(line: 1340, column: 3, scope: !7575)
!7645 = !DILocation(line: 1341, column: 2, scope: !7575)
!7646 = !DILocation(line: 1342, column: 1, scope: !7554)
!7647 = distinct !DISubprogram(name: "animchannels_ungroup_exec", scope: !3, file: !3, line: 1404, type: !4371, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2738)
!7648 = !DILocalVariable(name: "C", arg: 1, scope: !7647, file: !3, line: 1404, type: !4373)
!7649 = !DILocation(line: 1404, column: 48, scope: !7647)
!7650 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7647, file: !3, line: 1404, type: !4376)
!7651 = !DILocation(line: 1404, column: 63, scope: !7647)
!7652 = !DILocalVariable(name: "ac", scope: !7647, file: !3, line: 1406, type: !2628)
!7653 = !DILocation(line: 1406, column: 15, scope: !7647)
!7654 = !DILocalVariable(name: "anim_data", scope: !7647, file: !3, line: 1408, type: !559)
!7655 = !DILocation(line: 1408, column: 11, scope: !7647)
!7656 = !DILocalVariable(name: "ale", scope: !7647, file: !3, line: 1409, type: !2754)
!7657 = !DILocation(line: 1409, column: 17, scope: !7647)
!7658 = !DILocalVariable(name: "filter", scope: !7647, file: !3, line: 1410, type: !20)
!7659 = !DILocation(line: 1410, column: 6, scope: !7647)
!7660 = !DILocation(line: 1413, column: 32, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1413, column: 6)
!7662 = !DILocation(line: 1413, column: 6, scope: !7661)
!7663 = !DILocation(line: 1413, column: 40, scope: !7661)
!7664 = !DILocation(line: 1413, column: 6, scope: !7647)
!7665 = !DILocation(line: 1414, column: 3, scope: !7661)
!7666 = !DILocation(line: 1417, column: 9, scope: !7647)
!7667 = !DILocation(line: 1418, column: 40, scope: !7647)
!7668 = !DILocation(line: 1418, column: 51, scope: !7647)
!7669 = !DILocation(line: 1418, column: 60, scope: !7647)
!7670 = !DILocation(line: 1418, column: 57, scope: !7647)
!7671 = !DILocation(line: 1418, column: 2, scope: !7647)
!7672 = !DILocation(line: 1420, column: 23, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1420, column: 2)
!7674 = !DILocation(line: 1420, column: 13, scope: !7673)
!7675 = !DILocation(line: 1420, column: 11, scope: !7673)
!7676 = !DILocation(line: 1420, column: 7, scope: !7673)
!7677 = !DILocation(line: 1420, column: 30, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 1420, column: 2)
!7679 = !DILocation(line: 1420, column: 2, scope: !7673)
!7680 = !DILocation(line: 1422, column: 7, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 1422, column: 7)
!7682 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 1420, column: 52)
!7683 = !DILocation(line: 1422, column: 12, scope: !7681)
!7684 = !DILocation(line: 1422, column: 16, scope: !7681)
!7685 = !DILocation(line: 1422, column: 19, scope: !7681)
!7686 = !DILocation(line: 1422, column: 24, scope: !7681)
!7687 = !DILocation(line: 1422, column: 29, scope: !7681)
!7688 = !DILocation(line: 1422, column: 7, scope: !7682)
!7689 = !DILocalVariable(name: "fcu", scope: !7690, file: !3, line: 1423, type: !587)
!7690 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1422, column: 37)
!7691 = !DILocation(line: 1423, column: 13, scope: !7690)
!7692 = !DILocation(line: 1423, column: 29, scope: !7690)
!7693 = !DILocation(line: 1423, column: 34, scope: !7690)
!7694 = !DILocation(line: 1423, column: 19, scope: !7690)
!7695 = !DILocalVariable(name: "act", scope: !7690, file: !3, line: 1424, type: !741)
!7696 = !DILocation(line: 1424, column: 13, scope: !7690)
!7697 = !DILocation(line: 1424, column: 19, scope: !7690)
!7698 = !DILocation(line: 1424, column: 24, scope: !7690)
!7699 = !DILocation(line: 1424, column: 29, scope: !7690)
!7700 = !DILocation(line: 1427, column: 8, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 1427, column: 8)
!7702 = !DILocation(line: 1427, column: 13, scope: !7701)
!7703 = !DILocation(line: 1427, column: 8, scope: !7690)
!7704 = !DILocalVariable(name: "agrp", scope: !7705, file: !3, line: 1428, type: !551)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 1427, column: 18)
!7706 = !DILocation(line: 1428, column: 19, scope: !7705)
!7707 = !DILocation(line: 1428, column: 26, scope: !7705)
!7708 = !DILocation(line: 1428, column: 31, scope: !7705)
!7709 = !DILocation(line: 1431, column: 34, scope: !7705)
!7710 = !DILocation(line: 1431, column: 39, scope: !7705)
!7711 = !DILocation(line: 1431, column: 5, scope: !7705)
!7712 = !DILocation(line: 1432, column: 18, scope: !7705)
!7713 = !DILocation(line: 1432, column: 23, scope: !7705)
!7714 = !DILocation(line: 1432, column: 31, scope: !7705)
!7715 = !DILocation(line: 1432, column: 5, scope: !7705)
!7716 = !DILocation(line: 1435, column: 32, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1435, column: 9)
!7718 = !DILocation(line: 1435, column: 38, scope: !7717)
!7719 = !DILocation(line: 1435, column: 9, scope: !7717)
!7720 = !DILocation(line: 1435, column: 9, scope: !7705)
!7721 = !DILocation(line: 1436, column: 21, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1435, column: 49)
!7723 = !DILocation(line: 1436, column: 26, scope: !7722)
!7724 = !DILocation(line: 1436, column: 34, scope: !7722)
!7725 = !DILocation(line: 1436, column: 6, scope: !7722)
!7726 = !DILocation(line: 1437, column: 5, scope: !7722)
!7727 = !DILocation(line: 1438, column: 4, scope: !7705)
!7728 = !DILocation(line: 1439, column: 3, scope: !7690)
!7729 = !DILocation(line: 1440, column: 2, scope: !7682)
!7730 = !DILocation(line: 1420, column: 41, scope: !7678)
!7731 = !DILocation(line: 1420, column: 46, scope: !7678)
!7732 = !DILocation(line: 1420, column: 39, scope: !7678)
!7733 = !DILocation(line: 1420, column: 2, scope: !7678)
!7734 = distinct !{!7734, !7679, !7735}
!7735 = !DILocation(line: 1440, column: 2, scope: !7673)
!7736 = !DILocation(line: 1443, column: 2, scope: !7647)
!7737 = !DILocation(line: 1446, column: 24, scope: !7647)
!7738 = !DILocation(line: 1446, column: 2, scope: !7647)
!7739 = !DILocation(line: 1448, column: 2, scope: !7647)
!7740 = !DILocation(line: 1449, column: 1, scope: !7647)
